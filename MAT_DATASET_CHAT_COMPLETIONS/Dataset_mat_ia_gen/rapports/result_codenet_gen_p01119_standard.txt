================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def measurable(weights):
    possible = {0}
    for w in weights:
        next_possible = set()
        for x in possible:
            next_possible.add(x+w)
            next_possible.add(abs(x-w))
            next_possible.add(x)
        possible = next_possible
    return possible

def can_measure_all(amounts, weights):
    possible = measurable(weights)
    return all(a in possible for a in amounts)

def solution():
    input = sys.stdin.readline
    while True:
        n,m = map(int,input().split())
        if n == 0 and m == 0:
            break
        amounts = list(map(int,input().split()))
        weights = list(map(int,input().split()))
        possible = measurable(weights)
        if all(a in possible for a in amounts):
            print(0)
            continue
        max_a = max(amounts)
        # attempt to find smallest w_new to add
        # since w_j ≤ 10^8 but new weight can be larger, we search upwards
        # upper bound on search: max among amounts * 2 (heuristic)
        # To speed up we can try only amounts that fail
        fail_amounts = [a for a in amounts if a not in possible]
        # To find minimal new weight:
        # We test candidate weights starting from 1 upwards
        # Testing bigger weights won't help if no solution by max_a*2
        # But as constraints are big, limit search to 2*max_a or until found
        # Also, as the sum of weights possible is large, a better approach:
        # Use BFS or dynamic programming:
        # But since weights ≤ 10 and m ≤10, size of possible set can be big.
        # So we do an efficient search using set
        # Max weight to test can be up to 2*max_a
        max_search = 2 * max_a
        # First precompute possible sums without new weight
        base_possible = measurable(weights)
        # To speed up, precompute possible sums with new weight w:
        # possible_with_w = measurable(weights+[w]) but computing from scratch is O(3^m) per w
        # Instead, use "merging" with new weight:
        # For each sum s in base_possible, possible sums with w are s, s+w, |s-w|
        # So possible_with_w = union of s, s+w, |s-w| for s in base_possible
        # Then check if all amounts in amounts are in possible_with_w
        # So we implement a fast check per candidate w
        def can_all_with_new_w(w):
            new_possible = set()
            for s in base_possible:
                new_possible.add(s)
                new_possible.add(s + w)
                new_possible.add(abs(s - w))
            return all(a in new_possible for a in amounts)
        ans = -1
        # If some amount < max in weights, we try from 1 to max_search to find minimal
        # But max_search can be large => optimize by testing only necessary w's
        # Alternative: since weights up to 10^8 and amounts up to 10^9,
        # But limit is 100 data sets, ok to do linear test up to max_search
        for w in range(1, max_search+1):
            if can_all_with_new_w(w):
                ans = w
                break
        print(ans)

if __name__ == "__main__":
    solution()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10131704062223434
    2. '\' → logprob: -3.6013169288635254
    3. '\n' → logprob: -3.9763169288635254
    4. 'import' → logprob: -4.351316928863525
    5. '<|end|>' → logprob: -4.601316928863525
    6. '```' → logprob: -4.726316928863525
    7. '
' → logprob: -4.976316928863525
    8. '

' → logprob: -5.476316928863525
    9. '<|end|>' → logprob: -6.601316928863525
    10. '' → logprob: -6.601316928863525

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.054233431816101
    2. '\' → logprob: -1.429233431816101
    3. 'import' → logprob: -2.1792335510253906
    4. '\n' → logprob: -2.1792335510253906
    5. '```' → logprob: -2.4292335510253906
    6. 'def' → logprob: -3.4292335510253906
    7. '
' → logprob: -4.179233551025391
    8. ',' → logprob: -4.679233551025391
    9. '`' → logprob: -4.929233551025391
    10. '*' → logprob: -4.929233551025391

Token 7: ' measurable' (ID: 120968)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022814787924289703
    2. ' calculate' → logprob: -4.272814750671387
    3. ' factorial' → logprob: -5.897814750671387
    4. ' space' → logprob: -6.147814750671387
    5. '_' → logprob: -7.022814750671387
    6. ' math' → logprob: -7.647814750671387
    7. ' e' → logprob: -7.897814750671387
    8. ' compute' → logprob: -7.897814750671387
    9. ' my' → logprob: -8.897814750671387
    10. ' calc' → logprob: -9.022814750671387

Token 8: '(weights' (ID: 154124)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4193416237831116
    2. '_space' → logprob: -2.169341564178467
    3. '():' → logprob: -2.669341564178467
    4. '(' → logprob: -2.669341564178467
    5. ' :' → logprob: -3.794341564178467
    6. ' (' → logprob: -4.044341564178467
    7. ':' → logprob: -4.169341564178467
    8. '_:' → logprob: -4.794341564178467
    9. ' ():' → logprob: -5.044341564178467
    10. ' ' → logprob: -5.294341564178467

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3173588812351227
    2. ',' → logprob: -1.3173588514328003
    3. ')' → logprob: -5.56735897064209
    4. ':' → logprob: -8.94235897064209
    5. ' ):' → logprob: -10.06735897064209
    6. '[' → logprob: -10.19235897064209
    7. ' ,' → logprob: -11.19235897064209
    8. '=' → logprob: -11.69235897064209
    9. '):
' → logprob: -11.81735897064209
    10. '[]):' → logprob: -11.81735897064209

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14814493060112
    2. '   ' → logprob: -2.5231449604034424
    3. '(' → logprob: -3.8981449604034424
    4. '():' → logprob: -4.273144721984863
    5. '):' → logprob: -5.023144721984863
    6. ' ' → logprob: -5.398144721984863
    7. ' :' → logprob: -5.898144721984863
    8. ':
' → logprob: -6.023144721984863
    9. '    ' → logprob: -6.648144721984863
    10. ' (' → logprob: -7.148144721984863

Token 11: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12675809860229492
    2. ' ' → logprob: -2.876758098602295
    3. ' 
' → logprob: -3.751758098602295
    4. '    
' → logprob: -4.876758098602295
    5. ' return' → logprob: -5.126758098602295
    6. '    ' → logprob: -5.376758098602295
    7. '"' → logprob: -5.876758098602295
    8. ''' → logprob: -6.126758098602295
    9. ' for' → logprob: -6.251758098602295
    10. ' if' → logprob: -6.501758098602295

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08014720678329468
    2. '_' → logprob: -3.2051472663879395
    3. ' ' → logprob: -3.7051472663879395
    4. '=' → logprob: -5.2051472663879395
    5. '[' → logprob: -6.3301472663879395
    6. 's' → logprob: -6.8301472663879395
    7. '_weights' → logprob: -7.3301472663879395
    8. '  ' → logprob: -7.4551472663879395
    9. '   ' → logprob: -8.205146789550781
    10. '[]' → logprob: -8.330146789550781

Token 13: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.03864792734384537
    2. ' set' → logprob: -3.6636478900909424
    3. '{' → logprob: -4.5386481285095215
    4. 'set' → logprob: -6.5386481285095215
    5. ' ' → logprob: -9.038647651672363
    6. ' [' → logprob: -11.788647651672363
    7. '   ' → logprob: -12.288647651672363
    8. ' {}' → logprob: -13.413647651672363
    9. '[' → logprob: -13.788647651672363
    10. ' {(' → logprob: -13.913647651672363

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009145628428086638
    2. ' ' → logprob: -7.000914573669434
    3. '}' → logprob: -13.500914573669434
    4. '   ' → logprob: -13.500914573669434
    5. '  ' → logprob: -15.750914573669434
    6. '    ' → logprob: -16.250913619995117
    7. '{' → logprob: -17.000913619995117
    8. ' ' → logprob: -17.375913619995117
    9. '

' → logprob: -18.250913619995117
    10. '     ' → logprob: -18.313413619995117

Token 15: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.028495952486991882
    2. ' }' → logprob: -4.153495788574219
    3. ',' → logprob: -4.403495788574219
    4. '}
' → logprob: -9.028495788574219
    5. ' ,' → logprob: -11.278495788574219
    6. ' }
' → logprob: -12.028495788574219
    7. '   ' → logprob: -13.028495788574219
    8. '}

' → logprob: -13.403495788574219
    9. '}
' → logprob: -13.403495788574219
    10. '`}' → logprob: -14.153495788574219

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2852565050125122
    2. '    
' → logprob: -2.6602563858032227
    3. '
' → logprob: -2.7852563858032227
    4. ',' → logprob: -3.6602563858032227
    5. ' for' → logprob: -3.9102563858032227
    6. ' 
' → logprob: -4.035256385803223
    7. '<|end|>' → logprob: -4.285256385803223
    8. ' ' → logprob: -4.535256385803223
    9. '  
' → logprob: -5.160256385803223
    10. '```' → logprob: -6.035256385803223

Token 17: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7569083571434021
    2. ' ' → logprob: -1.1319084167480469
    3. ' 
' → logprob: -2.256908416748047
    4. '
' → logprob: -3.006908416748047
    5. 'for' (adapté à ' for') → logprob: -4.006908416748047
    6. '   ' → logprob: -4.006908416748047
    7. '    
' → logprob: -5.256908416748047
    8. '	for' → logprob: -6.506908416748047
    9. '  
' → logprob: -6.506908416748047
    10. '   
' → logprob: -6.631908416748047

Token 18: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.10414116084575653
    2. ' weight' → logprob: -2.3541412353515625
    3. ' ' → logprob: -6.2291412353515625
    4. 'w' → logprob: -6.7291412353515625
    5. 'weight' → logprob: -7.3541412353515625
    6. ' wt' → logprob: -9.979141235351562
    7. ' ' → logprob: -11.354141235351562
    8. '   ' → logprob: -11.479141235351562
    9. '```' → logprob: -11.604141235351562
    10. '  ' → logprob: -12.041641235351562

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000526938121765852
    2. 'in' → logprob: -8.125527381896973
    3. ' ' → logprob: -8.500527381896973
    4. '	in' → logprob: -11.875527381896973
    5. '  ' → logprob: -12.000527381896973
    6. ' i' → logprob: -12.500527381896973
    7. 'i' → logprob: -12.625527381896973
    8. '   ' → logprob: -13.000527381896973
    9. 's' → logprob: -13.500527381896973
    10. 'e' → logprob: -14.125527381896973

Token 20: ' weights' (ID: 28460)
  Prédit: ' weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -0.16032618284225464
    2. 'weights' → logprob: -1.9103262424468994
    3. '(weights' → logprob: -10.03532600402832
    4. ' ' → logprob: -10.78532600402832
    5. '   ' → logprob: -11.16032600402832
    6. '_weights' → logprob: -12.28532600402832
    7. '.weights' → logprob: -12.53532600402832
    8. 'w' → logprob: -12.78532600402832
    9. ' w' → logprob: -13.16032600402832
    10. ' weight' → logprob: -13.41032600402832

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0063616083934903145
    2. ':
' → logprob: -5.381361484527588
    3. '   ' → logprob: -7.256361484527588
    4. '       ' → logprob: -7.381361484527588
    5. ',' → logprob: -8.256361961364746
    6. ' :' → logprob: -9.256361961364746
    7. '):' → logprob: -10.631361961364746
    8. '):
' → logprob: -11.756361961364746
    9. '    ' → logprob: -12.506361961364746
    10. ' :
' → logprob: -12.631361961364746

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004279261454939842
    2. '    ' → logprob: -5.879279136657715
    3. ' ' → logprob: -7.254279136657715
    4. '        
' → logprob: -8.254279136657715
    5. '   ' → logprob: -9.129279136657715
    6. ' possible' → logprob: -9.379279136657715
    7. '        ' → logprob: -9.629279136657715
    8. 'possible' → logprob: -9.629279136657715
    9. ',' → logprob: -10.504279136657715
    10. '     ' → logprob: -10.879279136657715

Token 23: ' next' (ID: 2613)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.07304529845714569
    2. ' possible' → logprob: -3.323045253753662
    3. 'new' → logprob: -4.198045253753662
    4. 'possible' → logprob: -4.823045253753662
    5. ' next' → logprob: -5.198045253753662
    6. '   ' → logprob: -5.448045253753662
    7. ' temp' → logprob: -7.698045253753662
    8. ' updated' → logprob: -7.948045253753662
    9. 'temp' → logprob: -8.94804573059082
    10. 'next' (adapté à ' next') → logprob: -8.94804573059082

Token 24: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.05365626886487007
    2. '_pos' → logprob: -3.0536563396453857
    3. 'possible' → logprob: -6.303656101226807
    4. '   ' → logprob: -6.803656101226807
    5. '_' → logprob: -7.053656101226807
    6. 'pos' → logprob: -7.678656101226807
    7. 'poss' → logprob: -8.053656578063965
    8. '_set' → logprob: -9.303656578063965
    9. '_weights' → logprob: -9.303656578063965
    10. ' =' → logprob: -9.803656578063965

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270264834165573
    2. '=' → logprob: -2.1270265579223633
    3. 's' → logprob: -9.752026557922363
    4. '   ' → logprob: -10.877026557922363
    5. ' |=' → logprob: -11.877026557922363
    6. ' ' → logprob: -12.252026557922363
    7. '.update' → logprob: -13.377026557922363
    8. '    ' → logprob: -13.377026557922363
    9. '=set' → logprob: -13.502026557922363
    10. '  ' → logprob: -13.627026557922363

Token 26: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.8097564578056335
    2. 'possible' → logprob: -1.3097565174102783
    3. ' possible' → logprob: -1.8097565174102783
    4. 'set' → logprob: -2.1847565174102783
    5. '{' → logprob: -5.059756278991699
    6. ' {' → logprob: -6.434756278991699
    7. '   ' → logprob: -7.184756278991699
    8. ' ' → logprob: -9.3097562789917
    9. 'poss' → logprob: -10.4347562789917
    10. '{}' → logprob: -10.6847562789917

Token 27: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004039218183606863
    2. '()
' → logprob: -6.004039287567139
    3. '(pos' → logprob: -6.504039287567139
    4. '()

' → logprob: -9.87903881072998
    5. '()`' → logprob: -12.25403881072998
    6. '(' → logprob: -13.12903881072998
    7. 'possible' → logprob: -13.37903881072998
    8. '()
' → logprob: -13.87903881072998
    9. ' ()' → logprob: -14.00403881072998
    10. '()</' → logprob: -14.12903881072998

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005792465526610613
    2. '<|end|>' → logprob: -8.375578880310059
    3. ' for' → logprob: -8.625578880310059
    4. '   ' → logprob: -9.625578880310059
    5. '        
' → logprob: -10.000578880310059
    6. ',' → logprob: -11.625578880310059
    7. '<|end|>' → logprob: -11.625578880310059
    8. '           ' → logprob: -11.750578880310059
    9. '{' → logprob: -12.250578880310059
    10. ' possible' → logprob: -12.875578880310059

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5681217908859253
    2. '       ' → logprob: -0.9431217908859253
    3. 'for' (adapté à ' for') → logprob: -3.443121910095215
    4. '   ' → logprob: -4.443121910095215
    5. ' ' → logprob: -9.068121910095215
    6. ' possible' → logprob: -9.693121910095215
    7. '           ' → logprob: -10.943121910095215
    8. '  ' → logprob: -11.068121910095215
    9. ' ' → logprob: -11.068121910095215
    10. 'possible' → logprob: -11.318121910095215

Token 30: ' x' (ID: 1215)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7198386788368225
    2. 'p' → logprob: -0.9698386788368225
    3. ' val' → logprob: -3.5948386192321777
    4. ' s' → logprob: -3.8448386192321777
    5. ' x' → logprob: -4.094838619232178
    6. 'x' → logprob: -4.344838619232178
    7. 's' → logprob: -4.719838619232178
    8. ' m' → logprob: -4.969838619232178
    9. 'val' → logprob: -5.219838619232178
    10. ' weight' → logprob: -5.469838619232178

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005248225759714842
    2. 'in' → logprob: -5.255248069763184
    3. ' ' → logprob: -11.755248069763184
    4. '<|end|>' → logprob: -12.005248069763184
    5. '<|end|>' → logprob: -15.630248069763184
    6. '  ' → logprob: -15.880248069763184
    7. '_in' → logprob: -16.1302490234375
    8. '	in' → logprob: -17.0052490234375
    9. 'In' → logprob: -17.7552490234375
    10. 'possible' → logprob: -18.0677490234375

Token 32: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.25193631649017334
    2. ' possible' → logprob: -1.5019363164901733
    3. ' ' → logprob: -12.876935958862305
    4. '   ' → logprob: -13.001935958862305
    5. ' posible' → logprob: -13.876935958862305
    6. 'poss' → logprob: -14.126935958862305
    7. '_possible' → logprob: -15.376935958862305
    8. '  ' → logprob: -15.751935958862305
    9. ' possibles' → logprob: -16.626935958862305
    10. 'Possible' → logprob: -16.876935958862305

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.53585284948349
    2. '           ' → logprob: -1.1608529090881348
    3. ':
' → logprob: -2.5358529090881348
    4. '       ' → logprob: -4.785852909088135
    5. '{' → logprob: -5.410852909088135
    6. ',' → logprob: -5.910852909088135
    7. '   ' → logprob: -6.535852909088135
    8. '+' → logprob: -6.785852909088135
    9. '<|end|>' → logprob: -6.785852909088135
    10. '               ' → logprob: -7.660852909088135

Token 34: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012310652527958155
    2. '<|end|>' → logprob: -7.1262311935424805
    3. '            
' → logprob: -9.25123119354248
    4. ',' → logprob: -9.50123119354248
    5. '<|end|>' → logprob: -9.50123119354248
    6. ' possible' → logprob: -10.50123119354248
    7. ' next' → logprob: -10.62623119354248
    8. '       ' → logprob: -11.00123119354248
    9. '            ' → logprob: -11.25123119354248
    10. '```' → logprob: -11.75123119354248

Token 35: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.01700042001903057
    2. ' possible' → logprob: -4.642000198364258
    3. 'next' (adapté à ' next') → logprob: -5.517000198364258
    4. '           ' → logprob: -5.892000198364258
    5. 'possible' → logprob: -8.892000198364258
    6. '               ' → logprob: -9.142000198364258
    7. '   ' → logprob: -9.517000198364258
    8. '[next' → logprob: -10.767000198364258
    9. '	next' → logprob: -11.142000198364258
    10. '       ' → logprob: -11.267000198364258

Token 36: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -7.040457421680912e-05
    2. 'possible' → logprob: -9.750070571899414
    3. '_' → logprob: -12.125070571899414
    4. ' possible' → logprob: -12.250070571899414
    5. '   ' → logprob: -14.375070571899414
    6. ' ' → logprob: -15.000070571899414
    7. 'Possible' → logprob: -15.125070571899414
    8. '_pos' → logprob: -16.250070571899414
    9. '  ' → logprob: -16.500070571899414
    10. '{' → logprob: -16.500070571899414

Token 37: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.005593018140643835
    2. '.' → logprob: -5.2555928230285645
    3. '.update' → logprob: -8.005593299865723
    4. ' .' → logprob: -10.630593299865723
    5. ' ' → logprob: -14.505593299865723
    6. 'add' → logprob: -14.755593299865723
    7. ' |=' → logprob: -15.630593299865723
    8. '.Add' → logprob: -16.630592346191406
    9. '.union' → logprob: -17.130592346191406
    10. '.=' → logprob: -17.130592346191406

Token 38: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0010393599513918161
    2. '(' → logprob: -6.876039505004883
    3. ' (' → logprob: -12.501039505004883
    4. ' x' → logprob: -13.501039505004883
    5. '<|end|>' → logprob: -14.251039505004883
    6. 'x' → logprob: -15.001039505004883
    7. '(s' → logprob: -15.751039505004883
    8. '(
' → logprob: -16.126039505004883
    9. '{x' → logprob: -16.251039505004883
    10. '(w' → logprob: -16.501039505004883

Token 39: '+w' (ID: 155687)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4348001182079315
    2. '+' → logprob: -1.059800148010254
    3. '+w' → logprob: -5.684800148010254
    4. ')' → logprob: -6.184800148010254
    5. ' )' → logprob: -7.559800148010254
    6. '+)' → logprob: -10.059800148010254
    7. '<|end|>' → logprob: -10.684800148010254
    8. ' plus' → logprob: -11.934800148010254
    9. ' -' → logprob: -12.309800148010254
    10. ')+' → logprob: -12.309800148010254

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20173431932926178
    2. ')
' → logprob: -1.7017343044281006
    3. ' )' → logprob: -9.07673454284668
    4. ' )
' → logprob: -9.07673454284668
    5. ')
' → logprob: -9.45173454284668
    6. '           ' → logprob: -11.70173454284668
    7. ')

' → logprob: -13.20173454284668
    8. '       ' → logprob: -13.70173454284668
    9. '               ' → logprob: -14.32673454284668
    10. ')`
' → logprob: -14.70173454284668

Token 41: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004499431233853102
    2. ' next' → logprob: -6.254499435424805
    3. '       ' → logprob: -6.379499435424805
    4. 'next' → logprob: -8.379499435424805
    5. '(next' → logprob: -9.004499435424805
    6. '[next' → logprob: -9.004499435424805
    7. ',next' → logprob: -9.129499435424805
    8. '```' → logprob: -9.754499435424805
    9. ',' → logprob: -10.129499435424805
    10. '
' → logprob: -10.254499435424805

Token 42: ' next' (ID: 2613)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38791218400001526
    2. 'next' (adapté à ' next') → logprob: -1.8879121541976929
    3. 'x' → logprob: -2.3879122734069824
    4. ' next' → logprob: -2.7629122734069824
    5. ' x' → logprob: -4.387912273406982
    6. '       ' → logprob: -6.137912273406982
    7. '   ' → logprob: -8.137911796569824
    8. ' ' → logprob: -9.637911796569824
    9. '(next' → logprob: -10.512911796569824
    10. '               ' → logprob: -10.512911796569824

Token 43: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -9.372294698550832e-06
    2. 'possible' → logprob: -11.750009536743164
    3. 'Possible' → logprob: -13.625009536743164
    4. '_' → logprob: -16.250009536743164
    5. '._' → logprob: -17.250009536743164
    6. ' possible' → logprob: -17.625009536743164
    7. '```' → logprob: -18.375009536743164
    8. '_available' → logprob: -18.625009536743164
    9. ' Possible' → logprob: -19.000009536743164
    10. '_per' → logprob: -19.125009536743164

Token 44: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0008170120418071747
    2. '.' → logprob: -7.125816822052002
    3. ' .' → logprob: -11.37581729888916
    4. '.update' → logprob: -14.25081729888916
    5. 'add' → logprob: -15.37581729888916
    6. '.union' → logprob: -16.500816345214844
    7. ').' → logprob: -17.125816345214844
    8. '.setdefault' → logprob: -17.375816345214844
    9. '           ' → logprob: -17.500816345214844
    10. '   ' → logprob: -17.625816345214844

Token 45: '(abs' (ID: 71957)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.02109554223716259
    2. '(' → logprob: -3.8960955142974854
    3. '(abs' → logprob: -7.7710957527160645
    4. 'x' → logprob: -9.521095275878906
    5. ' (' → logprob: -10.396095275878906
    6. ' x' → logprob: -10.646095275878906
    7. 'abs' → logprob: -13.396095275878906
    8. '()' → logprob: -14.396095275878906
    9. '(
' → logprob: -14.521095275878906
    10. ' abs' → logprob: -15.146095275878906

Token 46: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0002084277366520837
    2. '(' → logprob: -8.500208854675293
    3. 'x' → logprob: -12.500208854675293
    4. ' (' → logprob: -14.500208854675293
    5. '<|end|>' → logprob: -15.375208854675293
    6. '(w' → logprob: -15.875208854675293
    7. ')' → logprob: -16.500207901000977
    8. '(s' → logprob: -16.500207901000977
    9. '{x' → logprob: -16.625207901000977
    10. ')(' → logprob: -17.375207901000977

Token 47: '-w' (ID: 4450)
  Prédit: '-w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-w' → logprob: -0.1967608481645584
    2. '-' → logprob: -2.196760892868042
    3. ' -' → logprob: -2.696760892868042
    4. '-
' → logprob: -11.696761131286621
    5. 'w' → logprob: -12.071761131286621
    6. ' ' → logprob: -12.446761131286621
    7. '-W' → logprob: -12.946761131286621
    8. ' w' → logprob: -13.446761131286621
    9. '−' → logprob: -14.321761131286621
    10. '

' → logprob: -14.821761131286621

Token 48: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0037288223393261433
    2. '))
' → logprob: -5.878728866577148
    3. ')' → logprob: -7.003728866577148
    4. ')))' → logprob: -12.628728866577148
    5. ' ))' → logprob: -12.753728866577148
    6. '))

' → logprob: -12.753728866577148
    7. ')
' → logprob: -13.378728866577148
    8. '))
' → logprob: -13.503728866577148
    9. '       ' → logprob: -14.378728866577148
    10. ''))' → logprob: -14.503728866577148

Token 49: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004571461584419012
    2. ' possible' → logprob: -6.254571437835693
    3. '
' → logprob: -6.629571437835693
    4. '   ' → logprob: -7.254571437835693
    5. 'possible' → logprob: -8.879571914672852
    6. ' next' → logprob: -9.129571914672852
    7. ')' → logprob: -9.129571914672852
    8. '```' → logprob: -9.379571914672852
    9. '        
' → logprob: -9.504571914672852
    10. '    
' → logprob: -10.254571914672852

Token 50: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.4464641213417053
    2. 'next' (adapté à ' next') → logprob: -1.6964640617370605
    3. '       ' → logprob: -1.8214640617370605
    4. '
' → logprob: -5.6964640617370605
    5. '   ' → logprob: -5.6964640617370605
    6. 'possible' → logprob: -5.6964640617370605
    7. ' possible' → logprob: -6.0714640617370605
    8. '        
' → logprob: -7.5714640617370605
    9. '           ' → logprob: -7.8214640617370605
    10. ')' → logprob: -8.071464538574219

Token 51: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -6.511406809295295e-06
    2. 'possible' → logprob: -12.000006675720215
    3. 'Possible' → logprob: -15.375006675720215
    4. '_' → logprob: -17.2500057220459
    5. ' possible' → logprob: -18.0000057220459
    6. '._' → logprob: -19.7500057220459
    7. '_available' → logprob: -20.0000057220459
    8. '```' → logprob: -20.1250057220459
    9. '_previous' → logprob: -20.3750057220459
    10. '_probability' → logprob: -20.6250057220459

Token 52: '.add' (ID: 1950)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.24215233325958252
    2. '.add' → logprob: -1.6171523332595825
    3. '.' → logprob: -4.367152214050293
    4. '=' → logprob: -5.742152214050293
    5. 'update' → logprob: -7.492152214050293
    6. 'add' → logprob: -10.117152214050293
    7. '.union' → logprob: -10.242152214050293
    8. '.extend' → logprob: -11.242152214050293
    9. '<|end|>' → logprob: -11.492152214050293
    10. ' .' → logprob: -11.867152214050293

Token 53: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005884114652872086
    2. 'x' → logprob: -5.255884170532227
    3. '(' → logprob: -7.505884170532227
    4. ' x' → logprob: -9.255884170532227
    5. ' (' → logprob: -12.505884170532227
    6. '(abs' → logprob: -15.880884170532227
    7. '(s' → logprob: -15.880884170532227
    8. 's' → logprob: -16.130884170532227
    9. '(
' → logprob: -16.130884170532227
    10. '()' → logprob: -16.380884170532227

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001549089647596702
    2. '<|end|>' → logprob: -9.125154495239258
    3. ' )' → logprob: -10.750154495239258
    4. ')
' → logprob: -12.125154495239258
    5. ')return' → logprob: -12.625154495239258
    6. ')#' → logprob: -12.875154495239258
    7. ')add' → logprob: -13.125154495239258
    8. '<|end|>' → logprob: -13.125154495239258
    9. '       ' → logprob: -13.750154495239258
    10. ')set' → logprob: -13.750154495239258

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015951668843626976
    2. '   ' → logprob: -4.515951633453369
    3. ' possible' → logprob: -5.515951633453369
    4. 'possible' → logprob: -7.265951633453369
    5. '
' → logprob: -8.765952110290527
    6. '        
' → logprob: -12.140952110290527
    7. '           ' → logprob: -13.390952110290527
    8. '```' → logprob: -13.640952110290527
    9. '     ' → logprob: -14.015952110290527
    10. '    
' → logprob: -14.015952110290527

Token 56: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35331645607948303
    2. 'possible' (adapté à ' possible') → logprob: -1.9783164262771606
    3. '       ' → logprob: -2.22831654548645
    4. ' possible' → logprob: -2.97831654548645
    5. '
' → logprob: -7.603316307067871
    6. '    
' → logprob: -9.603316307067871
    7. '    ' → logprob: -10.103316307067871
    8. '        
' → logprob: -10.353316307067871
    9. '```' → logprob: -10.853316307067871
    10. '  ' → logprob: -11.228316307067871

Token 57: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024768433067947626
    2. ' =' → logprob: -6.002476692199707
    3. '.update' → logprob: -14.002476692199707
    4. '=

' → logprob: -15.627476692199707
    5. ' |=' → logprob: -16.377477645874023
    6. '=
' → logprob: -17.127477645874023
    7. '.=' → logprob: -17.377477645874023
    8. 'update' → logprob: -18.002477645874023
    9. '   ' → logprob: -18.002477645874023
    10. '.' → logprob: -19.002477645874023

Token 58: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3484472930431366
    2. ' next' → logprob: -1.223447322845459
    3. '(next' → logprob: -14.0984468460083
    4. '	next' → logprob: -14.8484468460083
    5. '[next' → logprob: -14.8484468460083
    6. 'n' → logprob: -14.9734468460083
    7. ' nex' → logprob: -15.3484468460083
    8. 'possible' → logprob: -15.7234468460083
    9. '.next' → logprob: -15.8484468460083
    10. '_next' → logprob: -16.223447799682617

Token 59: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -3.128163257315464e-07
    2. 'possible' → logprob: -15.375
    3. '_' → logprob: -17.625
    4. '_pos' → logprob: -18.875
    5. ' possible' → logprob: -19.875
    6. 'Possible' → logprob: -20.125
    7. ' _' → logprob: -21.0
    8. '```' → logprob: -21.25
    9. '_positive' → logprob: -21.375
    10. '_p' → logprob: -21.375

Token 60: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14713776111602783
    2. '
' → logprob: -2.1471376419067383
    3. '    
' → logprob: -4.397137641906738
    4. 'return' → logprob: -5.647137641906738
    5. ' return' → logprob: -6.022137641906738
    6. '<|end|>' → logprob: -6.897137641906738
    7. '  
' → logprob: -8.522137641906738
    8. '	return' → logprob: -8.772137641906738
    9. ' 
' → logprob: -9.147137641906738
    10. '   
' → logprob: -10.022137641906738

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001653759740293026
    2. ' return' → logprob: -7.001653671264648
    3. 'return' → logprob: -7.376653671264648
    4. '    
' → logprob: -9.876653671264648
    5. '
' → logprob: -10.126653671264648
    6. ' possible' → logprob: -11.626653671264648
    7. '	return' → logprob: -12.626653671264648
    8. '<|end|>' → logprob: -12.751653671264648
    9. ':return' → logprob: -13.001653671264648
    10. 'possible' → logprob: -13.126653671264648

Token 62: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2375352680683136
    2. ' return' → logprob: -1.7375352382659912
    3. 'return' (adapté à ' return') → logprob: -3.362535238265991
    4. '
' → logprob: -7.61253547668457
    5. '    
' → logprob: -8.73753547668457
    6. ' ' → logprob: -9.86253547668457
    7. '	return' → logprob: -9.98753547668457
    8. ' possible' → logprob: -10.36253547668457
    9. ' if' → logprob: -11.61253547668457
    10. 'possible' → logprob: -12.48753547668457

Token 63: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.041709721088409424
    2. ' possible' → logprob: -3.9167096614837646
    3. 'len' → logprob: -4.666709899902344
    4. 'True' → logprob: -5.041709899902344
    5. ' True' → logprob: -6.041709899902344
    6. 'max' → logprob: -6.916709899902344
    7. 'min' → logprob: -7.791709899902344
    8. ' len' → logprob: -7.916709899902344
    9. 'False' → logprob: -8.666709899902344
    10. '0' → logprob: -8.916709899902344

Token 64: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' can' (ID: 665)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03896912559866905
    2. ' can' → logprob: -3.913969039916992
    3. ' is' → logprob: -5.288969039916992
    4. ' check' → logprob: -5.413969039916992
    5. ' solve' → logprob: -5.788969039916992
    6. ' measurable' → logprob: -6.288969039916992
    7. ' ' → logprob: -6.788969039916992
    8. ' weigh' → logprob: -7.663969039916992
    9. ' find' → logprob: -7.913969039916992
    10. ' solution' → logprob: -8.538969039916992

Token 67: '_measure' (ID: 103789)
  Prédit: '_measure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_measure' → logprob: -0.0023599520791321993
    2. '_balance' → logprob: -7.002359867095947
    3. 'measure' → logprob: -7.752359867095947
    4. '_me' → logprob: -8.377360343933105
    5. '_place' → logprob: -8.752360343933105
    6. '_make' → logprob: -8.877360343933105
    7. ' measure' → logprob: -9.002360343933105
    8. 'Measure' → logprob: -9.502360343933105
    9. '_' → logprob: -9.752360343933105
    10. '_hold' → logprob: -9.752360343933105

Token 68: '_all' (ID: 13305)
  Prédit: '(weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.4902939796447754
    2. '(weight' → logprob: -0.9902939796447754
    3. '(' → logprob: -5.990293979644775
    4. '(target' → logprob: -5.990293979644775
    5. '(m' → logprob: -6.115293979644775
    6. ' (' → logprob: -6.240293979644775
    7. '(query' → logprob: -6.365293979644775
    8. '(distance' → logprob: -7.240293979644775
    9. '(amount' → logprob: -7.865293979644775
    10. '(s' → logprob: -7.990293979644775

Token 69: '(amount' (ID: 60193)
  Prédit: '(weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.0019906130619347095
    2. '(' → logprob: -6.501990795135498
    3. '(weight' → logprob: -8.00199031829834
    4. '_weights' → logprob: -10.12699031829834
    5. '(length' → logprob: -10.37699031829834
    6. '(me' → logprob: -10.87699031829834
    7. ' (' → logprob: -11.25199031829834
    8. '(items' → logprob: -11.87699031829834
    9. '(amount' → logprob: -12.12699031829834
    10. '(numbers' → logprob: -12.12699031829834

Token 70: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016654394567012787
    2. ',' → logprob: -4.3916544914245605
    3. '):' → logprob: -6.0166544914245605
    4. '):
' → logprob: -7.1416544914245605
    5. '_weights' → logprob: -8.266654014587402
    6. '_s' → logprob: -8.641654014587402
    7. ' ,' → logprob: -8.891654014587402
    8. '):
' → logprob: -9.391654014587402
    9. '_of' → logprob: -10.016654014587402
    10. ' s' → logprob: -10.266654014587402

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4330330193042755
    2. '):' → logprob: -1.0580329895019531
    3. ')' → logprob: -5.683032989501953
    4. ' ):' → logprob: -7.808032989501953
    5. ' ,' → logprob: -8.183032989501953
    6. ':' → logprob: -9.683032989501953
    7. '(weights' → logprob: -10.183032989501953
    8. '):
' → logprob: -10.933032989501953
    9. ' )' → logprob: -11.058032989501953
    10. '_weights' → logprob: -11.183032989501953

Token 72: ' weights' (ID: 28460)
  Prédit: ' weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -0.1608726680278778
    2. 'weights' → logprob: -1.9108726978302002
    3. '_weights' → logprob: -8.660872459411621
    4. '   ' → logprob: -9.285872459411621
    5. '(weights' → logprob: -9.410872459411621
    6. ')' → logprob: -9.785872459411621
    7. 'Weights' → logprob: -10.410872459411621
    8. '):' → logprob: -10.723372459411621
    9. '.weights' → logprob: -10.723372459411621
    10. 'me' → logprob: -10.910872459411621

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032283368054777384
    2. '):
' → logprob: -5.753228187561035
    3. ')' → logprob: -10.253228187561035
    4. '):
' → logprob: -11.378228187561035
    5. ' ):' → logprob: -13.503228187561035
    6. '   ' → logprob: -14.003228187561035
    7. '):

' → logprob: -14.503228187561035
    8. ',' → logprob: -14.628228187561035
    9. ':' → logprob: -14.878228187561035
    10. ')):' → logprob: -15.503228187561035

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011704069562256336
    2. '<|end|>' → logprob: -4.636703968048096
    3. ':' → logprob: -6.886703968048096
    4. '    
' → logprob: -8.136704444885254
    5. '<|end|>' → logprob: -8.386704444885254
    6. ' return' → logprob: -9.636704444885254
    7. ' ' → logprob: -10.261704444885254
    8. ' 
' → logprob: -10.261704444885254
    9. '    ' → logprob: -10.261704444885254
    10. '
' → logprob: -10.261704444885254

Token 75: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03233613818883896
    2. ' for' → logprob: -3.9073362350463867
    3. ' return' → logprob: -5.032336235046387
    4. ' 
' → logprob: -6.282336235046387
    5. '    
' → logprob: -6.407336235046387
    6. ' ' → logprob: -7.907336235046387
    7. '<|end|>' → logprob: -8.157336235046387
    8. '
' → logprob: -8.282336235046387
    9. '    ' → logprob: -8.532336235046387
    10. '```' → logprob: -9.157336235046387

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004359502345323563
    2. '=' → logprob: -5.504359722137451
    3. '<|end|>' → logprob: -8.379359245300293
    4. ' ' → logprob: -10.379359245300293
    5. '  ' → logprob: -12.254359245300293
    6. '   ' → logprob: -12.879359245300293
    7. ' =)' → logprob: -12.879359245300293
    8. '    ' → logprob: -13.129359245300293
    9. ')' → logprob: -13.379359245300293
    10. '<|end|>' → logprob: -13.379359245300293

Token 77: ' measurable' (ID: 120968)
  Prédit: ' measurable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' measurable' → logprob: -0.4366406202316284
    2. 'me' → logprob: -1.3116406202316284
    3. '{' → logprob: -2.561640739440918
    4. ' {' → logprob: -5.061640739440918
    5. 'measure' → logprob: -7.936640739440918
    6. ' meas' → logprob: -8.686640739440918
    7. 'set' → logprob: -9.186640739440918
    8. ' set' → logprob: -9.436640739440918
    9. '   ' → logprob: -10.061640739440918
    10. ' me' → logprob: -10.436640739440918

Token 78: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.003241762751713395
    2. '(' → logprob: -5.753241539001465
    3. '(weight' → logprob: -10.503241539001465
    4. 'weights' → logprob: -11.253241539001465
    5. '<|end|>' → logprob: -11.378241539001465
    6. ' weights' → logprob: -12.378241539001465
    7. '(amount' → logprob: -13.128241539001465
    8. '(
' → logprob: -13.378241539001465
    9. ' (' → logprob: -13.753241539001465
    10. '_weights' → logprob: -14.003241539001465

Token 79: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3869461715221405
    2. ')' → logprob: -1.136946201324463
    3. ')
' → logprob: -10.011945724487305
    4. ')

' → logprob: -10.636945724487305
    5. ' )
' → logprob: -12.636945724487305
    6. '   ' → logprob: -13.511945724487305
    7. ' )' → logprob: -14.386945724487305
    8. '
' → logprob: -14.636945724487305
    9. ' ' → logprob: -15.011945724487305
    10. '):
' → logprob: -17.136945724487305

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004089443478733301
    2. '
' → logprob: -6.00408935546875
    3. '    
' → logprob: -6.87908935546875
    4. '<|end|>' → logprob: -7.87908935546875
    5. ' for' → logprob: -9.37908935546875
    6. '  
' → logprob: -10.50408935546875
    7. ' 
' → logprob: -10.75408935546875
    8. ' return' → logprob: -10.75408935546875
    9. 'return' → logprob: -11.37908935546875
    10. '<|end|>' → logprob: -11.50408935546875

Token 81: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00561541598290205
    2. ' for' → logprob: -5.630615234375
    3. 'for' → logprob: -6.380615234375
    4. '    
' → logprob: -8.880615234375
    5. 'return' (adapté à ' return') → logprob: -9.880615234375
    6. '
' → logprob: -10.130615234375
    7. '	for' → logprob: -10.380615234375
    8. ' return' → logprob: -10.505615234375
    9. ' 
' → logprob: -11.880615234375
    10. '```' → logprob: -12.005615234375

Token 82: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6327224969863892
    2. ' all' → logprob: -0.7577224969863892
    3. '   ' → logprob: -9.882722854614258
    4. ' ' → logprob: -10.007722854614258
    5. ' set' → logprob: -11.382722854614258
    6. '	all' → logprob: -12.507722854614258
    7. 'set' → logprob: -12.632722854614258
    8. '  ' → logprob: -12.757722854614258
    9. '(all' → logprob: -13.882722854614258
    10. ''all' → logprob: -14.132722854614258

Token 83: '(a' (ID: 6271)
  Prédit: '(amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(amount' → logprob: -0.18363018333911896
    2. '(a' → logprob: -2.0586302280426025
    3. '(x' → logprob: -3.9336302280426025
    4. '((' → logprob: -4.433629989624023
    5. '(' → logprob: -4.933629989624023
    6. '(am' → logprob: -7.183629989624023
    7. '(abs' → logprob: -8.433629989624023
    8. '(value' → logprob: -9.183629989624023
    9. '(weight' → logprob: -9.433629989624023
    10. ' (' → logprob: -9.808629989624023

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03365849331021309
    2. 'in' → logprob: -3.408658504486084
    3. ' ' → logprob: -11.908658027648926
    4. ' i' → logprob: -13.658658027648926
    5. 'n' → logprob: -14.033658027648926
    6. 's' → logprob: -14.158658027648926
    7. '	in' → logprob: -14.533658027648926
    8. ')' → logprob: -14.658658027648926
    9. 'i' → logprob: -15.033658027648926
    10. 'In' → logprob: -15.533658027648926

Token 85: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.14268216490745544
    2. 'possible' → logprob: -2.0176820755004883
    3. ' posible' → logprob: -13.267682075500488
    4. '_possible' → logprob: -13.267682075500488
    5. ' possibile' → logprob: -13.892682075500488
    6. 'poss' → logprob: -14.392682075500488
    7. ' possibles' → logprob: -14.392682075500488
    8. 'Possible' → logprob: -14.642682075500488
    9. ')' → logprob: -15.142682075500488
    10. ' possível' → logprob: -15.392682075500488

Token 86: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6962572932243347
    2. ' for' → logprob: -0.6962572932243347
    3. ' )' → logprob: -6.3212571144104
    4. 'for' → logprob: -6.8212571144104
    5. '   ' → logprob: -8.696257591247559
    6. ' ' → logprob: -11.071257591247559
    7. ' or' → logprob: -11.196257591247559
    8. '	for' → logprob: -11.446257591247559
    9. '    ' → logprob: -12.821257591247559
    10. ' ' → logprob: -13.321257591247559

Token 87: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.39304450154304504
    2. ' amounts' → logprob: -1.1430444717407227
    3. 'a' → logprob: -5.518044471740723
    4. ' amount' → logprob: -6.518044471740723
    5. 'amount' → logprob: -7.393044471740723
    6. '<|end|>' → logprob: -10.893044471740723
    7. 'Amounts' → logprob: -11.643044471740723
    8. ' ' → logprob: -12.768044471740723
    9. ')' → logprob: -12.768044471740723
    10. '<|end|>' → logprob: -12.768044471740723

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014285385608673096
    2. ' a' → logprob: -4.889285564422607
    3. 'in' → logprob: -5.264285564422607
    4. 'a' → logprob: -6.639285564422607
    5. ' ' → logprob: -9.63928508758545
    6. 's' → logprob: -10.01428508758545
    7. ')' → logprob: -10.38928508758545
    8. ' )' → logprob: -11.51428508758545
    9. '    ' → logprob: -12.26428508758545
    10. ' amounts' → logprob: -12.63928508758545

Token 89: ' amounts' (ID: 22586)
  Prédit: ' amounts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amounts' → logprob: -0.011055837385356426
    2. 'amount' → logprob: -4.511055946350098
    3. ' amount' → logprob: -11.761055946350098
    4. 'Amounts' → logprob: -16.26105499267578
    5. 'am' → logprob: -17.38605499267578
    6. ')' → logprob: -17.38605499267578
    7. ' a' → logprob: -18.01105499267578
    8. '_amount' → logprob: -18.26105499267578
    9. '(amount' → logprob: -18.76105499267578
    10. ' quantities' → logprob: -19.13605499267578

Token 90: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '))' → logprob: -16.125
    5. ')return' → logprob: -17.125
    6. ')`' → logprob: -18.0
    7. ')

' → logprob: -18.5
    8. ')}' → logprob: -19.125
    9. '}' → logprob: -19.375
    10. '   ' → logprob: -19.375

Token 91: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0186387300491333
    2. '#' → logprob: -1.1436387300491333
    3. '<|end|>' → logprob: -1.7686387300491333
    4. '\n' → logprob: -2.6436386108398438
    5. '```' → logprob: -3.6436386108398438
    6. '[' → logprob: -3.8936386108398438
    7. '.' → logprob: -5.143638610839844
    8. ')' → logprob: -5.143638610839844
    9. 'newline' → logprob: -5.518638610839844
    10. '<|end|>' → logprob: -5.643638610839844

Token 92: ' solution' (ID: 7578)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.221792072057724
    2. ' can' → logprob: -2.221791982650757
    3. ' _' → logprob: -2.971791982650757
    4. ' test' → logprob: -4.596792221069336
    5. ' calculate' → logprob: -5.096792221069336
    6. ' check' → logprob: -5.721792221069336
    7. ' factorial' → logprob: -5.721792221069336
    8. ' measure' → logprob: -5.846792221069336
    9. ' ' → logprob: -5.846792221069336
    10. ' solve' → logprob: -6.721792221069336

Token 93: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014140352606773376
    2. '(weights' → logprob: -4.5141401290893555
    3. '():' → logprob: -6.6391401290893555
    4. ':' → logprob: -8.139140129089355
    5. '(def' → logprob: -8.639140129089355
    6. 'def' → logprob: -8.639140129089355
    7. '(amount' → logprob: -9.014140129089355
    8. '(nums' → logprob: -9.389140129089355
    9. '(numbers' → logprob: -9.514140129089355
    10. '(params' → logprob: -9.514140129089355

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000837384897749871
    2. '    
' → logprob: -8.000837326049805
    3. '    ' → logprob: -8.500837326049805
    4. '<|end|>' → logprob: -9.875837326049805
    5. ' input' → logprob: -10.375837326049805
    6. '```' → logprob: -10.625837326049805
    7. ' readline' → logprob: -10.750837326049805
    8. 'n' → logprob: -10.875837326049805
    9. 'import' → logprob: -11.125837326049805
    10. '<|end|>' → logprob: -11.125837326049805

Token 95: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2867031693458557
    2. '   ' → logprob: -1.786703109741211
    3. 'n' → logprob: -2.786703109741211
    4. ' import' → logprob: -4.661703109741211
    5. ' N' → logprob: -5.411703109741211
    6. ' input' → logprob: -6.036703109741211
    7. ' t' → logprob: -6.286703109741211
    8. 'import' → logprob: -6.911703109741211
    9. ' T' → logprob: -8.286703109741211
    10. 't' → logprob: -8.786703109741211

Token 96: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23792502284049988
    2. '_data' → logprob: -1.7379250526428223
    3. '_line' → logprob: -3.9879250526428223
    4. '_' → logprob: -4.362925052642822
    5. '_lines' → logprob: -6.612925052642822
    6. '(' → logprob: -7.237925052642822
    7. '().' → logprob: -7.237925052642822
    8. '_text' → logprob: -7.612925052642822
    9. ' =' → logprob: -7.987925052642822
    10. 's' → logprob: -8.362924575805664

Token 97: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1681663691997528
    2. 'sys' → logprob: -1.9181663990020752
    3. ' input' → logprob: -5.418166160583496
    4. 'input' → logprob: -5.668166160583496
    5. '	sys' → logprob: -11.418166160583496
    6. ' lambda' → logprob: -12.793166160583496
    7. 'lambda' → logprob: -13.043166160583496
    8. '=sys' → logprob: -13.418166160583496
    9. ' ' → logprob: -13.668166160583496
    10. '(sys' → logprob: -13.668166160583496

Token 98: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6936528086662292
    2. '.stdin' → logprob: -0.6936528086662292
    3. ' .' → logprob: -8.818653106689453
    4. '.stdout' → logprob: -9.068653106689453
    5. '.argv' → logprob: -9.568653106689453
    6. '.readline' → logprob: -9.568653106689453
    7. '.std' → logprob: -9.818653106689453
    8. '.input' → logprob: -10.568653106689453
    9. 'stdin' → logprob: -12.443653106689453
    10. '.​' → logprob: -13.193653106689453

Token 99: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004143099766224623
    2. '.read' → logprob: -5.504143238067627
    3. '.' → logprob: -10.379142761230469
    4. '.readlines' → logprob: -10.879142761230469
    5. 'read' → logprob: -11.629142761230469
    6. '.buffer' → logprob: -12.629142761230469
    7. '.Read' → logprob: -14.379142761230469
    8. '_read' → logprob: -14.504142761230469
    9. '.stdin' → logprob: -14.879142761230469
    10. ' readline' → logprob: -14.879142761230469

Token 100: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030804699286818504
    2. '().' → logprob: -3.5308046340942383
    3. '()
' → logprob: -6.905804634094238
    4. '()\' → logprob: -10.780804634094238
    5. '(' → logprob: -11.405804634094238
    6. '()

' → logprob: -12.030804634094238
    7. '   ' → logprob: -12.280804634094238
    8. '())' → logprob: -12.905804634094238
    9. '.strip' → logprob: -13.655804634094238
    10. '()<' → logprob: -14.030804634094238

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017620481085032225
    2. '    
' → logprob: -6.5017619132995605
    3. '()' → logprob: -8.876762390136719
    4. 'n' → logprob: -10.376762390136719
    5. '
' → logprob: -10.626762390136719
    6. '(' → logprob: -11.126762390136719
    7. '(n' → logprob: -12.001762390136719
    8. 'def' → logprob: -12.126762390136719
    9. '    ' → logprob: -12.876762390136719
    10. '```' → logprob: -12.876762390136719

Token 102: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7323727011680603
    2. ' n' → logprob: -0.9823727011680603
    3. '   ' → logprob: -2.107372760772705
    4. ' N' → logprob: -4.232372760772705
    5. 'N' → logprob: -5.107372760772705
    6. 't' → logprob: -7.107372760772705
    7. ' t' → logprob: -7.107372760772705
    8. ' T' → logprob: -7.857372760772705
    9. ' num' → logprob: -8.857372283935547
    10. 'num' → logprob: -8.982372283935547

Token 103: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.001444164663553238
    2. 'True' → logprob: -6.626444339752197
    3. '(True' → logprob: -9.376443862915039
    4. ' ' → logprob: -10.501443862915039
    5. ' (' → logprob: -12.876443862915039
    6. '    ' → logprob: -13.626443862915039
    7. ' not' → logprob: -13.751443862915039
    8. ' Tru' → logprob: -14.126443862915039
    9. ' true' → logprob: -16.12644386291504
    10. '=True' → logprob: -16.12644386291504

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026467638090252876
    2. '():' → logprob: -6.1276469230651855
    3. ':
' → logprob: -7.8776469230651855
    4. '):' → logprob: -10.877646446228027
    5. '():
' → logprob: -11.127646446228027
    6. '   ' → logprob: -11.127646446228027
    7. ',' → logprob: -11.252646446228027
    8. '(' → logprob: -11.502646446228027
    9. ' :' → logprob: -12.127646446228027
    10. ':**' → logprob: -13.002646446228027

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05599780008196831
    2. '   ' → logprob: -2.930997848510742
    3. '    ' → logprob: -7.430997848510742
    4. ' line' → logprob: -8.555997848510742
    5. ' ' → logprob: -9.180997848510742
    6. '  ' → logprob: -10.055997848510742
    7. ' try' → logprob: -10.180997848510742
    8. '      ' → logprob: -10.305997848510742
    9. '     ' → logprob: -10.555997848510742
    10. '<|end|>' → logprob: -10.680997848510742

Token 106: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.019555607810616493
    2. '   ' → logprob: -4.644555568695068
    3. 'line' → logprob: -5.519555568695068
    4. '       ' → logprob: -5.894555568695068
    5. ' s' → logprob: -6.894555568695068
    6. ' n' → logprob: -6.894555568695068
    7. ' l' → logprob: -7.394555568695068
    8. 'n' (adapté à ' n') → logprob: -9.269556045532227
    9. '	line' → logprob: -9.644556045532227
    10. ' try' → logprob: -9.894556045532227

Token 107: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055815741419792175
    2. '=' → logprob: -2.9308156967163086
    3. ' ==' → logprob: -8.180815696716309
    4. ' :=' → logprob: -8.305815696716309
    5. ',' → logprob: -8.430815696716309
    6. ' >' → logprob: -9.055815696716309
    7. '=int' → logprob: -10.555815696716309
    8. ' ' → logprob: -11.305815696716309
    9. '>' → logprob: -11.305815696716309
    10. ':=' → logprob: -12.305815696716309

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859418421983719
    2. '=' → logprob: -3.0485942363739014
    3. '=input' → logprob: -12.54859447479248
    4. ',' → logprob: -12.92359447479248
    5. ' ' → logprob: -15.17359447479248
    6. '=line' → logprob: -15.17359447479248
    7. ' ,' → logprob: -15.92359447479248
    8. '=int' → logprob: -16.673593521118164
    9. '    ' → logprob: -17.173593521118164
    10. '   ' → logprob: -18.048593521118164

Token 109: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.26862576603889465
    2. 'map' → logprob: -1.5186257362365723
    3. ' input' → logprob: -4.643625736236572
    4. 'input' → logprob: -5.018625736236572
    5. ' list' → logprob: -8.64362621307373
    6. 'list' → logprob: -9.51862621307373
    7. ' sys' → logprob: -10.76862621307373
    8. ' tuple' → logprob: -11.26862621307373
    9. '[' → logprob: -11.51862621307373
    10. '(map' → logprob: -11.64362621307373

Token 110: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.8838045597076416
    2. '(input' → logprob: -1.1338045597076416
    3. '(' → logprob: -1.3838045597076416
    4. '(str' → logprob: -4.2588043212890625
    5. '(lambda' → logprob: -8.758804321289062
    6. '(list' → logprob: -11.008804321289062
    7. '(in' → logprob: -11.133804321289062
    8. '(
' → logprob: -11.633804321289062
    9. ' (' → logprob: -12.133804321289062
    10. '(eval' → logprob: -12.633804321289062

Token 111: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1628941148519516
    2. ',input' → logprob: -2.1628940105438232
    3. ',' → logprob: -3.7878940105438232
    4. '(' → logprob: -4.662894248962402
    5. '(sys' → logprob: -6.412894248962402
    6. 'input' → logprob: -6.662894248962402
    7. '=input' → logprob: -9.537894248962402
    8. ')' → logprob: -9.662894248962402
    9. ' (' → logprob: -10.037894248962402
    10. ',(' → logprob: -10.537894248962402

Token 112: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.860340752406046e-05
    2. '()' → logprob: -9.7500581741333
    3. ' ().' → logprob: -15.7500581741333
    4. '()
' → logprob: -17.250059127807617
    5. '())' → logprob: -18.125059127807617
    6. '(' → logprob: -18.375059127807617
    7. '().'' → logprob: -18.500059127807617
    8. '()

' → logprob: -19.000059127807617
    9. ')' → logprob: -19.125059127807617
    10. '.readline' → logprob: -19.500059127807617

Token 113: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.4829612374305725
    2. 'strip' → logprob: -0.9829612374305725
    3. 'rstrip' → logprob: -4.732961177825928
    4. 'read' → logprob: -10.107961654663086
    5. '(split' → logprob: -13.732961654663086
    6. '().' → logprob: -14.357961654663086
    7. ' strip' → logprob: -14.607961654663086
    8. 'decode' → logprob: -14.732961654663086
    9. ' split' → logprob: -14.857961654663086
    10. ')' → logprob: -14.982961654663086

Token 114: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01933230832219124
    2. '()' → logprob: -4.019332408905029
    3. ')' → logprob: -7.019332408905029
    4. '())
' → logprob: -9.144331932067871
    5. '(' → logprob: -9.519331932067871
    6. '()))' → logprob: -9.519331932067871
    7. '(),' → logprob: -10.894331932067871
    8. '('' → logprob: -13.019331932067871
    9. ' ())' → logprob: -13.144331932067871
    10. '();)' → logprob: -13.144331932067871

Token 115: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2560054063796997
    2. ' if' → logprob: -1.5060054063796997
    3. '       ' → logprob: -5.50600528717041
    4. '<|end|>' → logprob: -13.00600528717041
    5. '	if' → logprob: -13.75600528717041
    6. 'If' → logprob: -13.88100528717041
    7. '   ' → logprob: -14.63100528717041
    8. ' ' → logprob: -15.13100528717041
    9. '#' → logprob: -15.75600528717041
    10. '```' → logprob: -16.506006240844727

Token 117: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.005243598949164152
    2. 'n' → logprob: -5.25524377822876
    3. ' not' → logprob: -11.755243301391602
    4. '	n' → logprob: -13.880243301391602
    5. '(n' → logprob: -14.505243301391602
    6. ' (' → logprob: -15.380243301391602
    7. ' ' → logprob: -15.755243301391602
    8. 'not' → logprob: -16.5052433013916
    9. ' ' → logprob: -17.1302433013916
    10. ' н' → logprob: -18.3802433013916

Token 118: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03809806704521179
    2. '==' → logprob: -3.288098096847534
    3. ' <=' → logprob: -10.038098335266113
    4. '=' → logprob: -12.413098335266113
    5. '<=' → logprob: -12.413098335266113
    6. ' ' → logprob: -13.538098335266113
    7. ' =' → logprob: -13.788098335266113
    8. ' <' → logprob: -14.038098335266113
    9. '0' → logprob: -14.163098335266113
    10. ')==' → logprob: -15.538098335266113

Token 119: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026301810517907143
    2. ' ' → logprob: -3.651301860809326
    3. 'm' → logprob: -14.901301383972168
    4. '  ' → logprob: -15.026301383972168
    5. '   ' → logprob: -15.963801383972168
    6. ' m' → logprob: -16.151302337646484
    7. 'and' → logprob: -16.588802337646484
    8. '    ' → logprob: -16.651302337646484
    9. ' ' → logprob: -16.651302337646484
    10. '```' → logprob: -16.776302337646484

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.1557283111615106e-05
    2. ' ' → logprob: -10.125041961669922
    3. 'm' → logprob: -15.437541961669922
    4. 'and' → logprob: -15.562541961669922
    5. '```' → logprob: -15.562541961669922
    6. '-' → logprob: -16.125041961669922
    7. '

' → logprob: -16.312541961669922
    8. 'n' → logprob: -16.625041961669922
    9. '۰' → logprob: -16.875041961669922
    10. '   ' → logprob: -16.937541961669922

Token 121: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06225089356303215
    2. 'and' → logprob: -2.812250852584839
    3. ' or' → logprob: -8.437251091003418
    4. ':' → logprob: -10.312251091003418
    5. '	and' → logprob: -11.062251091003418
    6. ' ' → logprob: -11.437251091003418
    7. '   ' → logprob: -12.312251091003418
    8. '<|end|>' → logprob: -14.687251091003418
    9. '       ' → logprob: -14.812251091003418
    10. ':
' → logprob: -14.937251091003418

Token 122: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.25193020701408386
    2. 'm' → logprob: -1.5019302368164062
    3. '	m' → logprob: -14.501930236816406
    4. '   ' → logprob: -15.251930236816406
    5. ' ' → logprob: -15.501930236816406
    6. ' ' → logprob: -16.001930236816406
    7. '    ' → logprob: -17.251930236816406
    8. '  ' → logprob: -18.001930236816406
    9. '<|end|>' → logprob: -18.376930236816406
    10. '&m' → logprob: -19.251930236816406

Token 123: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06543576717376709
    2. '==' → logprob: -2.8154358863830566
    3. '<|end|>' → logprob: -6.565435886383057
    4. ' ' → logprob: -6.815435886383057
    5. '0' → logprob: -7.065435886383057
    6. ' =' → logprob: -10.315435409545898
    7. '<|end|>' → logprob: -10.440435409545898
    8. '=' → logprob: -10.690435409545898
    9. ')==' → logprob: -12.065435409545898
    10. ')' → logprob: -13.315435409545898

Token 124: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '<|end|>' → logprob: -17.12548828125
    4. '   ' → logprob: -18.50048828125
    5. '۰' → logprob: -19.12548828125
    6. ' ' → logprob: -19.50048828125
    7. '  ' → logprob: -19.50048828125
    8. '```' → logprob: -19.87548828125
    9. '<|end|>' → logprob: -20.50048828125
    10. '０' → logprob: -21.18798828125

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '۰' → logprob: -17.875009536743164
    4. '```' → logprob: -18.687509536743164
    5. '<|end|>' → logprob: -18.937509536743164
    6. '০' → logprob: -19.187509536743164
    7. '   ' → logprob: -19.312509536743164
    8. '०' → logprob: -19.625009536743164
    9. '０' → logprob: -19.687509536743164
    10. ' ' → logprob: -20.062509536743164

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021409355103969574
    2. ':
' → logprob: -3.896409273147583
    3. '           ' → logprob: -7.271409511566162
    4. '       ' → logprob: -9.021409034729004
    5. ':return' → logprob: -10.271409034729004
    6. '   ' → logprob: -11.646409034729004
    7. ',' → logprob: -13.021409034729004
    8. '<|end|>' → logprob: -13.646409034729004
    9. '.' → logprob: -14.271409034729004
    10. ' :' → logprob: -14.646409034729004

Token 127: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2233183042553719e-05
    2. '       ' → logprob: -11.750012397766113
    3. '		' → logprob: -13.375012397766113
    4. '               ' → logprob: -14.500012397766113
    5. '          ' → logprob: -14.500012397766113
    6. ' break' → logprob: -14.750012397766113
    7. '	       ' → logprob: -14.875012397766113
    8. '   ' → logprob: -15.125012397766113
    9. 'break' → logprob: -15.125012397766113
    10. '            ' → logprob: -16.125011444091797

Token 128: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.31205493211746216
    2. ' break' → logprob: -1.5620548725128174
    3. '           ' → logprob: -3.0620548725128174
    4. 'return' → logprob: -4.5620551109313965
    5. '       ' → logprob: -7.4370551109313965
    6. ' return' → logprob: -8.312054634094238
    7. '               ' → logprob: -8.437054634094238
    8. '	break' → logprob: -9.687054634094238
    9. '   ' → logprob: -12.687054634094238
    10. '_break' → logprob: -12.812054634094238

Token 129: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0693066418170929
    2. '
' → logprob: -2.8193066120147705
    3. '        
' → logprob: -5.56930685043335
    4. '<|end|>' → logprob: -5.69430685043335
    5. '<|end|>' → logprob: -10.444306373596191
    6. '   ' → logprob: -11.069306373596191
    7. '    
' → logprob: -11.069306373596191
    8. '```' → logprob: -11.194306373596191
    9. '  
' → logprob: -11.444306373596191
    10. '            
' → logprob: -11.694306373596191

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013165060430765152
    2. '        
' → logprob: -5.26316499710083
    3. '
' → logprob: -5.38816499710083
    4. '<|end|>' → logprob: -5.76316499710083
    5. '```' → logprob: -9.888165473937988
    6. '   ' → logprob: -10.513165473937988
    7. '<|end|>' → logprob: -11.138165473937988
    8. '	' → logprob: -11.263165473937988
    9. '		
' → logprob: -11.388165473937988
    10. '            
' → logprob: -11.513165473937988

Token 131: ' amounts' (ID: 22586)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.29231974482536316
    2. ' weights' → logprob: -1.4173197746276855
    3. '       ' → logprob: -4.6673197746276855
    4. ' amounts' → logprob: -7.2923197746276855
    5. '   ' → logprob: -8.167319297790527
    6. 'amount' → logprob: -8.417319297790527
    7. 'weight' → logprob: -8.792319297790527
    8. '_weights' → logprob: -10.167319297790527
    9. '(weights' → logprob: -10.167319297790527
    10. 'w' → logprob: -10.479819297790527

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23695716261863708
    2. '=' → logprob: -1.7369571924209595
    3. ',' → logprob: -3.36195707321167
    4. '<|end|>' → logprob: -9.361957550048828
    5. ')' → logprob: -9.486957550048828
    6. ' ,' → logprob: -10.111957550048828
    7. '<|end|>' → logprob: -10.986957550048828
    8. '=[]' → logprob: -11.236957550048828
    9. '_' → logprob: -12.736957550048828
    10. '[' → logprob: -12.861957550048828

Token 133: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.008615161292254925
    2. ' list' → logprob: -4.758615016937256
    3. 'map' → logprob: -14.383615493774414
    4. '[list' → logprob: -16.008615493774414
    5. '[' → logprob: -17.383615493774414
    6. '=list' → logprob: -19.258615493774414
    7. '[]' → logprob: -19.633615493774414
    8. '	list' → logprob: -19.633615493774414
    9. '(list' → logprob: -20.008615493774414
    10. 'List' → logprob: -20.133615493774414

Token 134: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.0033853515051305e-05
    2. '(' → logprob: -9.750060081481934
    3. '()' → logprob: -13.625060081481934
    4. '(
' → logprob: -15.750060081481934
    5. '(range' → logprob: -15.750060081481934
    6. 'map' → logprob: -15.875060081481934
    7. '(int' → logprob: -16.125059127807617
    8. '(m' → logprob: -17.875059127807617
    9. '(...)' → logprob: -18.625059127807617
    10. '(

' → logprob: -19.125059127807617

Token 135: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001987722353078425
    2. '(' → logprob: -9.250198364257812
    3. 'int' → logprob: -9.250198364257812
    4. ',int' → logprob: -12.625198364257812
    5. '[int' → logprob: -13.750198364257812
    6. '=int' → logprob: -14.500198364257812
    7. ' int' → logprob: -14.625198364257812
    8. '<int' → logprob: -15.000198364257812
    9. ' (' → logprob: -15.500198364257812
    10. ']int' → logprob: -15.625198364257812

Token 136: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.03093785047531128
    2. ',' → logprob: -3.530937910079956
    3. '(input' → logprob: -6.780937671661377
    4. '(' → logprob: -10.405938148498535
    5. 'input' → logprob: -11.155938148498535
    6. ' ,' → logprob: -12.030938148498535
    7. ',(' → logprob: -15.530938148498535
    8. '=input' → logprob: -15.905938148498535
    9. ',int' → logprob: -16.28093719482422
    10. ')' → logprob: -16.40593719482422

Token 137: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.465036105713807e-06
    2. '()' → logprob: -12.000007629394531
    3. '.readline' → logprob: -13.750007629394531
    4. '.split' → logprob: -17.25000762939453
    5. '()))' → logprob: -17.75000762939453
    6. '(' → logprob: -18.50000762939453
    7. '().__' → logprob: -19.12500762939453
    8. '()?.' → logprob: -19.12500762939453
    9. '()[' → logprob: -19.50000762939453
    10. '()
' → logprob: -19.62500762939453

Token 138: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0032717071007937193
    2. 'strip' → logprob: -6.003271579742432
    3. 'rstrip' → logprob: -7.253271579742432
    4. 'read' → logprob: -9.37827205657959
    5. '(split' → logprob: -13.37827205657959
    6. '.readline' → logprob: -14.00327205657959
    7. ' split' → logprob: -14.62827205657959
    8. '().' → logprob: -15.75327205657959
    9. '.split' → logprob: -16.003271102905273
    10. 'spl' → logprob: -16.753271102905273

Token 139: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005839095450937748
    2. '()' → logprob: -5.380838871002197
    3. '))' → logprob: -7.255838871002197
    4. '())' → logprob: -8.255839347839355
    5. '(' → logprob: -8.880839347839355
    6. '()))
' → logprob: -9.505839347839355
    7. '()));' → logprob: -10.880839347839355
    8. '().' → logprob: -11.880839347839355
    9. '   ' → logprob: -12.880839347839355
    10. '(),' → logprob: -13.005839347839355

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041558556258678436
    2. 'weights' → logprob: -3.2915585041046143
    3. ' weights' → logprob: -5.666558742523193
    4. '   ' → logprob: -11.166558265686035
    5. '	' → logprob: -11.541558265686035
    6. '        
' → logprob: -11.666558265686035
    7. '(weights' → logprob: -11.916558265686035
    8. '_weights' → logprob: -13.416558265686035
    9. 'weight' → logprob: -13.416558265686035
    10. '           ' → logprob: -13.791558265686035

Token 141: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' (adapté à ' weights') → logprob: -0.014322392642498016
    2. ' weights' → logprob: -4.264322280883789
    3. '       ' → logprob: -9.014322280883789
    4. 'weight' → logprob: -10.764322280883789
    5. '_weights' → logprob: -12.389322280883789
    6. '.weights' → logprob: -12.639322280883789
    7. '(weights' → logprob: -13.014322280883789
    8. 'answers' → logprob: -13.889322280883789
    9. 'weig' → logprob: -14.014322280883789
    10. 'w' → logprob: -14.389322280883789

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192990899086
    2. '=' → logprob: -1.5019298791885376
    3. ')' → logprob: -14.876930236816406
    4. '<|end|>' → logprob: -16.626930236816406
    5. '＝' → logprob: -16.751930236816406
    6. '.' → logprob: -16.876930236816406
    7. 's' → logprob: -17.126930236816406
    8. ' ' → logprob: -17.251930236816406
    9. ':' → logprob: -17.251930236816406
    10. ' =
' → logprob: -17.376930236816406

Token 143: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6931503415107727
    2. 'list' → logprob: -0.6931503415107727
    3. 'map' → logprob: -12.943150520324707
    4. ' map' → logprob: -14.443150520324707
    5. '(list' → logprob: -15.943150520324707
    6. '	list' → logprob: -17.31814956665039
    7. '   ' → logprob: -17.44314956665039
    8. 'List' → logprob: -17.69314956665039
    9. '=list' → logprob: -17.69314956665039
    10. ' ' → logprob: -18.94314956665039

Token 144: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.1008713702030946e-06
    2. 'map' → logprob: -14.000001907348633
    3. '(int' → logprob: -14.125001907348633
    4. '(' → logprob: -14.625001907348633
    5. ' (' → logprob: -18.375001907348633
    6. '()' → logprob: -18.500001907348633
    7. ' map' → logprob: -18.625001907348633
    8. '(range' → logprob: -19.000001907348633
    9. '.map' → logprob: -19.750001907348633
    10. '	map' → logprob: -20.125001907348633

Token 145: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008132012444548309
    2. 'int' → logprob: -7.125813007354736
    3. '[int' → logprob: -12.500813484191895
    4. '=int' → logprob: -13.500813484191895
    5. ' (' → logprob: -13.500813484191895
    6. ',int' → logprob: -14.375813484191895
    7. '<int' → logprob: -14.500813484191895
    8. ' int' → logprob: -15.000813484191895
    9. ':int' → logprob: -15.375813484191895
    10. '```' → logprob: -15.750813484191895

Token 146: ',input' (ID: 123014)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02425059676170349
    2. ',int' → logprob: -3.8992505073547363
    3. 'int' → logprob: -6.274250507354736
    4. '[int' → logprob: -7.524250507354736
    5. '(input' → logprob: -7.524250507354736
    6. '=int' → logprob: -7.774250507354736
    7. ',' → logprob: -9.149250984191895
    8. ',input' → logprob: -9.649250984191895
    9. ':int' → logprob: -9.774250984191895
    10. '<int' → logprob: -10.149250984191895

Token 147: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.531315314830863e-06
    2. '()' → logprob: -13.250003814697266
    3. '.readline' → logprob: -14.250003814697266
    4. '(' → logprob: -15.000003814697266
    5. ' ().' → logprob: -15.750003814697266
    6. '=sys' → logprob: -15.750003814697266
    7. '.split' → logprob: -15.875003814697266
    8. 'sys' → logprob: -16.000003814697266
    9. '.sys' → logprob: -16.750003814697266
    10. '(sys' → logprob: -17.000003814697266

Token 148: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005601812736131251
    2. 'sys' → logprob: -7.500560283660889
    3. 'read' → logprob: -13.00055980682373
    4. '(split' → logprob: -13.50055980682373
    5. 'strip' → logprob: -14.00055980682373
    6. 'input' → logprob: -14.00055980682373
    7. '.split' → logprob: -14.87555980682373
    8. ')' → logprob: -15.12555980682373
    9. 'spl' → logprob: -15.37555980682373
    10. '(sys' → logprob: -15.62555980682373

Token 149: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.011820001527667046
    2. '))' → logprob: -4.886819839477539
    3. '()' → logprob: -6.011819839477539
    4. '())' → logprob: -6.636819839477539
    5. '()))
' → logprob: -7.886819839477539
    6. '()));' → logprob: -10.386819839477539
    7. '(' → logprob: -10.636819839477539
    8. ')' → logprob: -12.386819839477539
    9. '()))

' → logprob: -13.011819839477539
    10. '());' → logprob: -13.386819839477539

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002921018283814192
    2. '<|end|>' → logprob: -6.377921104431152
    3. '
' → logprob: -7.002921104431152
    4. '   ' → logprob: -8.502921104431152
    5. '        
' → logprob: -9.627921104431152
    6. '<|end|>' → logprob: -10.752921104431152
    7. '```' → logprob: -11.752921104431152
    8. 'print' → logprob: -12.627921104431152
    9. ')' → logprob: -13.627921104431152
    10. '    
' → logprob: -13.752921104431152

Token 151: ' possible' (ID: 4149)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39286094903945923
    2. ' print' → logprob: -1.8928608894348145
    3. ' if' → logprob: -2.3928608894348145
    4. '       ' → logprob: -3.1428608894348145
    5. 'if' → logprob: -3.2678608894348145
    6. ' result' → logprob: -7.1428608894348145
    7. 'result' → logprob: -7.2678608894348145
    8. '   ' → logprob: -9.892861366271973
    9. '        
' → logprob: -10.642861366271973
    10. '
' → logprob: -11.267861366271973

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576278805732727
    2. ' =' → logprob: -0.826278805732727
    3. '<|end|>' → logprob: -8.576278686523438
    4. ')' → logprob: -8.951278686523438
    5. ')=' → logprob: -12.701278686523438
    6. '<|end|>' → logprob: -12.826278686523438
    7. '=True' → logprob: -13.201278686523438
    8. '_' → logprob: -13.326278686523438
    9. ':' → logprob: -13.326278686523438
    10. '(' → logprob: -13.451278686523438

Token 153: ' measurable' (ID: 120968)
  Prédit: ' measurable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' measurable' → logprob: -0.1607741117477417
    2. 'me' → logprob: -1.9107741117477417
    3. ' meas' → logprob: -9.160774230957031
    4. 'measure' → logprob: -9.410774230957031
    5. 'can' → logprob: -9.410774230957031
    6. ' possible' → logprob: -9.535774230957031
    7. 'possible' → logprob: -9.785774230957031
    8. ' can' → logprob: -10.035774230957031
    9. '(me' → logprob: -10.785774230957031
    10. ' ' → logprob: -11.160774230957031

Token 154: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -2.45848218582978e-06
    2. 'weights' → logprob: -13.12500286102295
    3. '(weight' → logprob: -14.75000286102295
    4. ' weights' → logprob: -16.500001907348633
    5. '(' → logprob: -17.000001907348633
    6. '_weights' → logprob: -18.625001907348633
    7. '.weights' → logprob: -18.750001907348633
    8. 'Weights' → logprob: -19.625001907348633
    9. '(values' → logprob: -20.375001907348633
    10. '(words' → logprob: -20.750001907348633

Token 155: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25194668769836426
    2. ')' → logprob: -1.5019466876983643
    3. ')

' → logprob: -11.751946449279785
    4. ')
' → logprob: -12.501946449279785
    5. '   ' → logprob: -12.876946449279785
    6. ' )
' → logprob: -13.001946449279785
    7. ' )' → logprob: -14.626946449279785
    8. '       ' → logprob: -14.626946449279785
    9. ')return' → logprob: -16.3769474029541
    10. ' ' → logprob: -16.7519474029541

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019322719424962997
    2. '
' → logprob: -5.269322872161865
    3. ' for' → logprob: -5.269322872161865
    4. '<|end|>' → logprob: -6.269322872161865
    5. '   ' → logprob: -6.519322872161865
    6. 'print' → logprob: -6.644322872161865
    7. ' if' → logprob: -6.894322872161865
    8. ' print' → logprob: -7.144322872161865
    9. '        
' → logprob: -7.269322872161865
    10. ' result' → logprob: -7.644322872161865

Token 157: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8278112411499023
    2. 'result' → logprob: -1.3278112411499023
    3. 'for' → logprob: -1.9528112411499023
    4. 'results' → logprob: -2.8278112411499023
    5. 'if' (adapté à ' if') → logprob: -3.2028112411499023
    6. 'answer' → logprob: -3.9528112411499023
    7. 'answers' → logprob: -4.952811241149902
    8. 'count' → logprob: -5.077811241149902
    9. ' for' → logprob: -5.452811241149902
    10. '       ' → logprob: -5.577811241149902

Token 158: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.14966483414173126
    2. ' can' → logprob: -2.149664878845215
    3. 'all' → logprob: -4.274664878845215
    4. 'can' → logprob: -4.774664878845215
    5. ' any' → logprob: -10.149664878845215
    6. ' set' → logprob: -10.774664878845215
    7. '   ' → logprob: -11.399664878845215
    8. '(can' → logprob: -11.399664878845215
    9. ' not' → logprob: -11.774664878845215
    10. ' ' → logprob: -11.774664878845215

Token 159: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.048638686537742615
    2. '(amount' → logprob: -3.0486385822296143
    3. '(' → logprob: -11.048638343811035
    4. '((' → logprob: -11.048638343811035
    5. '(x' → logprob: -11.423638343811035
    6. '(am' → logprob: -12.048638343811035
    7. 'amount' → logprob: -13.548638343811035
    8. 'a' → logprob: -14.548638343811035
    9. '(i' → logprob: -15.173638343811035
    10. '(value' → logprob: -15.923638343811035

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013273799559101462
    2. 'in' → logprob: -6.6263275146484375
    3. ' ' → logprob: -14.626327514648438
    4. ' not' → logprob: -15.001327514648438
    5. 's' → logprob: -15.251327514648438
    6. ' ' → logprob: -15.876327514648438
    7. '<|end|>' → logprob: -16.626327514648438
    8. 'In' → logprob: -16.626327514648438
    9. '_in' → logprob: -17.501327514648438
    10. '	in' → logprob: -17.626327514648438

Token 161: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3868723213672638
    2. ' possible' → logprob: -1.1368722915649414
    3. ' posible' → logprob: -14.886872291564941
    4. '_possible' → logprob: -15.011872291564941
    5. 'poss' → logprob: -15.136872291564941
    6. ' possibles' → logprob: -15.761872291564941
    7. 'Possible' → logprob: -15.886872291564941
    8. ' possibile' → logprob: -17.261873245239258
    9. 'pos' → logprob: -17.386873245239258
    10. ' ' → logprob: -17.886873245239258

Token 162: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04860416799783707
    2. 'for' → logprob: -3.0486042499542236
    3. ')' → logprob: -11.173604011535645
    4. '   ' → logprob: -13.798604011535645
    5. '    ' → logprob: -14.298604011535645
    6. ' ' → logprob: -14.673604011535645
    7. '        ' → logprob: -15.048604011535645
    8. '       ' → logprob: -15.548604011535645
    9. '	for' → logprob: -16.17360496520996
    10. '  ' → logprob: -16.67360496520996

Token 163: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3869144320487976
    2. ' a' → logprob: -1.1369144916534424
    3. ' amounts' → logprob: -10.636914253234863
    4. 'amount' → logprob: -10.886914253234863
    5. ' amount' → logprob: -14.636914253234863
    6. '	a' → logprob: -16.13691520690918
    7. ' in' → logprob: -17.13691520690918
    8. 'possible' → logprob: -17.38691520690918
    9. ' ' → logprob: -17.88691520690918
    10. ' possible' → logprob: -18.51191520690918

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028537323232740164
    2. 'in' → logprob: -5.877853870391846
    3. 'a' → logprob: -10.502853393554688
    4. ' a' → logprob: -11.127853393554688
    5. ' ' → logprob: -12.877853393554688
    6. ' amounts' → logprob: -13.377853393554688
    7. 's' → logprob: -13.752853393554688
    8. 'amount' → logprob: -14.377853393554688
    9. '  ' → logprob: -15.377853393554688
    10. '    ' → logprob: -15.627853393554688

Token 165: ' amounts' (ID: 22586)
  Prédit: ' amounts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amounts' → logprob: -0.16027052700519562
    2. 'amount' → logprob: -1.9102705717086792
    3. 'possible' → logprob: -10.660270690917969
    4. ' amount' → logprob: -10.785270690917969
    5. 'a' → logprob: -14.410270690917969
    6. ' possible' → logprob: -14.535270690917969
    7. 'Amounts' → logprob: -15.785270690917969
    8. 'weights' → logprob: -15.910270690917969
    9. 'am' → logprob: -16.16027069091797
    10. '(amount' → logprob: -16.28527069091797

Token 166: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3883880376815796
    2. '):' → logprob: -1.1383880376815796
    3. ')' → logprob: -6.638388156890869
    4. '       ' → logprob: -9.138387680053711
    5. ' ):
' → logprob: -10.388387680053711
    6. ' ):' → logprob: -10.638387680053711
    7. ':' → logprob: -10.763387680053711
    8. ':
' → logprob: -12.263387680053711
    9. '           ' → logprob: -12.263387680053711
    10. '):
' → logprob: -12.388387680053711

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018744789122138172
    2. 'print' → logprob: -9.250187873840332
    3. ' print' → logprob: -9.750187873840332
    4. '
' → logprob: -10.750187873840332
    5. '	       ' → logprob: -12.750187873840332
    6. '            
' → logprob: -12.875187873840332
    7. '		' → logprob: -13.125187873840332
    8. '\n' → logprob: -13.625187873840332
    9. '          ' → logprob: -14.750187873840332
    10. '\' → logprob: -14.750187873840332

Token 168: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5107181668281555
    2. ' print' → logprob: -1.2607181072235107
    3. '       ' → logprob: -2.6357181072235107
    4. 'print' (adapté à ' print') → logprob: -3.2607181072235107
    5. '               ' → logprob: -5.13571834564209
    6. '   ' → logprob: -8.38571834564209
    7. '
' → logprob: -8.76071834564209
    8. '	       ' → logprob: -9.88571834564209
    9. '	print' → logprob: -10.13571834564209
    10. '            ' → logprob: -11.13571834564209

Token 169: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004504654090851545
    2. '('' → logprob: -5.754504680633545
    3. '(' → logprob: -6.629504680633545
    4. ' ("' → logprob: -13.129504203796387
    5. '"' → logprob: -13.754504203796387
    6. '   ' → logprob: -14.004504203796387
    7. '(True' → logprob: -15.379504203796387
    8. '(":' → logprob: -15.379504203796387
    9. '("#' → logprob: -15.879504203796387
    10. '("+' → logprob: -16.129505157470703

Token 170: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04736112803220749
    2. 'Yes' → logprob: -3.797361135482788
    3. ''' → logprob: -3.922361135482788
    4. '("' → logprob: -6.672360897064209
    5. 'YES' → logprob: -7.547360897064209
    6. 'yes' → logprob: -7.922360897064209
    7. '   ' → logprob: -7.922360897064209
    8. '"W' → logprob: -8.172361373901367
    9. '1' → logprob: -8.797361373901367
    10. '"B' → logprob: -8.922361373901367

Token 171: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.434862345457077
    2. ')' → logprob: -1.4348623752593994
    3. '       ' → logprob: -2.1848623752593994
    4. 'else' → logprob: -6.68486213684082
    5. '   ' → logprob: -7.43486213684082
    6. ' else' → logprob: -9.93486213684082
    7. ' )
' → logprob: -10.30986213684082
    8. ' )' → logprob: -10.80986213684082
    9. 'elif' → logprob: -11.43486213684082
    10. ',' → logprob: -11.80986213684082

Token 172: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010463856160640717
    2. 'else' → logprob: -7.126046180725098
    3. ' else' → logprob: -8.626046180725098
    4. '           ' → logprob: -10.626046180725098
    5. '<|end|>' → logprob: -11.001046180725098
    6. '   ' → logprob: -11.376046180725098
    7. 'elif' → logprob: -13.001046180725098
    8. '.' → logprob: -13.001046180725098
    9. '	' → logprob: -13.501046180725098
    10. 'continue' → logprob: -14.376046180725098

Token 173: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039514731615781784
    2. 'else' → logprob: -3.2895147800445557
    3. ' else' → logprob: -7.039514541625977
    4. '           ' → logprob: -8.039514541625977
    5. 'continue' (adapté à ' continue') → logprob: -8.539514541625977
    6. '   ' → logprob: -9.789514541625977
    7. 'elif' → logprob: -11.664514541625977
    8. ' continue' → logprob: -12.164514541625977
    9. ' ' → logprob: -13.539514541625977
    10. '
' → logprob: -13.914514541625977

Token 174: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005931758787482977
    2. '        
' → logprob: -5.630931854248047
    3. '
' → logprob: -6.130931854248047
    4. '<|end|>' → logprob: -9.005931854248047
    5. '      ' → logprob: -12.130931854248047
    6. '       
' → logprob: -12.505931854248047
    7. '```' → logprob: -12.755931854248047
    8. '   ' → logprob: -12.755931854248047
    9. '        

' → logprob: -13.130931854248047
    10. '    
' → logprob: -13.505931854248047

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005893006920814514
    2. '        
' → logprob: -5.255893230438232
    3. '<|end|>' → logprob: -7.755893230438232
    4. '
' → logprob: -8.755892753601074
    5. '   ' → logprob: -11.505892753601074
    6. '       
' → logprob: -11.630892753601074
    7. '```' → logprob: -11.630892753601074
    8. '      ' → logprob: -11.630892753601074
    9. '        
        
' → logprob: -12.255892753601074
    10. '           ' → logprob: -12.380892753601074

Token 176: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8533830642700195
    2. 'answer' → logprob: -0.9783830642700195
    3. 'min' → logprob: -2.8533830642700195
    4. 'found' → logprob: -3.4783830642700195
    5. 'best' → logprob: -3.4783830642700195
    6. 'weights' → logprob: -4.1033830642700195
    7. '       ' → logprob: -4.6033830642700195
    8. 'answers' → logprob: -4.7283830642700195
    9. 'result' → logprob: -5.1033830642700195
    10. 'possible' → logprob: -5.2283830642700195

Token 177: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5328551530838013
    2. '_weight' → logprob: -1.2828551530838013
    3. '_amount' → logprob: -2.4078550338745117
    4. '_diff' → logprob: -4.157855033874512
    5. '_val' → logprob: -4.782855033874512
    6. '_sum' → logprob: -5.032855033874512
    7. '_value' → logprob: -5.407855033874512
    8. '_w' → logprob: -6.157855033874512
    9. '_possible' → logprob: -6.532855033874512
    10. '_measure' → logprob: -6.657855033874512

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03628663346171379
    2. '=' → logprob: -3.7862865924835205
    3. 'mount' → logprob: -4.4112868309021
    4. 'x' → logprob: -7.7862868309021
    5. 'ount' → logprob: -8.911286354064941
    6. '=max' → logprob: -9.911286354064941
    7. '=int' → logprob: -10.161286354064941
    8. 'mnt' → logprob: -10.161286354064941
    9. 'mt' → logprob: -10.286286354064941
    10. 'ss' → logprob: -11.036286354064941

Token 179: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003177952254191041
    2. ' max' → logprob: -5.753178119659424
    3. 'amount' → logprob: -15.878177642822266
    4. '(max' → logprob: -16.378177642822266
    5. '	max' → logprob: -17.378177642822266
    6. '=max' → logprob: -17.628177642822266
    7. '10' → logprob: -17.878177642822266
    8. 'min' → logprob: -18.128177642822266
    9. '0' → logprob: -18.128177642822266
    10. '   ' → logprob: -18.253177642822266

Token 180: '(amount' (ID: 60193)
  Prédit: '(amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(amount' → logprob: -0.0024763736873865128
    2. 'amount' → logprob: -6.002476215362549
    3. ' amounts' → logprob: -14.752476692199707
    4. '(max' → logprob: -15.752476692199707
    5. '_amount' → logprob: -16.37747573852539
    6. '(a' → logprob: -17.00247573852539
    7. '(length' → logprob: -17.00247573852539
    8. '(am' → logprob: -17.37747573852539
    9. 'possible' → logprob: -17.75247573852539
    10. '(' → logprob: -18.12747573852539

Token 181: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002993544621858746
    2. 'unts' → logprob: -9.000299453735352
    3. 'ount' → logprob: -9.500299453735352
    4. 'ents' → logprob: -10.250299453735352
    5. ' amounts' → logprob: -10.625299453735352
    6. 'nts' → logprob: -10.750299453735352
    7. 'ants' → logprob: -11.875299453735352
    8. 'ts' → logprob: -12.750299453735352
    9. '(amount' → logprob: -13.000299453735352
    10. 'uts' → logprob: -13.125299453735352

Token 182: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01248575747013092
    2. ')
' → logprob: -4.887485980987549
    3. ')+' → logprob: -5.512485980987549
    4. ' )' → logprob: -7.762485980987549
    5. '+' → logprob: -8.26248550415039
    6. ' +' → logprob: -9.38748550415039
    7. '       ' → logprob: -11.01248550415039
    8. ' )
' → logprob: -11.38748550415039
    9. ',' → logprob: -11.38748550415039
    10. ')*' → logprob: -11.88748550415039

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40989577770233154
    2. ' for' → logprob: -1.4098957777023315
    3. ' answer' → logprob: -3.784895896911621
    4. ' min' → logprob: -4.534895896911621
    5. ' result' → logprob: -4.534895896911621
    6. '
' → logprob: -4.909895896911621
    7. 'for' → logprob: -5.284895896911621
    8. 'answer' → logprob: -5.409895896911621
    9. '        
' → logprob: -5.534895896911621
    10. '   ' → logprob: -5.659895896911621

Token 184: ' #' (ID: 1069)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -1.2864354848861694
    2. ' answer' → logprob: -1.4114354848861694
    3. 'for' → logprob: -2.036435604095459
    4. ' for' → logprob: -2.536435604095459
    5. ' min' → logprob: -3.036435604095459
    6. 'min' → logprob: -3.161435604095459
    7. 'result' → logprob: -3.411435604095459
    8. ' result' → logprob: -3.911435604095459
    9. ' ans' → logprob: -4.411435604095459
    10. 'weights' → logprob: -4.536435604095459

Token 185: ' attempt' (ID: 8704)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6776711344718933
    2. 'for' → logprob: -1.427671194076538
    3. 'answer' → logprob: -2.052671194076538
    4. 'ans' → logprob: -3.802671194076538
    5. 'result' → logprob: -3.802671194076538
    6. 'min' → logprob: -3.927671194076538
    7. ' for' → logprob: -4.427670955657959
    8. 'res' → logprob: -4.677670955657959
    9. ' answer' → logprob: -5.052670955657959
    10. 'left' → logprob: -5.177670955657959

Token 186: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2110795974731445
    2. ' to' → logprob: -1.3360795974731445
    3. ' for' → logprob: -1.5860795974731445
    4. 's' → logprob: -2.8360795974731445
    5. '       ' → logprob: -3.4610795974731445
    6. '<|end|>' → logprob: -3.4610795974731445
    7. '        ' → logprob: -4.3360795974731445
    8. ' s' → logprob: -4.5860795974731445
    9. ' weights' → logprob: -4.5860795974731445
    10. '   ' → logprob: -4.5860795974731445

Token 187: ' find' (ID: 1646)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -1.5089174509048462
    2. ' find' → logprob: -1.5089174509048462
    3. 'import' → logprob: -1.7589174509048462
    4. 'find' → logprob: -2.2589173316955566
    5. ' for' → logprob: -2.7589173316955566
    6. 'for' → logprob: -2.7589173316955566
    7. 'add' → logprob: -3.0089173316955566
    8. ' import' → logprob: -3.5089173316955566
    9. 'min' → logprob: -3.7589173316955566
    10. 'max' → logprob: -5.508917331695557

Token 188: ' smallest' (ID: 42173)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.4692652225494385
    2. ' minimal' → logprob: -1.7192652225494385
    3. ' the' → logprob: -2.0942652225494385
    4. ' additional' → logprob: -2.2192652225494385
    5. ' new' → logprob: -2.7192652225494385
    6. ' a' → logprob: -2.7192652225494385
    7. ' for' → logprob: -3.2192652225494385
    8. 'additional' → logprob: -3.2192652225494385
    9. ' min' → logprob: -3.4692652225494385
    10. 'min' → logprob: -4.094264984130859

Token 189: ' w' (ID: 286)
  Prédit: ' additional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' additional' → logprob: -0.28049707412719727
    2. ' extra' → logprob: -2.4054970741271973
    3. ' new' → logprob: -3.2804970741271973
    4. ' weight' → logprob: -3.6554970741271973
    5. ' increment' → logprob: -3.6554970741271973
    6. 'additional' → logprob: -4.155497074127197
    7. ' missing' → logprob: -5.155497074127197
    8. ' possible' → logprob: -5.405497074127197
    9. ' w' → logprob: -5.405497074127197
    10. 'extra' → logprob: -5.530497074127197

Token 190: '_new' (ID: 13000)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0769604742527008
    2. ' ' → logprob: -4.076960563659668
    3. ' for' → logprob: -4.076960563659668
    4. '=' → logprob: -4.701960563659668
    5. '_' → logprob: -5.576960563659668
    6. ' in' → logprob: -5.701960563659668
    7. '<|end|>' → logprob: -5.951960563659668
    8. '   ' → logprob: -6.076960563659668
    9. 's' → logprob: -6.201960563659668
    10. ' to' → logprob: -6.701960563659668

Token 191: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2380426675081253
    2. '=' → logprob: -2.9880425930023193
    3. '       ' → logprob: -2.9880425930023193
    4. ' in' → logprob: -3.2380425930023193
    5. ' for' → logprob: -3.2380425930023193
    6. '<|end|>' → logprob: -4.363042831420898
    7. ',' → logprob: -4.738042831420898
    8. ' ' → logprob: -5.988042831420898
    9. ':' → logprob: -6.238042831420898
    10. '<|end|>' → logprob: -7.113042831420898

Token 192: ' add' (ID: 1147)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4378102421760559
    2. ' add' → logprob: -1.6878101825714111
    3. 'range' → logprob: -1.9378101825714111
    4. ' measure' → logprob: -5.06281042098999
    5. 'add' → logprob: -5.56281042098999
    6. ' cover' → logprob: -5.81281042098999
    7. ' for' → logprob: -6.56281042098999
    8. '
' → logprob: -6.81281042098999
    9. 'measure' → logprob: -6.81281042098999
    10. ' ' → logprob: -7.18781042098999

Token 193: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6709628105163574
    2. ' for' → logprob: -0.7959628105163574
    3. '<|end|>' → logprob: -4.170962810516357
    4. ',' → logprob: -4.920962810516357
    5. ' to' → logprob: -5.295962810516357
    6. 'for' → logprob: -6.045962810516357
    7. ' in' → logprob: -6.545962810516357
    8. '<|end|>' → logprob: -6.670962810516357
    9. ' =' → logprob: -7.545962810516357
    10. '        ' → logprob: -7.670962810516357

Token 194: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4492596983909607
    2. '<|end|>' → logprob: -2.0742597579956055
    3. ' =' → logprob: -2.4492597579956055
    4. ',' → logprob: -3.4492597579956055
    5. '=' → logprob: -3.4492597579956055
    6. '       ' → logprob: -3.6992597579956055
    7. 'for' → logprob: -4.0742597579956055
    8. '+' → logprob: -4.6992597579956055
    9. ' ' → logprob: -4.8242597579956055
    10. '
' → logprob: -5.3242597579956055

Token 195: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23922187089920044
    2. ' for' → logprob: -1.7392218112945557
    3. 'w' → logprob: -3.3642218112945557
    4. ' w' → logprob: -6.864222049713135
    5. 'found' → logprob: -6.864222049713135
    6. ' found' → logprob: -8.864221572875977
    7. 'new' → logprob: -9.239221572875977
    8. ' new' → logprob: -9.614221572875977
    9. 'possible' → logprob: -9.989221572875977
    10. ' possible' → logprob: -11.739221572875977

Token 196: ' since' (ID: 3630)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2355165034532547
    2. ' for' → logprob: -1.6105165481567383
    3. 'found' → logprob: -5.485516548156738
    4. 'w' → logprob: -5.860516548156738
    5. ' found' → logprob: -7.235516548156738
    6. 'new' → logprob: -7.860516548156738
    7. 'added' → logprob: -7.985516548156738
    8. 'min' → logprob: -8.110516548156738
    9. 'possible' → logprob: -8.235516548156738
    10. ' new' → logprob: -8.485516548156738

Token 197: ' w' (ID: 286)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1287245899438858
    2. 'max' → logprob: -2.1287245750427246
    3. ' possible' → logprob: -8.003725051879883
    4. ' w' → logprob: -8.253725051879883
    5. ' not' → logprob: -8.378725051879883
    6. 'w' → logprob: -8.503725051879883
    7. ' weights' → logprob: -8.753725051879883
    8. 'possible' → logprob: -8.878725051879883
    9. '1' → logprob: -9.253725051879883
    10. ' math' → logprob: -9.628725051879883

Token 198: '_j' (ID: 12021)
  Prédit: '_new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.102501779794693
    2. '_' → logprob: -2.35250186920166
    3. 'e' → logprob: -6.97750186920166
    4. 's' → logprob: -7.85250186920166
    5. '_max' → logprob: -8.85250186920166
    6. 'new' → logprob: -9.22750186920166
    7. '#' → logprob: -9.47750186920166
    8. '=' → logprob: -9.72750186920166
    9. '+' → logprob: -10.10250186920166
    10. ' =' → logprob: -10.10250186920166

Token 199: ' ≤' (ID: 72554)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21294234693050385
    2. ' <=' → logprob: -2.712942361831665
    3. '<=' → logprob: -3.087942361831665
    4. '+' → logprob: -3.962942361831665
    5. '_new' → logprob: -4.337942123413086
    6. ' in' → logprob: -4.712942123413086
    7. ' must' → logprob: -5.587942123413086
    8. 'ust' → logprob: -5.712942123413086
    9. '=' → logprob: -5.962942123413086
    10. ' is' → logprob: -5.962942123413086

Token 200: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.031647689640522
    2. ' max' → logprob: -3.5316476821899414
    3. '100' → logprob: -6.406647682189941
    4. '10' → logprob: -9.531647682189941
    5. '1' → logprob: -10.281647682189941
    6. ' ' → logprob: -10.531647682189941
    7. '50' → logprob: -10.656647682189941
    8. '20' → logprob: -10.656647682189941
    9. '
' → logprob: -11.656647682189941
    10. 'weights' → logprob: -11.781647682189941

Token 201: '10' (ID: 702)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.009233108721673489
    2. '100' → logprob: -5.259232997894287
    3. ' max' → logprob: -5.759232997894287
    4. '50' → logprob: -8.259233474731445
    5. '10' → logprob: -8.509233474731445
    6. '20' → logprob: -8.884233474731445
    7. '1' → logprob: -10.009233474731445
    8. 'sum' → logprob: -10.259233474731445
    9. ' ' → logprob: -10.509233474731445
    10. 'weights' → logprob: -10.634233474731445

Token 202: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3888545632362366
    2. '0' → logprob: -1.5138545036315918
    3. '000' → logprob: -3.013854503631592
    4. '1' → logprob: -3.388854503631592
    5. ':' → logprob: -5.388854503631592
    6. ',' → logprob: -5.388854503631592
    7. ' ' → logprob: -6.013854503631592
    8. ' **' → logprob: -6.138854503631592
    9. '00' → logprob: -6.888854503631592
    10. '10' → logprob: -7.138854503631592

Token 203: '8' (ID: 23)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7900491952896118
    2. '9' → logprob: -0.9150491952896118
    3. '7' → logprob: -2.2900490760803223
    4. '5' → logprob: -3.2900490760803223
    5. '4' → logprob: -5.290049076080322
    6. '8' → logprob: -6.290049076080322
    7. '```' → logprob: -8.91504955291748
    8. '3' → logprob: -9.79004955291748
    9. '10' → logprob: -10.16504955291748
    10. '0' → logprob: -11.16504955291748

Token 204: ' but' (ID: 889)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5060043334960938
    2. '<|end|>' → logprob: -1.8810043334960938
    3. ' for' → logprob: -2.0060043334960938
    4. '       ' → logprob: -3.0060043334960938
    5. ',
' → logprob: -4.006004333496094
    6. '
' → logprob: -4.506004333496094
    7. ' ,' → logprob: -4.756004333496094
    8. '<|end|>' → logprob: -5.381004333496094
    9. ' w' → logprob: -5.756004333496094
    10. 'for' → logprob: -5.756004333496094

Token 205: ' new' (ID: 620)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0933773517608643
    2. ' w' → logprob: -1.2183773517608643
    3. ' max' → logprob: -1.5933773517608643
    4. 'max' → logprob: -1.9683773517608643
    5. ' True' → logprob: -4.593377113342285
    6. '10' → logprob: -5.343377113342285
    7. ' not' → logprob: -5.843377113342285
    8. ' ' → logprob: -5.968377113342285
    9. ' for' → logprob: -6.468377113342285
    10. 'True' → logprob: -6.718377113342285

Token 206: ' weight' (ID: 6049)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.4539523124694824
    2. '_w' → logprob: -1.2039523124694824
    3. '_weights' → logprob: -3.5789523124694824
    4. 'w' → logprob: -4.453952312469482
    5. '_' → logprob: -4.578952312469482
    6. 'weight' → logprob: -5.453952312469482
    7. ' =' → logprob: -6.328952312469482
    8. '_possible' → logprob: -6.703952312469482
    9. ' weights' → logprob: -7.078952312469482
    10. ' weight' → logprob: -7.203952312469482

Token 207: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.2093273252248764
    2. 'can' → logprob: -2.459327220916748
    3. 's' → logprob: -3.584327220916748
    4. ' could' → logprob: -4.334327220916748
    5. ' must' → logprob: -4.959327220916748
    6. 'could' → logprob: -5.084327220916748
    7. ' is' → logprob: -5.209327220916748
    8. ' may' → logprob: -5.459327220916748
    9. '...' → logprob: -5.584327220916748
    10. '<=' → logprob: -5.709327220916748

Token 208: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.38964831829071045
    2. ' not' → logprob: -1.5146483182907104
    3. '<|end|>' → logprob: -3.3896484375
    4. 'be' → logprob: -3.8896484375
    5. 'not' → logprob: -3.8896484375
    6. '#' → logprob: -5.2646484375
    7. ' range' → logprob: -5.5146484375
    8. 'range' → logprob: -5.6396484375
    9. ' only' → logprob: -6.0146484375
    10. ' exceed' → logprob: -6.2646484375

Token 209: ' larger' (ID: 12384)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.8114625215530396
    2. '10' → logprob: -1.5614625215530396
    3. ' up' → logprob: -1.9364625215530396
    4. '1' → logprob: -2.56146240234375
    5. 'max' → logprob: -3.43646240234375
    6. 'larg' → logprob: -3.68646240234375
    7. '100' → logprob: -3.81146240234375
    8. 'greater' → logprob: -4.31146240234375
    9. 'w' → logprob: -4.81146240234375
    10. '0' → logprob: -5.18646240234375

Token 210: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.502408504486084
    2. ',' → logprob: -1.252408504486084
    3. ' for' → logprob: -2.502408504486084
    4. '<|end|>' → logprob: -4.877408504486084
    5. 'w' → logprob: -5.127408504486084
    6. ',
' → logprob: -5.377408504486084
    7. 'for' → logprob: -5.752408504486084
    8. ' w' → logprob: -6.502408504486084
    9. ',w' → logprob: -7.002408504486084
    10. '<|end|>' → logprob: -7.002408504486084

Token 211: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0312374830245972
    2. 'w' → logprob: -1.1562374830245972
    3. ' w' → logprob: -1.5312374830245972
    4. 'for' → logprob: -2.7812376022338867
    5. ' new' → logprob: -3.4062376022338867
    6. 'new' → logprob: -5.031237602233887
    7. ' next' → logprob: -6.031237602233887
    8. 'found' → logprob: -7.031237602233887
    9. 'next' → logprob: -7.156237602233887
    10. ' while' → logprob: -7.281237602233887

Token 212: ' search' (ID: 3684)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.6184253692626953
    2. '       ' → logprob: -1.6184253692626953
    3. 'need' → logprob: -2.9934253692626953
    4. ' can' → logprob: -3.1184253692626953
    5. '   ' → logprob: -3.4934253692626953
    6. 'continue' → logprob: -3.8684253692626953
    7. ' should' → logprob: -4.243425369262695
    8. ' continue' → logprob: -4.493425369262695
    9. '<|end|>' → logprob: -4.743425369262695
    10. '<|end|>' → logprob: -4.993425369262695

Token 213: ' upwards' (ID: 81327)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.605508029460907
    2. 'for' → logprob: -0.980508029460907
    3. 'w' → logprob: -2.8555080890655518
    4. '       ' → logprob: -4.230507850646973
    5. ' for' → logprob: -5.480507850646973
    6. ' from' → logprob: -6.730507850646973
    7. 'up' → logprob: -7.980507850646973
    8. 'range' → logprob: -8.480507850646973
    9. ' w' → logprob: -8.730507850646973
    10. '   ' → logprob: -8.855507850646973

Token 214: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07736724615097046
    2. 'from' → logprob: -3.0773673057556152
    3. ' from' → logprob: -3.5773673057556152
    4. ',' → logprob: -8.077366828918457
    5. ' for' → logprob: -10.577366828918457
    6. '   ' → logprob: -10.827366828918457
    7. '        
' → logprob: -11.202366828918457
    8. 'w' → logprob: -11.702366828918457
    9. 'for' → logprob: -11.827366828918457
    10. '<|end|>' → logprob: -12.077366828918457

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15021708607673645
    2. ' from' → logprob: -2.025217056274414
    3. 'from' → logprob: -5.150217056274414
    4. '        
' → logprob: -7.400217056274414
    5. ' for' → logprob: -7.900217056274414
    6. ',' → logprob: -8.275217056274414
    7. '<|end|>' → logprob: -8.900217056274414
    8. '
' → logprob: -9.025217056274414
    9. ' w' → logprob: -9.775217056274414
    10. ' in' → logprob: -11.025217056274414

Token 216: ' #' (ID: 1069)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9184725284576416
    2. '       ' → logprob: -1.0434725284576416
    3. 'for' → logprob: -2.2934725284576416
    4. 'new' → logprob: -2.6684725284576416
    5. ' for' → logprob: -3.6684725284576416
    6. ' w' → logprob: -3.9184725284576416
    7. 'next' → logprob: -4.5434722900390625
    8. 'candidate' → logprob: -4.6684722900390625
    9. ' new' → logprob: -5.0434722900390625
    10. 'found' → logprob: -7.1684722900390625

Token 217: ' upper' (ID: 13057)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5329626798629761
    2. 'w' → logprob: -1.157962679862976
    3. 'new' → logprob: -2.9079627990722656
    4. 'candidate' → logprob: -4.282962799072266
    5. '       ' → logprob: -4.532962799072266
    6. ' for' → logprob: -5.157962799072266
    7. 'found' → logprob: -5.157962799072266
    8. ' w' → logprob: -6.282962799072266
    9. 'next' → logprob: -6.407962799072266
    10. 'add' → logprob: -6.907962799072266

Token 218: ' bound' (ID: 11608)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.038977958261966705
    2. '_limit' → logprob: -3.538977861404419
    3. 'bound' → logprob: -5.538978099822998
    4. ' bound' → logprob: -6.163978099822998
    5. ' =' → logprob: -6.663978099822998
    6. '_' → logprob: -6.913978099822998
    7. 'limit' → logprob: -7.288978099822998
    8. '=' → logprob: -8.78897762298584
    9. ' limit' → logprob: -10.16397762298584
    10. '_bounds' → logprob: -13.28897762298584

Token 219: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011055837385356426
    2. '=' → logprob: -4.511055946350098
    3. ',' → logprob: -12.511055946350098
    4. '   ' → logprob: -13.386055946350098
    5. '=max' → logprob: -13.761055946350098
    6. ' =
' → logprob: -14.886055946350098
    7. '    ' → logprob: -15.011055946350098
    8. '=int' → logprob: -15.136055946350098
    9. 'import' → logprob: -15.886055946350098
    10. ' ' → logprob: -16.01105499267578

Token 220: ' search' (ID: 3684)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7060425281524658
    2. 'max' → logprob: -1.7060425281524658
    3. ' new' → logprob: -2.206042528152466
    4. ' max' → logprob: -2.331042528152466
    5. ' w' → logprob: -3.081042528152466
    6. 'new' → logprob: -3.206042528152466
    7. '10' → logprob: -3.831042528152466
    8. '100' → logprob: -5.956042289733887
    9. ' ' → logprob: -6.581042289733887
    10. ' possible' → logprob: -6.581042289733887

Token 221: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014169150963425636
    2. '=' → logprob: -4.264169216156006
    3. ',' → logprob: -13.514168739318848
    4. '=max' → logprob: -14.014168739318848
    5. ' for' → logprob: -14.264168739318848
    6. '   ' → logprob: -14.639168739318848
    7. ' is' → logprob: -14.639168739318848
    8. 's' → logprob: -15.014168739318848
    9. 'for' → logprob: -15.139168739318848
    10. 'max' → logprob: -15.389168739318848

Token 222: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.41399243474006653
    2. 'max' → logprob: -1.1639924049377441
    3. '10' → logprob: -3.913992404937744
    4. ' ' → logprob: -5.163992404937744
    5. '100' → logprob: -7.413992404937744
    6. '2' → logprob: -7.913992404937744
    7. '1' → logprob: -10.288992881774902
    8. '   ' → logprob: -10.913992881774902
    9. '(max' → logprob: -11.163992881774902
    10. '
' → logprob: -11.788992881774902

Token 223: ' among' (ID: 6200)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0006023610476404428
    2. '(max' → logprob: -8.500602722167969
    3. '(' → logprob: -8.625602722167969
    4. '_amount' → logprob: -8.875602722167969
    5. '_w' → logprob: -10.250602722167969
    6. 'a' → logprob: -11.000602722167969
    7. 'amount' → logprob: -11.750602722167969
    8. '(a' → logprob: -12.250602722167969
    9. '_weight' → logprob: -13.125602722167969
    10. '_am' → logprob: -13.125602722167969

Token 224: ' amounts' (ID: 22586)
  Prédit: '(amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(amount' → logprob: -0.5073667168617249
    2. '(max' → logprob: -1.38236665725708
    3. 'amount' → logprob: -2.13236665725708
    4. 'max' → logprob: -4.50736665725708
    5. '(weights' → logprob: -4.88236665725708
    6. 'weights' → logprob: -5.63236665725708
    7. '([' → logprob: -5.88236665725708
    8. 'possible' → logprob: -6.00736665725708
    9. '(' → logprob: -8.507367134094238
    10. '   ' → logprob: -8.632367134094238

Token 225: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10771588236093521
    2. '+' → logprob: -2.6077158451080322
    3. '       ' → logprob: -3.6077158451080322
    4. ' *' → logprob: -7.857716083526611
    5. '   ' → logprob: -7.982716083526611
    6. ',' → logprob: -8.357715606689453
    7. '*' → logprob: -9.357715606689453
    8. ' for' → logprob: -10.107715606689453
    9. ')' → logprob: -10.357715606689453
    10. '        ' → logprob: -10.982715606689453

Token 226: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020342979580163956
    2. ' ' → logprob: -4.145342826843262
    3. '10' → logprob: -5.770342826843262
    4. '3' → logprob: -7.020342826843262
    5. '100' → logprob: -8.770342826843262
    6. '   ' → logprob: -10.395342826843262
    7. '
' → logprob: -10.395342826843262
    8. '4' → logprob: -11.395342826843262
    9. '20' → logprob: -11.520342826843262
    10. '5' → logprob: -11.645342826843262

Token 227: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0026085947174578905
    2. '10' → logprob: -6.502608776092529
    3. '3' → logprob: -7.377608776092529
    4. ' ' → logprob: -7.752608776092529
    5. '100' → logprob: -10.252608299255371
    6. '4' → logprob: -12.127608299255371
    7. '
' → logprob: -12.502608299255371
    8. '5' → logprob: -13.002608299255371
    9. '20' → logprob: -13.627608299255371
    10. '50' → logprob: -14.252608299255371

Token 228: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013839418068528175
    2. '
' → logprob: -4.888839244842529
    3. ' for' → logprob: -5.888839244842529
    4. '        
' → logprob: -6.763839244842529
    5. ' +' → logprob: -7.138839244842529
    6. ',' → logprob: -7.513839244842529
    7. '   ' → logprob: -8.138839721679688
    8. '+' → logprob: -9.263839721679688
    9. 'for' → logprob: -9.263839721679688
    10. '  
' → logprob: -9.513839721679688

Token 229: 'heur' (ID: 56347)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8993132710456848
    2. ')' → logprob: -1.27431321144104
    3. ' +' → logprob: -1.27431321144104
    4. ')+' → logprob: -3.52431321144104
    5. '   ' → logprob: -6.524313449859619
    6. ' )' → logprob: -6.649313449859619
    7. ')
' → logprob: -6.774313449859619
    8. '       ' → logprob: -8.649312973022461
    9. '+)' → logprob: -9.274312973022461
    10. '**' → logprob: -9.774312973022461

Token 230: 'istic' (ID: 6207)
  Prédit: 'istic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istic' → logprob: -0.016624731943011284
    2. 'istically' → logprob: -4.266624927520752
    3. 'istics' → logprob: -6.141624927520752
    4. 'ist' → logprob: -8.641624450683594
    5. 'st' → logprob: -9.891624450683594
    6. '#' → logprob: -10.516624450683594
    7. ')' → logprob: -11.266624450683594
    8. 'istical' → logprob: -11.766624450683594
    9. '```' → logprob: -11.766624450683594
    10. '   ' → logprob: -12.016624450683594

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34098756313323975
    2. ')
' → logprob: -1.4659875631332397
    3. '       ' → logprob: -3.2159876823425293
    4. ' +' → logprob: -4.840987682342529
    5. '   ' → logprob: -5.340987682342529
    6. ' )' → logprob: -6.340987682342529
    7. ' )
' → logprob: -6.840987682342529
    8. '+' → logprob: -7.340987682342529
    9. '
' → logprob: -7.840987682342529
    10. ')+' → logprob: -8.215987205505371

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06340519338846207
    2. ' for' → logprob: -2.9384052753448486
    3. '
' → logprob: -5.0634050369262695
    4. 'for' → logprob: -7.3134050369262695
    5. '        
' → logprob: -7.4384050369262695
    6. ',' → logprob: -7.5634050369262695
    7. '<|end|>' → logprob: -8.31340503692627
    8. ')' → logprob: -10.43840503692627
    9. '   ' → logprob: -10.93840503692627
    10. ',
' → logprob: -11.18840503692627

Token 233: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8515619039535522
    2. 'for' → logprob: -1.2265619039535522
    3. ' for' → logprob: -1.3515619039535522
    4. '
' → logprob: -4.726562023162842
    5. 'w' → logprob: -5.226562023162842
    6. '        
' → logprob: -6.351562023162842
    7. 'search' → logprob: -6.601562023162842
    8. '```' → logprob: -6.726562023162842
    9. 'new' → logprob: -7.851562023162842
    10. 'upper' → logprob: -8.101561546325684

Token 234: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06003756448626518
    2. ' for' → logprob: -3.935037612915039
    3. 'found' → logprob: -3.935037612915039
    4. '       ' → logprob: -4.685037612915039
    5. 'new' → logprob: -5.935037612915039
    6. 'def' → logprob: -6.185037612915039
    7. 'added' → logprob: -6.185037612915039
    8. 'w' → logprob: -6.685037612915039
    9. 'answer' → logprob: -8.310037612915039
    10. 'min' → logprob: -8.310037612915039

Token 235: ' speed' (ID: 7733)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.3172908127307892
    2. ' add' → logprob: -1.9422907829284668
    3. '_add' → logprob: -3.317290782928467
    4. ' search' → logprob: -3.567290782928467
    5. 'find' → logprob: -3.692290782928467
    6. ' range' → logprob: -4.692290782928467
    7. '_find' → logprob: -4.942290782928467
    8. '_search' → logprob: -5.817290782928467
    9. ' cover' → logprob: -6.067290782928467
    10. 'add' → logprob: -6.192290782928467

Token 236: ' up' (ID: 869)
  Prédit: ' up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.061880286782979965
    2. '       ' → logprob: -3.311880350112915
    3. 'up' → logprob: -3.936880350112915
    4. '        ' → logprob: -6.311880111694336
    5. ' ' → logprob: -7.561880111694336
    6. '   ' → logprob: -7.686880111694336
    7. '    ' → logprob: -8.061880111694336
    8. '           ' → logprob: -8.686880111694336
    9. ' ' → logprob: -8.811880111694336
    10. 'u' → logprob: -9.186880111694336

Token 237: ' we' (ID: 581)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1050221920013428
    2. ' the' → logprob: -1.2300221920013428
    3. 'search' → logprob: -1.3550221920013428
    4. ' search' → logprob: -3.6050221920013428
    5. 'for' → logprob: -4.355022430419922
    6. ' searching' → logprob: -4.355022430419922
    7. 'possible' → logprob: -4.355022430419922
    8. 'this' → logprob: -4.730022430419922
    9. ' this' → logprob: -4.730022430419922
    10. 'range' → logprob: -4.980022430419922

Token 238: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.0263926982879639
    2. '   ' → logprob: -1.4013926982879639
    3. '       ' → logprob: -2.276392698287964
    4. ' for' → logprob: -3.151392698287964
    5. ' search' → logprob: -3.276392698287964
    6. 'import' → logprob: -3.526392698287964
    7. ' try' → logprob: -3.526392698287964
    8. '    ' → logprob: -4.026392936706543
    9. ' use' → logprob: -4.151392936706543
    10. ' may' → logprob: -4.526392936706543

Token 239: ' try' (ID: 2075)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9139518737792969
    2. ' use' → logprob: -1.5389518737792969
    3. ' import' → logprob: -1.7889518737792969
    4. 'try' → logprob: -3.163951873779297
    5. ' try' → logprob: -3.163951873779297
    6. 'use' → logprob: -3.788951873779297
    7. 'binary' → logprob: -4.288951873779297
    8. 'from' → logprob: -4.413951873779297
    9. ' binary' → logprob: -4.413951873779297
    10. ' implement' → logprob: -4.788951873779297

Token 240: ' only' (ID: 1606)
  Prédit: ' adding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adding' → logprob: -1.668046236038208
    2. ' from' → logprob: -1.793046236038208
    3. ' w' → logprob: -2.168046236038208
    4. 'from' → logprob: -2.293046236038208
    5. ' binary' → logprob: -2.293046236038208
    6. ' for' → logprob: -3.418046236038208
    7. ' a' → logprob: -3.543046236038208
    8. 'b' → logprob: -3.543046236038208
    9. 'import' → logprob: -3.793046236038208
    10. '       ' → logprob: -3.793046236038208

Token 241: ' amounts' (ID: 22586)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -1.1677535772323608
    2. 'multip' → logprob: -1.7927535772323608
    3. 'possible' → logprob: -2.1677536964416504
    4. 'range' → logprob: -2.4177536964416504
    5. 'weights' → logprob: -2.6677536964416504
    6. 'for' → logprob: -2.7927536964416504
    7. 'w' → logprob: -2.7927536964416504
    8. 'odd' → logprob: -3.4177536964416504
    9. 'powers' → logprob: -3.5427536964416504
    10. 'from' → logprob: -3.7927536964416504

Token 242: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2754650413990021
    2. '   ' → logprob: -1.9004650115966797
    3. '_' → logprob: -3.9004650115966797
    4. '
' → logprob: -4.40046501159668
    5. '        
' → logprob: -4.40046501159668
    6. ' for' → logprob: -4.52546501159668
    7. 'for' → logprob: -5.27546501159668
    8. ' _' → logprob: -5.52546501159668
    9. '    
' → logprob: -6.15046501159668
    10. ',' → logprob: -6.40046501159668

Token 243: ' fail' (ID: 7111)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.18387548625469208
    2. 'are' → logprob: -2.058875560760498
    3. 'not' → logprob: -3.683875560760498
    4. ' not' → logprob: -4.558875560760498
    5. ' aren't' → logprob: -5.683875560760498
    6. ' aren' → logprob: -8.43387508392334
    7. 'cannot' → logprob: -8.55887508392334
    8. ' cannot' → logprob: -8.68387508392334
    9. ' need' → logprob: -9.05887508392334
    10. '   ' → logprob: -9.18387508392334

Token 244: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011692758649587631
    2. '        
' → logprob: -5.011692523956299
    3. '_failed' → logprob: -6.761692523956299
    4. ',' → logprob: -6.761692523956299
    5. 'failed' → logprob: -7.761692523956299
    6. '_fail' → logprob: -8.761693000793457
    7. ' for' → logprob: -8.886693000793457
    8. '_' → logprob: -8.886693000793457
    9. ' to' → logprob: -8.886693000793457
    10. '        ' → logprob: -9.011693000793457

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032593535725027323
    2. '        
' → logprob: -5.878259181976318
    3. '
' → logprob: -8.378259658813477
    4. '<|end|>' → logprob: -9.253259658813477
    5. ',' → logprob: -9.753259658813477
    6. '       
' → logprob: -11.753259658813477
    7. '  
' → logprob: -12.128259658813477
    8. ' for' → logprob: -12.503259658813477
    9. '   ' → logprob: -12.628259658813477
    10. '```' → logprob: -12.878259658813477

Token 246: ' fail' (ID: 7111)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02656988613307476
    2. 'fail' (adapté à ' fail') → logprob: -3.9015698432922363
    3. 'failed' → logprob: -6.401569843292236
    4. 'fails' → logprob: -6.401569843292236
    5. ' fail' → logprob: -7.026569843292236
    6. 'missing' → logprob: -7.776569843292236
    7. '        
' → logprob: -8.151570320129395
    8. 'f' → logprob: -8.526570320129395
    9. ' failed' → logprob: -9.151570320129395
    10. ' missing' → logprob: -9.401570320129395

Token 247: '_amount' (ID: 29145)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6770429611206055
    2. 'ed' → logprob: -1.5520429611206055
    3. 'ing' → logprob: -2.0520429611206055
    4. ' =' → logprob: -2.1770429611206055
    5. '_amount' → logprob: -3.5520429611206055
    6. 'ures' → logprob: -5.0520429611206055
    7. 'ure' → logprob: -6.9270429611206055
    8. '=' → logprob: -7.1770429611206055
    9. '_weights' → logprob: -8.302042961120605
    10. 'd' → logprob: -8.427042961120605

Token 248: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00023441045777872205
    2. ' =' → logprob: -8.750234603881836
    3. '=' → logprob: -9.500234603881836
    4. 'ed' → logprob: -14.750234603881836
    5. '=s' → logprob: -15.125234603881836
    6. 'ures' → logprob: -15.375234603881836
    7. 'ing' → logprob: -16.000234603881836
    8. '=set' → logprob: -17.000234603881836
    9. 'S' → logprob: -17.375234603881836
    10. 'eds' → logprob: -17.625234603881836

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868732452392578
    2. ' =' → logprob: -1.1368732452392578
    3. '=[]' → logprob: -14.136873245239258
    4. '=[' → logprob: -14.511873245239258
    5. ' =[' → logprob: -15.011873245239258
    6. '=set' → logprob: -15.136873245239258
    7. '=

' → logprob: -15.636873245239258
    8. '＝' → logprob: -15.886873245239258
    9. '[' → logprob: -17.136873245239258
    10. '_' → logprob: -17.261873245239258

Token 250: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.049328044056892395
    2. ' [' → logprob: -3.299328088760376
    3. '[' → logprob: -4.549327850341797
    4. '{' → logprob: -7.799327850341797
    5. '[x' → logprob: -9.049327850341797
    6. '   ' → logprob: -10.174327850341797
    7. '[i' → logprob: -10.549327850341797
    8. 'set' → logprob: -11.424327850341797
    9. '[list' → logprob: -11.674327850341797
    10. '[e' → logprob: -12.549327850341797

Token 251: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3856492842023727e-06
    2. ' a' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.500001907348633
    4. 'x' → logprob: -16.500001907348633
    5. '           ' → logprob: -18.500001907348633
    6. '       ' → logprob: -18.625001907348633
    7. '	a' → logprob: -18.750001907348633
    8. '               ' → logprob: -19.250001907348633
    9. 'i' → logprob: -19.625001907348633
    10. 'amount' → logprob: -20.125001907348633

Token 252: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12693199515342712
    2. 'for' → logprob: -2.12693190574646
    3. '	for' → logprob: -13.501932144165039
    4. '           ' → logprob: -14.251932144165039
    5. '       ' → logprob: -14.626932144165039
    6. '   ' → logprob: -15.001932144165039
    7. '        ' → logprob: -15.376932144165039
    8. ' ' → logprob: -15.876932144165039
    9. ' not' → logprob: -16.00193214416504
    10. '
' → logprob: -16.12693214416504

Token 253: ' a' (ID: 261)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.037720564752817154
    2. ' amounts' → logprob: -3.4127206802368164
    3. 'a' → logprob: -5.537720680236816
    4. ' amount' → logprob: -9.537720680236816
    5. ' a' → logprob: -9.787720680236816
    6. 'am' → logprob: -13.787720680236816
    7. 'possible' → logprob: -14.662720680236816
    8. ' in' → logprob: -14.912720680236816
    9. '_amount' → logprob: -15.162720680236816
    10. 'in' → logprob: -15.287720680236816

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.009108066558838
    2. 'amount' → logprob: -1.009108066558838
    3. ' amounts' → logprob: -1.509108066558838
    4. 'in' → logprob: -3.009108066558838
    5. ' amount' → logprob: -8.25910758972168
    6. 'range' → logprob: -9.38410758972168
    7. 'possible' → logprob: -10.38410758972168
    8. 'a' → logprob: -11.38410758972168
    9. '_amount' → logprob: -11.63410758972168
    10. 'ount' → logprob: -11.63410758972168

Token 255: ' amounts' (ID: 22586)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.005234121344983578
    2. ' amounts' → logprob: -5.255234241485596
    3. ' amount' → logprob: -16.005233764648438
    4. 'possible' → logprob: -16.380233764648438
    5. 'am' → logprob: -16.505233764648438
    6. '_amount' → logprob: -17.505233764648438
    7. 'Amounts' → logprob: -18.380233764648438
    8. 'attempt' → logprob: -18.755233764648438
    9. '(amount' → logprob: -19.005233764648438
    10. '   ' → logprob: -19.255233764648438

Token 256: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0067154900170862675
    2. 'if' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.756715774536133
    4. '       ' → logprob: -17.881715774536133
    5. ' ' → logprob: -18.006715774536133
    6. '           ' → logprob: -18.006715774536133
    7. '        ' → logprob: -18.756715774536133
    8. ' not' → logprob: -18.881715774536133
    9. '	if' → logprob: -18.881715774536133
    10. '    ' → logprob: -19.131715774536133

Token 257: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004078997299075127
    2. ' a' → logprob: -5.5040788650512695
    3. 'not' → logprob: -15.12907886505127
    4. '   ' → logprob: -15.87907886505127
    5. ' not' → logprob: -16.004079818725586
    6. ' ' → logprob: -17.004079818725586
    7. '	a' → logprob: -17.754079818725586
    8. '    ' → logprob: -18.129079818725586
    9. '  ' → logprob: -19.254079818725586
    10. '(a' → logprob: -19.504079818725586

Token 258: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.008615161292254925
    2. 'not' → logprob: -4.758615016937256
    3. ')' → logprob: -15.383615493774414
    4. ' ' → logprob: -15.758615493774414
    5. '
' → logprob: -16.633615493774414
    6. ' no' → logprob: -17.258615493774414
    7. '	not' → logprob: -17.258615493774414
    8. '<|end|>' → logprob: -17.383615493774414
    9. ']' → logprob: -17.508615493774414
    10. 'Not' → logprob: -17.758615493774414

Token 259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02932238020002842
    2. 'in' → logprob: -3.654322385787964
    3. 'possible' → logprob: -5.904322147369385
    4. ' possible' → logprob: -8.279322624206543
    5. '_possible' → logprob: -10.904322624206543
    6. 'Possible' → logprob: -12.404322624206543
    7. '   ' → logprob: -12.529322624206543
    8. '=' → logprob: -13.029322624206543
    9. ')' → logprob: -13.404322624206543
    10. 'from' → logprob: -13.779322624206543

Token 260: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.07889529317617416
    2. ' possible' → logprob: -2.578895330429077
    3. 'poss' → logprob: -12.703895568847656
    4. '   ' → logprob: -14.203895568847656
    5. ' posible' → logprob: -14.578895568847656
    6. ' ' → logprob: -14.953895568847656
    7. '_possible' → logprob: -14.953895568847656
    8. 'Possible' → logprob: -15.453895568847656
    9. ' possibles' → logprob: -15.953895568847656
    10. 'pos' → logprob: -16.578895568847656

Token 261: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001676852349191904
    2. ']
' → logprob: -6.5016770362854
    3. ' ]' → logprob: -9.251676559448242
    4. '       ' → logprob: -9.626676559448242
    5. ']
' → logprob: -12.001676559448242
    6. ']

' → logprob: -12.626676559448242
    7. '   ' → logprob: -13.626676559448242
    8. ')]' → logprob: -14.501676559448242
    9. ' ]
' → logprob: -14.751676559448242
    10. '()]' → logprob: -15.126676559448242

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22254104912281036
    2. '
' → logprob: -1.847541093826294
    3. '        
' → logprob: -3.722541093826294
    4. ' for' → logprob: -4.722540855407715
    5. '<|end|>' → logprob: -5.722540855407715
    6. ',' → logprob: -6.847540855407715
    7. ' 
' → logprob: -7.222540855407715
    8. 'for' → logprob: -7.597540855407715
    9. '  
' → logprob: -7.847540855407715
    10. '    
' → logprob: -7.847540855407715

Token 263: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9373028874397278
    2. '       ' → logprob: -1.062302827835083
    3. ' for' → logprob: -2.187302827835083
    4. 'w' → logprob: -2.437302827835083
    5. 'candidate' → logprob: -4.062303066253662
    6. 'new' → logprob: -4.187303066253662
    7. ' w' → logprob: -4.937303066253662
    8. 'next' → logprob: -5.062303066253662
    9. '
' → logprob: -5.687303066253662
    10. ' new' → logprob: -5.812303066253662

Token 264: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.325216144323349
    2. 'new' → logprob: -2.200216054916382
    3. 'w' → logprob: -2.325216054916382
    4. 'candidate' → logprob: -3.200216054916382
    5. 'found' → logprob: -5.075216293334961
    6. 'left' → logprob: -5.575216293334961
    7. 'added' → logprob: -5.700216293334961
    8. 'low' → logprob: -5.950216293334961
    9. 'min' → logprob: -6.200216293334961
    10. 'add' → logprob: -6.200216293334961

Token 265: ' find' (ID: 1646)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.5668963193893433
    2. 'range' → logprob: -1.8168963193893433
    3. ' find' → logprob: -2.316896438598633
    4. 'find' → logprob: -2.441896438598633
    5. ' add' → logprob: -2.441896438598633
    6. ' try' → logprob: -2.816896438598633
    7. 'try' → logprob: -2.941896438598633
    8. 'search' → logprob: -3.316896438598633
    9. 'add' → logprob: -3.316896438598633
    10. 'w' → logprob: -3.691896438598633

Token 266: ' minimal' (ID: 19957)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.718601405620575
    2. 'w' → logprob: -0.843601405620575
    3. ' new' → logprob: -2.7186014652252197
    4. 'new' → logprob: -4.843601226806641
    5. ' next' → logprob: -5.718601226806641
    6. ' candidate' → logprob: -6.593601226806641
    7. ' the' → logprob: -6.718601226806641
    8. 'candidate' → logprob: -7.468601226806641
    9. ' minimal' → logprob: -7.843601226806641
    10. 'next' → logprob: -8.09360122680664

Token 267: ' new' (ID: 620)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4297369718551636
    2. ' w' → logprob: -1.9297369718551636
    3. ' new' → logprob: -2.054737091064453
    4. 'new' → logprob: -2.804737091064453
    5. '_new' → logprob: -4.929737091064453
    6. '_w' → logprob: -5.804737091064453
    7. '   ' → logprob: -7.179737091064453
    8. ' candidate' → logprob: -7.304737091064453
    9. 'candidate' → logprob: -7.429737091064453
    10. '_candidate' → logprob: -7.554737091064453

Token 268: ' weight' (ID: 6049)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.056587815284729004
    2. ' weight' → logprob: -4.0565876960754395
    3. 'weight' → logprob: -4.3065876960754395
    4. '_w' → logprob: -4.3065876960754395
    5. 'w' → logprob: -4.8065876960754395
    6. ' w' → logprob: -7.1815876960754395
    7. '```' → logprob: -7.6815876960754395
    8. '   ' → logprob: -8.306588172912598
    9. '_new' → logprob: -8.306588172912598
    10. 'def' → logprob: -8.806588172912598

Token 269: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3143412470817566
    2. ',' → logprob: -1.8143413066864014
    3. ' for' → logprob: -2.4393413066864014
    4. ' w' → logprob: -4.439341068267822
    5. 'for' → logprob: -6.564341068267822
    6. 'w' → logprob: -6.814341068267822
    7. '   ' → logprob: -7.189341068267822
    8. ':' → logprob: -7.314341068267822
    9. ' next' → logprob: -7.564341068267822
    10. '<|end|>' → logprob: -7.564341068267822

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.680006742477417
    2. 'for' → logprob: -1.555006742477417
    3. 'w' → logprob: -2.430006742477417
    4. ' for' → logprob: -2.680006742477417
    5. 'new' → logprob: -2.680006742477417
    6. ' new' → logprob: -4.180006980895996
    7. 'next' → logprob: -4.305006980895996
    8. ' w' → logprob: -4.805006980895996
    9. 'weight' → logprob: -4.930006980895996
    10. 'candidate' → logprob: -5.180006980895996

Token 271: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5037556886672974
    2. 'new' → logprob: -1.2537556886672974
    3. 'w' → logprob: -2.253755569458008
    4. 'candidate' → logprob: -5.503755569458008
    5. 'def' → logprob: -7.878755569458008
    6. 'found' → logprob: -8.128755569458008
    7. ' for' → logprob: -8.628755569458008
    8. 'added' → logprob: -9.378755569458008
    9. '```' → logprob: -9.878755569458008
    10. ' new' → logprob: -10.003755569458008

Token 272: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4145396947860718
    2. 'new' → logprob: -1.2895396947860718
    3. 'w' → logprob: -3.6645398139953613
    4. 'candidate' → logprob: -4.164539813995361
    5. 'left' → logprob: -5.039539813995361
    6. ' for' → logprob: -5.414539813995361
    7. ' new' → logprob: -5.914539813995361
    8. 'low' → logprob: -5.914539813995361
    9. 'min' → logprob: -6.039539813995361
    10. 'def' → logprob: -6.664539813995361

Token 273: ' test' (ID: 1746)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8499891757965088
    2. ' try' → logprob: -0.9749891757965088
    3. ' for' → logprob: -1.8499891757965088
    4. 'for' → logprob: -4.09998893737793
    5. '   ' → logprob: -5.22498893737793
    6. ' #' → logprob: -5.22498893737793
    7. ' search' → logprob: -6.09998893737793
    8. '#' → logprob: -6.59998893737793
    9. 'try' → logprob: -6.84998893737793
    10. ' can' → logprob: -6.97498893737793

Token 274: ' candidate' (ID: 17098)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.8591753840446472
    2. ' w' → logprob: -0.8591753840446472
    3. ' for' → logprob: -2.234175443649292
    4. ' new' → logprob: -3.734175443649292
    5. 'for' → logprob: -4.234175205230713
    6. ' candidate' → logprob: -5.859175205230713
    7. 'new' → logprob: -6.359175205230713
    8. 'candidate' → logprob: -7.234175205230713
    9. ' next' → logprob: -7.359175205230713
    10. ' from' → logprob: -7.609175205230713

Token 275: ' weights' (ID: 28460)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8238148093223572
    2. '_weight' → logprob: -0.8238148093223572
    3. '_w' → logprob: -2.323814868927002
    4. '=' → logprob: -4.073814868927002
    5. 'w' → logprob: -5.198814868927002
    6. '_weights' → logprob: -6.573814868927002
    7. 'weight' → logprob: -8.073814392089844
    8. '_candidate' → logprob: -9.323814392089844
    9. '   ' → logprob: -9.948814392089844
    10. '_' → logprob: -9.948814392089844

Token 276: ' starting' (ID: 8601)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6381136775016785
    2. ' w' → logprob: -1.1381137371063232
    3. ' from' → logprob: -3.0131137371063232
    4. 'w' → logprob: -3.2631137371063232
    5. ' in' → logprob: -3.6381137371063232
    6. ' =' → logprob: -4.013113498687744
    7. 'for' → logprob: -5.013113498687744
    8. '<|end|>' → logprob: -5.888113498687744
    9. 'from' → logprob: -6.013113498687744
    10. ',' → logprob: -6.263113498687744

Token 277: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.004207444377243519
    2. ' from' → logprob: -5.504207611083984
    3. 'w' → logprob: -9.504207611083984
    4. '=' → logprob: -10.254207611083984
    5. 'at' → logprob: -11.504207611083984
    6. '1' → logprob: -12.629207611083984
    7. ' at' → logprob: -12.879207611083984
    8. 'with' → logprob: -13.629207611083984
    9. '	from' → logprob: -14.254207611083984
    10. ' w' → logprob: -14.379207611083984

Token 278: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009128324687480927
    2. 'max' → logprob: -4.759128093719482
    3. 'min' → logprob: -8.63412857055664
    4. 'fail' → logprob: -8.75912857055664
    5. ' ' → logprob: -9.38412857055664
    6. ' max' → logprob: -10.50912857055664
    7. 'possible' → logprob: -10.75912857055664
    8. '(max' → logprob: -10.88412857055664
    9. '   ' → logprob: -12.00912857055664
    10. '(' → logprob: -12.63412857055664

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014675921760499477
    2. 'max' → logprob: -4.389676094055176
    3. 'fail' → logprob: -6.764676094055176
    4. 'min' → logprob: -7.014676094055176
    5. ' ' → logprob: -10.389676094055176
    6. 'possible' → logprob: -10.764676094055176
    7. '(max' → logprob: -10.889676094055176
    8. ' max' → logprob: -11.139676094055176
    9. '(min' → logprob: -12.514676094055176
    10. '
' → logprob: -13.139676094055176

Token 280: ' upwards' (ID: 81327)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.349398136138916
    2. '<|end|>' → logprob: -1.349398136138916
    3. '   ' → logprob: -2.099398136138916
    4. ',' → logprob: -2.224398136138916
    5. ' upwards' → logprob: -2.599398136138916
    6. '<|end|>' → logprob: -3.099398136138916
    7. ' to' → logprob: -3.099398136138916
    8. ':' → logprob: -4.099398136138916
    9. ' up' → logprob: -4.099398136138916
    10. ')' → logprob: -4.474398136138916

Token 281: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00495907012373209
    2. ',' → logprob: -6.5049591064453125
    3. ' for' → logprob: -6.7549591064453125
    4. '   ' → logprob: -7.5049591064453125
    5. '<|end|>' → logprob: -8.004959106445312
    6. '1' → logprob: -8.504959106445312
    7. ' to' → logprob: -8.629959106445312
    8. '        
' → logprob: -8.754959106445312
    9. 'for' → logprob: -9.004959106445312
    10. ' w' → logprob: -9.129959106445312

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004488158039748669
    2. '   ' → logprob: -6.004487991333008
    3. '<|end|>' → logprob: -7.254487991333008
    4. ',' → logprob: -7.379487991333008
    5. ' for' → logprob: -8.754487991333008
    6. '        
' → logprob: -9.629487991333008
    7. '<|end|>' → logprob: -9.629487991333008
    8. ')' → logprob: -9.879487991333008
    9. ':' → logprob: -10.379487991333008
    10. 'for' → logprob: -10.504487991333008

Token 283: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006948141381144524
    2. ' for' → logprob: -5.506947994232178
    3. 'w' → logprob: -7.131947994232178
    4. 'for' → logprob: -7.256947994232178
    5. ' w' → logprob: -7.631947994232178
    6. 'candidate' → logprob: -7.756947994232178
    7. 'weight' → logprob: -8.631948471069336
    8. ' candidate' → logprob: -9.381948471069336
    9. '   ' → logprob: -10.006948471069336
    10. ' weight' → logprob: -10.131948471069336

Token 284: ' Testing' (ID: 42477)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.338900089263916
    2. ' for' → logprob: -1.588900089263916
    3. 'w' → logprob: -3.463900089263916
    4. 'for' → logprob: -3.838900089263916
    5. ' w' → logprob: -4.088900089263916
    6. '1' → logprob: -5.463900089263916
    7. '   ' → logprob: -5.963900089263916
    8. 'candidate' → logprob: -5.963900089263916
    9. ' candidate' → logprob: -6.213900089263916
    10. 'weight' → logprob: -8.338899612426758

Token 285: ' bigger' (ID: 17791)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.3891315460205078
    2. ' w' → logprob: -1.3891315460205078
    3. ' candidate' → logprob: -1.3891315460205078
    4. 'candidate' → logprob: -1.5141315460205078
    5. ' for' → logprob: -3.889131546020508
    6. 'for' → logprob: -5.389131546020508
    7. ' new' → logprob: -6.389131546020508
    8. ',' → logprob: -6.764131546020508
    9. 'weight' → logprob: -6.889131546020508
    10. ' weight' → logprob: -7.139131546020508

Token 286: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.9660773277282715
    2. 'w' → logprob: -1.2160773277282715
    3. ' weights' → logprob: -2.4660773277282715
    4. ' w' → logprob: -2.7160773277282715
    5. ' and' → logprob: -3.3410773277282715
    6. ' ' → logprob: -3.4660773277282715
    7. 'weight' → logprob: -3.5910773277282715
    8. 'and' → logprob: -4.3410773277282715
    9. ' ,' → logprob: -4.4660773277282715
    10. '<|end|>' → logprob: -4.8410773277282715

Token 287: ' won't' (ID: 14219)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.310197114944458
    2. '<|end|>' → logprob: -1.810197114944458
    3. '<|end|>' → logprob: -2.060197114944458
    4. 'for' → logprob: -2.060197114944458
    5. '   ' → logprob: -2.435197114944458
    6. '       ' → logprob: -2.810197114944458
    7. ' =' → logprob: -3.435197114944458
    8. ',' → logprob: -3.810197114944458
    9. '=' → logprob: -3.810197114944458
    10. ' +=' → logprob: -3.935197114944458

Token 288: ' help' (ID: 1652)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.04888824373483658
    2. ' help' → logprob: -3.6738882064819336
    3. ' exceed' → logprob: -5.673888206481934
    4. ' continue' → logprob: -5.923888206481934
    5. ' not' → logprob: -6.173888206481934
    6. ' break' → logprob: -6.173888206481934
    7. ' possible' → logprob: -6.548888206481934
    8. 'be' → logprob: -6.673888206481934
    9. ' ' → logprob: -6.673888206481934
    10. ' stop' → logprob: -6.798888206481934

Token 289: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42566370964050293
    2. ' for' → logprob: -1.800663709640503
    3. '   ' → logprob: -2.925663709640503
    4. ',' → logprob: -3.425663709640503
    5. 'for' → logprob: -4.050663948059082
    6. ')' → logprob: -4.175663948059082
    7. ':' → logprob: -4.425663948059082
    8. '<|end|>' → logprob: -4.425663948059082
    9. '        ' → logprob: -5.300663948059082
    10. ' if' → logprob: -5.425663948059082

Token 290: ' no' (ID: 860)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -1.0691921710968018
    2. 'w' → logprob: -1.3191921710968018
    3. 'max' → logprob: -1.8191921710968018
    4. 'fail' → logprob: -2.0691921710968018
    5. ' candidate' → logprob: -3.5691921710968018
    6. ' max' → logprob: -4.194191932678223
    7. ' fail' → logprob: -4.319191932678223
    8. ' w' → logprob: -4.569191932678223
    9. 'weight' → logprob: -4.819191932678223
    10. 'possible' → logprob: -5.319191932678223

Token 291: ' solution' (ID: 7578)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -1.2148311138153076
    2. 'w' → logprob: -1.4648311138153076
    3. ' candidate' → logprob: -1.4648311138153076
    4. ' new' → logprob: -2.9648311138153076
    5. 'fail' → logprob: -3.4648311138153076
    6. ' break' → logprob: -3.5898311138153076
    7. ' fail' → logprob: -3.9648311138153076
    8. ' w' → logprob: -4.214831352233887
    9. ' possible' → logprob: -4.464831352233887
    10. 'success' → logprob: -4.714831352233887

Token 292: ' by' (ID: 656)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6799441576004028
    2. '       ' → logprob: -1.0549441576004028
    3. ':' → logprob: -3.5549440383911133
    4. '1' → logprob: -3.8049440383911133
    5. ',' → logprob: -4.179944038391113
    6. '   ' → logprob: -4.304944038391113
    7. ' ' → logprob: -4.304944038391113
    8. ' in' → logprob: -4.429944038391113
    9. 'for' → logprob: -5.054944038391113
    10. ':
' → logprob: -5.179944038391113

Token 293: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.015261816792190075
    2. ' max' → logprob: -4.390261650085449
    3. 'w' → logprob: -7.140261650085449
    4. '10' → logprob: -7.140261650085449
    5. '100' → logprob: -7.765261650085449
    6. ' ' → logprob: -9.14026165008545
    7. 'candidate' → logprob: -9.14026165008545
    8. 'weight' → logprob: -9.39026165008545
    9. '2' → logprob: -9.39026165008545
    10. 'weights' → logprob: -9.76526165008545

Token 294: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.6403242945671082
    2. '_amount' → logprob: -0.8903242945671082
    3. '_fail' → logprob: -3.890324354171753
    4. '_' → logprob: -4.390324115753174
    5. '(' → logprob: -4.890324115753174
    6. '_weight' → logprob: -5.015324115753174
    7. '_possible' → logprob: -5.515324115753174
    8. 'fail' → logprob: -5.890324115753174
    9. '_am' → logprob: -6.390324115753174
    10. 'amount' → logprob: -7.140324115753174

Token 295: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2050134837627411
    2. ' +' → logprob: -1.7050135135650635
    3. ':' → logprob: -6.580013275146484
    4. '       ' → logprob: -7.330013275146484
    5. '+
' → logprob: -7.830013275146484
    6. '   ' → logprob: -8.080013275146484
    7. ':
' → logprob: -8.455013275146484
    8. '1' → logprob: -8.955013275146484
    9. ',' → logprob: -9.705013275146484
    10. ' +
' → logprob: -9.830013275146484

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012475410767365247
    2. ' ' → logprob: -9.00012493133545
    3. '3' → logprob: -15.00012493133545
    4. '*' → logprob: -15.50012493133545
    5. '
' → logprob: -15.50012493133545
    6. '10' → logprob: -16.000123977661133
    7. '

' → logprob: -16.125123977661133
    8. '   ' → logprob: -16.250123977661133
    9. '  ' → logprob: -16.875123977661133
    10. '4' → logprob: -17.187623977661133

Token 297: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032592326402664185
    2. ' for' → logprob: -4.407592296600342
    3. '
' → logprob: -5.032592296600342
    4. '   ' → logprob: -5.532592296600342
    5. 'for' → logprob: -5.907592296600342
    6. '1' → logprob: -6.657592296600342
    7. ':' → logprob: -6.782592296600342
    8. ',' → logprob: -7.032592296600342
    9. '        
' → logprob: -7.157592296600342
    10. '\n' → logprob: -8.0325927734375

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02243579365313053
    2. ' for' → logprob: -4.022435665130615
    3. ',' → logprob: -6.772435665130615
    4. 'for' → logprob: -7.022435665130615
    5. '        
' → logprob: -7.272435665130615
    6. '   ' → logprob: -7.772435665130615
    7. '
' → logprob: -8.147436141967773
    8. '<|end|>' → logprob: -8.522436141967773
    9. ':' → logprob: -9.397436141967773
    10. ')' → logprob: -9.772436141967773

Token 299: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.626007080078125
    2. ' for' → logprob: -1.126007080078125
    3. '       ' → logprob: -2.001007080078125
    4. 'candidate' → logprob: -5.876007080078125
    5. '```' → logprob: -7.501007080078125
    6. 'max' → logprob: -7.501007080078125
    7. 'limit' → logprob: -7.751007080078125
    8. '   ' → logprob: -7.876007080078125
    9. '
' → logprob: -8.001007080078125
    10. ' candidate' → logprob: -9.001007080078125

Token 300: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010744654573500156
    2. 'candidate' → logprob: -5.260744571685791
    3. ' for' → logprob: -6.010744571685791
    4. '       ' → logprob: -6.260744571685791
    5. 'max' → logprob: -7.385744571685791
    6. 'limit' → logprob: -8.38574504852295
    7. 'w' → logprob: -9.38574504852295
    8. '   ' → logprob: -10.01074504852295
    9. 'upper' → logprob: -10.38574504852295
    10. 'cand' → logprob: -10.63574504852295

Token 301: ' as' (ID: 472)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16331854462623596
    2. ' True' → logprob: -2.788318634033203
    3. 'max' → logprob: -2.788318634033203
    4. ' for' → logprob: -4.038318634033203
    5. 'True' → logprob: -5.913318634033203
    6. 'for' → logprob: -6.038318634033203
    7. ' w' → logprob: -6.788318634033203
    8. ' possible' → logprob: -7.163318634033203
    9. ' range' → logprob: -7.413318634033203
    10. 'w' → logprob: -7.663318634033203

Token 302: ' constraints' (ID: 31060)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.11041641235351562
    2. 'max' → logprob: -3.3604164123535156
    3. ' range' → logprob: -3.6104164123535156
    4. ' for' → logprob: -4.110416412353516
    5. ' possible' → logprob: -4.985416412353516
    6. 'range' → logprob: -5.610416412353516
    7. 'for' → logprob: -5.985416412353516
    8. ' True' → logprob: -6.360416412353516
    9. ' a' → logprob: -6.360416412353516
    10. ' the' → logprob: -6.610416412353516

Token 303: ' are' (ID: 553)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0149645805358887
    2. ' are' → logprob: -1.7649645805358887
    3. ' <=' → logprob: -1.8899645805358887
    4. ',' → logprob: -2.0149645805358887
    5. '       ' → logprob: -3.1399645805358887
    6. '   ' → logprob: -3.5149645805358887
    7. ' limit' → logprob: -4.139964580535889
    8. ' continue' → logprob: -4.139964580535889
    9. ' in' → logprob: -4.639964580535889
    10. ' <' → logprob: -5.014964580535889

Token 304: ' big' (ID: 3464)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.9604191184043884
    2. 'tight' → logprob: -1.0854191780090332
    3. 'large' → logprob: -1.5854191780090332
    4. 'not' → logprob: -3.460419178009033
    5. 'strict' → logprob: -4.335419178009033
    6. 'high' → logprob: -4.460419178009033
    7. 't' → logprob: -5.460419178009033
    8. ' tight' → logprob: -6.085419178009033
    9. 'big' → logprob: -6.460419178009033
    10. 'low' → logprob: -6.585419178009033

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1607009321451187
    2. '       ' → logprob: -2.035701036453247
    3. ':' → logprob: -4.535700798034668
    4. ',
' → logprob: -6.285700798034668
    5. '   ' → logprob: -6.660700798034668
    6. ' for' → logprob: -6.785700798034668
    7. ':
' → logprob: -7.535700798034668
    8. ' and' → logprob: -7.660700798034668
    9. ' ,' → logprob: -7.660700798034668
    10. '           ' → logprob: -8.160700798034668

Token 306: ' limit' (ID: 5967)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6833685040473938
    2. '       ' → logprob: -1.683368444442749
    3. ' continue' → logprob: -2.308368444442749
    4. ' we' → logprob: -2.933368444442749
    5. 'for' → logprob: -3.433368444442749
    6. 'continue' → logprob: -3.683368444442749
    7. ' pass' → logprob: -3.808368444442749
    8. '#' → logprob: -4.183368682861328
    9. ' #' → logprob: -4.308368682861328
    10. ' w' → logprob: -4.433368682861328

Token 307: ' search' (ID: 3684)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3630010187625885
    2. ' to' → logprob: -2.2380011081695557
    3. '=' → logprob: -2.3630011081695557
    4. '   ' → logprob: -3.3630011081695557
    5. ' search' → logprob: -3.3630011081695557
    6. '_search' → logprob: -4.613000869750977
    7. '    ' → logprob: -5.488000869750977
    8. '_' → logprob: -5.988000869750977
    9. '       ' → logprob: -6.113000869750977
    10. '_candidate' → logprob: -6.113000869750977

Token 308: ' to' (ID: 316)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -1.817975640296936
    2. '_limit' → logprob: -1.817975640296936
    3. '   ' → logprob: -1.942975640296936
    4. ' ' → logprob: -1.942975640296936
    5. ' to' → logprob: -2.0679755210876465
    6. ' =' → logprob: -2.0679755210876465
    7. '       ' → logprob: -3.5679755210876465
    8. '_space' → logprob: -3.6929755210876465
    9. '    ' → logprob: -4.1929755210876465
    10. 'range' → logprob: -4.8179755210876465

Token 309: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.016154957935214043
    2. '2' → logprob: -4.766154766082764
    3. '10' → logprob: -5.641154766082764
    4. '100' → logprob: -6.141154766082764
    5. ' max' → logprob: -7.141154766082764
    6. '200' → logprob: -7.141154766082764
    7. 'range' → logprob: -9.516155242919922
    8. 'int' → logprob: -10.266155242919922
    9. '(max' → logprob: -10.516155242919922
    10. '   ' → logprob: -10.516155242919922

Token 310: '2' (ID: 17)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.010094376280903816
    2. '2' → logprob: -4.635094165802002
    3. '10' → logprob: -9.01009464263916
    4. ' max' → logprob: -9.51009464263916
    5. '200' → logprob: -9.88509464263916
    6. '100' → logprob: -10.26009464263916
    7. 'int' → logprob: -10.76009464263916
    8. 'min' → logprob: -11.01009464263916
    9. '(max' → logprob: -11.76009464263916
    10. 'range' → logprob: -12.26009464263916

Token 311: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5263145565986633
    2. ' *' → logprob: -0.9013145565986633
    3. 'max' → logprob: -6.776314735412598
    4. '000' → logprob: -6.776314735412598
    5. '0' → logprob: -8.401314735412598
    6. '*(' → logprob: -8.401314735412598
    7. '**' → logprob: -9.151314735412598
    8. ' ' → logprob: -9.401314735412598
    9. '   ' → logprob: -9.526314735412598
    10. '00' → logprob: -9.651314735412598

Token 312: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.142894446849823
    2. ' max' → logprob: -2.0178945064544678
    3. '(max' → logprob: -8.517894744873047
    4. '*' → logprob: -11.892894744873047
    5. '```' → logprob: -12.767894744873047
    6. ' (' → logprob: -13.142894744873047
    7. '
' → logprob: -13.517894744873047
    8. '	max' → logprob: -13.892894744873047
    9. '=max' → logprob: -13.892894744873047
    10. '   ' → logprob: -14.142894744873047

Token 313: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.004249589052051306
    2. '_' → logprob: -6.129249572753906
    3. '_max' → logprob: -6.504249572753906
    4. 'max' → logprob: -8.504249572753906
    5. '_amount' → logprob: -10.129249572753906
    6. '_weights' → logprob: -10.129249572753906
    7. '_weight' → logprob: -10.129249572753906
    8. '_am' → logprob: -10.254249572753906
    9. 'a' → logprob: -10.379249572753906
    10. ' _' → logprob: -10.754249572753906

Token 314: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35087305307388306
    2. '
' → logprob: -1.8508729934692383
    3. ' for' → logprob: -2.4758729934692383
    4. '   ' → logprob: -3.4758729934692383
    5. 'for' → logprob: -4.600872993469238
    6. '        
' → logprob: -5.350872993469238
    7. ',' → logprob: -6.100872993469238
    8. '    
' → logprob: -6.225872993469238
    9. '<|end|>' → logprob: -7.350872993469238
    10. ' 
' → logprob: -7.600872993469238

Token 315: ' until' (ID: 4609)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5448840260505676
    2. 'max' → logprob: -1.0448839664459229
    3. '100' → logprob: -3.169883966445923
    4. '10' → logprob: -4.544884204864502
    5. ' ' → logprob: -5.294884204864502
    6. '3' → logprob: -5.794884204864502
    7. '(' → logprob: -5.919884204864502
    8. '(max' → logprob: -6.419884204864502
    9. '2' → logprob: -6.669884204864502
    10. ' (' → logprob: -7.419884204864502

Token 316: ' found' (ID: 2491)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4510403275489807
    2. 'False' → logprob: -1.701040267944336
    3. 'found' → logprob: -1.826040267944336
    4. '2' → logprob: -5.076040267944336
    5. '100' → logprob: -5.076040267944336
    6. 'True' → logprob: -5.701040267944336
    7. 'fail' → logprob: -6.951040267944336
    8. 'possible' → logprob: -7.076040267944336
    9. '10' → logprob: -7.701040267944336
    10. ' max' → logprob: -8.576040267944336

Token 317: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08652552217245102
    2. '
' → logprob: -3.3365254402160645
    3. ' for' → logprob: -3.3365254402160645
    4. '        
' → logprob: -5.2115254402160645
    5. 'for' → logprob: -6.0865254402160645
    6. ',' → logprob: -6.3365254402160645
    7. '   ' → logprob: -7.3365254402160645
    8. '<|end|>' → logprob: -8.211525917053223
    9. '    
' → logprob: -8.586525917053223
    10. '  
' → logprob: -8.711525917053223

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7795441746711731
    2. ' for' → logprob: -0.9045441746711731
    3. 'for' → logprob: -2.1545441150665283
    4. '
' → logprob: -4.029544353485107
    5. '        
' → logprob: -6.904544353485107
    6. '```' → logprob: -7.029544353485107
    7. ' 
' → logprob: -8.15454387664795
    8. '   ' → logprob: -8.27954387664795
    9. '  
' → logprob: -9.40454387664795
    10. ',' → logprob: -10.15454387664795

Token 319: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3850945830345154
    2. '       ' → logprob: -1.3850946426391602
    3. ' for' → logprob: -3.13509464263916
    4. 'limit' → logprob: -4.38509464263916
    5. 'max' → logprob: -4.76009464263916
    6. 'candidate' → logprob: -6.01009464263916
    7. '
' → logprob: -7.01009464263916
    8. 'search' → logprob: -8.13509464263916
    9. '        
' → logprob: -8.51009464263916
    10. '   ' → logprob: -8.51009464263916

Token 320: ' Also' (ID: 8820)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023289615288376808
    2. '       ' → logprob: -4.273289680480957
    3. 'candidate' → logprob: -5.398289680480957
    4. 'limit' → logprob: -6.398289680480957
    5. ' for' → logprob: -6.648289680480957
    6. 'max' → logprob: -6.898289680480957
    7. '   ' → logprob: -8.273289680480957
    8. 'w' → logprob: -9.273289680480957
    9. 'def' → logprob: -9.523289680480957
    10. 'found' → logprob: -9.898289680480957

Token 321: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7343947291374207
    2. '       ' → logprob: -0.8593947291374207
    3. 'for' → logprob: -3.3593947887420654
    4. 'candidate' → logprob: -4.359394550323486
    5. '   ' → logprob: -4.734394550323486
    6. ' candidate' → logprob: -4.859394550323486
    7. '
' → logprob: -4.984394550323486
    8. ' max' → logprob: -5.359394550323486
    9. ' possible' → logprob: -6.109394550323486
    10. ' limit' → logprob: -6.109394550323486

Token 322: ' as' (ID: 472)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8632423281669617
    2. 'for' → logprob: -0.9882423281669617
    3. 'import' → logprob: -2.8632423877716064
    4. 'found' → logprob: -2.9882423877716064
    5. '       ' → logprob: -3.4882423877716064
    6. 'def' → logprob: -4.613242149353027
    7. ' import' → logprob: -4.613242149353027
    8. 'from' → logprob: -4.863242149353027
    9. 'possible' → logprob: -4.988242149353027
    10. ' possible' → logprob: -5.363242149353027

Token 323: ' the' (ID: 290)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7878834009170532
    2. ' fail' → logprob: -1.7878834009170532
    3. ' possible' → logprob: -1.7878834009170532
    4. 'possible' → logprob: -2.6628832817077637
    5. 'fail' → logprob: -3.5378832817077637
    6. 'max' → logprob: -3.5378832817077637
    7. ' weights' → logprob: -3.9128832817077637
    8. ' not' → logprob: -4.412883281707764
    9. ' for' → logprob: -5.037883281707764
    10. ' w' → logprob: -5.037883281707764

Token 324: ' sum' (ID: 4215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -2.0215237140655518
    2. 'w' → logprob: -2.1465237140655518
    3. 'for' → logprob: -2.1465237140655518
    4. ' new' → logprob: -2.5215237140655518
    5. 'possible' → logprob: -2.5215237140655518
    6. 'len' → logprob: -2.6465237140655518
    7. '
' → logprob: -3.2715237140655518
    8. 'def' → logprob: -3.2715237140655518
    9. 'new' → logprob: -3.3965237140655518
    10. ' possible' → logprob: -3.5215237140655518

Token 325: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5119341611862183
    2. ' =' → logprob: -1.8869341611862183
    3. '(weights' → logprob: -2.886934280395508
    4. '_' → logprob: -3.386934280395508
    5. ' +=' → logprob: -3.386934280395508
    6. 'of' → logprob: -3.636934280395508
    7. '=' → logprob: -3.886934280395508
    8. '_weights' → logprob: -4.386934280395508
    9. '   ' → logprob: -4.511934280395508
    10. ' weights' → logprob: -4.636934280395508

Token 326: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.146054208278656
    2. ' weights' → logprob: -2.271054267883301
    3. 'possible' → logprob: -3.646054267883301
    4. 'fail' → logprob: -5.646054267883301
    5. ' possible' → logprob: -6.396054267883301
    6. ' fail' → logprob: -8.0210542678833
    7. '(weights' → logprob: -8.2710542678833
    8. 'amount' → logprob: -8.8960542678833
    9. 'w' → logprob: -9.3960542678833
    10. 'all' → logprob: -9.6460542678833

Token 327: ' possible' (ID: 4149)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6959236264228821
    2. ' <=' → logprob: -2.0709235668182373
    3. '+' → logprob: -2.6959235668182373
    4. ' +' → logprob: -2.6959235668182373
    5. ')' → logprob: -3.0709235668182373
    6. ' can' → logprob: -3.8209235668182373
    7. '<=' → logprob: -3.8209235668182373
    8. '<|end|>' → logprob: -3.8209235668182373
    9. '   ' → logprob: -3.9459235668182373
    10. ' plus' → logprob: -3.9459235668182373

Token 328: ' is' (ID: 382)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8051956295967102
    2. ' is' → logprob: -2.0551955699920654
    3. ' <=' → logprob: -2.3051955699920654
    4. ' +' → logprob: -2.6801955699920654
    5. '<=' → logprob: -2.8051955699920654
    6. ')' → logprob: -3.4301955699920654
    7. '<|end|>' → logprob: -3.8051955699920654
    8. '   ' → logprob: -3.9301955699920654
    9. ' can' → logprob: -4.0551958084106445
    10. ' up' → logprob: -4.9301958084106445

Token 329: ' large' (ID: 4410)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7472051978111267
    2. ' sum' → logprob: -1.1222052574157715
    3. 'max' → logprob: -2.4972052574157715
    4. ' max' → logprob: -3.6222052574157715
    5. '   ' → logprob: -3.9972052574157715
    6. '       ' → logprob: -4.2472052574157715
    7. '0' → logprob: -4.3722052574157715
    8. ' limited' → logprob: -4.3722052574157715
    9. ' ' → logprob: -4.8722052574157715
    10. '10' → logprob: -5.6222052574157715

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20476201176643372
    2. '       ' → logprob: -2.3297619819641113
    3. ':' → logprob: -3.0797619819641113
    4. '   ' → logprob: -4.829761981964111
    5. ':
' → logprob: -4.954761981964111
    6. ',
' → logprob: -4.954761981964111
    7. '<|end|>' → logprob: -5.079761981964111
    8. ' and' → logprob: -5.454761981964111
    9. '<|end|>' → logprob: -6.329761981964111
    10. ' ,' → logprob: -6.829761981964111

Token 331: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8502868413925171
    2. ' for' → logprob: -0.9752868413925171
    3. ' we' → logprob: -2.3502869606018066
    4. ' continue' → logprob: -4.225286960601807
    5. ' limit' → logprob: -4.475286960601807
    6. ' w' → logprob: -4.725286960601807
    7. 'for' → logprob: -4.725286960601807
    8. ',' → logprob: -4.850286960601807
    9. ' max' → logprob: -5.100286960601807
    10. '        ' → logprob: -5.100286960601807

Token 332: ' better' (ID: 3432)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4972797930240631
    2. 'for' → logprob: -1.6222797632217407
    3. '       ' → logprob: -2.7472798824310303
    4. ' limit' → logprob: -2.9972798824310303
    5. '   ' → logprob: -4.372279644012451
    6. 'limit' → logprob: -4.372279644012451
    7. ' max' → logprob: -4.622279644012451
    8. 'max' → logprob: -5.247279644012451
    9. '        ' → logprob: -5.372279644012451
    10. 'def' → logprob: -5.872279644012451

Token 333: ' approach' (ID: 7139)
  Prédit: ' approach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.16978704929351807
    2. 'appro' → logprob: -2.9197869300842285
    3. 'candidate' → logprob: -3.0447869300842285
    4. 'weight' → logprob: -4.9197869300842285
    5. '_candidate' → logprob: -5.1697869300842285
    6. 'search' → logprob: -5.2947869300842285
    7. 'w' → logprob: -5.2947869300842285
    8. 'import' → logprob: -5.2947869300842285
    9. ' candidate' → logprob: -5.7947869300842285
    10. 'possible' → logprob: -6.0447869300842285

Token 334: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.173900306224823
    2. ' would' → logprob: -2.4239003658294678
    3. '       ' → logprob: -4.298900127410889
    4. ':' → logprob: -4.423900127410889
    5. ' =' → logprob: -4.798900127410889
    6. '   ' → logprob: -4.923900127410889
    7. ' for' → logprob: -5.423900127410889
    8. '<|end|>' → logprob: -5.423900127410889
    9. '=' → logprob: -5.548900127410889
    10. ' ' → logprob: -5.673900127410889

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017173044616356492
    2. '        
' → logprob: -7.0017170906066895
    3. '
' → logprob: -7.8767170906066895
    4. '<|end|>' → logprob: -8.876717567443848
    5. '        ' → logprob: -9.001717567443848
    6. ' for' → logprob: -10.126717567443848
    7. 'import' → logprob: -10.626717567443848
    8. '```' → logprob: -11.001717567443848
    9. '   ' → logprob: -11.126717567443848
    10. 'from' → logprob: -11.501717567443848

Token 336: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1009831428527832
    2. 'sum' → logprob: -2.975983142852783
    3. ' sum' → logprob: -4.100983142852783
    4. ' total' → logprob: -4.975983142852783
    5. 'total' → logprob: -5.225983142852783
    6. ' max' → logprob: -5.850983142852783
    7. ' for' → logprob: -5.975983142852783
    8. 'max' → logprob: -6.475983142852783
    9. 'limit' → logprob: -6.725983142852783
    10. '   ' → logprob: -7.100983142852783

Token 337: ' Use' (ID: 7649)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.7908352613449097
    2. ' max' → logprob: -2.040835380554199
    3. ' sum' → logprob: -2.165835380554199
    4. 'from' → logprob: -2.290835380554199
    5. ' from' → logprob: -2.540835380554199
    6. 'max' → logprob: -2.790835380554199
    7. ' for' → logprob: -3.165835380554199
    8. ' total' → logprob: -3.290835380554199
    9. ' current' → logprob: -3.665835380554199
    10. 'possible' → logprob: -3.665835380554199

Token 338: ' BFS' (ID: 190016)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.2350234985351562
    2. 'binary' → logprob: -1.4850234985351562
    3. 'b' → logprob: -1.8600234985351562
    4. 'a' → logprob: -2.7350234985351562
    5. ' binary' → logprob: -2.8600234985351562
    6. ' BFS' → logprob: -2.8600234985351562
    7. ' a' → logprob: -3.1100234985351562
    8. ' possible' → logprob: -3.7350234985351562
    9. 'bis' → logprob: -3.9850234985351562
    10. 'from' → logprob: -4.985023498535156

Token 339: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20528875291347504
    2. '<|end|>' → logprob: -2.0802886486053467
    3. ' from' → logprob: -4.080288887023926
    4. '<|end|>' → logprob: -4.205288887023926
    5. '
' → logprob: -4.455288887023926
    6. '   ' → logprob: -5.080288887023926
    7. 'from' → logprob: -5.455288887023926
    8. '        
' → logprob: -6.205288887023926
    9. ',' → logprob: -6.830288887023926
    10. ' for' → logprob: -7.330288887023926

Token 340: ' dynamic' (ID: 14012)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32275116443634033
    2. 'import' → logprob: -2.947751045227051
    3. 'DP' → logprob: -3.197751045227051
    4. 'binary' → logprob: -3.322751045227051
    5. 'dfs' → logprob: -3.697751045227051
    6. 'from' → logprob: -3.822751045227051
    7. ' DP' → logprob: -4.197751045227051
    8. ' dp' → logprob: -4.197751045227051
    9. ' binary' → logprob: -4.197751045227051
    10. ' dynamic' → logprob: -5.322751045227051

Token 341: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.026116356253623962
    2. 'program' → logprob: -3.776116371154785
    3. '_program' → logprob: -6.151116371154785
    4. 'import' → logprob: -8.026116371154785
    5. 'Programming' → logprob: -8.901116371154785
    6. '-program' → logprob: -9.401116371154785
    7. ' program' → logprob: -9.776116371154785
    8. ' programmation' → logprob: -10.901116371154785
    9. '   ' → logprob: -11.151116371154785
    10. ' programación' → logprob: -11.276116371154785

Token 342: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03726827725768089
    2. '        
' → logprob: -4.037268161773682
    3. '<|end|>' → logprob: -4.412268161773682
    4. ' for' → logprob: -6.787268161773682
    5. ' 
' → logprob: -6.787268161773682
    6. '
' → logprob: -7.162268161773682
    7. ' ' → logprob: -7.537268161773682
    8. '        ' → logprob: -7.537268161773682
    9. '<|end|>' → logprob: -7.787268161773682
    10. '   ' → logprob: -7.787268161773682

Token 344: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023949073627591133
    2. '<|end|>' → logprob: -4.898949146270752
    3. '   ' → logprob: -5.648949146270752
    4. ' for' → logprob: -6.023949146270752
    5. '        
' → logprob: -6.523949146270752
    6. '        ' → logprob: -6.773949146270752
    7. 'def' → logprob: -7.148949146270752
    8. 'for' → logprob: -7.398949146270752
    9. 'max' → logprob: -7.523949146270752
    10. 'from' → logprob: -7.648949146270752

Token 345: ' But' (ID: 3072)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.849259614944458
    2. ' from' → logprob: -1.849259614944458
    3. ' visited' → logprob: -1.849259614944458
    4. 'from' → logprob: -1.974259614944458
    5. 'visited' → logprob: -1.974259614944458
    6. '       ' → logprob: -2.724259614944458
    7. 'for' → logprob: -2.724259614944458
    8. ' max' → logprob: -3.974259614944458
    9. '   ' → logprob: -4.474259376525879
    10. 'candidate' → logprob: -4.599259376525879

Token 346: ' since' (ID: 3630)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5110150575637817
    2. ' for' → logprob: -1.1360150575637817
    3. ' candidate' → logprob: -3.636014938354492
    4. '   ' → logprob: -4.636014938354492
    5. ' w' → logprob: -4.636014938354492
    6. 'for' → logprob: -5.261014938354492
    7. ' continue' → logprob: -5.511014938354492
    8. '        ' → logprob: -5.761014938354492
    9. 'candidate' → logprob: -5.761014938354492
    10. ' #' → logprob: -6.386014938354492

Token 347: ' weights' (ID: 28460)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4029195010662079
    2. 'possible' → logprob: -2.7779195308685303
    3. 'True' → logprob: -3.0279195308685303
    4. ' True' → logprob: -3.0279195308685303
    5. ' max' → logprob: -3.1529195308685303
    6. 'w' → logprob: -3.2779195308685303
    7. 'weights' → logprob: -4.027919292449951
    8. 'the' → logprob: -4.152919292449951
    9. ' the' → logprob: -4.402919292449951
    10. 'len' → logprob: -4.527919292449951

Token 348: ' ≤' (ID: 72554)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.4959796965122223
    2. '<|end|>' → logprob: -1.4959796667099
    3. ' can' → logprob: -2.3709797859191895
    4. '<|end|>' → logprob: -3.3709797859191895
    5. ')' → logprob: -3.9959797859191895
    6. ' is' → logprob: -4.7459797859191895
    7. ' may' → logprob: -5.8709797859191895
    8. 'can' → logprob: -7.1209797859191895
    9. '...' → logprob: -7.2459797859191895
    10. ' could' → logprob: -7.3709797859191895

Token 349: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6640545725822449
    2. '10' → logprob: -0.7890545725822449
    3. ' ' → logprob: -3.7890546321868896
    4. '20' → logprob: -5.2890543937683105
    5. '1' → logprob: -6.2890543937683105
    6. '50' → logprob: -7.5390543937683105
    7. '200' → logprob: -8.039054870605469
    8. '2' → logprob: -9.039054870605469
    9. '30' → logprob: -9.164054870605469
    10. '
' → logprob: -9.664054870605469

Token 350: '10' (ID: 702)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.627543568611145
    2. '10' → logprob: -1.627543568611145
    3. '40' → logprob: -1.877543568611145
    4. '15' → logprob: -3.0025434494018555
    5. '30' → logprob: -3.6275434494018555
    6. '100' → logprob: -3.8775434494018555
    7. '50' → logprob: -4.2525434494018555
    8. 'n' → logprob: -6.7525434494018555
    9. '500' → logprob: -7.2525434494018555
    10. '
' → logprob: -7.5025434494018555

Token 351: ' and' (ID: 326)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6776095032691956
    2. '^' → logprob: -1.1776094436645508
    3. ' **' → logprob: -2.052609443664551
    4. '8' → logprob: -3.052609443664551
    5. ')' → logprob: -5.802609443664551
    6. '7' → logprob: -6.927609443664551
    7. '```' → logprob: -7.427609443664551
    8. ' ^' → logprob: -7.427609443664551
    9. ',' → logprob: -7.552609443664551
    10. ' )' → logprob: -7.927609443664551

Token 352: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0385109186172485
    2. 'n' → logprob: -1.7885109186172485
    3. ' n' → logprob: -1.9135109186172485
    4. 'len' → logprob: -2.163510799407959
    5. 'max' → logprob: -2.413510799407959
    6. ' m' → logprob: -2.788510799407959
    7. ' max' → logprob: -3.538510799407959
    8. ' len' → logprob: -4.038510799407959
    9. 'w' → logprob: -6.038510799407959
    10. '   ' → logprob: -6.163510799407959

Token 353: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06353900581598282
    2. '<=' → logprob: -3.5635390281677246
    3. ' ≤' → logprob: -4.688539028167725
    4. ' <' → logprob: -4.813539028167725
    5. '   ' → logprob: -5.563539028167725
    6. ' is' → logprob: -5.813539028167725
    7. '=' → logprob: -6.313539028167725
    8. ' ' → logprob: -6.938539028167725
    9. ')' → logprob: -6.938539028167725
    10. '       ' → logprob: -7.063539028167725

Token 354: '10' (ID: 702)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.6826591491699219
    2. '10' → logprob: -1.1826591491699219
    3. '15' → logprob: -2.182659149169922
    4. '30' → logprob: -2.807659149169922
    5. '12' → logprob: -5.807659149169922
    6. '50' → logprob: -6.057659149169922
    7. '40' → logprob: -6.807659149169922
    8. ' ' → logprob: -6.807659149169922
    9. '25' → logprob: -6.932659149169922
    10. '7' → logprob: -6.932659149169922

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14740629494190216
    2. '       ' → logprob: -2.5224063396453857
    3. ':' → logprob: -3.5224063396453857
    4. ':
' → logprob: -4.397406101226807
    5. ',
' → logprob: -4.772406101226807
    6. '   ' → logprob: -6.272406101226807
    7. ' and' → logprob: -6.647406101226807
    8. ' ,' → logprob: -7.522406101226807
    9. '<|end|>' → logprob: -7.647406101226807
    10. '<|end|>' → logprob: -7.772406101226807

Token 356: ' size' (ID: 2349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9117258787155151
    2. ' for' → logprob: -1.0367258787155151
    3. ' continue' → logprob: -2.9117259979248047
    4. ' we' → logprob: -3.4117259979248047
    5. 'for' → logprob: -3.7867259979248047
    6. 'continue' → logprob: -4.161725997924805
    7. 'candidate' → logprob: -4.286725997924805
    8. '   ' → logprob: -4.411725997924805
    9. ' next' → logprob: -4.536725997924805
    10. ' candidate' → logprob: -4.536725997924805

Token 357: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.160354733467102
    2. '   ' → logprob: -1.660354733467102
    3. ' =' → logprob: -2.1603546142578125
    4. ')' → logprob: -2.1603546142578125
    5. '       ' → logprob: -3.0353546142578125
    6. ' possible' → logprob: -3.6603546142578125
    7. ',' → logprob: -3.7853546142578125
    8. 'possible' → logprob: -3.7853546142578125
    9. ' limits' → logprob: -4.2853546142578125
    10. ' of' → logprob: -4.4103546142578125

Token 358: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.318237841129303
    2. ' possible' → logprob: -1.3182377815246582
    3. ' next' → logprob: -6.068237781524658
    4. ' weights' → logprob: -6.818237781524658
    5. 'weights' → logprob: -7.568237781524658
    6. 'next' → logprob: -7.818237781524658
    7. ' the' → logprob: -8.193238258361816
    8. ' new' → logprob: -9.693238258361816
    9. '```' → logprob: -9.943238258361816
    10. 'the' → logprob: -10.068238258361816

Token 359: ' set' (ID: 920)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7597769498825073
    2. ')' → logprob: -2.009777069091797
    3. ',' → logprob: -2.009777069091797
    4. '   ' → logprob: -2.134777069091797
    5. ' is' → logprob: -2.509777069091797
    6. ':' → logprob: -2.759777069091797
    7. '<|end|>' → logprob: -2.759777069091797
    8. ':
' → logprob: -2.884777069091797
    9. '<|end|>' → logprob: -3.259777069091797
    10. '}' → logprob: -4.134777069091797

Token 361: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.8145793676376343
    2. 'increase' → logprob: -1.3145793676376343
    3. 'grow' → logprob: -2.064579486846924
    4. ' be' → logprob: -2.189579486846924
    5. ' grow' → logprob: -4.314579486846924
    6. ' increase' → logprob: -4.439579486846924
    7. 'expand' → logprob: -4.939579486846924
    8. ' at' → logprob: -5.189579486846924
    9. 'at' → logprob: -5.939579486846924
    10. 'explode' → logprob: -6.189579486846924

Token 362: ' big' (ID: 3464)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.5194678902626038
    2. 'up' → logprob: -1.644467830657959
    3. 'manageable' → logprob: -2.894467830657959
    4. 'handled' → logprob: -3.019467830657959
    5. 'managed' → logprob: -3.644467830657959
    6. ' large' → logprob: -4.019467830657959
    7. ' up' → logprob: -4.519467830657959
    8. ' handled' → logprob: -4.894467830657959
    9. 'controlled' → logprob: -5.269467830657959
    10. 'big' → logprob: -5.394467830657959

Token 363: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02911374345421791
    2. ',' → logprob: -4.40411376953125
    3. '<|end|>' → logprob: -5.02911376953125
    4. '        
' → logprob: -6.02911376953125
    5. '<|end|>' → logprob: -6.15411376953125
    6. ' but' → logprob: -6.65411376953125
    7. '
' → logprob: -6.65411376953125
    8. '   ' → logprob: -7.52911376953125
    9. ' for' → logprob: -7.77911376953125
    10. '.' → logprob: -7.90411376953125

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012217172421514988
    2. '        
' → logprob: -5.512217044830322
    3. '<|end|>' → logprob: -5.512217044830322
    4. '
' → logprob: -6.512217044830322
    5. '<|end|>' → logprob: -7.887217044830322
    6. '   ' → logprob: -7.887217044830322
    7. ',' → logprob: -8.01221752166748
    8. '#' → logprob: -8.13721752166748
    9. ' for' → logprob: -8.26221752166748
    10. '           ' → logprob: -9.26221752166748

Token 365: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06755315512418747
    2. ' for' → logprob: -3.8175530433654785
    3. 'for' → logprob: -3.9425530433654785
    4. '        
' → logprob: -4.6925530433654785
    5. 'candidate' → logprob: -5.4425530433654785
    6. '
' → logprob: -5.5675530433654785
    7. 'w' → logprob: -6.1925530433654785
    8. '   ' → logprob: -7.1925530433654785
    9. 'next' → logprob: -7.8175530433654785
    10. 'weight' → logprob: -7.8175530433654785

Token 366: ' So' (ID: 2632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4892653524875641
    2. 'candidate' → logprob: -1.2392653226852417
    3. ' for' → logprob: -2.8642654418945312
    4. '       ' → logprob: -3.9892654418945312
    5. ' candidate' → logprob: -5.114265441894531
    6. 'w' → logprob: -5.614265441894531
    7. 'cand' → logprob: -5.989265441894531
    8. '   ' → logprob: -6.364265441894531
    9. 'c' → logprob: -6.614265441894531
    10. 'start' → logprob: -6.739265441894531

Token 367: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43044009804725647
    2. 'for' → logprob: -1.680440068244934
    3. 'candidate' → logprob: -2.8054401874542236
    4. ' candidate' → logprob: -3.5554401874542236
    5. ' w' → logprob: -3.6804401874542236
    6. '       ' → logprob: -3.8054401874542236
    7. ' weight' → logprob: -5.4304399490356445
    8. '
' → logprob: -5.6804399490356445
    9. 'weight' → logprob: -5.8054399490356445
    10. '        ' → logprob: -5.9304399490356445

Token 368: ' do' (ID: 621)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1065038442611694
    2. '       ' → logprob: -1.2315038442611694
    3. 'continue' → logprob: -2.481503963470459
    4. ' continue' → logprob: -2.606503963470459
    5. ' can' → logprob: -2.981503963470459
    6. ' try' → logprob: -3.356503963470459
    7. ' for' → logprob: -3.481503963470459
    8. 'for' → logprob: -3.481503963470459
    9. 'import' → logprob: -3.981503963470459
    10. '    ' → logprob: -4.731503963470459

Token 369: ' an' (ID: 448)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7966597676277161
    2. 'for' → logprob: -0.9216597676277161
    3. '       ' → logprob: -2.1716597080230713
    4. '   ' → logprob: -4.04665994644165
    5. '
' → logprob: -5.54665994644165
    6. 'while' → logprob: -5.79665994644165
    7. '           ' → logprob: -6.42165994644165
    8. 'candidate' → logprob: -6.42165994644165
    9. '        ' → logprob: -6.54665994644165
    10. '    ' → logprob: -6.54665994644165

Token 370: ' efficient' (ID: 12430)
  Prédit: ' incremental'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' incremental' → logprob: -0.6225135326385498
    2. 'increment' → logprob: -2.49751353263855
    3. 'import' → logprob: -2.87251353263855
    4. 'outer' → logprob: -2.99751353263855
    5. '       ' → logprob: -3.37251353263855
    6. ' outer' → logprob: -3.49751353263855
    7. 'optimized' → logprob: -3.62251353263855
    8. '   ' → logprob: -3.99751353263855
    9. 'early' → logprob: -4.122513771057129
    10. ' iterative' → logprob: -4.247513771057129

Token 371: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.3030412793159485
    2. ' search' → logprob: -2.6780412197113037
    3. 'b' → logprob: -2.9280412197113037
    4. 'break' → logprob: -3.3030412197113037
    5. 'for' → logprob: -4.053041458129883
    6. 'increment' → logprob: -4.053041458129883
    7. 'bread' → logprob: -4.678041458129883
    8. ' BFS' → logprob: -4.803041458129883
    9. 'enumer' → logprob: -4.928041458129883
    10. 'import' → logprob: -5.178041458129883

Token 372: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0626707449555397
    2. ' for' → logprob: -3.5626707077026367
    3. ',' → logprob: -4.812670707702637
    4. '        
' → logprob: -4.812670707702637
    5. '<|end|>' → logprob: -5.437670707702637
    6. '   ' → logprob: -5.812670707702637
    7. '
' → logprob: -5.937670707702637
    8. '<|end|>' → logprob: -6.687670707702637
    9. ':' → logprob: -6.812670707702637
    10. '.' → logprob: -7.187670707702637

Token 373: ' set' (ID: 920)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8129194974899292
    2. 'b' → logprob: -1.3129194974899292
    3. 'bis' → logprob: -2.4379196166992188
    4. ' possible' → logprob: -2.9379196166992188
    5. 'binary' → logprob: -3.0629196166992188
    6. 'deque' → logprob: -4.687919616699219
    7. ' bfs' → logprob: -4.687919616699219
    8. '```' → logprob: -4.687919616699219
    9. 'next' → logprob: -4.812919616699219
    10. ' bis' → logprob: -4.937919616699219

Token 374: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7332329154014587
    2. '       ' → logprob: -1.2332329750061035
    3. '
' → logprob: -2.2332329750061035
    4. 'candidate' → logprob: -3.7332329750061035
    5. '_candidate' → logprob: -3.9832329750061035
    6. ',' → logprob: -4.3582329750061035
    7. '        
' → logprob: -4.4832329750061035
    8. 's' → logprob: -5.2332329750061035
    9. '    
' → logprob: -5.3582329750061035
    10. 'possible' → logprob: -5.9832329750061035

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003265765029937029
    2. '
' → logprob: -6.128265857696533
    3. '        
' → logprob: -7.753265857696533
    4. ' for' → logprob: -7.878265857696533
    5. 'for' → logprob: -9.128265380859375
    6. '   ' → logprob: -9.628265380859375
    7. ',' → logprob: -10.003265380859375
    8. '<|end|>' → logprob: -11.003265380859375
    9. '    
' → logprob: -12.628265380859375
    10. '           ' → logprob: -12.628265380859375

Token 376: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017749737948179245
    2. ' for' → logprob: -4.517749786376953
    3. 'for' → logprob: -5.892749786376953
    4. '
' → logprob: -6.642749786376953
    5. '        
' → logprob: -6.642749786376953
    6. '   ' → logprob: -7.017749786376953
    7. '    
' → logprob: -9.767749786376953
    8. 'candidate' → logprob: -9.892749786376953
    9. ' w' → logprob: -10.142749786376953
    10. 'w' → logprob: -10.392749786376953

Token 377: ' Max' (ID: 10093)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049356184899806976
    2. 'for' → logprob: -3.79935622215271
    3. ' for' → logprob: -4.299355983734131
    4. 'candidate' → logprob: -5.174355983734131
    5. '   ' → logprob: -6.174355983734131
    6. '        
' → logprob: -6.424355983734131
    7. '
' → logprob: -6.799355983734131
    8. 'w' → logprob: -7.424355983734131
    9. 'weight' → logprob: -8.424356460571289
    10. ' candidate' → logprob: -8.799356460571289

Token 378: ' weight' (ID: 6049)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.643566370010376
    2. '_candidate' → logprob: -1.143566370010376
    3. '_w' → logprob: -2.143566370010376
    4. '_search' → logprob: -3.518566370010376
    5. '_new' → logprob: -4.893566131591797
    6. '_limit' → logprob: -7.643566131591797
    7. '_c' → logprob: -7.893566131591797
    8. '_possible' → logprob: -8.143566131591797
    9. '_try' → logprob: -9.768566131591797
    10. '_check' → logprob: -9.768566131591797

Token 379: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0163817405700684
    2. '_limit' → logprob: -1.5163817405700684
    3. '_search' → logprob: -2.0163817405700684
    4. '_candidate' → logprob: -2.0163817405700684
    5. '_' → logprob: -2.6413817405700684
    6. '=' → logprob: -2.8913817405700684
    7. '_to' → logprob: -4.391381740570068
    8. '_possible' → logprob: -5.891381740570068
    9. '_new' → logprob: -6.016381740570068
    10. '_range' → logprob: -6.266381740570068

Token 380: ' test' (ID: 1746)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -1.1188706159591675
    2. 'max' → logprob: -1.4938706159591675
    3. 'search' → logprob: -2.243870735168457
    4. ' try' → logprob: -2.743870735168457
    5. ' ' → logprob: -3.368870735168457
    6. 'check' → logprob: -3.368870735168457
    7. ' max' → logprob: -3.493870735168457
    8. ' =' → logprob: -3.618870735168457
    9. '=' → logprob: -3.868870735168457
    10. 'test' → logprob: -3.868870735168457

Token 381: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133198320865631
    2. '=' → logprob: -1.3133198022842407
    3. '=max' → logprob: -11.31332015991211
    4. '_candidate' → logprob: -11.43832015991211
    5. '_w' → logprob: -11.56332015991211
    6. 'w' → logprob: -11.93832015991211
    7. '_weight' → logprob: -12.68832015991211
    8. '_range' → logprob: -12.93832015991211
    9. ',' → logprob: -13.06332015991211
    10. '_' → logprob: -13.43832015991211

Token 382: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1270296424627304
    2. ' =' → logprob: -2.1270296573638916
    3. ' be' → logprob: -9.627029418945312
    4. '=
' → logprob: -10.877029418945312
    5. ' =
' → logprob: -12.377029418945312
    6. ' ' → logprob: -13.002029418945312
    7. '=max' → logprob: -13.002029418945312
    8. 'be' → logprob: -13.502029418945312
    9. '   ' → logprob: -13.627029418945312
    10. ',' → logprob: -14.252029418945312

Token 383: ' up' (ID: 869)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09900188446044922
    2. ' ' → logprob: -3.224001884460449
    3. 'max' → logprob: -3.349001884460449
    4. ' max' → logprob: -3.974001884460449
    5. '   ' → logprob: -8.09900188446045
    6. ' =' → logprob: -9.59900188446045
    7. 'min' → logprob: -9.84900188446045
    8. '=' → logprob: -10.22400188446045
    9. ' min' → logprob: -10.59900188446045
    10. '20' → logprob: -11.72400188446045

Token 384: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5166217088699341
    2. '_to' → logprob: -1.016621708869934
    3. ' to' → logprob: -4.3916215896606445
    4. '=' → logprob: -4.8916215896606445
    5. '_' → logprob: -5.3916215896606445
    6. 'bound' → logprob: -5.5166215896606445
    7. '_bound' → logprob: -5.8916215896606445
    8. 'To' → logprob: -6.0166215896606445
    9. '8' → logprob: -6.7666215896606445
    10. '2' → logprob: -7.1416215896606445

Token 385: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04314831271767616
    2. 'max' → logprob: -3.1681482791900635
    3. ' ' → logprob: -9.793148040771484
    4. ' max' → logprob: -10.418148040771484
    5. '(max' → logprob: -10.918148040771484
    6. '(' → logprob: -11.168148040771484
    7. '20' → logprob: -11.668148040771484
    8. '   ' → logprob: -11.668148040771484
    9. '200' → logprob: -11.793148040771484
    10. 'min' → logprob: -13.668148040771484

Token 386: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04870250076055527
    2. 'max' → logprob: -3.0487024784088135
    3. '200' → logprob: -9.173702239990234
    4. '(' → logprob: -12.548702239990234
    5. '(max' → logprob: -12.923702239990234
    6. 'min' → logprob: -13.298702239990234
    7. ' max' → logprob: -13.798702239990234
    8. ' ' → logprob: -13.923702239990234
    9. '20' → logprob: -14.423702239990234
    10. 'int' → logprob: -14.423702239990234

Token 387: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.004079470410943031
    2. ' *' → logprob: -5.504079341888428
    3. '*(' → logprob: -13.879079818725586
    4. '**' → logprob: -16.004079818725586
    5. '*m' → logprob: -18.004079818725586
    6. '*num' → logprob: -18.504079818725586
    7. '*object' → logprob: -19.129079818725586
    8. '*out' → logprob: -19.129079818725586
    9. '   ' → logprob: -19.504079818725586
    10. '*w' → logprob: -19.879079818725586

Token 388: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014163747429847717
    2. ' max' → logprob: -4.264163970947266
    3. '(max' → logprob: -15.264163970947266
    4. '	max' → logprob: -18.264163970947266
    5. '_max' → logprob: -18.764163970947266
    6. '```' → logprob: -19.139163970947266
    7. '=max' → logprob: -19.264163970947266
    8. '
' → logprob: -19.764163970947266
    9. '[max' → logprob: -19.764163970947266
    10. '   ' → logprob: -20.139163970947266

Token 389: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -2.3557529857498594e-05
    2. 'a' → logprob: -12.25002384185791
    3. '_max' → logprob: -12.75002384185791
    4. '_weights' → logprob: -12.75002384185791
    5. '_amount' → logprob: -12.87502384185791
    6. '_possible' → logprob: -12.87502384185791
    7. '_weight' → logprob: -13.12502384185791
    8. '_w' → logprob: -13.62502384185791
    9. 'weights' → logprob: -13.87502384185791
    10. '_' → logprob: -14.37502384185791

Token 390: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7261425852775574
    2. '
' → logprob: -1.2261426448822021
    3. 'for' → logprob: -1.9761426448822021
    4. '       ' → logprob: -2.726142644882202
    5. '   ' → logprob: -4.226142406463623
    6. '        
' → logprob: -6.351142406463623
    7. '    
' → logprob: -7.101142406463623
    8. ',' → logprob: -7.976142406463623
    9. '	for' → logprob: -8.476142883300781
    10. '\n' → logprob: -8.851142883300781

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007092922925949097
    2. ' for' → logprob: -5.7570929527282715
    3. '
' → logprob: -5.8820929527282715
    4. 'for' → logprob: -7.1320929527282715
    5. '        
' → logprob: -8.257092475891113
    6. '   ' → logprob: -10.632092475891113
    7. '```' → logprob: -11.507092475891113
    8. ',' → logprob: -12.007092475891113
    9. '	for' → logprob: -13.132092475891113
    10. '           ' → logprob: -13.382092475891113

Token 392: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5297626852989197
    2. 'for' → logprob: -1.1547627449035645
    3. ' for' → logprob: -2.4047627449035645
    4. 'max' (adapté à ' max') → logprob: -5.7797627449035645
    5. '
' → logprob: -6.5297627449035645
    6. 'limit' → logprob: -8.029762268066406
    7. '```' → logprob: -8.404762268066406
    8. '   ' → logprob: -8.529762268066406
    9. '        
' → logprob: -8.654762268066406
    10. 'candidate' → logprob: -8.904762268066406

Token 393: '_search' (ID: 23642)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.13757717609405518
    2. '_weight' → logprob: -2.6375770568847656
    3. '_w' → logprob: -3.1375770568847656
    4. '_search' → logprob: -4.387577056884766
    5. '_limit' → logprob: -8.137577056884766
    6. '_test' → logprob: -8.762577056884766
    7. '_candidate' → logprob: -8.762577056884766
    8. '_max' → logprob: -8.887577056884766
    9. '_' → logprob: -9.012577056884766
    10. '_attempt' → logprob: -9.387577056884766

Token 394: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1607528030872345
    2. ' =' → logprob: -1.910752773284912
    3. '=max' → logprob: -7.910752773284912
    4. '_weight' → logprob: -9.41075325012207
    5. '=int' → logprob: -9.53575325012207
    6. 'weight' → logprob: -13.16075325012207
    7. '=w' → logprob: -13.28575325012207
    8. '   ' → logprob: -13.66075325012207
    9. '_w' → logprob: -13.91075325012207
    10. 'w' → logprob: -14.91075325012207

Token 395: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3147124648094177
    2. 'max' → logprob: -1.3147125244140625
    3. ' max' → logprob: -7.0647125244140625
    4. ' ' → logprob: -7.4397125244140625
    5. '   ' → logprob: -12.439712524414062
    6. '(max' → logprob: -13.939712524414062
    7. 'min' → logprob: -14.064712524414062
    8. '  ' → logprob: -14.814712524414062
    9. '	max' → logprob: -14.814712524414062
    10. '200' → logprob: -15.189712524414062

Token 396: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25196346640586853
    2. 'max' → logprob: -1.501963496208191
    3. ' max' → logprob: -10.62696361541748
    4. ' ' → logprob: -11.75196361541748
    5. '(max' → logprob: -14.37696361541748
    6. 'min' → logprob: -14.50196361541748
    7. '   ' → logprob: -15.00196361541748
    8. '200' → logprob: -15.12696361541748
    9. '20' → logprob: -16.001962661743164
    10. 'int' → logprob: -16.376962661743164

Token 397: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.001506528351455927
    2. ' *' → logprob: -6.501506328582764
    3. '*(' → logprob: -13.376506805419922
    4. '*num' → logprob: -14.126506805419922
    5. '*out' → logprob: -14.376506805419922
    6. '*m' → logprob: -14.376506805419922
    7. '*object' → logprob: -14.626506805419922
    8. '**' → logprob: -16.876506805419922
    9. '*ft' → logprob: -17.126506805419922
    10. '*p' → logprob: -17.501506805419922

Token 398: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.676292231422849e-05
    2. ' max' → logprob: -11.000017166137695
    3. '(max' → logprob: -20.250017166137695
    4. '   ' → logprob: -23.125017166137695
    5. '	max' → logprob: -23.500017166137695
    6. '[max' → logprob: -23.750017166137695
    7. '=max' → logprob: -23.875017166137695
    8. '_max' → logprob: -23.875017166137695
    9. ' ' → logprob: -24.500017166137695
    10. '           ' → logprob: -25.250017166137695

Token 399: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.127333340875339e-06
    2. '_amount' → logprob: -13.000003814697266
    3. 'a' → logprob: -13.250003814697266
    4. 'amount' → logprob: -17.250003814697266
    5. '(a' → logprob: -17.875003814697266
    6. '_' → logprob: -19.000003814697266
    7. '(amount' → logprob: -19.625003814697266
    8. '_amt' → logprob: -19.750003814697266
    9. '_ai' → logprob: -20.375003814697266
    10. '(' → logprob: -20.875003814697266

Token 400: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10214947164058685
    2. '       ' → logprob: -2.852149486541748
    3. ' for' → logprob: -3.477149486541748
    4. 'for' → logprob: -5.602149486541748
    5. '   ' → logprob: -6.602149486541748
    6. '        
' → logprob: -6.727149486541748
    7. '<|end|>' → logprob: -7.227149486541748
    8. '    
' → logprob: -7.477149486541748
    9. '  
' → logprob: -8.35214900970459
    10. ' 
' → logprob: -8.97714900970459

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15460847318172455
    2. ' for' → logprob: -2.2796084880828857
    3. '
' → logprob: -3.7796084880828857
    4. '   ' → logprob: -5.029608249664307
    5. 'for' → logprob: -5.404608249664307
    6. '        
' → logprob: -5.654608249664307
    7. '<|end|>' → logprob: -6.654608249664307
    8. '    
' → logprob: -7.404608249664307
    9. ',' → logprob: -7.779608249664307
    10. '  
' → logprob: -8.529608726501465

Token 402: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022384142503142357
    2. ' for' → logprob: -4.397384166717529
    3. '       ' → logprob: -4.647384166717529
    4. '
' → logprob: -9.022383689880371
    5. '```' → logprob: -10.272383689880371
    6. 'candidate' → logprob: -10.397383689880371
    7. 'new' → logprob: -11.147383689880371
    8. '   ' → logprob: -11.397383689880371
    9. '        
' → logprob: -11.772383689880371
    10. 'found' → logprob: -12.022383689880371

Token 403: ' First' (ID: 8338)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009967254009097815
    2. ' for' → logprob: -7.2509965896606445
    3. 'candidate' → logprob: -9.000996589660645
    4. 'found' → logprob: -9.125996589660645
    5. '       ' → logprob: -10.000996589660645
    6. 'new' → logprob: -13.000996589660645
    7. '   ' → logprob: -13.125996589660645
    8. '
' → logprob: -13.250996589660645
    9. 'possible' → logprob: -14.125996589660645
    10. 'from' → logprob: -14.500996589660645

Token 404: ' pre' (ID: 876)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.4770101010799408
    2. '_candidate' → logprob: -1.1020101308822632
    3. 'w' → logprob: -4.727010250091553
    4. 'weight' → logprob: -4.727010250091553
    5. 'for' → logprob: -4.852010250091553
    6. ' candidate' → logprob: -5.602010250091553
    7. 'new' → logprob: -5.977010250091553
    8. '       ' → logprob: -6.102010250091553
    9. 'def' → logprob: -6.102010250091553
    10. ' =' → logprob: -6.227010250091553

Token 405: 'compute' (ID: 54521)
  Prédit: 'vious'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vious' → logprob: -1.423101544380188
    2. 'possible' → logprob: -1.923101544380188
    3. 'sum' → logprob: -2.0481014251708984
    4. 'sent' → logprob: -2.1731014251708984
    5. 'dict' → logprob: -2.6731014251708984
    6. 's' → logprob: -2.6731014251708984
    7. 'pare' → logprob: -2.9231014251708984
    8. 'compute' → logprob: -3.0481014251708984
    9. 'computed' → logprob: -3.5481014251708984
    10. 'v' → logprob: -4.298101425170898

Token 406: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3016710579395294
    2. 'new' → logprob: -2.551671028137207
    3. ' possible' → logprob: -2.676671028137207
    4. ' new' → logprob: -3.551671028137207
    5. 'all' → logprob: -4.426671028137207
    6. 'next' → logprob: -4.676671028137207
    7. 'for' → logprob: -4.926671028137207
    8. 'current' → logprob: -5.301671028137207
    9. ' all' → logprob: -5.426671028137207
    10. 'updated' → logprob: -5.551671028137207

Token 407: ' sums' (ID: 73121)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.6796619892120361
    2. '_weights' → logprob: -1.9296619892120361
    3. '_next' → logprob: -2.054661989212036
    4. '_with' → logprob: -2.179661989212036
    5. '.add' → logprob: -2.929661989212036
    6. 's' → logprob: -2.929661989212036
    7. ' =' → logprob: -3.054661989212036
    8. '_add' → logprob: -3.429661989212036
    9. '_sets' → logprob: -3.554661989212036
    10. 'next' → logprob: -3.929661989212036

Token 408: ' without' (ID: 2935)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5686308741569519
    2. '   ' → logprob: -1.3186309337615967
    3. '       ' → logprob: -3.1936309337615967
    4. '_possible' → logprob: -3.3186309337615967
    5. 'possible' → logprob: -3.4436309337615967
    6. '=' → logprob: -4.443630695343018
    7. 'with' → logprob: -5.443630695343018
    8. 'for' → logprob: -5.568630695343018
    9. 's' → logprob: -5.818630695343018
    10. '_next' → logprob: -5.943630695343018

Token 409: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7208446860313416
    2. 'the' → logprob: -1.0958447456359863
    3. 'w' → logprob: -2.0958447456359863
    4. 'adding' → logprob: -3.9708447456359863
    5. 'any' → logprob: -4.220844745635986
    6. ' the' → logprob: -4.720844745635986
    7. ' new' → logprob: -5.220844745635986
    8. 'weights' → logprob: -6.220844745635986
    9. 'next' → logprob: -6.595844745635986
    10. ' any' → logprob: -6.595844745635986

Token 410: ' weight' (ID: 6049)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.5310171842575073
    2. 'weight' → logprob: -1.7810171842575073
    3. '_weights' → logprob: -1.9060171842575073
    4. ' weight' → logprob: -3.031017303466797
    5. 'weights' → logprob: -3.781017303466797
    6. ' weights' → logprob: -4.531017303466797
    7. '_' → logprob: -5.281017303466797
    8. '_possible' → logprob: -5.406017303466797
    9. 'possible' → logprob: -7.656017303466797
    10. '_candidate' → logprob: -7.906017303466797

Token 411: '
' (ID: 198)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.7068722248077393
    2. '       ' → logprob: -1.5818722248077393
    3. '
' → logprob: -2.3318722248077393
    4. '        
' → logprob: -2.8318722248077393
    5. '_possible' → logprob: -3.3318722248077393
    6. '   ' → logprob: -3.4568722248077393
    7. ' possible' → logprob: -3.4568722248077393
    8. '    
' → logprob: -4.58187198638916
    9. 'next' → logprob: -5.08187198638916
    10. '<|end|>' → logprob: -5.58187198638916

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16396945714950562
    2. '
' → logprob: -2.4139695167541504
    3. '        
' → logprob: -3.2889695167541504
    4. '<|end|>' → logprob: -5.03896951675415
    5. ',' → logprob: -5.41396951675415
    6. 'possible' → logprob: -5.53896951675415
    7. '   ' → logprob: -5.66396951675415
    8. '    
' → logprob: -6.28896951675415
    9. '_possible' → logprob: -7.41396951675415
    10. '<|end|>' → logprob: -7.53896951675415

Token 413: ' base' (ID: 3611)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3958360552787781
    2. 'for' → logprob: -1.3958361148834229
    3. ' for' → logprob: -2.895836114883423
    4. 'possible' → logprob: -4.520835876464844
    5. '
' → logprob: -5.520835876464844
    6. '        
' → logprob: -5.645835876464844
    7. 'next' → logprob: -6.270835876464844
    8. 'new' → logprob: -6.895835876464844
    9. '   ' → logprob: -7.145835876464844
    10. ' possible' → logprob: -7.895835876464844

Token 414: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.004206374753266573
    2. ' =' → logprob: -6.00420618057251
    3. '_' → logprob: -7.12920618057251
    4. 'possible' → logprob: -8.004206657409668
    5. '_weights' → logprob: -8.629206657409668
    6. '_s' → logprob: -8.754206657409668
    7. '=' → logprob: -9.629206657409668
    8. '_pos' → logprob: -9.754206657409668
    9. 's' → logprob: -10.254206657409668
    10. '_sets' → logprob: -10.379206657409668

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12750816345214844
    2. '=' → logprob: -2.1275081634521484
    3. 's' → logprob: -8.752508163452148
    4. '.add' → logprob: -9.002508163452148
    5. ',' → logprob: -9.252508163452148
    6. '=set' → logprob: -9.752508163452148
    7. '<|end|>' → logprob: -9.877508163452148
    8. 'possible' → logprob: -10.377508163452148
    9. '.' → logprob: -10.877508163452148
    10. '_possible' → logprob: -11.127508163452148

Token 416: ' measurable' (ID: 120968)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.00033296257606707513
    2. 'me' → logprob: -8.625332832336426
    3. 'set' → logprob: -8.875332832336426
    4. ' possible' → logprob: -11.500332832336426
    5. '{' → logprob: -13.250332832336426
    6. 'poss' → logprob: -13.625332832336426
    7. 'measure' → logprob: -15.250332832336426
    8. 'pos' → logprob: -16.000333786010742
    9. 'prob' → logprob: -17.000333786010742
    10. ' set' → logprob: -17.125333786010742

Token 417: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.0007118358626030385
    2. 'weights' → logprob: -7.250711917877197
    3. ' weights' → logprob: -14.000711441040039
    4. '(weight' → logprob: -14.750711441040039
    5. '_weights' → logprob: -15.000711441040039
    6. '.weights' → logprob: -15.750711441040039
    7. '(' → logprob: -16.00071144104004
    8. 'Weights' → logprob: -17.00071144104004
    9. '```' → logprob: -17.37571144104004
    10. '(numbers' → logprob: -17.87571144104004

Token 418: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133161664009094
    2. ')
' → logprob: -1.3133161067962646
    3. '       ' → logprob: -10.438316345214844
    4. ')

' → logprob: -11.313316345214844
    5. '   ' → logprob: -12.438316345214844
    6. ')
' → logprob: -12.563316345214844
    7. ').' → logprob: -12.938316345214844
    8. '.copy' → logprob: -13.063316345214844
    9. ' )' → logprob: -14.938316345214844
    10. ' )
' → logprob: -15.188316345214844

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025838397443294525
    2. '
' → logprob: -4.525838375091553
    3. ' for' → logprob: -4.900838375091553
    4. '<|end|>' → logprob: -5.650838375091553
    5. '        
' → logprob: -6.525838375091553
    6. '   ' → logprob: -6.900838375091553
    7. 'for' → logprob: -7.400838375091553
    8. ',' → logprob: -8.900838851928711
    9. '    
' → logprob: -9.400838851928711
    10. '  
' → logprob: -9.525838851928711

Token 420: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1305537074804306
    2. 'for' → logprob: -2.630553722381592
    3. ' for' → logprob: -3.005553722381592
    4. '   ' → logprob: -7.630553722381592
    5. '```' → logprob: -8.880553245544434
    6. '
' → logprob: -9.630553245544434
    7. '	for' → logprob: -10.130553245544434
    8. '        
' → logprob: -10.255553245544434
    9. ',' → logprob: -10.380553245544434
    10. '           ' → logprob: -12.005553245544434

Token 421: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011102091521024704
    2. 'candidate' → logprob: -7.126110076904297
    3. 'found' → logprob: -9.001110076904297
    4. ' for' → logprob: -9.501110076904297
    5. 'new' → logprob: -9.626110076904297
    6. 'w' → logprob: -10.376110076904297
    7. '       ' → logprob: -12.376110076904297
    8. '```' → logprob: -13.251110076904297
    9. 'from' → logprob: -14.251110076904297
    10. 'possible' → logprob: -14.251110076904297

Token 422: ' speed' (ID: 7733)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.3506501317024231
    2. 'test' → logprob: -1.4756500720977783
    3. 'import' → logprob: -4.100650310516357
    4. 'for' → logprob: -4.350650310516357
    5. 'add' → logprob: -4.975650310516357
    6. 'check' → logprob: -5.100650310516357
    7. 'range' → logprob: -5.100650310516357
    8. 'search' → logprob: -5.600650310516357
    9. ' test' → logprob: -6.100650310516357
    10. 'avoid' → logprob: -6.225650310516357

Token 423: ' up' (ID: 869)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.737191379070282
    2. 'up' → logprob: -1.1121914386749268
    3. ' up' → logprob: -1.8621914386749268
    4. '   ' → logprob: -3.9871914386749268
    5. '_up' → logprob: -4.237191200256348
    6. '           ' → logprob: -6.737191200256348
    7. '	up' → logprob: -7.112191200256348
    8. '_' → logprob: -7.362191200256348
    9. '        ' → logprob: -7.987191200256348
    10. ' ' → logprob: -8.487191200256348

Token 424: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47556254267692566
    2. 'for' → logprob: -1.100562572479248
    3. 'candidate' → logprob: -4.100562572479248
    4. ' candidate' → logprob: -4.350562572479248
    5. 'w' → logprob: -5.850562572479248
    6. ' w' → logprob: -5.975562572479248
    7. ' possible' → logprob: -6.475562572479248
    8. ' candidates' → logprob: -6.600562572479248
    9. 'possible' → logprob: -6.850562572479248
    10. ' next' → logprob: -6.975562572479248

Token 425: ' pre' (ID: 876)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31014448404312134
    2. ' for' → logprob: -1.6851444244384766
    3. 'found' → logprob: -3.0601444244384766
    4. 'import' → logprob: -4.685144424438477
    5. 'from' → logprob: -4.810144424438477
    6. 'candidate' → logprob: -5.935144424438477
    7. 'possible' → logprob: -5.935144424438477
    8. 'added' → logprob: -6.185144424438477
    9. '       ' → logprob: -6.185144424438477
    10. ' found' → logprob: -6.435144424438477

Token 426: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.012219768948853016
    2. 'computed' → logprob: -5.2622199058532715
    3. 'vent' → logprob: -6.1372199058532715
    4. 'dict' → logprob: -6.7622199058532715
    5. 'sum' → logprob: -7.1372199058532715
    6. 'pare' → logprob: -7.2622199058532715
    7. 'vious' → logprob: -7.6372199058532715
    8. 'serve' → logprob: -8.012219429016113
    9. 'from' → logprob: -8.012219429016113
    10. 'served' → logprob: -8.762219429016113

Token 427: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3797098994255066
    2. ' possible' → logprob: -2.8797099590301514
    3. 'all' → logprob: -3.1297099590301514
    4. 'base' → logprob: -3.2547099590301514
    5. ' all' → logprob: -3.6297099590301514
    6. 'reachable' → logprob: -3.6297099590301514
    7. ' base' → logprob: -3.8797099590301514
    8. ' the' → logprob: -4.254709720611572
    9. 'the' → logprob: -4.504709720611572
    10. 'for' → logprob: -4.504709720611572

Token 428: ' sums' (ID: 73121)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: ' new' (ID: 620)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9391247034072876
    2. 'new' → logprob: -1.0641247034072876
    3. 'the' → logprob: -2.939124584197998
    4. ' new' → logprob: -3.064124584197998
    5. 'base' → logprob: -3.439124584197998
    6. ' the' → logprob: -3.814124584197998
    7. 'next' → logprob: -3.939124584197998
    8. ' w' → logprob: -3.939124584197998
    9. ' base' → logprob: -4.189124584197998
    10. '{' → logprob: -4.439124584197998

Token 431: ' weight' (ID: 6049)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.5082098841667175
    2. ' weight' → logprob: -1.6332099437713623
    3. 'weight' → logprob: -2.1332099437713623
    4. '_weights' → logprob: -3.2582099437713623
    5. ' weights' → logprob: -4.258209705352783
    6. ' =' → logprob: -4.508209705352783
    7. '_possible' → logprob: -4.633209705352783
    8. 'weights' → logprob: -5.258209705352783
    9. '_' → logprob: -6.133209705352783
    10. '=' → logprob: -6.883209705352783

Token 432: ' w' (ID: 286)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34468191862106323
    2. ' for' → logprob: -1.469681978225708
    3. ' =' → logprob: -3.594681978225708
    4. '<|end|>' → logprob: -4.344681739807129
    5. 'for' → logprob: -4.594681739807129
    6. '<|end|>' → logprob: -5.719681739807129
    7. ',' → logprob: -6.594681739807129
    8. '=' → logprob: -6.969681739807129
    9. '   ' → logprob: -6.969681739807129
    10. ' and' → logprob: -7.344681739807129

Token 433: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5153757333755493
    2. ' for' → logprob: -1.7653757333755493
    3. '<|end|>' → logprob: -3.0153756141662598
    4. '
' → logprob: -3.2653756141662598
    5. ' =' → logprob: -3.2653756141662598
    6. ',' → logprob: -3.7653756141662598
    7. '<|end|>' → logprob: -3.7653756141662598
    8. ':' → logprob: -4.51537561416626
    9. '=' → logprob: -4.64037561416626
    10. 'for' → logprob: -4.89037561416626

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005474940408021212
    2. '<|end|>' → logprob: -5.630475044250488
    3. ' for' → logprob: -6.505475044250488
    4. 'for' → logprob: -8.755475044250488
    5. '<|end|>' → logprob: -8.880475044250488
    6. '        
' → logprob: -10.505475044250488
    7. ',' → logprob: -11.130475044250488
    8. '   ' → logprob: -11.630475044250488
    9. '
' → logprob: -12.380475044250488
    10. '           ' → logprob: -12.505475044250488

Token 435: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1735863834619522
    2. ' for' → logprob: -1.923586368560791
    3. 'for' → logprob: -4.423586368560791
    4. '<|end|>' → logprob: -6.923586368560791
    5. '   ' → logprob: -9.17358684539795
    6. '<|end|>' → logprob: -10.54858684539795
    7. ' ' → logprob: -10.67358684539795
    8. '        
' → logprob: -10.79858684539795
    9. '	for' → logprob: -10.79858684539795
    10. ',' → logprob: -11.04858684539795

Token 436: ' possible' (ID: 4149)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4821147322654724
    2. 'for' → logprob: -0.9821147322654724
    3. '       ' → logprob: -4.857114791870117
    4. '   ' → logprob: -9.482114791870117
    5. 'w' → logprob: -9.607114791870117
    6. ' w' → logprob: -11.107114791870117
    7. '	for' → logprob: -11.357114791870117
    8. '```' → logprob: -11.607114791870117
    9. '        
' → logprob: -12.107114791870117
    10. ' next' → logprob: -12.107114791870117

Token 437: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.3199765384197235
    2. ' =' → logprob: -1.819976568222046
    3. '_new' → logprob: -3.194976568222046
    4. '_w' → logprob: -4.194976329803467
    5. '_next' → logprob: -4.319976329803467
    6. 'with' → logprob: -4.944976329803467
    7. '=' → logprob: -5.319976329803467
    8. '_candidate' → logprob: -5.694976329803467
    9. '_union' → logprob: -5.944976329803467
    10. '.add' → logprob: -5.944976329803467

Token 438: '_w' (ID: 3567)
  Prédit: '_new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.675521731376648
    2. ' =' → logprob: -1.300521731376648
    3. '_w' → logprob: -2.5505218505859375
    4. 'w' → logprob: -3.4255218505859375
    5. '=' → logprob: -3.5505218505859375
    6. 'new' → logprob: -3.9255218505859375
    7. '_' → logprob: -4.0505218505859375
    8. '{' → logprob: -4.1755218505859375
    9. '_weights' → logprob: -4.8005218505859375
    10. '_next' → logprob: -5.3005218505859375

Token 439: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603236347436905
    2. '=' → logprob: -1.9103236198425293
    3. 's' → logprob: -10.035324096679688
    4. 'for' → logprob: -11.410324096679688
    5. '=set' → logprob: -12.035324096679688
    6. ' ' → logprob: -12.160324096679688
    7. 'w' → logprob: -12.160324096679688
    8. ' =
' → logprob: -12.410324096679688
    9. ',' → logprob: -12.660324096679688
    10. '.add' → logprob: -12.785324096679688

Token 440: ' measurable' (ID: 120968)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6489422917366028
    2. 'base' → logprob: -1.023942232131958
    3. '{' → logprob: -2.898942232131958
    4. 'possible' → logprob: -3.148942232131958
    5. ' base' → logprob: -4.773942470550537
    6. ' set' → logprob: -5.148942470550537
    7. 'lambda' → logprob: -5.523942470550537
    8. ' {' → logprob: -8.023941993713379
    9. 'me' → logprob: -8.273941993713379
    10. 'None' → logprob: -8.523941993713379

Token 441: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.005839449353516102
    2. 'weights' → logprob: -5.6308393478393555
    3. '([' → logprob: -6.1308393478393555
    4. '({' → logprob: -11.130839347839355
    5. ' weights' → logprob: -11.255839347839355
    6. '(' → logprob: -11.255839347839355
    7. '(weight' → logprob: -12.255839347839355
    8. '{' → logprob: -12.255839347839355
    9. '[' → logprob: -12.880839347839355
    10. '(w' → logprob: -13.255839347839355

Token 442: '+[' (ID: 166077)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.09331931173801422
    2. ' |' → logprob: -2.5933194160461426
    3. '|' → logprob: -4.343319416046143
    4. ')' → logprob: -7.343319416046143
    5. 'union' → logprob: -7.593319416046143
    6. ').' → logprob: -9.968318939208984
    7. '   ' → logprob: -10.468318939208984
    8. ')
' → logprob: -10.718318939208984
    9. ' +' → logprob: -10.843318939208984
    10. '
' → logprob: -10.968318939208984

Token 443: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.002627977170050144
    2. ' w' → logprob: -6.252627849578857
    3. 'str' → logprob: -8.002628326416016
    4. 'new' → logprob: -8.627628326416016
    5. '1' → logprob: -10.377628326416016
    6. 'candidate' → logprob: -10.627628326416016
    7. ']' → logprob: -10.877628326416016
    8. '[w' → logprob: -11.127628326416016
    9. ')' → logprob: -11.252628326416016
    10. '0' → logprob: -11.377628326416016

Token 444: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0009904148755595088
    2. '])
' → logprob: -7.375990390777588
    3. '+' → logprob: -9.375990867614746
    4. 'w' → logprob: -9.500990867614746
    5. ')' → logprob: -10.125990867614746
    6. '       ' → logprob: -10.500990867614746
    7. '])+' → logprob: -10.625990867614746
    8. ' ])' → logprob: -11.000990867614746
    9. ']' → logprob: -11.250990867614746
    10. '[' → logprob: -11.375990867614746

Token 445: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3456655442714691
    2. '
' → logprob: -1.3456655740737915
    3. ' for' → logprob: -3.845665454864502
    4. 'for' → logprob: -5.095665454864502
    5. '   ' → logprob: -6.845665454864502
    6. '        
' → logprob: -6.970665454864502
    7. ',' → logprob: -7.595665454864502
    8. '<|end|>' → logprob: -7.720665454864502
    9. '
' → logprob: -8.47066593170166
    10. ')' → logprob: -8.72066593170166

Token 446: ' computing' (ID: 34349)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8935589790344238
    2. 'for' → logprob: -1.0185589790344238
    3. '       ' → logprob: -2.143558979034424
    4. 'not' → logprob: -3.643558979034424
    5. ' not' → logprob: -3.768558979034424
    6. 'w' → logprob: -4.393558979034424
    7. '   ' → logprob: -4.393558979034424
    8. '#' → logprob: -5.143558979034424
    9. 'we' → logprob: -5.393558979034424
    10. ' we' → logprob: -5.518558979034424

Token 447: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9779613018035889
    2. 'w' → logprob: -1.4779613018035889
    3. 'each' → logprob: -1.6029613018035889
    4. 'increment' → logprob: -2.477961301803589
    5. 'from' → logprob: -3.352961301803589
    6. 'set' → logprob: -4.727961540222168
    7. 'every' → logprob: -4.852961540222168
    8. 'possible' → logprob: -4.852961540222168
    9. ' each' → logprob: -4.977961540222168
    10. ' for' → logprob: -5.227961540222168

Token 448: ' scratch' (ID: 29133)
  Prédit: 'scratch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scratch' → logprob: -0.0002986392646562308
    2. ' scratch' → logprob: -8.375298500061035
    3. 'scr' → logprob: -10.125298500061035
    4. '0' → logprob: -10.625298500061035
    5. '   ' → logprob: -13.750298500061035
    6. 'set' → logprob: -14.000298500061035
    7. '```' → logprob: -14.125298500061035
    8. 'zero' → logprob: -14.500298500061035
    9. ' ' → logprob: -15.625298500061035
    10. 'Scratch' → logprob: -15.750298500061035

Token 449: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4400920867919922
    2. ' for' → logprob: -1.5650920867919922
    3. 'for' → logprob: -2.315092086791992
    4. '<|end|>' → logprob: -4.315092086791992
    5. '   ' → logprob: -4.940092086791992
    6. '<|end|>' → logprob: -5.065092086791992
    7. '.' → logprob: -5.565092086791992
    8. ',' → logprob: -5.690092086791992
    9. ')' → logprob: -5.940092086791992
    10. ' is' → logprob: -6.440092086791992

Token 450: ' O' (ID: 532)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.7351265549659729
    2. 'slow' → logprob: -0.7351265549659729
    3. 'too' → logprob: -3.985126495361328
    4. 'cost' → logprob: -3.985126495361328
    5. 'time' → logprob: -6.235126495361328
    6. 'ine' → logprob: -6.985126495361328
    7. ' expensive' → logprob: -7.860126495361328
    8. ' costly' → logprob: -8.360126495361328
    9. ' slow' → logprob: -8.485126495361328
    10. '       ' → logprob: -9.610126495361328

Token 451: '(' (ID: 7)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.4450591802597046
    2. '(' → logprob: -1.4450591802597046
    3. '(n' → logprob: -2.570059299468994
    4. '(len' → logprob: -3.570059299468994
    5. '(N' → logprob: -4.070059299468994
    6. '(sum' → logprob: -7.695059299468994
    7. '(#' → logprob: -8.320058822631836
    8. '(w' → logprob: -8.695058822631836
    9. '(M' → logprob: -8.695058822631836
    10. '(weights' → logprob: -8.820058822631836

Token 452: '3' (ID: 18)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.13004158437252045
    2. '(m' → logprob: -2.6300415992736816
    3. '(' → logprob: -4.380041599273682
    4. 'n' → logprob: -4.505041599273682
    5. 'w' → logprob: -4.630041599273682
    6. 'weights' → logprob: -5.380041599273682
    7. '2' → logprob: -5.880041599273682
    8. ')' → logprob: -6.005041599273682
    9. '(n' → logprob: -6.880041599273682
    10. 'sum' → logprob: -7.005041599273682

Token 453: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.1334002017974854
    2. '*m' → logprob: -1.1334002017974854
    3. '*' → logprob: -2.2584002017974854
    4. '^' → logprob: -2.3834002017974854
    5. ' *' → logprob: -3.0084002017974854
    6. ')' → logprob: -3.0084002017974854
    7. '*w' → logprob: -3.7584002017974854
    8. '*n' → logprob: -3.7584002017974854
    9. '**)' → logprob: -5.758399963378906
    10. 'm' → logprob: -5.883399963378906

Token 454: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05812046676874161
    2. '(m' → logprob: -3.5581204891204834
    3. 'len' → logprob: -3.9331204891204834
    4. '(len' → logprob: -5.308120250701904
    5. '(' → logprob: -6.558120250701904
    6. 'n' → logprob: -6.933120250701904
    7. 'w' → logprob: -7.808120250701904
    8. '10' → logprob: -8.183120727539062
    9. '(n' → logprob: -8.933120727539062
    10. '(w' → logprob: -10.433120727539062

Token 455: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022978708148002625
    2. '+' → logprob: -6.502297878265381
    3. '),' → logprob: -7.877297878265381
    4. ' )' → logprob: -9.002297401428223
    5. '+)' → logprob: -9.377297401428223
    6. '_w' → logprob: -10.002297401428223
    7. ').' → logprob: -10.377297401428223
    8. 'w' → logprob: -11.002297401428223
    9. ')
' → logprob: -11.127297401428223
    10. '+w' → logprob: -11.377297401428223

Token 456: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014154224656522274
    2. '<|end|>' → logprob: -5.389154434204102
    3. ' for' → logprob: -6.139154434204102
    4. ')' → logprob: -6.264154434204102
    5. '
' → logprob: -6.514154434204102
    6. ',' → logprob: -6.514154434204102
    7. '<|end|>' → logprob: -7.014154434204102
    8. '        
' → logprob: -7.889154434204102
    9. 'for' → logprob: -8.264154434204102
    10. '.' → logprob: -8.264154434204102

Token 457: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0617821179330349
    2. 'candidate' → logprob: -3.686782121658325
    3. 'weight' → logprob: -3.811782121658325
    4. ' w' → logprob: -4.686781883239746
    5. ' candidate' → logprob: -6.436781883239746
    6. 'token' → logprob: -7.811781883239746
    7. ' iteration' → logprob: -8.186781883239746
    8. 'iteration' → logprob: -8.311781883239746
    9. 'test' → logprob: -8.436781883239746
    10. ' weight' → logprob: -8.561781883239746

Token 458: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04776841029524803
    2. '
' → logprob: -3.6727683544158936
    3. ' for' → logprob: -4.547768592834473
    4. 'for' → logprob: -5.547768592834473
    5. ')' → logprob: -6.422768592834473
    6. '<|end|>' → logprob: -6.422768592834473
    7. '        
' → logprob: -6.922768592834473
    8. ',' → logprob: -7.047768592834473
    9. '   ' → logprob: -7.672768592834473
    10. '<|end|>' → logprob: -8.172768592834473

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018747396534308791
    2. ' for' → logprob: -7.126874923706055
    3. 'for' → logprob: -7.876874923706055
    4. '        
' → logprob: -8.376874923706055
    5. ',' → logprob: -9.251874923706055
    6. '   ' → logprob: -9.876874923706055
    7. '
' → logprob: -9.876874923706055
    8. '<|end|>' → logprob: -10.001874923706055
    9. ')' → logprob: -10.126874923706055
    10. '#' → logprob: -10.126874923706055

Token 460: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22391660511493683
    2. '
' → logprob: -1.9739166498184204
    3. ' for' → logprob: -3.348916530609131
    4. 'for' → logprob: -3.973916530609131
    5. '        
' → logprob: -5.348916530609131
    6. '   ' → logprob: -7.473916530609131
    7. ' 
' → logprob: -7.723916530609131
    8. '    
' → logprob: -8.223917007446289
    9. '  
' → logprob: -8.223917007446289
    10. '#' (adapté à ' #') → logprob: -8.473917007446289

Token 461: ' Instead' (ID: 21050)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18654142320156097
    2. ' for' → logprob: -2.1865413188934326
    3. '       ' → logprob: -2.9365413188934326
    4. 'w' → logprob: -5.561541557312012
    5. '   ' → logprob: -7.811541557312012
    6. 'from' → logprob: -8.311541557312012
    7. ' w' → logprob: -8.936541557312012
    8. '
' → logprob: -9.561541557312012
    9. 'import' → logprob: -10.561541557312012
    10. '```' → logprob: -10.686541557312012

Token 462: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.141424760222435
    2. ',' → logprob: -2.1414246559143066
    3. ':' → logprob: -4.891424655914307
    4. '
' → logprob: -6.016424655914307
    5. ':
' → logprob: -6.266424655914307
    6. ' for' → logprob: -7.141424655914307
    7. '        
' → logprob: -7.141424655914307
    8. 'for' → logprob: -8.391425132751465
    9. ' we' → logprob: -8.641425132751465
    10. '   ' → logprob: -9.266425132751465

Token 463: ' use' (ID: 1199)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.943202555179596
    2. 'for' → logprob: -1.1932024955749512
    3. '#' → logprob: -2.068202495574951
    4. '
' → logprob: -3.193202495574951
    5. ' possible' → logprob: -3.318202495574951
    6. ' for' → logprob: -3.318202495574951
    7. 'def' → logprob: -4.068202495574951
    8. 'new' → logprob: -4.943202495574951
    9. 'prev' → logprob: -5.068202495574951
    10. 'current' → logprob: -5.193202495574951

Token 464: ' "' (ID: 392)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.10600397735834122
    2. 'a' → logprob: -3.231003999710083
    3. 'the' → logprob: -3.606003999710083
    4. 'next' → logprob: -4.231003761291504
    5. 'base' → logprob: -5.106003761291504
    6. ' possible' → logprob: -6.106003761291504
    7. 'for' → logprob: -6.231003761291504
    8. 'prev' → logprob: -6.606003761291504
    9. 'dp' → logprob: -7.106003761291504
    10. 'previous' → logprob: -7.106003761291504

Token 465: 'mer' (ID: 1159)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.1417710781097412
    2. 'weights' → logprob: -3.266771078109741
    3. 'next' → logprob: -3.391771078109741
    4. 'for' → logprob: -3.766771078109741
    5. 'base' → logprob: -4.26677131652832
    6. 'def' → logprob: -5.26677131652832
    7. 'new' → logprob: -5.51677131652832
    8. 'dp' → logprob: -5.51677131652832
    9. 'prev' → logprob: -6.64177131652832
    10. 'binary' → logprob: -6.76677131652832

Token 466: 'ging' (ID: 4512)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.008406060747802258
    2. 'ging' → logprob: -5.008406162261963
    3. 'ges' → logprob: -6.883406162261963
    4. 'get' → logprob: -8.633405685424805
    5. 'g' → logprob: -8.758405685424805
    6. 'gel' → logprob: -9.133405685424805
    7. 'gem' → logprob: -9.258405685424805
    8. 'gable' → logprob: -10.258405685424805
    9. 'gest' → logprob: -11.383405685424805
    10. 'ger' → logprob: -11.383405685424805

Token 467: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19553163647651672
    2. ' possible' → logprob: -2.5705316066741943
    3. '_possible' → logprob: -2.8205316066741943
    4. 'possible' → logprob: -3.6955316066741943
    5. ' of' → logprob: -4.695531845092773
    6. ' sets' → logprob: -5.445531845092773
    7. ' with' → logprob: -6.195531845092773
    8. 'with' → logprob: -8.695531845092773
    9. ' weights' → logprob: -9.070531845092773
    10. '_sets' → logprob: -9.195531845092773

Token 468: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1469653993844986
    2. '_possible' → logprob: -3.271965503692627
    3. '
' → logprob: -3.396965503692627
    4. ' possible' → logprob: -3.521965503692627
    5. 'possible' → logprob: -4.771965503692627
    6. ' for' → logprob: -5.271965503692627
    7. '<|end|>' → logprob: -5.271965503692627
    8. ' with' → logprob: -5.646965503692627
    9. ' sets' → logprob: -6.146965503692627
    10. '   ' → logprob: -6.646965503692627

Token 469: ' new' (ID: 620)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.44208377599716187
    2. 'possible' → logprob: -1.5670838356018066
    3. 'set' → logprob: -2.6920838356018066
    4. 'base' → logprob: -2.8170838356018066
    5. 'next' → logprob: -4.317083835601807
    6. ' {' → logprob: -5.942083835601807
    7. 'w' → logprob: -6.817083835601807
    8. ' base' → logprob: -7.067083835601807
    9. 'new' → logprob: -7.192083835601807
    10. ' possible' → logprob: -7.317083835601807

Token 470: ' weight' (ID: 6049)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.4412362277507782
    2. '_possible' → logprob: -1.6912362575531006
    3. ' weight' → logprob: -2.3162362575531006
    4. 'weight' → logprob: -3.0662362575531006
    5. '_weights' → logprob: -4.5662360191345215
    6. '_w' → logprob: -5.8162360191345215
    7. ' weights' → logprob: -5.8162360191345215
    8. 'possible' → logprob: -6.0662360191345215
    9. 'weights' → logprob: -6.4412360191345215
    10. ' possible' → logprob: -6.5662360191345215

Token 471: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07844185829162598
    2. '
' → logprob: -3.328441858291626
    3. ' for' → logprob: -4.078441619873047
    4. '<|end|>' → logprob: -4.953441619873047
    5. '        
' → logprob: -5.203441619873047
    6. ',' → logprob: -6.078441619873047
    7. '<|end|>' → logprob: -6.703441619873047
    8. ':' → logprob: -7.453441619873047
    9. 'for' → logprob: -7.578441619873047
    10. '=' → logprob: -7.578441619873047

Token 472: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018328495789319277
    2. '
' → logprob: -7.626832962036133
    3. '<|end|>' → logprob: -7.751832962036133
    4. '        
' → logprob: -7.876832962036133
    5. ' for' → logprob: -8.001832962036133
    6. 'for' → logprob: -9.501832962036133
    7. '   ' → logprob: -10.626832962036133
    8. '<|end|>' → logprob: -10.876832962036133
    9. ',' → logprob: -11.501832962036133
    10. ' next' → logprob: -11.876832962036133

Token 473: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21579279005527496
    2. ' for' → logprob: -2.8407928943634033
    3. 'for' → logprob: -3.3407928943634033
    4. 'possible' → logprob: -3.3407928943634033
    5. ' next' → logprob: -3.8407928943634033
    6. 'next' → logprob: -3.9657928943634033
    7. ' possible' → logprob: -4.465792655944824
    8. '
' → logprob: -5.965792655944824
    9. '   ' → logprob: -6.090792655944824
    10. 'new' → logprob: -6.215792655944824

Token 474: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3080909252166748
    2. '       ' → logprob: -2.058090925216675
    3. 'possible' → logprob: -3.183090925216675
    4. 'next' → logprob: -3.433090925216675
    5. ' for' → logprob: -3.558090925216675
    6. 'new' → logprob: -4.683091163635254
    7. '   ' → logprob: -4.808091163635254
    8. 'candidate' → logprob: -5.308091163635254
    9. 'from' → logprob: -6.433091163635254
    10. ' next' → logprob: -6.433091163635254

Token 475: ' each' (ID: 2454)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0437907837331295
    2. ' w' → logprob: -3.168790817260742
    3. 'candidate' → logprob: -8.668790817260742
    4. 'each' → logprob: -8.918790817260742
    5. 'possible' → logprob: -9.168790817260742
    6. 'new' → logprob: -9.418790817260742
    7. 'next' → logprob: -10.168790817260742
    8. ' each' → logprob: -10.293790817260742
    9. 'x' → logprob: -10.293790817260742
    10. '
' → logprob: -10.543790817260742

Token 476: ' sum' (ID: 4215)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3014880120754242
    2. 'x' → logprob: -1.6764880418777466
    3. ' w' → logprob: -3.176487922668457
    4. 'p' → logprob: -4.426487922668457
    5. ' x' → logprob: -4.426487922668457
    6. 'pw' → logprob: -6.301487922668457
    7. 'possible' → logprob: -6.551487922668457
    8. ' p' → logprob: -6.551487922668457
    9. 'candidate' → logprob: -7.051487922668457
    10. ' possible' → logprob: -8.301487922668457

Token 477: ' s' (ID: 265)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008774581365287304
    2. ' s' → logprob: -5.508774757385254
    3. 'in' → logprob: -6.508774757385254
    4. ' x' → logprob: -6.633774757385254
    5. 'x' → logprob: -7.383774757385254
    6. '_possible' → logprob: -7.883774757385254
    7. 'possible' → logprob: -8.383774757385254
    8. ' possible' → logprob: -8.383774757385254
    9. 's' → logprob: -8.633774757385254
    10. ',' → logprob: -8.758774757385254

Token 478: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.019592078402638435
    2. 'in' → logprob: -4.26959228515625
    3. ',' → logprob: -5.51959228515625
    4. ':' → logprob: -7.14459228515625
    5. 'possible' → logprob: -8.76959228515625
    6. '_possible' → logprob: -8.89459228515625
    7. ' possible' → logprob: -9.01959228515625
    8. ' ,' → logprob: -10.01959228515625
    9. ':
' → logprob: -10.26959228515625
    10. '   ' → logprob: -10.39459228515625

Token 479: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.12776565551757812
    2. 'possible' → logprob: -2.127765655517578
    3. ' base' → logprob: -7.127765655517578
    4. ' possible' → logprob: -11.127765655517578
    5. '   ' → logprob: -11.502765655517578
    6. 'poss' → logprob: -12.002765655517578
    7. 'next' → logprob: -14.002765655517578
    8. ' ' → logprob: -14.627765655517578
    9. '	base' → logprob: -14.627765655517578
    10. '```' → logprob: -15.127765655517578

Token 480: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -9.491498531133402e-06
    2. 'possible' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.500009536743164
    4. '_' → logprob: -15.625009536743164
    5. ' possible' → logprob: -17.250009536743164
    6. 'Possible' → logprob: -17.375009536743164
    7. 's' → logprob: -17.500009536743164
    8. '```' → logprob: -17.750009536743164
    9. '_pos' → logprob: -18.000009536743164
    10. ' _' → logprob: -18.125009536743164

Token 481: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0641570091247559
    2. ':
' → logprob: -1.0641570091247559
    3. ',' → logprob: -1.4391570091247559
    4. '           ' → logprob: -2.689157009124756
    5. '       ' → logprob: -6.314157009124756
    6. ',
' → logprob: -6.689157009124756
    7. '{' → logprob: -6.939157009124756
    8. '{
' → logprob: -8.564157485961914
    9. '   ' → logprob: -8.689157485961914
    10. ' ,' → logprob: -9.064157485961914

Token 482: ' possible' (ID: 4149)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.6969592571258545
    2. 'possible' → logprob: -1.6969592571258545
    3. 'next' → logprob: -1.6969592571258545
    4. ' for' → logprob: -1.9469592571258545
    5. ' possible' → logprob: -2.4469592571258545
    6. '           ' → logprob: -2.5719592571258545
    7. 'for' → logprob: -2.5719592571258545
    8. '       ' → logprob: -3.3219592571258545
    9. ' new' → logprob: -4.571959495544434
    10. ' add' → logprob: -4.946959495544434

Token 483: ' sums' (ID: 73121)
  Prédit: '_with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0136637631803751
    2. ' =' → logprob: -5.0136637687683105
    3. 'with' → logprob: -5.3886637687683105
    4. '=' → logprob: -7.5136637687683105
    5. '_possible' → logprob: -7.5136637687683105
    6. '.add' → logprob: -7.7636637687683105
    7. '   ' → logprob: -7.8886637687683105
    8. '.update' → logprob: -9.138663291931152
    9. '_next' → logprob: -9.638663291931152
    10. ' with' → logprob: -10.513663291931152

Token 484: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.058989405632019
    2. '.add' → logprob: -1.183989405632019
    3. '.update' → logprob: -1.558989405632019
    4. '=' → logprob: -2.0589895248413086
    5. 'add' → logprob: -6.433989524841309
    6. 'update' → logprob: -6.433989524841309
    7. 'next' → logprob: -6.808989524841309
    8. '.' → logprob: -7.058989524841309
    9. '.union' → logprob: -7.183989524841309
    10. ' |=' → logprob: -7.433989524841309

Token 485: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7502525448799133
    2. '{' → logprob: -1.7502524852752686
    3. 'new' → logprob: -1.8752524852752686
    4. 's' → logprob: -2.3752524852752686
    5. ' w' → logprob: -3.3752524852752686
    6. ' s' → logprob: -3.6252524852752686
    7. ' new' → logprob: -3.7502524852752686
    8. '{s' → logprob: -4.875252723693848
    9. 'abs' → logprob: -5.125252723693848
    10. ' {' → logprob: -5.875252723693848

Token 486: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4283677935600281
    2. ' =' → logprob: -1.5533678531646729
    3. '.add' → logprob: -2.553367853164673
    4. '.update' → logprob: -3.678367853164673
    5. 'add' → logprob: -3.928367853164673
    6. 'update' → logprob: -6.178367614746094
    7. '   ' → logprob: -6.303367614746094
    8. 'possible' → logprob: -6.678367614746094
    9. '|' → logprob: -6.803367614746094
    10. '.' → logprob: -7.178367614746094

Token 487: ' s' (ID: 265)
  Prédit: '{s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{s' → logprob: -0.05189897119998932
    2. '{' → logprob: -3.551898956298828
    3. ' {' → logprob: -4.051898956298828
    4. '{
' → logprob: -5.926898956298828
    5. 's' → logprob: -6.551898956298828
    6. '[s' → logprob: -8.926898956298828
    7. ' s' → logprob: -9.176898956298828
    8. 'set' → logprob: -9.176898956298828
    9. '
' → logprob: -10.551898956298828
    10. '   ' → logprob: -10.801898956298828

Token 488: ',' (ID: 11)
  Prédit: '+w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+w' → logprob: -0.04056303948163986
    2. '+s' → logprob: -3.5405631065368652
    3. ',' → logprob: -4.915563106536865
    4. '+' → logprob: -6.290563106536865
    5. ' +' → logprob: -6.915563106536865
    6. '-w' → logprob: -8.040562629699707
    7. 's' → logprob: -9.290562629699707
    8. ',w' → logprob: -10.165562629699707
    9. 'w' → logprob: -10.665562629699707
    10. '{s' → logprob: -11.040562629699707

Token 489: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017121860291808844
    2. ' s' → logprob: -6.876712322235107
    3. '{s' → logprob: -8.00171184539795
    4. 'abs' → logprob: -8.12671184539795
    5. '{' → logprob: -10.12671184539795
    6. '   ' → logprob: -13.00171184539795
    7. '`s' → logprob: -13.50171184539795
    8. ' ' → logprob: -13.62671184539795
    9. ' abs' → logprob: -14.00171184539795
    10. '
' → logprob: -14.62671184539795

Token 490: '+w' (ID: 155687)
  Prédit: '+w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+w' → logprob: -0.017716122791171074
    2. '+' → logprob: -4.267715930938721
    3. ' +' → logprob: -5.642715930938721
    4. '-w' → logprob: -14.392716407775879
    5. '+
' → logprob: -15.017716407775879
    6. 'w' → logprob: -15.017716407775879
    7. '<w' → logprob: -15.142716407775879
    8. '   ' → logprob: -15.392716407775879
    9. '+s' → logprob: -15.642716407775879
    10. ' ' → logprob: -15.892716407775879

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007078594993799925
    2. ',
' → logprob: -6.007078647613525
    3. '           ' → logprob: -6.132078647613525
    4. '   ' → logprob: -6.882078647613525
    5. '       ' → logprob: -7.132078647613525
    6. ' ,' → logprob: -8.007078170776367
    7. ',next' → logprob: -9.632078170776367
    8. '
' → logprob: -10.132078170776367
    9. ' and' → logprob: -10.257078170776367
    10. 'for' → logprob: -10.632078170776367

Token 492: ' |' (ID: 1022)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.007886500097811222
    2. 's' → logprob: -5.1328864097595215
    3. ' abs' → logprob: -6.6328864097595215
    4. '   ' → logprob: -8.38288688659668
    5. '|' → logprob: -8.75788688659668
    6. 'and' → logprob: -9.75788688659668
    7. '       ' → logprob: -9.75788688659668
    8. ' and' → logprob: -10.00788688659668
    9. ' ' → logprob: -10.13288688659668
    10. '           ' → logprob: -10.63288688659668

Token 493: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.266944157890975e-05
    2. ' s' → logprob: -10.125072479248047
    3. 'abs' → logprob: -10.375072479248047
    4. 'w' → logprob: -14.000072479248047
    5. '<|end|>' → logprob: -15.875072479248047
    6. ' abs' → logprob: -16.500072479248047
    7. '>s' → logprob: -17.000072479248047
    8. '   ' → logprob: -17.000072479248047
    9. '-s' → logprob: -17.125072479248047
    10. 'swer' → logprob: -17.250072479248047

Token 494: '-w' (ID: 4450)
  Prédit: '-w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-w' → logprob: -0.14851441979408264
    2. ' -' → logprob: -2.02351450920105
    3. '-' → logprob: -5.148514270782471
    4. 'w' → logprob: -12.773514747619629
    5. '-
' → logprob: -12.898514747619629
    6. ' ' → logprob: -13.023514747619629
    7. '−' → logprob: -13.148514747619629
    8. '-W' → logprob: -14.273514747619629
    9. ' w' → logprob: -14.523514747619629
    10. ' -
' → logprob: -14.648514747619629

Token 495: '|
' (ID: 14876)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.001550809945911169
    2. '}' → logprob: -7.001550674438477
    3. ')' → logprob: -7.501550674438477
    4. '}|' → logprob: -10.126550674438477
    5. ')|' → logprob: -10.876550674438477
    6. '|
' → logprob: -11.876550674438477
    7. '{' → logprob: -11.876550674438477
    8. ' |' → logprob: -12.626550674438477
    9. '})' → logprob: -12.751550674438477
    10. '|}
' → logprob: -13.376550674438477

Token 496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009519561426714063
    2. '        
' → logprob: -8.625951766967773
    3. '<|end|>' → logprob: -8.625951766967773
    4. '   ' → logprob: -8.750951766967773
    5. ',' → logprob: -9.125951766967773
    6. '
' → logprob: -9.250951766967773
    7. '	' → logprob: -9.375951766967773
    8. '           ' → logprob: -10.875951766967773
    9. '<|end|>' → logprob: -10.875951766967773
    10. '.' → logprob: -11.000951766967773

Token 497: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00743731576949358
    2. '
' → logprob: -5.757437229156494
    3. ' for' → logprob: -6.132437229156494
    4. 'for' → logprob: -6.757437229156494
    5. '        
' → logprob: -8.132437705993652
    6. '   ' → logprob: -8.257437705993652
    7. ',' → logprob: -9.257437705993652
    8. '<|end|>' → logprob: -9.382437705993652
    9. '	' → logprob: -10.132437705993652
    10. '           ' → logprob: -11.007437705993652

Token 498: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09740671515464783
    2. 'for' → logprob: -3.0974066257476807
    3. ' for' → logprob: -3.0974066257476807
    4. '
' → logprob: -6.72240686416626
    5. '   ' → logprob: -7.34740686416626
    6. '        
' → logprob: -8.597406387329102
    7. '\n' → logprob: -9.722406387329102
    8. ',' → logprob: -9.847406387329102
    9. 'w' → logprob: -9.847406387329102
    10. 'next' → logprob: -9.972406387329102

Token 499: ' possible' (ID: 4149)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.7742353081703186
    2. 'for' → logprob: -1.3992352485656738
    3. 'found' → logprob: -2.399235248565674
    4. 'def' → logprob: -3.149235248565674
    5. ' for' → logprob: -3.524235248565674
    6. '       ' → logprob: -3.649235248565674
    7. 'new' → logprob: -4.024235248565674
    8. ' candidate' → logprob: -4.024235248565674
    9. 'possible' → logprob: -4.149235248565674
    10. 'c' → logprob: -4.399235248565674

Token 500: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.00419533671811223
    2. ' =' → logprob: -6.254195213317871
    3. '_new' → logprob: -7.879195213317871
    4. '_w' → logprob: -7.879195213317871
    5. 's' → logprob: -8.254195213317871
    6. '_s' → logprob: -8.379195213317871
    7. '_next' → logprob: -8.504195213317871
    8. 'with' → logprob: -8.504195213317871
    9. '_weights' → logprob: -8.754195213317871
    10. '_possible' → logprob: -9.254195213317871

Token 501: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.00043710620957426727
    2. 'w' → logprob: -7.750437259674072
    3. ' =' → logprob: -13.250436782836914
    4. '_new' → logprob: -13.250436782836914
    5. '=' → logprob: -14.375436782836914
    6. 's' → logprob: -14.500436782836914
    7. '_' → logprob: -14.625436782836914
    8. '_weights' → logprob: -14.750436782836914
    9. 'new' → logprob: -15.125436782836914
    10. '_possible' → logprob: -15.625436782836914

Token 502: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3135069012641907
    2. ' =' → logprob: -1.313506841659546
    3. 's' → logprob: -8.563507080078125
    4. '=set' → logprob: -10.313507080078125
    5. '=[]' → logprob: -12.813507080078125
    6. '=
' → logprob: -13.188507080078125
    7. '=

' → logprob: -13.188507080078125
    8. ' =
' → logprob: -13.438507080078125
    9. ' ' → logprob: -13.813507080078125
    10. '_' → logprob: -14.063507080078125

Token 503: ' union' (ID: 22208)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.03693986311554909
    2. '{' → logprob: -3.536939859390259
    3. 'base' → logprob: -5.036940097808838
    4. ' set' → logprob: -7.411940097808838
    5. '{
' → logprob: -10.91193962097168
    6. ' {' → logprob: -10.91193962097168
    7. ' base' → logprob: -11.78693962097168
    8. '   ' → logprob: -12.16193962097168
    9. 'possible' → logprob: -12.41193962097168
    10. '
' → logprob: -12.66193962097168

Token 504: ' of' (ID: 328)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.4208563566207886
    2. '({' → logprob: -2.295856475830078
    3. 'base' → logprob: -2.545856475830078
    4. '(base' → logprob: -2.670856475830078
    5. '(s' → logprob: -3.295856475830078
    6. '{s' → logprob: -3.670856475830078
    7. '{x' → logprob: -4.545856475830078
    8. 'possible' → logprob: -5.170856475830078
    9. 'of' → logprob: -5.420856475830078
    10. '(x' → logprob: -6.045856475830078

Token 505: ' s' (ID: 265)
  Prédit: '{s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{s' → logprob: -0.13606956601142883
    2. '{' → logprob: -2.1360695362091064
    3. '{x' → logprob: -5.2610697746276855
    4. ' {' → logprob: -6.1360697746276855
    5. 's' → logprob: -6.6360697746276855
    6. 'set' → logprob: -8.386069297790527
    7. ' s' → logprob: -9.761069297790527
    8. '[s' → logprob: -9.886069297790527
    9. '{
' → logprob: -10.386069297790527
    10. '(s' → logprob: -10.886069297790527

Token 506: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1278694868087769
    2. ',' → logprob: -1.6278694868087769
    3. ' for' → logprob: -1.7528694868087769
    4. 's' → logprob: -2.2528696060180664
    5. ' +' → logprob: -3.2528696060180664
    6. '+w' → logprob: -3.6278696060180664
    7. '+' → logprob: -3.6278696060180664
    8. '{' → logprob: -4.002869606018066
    9. 'possible' → logprob: -4.252869606018066
    10. '{s' → logprob: -4.252869606018066

Token 507: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025516441091895103
    2. ' s' → logprob: -3.9005165100097656
    3. '{s' → logprob: -5.525516510009766
    4. 'abs' → logprob: -7.650516510009766
    5. '(s' → logprob: -8.400516510009766
    6. '{' → logprob: -9.025516510009766
    7. ' (' → logprob: -10.275516510009766
    8. ' {' → logprob: -10.775516510009766
    9. ' ' → logprob: -11.025516510009766
    10. ' abs' → logprob: -11.150516510009766

Token 508: '+w' (ID: 155687)
  Prédit: '+w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+w' → logprob: -0.004320572130382061
    2. '+' → logprob: -5.5043206214904785
    3. ' +' → logprob: -8.50432014465332
    4. '+s' → logprob: -10.62932014465332
    5. 'w' → logprob: -12.37932014465332
    6. 'plus' → logprob: -12.87932014465332
    7. '_plus' → logprob: -13.62932014465332
    8. '-w' → logprob: -13.87932014465332
    9. '+a' → logprob: -14.62932014465332
    10. '+x' → logprob: -14.62932014465332

Token 509: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00091050990158692
    2. ' ,' → logprob: -8.375910758972168
    3. 'and' → logprob: -8.500910758972168
    4. ' and' → logprob: -9.000910758972168
    5. '           ' → logprob: -9.375910758972168
    6. '```' → logprob: -9.750910758972168
    7. ',
' → logprob: -10.125910758972168
    8. 'for' → logprob: -10.500910758972168
    9. ',and' → logprob: -10.625910758972168
    10. ',next' → logprob: -10.625910758972168

Token 510: ' |' (ID: 1022)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.06679853796958923
    2. 's' → logprob: -3.066798448562622
    3. ' abs' → logprob: -5.316798686981201
    4. '|' → logprob: -5.316798686981201
    5. '{' → logprob: -5.816798686981201
    6. 'set' → logprob: -6.316798686981201
    7. '{s' → logprob: -6.441798686981201
    8. ' s' → logprob: -7.441798686981201
    9. ' ' → logprob: -7.566798686981201
    10. '(abs' → logprob: -8.941798210144043

Token 511: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009168167016468942
    2. 'abs' → logprob: -7.125916957855225
    3. ' s' → logprob: -9.625916481018066
    4. '(s' → logprob: -10.500916481018066
    5. '(' → logprob: -12.125916481018066
    6. '(abs' → logprob: -12.125916481018066
    7. '   ' → logprob: -13.000916481018066
    8. 'w' → logprob: -13.375916481018066
    9. ' abs' → logprob: -13.500916481018066
    10. '{s' → logprob: -14.375916481018066

Token 512: '-w' (ID: 4450)
  Prédit: '-w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-w' → logprob: -0.6905947327613831
    2. '-s' → logprob: -0.9405947327613831
    3. '-' → logprob: -2.8155946731567383
    4. ' -' → logprob: -3.4405946731567383
    5. '(s' → logprob: -4.440594673156738
    6. 's' → logprob: -6.315594673156738
    7. 'w' → logprob: -6.565594673156738
    8. '(' → logprob: -7.815594673156738
    9. '(x' → logprob: -8.565594673156738
    10. '-x' → logprob: -8.940594673156738

Token 513: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.02580958791077137
    2. ')' → logprob: -4.0258097648620605
    3. '}' → logprob: -5.4008097648620605
    4. 'for' → logprob: -6.1508097648620605
    5. ' for' → logprob: -8.150809288024902
    6. '|
' → logprob: -8.900809288024902
    7. 's' → logprob: -9.025809288024902
    8. '}|' → logprob: -9.150809288024902
    9. ')|' → logprob: -9.275809288024902
    10. '})' → logprob: -9.525809288024902

Token 514: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017299586907029152
    2. '
' → logprob: -4.642299652099609
    3. '<|end|>' → logprob: -6.017299652099609
    4. ',' → logprob: -6.267299652099609
    5. ' for' → logprob: -6.767299652099609
    6. '        
' → logprob: -7.142299652099609
    7. '\n' → logprob: -8.39229965209961
    8. '<|end|>' → logprob: -8.51729965209961
    9. '   ' → logprob: -8.64229965209961
    10. ',
' → logprob: -9.14229965209961

Token 515: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16168521344661713
    2. ' s' → logprob: -1.9116852283477783
    3. ' all' → logprob: -7.161684989929199
    4. 'w' → logprob: -8.6616849899292
    5. ' each' → logprob: -8.6616849899292
    6. 'each' → logprob: -8.7866849899292
    7. 'all' → logprob: -9.1616849899292
    8. ' w' → logprob: -9.6616849899292
    9. '_s' → logprob: -11.9116849899292
    10. ' every' → logprob: -13.1616849899292

Token 516: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11288385838270187
    2. 'in' → logprob: -2.2378838062286377
    3. ' ' → logprob: -10.112883567810059
    4. 's' → logprob: -11.487883567810059
    5. '<|end|>' → logprob: -12.487883567810059
    6. '  ' → logprob: -13.862883567810059
    7. '	in' → logprob: -13.987883567810059
    8. ' ' → logprob: -14.237883567810059
    9. 'n' → logprob: -14.362883567810059
    10. ' s' → logprob: -14.362883567810059

Token 517: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0008066523587331176
    2. ' base' → logprob: -7.12580680847168
    3. '   ' → logprob: -13.75080680847168
    4. 'possible' → logprob: -14.00080680847168
    5. ' ' → logprob: -15.87580680847168
    6. '
' → logprob: -16.00080680847168
    7. '	base' → logprob: -16.87580680847168
    8. '(base' → logprob: -17.25080680847168
    9. '  ' → logprob: -18.37580680847168
    10. '           ' → logprob: -19.00080680847168

Token 518: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.00020449401927180588
    2. 'possible' → logprob: -8.500204086303711
    3. 'Possible' → logprob: -14.000204086303711
    4. ' possible' → logprob: -16.37520408630371
    5. '   ' → logprob: -17.62520408630371
    6. '_' → logprob: -18.62520408630371
    7. '```' → logprob: -18.62520408630371
    8. 'for' → logprob: -19.12520408630371
    9. '`' → logprob: -19.25020408630371
    10. '#' → logprob: -19.50020408630371

Token 519: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04922080412507057
    2. '
' → logprob: -3.1742208003997803
    3. '        
' → logprob: -6.299221038818359
    4. '<|end|>' → logprob: -6.424221038818359
    5. ',' → logprob: -7.299221038818359
    6. ' for' → logprob: -7.674221038818359
    7. '\n' → logprob: -7.924221038818359
    8. '   ' → logprob: -8.17422103881836
    9. 'for' → logprob: -8.54922103881836
    10. ',
' → logprob: -8.79922103881836

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10557586699724197
    2. '
' → logprob: -2.3555757999420166
    3. '        
' → logprob: -6.355576038360596
    4. ' for' → logprob: -6.980576038360596
    5. '\n' → logprob: -7.355576038360596
    6. 'for' → logprob: -7.605576038360596
    7. '   ' → logprob: -7.605576038360596
    8. '<|end|>' → logprob: -7.605576038360596
    9. '  
' → logprob: -8.605575561523438
    10. ',' → logprob: -9.730575561523438

Token 521: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25406792759895325
    2. '
' → logprob: -1.6290678977966309
    3. ' for' → logprob: -4.004067897796631
    4. '        
' → logprob: -5.754067897796631
    5. '\n' → logprob: -5.879067897796631
    6. 'for' → logprob: -5.879067897796631
    7. '   ' → logprob: -7.879067897796631
    8. '<|end|>' → logprob: -8.629068374633789
    9. '  
' → logprob: -8.879068374633789
    10. ' 
' → logprob: -9.004068374633789

Token 522: ' Then' (ID: 7801)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4913727641105652
    2. ' for' → logprob: -1.61637282371521
    3. '       ' → logprob: -1.74137282371521
    4. '
' → logprob: -4.366372585296631
    5. '   ' → logprob: -6.991372585296631
    6. '        
' → logprob: -8.241373062133789
    7. '\n' → logprob: -8.991373062133789
    8. '```' → logprob: -8.991373062133789
    9. 'w' → logprob: -9.866373062133789
    10. ' 
' → logprob: -10.241373062133789

Token 523: ' check' (ID: 2371)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25770482420921326
    2. 'for' → logprob: -1.6327048540115356
    3. ' for' → logprob: -4.007704734802246
    4. 'found' → logprob: -4.382704734802246
    5. ' found' → logprob: -7.757704734802246
    6. '           ' → logprob: -8.007704734802246
    7. '   ' → logprob: -9.382704734802246
    8. 'candidate' → logprob: -9.757704734802246
    9. 'possible' → logprob: -9.882704734802246
    10. 'def' → logprob: -10.007704734802246

Token 524: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21323557198047638
    2. '       ' → logprob: -2.46323561668396
    3. ' for' → logprob: -2.83823561668396
    4. 'w' → logprob: -3.08823561668396
    5. 'if' → logprob: -6.963235378265381
    6. ' w' → logprob: -7.838235378265381
    7. ' if' → logprob: -7.963235378265381
    8. 'candidate' → logprob: -8.088235855102539
    9. '           ' → logprob: -8.213235855102539
    10. '   ' → logprob: -8.213235855102539

Token 525: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00136988062877208
    2. 'fail' → logprob: -7.126369953155518
    3. 'a' → logprob: -8.62636947631836
    4. ' all' → logprob: -9.00136947631836
    5. 'set' → logprob: -9.25136947631836
    6. '   ' → logprob: -9.25136947631836
    7. ' ' → logprob: -10.25136947631836
    8. '       ' → logprob: -12.00136947631836
    9. '
' → logprob: -12.50136947631836
    10. '           ' → logprob: -12.62636947631836

Token 526: ' amounts' (ID: 22586)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.8137487173080444
    2. '(a' → logprob: -0.9387487173080444
    3. '(f' → logprob: -2.188748836517334
    4. 'a' → logprob: -3.438748836517334
    5. ' fail' → logprob: -4.188748836517334
    6. '(' → logprob: -6.438748836517334
    7. 'f' → logprob: -6.688748836517334
    8. 'amount' → logprob: -6.938748836517334
    9. '_fail' → logprob: -7.563748836517334
    10. ' a' → logprob: -7.688748836517334

Token 527: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06829294562339783
    2. 'in' → logprob: -2.9432928562164307
    3. ' are' → logprob: -4.69329309463501
    4. 'are' → logprob: -7.19329309463501
    5. ' for' → logprob: -7.31829309463501
    6. 'for' → logprob: -7.56829309463501
    7. '.' → logprob: -8.193292617797852
    8. 'a' → logprob: -8.318292617797852
    9. '<=' → logprob: -8.443292617797852
    10. '       ' → logprob: -8.568292617797852

Token 528: ' amounts' (ID: 22586)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.742499589920044
    2. 'possible' → logprob: -0.742499589920044
    3. 'set' → logprob: -4.242499351501465
    4. '{' → logprob: -4.367499351501465
    5. ' fail' → logprob: -5.617499351501465
    6. '[a' → logprob: -5.617499351501465
    7. '[' → logprob: -5.867499351501465
    8. 'amount' → logprob: -6.367499351501465
    9. 'a' → logprob: -6.492499351501465
    10. '   ' → logprob: -6.492499351501465

Token 529: ' are' (ID: 553)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.26713478565216064
    2. '       ' → logprob: -2.267134666442871
    3. ' for' → logprob: -3.142134666442871
    4. ':' → logprob: -3.392134666442871
    5. 'for' → logprob: -4.142134666442871
    6. '):
' → logprob: -4.392134666442871
    7. ' in' → logprob: -4.642134666442871
    8. '           ' → logprob: -5.517134666442871
    9. '   ' → logprob: -5.892134666442871
    10. '.' → logprob: -6.392134666442871

Token 530: ' in' (ID: 306)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.32633456587791443
    2. 'in' → logprob: -1.3263345956802368
    3. ' in' → logprob: -4.826334476470947
    4. ' possible' → logprob: -5.576334476470947
    5. 'covered' → logprob: -7.826334476470947
    6. 'subset' → logprob: -8.576334953308105
    7. 'found' → logprob: -8.826334953308105
    8. '   ' → logprob: -9.326334953308105
    9. 'included' → logprob: -9.701334953308105
    10. '<=' → logprob: -9.951334953308105

Token 531: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.004787295591086149
    2. ' possible' → logprob: -5.504787445068359
    3. '       ' → logprob: -7.879787445068359
    4. '   ' → logprob: -8.62978744506836
    5. '           ' → logprob: -9.25478744506836
    6. '{' → logprob: -11.62978744506836
    7. 'poss' → logprob: -11.87978744506836
    8. 'that' → logprob: -12.37978744506836
    9. 'the' → logprob: -12.50478744506836
    10. '```' → logprob: -12.50478744506836

Token 532: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.01735101267695427
    2. '_possible' → logprob: -4.392351150512695
    3. '_for' → logprob: -5.892351150512695
    4. '_weights' → logprob: -7.142351150512695
    5. '
' → logprob: -7.892351150512695
    6. 'with' → logprob: -8.142351150512695
    7. 'for' → logprob: -8.267351150512695
    8. '   ' → logprob: -9.392351150512695
    9. '_set' → logprob: -10.017351150512695
    10. '_w' → logprob: -10.142351150512695

Token 533: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.6015936732292175
    2. 'w' → logprob: -0.8515936732292175
    3. 'possible' → logprob: -3.9765937328338623
    4. '_possible' → logprob: -5.226593494415283
    5. '{' → logprob: -7.851593494415283
    6. '   ' → logprob: -8.851593971252441
    7. 'base' → logprob: -8.851593971252441
    8. ' possible' → logprob: -9.351593971252441
    9. '_base' → logprob: -9.476593971252441
    10. '
' → logprob: -9.976593971252441

Token 534: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015090864151716232
    2. '
' → logprob: -4.3900909423828125
    3. ' for' → logprob: -6.7650909423828125
    4. '<|end|>' → logprob: -7.6400909423828125
    5. '        
' → logprob: -7.8900909423828125
    6. 'for' → logprob: -8.140090942382812
    7. ',' → logprob: -9.015090942382812
    8. '   ' → logprob: -10.140090942382812
    9. '\n' → logprob: -10.515090942382812
    10. '<|end|>' → logprob: -10.765090942382812

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06377838551998138
    2. '
' → logprob: -2.9387784004211426
    3. 'for' → logprob: -5.813778400421143
    4. ' for' → logprob: -6.063778400421143
    5. '        
' → logprob: -6.313778400421143
    6. '   ' → logprob: -6.563778400421143
    7. '\n' → logprob: -9.063777923583984
    8. '    
' → logprob: -10.063777923583984
    9. '```' → logprob: -10.188777923583984
    10. '<|end|>' → logprob: -10.313777923583984

Token 536: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45147642493247986
    2. '
' → logprob: -1.0764764547348022
    3. ' for' → logprob: -4.451476573944092
    4. 'for' → logprob: -4.826476573944092
    5. '   ' → logprob: -6.326476573944092
    6. '        
' → logprob: -7.451476573944092
    7. '\n' → logprob: -8.076476097106934
    8. '```' → logprob: -9.576476097106934
    9. '    
' → logprob: -10.201476097106934
    10. '	for' → logprob: -11.451476097106934

Token 537: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6147596836090088
    2. 'for' → logprob: -0.8647596836090088
    3. ' for' → logprob: -3.614759683609009
    4. '
' → logprob: -5.23975944519043
    5. '   ' → logprob: -5.23975944519043
    6. '```' → logprob: -7.98975944519043
    7. 'w' → logprob: -9.11475944519043
    8. '        
' → logprob: -9.98975944519043
    9. '\n' → logprob: -10.98975944519043
    10. 'def' → logprob: -12.11475944519043

Token 538: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20290975272655487
    2. ' for' → logprob: -1.7029097080230713
    3. '       ' → logprob: -6.70290994644165
    4. 'w' → logprob: -8.952909469604492
    5. '   ' → logprob: -9.952909469604492
    6. ' w' → logprob: -10.327909469604492
    7. '```' → logprob: -10.952909469604492
    8. 'def' → logprob: -11.202909469604492
    9. '
' → logprob: -11.202909469604492
    10. 'found' → logprob: -11.702909469604492

Token 539: ' implement' (ID: 6365)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2844112813472748
    2. ' for' → logprob: -1.5344113111495972
    3. '       ' → logprob: -3.6594111919403076
    4. '   ' → logprob: -6.034411430358887
    5. ' =' → logprob: -6.909411430358887
    6. ' continue' → logprob: -7.534411430358887
    7. '=' → logprob: -8.159411430358887
    8. ' can' → logprob: -8.159411430358887
    9. ' ' → logprob: -8.159411430358887
    10. '    ' → logprob: -8.534411430358887

Token 540: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20405733585357666
    2. '       ' → logprob: -2.204057216644287
    3. '
' → logprob: -3.329057216644287
    4. 'for' → logprob: -3.454057216644287
    5. '        
' → logprob: -6.454057216644287
    6. '```' → logprob: -6.704057216644287
    7. 'def' → logprob: -7.204057216644287
    8. ' 
' → logprob: -7.329057216644287
    9. '   ' → logprob: -7.454057216644287
    10. ':' → logprob: -7.704057216644287

Token 541: ' fast' (ID: 5661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0488799586892128
    2. ' for' → logprob: -3.048879861831665
    3. 'def' → logprob: -8.423879623413086
    4. '```' → logprob: -10.798879623413086
    5. '
' → logprob: -10.923879623413086
    6. '           ' → logprob: -11.923879623413086
    7. '       ' → logprob: -12.173879623413086
    8. ' loop' → logprob: -12.298879623413086
    9. ':' → logprob: -12.548879623413086
    10. 'while' → logprob: -13.048879623413086

Token 542: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5311397910118103
    2. 'search' → logprob: -1.406139850616455
    3. 'def' → logprob: -2.406139850616455
    4. ' for' → logprob: -3.031139850616455
    5. ' search' → logprob: -4.656139850616455
    6. 'candidate' → logprob: -4.781139850616455
    7. 'check' → logprob: -5.906139850616455
    8. 'method' → logprob: -6.406139850616455
    9. 'loop' → logprob: -6.656139850616455
    10. ' loop' → logprob: -7.406139850616455

Token 543: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1448739469051361
    2. '
' → logprob: -2.394873857498169
    3. ' for' → logprob: -3.644873857498169
    4. 'for' → logprob: -4.519874095916748
    5. '   ' → logprob: -5.394874095916748
    6. '        
' → logprob: -7.144874095916748
    7. ':' → logprob: -7.769874095916748
    8. '\n' → logprob: -7.894874095916748
    9. '```' → logprob: -9.14487361907959
    10. '    
' → logprob: -9.39487361907959

Token 544: ' candidate' (ID: 17098)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.7259402275085449
    2. 'w' → logprob: -1.100940227508545
    3. ' ' → logprob: -1.975940227508545
    4. ' candidate' → logprob: -4.100940227508545
    5. 'candidate' → logprob: -5.475940227508545
    6. ' 
' → logprob: -5.475940227508545
    7. ' _' → logprob: -5.725940227508545
    8. '=' → logprob: -6.225940227508545
    9. ' weight' → logprob: -6.350940227508545
    10. ')' → logprob: -6.600940227508545

Token 545: ' w' (ID: 286)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3706201314926147
    2. '       ' → logprob: -1.6206201314926147
    3. ' for' → logprob: -1.6206201314926147
    4. ' 
' → logprob: -1.8706201314926147
    5. '
' → logprob: -2.1206202507019043
    6. '\n' → logprob: -3.7456202507019043
    7. '   ' → logprob: -4.495620250701904
    8. '        
' → logprob: -4.620620250701904
    9. ' \' → logprob: -5.245620250701904
    10. ':' → logprob: -5.620620250701904

Token 546: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07019028067588806
    2. ' for' → logprob: -3.195190191268921
    3. '
' → logprob: -4.0701904296875
    4. '   ' → logprob: -5.3201904296875
    5. 'for' → logprob: -5.5701904296875
    6. '        
' → logprob: -7.3201904296875
    7. '<|end|>' → logprob: -9.1951904296875
    8. '    
' → logprob: -9.8201904296875
    9. '  
' → logprob: -10.1951904296875
    10. ',' → logprob: -10.3201904296875

Token 547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006897593382745981
    2. '   ' → logprob: -5.256897449493408
    3. ' for' → logprob: -7.006897449493408
    4. 'for' → logprob: -7.256897449493408
    5. '
' → logprob: -10.381897926330566
    6. '        
' → logprob: -11.256897926330566
    7. '	for' → logprob: -13.506897926330566
    8. '<|end|>' → logprob: -13.506897926330566
    9. '```' → logprob: -13.756897926330566
    10. '    
' → logprob: -13.756897926330566

Token 548: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5581184029579163
    2. '
' → logprob: -1.1831183433532715
    3. '   ' → logprob: -2.9331183433532715
    4. ' for' → logprob: -3.4331183433532715
    5. 'for' → logprob: -3.4331183433532715
    6. '        
' → logprob: -6.5581183433532715
    7. '    
' → logprob: -6.9331183433532715
    8. '\n' → logprob: -7.1831183433532715
    9. ' 
' → logprob: -8.80811882019043
    10. '  
' → logprob: -9.18311882019043

Token 549: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.33158770203590393
    2. 'check' → logprob: -1.3315876722335815
    3. 'possible' → logprob: -4.706587791442871
    4. 'try' → logprob: -5.706587791442871
    5. 'candidate' → logprob: -6.456587791442871
    6. 'test' → logprob: -6.831587791442871
    7. ' can' → logprob: -6.956587791442871
    8. ' check' → logprob: -7.081587791442871
    9. 'is' → logprob: -7.081587791442871
    10. 'valid' → logprob: -8.581587791442871

Token 550: '_all' (ID: 13305)
  Prédit: '_measure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_measure' → logprob: -0.002576370956376195
    2. '_can' → logprob: -6.8775763511657715
    3. '_me' → logprob: -7.1275763511657715
    4. '_' → logprob: -8.12757682800293
    5. '_continue' → logprob: -9.00257682800293
    6. '_find' → logprob: -9.87757682800293
    7. '_check' → logprob: -9.87757682800293
    8. '_compute' → logprob: -10.00257682800293
    9. '_add' → logprob: -10.12757682800293
    10. '_have' → logprob: -11.12757682800293

Token 551: '_with' (ID: 14161)
  Prédit: '_measure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_measure' → logprob: -5.68153518543113e-05
    2. 'measure' → logprob: -10.625057220458984
    3. '_me' → logprob: -11.125057220458984
    4. '(_' → logprob: -12.875057220458984
    5. '_' → logprob: -13.875057220458984
    6. 'Measure' → logprob: -14.125057220458984
    7. ' _' → logprob: -14.125057220458984
    8. '(' → logprob: -14.125057220458984
    9. 's' → logprob: -14.250057220458984
    10. '```' → logprob: -14.250057220458984

Token 552: '_new' (ID: 13000)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.6003119945526123
    2. 'w' → logprob: -1.4753119945526123
    3. '(w' → logprob: -1.6003119945526123
    4. '_new' → logprob: -5.225312232971191
    5. 'new' → logprob: -5.225312232971191
    6. ' w' → logprob: -6.100312232971191
    7. 'candidate' → logprob: -6.350312232971191
    8. ' (' → logprob: -6.600312232971191
    9. '_candidate' → logprob: -6.600312232971191
    10. '(candidate' → logprob: -7.350312232971191

Token 553: '_w' (ID: 3567)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0080209756270051
    2. 'weight' → logprob: -5.258020877838135
    3. '_w' → logprob: -6.758020877838135
    4. '(weight' → logprob: -7.383020877838135
    5. 'w' → logprob: -8.383021354675293
    6. '(w' → logprob: -8.633021354675293
    7. '(_' → logprob: -8.758021354675293
    8. '(' → logprob: -9.008021354675293
    9. '```' → logprob: -9.633021354675293
    10. '_weights' → logprob: -9.883021354675293

Token 554: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.00019269285257905722
    2. '(' → logprob: -8.750192642211914
    3. ' (' → logprob: -11.375192642211914
    4. '(weights' → logprob: -11.750192642211914
    5. '(weight' → logprob: -12.375192642211914
    6. 'w' → logprob: -12.375192642211914
    7. '_w' → logprob: -13.625192642211914
    8. '(
' → logprob: -13.625192642211914
    9. '(new' → logprob: -14.875192642211914
    10. ',w' → logprob: -15.125192642211914

Token 555: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02676616795361042
    2. '):
' → logprob: -3.776766061782837
    3. ',' → logprob: -5.776766300201416
    4. '):
' → logprob: -8.776765823364258
    5. ':' → logprob: -9.901765823364258
    6. ')' → logprob: -10.151765823364258
    7. ',w' → logprob: -10.151765823364258
    8. 'w' → logprob: -10.401765823364258
    9. '   ' → logprob: -10.526765823364258
    10. '(weights' → logprob: -11.151765823364258

Token 556: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07435430586338043
    2. '   ' → logprob: -2.824354410171509
    3. '           ' → logprob: -4.57435417175293
    4. ':' → logprob: -6.69935417175293
    5. ':
' → logprob: -8.32435417175293
    6. ',' → logprob: -8.57435417175293
    7. ')' → logprob: -9.07435417175293
    8. '):
' → logprob: -9.32435417175293
    9. '```' → logprob: -10.57435417175293
    10. '
' → logprob: -10.69935417175293

Token 557: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9724510312080383
    2. 'new' (adapté à ' new') → logprob: -1.0974509716033936
    3. 'possible' → logprob: -1.5974509716033936
    4. ' new' → logprob: -3.8474509716033936
    5. 'candidate' → logprob: -3.9724509716033936
    6. ' possible' → logprob: -5.097451210021973
    7. 'next' → logprob: -5.222451210021973
    8. '   ' → logprob: -5.222451210021973
    9. 'temp' → logprob: -5.472451210021973
    10. 'pos' → logprob: -5.722451210021973

Token 558: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.0008142740116454661
    2. 'possible' → logprob: -7.250814437866211
    3. '_pos' → logprob: -10.250814437866211
    4. '   ' → logprob: -10.750814437866211
    5. ' =' → logprob: -11.375814437866211
    6. '_set' → logprob: -11.375814437866211
    7. 's' → logprob: -11.375814437866211
    8. 'set' → logprob: -12.500814437866211
    9. 'pos' → logprob: -12.500814437866211
    10. '_sets' → logprob: -13.625814437866211

Token 559: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2258579283952713
    2. ' =' → logprob: -1.6008579730987549
    3. '=set' → logprob: -7.725857734680176
    4. 's' → logprob: -13.475857734680176
    5. '   ' → logprob: -14.225857734680176
    6. 'set' → logprob: -14.475857734680176
    7. ' ' → logprob: -15.100857734680176
    8. '=
' → logprob: -15.600857734680176
    9. '=

' → logprob: -15.600857734680176
    10. '={' → logprob: -15.600857734680176

Token 560: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00011284107313258573
    2. '{' → logprob: -9.125112533569336
    3. ' set' → logprob: -12.500112533569336
    4. '{
' → logprob: -16.500112533569336
    5. 'base' → logprob: -17.375112533569336
    6. 'possible' → logprob: -17.875112533569336
    7. '   ' → logprob: -17.875112533569336
    8. '	set' → logprob: -18.125112533569336
    9. '(set' → logprob: -18.250112533569336
    10. '=set' → logprob: -18.375112533569336

Token 561: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.39252761006355286
    2. '()' → logprob: -1.1425275802612305
    3. '(base' → logprob: -6.2675275802612305
    4. '           ' → logprob: -6.6425275802612305
    5. '(pos' → logprob: -7.0175275802612305
    6. '(x' → logprob: -7.5175275802612305
    7. '(s' → logprob: -8.01752758026123
    8. 's' → logprob: -8.89252758026123
    9. 'possible' → logprob: -8.89252758026123
    10. '   ' → logprob: -9.39252758026123

Token 562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01654266007244587
    2. ' for' → logprob: -4.891542434692383
    3. '       ' → logprob: -5.016542434692383
    4. '   ' → logprob: -7.266542434692383
    5. 'for' → logprob: -7.766542434692383
    6. '	       ' → logprob: -7.891542434692383
    7. '	   ' → logprob: -8.641542434692383
    8. '
' → logprob: -8.891542434692383
    9. '    
' → logprob: -9.891542434692383
    10. '        
' → logprob: -9.891542434692383

Token 563: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.048949889838695526
    2. ' for' → logprob: -3.298949956893921
    3. '           ' → logprob: -4.548949718475342
    4. '       ' → logprob: -9.0489501953125
    5. '	for' → logprob: -9.0489501953125
    6. '   ' → logprob: -10.4239501953125
    7. '               ' → logprob: -12.7989501953125
    8. ' ' → logprob: -13.9239501953125
    9. '	       ' → logprob: -13.9239501953125
    10. '```' → logprob: -14.9239501953125

Token 564: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0011939177056774497
    2. 'x' → logprob: -6.751194000244141
    3. 'p' → logprob: -10.87619400024414
    4. 'v' → logprob: -12.87619400024414
    5. ' s' → logprob: -13.25119400024414
    6. 'val' → logprob: -15.75119400024414
    7. '   ' → logprob: -16.37619400024414
    8. 'pos' → logprob: -17.62619400024414
    9. 'ps' → logprob: -18.50119400024414
    10. 'sp' → logprob: -18.75119400024414

Token 565: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005237906239926815
    2. 'in' → logprob: -5.255238056182861
    3. 's' → logprob: -12.505237579345703
    4. 'n' → logprob: -15.755237579345703
    5. ' ' → logprob: -16.130237579345703
    6. 'import' → logprob: -16.255237579345703
    7. '<|end|>' → logprob: -17.255237579345703
    8. 'In' → logprob: -17.630237579345703
    9. '_in' → logprob: -17.880237579345703
    10. '	in' → logprob: -18.005237579345703

Token 566: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.00010986098641296849
    2. ' base' → logprob: -9.750109672546387
    3. 'possible' → logprob: -9.875109672546387
    4. '   ' → logprob: -16.875110626220703
    5. ' possible' → logprob: -18.000110626220703
    6. ' ' → logprob: -18.000110626220703
    7. '(base' → logprob: -18.875110626220703
    8. '
' → logprob: -19.500110626220703
    9. '	base' → logprob: -19.500110626220703
    10. '           ' → logprob: -21.000110626220703

Token 567: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -7.896309739408025e-07
    2. 'possible' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.375
    4. ' possible' → logprob: -18.875
    5. ' _' → logprob: -19.25
    6. 'Possible' → logprob: -19.375
    7. '_' → logprob: -20.0
    8. '```' → logprob: -20.375
    9. '_pos' → logprob: -20.5
    10. '_allowed' → logprob: -21.125

Token 568: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.26736366748809814
    2. ':' → logprob: -1.7673636674880981
    3. '               ' → logprob: -2.7673635482788086
    4. '           ' → logprob: -7.642363548278809
    5. '):
' → logprob: -7.892363548278809
    6. ':
' → logprob: -9.642363548278809
    7. ',' → logprob: -10.767363548278809
    8. '       ' → logprob: -11.767363548278809
    9. '              ' → logprob: -12.017363548278809
    10. '):' → logprob: -12.142363548278809

Token 569: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016206118743866682
    2. '           ' → logprob: -9.125162124633789
    3. ' new' → logprob: -10.750162124633789
    4. 'new' → logprob: -11.375162124633789
    5. '       ' → logprob: -12.500162124633789
    6. ',' → logprob: -12.875162124633789
    7. '<|end|>' → logprob: -13.000162124633789
    8. '	           ' → logprob: -13.125162124633789
    9. '```' → logprob: -13.250162124633789
    10. '):
' → logprob: -14.000162124633789

Token 570: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.012705770321190357
    2. ' new' → logprob: -4.3877058029174805
    3. '
' → logprob: -9.38770580291748
    4. '               ' → logprob: -9.51270580291748
    5. '           ' → logprob: -11.13770580291748
    6. '                   ' → logprob: -11.63770580291748
    7. '   ' → logprob: -11.88770580291748
    8. 'for' → logprob: -12.76270580291748
    9. '	new' → logprob: -13.63770580291748
    10. '[new' → logprob: -14.01270580291748

Token 571: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -6.392202976712724e-06
    2. 'possible' → logprob: -12.000006675720215
    3. 'Possible' → logprob: -15.875006675720215
    4. 's' → logprob: -16.6250057220459
    5. '   ' → logprob: -17.2500057220459
    6. ' possible' → logprob: -18.3750057220459
    7. '```' → logprob: -18.6250057220459
    8. '_pos' → logprob: -18.6250057220459
    9. '
' → logprob: -19.5000057220459
    10. '_' → logprob: -19.6250057220459

Token 572: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -8.590104698669165e-05
    2. '.' → logprob: -9.500085830688477
    3. '.update' → logprob: -12.000085830688477
    4. 'add' → logprob: -12.250085830688477
    5. ' .' → logprob: -17.375085830688477
    6. '{' → logprob: -18.625085830688477
    7. '.Add' → logprob: -19.375085830688477
    8. 'update' → logprob: -19.875085830688477
    9. 's' → logprob: -20.000085830688477
    10. '   ' → logprob: -20.125085830688477

Token 573: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.52788148727268e-05
    2. '(s' → logprob: -9.875064849853516
    3. ' s' → logprob: -11.750064849853516
    4. 'abs' → logprob: -12.125064849853516
    5. '(abs' → logprob: -15.375064849853516
    6. '{s' → logprob: -16.125064849853516
    7. '   ' → logprob: -16.875064849853516
    8. '	s' → logprob: -17.000064849853516
    9. '(' → logprob: -18.125064849853516
    10. '`s' → logprob: -18.500064849853516

Token 574: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16033917665481567
    2. '+w' → logprob: -2.660339117050171
    3. ')
' → logprob: -3.035339117050171
    4. '+s' → logprob: -3.785339117050171
    5. '+' → logprob: -5.03533935546875
    6. ' +' → logprob: -7.28533935546875
    7. '           ' → logprob: -9.28533935546875
    8. ')
' → logprob: -9.66033935546875
    9. 'w' → logprob: -10.53533935546875
    10. 's' → logprob: -11.03533935546875

Token 575: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004757135466206819
    2. 'new' → logprob: -8.125475883483887
    3. ' new' → logprob: -8.750475883483887
    4. '           ' → logprob: -11.125475883483887
    5. '```' → logprob: -12.750475883483887
    6. '   ' → logprob: -14.250475883483887
    7. '       ' → logprob: -14.375475883483887
    8. '			' → logprob: -14.375475883483887
    9. '                   ' → logprob: -14.625475883483887
    10. '              ' → logprob: -15.250475883483887

Token 576: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.00020747410599142313
    2. ' new' → logprob: -8.500207901000977
    3. '               ' → logprob: -12.750207901000977
    4. '           ' → logprob: -14.500207901000977
    5. '   ' → logprob: -14.750207901000977
    6. '                   ' → logprob: -16.000207901000977
    7. '	new' → logprob: -18.625207901000977
    8. '       ' → logprob: -19.125207901000977
    9. '  ' → logprob: -19.250207901000977
    10. 's' → logprob: -19.375207901000977

Token 577: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -5.9795445849886164e-05
    2. 'possible' → logprob: -9.750060081481934
    3. '_new' → logprob: -14.500060081481934
    4. 'Possible' → logprob: -15.125060081481934
    5. '_' → logprob: -15.250060081481934
    6. '+' → logprob: -16.125059127807617
    7. ' possible' → logprob: -16.125059127807617
    8. 'w' → logprob: -16.625059127807617
    9. '_plus' → logprob: -16.750059127807617
    10. '_added' → logprob: -16.875059127807617

Token 578: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.05904313549399376
    2. '+w' → logprob: -3.4340431690216064
    3. '+' → logprob: -4.059042930603027
    4. 'add' → logprob: -5.059042930603027
    5. '           ' → logprob: -7.184042930603027
    6. ' +' → logprob: -8.559042930603027
    7. '+s' → logprob: -9.309042930603027
    8. '.' → logprob: -9.434042930603027
    9. '+=' → logprob: -10.184042930603027
    10. '+
' → logprob: -10.309042930603027

Token 579: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0003131784324068576
    2. 's' → logprob: -8.625312805175781
    3. '(' → logprob: -9.000312805175781
    4. ' (' → logprob: -12.250312805175781
    5. '(abs' → logprob: -12.375312805175781
    6. '   ' → logprob: -15.125312805175781
    7. '(
' → logprob: -15.250312805175781
    8. ' s' → logprob: -15.625312805175781
    9. '(w' → logprob: -16.25031280517578
    10. 'abs' → logprob: -16.37531280517578

Token 580: ' +' (ID: 659)
  Prédit: '+w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+w' → logprob: -0.06417803466320038
    2. '+' → logprob: -2.939177989959717
    3. ' +' → logprob: -4.689177989959717
    4. '+
' → logprob: -10.064178466796875
    5. '<w' → logprob: -12.939178466796875
    6. '+s' → logprob: -13.064178466796875
    7. 'w' → logprob: -13.189178466796875
    8. '   ' → logprob: -14.064178466796875
    9. '-w' → logprob: -14.189178466796875
    10. '
' → logprob: -14.439178466796875

Token 581: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.1517960956552997e-05
    2. ' w' → logprob: -11.375011444091797
    3. '   ' → logprob: -19.250011444091797
    4. '	w' → logprob: -20.625011444091797
    5. ' ' → logprob: -21.875011444091797
    6. '    ' → logprob: -22.000011444091797
    7. '```' → logprob: -22.000011444091797
    8. '
' → logprob: -22.750011444091797
    9. '  ' → logprob: -22.750011444091797
    10. '       ' → logprob: -23.375011444091797

Token 582: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20487305521965027
    2. ')' → logprob: -1.7048730850219727
    3. '               ' → logprob: -5.829873085021973
    4. '           ' → logprob: -7.704873085021973
    5. ')
' → logprob: -9.954873085021973
    6. ' )
' → logprob: -12.454873085021973
    7. '                   ' → logprob: -12.704873085021973
    8. '       ' → logprob: -12.829873085021973
    9. ')

' → logprob: -12.954873085021973
    10. '   ' → logprob: -13.704873085021973

Token 583: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.9424725148128346e-05
    2. 'new' → logprob: -10.125049591064453
    3. '```' → logprob: -12.625049591064453
    4. '			' → logprob: -13.125049591064453
    5. '           ' → logprob: -13.875049591064453
    6. ' new' → logprob: -13.875049591064453
    7. '                
' → logprob: -14.750049591064453
    8. '	           ' → logprob: -15.125049591064453
    9. '                   ' → logprob: -15.250049591064453
    10. '
' → logprob: -15.250049591064453

Token 584: ' new' (ID: 620)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4740920662879944
    2. 'new' (adapté à ' new') → logprob: -0.9740920662879944
    3. ' abs' → logprob: -12.349092483520508
    4. ' new' → logprob: -12.474092483520508
    5. '   ' → logprob: -12.974092483520508
    6. '           ' → logprob: -13.474092483520508
    7. 'if' → logprob: -13.599092483520508
    8. '               ' → logprob: -14.474092483520508
    9. '(abs' → logprob: -14.724092483520508
    10. '                   ' → logprob: -15.599092483520508

Token 585: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -1.9146995327901095e-05
    2. 'possible' → logprob: -11.625019073486328
    3. 'Possible' → logprob: -11.625019073486328
    4. 'w' → logprob: -15.000019073486328
    5. '_w' → logprob: -16.125019073486328
    6. '`' → logprob: -16.125019073486328
    7. '```' → logprob: -16.375019073486328
    8. 'abs' → logprob: -16.500019073486328
    9. '
' → logprob: -16.625019073486328
    10. 'def' → logprob: -16.750019073486328

Token 586: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0002198676229454577
    2. '.' → logprob: -9.12522029876709
    3. 'add' → logprob: -9.62522029876709
    4. '.abs' → logprob: -10.87522029876709
    5. 'abs' → logprob: -11.12522029876709
    6. '           ' → logprob: -11.62522029876709
    7. 's' → logprob: -14.87522029876709
    8. ').' → logprob: -15.25022029876709
    9. '   ' → logprob: -15.37522029876709
    10. '.append' → logprob: -15.37522029876709

Token 587: '(abs' (ID: 71957)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.25197699666023254
    2. '(abs' → logprob: -1.5019769668579102
    3. ' abs' → logprob: -10.00197696685791
    4. '   ' → logprob: -13.00197696685791
    5. '(' → logprob: -16.126977920532227
    6. '.abs' → logprob: -16.751977920532227
    7. '_abs' → logprob: -16.751977920532227
    8. '```' → logprob: -17.001977920532227
    9. ' ' → logprob: -18.751977920532227
    10. '{' → logprob: -18.751977920532227

Token 588: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007217261008918285
    2. 's' → logprob: -7.2507219314575195
    3. '(' → logprob: -11.50072193145752
    4. '(w' → logprob: -13.75072193145752
    5. 'w' → logprob: -14.87572193145752
    6. ' (' → logprob: -16.000720977783203
    7. '(
' → logprob: -16.375720977783203
    8. ')' → logprob: -18.125720977783203
    9. '   ' → logprob: -18.625720977783203
    10. 'a' → logprob: -18.750720977783203

Token 589: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026920752599835396
    2. ' -' → logprob: -3.651920795440674
    3. '-w' → logprob: -7.401920795440674
    4. ' ' → logprob: -12.401920318603516
    5. 'w' → logprob: -13.526920318603516
    6. ')' → logprob: -14.026920318603516
    7. '-
' → logprob: -14.151920318603516
    8. ' w' → logprob: -14.151920318603516
    9. 's' → logprob: -14.276920318603516
    10. '(' → logprob: -14.401920318603516

Token 590: ' w' (ID: 286)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 591: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3165089786052704
    2. ')' → logprob: -1.3165090084075928
    3. '))
' → logprob: -5.941508769989014
    4. ')
' → logprob: -7.441508769989014
    5. '           ' → logprob: -11.191509246826172
    6. '               ' → logprob: -11.816509246826172
    7. ')))' → logprob: -13.191509246826172
    8. ')}' → logprob: -13.941509246826172
    9. '))

' → logprob: -14.566509246826172
    10. '])' → logprob: -14.941509246826172

Token 592: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12940028309822083
    2. '
' → logprob: -2.1294002532958984
    3. '<|end|>' → logprob: -7.254400253295898
    4. '		' → logprob: -7.504400253295898
    5. '       ' → logprob: -7.754400253295898
    6. '  
' → logprob: -9.129400253295898
    7. '	       ' → logprob: -9.504400253295898
    8. ' 
' → logprob: -9.629400253295898
    9. 'return' → logprob: -9.629400253295898
    10. '    
' → logprob: -9.754400253295898

Token 593: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40775468945503235
    2. '       ' → logprob: -1.40775465965271
    3. ' return' → logprob: -3.15775465965271
    4. 'return' (adapté à ' return') → logprob: -3.40775465965271
    5. '   ' → logprob: -4.407754898071289
    6. '
' → logprob: -6.157754898071289
    7. ' ' → logprob: -9.532754898071289
    8. '  ' → logprob: -10.532754898071289
    9. '               ' → logprob: -10.657754898071289
    10. '     ' → logprob: -11.282754898071289

Token 594: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0003955224819947034
    2. ' all' → logprob: -8.625395774841309
    3. 'fail' → logprob: -8.750395774841309
    4. 'amount' → logprob: -10.375395774841309
    5. '   ' → logprob: -11.000395774841309
    6. 'a' → logprob: -12.375395774841309
    7. 'set' → logprob: -13.375395774841309
    8. 'len' → logprob: -13.625395774841309
    9. ' ' → logprob: -14.000395774841309
    10. '       ' → logprob: -15.500395774841309

Token 595: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00016218038217630237
    2. 'a' → logprob: -9.000162124633789
    3. '(' → logprob: -11.125162124633789
    4. '((' → logprob: -11.375162124633789
    5. '(amount' → logprob: -11.875162124633789
    6. ' (' → logprob: -12.375162124633789
    7. '(x' → logprob: -14.250162124633789
    8. 'amount' → logprob: -16.00016212463379
    9. '   ' → logprob: -16.12516212463379
    10. ' a' → logprob: -16.25016212463379

Token 596: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00760887423530221
    2. 'in' → logprob: -4.882608890533447
    3. '	in' → logprob: -14.132608413696289
    4. ' ' → logprob: -14.757608413696289
    5. ')' → logprob: -14.882608413696289
    6. ' for' → logprob: -15.632608413696289
    7. ' ' → logprob: -15.632608413696289
    8. '           ' → logprob: -15.757608413696289
    9. '   ' → logprob: -15.882608413696289
    10. 'for' → logprob: -16.00760841369629

Token 597: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0007115975022315979
    2. ' new' → logprob: -7.250711441040039
    3. 'possible' → logprob: -14.500711441040039
    4. '
' → logprob: -14.625711441040039
    5. '   ' → logprob: -15.375711441040039
    6. '```' → logprob: -15.750711441040039
    7. ' ' → logprob: -16.25071144104004
    8. '           ' → logprob: -16.62571144104004
    9. '       ' → logprob: -17.37571144104004
    10. '`' → logprob: -17.50071144104004

Token 598: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -2.696889623621246e-06
    2. 'possible' → logprob: -12.87500286102295
    3. '_new' → logprob: -17.625001907348633
    4. ' possible' → logprob: -18.375001907348633
    5. '\' → logprob: -19.250001907348633
    6. '_' → logprob: -19.625001907348633
    7. '```' → logprob: -19.750001907348633
    8. 'Possible' → logprob: -20.125001907348633
    9. '_pos' → logprob: -20.250001907348633
    10. 's' → logprob: -20.625001907348633

Token 599: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.313442587852478
    2. 'for' → logprob: -1.313442587852478
    3. ')' → logprob: -9.06344223022461
    4. '           ' → logprob: -9.93844223022461
    5. '	for' → logprob: -11.68844223022461
    6. '   ' → logprob: -13.06344223022461
    7. '       ' → logprob: -13.18844223022461
    8. ' ' → logprob: -13.93844223022461
    9. '               ' → logprob: -14.43844223022461
    10. '            ' → logprob: -14.56344223022461

Token 600: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0763174295425415
    2. 'amount' → logprob: -3.326317310333252
    3. ' a' → logprob: -4.201317310333252
    4. 'fail' → logprob: -4.451317310333252
    5. ' amounts' → logprob: -4.826317310333252
    6. ' fail' → logprob: -5.951317310333252
    7. ' amount' → logprob: -8.32631778717041
    8. 'am' → logprob: -11.32631778717041
    9. '[a' → logprob: -12.32631778717041
    10. ' ' → logprob: -12.70131778717041

Token 601: ' in' (ID: 306)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1801108568906784
    2. ' a' → logprob: -1.8051108121871948
    3. ' in' → logprob: -7.930110931396484
    4. ' ' → logprob: -12.930110931396484
    5. ')' → logprob: -13.680110931396484
    6. '	a' → logprob: -13.805110931396484
    7. '  ' → logprob: -14.305110931396484
    8. ' ' → logprob: -15.180110931396484
    9. 'in' → logprob: -15.305110931396484
    10. '   ' → logprob: -15.930110931396484

Token 602: ' amounts' (ID: 22586)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.0023138110991567373
    2. ' amounts' → logprob: -6.252313613891602
    3. 'fail' → logprob: -7.877313613891602
    4. 'am' → logprob: -12.877313613891602
    5. ' amount' → logprob: -13.752313613891602
    6. ' fail' → logprob: -14.502313613891602
    7. '(amount' → logprob: -14.627313613891602
    8. 'a' → logprob: -15.252313613891602
    9. 'attempt' → logprob: -15.627313613891602
    10. '[' → logprob: -15.627313613891602

Token 603: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015050210640765727
    2. '       ' → logprob: -8.875150680541992
    3. '           ' → logprob: -12.125150680541992
    4. ')
' → logprob: -12.500150680541992
    5. ')return' → logprob: -14.750150680541992
    6. '   ' → logprob: -15.000150680541992
    7. ' )' → logprob: -15.125150680541992
    8. '),' → logprob: -16.875150680541992
    9. '())' → logprob: -17.125150680541992
    10. ')\
' → logprob: -17.375150680541992

Token 604: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1930227279663086
    2. '       ' → logprob: -2.1930227279663086
    3. '   ' → logprob: -3.0680227279663086
    4. '<|end|>' → logprob: -4.943022727966309
    5. '    
' → logprob: -5.693022727966309
    6. ')' → logprob: -6.318022727966309
    7. '        
' → logprob: -6.693022727966309
    8. ':' → logprob: -7.193022727966309
    9. '  
' → logprob: -7.318022727966309
    10. ':
' → logprob: -7.568022727966309

Token 605: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3684687912464142
    2. '   ' → logprob: -1.2434687614440918
    3. '
' → logprob: -4.868468761444092
    4. 'for' → logprob: -4.993468761444092
    5. ' for' → logprob: -5.493468761444092
    6. '        
' → logprob: -7.368468761444092
    7. '    
' → logprob: -7.743468761444092
    8. '	for' → logprob: -9.36846923828125
    9. '  
' → logprob: -10.74346923828125
    10. '```' → logprob: -11.11846923828125

Token 606: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002165898680687
    2. '=' → logprob: -2.3502166271209717
    3. ' ' → logprob: -12.10021686553955
    4. ':' → logprob: -14.10021686553955
    5. ',' → logprob: -14.35021686553955
    6. ')' → logprob: -14.35021686553955
    7. '  ' → logprob: -14.47521686553955
    8. '_' → logprob: -14.85021686553955
    9. '   ' → logprob: -15.22521686553955
    10. ' =)' → logprob: -15.47521686553955

Token 607: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05665821582078934
    2. 'None' → logprob: -3.1816582679748535
    3. '-' → logprob: -4.5566582679748535
    4. '0' → logprob: -5.8066582679748535
    5. ' None' → logprob: -10.431657791137695
    6. ' -' → logprob: -11.181657791137695
    7. ' ' → logprob: -11.681657791137695
    8. 'max' → logprob: -12.431657791137695
    9. '   ' → logprob: -13.056657791137695
    10. '```' → logprob: -14.056657791137695

Token 608: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.37500286102295
    3. 'import' → logprob: -15.00000286102295
    4. '```' → logprob: -15.50000286102295
    5. '`' → logprob: -15.75000286102295
    6. '0' → logprob: -16.250001907348633
    7. '-' → logprob: -16.625001907348633
    8. 'for' → logprob: -16.625001907348633
    9. 'from' → logprob: -16.750001907348633
    10. '2' → logprob: -16.750001907348633

Token 609: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.556850016117096
    2. '
' → logprob: -0.931850016117096
    3. ' 
' → logprob: -4.306849956512451
    4. '        
' → logprob: -4.806849956512451
    5. '\n' → logprob: -5.306849956512451
    6. 'for' → logprob: -6.431849956512451
    7. '<|end|>' → logprob: -6.681849956512451
    8. ' for' → logprob: -6.806849956512451
    9. '    
' → logprob: -7.056849956512451
    10. '  
' → logprob: -7.056849956512451

Token 610: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009444859810173512
    2. '       ' → logprob: -5.634444713592529
    3. ' 
' → logprob: -6.259444713592529
    4. ' for' → logprob: -6.384444713592529
    5. '\n' → logprob: -6.884444713592529
    6. '        
' → logprob: -8.009445190429688
    7. 'for' → logprob: -8.009445190429688
    8. '  
' → logprob: -8.509445190429688
    9. '
' → logprob: -9.134445190429688
    10. '    
' → logprob: -9.134445190429688

Token 611: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007621533703058958
    2. ' for' → logprob: -5.007621765136719
    3. '       ' → logprob: -7.007621765136719
    4. '
' → logprob: -14.632621765136719
    5. '	for' → logprob: -15.757621765136719
    6. '   ' → logprob: -15.882621765136719
    7. '```' → logprob: -16.50762176513672
    8. '        
' → logprob: -17.63262176513672
    9. 'w' → logprob: -18.25762176513672
    10. ' 
' → logprob: -19.38262176513672

Token 612: ' If' (ID: 1843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000565541791729629
    2. ' for' → logprob: -7.500565528869629
    3. '       ' → logprob: -11.375565528869629
    4. '```' → logprob: -14.000565528869629
    5. '   ' → logprob: -15.375565528869629
    6. '
' → logprob: -17.875566482543945
    7. 'w' → logprob: -18.125566482543945
    8. '	for' → logprob: -18.500566482543945
    9. 'from' → logprob: -19.500566482543945
    10. '``' → logprob: -19.500566482543945

Token 613: ' some' (ID: 1236)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.485444039106369
    2. ' max' → logprob: -2.4854440689086914
    3. ' can' → logprob: -2.9854440689086914
    4. ' fail' → logprob: -3.1104440689086914
    5. ' n' → logprob: -3.3604440689086914
    6. ' possible' → logprob: -3.4854440689086914
    7. ' all' → logprob: -3.6104440689086914
    8. ' len' → logprob: -3.9854440689086914
    9. 'max' → logprob: -4.110444068908691
    10. 'not' → logprob: -4.110444068908691

Token 614: ' amount' (ID: 4527)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0169148445129395
    2. 'fail' → logprob: -1.5169148445129395
    3. 'w' → logprob: -2.0169148445129395
    4. 'one' → logprob: -3.0169148445129395
    5. ' fail' → logprob: -3.6419148445129395
    6. 'candidate' → logprob: -3.7669148445129395
    7. 'fails' → logprob: -3.8919148445129395
    8. 'ans' → logprob: -4.0169148445129395
    9. '(ans' → logprob: -4.1419148445129395
    10. '   ' → logprob: -4.2669148445129395

Token 615: ' <' (ID: 464)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.032129641622304916
    2. 'not' → logprob: -3.5321295261383057
    3. ' is' → logprob: -6.907129764556885
    4. ' in' → logprob: -7.282129764556885
    5. ' ==' → logprob: -8.907129287719727
    6. '==' → logprob: -9.282129287719727
    7. 's' → logprob: -9.407129287719727
    8. '_not' → logprob: -9.782129287719727
    9. ' for' → logprob: -10.032129287719727
    10. 'in' → logprob: -10.032129287719727

Token 616: ' max' (ID: 2999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3494757413864136
    2. '1' → logprob: -1.7244757413864136
    3. ' ' → logprob: -3.224475860595703
    4. 'max' → logprob: -3.599475860595703
    5. ' max' → logprob: -3.599475860595703
    6. 'min' → logprob: -5.349475860595703
    7. '0' → logprob: -5.474475860595703
    8. ' min' → logprob: -5.849475860595703
    9. ' =' → logprob: -5.974475860595703
    10. 'possible' → logprob: -5.974475860595703

Token 617: ' in' (ID: 306)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0042121936567127705
    2. '_' → logprob: -6.379212379455566
    3. '_search' → logprob: -6.879212379455566
    4. 'a' → logprob: -7.504212379455566
    5. '       ' → logprob: -8.129212379455566
    6. '_ans' → logprob: -8.129212379455566
    7. '_possible' → logprob: -10.379212379455566
    8. '+' → logprob: -10.504212379455566
    9. '_answer' → logprob: -10.629212379455566
    10. '_fail' → logprob: -10.879212379455566

Token 618: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.792809009552002
    2. 'possible' → logprob: -1.167809009552002
    3. 'amount' → logprob: -1.542809009552002
    4. 'fail' → logprob: -4.167809009552002
    5. 'base' → logprob: -6.167809009552002
    6. ' weights' → logprob: -6.292809009552002
    7. ' amounts' → logprob: -6.417809009552002
    8. ' possible' → logprob: -7.042809009552002
    9. ' fail' → logprob: -9.042808532714844
    10. 'weight' → logprob: -9.292808532714844

Token 619: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5315271615982056
    2. ':' → logprob: -1.2815271615982056
    3. 'and' → logprob: -2.281527042388916
    4. '_' → logprob: -3.906527042388916
    5. ',' → logprob: -5.781527042388916
    6. ':
' → logprob: -6.531527042388916
    7. '   ' → logprob: -6.906527042388916
    8. '_weights' → logprob: -6.906527042388916
    9. '>' → logprob: -7.156527042388916
    10. '_:' → logprob: -7.406527042388916

Token 620: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6835539937019348
    2. ' for' → logprob: -1.43355393409729
    3. ' if' → logprob: -3.05855393409729
    4. '           ' → logprob: -3.30855393409729
    5. 'for' → logprob: -3.55855393409729
    6. ' continue' → logprob: -3.55855393409729
    7. ' or' → logprob: -3.80855393409729
    8. ' not' → logprob: -4.433554172515869
    9. '   ' → logprob: -4.433554172515869
    10. ' and' → logprob: -4.558554172515869

Token 621: ' try' (ID: 2075)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.0111756324768066
    2. ' continue' → logprob: -1.2611756324768066
    3. '       ' → logprob: -1.8861756324768066
    4. '           ' → logprob: -2.1361756324768066
    5. ' can' → logprob: -3.3861756324768066
    6. ' should' → logprob: -5.011175632476807
    7. 'should' → logprob: -5.261175632476807
    8. ' might' → logprob: -5.511175632476807
    9. ':
' → logprob: -5.636175632476807
    10. '#' → logprob: -5.636175632476807

Token 622: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.6907979249954224
    2. ' w' → logprob: -1.8157979249954224
    3. ' range' → logprob: -1.9407979249954224
    4. 'for' → logprob: -2.065797805786133
    5. '   ' → logprob: -2.315797805786133
    6. '       ' → logprob: -2.690797805786133
    7. 'range' → logprob: -2.815797805786133
    8. 'w' → logprob: -2.940797805786133
    9. ' weights' → logprob: -3.815797805786133
    10. ' in' → logprob: -4.190797805786133

Token 623: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003693658858537674
    2. 'max' → logprob: -6.003693580627441
    3. 'weights' → logprob: -7.128693580627441
    4. ' ' → logprob: -9.628693580627441
    5. 'min' → logprob: -9.628693580627441
    6. '   ' → logprob: -9.753693580627441
    7. ' max' → logprob: -10.128693580627441
    8. '0' → logprob: -10.128693580627441
    9. 'w' → logprob: -10.628693580627441
    10. '```' → logprob: -10.628693580627441

Token 624: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006740703247487545
    2. 'max' → logprob: -7.625674247741699
    3. '0' → logprob: -9.5006742477417
    4. 'weights' → logprob: -9.7506742477417
    5. 'min' → logprob: -10.7506742477417
    6. 'import' → logprob: -12.0006742477417
    7. '(max' → logprob: -12.2506742477417
    8. '   ' → logprob: -12.7506742477417
    9. '```' → logprob: -12.8756742477417
    10. ' ' → logprob: -13.0006742477417

Token 625: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 626: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0006340435356833041
    2. ' max' → logprob: -7.37563419342041
    3. '```' → logprob: -13.12563419342041
    4. '(max' → logprob: -13.50063419342041
    5. '
' → logprob: -13.75063419342041
    6. '1' → logprob: -13.75063419342041
    7. '[max' → logprob: -14.12563419342041
    8. '10' → logprob: -15.25063419342041
    9. '=max' → logprob: -15.75063419342041
    10. '   ' → logprob: -16.125633239746094

Token 627: '_search' (ID: 23642)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08237051218748093
    2. ' +' → logprob: -3.3323705196380615
    3. '       ' → logprob: -4.082370281219482
    4. 'w' → logprob: -4.957370281219482
    5. '   ' → logprob: -5.332370281219482
    6. 'for' → logprob: -5.832370281219482
    7. '_' → logprob: -6.082370281219482
    8. '+
' → logprob: -6.082370281219482
    9. ' for' → logprob: -6.832370281219482
    10. '
' → logprob: -6.832370281219482

Token 628: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7088731527328491
    2. '
' → logprob: -0.9588731527328491
    3. ' for' → logprob: -3.4588732719421387
    4. ':
' → logprob: -3.5838732719421387
    5. '\n' → logprob: -3.9588732719421387
    6. 'for' → logprob: -4.333873271942139
    7. ':' → logprob: -4.708873271942139
    8. '        
' → logprob: -4.833873271942139
    9. '   ' → logprob: -4.958873271942139
    10. ' 
' → logprob: -5.958873271942139

Token 629: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.5513260364532471
    2. 'find' → logprob: -1.176326036453247
    3. '       ' → logprob: -3.051326036453247
    4. ' check' → logprob: -4.551325798034668
    5. '           ' → logprob: -4.801325798034668
    6. 'check' → logprob: -5.051325798034668
    7. ' test' → logprob: -5.051325798034668
    8. ' cover' → logprob: -5.551325798034668
    9. '   ' → logprob: -5.801325798034668
    10. 'test' → logprob: -5.926325798034668

Token 630: ' minimal' (ID: 19957)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4403008222579956
    2. 'ans' → logprob: -1.4403008222579956
    3. 'max' → logprob: -2.690300941467285
    4. ' ans' → logprob: -4.190300941467285
    5. ' w' → logprob: -4.565300941467285
    6. ':' → logprob: -5.065300941467285
    7. '(ans' → logprob: -5.440300941467285
    8. '1' → logprob: -5.690300941467285
    9. 'the' → logprob: -6.065300941467285
    10. ' the' → logprob: -6.315300941467285

Token 631: '
' (ID: 198)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6612874865531921
    2. ' w' → logprob: -1.536287546157837
    3. '+' → logprob: -2.411287546157837
    4. ' +' → logprob: -3.536287546157837
    5. ' _' → logprob: -3.786287546157837
    6. ' for' → logprob: -3.786287546157837
    7. '_' → logprob: -3.786287546157837
    8. 'weight' → logprob: -4.036287307739258
    9. 'for' → logprob: -4.286287307739258
    10. '_w' → logprob: -4.786287307739258

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6752744317054749
    2. ' for' → logprob: -1.17527437210083
    3. 'for' → logprob: -2.05027437210083
    4. '
' → logprob: -3.42527437210083
    5. '        
' → logprob: -5.30027437210083
    6. '   ' → logprob: -5.42527437210083
    7. ' 
' → logprob: -5.80027437210083
    8. '```' → logprob: -5.92527437210083
    9. ':
' → logprob: -6.67527437210083
    10. ':' → logprob: -7.17527437210083

Token 633: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2530933618545532
    2. '\n' → logprob: -2.5030932426452637
    3. '       ' → logprob: -2.6280932426452637
    4. ' 
' → logprob: -3.2530932426452637
    5. ' for' → logprob: -4.378093242645264
    6. 'for' → logprob: -4.628093242645264
    7. '        
' → logprob: -5.628093242645264
    8. '  
' → logprob: -5.878093242645264
    9. '    
' → logprob: -6.753093242645264
    10. '   ' → logprob: -8.253093719482422

Token 634: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48658260703086853
    2. ' for' → logprob: -1.236582636833191
    3. '       ' → logprob: -2.3615825176239014
    4. ' 
' → logprob: -8.48658275604248
    5. '   ' → logprob: -8.86158275604248
    6. '
' → logprob: -9.11158275604248
    7. '        
' → logprob: -9.23658275604248
    8. '        ' → logprob: -11.11158275604248
    9. '```' → logprob: -11.11158275604248
    10. '           ' → logprob: -11.86158275604248

Token 635: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.202021598815918
    2. ' ans' → logprob: -1.577021598815918
    3. ' for' → logprob: -1.952021598815918
    4. ' w' → logprob: -2.202021598815918
    5. ' not' → logprob: -2.327021598815918
    6. ' n' → logprob: -3.452021598815918
    7. 'max' → logprob: -3.702021598815918
    8. 'w' → logprob: -4.327021598815918
    9. 'for' → logprob: -4.452021598815918
    10. ' len' → logprob: -4.577021598815918

Token 636: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.00807843916118145
    2. '_' → logprob: -4.883078575134277
    3. ' _' → logprob: -8.258078575134277
    4. 'Search' → logprob: -9.883078575134277
    5. '```' → logprob: -10.383078575134277
    6. '+' → logprob: -10.508078575134277
    7. 'search' → logprob: -11.008078575134277
    8. '_a' → logprob: -11.633078575134277
    9. '   ' → logprob: -11.758078575134277
    10. ')' → logprob: -11.883078575134277

Token 637: ' can' (ID: 665)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.9714484810829163
    2. ' +=' → logprob: -1.2214484214782715
    3. '+' → logprob: -1.4714484214782715
    4. '>=' → logprob: -3.7214484214782715
    5. '=' → logprob: -3.9714484214782715
    6. ':' → logprob: -4.0964484214782715
    7. '>' → logprob: -4.4714484214782715
    8. ' +' → logprob: -4.5964484214782715
    9. ' >=' → logprob: -4.9714484214782715
    10. '   ' → logprob: -5.4714484214782715

Token 638: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.026199277490377426
    2. ' exceed' → logprob: -4.9011993408203125
    3. '=' → logprob: -5.2761993408203125
    4. ' =' → logprob: -6.0261993408203125
    5. ' not' → logprob: -6.4011993408203125
    6. 'be' → logprob: -6.6511993408203125
    7. '   ' → logprob: -6.6511993408203125
    8. ' range' → logprob: -6.7761993408203125
    9. '>' → logprob: -7.2761993408203125
    10. 'import' → logprob: -7.5261993408203125

Token 639: ' large' (ID: 4410)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8413023352622986
    2. 'large' → logprob: -1.0913023948669434
    3. '10' → logprob: -2.7163023948669434
    4. 'too' → logprob: -2.9663023948669434
    5. ' large' → logprob: -2.9663023948669434
    6. 'very' → logprob: -4.091302394866943
    7. '1' → logprob: -4.216302394866943
    8. '0' → logprob: -4.841302394866943
    9. ' ' → logprob: -5.216302394866943
    10. ' very' → logprob: -5.591302394866943

Token 640: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14704659581184387
    2. '
' → logprob: -2.2720465660095215
    3. '        
' → logprob: -4.7720465660095215
    4. '\n' → logprob: -5.1470465660095215
    5. ' for' → logprob: -5.2720465660095215
    6. '   ' → logprob: -6.1470465660095215
    7. ',' → logprob: -6.3970465660095215
    8. ' 
' → logprob: -6.3970465660095215
    9. '  
' → logprob: -6.5220465660095215
    10. ':
' → logprob: -6.5220465660095215

Token 641: ' optimize' (ID: 40398)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4425916075706482
    2. 'for' → logprob: -1.067591667175293
    3. ' continue' → logprob: -5.442591667175293
    4. 'import' → logprob: -5.817591667175293
    5. '       ' → logprob: -5.942591667175293
    6. 'continue' → logprob: -5.942591667175293
    7. '```' → logprob: -7.442591667175293
    8. '
' → logprob: -8.317591667175293
    9. '           ' → logprob: -9.317591667175293
    10. 'from' → logprob: -9.567591667175293

Token 642: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29526880383491516
    2. '
' → logprob: -1.6702687740325928
    3. ' for' → logprob: -3.2952687740325928
    4. 'for' → logprob: -4.295269012451172
    5. '        
' → logprob: -4.545269012451172
    6. '  
' → logprob: -6.045269012451172
    7. ' 
' → logprob: -6.045269012451172
    8. '    
' → logprob: -7.545269012451172
    9. '   ' → logprob: -8.045269012451172
    10. '\n' → logprob: -8.795269012451172

Token 643: ' testing' (ID: 11493)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.3688261806964874
    2. 'using' → logprob: -2.493826150894165
    3. 'breaking' → logprob: -2.618826150894165
    4. ' binary' → logprob: -3.243826150894165
    5. 'bis' → logprob: -3.618826150894165
    6. 'break' → logprob: -3.618826150894165
    7. 'import' → logprob: -3.868826150894165
    8. ' using' → logprob: -4.243826389312744
    9. 'b' → logprob: -4.493826389312744
    10. ' skipping' → logprob: -5.618826389312744

Token 644: ' only' (ID: 1606)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.511359691619873
    2. 'for' → logprob: -1.636359691619873
    3. 'w' → logprob: -2.011359691619873
    4. ' w' → logprob: -3.011359691619873
    5. '       ' → logprob: -5.511359691619873
    6. ' in' → logprob: -5.636359691619873
    7. '   ' → logprob: -5.886359691619873
    8. '```' → logprob: -6.386359691619873
    9. 'candidate' → logprob: -6.386359691619873
    10. ' candidate' → logprob: -6.761359691619873

Token 645: ' necessary' (ID: 8155)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6702032089233398
    2. 'a' → logprob: -1.5452032089233398
    3. 'amount' → logprob: -1.6702032089233398
    4. 'weights' → logprob: -3.42020320892334
    5. 'weight' → logprob: -4.29520320892334
    6. 'fail' → logprob: -4.42020320892334
    7. 'range' → logprob: -5.04520320892334
    8. 'for' → logprob: -5.29520320892334
    9. 'i' → logprob: -5.79520320892334
    10. 'candidate' → logprob: -5.92020320892334

Token 646: ' w' (ID: 286)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -1.278069257736206
    2. 'w' → logprob: -1.528069257736206
    3. ' weights' → logprob: -2.403069257736206
    4. 'for' → logprob: -2.403069257736206
    5. ' w' → logprob: -2.778069257736206
    6. '       ' → logprob: -2.778069257736206
    7. ' for' → logprob: -3.028069257736206
    8. ' 
' → logprob: -3.403069257736206
    9. '_weights' → logprob: -3.903069257736206
    10. '    
' → logprob: -4.528069496154785

Token 647: ''s' (ID: 885)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8062272667884827
    2. '       ' → logprob: -0.8062272667884827
    3. '        
' → logprob: -3.181227207183838
    4. 'for' → logprob: -3.931227207183838
    5. ' for' → logprob: -4.181227207183838
    6. '\n' → logprob: -4.806227207183838
    7. '    
' → logprob: -5.056227207183838
    8. '  
' → logprob: -5.431227207183838
    9. '<|end|>' → logprob: -5.556227207183838
    10. '   ' → logprob: -5.931227207183838

Token 648: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14243067800998688
    2. '       ' → logprob: -2.2674307823181152
    3. '\n' → logprob: -4.392430782318115
    4. 'for' → logprob: -5.267430782318115
    5. ' for' → logprob: -5.642430782318115
    6. '        
' → logprob: -6.017430782318115
    7. '  
' → logprob: -6.142430782318115
    8. '    
' → logprob: -6.892430782318115
    9. '   ' → logprob: -7.017430782318115
    10. '<|end|>' → logprob: -7.892430782318115

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033914003521203995
    2. '
' → logprob: -3.783914089202881
    3. 'for' → logprob: -5.908914089202881
    4. '\n' → logprob: -6.033914089202881
    5. '        
' → logprob: -6.283914089202881
    6. ' for' → logprob: -6.408914089202881
    7. '  
' → logprob: -7.533914089202881
    8. '   ' → logprob: -7.658914089202881
    9. '    
' → logprob: -8.408913612365723
    10. ' 
' → logprob: -8.408913612365723

Token 650: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0773284062743187
    2. 'for' → logprob: -3.2023284435272217
    3. ' for' → logprob: -3.8273284435272217
    4. '
' → logprob: -4.452328205108643
    5. '        
' → logprob: -8.5773286819458
    6. '   ' → logprob: -9.9523286819458
    7. '```' → logprob: -9.9523286819458
    8. '  
' → logprob: -11.3273286819458
    9. '    
' → logprob: -11.8273286819458
    10. ' 
' → logprob: -12.2023286819458

Token 651: ' Alternative' (ID: 52728)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6891851425170898
    2. '       ' → logprob: -0.8141851425170898
    3. ' for' → logprob: -2.93918514251709
    4. '
' → logprob: -7.06418514251709
    5. 'w' → logprob: -7.68918514251709
    6. '   ' → logprob: -8.06418514251709
    7. 'i' → logprob: -8.56418514251709
    8. '        
' → logprob: -9.06418514251709
    9. ' 
' → logprob: -9.81418514251709
    10. '```' → logprob: -10.18918514251709

Token 652: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39333733916282654
    2. ':
' → logprob: -2.0183372497558594
    3. ':' → logprob: -2.1433372497558594
    4. 'w' → logprob: -3.5183372497558594
    5. 'for' → logprob: -4.643337249755859
    6. '
' → logprob: -4.768337249755859
    7. '        
' → logprob: -5.268337249755859
    8. ' for' → logprob: -5.268337249755859
    9. '#' → logprob: -5.643337249755859
    10. ' is' → logprob: -6.018337249755859

Token 653: ' since' (ID: 3630)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.405900001525879
    2. 'c' → logprob: -1.530900001525879
    3. 'import' → logprob: -2.030900001525879
    4. '       ' → logprob: -2.905900001525879
    5. 'for' → logprob: -3.030900001525879
    6. 'weights' → logprob: -3.405900001525879
    7. ' from' → logprob: -3.405900001525879
    8. 'candidate' → logprob: -3.405900001525879
    9. 'possible' → logprob: -3.530900001525879
    10. '#' → logprob: -3.780900001525879

Token 654: ' weights' (ID: 28460)
  Prédit: ' weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -1.919978380203247
    2. ' w' → logprob: -2.169978380203247
    3. 'weights' → logprob: -2.169978380203247
    4. 'len' → logprob: -2.294978380203247
    5. ' max' → logprob: -2.669978380203247
    6. 'w' → logprob: -2.669978380203247
    7. ' len' → logprob: -2.794978380203247
    8. ' fail' → logprob: -2.794978380203247
    9. 'max' → logprob: -2.919978380203247
    10. 'fail' → logprob: -3.044978380203247

Token 655: ' up' (ID: 869)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5897020101547241
    2. ' are' → logprob: -1.7147020101547241
    3. ' =' → logprob: -1.8397020101547241
    4. '_' → logprob: -2.3397021293640137
    5. '       ' → logprob: -2.5897021293640137
    6. '_to' → logprob: -2.5897021293640137
    7. ')' → logprob: -3.7147021293640137
    8. ' can' → logprob: -3.7147021293640137
    9. '   ' → logprob: -3.9647021293640137
    10. ' only' → logprob: -4.089702129364014

Token 656: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.545029878616333
    2. 'pto' → logprob: -1.545029878616333
    3. '<=' → logprob: -1.795029878616333
    4. 'to' → logprob: -1.795029878616333
    5. '_to' → logprob: -2.170029878616333
    6. 'p' → logprob: -2.670029878616333
    7. 'size' → logprob: -4.170029640197754
    8. ' <=' → logprob: -5.295029640197754
    9. ' to' → logprob: -5.295029640197754
    10. '```' → logprob: -5.670029640197754

Token 657: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.002664481056854129
    2. ' ' → logprob: -6.002664566040039
    3. '100' → logprob: -9.002664566040039
    4. 'max' → logprob: -10.627664566040039
    5. '1' → logprob: -11.627664566040039
    6. '20' → logprob: -11.877664566040039
    7. '```' → logprob: -12.127664566040039
    8. 'weights' → logprob: -12.502664566040039
    9. '9' → logprob: -13.315164566040039
    10. 'weight' → logprob: -13.565164566040039

Token 658: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00035572313936427236
    2. '100' → logprob: -8.12535572052002
    3. '20' → logprob: -11.50035572052002
    4. '
' → logprob: -11.62535572052002
    5. ' ' → logprob: -12.12535572052002
    6. 'max' → logprob: -12.12535572052002
    7. '```' → logprob: -12.12535572052002
    8. '50' → logprob: -12.18785572052002
    9. '

' → logprob: -12.81285572052002
    10. '9' → logprob: -13.00035572052002

Token 659: '^' (ID: 61)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5870456695556641
    2. ':' → logprob: -1.212045669555664
    3. ',' → logprob: -2.337045669555664
    4. '0' → logprob: -4.587045669555664
    5. '       ' → logprob: -4.587045669555664
    6. '):
' → logprob: -4.962045669555664
    7. '+' → logprob: -5.212045669555664
    8. ' and' → logprob: -5.462045669555664
    9. '   ' → logprob: -5.962045669555664
    10. '**' → logprob: -6.587045669555664

Token 660: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0002751598076429218
    2. ' ' → logprob: -8.750275611877441
    3. '7' → logprob: -9.500275611877441
    4. '```' → logprob: -11.125275611877441
    5. '6' → logprob: -11.375275611877441
    6. '9' → logprob: -12.125275611877441
    7. '**' → logprob: -12.500275611877441
    8. '^' → logprob: -13.250275611877441
    9. '
' → logprob: -13.250275611877441
    10. '5' → logprob: -14.375275611877441

Token 661: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6946387887001038
    2. ':
' → logprob: -1.569638729095459
    3. ':' → logprob: -2.194638729095459
    4. '       ' → logprob: -2.319638729095459
    5. '
' → logprob: -3.319638729095459
    6. ' for' → logprob: -4.194638729095459
    7. 'for' → logprob: -4.444638729095459
    8. ',
' → logprob: -4.944638729095459
    9. ' and' → logprob: -5.819638729095459
    10. '):
' → logprob: -5.819638729095459

Token 662: ' amounts' (ID: 22586)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3535205125808716
    2. ' max' → logprob: -1.6035205125808716
    3. '       ' → logprob: -1.7285205125808716
    4. '#' → logprob: -2.603520393371582
    5. ' True' → logprob: -3.103520393371582
    6. 'len' → logprob: -3.353520393371582
    7. '
' → logprob: -3.478520393371582
    8. '   ' → logprob: -3.978520393371582
    9. 'True' → logprob: -4.103520393371582
    10. ' w' → logprob: -4.103520393371582

Token 663: ' up' (ID: 869)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.3157724142074585
    2. '       ' → logprob: -1.5657724142074585
    3. ' up' → logprob: -2.315772533416748
    4. '   ' → logprob: -2.565772533416748
    5. ' <=' → logprob: -2.690772533416748
    6. ' can' → logprob: -2.690772533416748
    7. ':
' → logprob: -2.815772533416748
    8. ' are' → logprob: -2.940772533416748
    9. ':' → logprob: -3.940772533416748
    10. '):
' → logprob: -4.315772533416748

Token 664: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.016912641003727913
    2. '=' → logprob: -5.516912460327148
    3. '       ' → logprob: -5.766912460327148
    4. '1' → logprob: -5.891912460327148
    5. '_to' → logprob: -6.141912460327148
    6. ' to' → logprob: -6.891912460327148
    7. '<=' → logprob: -6.891912460327148
    8. '100' → logprob: -7.516912460327148
    9. '```' → logprob: -7.516912460327148
    10. '   ' → logprob: -8.016912460327148

Token 665: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.007167493458837271
    2. 'max' → logprob: -5.007167339324951
    3. '100' → logprob: -7.882167339324951
    4. '2' → logprob: -10.50716781616211
    5. '1' → logprob: -11.38216781616211
    6. ' ' → logprob: -11.50716781616211
    7. '```' → logprob: -11.50716781616211
    8. '   ' → logprob: -12.13216781616211
    9. ' max' → logprob: -12.75716781616211
    10. 'int' → logprob: -13.00716781616211

Token 666: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.007911688648164272
    2. 'max' → logprob: -5.382911682128906
    3. '100' → logprob: -5.757911682128906
    4. '2' → logprob: -9.632911682128906
    5. 'int' → logprob: -11.132911682128906
    6. '```' → logprob: -11.132911682128906
    7. '200' → logprob: -11.257911682128906
    8. '1' → logprob: -11.882911682128906
    9. ' ' → logprob: -12.007911682128906
    10. '(' → logprob: -13.382911682128906

Token 667: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6588333249092102
    2. '0' → logprob: -1.0338332653045654
    3. '8' → logprob: -2.4088332653045654
    4. '^' → logprob: -4.1588335037231445
    5. ':' → logprob: -4.5338335037231445
    6. '):
' → logprob: -6.0338335037231445
    7. '):' → logprob: -6.5338335037231445
    8. '9' → logprob: -6.6588335037231445
    9. '```' → logprob: -7.1588335037231445
    10. ':
' → logprob: -7.2838335037231445

Token 668: '9' (ID: 24)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.000774846994318068
    2. '7' → logprob: -7.37577486038208
    3. '9' → logprob: -9.250774383544922
    4. '6' → logprob: -10.625774383544922
    5. '```' → logprob: -11.125774383544922
    6. '5' → logprob: -12.000774383544922
    7. '**' → logprob: -12.875774383544922
    8. '
' → logprob: -13.875774383544922
    9. '``' → logprob: -14.125774383544922
    10. ' ' → logprob: -14.125774383544922

Token 669: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07355864346027374
    2. ':' → logprob: -3.3235585689544678
    3. ':
' → logprob: -4.073558807373047
    4. ' for' → logprob: -5.073558807373047
    5. ',' → logprob: -5.698558807373047
    6. '   ' → logprob: -6.073558807373047
    7. 'for' → logprob: -6.323558807373047
    8. '
' → logprob: -6.948558807373047
    9. '):
' → logprob: -7.323558807373047
    10. '           ' → logprob: -7.323558807373047

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023482121527194977
    2. 'for' → logprob: -4.273482322692871
    3. ' for' → logprob: -4.773482322692871
    4. '   ' → logprob: -7.898482322692871
    5. '           ' → logprob: -8.273482322692871
    6. 'range' → logprob: -10.648482322692871
    7. '<|end|>' → logprob: -10.773482322692871
    8. 'w' → logprob: -11.023482322692871
    9. '        
' → logprob: -11.023482322692871
    10. '	' → logprob: -11.148482322692871

Token 671: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8056344985961914
    2. 'for' → logprob: -1.1806344985961914
    3. ' for' → logprob: -1.4306344985961914
    4. '   ' → logprob: -5.805634498596191
    5. 'range' → logprob: -6.055634498596191
    6. ' range' → logprob: -7.055634498596191
    7. '           ' → logprob: -8.805634498596191
    8. 'w' → logprob: -9.055634498596191
    9. '	' → logprob: -9.555634498596191
    10. '	for' → logprob: -9.680634498596191

Token 672: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11007411777973175
    2. '       ' → logprob: -2.735074043273926
    3. ' for' → logprob: -3.360074043273926
    4. 'w' → logprob: -5.735074043273926
    5. '   ' → logprob: -6.985074043273926
    6. ' w' → logprob: -8.610074043273926
    7. 'i' → logprob: -9.610074043273926
    8. '           ' → logprob: -9.735074043273926
    9. 'range' → logprob: -9.860074043273926
    10. 'import' → logprob: -10.235074043273926

Token 673: ' limit' (ID: 5967)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8963145613670349
    2. 'w' → logprob: -1.3963146209716797
    3. ' w' → logprob: -1.7713146209716797
    4. 'for' → logprob: -2.0213146209716797
    5. '       ' → logprob: -4.39631462097168
    6. ' True' → logprob: -4.52131462097168
    7. 'range' → logprob: -5.52131462097168
    8. ' range' → logprob: -5.77131462097168
    9. 'True' → logprob: -5.89631462097168
    10. 'max' → logprob: -6.14631462097168

Token 674: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8710132837295532
    2. 'for' → logprob: -1.9960132837295532
    3. '(range' → logprob: -2.1210131645202637
    4. ' for' → logprob: -2.2460131645202637
    5. 'range' → logprob: -2.2460131645202637
    6. '(' → logprob: -3.8710131645202637
    7. ' range' → logprob: -3.8710131645202637
    8. '   ' → logprob: -4.496013164520264
    9. '           ' → logprob: -4.496013164520264
    10. '_range' → logprob: -4.496013164520264

Token 675: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.23011574149131775
    2. ' max' → logprob: -1.6051157712936401
    3. '100' → logprob: -6.48011589050293
    4. '       ' → logprob: -7.10511589050293
    5. '10' → logprob: -7.60511589050293
    6. '(max' → logprob: -7.85511589050293
    7. '2' → logprob: -7.98011589050293
    8. '```' → logprob: -8.23011589050293
    9. '20' → logprob: -9.10511589050293
    10. '1' → logprob: -9.10511589050293

Token 676: '100' (ID: 1353)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.019699860364198685
    2. '10' → logprob: -4.644700050354004
    3. '100' → logprob: -4.894700050354004
    4. '2' → logprob: -6.144700050354004
    5. '200' → logprob: -8.769700050354004
    6. 'int' → logprob: -9.894700050354004
    7. '500' → logprob: -10.769700050354004
    8. ' max' → logprob: -11.394700050354004
    9. '300' → logprob: -12.144700050354004
    10. 'min' → logprob: -12.644700050354004

Token 677: ' data' (ID: 1238)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9315148591995239
    2. '0' → logprob: -2.0565147399902344
    3. '       ' → logprob: -2.0565147399902344
    4. '
' → logprob: -2.3065147399902344
    5. 'for' → logprob: -2.4315147399902344
    6. ':' → logprob: -2.6815147399902344
    7. '   ' → logprob: -4.181514739990234
    8. '+' → logprob: -4.181514739990234
    9. ' for' → logprob: -4.306514739990234
    10. ':
' → logprob: -4.306514739990234

Token 678: ' sets' (ID: 11982)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.259848952293396
    2. 'for' → logprob: -2.0098490715026855
    3. ' for' → logprob: -2.5098490715026855
    4. '
' → logprob: -5.2598490715026855
    5. '   ' → logprob: -5.5098490715026855
    6. '        
' → logprob: -6.2598490715026855
    7. ':
' → logprob: -7.2598490715026855
    8. '```' → logprob: -7.6348490715026855
    9. '    
' → logprob: -8.259848594665527
    10. ' 
' → logprob: -8.509848594665527

Token 679: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23700983822345734
    2. '       ' → logprob: -1.612009882926941
    3. ' for' → logprob: -4.4870100021362305
    4. '   ' → logprob: -8.73701000213623
    5. '
' → logprob: -9.61201000213623
    6. '	for' → logprob: -10.98701000213623
    7. '        
' → logprob: -11.23701000213623
    8. '```' → logprob: -12.36201000213623
    9. 'range' → logprob: -13.36201000213623
    10. 'def' → logprob: -13.48701000213623

Token 680: ' ok' (ID: 4763)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5915026664733887
    2. ' for' → logprob: -1.3415026664733887
    3. 'for' → logprob: -1.7165026664733887
    4. '   ' → logprob: -5.466502666473389
    5. '	' → logprob: -7.966502666473389
    6. '           ' → logprob: -8.341503143310547
    7. '	for' → logprob: -8.591503143310547
    8. '```' → logprob: -9.591503143310547
    9. ' ' → logprob: -10.091503143310547
    10. ')' → logprob: -10.341503143310547

Token 681: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03315708786249161
    2. 'for' → logprob: -3.7831571102142334
    3. ' for' → logprob: -4.658156871795654
    4. '   ' → logprob: -8.533157348632812
    5. '        
' → logprob: -9.658157348632812
    6. '<|end|>' → logprob: -9.783157348632812
    7. '<|end|>' → logprob: -11.408157348632812
    8. '	for' → logprob: -11.533157348632812
    9. ',' → logprob: -12.033157348632812
    10. '
' → logprob: -12.283157348632812

Token 682: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027889128774404526
    2. ' for' → logprob: -3.7778890132904053
    3. 'range' → logprob: -5.902889251708984
    4. '   ' → logprob: -6.902889251708984
    5. 'continue' → logprob: -8.027889251708984
    6. '       ' → logprob: -8.527889251708984
    7. '```' → logprob: -8.652889251708984
    8. ' range' → logprob: -9.152889251708984
    9. '
' → logprob: -11.027889251708984
    10. 'try' → logprob: -11.152889251708984

Token 683: ' linear' (ID: 23876)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2777923047542572
    2. 'for' → logprob: -1.7777923345565796
    3. ' for' → logprob: -2.65279221534729
    4. '           ' → logprob: -6.152792453765869
    5. '```' → logprob: -7.402792453765869
    6. '   ' → logprob: -8.152791976928711
    7. '               ' → logprob: -10.527791976928711
    8. '
' → logprob: -11.527791976928711
    9. '	for' → logprob: -11.902791976928711
    10. '        
' → logprob: -12.777791976928711

Token 684: ' test' (ID: 1746)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1757010519504547
    2. 'for' → logprob: -2.300701141357422
    3. '       ' → logprob: -3.175701141357422
    4. '   ' → logprob: -4.550701141357422
    5. ' 
' → logprob: -5.925701141357422
    6. '
' → logprob: -6.175701141357422
    7. ' range' → logprob: -6.550701141357422
    8. ' w' → logprob: -7.300701141357422
    9. ' in' → logprob: -8.175701141357422
    10. '        
' → logprob: -8.175701141357422

Token 685: ' up' (ID: 869)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03901602700352669
    2. ' for' → logprob: -3.914016008377075
    3. 'for' → logprob: -4.039016246795654
    4. '   ' → logprob: -8.414015769958496
    5. '        
' → logprob: -8.539015769958496
    6. '
' → logprob: -8.664015769958496
    7. '	for' → logprob: -10.414015769958496
    8. '	' → logprob: -11.289015769958496
    9. '<|end|>' → logprob: -11.289015769958496
    10. '    
' → logprob: -11.914015769958496

Token 686: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0038271527737379074
    2. '1' → logprob: -6.753827095031738
    3. 'for' → logprob: -6.753827095031738
    4. ' to' → logprob: -7.628827095031738
    5. '   ' → logprob: -8.003827095031738
    6. '       ' → logprob: -8.503827095031738
    7. '_to' → logprob: -8.628827095031738
    8. 'from' → logprob: -10.003827095031738
    9. 'p' → logprob: -10.378827095031738
    10. '           ' → logprob: -10.378827095031738

Token 687: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.5649528298527e-05
    2. ' max' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.375075340270996
    4. '100' → logprob: -16.250076293945312
    5. '	max' → logprob: -17.000076293945312
    6. '(max' → logprob: -17.625076293945312
    7. '       ' → logprob: -17.625076293945312
    8. '```' → logprob: -18.125076293945312
    9. '
' → logprob: -19.000076293945312
    10. '=max' → logprob: -19.375076293945312

Token 688: '_search' (ID: 23642)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09266921132802963
    2. '_search' → logprob: -2.7176692485809326
    3. '+' → logprob: -4.4676690101623535
    4. ' +' → logprob: -5.3426690101623535
    5. 'for' → logprob: -6.3426690101623535
    6. '   ' → logprob: -6.4676690101623535
    7. ' for' → logprob: -6.8426690101623535
    8. '           ' → logprob: -7.3426690101623535
    9. '
' → logprob: -8.217669486999512
    10. '```' → logprob: -8.342669486999512

Token 689: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7781873345375061
    2. 'for' → logprob: -0.7781873345375061
    3. ' for' → logprob: -2.5281872749328613
    4. '   ' → logprob: -6.653187274932861
    5. '        
' → logprob: -8.77818775177002
    6. '
' → logprob: -8.90318775177002
    7. '	for' → logprob: -10.27818775177002
    8. '<|end|>' → logprob: -10.52818775177002
    9. '    
' → logprob: -11.27818775177002
    10. ' ' → logprob: -11.65318775177002

Token 690: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012194913811981678
    2. ' for' → logprob: -4.637195110321045
    3. 'for' → logprob: -6.262195110321045
    4. '   ' → logprob: -7.637195110321045
    5. '
' → logprob: -10.887194633483887
    6. '        
' → logprob: -10.887194633483887
    7. '<|end|>' → logprob: -12.762194633483887
    8. '	for' → logprob: -13.012194633483887
    9. '           ' → logprob: -13.387194633483887
    10. '    
' → logprob: -14.512194633483887

Token 691: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2767426073551178
    2. 'for' (adapté à ' for') → logprob: -1.5267425775527954
    3. ' for' → logprob: -3.776742696762085
    4. '   ' → logprob: -6.651742458343506
    5. '
' → logprob: -8.276742935180664
    6. '```' → logprob: -10.526742935180664
    7. '        
' → logprob: -10.901742935180664
    8. '	for' → logprob: -11.151742935180664
    9. '    
' → logprob: -13.401742935180664
    10. '           ' → logprob: -13.901742935180664

Token 692: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0002823120157700032
    2. 'candidate' → logprob: -8.250282287597656
    3. ' w' → logprob: -10.875282287597656
    4. 'new' → logprob: -14.000282287597656
    5. 'cand' → logprob: -14.375282287597656
    6. '```' → logprob: -15.375282287597656
    7. ' candidate' → logprob: -15.500282287597656
    8. 'weight' → logprob: -15.750282287597656
    9. '   ' → logprob: -16.250282287597656
    10. '	w' → logprob: -17.250282287597656

Token 693: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026304252445697784
    2. 'in' → logprob: -3.651304244995117
    3. ' ' → logprob: -13.401304244995117
    4. '	in' → logprob: -14.401304244995117
    5. 'space' → logprob: -15.026304244995117
    6. 'w' → logprob: -15.526304244995117
    7. 'i' → logprob: -15.651304244995117
    8. '_in' → logprob: -15.651304244995117
    9. 'n' → logprob: -15.901304244995117
    10. ' ' → logprob: -16.026304244995117

Token 694: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7729658540920354e-05
    2. ' range' → logprob: -10.500027656555176
    3. '1' → logprob: -16.750028610229492
    4. '(range' → logprob: -17.875028610229492
    5. '	range' → logprob: -19.000028610229492
    6. '   ' → logprob: -19.500028610229492
    7. ' ' → logprob: -20.250028610229492
    8. '```' → logprob: -21.500028610229492
    9. '  ' → logprob: -22.250028610229492
    10. 'ange' → logprob: -22.625028610229492

Token 695: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023246407508850098
    2. '(' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.273246765136719
    4. ' ' → logprob: -15.398246765136719
    5. '       ' → logprob: -17.64824676513672
    6. '[' → logprob: -18.02324676513672
    7. '```' → logprob: -18.02324676513672
    8. ',' → logprob: -18.14824676513672
    9. ' (' → logprob: -19.39824676513672
    10. '           ' → logprob: -19.77324676513672

Token 696: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. 'max' → logprob: -19.125
    4. '   ' → logprob: -20.125
    5. '(' → logprob: -20.25
    6. '```' → logprob: -20.5
    7. '0' → logprob: -21.5
    8. '１' → logprob: -21.5
    9. '۱' → logprob: -22.3125
    10. '[' → logprob: -22.6875

Token 697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003206234658136964
    2. ',max' → logprob: -5.753206253051758
    3. ' ,' → logprob: -10.628206253051758
    4. ',
' → logprob: -12.753206253051758
    5. ',len' → logprob: -14.628206253051758
    6. ',m' → logprob: -15.378206253051758
    7. ',int' → logprob: -15.378206253051758
    8. '(max' → logprob: -15.878206253051758
    9. '   ' → logprob: -16.878206253051758
    10. ',w' → logprob: -17.128206253051758

Token 698: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.935296834039036e-06
    2. ' max' → logprob: -12.75000286102295
    3. '(max' → logprob: -18.875003814697266
    4. '   ' → logprob: -19.250003814697266
    5. '           ' → logprob: -19.375003814697266
    6. '	max' → logprob: -20.500003814697266
    7. '[max' → logprob: -21.000003814697266
    8. '       ' → logprob: -21.500003814697266
    9. ',max' → logprob: -22.000003814697266
    10. '
' → logprob: -22.000003814697266

Token 699: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -2.165027217415627e-05
    2. 'search' → logprob: -10.750021934509277
    3. 'Search' → logprob: -16.50002098083496
    4. '_a' → logprob: -17.00002098083496
    5. 'a' → logprob: -17.50002098083496
    6. '(search' → logprob: -17.75002098083496
    7. '	search' → logprob: -17.87502098083496
    8. ' search' → logprob: -18.00002098083496
    9. '_SEARCH' → logprob: -18.12502098083496
    10. 'earch' → logprob: -18.25002098083496

Token 700: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006715728435665369
    2. ' +' → logprob: -5.006715774536133
    3. '):
' → logprob: -15.506715774536133
    4. '   ' → logprob: -16.256715774536133
    5. '()+' → logprob: -16.756715774536133
    6. '):' → logprob: -17.756715774536133
    7. '＋' → logprob: -17.756715774536133
    8. '+
' → logprob: -19.131715774536133
    9. '```' → logprob: -19.131715774536133
    10. ')+' → logprob: -20.006715774536133

Token 701: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.0
    4. '```' → logprob: -19.0
    5. '
' → logprob: -19.25
    6. ')' → logprob: -20.25
    7. '2' → logprob: -20.625
    8. '=' → logprob: -21.125
    9. '):
' → logprob: -21.5
    10. '``' → logprob: -21.75

Token 702: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023814985528588295
    2. '):
' → logprob: -4.273815155029297
    3. ':' → logprob: -4.648815155029297
    4. ':
' → logprob: -11.148815155029297
    5. '):
' → logprob: -12.148815155029297
    6. ')' → logprob: -12.773815155029297
    7. '}:' → logprob: -13.148815155029297
    8. '():' → logprob: -13.398815155029297
    9. ']:' → logprob: -13.523815155029297
    10. '   ' → logprob: -13.523815155029297

Token 703: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08039672672748566
    2. ' if' → logprob: -3.5803966522216797
    3. '       ' → logprob: -3.8303966522216797
    4. ':' → logprob: -4.70539665222168
    5. '<|end|>' → logprob: -4.83039665222168
    6. 'if' → logprob: -6.08039665222168
    7. ':
' → logprob: -6.08039665222168
    8. '   ' → logprob: -6.33039665222168
    9. '               ' → logprob: -6.83039665222168
    10. '<|end|>' → logprob: -6.95539665222168

Token 704: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10556900501251221
    2. '           ' → logprob: -2.7305688858032227
    3. ' if' → logprob: -3.3555688858032227
    4. '   ' → logprob: -9.980568885803223
    5. '               ' → logprob: -10.980568885803223
    6. '       ' → logprob: -11.105568885803223
    7. '	if' → logprob: -11.230568885803223
    8. '	       ' → logprob: -11.605568885803223
    9. '<|end|>' → logprob: -12.230568885803223
    10. 'If' → logprob: -12.730568885803223

Token 705: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.04858759790658951
    2. ' can' → logprob: -3.0485875606536865
    3. '	can' → logprob: -15.673587799072266
    4. '(can' → logprob: -17.173587799072266
    5. '   ' → logprob: -18.548587799072266
    6. '_can' → logprob: -19.298587799072266
    7. '.can' → logprob: -19.798587799072266
    8. '           ' → logprob: -20.298587799072266
    9. ' ' → logprob: -20.923587799072266
    10. 'Can' → logprob: -21.798587799072266

Token 706: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -8.77627644513268e-06
    2. 'all' → logprob: -11.750008583068848
    3. 'w' → logprob: -15.000008583068848
    4. '_can' → logprob: -15.250008583068848
    5. 'All' → logprob: -16.125009536743164
    6. '_with' → logprob: -17.375009536743164
    7. '_measure' → logprob: -17.375009536743164
    8. '_add' → logprob: -17.625009536743164
    9. ' all' → logprob: -17.625009536743164
    10. '_' → logprob: -18.000009536743164

Token 707: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -1.9027791495318525e-05
    2. '_all' → logprob: -11.500019073486328
    3. 'with' → logprob: -12.000019073486328
    4. '_w' → logprob: -13.750019073486328
    5. '(w' → logprob: -13.875019073486328
    6. 'w' → logprob: -14.875019073486328
    7. '
' → logprob: -16.250019073486328
    8. '(with' → logprob: -16.750019073486328
    9. '_possible' → logprob: -17.000019073486328
    10. '   ' → logprob: -17.125019073486328

Token 708: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.05541939288377762
    2. 'new' → logprob: -2.930419445037842
    3. 'w' → logprob: -8.055418968200684
    4. '(w' → logprob: -8.555418968200684
    5. ' new' → logprob: -11.680418968200684
    6. '_w' → logprob: -12.055418968200684
    7. 'New' → logprob: -12.930418968200684
    8. '(new' → logprob: -13.055418968200684
    9. '_all' → logprob: -13.805418968200684
    10. 'the' → logprob: -14.055418968200684

Token 709: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -6.146429223008454e-05
    2. 'w' → logprob: -9.75006103515625
    3. '(w' → logprob: -13.25006103515625
    4. '```' → logprob: -15.62506103515625
    5. '	w' → logprob: -15.75006103515625
    6. '_s' → logprob: -16.12506103515625
    7. '   ' → logprob: -16.25006103515625
    8. 'new' → logprob: -16.50006103515625
    9. '\' → logprob: -16.75006103515625
    10. 's' → logprob: -17.00006103515625

Token 710: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -6.704273118884885e-07
    2. 'w' → logprob: -14.875000953674316
    3. '(' → logprob: -16.25
    4. ' (' → logprob: -16.625
    5. ')' → logprob: -18.5
    6. '(s' → logprob: -20.0
    7. '```' → logprob: -20.125
    8. '(
' → logprob: -20.25
    9. '[w' → logprob: -20.5
    10. '((' → logprob: -20.5

Token 711: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38691645860671997
    2. '):
' → logprob: -1.1369163990020752
    3. ')' → logprob: -10.636916160583496
    4. '):
' → logprob: -11.261916160583496
    5. ':' → logprob: -12.136916160583496
    6. '):

' → logprob: -13.761916160583496
    7. '           ' → logprob: -14.386916160583496
    8. '():
' → logprob: -14.636916160583496
    9. ':
' → logprob: -14.886916160583496
    10. ')==' → logprob: -15.261916160583496

Token 712: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00030197695014066994
    2. '           ' → logprob: -8.7503023147583
    3. '<|end|>' → logprob: -10.2503023147583
    4. ':' → logprob: -10.3753023147583
    5. ':
' → logprob: -10.5003023147583
    6. '```' → logprob: -11.1253023147583
    7. '       ' → logprob: -11.8753023147583
    8. '
' → logprob: -12.5003023147583
    9. '<|end|>' → logprob: -12.5003023147583
    10. '):
' → logprob: -12.6253023147583

Token 713: ' ans' (ID: 3345)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4805411696434021
    2. 'ans' (adapté à ' ans') → logprob: -0.9805411696434021
    3. '           ' → logprob: -5.605541229248047
    4. ' ans' → logprob: -6.355541229248047
    5. '   ' → logprob: -7.480541229248047
    6. 'answer' → logprob: -8.105541229248047
    7. '       ' → logprob: -9.980541229248047
    8. '	ans' → logprob: -10.230541229248047
    9. '                   ' → logprob: -10.480541229248047
    10. 'print' → logprob: -10.980541229248047

Token 714: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38690051436424255
    2. ' =' → logprob: -1.136900544166565
    3. '               ' → logprob: -11.386900901794434
    4. '=
' → logprob: -12.261900901794434
    5. '<|end|>' → logprob: -12.636900901794434
    6. '           ' → logprob: -13.136900901794434
    7. '=True' → logprob: -13.386900901794434
    8. ')' → logprob: -13.636900901794434
    9. ' =
' → logprob: -13.761900901794434
    10. '                   ' → logprob: -14.386900901794434

Token 715: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0009115827269852161
    2. ' w' → logprob: -7.000911712646484
    3. '           ' → logprob: -17.375911712646484
    4. '   ' → logprob: -18.625911712646484
    5. '               ' → logprob: -18.750911712646484
    6. '       ' → logprob: -19.375911712646484
    7. '	w' → logprob: -20.000911712646484
    8. '                   ' → logprob: -21.250911712646484
    9. ' ' → logprob: -22.750911712646484
    10. '<w' → logprob: -23.000911712646484

Token 716: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.171581091824919e-05
    2. '           ' → logprob: -10.12507152557373
    3. '```' → logprob: -10.87507152557373
    4. '<|end|>' → logprob: -11.87507152557373
    5. '                   ' → logprob: -13.12507152557373
    6. '       ' → logprob: -13.87507152557373
    7. '			' → logprob: -14.25007152557373
    8. '<|end|>' → logprob: -15.00007152557373
    9. '		       ' → logprob: -15.25007152557373
    10. '                
' → logprob: -15.50007152557373

Token 717: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.792751032160595e-05
    2. '           ' → logprob: -9.75008773803711
    3. '```' → logprob: -11.37508773803711
    4. '                   ' → logprob: -12.87508773803711
    5. '			' → logprob: -12.87508773803711
    6. '<|end|>' → logprob: -13.00008773803711
    7. '                
' → logprob: -13.12508773803711
    8. '       ' → logprob: -13.37508773803711
    9. 'break' → logprob: -13.50008773803711
    10. 'print' → logprob: -13.50008773803711

Token 718: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25239911675453186
    2. 'break' (adapté à ' break') → logprob: -1.5023990869522095
    3. ' break' → logprob: -8.127399444580078
    4. '           ' → logprob: -8.752399444580078
    5. 'print' → logprob: -11.377399444580078
    6. '			' → logprob: -13.002399444580078
    7. '	break' → logprob: -13.752399444580078
    8. '```' → logprob: -14.252399444580078
    9. '       ' → logprob: -14.627399444580078
    10. '                   ' → logprob: -15.752399444580078

Token 719: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1638941615819931
    2. '
' → logprob: -1.9138941764831543
    3. '        
' → logprob: -6.038894176483154
    4. '    
' → logprob: -7.663894176483154
    5. '<|end|>' → logprob: -7.788894176483154
    6. '  
' → logprob: -9.288893699645996
    7. '   ' → logprob: -9.413893699645996
    8. '            
' → logprob: -9.913893699645996
    9. '\n' → logprob: -9.913893699645996
    10. 'print' → logprob: -11.413893699645996

Token 720: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008029123768210411
    2. '   ' → logprob: -5.758028984069824
    3. '
' → logprob: -6.383028984069824
    4. '        
' → logprob: -6.383028984069824
    5. '```' → logprob: -7.133028984069824
    6. '    
' → logprob: -8.008028984069824
    7. '<|end|>' → logprob: -9.133028984069824
    8. '  
' → logprob: -9.133028984069824
    9. '           ' → logprob: -10.133028984069824
    10. 'print' → logprob: -10.508028984069824

Token 721: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4829704463481903
    2. 'print' (adapté à ' print') → logprob: -0.9829704761505127
    3. '   ' → logprob: -4.732970237731934
    4. '```' → logprob: -10.482970237731934
    5. ' print' → logprob: -11.107970237731934
    6. '
' → logprob: -11.857970237731934
    7. '        
' → logprob: -13.357970237731934
    8. 'if' → logprob: -14.357970237731934
    9. '           ' → logprob: -14.732970237731934
    10. '    
' → logprob: -15.357970237731934

Token 722: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -11.875007629394531
    3. 'ans' → logprob: -15.750007629394531
    4. ' (' → logprob: -17.00000762939453
    5. '()' → logprob: -17.87500762939453
    6. '(answer' → logprob: -18.12500762939453
    7. '('' → logprob: -18.62500762939453
    8. '   ' → logprob: -19.00000762939453
    9. '((' → logprob: -19.37500762939453
    10. '	ans' → logprob: -19.50000762939453

Token 723: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -13.750005722045898
    3. '<|end|>' → logprob: -13.750005722045898
    4. '())' → logprob: -14.125005722045898
    5. '`)' → logprob: -14.250005722045898
    6. '   ' → logprob: -14.625005722045898
    7. '')' → logprob: -15.000005722045898
    8. ' )' → logprob: -15.125005722045898
    9. '```' → logprob: -15.250005722045898
    10. '")' → logprob: -15.375005722045898

Token 724: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 725: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023269474506378174
    2. '__' → logprob: -3.7732694149017334
    3. '_' → logprob: -11.398269653320312
    4. '_name' → logprob: -11.898269653320312
    5. '___' → logprob: -12.898269653320312
    6. ' ' → logprob: -13.898269653320312
    7. ' ' → logprob: -14.148269653320312
    8. 'name' → logprob: -14.273269653320312
    9. ' ___' → logprob: -15.023269653320312
    10. ' _' → logprob: -15.273269653320312

Token 726: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06569845974445343
    2. ' ==' → logprob: -3.0656983852386475
    3. '==' → logprob: -4.190698623657227
    4. 'name' → logprob: -7.565698623657227
    5. '=="' → logprob: -7.565698623657227
    6. '__.__' → logprob: -7.690698623657227
    7. ' __' → logprob: -9.815698623657227
    8. '__.' → logprob: -9.940698623657227
    9. '__":
' → logprob: -10.065698623657227
    10. '.__' → logprob: -10.440698623657227

Token 727: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.286852345103398e-05
    2. '__.__' → logprob: -10.250042915344238
    3. '__.' → logprob: -12.625042915344238
    4. '==' → logprob: -12.750042915344238
    5. ' ==' → logprob: -14.875042915344238
    6. '```' → logprob: -15.375042915344238
    7. '=="' → logprob: -15.750042915344238
    8. '__
' → logprob: -16.250041961669922
    9. '____' → logprob: -16.250041961669922
    10. 'name' → logprob: -16.500041961669922

Token 728: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.15874159336090088
    2. ' ==' → logprob: -2.4087414741516113
    3. '==' → logprob: -2.9087414741516113
    4. '=="' → logprob: -6.533741474151611
    5. '=='' → logprob: -7.408741474151611
    6. '__.__' → logprob: -8.53374195098877
    7. '.__' → logprob: -11.90874195098877
    8. '===' → logprob: -12.03374195098877
    9. '__":
' → logprob: -12.40874195098877
    10. '___' → logprob: -12.40874195098877

Token 729: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20145398378372192
    2. ''' → logprob: -1.7014539241790771
    3. '__' → logprob: -10.201454162597656
    4. ' "__' → logprob: -12.701454162597656
    5. ' '__' → logprob: -15.451454162597656
    6. '"user' → logprob: -16.326454162597656
    7. '   ' → logprob: -16.951454162597656
    8. '("__' → logprob: -17.326454162597656
    9. '('__' → logprob: -17.701454162597656
    10. ''app' → logprob: -17.701454162597656

Token 730: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01110087800770998
    2. '__' → logprob: -4.511100769042969
    3. '"' → logprob: -10.011100769042969
    4. 'name' → logprob: -12.136100769042969
    5. ''' → logprob: -13.011100769042969
    6. '__":
' → logprob: -15.386100769042969
    7. '__
' → logprob: -15.886100769042969
    8. ' main' → logprob: -16.51110076904297
    9. '__':
' → logprob: -17.26110076904297
    10. '___' → logprob: -17.38610076904297

Token 731: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.045971520245075226
    2. '__' → logprob: -3.170971632003784
    3. '__':
' → logprob: -5.920971393585205
    4. '():
' → logprob: -8.920971870422363
    5. '__:' → logprob: -9.545971870422363
    6. '__["' → logprob: -10.795971870422363
    7. '__.' → logprob: -11.170971870422363
    8. ':' → logprob: -11.420971870422363
    9. '__.__' → logprob: -12.295971870422363
    10. ':
' → logprob: -12.295971870422363

Token 732: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025672181509435177
    2. ' solution' → logprob: -6.002567291259766
    3. '   ' → logprob: -10.127567291259766
    4. 'solution' → logprob: -10.377567291259766
    5. '(solution' → logprob: -11.752567291259766
    6. '_solution' → logprob: -12.127567291259766
    7. '```' → logprob: -12.877567291259766
    8. ' ' → logprob: -13.627567291259766
    9. '	s' → logprob: -14.002567291259766
    10. ' solución' → logprob: -14.877567291259766

Token 733: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' (adapté à ' solution') → logprob: -8.537868779967539e-06
    2. ' solution' → logprob: -12.250008583068848
    3. '   ' → logprob: -12.500008583068848
    4. '(solution' → logprob: -18.12500762939453
    5. '_solution' → logprob: -19.37500762939453
    6. 'main' → logprob: -19.50000762939453
    7. '.solution' → logprob: -20.75000762939453
    8. 'Solution' → logprob: -21.00000762939453
    9. '```' → logprob: -21.37500762939453
    10. 'solve' → logprob: -21.75000762939453

Token 734: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0733175203204155
    2. '<|end|>' → logprob: -2.698317527770996
    3. '```' → logprob: -6.573317527770996
    4. '()
' → logprob: -7.323317527770996
    5. '
' → logprob: -7.573317527770996
    6. '(' → logprob: -8.448317527770996
    7. '<|end|>' → logprob: -8.823317527770996
    8. '();' → logprob: -9.073317527770996
    9. '()\' → logprob: -9.823317527770996
    10. ')' → logprob: -10.073317527770996


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 732
Tokens correctement prédits (1ère position, stricte): 246
Tokens correctement prédits (1ère position, avec adaptation): 254
Tokens correctement prédits (top 10): 496
Précision stricte (1ère position): 33.61%
Précision adaptée (1ère position): 34.70%
Précision (top 10): 67.76%
================================================================================
