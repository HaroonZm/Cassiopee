================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n, m = map(int, input().split())
    if n == 0 and m == 0:
        break

    winners = []
    for _ in range(n):
        pattern, prize = input().split()
        prize = int(prize)
        winners.append((pattern, prize))

    tickets = [input() for _ in range(m)]

    total_prize = 0
    for ticket in tickets:
        for pattern, prize in winners:
            match = True
            for i in range(8):
                if pattern[i] != '*' and pattern[i] != ticket[i]:
                    match = False
                    break
            if match:
                total_prize += prize
                break

    print(total_prize)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01033273246139288
    2. '    ' → logprob: -4.7603325843811035
    3. '```' → logprob: -7.1353325843811035
    4. 'print' → logprob: -9.260333061218262
    5. 'pass' → logprob: -9.385333061218262
    6. '   ' → logprob: -9.385333061218262
    7. 'i' → logprob: -9.385333061218262
    8. 's' → logprob: -9.510333061218262
    9. 'a' → logprob: -9.510333061218262
    10. 'try' → logprob: -9.760333061218262

Token 5: ',' (ID: 11)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0897926092147827
    2. ' ' → logprob: -1.2147926092147827
    3. '=' → logprob: -2.3397927284240723
    4. 'o' → logprob: -2.3397927284240723
    5. '+' → logprob: -2.9647927284240723
    6. '   ' → logprob: -3.2147927284240723
    7. '_' → logprob: -4.339792728424072
    8. '.' → logprob: -4.339792728424072
    9. 'e' → logprob: -4.839792728424072
    10. '%' → logprob: -4.964792728424072

Token 6: ' m' (ID: 284)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.37687796354293823
    2. ' =' → logprob: -2.126878023147583
    3. 'input' → logprob: -2.751878023147583
    4. ' s' → logprob: -3.376878023147583
    5. 's' → logprob: -3.626878023147583
    6. '=' → logprob: -3.876878023147583
    7. ' ' → logprob: -4.001877784729004
    8. '=input' → logprob: -4.251877784729004
    9. ' n' → logprob: -4.876877784729004
    10. '"' → logprob: -7.001877784729004

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8374952077865601
    2. ' =' → logprob: -0.8374952077865601
    3. ',' → logprob: -2.0874953269958496
    4. ' ,' → logprob: -4.83749532699585
    5. ')' → logprob: -6.71249532699585
    6. ' ' → logprob: -7.08749532699585
    7. '<|end|>' → logprob: -8.462494850158691
    8. '[' → logprob: -10.087494850158691
    9. '  ' → logprob: -10.087494850158691
    10. ' )' → logprob: -11.212494850158691

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3494654893875122
    2. 'map' → logprob: -1.7244654893875122
    3. ' input' → logprob: -2.4744653701782227
    4. 'input' → logprob: -3.4744653701782227
    5. ' int' → logprob: -7.349465370178223
    6. 'int' → logprob: -7.974465370178223
    7. ' ' → logprob: -8.474465370178223
    8. '0' → logprob: -8.724465370178223
    9. ' list' → logprob: -10.099465370178223
    10. 'list' → logprob: -11.099465370178223

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03969519957900047
    2. '(' → logprob: -3.2896952629089355
    3. '(str' → logprob: -7.0396952629089355
    4. '(lambda' → logprob: -7.5396952629089355
    5. '<int' → logprob: -9.289694786071777
    6. 'int' → logprob: -9.664694786071777
    7. '[int' → logprob: -10.164694786071777
    8. '(input' → logprob: -10.664694786071777
    9. '=int' → logprob: -12.039694786071777
    10. '(
' → logprob: -12.789694786071777

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.050721414387226105
    2. 'input' → logprob: -3.3007214069366455
    3. ')' → logprob: -5.300721645355225
    4. '(' → logprob: -5.300721645355225
    5. ' input' → logprob: -6.175721645355225
    6. ',input' → logprob: -7.800721645355225
    7. ',' → logprob: -10.050721168518066
    8. '=input' → logprob: -10.425721168518066
    9. '(int' → logprob: -11.675721168518066
    10. '<input' → logprob: -11.800721168518066

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20144745707511902
    2. ' input' → logprob: -1.7014474868774414
    3. ')' → logprob: -10.451447486877441
    4. '(input' → logprob: -12.701447486877441
    5. ' )' → logprob: -14.451447486877441
    6. '=input' → logprob: -14.701447486877441
    7. ' ' → logprob: -14.701447486877441
    8. '	input' → logprob: -15.451447486877441
    9. ',input' → logprob: -15.701447486877441
    10. '```' → logprob: -15.826447486877441

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4483998417854309
    2. '())' → logprob: -1.1983997821807861
    3. '().' → logprob: -3.073399782180786
    4. '('' → logprob: -5.573400020599365
    5. ')' → logprob: -5.948400020599365
    6. '());' → logprob: -6.073400020599365
    7. '()))' → logprob: -6.448400020599365
    8. '(' → logprob: -7.448400020599365
    9. '(()' → logprob: -7.573400020599365
    10. '();)' → logprob: -8.198399543762207

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002694416616577655
    2. 'strip' → logprob: -8.250269889831543
    3. 'rstrip' → logprob: -12.000269889831543
    4. ' split' → logprob: -13.375269889831543
    5. '(split' → logprob: -15.000269889831543
    6. ')' → logprob: -17.375268936157227
    7. 'spl' → logprob: -17.500268936157227
    8. 'replace' → logprob: -17.500268936157227
    9. 'read' → logprob: -18.250268936157227
    10. '```' → logprob: -19.000268936157227

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5358927845954895
    2. '())' → logprob: -1.1608927249908447
    3. '))' → logprob: -2.4108927249908447
    4. '()))' → logprob: -4.910892963409424
    5. '()' → logprob: -5.410892963409424
    6. '())
' → logprob: -10.910892486572266
    7. ')))' → logprob: -11.410892486572266
    8. '),' → logprob: -11.785892486572266
    9. '')' → logprob: -12.285892486572266
    10. '(' → logprob: -12.535892486572266

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14348846673965454
    2. '   ' → logprob: -2.1434884071350098
    3. ' if' → logprob: -5.14348840713501
    4. ' ' → logprob: -6.01848840713501
    5. ':
' → logprob: -6.26848840713501
    6. ')' → logprob: -6.64348840713501
    7. '):' → logprob: -7.14348840713501
    8. ',' → logprob: -7.39348840713501
    9. '\n' → logprob: -7.39348840713501
    10. '    ' → logprob: -7.76848840713501

Token 16: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6763339638710022
    2. '   ' → logprob: -1.0513339042663574
    3. 'if' (adapté à ' if') → logprob: -2.4263339042663574
    4. ' ' → logprob: -4.176333904266357
    5. '    ' → logprob: -4.426333904266357
    6. '       ' → logprob: -5.051333904266357
    7. '```' → logprob: -5.301333904266357
    8. 'i' → logprob: -5.676333904266357
    9. '<|end|>' → logprob: -5.926333904266357
    10. '    
' → logprob: -6.176333904266357

Token 17: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.017527908086776733
    2. ' not' → logprob: -4.142528057098389
    3. ' m' → logprob: -7.142528057098389
    4. 'n' → logprob: -7.392528057098389
    5. 'not' → logprob: -9.64252758026123
    6. 'm' → logprob: -11.39252758026123
    7. ' ' → logprob: -12.14252758026123
    8. ' ' → logprob: -12.76752758026123
    9. '(n' → logprob: -14.26752758026123
    10. ' (' → logprob: -15.51752758026123

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07479651272296906
    2. '==' → logprob: -2.824796438217163
    3. ' <=' → logprob: -5.074796676635742
    4. ' <' → logprob: -5.949796676635742
    5. ' ' → logprob: -6.574796676635742
    6. '<' → logprob: -7.574796676635742
    7. ' >' → logprob: -7.699796676635742
    8. '>' → logprob: -8.074796676635742
    9. ')' → logprob: -8.199796676635742
    10. '<=' → logprob: -8.449796676635742

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28136324882507324
    2. '0' → logprob: -1.4063632488250732
    3. ' m' → logprob: -9.156363487243652
    4. 'm' → logprob: -9.406363487243652
    5. ' -' → logprob: -11.281363487243652
    6. '-' → logprob: -12.281363487243652
    7. '  ' → logprob: -13.093863487243652
    8. '1' → logprob: -13.718863487243652
    9. '   ' → logprob: -13.781363487243652
    10. '    ' → logprob: -14.281363487243652

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00045795587357133627
    2. 'm' → logprob: -8.250457763671875
    3. ' ' → logprob: -8.625457763671875
    4. '-' → logprob: -11.375457763671875
    5. '```' → logprob: -13.250457763671875
    6. ' m' → logprob: -14.000457763671875
    7. '1' → logprob: -14.562957763671875
    8. '   ' → logprob: -14.812957763671875
    9. '  ' → logprob: -14.937957763671875
    10. ' -' → logprob: -15.687957763671875

Token 21: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13030385971069336
    2. ':' → logprob: -2.1303038597106934
    3. 'and' → logprob: -5.755303859710693
    4. ' ' → logprob: -9.255304336547852
    5. ' or' → logprob: -9.505304336547852
    6. ' :' → logprob: -11.505304336547852
    7. ' a' → logprob: -11.505304336547852
    8. '   ' → logprob: -12.130304336547852
    9. ' an' → logprob: -13.255304336547852
    10. ',' → logprob: -13.505304336547852

Token 22: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.2519320547580719
    2. 'm' → logprob: -1.5019320249557495
    3. ' ' → logprob: -13.251932144165039
    4. '	m' → logprob: -14.626932144165039
    5. '   ' → logprob: -15.001932144165039
    6. '    ' → logprob: -15.126932144165039
    7. ' ' → logprob: -16.25193214416504
    8. '  ' → logprob: -16.25193214416504
    9. '<|end|>' → logprob: -18.00193214416504
    10. '&m' → logprob: -18.25193214416504

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10776735842227936
    2. '==' → logprob: -2.357767343521118
    3. '<|end|>' → logprob: -5.982767581939697
    4. ' ' → logprob: -6.357767581939697
    5. ' ' → logprob: -6.732767581939697
    6. '=' → logprob: -6.982767581939697
    7. ')' → logprob: -7.732767581939697
    8. '<|end|>' → logprob: -8.107767105102539
    9. '```' → logprob: -9.107767105102539
    10. '  ' → logprob: -9.732767105102539

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28115037083625793
    2. '0' → logprob: -1.4061503410339355
    3. ' ' → logprob: -16.406150817871094
    4. '  ' → logprob: -16.406150817871094
    5. '   ' → logprob: -18.093650817871094
    6. '۰' → logprob: -18.156150817871094
    7. '=' → logprob: -18.343650817871094
    8. '<|end|>' → logprob: -18.656150817871094
    9. '<|end|>' → logprob: -18.843650817871094
    10. '_' → logprob: -19.218650817871094

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '  ' → logprob: -17.003177642822266
    4. '   ' → logprob: -17.128177642822266
    5. '۰' → logprob: -18.378177642822266
    6. ' ' → logprob: -18.628177642822266
    7. '```' → logprob: -18.940677642822266
    8. '1' → logprob: -19.003177642822266
    9. ')' → logprob: -19.253177642822266
    10. '０' → logprob: -20.190677642822266

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002525184245314449
    2. '       ' → logprob: -8.750252723693848
    3. ':
' → logprob: -9.625252723693848
    4. '   ' → logprob: -10.625252723693848
    5. '):' → logprob: -13.500252723693848
    6. ' :' → logprob: -14.250252723693848
    7. ':return' → logprob: -14.375252723693848
    8. '    ' → logprob: -15.750252723693848
    9. ':\' → logprob: -15.875252723693848
    10. ',' → logprob: -16.00025177001953

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007255788426846266
    2. '   ' → logprob: -5.257255554199219
    3. ' break' → logprob: -6.382255554199219
    4. '\n' → logprob: -8.632255554199219
    5. '	break' → logprob: -9.507255554199219
    6. ':' → logprob: -10.757255554199219
    7. '    ' → logprob: -11.507255554199219
    8. '      ' → logprob: -11.507255554199219
    9. '     ' → logprob: -11.507255554199219
    10. 'break' → logprob: -12.132255554199219

Token 28: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.12634499371051788
    2. '       ' → logprob: -2.251344919204712
    3. 'break' (adapté à ' break') → logprob: -4.376345157623291
    4. '   ' → logprob: -7.251345157623291
    5. '	break' → logprob: -9.001344680786133
    6. '```' → logprob: -11.876344680786133
    7. '_break' → logprob: -12.126344680786133
    8. '           ' → logprob: -12.251344680786133
    9. '        
' → logprob: -13.251344680786133
    10. '-break' → logprob: -13.376344680786133

Token 29: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3145899176597595
    2. '   ' → logprob: -1.6895899772644043
    3. '\n' → logprob: -2.9395899772644043
    4. ')' → logprob: -3.9395899772644043
    5. '    
' → logprob: -5.689589977264404
    6. '\' → logprob: -5.939589977264404
    7. '       ' → logprob: -6.814589977264404
    8. ' ' → logprob: -6.814589977264404
    9. '    ' → logprob: -7.314589977264404
    10. '  ' → logprob: -7.439589977264404

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02474021352827549
    2. '    
' → logprob: -5.024740219116211
    3. '```' → logprob: -5.399740219116211
    4. 'n' → logprob: -5.649740219116211
    5. 'print' → logprob: -6.399740219116211
    6. '       ' → logprob: -6.524740219116211
    7. '    ' → logprob: -7.024740219116211
    8. '[' → logprob: -7.149740219116211
    9. 'a' → logprob: -7.149740219116211
    10. ')' → logprob: -7.274740219116211

Token 31: ' winners' (ID: 34698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.22896146774292
    2. 'result' → logprob: -2.10396146774292
    3. 's' → logprob: -2.97896146774292
    4. 'grid' → logprob: -2.97896146774292
    5. 'count' → logprob: -3.22896146774292
    6. 'a' → logprob: -3.22896146774292
    7. 'n' → logprob: -3.35396146774292
    8. '    ' → logprob: -3.35396146774292
    9. 'graph' → logprob: -3.47896146774292
    10. 'dp' → logprob: -3.47896146774292

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04982186481356621
    2. '=' → logprob: -3.0498218536376953
    3. '[' → logprob: -8.049821853637695
    4. '_' → logprob: -8.174821853637695
    5. '[:]' → logprob: -8.424821853637695
    6. '=[]' → logprob: -9.049821853637695
    7. ' ' → logprob: -10.049821853637695
    8. '.' → logprob: -10.049821853637695
    9. '_count' → logprob: -10.174821853637695
    10. ')' → logprob: -10.424821853637695

Token 33: ' []
' (ID: 8911)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29324859380722046
    2. '<|end|>' → logprob: -2.5432486534118652
    3. ' ' → logprob: -2.6682486534118652
    4. 'for' → logprob: -3.0432486534118652
    5. ' for' → logprob: -3.1682486534118652
    6. '    
' → logprob: -5.668248653411865
    7. ' 
' → logprob: -5.918248653411865
    8. '    ' → logprob: -5.918248653411865
    9. ')' → logprob: -6.418248653411865
    10. '
' → logprob: -6.793248653411865

Token 35: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.044175226241350174
    2. ' for' → logprob: -3.294175148010254
    3. '   ' → logprob: -5.544175148010254
    4. '	for' → logprob: -6.794175148010254
    5. ' ' → logprob: -7.919175148010254
    6. '[' → logprob: -8.544175148010254
    7. '    ' → logprob: -8.919175148010254
    8. '<|end|>' → logprob: -9.544175148010254
    9. '\t' → logprob: -9.794175148010254
    10. 'f' → logprob: -10.419175148010254

Token 36: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.09062891453504562
    2. ' i' → logprob: -2.5906288623809814
    3. '_' → logprob: -4.4656291007995605
    4. ' ' → logprob: -8.965628623962402
    5. ' range' → logprob: -10.590628623962402
    6. 'i' → logprob: -11.840628623962402
    7. ' ' → logprob: -12.465628623962402
    8. ' ‌' → logprob: -12.840628623962402
    9. '_i' → logprob: -13.215628623962402
    10. ' in' → logprob: -13.215628623962402

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017174237873405218
    2. 'in' → logprob: -6.376717567443848
    3. 'range' → logprob: -11.751717567443848
    4. 'n' → logprob: -13.001717567443848
    5. 'i' → logprob: -13.876717567443848
    6. ' ' → logprob: -14.251717567443848
    7. '	in' → logprob: -14.251717567443848
    8. ' i' → logprob: -14.376717567443848
    9. '<|end|>' → logprob: -14.751717567443848
    10. ' _' → logprob: -15.251717567443848

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012512595392763615
    2. ' range' → logprob: -4.387512683868408
    3. '	range' → logprob: -14.01251220703125
    4. 'rang' → logprob: -14.26251220703125
    5. '(range' → logprob: -14.51251220703125
    6. 'm' → logprob: -15.88751220703125
    7. 'ran' → logprob: -15.88751220703125
    8. '```' → logprob: -16.13751220703125
    9. '_range' → logprob: -16.26251220703125
    10. 'Range' → logprob: -16.38751220703125

Token 39: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5399203300476074
    2. '(n' → logprob: -1.6649203300476074
    3. '(m' → logprob: -2.0399203300476074
    4. ' m' → logprob: -3.4149203300476074
    5. ' n' → logprob: -3.6649203300476074
    6. ' (' → logprob: -3.9149203300476074
    7. ' range' → logprob: -4.164920330047607
    8. '(range' → logprob: -5.914920330047607
    9. 'm' → logprob: -7.914920330047607
    10. ' ' → logprob: -8.164920806884766

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00026526954025030136
    2. ')' → logprob: -8.625265121459961
    3. ':' → logprob: -10.375265121459961
    4. '+' → logprob: -11.250265121459961
    5. '):
' → logprob: -11.250265121459961
    6. ',' → logprob: -11.500265121459961
    7. '   ' → logprob: -11.875265121459961
    8. ' ):' → logprob: -12.125265121459961
    9. '*' → logprob: -13.500265121459961
    10. '-' → logprob: -13.625265121459961

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03450900688767433
    2. '   ' → logprob: -4.034509181976318
    3. '<|end|>' → logprob: -4.784509181976318
    4. '    ' → logprob: -6.409509181976318
    5. ' ' → logprob: -6.409509181976318
    6. 'w' → logprob: -6.909509181976318
    7. ' w' → logprob: -7.159509181976318
    8. ' winners' → logprob: -8.03450870513916
    9. ',' → logprob: -8.15950870513916
    10. '	   ' → logprob: -8.53450870513916

Token 42: ' pattern' (ID: 8302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.314505696296692
    2. 'name' → logprob: -1.814505696296692
    3. 'scores' → logprob: -2.5645055770874023
    4. ' name' → logprob: -2.6895055770874023
    5. ' scores' → logprob: -2.8145055770874023
    6. 'w' → logprob: -2.8145055770874023
    7. 'players' → logprob: -3.3145055770874023
    8. 'score' → logprob: -3.3145055770874023
    9. ' players' → logprob: -3.6895055770874023
    10. 'participants' → logprob: -3.9395055770874023

Token 43: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031168857589364052
    2. '=' → logprob: -3.5311689376831055
    3. 's' → logprob: -7.2811689376831055
    4. ',' → logprob: -7.7811689376831055
    5. '_' → logprob: -8.906168937683105
    6. '   ' → logprob: -10.031168937683105
    7. ' ' → logprob: -10.531168937683105
    8. '.append' → logprob: -10.531168937683105
    9. ' ,' → logprob: -10.656168937683105
    10. '    ' → logprob: -11.656168937683105

Token 44: ' prize' (ID: 29528)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.8620975613594055
    2. ' points' → logprob: -2.3620975017547607
    3. ' ' → logprob: -2.4870975017547607
    4. '_' → logprob: -2.4870975017547607
    5. 'points' → logprob: -3.1120975017547607
    6. ' score' → logprob: -3.3620975017547607
    7. 'scores' → logprob: -3.6120975017547607
    8. 's' → logprob: -3.7370975017547607
    9. 'votes' → logprob: -3.7370975017547607
    10. ' =' → logprob: -3.8620975017547607

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054938819259405136
    2. '=' → logprob: -2.929938793182373
    3. ',' → logprob: -10.554939270019531
    4. ' ' → logprob: -11.304939270019531
    5. '   ' → logprob: -12.304939270019531
    6. '_' → logprob: -12.554939270019531
    7. '    ' → logprob: -13.179939270019531
    8. ')' → logprob: -13.304939270019531
    9. 's' → logprob: -13.429939270019531
    10. '  ' → logprob: -14.054939270019531

Token 46: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.13489630818367004
    2. ' map' → logprob: -2.6348962783813477
    3. 'input' → logprob: -3.0098962783813477
    4. 'map' → logprob: -5.884896278381348
    5. ' ' → logprob: -6.134896278381348
    6. '    ' → logprob: -9.509896278381348
    7. ' list' → logprob: -10.384896278381348
    8. '   ' → logprob: -10.634896278381348
    9. ' int' → logprob: -11.259896278381348
    10. '	input' → logprob: -11.384896278381348

Token 47: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002854924649000168
    2. '()' → logprob: -5.877854824066162
    3. '(' → logprob: -10.00285530090332
    4. '.' → logprob: -13.25285530090332
    5. '('' → logprob: -14.50285530090332
    6. ')' → logprob: -14.75285530090332
    7. '())' → logprob: -14.75285530090332
    8. '('').' → logprob: -15.12785530090332
    9. '("").' → logprob: -15.25285530090332
    10. '()
' → logprob: -15.37785530090332

Token 48: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006249307654798031
    2. 'strip' → logprob: -5.63124942779541
    3. 'rs' → logprob: -6.00624942779541
    4. 'rstrip' → logprob: -8.63124942779541
    5. 'r' → logprob: -13.38124942779541
    6. 'sp' → logprob: -14.13124942779541
    7. 'spl' → logprob: -14.50624942779541
    8. 's' → logprob: -14.75624942779541
    9. ' split' → logprob: -15.13124942779541
    10. '```' → logprob: -15.50624942779541

Token 49: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11918507516384125
    2. '(' → logprob: -2.244184970855713
    3. '('' → logprob: -5.494184970855713
    4. '(',' → logprob: -7.244184970855713
    5. ')' → logprob: -7.369184970855713
    6. ',' → logprob: -8.119185447692871
    7. '   ' → logprob: -8.369185447692871
    8. '()
' → logprob: -9.494185447692871
    9. '(
' → logprob: -9.869185447692871
    10. '[' → logprob: -10.744185447692871

Token 50: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22759965062141418
    2. '<|end|>' → logprob: -1.8525996208190918
    3. '<|end|>' → logprob: -4.227599620819092
    4. '    
' → logprob: -4.852599620819092
    5. '
' → logprob: -5.227599620819092
    6. '       ' → logprob: -5.602599620819092
    7. ' 
' → logprob: -6.102599620819092
    8. ' ' → logprob: -6.102599620819092
    9. ',' → logprob: -6.227599620819092
    10. '=' → logprob: -6.477599620819092

Token 51: ' prize' (ID: 29528)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3401546478271484
    2. ' prize' → logprob: -1.5901546478271484
    3. ' ' → logprob: -1.7151546478271484
    4. ' 
' → logprob: -1.9651546478271484
    5. '    ' → logprob: -2.3401546478271484
    6. '<|end|>' → logprob: -2.9651546478271484
    7. '    
' → logprob: -4.590154647827148
    8. 'int' → logprob: -4.590154647827148
    9. '       ' → logprob: -5.090154647827148
    10. '  ' → logprob: -5.090154647827148

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47683390974998474
    2. '=' → logprob: -0.9768339395523071
    3. '=int' → logprob: -5.976833820343018
    4. ',' → logprob: -9.101834297180176
    5. 'int' → logprob: -10.226834297180176
    6. '   ' → logprob: -10.726834297180176
    7. '    ' → logprob: -10.976834297180176
    8. ')' → logprob: -12.226834297180176
    9. ' ' → logprob: -12.351834297180176
    10. 's' → logprob: -12.476834297180176

Token 53: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10022316873073578
    2. 'int' → logprob: -2.3502230644226074
    3. ' float' → logprob: -11.225223541259766
    4. 'float' → logprob: -13.850223541259766
    5. '=int' → logprob: -14.350223541259766
    6. '[int' → logprob: -14.600223541259766
    7. '	int' → logprob: -14.725223541259766
    8. ' ' → logprob: -15.475223541259766
    9. '<int' → logprob: -15.725223541259766
    10. '(int' → logprob: -16.100223541259766

Token 54: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.0011715330183506012
    2. '(' → logprob: -6.751171588897705
    3. 'pr' → logprob: -14.751171112060547
    4. '	pr' → logprob: -15.001171112060547
    5. '()' → logprob: -15.251171112060547
    6. ')' → logprob: -15.751171112060547
    7. ' (' → logprob: -17.126171112060547
    8. '(
' → logprob: -17.126171112060547
    9. '(pl' → logprob: -17.251171112060547
    10. '/pr' → logprob: -17.626171112060547

Token 55: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -7.958325295476243e-05
    2. '   ' → logprob: -10.375079154968262
    3. ' ' → logprob: -11.250079154968262
    4. 'ze' → logprob: -12.125079154968262
    5. '```' → logprob: -12.250079154968262
    6. ')' → logprob: -12.625079154968262
    7. '       ' → logprob: -12.875079154968262
    8. '[' → logprob: -13.000079154968262
    9. 'iz' → logprob: -13.125079154968262
    10. '  ' → logprob: -13.375079154968262

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021188464597798884
    2. ')
' → logprob: -8.500211715698242
    3. ' )' → logprob: -12.375211715698242
    4. '   ' → logprob: -13.250211715698242
    5. '       ' → logprob: -13.750211715698242
    6. ')
' → logprob: -14.875211715698242
    7. ')

' → logprob: -15.125211715698242
    8. '<|end|>' → logprob: -15.625211715698242
    9. ' ' → logprob: -16.375211715698242
    10. ')return' → logprob: -16.625211715698242

Token 57: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5400035977363586
    2. '
' → logprob: -1.5400035381317139
    3. '<|end|>' → logprob: -2.040003538131714
    4. 'w' → logprob: -2.915003538131714
    5. '       ' → logprob: -4.915003776550293
    6. '    
' → logprob: -6.165003776550293
    7. '```' → logprob: -6.415003776550293
    8. '\n' → logprob: -6.540003776550293
    9. ')' → logprob: -6.790003776550293
    10. '<|end|>' → logprob: -7.165003776550293

Token 58: ' winners' (ID: 34698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.230927586555481
    2. 'w' → logprob: -1.355927586555481
    3. ' winners' → logprob: -1.355927586555481
    4. ' if' → logprob: -2.8559274673461914
    5. 'if' → logprob: -3.4809274673461914
    6. ' 
' → logprob: -4.230927467346191
    7. '
' → logprob: -4.730927467346191
    8. '<|end|>' → logprob: -4.730927467346191
    9. 'n' → logprob: -4.855927467346191
    10. '    ' → logprob: -4.980927467346191

Token 59: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.17998024821281433
    2. '.' → logprob: -1.8049802780151367
    3. '.extend' → logprob: -8.929980278015137
    4. ' .' → logprob: -10.304980278015137
    5. '.setdefault' → logprob: -10.679980278015137
    6. '<|end|>' → logprob: -10.679980278015137
    7. '.add' → logprob: -11.554980278015137
    8. '.push' → logprob: -12.304980278015137
    9. 'append' → logprob: -13.554980278015137
    10. '.py' → logprob: -13.804980278015137

Token 60: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0025691180489957333
    2. '(' → logprob: -6.002569198608398
    3. '(pattern' → logprob: -9.377569198608398
    4. '(('' → logprob: -12.377569198608398
    5. '([' → logprob: -13.752569198608398
    6. '(("' → logprob: -14.002569198608398
    7. '(tuple' → logprob: -14.002569198608398
    8. ' (' → logprob: -14.877569198608398
    9. '(p' → logprob: -15.252569198608398
    10. '(
' → logprob: -15.502569198608398

Token 61: 'pattern' (ID: 29563)
  Prédit: 'pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.00023333763238042593
    2. ' pattern' → logprob: -8.50023365020752
    3. 'pr' → logprob: -11.00023365020752
    4. 'pat' → logprob: -12.12523365020752
    5. '   ' → logprob: -12.50023365020752
    6. 'p' → logprob: -12.75023365020752
    7. '(pattern' → logprob: -15.12523365020752
    8. ' ' → logprob: -15.75023365020752
    9. 'price' → logprob: -16.125232696533203
    10. '    ' → logprob: -16.375232696533203

Token 62: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' prize' (ID: 29528)
  Prédit: ' prize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prize' → logprob: -0.06312713027000427
    2. 'pr' → logprob: -2.813127040863037
    3. ' pr' → logprob: -6.938127040863037
    4. ')' → logprob: -10.063127517700195
    5. ' ' → logprob: -10.563127517700195
    6. ' priz' → logprob: -10.563127517700195
    7. '(pr' → logprob: -11.313127517700195
    8. ' )' → logprob: -11.625627517700195
    9. ' price' → logprob: -11.688127517700195
    10. ' prizes' → logprob: -11.750627517700195

Token 64: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47425419092178345
    2. ')' → logprob: -0.9742541909217834
    3. '))
' → logprob: -9.099254608154297
    4. ')
' → logprob: -10.099254608154297
    5. '   ' → logprob: -11.974254608154297
    6. ')))' → logprob: -12.349254608154297
    7. '),' → logprob: -12.474254608154297
    8. ' ))' → logprob: -12.849254608154297
    9. ',' → logprob: -13.224254608154297
    10. ' )' → logprob: -13.599254608154297

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14952051639556885
    2. '
' → logprob: -3.5245203971862793
    3. 'n' → logprob: -3.7745203971862793
    4. '    
' → logprob: -4.149520397186279
    5. 'results' → logprob: -4.274520397186279
    6. 'w' → logprob: -4.524520397186279
    7. 'result' → logprob: -4.774520397186279
    8. 's' → logprob: -4.774520397186279
    9. 'for' → logprob: -5.149520397186279
    10. '  
' → logprob: -5.774520397186279

Token 66: ' tickets' (ID: 17323)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.34591585397720337
    2. 're' → logprob: -2.4709157943725586
    3. 'w' → logprob: -3.3459157943725586
    4. 'result' → logprob: -3.7209157943725586
    5. 'total' → logprob: -3.7209157943725586
    6. 'scores' → logprob: -4.220915794372559
    7. 'counts' → logprob: -4.345915794372559
    8. 'pr' → logprob: -4.720915794372559
    9. 'm' → logprob: -4.845915794372559
    10. 'q' → logprob: -5.095915794372559

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005933417472988367
    2. '=' → logprob: -5.1309332847595215
    3. ' ' → logprob: -13.13093376159668
    4. ',' → logprob: -14.13093376159668
    5. '_' → logprob: -14.13093376159668
    6. '=[]' → logprob: -15.13093376159668
    7. '.' → logprob: -15.50593376159668
    8. '＝' → logprob: -15.75593376159668
    9. '    ' → logprob: -15.75593376159668
    10. '   ' → logprob: -15.75593376159668

Token 68: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.08726844936609268
    2. '[]' → logprob: -3.462268352508545
    3. ' [' → logprob: -3.712268352508545
    4. 'input' → logprob: -4.712268352508545
    5. '[' → logprob: -4.837268352508545
    6. ' []' → logprob: -5.462268352508545
    7. ' input' → logprob: -6.212268352508545
    8. '[int' → logprob: -6.337268352508545
    9. '[list' → logprob: -6.337268352508545
    10. 'list' → logprob: -7.962268352508545

Token 69: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01841447502374649
    2. ' input' → logprob: -4.018414497375488
    3. '   ' → logprob: -8.643414497375488
    4. 'int' → logprob: -9.643414497375488
    5. ' ' → logprob: -12.643414497375488
    6. '(input' → logprob: -12.643414497375488
    7. '<input' → logprob: -12.893414497375488
    8. 'list' → logprob: -13.143414497375488
    9. '[input' → logprob: -13.143414497375488
    10. '	input' → logprob: -13.393414497375488

Token 70: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011933216592296958
    2. '())' → logprob: -7.501193523406982
    3. '().' → logprob: -7.501193523406982
    4. '()]' → logprob: -9.376193046569824
    5. ' ()' → logprob: -13.376193046569824
    6. '()
' → logprob: -14.501193046569824
    7. '（）' → logprob: -15.126193046569824
    8. ')' → logprob: -15.251193046569824
    9. '()`' → logprob: -16.50119400024414
    10. '()}' → logprob: -16.87619400024414

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5987143516540527
    2. 'for' → logprob: -1.0987143516540527
    3. '()' → logprob: -2.7237143516540527
    4. '.strip' → logprob: -3.4737143516540527
    5. ')' → logprob: -3.9737143516540527
    6. '().' → logprob: -7.473714351654053
    7. '   ' → logprob: -7.723714351654053
    8. '	for' → logprob: -8.473714828491211
    9. 'strip' → logprob: -8.473714828491211
    10. '.rstrip' → logprob: -8.598714828491211

Token 72: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10513760149478912
    2. ' _' → logprob: -2.355137586593628
    3. '_' → logprob: -5.355137825012207
    4. 'range' → logprob: -8.855137825012207
    5. ' ' → logprob: -10.730137825012207
    6. '_range' → logprob: -10.730137825012207
    7. ' in' → logprob: -11.980137825012207
    8. ' i' → logprob: -13.355137825012207
    9. ' xrange' → logprob: -14.855137825012207
    10. ' rango' → logprob: -16.10513687133789

Token 73: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31568169593811035
    2. ' range' → logprob: -1.3156816959381104
    3. ' in' → logprob: -6.065681457519531
    4. 'in' → logprob: -9.565681457519531
    5. ' ' → logprob: -11.565681457519531
    6. '	range' → logprob: -12.190681457519531
    7. '(range' → logprob: -12.565681457519531
    8. '   ' → logprob: -13.065681457519531
    9. ' ran' → logprob: -13.440681457519531
    10. '  ' → logprob: -13.565681457519531

Token 74: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324722334742546
    2. ' range' → logprob: -3.773247241973877
    3. 'm' → logprob: -13.398246765136719
    4. '(range' → logprob: -16.39824676513672
    5. '	range' → logprob: -16.39824676513672
    6. ' ' → logprob: -18.39824676513672
    7. '   ' → logprob: -18.52324676513672
    8. 'rang' → logprob: -18.89824676513672
    9. 'r' → logprob: -19.39824676513672
    10. '  ' → logprob: -20.02324676513672

Token 75: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0005129986093379557
    2. 'm' → logprob: -8.375513076782227
    3. ' (' → logprob: -8.500513076782227
    4. '(' → logprob: -10.125513076782227
    5. ' m' → logprob: -10.250513076782227
    6. ')m' → logprob: -13.500513076782227
    7. '   ' → logprob: -13.625513076782227
    8. '	m' → logprob: -15.250513076782227
    9. ')' → logprob: -15.375513076782227
    10. ' ' → logprob: -16.125513076782227

Token 76: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007667447789572179
    2. ')' → logprob: -7.250766754150391
    3. ']' → logprob: -9.87576675415039
    4. ' )' → logprob: -12.50076675415039
    5. ')]
' → logprob: -14.87576675415039
    6. '   ' → logprob: -15.12576675415039
    7. ' ' → logprob: -15.50076675415039
    8. ')}' → logprob: -15.87576675415039
    9. '')]' → logprob: -15.87576675415039
    10. '))' → logprob: -16.37576675415039

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3291371464729309
    2. 'results' → logprob: -2.079137086868286
    3. 'total' → logprob: -2.329137086868286
    4. 'result' → logprob: -3.454137086868286
    5. '    
' → logprob: -5.079137325286865
    6. 'for' → logprob: -5.829137325286865
    7. 'scores' → logprob: -5.829137325286865
    8. 'points' → logprob: -6.704137325286865
    9. 'profits' → logprob: -6.704137325286865
    10. 'sum' → logprob: -6.829137325286865

Token 78: ' total' (ID: 3609)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.46293553709983826
    2. 'pr' → logprob: -1.5879355669021606
    3. 'for' → logprob: -3.337935447692871
    4. 're' → logprob: -3.337935447692871
    5. 'result' → logprob: -3.712935447692871
    6. 'total' (adapté à ' total') → logprob: -3.837935447692871
    7. 'earn' → logprob: -3.962935447692871
    8. 'w' → logprob: -4.087935447692871
    9. 'profits' → logprob: -5.712935447692871
    10. '   ' → logprob: -6.212935447692871

Token 79: '_pr' (ID: 18177)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04710972309112549
    2. '_pr' → logprob: -4.672109603881836
    3. '_amount' → logprob: -4.672109603881836
    4. '_points' → logprob: -5.047109603881836
    5. '_rewards' → logprob: -5.047109603881836
    6. '_money' → logprob: -5.922109603881836
    7. '_reward' → logprob: -6.047109603881836
    8. '_profit' → logprob: -6.047109603881836
    9. '_sum' → logprob: -6.672109603881836
    10. '_score' → logprob: -6.797109603881836

Token 80: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.031024061143398285
    2. 'izes' → logprob: -3.9060239791870117
    3. 'ze' → logprob: -5.281023979187012
    4. 'iz' → logprob: -7.156023979187012
    5. '   ' → logprob: -7.281023979187012
    6. '```' → logprob: -7.531023979187012
    7. '=' → logprob: -8.031023979187012
    8. '[' → logprob: -8.031023979187012
    9. 't' → logprob: -8.156023979187012
    10. '``' → logprob: -8.531023979187012

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16107188165187836
    2. '=' → logprob: -1.9110718965530396
    3. 's' → logprob: -7.16107177734375
    4. ' +=' → logprob: -10.16107177734375
    5. ' ' → logprob: -10.91107177734375
    6. '_' → logprob: -12.53607177734375
    7. 'd' → logprob: -12.66107177734375
    8. '  ' → logprob: -13.16107177734375
    9. '_sum' → logprob: -13.66107177734375
    10. ',' → logprob: -14.16107177734375

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804677724838257
    2. ' ' → logprob: -3.2880468368530273
    3. 'sum' → logprob: -13.038046836853027
    4. ' sum' → logprob: -13.663046836853027
    5. '   ' → logprob: -13.788046836853027
    6. ' ' → logprob: -15.038046836853027
    7. '  ' → logprob: -15.538046836853027
    8. '[' → logprob: -16.85054588317871
    9. ' [' → logprob: -17.10054588317871
    10. 's' → logprob: -17.28804588317871

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -11.250014305114746
    3. 'sum' → logprob: -14.000014305114746
    4. '   ' → logprob: -15.500014305114746
    5. '[]' → logprob: -16.250015258789062
    6. '[' → logprob: -16.250015258789062
    7. '{}' → logprob: -16.750015258789062
    8. '{' → logprob: -17.625015258789062
    9. '100' → logprob: -17.750015258789062
    10. '  ' → logprob: -18.750015258789062

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24603670835494995
    2. '
' → logprob: -1.7460367679595947
    3. 'for' → logprob: -3.6210367679595947
    4. ' for' → logprob: -4.621036529541016
    5. '<|end|>' → logprob: -5.371036529541016
    6. '    
' → logprob: -6.496036529541016
    7. '  ' → logprob: -8.871036529541016
    8. '  
' → logprob: -8.871036529541016
    9. '<|end|>' → logprob: -8.996036529541016
    10. '	for' → logprob: -9.121036529541016

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07198161631822586
    2. 'for' → logprob: -3.07198166847229
    3. '
' → logprob: -3.94698166847229
    4. ' for' → logprob: -5.696981430053711
    5. '    
' → logprob: -7.946981430053711
    6. '<|end|>' → logprob: -9.821981430053711
    7. '	for' → logprob: -10.946981430053711
    8. '```' → logprob: -11.321981430053711
    9. '<|end|>' → logprob: -12.696981430053711
    10. '  
' → logprob: -12.821981430053711

Token 86: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0017345597734674811
    2. '   ' → logprob: -6.501734733581543
    3. ' for' → logprob: -8.376734733581543
    4. '
' → logprob: -13.876734733581543
    5. '	for' → logprob: -14.876734733581543
    6. '```' → logprob: -15.001734733581543
    7. '  ' → logprob: -15.626734733581543
    8. ' ' → logprob: -16.001733779907227
    9. '    
' → logprob: -16.376733779907227
    10. 'def' → logprob: -18.376733779907227

Token 87: ' ticket' (ID: 16681)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.164072647690773
    2. ' ticket' → logprob: -2.4140727519989014
    3. 'pattern' → logprob: -3.5390727519989014
    4. ' w' → logprob: -4.789072513580322
    5. ' _' → logprob: -5.289072513580322
    6. ' t' → logprob: -5.414072513580322
    7. ' winner' → logprob: -5.539072513580322
    8. 'ticket' → logprob: -5.914072513580322
    9. ' i' → logprob: -6.289072513580322
    10. 't' → logprob: -6.789072513580322

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004863111302256584
    2. 'in' → logprob: -5.879863262176514
    3. ',' → logprob: -6.504863262176514
    4. ' ' → logprob: -7.754863262176514
    5. '_' → logprob: -9.879862785339355
    6. ' i' → logprob: -10.254862785339355
    7. ' ,' → logprob: -10.629862785339355
    8. 's' → logprob: -12.004862785339355
    9. '  ' → logprob: -12.379862785339355
    10. '_in' → logprob: -12.504862785339355

Token 89: ' tickets' (ID: 17323)
  Prédit: ' tickets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tickets' → logprob: -0.0890038013458252
    2. 'tickets' → logprob: -2.464003801345825
    3. ' ' → logprob: -10.339003562927246
    4. 't' → logprob: -11.214003562927246
    5. '	t' → logprob: -12.089003562927246
    6. ' winners' → logprob: -12.214003562927246
    7. ' t' → logprob: -13.589003562927246
    8. ' ticket' → logprob: -13.714003562927246
    9. ' ' → logprob: -13.839003562927246
    10. 'ickets' → logprob: -13.964003562927246

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006258221692405641
    2. ':
' → logprob: -7.5006256103515625
    3. '       ' → logprob: -10.750625610351562
    4. '<|end|>' → logprob: -11.000625610351562
    5. '):' → logprob: -11.375625610351562
    6. ',' → logprob: -11.625625610351562
    7. '   ' → logprob: -12.250625610351562
    8. '=' → logprob: -13.500625610351562
    9. '<|end|>' → logprob: -13.625625610351562
    10. ':**' → logprob: -13.625625610351562

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010951255448162556
    2. ' for' → logprob: -4.885951042175293
    3. ':' → logprob: -6.760951042175293
    4. 'for' → logprob: -6.885951042175293
    5. '   ' → logprob: -7.010951042175293
    6. 'found' → logprob: -9.260951042175293
    7. ' found' → logprob: -10.135951042175293
    8. ':
' → logprob: -10.385951042175293
    9. '```' → logprob: -11.010951042175293
    10. '    ' → logprob: -11.010951042175293

Token 92: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15344469249248505
    2. 'for' (adapté à ' for') → logprob: -2.278444766998291
    3. ' matched' → logprob: -3.778444766998291
    4. 'matched' → logprob: -4.528444766998291
    5. ' match' → logprob: -6.153444766998291
    6. 'match' → logprob: -6.528444766998291
    7. '   ' → logprob: -6.903444766998291
    8. 'found' → logprob: -7.528444766998291
    9. ' found' → logprob: -7.903444766998291
    10. '       ' → logprob: -7.903444766998291

Token 93: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.016584640368819237
    2. 'pattern' → logprob: -4.141584873199463
    3. ' (' → logprob: -7.641584873199463
    4. '(pattern' → logprob: -10.016584396362305
    5. ' winner' → logprob: -11.766584396362305
    6. ' ' → logprob: -12.391584396362305
    7. '(' → logprob: -12.766584396362305
    8. '_pattern' → logprob: -13.016584396362305
    9. ' w' → logprob: -13.391584396362305
    10. '    ' → logprob: -13.641584396362305

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7146746763028204e-05
    2. ' ,' → logprob: -10.50003719329834
    3. ' in' → logprob: -12.62503719329834
    4. ',p' → logprob: -13.25003719329834
    5. '<|end|>' → logprob: -13.62503719329834
    6. 's' → logprob: -14.25003719329834
    7. '_,' → logprob: -14.50003719329834
    8. ' ' → logprob: -14.87503719329834
    9. '_pattern' → logprob: -15.37503719329834
    10. ',_' → logprob: -15.62503719329834

Token 95: ' prize' (ID: 29528)
  Prédit: ' prize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prize' → logprob: -0.02656651847064495
    2. 'pr' → logprob: -3.651566505432129
    3. ' pr' → logprob: -8.526566505432129
    4. ' price' → logprob: -11.276566505432129
    5. '_pr' → logprob: -11.401566505432129
    6. '	pr' → logprob: -11.901566505432129
    7. ' ' → logprob: -11.901566505432129
    8. 'Prize' → logprob: -11.901566505432129
    9. ' priz' → logprob: -11.901566505432129
    10. 'price' → logprob: -12.901566505432129

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00155223673209548
    2. 'in' → logprob: -6.751552104949951
    3. ':' → logprob: -9.12655258178711
    4. '   ' → logprob: -9.50155258178711
    5. '       ' → logprob: -10.12655258178711
    6. ' ' → logprob: -10.25155258178711
    7. ',' → logprob: -10.37655258178711
    8. '        ' → logprob: -10.75155258178711
    9. '    ' → logprob: -11.12655258178711
    10. '  ' → logprob: -11.25155258178711

Token 97: ' winners' (ID: 34698)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07006436586380005
    2. ' winners' → logprob: -2.6950643062591553
    3. ' w' → logprob: -9.820064544677734
    4. '	w' → logprob: -9.945064544677734
    5. 'winner' → logprob: -11.570064544677734
    6. '_w' → logprob: -12.445064544677734
    7. '<w' → logprob: -12.570064544677734
    8. ' ' → logprob: -13.195064544677734
    9. ' winnings' → logprob: -13.320064544677734
    10. '>w' → logprob: -13.445064544677734

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11314970999956131
    2. ':
' → logprob: -2.238149642944336
    3. '       ' → logprob: -8.613149642944336
    4. '           ' → logprob: -9.613149642944336
    5. '):
' → logprob: -10.613149642944336
    6. ':

' → logprob: -11.113149642944336
    7. '():
' → logprob: -11.738149642944336
    8. '   ' → logprob: -12.238149642944336
    9. ':
' → logprob: -12.488149642944336
    10. ' if' → logprob: -12.488149642944336

Token 99: '           ' (ID: 352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' match' (ID: 3981)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25968751311302185
    2. '               ' → logprob: -1.8846875429153442
    3. '           ' → logprob: -3.1346874237060547
    4. ' ' → logprob: -3.8846874237060547
    5. '       ' → logprob: -5.634687423706055
    6. 'if' → logprob: -6.259687423706055
    7. '            ' → logprob: -6.259687423706055
    8. ' 
' → logprob: -6.384687423706055
    9. ':' → logprob: -7.009687423706055
    10. '                
' → logprob: -7.759687423706055

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6497927904129028
    2. '=' → logprob: -1.2747927904129028
    3. ' ticket' → logprob: -2.8997926712036133
    4. ' ' → logprob: -3.0247926712036133
    5. ':' → logprob: -4.024792671203613
    6. 'es' → logprob: -4.399792671203613
    7. '   ' → logprob: -4.524792671203613
    8. ' if' → logprob: -4.524792671203613
    9. '(ticket' → logprob: -4.899792671203613
    10. 'er' → logprob: -4.899792671203613

Token 102: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3359922468662262
    2. ' True' → logprob: -1.4609922170639038
    3. 'all' → logprob: -3.7109923362731934
    4. ' all' → logprob: -4.460992336273193
    5. 'False' → logprob: -4.710992336273193
    6. 'len' → logprob: -5.210992336273193
    7. ' False' → logprob: -7.085992336273193
    8. '(True' → logprob: -7.585992336273193
    9. ' len' → logprob: -7.835992336273193
    10. 're' → logprob: -8.210991859436035

Token 103: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005220544408075511
    2. '<|end|>' → logprob: -8.250521659851074
    3. '            
' → logprob: -8.625521659851074
    4. '
' → logprob: -9.875521659851074
    5. '            ' → logprob: -12.125521659851074
    6. '<|end|>' → logprob: -12.500521659851074
    7. ' 
' → logprob: -12.750521659851074
    8. '          ' → logprob: -12.875521659851074
    9. '           
' → logprob: -13.000521659851074
    10. '               ' → logprob: -13.250521659851074

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014803402591496706
    2. '
' → logprob: -7.5014801025390625
    3. '<|end|>' → logprob: -7.7514801025390625
    4. ' for' → logprob: -8.251480102539062
    5. '            
' → logprob: -8.751480102539062
    6. 'for' → logprob: -10.751480102539062
    7. ' 
' → logprob: -11.126480102539062
    8. '<|end|>' → logprob: -11.626480102539062
    9. '            ' → logprob: -11.876480102539062
    10. '		' → logprob: -12.626480102539062

Token 105: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8579875230789185
    2. ' for' → logprob: -0.9829875230789185
    3. 'for' (adapté à ' for') → logprob: -1.6079875230789185
    4. ' if' → logprob: -7.232987403869629
    5. 'if' → logprob: -7.732987403869629
    6. '	for' → logprob: -8.732987403869629
    7. '   ' → logprob: -9.482987403869629
    8. '       ' → logprob: -10.107987403869629
    9. '	       ' → logprob: -10.982987403869629
    10. '		' → logprob: -11.107987403869629

Token 106: ' i' (ID: 575)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010596273466944695
    2. 'in' → logprob: -4.63559627532959
    3. ' ' → logprob: -7.51059627532959
    4. ',' → logprob: -8.76059627532959
    5. '  ' → logprob: -10.01059627532959
    6. '	in' → logprob: -11.01059627532959
    7. 'n' → logprob: -11.38559627532959
    8. '           ' → logprob: -11.51059627532959
    9. '<|end|>' → logprob: -11.51059627532959
    10. '        ' → logprob: -12.01059627532959

Token 108: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324594371020794
    2. ' range' → logprob: -3.7732460498809814
    3. '	range' → logprob: -15.023245811462402
    4. ' ' → logprob: -15.898245811462402
    5. '(range' → logprob: -17.64824676513672
    6. '   ' → logprob: -17.64824676513672
    7. '  ' → logprob: -17.89824676513672
    8. 'rang' → logprob: -19.39824676513672
    9. ' xrange' → logprob: -19.39824676513672
    10. '_range' → logprob: -19.52324676513672

Token 109: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0015126005746424198
    2. ' len' → logprob: -6.75151252746582
    3. 'len' → logprob: -8.00151252746582
    4. '	len' → logprob: -12.75151252746582
    5. '(' → logprob: -13.37651252746582
    6. '<len' → logprob: -14.00151252746582
    7. ' (' → logprob: -14.25151252746582
    8. ',len' → logprob: -14.25151252746582
    9. '[len' → logprob: -14.37651252746582
    10. '=len' → logprob: -16.25151252746582

Token 110: '8' (ID: 23)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006262339185923338
    2. ' len' → logprob: -5.506262302398682
    3. '6' → logprob: -6.256262302398682
    4. '7' → logprob: -8.63126277923584
    5. '8' → logprob: -10.63126277923584
    6. '5' → logprob: -10.88126277923584
    7. '   ' → logprob: -11.00626277923584
    8. '10' → logprob: -11.50626277923584
    9. '9' → logprob: -12.13126277923584
    10. 'l' → logprob: -12.50626277923584

Token 111: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5246677994728088
    2. '):
' → logprob: -0.8996677994728088
    3. '):
' → logprob: -6.774667739868164
    4. ')' → logprob: -9.149667739868164
    5. '       ' → logprob: -9.274667739868164
    6. ':' → logprob: -9.399667739868164
    7. '):

' → logprob: -9.774667739868164
    8. '           ' → logprob: -10.524667739868164
    9. '   ' → logprob: -11.024667739868164
    10. '               ' → logprob: -12.274667739868164

Token 112: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005717247258871794
    2. ' if' → logprob: -5.6307172775268555
    3. '<|end|>' → logprob: -6.3807172775268555
    4. 'if' → logprob: -8.630717277526855
    5. '           ' → logprob: -9.755717277526855
    6. '              ' → logprob: -10.255717277526855
    7. '                
' → logprob: -10.380717277526855
    8. ':' → logprob: -10.755717277526855
    9. '                ' → logprob: -11.005717277526855
    10. ',' → logprob: -11.005717277526855

Token 113: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.419664204120636
    2. '               ' → logprob: -1.4196641445159912
    3. 'if' (adapté à ' if') → logprob: -2.294664144515991
    4. '           ' → logprob: -10.04466438293457
    5. '<|end|>' → logprob: -10.29466438293457
    6. '                ' → logprob: -10.79466438293457
    7. ' ' → logprob: -11.16966438293457
    8. '            ' → logprob: -12.04466438293457
    9. '                   ' → logprob: -12.54466438293457
    10. '   ' → logprob: -12.54466438293457

Token 114: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.523613691329956
    2. 'pattern' → logprob: -0.898613691329956
    3. '(pattern' → logprob: -8.773613929748535
    4. '               ' → logprob: -9.148613929748535
    5. '   ' → logprob: -9.648613929748535
    6. '                   ' → logprob: -10.023613929748535
    7. ' not' → logprob: -10.398613929748535
    8. 'not' → logprob: -11.023613929748535
    9. '           ' → logprob: -11.273613929748535
    10. 'pat' → logprob: -11.398613929748535

Token 115: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.375006675720215
    3. 'i' → logprob: -13.625006675720215
    4. ' [' → logprob: -15.125006675720215
    5. ' ' → logprob: -15.750006675720215
    6. '```' → logprob: -16.0000057220459
    7. ' i' → logprob: -16.5000057220459
    8. '!=' → logprob: -16.7500057220459
    9. '   ' → logprob: -16.7500057220459
    10. 'and' → logprob: -17.0000057220459

Token 116: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.02821483090519905
    2. ' !=' → logprob: -4.153214931488037
    3. ']!=' → logprob: -4.778214931488037
    4. ']' → logprob: -5.778214931488037
    5. '!='' → logprob: -8.403214454650879
    6. ']!='' → logprob: -9.028214454650879
    7. 'is' → logprob: -9.403214454650879
    8. '==' → logprob: -9.528214454650879
    9. ' not' → logprob: -10.653214454650879
    10. 'not' → logprob: -10.778214454650879

Token 117: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.002894975244998932
    2. ' !=' → logprob: -5.877894878387451
    3. '==' → logprob: -10.00289535522461
    4. '!='' → logprob: -10.62789535522461
    5. 'is' → logprob: -11.00289535522461
    6. ']!=' → logprob: -13.75289535522461
    7. '()!=' → logprob: -14.37789535522461
    8. '!==' → logprob: -14.37789535522461
    9. 'not' → logprob: -14.62789535522461
    10. '=' → logprob: -15.37789535522461

Token 118: ' '*'' (ID: 89603)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.5638214349746704
    2. '?' → logprob: -2.063821315765381
    3. '*' → logprob: -2.563821315765381
    4. ''' → logprob: -2.563821315765381
    5. '#' → logprob: -3.063821315765381
    6. ''#' → logprob: -3.438821315765381
    7. ''x' → logprob: -4.063821315765381
    8. ' '*'' → logprob: -4.313821315765381
    9. 'x' → logprob: -4.438821315765381
    10. ''?' → logprob: -4.938821315765381

Token 119: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22545172274112701
    2. 'and' → logprob: -1.6004517078399658
    3. ' ' → logprob: -10.725451469421387
    4. '           ' → logprob: -12.600451469421387
    5. '               ' → logprob: -12.600451469421387
    6. ')' → logprob: -13.100451469421387
    7. '          ' → logprob: -13.975451469421387
    8. '	and' → logprob: -13.975451469421387
    9. '       ' → logprob: -14.225451469421387
    10. '                   ' → logprob: -14.225451469421387

Token 120: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.6331138014793396
    2. ' pattern' → logprob: -0.7581138014793396
    3. ' ticket' → logprob: -8.133113861083984
    4. 'ticket' → logprob: -8.633113861083984
    5. '   ' → logprob: -10.633113861083984
    6. ' ' → logprob: -12.258113861083984
    7. 'pat' → logprob: -12.508113861083984
    8. '  ' → logprob: -13.570613861083984
    9. '    ' → logprob: -13.695613861083984
    10. '(pattern' → logprob: -13.695613861083984

Token 121: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.811348480870947e-05
    2. '[' → logprob: -10.50004768371582
    3. '<|end|>' → logprob: -11.50004768371582
    4. '[user' → logprob: -12.25004768371582
    5. 'user' → logprob: -13.62504768371582
    6. '```' → logprob: -13.87504768371582
    7. '[
' → logprob: -14.00004768371582
    8. ']' → logprob: -14.62504768371582
    9. ')' → logprob: -14.62504768371582
    10. ' [' → logprob: -15.37504768371582

Token 122: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.7399308681488037
    2. ' !=' → logprob: -0.8649308681488037
    3. ']' → logprob: -2.4899308681488037
    4. ']!=' → logprob: -4.114931106567383
    5. ')' → logprob: -7.114931106567383
    6. ')!=' → logprob: -7.614931106567383
    7. '<|end|>' → logprob: -7.739931106567383
    8. '']' → logprob: -8.239931106567383
    9. ' ]' → logprob: -9.239931106567383
    10. '[i' → logprob: -9.739931106567383

Token 123: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2261192351579666
    2. ' !=' → logprob: -1.6011192798614502
    3. ']!=' → logprob: -8.351119041442871
    4. ')!=' → logprob: -8.976119041442871
    5. ')' → logprob: -9.601119041442871
    6. '()!=' → logprob: -9.976119041442871
    7. '[i' → logprob: -10.476119041442871
    8. '[' → logprob: -10.476119041442871
    9. '               ' → logprob: -10.476119041442871
    10. '           ' → logprob: -10.601119041442871

Token 124: ' ticket' (ID: 16681)
  Prédit: ' ticket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ticket' → logprob: -0.4741065204143524
    2. 'ticket' → logprob: -0.9741065502166748
    3. '(ticket' → logprob: -11.349106788635254
    4. ' ' → logprob: -11.849106788635254
    5. '   ' → logprob: -12.474106788635254
    6. '.ticket' → logprob: -13.099106788635254
    7. 't' → logprob: -13.849106788635254
    8. ''t' → logprob: -14.224106788635254
    9. 'token' → logprob: -14.349106788635254
    10. '_ticket' → logprob: -14.849106788635254

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.625003814697266
    3. '[
' → logprob: -15.625003814697266
    4. '```' → logprob: -15.875003814697266
    5. 'i' → logprob: -17.250003814697266
    6. ' ' → logprob: -17.875003814697266
    7. ' [' → logprob: -18.000003814697266
    8. ''s' → logprob: -18.375003814697266
    9. '[I' → logprob: -18.625003814697266
    10. '   ' → logprob: -18.750003814697266

Token 126: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20430848002433777
    2. ':
' → logprob: -1.8293085098266602
    3. '):
' → logprob: -4.45430850982666
    4. '):' → logprob: -5.57930850982666
    5. ']:
' → logprob: -5.70430850982666
    6. ']:' → logprob: -5.95430850982666
    7. '           ' → logprob: -6.82930850982666
    8. '               ' → logprob: -7.20430850982666
    9. '       ' → logprob: -8.20430850982666
    10. ' and' → logprob: -8.57930850982666

Token 127: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1727062463760376
    2. '                   ' → logprob: -2.547706127166748
    3. ':' → logprob: -2.922706127166748
    4. ':
' → logprob: -3.672706127166748
    5. '                       ' → logprob: -7.297706127166748
    6. '                ' → logprob: -8.922706604003906
    7. '           ' → logprob: -9.047706604003906
    8. '                           ' → logprob: -10.422706604003906
    9. '                               ' → logprob: -10.547706604003906
    10. '):
' → logprob: -10.672706604003906

Token 128: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' (adapté à ' match') → logprob: -0.018135666847229004
    2. ' match' → logprob: -4.7681355476379395
    3. '               ' → logprob: -5.2681355476379395
    4. '                   ' → logprob: -5.5181355476379395
    5. '                       ' → logprob: -8.393136024475098
    6. 'break' → logprob: -10.393136024475098
    7. '   ' → logprob: -10.768136024475098
    8. '           ' → logprob: -10.893136024475098
    9. ' ' → logprob: -12.643136024475098
    10. '	match' → logprob: -12.768136024475098

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1270308941602707
    2. ' =' → logprob: -2.127030849456787
    3. '=False' → logprob: -10.377031326293945
    4. '               ' → logprob: -10.502031326293945
    5. '                   ' → logprob: -10.502031326293945
    6. '=True' → logprob: -11.502031326293945
    7. '                       ' → logprob: -12.752031326293945
    8. '           ' → logprob: -14.252031326293945
    9. '==' → logprob: -14.377031326293945
    10. '                           ' → logprob: -14.627031326293945

Token 130: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.023245595395565033
    2. ' False' → logprob: -3.7732455730438232
    3. '   ' → logprob: -16.773244857788086
    4. '=False' → logprob: -17.273244857788086
    5. 'false' → logprob: -17.273244857788086
    6. '(False' → logprob: -17.273244857788086
    7. '_false' → logprob: -19.273244857788086
    8. ' false' → logprob: -20.523244857788086
    9. 'break' → logprob: -20.523244857788086
    10. '.False' → logprob: -20.648244857788086

Token 131: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00022046364028938115
    2. '               ' → logprob: -8.87522029876709
    3. '                       ' → logprob: -10.00022029876709
    4. '           ' → logprob: -11.12522029876709
    5. '       ' → logprob: -12.12522029876709
    6. '				' → logprob: -12.75022029876709
    7. '                    
' → logprob: -12.75022029876709
    8. '                  ' → logprob: -12.87522029876709
    9. '                    ' → logprob: -13.62522029876709
    10. '   ' → logprob: -13.62522029876709

Token 132: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00012190054985694587
    2. '               ' → logprob: -9.3751220703125
    3. '                       ' → logprob: -11.1251220703125
    4. '           ' → logprob: -11.2501220703125
    5. '       ' → logprob: -13.1251220703125
    6. '                  ' → logprob: -13.7501220703125
    7. '				' → logprob: -13.7501220703125
    8. '		           ' → logprob: -13.8751220703125
    9. '                    
' → logprob: -13.8751220703125
    10. '   ' → logprob: -14.3751220703125

Token 133: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3387196362018585
    2. '                   ' → logprob: -1.8387196063995361
    3. ' break' → logprob: -2.088719606399536
    4. '               ' → logprob: -5.463719844818115
    5. '	break' → logprob: -9.463719367980957
    6. '                       ' → logprob: -9.588719367980957
    7. '           ' → logprob: -9.838719367980957
    8. '   ' → logprob: -12.088719367980957
    9. '       ' → logprob: -13.213719367980957
    10. '                  ' → logprob: -13.963719367980957

Token 134: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009289718000218272
    2. '       ' → logprob: -7.87592887878418
    3. '
' → logprob: -8.00092887878418
    4. '            
' → logprob: -9.37592887878418
    5. '    
' → logprob: -10.62592887878418
    6. '        
' → logprob: -11.00092887878418
    7. '          ' → logprob: -11.12592887878418
    8. '		' → logprob: -11.37592887878418
    9. 'if' → logprob: -11.62592887878418
    10. ' 
' → logprob: -11.75092887878418

Token 135: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001669485354796052
    2. '       ' → logprob: -9.375166893005371
    3. '            
' → logprob: -10.375166893005371
    4. '
' → logprob: -11.375166893005371
    5. '          ' → logprob: -11.750166893005371
    6. 'if' → logprob: -12.375166893005371
    7. '    
' → logprob: -12.500166893005371
    8. '		' → logprob: -12.625166893005371
    9. '        
' → logprob: -12.750166893005371
    10. '            ' → logprob: -12.750166893005371

Token 136: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23099082708358765
    2. '       ' → logprob: -2.4809908866882324
    3. 'if' (adapté à ' if') → logprob: -2.4809908866882324
    4. ' if' → logprob: -3.4809908866882324
    5. '   ' → logprob: -4.855990886688232
    6. '    ' → logprob: -9.105990409851074
    7. ' ' → logprob: -9.605990409851074
    8. '    
' → logprob: -10.230990409851074
    9. '            
' → logprob: -10.980990409851074
    10. ' 
' → logprob: -11.105990409851074

Token 137: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.07890994846820831
    2. 'match' → logprob: -2.5789098739624023
    3. '           ' → logprob: -11.453909873962402
    4. '            ' → logprob: -12.578909873962402
    5. '    ' → logprob: -13.578909873962402
    6. '	match' → logprob: -13.703909873962402
    7. ' ' → logprob: -13.828909873962402
    8. ' not' → logprob: -13.953909873962402
    9. '(match' → logprob: -14.453909873962402
    10. '   ' → logprob: -14.578909873962402

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1603614240884781
    2. ':
' → logprob: -1.910361409187317
    3. '               ' → logprob: -9.160361289978027
    4. '           ' → logprob: -11.035361289978027
    5. ':

' → logprob: -11.535361289978027
    6. ':
' → logprob: -13.660361289978027
    7. '=' → logprob: -13.785361289978027
    8. '                   ' → logprob: -14.035361289978027
    9. '):
' → logprob: -14.285361289978027
    10. '       ' → logprob: -14.535361289978027

Token 139: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01442650705575943
    2. ' total' → logprob: -4.3894267082214355
    3. 'total' → logprob: -6.3894267082214355
    4. '
' → logprob: -8.889426231384277
    5. '(total' → logprob: -10.639426231384277
    6. ':
' → logprob: -10.889426231384277
    7. '   ' → logprob: -11.389426231384277
    8. ',total' → logprob: -11.639426231384277
    9. '                   ' → logprob: -11.764426231384277
    10. '                
' → logprob: -12.014426231384277

Token 140: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.4579177498817444
    2. '               ' → logprob: -1.3329176902770996
    3. 'total' (adapté à ' total') → logprob: -2.3329176902770996
    4. '                   ' → logprob: -5.3329176902771
    5. '   ' → logprob: -6.7079176902771
    6. '           ' → logprob: -8.707918167114258
    7. ' ' → logprob: -9.082918167114258
    8. '
' → logprob: -9.332918167114258
    9. '       ' → logprob: -9.332918167114258
    10. '                       ' → logprob: -9.832918167114258

Token 141: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -6.869017852295656e-06
    2. '_' → logprob: -12.125006675720215
    3. '_price' → logprob: -14.875006675720215
    4. '_p' → logprob: -15.500006675720215
    5. '_bonus' → logprob: -15.875006675720215
    6. '_total' → logprob: -16.25000762939453
    7. '_aw' → logprob: -16.37500762939453
    8. 'Prize' → logprob: -16.37500762939453
    9. '_Pr' → logprob: -16.50000762939453
    10. ' _' → logprob: -16.62500762939453

Token 142: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -8.363617962459102e-05
    2. 'ze' → logprob: -10.750083923339844
    3. '   ' → logprob: -11.750083923339844
    4. 't' → logprob: -11.875083923339844
    5. '_' → logprob: -12.500083923339844
    6. 'e' → logprob: -12.500083923339844
    7. ' ' → logprob: -12.875083923339844
    8. '=' → logprob: -13.000083923339844
    9. 'ise' → logprob: -13.000083923339844
    10. 'Prize' → logprob: -13.000083923339844

Token 143: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759422779083252
    2. ' +=' → logprob: -0.8259422779083252
    3. ']+=' → logprob: -13.450942039489746
    4. '+' → logprob: -14.450942039489746
    5. '=' → logprob: -14.575942039489746
    6. '```' → logprob: -15.325942039489746
    7. '   ' → logprob: -16.700942993164062
    8. '	' → logprob: -17.700942993164062
    9. ' ' → logprob: -17.825942993164062
    10. ')' → logprob: -17.825942993164062

Token 144: ' prize' (ID: 29528)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.06994710117578506
    2. ' prize' → logprob: -2.6949470043182373
    3. ' pr' → logprob: -11.944947242736816
    4. 'price' → logprob: -12.944947242736816
    5. '(pr' → logprob: -14.569947242736816
    6. 'Prize' → logprob: -14.819947242736816
    7. '	pr' → logprob: -15.069947242736816
    8. '   ' → logprob: -15.569947242736816
    9. ' priz' → logprob: -15.819947242736816
    10. ' ' → logprob: -15.819947242736816

Token 145: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021884620189666748
    2. '               ' → logprob: -4.021884441375732
    3. 'print' → logprob: -6.396884441375732
    4. '
' → logprob: -6.646884441375732
    5. '    
' → logprob: -7.771884441375732
    6. '       ' → logprob: -9.02188491821289
    7. '           ' → logprob: -9.77188491821289
    8. '                
' → logprob: -9.77188491821289
    9. ' print' → logprob: -10.77188491821289
    10. '                   ' → logprob: -11.02188491821289

Token 146: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006204646546393633
    2. 'print' → logprob: -5.631204605102539
    3. '
' → logprob: -6.256204605102539
    4. '               ' → logprob: -7.756204605102539
    5. '    
' → logprob: -8.881204605102539
    6. '       ' → logprob: -10.131204605102539
    7. '           ' → logprob: -10.256204605102539
    8. '```' → logprob: -11.256204605102539
    9. ' print' → logprob: -11.631204605102539
    10. '                
' → logprob: -12.756204605102539

Token 147: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.616097629070282
    2. ' break' → logprob: -0.866097629070282
    3. '               ' → logprob: -3.2410976886749268
    4. '           ' → logprob: -8.616097450256348
    5. '   ' → logprob: -10.991097450256348
    6. '       ' → logprob: -11.116097450256348
    7. '	break' → logprob: -11.491097450256348
    8. '```' → logprob: -11.616097450256348
    9. '                   ' → logprob: -12.366097450256348
    10. '              ' → logprob: -13.116097450256348

Token 148: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13024117052555084
    2. 'print' → logprob: -2.1302411556243896
    3. '
' → logprob: -6.005241394042969
    4. '    
' → logprob: -7.255241394042969
    5. ' print' → logprob: -9.505241394042969
    6. '<|end|>' → logprob: -10.380241394042969
    7. '  
' → logprob: -11.505241394042969
    8. '       ' → logprob: -12.255241394042969
    9. '        
' → logprob: -12.630241394042969
    10. '```' → logprob: -12.755241394042969

Token 149: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16030800342559814
    2. '   ' → logprob: -1.9103080034255981
    3. ' print' → logprob: -9.410307884216309
    4. '    
' → logprob: -13.910307884216309
    5. '```' → logprob: -14.785307884216309
    6. '#print' → logprob: -15.910307884216309
    7. '
' → logprob: -16.035308837890625
    8. '	print' → logprob: -16.410308837890625
    9. '(print' → logprob: -16.535308837890625
    10. '#' → logprob: -16.910308837890625

Token 150: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -14.750000953674316
    3. ' print' → logprob: -15.250000953674316
    4. '```' → logprob: -21.75
    5. '	print' → logprob: -24.125
    6. '    
' → logprob: -24.375
    7. '#print' → logprob: -24.625
    8. 'printf' → logprob: -24.75
    9. '
' → logprob: -24.75
    10. '`' → logprob: -26.5

Token 151: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20203281939029694
    2. '(total' → logprob: -1.7020328044891357
    3. '(f' → logprob: -8.077033042907715
    4. '('' → logprob: -8.577033042907715
    5. '("("' → logprob: -9.702033042907715
    6. '()' → logprob: -10.077033042907715
    7. '("' → logprob: -11.702033042907715
    8. '(t' → logprob: -12.952033042907715
    9. 'total' → logprob: -13.327033042907715
    10. '(`' → logprob: -13.952033042907715

Token 152: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -9.610702363715973e-06
    2. '_total' → logprob: -13.250009536743164
    3. 'Prize' → logprob: -13.625009536743164
    4. '_p' → logprob: -13.625009536743164
    5. '_' → logprob: -13.750009536743164
    6. '_price' → logprob: -13.750009536743164
    7. ')_' → logprob: -13.875009536743164
    8. '_Pr' → logprob: -14.000009536743164
    9. ')' → logprob: -14.625009536743164
    10. ''_' → logprob: -15.125009536743164

Token 153: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.001192371710203588
    2. '_' → logprob: -7.376192569732666
    3. 'ze' → logprob: -7.751192569732666
    4. 't' → logprob: -10.001192092895508
    5. 'e' → logprob: -10.501192092895508
    6. 'i' → logprob: -11.626192092895508
    7. '_total' → logprob: -12.376192092895508
    8. '   ' → logprob: -12.626192092895508
    9. '_pr' → logprob: -12.751192092895508
    10. '(' → logprob: -12.876192092895508

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -15.000000953674316
    4. ')`' → logprob: -15.125000953674316
    5. '()' → logprob: -17.000001907348633
    6. '`)' → logprob: -17.125001907348633
    7. '())' → logprob: -17.125001907348633
    8. '))' → logprob: -17.625001907348633
    9. '')' → logprob: -18.375001907348633
    10. ')}' → logprob: -19.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 152
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 80
Tokens correctement prédits (top 10): 135
Précision stricte (1ère position): 48.68%
Précision adaptée (1ère position): 52.63%
Précision (top 10): 88.82%
================================================================================
