================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import gcd

s = input()

if '(' not in s:
    # 有限小数の処理
    if '.' not in s:
        # 整数のみ
        num = int(s)
        den = 1
    else:
        integer_part, decimal_part = s.split('.')
        numerator = int(integer_part + decimal_part)
        denominator = 10 ** len(decimal_part)
        g = gcd(numerator, denominator)
        numerator //= g
        denominator //= g
        num = numerator
        den = denominator
else:
    # 循環小数の処理
    integer_part, rest = s.split('.')
    non_repeating_part = ''
    repeating_part = ''
    idx_start = rest.find('(')
    non_repeating_part = rest[:idx_start]
    repeating_part = rest[idx_start+1:-1]

    # 公式による分数化
    a = int(integer_part) if integer_part else 0
    b = non_repeating_part
    c = repeating_part

    if b == '':
        b = '0'
    n = len(b)
    k = len(c)

    # 分子 = a*(10^(n+k) - 10^n) + b*(10^k -1) + c
    numerator = a * (10**(n+k) - 10**n) + int(b)*(10**k -1) + int(c)
    denominator = (10**(n+k) - 10**n)

    g = gcd(numerator, denominator)
    num = numerator // g
    den = denominator // g

print(str(num) + '/' + str(den))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' gcd' (ID: 106918)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.2745301127433777
    2. ' sqrt' → logprob: -1.5245301723480225
    3. 'pow' → logprob: -4.774529933929443
    4. 'sin' → logprob: -5.024529933929443
    5. ' pi' → logprob: -5.899529933929443
    6. 'pi' → logprob: -6.274529933929443
    7. ' sin' → logprob: -7.024529933929443
    8. 'ceil' → logprob: -7.899529933929443
    9. 'import' → logprob: -8.274530410766602
    10. ' ceil' → logprob: -8.399530410766602

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004503584932535887
    2. '\(' → logprob: -5.7545037269592285
    3. '\n' → logprob: -7.5045037269592285
    4. '(
' → logprob: -7.7545037269592285
    5. '\' → logprob: -8.87950325012207
    6. ',' → logprob: -10.00450325012207
    7. ' (' → logprob: -10.00450325012207
    8. 'a' → logprob: -10.37950325012207
    9. 'def' → logprob: -10.75450325012207
    10. '```' → logprob: -11.00450325012207

Token 5: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008724601939320564
    2. '(
' → logprob: -4.883724689483643
    3. '\(' → logprob: -7.258724689483643
    4. '\n' → logprob: -9.383724212646484
    5. 'def' → logprob: -9.633724212646484
    6. '```' → logprob: -9.758724212646484
    7. 'a' → logprob: -10.508724212646484
    8. '\' → logprob: -10.508724212646484
    9. ',' → logprob: -10.508724212646484
    10. '
' → logprob: -10.508724212646484

Token 6: ' =' (ID: 314)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.8160818219184875
    2. 'e' → logprob: -1.0660817623138428
    3. '=' → logprob: -2.1910817623138428
    4. 'u' → logprob: -3.1910817623138428
    5. ')' → logprob: -4.191082000732422
    6. 'tr' → logprob: -4.566082000732422
    7. 't' → logprob: -4.566082000732422
    8. '(' → logprob: -5.316082000732422
    9. 'um' → logprob: -5.316082000732422
    10. ':' → logprob: -5.441082000732422

Token 7: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5046277642250061
    2. '"' → logprob: -2.2546277046203613
    3. '0' → logprob: -2.2546277046203613
    4. ' "' → logprob: -2.5046277046203613
    5. '1' → logprob: -3.5046277046203613
    6. ''' → logprob: -4.254627704620361
    7. ' s' → logprob: -4.629627704620361
    8. ' '' → logprob: -4.754627704620361
    9. 's' → logprob: -4.879627704620361
    10. ' input' → logprob: -5.004627704620361

Token 8: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003374886582605541
    2. '(
' → logprob: -9.000337600708008
    3. ')' → logprob: -10.125337600708008
    4. '('' → logprob: -10.375337600708008
    5. '()' → logprob: -10.625337600708008
    6. '(

' → logprob: -10.625337600708008
    7. '```' → logprob: -10.750337600708008
    8. '("("' → logprob: -11.000337600708008
    9. ' (' → logprob: -11.125337600708008
    10. '`' → logprob: -11.250337600708008

Token 9: 'if' (ID: 366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24251261353492737
    2. 'n' → logprob: -2.6175127029418945
    3. '_' → logprob: -3.1175127029418945
    4. 'g' → logprob: -3.9925127029418945
    5. ',' → logprob: -4.1175127029418945
    6. '=' → logprob: -4.3675127029418945
    7. 'num' → logprob: -4.4925127029418945
    8. 'if' → logprob: -4.9925127029418945
    9. 'a' → logprob: -5.1175127029418945
    10. 'for' → logprob: -5.6175127029418945

Token 10: ' '('' (ID: 87284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008765483275055885
    2. ' s' → logprob: -5.383765697479248
    3. 's' → logprob: -5.633765697479248
    4. ' not' → logprob: -8.38376522064209
    5. '  ' → logprob: -8.63376522064209
    6. ''' → logprob: -9.88376522064209
    7. ' ' → logprob: -10.13376522064209
    8. ' len' → logprob: -10.38376522064209
    9. ' gcd' → logprob: -11.50876522064209
    10. '"' → logprob: -11.88376522064209

Token 11: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0851115733385086
    2. ' ==' → logprob: -3.210111618041992
    3. ')' → logprob: -3.960111618041992
    4. '==' → logprob: -4.585111618041992
    5. ' not' → logprob: -5.210111618041992
    6. 'in' → logprob: -5.835111618041992
    7. '[' → logprob: -6.960111618041992
    8. ':' → logprob: -7.835111618041992
    9. ' )' → logprob: -7.835111618041992
    10. '=' → logprob: -8.085111618041992

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18361184000968933
    2. ' s' → logprob: -1.9336118698120117
    3. 's' → logprob: -4.183611869812012
    4. 'in' → logprob: -5.558611869812012
    5. ' ' → logprob: -6.308611869812012
    6. ')' → logprob: -6.433611869812012
    7. ' '' → logprob: -8.433611869812012
    8. ' )' → logprob: -9.433611869812012
    9. '  ' → logprob: -10.246111869812012
    10. '=' → logprob: -10.308611869812012

Token 13: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6931478977203369
    2. ' s' → logprob: -0.6931478977203369
    3. ' ' → logprob: -15.318147659301758
    4. ' ' → logprob: -15.443147659301758
    5. '_s' → logprob: -16.568147659301758
    6. ')' → logprob: -16.568147659301758
    7. '(s' → logprob: -17.568147659301758
    8. '`s' → logprob: -17.755647659301758
    9. '	s' → logprob: -17.943147659301758
    10. ')s' → logprob: -18.193147659301758

Token 14: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001973361475393176
    2. ' :' → logprob: -6.2519731521606445
    3. ' and' → logprob: -10.626973152160645
    4. '):' → logprob: -11.751973152160645
    5. ' or' → logprob: -12.001973152160645
    6. ':**' → logprob: -12.626973152160645
    7. ':
' → logprob: -14.126973152160645
    8. ':s' → logprob: -14.251973152160645
    9. '':' → logprob: -14.501973152160645
    10. ':return' → logprob: -15.376973152160645

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10732565820217133
    2. '   ' → logprob: -3.732325553894043
    3. ':
' → logprob: -3.857325553894043
    4. ' ' → logprob: -4.107325553894043
    5. 'print' → logprob: -4.607325553894043
    6. ' :' → logprob: -4.732325553894043
    7. ' print' → logprob: -4.857325553894043
    8. ' 
' → logprob: -5.982325553894043
    9. '    ' → logprob: -6.107325553894043
    10. ' :
' → logprob: -6.482325553894043

Token 16: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.05442967638373375
    2. 'print' → logprob: -3.054429769515991
    3. ' s' → logprob: -5.804429531097412
    4. ' gcd' → logprob: -6.429429531097412
    5. ' pass' → logprob: -8.17943000793457
    6. '   ' → logprob: -8.30443000793457
    7. ' g' → logprob: -8.42943000793457
    8. 's' → logprob: -9.55443000793457
    9. ' n' → logprob: -10.05443000793457
    10. ' for' → logprob: -10.05443000793457

Token 17: ' 有' (ID: 33316)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7322931885719299
    2. ' print' → logprob: -0.8572931885719299
    3. ' pass' → logprob: -3.232293128967285
    4. ' s' → logprob: -4.732293128967285
    5. 'pass' → logprob: -4.857293128967285
    6. 's' → logprob: -4.857293128967285
    7. '   ' → logprob: -5.232293128967285
    8. 'g' → logprob: -5.482293128967285
    9. ' #' → logprob: -5.732293128967285
    10. '#' → logprob: -5.857293128967285

Token 18: '限' (ID: 15306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9659571647644043
    2. '=' → logprob: -1.7159571647644043
    3. ')' → logprob: -1.8409571647644043
    4. '(' → logprob: -2.3409571647644043
    5. ''' → logprob: -2.5909571647644043
    6. ' (' → logprob: -3.2159571647644043
    7. ' =' → logprob: -4.090957164764404
    8. 's' → logprob: -4.215957164764404
    9. ' )' → logprob: -4.590957164764404
    10. '空' → logprob: -4.965957164764404

Token 19: '小' (ID: 5820)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0869455337524414
    2. ':' → logprob: -1.2119455337524414
    3. ' print' → logprob: -1.9619455337524414
    4. '   ' → logprob: -2.7119455337524414
    5. ')' → logprob: -3.0869455337524414
    6. '(' → logprob: -3.5869455337524414
    7. ' :' → logprob: -4.086945533752441
    8. '：' → logprob: -4.336945533752441
    9. ' ' → logprob: -4.461945533752441
    10. '    ' → logprob: -4.586945533752441

Token 20: '数' (ID: 7135)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.094227910041809
    2. ':' → logprob: -1.094227910041809
    3. '   ' → logprob: -2.8442277908325195
    4. '    ' → logprob: -3.2192277908325195
    5. ' ' → logprob: -3.4692277908325195
    6. '(' → logprob: -3.4692277908325195
    7. ')' → logprob: -3.9692277908325195
    8. '：' → logprob: -3.9692277908325195
    9. ' :' → logprob: -4.0942277908325195
    10. ' .' → logprob: -4.2192277908325195

Token 21: 'の' (ID: 3385)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48843246698379517
    2. '   ' → logprob: -0.9884324669837952
    3. ' :' → logprob: -4.98843240737915
    4. ' ' → logprob: -5.86343240737915
    5. '    ' → logprob: -6.61343240737915
    6. ',' → logprob: -7.73843240737915
    7. ')' → logprob: -8.113432884216309
    8. ':
' → logprob: -8.238432884216309
    9. '\n' → logprob: -8.238432884216309
    10. 'n' → logprob: -8.488432884216309

Token 22: '処' (ID: 158556)
  Prédit: '判'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '判' → logprob: -0.07240748405456543
    2. '場合' → logprob: -3.5724074840545654
    3. 'み' → logprob: -3.9474074840545654
    4. '判断' → logprob: -5.4474077224731445
    5. 'ため' → logprob: -5.6974077224731445
    6. 'ま' → logprob: -5.8224077224731445
    7. '条件' → logprob: -6.4474077224731445
    8. 'elif' → logprob: -6.8224077224731445
    9. '答' → logprob: -6.9474077224731445
    10. 'decimal' → logprob: -7.1974077224731445

Token 23: '理' (ID: 5584)
  Prédit: '理'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '理' → logprob: -0.00044890373828820884
    2. '分' → logprob: -7.875448703765869
    3. '置' → logprob: -9.750449180603027
    4. '除' → logprob: -12.375449180603027
    5. '```' → logprob: -13.125449180603027
    6. '里' → logprob: -14.250449180603027
    7. '=' → logprob: -14.375449180603027
    8. '法' → logprob: -14.625449180603027
    9. '換' → logprob: -15.500449180603027
    10. '果' → logprob: -15.625449180603027

Token 24: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1235651969909668
    2. '.' → logprob: -3.748565196990967
    3. ':' → logprob: -4.123565196990967
    4. ' numerator' → logprob: -4.498565196990967
    5. 'num' → logprob: -4.623565196990967
    6. ' /' → logprob: -4.873565196990967
    7. ')' → logprob: -4.998565196990967
    8. ' n' → logprob: -4.998565196990967
    9. ' x' → logprob: -5.623565196990967
    10. 'n' → logprob: -5.623565196990967

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2655694782733917
    2. 'n' → logprob: -3.0155694484710693
    3. '.' → logprob: -3.1405694484710693
    4. ')' → logprob: -3.3905694484710693
    5. '    ' → logprob: -3.3905694484710693
    6. ' ' → logprob: -4.515569686889648
    7. ' numerator' → logprob: -4.765569686889648
    8. ':' → logprob: -5.015569686889648
    9. ' n' → logprob: -5.515569686889648
    10. '#' → logprob: -5.765569686889648

Token 26: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3011670112609863
    2. ' n' → logprob: -1.8011670112609863
    3. 'n' → logprob: -2.1761670112609863
    4. ' numerator' → logprob: -2.1761670112609863
    5. '    ' → logprob: -2.9261670112609863
    6. ' ' → logprob: -2.9261670112609863
    7. 'numer' → logprob: -3.0511670112609863
    8. ' a' → logprob: -3.4261670112609863
    9. ' num' → logprob: -3.4261670112609863
    10. 'num' → logprob: -3.6761670112609863

Token 27: ' '.'' (ID: 64762)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.0452748537063599
    2. ' s' → logprob: -1.1702748537063599
    3. ''' → logprob: -1.6702748537063599
    4. 's' → logprob: -3.6702747344970703
    5. ' int' → logprob: -3.6702747344970703
    6. ' g' → logprob: -4.17027473449707
    7. ' '.'' → logprob: -4.29527473449707
    8. ' '/'' → logprob: -4.42027473449707
    9. ' len' → logprob: -4.42027473449707
    10. ' all' → logprob: -4.54527473449707

Token 28: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07421717792749405
    2. ' ' → logprob: -3.0742170810699463
    3. 'in' → logprob: -4.074217319488525
    4. ' '' → logprob: -5.449217319488525
    5. ' not' → logprob: -6.574217319488525
    6. ''' → logprob: -6.699217319488525
    7. ')' → logprob: -7.949217319488525
    8. '.' → logprob: -8.574216842651367
    9. ' and' → logprob: -8.949216842651367
    10. ' )' → logprob: -9.199216842651367

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0926654040813446
    2. 'in' → logprob: -2.717665433883667
    3. 's' → logprob: -3.967665433883667
    4. ' s' → logprob: -5.717665195465088
    5. ' ' → logprob: -8.967665672302246
    6. ')' → logprob: -11.467665672302246
    7. 'e' → logprob: -11.655165672302246
    8. 'to' → logprob: -11.655165672302246
    9. 'import' → logprob: -11.967665672302246
    10. '  ' → logprob: -12.030165672302246

Token 30: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023245595395565033
    2. ' s' → logprob: -3.7732455730438232
    3. '_s' → logprob: -17.023244857788086
    4. ' ' → logprob: -17.398244857788086
    5. '	s' → logprob: -17.648244857788086
    6. '   ' → logprob: -18.523244857788086
    7. ')' → logprob: -19.148244857788086
    8. '(s' → logprob: -19.148244857788086
    9. ')s' → logprob: -19.398244857788086
    10. ' ' → logprob: -19.648244857788086

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004006215371191502
    2. ' :' → logprob: -6.254006385803223
    3. ' or' → logprob: -6.504006385803223
    4. '):' → logprob: -8.129006385803223
    5. ' and' → logprob: -8.629006385803223
    6. '   ' → logprob: -10.379006385803223
    7. '：' → logprob: -10.629006385803223
    8. ')' → logprob: -11.129006385803223
    9. ':
' → logprob: -12.254006385803223
    10. '       ' → logprob: -12.504006385803223

Token 32: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2682664692401886
    2. '       ' → logprob: -1.5182664394378662
    3. ':' → logprob: -4.893266677856445
    4. '    ' → logprob: -5.643266677856445
    5. '\n' → logprob: -5.768266677856445
    6. '\' → logprob: -7.893266677856445
    7. ' or' → logprob: -8.393266677856445
    8. ' ' → logprob: -8.643266677856445
    9. '    
' → logprob: -8.768266677856445
    10. ' print' → logprob: -8.768266677856445

Token 33: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7718942761421204
    2. '    ' → logprob: -1.7718942165374756
    3. '
' → logprob: -2.2718942165374756
    4. '       ' → logprob: -2.6468942165374756
    5. '\n' → logprob: -3.2718942165374756
    6. 's' → logprob: -3.6468942165374756
    7. 'n' → logprob: -3.7718942165374756
    8. 'print' → logprob: -3.8968942165374756
    9. ' s' → logprob: -3.8968942165374756
    10. '\' → logprob: -4.521894454956055

Token 34: ' �' (ID: 41413)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.1495370864868164
    2. ' num' → logprob: -1.5245370864868164
    3. 'print' → logprob: -1.7745370864868164
    4. 'n' → logprob: -2.7745370864868164
    5. ' print' → logprob: -2.7745370864868164
    6. ' n' → logprob: -2.8995370864868164
    7. '#' → logprob: -3.6495370864868164
    8. ' numerator' → logprob: -4.399537086486816
    9. 'int' → logprob: -4.524537086486816
    10. 'numer' → logprob: -4.774537086486816

Token 35: '�' (ID: 112)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7904717922210693
    2. 's' → logprob: -0.9154717922210693
    3. 'print' → logprob: -2.4154717922210693
    4. '/' → logprob: -4.165472030639648
    5. 'n' → logprob: -5.040472030639648
    6. 'p' → logprob: -5.165472030639648
    7. 'i' → logprob: -5.665472030639648
    8. 't' → logprob: -5.665472030639648
    9. ' #' → logprob: -5.665472030639648
    10. 'r' → logprob: -6.165472030639648

Token 36: '数' (ID: 7135)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4453877806663513
    2. '#' → logprob: -1.945387840270996
    3. '/' → logprob: -2.445387840270996
    4. 'num' → logprob: -3.320387840270996
    5. '   ' → logprob: -3.570387840270996
    6. 'n' → logprob: -4.195387840270996
    7. 'g' → logprob: -4.570387840270996
    8. 's' → logprob: -5.195387840270996
    9. 'numer' → logprob: -5.320387840270996
    10. ' print' → logprob: -5.320387840270996

Token 37: 'のみ' (ID: 188840)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5312610864639282
    2. '=' → logprob: -2.0312609672546387
    3. '.' → logprob: -2.2812609672546387
    4. ' ' → logprob: -2.4062609672546387
    5. '/' → logprob: -2.5312609672546387
    6. '   ' → logprob: -2.9062609672546387
    7. ':' → logprob: -2.9062609672546387
    8. 'n' → logprob: -3.2812609672546387
    9. 's' → logprob: -3.4062609672546387
    10. 'print' → logprob: -3.4062609672546387

Token 38: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2828668355941772
    2. '#' → logprob: -1.5328668355941772
    3. '   ' → logprob: -1.5328668355941772
    4. 'n' → logprob: -2.407866954803467
    5. 's' → logprob: -2.907866954803467
    6. ' print' → logprob: -3.657866954803467
    7. ':' → logprob: -3.782866954803467
    8. 'd' → logprob: -4.282866954803467
    9. '.' → logprob: -4.407866954803467
    10. '=' → logprob: -4.782866954803467

Token 39: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3251878023147583
    2. 'print' → logprob: -1.9501878023147583
    3. '#' → logprob: -2.9501876831054688
    4. 'n' → logprob: -3.4501876831054688
    5. ' print' → logprob: -4.450187683105469
    6. ' n' → logprob: -5.450187683105469
    7. 'num' → logprob: -5.450187683105469
    8. '整数' → logprob: -5.700187683105469
    9. 's' → logprob: -5.950187683105469
    10. ' pass' → logprob: -6.325187683105469

Token 40: ' num' (ID: 2269)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8769746422767639
    2. ' print' → logprob: -2.126974582672119
    3. 'print' → logprob: -2.251974582672119
    4. '   ' → logprob: -2.376974582672119
    5. ' n' → logprob: -2.626974582672119
    6. '#' → logprob: -3.751974582672119
    7. 'c' → logprob: -4.251974582672119
    8. ' ' → logprob: -4.376974582672119
    9. 'r' → logprob: -4.626974582672119
    10. 'd' → logprob: -4.626974582672119

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39226728677749634
    2. '=' → logprob: -1.1422672271728516
    3. ',' → logprob: -6.142267227172852
    4. '=int' → logprob: -6.267267227172852
    5. '＝' → logprob: -7.392267227172852
    6. ' ' → logprob: -8.767267227172852
    7. 'ber' → logprob: -9.017267227172852
    8. 'er' → logprob: -9.142267227172852
    9. '  ' → logprob: -9.392267227172852
    10. '_' → logprob: -9.642267227172852

Token 42: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10021539777517319
    2. ' int' → logprob: -2.350215435028076
    3. 'float' → logprob: -12.850214958190918
    4. '[int' → logprob: -13.475214958190918
    5. 's' → logprob: -13.600214958190918
    6. ' float' → logprob: -13.850214958190918
    7. '(int' → logprob: -14.225214958190918
    8. '=int' → logprob: -14.475214958190918
    9. ' s' → logprob: -14.975214958190918
    10. '<int' → logprob: -15.600214958190918

Token 43: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0018265502294525504
    2. '(' → logprob: -6.376826763153076
    3. 's' → logprob: -9.001826286315918
    4. ' (' → logprob: -14.001826286315918
    5. '(
' → logprob: -15.126826286315918
    6. '(x' → logprob: -16.876827239990234
    7. '（' → logprob: -17.626827239990234
    8. ' s' → logprob: -17.626827239990234
    9. ')' → logprob: -18.376827239990234
    10. '(

' → logprob: -18.501827239990234

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000329386442899704
    2. ')
' → logprob: -8.75032901763916
    3. ' )' → logprob: -8.87532901763916
    4. ')

' → logprob: -12.62532901763916
    5. '*' → logprob: -12.87532901763916
    6. ')
' → logprob: -12.87532901763916
    7. '*)' → logprob: -13.00032901763916
    8. '#' → logprob: -13.12532901763916
    9. '）' → logprob: -13.12532901763916
    10. ')#' → logprob: -13.12532901763916

Token 45: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8044869303703308
    2. '
' → logprob: -2.1794869899749756
    3. '\n' → logprob: -2.1794869899749756
    4. 'else' → logprob: -2.3044869899749756
    5. '/' → logprob: -3.6794869899749756
    6. 'elif' → logprob: -3.6794869899749756
    7. '<|end|>' → logprob: -3.9294869899749756
    8. ' else' → logprob: -4.0544867515563965
    9. ')' → logprob: -4.0544867515563965
    10. '       ' → logprob: -4.1794867515563965

Token 46: ' den' (ID: 1786)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -1.4551717042922974
    2. '\n' → logprob: -1.5801717042922974
    3. '*' → logprob: -2.080171585083008
    4. '%' → logprob: -2.080171585083008
    5. ' /' → logprob: -2.830171585083008
    6. '#' → logprob: -3.205171585083008
    7. ' *' → logprob: -3.455171585083008
    8. '\' → logprob: -3.580171585083008
    9. ')' → logprob: -3.830171585083008
    10. '   ' → logprob: -4.080171585083008

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409215569496155
    2. ' =' → logprob: -0.9740921258926392
    3. 'ominator' → logprob: -12.474092483520508
    4. ' ' → logprob: -12.599092483520508
    5. '＝' → logprob: -13.099092483520508
    6. '=int' → logprob: -13.599092483520508
    7. 's' → logprob: -13.974092483520508
    8. ',' → logprob: -14.099092483520508
    9. 'umerator' → logprob: -14.099092483520508
    10. '   ' → logprob: -14.474092483520508

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.50002098083496
    4. '```' → logprob: -18.75002098083496
    5. '１' → logprob: -18.87502098083496
    6. 's' → logprob: -18.87502098083496
    7. 'int' → logprob: -19.00002098083496
    8. 'g' → logprob: -19.25002098083496
    9. ' ' → logprob: -19.87502098083496
    10. '<|end|>' → logprob: -20.50002098083496

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'int' → logprob: -18.625
    4. 'g' → logprob: -19.125
    5. '１' → logprob: -19.125
    6. 's' → logprob: -19.375
    7. '```' → logprob: -19.5
    8. '   ' → logprob: -19.875
    9. '১' → logprob: -21.8125
    10. 'num' → logprob: -21.8125

Token 50: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7104732990264893
    2. 'else' → logprob: -1.3354732990264893
    3. '\n' → logprob: -2.2104732990264893
    4. ' else' → logprob: -2.3354732990264893
    5. 'elif' → logprob: -3.8354732990264893
    6. '   ' → logprob: -5.58547306060791
    7. '```' → logprob: -5.96047306060791
    8. '<|end|>' → logprob: -5.96047306060791
    9. '
' → logprob: -6.08547306060791
    10. ' elif' → logprob: -6.46047306060791

Token 52: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.30890291929244995
    2. ' else' → logprob: -1.4339029788970947
    3. 'elif' → logprob: -3.8089029788970947
    4. ' elif' → logprob: -6.308902740478516
    5. '\n' → logprob: -6.683902740478516
    6. ')' → logprob: -7.183902740478516
    7. '
' → logprob: -7.933902740478516
    8. '<|end|>' → logprob: -8.183902740478516
    9. '```' → logprob: -8.683902740478516
    10. '	else' → logprob: -9.308902740478516

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002683688362594694
    2. ':
' → logprob: -9.37526798248291
    3. '):' → logprob: -9.50026798248291
    4. '       ' → logprob: -10.25026798248291
    5. '<|end|>' → logprob: -10.37526798248291
    6. ' :' → logprob: -11.37526798248291
    7. '<|end|>' → logprob: -12.00026798248291
    8. '：' → logprob: -12.12526798248291
    9. ',' → logprob: -12.25026798248291
    10. '   ' → logprob: -12.62526798248291

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8644828200340271
    2. '.' → logprob: -1.9894828796386719
    3. ' num' → logprob: -2.489482879638672
    4. 'num' → logprob: -2.614482879638672
    5. ' parts' → logprob: -2.864482879638672
    6. ' #' → logprob: -3.239482879638672
    7. ' split' → logprob: -3.364482879638672
    8. ' ' → logprob: -3.489482879638672
    9. '   ' → logprob: -3.614482879638672
    10. '    ' → logprob: -4.114482879638672

Token 55: ' integer' (ID: 16336)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.3969714939594269
    2. 'parts' → logprob: -2.5219714641571045
    3. ' integer' → logprob: -2.7719714641571045
    4. '#' → logprob: -4.021971702575684
    5. 'num' → logprob: -4.021971702575684
    6. 'integer' (adapté à ' integer') → logprob: -4.146971702575684
    7. 'int' → logprob: -4.271971702575684
    8. ' point' → logprob: -4.396971702575684
    9. '整数' → logprob: -4.646971702575684
    10. 'decimal' → logprob: -4.771971702575684

Token 56: '_part' (ID: 24053)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6977508664131165
    2. '_part' → logprob: -0.6977508664131165
    3. ',' → logprob: -6.197751045227051
    4. 'part' → logprob: -6.947751045227051
    5. '_pos' → logprob: -8.07275104522705
    6. '_parts' → logprob: -8.19775104522705
    7. '_index' → logprob: -8.94775104522705
    8. '部分' → logprob: -9.07275104522705
    9. '_port' → logprob: -9.19775104522705
    10. '_len' → logprob: -9.32275104522705

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01679319702088833
    2. ' =' → logprob: -4.516793251037598
    3. '=' → logprob: -6.141793251037598
    4. ' ,' → logprob: -6.891793251037598
    5. '_len' → logprob: -7.016793251037598
    6. '_end' → logprob: -7.016793251037598
    7. '_length' → logprob: -8.141793251037598
    8. ',_' → logprob: -9.141793251037598
    9. '_' → logprob: -9.641793251037598
    10. '_,' → logprob: -9.891793251037598

Token 58: ' decimal' (ID: 26964)
  Prédit: ' fractional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractional' → logprob: -0.756497859954834
    2. ' decimal' → logprob: -1.506497859954834
    3. ' fraction' → logprob: -1.881497859954834
    4. 'fraction' → logprob: -2.006497859954834
    5. 'decimal' → logprob: -4.131497859954834
    6. ' frac' → logprob: -6.131497859954834
    7. ' rest' → logprob: -6.381497859954834
    8. ' s' → logprob: -7.506497859954834
    9. ' remainder' → logprob: -7.881497859954834
    10. 'frac' → logprob: -8.256498336791992

Token 59: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.00013321757433004677
    2. '_parts' → logprob: -9.625133514404297
    3. '_point' → logprob: -10.500133514404297
    4. '_' → logprob: -10.625133514404297
    5. 'part' → logprob: -11.750133514404297
    6. '部分' → logprob: -13.625133514404297
    7. '_fraction' → logprob: -14.125133514404297
    8. 'Part' → logprob: -14.250133514404297
    9. '_str' → logprob: -14.375133514404297
    10. '_digits' → logprob: -14.375133514404297

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889209687709808
    2. '=' → logprob: -2.5788919925689697
    3. '＝' → logprob: -13.82889175415039
    4. ',' → logprob: -14.20389175415039
    5. ' ' → logprob: -15.20389175415039
    6. 's' → logprob: -15.45389175415039
    7. ')' → logprob: -15.95389175415039
    8. ' =
' → logprob: -17.70389175415039
    9. ')=' → logprob: -17.95389175415039
    10. ' ' → logprob: -18.20389175415039

Token 61: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.31326553225517273
    2. 's' → logprob: -1.3132655620574951
    3. ' ' → logprob: -12.938265800476074
    4. '	s' → logprob: -14.938265800476074
    5. '(s' → logprob: -15.813265800476074
    6. '_s' → logprob: -16.063264846801758
    7. '`s' → logprob: -16.188264846801758
    8. ' ' → logprob: -16.313264846801758
    9. '<|end|>' → logprob: -16.438264846801758
    10. '  ' → logprob: -16.438264846801758

Token 62: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.2014567106962204
    2. '.' → logprob: -1.7014566659927368
    3. ' .' → logprob: -10.201457023620605
    4. '.strip' → logprob: -12.701457023620605
    5. '.partition' → logprob: -13.326457023620605
    6. '.s' → logprob: -14.576457023620605
    7. 'split' → logprob: -14.701457023620605
    8. '.Split' → logprob: -15.076457023620605
    9. '.replace' → logprob: -15.576457023620605
    10. '.rstrip' → logprob: -16.20145606994629

Token 63: '('.' (ID: 7925)
  Prédit: '('.')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('.')' → logprob: -0.005021224729716778
    2. '('' → logprob: -5.505021095275879
    3. '(' → logprob: -7.380021095275879
    4. '('.' → logprob: -8.755021095275879
    5. '('.')[' → logprob: -9.505021095275879
    6. ''.' → logprob: -9.630021095275879
    7. '('.',' → logprob: -11.380021095275879
    8. '.' → logprob: -12.630021095275879
    9. '(".' → logprob: -12.880021095275879
    10. '(',' → logprob: -13.130021095275879

Token 64: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3871665298938751
    2. '')' → logprob: -1.1371665000915527
    3. ',' → logprob: -9.137166976928711
    4. ')
' → logprob: -10.137166976928711
    5. '）' → logprob: -10.262166976928711
    6. '")' → logprob: -10.262166976928711
    7. '')
' → logprob: -10.637166976928711
    8. '',' → logprob: -11.012166976928711
    9. '`)' → logprob: -11.262166976928711
    10. ''' → logprob: -12.012166976928711

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0506572723388672
    2. 'num' → logprob: -1.5506572723388672
    3. '   ' → logprob: -1.6756572723388672
    4. ')' → logprob: -2.300657272338867
    5. '<|end|>' → logprob: -2.800657272338867
    6. ' num' → logprob: -3.675657272338867
    7. '    ' → logprob: -4.425657272338867
    8. 'n' → logprob: -4.925657272338867
    9. ' ' → logprob: -5.175657272338867
    10. 'den' → logprob: -5.425657272338867

Token 66: ' numerator' (ID: 149054)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2498171329498291
    2. ' num' → logprob: -2.249817132949829
    3. 'den' → logprob: -2.624817132949829
    4. ' den' → logprob: -4.37481689453125
    5. ' numerator' → logprob: -4.49981689453125
    6. 'n' → logprob: -5.24981689453125
    7. '   ' → logprob: -5.49981689453125
    8. 'numer' → logprob: -5.62481689453125
    9. ' n' → logprob: -6.87481689453125
    10. ' denominator' → logprob: -6.87481689453125

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038043901324272156
    2. '=' → logprob: -3.288043975830078
    3. '=int' → logprob: -13.788043975830078
    4. '＝' → logprob: -13.913043975830078
    5. ' ' → logprob: -15.538043975830078
    6. 's' → logprob: -16.413043975830078
    7. '```' → logprob: -16.913043975830078
    8. 'num' → logprob: -17.038043975830078
    9. 'umerator' → logprob: -17.413043975830078
    10. '=num' → logprob: -17.538043975830078

Token 68: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02325817570090294
    2. ' int' → logprob: -3.7732582092285156
    3. '(int' → logprob: -11.523258209228516
    4. '   ' → logprob: -13.773258209228516
    5. '[int' → logprob: -14.773258209228516
    6. '10' → logprob: -15.148258209228516
    7. ' ' → logprob: -15.273258209228516
    8. '	int' → logprob: -15.523258209228516
    9. '<int' → logprob: -15.773258209228516
    10. 'integer' → logprob: -15.773258209228516

Token 69: '(integer' (ID: 191023)
  Prédit: '(integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(integer' → logprob: -0.1033981442451477
    2. '(decimal' → logprob: -2.353398084640503
    3. '(' → logprob: -5.853398323059082
    4. '((' → logprob: -9.103398323059082
    5. '(str' → logprob: -9.228398323059082
    6. 'integer' → logprob: -9.978398323059082
    7. '(s' → logprob: -11.228398323059082
    8. '(in' → logprob: -11.353398323059082
    9. 'decimal' → logprob: -11.853398323059082
    10. ' (' → logprob: -12.103398323059082

Token 70: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0056214663200080395
    2. 'part' → logprob: -5.255621433258057
    3. ')' → logprob: -9.505621910095215
    4. '_' → logprob: -9.505621910095215
    5. 'Part' → logprob: -10.130621910095215
    6. '_parts' → logprob: -10.130621910095215
    7. ' ' → logprob: -10.880621910095215
    8. '*' → logprob: -10.880621910095215
    9. 'umerator' → logprob: -11.005621910095215
    10. ' part' → logprob: -11.380621910095215

Token 71: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7065424919128418
    2. ')' → logprob: -0.8315424919128418
    3. '*' → logprob: -2.706542491912842
    4. ' +' → logprob: -6.081542491912842
    5. ' ' → logprob: -7.331542491912842
    6. ')*' → logprob: -7.706542491912842
    7. ' )' → logprob: -7.706542491912842
    8. '+' → logprob: -8.20654296875
    9. '*)' → logprob: -8.70654296875
    10. ' *)' → logprob: -9.45654296875

Token 72: ' decimal' (ID: 26964)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.0031817557755857706
    2. ' decimal' → logprob: -5.7531819343566895
    3. '(decimal' → logprob: -12.628181457519531
    4. 'dec' → logprob: -14.503181457519531
    5. ' ' → logprob: -15.628181457519531
    6. '_decimal' → logprob: -16.87818145751953
    7. 'Decimal' → logprob: -17.87818145751953
    8. ')' → logprob: -18.00318145751953
    9. 'd' → logprob: -18.75318145751953
    10. '   ' → logprob: -19.00318145751953

Token 73: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0064619360491633415
    2. 'part' → logprob: -5.631462097167969
    3. 'al' → logprob: -6.006462097167969
    4. '_parts' → logprob: -8.131462097167969
    5. 'Part' → logprob: -10.756462097167969
    6. '_' → logprob: -10.881462097167969
    7. 'inal' → logprob: -11.881462097167969
    8. '_p' → logprob: -11.881462097167969
    9. ')' → logprob: -12.006462097167969
    10. '_pat' → logprob: -12.006462097167969

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16046275198459625
    2. ')
' → logprob: -1.910462737083435
    3. ' )' → logprob: -9.285462379455566
    4. ' )
' → logprob: -9.660462379455566
    5. '       ' → logprob: -10.410462379455566
    6. ')
' → logprob: -11.160462379455566
    7. '   ' → logprob: -11.285462379455566
    8. ')

' → logprob: -12.160462379455566
    9. '')' → logprob: -12.160462379455566
    10. ',' → logprob: -12.535462379455566

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08002287149429321
    2. ' denominator' → logprob: -2.9550228118896484
    3. 'den' → logprob: -3.9550228118896484
    4. '   ' → logprob: -5.955022811889648
    5. ' /' → logprob: -7.455022811889648
    6. ' den' → logprob: -7.705022811889648
    7. ')' → logprob: -7.705022811889648
    8. ' numerator' → logprob: -8.455022811889648
    9. '/' → logprob: -8.580022811889648
    10. ',' → logprob: -8.705022811889648

Token 76: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.739630937576294
    2. ' denominator' → logprob: -0.864630937576294
    3. ' den' → logprob: -2.489630937576294
    4. '/' → logprob: -5.114630699157715
    5. ' /' → logprob: -5.114630699157715
    6. ' ' → logprob: -6.239630699157715
    7. ' denom' → logprob: -7.364630699157715
    8. '<|end|>' → logprob: -7.489630699157715
    9. ' numerator' → logprob: -7.739630699157715
    10. '10' → logprob: -7.739630699157715

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931478977203369
    2. ' =' → logprob: -0.6931478977203369
    3. '＝' → logprob: -14.443147659301758
    4. '=int' → logprob: -15.568147659301758
    5. 's' → logprob: -17.568147659301758
    6. '=len' → logprob: -18.443147659301758
    7. '=}' → logprob: -18.818147659301758
    8. '=

' → logprob: -18.818147659301758
    9. ' =
' → logprob: -18.943147659301758
    10. '=
' → logprob: -19.193147659301758

Token 78: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.375032424926758
    3. 'pow' → logprob: -14.375032424926758
    4. '1' → logprob: -16.375032424926758
    5. '(' → logprob: -16.625032424926758
    6. '```' → logprob: -17.500032424926758
    7. '   ' → logprob: -17.750032424926758
    8. '１０' → logprob: -19.375032424926758
    9. '`' → logprob: -19.500032424926758
    10. '  ' → logprob: -19.625032424926758

Token 79: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -11.750008583068848
    3. 'pow' → logprob: -14.250008583068848
    4. '(' → logprob: -16.125009536743164
    5. '1' → logprob: -17.750009536743164
    6. '   ' → logprob: -18.125009536743164
    7. '```' → logprob: -18.750009536743164
    8. '[' → logprob: -20.000009536743164
    9. '  ' → logprob: -20.125009536743164
    10. '１０' → logprob: -20.250009536743164

Token 80: ' **' (ID: 6240)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.38212043046951294
    2. '**' → logprob: -1.6321203708648682
    3. '[len' → logprob: -2.257120370864868
    4. '(len' → logprob: -4.132120609283447
    5. '```' → logprob: -7.507120609283447
    6. '<len' → logprob: -8.132120132446289
    7. ' len' → logprob: -8.382120132446289
    8. '<|end|>' → logprob: -9.757120132446289
    9. '	len' → logprob: -9.882120132446289
    10. ',len' → logprob: -10.257120132446289

Token 81: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -8.304016228066757e-05
    2. '(len' → logprob: -9.500082969665527
    3. ' len' → logprob: -11.750082969665527
    4. '[len' → logprob: -15.875082969665527
    5. '	len' → logprob: -16.000083923339844
    6. '<len' → logprob: -17.250083923339844
    7. '(' → logprob: -18.875083923339844
    8. ' ' → logprob: -19.500083923339844
    9. '=len' → logprob: -19.500083923339844
    10. ',len' → logprob: -20.125083923339844

Token 82: '(decimal' (ID: 171225)
  Prédit: '(decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(decimal' → logprob: -1.8908587662735954e-05
    2. 'decimal' → logprob: -11.000019073486328
    3. '(' → logprob: -13.125019073486328
    4. ' decimal' → logprob: -16.750019073486328
    5. '(dec' → logprob: -17.375019073486328
    6. ' (' → logprob: -19.000019073486328
    7. '(decoded' → logprob: -20.125019073486328
    8. '(de' → logprob: -21.250019073486328
    9. '_decimal' → logprob: -21.375019073486328
    10. '(d' → logprob: -22.125019073486328

Token 83: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0028155746404081583
    2. 'part' → logprob: -5.8778157234191895
    3. '_pat' → logprob: -13.002815246582031
    4. '_' → logprob: -13.377815246582031
    5. 'decimal' → logprob: -13.502815246582031
    6. ')' → logprob: -14.127815246582031
    7. 'Part' → logprob: -14.377815246582031
    8. '_par' → logprob: -14.502815246582031
    9. 'pt' → logprob: -14.627815246582031
    10. '_p' → logprob: -15.002815246582031

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ' )' → logprob: -12.500008583068848
    3. ')
' → logprob: -13.250008583068848
    4. '   ' → logprob: -13.375008583068848
    5. '<|end|>' → logprob: -14.875008583068848
    6. '<|end|>' → logprob: -15.375008583068848
    7. ')return' → logprob: -15.625008583068848
    8. ')}}' → logprob: -15.875008583068848
    9. '))' → logprob: -16.000009536743164
    10. '）' → logprob: -16.250009536743164

Token 85: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13021112978458405
    2. '
' → logprob: -2.505211114883423
    3. 'g' → logprob: -3.755211114883423
    4. ')' → logprob: -5.505211353302002
    5. 'n' → logprob: -5.630211353302002
    6. '    
' → logprob: -5.630211353302002
    7. '       ' → logprob: -7.380211353302002
    8. '<|end|>' → logprob: -7.380211353302002
    9. '```' → logprob: -7.380211353302002
    10. '\n' → logprob: -7.505211353302002

Token 86: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.7619090676307678
    2. '   ' → logprob: -0.7619090676307678
    3. ' g' → logprob: -3.136909008026123
    4. ' gcd' → logprob: -5.011909008026123
    5. '       ' → logprob: -5.761909008026123
    6. ')' → logprob: -5.761909008026123
    7. '
' → logprob: -6.011909008026123
    8. 'n' → logprob: -6.136909008026123
    9. '    
' → logprob: -6.261909008026123
    10. ' ' → logprob: -8.136909484863281

Token 87: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013015457661822438
    2. '=g' → logprob: -6.7513017654418945
    3. ' =' → logprob: -9.501301765441895
    4. 'cd' → logprob: -10.126301765441895
    5. 'c' → logprob: -12.376301765441895
    6. '=c' → logprob: -12.751301765441895
    7. '_=' → logprob: -12.876301765441895
    8. 'g' → logprob: -13.251301765441895
    9. '_' → logprob: -14.001301765441895
    10. '＝' → logprob: -14.126301765441895

Token 88: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00861468818038702
    2. ' gcd' → logprob: -4.758614540100098
    3. '	g' → logprob: -16.133615493774414
    4. ' g' → logprob: -16.758615493774414
    5. ' ' → logprob: -17.008615493774414
    6. '(g' → logprob: -17.758615493774414
    7. '-g' → logprob: -18.383615493774414
    8. '   ' → logprob: -18.508615493774414
    9. '=g' → logprob: -19.008615493774414
    10. '_g' → logprob: -19.008615493774414

Token 89: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006716555915772915
    2. '(' → logprob: -5.006716728210449
    3. ' (' → logprob: -15.13171672821045
    4. '(
' → logprob: -15.38171672821045
    5. '(g' → logprob: -15.88171672821045
    6. '(num' → logprob: -16.381715774536133
    7. '(number' → logprob: -16.756715774536133
    8. 'n' → logprob: -17.006715774536133
    9. '(noun' → logprob: -17.006715774536133
    10. ')' → logprob: -17.131715774536133

Token 90: 'umerator' (ID: 152035)
  Prédit: 'umerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umerator' → logprob: -0.00036156410351395607
    2. 'um' → logprob: -8.250361442565918
    3. 'umer' → logprob: -9.875361442565918
    4. '(' → logprob: -10.250361442565918
    5. 'ominator' → logprob: -12.875361442565918
    6. '(n' → logprob: -12.875361442565918
    7. 'numer' → logprob: -13.000361442565918
    8. 'ume' → logprob: -13.625361442565918
    9. 'umber' → logprob: -14.000361442565918
    10. 'umulator' → logprob: -14.250361442565918

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009552901610732079
    2. ' ,' → logprob: -7.250955104827881
    3. ',n' → logprob: -8.375955581665039
    4. ',g' → logprob: -12.375955581665039
    5. ',num' → logprob: -12.500955581665039
    6. ')' → logprob: -12.625955581665039
    7. '(' → logprob: -14.250955581665039
    8. '，' → logprob: -14.375955581665039
    9. 'g' → logprob: -15.125955581665039
    10. '(n' → logprob: -15.125955581665039

Token 92: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.5759501457214355
    2. ' denominator' → logprob: -0.8259501457214355
    3. ' den' → logprob: -12.075950622558594
    4. ' ' → logprob: -13.325950622558594
    5. ' denomin' → logprob: -13.950950622558594
    6. ' numerator' → logprob: -13.950950622558594
    7. '_den' → logprob: -14.325950622558594
    8. ' denomination' → logprob: -15.575950622558594
    9. '   ' → logprob: -15.825950622558594
    10. '.den' → logprob: -15.825950622558594

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005945033393800259
    2. ')
' → logprob: -5.130945205688477
    3. ')
' → logprob: -11.380945205688477
    4. '   ' → logprob: -12.880945205688477
    5. ')

' → logprob: -13.255945205688477
    6. '       ' → logprob: -15.380945205688477
    7. ' )' → logprob: -15.505945205688477
    8. ')n' → logprob: -16.630945205688477
    9. ')\' → logprob: -16.880945205688477
    10. ')

' → logprob: -17.005945205688477

Token 94: '       ' (ID: 309)
  Prédit: ' numerator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numerator' → logprob: -0.21433134377002716
    2. 'numer' → logprob: -1.7143313884735107
    3. '   ' → logprob: -5.339331150054932
    4. '\n' → logprob: -5.339331150054932
    5. 'num' → logprob: -7.214331150054932
    6. '\' → logprob: -7.839331150054932
    7. ' 
' → logprob: -7.964331150054932
    8. ' denominator' → logprob: -8.08933162689209
    9. '    
' → logprob: -8.58933162689209
    10. ' num' → logprob: -8.83933162689209

Token 95: ' numerator' (ID: 149054)
  Prédit: ' numerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numerator' → logprob: -0.2020368129014969
    2. 'numer' → logprob: -1.7020368576049805
    3. 'num' → logprob: -7.5770368576049805
    4. '   ' → logprob: -10.45203685760498
    5. ' num' → logprob: -10.70203685760498
    6. ' numer' → logprob: -10.95203685760498
    7. 'umerator' → logprob: -11.20203685760498
    8. 'Numer' → logprob: -11.70203685760498
    9. '       ' → logprob: -11.95203685760498
    10. ' denominator' → logprob: -12.70203685760498

Token 96: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.028756489977240562
    2. '//=' → logprob: -4.528756618499756
    3. ' =' → logprob: -4.653756618499756
    4. '=' → logprob: -5.528756618499756
    5. '//' → logprob: -5.778756618499756
    6. ',' → logprob: -7.903756618499756
    7. ' >>=' → logprob: -8.528756141662598
    8. ' /=' → logprob: -8.903756141662598
    9. ' ' → logprob: -9.153756141662598
    10. ' ' → logprob: -9.528756141662598

Token 97: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005391464568674564
    2. '=g' → logprob: -5.255391597747803
    3. 'g' → logprob: -8.755391120910645
    4. ' g' → logprob: -16.25539207458496
    5. '=

' → logprob: -17.00539207458496
    6. '=
' → logprob: -17.88039207458496
    7. '=}' → logprob: -18.50539207458496
    8. '＝' → logprob: -18.88039207458496
    9. '_g' → logprob: -19.88039207458496
    10. '=s' → logprob: -19.88039207458496

Token 98: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0206720617134124e-05
    2. ' g' → logprob: -11.50001049041748
    3. '	g' → logprob: -19.750009536743164
    4. '_g' → logprob: -22.375009536743164
    5. '```' → logprob: -22.750009536743164
    6. 'г' → logprob: -22.875009536743164
    7. ' ' → logprob: -23.250009536743164
    8. '   ' → logprob: -23.500009536743164
    9. '[g' → logprob: -24.125009536743164
    10. '=g' → logprob: -24.125009536743164

Token 99: '
' (ID: 198)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.18371956050395966
    2. '       ' → logprob: -2.0587196350097656
    3. ' denominator' → logprob: -3.3087196350097656
    4. '<|end|>' → logprob: -5.683719635009766
    5. ' den' → logprob: -9.933719635009766
    6. '   ' → logprob: -10.183719635009766
    7. '<|end|>' → logprob: -10.183719635009766
    8. ',' → logprob: -10.558719635009766
    9. '_den' → logprob: -10.808719635009766
    10. '.den' → logprob: -11.683719635009766

Token 100: '       ' (ID: 309)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.08603399246931076
    2. '       ' → logprob: -2.586034059524536
    3. ' denominator' → logprob: -4.961033821105957
    4. '   ' → logprob: -10.711033821105957
    5. ' den' → logprob: -10.836033821105957
    6. '<|end|>' → logprob: -10.961033821105957
    7. '     ' → logprob: -11.961033821105957
    8. ' ' → logprob: -12.086033821105957
    9. '      ' → logprob: -12.211033821105957
    10. '/' → logprob: -12.211033821105957

Token 101: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0007099286303855479
    2. ' denominator' → logprob: -7.2507100105285645
    3. 'g' → logprob: -17.250709533691406
    4. 'numer' → logprob: -18.625709533691406
    5. '_den' → logprob: -18.750709533691406
    6. 'Den' → logprob: -18.875709533691406
    7. ' den' → logprob: -19.250709533691406
    8. '.den' → logprob: -19.375709533691406
    9. '   ' → logprob: -20.375709533691406
    10. 'd' → logprob: -20.375709533691406

Token 102: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.03833166882395744
    2. ' //' → logprob: -3.2883317470550537
    3. '//' → logprob: -8.163331985473633
    4. '=' → logprob: -12.288331985473633
    5. '/=' → logprob: -14.663331985473633
    6. ' /=' → logprob: -15.788331985473633
    7. '```' → logprob: -16.913331985473633
    8. ' ' → logprob: -17.413331985473633
    9. ' ' → logprob: -17.413331985473633
    10. '	' → logprob: -18.413331985473633

Token 103: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.692145012086257e-05
    2. 'g' → logprob: -10.000046730041504
    3. '=g' → logprob: -14.000046730041504
    4. '/=' → logprob: -15.375046730041504
    5. '=}' → logprob: -15.875046730041504
    6. '*=' → logprob: -16.25004768371582
    7. '%=' → logprob: -17.25004768371582
    8. '=_' → logprob: -17.37504768371582
    9. '=
' → logprob: -17.62504768371582
    10. '//=' → logprob: -18.00004768371582

Token 104: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -4.320199877838604e-07
    2. ' g' → logprob: -15.0
    3. '<|end|>' → logprob: -20.75
    4. '_g' → logprob: -20.875
    5. 'г' → logprob: -21.625
    6. '	g' → logprob: -21.75
    7. 'gs' → logprob: -22.375
    8. '#g' → logprob: -23.0
    9. 'd' → logprob: -23.125
    10. '[g' → logprob: -23.25

Token 105: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5801339149475098
    2. 'else' → logprob: -1.4551339149475098
    3. '<|end|>' → logprob: -2.2051339149475098
    4. ')' → logprob: -2.9551339149475098
    5. 'num' → logprob: -4.33013391494751
    6. 'elif' → logprob: -4.33013391494751
    7. ' else' → logprob: -5.58013391494751
    8. '```' → logprob: -5.95513391494751
    9. 'print' → logprob: -6.08013391494751
    10. '#' → logprob: -6.20513391494751

Token 107: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.024190092459321022
    2. ' num' → logprob: -4.3991899490356445
    3. 'print' → logprob: -4.5241899490356445
    4. ' print' → logprob: -7.8991899490356445
    5. 'else' → logprob: -9.024189949035645
    6. '   ' → logprob: -9.149189949035645
    7. '#' → logprob: -10.274189949035645
    8. 's' → logprob: -10.524189949035645
    9. 'numer' → logprob: -10.774189949035645
    10. ' else' → logprob: -11.149189949035645

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11648758500814438
    2. '=' → logprob: -2.241487503051758
    3. ',' → logprob: -5.616487503051758
    4. ' ,' → logprob: -11.491487503051758
    5. ' ' → logprob: -12.616487503051758
    6. '＝' → logprob: -13.116487503051758
    7. 'umerator' → logprob: -13.366487503051758
    8. ' =
' → logprob: -13.991487503051758
    9. ')' → logprob: -14.616487503051758
    10. 'r' → logprob: -14.616487503051758

Token 109: ' numerator' (ID: 149054)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.0003365350130479783
    2. ' numerator' → logprob: -8.000336647033691
    3. '1' → logprob: -14.875336647033691
    4. 'Numer' → logprob: -15.125336647033691
    5. 'umerator' → logprob: -15.625336647033691
    6. '0' → logprob: -16.625335693359375
    7. 'int' → logprob: -16.750335693359375
    8. 'n' → logprob: -16.750335693359375
    9. 'numeric' → logprob: -16.875335693359375
    10. 'num' → logprob: -16.875335693359375

Token 110: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: '       ' (ID: 309)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.4023599326610565
    2. '   ' → logprob: -1.277359962463379
    3. ' den' → logprob: -3.152359962463379
    4. '       ' → logprob: -5.027359962463379
    5. 'else' → logprob: -6.402359962463379
    6. '<|end|>' → logprob: -7.652359962463379
    7. ' ' → logprob: -8.652359962463379
    8. ' else' → logprob: -8.777359962463379
    9. '  ' → logprob: -9.027359962463379
    10. '/' → logprob: -9.402359962463379

Token 112: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' (adapté à ' den') → logprob: -4.842555426876061e-06
    2. ' den' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.7500057220459
    4. 'dem' → logprob: -18.3750057220459
    5. '    ' → logprob: -20.6250057220459
    6. ' ' → logprob: -20.6250057220459
    7. '  ' → logprob: -21.0000057220459
    8. '       ' → logprob: -21.3750057220459
    9. '     ' → logprob: -22.0000057220459
    10. 'def' → logprob: -22.7500057220459

Token 113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615042082965374
    2. ' =' → logprob: -4.758615016937256
    3. '＝' → logprob: -15.758615493774414
    4. '+=' → logprob: -16.383615493774414
    5. '.=' → logprob: -16.383615493774414
    6. '=

' → logprob: -16.758615493774414
    7. '=}' → logprob: -16.883615493774414
    8. '<|end|>' → logprob: -17.258615493774414
    9. '/=' → logprob: -17.508615493774414
    10. ' /=' → logprob: -17.758615493774414

Token 114: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0040785204619169235
    2. ' denominator' → logprob: -5.504078388214111
    3. ' den' → logprob: -15.87907886505127
    4. '_den' → logprob: -17.254077911376953
    5. '.den' → logprob: -18.754077911376953
    6. '-den' → logprob: -19.379077911376953
    7. 'Den' → logprob: -19.379077911376953
    8. ' ' → logprob: -19.879077911376953
    9. '   ' → logprob: -19.879077911376953
    10. ' denomin' → logprob: -20.254077911376953

Token 115: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11110737174749374
    2. ' else' → logprob: -2.986107349395752
    3. '\n' → logprob: -3.361107349395752
    4. 'elif' → logprob: -4.861107349395752
    5. '
' → logprob: -5.111107349395752
    6. '<|end|>' → logprob: -5.611107349395752
    7. ')' → logprob: -7.486107349395752
    8. ':' → logprob: -7.986107349395752
    9. '#' → logprob: -8.23610782623291
    10. '    
' → logprob: -8.36110782623291

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010818752925843
    2. ':
' → logprob: -7.001081943511963
    3. '   ' → logprob: -9.376081466674805
    4. ' :' → logprob: -9.626081466674805
    5. '：' → logprob: -11.376081466674805
    6. '(' → logprob: -13.126081466674805
    7. ':

' → logprob: -13.876081466674805
    8. ':
' → logprob: -14.501081466674805
    9. '):' → logprob: -14.626081466674805
    10. 's' → logprob: -14.626081466674805

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3787288963794708
    2. '#' → logprob: -1.5037288665771484
    3. 'open' → logprob: -3.5037288665771484
    4. 'pos' → logprob: -3.7537288665771484
    5. ' #' → logprob: -4.753728866577148
    6. 'stack' → logprob: -4.878728866577148
    7. 'idx' → logprob: -4.878728866577148
    8. 'start' → logprob: -5.378728866577148
    9. 'pass' → logprob: -6.003728866577148
    10. 'left' → logprob: -6.503728866577148

Token 119: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5982775688171387
    2. 'left' → logprob: -1.5982775688171387
    3. 'l' → logprob: -2.2232775688171387
    4. 'open' → logprob: -2.9732775688171387
    5. 'start' → logprob: -3.7232775688171387
    6. 'integer' → logprob: -4.223277568817139
    7. 'idx' → logprob: -4.973277568817139
    8. 'import' → logprob: -5.223277568817139
    9. ' #' → logprob: -5.348277568817139
    10. '   ' → logprob: -5.723277568817139

Token 120: ' �' (ID: 11829)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4722548723220825
    2. 'integer' → logprob: -2.597254753112793
    3. ' #' → logprob: -2.847254753112793
    4. ' integer' → logprob: -3.097254753112793
    5. 'left' → logprob: -3.347254753112793
    6. ' l' → logprob: -3.597254753112793
    7. 'l' → logprob: -3.722254753112793
    8. ' left' → logprob: -4.097254753112793
    9. 'open' → logprob: -4.097254753112793
    10. '整数' → logprob: -5.097254753112793

Token 121: '�' (ID: 103)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1386498659849167
    2. '(' → logprob: -3.1386499404907227
    3. 's' → logprob: -4.388649940490723
    4. '(
' → logprob: -4.888649940490723
    5. '括' → logprob: -4.888649940490723
    6. 'def' → logprob: -5.013649940490723
    7. '   ' → logprob: -5.138649940490723
    8. 'n' → logprob: -5.388649940490723
    9. 'parent' → logprob: -5.388649940490723
    10. 'paren' → logprob: -5.513649940490723

Token 122: '環' (ID: 113135)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3527415096759796
    2. 'integer' → logprob: -1.8527414798736572
    3. '   ' → logprob: -3.1027414798736572
    4. '整数' → logprob: -3.7277414798736572
    5. ' integer' → logprob: -4.352741718292236
    6. '括' → logprob: -4.352741718292236
    7. 'num' → logprob: -4.977741718292236
    8. ' #' → logprob: -5.352741718292236
    9. '(' → logprob: -5.727741718292236
    10. 'paren' → logprob: -5.852741718292236

Token 123: '小' (ID: 5820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2741210162639618
    2. '#' → logprob: -2.524121046066284
    3. 'num' → logprob: -3.524121046066284
    4. ')' → logprob: -3.774121046066284
    5. '(' → logprob: -4.024120807647705
    6. 's' → logprob: -4.399120807647705
    7. 'n' → logprob: -5.274120807647705
    8. ' #' → logprob: -5.274120807647705
    9. 'numer' → logprob: -5.274120807647705
    10. 'fraction' → logprob: -5.274120807647705

Token 124: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.36520126461982727
    2. '小' → logprob: -1.6152012348175049
    3. '分' → logprob: -2.240201234817505
    4. 's' → logprob: -7.990201473236084
    5. 'decimal' → logprob: -9.240200996398926
    6. '式' → logprob: -10.615200996398926
    7. '秒' → logprob: -10.615200996398926
    8. '少' → logprob: -11.115200996398926
    9. 'す' → logprob: -11.240200996398926
    10. '1' → logprob: -11.365200996398926

Token 125: 'の' (ID: 3385)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13870444893836975
    2. '(' → logprob: -2.263704538345337
    3. '#' → logprob: -5.138704299926758
    4. ')' → logprob: -5.388704299926758
    5. ' (' → logprob: -5.513704299926758
    6. 's' → logprob: -6.388704299926758
    7. ' #' → logprob: -6.763704299926758
    8. '()' → logprob: -7.138704299926758
    9. '　' → logprob: -7.138704299926758
    10. '(
' → logprob: -7.388704299926758

Token 126: '処' (ID: 158556)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17297129333019257
    2. '処' → logprob: -2.172971248626709
    3. 'pass' → logprob: -4.922971248626709
    4. '(' → logprob: -5.422971248626709
    5. '部分' → logprob: -5.672971248626709
    6. 'parts' → logprob: -5.672971248626709
    7. '   ' → logprob: -5.922971248626709
    8. 'part' → logprob: -5.922971248626709
    9. 's' → logprob: -6.047971248626709
    10. 'start' → logprob: -6.172971248626709

Token 127: '理' (ID: 5584)
  Prédit: '理'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '理' → logprob: -9.491498531133402e-06
    2. '続' → logprob: -12.500009536743164
    3. '```' → logprob: -13.000009536743164
    4. '#' → logprob: -14.750009536743164
    5. 'f' → logprob: -14.875009536743164
    6. 'r' → logprob: -15.000009536743164
    7. 'b' → logprob: -15.125009536743164
    8. 'p' → logprob: -15.500009536743164
    9. '続きを' → logprob: -16.125009536743164
    10. '析' → logprob: -16.250009536743164

Token 128: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6119869947433472
    2. '(' → logprob: -0.8619869947433472
    3. 's' → logprob: -5.111987113952637
    4. ' (' → logprob: -5.361987113952637
    5. 'open' → logprob: -5.986987113952637
    6. 'pass' → logprob: -5.986987113952637
    7. '(
' → logprob: -6.111987113952637
    8. 'import' → logprob: -6.236987113952637
    9. '#' → logprob: -6.236987113952637
    10. ')' → logprob: -6.361987113952637

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16377566754817963
    2. '(' → logprob: -2.663775682449341
    3. 'open' → logprob: -4.038775444030762
    4. ' (' → logprob: -4.163775444030762
    5. ' pass' → logprob: -4.663775444030762
    6. 'pass' → logprob: -5.038775444030762
    7. 'import' → logprob: -5.413775444030762
    8. ' open' → logprob: -5.538775444030762
    9. '    ' → logprob: -6.038775444030762
    10. 's' → logprob: -6.038775444030762

Token 130: ' integer' (ID: 16336)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.442343831062317
    2. 'import' → logprob: -1.567343831062317
    3. 'left' → logprob: -2.1923437118530273
    4. ' l' → logprob: -2.3173437118530273
    5. 'head' → logprob: -3.0673437118530273
    6. 'pass' → logprob: -3.1923437118530273
    7. 'start' → logprob: -3.3173437118530273
    8. 'open' → logprob: -3.3173437118530273
    9. 'pre' → logprob: -3.8173437118530273
    10. 'p' → logprob: -4.192343711853027

Token 131: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0026660270523279905
    2. '_' → logprob: -6.752665996551514
    3. 'part' → logprob: -6.752665996551514
    4. '_parts' → logprob: -8.627666473388672
    5. '部分' → logprob: -9.502666473388672
    6. ',' → logprob: -11.252666473388672
    7. '_pos' → logprob: -11.252666473388672
    8. '_index' → logprob: -11.502666473388672
    9. '_,' → logprob: -11.627666473388672
    10. 'Part' → logprob: -12.377666473388672

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001568545587360859
    2. '=' → logprob: -6.62656831741333
    3. ' =' → logprob: -8.751568794250488
    4. ',num' → logprob: -10.376568794250488
    5. ' ,' → logprob: -10.626568794250488
    6. '、' → logprob: -12.001568794250488
    7. '，' → logprob: -12.251568794250488
    8. '＝' → logprob: -12.501568794250488
    9. ',end' → logprob: -13.251568794250488
    10. ',n' → logprob: -13.501568794250488

Token 133: ' rest' (ID: 2867)
  Prédit: ' rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.5270483493804932
    2. 'rest' → logprob: -2.152048349380493
    3. ' repeating' → logprob: -2.277048349380493
    4. ' remainder' → logprob: -3.027048349380493
    5. 'fraction' → logprob: -3.402048349380493
    6. ' fractional' → logprob: -3.402048349380493
    7. 're' → logprob: -3.777048349380493
    8. ' fraction' → logprob: -3.902048349380493
    9. ' decimal' → logprob: -4.402048110961914
    10. ' repeat' → logprob: -5.152048110961914

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001946725882589817
    2. ' =' → logprob: -6.251946926116943
    3. '＝' → logprob: -11.251946449279785
    4. 's' → logprob: -12.876946449279785
    5. ',' → logprob: -14.376946449279785
    6. 'rest' → logprob: -14.626946449279785
    7. ')' → logprob: -14.751946449279785
    8. 'a' → logprob: -15.626946449279785
    9. '1' → logprob: -15.751946449279785
    10. 'and' → logprob: -16.1269474029541

Token 135: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008077251841314137
    2. ' s' → logprob: -7.125807762145996
    3. 'rest' → logprob: -12.875807762145996
    4. '(s' → logprob: -14.625807762145996
    5. '   ' → logprob: -16.12580680847168
    6. '	s' → logprob: -17.00080680847168
    7. '[' → logprob: -17.37580680847168
    8. ' ' → logprob: -17.62580680847168
    9. 'map' → logprob: -17.62580680847168
    10. 'input' → logprob: -17.75080680847168

Token 136: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10998911410570145
    2. '.split' → logprob: -2.3599891662597656
    3. ' =' → logprob: -4.734989166259766
    4. '.' → logprob: -7.484989166259766
    5. ',' → logprob: -8.734989166259766
    6. 'split' → logprob: -8.859989166259766
    7. '.partition' → logprob: -10.484989166259766
    8. '.replace' → logprob: -10.734989166259766
    9. '.index' → logprob: -11.109989166259766
    10. '.strip' → logprob: -12.234989166259766

Token 137: '('.' (ID: 7925)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.000156577822053805
    2. ''' → logprob: -9.00015640258789
    3. '("("' → logprob: -10.50015640258789
    4. '(' → logprob: -12.37515640258789
    5. '('(' → logprob: -13.87515640258789
    6. '(('' → logprob: -15.62515640258789
    7. '['' → logprob: -17.00015640258789
    8. ' '('' → logprob: -17.00015640258789
    9. '"' → logprob: -17.12515640258789
    10. '__('' → logprob: -17.50015640258789

Token 138: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25596654415130615
    2. '('' → logprob: -2.3809666633605957
    3. ',' → logprob: -3.1309666633605957
    4. '')' → logprob: -3.3809666633605957
    5. '(' → logprob: -3.7559666633605957
    6. ''' → logprob: -4.005966663360596
    7. '(',',' → logprob: -6.130966663360596
    8. 'split' → logprob: -6.380966663360596
    9. '0' → logprob: -6.630966663360596
    10. '',' → logprob: -6.880966663360596

Token 139: '   ' (ID: 271)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.14255286753177643
    2. 're' → logprob: -3.1425528526306152
    3. 'finite' → logprob: -3.3925528526306152
    4. 'repeat' → logprob: -3.7675528526306152
    5. 'rest' → logprob: -4.892552852630615
    6. 'decimal' → logprob: -5.142552852630615
    7. '   ' → logprob: -5.267552852630615
    8. ' non' → logprob: -5.517552852630615
    9. 'period' → logprob: -5.767552852630615
    10. ' repeating' → logprob: -6.392552852630615

Token 140: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' (adapté à ' non') → logprob: -0.06416629254817963
    2. 'decimal' → logprob: -3.314166307449341
    3. 'finite' → logprob: -3.814166307449341
    4. 'if' → logprob: -6.689166069030762
    5. ' non' → logprob: -6.689166069030762
    6. '   ' → logprob: -8.564166069030762
    7. 'fraction' → logprob: -8.564166069030762
    8. ' decimal' → logprob: -9.064166069030762
    9. ' finite' → logprob: -9.439166069030762
    10. 're' → logprob: -9.564166069030762

Token 141: '_re' (ID: 3067)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.05594662204384804
    2. 'repeat' → logprob: -3.3059465885162354
    3. 'rec' → logprob: -4.4309468269348145
    4. '_re' → logprob: -6.1809468269348145
    5. 'rep' → logprob: -6.3059468269348145
    6. 'period' → logprob: -6.9309468269348145
    7. '_repeat' → logprob: -7.1809468269348145
    8. 'rest' → logprob: -10.305946350097656
    9. ' repeating' → logprob: -10.555946350097656
    10. '_rec' → logprob: -11.055946350097656

Token 142: 'peating' (ID: 189297)
  Prédit: 'peating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peating' → logprob: -0.023856543004512787
    2. 'peat' → logprob: -3.8988566398620605
    3. 'p' → logprob: -6.3988566398620605
    4. 'cur' → logprob: -7.1488566398620605
    5. 'c' → logprob: -7.3988566398620605
    6. 'pet' → logprob: -8.773856163024902
    7. 'peated' → logprob: -10.273856163024902
    8. 'pt' → logprob: -10.898856163024902
    9. 'pe' → logprob: -11.773856163024902
    10. 'pit' → logprob: -12.023856163024902

Token 143: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0014101164415478706
    2. ',' → logprob: -6.751410007476807
    3. 'part' → logprob: -8.376410484313965
    4. '_decimal' → logprob: -12.501410484313965
    5. '_parts' → logprob: -12.626410484313965
    6. '_rest' → logprob: -14.376410484313965
    7. 'Part' → logprob: -14.626410484313965
    8. '_period' → logprob: -15.501410484313965
    9. '_str' → logprob: -15.501410484313965
    10. '部分' → logprob: -15.626410484313965

Token 144: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.380904672667384e-05
    2. '、' → logprob: -10.750033378601074
    3. ' ,' → logprob: -12.000033378601074
    4. '，' → logprob: -12.875033378601074
    5. '=' → logprob: -13.000033378601074
    6. ' =' → logprob: -14.875033378601074
    7. ',length' → logprob: -15.500033378601074
    8. ',n' → logprob: -16.12503433227539
    9. 'は' → logprob: -16.37503433227539
    10. 'の' → logprob: -16.37503433227539

Token 145: ' ''
' (ID: 25366)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.00032283025211654603
    2. '''' → logprob: -8.125323295593262
    3. ' rest' → logprob: -11.000323295593262
    4. 's' → logprob: -11.750323295593262
    5. '""' → logprob: -13.375323295593262
    6. '(rest' → logprob: -14.500323295593262
    7. '''
' → logprob: -16.625322341918945
    8. ''' → logprob: -16.750322341918945
    9. ' ''' → logprob: -18.125322341918945
    10. ''''' → logprob: -18.500322341918945

Token 146: '   ' (ID: 271)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.4769805073738098
    2. 'rest' → logprob: -1.476980447769165
    3. 'repeat' → logprob: -3.226980447769165
    4. 'non' → logprob: -3.351980447769165
    5. 'i' → logprob: -3.976980447769165
    6. 'decimal' → logprob: -4.226980686187744
    7. 'for' → logprob: -4.726980686187744
    8. '   ' → logprob: -5.226980686187744
    9. 'temp' → logprob: -5.726980686187744
    10. 'tmp' → logprob: -5.726980686187744

Token 147: ' repeating' (ID: 74481)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.08469730615615845
    2. 'rest' → logprob: -2.8346972465515137
    3. 'repeat' → logprob: -4.084697246551514
    4. ' repeating' → logprob: -6.334697246551514
    5. 'inside' → logprob: -6.959697246551514
    6. 'non' → logprob: -7.084697246551514
    7. 'if' → logprob: -7.709697246551514
    8. 'decimal' → logprob: -7.834697246551514
    9. 'after' → logprob: -8.334697723388672
    10. ' rest' → logprob: -8.959697723388672

Token 148: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.00037037418223917484
    2. '_start' → logprob: -8.375370025634766
    3. 'part' → logprob: -9.125370025634766
    4. '_index' → logprob: -11.125370025634766
    5. '_section' → logprob: -12.875370025634766
    6. ',' → logprob: -13.000370025634766
    7. '_rest' → logprob: -13.125370025634766
    8. '部分' → logprob: -13.250370025634766
    9. '_str' → logprob: -13.750370025634766
    10. ' =' → logprob: -13.875370025634766

Token 149: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11755330860614777
    2. '=' → logprob: -2.242553234100342
    3. ' =' → logprob: -5.367553234100342
    4. ' ,' → logprob: -10.7425537109375
    5. 's' → logprob: -11.6175537109375
    6. '=''' → logprob: -11.9925537109375
    7. ',s' → logprob: -12.9925537109375
    8. '='' → logprob: -13.2425537109375
    9. '<|end|>' → logprob: -13.3675537109375
    10. '<|end|>' → logprob: -13.7425537109375

Token 150: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.048466648906469345
    2. 'rest' → logprob: -3.173466682434082
    3. 's' → logprob: -5.923466682434082
    4. ' ''' → logprob: -6.423466682434082
    5. '""' → logprob: -7.048466682434082
    6. '<|end|>' → logprob: -9.423466682434082
    7. ' rest' → logprob: -10.298466682434082
    8. ''''' → logprob: -10.423466682434082
    9. ''' → logprob: -10.673466682434082
    10. '''
' → logprob: -10.798466682434082

Token 151: '   ' (ID: 271)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.7090307474136353
    2. 'non' → logprob: -0.9590307474136353
    3. '   ' → logprob: -2.8340306282043457
    4. ' non' → logprob: -4.209030628204346
    5. ' rest' → logprob: -4.209030628204346
    6. 'inside' → logprob: -4.834030628204346
    7. 're' → logprob: -5.584030628204346
    8. 'before' → logprob: -5.709030628204346
    9. 'temp' → logprob: -5.709030628204346
    10. 'content' → logprob: -5.959030628204346

Token 152: ' idx' (ID: 14016)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.3647938966751099
    2. 'non' → logprob: -1.3647938966751099
    3. 'i' → logprob: -2.1147937774658203
    4. 'start' → logprob: -2.2397937774658203
    5. 'temp' → logprob: -2.6147937774658203
    6. 'l' → logprob: -2.9897937774658203
    7. 'inside' → logprob: -2.9897937774658203
    8. 'tmp' → logprob: -3.4897937774658203
    9. 'idx' (adapté à ' idx') → logprob: -4.36479377746582
    10. 'left' → logprob: -4.48979377746582

Token 153: '_start' (ID: 10949)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47459614276885986
    2. ' =' → logprob: -0.9745961427688599
    3. '_rest' → logprob: -8.09959602355957
    4. 'rest' → logprob: -9.84959602355957
    5. 'of' → logprob: -9.97459602355957
    6. '_' → logprob: -10.34959602355957
    7. '＝' → logprob: -10.34959602355957
    8. 'equal' → logprob: -11.09959602355957
    9. '_=' → logprob: -11.97459602355957
    10. '_of' → logprob: -12.09959602355957

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10081697255373001
    2. ' =' → logprob: -2.3508169651031494
    3. '_rest' → logprob: -8.10081672668457
    4. 'of' → logprob: -8.97581672668457
    5. ',' → logprob: -9.47581672668457
    6. 'rest' → logprob: -10.22581672668457
    7. ')' → logprob: -11.10081672668457
    8. '_' → logprob: -11.22581672668457
    9. '(rest' → logprob: -11.47581672668457
    10. 'equal' → logprob: -11.97581672668457

Token 155: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.007024850230664015
    2. 's' → logprob: -5.132024765014648
    3. ' rest' → logprob: -6.882024765014648
    4. ' s' → logprob: -9.632024765014648
    5. '1' → logprob: -13.257024765014648
    6. '(rest' → logprob: -14.007024765014648
    7. '0' → logprob: -14.382024765014648
    8. ' ' → logprob: -15.132024765014648
    9. 'rests' → logprob: -15.507024765014648
    10. 'r' → logprob: -16.88202476501465

Token 156: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.04050259664654732
    2. '.index' → logprob: -3.2905025482177734
    3. '.' → logprob: -6.165502548217773
    4. '=' → logprob: -8.415502548217773
    5. ' =' → logprob: -9.665502548217773
    6. 'find' → logprob: -10.415502548217773
    7. ' .' → logprob: -11.165502548217773
    8. 'index' → logprob: -11.290502548217773
    9. 's' → logprob: -12.040502548217773
    10. '.findall' → logprob: -13.040502548217773

Token 157: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0003633521846495569
    2. ''' → logprob: -8.00036334991455
    3. '(' → logprob: -10.87536334991455
    4. '("("' → logprob: -11.75036334991455
    5. ' '('' → logprob: -14.62536334991455
    6. '('(' → logprob: -15.00036334991455
    7. ''(' → logprob: -15.75036334991455
    8. '()' → logprob: -16.500364303588867
    9. '(('' → logprob: -17.000364303588867
    10. ' ('' → logprob: -17.250364303588867

Token 158: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0036835705395787954
    2. '(' → logprob: -5.628683567047119
    3. ''' → logprob: -9.628684043884277
    4. '')' → logprob: -11.253684043884277
    5. ')' → logprob: -13.378684043884277
    6. '()' → logprob: -14.128684043884277
    7. '(',' → logprob: -14.628684043884277
    8. ' (' → logprob: -14.753684043884277
    9. '(\'' → logprob: -14.753684043884277
    10. '(('' → logprob: -14.878684043884277

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005559705663472414
    2. ')+' → logprob: -5.380559921264648
    3. '+' → logprob: -7.130559921264648
    4. ')
' → logprob: -9.380559921264648
    5. '')' → logprob: -10.380559921264648
    6. '0' → logprob: -11.505559921264648
    7. ' )' → logprob: -12.130559921264648
    8. ' +' → logprob: -14.130559921264648
    9. '<|end|>' → logprob: -14.130559921264648
    10. ')

' → logprob: -14.380559921264648

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4336145520210266
    2. 'idx' → logprob: -1.3086144924163818
    3. 'non' → logprob: -2.808614492416382
    4. 'if' → logprob: -4.683614730834961
    5. 'for' → logprob: -5.683614730834961
    6. 'num' → logprob: -5.808614730834961
    7. ')' → logprob: -5.933614730834961
    8. 'rest' → logprob: -7.433614730834961
    9. ' non' → logprob: -7.683614730834961
    10. ' idx' → logprob: -7.683614730834961

Token 161: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' (adapté à ' non') → logprob: -0.0011178308632224798
    2. 'if' → logprob: -6.876117706298828
    3. '   ' → logprob: -10.626117706298828
    4. ' non' → logprob: -10.751117706298828
    5. 'num' → logprob: -11.126117706298828
    6. 'for' → logprob: -11.126117706298828
    7. 'idx' → logprob: -12.501117706298828
    8. 'n' → logprob: -13.501117706298828
    9. '0' → logprob: -14.626117706298828
    10. '#' → logprob: -14.626117706298828

Token 162: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0003566767554730177
    2. 're' → logprob: -8.625356674194336
    3. '_repeat' → logprob: -9.250356674194336
    4. '_part' → logprob: -10.500356674194336
    5. '_' → logprob: -11.000356674194336
    6. '=' → logprob: -11.250356674194336
    7. '_rest' → logprob: -11.250356674194336
    8. '_non' → logprob: -12.625356674194336
    9. ' =' → logprob: -13.375356674194336
    10. '=re' → logprob: -13.500356674194336

Token 163: 'peating' (ID: 189297)
  Prédit: 'peating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peating' → logprob: -0.002966291969642043
    2. 'pe' → logprob: -5.877966403961182
    3. 'peat' → logprob: -9.877965927124023
    4. '_pe' → logprob: -10.002965927124023
    5. 'p' → logprob: -10.252965927124023
    6. 'ating' → logprob: -11.502965927124023
    7. 'e' → logprob: -11.877965927124023
    8. '_' → logprob: -12.002965927124023
    9. '_p' → logprob: -13.252965927124023
    10. 'peated' → logprob: -14.127965927124023

Token 164: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -5.598092684522271e-05
    2. 'part' → logprob: -10.125056266784668
    3. '=' → logprob: -11.375056266784668
    4. '_' → logprob: -13.125056266784668
    5. ' =' → logprob: -13.875056266784668
    6. '_parts' → logprob: -14.750056266784668
    7. '_rest' → logprob: -15.750056266784668
    8. '_piece' → logprob: -15.875056266784668
    9. ' part' → logprob: -16.00005531311035
    10. 'Part' → logprob: -16.12505531311035

Token 165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014165511354804039
    2. ' =' → logprob: -4.26416540145874
    3. '+=' → logprob: -13.389165878295898
    4. ' +=' → logprob: -15.889165878295898
    5. '＝' → logprob: -16.2641658782959
    6. ',' → logprob: -16.6391658782959
    7. '=

' → logprob: -16.7641658782959
    8. '=}' → logprob: -16.8891658782959
    9. '.=' → logprob: -17.3891658782959
    10. 's' → logprob: -18.2641658782959

Token 166: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.0005530327325686812
    2. ' rest' → logprob: -7.500553131103516
    3. '(rest' → logprob: -17.750553131103516
    4. '   ' → logprob: -19.250553131103516
    5. ' ' → logprob: -20.000553131103516
    6. 'ret' → logprob: -21.250553131103516
    7. 're' → logprob: -21.250553131103516
    8. 'res' → logprob: -22.000553131103516
    9. 'Rest' → logprob: -22.000553131103516
    10. ' ' → logprob: -22.000553131103516

Token 167: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0001805377542041242
    2. '[' → logprob: -9.2501802444458
    3. ':' → logprob: -9.5001802444458
    4. '0' → logprob: -11.6251802444458
    5. '   ' → logprob: -15.0001802444458
    6. '[:]' → logprob: -16.375181198120117
    7. '[:-' → logprob: -16.875181198120117
    8. '][:' → logprob: -17.500181198120117
    9. '       ' → logprob: -17.625181198120117
    10. 'idx' → logprob: -17.750181198120117

Token 168: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -3.128163257315464e-07
    2. ' idx' → logprob: -15.5
    3. '	idx' → logprob: -19.0
    4. '_idx' → logprob: -19.375
    5. '0' → logprob: -20.625
    6. '(idx' → logprob: -20.875
    7. 'index' → logprob: -21.25
    8. '[idx' → logprob: -22.375
    9. '.idx' → logprob: -22.5
    10. 'Idx' → logprob: -22.75

Token 169: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.003633923130109906
    2. 'start' → logprob: -5.628633975982666
    3. '(' → logprob: -11.378633499145508
    4. 'Start' → logprob: -11.378633499145508
    5. ')' → logprob: -12.503633499145508
    6. '_START' → logprob: -12.878633499145508
    7. '0' → logprob: -13.628633499145508
    8. '_' → logprob: -14.753633499145508
    9. '(start' → logprob: -15.003633499145508
    10. '[' → logprob: -15.378633499145508

Token 170: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11783112585544586
    2. ']' → logprob: -2.367831230163574
    3. '<|end|>' → logprob: -4.617831230163574
    4. ')
' → logprob: -5.742831230163574
    5. '<|end|>' → logprob: -6.117831230163574
    6. '   ' → logprob: -6.617831230163574
    7. '
' → logprob: -8.367831230163574
    8. ']
' → logprob: -8.742831230163574
    9. ' )' → logprob: -8.867831230163574
    10. ')]' → logprob: -10.117831230163574

Token 171: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00985702220350504
    2. '   ' → logprob: -5.009857177734375
    3. 're' → logprob: -6.634857177734375
    4. ')' → logprob: -6.759857177734375
    5. ' idx' → logprob: -7.884857177734375
    6. 'repeat' → logprob: -9.259857177734375
    7. 'rest' → logprob: -10.134857177734375
    8. '    
' → logprob: -10.259857177734375
    9. 'end' → logprob: -10.884857177734375
    10. '')' → logprob: -11.134857177734375

Token 172: ' repeating' (ID: 74481)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.02145521529018879
    2. 're' → logprob: -3.8964552879333496
    3. ' idx' → logprob: -7.77145528793335
    4. 'repeat' → logprob: -8.146454811096191
    5. 'end' → logprob: -9.271454811096191
    6. '   ' → logprob: -10.521454811096191
    7. 'rep' → logprob: -11.146454811096191
    8. 'rest' → logprob: -11.646454811096191
    9. 'closing' → logprob: -11.896454811096191
    10. 'non' → logprob: -12.146454811096191

Token 173: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -1.27099974633893e-05
    2. '_' → logprob: -12.500012397766113
    3. '_parts' → logprob: -12.750012397766113
    4. 'part' → logprob: -12.875012397766113
    5. '_str' → logprob: -13.750012397766113
    6. '_start' → logprob: -14.250012397766113
    7. '_period' → logprob: -15.125012397766113
    8. '_p' → logprob: -15.750012397766113
    9. '_piece' → logprob: -16.00001335144043
    10. '_text' → logprob: -16.37501335144043

Token 174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048528365790844
    2. ' =' → logprob: -4.511048316955566
    3. '＝' → logprob: -14.761048316955566
    4. ',' → logprob: -15.761048316955566
    5. '+=' → logprob: -16.636049270629883
    6. '=}' → logprob: -16.636049270629883
    7. 's' → logprob: -17.761049270629883
    8. '.=' → logprob: -17.886049270629883
    9. '=

' → logprob: -19.761049270629883
    10. ' +=' → logprob: -20.011049270629883

Token 175: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.005234002135694027
    2. ' rest' → logprob: -5.2552337646484375
    3. '(rest' → logprob: -15.380233764648438
    4. '   ' → logprob: -17.880233764648438
    5. ' ' → logprob: -19.505233764648438
    6. '.rest' → logprob: -20.130233764648438
    7. '_rest' → logprob: -20.755233764648438
    8. 're' → logprob: -21.130233764648438
    9. 'Rest' → logprob: -21.380233764648438
    10. 'r' → logprob: -21.755233764648438

Token 176: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.843177233240567e-05
    2. '[' → logprob: -11.250018119812012
    3. '[(' → logprob: -12.875018119812012
    4. '[len' → logprob: -13.500018119812012
    5. 'idx' → logprob: -14.000018119812012
    6. '(idx' → logprob: -15.250018119812012
    7. '[
' → logprob: -16.250019073486328
    8. '[:' → logprob: -17.000019073486328
    9. '[:-' → logprob: -17.375019073486328
    10. '```' → logprob: -17.375019073486328

Token 177: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.001501175225712359
    2. '+' → logprob: -7.751501083374023
    3. 'start' → logprob: -7.751501083374023
    4. '_idx' → logprob: -8.001501083374023
    5. 'idx' → logprob: -8.751501083374023
    6. ')' → logprob: -9.501501083374023
    7. '(idx' → logprob: -10.876501083374023
    8. '[idx' → logprob: -11.626501083374023
    9. 'Start' → logprob: -11.751501083374023
    10. '_end' → logprob: -12.126501083374023

Token 178: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01279168576002121
    2. ' +' → logprob: -4.512791633605957
    3. '1' → logprob: -6.387791633605957
    4. '(' → logprob: -9.887791633605957
    5. '()+' → logprob: -12.887791633605957
    6. '＋' → logprob: -13.262791633605957
    7. '[' → logprob: -13.637791633605957
    8. '+(' → logprob: -14.012791633605957
    9. '+')' → logprob: -14.137791633605957
    10. '('' → logprob: -14.137791633605957

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.000003814697266
    3. 'len' → logprob: -13.750003814697266
    4. '0' → logprob: -15.250003814697266
    5. ')' → logprob: -16.875003814697266
    6. '2' → logprob: -16.875003814697266
    7. '   ' → logprob: -17.500003814697266
    8. 's' → logprob: -17.875003814697266
    9. '')' → logprob: -18.125003814697266
    10. '```' → logprob: -18.375003814697266

Token 180: ':-' (ID: 20118)
  Prédit: ':-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.0037361837457865477
    2. ':' → logprob: -5.6287360191345215
    3. ':]' → logprob: -10.12873649597168
    4. ':end' → logprob: -10.25373649597168
    5. ' :' → logprob: -10.50373649597168
    6. ']' → logprob: -11.25373649597168
    7. ':].' → logprob: -11.50373649597168
    8. '[:-' → logprob: -12.25373649597168
    9. ' :-' → logprob: -12.75373649597168
    10. '-' → logprob: -14.87873649597168

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. ')' → logprob: -18.5
    4. '１' → logprob: -19.125
    5. '```' → logprob: -20.0
    6. '   ' → logprob: -20.375
    7. '``' → logprob: -20.625
    8. '')' → logprob: -21.5
    9. '2' → logprob: -21.5
    10. '۱' → logprob: -21.75

Token 182: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010597254149615765
    2. ']' → logprob: -7.251059532165527
    3. '<|end|>' → logprob: -8.626059532165527
    4. '']' → logprob: -9.876059532165527
    5. '')' → logprob: -9.876059532165527
    6. '   ' → logprob: -10.001059532165527
    7. '<|end|>' → logprob: -12.501059532165527
    8. '#' → logprob: -12.751059532165527
    9. ' )' → logprob: -12.876059532165527
    10. '）' → logprob: -12.876059532165527

Token 183: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9886047840118408
    2. 'n' → logprob: -1.9886047840118408
    3. 'a' → logprob: -2.363604784011841
    4. 'numer' → logprob: -2.863604784011841
    5. 'non' → logprob: -2.863604784011841
    6. 'A' → logprob: -3.113604784011841
    7. 'if' → logprob: -3.113604784011841
    8. '#' → logprob: -3.363604784011841
    9. 'r' → logprob: -3.488604784011841
    10. 'integer' → logprob: -3.988604784011841

Token 184: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0204648971557617
    2. 'non' → logprob: -1.1454648971557617
    3. 'a' → logprob: -1.8954648971557617
    4. 'A' → logprob: -2.7704648971557617
    5. 'p' → logprob: -3.2704648971557617
    6. '#' (adapté à ' #') → logprob: -3.7704648971557617
    7. 'len' → logprob: -4.395464897155762
    8. 'n' → logprob: -4.770464897155762
    9. 'num' → logprob: -5.145464897155762
    10. 'nr' → logprob: -5.145464897155762

Token 185: ' ' (ID: 220)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.6572087407112122
    2. 'if' → logprob: -1.4072086811065674
    3. 'a' → logprob: -2.7822086811065674
    4. '#' → logprob: -2.7822086811065674
    5. 'A' → logprob: -3.5322086811065674
    6. 'len' → logprob: -3.6572086811065674
    7. 'n' → logprob: -4.2822089195251465
    8. 'p' → logprob: -4.6572089195251465
    9. 'integer' → logprob: -4.7822089195251465
    10. 'nr' → logprob: -5.1572089195251465

Token 186: '公式' (ID: 31269)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.918018639087677
    2. 'if' → logprob: -1.2930185794830322
    3. 'a' → logprob: -1.9180185794830322
    4. 'integer' → logprob: -2.9180185794830322
    5. 'A' → logprob: -3.4180185794830322
    6. '#' → logprob: -3.4180185794830322
    7. 'len' → logprob: -3.9180185794830322
    8. 'n' → logprob: -4.543018817901611
    9. 'num' → logprob: -4.668018817901611
    10. 'int' → logprob: -5.168018817901611

Token 187: 'によ' (ID: 158777)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8092620968818665
    2. 'numer' → logprob: -1.9342620372772217
    3. 'num' → logprob: -2.1842620372772217
    4. 'n' → logprob: -2.3092620372772217
    5. '#' → logprob: -2.6842620372772217
    6. ' numerator' → logprob: -3.6842620372772217
    7. ' n' → logprob: -4.059262275695801
    8. ' num' → logprob: -4.309262275695801
    9. 'a' → logprob: -4.309262275695801
    10. ' #' → logprob: -4.559262275695801

Token 188: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.12270798534154892
    2. 'り' → logprob: -2.8727080821990967
    3. 'ります' → logprob: -3.6227080821990967
    4. 'れば' → logprob: -4.997707843780518
    5. 'て' → logprob: -5.122707843780518
    6. 'って' → logprob: -5.122707843780518
    7. '#' → logprob: -5.747707843780518
    8. 'れ' → logprob: -6.122707843780518
    9. 'ず' → logprob: -6.747707843780518
    10. 'す' → logprob: -7.122707843780518

Token 189: '分' (ID: 2957)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.24725206196308136
    2. '#' → logprob: -3.1222519874572754
    3. 'num' → logprob: -3.1222519874572754
    4. 'non' → logprob: -3.4972519874572754
    5. 'if' → logprob: -3.7472519874572754
    6. '整数' → logprob: -3.8722519874572754
    7. '非' → logprob: -4.122251987457275
    8. '分' → logprob: -4.247251987457275
    9. 'n' → logprob: -4.622251987457275
    10. 'integer' → logprob: -5.372251987457275

Token 190: '数' (ID: 7135)
  Prédit: '子'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '子' → logprob: -0.017969882115721703
    2. '母' → logprob: -4.142970085144043
    3. '数' → logprob: -6.267970085144043
    4. 'num' → logprob: -11.267970085144043
    5. '解' → logprob: -11.267970085144043
    6. 'numer' → logprob: -12.142970085144043
    7. '```' → logprob: -13.767970085144043
    8. '#' → logprob: -14.267970085144043
    9. '割' → logprob: -14.392970085144043
    10. 'm' → logprob: -14.392970085144043

Token 191: '化' (ID: 11415)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -1.2133378982543945
    2. '   ' → logprob: -1.5883378982543945
    3. ' =' → logprob: -2.0883378982543945
    4. '=' → logprob: -2.5883378982543945
    5. 'の' → logprob: -2.7133378982543945
    6. 'num' → logprob: -2.8383378982543945
    7. '部分' → logprob: -3.0883378982543945
    8. 'n' → logprob: -3.3383378982543945
    9. 'a' → logprob: -4.2133378982543945
    10. '_n' → logprob: -4.3383378982543945

Token 192: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8854585886001587
    2. 'non' → logprob: -1.8854585886001587
    3. 'n' → logprob: -2.010458469390869
    4. 'a' → logprob: -2.760458469390869
    5. 'numer' → logprob: -3.010458469390869
    6. 'if' → logprob: -3.385458469390869
    7. 'p' → logprob: -3.510458469390869
    8. 'nr' → logprob: -3.885458469390869
    9. 'l' → logprob: -4.010458469390869
    10. 'integer' → logprob: -4.260458469390869

Token 193: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1678167581558228
    2. 'non' → logprob: -1.4178167581558228
    3. 'if' → logprob: -2.292816638946533
    4. 'n' → logprob: -2.417816638946533
    5. 'A' → logprob: -2.917816638946533
    6. 'numer' → logprob: -3.167816638946533
    7. '   ' → logprob: -3.292816638946533
    8. 'nr' → logprob: -3.417816638946533
    9. 'p' → logprob: -3.792816638946533
    10. 'integer' → logprob: -3.917816638946533

Token 194: ' a' (ID: 261)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.4593227803707123
    2. 'a' (adapté à ' a') → logprob: -1.4593228101730347
    3. 'A' → logprob: -3.334322690963745
    4. 'if' → logprob: -3.459322690963745
    5. 'n' → logprob: -3.584322690963745
    6. 'num' → logprob: -4.334322929382324
    7. 'nr' → logprob: -4.834322929382324
    8. 'numer' → logprob: -4.834322929382324
    9. 'integer' → logprob: -5.709322929382324
    10. '#' → logprob: -6.084322929382324

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2060401290655136
    2. ' =' → logprob: -1.7060401439666748
    3. '=int' → logprob: -5.456039905548096
    4. ',' → logprob: -8.831040382385254
    5. 'int' → logprob: -9.956040382385254
    6. 'integer' → logprob: -10.331040382385254
    7. 'b' → logprob: -10.581040382385254
    8. 'num' → logprob: -11.206040382385254
    9. '=num' → logprob: -11.331040382385254
    10. '＝' → logprob: -11.831040382385254

Token 196: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.8087270038668066e-05
    2. ' int' → logprob: -10.500027656555176
    3. '10' → logprob: -15.250027656555176
    4. ' ' → logprob: -16.125028610229492
    5. '   ' → logprob: -17.000028610229492
    6. '(int' → logprob: -17.250028610229492
    7. '0' → logprob: -17.250028610229492
    8. '[int' → logprob: -17.625028610229492
    9. 'num' → logprob: -17.750028610229492
    10. 'integer' → logprob: -17.875028610229492

Token 197: '(integer' (ID: 191023)
  Prédit: '(integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(integer' → logprob: -0.0005724519141949713
    2. '(non' → logprob: -7.875572681427002
    3. 'integer' → logprob: -8.625572204589844
    4. '(' → logprob: -12.625572204589844
    5. '(in' → logprob: -12.625572204589844
    6. ' integer' → logprob: -13.000572204589844
    7. '(int' → logprob: -13.750572204589844
    8. '(n' → logprob: -14.375572204589844
    9. '((' → logprob: -14.625572204589844
    10. '(f' → logprob: -14.750572204589844

Token 198: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.007737466599792242
    2. 'integer' → logprob: -5.257737636566162
    3. 'part' → logprob: -6.382737636566162
    4. '(integer' → logprob: -7.257737636566162
    5. '_integer' → logprob: -10.382737159729004
    6. 'non' → logprob: -10.382737159729004
    7. 'Part' → logprob: -10.632737159729004
    8. ')' → logprob: -12.632737159729004
    9. '_parts' → logprob: -12.632737159729004
    10. '_non' → logprob: -13.132737159729004

Token 199: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016856512520462275
    2. ')*' → logprob: -7.001685619354248
    3. ')
' → logprob: -7.626685619354248
    4. 'if' → logprob: -9.251686096191406
    5. '+' → logprob: -9.501686096191406
    6. ' )' → logprob: -10.501686096191406
    7. ' or' → logprob: -10.501686096191406
    8. ' if' → logprob: -11.126686096191406
    9. ' +' → logprob: -11.376686096191406
    10. ')*(' → logprob: -11.626686096191406

Token 200: ' if' (ID: 538)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.026122048497200012
    2. ' *' → logprob: -4.401122093200684
    3. '   ' → logprob: -4.776122093200684
    4. '*(' → logprob: -6.026122093200684
    5. '<|end|>' → logprob: -6.901122093200684
    6. ')' → logprob: -7.776122093200684
    7. 'if' → logprob: -7.901122093200684
    8. '  ' → logprob: -8.276122093200684
    9. '=' → logprob: -9.276122093200684
    10. '    
' → logprob: -9.276122093200684

Token 201: ' integer' (ID: 16336)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.049189940094947815
    2. ' integer' → logprob: -3.049190044403076
    3. 'len' → logprob: -7.674190044403076
    4. ' len' → logprob: -10.049189567565918
    5. 'int' → logprob: -10.549189567565918
    6. '(integer' → logprob: -10.674189567565918
    7. 'True' → logprob: -11.299189567565918
    8. ' ' → logprob: -11.674189567565918
    9. 'true' → logprob: -12.924189567565918
    10. 's' → logprob: -13.049189567565918

Token 202: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.00819526705890894
    2. 'else' → logprob: -5.508195400238037
    3. '>' → logprob: -6.258195400238037
    4. 'part' → logprob: -7.508195400238037
    5. 'Part' → logprob: -8.508194923400879
    6. '!=' → logprob: -8.883194923400879
    7. ' ' → logprob: -9.008194923400879
    8. 'isdigit' → logprob: -9.008194923400879
    9. 'if' → logprob: -9.258194923400879
    10. 'is' → logprob: -9.258194923400879

Token 203: ' else' (ID: 1203)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.17680004239082336
    2. 'else' → logprob: -2.551800012588501
    3. '>=' → logprob: -2.926800012588501
    4. '>' → logprob: -3.926800012588501
    5. ' !=' → logprob: -4.67680025100708
    6. '==' → logprob: -7.42680025100708
    7. ' else' → logprob: -7.55180025100708
    8. ' >=' → logprob: -9.176799774169922
    9. ' >' → logprob: -9.301799774169922
    10. '=' → logprob: -10.051799774169922

Token 204: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '０' → logprob: -17.375911712646484
    4. ' ' → logprob: -17.375911712646484
    5. '  ' → logprob: -18.063411712646484
    6. '۰' → logprob: -18.313411712646484
    7. '   ' → logprob: -18.500911712646484
    8. '"' → logprob: -19.313411712646484
    9. '1' → logprob: -20.250911712646484
    10. '
' → logprob: -20.563411712646484

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '０' → logprob: -19.625001907348633
    4. '"' → logprob: -20.375001907348633
    5. '۰' → logprob: -20.625001907348633
    6. '1' → logprob: -21.312501907348633
    7. ' ' → logprob: -21.750001907348633
    8. '00' → logprob: -21.937501907348633
    9. '   ' → logprob: -22.125001907348633
    10. ''' → logprob: -22.312501907348633

Token 206: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16225820779800415
    2. '*' → logprob: -3.4122581481933594
    3. ' *' → logprob: -3.4122581481933594
    4. ')' → logprob: -3.6622581481933594
    5. 'n' → logprob: -3.9122581481933594
    6. 'b' → logprob: -4.287258148193359
    7. 'num' → logprob: -5.037258148193359
    8. '    
' → logprob: -5.787258148193359
    9. '
' → logprob: -6.287258148193359
    10. '<|end|>' → logprob: -6.287258148193359

Token 207: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.41835811734199524
    2. '   ' → logprob: -1.6683580875396729
    3. 'n' → logprob: -2.793358087539673
    4. 'p' → logprob: -3.043358087539673
    5. ' b' → logprob: -4.793358325958252
    6. 'non' → logprob: -4.918358325958252
    7. 'r' → logprob: -5.168358325958252
    8. 'if' → logprob: -5.668358325958252
    9. 'm' → logprob: -5.668358325958252
    10. ' n' → logprob: -6.043358325958252

Token 208: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.46830853819847107
    2. 'non' → logprob: -1.9683085680007935
    3. 'p' → logprob: -2.218308448791504
    4. 'n' → logprob: -2.843308448791504
    5. 'nr' → logprob: -3.843308448791504
    6. 'if' → logprob: -4.093308448791504
    7. 'x' → logprob: -4.718308448791504
    8. 'm' → logprob: -4.718308448791504
    9. 'k' → logprob: -5.343308448791504
    10. 'B' → logprob: -6.468308448791504

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17991980910301208
    2. ' =' → logprob: -1.8049198389053345
    3. '=int' → logprob: -8.804920196533203
    4. 'non' → logprob: -12.429920196533203
    5. 'num' → logprob: -12.554920196533203
    6. '1' → logprob: -12.679920196533203
    7. 'int' → logprob: -12.804920196533203
    8. 'a' → logprob: -12.929920196533203
    9. '   ' → logprob: -13.554920196533203
    10. 'b' → logprob: -13.554920196533203

Token 210: ' non' (ID: 2893)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0012202250072732568
    2. '0' → logprob: -7.001220226287842
    3. ' int' → logprob: -8.251219749450684
    4. 'non' → logprob: -10.001219749450684
    5. ' ' → logprob: -14.251219749450684
    6. '10' → logprob: -14.751219749450684
    7. '   ' → logprob: -14.876219749450684
    8. '(int' → logprob: -15.251219749450684
    9. '1' → logprob: -15.251219749450684
    10. 'len' → logprob: -15.376219749450684

Token 211: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -9.722539834911004e-05
    2. 're' → logprob: -9.375097274780273
    3. '_repeat' → logprob: -11.750097274780273
    4. '_rep' → logprob: -13.250097274780273
    5. 'int' → logprob: -13.875097274780273
    6. '=' → logprob: -14.625097274780273
    7. 'rep' → logprob: -14.875097274780273
    8. 'repeat' → logprob: -15.500097274780273
    9. '=int' → logprob: -15.875097274780273
    10. '0' → logprob: -16.250097274780273

Token 212: 'peating' (ID: 189297)
  Prédit: 'peating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peating' → logprob: -0.016042228788137436
    2. 'pe' → logprob: -4.641042232513428
    3. 'part' → logprob: -5.766042232513428
    4. 'p' → logprob: -5.891042232513428
    5. 'peat' → logprob: -9.14104175567627
    6. 'ating' → logprob: -9.26604175567627
    7. 'pt' → logprob: -9.89104175567627
    8. 'pet' → logprob: -10.89104175567627
    9. '_part' → logprob: -11.14104175567627
    10. 'e' → logprob: -11.14104175567627

Token 213: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0006457181880250573
    2. 'part' → logprob: -7.375645637512207
    3. '_length' → logprob: -11.375645637512207
    4. '_len' → logprob: -13.125645637512207
    5. 'int' → logprob: -13.625645637512207
    6. '_num' → logprob: -13.750645637512207
    7. 'len' → logprob: -14.375645637512207
    8. 'num' → logprob: -14.625645637512207
    9. 'length' → logprob: -14.750645637512207
    10. ' part' → logprob: -14.750645637512207

Token 214: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3060029447078705
    2. 'if' → logprob: -1.4310029745101929
    3. '+' → logprob: -4.431003093719482
    4. ' or' → logprob: -5.181003093719482
    5. ' +' → logprob: -6.181003093719482
    6. '<|end|>' → logprob: -6.556003093719482
    7. '<|end|>' → logprob: -6.681003093719482
    8. '   ' → logprob: -7.056003093719482
    9. '  ' → logprob: -8.556002616882324
    10. 'num' → logprob: -8.681002616882324

Token 215: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05465013161301613
    2. '   ' → logprob: -3.054650068283081
    3. ' c' → logprob: -5.80465030670166
    4. 'if' → logprob: -6.80465030670166
    5. ' if' → logprob: -6.92965030670166
    6. ' and' → logprob: -7.30465030670166
    7. 'n' → logprob: -10.17965030670166
    8. ',' → logprob: -10.17965030670166
    9. ' =' → logprob: -10.17965030670166
    10. 'and' → logprob: -10.17965030670166

Token 216: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.010938874445855618
    2. ' c' → logprob: -5.38593864440918
    3. '   ' → logprob: -5.38593864440918
    4. 'k' → logprob: -7.13593864440918
    5. 'n' → logprob: -8.13593864440918
    6. 'if' → logprob: -8.38593864440918
    7. 'p' → logprob: -9.13593864440918
    8. 'l' → logprob: -9.38593864440918
    9. 'r' → logprob: -9.38593864440918
    10. ' if' → logprob: -10.63593864440918

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142357051372528
    2. ' =' → logprob: -1.7014235258102417
    3. '=int' → logprob: -11.576423645019531
    4. ' ' → logprob: -15.451423645019531
    5. '＝' → logprob: -15.576423645019531
    6. '=}' → logprob: -16.20142364501953
    7. '=

' → logprob: -16.95142364501953
    8. 'a' → logprob: -16.95142364501953
    9. '=len' → logprob: -17.07642364501953
    10. ',' → logprob: -17.45142364501953

Token 218: ' repeating' (ID: 74481)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.010326950810849667
    2. ' repeating' → logprob: -4.635326862335205
    3. 'int' → logprob: -7.510326862335205
    4. ' int' → logprob: -11.260327339172363
    5. 'repeat' → logprob: -12.135327339172363
    6. 'Repe' → logprob: -13.885327339172363
    7. '   ' → logprob: -14.135327339172363
    8. 'rep' → logprob: -14.385327339172363
    9. ' ' → logprob: -14.510327339172363
    10. ' repe' → logprob: -14.885327339172363

Token 219: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.001929228543303907
    2. 'part' → logprob: -6.25192928314209
    3. 'Part' → logprob: -15.37692928314209
    4. '	part' → logprob: -16.251928329467773
    5. ' part' → logprob: -16.501928329467773
    6. '-part' → logprob: -16.626928329467773
    7. '(part' → logprob: -16.876928329467773
    8. '_' → logprob: -17.376928329467773
    9. '_parts' → logprob: -18.001928329467773
    10. 'spart' → logprob: -18.126928329467773

Token 220: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06164819002151489
    2. 'n' → logprob: -3.68664813041687
    3. '    
' → logprob: -4.561648368835449
    4. 'num' → logprob: -4.686648368835449
    5. 'numer' → logprob: -5.311648368835449
    6. ')' → logprob: -5.811648368835449
    7. '
' → logprob: -6.186648368835449
    8. 'length' → logprob: -6.686648368835449
    9. ' numerator' → logprob: -6.936648368835449
    10. 'a' → logprob: -8.06164836883545

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3857797086238861
    2. '    
' → logprob: -2.135779619216919
    3. 'num' → logprob: -2.260779619216919
    4. 'numer' → logprob: -3.010779619216919
    5. 'n' → logprob: -3.635779619216919
    6. 'b' → logprob: -5.135779857635498
    7. 'if' → logprob: -5.635779857635498
    8. '
' → logprob: -6.135779857635498
    9. ' numerator' → logprob: -6.260779857635498
    10. ')' → logprob: -6.510779857635498

Token 222: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6512197852134705
    2. 'p' → logprob: -1.6512198448181152
    3. 'b' → logprob: -2.1512198448181152
    4. '   ' → logprob: -3.0262198448181152
    5. 'nb' → logprob: -3.1512198448181152
    6. 'numer' → logprob: -3.9012198448181152
    7. 'len' → logprob: -4.276219844818115
    8. 'num' → logprob: -4.901219844818115
    9. 'non' → logprob: -4.901219844818115
    10. 'n' → logprob: -4.901219844818115

Token 223: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.8341018557548523
    2. 'b' → logprob: -1.834101915359497
    3. ' len' → logprob: -1.834101915359497
    4. ' c' → logprob: -2.209101915359497
    5. ' not' → logprob: -2.709101915359497
    6. 'len' → logprob: -3.459101915359497
    7. 'c' → logprob: -3.709101915359497
    8. ' non' → logprob: -4.834101676940918
    9. 'not' → logprob: -5.959101676940918
    10. 'non' → logprob: -6.334101676940918

Token 224: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023728489875793457
    2. ' ==' → logprob: -4.023728370666504
    3. ':' → logprob: -5.398728370666504
    4. '=' → logprob: -7.398728370666504
    5. '!=' → logprob: -8.898728370666504
    6. ''' → logprob: -9.023728370666504
    7. '=='' → logprob: -10.273728370666504
    8. ' !=' → logprob: -10.648728370666504
    9. '':' → logprob: -10.773728370666504
    10. '''' → logprob: -10.898728370666504

Token 225: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0487019419670105
    2. ''' → logprob: -3.0487020015716553
    3. '"":' → logprob: -9.923702239990234
    4. '""' → logprob: -10.298702239990234
    5. '"' → logprob: -11.423702239990234
    6. ' '' → logprob: -11.548702239990234
    7. ' '':
' → logprob: -11.923702239990234
    8. ' ''' → logprob: -13.173702239990234
    9. '':' → logprob: -13.923702239990234
    10. '''.' → logprob: -14.173702239990234

Token 226: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8657815456390381
    2. '   ' → logprob: -1.240781545639038
    3. '       ' → logprob: -1.365781545639038
    4. 'n' → logprob: -4.490781784057617
    5. 'num' → logprob: -4.740781784057617
    6. 'numer' → logprob: -4.740781784057617
    7. ' b' → logprob: -5.865781784057617
    8. '0' → logprob: -6.865781784057617
    9. '    ' → logprob: -7.865781784057617
    10. ' numerator' → logprob: -8.115781784057617

Token 227: ' b' (ID: 287)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.156287670135498
    2. 'numer' → logprob: -1.531287670135498
    3. 'num' → logprob: -1.906287670135498
    4. 'b' (adapté à ' b') → logprob: -2.656287670135498
    5. 'x' → logprob: -2.906287670135498
    6. 'n' → logprob: -3.281287670135498
    7. '   ' → logprob: -3.406287670135498
    8. 'nb' → logprob: -3.656287670135498
    9. '       ' → logprob: -3.656287670135498
    10. 'a' → logprob: -4.156287670135498

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020890454470645636
    2. ' =' → logprob: -8.500208854675293
    3. '='' → logprob: -12.625208854675293
    4. '0' → logprob: -13.375208854675293
    5. 'num' → logprob: -15.125208854675293
    6. ''=' → logprob: -17.00020980834961
    7. ',' → logprob: -17.37520980834961
    8. ''' → logprob: -17.37520980834961
    9. '_num' → logprob: -17.50020980834961
    10. 'b' → logprob: -17.75020980834961

Token 229: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011771318968385458
    2. '0' → logprob: -7.0011773109436035
    3. '"' → logprob: -8.251176834106445
    4. ' '' → logprob: -12.501176834106445
    5. '''' → logprob: -14.626176834106445
    6. ''a' → logprob: -15.751176834106445
    7. ''z' → logprob: -16.751176834106445
    8. ' ' → logprob: -16.876176834106445
    9. ''A' → logprob: -17.001176834106445
    10. '`' → logprob: -18.126176834106445

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ''' → logprob: -12.500003814697266
    3. '"' → logprob: -16.875003814697266
    4. '')' → logprob: -17.125003814697266
    5. '00' → logprob: -17.625003814697266
    6. ' ' → logprob: -17.750003814697266
    7. '０' → logprob: -17.875003814697266
    8. '''' → logprob: -18.250003814697266
    9. ')' → logprob: -18.875003814697266
    10. '""' → logprob: -19.250003814697266

Token 231: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0036081476137042046
    2. ''
' → logprob: -5.628608226776123
    3. ''

' → logprob: -12.378607749938965
    4. '')' → logprob: -13.628607749938965
    5. '   ' → logprob: -13.753607749938965
    6. '<|end|>' → logprob: -14.753607749938965
    7. '"' → logprob: -15.253607749938965
    8. ')' → logprob: -15.503607749938965
    9. '<|end|>' → logprob: -15.878607749938965
    10. ')'' → logprob: -15.878607749938965

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43962424993515015
    2. 'n' → logprob: -1.439624309539795
    3. 'm' → logprob: -3.564624309539795
    4. '    
' → logprob: -3.814624309539795
    5. 'a' → logprob: -4.439624309539795
    6. 'num' → logprob: -4.689624309539795
    7. 'length' → logprob: -5.314624309539795
    8. '
' → logprob: -5.314624309539795
    9. ')' → logprob: -5.439624309539795
    10. ' n' → logprob: -5.564624309539795

Token 233: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14003796875476837
    2. 'n' (adapté à ' n') → logprob: -3.140038013458252
    3. 'a' → logprob: -3.765038013458252
    4. '    
' → logprob: -4.640038013458252
    5. 'm' → logprob: -5.015038013458252
    6. ' n' → logprob: -5.015038013458252
    7. 'b' → logprob: -5.140038013458252
    8. 'num' → logprob: -5.265038013458252
    9. 'A' → logprob: -5.390038013458252
    10. ' a' → logprob: -6.015038013458252

Token 234: ' =' (ID: 314)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7258538007736206
    2. ' =' → logprob: -0.9758538007736206
    3. '_b' → logprob: -2.72585391998291
    4. 'on' → logprob: -3.72585391998291
    5. '_non' → logprob: -3.97585391998291
    6. '=' → logprob: -4.47585391998291
    7. 'n' → logprob: -4.97585391998291
    8. 'um' → logprob: -5.10085391998291
    9. '1' → logprob: -5.85085391998291
    10. 'non' → logprob: -6.97585391998291

Token 235: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00026300468016415834
    2. ' len' → logprob: -8.250263214111328
    3. '(len' → logprob: -13.500263214111328
    4. '	len' → logprob: -16.375263214111328
    5. '[len' → logprob: -16.375263214111328
    6. '=len' → logprob: -17.000263214111328
    7. '   ' → logprob: -17.250263214111328
    8. ' ' → logprob: -17.250263214111328
    9. '10' → logprob: -17.375263214111328
    10. '0' → logprob: -17.875263214111328

Token 236: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.014497706666588783
    2. '(c' → logprob: -4.389497756958008
    3. '(non' → logprob: -6.639497756958008
    4. 'b' → logprob: -7.389497756958008
    5. 'non' → logprob: -10.389497756958008
    6. '(n' → logprob: -11.389497756958008
    7. '(re' → logprob: -12.014497756958008
    8. 'c' → logprob: -12.139497756958008
    9. '(a' → logprob: -13.389497756958008
    10. '(' → logprob: -13.389497756958008

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014183246530592442
    2. ')
' → logprob: -4.264183044433594
    3. ' )' → logprob: -11.514183044433594
    4. '+' → logprob: -13.139183044433594
    5. ')

' → logprob: -13.514183044433594
    6. '')' → logprob: -13.514183044433594
    7. '   ' → logprob: -13.764183044433594
    8. '<|end|>' → logprob: -14.014183044433594
    9. ')+' → logprob: -14.389183044433594
    10. ' )
' → logprob: -14.514183044433594

Token 238: '   ' (ID: 271)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.023278674110770226
    2. 'k' → logprob: -4.523278713226318
    3. ' m' → logprob: -4.898278713226318
    4. 'r' → logprob: -5.773278713226318
    5. '   ' → logprob: -7.273278713226318
    6. ' k' → logprob: -8.39827823638916
    7. 'p' → logprob: -8.64827823638916
    8. 'l' → logprob: -8.77327823638916
    9. '```' → logprob: -9.77327823638916
    10. 'c' → logprob: -9.77327823638916

Token 239: ' k' (ID: 372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.42167285084724426
    2. 'b' → logprob: -2.046672821044922
    3. 'p' → logprob: -3.171672821044922
    4. 'a' → logprob: -3.296672821044922
    5. 'x' → logprob: -3.671672821044922
    6. '   ' → logprob: -3.671672821044922
    7. 'if' → logprob: -3.921672821044922
    8. 'n' → logprob: -4.546672821044922
    9. 'non' → logprob: -4.671672821044922
    10. 'r' → logprob: -4.921672821044922

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025489568710327
    2. '=' → logprob: -1.910254955291748
    3. '=len' → logprob: -10.53525447845459
    4. '=k' → logprob: -13.66025447845459
    5. ' ' → logprob: -13.78525447845459
    6. '=int' → logprob: -13.91025447845459
    7. '＝' → logprob: -15.16025447845459
    8. '<|end|>' → logprob: -15.66025447845459
    9. 'k' → logprob: -16.035255432128906
    10. 'len' → logprob: -16.285255432128906

Token 241: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01815052703022957
    2. ' len' → logprob: -4.018150329589844
    3. '(len' → logprob: -14.768150329589844
    4. '=len' → logprob: -16.893150329589844
    5. '	len' → logprob: -16.893150329589844
    6. ' ' → logprob: -17.018150329589844
    7. '[len' → logprob: -17.518150329589844
    8. '   ' → logprob: -18.268150329589844
    9. '  ' → logprob: -19.018150329589844
    10. ' ' → logprob: -19.518150329589844

Token 242: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.214019307051785e-05
    2. 'c' → logprob: -10.375032424926758
    3. '(' → logprob: -14.750032424926758
    4. '©' → logprob: -15.250032424926758
    5. '(re' → logprob: -16.250032424926758
    6. ')c' → logprob: -16.750032424926758
    7. '(C' → logprob: -17.000032424926758
    8. '(k' → logprob: -17.375032424926758
    9. '[c' → logprob: -17.875032424926758
    10. ' (' → logprob: -18.875032424926758

Token 243: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.000763510703109e-05
    2. ')
' → logprob: -10.250040054321289
    3. ' )' → logprob: -13.875040054321289
    4. '<|end|>' → logprob: -14.000040054321289
    5. '<|end|>' → logprob: -14.625040054321289
    6. '   ' → logprob: -14.625040054321289
    7. ')

' → logprob: -14.875040054321289
    8. '')' → logprob: -15.000040054321289
    9. '+' → logprob: -15.125040054321289
    10. ')n' → logprob: -16.25004005432129

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33611515164375305
    2. 'numer' → logprob: -2.0861151218414307
    3. 'num' → logprob: -2.8361151218414307
    4. 'a' → logprob: -3.5861151218414307
    5. 'p' → logprob: -3.5861151218414307
    6. 'A' → logprob: -4.21111536026001
    7. 'if' → logprob: -4.83611536026001
    8. '    
' → logprob: -4.96111536026001
    9. ' numerator' → logprob: -5.33611536026001
    10. 'b' → logprob: -5.33611536026001

Token 245: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.01738703250885
    2. 'numer' → logprob: -1.01738703250885
    3. 'A' → logprob: -2.1423869132995605
    4. 'if' → logprob: -2.6423869132995605
    5. 'p' → logprob: -3.3923869132995605
    6. 'B' → logprob: -4.2673869132995605
    7. 'b' → logprob: -4.8923869132995605
    8. 'a' → logprob: -5.5173869132995605
    9. 'non' → logprob: -5.5173869132995605
    10. 'part' → logprob: -5.6423869132995605

Token 246: ' 分' (ID: 17301)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.6046003699302673
    2. 'if' → logprob: -1.479600429534912
    3. 'num' → logprob: -2.354600429534912
    4. 'A' → logprob: -2.729600429534912
    5. 'p' → logprob: -3.604600429534912
    6. 'non' → logprob: -3.979600429534912
    7. 'B' → logprob: -5.229600429534912
    8. 'b' → logprob: -5.479600429534912
    9. 'from' → logprob: -6.229600429534912
    10. 'pow' → logprob: -6.479600429534912

Token 247: '子' (ID: 7407)
  Prédit: '子'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '子' → logprob: -0.0003049570368602872
    2. '母' → logprob: -8.62530517578125
    3. 'num' → logprob: -10.50030517578125
    4. '_' → logprob: -10.75030517578125
    5. 'numer' → logprob: -10.75030517578125
    6. '1' → logprob: -11.62530517578125
    7. '=' → logprob: -11.75030517578125
    8. '子的' → logprob: -12.12530517578125
    9. '_n' → logprob: -12.37530517578125
    10. '0' → logprob: -12.50030517578125

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06251722574234009
    2. ' =' → logprob: -2.8125171661376953
    3. 'num' → logprob: -8.312517166137695
    4. 'numer' → logprob: -8.437517166137695
    5. ' numerator' → logprob: -10.437517166137695
    6. 'umerator' → logprob: -10.812517166137695
    7. '=(' → logprob: -11.687517166137695
    8. '=num' → logprob: -11.812517166137695
    9. '=
' → logprob: -11.812517166137695
    10. '=int' → logprob: -12.312517166137695

Token 249: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.022127771750092506
    2. 'int' → logprob: -3.897127866744995
    3. '(a' → logprob: -6.897127628326416
    4. 'g' → logprob: -8.147128105163574
    5. ' a' → logprob: -9.147128105163574
    6. '(int' → logprob: -9.397128105163574
    7. '(' → logprob: -10.147128105163574
    8. ' int' → logprob: -10.897128105163574
    9. '10' → logprob: -11.272128105163574
    10. 'num' → logprob: -11.647128105163574

Token 250: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.27477937936782837
    2. ' *' → logprob: -1.7747793197631836
    3. '*(' → logprob: -2.6497793197631836
    4. '**' → logprob: -10.024779319763184
    5. '*((' → logprob: -11.274779319763184
    6. ' *(' → logprob: -12.899779319763184
    7. ' ' → logprob: -13.149779319763184
    8. 's' → logprob: -13.524779319763184
    9. '＊' → logprob: -13.899779319763184
    10. ' ' → logprob: -13.899779319763184

Token 251: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2520621418952942
    2. '(' → logprob: -1.5020620822906494
    3. ' ' → logprob: -9.87706184387207
    4. ' (' → logprob: -10.00206184387207
    5. 'pow' → logprob: -10.62706184387207
    6. '
' → logprob: -12.62706184387207
    7. '(pow' → logprob: -13.00206184387207
    8. '((' → logprob: -13.12706184387207
    9. '   ' → logprob: -13.12706184387207
    10. 'den' → logprob: -14.62706184387207

Token 252: '^(' (ID: 32612)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6443527936935425
    2. 'n' → logprob: -0.7693527936935425
    3. '**' → logprob: -4.644352912902832
    4. '{' → logprob: -7.394352912902832
    5. '^{' → logprob: -7.394352912902832
    6. 'k' → logprob: -8.144352912902832
    7. '(' → logprob: -9.019352912902832
    8. ' (' → logprob: -9.394352912902832
    9. '​' → logprob: -9.519352912902832
    10. '{{' → logprob: -9.894352912902832

Token 253: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002217818982899189
    2. '(n' → logprob: -6.127217769622803
    3. 'k' → logprob: -11.127218246459961
    4. '(' → logprob: -12.002218246459961
    5. ' n' → logprob: -12.002218246459961
    6. ' (' → logprob: -13.502218246459961
    7. '{' → logprob: -14.127218246459961
    8. '```' → logprob: -14.127218246459961
    9. 'nk' → logprob: -14.252218246459961
    10. '[n' → logprob: -14.752218246459961

Token 254: '+k' (ID: 110434)
  Prédit: '+k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.002491706982254982
    2. '+' → logprob: -6.877491474151611
    3. 'k' → logprob: -6.877491474151611
    4. 'n' → logprob: -8.12749195098877
    5. '+n' → logprob: -9.50249195098877
    6. 'plus' → logprob: -11.00249195098877
    7. ' +' → logprob: -11.75249195098877
    8. '```' → logprob: -11.87749195098877
    9. '+
' → logprob: -12.00249195098877
    10. '
' → logprob: -12.37749195098877

Token 255: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6817946434020996
    2. '+' → logprob: -1.4317946434020996
    3. '+k' → logprob: -1.6817946434020996
    4. ')+' → logprob: -3.0567946434020996
    5. ' +' → logprob: -4.1817946434021
    6. '+n' → logprob: -5.4317946434021
    7. '+)' → logprob: -6.4317946434021
    8. ' )' → logprob: -8.806795120239258
    9. ')+(' → logprob: -8.931795120239258
    10. '```' → logprob: -8.931795120239258

Token 256: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1479332447052002
    2. '*' → logprob: -2.5229332447052
    3. ')' → logprob: -3.3979332447052
    4. ' +' → logprob: -4.647933006286621
    5. '*(' → logprob: -5.272933006286621
    6. ' -' → logprob: -5.397933006286621
    7. '+' → logprob: -6.272933006286621
    8. ' )' → logprob: -7.147933006286621
    9. ')*(' → logprob: -7.272933006286621
    10. ')*' → logprob: -7.272933006286621

Token 257: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12738348543643951
    2. '1' → logprob: -2.1273834705352783
    3. '(' → logprob: -8.0023832321167
    4. ' ' → logprob: -9.1273832321167
    5. '0' → logprob: -12.7523832321167
    6. ' (' → logprob: -13.1273832321167
    7. ')' → logprob: -13.1273832321167
    8. '   ' → logprob: -13.2523832321167
    9. 'den' → logprob: -14.2523832321167
    10. '```' → logprob: -14.2523832321167

Token 258: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003066222125198692
    2. '(' → logprob: -8.625307083129883
    3. '1' → logprob: -9.125307083129883
    4. 'n' → logprob: -11.875307083129883
    5. ' ' → logprob: -12.750307083129883
    6. '0' → logprob: -12.750307083129883
    7. '(n' → logprob: -13.125307083129883
    8. '
' → logprob: -13.875307083129883
    9. '```' → logprob: -14.625307083129883
    10. '100' → logprob: -14.625307083129883

Token 259: '^' (ID: 61)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.027428654953837395
    2. 'n' → logprob: -3.90242862701416
    3. '^(' → logprob: -5.40242862701416
    4. '**' → logprob: -6.52742862701416
    5. '^' → logprob: -7.77742862701416
    6. '^{' → logprob: -8.02742862701416
    7. '(' → logprob: -9.52742862701416
    8. ' (' → logprob: -10.65242862701416
    9. ' n' → logprob: -11.65242862701416
    10. '*(' → logprob: -11.77742862701416

Token 260: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.045823566731997e-05
    2. '(n' → logprob: -11.375020027160645
    3. 'k' → logprob: -12.500020027160645
    4. ' n' → logprob: -13.000020027160645
    5. '(' → logprob: -13.375020027160645
    6. '_n' → logprob: -14.375020027160645
    7. 'nk' → logprob: -15.625020027160645
    8. ')' → logprob: -15.875020027160645
    9. ')n' → logprob: -16.00002098083496
    10. '^' → logprob: -16.62502098083496

Token 261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020678257569670677
    2. ' )' → logprob: -6.377068042755127
    3. ')-' → logprob: -8.877067565917969
    4. ' -' → logprob: -9.127067565917969
    5. '-' → logprob: -9.502067565917969
    6. ')+' → logprob: -11.502067565917969
    7. '）' → logprob: -11.877067565917969
    8. '+' → logprob: -12.502067565917969
    9. ' ' → logprob: -12.502067565917969
    10. '-)' → logprob: -12.752067565917969

Token 262: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10307206958532333
    2. '+' → logprob: -2.728072166442871
    3. ' -' → logprob: -3.728072166442871
    4. ')' → logprob: -5.603072166442871
    5. '-' → logprob: -5.978072166442871
    6. ' ' → logprob: -7.603072166442871
    7. '   ' → logprob: -7.728072166442871
    8. ' *' → logprob: -7.853072166442871
    9. 'num' → logprob: -8.103072166442871
    10. '*' → logprob: -8.853072166442871

Token 263: ' b' (ID: 287)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20534449815750122
    2. '(int' → logprob: -1.9553444385528564
    3. ' int' → logprob: -3.5803444385528564
    4. ' (' → logprob: -4.3303446769714355
    5. '(' → logprob: -6.2053446769714355
    6. 'a' → logprob: -7.7053446769714355
    7. '(a' → logprob: -8.455344200134277
    8. '(
' → logprob: -9.330344200134277
    9. 'num' → logprob: -9.330344200134277
    10. '[int' → logprob: -9.580344200134277

Token 264: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20292530953884125
    2. '*' → logprob: -1.8279253244400024
    3. '*(' → logprob: -3.952925205230713
    4. ' -' → logprob: -6.327925205230713
    5. ')' → logprob: -7.327925205230713
    6. '(' → logprob: -8.327925682067871
    7. '-' → logprob: -8.452925682067871
    8. ' +' → logprob: -8.577925682067871
    9. '10' → logprob: -8.952925682067871
    10. ' ' → logprob: -9.202925682067871

Token 265: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931696534156799
    2. '10' → logprob: -0.6931696534156799
    3. 'pow' → logprob: -11.818169593811035
    4. ' (' → logprob: -12.068169593811035
    5. ' ' → logprob: -12.568169593811035
    6. '   ' → logprob: -13.568169593811035
    7. '```' → logprob: -13.568169593811035
    8. '9' → logprob: -14.068169593811035
    9. '
' → logprob: -14.693169593811035
    10. '(pow' → logprob: -14.693169593811035

Token 266: '^' (ID: 61)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.017552267760038376
    2. '**' → logprob: -4.142552375793457
    3. '^' → logprob: -6.642552375793457
    4. ' k' → logprob: -9.892552375793457
    5. '{k' → logprob: -9.892552375793457
    6. '*k' → logprob: -10.392552375793457
    7. '```' → logprob: -10.517552375793457
    8. '(k' → logprob: -10.642552375793457
    9. '^{' → logprob: -11.767552375793457
    10. 'к' → logprob: -12.642552375793457

Token 267: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.015305552864447e-05
    2. 'n' → logprob: -9.750060081481934
    3. '(k' → logprob: -14.000060081481934
    4. '(n' → logprob: -15.000060081481934
    5. ' k' → logprob: -15.375060081481934
    6. '(' → logprob: -16.00006103515625
    7. '```' → logprob: -16.12506103515625
    8. 'к' → logprob: -16.37506103515625
    9. '{k' → logprob: -17.00006103515625
    10. 'nk' → logprob: -17.25006103515625

Token 268: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.15198959410190582
    2. ')' → logprob: -2.151989698410034
    3. '-' → logprob: -3.776989698410034
    4. ' )' → logprob: -7.026989459991455
    5. ')-' → logprob: -7.151989459991455
    6. '+' → logprob: -9.401989936828613
    7. ' ' → logprob: -10.401989936828613
    8. '-)' → logprob: -10.776989936828613
    9. ')-(' → logprob: -11.151989936828613
    10. ' +' → logprob: -11.776989936828613

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008618119172751904
    2. '0' → logprob: -4.758618354797363
    3. ' ' → logprob: -12.633618354797363
    4. '```' → logprob: -15.758618354797363
    5. '10' → logprob: -17.258617401123047
    6. ')' → logprob: -17.383617401123047
    7. '
' → logprob: -17.633617401123047
    8. '100' → logprob: -18.508617401123047
    9. '3' → logprob: -18.508617401123047
    10. '9' → logprob: -18.633617401123047

Token 270: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001309286686591804
    2. ' )' → logprob: -6.751309394836426
    3. ')+' → logprob: -9.751309394836426
    4. ')-' → logprob: -10.751309394836426
    5. '）' → logprob: -11.001309394836426
    6. '-' → logprob: -11.126309394836426
    7. ' -' → logprob: -11.751309394836426
    8. '+' → logprob: -12.126309394836426
    9. '')' → logprob: -12.376309394836426
    10. ' ' → logprob: -13.751309394836426

Token 271: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7503190636634827
    2. ')' → logprob: -0.8753190636634827
    3. '+' → logprob: -2.375319004058838
    4. ' )' → logprob: -5.500319004058838
    5. ' -' → logprob: -5.500319004058838
    6. '-' → logprob: -6.125319004058838
    7. 'num' → logprob: -6.375319004058838
    8. '   ' → logprob: -6.875319004058838
    9. ')+' → logprob: -6.875319004058838
    10. '(' → logprob: -7.000319004058838

Token 272: ' c' (ID: 274)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0340496301651001
    2. 'c' → logprob: -3.4090495109558105
    3. ' int' → logprob: -8.159049987792969
    4. '(int' → logprob: -9.159049987792969
    5. ' c' → logprob: -12.659049987792969
    6. '(' → logprob: -13.159049987792969
    7. '0' → logprob: -13.409049987792969
    8. '<int' → logprob: -13.534049987792969
    9. '[int' → logprob: -13.909049987792969
    10. '=int' → logprob: -14.284049987792969

Token 273: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3298090100288391
    2. 'num' → logprob: -2.0798089504241943
    3. 'numer' → logprob: -2.5798089504241943
    4. ')' → logprob: -3.7048089504241943
    5. ' +' → logprob: -4.329809188842773
    6. 'n' → logprob: -4.829809188842773
    7. ' numerator' → logprob: -4.829809188842773
    8. '\n' → logprob: -5.829809188842773
    9. '
' → logprob: -5.954809188842773
    10. '+' → logprob: -6.204809188842773

Token 274: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6529135704040527
    2. '(' → logprob: -1.4029135704040527
    3. 'num' → logprob: -2.6529135704040527
    4. '**' → logprob: -3.1529135704040527
    5. ' (' → logprob: -3.4029135704040527
    6. '[' → logprob: -3.5279135704040527
    7. '   ' → logprob: -4.402913570404053
    8. '(
' → logprob: -5.402913570404053
    9. '(num' → logprob: -5.402913570404053
    10. ' ' → logprob: -5.652913570404053

Token 275: ' numerator' (ID: 149054)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.8189396262168884
    2. 'numer' → logprob: -1.3189396858215332
    3. '(' → logprob: -1.9439396858215332
    4. ')' → logprob: -3.443939685821533
    5. '\n' → logprob: -3.568939685821533
    6. ' numerator' → logprob: -3.693939685821533
    7. ' (' → logprob: -3.818939685821533
    8. ' num' → logprob: -4.818939685821533
    9. '(
' → logprob: -5.568939685821533
    10. ' ' → logprob: -5.693939685821533

Token 276: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038042064756155014
    2. '=' → logprob: -3.2880420684814453
    3. '＝' → logprob: -15.038042068481445
    4. ' =(' → logprob: -15.788042068481445
    5. ' ' → logprob: -16.538042068481445
    6. ' ' → logprob: -18.038042068481445
    7. '=int' → logprob: -18.413042068481445
    8. ' =
' → logprob: -18.663042068481445
    9. '=(' → logprob: -19.038042068481445
    10. ',' → logprob: -19.038042068481445

Token 277: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01817464828491211
    2. ' a' → logprob: -4.018174648284912
    3. '   ' → logprob: -10.64317512512207
    4. '	a' → logprob: -15.14317512512207
    5. 'int' → logprob: -15.64317512512207
    6. '(a' → logprob: -15.64317512512207
    7. ' ' → logprob: -15.64317512512207
    8. ' (' → logprob: -16.76817512512207
    9. '10' → logprob: -17.14317512512207
    10. '    ' → logprob: -17.14317512512207

Token 278: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01175013929605484
    2. '*' → logprob: -4.511750221252441
    3. '*(' → logprob: -7.261750221252441
    4. ' *(' → logprob: -16.261749267578125
    5. ' ' → logprob: -16.636749267578125
    6. '*((' → logprob: -17.136749267578125
    7. ' ' → logprob: -17.761749267578125
    8. '   ' → logprob: -18.136749267578125
    9. '**' → logprob: -19.136749267578125
    10. '  ' → logprob: -19.636749267578125

Token 279: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0043501295149326324
    2. ' (' → logprob: -5.754350185394287
    3. '((' → logprob: -6.754350185394287
    4. ' ((' → logprob: -12.254349708557129
    5. '10' → logprob: -14.004349708557129
    6. '(pow' → logprob: -15.754349708557129
    7. '(
' → logprob: -16.379350662231445
    8. '   ' → logprob: -16.629350662231445
    9. ' ' → logprob: -17.254350662231445
    10. '(((' → logprob: -17.879350662231445

Token 280: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10026145726442337
    2. '(' → logprob: -2.3502614498138428
    3. 'pow' → logprob: -9.850261688232422
    4. '(pow' → logprob: -13.600261688232422
    5. ' ' → logprob: -14.725261688232422
    6. ' (' → logprob: -14.975261688232422
    7. '((' → logprob: -18.600261688232422
    8. '100' → logprob: -19.225261688232422
    9. '
' → logprob: -19.475261688232422
    10. ' pow' → logprob: -19.600261688232422

Token 281: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0001246348983841017
    2. ' **' → logprob: -9.00012493133545
    3. '(n' → logprob: -14.37512493133545
    4. '^(' → logprob: -15.50012493133545
    5. '**)' → logprob: -15.62512493133545
    6. '*(' → logprob: -16.875123977661133
    7. ')**' → logprob: -17.125123977661133
    8. '^{' → logprob: -19.000123977661133
    9. '```' → logprob: -19.250123977661133
    10. '(' → logprob: -19.375123977661133

Token 282: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.8908587662735954e-05
    2. ' (' → logprob: -11.625019073486328
    3. '(' → logprob: -11.750019073486328
    4. 'n' → logprob: -13.125019073486328
    5. '((' → logprob: -17.750019073486328
    6. '   ' → logprob: -18.750019073486328
    7. '
' → logprob: -18.875019073486328
    8. '{' → logprob: -19.250019073486328
    9. '(
' → logprob: -20.000019073486328
    10. '（' → logprob: -20.125019073486328

Token 283: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006719871424138546
    2. '(n' → logprob: -5.006720066070557
    3. ' n' → logprob: -12.506719589233398
    4. '(' → logprob: -15.131719589233398
    5. ' (' → logprob: -15.131719589233398
    6. '   ' → logprob: -15.256719589233398
    7. '	n' → logprob: -17.6317195892334
    8. '{' → logprob: -18.1317195892334
    9. '```' → logprob: -18.6317195892334
    10. '_n' → logprob: -19.0067195892334

Token 284: '+k' (ID: 110434)
  Prédit: '+k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.014648552983999252
    2. '+' → logprob: -4.2646484375
    3. ' +' → logprob: -8.2646484375
    4. '+n' → logprob: -8.6396484375
    5. '(' → logprob: -10.6396484375
    6. 'k' → logprob: -12.1396484375
    7. '+
' → logprob: -12.1396484375
    8. '+(' → logprob: -12.2646484375
    9. '(n' → logprob: -12.3896484375
    10. '(k' → logprob: -12.8896484375

Token 285: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.228561349213123e-05
    2. ')-' → logprob: -10.625052452087402
    3. ' )' → logprob: -10.875052452087402
    4. '}' → logprob: -12.125052452087402
    5. ']' → logprob: -13.250052452087402
    6. '```' → logprob: -14.500052452087402
    7. ' -' → logprob: -15.000052452087402
    8. '-' → logprob: -15.625052452087402
    9. ' ' → logprob: -15.875052452087402
    10. '）' → logprob: -16.250051498413086

Token 286: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006719871424138546
    2. '-' → logprob: -5.006720066070557
    3. ')' → logprob: -12.506719589233398
    4. ' ' → logprob: -14.381719589233398
    5. ' )' → logprob: -16.8817195892334
    6. ' ' → logprob: -17.1317195892334
    7. '-)' → logprob: -17.3817195892334
    8. '```' → logprob: -17.5067195892334
    9. '−' → logprob: -17.6317195892334
    10. '   ' → logprob: -17.8817195892334

Token 287: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '(' → logprob: -16.875123977661133
    4. '   ' → logprob: -17.250123977661133
    5. ')' → logprob: -18.250123977661133
    6. '100' → logprob: -18.500123977661133
    7. '  ' → logprob: -18.500123977661133
    8. '```' → logprob: -19.625123977661133
    9. '1' → logprob: -20.125123977661133
    10. '<|end|>' → logprob: -20.250123977661133

Token 288: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.50001335144043
    3. '(' → logprob: -12.75001335144043
    4. '   ' → logprob: -17.00001335144043
    5. ')' → logprob: -17.12501335144043
    6. '
' → logprob: -18.12501335144043
    7. '```' → logprob: -18.62501335144043
    8. '  ' → logprob: -18.75001335144043
    9. '1' → logprob: -19.00001335144043
    10. 'pow' → logprob: -19.12501335144043

Token 289: '**' (ID: 410)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5786297917366028
    2. '**' → logprob: -0.8286297917366028
    3. ' n' → logprob: -6.578629970550537
    4. '(n' → logprob: -6.828629970550537
    5. '^' → logprob: -8.828629493713379
    6. '*n' → logprob: -10.453629493713379
    7. '**)' → logprob: -11.828629493713379
    8. '```' → logprob: -11.953629493713379
    9. ')n' → logprob: -11.953629493713379
    10. ')' → logprob: -12.453629493713379

Token 290: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000522650487255305
    2. '(n' → logprob: -7.625522613525391
    3. '(' → logprob: -10.75052261352539
    4. ' n' → logprob: -11.25052261352539
    5. '_n' → logprob: -16.25052261352539
    6. ' (' → logprob: -17.00052261352539
    7. '	n' → logprob: -17.25052261352539
    8. '   ' → logprob: -17.87552261352539
    9. ')n' → logprob: -18.00052261352539
    10. '{' → logprob: -18.37552261352539

Token 291: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040934275602921844
    2. ' )' → logprob: -7.875409126281738
    3. ')+' → logprob: -10.500409126281738
    4. '）' → logprob: -14.000409126281738
    5. '+' → logprob: -15.250409126281738
    6. ' +' → logprob: -15.750409126281738
    7. ')+(' → logprob: -16.500410079956055
    8. ' ' → logprob: -16.750410079956055
    9. '")' → logprob: -16.750410079956055
    10. ')
' → logprob: -16.875410079956055

Token 292: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740804135799408
    2. '+' → logprob: -0.9740804433822632
    3. '＋' → logprob: -14.099080085754395
    4. ' plus' → logprob: -14.224080085754395
    5. '+(' → logprob: -14.849080085754395
    6. '+b' → logprob: -15.349080085754395
    7. '<|end|>' → logprob: -15.474080085754395
    8. ' ' → logprob: -15.599080085754395
    9. '+
' → logprob: -15.974080085754395
    10. ' +
' → logprob: -15.974080085754395

Token 293: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.588793960167095e-05
    2. ' int' → logprob: -9.500076293945312
    3. '(int' → logprob: -13.875076293945312
    4. '   ' → logprob: -18.125076293945312
    5. '[int' → logprob: -18.750076293945312
    6. '<int' → logprob: -18.875076293945312
    7. '  ' → logprob: -19.875076293945312
    8. ' ' → logprob: -20.125076293945312
    9. '	int' → logprob: -20.250076293945312
    10. '(' → logprob: -21.000076293945312

Token 294: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -8.542423165636137e-05
    2. 'b' → logprob: -9.375085830688477
    3. '(str' → logprob: -15.125085830688477
    4. '(' → logprob: -15.500085830688477
    5. '(c' → logprob: -17.000085830688477
    6. '((' → logprob: -17.250085830688477
    7. '(B' → logprob: -19.875085830688477
    8. '	b' → logprob: -20.125085830688477
    9. '(a' → logprob: -20.250085830688477
    10. '('' → logprob: -20.250085830688477

Token 295: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007962901145219803
    2. ')*(' → logprob: -5.132962703704834
    3. ')*' → logprob: -6.257962703704834
    4. '*(' → logprob: -9.632963180541992
    5. '*' → logprob: -10.132963180541992
    6. '*)' → logprob: -11.757963180541992
    7. '   ' → logprob: -13.382963180541992
    8. ' )' → logprob: -13.757963180541992
    9. '")' → logprob: -15.007963180541992
    10. '`)' → logprob: -15.257963180541992

Token 296: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0019287518225610256
    2. '(' → logprob: -6.251928806304932
    3. ' ' → logprob: -16.376928329467773
    4. 'pow' → logprob: -18.501928329467773
    5. ' (' → logprob: -18.501928329467773
    6. '
' → logprob: -19.626928329467773
    7. '   ' → logprob: -21.001928329467773
    8. '```' → logprob: -22.376928329467773
    9. 'int' → logprob: -22.626928329467773
    10. '(pow' → logprob: -22.751928329467773

Token 297: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00016837897419463843
    2. 'k' → logprob: -8.750168800354004
    3. '^' → logprob: -11.875168800354004
    4. '*k' → logprob: -13.000168800354004
    5. '{k' → logprob: -15.250168800354004
    6. '```' → logprob: -15.750168800354004
    7. ' **' → logprob: -15.875168800354004
    8. '(k' → logprob: -16.750167846679688
    9. '*' → logprob: -16.875167846679688
    10. '[k' → logprob: -17.000167846679688

Token 298: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. ' k' → logprob: -16.875
    3. '(k' → logprob: -20.625
    4. '{k' → logprob: -20.875
    5. '   ' → logprob: -21.0
    6. 'kx' → logprob: -21.5
    7. '
' → logprob: -21.75
    8. '(' → logprob: -22.625
    9. '6' → logprob: -22.625
    10. '	k' → logprob: -22.875

Token 299: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47408080101013184
    2. '-' → logprob: -0.9740808010101318
    3. ')' → logprob: -12.849081039428711
    4. ')-' → logprob: -14.599081039428711
    5. '–' → logprob: -15.224081039428711
    6. '−' → logprob: -15.724081039428711
    7. '()-' → logprob: -16.09908103942871
    8. ' ' → logprob: -16.34908103942871
    9. '<|end|>' → logprob: -16.97408103942871
    10. ' ' → logprob: -17.09908103942871

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '１' → logprob: -23.625
    4. '0' → logprob: -24.375
    5. '   ' → logprob: -24.375
    6. '```' → logprob: -25.0
    7. '۱' → logprob: -25.25
    8. ')' → logprob: -26.0
    9. '
' → logprob: -26.125
    10. ' ' → logprob: -27.375

Token 301: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010650822659954429
    2. ')+' → logprob: -6.876065254211426
    3. ' )' → logprob: -10.626065254211426
    4. '+' → logprob: -11.876065254211426
    5. ' +' → logprob: -14.001065254211426
    6. '+)' → logprob: -15.751065254211426
    7. '）' → logprob: -16.12606430053711
    8. ')+(' → logprob: -17.62606430053711
    9. '')' → logprob: -19.25106430053711
    10. ']' → logprob: -19.37606430053711

Token 302: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740773141384125
    2. '+' → logprob: -0.9740773439407349
    3. '＋' → logprob: -15.849077224731445
    4. '+c' → logprob: -16.599077224731445
    5. '+
' → logprob: -17.349077224731445
    6. ' ' → logprob: -18.099077224731445
    7. ' +
' → logprob: -18.099077224731445
    8. ' plus' → logprob: -18.599077224731445
    9. ' ' → logprob: -18.724077224731445
    10. '+r' → logprob: -18.849077224731445

Token 303: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001234428636962548
    2. ' int' → logprob: -9.000123023986816
    3. '<int' → logprob: -20.250123977661133
    4. '(int' → logprob: -21.750123977661133
    5. '	int' → logprob: -22.375123977661133
    6. '[int' → logprob: -23.000123977661133
    7. '=int' → logprob: -23.375123977661133
    8. '   ' → logprob: -23.375123977661133
    9. 'ints' → logprob: -23.625123977661133
    10. '  ' → logprob: -23.750123977661133

Token 304: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -12.000006675720215
    3. 'c' → logprob: -14.000006675720215
    4. ' (' → logprob: -18.12500762939453
    5. '©' → logprob: -18.37500762939453
    6. ')c' → logprob: -18.62500762939453
    7. '(C' → logprob: -19.12500762939453
    8. '(
' → logprob: -19.25000762939453
    9. '	c' → logprob: -20.62500762939453
    10. '()' → logprob: -21.37500762939453

Token 305: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ')
' → logprob: -13.375003814697266
    3. ' )' → logprob: -13.875003814697266
    4. '<|end|>' → logprob: -14.250003814697266
    5. ')}' → logprob: -14.500003814697266
    6. '}' → logprob: -15.875003814697266
    7. ')}}' → logprob: -16.250003814697266
    8. '))' → logprob: -16.875003814697266
    9. ')#' → logprob: -17.375003814697266
    10. ')return' → logprob: -17.500003814697266

Token 306: '   ' (ID: 271)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.5889258980751038
    2. '   ' → logprob: -0.8389258980751038
    3. ' denominator' → logprob: -4.463925838470459
    4. '    
' → logprob: -7.463925838470459
    5. ')' → logprob: -8.213926315307617
    6. 'numer' → logprob: -8.963926315307617
    7. ' den' → logprob: -9.713926315307617
    8. '
' → logprob: -9.963926315307617
    9. '    ' → logprob: -10.088926315307617
    10. ',' → logprob: -10.088926315307617

Token 307: ' denominator' (ID: 101279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7055935859680176
    2. 'den' → logprob: -0.8305935859680176
    3. ' denominator' → logprob: -2.7055935859680176
    4. ')' → logprob: -7.455593585968018
    5. ' den' → logprob: -7.580593585968018
    6. 'numer' → logprob: -7.830593585968018
    7. '    
' → logprob: -7.955593585968018
    8. ',' → logprob: -8.45559310913086
    9. '#' → logprob: -8.45559310913086
    10. '    ' → logprob: -8.58059310913086

Token 308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. '＝' → logprob: -15.724077224731445
    4. ' ' → logprob: -18.849077224731445
    5. ' =(' → logprob: -18.974077224731445
    6. '=(' → logprob: -19.099077224731445
    7. 's' → logprob: -19.349077224731445
    8. ')' → logprob: -19.599077224731445
    9. '=
' → logprob: -19.974077224731445
    10. '```' → logprob: -20.599077224731445

Token 309: ' (' (ID: 350)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10034199804067612
    2. '(' → logprob: -2.350342035293579
    3. ' ' → logprob: -9.100341796875
    4. ' (' → logprob: -10.725341796875
    5. '   ' → logprob: -13.600341796875
    6. '  ' → logprob: -16.475341796875
    7. '((' → logprob: -16.600341796875
    8. 'int' → logprob: -16.600341796875
    9. '     ' → logprob: -17.350341796875
    10. '    ' → logprob: -17.475341796875

Token 310: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.955703818472102e-05
    2. '(' → logprob: -9.750059127807617
    3. ' ' → logprob: -13.625059127807617
    4. '   ' → logprob: -17.125059127807617
    5. ' (' → logprob: -18.750059127807617
    6. ')' → logprob: -18.875059127807617
    7. '100' → logprob: -19.375059127807617
    8. '
' → logprob: -20.125059127807617
    9. '  ' → logprob: -20.250059127807617
    10. '１０' → logprob: -20.375059127807617

Token 311: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.014407820999622345
    2. '(n' → logprob: -4.264407634735107
    3. 'n' → logprob: -8.389408111572266
    4. '^(' → logprob: -12.389408111572266
    5. '(' → logprob: -12.889408111572266
    6. 'k' → logprob: -13.139408111572266
    7. '```' → logprob: -13.389408111572266
    8. '^{' → logprob: -13.514408111572266
    9. '(k' → logprob: -13.514408111572266
    10. ' (' → logprob: -13.639408111572266

Token 312: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001061867456883192
    2. 'n' → logprob: -7.251061916351318
    3. '(' → logprob: -8.62606143951416
    4. ' (' → logprob: -8.75106143951416
    5. '(k' → logprob: -12.00106143951416
    6. 'k' → logprob: -12.62606143951416
    7. '
' → logprob: -12.75106143951416
    8. '{' → logprob: -13.87606143951416
    9. '[n' → logprob: -14.75106143951416
    10. '（' → logprob: -15.87606143951416

Token 313: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01108484622091055
    2. '(n' → logprob: -4.511085033416748
    3. ' n' → logprob: -11.38608455657959
    4. 'k' → logprob: -11.51108455657959
    5. '(' → logprob: -12.01108455657959
    6. ' (' → logprob: -12.63608455657959
    7. '{' → logprob: -13.13608455657959
    8. 'nk' → logprob: -13.26108455657959
    9. '
' → logprob: -13.76108455657959
    10. '[n' → logprob: -14.88608455657959

Token 314: '+k' (ID: 110434)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6983137726783752
    2. 'k' → logprob: -0.9483137726783752
    3. '(k' → logprob: -2.9483137130737305
    4. 'n' → logprob: -3.3233137130737305
    5. '+k' → logprob: -4.5733137130737305
    6. '{k' → logprob: -4.6983137130737305
    7. ' (' → logprob: -5.4483137130737305
    8. '{' → logprob: -6.5733137130737305
    9. '(' → logprob: -6.6983137130737305
    10. '
' → logprob: -8.94831371307373

Token 315: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.44693446159362793
    2. ')' → logprob: -1.071934461593628
    3. '-' → logprob: -4.071934700012207
    4. ')-' → logprob: -7.571934700012207
    5. ' )' → logprob: -7.821934700012207
    6. '}' → logprob: -9.946934700012207
    7. ' ' → logprob: -10.696934700012207
    8. ')-(' → logprob: -11.321934700012207
    9. ']' → logprob: -11.946934700012207
    10. '()' → logprob: -12.821934700012207

Token 316: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0022395893465727568
    2. '-' → logprob: -6.12723970413208
    3. ')' → logprob: -9.877239227294922
    4. ' ' → logprob: -13.127239227294922
    5. ')-' → logprob: -14.127239227294922
    6. ' )' → logprob: -15.752239227294922
    7. '   ' → logprob: -16.377239227294922
    8. ' ' → logprob: -17.002239227294922
    9. ')-(' → logprob: -17.002239227294922
    10. ' -
' → logprob: -18.002239227294922

Token 317: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '(' → logprob: -15.00015926361084
    4. '   ' → logprob: -17.000158309936523
    5. ' (' → logprob: -19.500158309936523
    6. ')' → logprob: -19.750158309936523
    7. '  ' → logprob: -20.125158309936523
    8. '
' → logprob: -20.375158309936523
    9. '```' → logprob: -20.375158309936523
    10. '100' → logprob: -20.875158309936523

Token 318: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '(' → logprob: -16.125028610229492
    4. '   ' → logprob: -16.875028610229492
    5. '
' → logprob: -18.250028610229492
    6. '  ' → logprob: -19.375028610229492
    7. ')' → logprob: -19.625028610229492
    8. '```' → logprob: -20.125028610229492
    9. '۱۰' → logprob: -20.250028610229492
    10. '           ' → logprob: -20.875028610229492

Token 319: '**' (ID: 410)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10213568806648254
    2. '**' → logprob: -2.35213565826416
    3. '^' → logprob: -6.72713565826416
    4. ' n' → logprob: -7.35213565826416
    5. '_n' → logprob: -11.10213565826416
    6. ' ' → logprob: -11.22713565826416
    7. '10' → logprob: -11.35213565826416
    8. '	n' → logprob: -11.47713565826416
    9. '```' → logprob: -11.72713565826416
    10. '(n' → logprob: -11.85213565826416

Token 320: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. ' n' → logprob: -16.125
    3. '_n' → logprob: -16.875
    4. 'k' → logprob: -17.375
    5. '	n' → logprob: -19.375
    6. '(n' → logprob: -19.375
    7. 'nk' → logprob: -19.5
    8. ')n' → logprob: -19.5
    9. 'den' → logprob: -20.5
    10. ')' → logprob: -21.0

Token 321: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001238004770129919
    2. '<|end|>' → logprob: -9.250123977661133
    3. ' )' → logprob: -11.000123977661133
    4. ')
' → logprob: -13.000123977661133
    5. ')#' → logprob: -13.250123977661133
    6. ')}}' → logprob: -13.250123977661133
    7. '<|end|>' → logprob: -13.875123977661133
    8. ')}' → logprob: -14.000123977661133
    9. ')**' → logprob: -14.125123977661133
    10. '')' → logprob: -14.250123977661133

Token 322: '   ' (ID: 271)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00011093381908722222
    2. '   ' → logprob: -9.500110626220703
    3. 'print' → logprob: -10.875110626220703
    4. ' g' → logprob: -11.250110626220703
    5. '
' → logprob: -12.875110626220703
    6. '```' → logprob: -14.125110626220703
    7. '    
' → logprob: -15.875110626220703
    8. '_g' → logprob: -15.875110626220703
    9. '#g' → logprob: -16.125110626220703
    10. '#' → logprob: -16.125110626220703

Token 323: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.0004178025701548904
    2. '   ' → logprob: -8.125417709350586
    3. ' g' → logprob: -9.500417709350586
    4. '
' → logprob: -10.750417709350586
    5. ')' → logprob: -11.375417709350586
    6. 'print' → logprob: -12.250417709350586
    7. '	g' → logprob: -12.625417709350586
    8. '```' → logprob: -13.750417709350586
    9. '_g' → logprob: -14.000417709350586
    10. '       ' → logprob: -14.625417709350586

Token 324: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759652853012085
    2. ' =' → logprob: -0.8259652853012085
    3. '=g' → logprob: -10.57596492767334
    4. '＝' → logprob: -15.45096492767334
    5. 'g' → logprob: -16.825965881347656
    6. '=int' → logprob: -17.575965881347656
    7. 'cd' → logprob: -18.325965881347656
    8. ' ' → logprob: -18.450965881347656
    9. '   ' → logprob: -18.575965881347656
    10. '=
' → logprob: -18.825965881347656

Token 325: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0007100477814674377
    2. ' gcd' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.250709533691406
    4. '	g' → logprob: -18.625709533691406
    5. '(g' → logprob: -20.250709533691406
    6. '_g' → logprob: -20.375709533691406
    7. ' ' → logprob: -20.500709533691406
    8. ' g' → logprob: -21.250709533691406
    9. '-g' → logprob: -21.750709533691406
    10. 'numer' → logprob: -21.875709533691406

Token 326: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.625003814697266
    3. 'numer' → logprob: -16.500003814697266
    4. ' (' → logprob: -17.750003814697266
    5. 'n' → logprob: -18.250003814697266
    6. '(
' → logprob: -18.500003814697266
    7. ' numerator' → logprob: -19.000003814697266
    8. '(g' → logprob: -19.375003814697266
    9. 'umerator' → logprob: -20.000003814697266
    10. '	n' → logprob: -20.250003814697266

Token 327: 'umerator' (ID: 152035)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6947606801986694
    2. 'umerator' → logprob: -0.6947606801986694
    3. 'numer' → logprob: -6.569760799407959
    4. '(' → logprob: -8.6947603225708
    5. ' numerator' → logprob: -11.1947603225708
    6. 'umer' → logprob: -11.5697603225708
    7. ',n' → logprob: -11.9447603225708
    8. 'n' → logprob: -12.4447603225708
    9. '_n' → logprob: -12.5697603225708
    10. '	n' → logprob: -13.6947603225708

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2664456789934775e-06
    2. ' ,' → logprob: -14.000000953674316
    3. ',
' → logprob: -15.250000953674316
    4. 'numer' → logprob: -16.000001907348633
    5. 'den' → logprob: -17.000001907348633
    6. 'umerator' → logprob: -17.375001907348633
    7. ' denominator' → logprob: -17.875001907348633
    8. ',n' → logprob: -18.500001907348633
    9. '   ' → logprob: -19.250001907348633
    10. ' numerator' → logprob: -19.750001907348633

Token 329: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.008619893342256546
    2. ' denominator' → logprob: -4.758619785308838
    3. 'numer' → logprob: -12.758620262145996
    4. '   ' → logprob: -14.008620262145996
    5. ' numerator' → logprob: -14.508620262145996
    6. ' den' → logprob: -14.758620262145996
    7. ' ' → logprob: -15.633620262145996
    8. '_den' → logprob: -15.758620262145996
    9. 'Den' → logprob: -16.38361930847168
    10. '.den' → logprob: -16.75861930847168

Token 330: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932292580604553
    2. ')
' → logprob: -0.6932292580604553
    3. ')
' → logprob: -9.568229675292969
    4. ')

' → logprob: -11.693229675292969
    5. '   ' → logprob: -12.943229675292969
    6. ')n' → logprob: -13.818229675292969
    7. ')`
' → logprob: -16.69322967529297
    8. ')

' → logprob: -17.06822967529297
    9. ' numerator' → logprob: -17.06822967529297
    10. '),' → logprob: -17.31822967529297

Token 331: '   ' (ID: 271)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.0023403274826705456
    2. '   ' → logprob: -6.752340316772461
    3. ' numerator' → logprob: -6.752340316772461
    4. 'Numer' → logprob: -13.877340316772461
    5. 'num' → logprob: -15.377340316772461
    6. '```' → logprob: -16.25234031677246
    7. 'umerator' → logprob: -17.12734031677246
    8. ' numer' → logprob: -18.75234031677246
    9. '  ' → logprob: -19.25234031677246
    10. '
' → logprob: -19.50234031677246

Token 332: ' num' (ID: 2269)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.0232801903039217
    2. ' numerator' → logprob: -3.773280143737793
    3. '   ' → logprob: -10.273280143737793
    4. ' numer' → logprob: -16.27328109741211
    5. 'Numer' → logprob: -16.39828109741211
    6. 'num' (adapté à ' num') → logprob: -17.77328109741211
    7. 'umerator' → logprob: -19.77328109741211
    8. '```' → logprob: -19.89828109741211
    9. '
' → logprob: -20.14828109741211
    10. 'n' → logprob: -20.52328109741211

Token 333: ' =' (ID: 314)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4338523745536804
    2. '//=' → logprob: -1.0588524341583252
    3. '//' → logprob: -5.683852195739746
    4. ' /=' → logprob: -6.808852195739746
    5. ' >>=' → logprob: -8.933852195739746
    6. '/=' → logprob: -8.933852195739746
    7. 'umerator' → logprob: -9.183852195739746
    8. ' ' → logprob: -9.808852195739746
    9. '```' → logprob: -9.933852195739746
    10. '=' → logprob: -10.183852195739746

Token 334: ' numerator' (ID: 149054)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.0011711753904819489
    2. ' numerator' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.501171112060547
    4. 'num' → logprob: -15.876171112060547
    5. 'umerator' → logprob: -16.376171112060547
    6. 'numeric' → logprob: -16.501171112060547
    7. 'n' → logprob: -17.126171112060547
    8. ' ' → logprob: -17.751171112060547
    9. 'Numer' → logprob: -17.876171112060547
    10. '  ' → logprob: -18.126171112060547

Token 335: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3151216506958008
    2. '//' → logprob: -1.3151216506958008
    3. '//=' → logprob: -6.315121650695801
    4. 'g' → logprob: -11.1901216506958
    5. '   ' → logprob: -11.4401216506958
    6. '#' → logprob: -11.8151216506958
    7. '```' → logprob: -12.0651216506958
    8. '
' → logprob: -12.6901216506958
    9. ' ' → logprob: -12.9401216506958
    10. ' ' → logprob: -13.4401216506958

Token 336: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.1472419600977446e-06
    2. ' g' → logprob: -13.750000953674316
    3. '	g' → logprob: -23.375001907348633
    4. 'г' → logprob: -23.750001907348633
    5. '   ' → logprob: -23.875001907348633
    6. '=' → logprob: -24.000001907348633
    7. '=g' → logprob: -24.000001907348633
    8. '[g' → logprob: -24.875001907348633
    9. ' ' → logprob: -25.250001907348633
    10. '_g' → logprob: -25.375001907348633

Token 337: '
' (ID: 198)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0016063899965956807
    2. '
' → logprob: -6.751606464385986
    3. '   ' → logprob: -8.376605987548828
    4. '    
' → logprob: -9.251605987548828
    5. ' den' → logprob: -9.251605987548828
    6. '  
' → logprob: -12.251605987548828
    7. ' 
' → logprob: -12.501605987548828
    8. '   
' → logprob: -12.751605987548828
    9. '  ' → logprob: -14.376605987548828
    10. '<|end|>' → logprob: -14.751605987548828

Token 338: '   ' (ID: 271)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.005991247948259115
    2. ' den' → logprob: -5.130991458892822
    3. ' denominator' → logprob: -10.255990982055664
    4. '   ' → logprob: -10.755990982055664
    5. ' ' → logprob: -13.255990982055664
    6. '
' → logprob: -13.255990982055664
    7. '    
' → logprob: -14.005990982055664
    8. '  ' → logprob: -14.130990982055664
    9. ' 
' → logprob: -14.755990982055664
    10. '  
' → logprob: -16.380990982055664

Token 339: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' (adapté à ' den') → logprob: -1.9743012671824545e-05
    2. ' den' → logprob: -11.125020027160645
    3. ' denominator' → logprob: -12.250020027160645
    4. '   ' → logprob: -16.375019073486328
    5. '  ' → logprob: -17.875019073486328
    6. ' ' → logprob: -18.250019073486328
    7. 'def' → logprob: -19.625019073486328
    8. '.den' → logprob: -19.750019073486328
    9. '
' → logprob: -19.875019073486328
    10. '=' → logprob: -20.250019073486328

Token 340: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03219439461827278
    2. '//' → logprob: -3.5321943759918213
    3. ' =' → logprob: -6.5321946144104
    4. ' //' → logprob: -7.7821946144104
    5. '//=' → logprob: -7.7821946144104
    6. 'umerator' → logprob: -8.907194137573242
    7. '   ' → logprob: -12.657194137573242
    8. 'den' → logprob: -12.782194137573242
    9. ' denominator' → logprob: -13.282194137573242
    10. '```' → logprob: -13.282194137573242

Token 341: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0007099286303855479
    2. ' denominator' → logprob: -7.2507100105285645
    3. '_den' → logprob: -17.375709533691406
    4. ' den' → logprob: -17.625709533691406
    5. '.den' → logprob: -18.875709533691406
    6. '(' → logprob: -19.250709533691406
    7. ' ' → logprob: -19.500709533691406
    8. '   ' → logprob: -19.750709533691406
    9. '-den' → logprob: -20.000709533691406
    10. 'numer' → logprob: -20.000709533691406

Token 342: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.006744269747287035
    2. ' //' → logprob: -5.006744384765625
    3. '```' → logprob: -10.631744384765625
    4. '//=' → logprob: -13.256744384765625
    5. '#' → logprob: -13.506744384765625
    6. ' ' → logprob: -14.631744384765625
    7. '`' → logprob: -15.381744384765625
    8. '<|end|>' → logprob: -15.631744384765625
    9. '=' → logprob: -15.881744384765625
    10. '   ' → logprob: -16.006744384765625

Token 343: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.6240566083070007e-06
    2. ' g' → logprob: -13.375001907348633
    3. '_g' → logprob: -19.000001907348633
    4. '	g' → logprob: -20.875001907348633
    5. ' ' → logprob: -21.875001907348633
    6. 'г' → logprob: -22.250001907348633
    7. '*g' → logprob: -22.625001907348633
    8. '>' → logprob: -22.875001907348633
    9. '#g' → logprob: -22.875001907348633
    10. ''g' → logprob: -23.000001907348633

Token 344: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.946405094116926e-05
    2. ' print' → logprob: -10.000079154968262
    3. '#' → logprob: -11.750079154968262
    4. '```' → logprob: -11.750079154968262
    5. '
' → logprob: -12.000079154968262
    6. '<|end|>' → logprob: -12.250079154968262
    7. ')' → logprob: -12.625079154968262
    8. '\n' → logprob: -13.875079154968262
    9. 'if' → logprob: -14.375079154968262
    10. '#print' → logprob: -14.500079154968262

Token 345: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003132976416964084
    2. ' print' → logprob: -8.375313758850098
    3. '/' → logprob: -10.750313758850098
    4. 'if' → logprob: -10.750313758850098
    5. 'result' → logprob: -11.000313758850098
    6. '#' → logprob: -11.625313758850098
    7. ')' → logprob: -12.000313758850098
    8. '\' → logprob: -13.625313758850098
    9. '.' → logprob: -14.000313758850098
    10. '```' → logprob: -14.375313758850098

Token 346: '(str' (ID: 7946)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.10025499016046524
    2. '(num' → logprob: -2.350255012512207
    3. 'f' → logprob: -10.850255012512207
    4. '(str' → logprob: -11.100255012512207
    5. '(' → logprob: -11.600255012512207
    6. 'num' → logprob: -12.350255012512207
    7. '(float' → logprob: -16.47525405883789
    8. '((' → logprob: -16.72525405883789
    9. '("{' → logprob: -17.22525405883789
    10. '("{}' → logprob: -17.47525405883789

Token 347: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -2.47495681833243e-05
    2. 'num' → logprob: -10.625024795532227
    3. ',num' → logprob: -16.000024795532227
    4. '=num' → logprob: -16.750024795532227
    5. '[num' → logprob: -16.875024795532227
    6. ' num' → logprob: -16.875024795532227
    7. '(' → logprob: -17.000024795532227
    8. '	num' → logprob: -18.125024795532227
    9. ':num' → logprob: -18.375024795532227
    10. '<num' → logprob: -18.750024795532227

Token 348: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06346751749515533
    2. ')+' → logprob: -3.063467502593994
    3. '/' → logprob: -4.938467502593994
    4. ')+'' → logprob: -6.188467502593994
    5. '+' → logprob: -6.313467502593994
    6. ' +' → logprob: -6.563467502593994
    7. '+'/'+' → logprob: -6.938467502593994
    8. ',' → logprob: -7.688467502593994
    9. ' )' → logprob: -8.813467979431152
    10. '+"/"+' → logprob: -8.813467979431152

Token 349: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19687500596046448
    2. ' +' → logprob: -1.946874976158142
    3. '+'/'+' → logprob: -3.8218750953674316
    4. ')' → logprob: -4.571875095367432
    5. '/' → logprob: -6.821875095367432
    6. ',' → logprob: -6.821875095367432
    7. '+"/"+' → logprob: -7.071875095367432
    8. ''' → logprob: -8.071874618530273
    9. ')+' → logprob: -8.821874618530273
    10. '+'' → logprob: -9.321874618530273

Token 350: ' '/'' (ID: 39443)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06355220079421997
    2. '"/' → logprob: -2.813552141189575
    3. ''/' → logprob: -6.563552379608154
    4. '"' → logprob: -9.313551902770996
    5. ' '/'' → logprob: -9.813551902770996
    6. '/' → logprob: -10.813551902770996
    7. ' "/"' → logprob: -12.188551902770996
    8. '('/')' → logprob: -13.563551902770996
    9. '("/")' → logprob: -15.813551902770996
    10. '’' → logprob: -15.938551902770996

Token 351: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -7.946405094116926e-05
    2. ' str' → logprob: -9.500079154968262
    3. '+' → logprob: -12.500079154968262
    4. '(str' → logprob: -15.250079154968262
    5. '''' → logprob: -15.750079154968262
    6. 'string' → logprob: -16.000080108642578
    7. ' +' → logprob: -16.625080108642578
    8. '
' → logprob: -16.750080108642578
    9. '   ' → logprob: -17.250080108642578
    10. '=str' → logprob: -17.250080108642578

Token 352: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -3.7697225252486533e-06
    2. ' str' → logprob: -12.500003814697266
    3. '(str' → logprob: -18.625003814697266
    4. 'string' → logprob: -22.250003814697266
    5. 'den' → logprob: -22.625003814697266
    6. '=str' → logprob: -23.125003814697266
    7. '[str' → logprob: -23.625003814697266
    8. '	str' → logprob: -23.750003814697266
    9. '
' → logprob: -25.125003814697266
    10. '   ' → logprob: -25.375003814697266

Token 353: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009114635176956654
    2. 'den' → logprob: -7.000911235809326
    3. ' den' → logprob: -18.500911712646484
    4. ' (' → logprob: -20.625911712646484
    5. '.den' → logprob: -21.250911712646484
    6. '```' → logprob: -21.750911712646484
    7. '(num' → logprob: -21.875911712646484
    8. '(
' → logprob: -21.875911712646484
    9. '(des' → logprob: -22.000911712646484
    10. ')' → logprob: -22.250911712646484

Token 354: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: 0.0
    2. ' den' → logprob: -18.125
    3. 'de' → logprob: -21.375
    4. '(' → logprob: -21.75
    5. 'dem' → logprob: -22.75
    6. '   ' → logprob: -22.75
    7. ')' → logprob: -23.375
    8. 'def' → logprob: -23.75
    9. 'des' → logprob: -24.0
    10. '  ' → logprob: -24.0

Token 355: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001710014621494338
    2. '')' → logprob: -9.250170707702637
    3. '))' → logprob: -9.625170707702637
    4. ')")' → logprob: -11.750170707702637
    5. '")' → logprob: -15.000170707702637
    6. '())' → logprob: -15.625170707702637
    7. ')`' → logprob: -15.750170707702637
    8. '`)' → logprob: -16.625171661376953
    9. ')))' → logprob: -17.000171661376953
    10. ')
' → logprob: -17.500171661376953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 353
Tokens correctement prédits (1ère position, stricte): 127
Tokens correctement prédits (1ère position, avec adaptation): 139
Tokens correctement prédits (top 10): 289
Précision stricte (1ère position): 35.98%
Précision adaptée (1ère position): 39.38%
Précision (top 10): 81.87%
================================================================================
