================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:56:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def age_distribution(ages):
    counts = [0]*7
    for age in ages:
        if age < 10:
            counts[0] += 1
        elif age < 20:
            counts[1] += 1
        elif age < 30:
            counts[2] += 1
        elif age < 40:
            counts[3] += 1
        elif age < 50:
            counts[4] += 1
        elif age < 60:
            counts[5] += 1
        else:
            counts[6] += 1
    return counts

def main():
    input = sys.stdin.readline
    while True:
        n = int(input())
        if n == 0:
            break
        ages = [int(input()) for _ in range(n)]
        result = age_distribution(ages)
        for count in result:
            print(count)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03585657849907875
    2. '\n' → logprob: -4.0358567237854
    3. 'import' → logprob: -4.7858567237854
    4. '<|end|>' → logprob: -5.2858567237854
    5. '\' → logprob: -7.0358567237854
    6. '<|end|>' → logprob: -7.5358567237854
    7. 'newline' → logprob: -7.9108567237854
    8. ',' → logprob: -8.160856246948242
    9. '[' → logprob: -8.285856246948242
    10. '' → logprob: -8.285856246948242

Token 4: ' age' (ID: 5744)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013927715830504894
    2. ' space' → logprob: -6.388927936553955
    3. ' main' → logprob: -6.388927936553955
    4. ' ' → logprob: -6.888927936553955
    5. '<|end|>' → logprob: -6.888927936553955
    6. ' process' → logprob: -7.013927936553955
    7. '  ' → logprob: -7.013927936553955
    8. ' a' → logprob: -7.263927936553955
    9. ' sys' → logprob: -7.513927936553955
    10. '_' → logprob: -7.763927936553955

Token 5: '_distribution' (ID: 102196)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04980473220348358
    2. '_' → logprob: -3.1748046875
    3. '_age' → logprob: -6.1748046875
    4. '():' → logprob: -6.6748046875
    5. '):' → logprob: -6.9248046875
    6. ' (' → logprob: -7.1748046875
    7. '_:' → logprob: -7.9248046875
    8. '(_' → logprob: -8.0498046875
    9. '(age' → logprob: -8.0498046875
    10. ')' → logprob: -8.9248046875

Token 6: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000476786372018978
    2. ':' → logprob: -8.500476837158203
    3. '():' → logprob: -8.875476837158203
    4. '(:' → logprob: -9.500476837158203
    5. '_' → logprob: -10.375476837158203
    6. '):' → logprob: -12.250476837158203
    7. ' (' → logprob: -12.375476837158203
    8. '('' → logprob: -12.875476837158203
    9. 's' → logprob: -13.125476837158203
    10. '(
' → logprob: -13.250476837158203

Token 7: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.9412696957588196
    2. '):' → logprob: -1.1912696361541748
    3. 'age' → logprob: -1.8162696361541748
    4. ')' → logprob: -2.941269636154175
    5. ' ages' → logprob: -3.066269636154175
    6. 'people' → logprob: -3.816269636154175
    7. ' ):' → logprob: -4.691269874572754
    8. 'data' → logprob: -5.441269874572754
    9. ' )' → logprob: -6.316269874572754
    10. 'users' → logprob: -6.691269874572754

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005707867676392198
    2. ')' → logprob: -7.750570774078369
    3. '):
' → logprob: -9.625571250915527
    4. ':' → logprob: -9.875571250915527
    5. '[' → logprob: -11.375571250915527
    6. ' ):' → logprob: -11.875571250915527
    7. ',' → logprob: -13.750571250915527
    8. '[]):' → logprob: -14.000571250915527
    9. ']:' → logprob: -14.500571250915527
    10. '):
' → logprob: -15.500571250915527

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0073425304144620895
    2. ':
' → logprob: -5.632342338562012
    3. '   ' → logprob: -5.757342338562012
    4. '```' → logprob: -9.132342338562012
    5. ':return' → logprob: -9.507342338562012
    6. ' :' → logprob: -9.507342338562012
    7. '    ' → logprob: -10.132342338562012
    8. '\n' → logprob: -10.257342338562012
    9. ':\' → logprob: -10.382342338562012
    10. ' ' → logprob: -10.507342338562012

Token 10: ' counts' (ID: 28991)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0598517581820488
    2. ' ' → logprob: -3.30985164642334
    3. '    ' → logprob: -4.43485164642334
    4. 'return' → logprob: -6.43485164642334
    5. 'counter' → logprob: -6.68485164642334
    6. ' counter' → logprob: -7.30985164642334
    7. '  ' → logprob: -7.43485164642334
    8. ' return' → logprob: -7.43485164642334
    9. ' 
' → logprob: -7.68485164642334
    10. '    
' → logprob: -7.80985164642334

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.205507293343544
    2. ' =' → logprob: -1.8305072784423828
    3. '=' → logprob: -3.830507278442383
    4. '_' → logprob: -7.455507278442383
    5. ' ' → logprob: -7.580507278442383
    6. '['' → logprob: -7.705507278442383
    7. '.' → logprob: -8.080507278442383
    8. '.setdefault' → logprob: -8.080507278442383
    9. '   ' → logprob: -8.205507278442383
    10. ')' → logprob: -8.330507278442383

Token 12: ' [' (ID: 723)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.4740923047065735
    2. '{}' → logprob: -0.9740923047065735
    3. ' defaultdict' → logprob: -11.599092483520508
    4. ' [' → logprob: -12.974092483520508
    5. ' Counter' → logprob: -13.974092483520508
    6. ' []' → logprob: -14.099092483520508
    7. '{' → logprob: -14.974092483520508
    8. '[' → logprob: -15.349092483520508
    9. ' {}
' → logprob: -15.474092483520508
    10. ' {' → logprob: -15.474092483520508

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018732868193183094
    2. ' ' → logprob: -8.625186920166016
    3. '   ' → logprob: -11.875186920166016
    4. ']' → logprob: -15.625186920166016
    5. '```' → logprob: -16.000186920166016
    6. ')' → logprob: -16.125186920166016
    7. '    ' → logprob: -16.375186920166016
    8. '  ' → logprob: -16.875186920166016
    9. '     ' → logprob: -16.875186920166016
    10. '       ' → logprob: -17.437686920166016

Token 14: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07246726006269455
    2. ',' → logprob: -2.94746732711792
    3. ' for' → logprob: -4.32246732711792
    4. ' ]' → logprob: -5.69746732711792
    5. ']*' → logprob: -7.44746732711792
    6. 'for' → logprob: -9.697466850280762
    7. ')' → logprob: -9.697466850280762
    8. ' ' → logprob: -10.072466850280762
    9. ' ,' → logprob: -11.072466850280762
    10. '   ' → logprob: -11.072466850280762

Token 15: '7' (ID: 22)
  Prédit: '101'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.7418578267097473
    2. '10' → logprob: -1.6168577671051025
    3. '100' → logprob: -1.9918577671051025
    4. '121' → logprob: -2.1168577671051025
    5. '9' → logprob: -3.9918577671051025
    6. '6' → logprob: -4.741858005523682
    7. '7' → logprob: -4.741858005523682
    8. '5' → logprob: -4.741858005523682
    9. '11' → logprob: -4.866858005523682
    10. '3' → logprob: -5.741858005523682

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16437135636806488
    2. '\n' → logprob: -3.1643712520599365
    3. '<|end|>' → logprob: -3.2893712520599365
    4. ' ' → logprob: -4.414371490478516
    5. '[' → logprob: -4.539371490478516
    6. ')' → logprob: -4.664371490478516
    7. '```' → logprob: -5.164371490478516
    8. ' for' → logprob: -5.164371490478516
    9. '\' → logprob: -5.414371490478516
    10. '
' → logprob: -5.414371490478516

Token 17: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1877746284008026
    2. 'for' → logprob: -2.687774658203125
    3. '
' → logprob: -3.187774658203125
    4. '   ' → logprob: -3.562774658203125
    5. ' 
' → logprob: -3.937774658203125
    6. '    
' → logprob: -5.437774658203125
    7. '\n' → logprob: -5.562774658203125
    8. '<|end|>' → logprob: -6.312774658203125
    9. ' ' → logprob: -6.437774658203125
    10. '  
' → logprob: -7.187774658203125

Token 18: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09525326639413834
    2. 'for' (adapté à ' for') → logprob: -2.4702532291412354
    3. '   ' → logprob: -6.3452534675598145
    4. '\n' → logprob: -6.4702534675598145
    5. '```' → logprob: -6.7202534675598145
    6. ' ' → logprob: -7.2202534675598145
    7. '[' → logprob: -8.345252990722656
    8. '\' → logprob: -8.470252990722656
    9. ' 
' → logprob: -9.095252990722656
    10. '
' → logprob: -9.220252990722656

Token 19: ' age' (ID: 5744)
  Prédit: ' age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' age' → logprob: -0.0008517975220456719
    2. ' ' → logprob: -7.125851631164551
    3. 'age' → logprob: -10.37585163116455
    4. ' i' → logprob: -12.00085163116455
    5. ' a' → logprob: -12.12585163116455
    6. ' range' → logprob: -13.87585163116455
    7. ' person' → logprob: -14.00085163116455
    8. '   ' → logprob: -14.37585163116455
    9. ' ag' → logprob: -14.62585163116455
    10. 'a' → logprob: -14.87585163116455

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032867982517927885
    2. 'in' → logprob: -5.753286838531494
    3. ' ' → logprob: -9.628286361694336
    4. '  ' → logprob: -11.378286361694336
    5. '_' → logprob: -11.378286361694336
    6. '   ' → logprob: -12.503286361694336
    7. '_in' → logprob: -12.628286361694336
    8. 's' → logprob: -12.753286361694336
    9. '<|end|>' → logprob: -13.253286361694336
    10. '[' → logprob: -13.878286361694336

Token 21: ' ages' (ID: 20355)
  Prédit: ' ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ages' → logprob: -0.11296626925468445
    2. 'ages' → logprob: -2.237966299057007
    3. ' range' → logprob: -9.487966537475586
    4. ' age' → logprob: -10.237966537475586
    5. ' ' → logprob: -10.987966537475586
    6. '[' → logprob: -12.362966537475586
    7. 'age' → logprob: -12.612966537475586
    8. ' [' → logprob: -13.112966537475586
    9. ' ranges' → logprob: -13.112966537475586
    10. ' edades' → logprob: -13.612966537475586

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003209680551663041
    2. '   ' → logprob: -6.628209590911865
    3. ':
' → logprob: -6.753209590911865
    4. '       ' → logprob: -7.628209590911865
    5. ',' → logprob: -9.753210067749023
    6. '<|end|>' → logprob: -10.253210067749023
    7. '):' → logprob: -10.378210067749023
    8. '>' → logprob: -10.878210067749023
    9. '[' → logprob: -11.253210067749023
    10. ' if' → logprob: -11.378210067749023

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015799840912222862
    2. '    ' → logprob: -5.2657999992370605
    3. '        
' → logprob: -5.7657999992370605
    4. ' 
' → logprob: -6.2657999992370605
    5. '   ' → logprob: -6.8907999992370605
    6. '    
' → logprob: -7.0157999992370605
    7. ' ' → logprob: -7.1407999992370605
    8. '     
' → logprob: -7.2657999992370605
    9. '4' → logprob: -7.7657999992370605
    10. '```' → logprob: -7.8907999992370605

Token 24: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.010799378156661987
    2. 'if' (adapté à ' if') → logprob: -4.635799407958984
    3. '    ' → logprob: -7.135799407958984
    4. ' ' → logprob: -8.885799407958984
    5. '   ' → logprob: -10.135799407958984
    6. ' i' → logprob: -10.635799407958984
    7. '       ' → logprob: -11.510799407958984
    8. '```' → logprob: -12.010799407958984
    9. '        ' → logprob: -12.135799407958984
    10. '     ' → logprob: -13.260799407958984

Token 25: ' age' (ID: 5744)
  Prédit: ' age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' age' → logprob: -0.003606363432481885
    2. ' ' → logprob: -5.75360631942749
    3. 'age' → logprob: -8.003606796264648
    4. '0' → logprob: -10.378606796264648
    5. '   ' → logprob: -11.378606796264648
    6. '20' → logprob: -11.878606796264648
    7. '(age' → logprob: -12.003606796264648
    8. '18' → logprob: -12.128606796264648
    9. '5' → logprob: -12.128606796264648
    10. '6' → logprob: -12.128606796264648

Token 26: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.029257778078317642
    2. '<' → logprob: -3.6542577743530273
    3. ' <=' → logprob: -6.154257774353027
    4. ' >=' → logprob: -7.279257774353027
    5. '<=' → logprob: -10.154257774353027
    6. ' ' → logprob: -10.404257774353027
    7. ' ==' → logprob: -10.529257774353027
    8. '>=' → logprob: -11.154257774353027
    9. '   ' → logprob: -11.654257774353027
    10. '==' → logprob: -12.529257774353027

Token 27: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3865512013435364
    2. '10' → logprob: -1.7615511417388916
    3. '5' → logprob: -2.1365511417388916
    4. '6' → logprob: -4.886551380157471
    5. '7' → logprob: -5.011551380157471
    6. '20' → logprob: -5.511551380157471
    7. '0' → logprob: -6.011551380157471
    8. '1' → logprob: -6.136551380157471
    9. '2' → logprob: -6.261551380157471
    10. '3' → logprob: -6.386551380157471

Token 28: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7366775274276733
    2. '5' → logprob: -1.2366775274276733
    3. '6' → logprob: -3.236677646636963
    4. '1' → logprob: -3.486677646636963
    5. '7' → logprob: -3.486677646636963
    6. '3' → logprob: -3.861677646636963
    7. '12' → logprob: -4.111677646636963
    8. '0' → logprob: -4.111677646636963
    9. ' ' → logprob: -4.361677646636963
    10. '20' → logprob: -4.361677646636963

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001996066712308675
    2. ':
' → logprob: -8.875199317932129
    3. ' :' → logprob: -10.125199317932129
    4. '):' → logprob: -11.125199317932129
    5. '       ' → logprob: -13.500199317932129
    6. ':return' → logprob: -13.875199317932129
    7. '0' → logprob: -14.500199317932129
    8. '   ' → logprob: -14.875199317932129
    9. ':
' → logprob: -15.375199317932129
    10. ':**' → logprob: -15.375199317932129

Token 30: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07849124073982239
    2. ':' → logprob: -2.8284912109375
    3. ' counts' → logprob: -4.5784912109375
    4. 'counts' → logprob: -5.5784912109375
    5. ' :' → logprob: -7.3284912109375
    6. ':
' → logprob: -7.8284912109375
    7. '_counts' → logprob: -7.8284912109375
    8. '0' → logprob: -8.4534912109375
    9. '       ' → logprob: -8.8284912109375
    10. '               ' → logprob: -9.2034912109375

Token 31: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.08899246156215668
    2. ' counts' → logprob: -2.4639923572540283
    3. 'count' → logprob: -10.71399211883545
    4. '           ' → logprob: -10.83899211883545
    5. '               ' → logprob: -12.33899211883545
    6. '   ' → logprob: -13.08899211883545
    7. '_counts' → logprob: -13.33899211883545
    8. '       ' → logprob: -13.58899211883545
    9. ' ' → logprob: -13.96399211883545
    10. '```' → logprob: -15.21399211883545

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -14.875000953674316
    3. '```' → logprob: -16.125
    4. '\[' → logprob: -17.25
    5. '][' → logprob: -18.125
    6. '0' → logprob: -18.25
    7. '[
' → logprob: -18.5
    8. 's' → logprob: -19.0
    9. ' ' → logprob: -19.5
    10. '[count' → logprob: -19.75

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. '1' → logprob: -13.37500286102295
    3. ' ' → logprob: -13.37500286102295
    4. '۰' → logprob: -17.250003814697266
    5. '5' → logprob: -17.500003814697266
    6. '[' → logprob: -17.687503814697266
    7. '6' → logprob: -18.062503814697266
    8. '3' → logprob: -18.250003814697266
    9. '4' → logprob: -18.437503814697266
    10. '2' → logprob: -18.625003814697266

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008681347593665123
    2. ']+=' → logprob: -4.758681297302246
    3. ' ]' → logprob: -9.633681297302246
    4. '+=' → logprob: -14.383681297302246
    5. ' +=' → logprob: -15.383681297302246
    6. ')' → logprob: -16.133682250976562
    7. '']' → logprob: -16.133682250976562
    8. '+' → logprob: -16.633682250976562
    9. ']+' → logprob: -16.758682250976562
    10. '```' → logprob: -16.758682250976562

Token 35: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.693362295627594
    2. '+=' → logprob: -0.693362295627594
    3. '+' → logprob: -8.56836223602295
    4. ']+=' → logprob: -10.69336223602295
    5. '=' → logprob: -13.94336223602295
    6. '+='' → logprob: -15.06836223602295
    7. '   ' → logprob: -15.19336223602295
    8. ' +' → logprob: -15.56836223602295
    9. '++' → logprob: -15.81836223602295
    10. '    ' → logprob: -16.068363189697266

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01603425107896328
    2. ' ' → logprob: -4.141034126281738
    3. ' ' → logprob: -16.766035079956055
    4. '   ' → logprob: -18.766035079956055
    5. '１' → logprob: -19.328535079956055
    6. '```' → logprob: -19.328535079956055
    7. '+' → logprob: -19.703535079956055
    8. '0' → logprob: -19.828535079956055
    9. '10' → logprob: -20.203535079956055
    10. '۱' → logprob: -20.203535079956055

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -23.000003814697266
    4. '   ' → logprob: -23.375003814697266
    5. '１' → logprob: -23.375003814697266
    6. '  ' → logprob: -23.500003814697266
    7. ')' → logprob: -23.875003814697266
    8. ' ' → logprob: -24.000003814697266
    9. '-' → logprob: -24.375003814697266
    10. '۱' → logprob: -24.562503814697266

Token 38: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.9870539903640747
    2. '       ' → logprob: -1.3620539903640747
    3. '
' → logprob: -1.4870539903640747
    4. '\n' → logprob: -2.862053871154785
    5. ' elif' → logprob: -2.862053871154785
    6. '   ' → logprob: -3.862053871154785
    7. '    
' → logprob: -6.237053871154785
    8. ' else' → logprob: -6.987053871154785
    9. '	elif' → logprob: -6.987053871154785
    10. '\' → logprob: -7.112053871154785

Token 39: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5124078392982483
    2. '       ' → logprob: -1.1374077796936035
    3. ' elif' → logprob: -2.6374077796936035
    4. 'else' → logprob: -6.2624077796936035
    5. '   ' → logprob: -6.6374077796936035
    6. '
' → logprob: -6.7624077796936035
    7. 'e' → logprob: -7.0124077796936035
    8. ' else' → logprob: -7.0124077796936035
    9. '\n' → logprob: -7.1374077796936035
    10. '	elif' → logprob: -7.6374077796936035

Token 40: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.20422033965587616
    2. ' elif' → logprob: -1.7042202949523926
    3. 'e' → logprob: -5.954220294952393
    4. 'else' → logprob: -9.70422077178955
    5. ' else' → logprob: -10.07922077178955
    6. '       ' → logprob: -10.07922077178955
    7. 'el' → logprob: -10.45422077178955
    8. '   ' → logprob: -10.95422077178955
    9. '	elif' → logprob: -11.32922077178955
    10. ' ' → logprob: -13.57922077178955

Token 41: ' age' (ID: 5744)
  Prédit: ' age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' age' → logprob: -0.017893193289637566
    2. ' ' → logprob: -4.142893314361572
    3. 'age' → logprob: -6.392893314361572
    4. '10' → logprob: -8.642892837524414
    5. '(age' → logprob: -13.017892837524414
    6. ' ages' → logprob: -13.517892837524414
    7. '   ' → logprob: -13.892892837524414
    8. '20' → logprob: -14.892892837524414
    9. ' Age' → logprob: -14.892892837524414
    10. '  ' → logprob: -14.892892837524414

Token 42: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.010019198060035706
    2. '<' → logprob: -5.260019302368164
    3. ' ' → logprob: -5.385019302368164
    4. ' >=' → logprob: -8.635019302368164
    5. '[' → logprob: -12.135019302368164
    6. ' <=' → logprob: -13.135019302368164
    7. '>=' → logprob: -14.010019302368164
    8. ' ' → logprob: -14.385019302368164
    9. '<|end|>' → logprob: -15.010019302368164
    10. ' \<' → logprob: -15.135019302368164

Token 43: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0021524035837501287
    2. '15' → logprob: -6.752152442932129
    3. ' ' → logprob: -7.127152442932129
    4. '18' → logprob: -9.627152442932129
    5. '17' → logprob: -10.627152442932129
    6. '14' → logprob: -10.877152442932129
    7. '16' → logprob: -11.002152442932129
    8. '13' → logprob: -11.127152442932129
    9. '19' → logprob: -11.877152442932129
    10. '1' → logprob: -11.877152442932129

Token 44: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0011430763406679034
    2. '15' → logprob: -7.126142978668213
    3. ' ' → logprob: -9.626143455505371
    4. '

' → logprob: -9.751143455505371
    5. '18' → logprob: -10.376143455505371
    6. '2' → logprob: -10.501143455505371
    7. '1' → logprob: -10.626143455505371
    8. '13' → logprob: -10.688643455505371
    9. '14' → logprob: -10.938643455505371
    10. '   ' → logprob: -11.126143455505371

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.727905979962088e-05
    2. '):' → logprob: -10.87504768371582
    3. ' :' → logprob: -11.12504768371582
    4. ':
' → logprob: -11.50004768371582
    5. '       ' → logprob: -13.37504768371582
    6. '           ' → logprob: -14.62504768371582
    7. '[' → logprob: -15.00004768371582
    8. ']:' → logprob: -15.37504768371582
    9. ':**' → logprob: -15.62504768371582
    10. '   ' → logprob: -16.25004768371582

Token 46: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09260575473308563
    2. ' counts' → logprob: -2.7176058292388916
    3. 'counts' → logprob: -4.3426055908203125
    4. ' ' → logprob: -5.3426055908203125
    5. '               ' → logprob: -5.7176055908203125
    6. '1' → logprob: -8.092605590820312
    7. '[' → logprob: -8.342605590820312
    8. '            ' → logprob: -8.842605590820312
    9. '0' → logprob: -8.967605590820312
    10. ':' → logprob: -9.717605590820312

Token 47: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.3135239779949188
    2. 'counts' (adapté à ' counts') → logprob: -1.3135240077972412
    3. '           ' → logprob: -9.06352424621582
    4. '               ' → logprob: -9.56352424621582
    5. '_counts' → logprob: -10.31352424621582
    6. 'count' → logprob: -10.68852424621582
    7. ' ' → logprob: -11.81352424621582
    8. ' ' → logprob: -13.43852424621582
    9. '`' → logprob: -13.56352424621582
    10. '   ' → logprob: -13.81352424621582

Token 48: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0445127372804563e-05
    2. ' [' → logprob: -11.62501049041748
    3. '1' → logprob: -14.00001049041748
    4. '   ' → logprob: -15.50001049041748
    5. '```' → logprob: -15.62501049041748
    6. '       ' → logprob: -15.87501049041748
    7. ' ' → logprob: -16.750009536743164
    8. '`' → logprob: -16.875009536743164
    9. '[
' → logprob: -17.875009536743164
    10. '\[' → logprob: -18.375009536743164

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.187509536743164
    4. '```' → logprob: -18.312509536743164
    5. '0' → logprob: -18.375009536743164
    6. '[' → logprob: -18.437509536743164
    7. '  ' → logprob: -18.562509536743164
    8. '' → logprob: -19.000009536743164
    9. ']' → logprob: -19.687509536743164
    10. '１' → logprob: -19.750009536743164

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003631431143730879
    2. ' ]' → logprob: -5.753631591796875
    3. ']+=' → logprob: -7.753631591796875
    4. ' +=' → logprob: -10.878631591796875
    5. '           ' → logprob: -13.378631591796875
    6. ')' → logprob: -14.253631591796875
    7. ' ' → logprob: -14.378631591796875
    8. '       ' → logprob: -14.503631591796875
    9. '   ' → logprob: -14.753631591796875
    10. ']+' → logprob: -14.878631591796875

Token 51: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0014305938966572285
    2. '+=' → logprob: -6.626430511474609
    3. ' ' → logprob: -9.87643051147461
    4. ']+=' → logprob: -10.25143051147461
    5. '            ' → logprob: -11.50143051147461
    6. '        ' → logprob: -13.25143051147461
    7. ')' → logprob: -13.50143051147461
    8. ']' → logprob: -14.12643051147461
    9. '           ' → logprob: -14.37643051147461
    10. ' +' → logprob: -14.37643051147461

Token 52: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6325996518135071
    2. '1' → logprob: -0.7575996518135071
    3. '```' → logprob: -15.382599830627441
    4. ' ' → logprob: -15.632599830627441
    5. '0' → logprob: -17.320098876953125
    6. '2' → logprob: -17.757598876953125
    7. '１' → logprob: -18.070098876953125
    8. 'space' → logprob: -18.257598876953125
    9. '`' → logprob: -18.257598876953125
    10. '   ' → logprob: -18.320098876953125

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '```' → logprob: -16.563533782958984
    4. '<|end|>' → logprob: -17.188533782958984
    5. '10' → logprob: -17.688533782958984
    6. '2' → logprob: -17.876033782958984
    7. '۱' → logprob: -18.126033782958984
    8. '１' → logprob: -18.188533782958984
    9. '  ' → logprob: -18.251033782958984
    10. '0' → logprob: -18.376033782958984

Token 54: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026068103034049273
    2. 'elif' → logprob: -6.1276068687438965
    3. ' elif' → logprob: -8.502606391906738
    4. '```' → logprob: -9.127606391906738
    5. '
' → logprob: -10.627606391906738
    6. 'else' → logprob: -10.877606391906738
    7. '   ' → logprob: -11.252606391906738
    8. ' else' → logprob: -11.252606391906738
    9. '\n' → logprob: -11.627606391906738
    10. '	elif' → logprob: -12.502606391906738

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007557853823527694
    2. 'elif' → logprob: -7.375755786895752
    3. ' elif' → logprob: -9.875755310058594
    4. '```' → logprob: -10.125755310058594
    5. '
' → logprob: -10.750755310058594
    6. '<|end|>' → logprob: -12.250755310058594
    7. '   ' → logprob: -12.375755310058594
    8. '	elif' → logprob: -13.500755310058594
    9. 'else' → logprob: -14.000755310058594
    10. '        
' → logprob: -14.125755310058594

Token 56: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.8395376205444336
    2. '       ' → logprob: -1.0895376205444336
    3. ' elif' → logprob: -1.4645376205444336
    4. ' else' → logprob: -8.464537620544434
    5. 'else' → logprob: -8.839537620544434
    6. '   ' → logprob: -9.214537620544434
    7. '```' → logprob: -10.214537620544434
    8. '	elif' → logprob: -11.214537620544434
    9. ' ' → logprob: -12.089537620544434
    10. 'el' → logprob: -12.214537620544434

Token 57: ' age' (ID: 5744)
  Prédit: ' age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' age' → logprob: -0.6599752306938171
    2. ' ' → logprob: -0.9099752306938171
    3. '30' → logprob: -2.909975290298462
    4. 'age' → logprob: -3.659975290298462
    5. '20' → logprob: -8.034975051879883
    6. '(age' → logprob: -10.784975051879883
    7. ' ages' → logprob: -11.659975051879883
    8. '   ' → logprob: -12.034975051879883
    9. '29' → logprob: -12.034975051879883
    10. ' ' → logprob: -12.784975051879883

Token 58: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.009393014013767242
    2. '<' → logprob: -4.759393215179443
    3. ' ' → logprob: -7.259393215179443
    4. '[' → logprob: -9.634392738342285
    5. '20' → logprob: -12.634392738342285
    6. ' >=' → logprob: -13.134392738342285
    7. ' ' → logprob: -14.009392738342285
    8. '```' → logprob: -14.884392738342285
    9. ' [' → logprob: -15.009392738342285
    10. '<int' → logprob: -15.134392738342285

Token 59: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.0004895264864899218
    2. ' ' → logprob: -7.625489711761475
    3. '3' → logprob: -13.625489234924316
    4. '40' → logprob: -16.125490188598633
    5. '300' → logprob: -16.687990188598633
    6. '25' → logprob: -17.375490188598633
    7. '0' → logprob: -17.375490188598633
    8. '۳۰' → logprob: -17.687990188598633
    9. '```' → logprob: -18.187990188598633
    10. '=' → logprob: -18.437990188598633

Token 60: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -1.0325924449716695e-05
    2. '3' → logprob: -11.50001049041748
    3. ' ' → logprob: -17.000009536743164
    4. '۳۰' → logprob: -17.375009536743164
    5. '300' → logprob: -17.625009536743164
    6. '३०' → logprob: -18.250009536743164
    7. '40' → logprob: -18.437509536743164
    8. '0' → logprob: -18.812509536743164
    9. '```' → logprob: -18.937509536743164
    10. '৩০' → logprob: -18.937509536743164

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001882592448964715
    2. '[' → logprob: -7.001882553100586
    3. '           ' → logprob: -7.501882553100586
    4. '       ' → logprob: -8.126882553100586
    5. ':
' → logprob: -10.001882553100586
    6. ' :' → logprob: -10.126882553100586
    7. '):' → logprob: -11.251882553100586
    8. '   ' → logprob: -12.501882553100586
    9. ')' → logprob: -12.626882553100586
    10. '               ' → logprob: -12.626882553100586

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34875401854515076
    2. ' counts' → logprob: -1.3487540483474731
    3. 'counts' → logprob: -3.4737539291381836
    4. '               ' → logprob: -6.223753929138184
    5. '       ' → logprob: -6.973753929138184
    6. ' ' → logprob: -7.848753929138184
    7. '[' → logprob: -8.348753929138184
    8. '            ' → logprob: -9.223753929138184
    9. '0' → logprob: -9.973753929138184
    10. 'count' → logprob: -10.223753929138184

Token 63: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.03441503643989563
    2. 'counts' (adapté à ' counts') → logprob: -3.4094150066375732
    3. ' ' → logprob: -7.284415245056152
    4. 'count' → logprob: -10.034415245056152
    5. '1' → logprob: -11.284415245056152
    6. ' count' → logprob: -11.534415245056152
    7. '_counts' → logprob: -11.784415245056152
    8. '`' → logprob: -12.909415245056152
    9. '```' → logprob: -13.909415245056152
    10. '2' → logprob: -14.034415245056152

Token 64: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2233183042553719e-05
    2. ' [' → logprob: -11.500012397766113
    3. '       ' → logprob: -14.375012397766113
    4. ']' → logprob: -14.875012397766113
    5. '```' → logprob: -14.875012397766113
    6. '2' → logprob: -15.375012397766113
    7. ' ' → logprob: -15.625012397766113
    8. '   ' → logprob: -15.750012397766113
    9. '][' → logprob: -16.000011444091797
    10. '           ' → logprob: -16.375011444091797

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.4375057220459
    4. '```' → logprob: -16.6875057220459
    5. '  ' → logprob: -17.1875057220459
    6. '1' → logprob: -17.6875057220459
    7. '２' → logprob: -18.0000057220459
    8. '-' → logprob: -18.0625057220459
    9. '۲' → logprob: -18.1875057220459
    10. '0' → logprob: -18.3125057220459

Token 66: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0066098603419959545
    2. ' ]' → logprob: -5.256609916687012
    3. ']+=' → logprob: -6.756609916687012
    4. ' +=' → logprob: -8.881609916687012
    5. '           ' → logprob: -10.506609916687012
    6. ']+' → logprob: -10.631609916687012
    7. ')' → logprob: -12.131609916687012
    8. ' ' → logprob: -12.756609916687012
    9. '       ' → logprob: -13.006609916687012
    10. '+=' → logprob: -13.006609916687012

Token 67: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.002423106227070093
    2. '+=' → logprob: -6.127423286437988
    3. ' ' → logprob: -9.252423286437988
    4. ']+=' → logprob: -10.002423286437988
    5. '            ' → logprob: -10.502423286437988
    6. '        ' → logprob: -10.627423286437988
    7. '           ' → logprob: -11.502423286437988
    8. '+' → logprob: -12.002423286437988
    9. '    ' → logprob: -12.127423286437988
    10. ')' → logprob: -12.252423286437988

Token 68: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38687291741371155
    2. '1' → logprob: -1.1368728876113892
    3. '```' → logprob: -14.511873245239258
    4. ' ' → logprob: -15.136873245239258
    5. 'count' → logprob: -15.199373245239258
    6. '2' → logprob: -15.699373245239258
    7. '0' → logprob: -16.136873245239258
    8. '   ' → logprob: -16.449373245239258
    9. '`' → logprob: -16.824373245239258
    10. '  ' → logprob: -17.074373245239258

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007606627885252237
    2. ' ' → logprob: -4.882606506347656
    3. '0' → logprob: -16.632606506347656
    4. '3' → logprob: -16.820106506347656
    5. '10' → logprob: -16.820106506347656
    6. '  ' → logprob: -16.945106506347656
    7. '   ' → logprob: -17.007606506347656
    8. '```' → logprob: -17.007606506347656
    9. 'count' → logprob: -17.070106506347656
    10. '2' → logprob: -17.382606506347656

Token 70: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011921331752091646
    2. 'elif' → logprob: -7.251192092895508
    3. '<|end|>' → logprob: -8.376192092895508
    4. '```' → logprob: -9.251192092895508
    5. ' elif' → logprob: -9.876192092895508
    6. '   ' → logprob: -10.001192092895508
    7. '
' → logprob: -11.126192092895508
    8. '    
' → logprob: -11.876192092895508
    9. '        
' → logprob: -12.126192092895508
    10. '\n' → logprob: -12.376192092895508

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005833999253809452
    2. 'elif' → logprob: -5.380834102630615
    3. '```' → logprob: -7.380834102630615
    4. ' elif' → logprob: -7.880834102630615
    5. '   ' → logprob: -9.255833625793457
    6. '<|end|>' → logprob: -10.255833625793457
    7. '        
' → logprob: -11.005833625793457
    8. '    
' → logprob: -11.380833625793457
    9. '`' → logprob: -12.005833625793457
    10. '``' → logprob: -12.005833625793457

Token 72: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.06464188545942307
    2. ' elif' → logprob: -2.8146419525146484
    3. '       ' → logprob: -5.939641952514648
    4. '	elif' → logprob: -11.064641952514648
    5. '```' → logprob: -11.564641952514648
    6. '   ' → logprob: -12.064641952514648
    7. 'else' → logprob: -12.689641952514648
    8. ' else' → logprob: -13.439641952514648
    9. 'el' → logprob: -13.689641952514648
    10. ' ' → logprob: -14.689641952514648

Token 73: ' age' (ID: 5744)
  Prédit: ' age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' age' → logprob: -0.0006572735728695989
    2. 'age' → logprob: -7.375657081604004
    3. ' ' → logprob: -10.750657081604004
    4. '30' → logprob: -12.125657081604004
    5. '20' → logprob: -13.125657081604004
    6. '40' → logprob: -14.375657081604004
    7. '(age' → logprob: -14.375657081604004
    8. ' ' → logprob: -15.750657081604004
    9. '   ' → logprob: -16.00065803527832
    10. ' ages' → logprob: -16.25065803527832

Token 74: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.062277887016534805
    2. '<' → logprob: -2.8122777938842773
    3. ' ' → logprob: -8.187277793884277
    4. '[' → logprob: -10.812277793884277
    5. '```' → logprob: -12.937277793884277
    6. '<|end|>' → logprob: -13.187277793884277
    7. ' ' → logprob: -13.312277793884277
    8. '20' → logprob: -14.187277793884277
    9. '<int' → logprob: -14.187277793884277
    10. '30' → logprob: -14.187277793884277

Token 75: ' ' (ID: 220)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.02054235339164734
    2. ' ' → logprob: -3.8955423831939697
    3. '4' → logprob: -15.64554214477539
    4. '  ' → logprob: -15.77054214477539
    5. '400' → logprob: -17.27054214477539
    6. '30' → logprob: -17.70804214477539
    7. '   ' → logprob: -17.77054214477539
    8. '...' → logprob: -18.33304214477539
    9. ' ' → logprob: -18.52054214477539
    10. '```' → logprob: -18.95804214477539

Token 76: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.00025895543512888253
    2. ' ' → logprob: -8.375259399414062
    3. '4' → logprob: -10.500259399414062
    4. '  ' → logprob: -15.375259399414062
    5. '   ' → logprob: -16.000259399414062
    6. '30' → logprob: -16.125259399414062
    7. '0' → logprob: -16.125259399414062
    8. '400' → logprob: -16.250259399414062
    9. '=' → logprob: -16.937759399414062
    10. '>' → logprob: -17.187759399414062

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017159747949335724
    2. '           ' → logprob: -9.500171661376953
    3. ' :' → logprob: -10.375171661376953
    4. ':
' → logprob: -10.625171661376953
    5. '       ' → logprob: -10.750171661376953
    6. '):' → logprob: -11.375171661376953
    7. '[' → logprob: -12.000171661376953
    8. ']:' → logprob: -14.375171661376953
    9. ':**' → logprob: -15.500171661376953
    10. ')' → logprob: -15.750171661376953

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14148187637329102
    2. ' counts' → logprob: -2.141481876373291
    3. 'counts' → logprob: -4.391481876373291
    4. '       ' → logprob: -7.016481876373291
    5. ' ' → logprob: -7.641481876373291
    6. '               ' → logprob: -8.516481399536133
    7. '```' → logprob: -9.141481399536133
    8. 'count' → logprob: -9.141481399536133
    9. '_counts' → logprob: -10.141481399536133
    10. ')' → logprob: -10.266481399536133

Token 79: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.20167918503284454
    2. ' counts' → logprob: -1.7016792297363281
    3. 'count' → logprob: -8.451679229736328
    4. '1' → logprob: -10.826679229736328
    5. ' ' → logprob: -11.326679229736328
    6. '_counts' → logprob: -12.201679229736328
    7. 'c' → logprob: -12.576679229736328
    8. '```' → logprob: -13.076679229736328
    9. '       ' → logprob: -13.326679229736328
    10. '`' → logprob: -13.451679229736328

Token 80: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.941850526549388e-06
    2. '```' → logprob: -12.875007629394531
    3. '       ' → logprob: -13.250007629394531
    4. ' [' → logprob: -13.750007629394531
    5. '   ' → logprob: -14.250007629394531
    6. '`' → logprob: -14.625007629394531
    7. ']' → logprob: -15.250007629394531
    8. '[
' → logprob: -15.375007629394531
    9. ' ' → logprob: -15.500007629394531
    10. '[]' → logprob: -15.875007629394531

Token 81: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۳' → logprob: -18.3125
    4. '３' → logprob: -18.375
    5. '  ' → logprob: -18.75
    6. '
' → logprob: -18.8125
    7. '৩' → logprob: -18.8125
    8. '0' → logprob: -19.0625
    9. '   ' → logprob: -19.125
    10. '```' → logprob: -19.4375

Token 82: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004193079192191362
    2. ' ]' → logprob: -5.504193305969238
    3. ']+=' → logprob: -9.504193305969238
    4. '           ' → logprob: -10.754193305969238
    5. ')' → logprob: -12.254193305969238
    6. ']+' → logprob: -12.379193305969238
    7. '       ' → logprob: -12.754193305969238
    8. ' ' → logprob: -13.254193305969238
    9. ' +=' → logprob: -14.254193305969238
    10. ':' → logprob: -14.379193305969238

Token 83: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.007458257023245096
    2. '+=' → logprob: -5.007458209991455
    3. '            ' → logprob: -8.507458686828613
    4. ' ' → logprob: -8.507458686828613
    5. '        ' → logprob: -8.882458686828613
    6. '           ' → logprob: -9.382458686828613
    7. ']+=' → logprob: -10.257458686828613
    8. '+' → logprob: -10.757458686828613
    9. '    ' → logprob: -11.382458686828613
    10. '       ' → logprob: -11.632458686828613

Token 84: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31327179074287415
    2. '1' → logprob: -1.3132717609405518
    3. 'count' → logprob: -12.813271522521973
    4. ' counts' → logprob: -12.938271522521973
    5. 'counts' → logprob: -13.125771522521973
    6. '0' → logprob: -14.813271522521973
    7. '```' → logprob: -14.875771522521973
    8. '`' → logprob: -15.000771522521973
    9. '   ' → logprob: -15.438271522521973
    10. ' ' → logprob: -15.688271522521973

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001171652227640152
    2. ' ' → logprob: -6.751171588897705
    3. '0' → logprob: -14.376172065734863
    4. 'count' → logprob: -15.376172065734863
    5. '4' → logprob: -15.751172065734863
    6. '   ' → logprob: -16.626171112060547
    7. 'counts' → logprob: -16.626171112060547
    8. '40' → logprob: -16.688671112060547
    9. '3' → logprob: -16.813671112060547
    10. '10' → logprob: -16.813671112060547

Token 86: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001212614355608821
    2. '
' → logprob: -7.6262125968933105
    3. '```' → logprob: -8.376213073730469
    4. '   ' → logprob: -8.751213073730469
    5. 'elif' → logprob: -9.126213073730469
    6. ' 
' → logprob: -10.251213073730469
    7. '    
' → logprob: -10.501213073730469
    8. '  
' → logprob: -10.626213073730469
    9. '        
' → logprob: -10.626213073730469
    10. ' elif' → logprob: -10.876213073730469

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011174732353538275
    2. 'elif' → logprob: -7.126117706298828
    3. ' elif' → logprob: -8.501117706298828
    4. '   ' → logprob: -9.626117706298828
    5. '```' → logprob: -10.251117706298828
    6. ' else' → logprob: -13.501117706298828
    7. 'else' → logprob: -13.626117706298828
    8. ' ' → logprob: -14.001117706298828
    9. '`' → logprob: -14.251117706298828
    10. '        
' → logprob: -14.501117706298828

Token 88: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.11424455046653748
    2. ' elif' → logprob: -2.6142444610595703
    3. '       ' → logprob: -3.3642444610595703
    4. '   ' → logprob: -10.11424446105957
    5. '```' → logprob: -10.11424446105957
    6. 'else' → logprob: -10.23924446105957
    7. '	elif' → logprob: -10.98924446105957
    8. ' else' → logprob: -11.61424446105957
    9. '    ' → logprob: -12.98924446105957
    10. ' ' → logprob: -13.61424446105957

Token 89: ' age' (ID: 5744)
  Prédit: ' age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' age' → logprob: -3.8219583075260743e-05
    2. 'age' → logprob: -10.375038146972656
    3. ' ' → logprob: -12.125038146972656
    4. '40' → logprob: -13.750038146972656
    5. '(age' → logprob: -15.500038146972656
    6. 'Age' → logprob: -16.375038146972656
    7. ' ages' → logprob: -16.375038146972656
    8. '.age' → logprob: -17.250038146972656
    9. '_age' → logprob: -17.750038146972656
    10. ' edad' → logprob: -18.000038146972656

Token 90: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.023416325449943542
    2. '<' → logprob: -3.77341628074646
    3. ' ' → logprob: -8.773416519165039
    4. '40' → logprob: -12.148416519165039
    5. '[' → logprob: -12.523416519165039
    6. '20' → logprob: -13.523416519165039
    7. ' ' → logprob: -13.648416519165039
    8. '<|end|>' → logprob: -13.773416519165039
    9. '30' → logprob: -14.273416519165039
    10. '   ' → logprob: -14.273416519165039

Token 91: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.01815052703022957
    2. ' ' → logprob: -4.018150329589844
    3. '5' → logprob: -15.955650329589844
    4. '60' → logprob: -16.080650329589844
    5. '500' → logprob: -16.768150329589844
    6. '  ' → logprob: -16.830650329589844
    7. '```' → logprob: -16.893150329589844
    8. ' cinqu' → logprob: -17.330650329589844
    9. '５０' → logprob: -17.518150329589844
    10. '   ' → logprob: -17.643150329589844

Token 92: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -2.3676733690081164e-05
    2. ' ' → logprob: -11.25002384185791
    3. '5' → logprob: -11.50002384185791
    4. '60' → logprob: -16.500022888183594
    5. '  ' → logprob: -16.750022888183594
    6. '５０' → logprob: -16.750022888183594
    7. '৫০' → logprob: -16.750022888183594
    8. '५०' → logprob: -17.312522888183594
    9. '500' → logprob: -17.375022888183594
    10. '   ' → logprob: -17.437522888183594

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010534112807363272
    2. '           ' → logprob: -7.626053333282471
    3. '       ' → logprob: -7.876053333282471
    4. ':
' → logprob: -9.376053810119629
    5. '[' → logprob: -10.001053810119629
    6. ']:' → logprob: -10.876053810119629
    7. ' :' → logprob: -11.126053810119629
    8. '):' → logprob: -11.376053810119629
    9. '   ' → logprob: -12.876053810119629
    10. '<|end|>' → logprob: -13.251053810119629

Token 94: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1573261171579361
    2. ' counts' → logprob: -2.1573262214660645
    3. 'counts' → logprob: -3.5323262214660645
    4. '       ' → logprob: -8.032325744628906
    5. 'count' → logprob: -8.782325744628906
    6. '               ' → logprob: -9.282325744628906
    7. '```' → logprob: -9.282325744628906
    8. '_counts' → logprob: -11.407325744628906
    9. ' ' → logprob: -12.032325744628906
    10. '   ' → logprob: -12.157325744628906

Token 95: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.20142726600170135
    2. ' counts' → logprob: -1.7014272212982178
    3. 'count' → logprob: -11.576427459716797
    4. '           ' → logprob: -13.076427459716797
    5. ' ' → logprob: -14.326427459716797
    6. '1' → logprob: -14.326427459716797
    7. '               ' → logprob: -15.076427459716797
    8. '_counts' → logprob: -15.201427459716797
    9. '   ' → logprob: -15.451427459716797
    10. '       ' → logprob: -15.576427459716797

Token 96: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.153795766294934e-06
    2. '4' → logprob: -12.250005722045898
    3. ' [' → logprob: -14.500005722045898
    4. '```' → logprob: -14.750005722045898
    5. '`' → logprob: -15.750005722045898
    6. '[
' → logprob: -16.3750057220459
    7. ' ' → logprob: -17.2500057220459
    8. '][' → logprob: -17.7500057220459
    9. '   ' → logprob: -18.0000057220459
    10. ']' → logprob: -18.1250057220459

Token 97: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.875003814697266
    3. '   ' → logprob: -15.125003814697266
    4. '' → logprob: -15.250003814697266
    5. '۴' → logprob: -15.625003814697266
    6. '```' → logprob: -15.812503814697266
    7. '৪' → logprob: -16.000003814697266
    8. '४' → logprob: -16.187503814697266
    9. '  ' → logprob: -16.500003814697266
    10. '[' → logprob: -16.750003814697266

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006818148540332913
    2. ']+=' → logprob: -7.6256818771362305
    3. ' ]' → logprob: -8.75068187713623
    4. '           ' → logprob: -11.25068187713623
    5. '   ' → logprob: -12.12568187713623
    6. '       ' → logprob: -12.37568187713623
    7. ']+' → logprob: -12.37568187713623
    8. ' +=' → logprob: -13.37568187713623
    9. '```' → logprob: -13.50068187713623
    10. ')' → logprob: -13.62568187713623

Token 99: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.004337783437222242
    2. '+=' → logprob: -5.504337787628174
    3. ' ' → logprob: -9.504337310791016
    4. ']+=' → logprob: -9.879337310791016
    5. '    ' → logprob: -10.129337310791016
    6. '        ' → logprob: -10.754337310791016
    7. '            ' → logprob: -10.879337310791016
    8. '           ' → logprob: -10.879337310791016
    9. '       ' → logprob: -11.754337310791016
    10. '```' → logprob: -11.754337310791016

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931478977203369
    2. ' ' → logprob: -0.6931478977203369
    3. '0' → logprob: -16.255647659301758
    4. '```' → logprob: -16.255647659301758
    5. ' ' → logprob: -16.380647659301758
    6. 'count' → logprob: -16.380647659301758
    7. '<|end|>' → logprob: -16.380647659301758
    8. ' counts' → logprob: -16.755647659301758
    9. '`' → logprob: -16.880647659301758
    10. 'counts' → logprob: -17.505647659301758

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036003058776259422
    2. ' ' → logprob: -5.628600120544434
    3. '```' → logprob: -16.12860107421875
    4. 'count' → logprob: -17.12860107421875
    5. '１' → logprob: -17.69110107421875
    6. '`' → logprob: -17.75360107421875
    7. '   ' → logprob: -18.00360107421875
    8. '' → logprob: -18.25360107421875
    9. '۱' → logprob: -18.94110107421875
    10. '0' → logprob: -18.94110107421875

Token 102: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.162282367469743e-05
    2. 'elif' → logprob: -10.500091552734375
    3. '   ' → logprob: -10.750091552734375
    4. '```' → logprob: -11.125091552734375
    5. '           ' → logprob: -11.875091552734375
    6. '<|end|>' → logprob: -12.125091552734375
    7. '[' → logprob: -12.125091552734375
    8. ' elif' → logprob: -13.500091552734375
    9. '        
' → logprob: -13.750091552734375
    10. '
' → logprob: -14.000091552734375

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004691610229201615
    2. 'elif' → logprob: -8.000469207763672
    3. ' elif' → logprob: -9.500469207763672
    4. '```' → logprob: -10.250469207763672
    5. '   ' → logprob: -11.000469207763672
    6. '           ' → logprob: -12.250469207763672
    7. ' ' → logprob: -14.750469207763672
    8. '<|end|>' → logprob: -14.875469207763672
    9. '	elif' → logprob: -15.625469207763672
    10. '`' → logprob: -15.625469207763672

Token 104: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3156615197658539
    2. 'elif' (adapté à ' elif') → logprob: -1.3156615495681763
    3. ' elif' → logprob: -6.065661430358887
    4. 'else' → logprob: -10.565661430358887
    5. '```' → logprob: -10.565661430358887
    6. '   ' → logprob: -11.190661430358887
    7. '           ' → logprob: -12.565661430358887
    8. '	elif' → logprob: -12.565661430358887
    9. 'counts' → logprob: -13.815661430358887
    10. ' else' → logprob: -14.190661430358887

Token 105: ' age' (ID: 5744)
  Prédit: ' age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' age' → logprob: -0.0011705794604495168
    2. 'age' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.50117015838623
    4. '50' → logprob: -17.126171112060547
    5. '(age' → logprob: -17.126171112060547
    6. ' ages' → logprob: -17.876171112060547
    7. 'Age' → logprob: -19.001171112060547
    8. ' edad' → logprob: -19.376171112060547
    9. '60' → logprob: -20.126171112060547
    10. '.age' → logprob: -20.251171112060547

Token 106: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1603056639432907
    2. '<' → logprob: -1.9103056192398071
    3. ' ' → logprob: -9.660305976867676
    4. '   ' → logprob: -12.535305976867676
    5. '50' → logprob: -13.035305976867676
    6. '20' → logprob: -13.160305976867676
    7. '40' → logprob: -13.535305976867676
    8. '[' → logprob: -13.535305976867676
    9. ' ' → logprob: -13.660305976867676
    10. '30' → logprob: -13.910305976867676

Token 107: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.012510117143392563
    2. ' ' → logprob: -4.387510299682617
    3. '   ' → logprob: -16.137510299682617
    4. '  ' → logprob: -16.262510299682617
    5. '50' → logprob: -16.387510299682617
    6. '6' → logprob: -16.575010299682617
    7. '600' → logprob: -16.825010299682617
    8. ' ' → logprob: -18.200010299682617
    9. '>' → logprob: -18.262510299682617
    10. '```' → logprob: -18.575010299682617

Token 108: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.00018113377154804766
    2. ' ' → logprob: -8.625181198120117
    3. '6' → logprob: -13.750181198120117
    4. '50' → logprob: -15.375181198120117
    5. '   ' → logprob: -16.000181198120117
    6. '  ' → logprob: -16.875181198120117
    7. '600' → logprob: -17.000181198120117
    8. '0' → logprob: -18.000181198120117
    9. 'si' → logprob: -18.437681198120117
    10. '
' → logprob: -18.437681198120117

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005371859879232943
    2. '           ' → logprob: -8.000536918640137
    3. ':
' → logprob: -8.625536918640137
    4. '[' → logprob: -11.500536918640137
    5. '       ' → logprob: -11.750536918640137
    6. '):' → logprob: -13.500536918640137
    7. ']:' → logprob: -14.125536918640137
    8. ' :' → logprob: -14.250536918640137
    9. '               ' → logprob: -14.625536918640137
    10. ',' → logprob: -15.375536918640137

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08133251219987869
    2. ' counts' → logprob: -2.8313324451446533
    3. 'counts' → logprob: -3.9563324451446533
    4. '               ' → logprob: -10.581332206726074
    5. '       ' → logprob: -11.581332206726074
    6. 'count' → logprob: -12.081332206726074
    7. '```' → logprob: -13.331332206726074
    8. '          ' → logprob: -13.331332206726074
    9. '   ' → logprob: -14.581332206726074
    10. '            ' → logprob: -15.081332206726074

Token 111: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.10021336376667023
    2. ' counts' → logprob: -2.3502132892608643
    3. 'count' → logprob: -12.350213050842285
    4. '           ' → logprob: -13.475213050842285
    5. '       ' → logprob: -15.100213050842285
    6. ' ' → logprob: -15.100213050842285
    7. '   ' → logprob: -15.725213050842285
    8. '               ' → logprob: -15.975213050842285
    9. '_counts' → logprob: -16.1002140045166
    10. '1' → logprob: -16.4752140045166

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.625000953674316
    3. ' [' → logprob: -16.0
    4. '5' → logprob: -16.0
    5. '<|end|>' → logprob: -16.0
    6. '       ' → logprob: -17.125
    7. '4' → logprob: -17.25
    8. ' ' → logprob: -17.375
    9. '[
' → logprob: -17.625
    10. '   ' → logprob: -17.875

Token 113: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.7491250875755213e-05
    2. '4' → logprob: -10.625027656555176
    3. ' ' → logprob: -13.625027656555176
    4. '   ' → logprob: -14.375027656555176
    5. '```' → logprob: -15.000027656555176
    6. '1' → logprob: -15.250027656555176
    7. '[' → logprob: -15.250027656555176
    8. '0' → logprob: -15.875027656555176
    9. ']' → logprob: -16.81252670288086
    10. '2' → logprob: -16.87502670288086

Token 114: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006771695916540921
    2. ' ]' → logprob: -7.375677108764648
    3. ']+=' → logprob: -10.125677108764648
    4. '           ' → logprob: -11.875677108764648
    5. '       ' → logprob: -13.375677108764648
    6. ']+' → logprob: -14.375677108764648
    7. '']' → logprob: -15.375677108764648
    8. '[' → logprob: -15.500677108764648
    9. '   ' → logprob: -15.750677108764648
    10. ')' → logprob: -15.750677108764648

Token 115: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.030155405402183533
    2. '+=' → logprob: -3.5301554203033447
    3. ']+=' → logprob: -8.780155181884766
    4. '           ' → logprob: -9.280155181884766
    5. '[' → logprob: -9.530155181884766
    6. '            ' → logprob: -10.780155181884766
    7. ' ' → logprob: -11.530155181884766
    8. '        ' → logprob: -11.530155181884766
    9. '       ' → logprob: -11.655155181884766
    10. '+' → logprob: -11.905155181884766

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5231277346611023
    2. ' ' → logprob: -0.8981277346611023
    3. '0' → logprob: -14.023127555847168
    4. 'count' → logprob: -14.648127555847168
    5. '```' → logprob: -14.710627555847168
    6. '   ' → logprob: -14.710627555847168
    7. '`' → logprob: -15.148127555847168
    8. ' ' → logprob: -15.273127555847168
    9. '+' → logprob: -15.335627555847168
    10. '-' → logprob: -15.523127555847168

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620591644197702
    2. ' ' → logprob: -5.379620552062988
    3. 'count' → logprob: -15.754620552062988
    4. '0' → logprob: -16.254621505737305
    5. '`' → logprob: -17.567121505737305
    6. '```' → logprob: -17.567121505737305
    7. 'counts' → logprob: -17.629621505737305
    8. '   ' → logprob: -17.942121505737305
    9. '60' → logprob: -18.192121505737305
    10. '10' → logprob: -18.317121505737305

Token 118: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00212325737811625
    2. 'else' → logprob: -6.3771233558654785
    3. ' else' → logprob: -7.8771233558654785
    4. '   ' → logprob: -10.62712287902832
    5. 'elif' → logprob: -11.87712287902832
    6. '           ' → logprob: -12.50212287902832
    7. '```' → logprob: -13.12712287902832
    8. '[' → logprob: -13.12712287902832
    9. ')' → logprob: -15.00212287902832
    10. '      ' → logprob: -15.12712287902832

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01180149894207716
    2. 'else' → logprob: -4.511801719665527
    3. ' else' → logprob: -7.386801719665527
    4. '   ' → logprob: -9.386801719665527
    5. 'elif' → logprob: -10.261801719665527
    6. '```' → logprob: -11.261801719665527
    7. '           ' → logprob: -14.386801719665527
    8. ' elif' → logprob: -15.011801719665527
    9. '[' → logprob: -15.136801719665527
    10. '	else' → logprob: -15.261801719665527

Token 120: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.01722858101129532
    2. '       ' → logprob: -4.767228603363037
    3. ' else' → logprob: -4.767228603363037
    4. '   ' → logprob: -9.892228126525879
    5. 'elif' → logprob: -10.892228126525879
    6. '```' → logprob: -12.767228126525879
    7. '	else' → logprob: -14.017228126525879
    8. ' ' → logprob: -16.392229080200195
    9. ' elif' → logprob: -17.017229080200195
    10. '[' → logprob: -17.017229080200195

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009132515988312662
    2. ':
' → logprob: -7.000913143157959
    3. '[' → logprob: -14.500913619995117
    4. ':
' → logprob: -14.875913619995117
    5. ':

' → logprob: -15.000913619995117
    6. ' :' → logprob: -15.625913619995117
    7. '           ' → logprob: -16.250913619995117
    8. '```' → logprob: -16.375913619995117
    9. '       ' → logprob: -16.625913619995117
    10. '{' → logprob: -17.125913619995117

Token 122: '           ' (ID: 352)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.6043410897254944
    2. 'counts' → logprob: -1.1043410301208496
    3. '           ' → logprob: -2.1043410301208496
    4. '       ' → logprob: -9.354341506958008
    5. '               ' → logprob: -9.729341506958008
    6. 'count' → logprob: -10.104341506958008
    7. '   ' → logprob: -11.354341506958008
    8. ' ' → logprob: -12.479341506958008
    9. '_counts' → logprob: -12.604341506958008
    10. '          ' → logprob: -13.479341506958008

Token 123: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.00033558503491804004
    2. ' counts' → logprob: -8.000335693359375
    3. 'count' → logprob: -16.125335693359375
    4. '   ' → logprob: -18.375335693359375
    5. '           ' → logprob: -18.500335693359375
    6. ' ' → logprob: -18.625335693359375
    7. '
' → logprob: -18.750335693359375
    8. '       ' → logprob: -19.125335693359375
    9. 'c' → logprob: -19.125335693359375
    10. '               ' → logprob: -20.000335693359375

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '6' → logprob: -14.500000953674316
    3. '```' → logprob: -16.75
    4. '[
' → logprob: -17.25
    5. ' [' → logprob: -18.75
    6. 's' → logprob: -19.375
    7. '`' → logprob: -20.375
    8. '\[' → logprob: -20.625
    9. '7' → logprob: -21.0
    10. '<|end|>' → logprob: -21.25

Token 125: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. '۶' → logprob: -17.25
    4. '٦' → logprob: -17.875
    5. '[' → logprob: -18.25
    6. '६' → logprob: -18.25
    7. '   ' → logprob: -18.875
    8. '６' → logprob: -19.25
    9. '৬' → logprob: -19.25
    10. '```' → logprob: -19.25

Token 126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015124812489375472
    2. ']+=' → logprob: -6.75151252746582
    3. ' ]' → logprob: -8.00151252746582
    4. ' +=' → logprob: -12.62651252746582
    5. '+=' → logprob: -13.25151252746582
    6. ')' → logprob: -13.37651252746582
    7. '[' → logprob: -15.12651252746582
    8. ']+' → logprob: -15.50151252746582
    9. '']' → logprob: -15.62651252746582
    10. '"]' → logprob: -17.00151252746582

Token 127: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47410863637924194
    2. ' +=' → logprob: -0.9741086363792419
    3. ']+=' → logprob: -10.599108695983887
    4. '[' → logprob: -12.599108695983887
    5. '```' → logprob: -13.849108695983887
    6. '+' → logprob: -14.224108695983887
    7. '=' → logprob: -14.224108695983887
    8. ' ' → logprob: -14.599108695983887
    9. ' ' → logprob: -15.974108695983887
    10. '   ' → logprob: -16.34910774230957

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12692810595035553
    2. ' ' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.751928329467773
    4. '```' → logprob: -18.314428329467773
    5. 'count' → logprob: -18.689428329467773
    6. '0' → logprob: -18.751928329467773
    7. '   ' → logprob: -19.001928329467773
    8. '１' → logprob: -19.001928329467773
    9. '`' → logprob: -19.564428329467773
    10. '  ' → logprob: -20.001928329467773

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -19.688125610351562
    4. '```' → logprob: -19.750625610351562
    5. '１' → logprob: -19.875625610351562
    6. '  ' → logprob: -20.063125610351562
    7. '<|end|>' → logprob: -20.188125610351562
    8. '۱' → logprob: -20.563125610351562
    9. '[' → logprob: -20.688125610351562
    10. '`' → logprob: -21.000625610351562

Token 130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16754893958568573
    2. '
' → logprob: -2.042548894882202
    3. '    
' → logprob: -5.042549133300781
    4. 'return' → logprob: -5.167549133300781
    5. ' return' → logprob: -5.417549133300781
    6. '<|end|>' → logprob: -5.417549133300781
    7. '	return' → logprob: -6.667549133300781
    8. '  
' → logprob: -7.292549133300781
    9. ' ' → logprob: -7.667549133300781
    10. '\n' → logprob: -8.292549133300781

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06946300715208054
    2. '
' → logprob: -3.319463014602661
    3. ' return' → logprob: -4.194462776184082
    4. 'return' → logprob: -4.569462776184082
    5. '    
' → logprob: -6.194462776184082
    6. '	return' → logprob: -6.444462776184082
    7. '<|end|>' → logprob: -7.319462776184082
    8. '\n' → logprob: -8.069462776184082
    9. ' ' → logprob: -8.319462776184082
    10. '  
' → logprob: -8.944462776184082

Token 132: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5036324858665466
    2. '   ' → logprob: -1.5036325454711914
    3. ' return' → logprob: -1.7536325454711914
    4. '	return' → logprob: -9.878632545471191
    5. '
' → logprob: -10.128632545471191
    6. '    
' → logprob: -10.128632545471191
    7. ' ' → logprob: -10.253632545471191
    8. '  ' → logprob: -11.878632545471191
    9. ':return' → logprob: -12.003632545471191
    10. '       ' → logprob: -12.253632545471191

Token 133: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.014163863845169544
    2. ' counts' → logprob: -4.264163970947266
    3. 'count' → logprob: -14.889163970947266
    4. 'tuple' → logprob: -21.014163970947266
    5. 'Counts' → logprob: -21.639163970947266
    6. '_counts' → logprob: -21.764163970947266
    7. '[count' → logprob: -21.889163970947266
    8. 'c' → logprob: -22.389163970947266
    9. '[' → logprob: -23.014163970947266
    10. 'cnt' → logprob: -23.639163970947266

Token 134: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44004103541374207
    2. '\n' → logprob: -2.5650410652160645
    3. 'def' → logprob: -2.6900410652160645
    4. '(' → logprob: -3.0650410652160645
    5. '[' → logprob: -3.0650410652160645
    6. '<|end|>' → logprob: -3.1900410652160645
    7. '#' → logprob: -3.9400410652160645
    8. '(
' → logprob: -4.4400410652160645
    9. 'newline' → logprob: -4.5650410652160645
    10. '```' → logprob: -4.6900410652160645

Token 135: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7655433416366577
    2. 'def' → logprob: -0.7655433416366577
    3. '#' → logprob: -3.3905434608459473
    4. '\n' → logprob: -4.265543460845947
    5. '[' → logprob: -5.140543460845947
    6. '```' → logprob: -5.265543460845947
    7. 'print' → logprob: -5.890543460845947
    8. '\' → logprob: -6.265543460845947
    9. 'newline' → logprob: -6.390543460845947
    10. '(' → logprob: -6.640543460845947

Token 136: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.002053193049505353
    2. ' print' → logprob: -7.127053260803223
    3. ' process' → logprob: -7.877053260803223
    4. ' calculate' → logprob: -8.127053260803223
    5. ' analyze' → logprob: -9.002053260803223
    6. ' display' → logprob: -9.377053260803223
    7. ' generate' → logprob: -10.002053260803223
    8. ' age' → logprob: -10.252053260803223
    9. ' categorize' → logprob: -10.252053260803223
    10. ' average' → logprob: -10.627053260803223

Token 137: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014441429637372494
    2. '(' → logprob: -4.26444149017334
    3. ':' → logprob: -8.88944149017334
    4. '(:' → logprob: -9.51444149017334
    5. '()' → logprob: -10.38944149017334
    6. ' ():' → logprob: -11.01444149017334
    7. '(":' → logprob: -11.63944149017334
    8. '(args' → logprob: -13.63944149017334
    9. '():
' → logprob: -13.76444149017334
    10. ' :' → logprob: -14.13944149017334

Token 138: '   ' (ID: 271)
  Prédit: ' ages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ages' → logprob: -0.5129631161689758
    2. '   ' → logprob: -1.137963056564331
    3. ' input' → logprob: -2.762963056564331
    4. ' import' → logprob: -4.88796329498291
    5. 'input' → logprob: -5.88796329498291
    6. 'ages' → logprob: -6.38796329498291
    7. ' data' → logprob: -6.38796329498291
    8. 'import' → logprob: -7.26296329498291
    9. ' age' → logprob: -7.26296329498291
    10. ' lines' → logprob: -7.51296329498291

Token 139: ' input' (ID: 3422)
  Prédit: ' ages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ages' → logprob: -0.49905073642730713
    2. ' lines' → logprob: -1.9990507364273071
    3. ' input' → logprob: -2.1240506172180176
    4. ' n' → logprob: -2.7490506172180176
    5. '   ' → logprob: -3.7490506172180176
    6. ' data' → logprob: -3.9990506172180176
    7. ' import' → logprob: -4.499050617218018
    8. 'n' → logprob: -5.249050617218018
    9. ' line' → logprob: -5.749050617218018
    10. ' if' → logprob: -5.999050617218018

Token 140: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20809981226921082
    2. '_' → logprob: -2.333099842071533
    3. '_data' → logprob: -2.708099842071533
    4. '(' → logprob: -4.583099842071533
    5. 's' → logprob: -5.333099842071533
    6. '_ids' → logprob: -6.083099842071533
    7. '_lines' → logprob: -6.333099842071533
    8. ' =' → logprob: -6.458099842071533
    9. '_line' → logprob: -6.708099842071533
    10. '_list' → logprob: -7.083099842071533

Token 141: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0789472907781601
    2. 'sys' → logprob: -2.5789473056793213
    3. '	sys' → logprob: -10.453947067260742
    4. '=sys' → logprob: -11.703947067260742
    5. '(sys' → logprob: -11.828947067260742
    6. 'input' → logprob: -12.078947067260742
    7. ' input' → logprob: -12.078947067260742
    8. ' ' → logprob: -13.328947067260742
    9. '_sys' → logprob: -17.078947067260742
    10. '```' → logprob: -17.203947067260742

Token 142: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00919790007174015
    2. '.' → logprob: -4.75919771194458
    3. '.argv' → logprob: -7.50919771194458
    4. '.stdout' → logprob: -10.509198188781738
    5. '.std' → logprob: -12.759198188781738
    6. '.input' → logprob: -13.009198188781738
    7. '.readline' → logprob: -13.634198188781738
    8. ' .' → logprob: -14.259198188781738
    9. 'stdin' → logprob: -14.634198188781738
    10. '(stdin' → logprob: -15.884198188781738

Token 143: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.024680903181433678
    2. '.' → logprob: -4.399681091308594
    3. '.read' → logprob: -4.524681091308594
    4. '.readlines' → logprob: -6.774681091308594
    5. 'read' → logprob: -9.149681091308594
    6. ' .' → logprob: -12.649681091308594
    7. '```' → logprob: -13.149681091308594
    8. '.buffer' → logprob: -13.524681091308594
    9. '
' → logprob: -14.274681091308594
    10. '.Read' → logprob: -14.399681091308594

Token 144: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018177097663283348
    2. '().' → logprob: -4.018177032470703
    3. '()
' → logprob: -10.643177032470703
    4. '(' → logprob: -13.268177032470703
    5. '()

' → logprob: -14.393177032470703
    6. '())' → logprob: -15.268177032470703
    7. '()`' → logprob: -15.393177032470703
    8. '()"' → logprob: -16.268177032470703
    9. ' ()' → logprob: -16.518177032470703
    10. '()\' → logprob: -16.643177032470703

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016910118283703923
    2. '    
' → logprob: -7.001690864562988
    3. '(' → logprob: -7.626690864562988
    4. '()' → logprob: -8.876690864562988
    5. ' ages' → logprob: -9.626690864562988
    6. '(age' → logprob: -11.376690864562988
    7. '(n' → logprob: -11.501690864562988
    8. 'ages' → logprob: -11.501690864562988
    9. '    ' → logprob: -11.626690864562988
    10. '(
' → logprob: -11.751690864562988

Token 146: ' while' (ID: 2049)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1625284105539322
    2. 'n' → logprob: -1.912528395652771
    3. '   ' → logprob: -6.1625285148620605
    4. ' N' → logprob: -9.912528038024902
    5. ' ages' → logprob: -10.537528038024902
    6. 'num' → logprob: -10.662528038024902
    7. ' num' → logprob: -11.037528038024902
    8. ' try' → logprob: -11.412528038024902
    9. '    ' → logprob: -11.537528038024902
    10. '    
' → logprob: -11.787528038024902

Token 147: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.003298793686553836
    2. 'True' → logprob: -5.753298759460449
    3. '(True' → logprob: -9.37829875946045
    4. ' ' → logprob: -10.50329875946045
    5. ' line' → logprob: -12.50329875946045
    6. ' (' → logprob: -13.37829875946045
    7. ' Tru' → logprob: -13.75329875946045
    8. '1' → logprob: -13.87829875946045
    9. '=True' → logprob: -14.00329875946045
    10. '   ' → logprob: -15.62829875946045

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036144492332823575
    2. '():' → logprob: -8.125361442565918
    3. ' :' → logprob: -9.875361442565918
    4. '):' → logprob: -12.125361442565918
    5. ',' → logprob: -12.625361442565918
    6. ':
' → logprob: -13.000361442565918
    7. ':**' → logprob: -13.375361442565918
    8. '   ' → logprob: -14.125361442565918
    9. '(' → logprob: -15.500361442565918
    10. '():
' → logprob: -16.750362396240234

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00905626267194748
    2. '   ' → logprob: -4.884056091308594
    3. '    ' → logprob: -7.509056091308594
    4. ',' → logprob: -8.259056091308594
    5. ' ' → logprob: -8.384056091308594
    6. ':' → logprob: -9.009056091308594
    7. '<|end|>' → logprob: -9.384056091308594
    8. '      ' → logprob: -9.634056091308594
    9. '  ' → logprob: -10.384056091308594
    10. '     ' → logprob: -10.509056091308594

Token 150: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.007546881213784218
    2. 'line' → logprob: -5.632546901702881
    3. '   ' → logprob: -6.882546901702881
    4. ' n' → logprob: -6.882546901702881
    5. ' data' → logprob: -7.132546901702881
    6. ' ages' → logprob: -8.257546424865723
    7. 'data' → logprob: -8.757546424865723
    8. '       ' → logprob: -9.007546424865723
    9. '    ' → logprob: -9.132546424865723
    10. 'n' (adapté à ' n') → logprob: -9.382546424865723

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009183725342154503
    2. '=' → logprob: -4.759183883666992
    3. ' ' → logprob: -7.634183883666992
    4. '_line' → logprob: -9.884183883666992
    5. '_str' → logprob: -10.884183883666992
    6. '_' → logprob: -12.509183883666992
    7. '=int' → logprob: -12.759183883666992
    8. '_input' → logprob: -13.134183883666992
    9. '_space' → logprob: -13.384183883666992
    10. '=line' → logprob: -13.759183883666992

Token 152: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06618248671293259
    2. 'int' → logprob: -2.8161823749542236
    3. ' input' → logprob: -5.566182613372803
    4. 'input' → logprob: -7.941182613372803
    5. ' ' → logprob: -11.316182136535645
    6. ' sys' → logprob: -11.691182136535645
    7. '=int' → logprob: -13.816182136535645
    8. '(int' → logprob: -14.441182136535645
    9. ' in' → logprob: -14.566182136535645
    10. ' 
' → logprob: -14.816182136535645

Token 153: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004088373854756355
    2. '(' → logprob: -5.504088401794434
    3. ' (' → logprob: -12.254088401794434
    4. '(sys' → logprob: -12.879088401794434
    5. 'input' → logprob: -13.629088401794434
    6. '(
' → logprob: -14.504088401794434
    7. '((' → logprob: -15.254088401794434
    8. '=input' → logprob: -15.254088401794434
    9. '(in' → logprob: -16.004087448120117
    10. '(

' → logprob: -16.504087448120117

Token 154: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5550700426101685
    2. '().' → logprob: -1.0550700426101685
    3. '()' → logprob: -2.555069923400879
    4. ' ())' → logprob: -9.305069923400879
    5. '()
' → logprob: -11.680069923400879
    6. ')' → logprob: -12.430069923400879
    7. '(' → logprob: -12.805069923400879
    8. ' ()' → logprob: -13.305069923400879
    9. '();)' → logprob: -13.555069923400879
    10. '()))' → logprob: -13.680069923400879

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015800897032022476
    2. '<|end|>' → logprob: -5.015800952911377
    3. ' if' → logprob: -5.140800952911377
    4. ' ' → logprob: -6.515800952911377
    5. '   ' → logprob: -7.015800952911377
    6. '        ' → logprob: -8.015800476074219
    7. ')' → logprob: -8.765800476074219
    8. '<|end|>' → logprob: -9.140800476074219
    9. '    ' → logprob: -9.890800476074219
    10. '      ' → logprob: -10.140800476074219

Token 156: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014877952635288239
    2. 'if' (adapté à ' if') → logprob: -4.389877796173096
    3. '<|end|>' → logprob: -6.514877796173096
    4. ' ' → logprob: -7.264877796173096
    5. '    ' → logprob: -9.639878273010254
    6. '       ' → logprob: -9.889878273010254
    7. '   ' → logprob: -10.889878273010254
    8. '        ' → logprob: -10.889878273010254
    9. '<|end|>' → logprob: -11.139878273010254
    10. '	if' → logprob: -12.514878273010254

Token 157: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00026872646412812173
    2. 'n' → logprob: -8.875268936157227
    3. ' not' → logprob: -9.000268936157227
    4. ' ' → logprob: -12.625268936157227
    5. '	n' → logprob: -13.250268936157227
    6. ' н' → logprob: -16.125268936157227
    7. '<|end|>' → logprob: -16.625268936157227
    8. ' ' → logprob: -16.750268936157227
    9. 'not' → logprob: -17.125268936157227
    10. '0' → logprob: -17.875268936157227

Token 158: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020551582798361778
    2. '==' → logprob: -3.8955516815185547
    3. ' ' → logprob: -12.770551681518555
    4. '=' → logprob: -12.895551681518555
    5. ' <=' → logprob: -13.645551681518555
    6. ')==' → logprob: -14.395551681518555
    7. '()==' → logprob: -14.395551681518555
    8. ' =' → logprob: -14.520551681518555
    9. '===' → logprob: -15.520551681518555
    10. '[' → logprob: -15.520551681518555

Token 159: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021314769983292
    2. '0' → logprob: -2.350213050842285
    3. ' ' → logprob: -11.975213050842285
    4. '_' → logprob: -17.4127140045166
    5. '<|end|>' → logprob: -17.5377140045166
    6. '```' → logprob: -17.6002140045166
    7. '  ' → logprob: -17.6627140045166
    8. ' 
' → logprob: -17.9127140045166
    9. ' -' → logprob: -18.1002140045166
    10. '۰' → logprob: -18.1627140045166

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002671768015716225
    2. ' ' → logprob: -8.250267028808594
    3. '-' → logprob: -12.375267028808594
    4. '```' → logprob: -14.500267028808594
    5. ' -' → logprob: -15.375267028808594
    6. ')' → logprob: -15.375267028808594
    7. '    ' → logprob: -16.250267028808594
    8. '   ' → logprob: -16.375267028808594
    9. '  ' → logprob: -16.500267028808594
    10. '	' → logprob: -16.500267028808594

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022059278562664986
    2. ':
' → logprob: -6.127205848693848
    3. ':return' → logprob: -11.502205848693848
    4. '):' → logprob: -12.627205848693848
    5. '       ' → logprob: -12.752205848693848
    6. ' :' → logprob: -13.752205848693848
    7. '   ' → logprob: -14.002205848693848
    8. ')' → logprob: -14.377205848693848
    9. '<|end|>' → logprob: -14.502205848693848
    10. '           ' → logprob: -14.752205848693848

Token 162: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005279057659208775
    2. ':' → logprob: -5.505279064178467
    3. '       ' → logprob: -7.380279064178467
    4. ':
' → logprob: -8.505278587341309
    5. '		' → logprob: -8.630278587341309
    6. ' break' → logprob: -10.255278587341309
    7. ',' → logprob: -10.380278587341309
    8. '	       ' → logprob: -10.755278587341309
    9. '<|end|>' → logprob: -10.880278587341309
    10. '	break' → logprob: -11.005278587341309

Token 163: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5535041093826294
    2. '           ' → logprob: -1.5535041093826294
    3. 'break' (adapté à ' break') → logprob: -1.5535041093826294
    4. '       ' → logprob: -7.05350399017334
    5. '               ' → logprob: -7.55350399017334
    6. 'return' → logprob: -8.30350399017334
    7. '	break' → logprob: -8.30350399017334
    8. ' return' → logprob: -9.17850399017334
    9. '
' → logprob: -10.92850399017334
    10. '   ' → logprob: -11.17850399017334

Token 164: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003762071020901203
    2. '<|end|>' → logprob: -5.753762245178223
    3. '        
' → logprob: -7.878762245178223
    4. '<|end|>' → logprob: -9.878762245178223
    5. '
' → logprob: -10.503762245178223
    6. '        ' → logprob: -10.503762245178223
    7. '   ' → logprob: -10.753762245178223
    8. ' ages' → logprob: -11.128762245178223
    9. ',' → logprob: -11.503762245178223
    10. '      ' → logprob: -11.503762245178223

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001997273648157716
    2. '
' → logprob: -6.501997470855713
    3. '        
' → logprob: -7.876997470855713
    4. '<|end|>' → logprob: -9.876996994018555
    5. '   ' → logprob: -11.001996994018555
    6. ' ages' → logprob: -12.001996994018555
    7. '	' → logprob: -12.251996994018555
    8. '  
' → logprob: -12.251996994018555
    9. '    
' → logprob: -12.626996994018555
    10. '      ' → logprob: -12.751996994018555

Token 166: ' ages' (ID: 20355)
  Prédit: ' ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ages' → logprob: -0.5785315036773682
    2. '       ' → logprob: -0.9535315036773682
    3. 'ages' (adapté à ' ages') → logprob: -2.953531503677368
    4. '   ' → logprob: -6.828531265258789
    5. ' age' → logprob: -9.078531265258789
    6. '	' → logprob: -9.453531265258789
    7. '        
' → logprob: -9.703531265258789
    8. ' data' → logprob: -9.703531265258789
    9. '        ' → logprob: -9.953531265258789
    10. ' ' → logprob: -10.453531265258789

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009757863357663155
    2. '=' → logprob: -4.634757995605469
    3. '[' → logprob: -14.634757995605469
    4. ' =[' → logprob: -15.134757995605469
    5. ')' → logprob: -15.384757995605469
    6. ' ' → logprob: -15.634757995605469
    7. 's' → logprob: -15.634757995605469
    8. '_' → logprob: -15.884757995605469
    9. ' ' → logprob: -16.13475799560547
    10. '=[]' → logprob: -16.25975799560547

Token 168: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.31360283493995667
    2. ' [' → logprob: -1.8136028051376343
    3. '[' → logprob: -2.813602924346924
    4. ' list' → logprob: -3.563602924346924
    5. 'list' → logprob: -4.313602924346924
    6. '[input' → logprob: -5.938602924346924
    7. '[]' → logprob: -7.438602924346924
    8. '[int' → logprob: -7.563602924346924
    9. '[n' → logprob: -8.313602447509766
    10. '[List' → logprob: -9.563602447509766

Token 169: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00091217877343297
    2. ' int' → logprob: -7.000912189483643
    3. '   ' → logprob: -15.000911712646484
    4. '    ' → logprob: -15.875911712646484
    5. ' ' → logprob: -16.875911712646484
    6. '<int' → logprob: -17.125911712646484
    7. ']int' → logprob: -17.125911712646484
    8. '	int' → logprob: -17.375911712646484
    9. 'in' → logprob: -17.375911712646484
    10. '  ' → logprob: -17.625911712646484

Token 170: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0031907858792692423
    2. '(' → logprob: -5.753190994262695
    3. 'input' → logprob: -11.503190994262695
    4. ' (' → logprob: -13.378190994262695
    5. '(
' → logprob: -14.378190994262695
    6. '(x' → logprob: -15.253190994262695
    7. ' input' → logprob: -15.503190994262695
    8. '()' → logprob: -15.878190994262695
    9. '(

' → logprob: -16.128190994262695
    10. '(in' → logprob: -16.628190994262695

Token 171: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00958927907049656
    2. '()' → logprob: -5.009589195251465
    3. '().' → logprob: -5.884589195251465
    4. '()]' → logprob: -9.759589195251465
    5. ' ())' → logprob: -11.509589195251465
    6. '()
' → logprob: -12.009589195251465
    7. ')' → logprob: -12.134589195251465
    8. '())
' → logprob: -12.884589195251465
    9. '()`' → logprob: -13.134589195251465
    10. '(' → logprob: -13.759589195251465

Token 172: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019354235846549273
    2. ')' → logprob: -6.7519354820251465
    3. '())' → logprob: -7.3769354820251465
    4. '().' → logprob: -9.126935005187988
    5. 'for' → logprob: -11.876935005187988
    6. '()]' → logprob: -11.876935005187988
    7. '(' → logprob: -12.001935005187988
    8. ' ()' → logprob: -12.001935005187988
    9. '()
' → logprob: -13.751935005187988
    10. ' ' → logprob: -13.876935005187988

Token 173: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.024029968306422234
    2. ' _' → logprob: -4.649029731750488
    3. 'range' → logprob: -4.774029731750488
    4. '_' → logprob: -5.274029731750488
    5. ' ' → logprob: -7.524029731750488
    6. '_range' → logprob: -10.524029731750488
    7. ' xrange' → logprob: -10.899029731750488
    8. ' in' → logprob: -11.399029731750488
    9. ' i' → logprob: -12.649029731750488
    10. '	range' → logprob: -13.024029731750488

Token 174: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5598676204681396
    2. ' in' → logprob: -1.0598676204681396
    3. 'in' → logprob: -2.6848676204681396
    4. ' range' → logprob: -4.309867858886719
    5. ' ' → logprob: -8.184867858886719
    6. 'n' → logprob: -9.309867858886719
    7. '(range' → logprob: -9.559867858886719
    8. 'ange' → logprob: -10.434867858886719
    9. '  ' → logprob: -10.684867858886719
    10. '	range' → logprob: -10.809867858886719

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003948072553612292
    2. ' range' → logprob: -7.875394821166992
    3. '   ' → logprob: -12.250394821166992
    4. ' ' → logprob: -13.000394821166992
    5. 'ange' → logprob: -13.125394821166992
    6. ')' → logprob: -14.125394821166992
    7. '       ' → logprob: -14.125394821166992
    8. '(range' → logprob: -14.125394821166992
    9. '  ' → logprob: -14.625394821166992
    10. '    ' → logprob: -14.625394821166992

Token 176: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.991464786347933e-05
    2. '(' → logprob: -9.750060081481934
    3. 'n' → logprob: -13.750060081481934
    4. ' (' → logprob: -14.750060081481934
    5. ' n' → logprob: -16.000059127807617
    6. '(
' → logprob: -19.000059127807617
    7. ')n' → logprob: -20.000059127807617
    8. '	n' → logprob: -20.500059127807617
    9. '(N' → logprob: -21.000059127807617
    10. '(num' → logprob: -21.750059127807617

Token 177: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011892046313732862
    2. ')' → logprob: -9.75011920928955
    3. ']' → logprob: -9.75011920928955
    4. ')]
' → logprob: -14.00011920928955
    5. ' )' → logprob: -14.12511920928955
    6. '))' → logprob: -15.62511920928955
    7. ' ' → logprob: -16.750118255615234
    8. '   ' → logprob: -16.750118255615234
    9. '       ' → logprob: -16.875118255615234
    10. ')}' → logprob: -17.000118255615234

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12460902333259583
    2. ' counts' → logprob: -2.2496089935302734
    3. '   ' → logprob: -4.749608993530273
    4. 'counts' → logprob: -6.124608993530273
    5. '<|end|>' → logprob: -8.874608993530273
    6. '_counts' → logprob: -9.249608993530273
    7. ' distribution' → logprob: -9.249608993530273
    8. ' results' → logprob: -9.374608993530273
    9. 'count' → logprob: -9.499608993530273
    10. ' print' → logprob: -9.624608993530273

Token 179: ' result' (ID: 1534)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.12437524646520615
    2. ' counts' → logprob: -2.624375343322754
    3. 'dist' → logprob: -4.124375343322754
    4. 'result' (adapté à ' result') → logprob: -4.499375343322754
    5. 'distribution' → logprob: -4.624375343322754
    6. ' dist' → logprob: -6.374375343322754
    7. ' distribution' → logprob: -6.374375343322754
    8. ' result' → logprob: -6.624375343322754
    9. 'dis' → logprob: -7.249375343322754
    10. 'd' → logprob: -7.374375343322754

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011705794604495168
    2. '=' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.87617015838623
    4. ' =)' → logprob: -16.876171112060547
    5. ' =[' → logprob: -17.126171112060547
    6. 's' → logprob: -17.751171112060547
    7. ' ' → logprob: -17.876171112060547
    8. '_' → logprob: -18.001171112060547
    9. '[' → logprob: -18.376171112060547
    10. '[:]' → logprob: -18.376171112060547

Token 181: ' age' (ID: 5744)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.632606029510498
    2. ' age' → logprob: -0.757606029510498
    3. '(age' → logprob: -12.382606506347656
    4. ' ' → logprob: -13.757606506347656
    5. '   ' → logprob: -14.757606506347656
    6. '"' → logprob: -15.257606506347656
    7. 'ages' → logprob: -15.507606506347656
    8. ' ' → logprob: -15.507606506347656
    9. '.age' → logprob: -15.507606506347656
    10. '_age' → logprob: -16.320106506347656

Token 182: '_distribution' (ID: 102196)
  Prédit: '_distribution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distribution' → logprob: -1.0280383548888494e-06
    2. '_dis' → logprob: -14.125000953674316
    3. '_' → logprob: -15.625000953674316
    4. '_dist' → logprob: -17.125001907348633
    5. '_counts' → logprob: -18.625001907348633
    6. 'distribution' → logprob: -18.625001907348633
    7. ' _' → logprob: -18.875001907348633
    8. ' distribution' → logprob: -19.375001907348633
    9. '_analysis' → logprob: -20.125001907348633
    10. '_d' → logprob: -20.125001907348633

Token 183: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. ' (' → logprob: -15.000000953674316
    3. '(age' → logprob: -15.125000953674316
    4. '(
' → logprob: -16.375
    5. '((' → logprob: -18.625
    6. '(scores' → logprob: -19.375
    7. '(results' → logprob: -19.75
    8. 'ages' → logprob: -19.875
    9. '(numbers' → logprob: -20.125
    10. '(ids' → logprob: -20.125

Token 184: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.001945533906109631
    2. '(' → logprob: -6.251945495605469
    3. ' ages' → logprob: -11.001945495605469
    4. 'age' → logprob: -15.751945495605469
    5. ')' → logprob: -15.751945495605469
    6. '(age' → logprob: -18.50194549560547
    7. ' (' → logprob: -19.62694549560547
    8. 'aces' → logprob: -19.75194549560547
    9. 'AGES' → logprob: -19.87694549560547
    10. '(
' → logprob: -20.12694549560547

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6934363842010498
    2. ')
' → logprob: -0.6934363842010498
    3. ')
' → logprob: -8.318436622619629
    4. ')

' → logprob: -11.193436622619629
    5. ' )
' → logprob: -11.943436622619629
    6. '()
' → logprob: -12.318436622619629
    7. '
' → logprob: -12.443436622619629
    8. '[' → logprob: -12.443436622619629
    9. '   ' → logprob: -12.568436622619629
    10. '()' → logprob: -12.943436622619629

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012222124263644218
    2. '   ' → logprob: -5.2622222900390625
    3. ' print' → logprob: -5.8872222900390625
    4. ' for' → logprob: -6.1372222900390625
    5. 'print' → logprob: -6.2622222900390625
    6. 'for' → logprob: -9.512222290039062
    7. '        
' → logprob: -11.637222290039062
    8. '
' → logprob: -11.887222290039062
    9. '```' → logprob: -12.012222290039062
    10. '<|end|>' → logprob: -12.262222290039062

Token 187: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001242017257027328
    2. ' print' → logprob: -7.126242160797119
    3. 'for' (adapté à ' for') → logprob: -7.876242160797119
    4. '       ' → logprob: -9.876241683959961
    5. ' for' → logprob: -12.126241683959961
    6. '        
' → logprob: -15.001241683959961
    7. '```' → logprob: -15.501241683959961
    8. '   ' → logprob: -15.626241683959961
    9. '
' → logprob: -15.876241683959961
    10. 'sys' → logprob: -16.37624168395996

Token 188: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.8003937602043152
    2. 'count' → logprob: -0.9253937602043152
    3. ' i' → logprob: -2.30039381980896
    4. 'i' → logprob: -3.05039381980896
    5. ' r' → logprob: -5.425393581390381
    6. 'r' → logprob: -6.425393581390381
    7. 'num' → logprob: -8.675394058227539
    8. 'c' → logprob: -8.925394058227539
    9. ' num' → logprob: -8.925394058227539
    10. ' x' → logprob: -8.925394058227539

Token 189: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003369254292920232
    2. 'in' → logprob: -5.878369331359863
    3. ' ' → logprob: -7.753369331359863
    4. ',' → logprob: -9.253369331359863
    5. 's' → logprob: -11.253369331359863
    6. 'count' → logprob: -12.253369331359863
    7. ' ,' → logprob: -12.253369331359863
    8. '  ' → logprob: -12.503369331359863
    9. '	in' → logprob: -12.628369331359863
    10. '_in' → logprob: -12.753369331359863

Token 190: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.0788901224732399
    2. 'result' → logprob: -2.578890085220337
    3. ' results' → logprob: -15.578889846801758
    4. '(result' → logprob: -15.578889846801758
    5. ' ' → logprob: -17.828889846801758
    6. '	result' → logprob: -17.828889846801758
    7. '_result' → logprob: -18.453889846801758
    8. '[result' → logprob: -18.953889846801758
    9. 'results' → logprob: -19.078889846801758
    10. ' range' → logprob: -19.203889846801758

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008850920014083385
    2. ':
' → logprob: -4.758851051330566
    3. 'print' → logprob: -8.883851051330566
    4. ',' → logprob: -10.258851051330566
    5. '           ' → logprob: -10.258851051330566
    6. ' print' → logprob: -12.008851051330566
    7. '       ' → logprob: -12.383851051330566
    8. '):' → logprob: -12.633851051330566
    9. '.print' → logprob: -12.758851051330566
    10. ':
' → logprob: -13.008851051330566

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00944474432617426
    2. ' print' → logprob: -4.759444713592529
    3. 'print' → logprob: -7.884444713592529
    4. '       ' → logprob: -7.884444713592529
    5. '            ' → logprob: -10.634445190429688
    6. '        ' → logprob: -10.759445190429688
    7. '   ' → logprob: -12.134445190429688
    8. '    ' → logprob: -12.509445190429688
    9. '	       ' → logprob: -12.509445190429688
    10. '            
' → logprob: -12.509445190429688

Token 193: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2544604539871216
    2. 'print' (adapté à ' print') → logprob: -1.5044604539871216
    3. '           ' → logprob: -6.129460334777832
    4. '       ' → logprob: -8.379460334777832
    5. '        ' → logprob: -9.879460334777832
    6. ' sys' → logprob: -10.379460334777832
    7. '            ' → logprob: -11.379460334777832
    8. '```' → logprob: -12.129460334777832
    9. '   ' → logprob: -12.629460334777832
    10. '    ' → logprob: -12.754460334777832

Token 194: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.013919955119490623
    2. 'count' → logprob: -4.763919830322266
    3. '(' → logprob: -5.263919830322266
    4. '(f' → logprob: -9.638919830322266
    5. ' count' → logprob: -10.388919830322266
    6. '('' → logprob: -11.138919830322266
    7. 'f' → logprob: -13.013919830322266
    8. '("' → logprob: -13.888919830322266
    9. '	count' → logprob: -14.638919830322266
    10. '()' → logprob: -14.763919830322266

Token 195: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.596781946020201e-05
    2. ',' → logprob: -10.625045776367188
    3. ' )' → logprob: -10.875045776367188
    4. ')
' → logprob: -14.125045776367188
    5. ',)' → logprob: -14.750045776367188
    6. ',end' → logprob: -14.750045776367188
    7. '())' → logprob: -15.125045776367188
    8. '()' → logprob: -15.375045776367188
    9. ');' → logprob: -15.750045776367188
    10. ')`' → logprob: -16.250045776367188

Token 196: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04683630168437958
    2. '
' → logprob: -3.4218363761901855
    3. '\n' → logprob: -5.1718363761901855
    4. 'main' → logprob: -5.7968363761901855
    5. '<|end|>' → logprob: -5.9218363761901855
    6. ' if' → logprob: -7.0468363761901855
    7. '```' → logprob: -7.7968363761901855
    8. '   ' → logprob: -9.921835899353027
    9. '  
' → logprob: -10.046835899353027
    10. ' ' → logprob: -10.046835899353027

Token 197: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0047089881263673306
    2. '__' → logprob: -5.379708766937256
    3. '_' → logprob: -9.879709243774414
    4. ' ' → logprob: -10.629709243774414
    5. '_name' → logprob: -11.629709243774414
    6. ' _' → logprob: -13.629709243774414
    7. ' ' → logprob: -14.129709243774414
    8. ' ' → logprob: -14.254709243774414
    9. ' ___' → logprob: -14.504709243774414
    10. ' ‌' → logprob: -15.004709243774414

Token 198: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5693576335906982
    2. ' __' → logprob: -1.4443576335906982
    3. ' ==' → logprob: -2.1943576335906982
    4. '.__' → logprob: -2.9443576335906982
    5. ' .' → logprob: -3.8193576335906982
    6. '__.__' → logprob: -5.694357872009277
    7. '==' → logprob: -6.069357872009277
    8. '.' → logprob: -6.069357872009277
    9. '__.' → logprob: -6.944357872009277
    10. ' =="' → logprob: -7.694357872009277

Token 199: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3425219549390022e-05
    2. '__.__' → logprob: -11.37501335144043
    3. '__.' → logprob: -14.12501335144043
    4. '_' → logprob: -14.37501335144043
    5. '___' → logprob: -15.25001335144043
    6. '==' → logprob: -15.75001335144043
    7. '__
' → logprob: -16.12501335144043
    8. '____' → logprob: -16.50001335144043
    9. '__["' → logprob: -17.12501335144043
    10. '__[' → logprob: -17.50001335144043

Token 200: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05043570697307587
    2. '__' → logprob: -3.300435781478882
    3. '==' → logprob: -4.550435543060303
    4. '=="' → logprob: -7.175435543060303
    5. '.__' → logprob: -7.925435543060303
    6. '.' → logprob: -8.050436019897461
    7. ' =="' → logprob: -9.425436019897461
    8. ' .' → logprob: -9.675436019897461
    9. ' ' → logprob: -10.175436019897461
    10. '=='' → logprob: -10.300436019897461

Token 201: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.201459139585495
    2. ''' → logprob: -1.7014591693878174
    3. ' "' → logprob: -10.451458930969238
    4. '__' → logprob: -11.326458930969238
    5. ' '' → logprob: -13.326458930969238
    6. ' "__' → logprob: -13.451458930969238
    7. '`' → logprob: -13.951458930969238
    8. ' ' → logprob: -15.326458930969238
    9. '_' → logprob: -15.326458930969238
    10. '```' → logprob: -16.326459884643555

Token 202: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013074465095996857
    2. 'main' → logprob: -4.3880743980407715
    3. '"' → logprob: -7.8880743980407715
    4. '___' → logprob: -9.63807487487793
    5. '```' → logprob: -10.26307487487793
    6. '_main' → logprob: -10.76307487487793
    7. '__
' → logprob: -11.26307487487793
    8. 'python' → logprob: -11.76307487487793
    9. '__":
' → logprob: -11.76307487487793
    10. '____' → logprob: -12.01307487487793

Token 203: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3885001838207245
    2. '__' → logprob: -1.1385002136230469
    3. '__:' → logprob: -7.013500213623047
    4. '_' → logprob: -7.638500213623047
    5. '__':
' → logprob: -8.763500213623047
    6. '__.' → logprob: -10.138500213623047
    7. '__["' → logprob: -10.638500213623047
    8. ':' → logprob: -11.388500213623047
    9. '__.__' → logprob: -12.138500213623047
    10. '.' → logprob: -12.763500213623047

Token 204: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01092143077403307
    2. 'main' → logprob: -4.635921478271484
    3. '"' → logprob: -7.385921478271484
    4. '	main' → logprob: -8.010921478271484
    5. ' ' → logprob: -9.760921478271484
    6. ' ' → logprob: -10.010921478271484
    7. '   ' → logprob: -10.260921478271484
    8. ' __' → logprob: -11.135921478271484
    9. '_main' → logprob: -11.260921478271484
    10. ''' → logprob: -11.510921478271484

Token 205: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.07889066636562347
    2. ' main' → logprob: -2.578890562057495
    3. '	main' → logprob: -13.953890800476074
    4. '_main' → logprob: -17.953889846801758
    5. 'm' → logprob: -18.078889846801758
    6. 'ma' → logprob: -18.328889846801758
    7. '(main' → logprob: -18.453889846801758
    8. 'maine' → logprob: -19.203889846801758
    9. '.main' → logprob: -19.453889846801758
    10. '   ' → logprob: -19.578889846801758

Token 206: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007875907467678189
    2. '(' → logprob: -7.375787734985352
    3. '()
' → logprob: -8.750787734985352
    4. '(
' → logprob: -13.750787734985352
    5. '()`' → logprob: -15.000787734985352
    6. '()

' → logprob: -15.250787734985352
    7. '()\' → logprob: -15.500787734985352
    8. ' ()' → logprob: -15.625787734985352
    9. '()<' → logprob: -16.00078773498535
    10. '```' → logprob: -16.00078773498535


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 204
Tokens correctement prédits (1ère position, stricte): 123
Tokens correctement prédits (1ère position, avec adaptation): 135
Tokens correctement prédits (top 10): 192
Précision stricte (1ère position): 60.29%
Précision adaptée (1ère position): 66.18%
Précision (top 10): 94.12%
================================================================================
