================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:29:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Matrix:
    def __init__(self, n, data):
        if len(data) != n or any(len(row) != n for row in data):
            raise ValueError("Data dimensions do not match n x n.")
        self.n = n
        self.data = data

    def submatrix_sum(self, r1, r2, c1, c2):
        # Sum of elements in the submatrix from rows r1 to r2 and columns c1 to c2 inclusive
        total = 0
        for r in range(r1, r2 + 1):
            for c in range(c1, c2 + 1):
                total += self.data[r][c]
        return total


class KadaneResult:
    def __init__(self, max_sum, start_index, end_index):
        self.max_sum = max_sum
        self.start_index = start_index
        self.end_index = end_index


class Kadane:
    @staticmethod
    def run(arr):
        max_current = max_global = arr[0]
        start = end = s = 0

        for i in range(1, len(arr)):
            if arr[i] > max_current + arr[i]:
                max_current = arr[i]
                s = i
            else:
                max_current += arr[i]

            if max_current > max_global:
                max_global = max_current
                start = s
                end = i

        return KadaneResult(max_global, start, end)


class MaxSubmatrixSumFinder:
    def __init__(self, matrix):
        self.matrix = matrix

    def find_max_sum(self):
        n = self.matrix.n
        max_sum = -float('inf')

        # Iterate over left column
        for left in range(n):
            # Temporary array for row sums
            temp_row_sum = [0] * n

            # Iterate over right column >= left
            for right in range(left, n):
                for row in range(n):
                    temp_row_sum[row] += self.matrix.data[row][right]

                # Use Kadane's algorithm on temp_row_sum to find max subarray sum
                kadane_res = Kadane.run(temp_row_sum)
                if kadane_res.max_sum > max_sum:
                    max_sum = kadane_res.max_sum
        return max_sum


class InputReader:
    @staticmethod
    def read():
        import sys
        lines = sys.stdin.read().strip().split('\n')
        n = int(lines[0])
        data = []
        for i in range(1, n+1):
            row = list(map(int, lines[i].strip().split()))
            data.append(row)
        return n, data


class MaxSumSequenceII:
    def __init__(self):
        self.n = None
        self.matrix = None
        self.finder = None

    def execute(self):
        self.n, data = InputReader.read()
        self.matrix = Matrix(self.n, data)
        self.finder = MaxSubmatrixSumFinder(self.matrix)
        answer = self.finder.find_max_sum()
        print(answer)


if __name__ == "__main__":
    program = MaxSumSequenceII()
    program.execute()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Matrix' (ID: 23226)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5047476291656494
    2. ':' → logprob: -1.0047476291656494
    3. '```' → logprob: -3.8797476291656494
    4. '.' → logprob: -5.12974739074707
    5. '   ' → logprob: -7.00474739074707
    6. '\' → logprob: -7.00474739074707
    7. ''' → logprob: -8.00474739074707
    8. '[' → logprob: -8.25474739074707
    9. '(
' → logprob: -8.87974739074707
    10. '\(' → logprob: -8.87974739074707

Token 4: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5953592658042908
    2. 'def' (adapté à ' def') → logprob: -2.0953593254089355
    3. '   ' → logprob: -2.4703593254089355
    4. '```' → logprob: -2.4703593254089355
    5. '\' → logprob: -3.3453593254089355
    6. '(' → logprob: -3.7203593254089355
    7. '_' → logprob: -3.9703593254089355
    8. ' ' → logprob: -4.3453593254089355
    9. '    ' → logprob: -4.4703593254089355
    10. '(space' → logprob: -4.7203593254089355

Token 5: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6730552911758423
    2. ' ' → logprob: -0.9230552911758423
    3. '__' → logprob: -2.5480551719665527
    4. ' init' → logprob: -5.173055171966553
    5. ' ' → logprob: -5.423055171966553
    6. ' calculate' → logprob: -7.048055171966553
    7. '_' → logprob: -7.548055171966553
    8. '```' → logprob: -8.048055648803711
    9. '    ' → logprob: -8.673055648803711
    10. ' ```' → logprob: -8.673055648803711

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.618001053633634e-05
    2. ' init' → logprob: -11.125025749206543
    3. '_init' → logprob: -11.500025749206543
    4. 'ini' → logprob: -14.500025749206543
    5. 'i' → logprob: -15.125025749206543
    6. '_' → logprob: -15.750025749206543
    7. '	init' → logprob: -16.37502670288086
    8. '_i' → logprob: -16.50002670288086
    9. 'in' → logprob: -17.00002670288086
    10. 'int' → logprob: -18.00002670288086

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.39899277687072754
    2. '__' → logprob: -1.1489927768707275
    3. '(' → logprob: -4.773992538452148
    4. '_' → logprob: -6.273992538452148
    5. '__(
' → logprob: -6.773992538452148
    6. '(self' → logprob: -8.648992538452148
    7. '__((' → logprob: -8.773992538452148
    8. '_(' → logprob: -9.273992538452148
    9. '__('' → logprob: -10.148992538452148
    10. '```' → logprob: -10.523992538452148

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006776707712560892
    2. ' self' → logprob: -5.006776809692383
    3. '(self' → logprob: -10.631776809692383
    4. ')' → logprob: -10.756776809692383
    5. ' ' → logprob: -12.131776809692383
    6. ' )' → logprob: -12.756776809692383
    7. ',self' → logprob: -13.381776809692383
    8. '_self' → logprob: -13.631776809692383
    9. 's' → logprob: -13.756776809692383
    10. 'space' → logprob: -14.631776809692383

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41640710830688477
    2. '(' → logprob: -2.0414071083068848
    3. '<|end|>' → logprob: -2.0414071083068848
    4. ',' → logprob: -3.7914071083068848
    5. '(self' → logprob: -4.291407108306885
    6. '_' → logprob: -4.791407108306885
    7. '[' → logprob: -4.791407108306885
    8. ' )' → logprob: -4.916407108306885
    9. 'self' → logprob: -5.291407108306885
    10. ' (' → logprob: -5.416407108306885

Token 10: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35021689534187317
    2. ' self' → logprob: -1.2252168655395508
    3. ')' → logprob: -7.225216865539551
    4. ' matrix' → logprob: -7.725216865539551
    5. 'matrix' → logprob: -8.72521686553955
    6. 'data' → logprob: -8.97521686553955
    7. ' )' → logprob: -9.22521686553955
    8. ' data' → logprob: -9.47521686553955
    9. 'rows' → logprob: -9.72521686553955
    10. ' rows' → logprob: -10.22521686553955

Token 11: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0867822989821434
    2. ',' → logprob: -2.586782217025757
    3. '_' → logprob: -5.461782455444336
    4. '):' → logprob: -5.961782455444336
    5. ' )' → logprob: -7.586782455444336
    6. ' ,' → logprob: -8.711782455444336
    7. ':' → logprob: -9.086782455444336
    8. 'a' → logprob: -10.211782455444336
    9. ',)' → logprob: -10.586782455444336
    10. '=' → logprob: -10.711782455444336

Token 12: ' data' (ID: 1238)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.266106516122818
    2. ' m' → logprob: -1.5161064863204956
    3. ' ' → logprob: -4.766106605529785
    4. '    ' → logprob: -6.391106605529785
    5. 'k' → logprob: -7.266106605529785
    6. 'n' → logprob: -7.516106605529785
    7. '     ' → logprob: -7.766106605529785
    8. 'd' → logprob: -8.016106605529785
    9. 'space' → logprob: -8.141106605529785
    10. '   ' → logprob: -8.391106605529785

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005453362595289946
    2. ')' → logprob: -5.255453586578369
    3. ':' → logprob: -8.755453109741211
    4. '[' → logprob: -10.755453109741211
    5. ',' → logprob: -10.880453109741211
    6. '):
' → logprob: -11.630453109741211
    7. ' ):' → logprob: -12.505453109741211
    8. '=' → logprob: -12.880453109741211
    9. '   ' → logprob: -13.005453109741211
    10. '[]):' → logprob: -14.505453109741211

Token 14: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.012160301208496
    2. ':' → logprob: -1.137160301208496
    3. '       ' → logprob: -1.512160301208496
    4. '    ' → logprob: -3.637160301208496
    5. ' ' → logprob: -3.762160301208496
    6. ')' → logprob: -4.387160301208496
    7. '(' → logprob: -5.137160301208496
    8. 'n' → logprob: -5.387160301208496
    9. '\' → logprob: -6.012160301208496
    10. '(n' → logprob: -6.012160301208496

Token 15: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7657127976417542
    2. 's' → logprob: -1.0157127380371094
    3. 'n' → logprob: -2.5157127380371094
    4. ' ' → logprob: -3.7657127380371094
    5. ' self' → logprob: -4.015712738037109
    6. '       ' → logprob: -4.140712738037109
    7. '_' → logprob: -4.515712738037109
    8. '    ' → logprob: -5.140712738037109
    9. '[' → logprob: -5.390712738037109
    10. '        ' → logprob: -5.515712738037109

Token 16: ' len' (ID: 4631)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0064294831827282906
    2. 'n' → logprob: -5.381429672241211
    3. ' isinstance' → logprob: -7.131429672241211
    4. ' not' → logprob: -7.631429672241211
    5. ' ' → logprob: -8.256429672241211
    6. ' len' → logprob: -8.381429672241211
    7. ' ' → logprob: -10.881429672241211
    8. ' self' → logprob: -12.506429672241211
    9. 'len' → logprob: -13.006429672241211
    10. 'not' → logprob: -13.506429672241211

Token 17: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.1272100955247879
    2. '(' → logprob: -2.1272101402282715
    3. '(n' → logprob: -8.877209663391113
    4. '(self' → logprob: -9.002209663391113
    5. ' (' → logprob: -11.127209663391113
    6. '(space' → logprob: -13.752209663391113
    7. '(s' → logprob: -13.877209663391113
    8. 'data' → logprob: -14.502209663391113
    9. '(
' → logprob: -15.127209663391113
    10. '(d' → logprob: -15.752209663391113

Token 18: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027209450490772724
    2. '[' → logprob: -6.377720832824707
    3. ' )' → logprob: -7.127720832824707
    4. ')==' → logprob: -8.877720832824707
    5. ')!=' → logprob: -9.752720832824707
    6. ')<=' → logprob: -13.002720832824707
    7. ')>' → logprob: -13.127720832824707
    8. '```' → logprob: -13.252720832824707
    9. '==' → logprob: -13.502720832824707
    10. '[n' → logprob: -13.502720832824707

Token 19: ' !=' (ID: 1666)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21494489908218384
    2. ' !=' → logprob: -2.089944839477539
    3. ' ==' → logprob: -3.339944839477539
    4. ' <=' → logprob: -4.589944839477539
    5. ' ' → logprob: -4.714944839477539
    6. ' <' → logprob: -4.964944839477539
    7. ')' → logprob: -5.964944839477539
    8. '==' → logprob: -6.339944839477539
    9. '!=' → logprob: -6.839944839477539
    10. ' [' → logprob: -7.839944839477539

Token 20: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2519306540489197
    2. 'n' → logprob: -1.5019307136535645
    3. '	n' → logprob: -14.501930236816406
    4. ' ' → logprob: -14.751930236816406
    5. ')n' → logprob: -15.626930236816406
    6. ' ' → logprob: -16.001930236816406
    7. '0' → logprob: -16.251930236816406
    8. ' н' → logprob: -17.126930236816406
    9. '_n' → logprob: -17.376930236816406
    10. '(n' → logprob: -17.751930236816406

Token 21: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1885882318019867
    2. ':' → logprob: -1.813588261604309
    3. ' ' → logprob: -5.0635881423950195
    4. ' :' → logprob: -6.9385881423950195
    5. 'or' → logprob: -7.0635881423950195
    6. '):' → logprob: -8.43858814239502
    7. '*' → logprob: -9.43858814239502
    8. ')' → logprob: -9.56358814239502
    9. '.' → logprob: -9.68858814239502
    10. '[' → logprob: -10.31358814239502

Token 22: ' any' (ID: 1062)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6036147475242615
    2. ' any' → logprob: -1.4786148071289062
    3. ' not' → logprob: -1.6036148071289062
    4. ' n' → logprob: -4.103614807128906
    5. 'len' → logprob: -4.978614807128906
    6. 'any' → logprob: -8.603614807128906
    7. ' all' → logprob: -8.603614807128906
    8. '(len' → logprob: -9.353614807128906
    9. 'n' → logprob: -9.978614807128906
    10. 'not' → logprob: -10.228614807128906

Token 23: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.12522239983081818
    2. '(' → logprob: -2.2502224445343018
    3. '(lambda' → logprob: -5.250222206115723
    4. 'len' → logprob: -5.500222206115723
    5. '(not' → logprob: -6.250222206115723
    6. '(row' → logprob: -7.250222206115723
    7. '(x' → logprob: -9.500222206115723
    8. ' len' → logprob: -10.125222206115723
    9. '([' → logprob: -10.750222206115723
    10. 'row' → logprob: -10.750222206115723

Token 24: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -9.817902173381299e-05
    2. '(' → logprob: -10.12509822845459
    3. 'row' → logprob: -10.12509822845459
    4. '```' → logprob: -11.50009822845459
    5. '(r' → logprob: -12.62509822845459
    6. '(rows' → logprob: -13.37509822845459
    7. '	row' → logprob: -14.25009822845459
    8. '(x' → logprob: -14.75009822845459
    9. '=row' → logprob: -15.00009822845459
    10. ' (' → logprob: -15.37509822845459

Token 25: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.22899028658866882
    2. '!=' → logprob: -2.478990316390991
    3. ')!=' → logprob: -3.103990316390991
    4. ')' → logprob: -3.353990316390991
    5. '()!=' → logprob: -3.353990316390991
    6. '()' → logprob: -5.228990077972412
    7. ']!=' → logprob: -7.978990077972412
    8. '<|end|>' → logprob: -9.35399055480957
    9. ' not' → logprob: -9.47899055480957
    10. '<>' → logprob: -9.97899055480957

Token 26: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10565920919179916
    2. '!=' → logprob: -2.730659246444702
    3. '()!=' → logprob: -3.605659246444702
    4. ')!=' → logprob: -5.605659008026123
    5. '()' → logprob: -5.855659008026123
    6. ')' → logprob: -6.855659008026123
    7. '<|end|>' → logprob: -8.855659484863281
    8. ' ' → logprob: -9.980659484863281
    9. ']!=' → logprob: -10.355659484863281
    10. ' not' → logprob: -10.605659484863281

Token 27: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12693136930465698
    2. 'n' → logprob: -2.1269314289093018
    3. '<|end|>' → logprob: -13.626931190490723
    4. ')n' → logprob: -14.376931190490723
    5. '	n' → logprob: -14.626931190490723
    6. ' ' → logprob: -14.626931190490723
    7. ' ' → logprob: -15.751931190490723
    8. ' н' → logprob: -16.37693214416504
    9. '_n' → logprob: -16.50193214416504
    10. '<n' → logprob: -17.12693214416504

Token 28: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9890284538269043
    2. ' for' → logprob: -0.9890284538269043
    3. '):' → logprob: -1.4890284538269043
    4. ' or' → logprob: -3.7390284538269043
    5. ':' → logprob: -5.489028453826904
    6. 'for' → logprob: -6.489028453826904
    7. ' ):' → logprob: -7.739028453826904
    8. ' )' → logprob: -8.239028930664062
    9. '<|end|>' → logprob: -9.239028930664062
    10. ' ' → logprob: -9.989028930664062

Token 29: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -5.085517113911919e-05
    2. 'row' → logprob: -10.12505054473877
    3. ' ' → logprob: -11.50005054473877
    4. '	row' → logprob: -14.25005054473877
    5. '(row' → logprob: -16.875051498413086
    6. ' ' → logprob: -18.750051498413086
    7. '=row' → logprob: -19.250051498413086
    8. '[row' → logprob: -19.625051498413086
    9. ',row' → logprob: -19.625051498413086
    10. ' rows' → logprob: -20.125051498413086

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002237447304651141
    2. 'in' → logprob: -6.127237319946289
    3. '<|end|>' → logprob: -10.502237319946289
    4. ' ' → logprob: -10.877237319946289
    5. ')' → logprob: -12.877237319946289
    6. '<|end|>' → logprob: -13.752237319946289
    7. '	in' → logprob: -14.377237319946289
    8. ' )' → logprob: -14.627237319946289
    9. 's' → logprob: -15.127237319946289
    10. '  ' → logprob: -15.939737319946289

Token 31: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.126935675740242
    2. 'data' → logprob: -2.1269357204437256
    3. ' ' → logprob: -12.251935958862305
    4. ')data' → logprob: -13.501935958862305
    5. '	data' → logprob: -14.126935958862305
    6. '(data' → logprob: -15.626935958862305
    7. '<data' → logprob: -16.001935958862305
    8. '[data' → logprob: -16.376935958862305
    9. ' dat' → logprob: -16.751935958862305
    10. ' ' → logprob: -16.876935958862305

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003852097550407052
    2. ')' → logprob: -5.753851890563965
    3. ' ):' → logprob: -7.628851890563965
    4. '):
' → logprob: -9.128851890563965
    5. ':' → logprob: -9.503851890563965
    6. '   ' → logprob: -13.753851890563965
    7. ' )' → logprob: -13.753851890563965
    8. ' or' → logprob: -14.128851890563965
    9. '       ' → logprob: -15.128851890563965
    10. ')：' → logprob: -15.503851890563965

Token 33: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008272562408819795
    2. '):' → logprob: -7.375827312469482
    3. ' :' → logprob: -9.250826835632324
    4. ':
' → logprob: -10.000826835632324
    5. ':return' → logprob: -10.125826835632324
    6. '           ' → logprob: -11.875826835632324
    7. '       ' → logprob: -12.375826835632324
    8. ')' → logprob: -12.500826835632324
    9. ' ):' → logprob: -13.250826835632324
    10. ',' → logprob: -15.125826835632324

Token 34: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.5135769844055176
    2. ' ' → logprob: -1.2635769844055176
    3. '            ' → logprob: -2.7635769844055176
    4. '           ' → logprob: -4.138576984405518
    5. 'raise' (adapté à ' raise') → logprob: -4.263576984405518
    6. ' 
' → logprob: -4.888576984405518
    7. ' \' → logprob: -5.138576984405518
    8. 'r' → logprob: -6.263576984405518
    9. ' ' → logprob: -6.263576984405518
    10. '        ' → logprob: -7.138576984405518

Token 35: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.004183941055089235
    2. ' ' → logprob: -5.504183769226074
    3. 'Value' → logprob: -9.629183769226074
    4. ' Val' → logprob: -10.504183769226074
    5. ' ' → logprob: -12.254183769226074
    6. '	Value' → logprob: -12.254183769226074
    7. ' Va' → logprob: -13.504183769226074
    8. ' value' → logprob: -14.504183769226074
    9. '  ' → logprob: -15.129183769226074
    10. ' ‌' → logprob: -15.879183769226074

Token 36: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.759734732331708e-05
    2. 'rror' → logprob: -11.000017166137695
    3. 'Er' → logprob: -14.125017166137695
    4. 'Erro' → logprob: -17.000017166137695
    5. 'E' → logprob: -17.250017166137695
    6. ' Error' → logprob: -18.250017166137695
    7. 'n' → logprob: -18.500017166137695
    8. 'r' → logprob: -18.875017166137695
    9. '   ' → logprob: -18.875017166137695
    10. 'Err' → logprob: -19.000017166137695

Token 37: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03138536959886551
    2. '("' → logprob: -3.5313854217529297
    3. '(
' → logprob: -6.78138542175293
    4. '('' → logprob: -7.78138542175293
    5. ':' → logprob: -10.40638542175293
    6. '()' → logprob: -11.53138542175293
    7. '(

' → logprob: -11.53138542175293
    8. '(":' → logprob: -11.78138542175293
    9. '"' → logprob: -11.90638542175293
    10. '("("' → logprob: -12.15638542175293

Token 38: 'Data' (ID: 1186)
  Prédit: 'Matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Matrix' → logprob: -0.4603975713253021
    2. 'Data' → logprob: -1.9603976011276245
    3. 'Dimension' → logprob: -2.835397481918335
    4. 'Invalid' → logprob: -2.960397481918335
    5. 'Square' → logprob: -2.960397481918335
    6. 'Input' → logprob: -3.210397481918335
    7. 'I' → logprob: -5.460397720336914
    8. ' Matrix' → logprob: -5.585397720336914
    9. 'All' → logprob: -5.960397720336914
    10. 'In' → logprob: -6.335397720336914

Token 39: ' dimensions' (ID: 23995)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.004260631278157234
    2. ' dimensions' → logprob: -6.004260540008545
    3. ' size' → logprob: -6.879260540008545
    4. ' should' → logprob: -7.879260540008545
    5. ' does' → logprob: -8.379261016845703
    6. ' matrix' → logprob: -9.629261016845703
    7. ' dimension' → logprob: -10.004261016845703
    8. 'must' → logprob: -11.379261016845703
    9. ' is' → logprob: -11.754261016845703
    10. ' ' → logprob: -12.004261016845703

Token 40: ' do' (ID: 621)
  Prédit: ' do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' do' → logprob: -0.03915828838944435
    2. ' must' → logprob: -3.414158344268799
    3. ' mismatch' → logprob: -5.414158344268799
    4. ' don't' → logprob: -7.289158344268799
    5. ' does' → logprob: -8.41415786743164
    6. ' ' → logprob: -9.53915786743164
    7. 'do' → logprob: -11.03915786743164
    8. ' are' → logprob: -11.28915786743164
    9. ' not' → logprob: -11.41415786743164
    10. ' match' → logprob: -11.53915786743164

Token 41: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.702758252620697
    2. 'not' → logprob: -0.702758252620697
    3. 'n't' → logprob: -5.327758312225342
    4. 'ot' → logprob: -5.452758312225342
    5. ' ' → logprob: -9.202757835388184
    6. ' ot' → logprob: -9.327757835388184
    7. 'nt' → logprob: -9.952757835388184
    8. 't' → logprob: -10.077757835388184
    9. 'o' → logprob: -10.077757835388184
    10. ' no' → logprob: -10.452757835388184

Token 42: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.0015589047688990831
    2. 'match' → logprob: -6.626558780670166
    3. ' math' → logprob: -9.751559257507324
    4. ' m' → logprob: -10.126559257507324
    5. ' align' → logprob: -10.251559257507324
    6. ' correspond' → logprob: -10.876559257507324
    7. ' fit' → logprob: -10.876559257507324
    8. ' conform' → logprob: -11.501559257507324
    9. ' mat' → logprob: -11.876559257507324
    10. ' ma' → logprob: -12.001559257507324

Token 43: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6574777960777283
    2. ' matrix' → logprob: -1.282477855682373
    3. ' the' → logprob: -1.907477855682373
    4. 'n' → logprob: -3.032477855682373
    5. 'the' → logprob: -5.407477855682373
    6. 'matrix' → logprob: -6.032477855682373
    7. '   ' → logprob: -8.157477378845215
    8. 'Matrix' → logprob: -8.782477378845215
    9. '")' → logprob: -8.907477378845215
    10. ' ")' → logprob: -9.782477378845215

Token 44: ' x' (ID: 1215)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.029134470969438553
    2. ')")' → logprob: -3.654134511947632
    3. '.")' → logprob: -6.529134273529053
    4. ')' → logprob: -7.029134273529053
    5. '}")' → logprob: -9.154134750366211
    6. 'size' → logprob: -9.529134750366211
    7. ' ")' → logprob: -9.529134750366211
    8. ' matrix' → logprob: -10.029134750366211
    9. 'x' → logprob: -10.779134750366211
    10. '")
' → logprob: -11.029134750366211

Token 45: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2811968922615051
    2. 'n' → logprob: -1.4061968326568604
    3. ' ' → logprob: -10.406196594238281
    4. ' ' → logprob: -12.031196594238281
    5. '	n' → logprob: -12.281196594238281
    6. '_n' → logprob: -13.531196594238281
    7. '```' → logprob: -13.531196594238281
    8. '  ' → logprob: -15.218696594238281
    9. ' ```' → logprob: -15.218696594238281
    10. ' ")' → logprob: -15.406196594238281

Token 46: '.")
' (ID: 27834)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.013614130206406116
    2. ')")' → logprob: -4.763614177703857
    3. ' matrix' → logprob: -5.763614177703857
    4. '\"' → logprob: -6.763614177703857
    5. '\")' → logprob: -8.1386137008667
    6. ')' → logprob: -9.0136137008667
    7. 'matrix' → logprob: -9.0136137008667
    8. '}")' → logprob: -10.2636137008667
    9. '")
' → logprob: -10.6386137008667
    10. 'Matrix' → logprob: -10.7636137008667

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2930423021316528
    2. '\' → logprob: -1.4180423021316528
    3. '\n' → logprob: -2.0430421829223633
    4. ' 
' → logprob: -2.4180421829223633
    5. '        
' → logprob: -2.6680421829223633
    6. 'n' → logprob: -3.4180421829223633
    7. '
' → logprob: -3.4180421829223633
    8. '    
' → logprob: -3.4180421829223633
    9. ')' → logprob: -3.9180421829223633
    10. 'newline' → logprob: -4.293042182922363

Token 48: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2671523094177246
    2. 'self' (adapté à ' self') → logprob: -2.1421523094177246
    3. '\n' → logprob: -2.8921523094177246
    4. '   ' → logprob: -3.3921523094177246
    5. '        
' → logprob: -4.767152309417725
    6. '\' → logprob: -5.017152309417725
    7. '
' → logprob: -5.892152309417725
    8. '    
' → logprob: -5.892152309417725
    9. 'n' → logprob: -6.392152309417725
    10. ' 
' → logprob: -6.642152309417725

Token 49: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3603212833404541
    2. '.n' → logprob: -1.610321283340454
    3. '.data' → logprob: -2.360321283340454
    4. ' .' → logprob: -4.860321044921875
    5. '.matrix' → logprob: -7.735321044921875
    6. '._' → logprob: -9.360321044921875
    7. '.m' → logprob: -11.985321044921875
    8. '.rows' → logprob: -12.235321044921875
    9. '.dim' → logprob: -12.235321044921875
    10. '.dimension' → logprob: -12.235321044921875

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026424305513501167
    2. '=' → logprob: -3.6514244079589844
    3. ' ' → logprob: -9.151424407958984
    4. '<|end|>' → logprob: -12.651424407958984
    5. ' =
' → logprob: -13.026424407958984
    6. '.' → logprob: -13.151424407958984
    7. '_' → logprob: -13.276424407958984
    8. '  ' → logprob: -13.401424407958984
    9. '=n' → logprob: -13.401424407958984
    10. '   ' → logprob: -13.401424407958984

Token 51: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.023245712742209435
    2. 'n' → logprob: -3.7732458114624023
    3. ' ' → logprob: -16.523244857788086
    4. '	n' → logprob: -16.523244857788086
    5. ' ' → logprob: -17.148244857788086
    6. '_n' → logprob: -19.023244857788086
    7. '```' → logprob: -19.273244857788086
    8. ')n' → logprob: -19.398244857788086
    9. ' 
' → logprob: -19.773244857788086
    10. '(n' → logprob: -19.898244857788086

Token 52: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2765675187110901
    2. '<|end|>' → logprob: -1.9015674591064453
    3. '
' → logprob: -3.1515674591064453
    4. ' 
' → logprob: -4.151567459106445
    5. 'self' → logprob: -4.526567459106445
    6. '        
' → logprob: -5.026567459106445
    7. '  
' → logprob: -5.526567459106445
    8. '    
' → logprob: -5.901567459106445
    9. '   ' → logprob: -5.901567459106445
    10. '\' → logprob: -6.401567459106445

Token 54: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4956265687942505
    2. ' self' → logprob: -1.1206265687942505
    3. '       ' → logprob: -2.745626449584961
    4. '        
' → logprob: -8.120626449584961
    5. '   ' → logprob: -9.620626449584961
    6. '        ' → logprob: -9.870626449584961
    7. ' ' → logprob: -10.745626449584961
    8. 'data' → logprob: -10.745626449584961
    9. '	self' → logprob: -10.995626449584961
    10. ' 
' → logprob: -11.495626449584961

Token 55: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.38773882389068604
    2. '.' → logprob: -1.137738823890686
    3. ' .' → logprob: -7.5127387046813965
    4. '.matrix' → logprob: -8.387739181518555
    5. '.n' → logprob: -10.887739181518555
    6. 'data' → logprob: -11.512739181518555
    7. '.datas' → logprob: -11.512739181518555
    8. '.Data' → logprob: -11.762739181518555
    9. '.value' → logprob: -12.512739181518555
    10. '.e' → logprob: -12.637739181518555

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10028742998838425
    2. '=' → logprob: -2.350287437438965
    3. ' ' → logprob: -10.225287437438965
    4. '[' → logprob: -11.100287437438965
    5. '<|end|>' → logprob: -11.475287437438965
    6. ' =
' → logprob: -11.850287437438965
    7. ' =[' → logprob: -12.350287437438965
    8. '.' → logprob: -13.225287437438965
    9. '[:]' → logprob: -13.350287437438965
    10. ' .=' → logprob: -14.350287437438965

Token 57: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.447083443403244
    2. 'data' → logprob: -1.0720834732055664
    3. ' [' → logprob: -4.572083473205566
    4. '[data' → logprob: -5.072083473205566
    5. '[' → logprob: -6.447083473205566
    6. ' ' → logprob: -11.947083473205566
    7. '<data' → logprob: -12.822083473205566
    8. '[
' → logprob: -13.322083473205566
    9. '\data' → logprob: -13.447083473205566
    10. '$data' → logprob: -13.572083473205566

Token 58: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2361147105693817
    2. '   ' → logprob: -2.361114740371704
    3. '    
' → logprob: -2.736114740371704
    4. '\' → logprob: -4.861114501953125
    5. '\n' → logprob: -4.861114501953125
    6. '' → logprob: -5.111114501953125
    7. ' 
' → logprob: -5.236114501953125
    8. 'def' → logprob: -5.361114501953125
    9. '```' → logprob: -5.736114501953125
    10. '

' → logprob: -5.861114501953125

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3293094038963318
    2. '    
' → logprob: -1.8293094635009766
    3. '
' → logprob: -2.7043094635009766
    4. ' 
' → logprob: -3.9543094635009766
    5. 'def' → logprob: -4.704309463500977
    6. '\' → logprob: -5.204309463500977
    7. '\n' → logprob: -5.704309463500977
    8. ' def' → logprob: -5.954309463500977
    9. 'd' → logprob: -6.329309463500977
    10. '  
' → logprob: -6.454309463500977

Token 60: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2255084216594696
    2. '   ' → logprob: -2.350508451461792
    3. ' def' → logprob: -2.850508451461792
    4. 'd' → logprob: -3.475508451461792
    5. '    
' → logprob: -4.725508213043213
    6. ' 
' → logprob: -5.475508213043213
    7. ' ' → logprob: -5.850508213043213
    8. '   
' → logprob: -8.100508689880371
    9. ' 

' → logprob: -8.225508689880371
    10. '  
' → logprob: -8.850508689880371

Token 61: ' sub' (ID: 1543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030821572989225388
    2. ' __' → logprob: -4.405821800231934
    3. '_' → logprob: -5.780821800231934
    4. ' multiply' → logprob: -6.030821800231934
    5. ' ' → logprob: -6.155821800231934
    6. ' ```' → logprob: -6.280821800231934
    7. 'transpose' → logprob: -6.405821800231934
    8. 'multiply' → logprob: -6.905821800231934
    9. ' `' → logprob: -7.280821800231934
    10. ' _' → logprob: -7.405821800231934

Token 62: 'matrix' (ID: 37307)
  Prédit: 'matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.09298969060182571
    2. '_matrix' → logprob: -2.467989683151245
    3. 'tract' → logprob: -6.717989921569824
    4. 'script' → logprob: -7.217989921569824
    5. 'mat' → logprob: -7.342989921569824
    6. 'Matrix' → logprob: -7.967989921569824
    7. 'm' → logprob: -8.342989921569824
    8. '_m' → logprob: -8.467989921569824
    9. 'atrix' → logprob: -9.217989921569824
    10. '   ' → logprob: -9.217989921569824

Token 63: '_sum' (ID: 29859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016758986748754978
    2. '(self' → logprob: -6.626676082611084
    3. '(
' → logprob: -8.876675605773926
    4. '[' → logprob: -9.751675605773926
    5. '_' → logprob: -10.001675605773926
    6. ' (' → logprob: -10.376675605773926
    7. '_matrix' → logprob: -11.251675605773926
    8. '([' → logprob: -11.751675605773926
    9. '<|end|>' → logprob: -11.751675605773926
    10. '```' → logprob: -12.251675605773926

Token 64: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023483289405703545
    2. '(self' → logprob: -3.7734832763671875
    3. '(
' → logprob: -8.773483276367188
    4. ' (' → logprob: -9.898483276367188
    5. '(s' → logprob: -11.273483276367188
    6. 's' → logprob: -12.023483276367188
    7. '(

' → logprob: -12.398483276367188
    8. '   ' → logprob: -12.773483276367188
    9. '<|end|>' → logprob: -13.273483276367188
    10. 'self' → logprob: -14.023483276367188

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040818847715854645
    2. ')' → logprob: -3.540818929672241
    3. ' ,' → logprob: -5.290818691253662
    4. '(' → logprob: -5.540818691253662
    5. '[' → logprob: -7.540818691253662
    6. ')(' → logprob: -8.16581916809082
    7. '(self' → logprob: -8.41581916809082
    8. ',x' → logprob: -8.66581916809082
    9. 's' → logprob: -9.16581916809082
    10. 'self' → logprob: -9.16581916809082

Token 66: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.0883136987686157
    2. ' i' → logprob: -1.3383136987686157
    3. ' x' → logprob: -2.213313579559326
    4. ' top' → logprob: -2.713313579559326
    5. 'i' → logprob: -2.838313579559326
    6. ' row' → logprob: -2.963313579559326
    7. 'r' → logprob: -3.088313579559326
    8. 'row' → logprob: -3.463313579559326
    9. 'x' → logprob: -4.338313579559326
    10. 'top' → logprob: -4.338313579559326

Token 67: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09650523960590363
    2. '1' → logprob: -3.3465051651000977
    3. ' ,' → logprob: -3.9715051651000977
    4. 'ow' → logprob: -4.221505165100098
    5. 'o' → logprob: -4.971505165100098
    6. 'e' → logprob: -5.721505165100098
    7. 'ange' → logprob: -5.971505165100098
    8. '_' → logprob: -6.471505165100098
    9. ' ' → logprob: -6.471505165100098
    10. 'c' → logprob: -6.721505165100098

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012735784985125065
    2. ' ,' → logprob: -4.387735843658447
    3. ',r' → logprob: -8.637735366821289
    4. ' ' → logprob: -10.637735366821289
    5. ')' → logprob: -11.387735366821289
    6. ',
' → logprob: -12.262735366821289
    7. ',int' → logprob: -13.387735366821289
    8. '<|end|>' → logprob: -13.887735366821289
    9. ' )' → logprob: -14.262735366821289
    10. ',

' → logprob: -14.512735366821289

Token 69: ' r' (ID: 428)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3547247648239136
    2. 'c' → logprob: -1.2297247648239136
    3. ' r' → logprob: -6.229724884033203
    4. 'r' → logprob: -6.229724884033203
    5. ' s' → logprob: -6.479724884033203
    6. 's' → logprob: -7.729724884033203
    7. ' ' → logprob: -8.479724884033203
    8. '<|end|>' → logprob: -9.729724884033203
    9. ' C' → logprob: -11.354724884033203
    10. ' ,' → logprob: -11.479724884033203

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023338302969932556
    2. '1' → logprob: -3.7733383178710938
    3. ',' → logprob: -10.898338317871094
    4. '0' → logprob: -10.898338317871094
    5. ' ' → logprob: -10.898338317871094
    6. 'o' → logprob: -11.148338317871094
    7. 'c' → logprob: -12.835838317871094
    8. 'a' → logprob: -13.210838317871094
    9. '```' → logprob: -13.210838317871094
    10. 'w' → logprob: -13.523338317871094

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008984813466668129
    2. ' ,' → logprob: -7.625898361206055
    3. '+' → logprob: -8.375898361206055
    4. '):' → logprob: -9.125898361206055
    5. ')' → logprob: -10.250898361206055
    6. '+,' → logprob: -10.875898361206055
    7. ' +' → logprob: -12.125898361206055
    8. ',
' → logprob: -12.500898361206055
    9. ' ' → logprob: -13.125898361206055
    10. ',r' → logprob: -13.750898361206055

Token 72: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.006778134498745203
    2. 'c' → logprob: -5.006778240203857
    3. ' r' → logprob: -10.7567777633667
    4. ' ' → logprob: -11.5067777633667
    5. ' s' → logprob: -11.7567777633667
    6. 'r' → logprob: -13.0067777633667
    7. '    ' → logprob: -13.0067777633667
    8. ' )' → logprob: -13.1317777633667
    9. ' col' → logprob: -13.1317777633667
    10. '   ' → logprob: -13.1317777633667

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005990233621560037
    2. ')' → logprob: -7.875598907470703
    3. ',' → logprob: -8.625598907470703
    4. ' ' → logprob: -11.250598907470703
    5. '2' → logprob: -12.250598907470703
    6. ' )' → logprob: -12.500598907470703
    7. ' ,' → logprob: -12.625598907470703
    8. '<|end|>' → logprob: -13.188098907470703
    9. '=' → logprob: -13.625598907470703
    10. '):' → logprob: -13.875598907470703

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012654215970542282
    2. ' ,' → logprob: -9.125126838684082
    3. ')' → logprob: -11.500126838684082
    4. ',c' → logprob: -12.750126838684082
    5. '):' → logprob: -13.375126838684082
    6. ',
' → logprob: -13.500126838684082
    7. '‌,' → logprob: -14.875126838684082
    8. ' ' → logprob: -15.000126838684082
    9. '):
' → logprob: -15.375126838684082
    10. ',r' → logprob: -16.000125885009766

Token 75: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.04305068776011467
    2. 'c' → logprob: -3.168050765991211
    3. '<|end|>' → logprob: -11.168050765991211
    4. ' ' → logprob: -11.293050765991211
    5. ' ' → logprob: -12.043050765991211
    6. '    ' → logprob: -12.043050765991211
    7. '   ' → logprob: -12.918050765991211
    8. ')' → logprob: -13.293050765991211
    9. '	c' → logprob: -13.293050765991211
    10. ')c' → logprob: -14.043050765991211

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005356363253667951
    2. ')' → logprob: -7.625535488128662
    3. ',' → logprob: -10.50053596496582
    4. '1' → logprob: -11.25053596496582
    5. '```' → logprob: -13.00053596496582
    6. ' )' → logprob: -13.12553596496582
    7. ' ' → logprob: -14.62553596496582
    8. 'c' → logprob: -15.00053596496582
    9. 'r' → logprob: -15.00053596496582
    10. '+' → logprob: -15.50053596496582

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004772818647325039
    2. ')' → logprob: -5.379772663116455
    3. ' ):' → logprob: -9.379773139953613
    4. ':' → logprob: -9.754773139953613
    5. '):
' → logprob: -12.004773139953613
    6. '   ' → logprob: -13.504773139953613
    7. ',' → logprob: -14.129773139953613
    8. ' )' → logprob: -14.754773139953613
    9. ' ' → logprob: -15.379773139953613
    10. ')：' → logprob: -15.379773139953613

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5884018540382385
    2. ':' → logprob: -0.8384018540382385
    3. '
' → logprob: -5.588401794433594
    4. ':
' → logprob: -5.713401794433594
    5. 'n' → logprob: -6.463401794433594
    6. '   ' → logprob: -6.963401794433594
    7. '\n' → logprob: -7.463401794433594
    8. '        
' → logprob: -8.088401794433594
    9. ':return' → logprob: -8.338401794433594
    10. ' :' → logprob: -8.713401794433594

Token 79: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09191527217626572
    2. 's' → logprob: -2.9669153690338135
    3. '        ' → logprob: -5.091915130615234
    4. ' 
' → logprob: -5.716915130615234
    5. ' s' → logprob: -5.716915130615234
    6. 'n' → logprob: -5.841915130615234
    7. 'sum' → logprob: -5.841915130615234
    8. '        
' → logprob: -5.966915130615234
    9. 'result' → logprob: -6.341915130615234
    10. '\' → logprob: -6.716915130615234

Token 80: ' Sum' (ID: 34138)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6402004361152649
    2. 's' → logprob: -1.3902003765106201
    3. 'i' → logprob: -3.01520037651062
    4. '    ' → logprob: -3.51520037651062
    5. '        ' → logprob: -3.64020037651062
    6. '       ' → logprob: -3.89020037651062
    7. ' i' → logprob: -4.015200614929199
    8. ' s' → logprob: -4.640200614929199
    9. 'n' → logprob: -4.765200614929199
    10. 'd' → logprob: -4.890200614929199

Token 81: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3758893311023712
    2. '_' → logprob: -1.5008893013000488
    3. ' ' → logprob: -2.875889301300049
    4. '=' → logprob: -4.375889301300049
    5. ' =' → logprob: -4.375889301300049
    6. '[' → logprob: -5.875889301300049
    7. ' (' → logprob: -6.250889301300049
    8. '(s' → logprob: -7.250889301300049
    9. '(
' → logprob: -7.625889301300049
    10. '(self' → logprob: -7.625889301300049

Token 82: ' elements' (ID: 8632)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0794471800327301
    2. ' the' → logprob: -3.4544472694396973
    3. ' all' → logprob: -4.204447269439697
    4. 'self' → logprob: -4.454447269439697
    5. ' [' → logprob: -5.704447269439697
    6. ' ' → logprob: -5.829447269439697
    7. ' elements' → logprob: -5.829447269439697
    8. ' sum' → logprob: -5.954447269439697
    9. ' a' → logprob: -6.579447269439697
    10. ' rows' → logprob: -6.954447269439697

Token 83: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6730189323425293
    2. ' ' → logprob: -1.2980189323425293
    3. '=' → logprob: -2.5480189323425293
    4. '(' → logprob: -2.9230189323425293
    5. ' in' → logprob: -3.5480189323425293
    6. '[' → logprob: -4.173018932342529
    7. '_' → logprob: -4.298018932342529
    8. ' for' → logprob: -5.673018932342529
    9. '   ' → logprob: -5.798018932342529
    10. '        ' → logprob: -5.923018932342529

Token 84: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.01398367527872324
    2. ' the' → logprob: -4.638983726501465
    3. ' range' → logprob: -6.138983726501465
    4. 'self' → logprob: -6.263983726501465
    5. ' a' → logprob: -9.638983726501465
    6. ' ' → logprob: -10.388983726501465
    7. 'the' → logprob: -11.013983726501465
    8. ' matrix' → logprob: -11.013983726501465
    9. ' row' → logprob: -11.888983726501465
    10. 'range' → logprob: -11.888983726501465

Token 85: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.1783209592103958
    2. ' matrix' → logprob: -2.55332088470459
    3. ' ' → logprob: -3.17832088470459
    4. 'sub' → logprob: -4.80332088470459
    5. '[' → logprob: -4.92832088470459
    6. ' [' → logprob: -5.67832088470459
    7. '[
' → logprob: -5.67832088470459
    8. ' r' → logprob: -5.92832088470459
    9. ' [
' → logprob: -5.92832088470459
    10. ' self' → logprob: -5.92832088470459

Token 86: 'matrix' (ID: 37307)
  Prédit: 'matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.10251319408416748
    2. 'm' → logprob: -2.977513313293457
    3. '   ' → logprob: -3.977513313293457
    4. '[' → logprob: -4.352513313293457
    5. 'mat' → logprob: -5.477513313293457
    6. ' matrix' → logprob: -6.102513313293457
    7. '_' → logprob: -6.352513313293457
    8. '       ' → logprob: -6.727513313293457
    9. 'array' → logprob: -6.727513313293457
    10. '_matrix' → logprob: -7.602513313293457

Token 87: ' from' (ID: 591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9016106128692627
    2. '       ' → logprob: -1.5266106128692627
    3. '   ' → logprob: -2.5266106128692627
    4. ':' → logprob: -2.6516106128692627
    5. '<|end|>' → logprob: -3.4016106128692627
    6. '    ' → logprob: -3.5266106128692627
    7. '  
' → logprob: -3.9016106128692627
    8. '\' → logprob: -3.9016106128692627
    9. ' 
' → logprob: -4.151610374450684
    10. '        
' → logprob: -4.151610374450684

Token 88: ' rows' (ID: 13585)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.019176315516233444
    2. 'r' → logprob: -4.144176483154297
    3. ' (' → logprob: -6.269176483154297
    4. ' self' → logprob: -7.519176483154297
    5. ' matrix' → logprob: -8.769176483154297
    6. ' ' → logprob: -8.894176483154297
    7. ' [' → logprob: -9.269176483154297
    8. ' row' → logprob: -9.894176483154297
    9. '(r' → logprob: -9.894176483154297
    10. ' `' → logprob: -10.019176483154297

Token 89: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.006063651759177446
    2. 'r' → logprob: -5.131063461303711
    3. '[r' → logprob: -9.881063461303711
    4. '   ' → logprob: -10.506063461303711
    5. '=r' → logprob: -10.631063461303711
    6. ' ' → logprob: -11.881063461303711
    7. '	r' → logprob: -12.381063461303711
    8. ' to' → logprob: -12.506063461303711
    9. ' [' → logprob: -12.631063461303711
    10. ' `' → logprob: -12.881063461303711

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.183501293184236e-05
    2. '2' → logprob: -10.12507152557373
    3. '_' → logprob: -10.75007152557373
    4. 'r' → logprob: -13.12507152557373
    5. '```' → logprob: -13.37507152557373
    6. 'e' → logprob: -13.75007152557373
    7. '=' → logprob: -13.75007152557373
    8. ' ' → logprob: -14.00007152557373
    9. '   ' → logprob: -14.50007152557373
    10. ',' → logprob: -14.56257152557373

Token 91: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.47876203060150146
    2. ' and' → logprob: -1.6037620306015015
    3. ' ' → logprob: -2.103762149810791
    4. ',' → logprob: -3.853762149810791
    5. '   ' → logprob: -4.228762149810791
    6. '       ' → logprob: -4.478762149810791
    7. 'and' → logprob: -5.603762149810791
    8. '    ' → logprob: -6.478762149810791
    9. 'to' → logprob: -6.978762149810791
    10. 'r' → logprob: -7.103762149810791

Token 92: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.009810280054807663
    2. 'r' → logprob: -4.634810447692871
    3. ' ' → logprob: -10.509810447692871
    4. ' c' → logprob: -10.759810447692871
    5. ' ' → logprob: -12.759810447692871
    6. 'c' → logprob: -13.009810447692871
    7. ' `' → logprob: -15.134810447692871
    8. ' and' → logprob: -15.884810447692871
    9. ' ,' → logprob: -16.384809494018555
    10. ' ‌' → logprob: -16.509809494018555

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0380699522793293
    2. '1' → logprob: -3.2880699634552
    3. '```' → logprob: -11.788069725036621
    4. ' ' → logprob: -12.350569725036621
    5. 'r' → logprob: -12.725569725036621
    6. '   ' → logprob: -12.975569725036621
    7. 'e' → logprob: -13.350569725036621
    8. '_' → logprob: -13.788069725036621
    9. ',' → logprob: -14.100569725036621
    10. 'o' → logprob: -14.413069725036621

Token 94: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48556971549987793
    2. '       ' → logprob: -2.235569715499878
    3. '<|end|>' → logprob: -2.235569715499878
    4. ' ' → logprob: -2.360569715499878
    5. ',' → logprob: -3.360569715499878
    6. ' +' → logprob: -4.735569953918457
    7. '    ' → logprob: -5.110569953918457
    8. '        ' → logprob: -5.235569953918457
    9. '   ' → logprob: -5.360569953918457
    10. '[' → logprob: -5.360569953918457

Token 95: ' columns' (ID: 15697)
  Prédit: ' columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' columns' → logprob: -0.003795803990215063
    2. 'columns' → logprob: -5.628795623779297
    3. ' cols' → logprob: -9.253795623779297
    4. ' c' → logprob: -9.628795623779297
    5. 'cols' → logprob: -11.503795623779297
    6. 'c' → logprob: -11.503795623779297
    7. ' ' → logprob: -11.753795623779297
    8. ',' → logprob: -12.753795623779297
    9. ' ,' → logprob: -13.753795623779297
    10. ' to' → logprob: -14.753795623779297

Token 96: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.735464870929718
    2. ' c' → logprob: -1.6104648113250732
    3. ' r' → logprob: -1.9854648113250732
    4. 'c' → logprob: -2.4854648113250732
    5. 'r' → logprob: -3.2354648113250732
    6. '    ' → logprob: -4.735465049743652
    7. '<|end|>' → logprob: -5.110465049743652
    8. ' (' → logprob: -5.360465049743652
    9. '```' → logprob: -5.360465049743652
    10. '   ' → logprob: -5.485465049743652

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025921848136931658
    2. '+' → logprob: -6.252592086791992
    3. '_' → logprob: -7.627592086791992
    4. '2' → logprob: -9.002592086791992
    5. ',' → logprob: -10.877592086791992
    6. '```' → logprob: -11.877592086791992
    7. ' +' → logprob: -12.002592086791992
    8. ')' → logprob: -12.627592086791992
    9. ' ' → logprob: -13.127592086791992
    10. '   ' → logprob: -13.252592086791992

Token 98: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2590000033378601
    2. 'to' → logprob: -1.7590000629425049
    3. ',' → logprob: -3.009000062942505
    4. ' ' → logprob: -5.508999824523926
    5. ' ,' → logprob: -6.758999824523926
    6. '```' → logprob: -8.008999824523926
    7. '2' → logprob: -8.508999824523926
    8. ')' → logprob: -9.133999824523926
    9. '   ' → logprob: -9.258999824523926
    10. '1' → logprob: -9.258999824523926

Token 99: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5106914639472961
    2. 'c' → logprob: -1.7606914043426514
    3. ' r' → logprob: -1.7606914043426514
    4. 'r' → logprob: -2.8856914043426514
    5. ' ' → logprob: -8.51069164276123
    6. ' (' → logprob: -10.76069164276123
    7. '```' → logprob: -12.38569164276123
    8. ' `' → logprob: -12.63569164276123
    9. ',' → logprob: -12.88569164276123
    10. '2' → logprob: -12.88569164276123

Token 100: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019670547917485237
    2. '1' → logprob: -6.251966953277588
    3. 'o' → logprob: -10.876967430114746
    4. '+' → logprob: -12.251967430114746
    5. '```' → logprob: -12.501967430114746
    6. ')' → logprob: -13.064467430114746
    7. 'c' → logprob: -13.689467430114746
    8. ' ' → logprob: -13.876967430114746
    9. ',' → logprob: -14.001967430114746
    10. '-' → logprob: -14.314467430114746

Token 101: ' inclusive' (ID: 29482)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21770232915878296
    2. '       ' → logprob: -1.7177023887634277
    3. ':
' → logprob: -4.467702388763428
    4. '        
' → logprob: -7.092702388763428
    5. ' :' → logprob: -7.217702388763428
    6. ',' → logprob: -7.467702388763428
    7. '   ' → logprob: -7.717702388763428
    8. ':return' → logprob: -7.967702388763428
    9. '
' → logprob: -8.21770191192627
    10. '):' → logprob: -8.46770191192627

Token 102: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42923086881637573
    2. '       ' → logprob: -1.1792309284210205
    3. ':
' → logprob: -3.3042309284210205
    4. '
' → logprob: -5.929230690002441
    5. ':return' → logprob: -7.929230690002441
    6. '):' → logprob: -8.179230690002441
    7. ',' → logprob: -8.304230690002441
    8. '   ' → logprob: -8.679230690002441
    9. '        
' → logprob: -8.679230690002441
    10. ' :' → logprob: -8.804230690002441

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07451684772968292
    2. ':' → logprob: -2.699516773223877
    3. ':
' → logprob: -5.699516773223877
    4. '        
' → logprob: -7.699516773223877
    5. '
' → logprob: -8.574517250061035
    6. ' :' → logprob: -9.324517250061035
    7. ':return' → logprob: -9.824517250061035
    8. '\n' → logprob: -9.949517250061035
    9. ',' → logprob: -9.949517250061035
    10. '   ' → logprob: -10.074517250061035

Token 104: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09648706018924713
    2. 's' → logprob: -3.471487045288086
    3. ' total' → logprob: -4.346487045288086
    4. ' s' → logprob: -4.596487045288086
    5. 'total' (adapté à ' total') → logprob: -4.721487045288086
    6. 'sum' → logprob: -4.846487045288086
    7. 'result' → logprob: -4.846487045288086
    8. ' result' → logprob: -5.096487045288086
    9. ' sum' → logprob: -6.346487045288086
    10. '   ' → logprob: -6.971487045288086

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10101181268692017
    2. '=' → logprob: -2.3510117530822754
    3. ' +=' → logprob: -7.851011753082275
    4. ' ' → logprob: -7.851011753082275
    5. '_' → logprob: -11.226012229919434
    6. ' =
' → logprob: -12.101012229919434
    7. '.' → logprob: -13.851012229919434
    8. ',' → logprob: -14.351012229919434
    9. ' ' → logprob: -14.351012229919434
    10. '+' → logprob: -14.601012229919434

Token 106: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08899224549531937
    2. ' ' → logprob: -2.4639923572540283
    3. ' sum' → logprob: -10.33899211883545
    4. 'sum' → logprob: -11.21399211883545
    5. ' self' → logprob: -12.33899211883545
    6. 'self' → logprob: -13.96399211883545
    7. ' ' → logprob: -13.96399211883545
    8. '   ' → logprob: -14.46399211883545
    9. '  ' → logprob: -16.213993072509766
    10. '       ' → logprob: -16.338993072509766

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.774276774493046e-05
    2. 'sum' → logprob: -10.375038146972656
    3. ' ' → logprob: -12.000038146972656
    4. '   ' → logprob: -15.500038146972656
    5. ' sum' → logprob: -16.625038146972656
    6. 'self' → logprob: -17.125038146972656
    7. '  ' → logprob: -18.625038146972656
    8. '       ' → logprob: -18.750038146972656
    9. '```' → logprob: -19.375038146972656
    10. '`' → logprob: -19.812538146972656

Token 108: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45445919036865234
    2. '       ' → logprob: -1.4544591903686523
    3. '<|end|>' → logprob: -2.4544591903686523
    4. '\n' → logprob: -3.5794591903686523
    5. ' for' → logprob: -4.704459190368652
    6. 'for' → logprob: -5.579459190368652
    7. '' → logprob: -6.329459190368652
    8. '        ' → logprob: -7.704459190368652
    9. '<|end|>' → logprob: -7.704459190368652
    10. '\' → logprob: -7.704459190368652

Token 109: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38896921277046204
    2. '       ' → logprob: -1.3889691829681396
    3. ' for' → logprob: -3.2639691829681396
    4. 'for' → logprob: -4.013969421386719
    5. '\n' → logprob: -5.263969421386719
    6. '<|end|>' → logprob: -5.638969421386719
    7. '' → logprob: -6.138969421386719
    8. '        
' → logprob: -7.013969421386719
    9. ' 
' → logprob: -7.263969421386719
    10. '    
' → logprob: -7.388969421386719

Token 110: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.14429768919944763
    2. '       ' → logprob: -2.3942975997924805
    3. ' for' → logprob: -3.1442975997924805
    4. '   ' → logprob: -10.39429759979248
    5. '	for' → logprob: -12.26929759979248
    6. ' ' → logprob: -15.14429759979248
    7. '     ' → logprob: -16.144298553466797
    8. '    ' → logprob: -16.269298553466797
    9. '      ' → logprob: -16.394298553466797
    10. '           ' → logprob: -16.894298553466797

Token 111: ' r' (ID: 428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36270251870155334
    2. ' r' → logprob: -1.237702488899231
    3. ' i' → logprob: -4.362702369689941
    4. 'r' → logprob: -7.112702369689941
    5. ' row' → logprob: -7.487702369689941
    6. '	r' → logprob: -11.487702369689941
    7. 'i' → logprob: -11.737702369689941
    8. ' _' → logprob: -12.737702369689941
    9. ' ‌' → logprob: -12.862702369689941
    10. ' ' → logprob: -13.112702369689941

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038391098380088806
    2. ' ' → logprob: -3.41339111328125
    3. 'in' → logprob: -5.66339111328125
    4. ' r' → logprob: -7.16339111328125
    5. 'r' → logprob: -9.41339111328125
    6. '1' → logprob: -9.66339111328125
    7. ' i' → logprob: -9.78839111328125
    8. ' =' → logprob: -10.28839111328125
    9. ',' → logprob: -10.66339111328125
    10. '	in' → logprob: -10.66339111328125

Token 113: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.693160891532898
    2. 'range' → logprob: -0.693160891532898
    3. '	range' → logprob: -12.318161010742188
    4. ' ' → logprob: -13.068161010742188
    5. '   ' → logprob: -13.068161010742188
    6. ' rang' → logprob: -13.693161010742188
    7. ' r' → logprob: -14.068161010742188
    8. '(range' → logprob: -14.068161010742188
    9. 'r' → logprob: -14.193161010742188
    10. 'rang' → logprob: -14.568161010742188

Token 114: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0009118211455643177
    2. '(' → logprob: -7.000911712646484
    3. ' (' → logprob: -15.375911712646484
    4. '(
' → logprob: -17.125911712646484
    5. 'r' → logprob: -17.500911712646484
    6. ' r' → logprob: -18.375911712646484
    7. ')' → logprob: -18.750911712646484
    8. '(n' → logprob: -19.000911712646484
    9. '(s' → logprob: -19.750911712646484
    10. '(range' → logprob: -19.875911712646484

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004062963649630547
    2. ',' → logprob: -6.504063129425049
    3. ' ,' → logprob: -6.879063129425049
    4. '2' → logprob: -7.754063129425049
    5. 'r' → logprob: -7.754063129425049
    6. ' r' → logprob: -8.75406265258789
    7. ' ' → logprob: -8.75406265258789
    8. '+' → logprob: -9.62906265258789
    9. ')' → logprob: -10.37906265258789
    10. ' +' → logprob: -10.81656265258789

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00518133956938982
    2. ' ,' → logprob: -5.380181312561035
    3. ',r' → logprob: -7.505181312561035
    4. 'r' → logprob: -12.005181312561035
    5. ' r' → logprob: -12.880181312561035
    6. '   ' → logprob: -14.005181312561035
    7. ',
' → logprob: -14.505181312561035
    8. ' ' → logprob: -15.880181312561035
    9. '‌,' → logprob: -16.25518226623535
    10. '       ' → logprob: -16.25518226623535

Token 117: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10020849853754044
    2. ' r' → logprob: -2.3502085208892822
    3. '(r' → logprob: -13.350208282470703
    4. '	r' → logprob: -16.100208282470703
    5. '   ' → logprob: -16.475208282470703
    6. ' ' → logprob: -17.100208282470703
    7. ')' → logprob: -17.350208282470703
    8. '    ' → logprob: -18.100208282470703
    9. '​' → logprob: -18.350208282470703
    10. '```' → logprob: -18.725208282470703

Token 118: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8802491215174086e-05
    2. '+' → logprob: -10.875028610229492
    3. ' +' → logprob: -12.875028610229492
    4. ' ' → logprob: -13.000028610229492
    5. 'r' → logprob: -13.125028610229492
    6. '₂' → logprob: -15.000028610229492
    7. ',' → logprob: -15.062528610229492
    8. ')' → logprob: -15.125028610229492
    9. ' r' → logprob: -15.250028610229492
    10. '_' → logprob: -15.250028610229492

Token 119: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740865230560303
    2. '+' → logprob: -0.9740865230560303
    3. ' ' → logprob: -11.97408676147461
    4. ')' → logprob: -13.22408676147461
    5. ')+' → logprob: -14.84908676147461
    6. '   ' → logprob: -15.34908676147461
    7. ' +
' → logprob: -15.47408676147461
    8. ' )' → logprob: -16.09908676147461
    9. '+)' → logprob: -16.47408676147461
    10. '1' → logprob: -16.72408676147461

Token 120: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014163747429847717
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -16.014163970947266
    4. '```' → logprob: -16.014163970947266
    5. ')' → logprob: -17.264163970947266
    6. '2' → logprob: -18.076663970947266
    7. '  ' → logprob: -18.451663970947266
    8. ' ' → logprob: -18.576663970947266
    9. '+' → logprob: -19.076663970947266
    10. '<|end|>' → logprob: -19.139163970947266

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -14.625024795532227
    4. '```' → logprob: -17.000024795532227
    5. '   ' → logprob: -17.125024795532227
    6. '  ' → logprob: -19.375024795532227
    7. '۱' → logprob: -19.500024795532227
    8. '' → logprob: -19.625024795532227
    9. ' )' → logprob: -19.687524795532227
    10. '
' → logprob: -19.875024795532227

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009193199803121388
    2. '):
' → logprob: -7.500919342041016
    3. ':' → logprob: -8.250919342041016
    4. ' ):' → logprob: -9.625919342041016
    5. ')' → logprob: -10.875919342041016
    6. '       ' → logprob: -11.500919342041016
    7. ',' → logprob: -12.375919342041016
    8. '   ' → logprob: -13.250919342041016
    9. '<|end|>' → logprob: -13.250919342041016
    10. '):
' → logprob: -14.625919342041016

Token 123: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0324687957763672
    2. '           ' → logprob: -1.0324687957763672
    3. '        ' → logprob: -2.157468795776367
    4. '<|end|>' → logprob: -2.657468795776367
    5. ' ' → logprob: -3.407468795776367
    6. ' 
' → logprob: -4.157468795776367
    7. '            ' → logprob: -4.907468795776367
    8. ':' → logprob: -4.907468795776367
    9. ' for' → logprob: -5.032468795776367
    10. '               ' → logprob: -5.532468795776367

Token 124: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07044018805027008
    2. 'for' (adapté à ' for') → logprob: -2.6954402923583984
    3. '        ' → logprob: -8.195440292358398
    4. ' ' → logprob: -8.820440292358398
    5. '       ' → logprob: -10.320440292358398
    6. ' ' → logprob: -11.195440292358398
    7. ' total' → logprob: -11.820440292358398
    8. '           ' → logprob: -11.945440292358398
    9. '    ' → logprob: -12.070440292358398
    10. '   ' → logprob: -12.570440292358398

Token 125: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.004090627655386925
    2. 'c' → logprob: -5.504090785980225
    3. ' ' → logprob: -11.379090309143066
    4. '	c' → logprob: -15.004090309143066
    5. ' ' → logprob: -15.129090309143066
    6. '    ' → logprob: -16.629091262817383
    7. '   ' → logprob: -17.004091262817383
    8. '  ' → logprob: -17.504091262817383
    9. ')c' → logprob: -17.754091262817383
    10. '```' → logprob: -18.004091262817383

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03942110389471054
    2. 'in' → logprob: -3.2894210815429688
    3. ' ' → logprob: -6.664421081542969
    4. '<|end|>' → logprob: -10.289421081542969
    5. '=' → logprob: -11.039421081542969
    6. ')' → logprob: -11.164421081542969
    7. ',' → logprob: -12.039421081542969
    8. '        ' → logprob: -12.164421081542969
    9. '	in' → logprob: -12.539421081542969
    10. ' =' → logprob: -12.914421081542969

Token 127: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759913921356201
    2. ' range' → logprob: -0.8259913921356201
    3. ' c' → logprob: -9.9509916305542
    4. 'c' → logprob: -12.4509916305542
    5. '(range' → logprob: -15.4509916305542
    6. ' ' → logprob: -15.9509916305542
    7. '	range' → logprob: -17.325990676879883
    8. '_range' → logprob: -18.950990676879883
    9. 'rang' → logprob: -19.075990676879883
    10. ' col' → logprob: -19.325990676879883

Token 128: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.04206765443086624
    2. '(' → logprob: -3.542067766189575
    3. ',' → logprob: -4.667067527770996
    4. 'c' → logprob: -6.417067527770996
    5. ' (' → logprob: -7.417067527770996
    6. ' ,' → logprob: -8.167067527770996
    7. ' c' → logprob: -8.667067527770996
    8. ',c' → logprob: -9.292067527770996
    9. '(
' → logprob: -10.417067527770996
    10. ')' → logprob: -12.667067527770996

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6447179913520813
    2. ',' → logprob: -0.7697179913520813
    3. ' ,' → logprob: -4.519718170166016
    4. 'c' → logprob: -7.644718170166016
    5. ',c' → logprob: -7.894718170166016
    6. ')' → logprob: -9.269718170166016
    7. '_,' → logprob: -10.019718170166016
    8. ' c' → logprob: -10.644718170166016
    9. '),' → logprob: -10.769718170166016
    10. 'r' → logprob: -10.769718170166016

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006405997555702925
    2. ' ,' → logprob: -7.375640392303467
    3. ',c' → logprob: -11.500640869140625
    4. 'c' → logprob: -14.000640869140625
    5. ',
' → logprob: -14.375640869140625
    6. 'r' → logprob: -14.500640869140625
    7. '+' → logprob: -14.625640869140625
    8. ')' → logprob: -14.625640869140625
    9. ',r' → logprob: -14.875640869140625
    10. '),' → logprob: -15.625640869140625

Token 131: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07888989895582199
    2. ' c' → logprob: -2.578889846801758
    3. 'r' → logprob: -16.828889846801758
    4. ' ' → logprob: -17.203889846801758
    5. '   ' → logprob: -17.328889846801758
    6. ')c' → logprob: -18.078889846801758
    7. '	c' → logprob: -18.078889846801758
    8. '(c' → logprob: -18.328889846801758
    9. '    ' → logprob: -18.703889846801758
    10. ' r' → logprob: -20.078889846801758

Token 132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004516277462244034
    2. '+' → logprob: -5.754516124725342
    3. ',' → logprob: -6.879516124725342
    4. ' +' → logprob: -8.1295166015625
    5. ' ' → logprob: -12.8795166015625
    6. ' ,' → logprob: -13.0045166015625
    7. '_' → logprob: -13.1295166015625
    8. '   ' → logprob: -13.2545166015625
    9. ')' → logprob: -13.7545166015625
    10. '1' → logprob: -13.7545166015625

Token 133: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06201260909438133
    2. '+' → logprob: -2.8120126724243164
    3. ' ' → logprob: -10.937012672424316
    4. '2' → logprob: -11.187012672424316
    5. '1' → logprob: -11.812012672424316
    6. ')' → logprob: -13.312012672424316
    7. ',' → logprob: -13.812012672424316
    8. ' +
' → logprob: -14.062012672424316
    9. ')+' → logprob: -14.812012672424316
    10. '   ' → logprob: -15.062012672424316

Token 134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02169671840965748
    2. ' ' → logprob: -3.8966968059539795
    3. '2' → logprob: -6.7716965675354
    4. ')' → logprob: -11.896697044372559
    5. '   ' → logprob: -15.271697044372559
    6. '0' → logprob: -15.271697044372559
    7. '  ' → logprob: -15.521697044372559
    8. ' )' → logprob: -15.834197044372559
    9. 'c' → logprob: -16.084196090698242
    10. '
' → logprob: -16.146696090698242

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007598382653668523
    2. ' ' → logprob: -7.500759601593018
    3. '+' → logprob: -8.750760078430176
    4. '2' → logprob: -10.250760078430176
    5. ')' → logprob: -11.875760078430176
    6. ' +' → logprob: -12.500760078430176
    7. '   ' → logprob: -15.188260078430176
    8. ',' → logprob: -15.250760078430176
    9. '+)' → logprob: -15.625760078430176
    10. ')+' → logprob: -15.688260078430176

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018896419554948807
    2. '):
' → logprob: -4.018896579742432
    3. ')' → logprob: -7.768896579742432
    4. ':' → logprob: -8.393896102905273
    5. ' ):' → logprob: -10.393896102905273
    6. '           ' → logprob: -10.643896102905273
    7. '):
' → logprob: -11.018896102905273
    8. '               ' → logprob: -11.768896102905273
    9. '       ' → logprob: -12.518896102905273
    10. ']:' → logprob: -12.518896102905273

Token 137: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1854230761528015
    2. 'total' → logprob: -1.9354231357574463
    3. ' total' → logprob: -4.060422897338867
    4. '           ' → logprob: -4.935422897338867
    5. '(total' → logprob: -8.435422897338867
    6. '                   ' → logprob: -9.685422897338867
    7. '
' → logprob: -9.935422897338867
    8. ' 
' → logprob: -10.060422897338867
    9. '                
' → logprob: -10.810422897338867
    10. '```' → logprob: -11.685422897338867

Token 138: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.16100247204303741
    2. ' total' → logprob: -1.911002516746521
    3. '               ' → logprob: -7.6610026359558105
    4. '           ' → logprob: -8.411002159118652
    5. '                   ' → logprob: -10.411002159118652
    6. 'self' → logprob: -11.411002159118652
    7. 't' → logprob: -11.536002159118652
    8. '	total' → logprob: -11.911002159118652
    9. '(total' → logprob: -12.536002159118652
    10. '
' → logprob: -12.536002159118652

Token 139: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.027331223711371422
    2. '+=' → logprob: -3.6523311138153076
    3. '+' → logprob: -7.027331352233887
    4. ' +' → logprob: -9.027331352233887
    5. '<|end|>' → logprob: -11.652331352233887
    6. ']+=' → logprob: -11.777331352233887
    7. ' ' → logprob: -12.652331352233887
    8. ' ' → logprob: -14.527331352233887
    9. ')' → logprob: -14.652331352233887
    10. '```' → logprob: -14.652331352233887

Token 140: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.02324594371020794
    2. 'self' → logprob: -3.7732460498809814
    3. '	self' → logprob: -15.773245811462402
    4. '(self' → logprob: -16.02324676513672
    5. ' ' → logprob: -16.27324676513672
    6. '[self' → logprob: -17.52324676513672
    7. '_self' → logprob: -18.64824676513672
    8. ' ' → logprob: -19.39824676513672
    9. 's' → logprob: -19.52324676513672
    10. '=self' → logprob: -19.89824676513672

Token 141: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.004115088377147913
    2. '.' → logprob: -5.504115104675293
    3. ' .' → logprob: -10.254115104675293
    4. 'data' → logprob: -14.254115104675293
    5. '[data' → logprob: -15.129115104675293
    6. ' ' → logprob: -16.129114151000977
    7. '```' → logprob: -16.254114151000977
    8. ' data' → logprob: -16.379114151000977
    9. '.
' → logprob: -16.879114151000977
    10. '`.' → logprob: -17.129114151000977

Token 142: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.25
    3. 'r' → logprob: -19.0
    4. ' [' → logprob: -19.125
    5. '[row' → logprob: -20.0
    6. '```' → logprob: -20.25
    7. '[c' → logprob: -20.5
    8. '[
' → logprob: -21.375
    9. '   ' → logprob: -21.5
    10. '[s' → logprob: -22.25

Token 143: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0031646527349948883
    2. '[c' → logprob: -5.878164768218994
    3. ']' → logprob: -8.253164291381836
    4. '[' → logprob: -9.878164291381836
    5. ' ][' → logprob: -10.003164291381836
    6. '[
' → logprob: -13.878164291381836
    7. '}[' → logprob: -15.003164291381836
    8. ')[' → logprob: -15.003164291381836
    9. '"][' → logprob: -15.253164291381836
    10. ' [' → logprob: -15.878164291381836

Token 144: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.014684110297821e-06
    2. ' c' → logprob: -11.625008583068848
    3. ')c' → logprob: -17.500009536743164
    4. ' ' → logprob: -18.125009536743164
    5. '   ' → logprob: -18.125009536743164
    6. '	c' → logprob: -18.750009536743164
    7. '<|end|>' → logprob: -19.125009536743164
    8. ')' → logprob: -20.000009536743164
    9. '  ' → logprob: -20.125009536743164
    10. '
' → logprob: -20.750009536743164

Token 145: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006312566343694925
    2. ']' → logprob: -5.131312370300293
    3. ' )' → logprob: -8.131312370300293
    4. '<|end|>' → logprob: -10.506312370300293
    5. ')
' → logprob: -10.631312370300293
    6. '}' → logprob: -11.131312370300293
    7. ' ]' → logprob: -11.756312370300293
    8. '[' → logprob: -12.006312370300293
    9. ')]' → logprob: -12.756312370300293
    10. '+' → logprob: -12.881312370300293

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00032259183353744447
    2. '
' → logprob: -9.125322341918945
    3. 'return' → logprob: -9.500322341918945
    4. '        
' → logprob: -9.625322341918945
    5. ' return' → logprob: -10.875322341918945
    6. '	' → logprob: -10.875322341918945
    7. '   ' → logprob: -11.625322341918945
    8. '               ' → logprob: -12.250322341918945
    9. '<|end|>' → logprob: -12.250322341918945
    10. '      ' → logprob: -12.625322341918945

Token 147: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049707308411598206
    2. 'return' (adapté à ' return') → logprob: -3.0497074127197266
    3. '   ' → logprob: -7.549707412719727
    4. ' return' → logprob: -7.674707412719727
    5. '
' → logprob: -10.174707412719727
    6. '        
' → logprob: -10.424707412719727
    7. '	return' → logprob: -10.549707412719727
    8. '	' → logprob: -11.174707412719727
    9. ' ' → logprob: -12.049707412719727
    10. '    
' → logprob: -13.424707412719727

Token 148: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.006720229052007198
    2. 'total' → logprob: -5.006720066070557
    3. ' ' → logprob: -12.756720542907715
    4. ' tota' → logprob: -14.131720542907715
    5. ' ' → logprob: -14.756720542907715
    6. ' tot' → logprob: -15.131720542907715
    7. '(total' → logprob: -15.506720542907715
    8. ' t' → logprob: -16.0067195892334
    9. '	total' → logprob: -16.1317195892334
    10. 't' → logprob: -16.5067195892334

Token 149: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.587691605091095
    2. '<|end|>' → logprob: -0.837691605091095
    3. '   ' → logprob: -5.462691783905029
    4. '<|end|>' → logprob: -6.212691783905029
    5. '\n' → logprob: -6.962691783905029
    6. ' ' → logprob: -7.087691783905029
    7. 'def' → logprob: -7.587691783905029
    8. '

' → logprob: -7.712691783905029
    9. 'newline' → logprob: -7.712691783905029
    10. ' 
' → logprob: -8.087691307067871

Token 150: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0743570625782013
    2. '
' → logprob: -2.949357032775879
    3. '    
' → logprob: -5.199357032775879
    4. ' ' → logprob: -5.574357032775879
    5. ' 
' → logprob: -5.824357032775879
    6. 'n' → logprob: -6.824357032775879
    7. 'def' → logprob: -6.949357032775879
    8. 'class' → logprob: -7.074357032775879
    9. 'd' → logprob: -7.324357032775879
    10. '<|end|>' → logprob: -7.324357032775879

Token 151: ' Kad' (ID: 53913)
  Prédit: ' Matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Matrix' → logprob: -0.0656665489077568
    2. ' Sparse' → logprob: -3.690666437149048
    3. ' ' → logprob: -4.315666675567627
    4. ' Vector' → logprob: -4.690666675567627
    5. ' Solver' → logprob: -5.690666675567627
    6. ' S' → logprob: -6.190666675567627
    7. ' Cube' → logprob: -6.315666675567627
    8. ' Square' → logprob: -6.315666675567627
    9. ' Block' → logprob: -6.565666675567627
    10. ' Space' → logprob: -6.690666675567627

Token 152: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.0002478694950696081
    2. 'an' → logprob: -8.375247955322266
    3. ' ane' → logprob: -12.250247955322266
    4. 'anes' → logprob: -12.750247955322266
    5. '   ' → logprob: -13.000247955322266
    6. 'a' → logprob: -13.125247955322266
    7. 'ANE' → logprob: -13.500247955322266
    8. '```' → logprob: -13.500247955322266
    9. 'ане' → logprob: -14.125247955322266
    10. 'anez' → logprob: -14.625247955322266

Token 153: 'Result' (ID: 2769)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02288423478603363
    2. 'Algorithm' → logprob: -4.022884368896484
    3. ':
' → logprob: -6.897884368896484
    4. 'Solver' → logprob: -7.147884368896484
    5. ''s' → logprob: -7.647884368896484
    6. 'Helper' → logprob: -7.647884368896484
    7. '():' → logprob: -7.772884368896484
    8. '<|end|>' → logprob: -8.022884368896484
    9. '```' → logprob: -8.272884368896484
    10. '(' → logprob: -8.522884368896484

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008308322867378592
    2. ':
' → logprob: -7.12583065032959
    3. ' :' → logprob: -10.62583065032959
    4. ':

' → logprob: -14.12583065032959
    5. '<|end|>' → logprob: -14.50083065032959
    6. '(' → logprob: -15.00083065032959
    7. ' :
' → logprob: -16.250831604003906
    8. '>:' → logprob: -16.250831604003906
    9. '):' → logprob: -16.500831604003906
    10. '(object' → logprob: -16.750831604003906

Token 155: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20142580568790436
    2. ':
' → logprob: -1.7014257907867432
    3. '   ' → logprob: -11.951425552368164
    4. ':

' → logprob: -12.951425552368164
    5. '<|end|>' → logprob: -13.951425552368164
    6. '(' → logprob: -14.076425552368164
    7. '(object' → logprob: -14.451425552368164
    8. ' :
' → logprob: -14.826425552368164
    9. ' :' → logprob: -15.201425552368164
    10. ':
' → logprob: -15.326425552368164

Token 156: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.08681847155094147
    2. '   ' → logprob: -3.2118184566497803
    3. 'def' (adapté à ' def') → logprob: -3.2118184566497803
    4. ':' → logprob: -7.336818695068359
    5. '    ' → logprob: -7.711818695068359
    6. ' ' → logprob: -7.836818695068359
    7. '  ' → logprob: -8.08681869506836
    8. ' __' → logprob: -8.08681869506836
    9. '<|end|>' → logprob: -8.46181869506836
    10. ' 
' → logprob: -9.46181869506836

Token 157: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.003958243876695633
    2. 'init' → logprob: -5.753958225250244
    3. ' init' → logprob: -7.878958225250244
    4. '__' → logprob: -8.128958702087402
    5. '_init' → logprob: -9.503958702087402
    6. ' ' → logprob: -11.128958702087402
    7. ' def' → logprob: -12.128958702087402
    8. ' None' → logprob: -12.878958702087402
    9. '_' → logprob: -13.128958702087402
    10. ' _' → logprob: -13.253958702087402

Token 158: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.4121114822482923e-06
    2. ' init' → logprob: -12.875003814697266
    3. 'nit' → logprob: -14.500003814697266
    4. 'ini' → logprob: -15.625003814697266
    5. 'int' → logprob: -16.250003814697266
    6. 'i' → logprob: -16.500003814697266
    7. 'next' → logprob: -18.000003814697266
    8. '```' → logprob: -18.000003814697266
    9. 'new' → logprob: -18.875003814697266
    10. 'inite' → logprob: -19.125003814697266

Token 159: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.013209648430347443
    2. '__' → logprob: -4.388209819793701
    3. '(' → logprob: -7.513209819793701
    4. '__(
' → logprob: -9.138209342956543
    5. '__((' → logprob: -10.763209342956543
    6. ' (' → logprob: -11.763209342956543
    7. '(self' → logprob: -11.763209342956543
    8. '__('' → logprob: -12.013209342956543
    9. '__(*' → logprob: -13.638209342956543
    10. '__("' → logprob: -14.013209342956543

Token 160: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007574541959911585
    2. ' self' → logprob: -7.250757217407227
    3. ')' → logprob: -10.500757217407227
    4. ',' → logprob: -11.750757217407227
    5. '(self' → logprob: -12.750757217407227
    6. ',self' → logprob: -13.125757217407227
    7. '   ' → logprob: -13.375757217407227
    8. ' ' → logprob: -13.625757217407227
    9. '```' → logprob: -13.875757217407227
    10. '	self' → logprob: -14.000757217407227

Token 161: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.6329226493835449
    2. ',' → logprob: -0.7579226493835449
    3. '):' → logprob: -9.007923126220703
    4. '<|end|>' → logprob: -9.882923126220703
    5. '):
' → logprob: -10.132923126220703
    6. 'self' → logprob: -10.257923126220703
    7. ' ):' → logprob: -10.632923126220703
    8. '_,' → logprob: -11.757923126220703
    9. ',size' → logprob: -12.257923126220703
    10. ' ' → logprob: -12.257923126220703

Token 162: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7556789517402649
    2. 'max' → logprob: -0.7556789517402649
    3. ' start' → logprob: -3.13067889213562
    4. 'start' → logprob: -4.255679130554199
    5. 'left' → logprob: -7.880679130554199
    6. ' value' → logprob: -8.0056791305542
    7. ' maximum' → logprob: -8.1306791305542
    8. ' current' → logprob: -8.2556791305542
    9. 'value' → logprob: -8.5056791305542
    10. ' left' → logprob: -8.6306791305542

Token 163: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0023633979726582766
    2. '_' → logprob: -6.127363204956055
    3. '_value' → logprob: -8.877363204956055
    4. '_sub' → logprob: -11.002363204956055
    5. 'sum' → logprob: -11.127363204956055
    6. 'Sum' → logprob: -12.877363204956055
    7. '_end' → logprob: -13.127363204956055
    8. '_so' → logprob: -13.752363204956055
    9. '_val' → logprob: -14.377363204956055
    10. ' sum' → logprob: -15.252363204956055

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05009402334690094
    2. '=' → logprob: -3.0500941276550293
    3. ' ,' → logprob: -6.550094127655029
    4. '=None' → logprob: -9.925093650817871
    5. '):' → logprob: -11.925093650817871
    6. ' =' → logprob: -12.050093650817871
    7. ')' → logprob: -12.175093650817871
    8. ' ' → logprob: -12.925093650817871
    9. ',int' → logprob: -13.800093650817871
    10. '<|end|>' → logprob: -14.175093650817871

Token 165: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.27001312375068665
    2. 'left' → logprob: -1.7700130939483643
    3. 'top' → logprob: -2.8950130939483643
    4. ' start' → logprob: -4.895013332366943
    5. ' left' → logprob: -6.020013332366943
    6. ' top' → logprob: -7.270013332366943
    7. '   ' → logprob: -8.145012855529785
    8. 'row' → logprob: -10.270012855529785
    9. ' ' → logprob: -11.145012855529785
    10. '  ' → logprob: -11.520012855529785

Token 166: '_index' (ID: 7748)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.38962504267692566
    2. ',' → logprob: -1.264625072479248
    3. '_index' → logprob: -3.389625072479248
    4. '_idx' → logprob: -5.514625072479248
    5. ' ,' → logprob: -7.264625072479248
    6. ',row' → logprob: -7.514625072479248
    7. '<|end|>' → logprob: -7.639625072479248
    8. ',end' → logprob: -8.63962459564209
    9. '=None' → logprob: -8.63962459564209
    10. 'row' → logprob: -9.38962459564209

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005882986588403583
    2. ' ,' → logprob: -8.125588417053223
    3. '=None' → logprob: -8.375588417053223
    4. '=' → logprob: -10.000588417053223
    5. '):' → logprob: -11.250588417053223
    6. ')' → logprob: -13.625588417053223
    7. ',None' → logprob: -13.750588417053223
    8. '<|end|>' → logprob: -15.500588417053223
    9. ',n' → logprob: -15.875588417053223
    10. ':' → logprob: -16.375587463378906

Token 168: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.31327563524246216
    2. 'end' → logprob: -1.3132755756378174
    3. ' ' → logprob: -11.438275337219238
    4. '	end' → logprob: -13.688275337219238
    5. '[end' → logprob: -15.188275337219238
    6. '   ' → logprob: -15.438275337219238
    7. ',end' → logprob: -15.438275337219238
    8. '  ' → logprob: -15.563275337219238
    9. '(end' → logprob: -15.563275337219238
    10. '<|end|>' → logprob: -15.563275337219238

Token 169: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.004661522805690765
    2. '_' → logprob: -5.379661560058594
    3. ' _' → logprob: -10.379661560058594
    4. '_idx' → logprob: -12.254661560058594
    5. '_indices' → logprob: -13.379661560058594
    6. '_i' → logprob: -14.379661560058594
    7. '_
' → logprob: -14.754661560058594
    8. '<|end|>' → logprob: -15.129661560058594
    9. '_ind' → logprob: -15.379661560058594
    10. '_INDEX' → logprob: -15.504661560058594

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006871753721497953
    2. ' ):' → logprob: -8.125687599182129
    3. ')' → logprob: -8.625687599182129
    4. '):
' → logprob: -8.875687599182129
    5. ',' → logprob: -9.750687599182129
    6. ':' → logprob: -11.750687599182129
    7. '   ' → logprob: -13.250687599182129
    8. ' ' → logprob: -13.500687599182129
    9. '=None' → logprob: -13.625687599182129
    10. ' )' → logprob: -14.875687599182129

Token 171: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03854630887508392
    2. ':' → logprob: -3.538546323776245
    3. '):
' → logprob: -5.538546085357666
    4. ',' → logprob: -6.163546085357666
    5. '       ' → logprob: -6.663546085357666
    6. '   ' → logprob: -7.788546085357666
    7. ' ):' → logprob: -7.913546085357666
    8. ')' → logprob: -8.288546562194824
    9. '<|end|>' → logprob: -8.288546562194824
    10. ' :' → logprob: -9.538546562194824

Token 172: ' self' (ID: 1051)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.10047180950641632
    2. 'max' → logprob: -2.3504717350006104
    3. ' self' → logprob: -8.350471496582031
    4. 'self' (adapté à ' self') → logprob: -10.600471496582031
    5. '       ' → logprob: -12.850471496582031
    6. '	max' → logprob: -14.975471496582031
    7. '_max' → logprob: -15.100471496582031
    8. '        ' → logprob: -15.475471496582031
    9. ' ' → logprob: -15.975471496582031
    10. ' maximum' → logprob: -16.10047149658203

Token 173: '.max' (ID: 11883)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.049224548041820526
    2. '.max' → logprob: -3.049224615097046
    3. ' .' → logprob: -8.174224853515625
    4. ' =' → logprob: -8.424224853515625
    5. ' ' → logprob: -9.799224853515625
    6. '=max' → logprob: -10.549224853515625
    7. ' max' → logprob: -11.299224853515625
    8. '=' → logprob: -11.549224853515625
    9. 'max' → logprob: -11.674224853515625
    10. '.maximum' → logprob: -11.674224853515625

Token 174: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0002932750794570893
    2. '_' → logprob: -8.250293731689453
    3. ' _' → logprob: -11.000293731689453
    4. '_s' → logprob: -11.250293731689453
    5. 'sum' → logprob: -14.000293731689453
    6. '_max' → logprob: -15.000293731689453
    7. '<|end|>' → logprob: -15.250293731689453
    8. '_score' → logprob: -15.750293731689453
    9. '_amount' → logprob: -16.625293731689453
    10. '_
' → logprob: -16.625293731689453

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3931633234024048
    2. '=' → logprob: -1.1431633234024048
    3. ',' → logprob: -5.143163204193115
    4. ' ,' → logprob: -8.143163681030273
    5. ' ' → logprob: -8.893163681030273
    6. '<|end|>' → logprob: -12.518163681030273
    7. '_' → logprob: -14.268163681030273
    8. ' =
' → logprob: -14.893163681030273
    9. '_=' → logprob: -16.018163681030273
    10. ')' → logprob: -16.393163681030273

Token 176: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.016038941219449043
    2. 'max' → logprob: -4.14103889465332
    3. ' ' → logprob: -13.14103889465332
    4. ',max' → logprob: -14.01603889465332
    5. '(max' → logprob: -14.01603889465332
    6. '=max' → logprob: -14.89103889465332
    7. ' ' → logprob: -15.39103889465332
    8. ',' → logprob: -15.89103889465332
    9. '	max' → logprob: -16.26603889465332
    10. ' maxlength' → logprob: -16.39103889465332

Token 177: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.003249008674174547
    2. '_' → logprob: -5.753249168395996
    3. ' _' → logprob: -10.378249168395996
    4. '<|end|>' → logprob: -11.378249168395996
    5. 'sum' → logprob: -11.503249168395996
    6. '_s' → logprob: -11.503249168395996
    7. ')' → logprob: -13.628249168395996
    8. 'Sum' → logprob: -14.128249168395996
    9. '_
' → logprob: -14.253249168395996
    10. '_value' → logprob: -14.253249168395996

Token 178: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002789899706840515
    2. '<|end|>' → logprob: -6.1277899742126465
    3. ',' → logprob: -7.6277899742126465
    4. '
' → logprob: -10.377789497375488
    5. 'self' → logprob: -10.877789497375488
    6. '	' → logprob: -11.002789497375488
    7. '        
' → logprob: -11.252789497375488
    8. ' ' → logprob: -11.377789497375488
    9. '<|end|>' → logprob: -12.377789497375488
    10. '   ' → logprob: -12.502789497375488

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038837024476379156
    2. ',' → logprob: -8.625388145446777
    3. '<|end|>' → logprob: -9.125388145446777
    4. 'self' → logprob: -9.625388145446777
    5. '        
' → logprob: -11.750388145446777
    6. ' self' → logprob: -12.125388145446777
    7. '	' → logprob: -12.375388145446777
    8. '
' → logprob: -12.375388145446777
    9. ' ' → logprob: -12.750388145446777
    10. '   ' → logprob: -13.000388145446777

Token 180: ' self' (ID: 1051)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.20141461491584778
    2. 'start' → logprob: -1.7014145851135254
    3. ',start' → logprob: -15.076415061950684
    4. ',' → logprob: -15.576415061950684
    5. '.start' → logprob: -15.576415061950684
    6. '[start' → logprob: -15.826415061950684
    7. '=start' → logprob: -15.951415061950684
    8. '(start' → logprob: -16.201414108276367
    9. '       ' → logprob: -16.326414108276367
    10. '	start' → logprob: -16.576414108276367

Token 181: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.1395431011915207
    2. '.' → logprob: -2.139543056488037
    3. 'start' → logprob: -4.889543056488037
    4. ' .' → logprob: -5.889543056488037
    5. ' start' → logprob: -6.639543056488037
    6. '_start' → logprob: -7.514543056488037
    7. ',' → logprob: -9.139543533325195
    8. '._' → logprob: -10.014543533325195
    9. '```' → logprob: -10.264543533325195
    10. '[start' → logprob: -10.514543533325195

Token 182: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.001291904947720468
    2. '_' → logprob: -6.751291751861572
    3. ' _' → logprob: -9.12629222869873
    4. '_idx' → logprob: -11.75129222869873
    5. '<|end|>' → logprob: -13.12629222869873
    6. '_indices' → logprob: -14.12629222869873
    7. 'index' → logprob: -15.00129222869873
    8. '_
' → logprob: -15.37629222869873
    9. '=_' → logprob: -15.37629222869873
    10. '_ind' → logprob: -15.37629222869873

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22736284136772156
    2. '=' → logprob: -1.602362871170044
    3. ',' → logprob: -6.852362632751465
    4. ' ' → logprob: -7.227362632751465
    5. '<|end|>' → logprob: -9.102362632751465
    6. ' ,' → logprob: -9.977362632751465
    7. ')' → logprob: -12.977362632751465
    8. ' =
' → logprob: -13.477362632751465
    9. '_' → logprob: -13.852362632751465
    10. '=None' → logprob: -14.477362632751465

Token 184: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.09757799655199051
    2. 'start' → logprob: -2.4725780487060547
    3. ' ' → logprob: -4.847578048706055
    4. ' end' → logprob: -7.597578048706055
    5. 'end' → logprob: -8.972578048706055
    6. '0' → logprob: -9.597578048706055
    7. ' ' → logprob: -10.847578048706055
    8. '=start' → logprob: -11.097578048706055
    9. '[start' → logprob: -12.347578048706055
    10. '_start' → logprob: -12.472578048706055

Token 185: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.06230757012963295
    2. '_' → logprob: -2.812307596206665
    3. ' _' → logprob: -8.062307357788086
    4. '_
' → logprob: -10.937307357788086
    5. '_

' → logprob: -12.562307357788086
    6. '_idx' → logprob: -13.562307357788086
    7. '_ind' → logprob: -15.562307357788086
    8. '_i' → logprob: -15.687307357788086
    9. '_indices' → logprob: -15.812307357788086
    10. '_token' → logprob: -16.062307357788086

Token 186: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08566836267709732
    2. ',' → logprob: -2.8356683254241943
    3. '<|end|>' → logprob: -4.085668563842773
    4. '
' → logprob: -6.335668563842773
    5. '	' → logprob: -6.585668563842773
    6. '   ' → logprob: -6.960668563842773
    7. ',end' → logprob: -7.835668563842773
    8. ' ' → logprob: -7.835668563842773
    9. '        
' → logprob: -7.960668563842773
    10. ',
' → logprob: -8.085668563842773

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010590101592242718
    2. ',' → logprob: -7.751059055328369
    3. 'end' → logprob: -8.251058578491211
    4. '	' → logprob: -9.376058578491211
    5. '   ' → logprob: -9.376058578491211
    6. ',end' → logprob: -9.626058578491211
    7. ' end' → logprob: -10.126058578491211
    8. '<|end|>' → logprob: -10.501058578491211
    9. '	end' → logprob: -11.376058578491211
    10. ' ,' → logprob: -11.501058578491211

Token 188: ' self' (ID: 1051)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.062222447246313095
    2. ' end' → logprob: -2.812222480773926
    3. 'self' (adapté à ' self') → logprob: -8.312222480773926
    4. '       ' → logprob: -11.937222480773926
    5. ' self' → logprob: -13.062222480773926
    6. '=end' → logprob: -15.562222480773926
    7. '(end' → logprob: -15.937222480773926
    8. '.end' → logprob: -16.43722152709961
    9. '	end' → logprob: -16.56222152709961
    10. '[end' → logprob: -16.68722152709961

Token 189: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.6606114506721497
    2. '.' → logprob: -0.7856114506721497
    3. 'end' → logprob: -3.785611391067505
    4. ' .' → logprob: -5.535611629486084
    5. ' end' → logprob: -7.785611629486084
    6. '_end' → logprob: -8.035611152648926
    7. '.
' → logprob: -9.535611152648926
    8. '._' → logprob: -10.285611152648926
    9. '=end' → logprob: -10.285611152648926
    10. '	end' → logprob: -10.910611152648926

Token 190: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00016659092216286808
    2. '_' → logprob: -9.000166893005371
    3. ' _' → logprob: -10.125166893005371
    4. '__' → logprob: -14.250166893005371
    5. '_
' → logprob: -15.000166893005371
    6. '```' → logprob: -15.375166893005371
    7. '_indices' → logprob: -15.500166893005371
    8. '   ' → logprob: -15.500166893005371
    9. '_idx' → logprob: -15.750166893005371
    10. '_i' → logprob: -15.875166893005371

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001339050941169262
    2. ' =' → logprob: -6.626338958740234
    3. '_' → logprob: -12.501338958740234
    4. '+' → logprob: -12.876338958740234
    5. '<|end|>' → logprob: -12.876338958740234
    6. '=
' → logprob: -13.751338958740234
    7. '=

' → logprob: -14.001338958740234
    8. ')' → logprob: -14.251338958740234
    9. '=None' → logprob: -14.751338958740234
    10. ',' → logprob: -14.876338958740234

Token 192: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3868713080883026
    2. ' end' → logprob: -1.136871337890625
    3. '(end' → logprob: -16.136871337890625
    4. ' ' → logprob: -16.636871337890625
    5. '[end' → logprob: -16.886871337890625
    6. '=end' → logprob: -17.136871337890625
    7. '	end' → logprob: -17.261871337890625
    8. '   ' → logprob: -18.886871337890625
    9. ''end' → logprob: -19.136871337890625
    10. 'endon' → logprob: -19.386871337890625

Token 193: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -4.572941179503687e-05
    2. 'index' → logprob: -10.125045776367188
    3. '_' → logprob: -13.000045776367188
    4. 'Index' → logprob: -13.000045776367188
    5. 'nd' → logprob: -15.500045776367188
    6. 'd' → logprob: -15.500045776367188
    7. 'ex' → logprob: -15.875045776367188
    8. ' _' → logprob: -16.000045776367188
    9. '_INDEX' → logprob: -16.375045776367188
    10. 'e' → logprob: -17.000045776367188

Token 194: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026048757135868073
    2. 'def' → logprob: -4.27604866027832
    3. '

' → logprob: -4.52604866027832
    4. 'class' → logprob: -7.02604866027832
    5. '
' → logprob: -10.52604866027832
    6. '   ' → logprob: -10.77604866027832
    7. '<|end|>' → logprob: -10.90104866027832
    8. '


' → logprob: -11.15104866027832
    9. '    
' → logprob: -11.52604866027832
    10. '  
' → logprob: -12.27604866027832

Token 195: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024764856789261103
    2. 'class' → logprob: -6.002476692199707
    3. '
' → logprob: -15.502476692199707
    4. ' def' → logprob: -15.502476692199707
    5. '```' → logprob: -15.502476692199707
    6. '   ' → logprob: -16.12747573852539
    7. 'de' → logprob: -17.37747573852539
    8. 'ndef' → logprob: -17.62747573852539
    9. '    
' → logprob: -17.75247573852539
    10. '

' → logprob: -18.00247573852539

Token 196: ' Kad' (ID: 53913)
  Prédit: ' Maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Maximum' → logprob: -1.028060793876648
    2. ' Max' → logprob: -1.278060793876648
    3. 'Max' → logprob: -1.403060793876648
    4. ' Matrix' → logprob: -3.2780609130859375
    5. 'Maximum' → logprob: -3.4030609130859375
    6. 'Matrix' → logprob: -3.5280609130859375
    7. ' Kad' → logprob: -5.1530609130859375
    8. 'Kad' → logprob: -6.0280609130859375
    9. 'Rectangle' → logprob: -6.1530609130859375
    10. 'K' → logprob: -6.1530609130859375

Token 197: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.00044663884909823537
    2. 'a' → logprob: -7.750446796417236
    3. 'an' → logprob: -12.000446319580078
    4. ' ane' → logprob: -12.750446319580078
    5. 'anes' → logprob: -13.250446319580078
    6. 'ане' → logprob: -13.375446319580078
    7. '
' → logprob: -14.125446319580078
    8. '```' → logprob: -14.250446319580078
    9. '   ' → logprob: -14.625446319580078
    10. 'ANE' → logprob: -15.625446319580078

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5371325016021729
    2. 'Algorithm' → logprob: -0.9121325016021729
    3. 'Solver' → logprob: -4.912132263183594
    4. ':
' → logprob: -6.287132263183594
    5. 'Result' → logprob: -6.537132263183594
    6. '():' → logprob: -6.912132263183594
    7. 'Solution' → logprob: -7.787132263183594
    8. 'Optimizer' → logprob: -8.537132263183594
    9. 'Algo' → logprob: -8.537132263183594
    10. '>:' → logprob: -8.662132263183594

Token 199: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05135578289628029
    2. ':
' → logprob: -3.0513558387756348
    3. '   ' → logprob: -5.926355838775635
    4. ' :' → logprob: -10.426355361938477
    5. ':def' → logprob: -10.676355361938477
    6. ' :
' → logprob: -11.176355361938477
    7. ' def' → logprob: -11.676355361938477
    8. 'def' → logprob: -12.176355361938477
    9. ':

' → logprob: -12.676355361938477
    10. '  ' → logprob: -12.676355361938477

Token 200: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.443874716758728
    2. '   ' → logprob: -1.318874716758728
    3. 'def' → logprob: -3.3188748359680176
    4. ' ' → logprob: -4.068874835968018
    5. ' @' → logprob: -4.318874835968018
    6. ':' → logprob: -4.443874835968018
    7. ':
' → logprob: -5.693874835968018
    8. ' :' → logprob: -6.193874835968018
    9. ' static' → logprob: -6.193874835968018
    10. ' :
' → logprob: -6.818874835968018

Token 201: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -9.968312951968983e-06
    2. 'classmethod' → logprob: -12.000009536743164
    3. 'static' → logprob: -12.500009536743164
    4. 'st' → logprob: -17.625009536743164
    5. 'property' → logprob: -18.000009536743164
    6. 'dat' → logprob: -18.250009536743164
    7. ' static' → logprob: -20.250009536743164
    8. 'sta' → logprob: -20.875009536743164
    9. 'stat' → logprob: -21.375009536743164
    10. '_static' → logprob: -22.000009536743164

Token 202: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.041886813938617706
    2. ' def' → logprob: -3.291886806488037
    3. '   ' → logprob: -5.666886806488037
    4. '
' → logprob: -8.416887283325195
    5. '(' → logprob: -9.416887283325195
    6. '	def' → logprob: -10.666887283325195
    7. '(def' → logprob: -10.916887283325195
    8. ' ' → logprob: -11.291887283325195
    9. '(
' → logprob: -12.291887283325195
    10. '  ' → logprob: -12.416887283325195

Token 203: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004460854921489954
    2. ' def' → logprob: -5.75446081161499
    3. '
' → logprob: -6.75446081161499
    4. '   ' → logprob: -9.129461288452148
    5. '	def' → logprob: -13.004461288452148
    6. ' ' → logprob: -13.129461288452148
    7. '\' → logprob: -13.504461288452148
    8. 'ndef' → logprob: -14.629461288452148
    9. '    
' → logprob: -14.754461288452148
    10. '  ' → logprob: -15.004461288452148

Token 204: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001234428636962548
    2. ' def' → logprob: -9.000123023986816
    3. '
' → logprob: -17.625123977661133
    4. '   ' → logprob: -18.250123977661133
    5. ' ' → logprob: -19.625123977661133
    6. '  ' → logprob: -21.500123977661133
    7. '	def' → logprob: -21.625123977661133
    8. 'de' → logprob: -21.875123977661133
    9. 'class' → logprob: -22.875123977661133
    10. '    
' → logprob: -23.000123977661133

Token 205: ' run' (ID: 2461)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.7804906368255615
    2. ' max' → logprob: -1.2804906368255615
    3. 'find' → logprob: -1.9054906368255615
    4. 'max' → logprob: -2.2804906368255615
    5. ' run' → logprob: -5.030490875244141
    6. 'run' → logprob: -6.030490875244141
    7. ' maximum' → logprob: -6.530490875244141
    8. 'maximum' → logprob: -7.280490875244141
    9. 'solve' → logprob: -7.405490875244141
    10. 'apply' → logprob: -7.405490875244141

Token 206: '(arr' (ID: 19646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08045195043087006
    2. ' (' → logprob: -3.4554519653320312
    3. '(arr' → logprob: -4.455451965332031
    4. '(array' → logprob: -4.705451965332031
    5. '(nums' → logprob: -5.080451965332031
    6. '(list' → logprob: -5.455451965332031
    7. '(lst' → logprob: -5.580451965332031
    8. '(data' → logprob: -5.705451965332031
    9. '(matrix' → logprob: -6.705451965332031
    10. '(line' → logprob: -7.330451965332031

Token 207: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002145739272236824
    2. '):
' → logprob: -7.127145767211914
    3. ' ):' → logprob: -7.127145767211914
    4. ')' → logprob: -8.002145767211914
    5. ',' → logprob: -9.002145767211914
    6. '(' → logprob: -10.377145767211914
    7. '[]):' → logprob: -11.002145767211914
    8. '():' → logprob: -11.502145767211914
    9. '):
' → logprob: -12.002145767211914
    10. '[' → logprob: -12.502145767211914

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20022301375865936
    2. '
' → logprob: -2.075222969055176
    3. '   ' → logprob: -4.450222969055176
    4. ' ' → logprob: -4.450222969055176
    5. '<|end|>' → logprob: -4.450222969055176
    6. ' 
' → logprob: -4.825222969055176
    7. '        ' → logprob: -5.200222969055176
    8. 'n' → logprob: -6.450222969055176
    9. '    ' → logprob: -6.575222969055176
    10. ' n' → logprob: -6.700222969055176

Token 209: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.019197596237063408
    2. 'max' (adapté à ' max') → logprob: -4.019197463989258
    3. ' n' → logprob: -7.019197463989258
    4. ' current' → logprob: -9.144197463989258
    5. ' if' → logprob: -11.269197463989258
    6. ' best' → logprob: -11.269197463989258
    7. '       ' → logprob: -11.644197463989258
    8. 'n' → logprob: -12.519197463989258
    9. '   ' → logprob: -13.019197463989258
    10. 'best' → logprob: -13.644197463989258

Token 210: '_current' (ID: 23981)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4780609607696533
    2. '_sum' → logprob: -0.9780609607696533
    3. '_current' → logprob: -5.978060722351074
    4. '_so' → logprob: -6.603060722351074
    5. '_here' → logprob: -9.978060722351074
    6. '_end' → logprob: -11.228060722351074
    7. '_curr' → logprob: -11.478060722351074
    8. '_max' → logprob: -13.103060722351074
    9. '_val' → logprob: -13.103060722351074
    10. '_now' → logprob: -13.478060722351074

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02333981730043888
    2. '=' → logprob: -3.7733397483825684
    3. ',' → logprob: -9.523340225219727
    4. '=max' → logprob: -11.023340225219727
    5. ' ,' → logprob: -12.523340225219727
    6. ' ' → logprob: -13.898340225219727
    7. ',max' → logprob: -15.523340225219727
    8. ' ' → logprob: -17.648340225219727
    9. '_' → logprob: -17.898340225219727
    10. '	' → logprob: -18.023340225219727

Token 212: ' max' (ID: 2999)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.28474676609039307
    2. 'max' → logprob: -1.409746766090393
    3. ' max' → logprob: -6.1597466468811035
    4. ' arr' → logprob: -6.5347466468811035
    5. '0' → logprob: -11.659747123718262
    6. 'float' → logprob: -11.659747123718262
    7. ' ' → logprob: -13.034747123718262
    8. '	max' → logprob: -13.659747123718262
    9. '	arr' → logprob: -13.784747123718262
    10. '_arr' → logprob: -14.972247123718262

Token 213: '_global' (ID: 46985)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.7709380388259888
    2. 'arr' → logprob: -1.0209380388259888
    3. '_' → logprob: -1.7709380388259888
    4. '(' → logprob: -5.395937919616699
    5. '_arr' → logprob: -6.270937919616699
    6. '_current' → logprob: -9.0209379196167
    7. ' arr' → logprob: -9.1459379196167
    8. '_so' → logprob: -9.2709379196167
    9. '	arr' → logprob: -9.8959379196167
    10. '[arr' → logprob: -10.5209379196167

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231805443763733
    2. ' =' → logprob: -0.8981805443763733
    3. ',' → logprob: -10.898180961608887
    4. '<|end|>' → logprob: -11.273180961608887
    5. 'arr' → logprob: -11.398180961608887
    6. ' ' → logprob: -12.273180961608887
    7. '=max' → logprob: -13.398180961608887
    8. '_=' → logprob: -13.398180961608887
    9. '<arr' → logprob: -13.648180961608887
    10. '=_' → logprob: -13.898180961608887

Token 215: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0011724866926670074
    2. ' arr' → logprob: -6.7511725425720215
    3. '0' → logprob: -14.751172065734863
    4. '   ' → logprob: -14.751172065734863
    5. '	arr' → logprob: -14.876172065734863
    6. '       ' → logprob: -15.001172065734863
    7. 'max' → logprob: -15.251172065734863
    8. ' ' → logprob: -15.876172065734863
    9. '_arr' → logprob: -16.25117301940918
    10. 'float' → logprob: -16.50117301940918

Token 216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.253090865968261e-06
    2. '0' → logprob: -11.750009536743164
    3. ' [' → logprob: -13.750009536743164
    4. '[
' → logprob: -15.625009536743164
    5. ' ' → logprob: -17.000009536743164
    6. '\[' → logprob: -17.000009536743164
    7. '```' → logprob: -18.750009536743164
    8. 's' → logprob: -18.875009536743164
    9. '[-' → logprob: -20.062509536743164
    10. '[len' → logprob: -20.250009536743164

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.25001335144043
    3. '[' → logprob: -14.25001335144043
    4. '<|end|>' → logprob: -17.75001335144043
    5. '۰' → logprob: -18.12501335144043
    6. '```' → logprob: -18.37501335144043
    7. '   ' → logprob: -18.50001335144043
    8. ']' → logprob: -19.81251335144043
    9. '(' → logprob: -19.81251335144043
    10. '00' → logprob: -20.25001335144043

Token 218: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005936501547694206
    2. ']
' → logprob: -5.880936622619629
    3. ' ]' → logprob: -6.505936622619629
    4. '<|end|>' → logprob: -6.630936622619629
    5. ')' → logprob: -8.130936622619629
    6. '<|end|>' → logprob: -12.005936622619629
    7. ' ]
' → logprob: -12.380936622619629
    8. ')
' → logprob: -13.755936622619629
    9. '
' → logprob: -13.755936622619629
    10. ' )' → logprob: -14.005936622619629

Token 219: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38373488187789917
    2. ' 
' → logprob: -1.508734941482544
    3. '<|end|>' → logprob: -2.758734941482544
    4. '        
' → logprob: -4.758734703063965
    5. ',' → logprob: -5.008734703063965
    6. '       ' → logprob: -5.258734703063965
    7. '  
' → logprob: -5.758734703063965
    8. '        ' → logprob: -6.508734703063965
    9. ' ' → logprob: -6.758734703063965
    10. ' ,' → logprob: -6.883734703063965

Token 220: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.000614028365816921
    2. ' start' → logprob: -7.500614166259766
    3. 'max' → logprob: -9.875614166259766
    4. 'current' → logprob: -11.750614166259766
    5. 'temp' → logprob: -13.625614166259766
    6. '   ' → logprob: -15.500614166259766
    7. 's' → logprob: -16.125614166259766
    8. '0' → logprob: -16.625614166259766
    9. '	start' → logprob: -17.375614166259766
    10. ' ' → logprob: -17.500614166259766

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47584107518196106
    2. '=' → logprob: -0.9758410453796387
    3. '=index' → logprob: -6.600841045379639
    4. '_index' → logprob: -8.350841522216797
    5. '=end' → logprob: -9.850841522216797
    6. '_idx' → logprob: -10.100841522216797
    7. ',' → logprob: -10.600841522216797
    8. '<|end|>' → logprob: -11.475841522216797
    9. 'index' → logprob: -11.600841522216797
    10. '=i' → logprob: -12.100841522216797

Token 222: ' end' (ID: 1268)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012047011114191264
    2. 'end' → logprob: -9.500120162963867
    3. ' ' → logprob: -10.000120162963867
    4. ' end' → logprob: -16.375120162963867
    5. '<|end|>' → logprob: -17.125120162963867
    6. '=end' → logprob: -18.000120162963867
    7. 's' → logprob: -19.000120162963867
    8. '@end' → logprob: -19.250120162963867
    9. 'endmodule' → logprob: -20.125120162963867
    10. '   ' → logprob: -20.125120162963867

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0297548845410347
    2. '=' → logprob: -3.529754877090454
    3. '<|end|>' → logprob: -13.279754638671875
    4. '0' → logprob: -14.029754638671875
    5. '<|end|>' → logprob: -14.654754638671875
    6. ',' → logprob: -14.904754638671875
    7. ' ' → logprob: -14.904754638671875
    8. 's' → logprob: -14.904754638671875
    9. '=end' → logprob: -15.654754638671875
    10. '=start' → logprob: -16.029754638671875

Token 224: ' s' (ID: 265)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031377444975078106
    2. ' ' → logprob: -8.125313758850098
    3. 's' → logprob: -11.125313758850098
    4. 'start' → logprob: -13.625313758850098
    5. 'temp' → logprob: -13.875313758850098
    6. ' s' → logprob: -15.250313758850098
    7. '<|end|>' → logprob: -16.125314712524414
    8. '۰' → logprob: -16.625314712524414
    9. 'current' → logprob: -16.750314712524414
    10. 't' → logprob: -17.000314712524414

Token 225: ' =' (ID: 314)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01315599586814642
    2. '=' → logprob: -4.888155937194824
    3. ' =' → logprob: -5.513155937194824
    4. ' ' → logprob: -6.513155937194824
    5. 't' → logprob: -11.513155937194824
    6. '1' → logprob: -13.263155937194824
    7. '_' → logprob: -13.388155937194824
    8. '012' → logprob: -14.388155937194824
    9. '<|end|>' → logprob: -14.763155937194824
    10. '<|end|>' → logprob: -14.763155937194824

Token 226: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '۰' → logprob: -19.500019073486328
    4. '<|end|>' → logprob: -20.750019073486328
    5. '   ' → logprob: -21.000019073486328
    6. '=' → logprob: -21.000019073486328
    7. '1' → logprob: -21.937519073486328
    8. '  ' → logprob: -22.000019073486328
    9. 's' → logprob: -22.125019073486328
    10. ' ' → logprob: -22.562519073486328

Token 227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -19.625001907348633
    4. '<|end|>' → logprob: -20.625001907348633
    5. '   ' → logprob: -21.750001907348633
    6. '=' → logprob: -22.000001907348633
    7. '00' → logprob: -22.375001907348633
    8. '  ' → logprob: -22.500001907348633
    9. '０' → logprob: -22.687501907348633
    10. '<|end|>' → logprob: -22.750001907348633

Token 228: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0027204682119190693
    2. '       ' → logprob: -6.752720355987549
    3. ' 
' → logprob: -7.002720355987549
    4. '
' → logprob: -8.127720832824707
    5. '<|end|>' → logprob: -8.877720832824707
    6. ' for' → logprob: -9.877720832824707
    7. '  
' → logprob: -10.127720832824707
    8. '        
' → logprob: -10.252720832824707
    9. '\n' → logprob: -10.252720832824707
    10. '' → logprob: -11.377720832824707

Token 229: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5509625673294067
    2. ' 
' → logprob: -1.8009625673294067
    3. '
' → logprob: -2.300962448120117
    4. '       ' → logprob: -2.425962448120117
    5. '<|end|>' → logprob: -3.050962448120117
    6. ' ' → logprob: -5.050962448120117
    7. '   ' → logprob: -5.425962448120117
    8. '\n' → logprob: -5.550962448120117
    9. 'for' → logprob: -6.050962448120117
    10. '  
' → logprob: -7.800962448120117

Token 230: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20142006874084473
    2. ' for' → logprob: -1.7014200687408447
    3. '       ' → logprob: -12.451419830322266
    4. '1' → logprob: -12.951419830322266
    5. '	for' → logprob: -15.701419830322266
    6. '   ' → logprob: -15.826419830322266
    7. '
' → logprob: -16.201419830322266
    8. ' ' → logprob: -18.451419830322266
    9. 'i' → logprob: -19.076419830322266
    10. '    ' → logprob: -19.576419830322266

Token 231: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20141352713108063
    2. 'i' → logprob: -1.7014135122299194
    3. '	i' → logprob: -15.70141315460205
    4. ' ' → logprob: -17.576414108276367
    5. '   ' → logprob: -18.201414108276367
    6. ' ' → logprob: -19.451414108276367
    7. 'index' → logprob: -20.076414108276367
    8. '(i' → logprob: -20.326414108276367
    9. '  ' → logprob: -20.576414108276367
    10. 'idx' → logprob: -21.576414108276367

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010194925591349602
    2. 'in' → logprob: -4.635194778442383
    3. ' ' → logprob: -7.760194778442383
    4. ',' → logprob: -12.135194778442383
    5. '  ' → logprob: -12.885194778442383
    6. '1' → logprob: -13.760194778442383
    7. 'space' → logprob: -14.510194778442383
    8. '	in' → logprob: -14.510194778442383
    9. 'range' → logprob: -14.760194778442383
    10. ' ,' → logprob: -14.760194778442383

Token 233: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06258026510477066
    2. 'range' → logprob: -2.8125803470611572
    3. '1' → logprob: -7.562580108642578
    4. ' ' → logprob: -9.312580108642578
    5. ' in' → logprob: -13.187580108642578
    6. '(range' → logprob: -15.187580108642578
    7. '  ' → logprob: -15.312580108642578
    8. '   ' → logprob: -16.062580108642578
    9. '	range' → logprob: -16.562580108642578
    10. ',' → logprob: -17.812580108642578

Token 234: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009152670972980559
    2. '1' → logprob: -7.000915050506592
    3. ' (' → logprob: -12.75091552734375
    4. ' ' → logprob: -14.37591552734375
    5. '   ' → logprob: -15.37591552734375
    6. '(
' → logprob: -16.25091552734375
    7. '
' → logprob: -17.50091552734375
    8. ',' → logprob: -18.00091552734375
    9. '[' → logprob: -18.62591552734375
    10. '	' → logprob: -18.75091552734375

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.25000762939453
    4. '(' → logprob: -19.12500762939453
    5. '
' → logprob: -19.50000762939453
    6. '```' → logprob: -20.00000762939453
    7. 'len' → logprob: -20.00000762939453
    8. '  ' → logprob: -20.12500762939453
    9. '    ' → logprob: -21.12500762939453
    10. '۱' → logprob: -21.25000762939453

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026514052879065275
    2. ' ,' → logprob: -6.627651214599609
    3. ',len' → logprob: -6.627651214599609
    4. ' ' → logprob: -14.75265121459961
    5. '(len' → logprob: -15.00265121459961
    6. 'len' → logprob: -15.50265121459961
    7. '<len' → logprob: -16.00265121459961
    8. ' len' → logprob: -16.12765121459961
    9. ',length' → logprob: -16.25265121459961
    10. ',
' → logprob: -16.87765121459961

Token 237: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2014133334159851
    2. ' len' → logprob: -1.7014133930206299
    3. '(len' → logprob: -17.701414108276367
    4. '	len' → logprob: -19.451414108276367
    5. ',len' → logprob: -19.826414108276367
    6. '   ' → logprob: -19.951414108276367
    7. '[len' → logprob: -20.076414108276367
    8. '<len' → logprob: -20.576414108276367
    9. 'length' → logprob: -20.701414108276367
    10. ' ' → logprob: -20.826414108276367

Token 238: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.00028970264247618616
    2. '(' → logprob: -8.250289916992188
    3. 'arr' → logprob: -10.750289916992188
    4. ' (' → logprob: -12.625289916992188
    5. ' arr' → logprob: -12.750289916992188
    6. '(
' → logprob: -15.125289916992188
    7. '<arr' → logprob: -15.250289916992188
    8. '	arr' → logprob: -16.125289916992188
    9. '[arr' → logprob: -16.750289916992188
    10. ')' → logprob: -17.250289916992188

Token 239: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.20958390831947327
    2. '):' → logprob: -1.8345838785171509
    3. ')):
' → logprob: -3.7095839977264404
    4. ')' → logprob: -6.584583759307861
    5. '))' → logprob: -6.709583759307861
    6. ' ):' → logprob: -6.834583759307861
    7. '):
' → logprob: -6.959583759307861
    8. ' ' → logprob: -8.83458423614502
    9. ' ))' → logprob: -9.70958423614502
    10. '       ' → logprob: -11.20958423614502

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29067137837409973
    2. ' 
' → logprob: -1.7906713485717773
    3. '
' → logprob: -4.040671348571777
    4. '            
' → logprob: -4.165671348571777
    5. '  
' → logprob: -4.415671348571777
    6. '        
' → logprob: -4.540671348571777
    7. '       ' → logprob: -4.540671348571777
    8. ' if' → logprob: -4.540671348571777
    9. '    
' → logprob: -6.165671348571777
    10. ' ' → logprob: -7.040671348571777

Token 241: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.009770727716386318
    2. 'if' (adapté à ' if') → logprob: -4.63477087020874
    3. '           ' → logprob: -11.884770393371582
    4. ' max' → logprob: -13.384770393371582
    5. '               ' → logprob: -13.384770393371582
    6. ' 
' → logprob: -13.509770393371582
    7. ' ' → logprob: -13.759770393371582
    8. '            ' → logprob: -14.509770393371582
    9. ' current' → logprob: -14.634770393371582
    10. '
' → logprob: -15.009770393371582

Token 242: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.15957850217819214
    2. 'arr' → logprob: -2.034578561782837
    3. ' max' → logprob: -4.159578323364258
    4. 'max' → logprob: -6.784578323364258
    5. ' ' → logprob: -11.409578323364258
    6. '	arr' → logprob: -13.034578323364258
    7. '(arr' → logprob: -13.659578323364258
    8. '_arr' → logprob: -14.784578323364258
    9. '   ' → logprob: -14.784578323364258
    10. '  ' → logprob: -15.284578323364258

Token 243: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -14.125000953674316
    3. '[' → logprob: -14.500000953674316
    4. '[
' → logprob: -17.250001907348633
    5. '```' → logprob: -17.875001907348633
    6. '
' → logprob: -18.875001907348633
    7. ' ' → logprob: -19.000001907348633
    8. ' [' → logprob: -19.125001907348633
    9. '[I' → logprob: -19.125001907348633
    10. '>' → logprob: -19.625001907348633

Token 244: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18121249973773956
    2. '>' → logprob: -1.8062125444412231
    3. ' ' → logprob: -6.806212425231934
    4. ']' → logprob: -8.806212425231934
    5. ']>' → logprob: -9.431212425231934
    6. ')' → logprob: -9.681212425231934
    7. ')>' → logprob: -10.056212425231934
    8. '    ' → logprob: -11.806212425231934
    9. ' ]' → logprob: -12.306212425231934
    10. '   ' → logprob: -12.556212425231934

Token 245: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4741470515727997
    2. '>' → logprob: -0.9741470813751221
    3. ' ' → logprob: -9.599146842956543
    4. ' >
' → logprob: -14.974146842956543
    5. '  ' → logprob: -15.224146842956543
    6. '   ' → logprob: -15.224146842956543
    7. '>=' → logprob: -15.349146842956543
    8. ' >
' → logprob: -15.599146842956543
    9. '+' → logprob: -15.724146842956543
    10. ' >

' → logprob: -15.974146842956543

Token 246: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029762646183371544
    2. ' max' → logprob: -3.5297627449035645
    3. '(max' → logprob: -11.404762268066406
    4. '	max' → logprob: -14.654762268066406
    5. '[max' → logprob: -15.279762268066406
    6. ' ' → logprob: -15.654762268066406
    7. '_max' → logprob: -16.154762268066406
    8. '   ' → logprob: -16.904762268066406
    9. '=max' → logprob: -17.404762268066406
    10. '
' → logprob: -17.529762268066406

Token 247: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -4.4849443838757e-06
    2. 'current' → logprob: -12.875004768371582
    3. 'Current' → logprob: -14.750004768371582
    4. '```' → logprob: -15.000004768371582
    5. '_' → logprob: -15.375004768371582
    6. '(current' → logprob: -15.500004768371582
    7. '[' → logprob: -15.875004768371582
    8. '(' → logprob: -15.875004768371582
    9. '_global' → logprob: -16.000003814697266
    10. '[current' → logprob: -16.125003814697266

Token 248: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06204644590616226
    2. '+' → logprob: -2.812046527862549
    3. ' ' → logprob: -9.68704605102539
    4. '_' → logprob: -11.18704605102539
    5. '+i' → logprob: -13.81204605102539
    6. '+c' → logprob: -14.06204605102539
    7. '  ' → logprob: -15.31204605102539
    8. ' ' → logprob: -15.43704605102539
    9. '+C' → logprob: -16.18704605102539
    10. '   ' → logprob: -16.31204605102539

Token 249: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.3868750035762787
    2. 'arr' → logprob: -1.136875033378601
    3. ' ' → logprob: -13.13687515258789
    4. '	arr' → logprob: -13.76187515258789
    5. '(arr' → logprob: -15.01187515258789
    6. ' ' → logprob: -15.26187515258789
    7. '_arr' → logprob: -15.76187515258789
    8. '<arr' → logprob: -16.63687515258789
    9. '[arr' → logprob: -17.01187515258789
    10. '1' → logprob: -17.51187515258789

Token 250: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.5491004129871726e-05
    2. '[' → logprob: -10.000045776367188
    3. '[
' → logprob: -17.500045776367188
    4. ' [' → logprob: -18.000045776367188
    5. ' ' → logprob: -19.125045776367188
    6. 'i' → logprob: -19.625045776367188
    7. '[index' → logprob: -21.250045776367188
    8. '```' → logprob: -21.375045776367188
    9. '

' → logprob: -22.500045776367188
    10. '
' → logprob: -22.500045776367188

Token 251: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01544775441288948
    2. ':
' → logprob: -4.265447616577148
    3. ']:' → logprob: -7.265447616577148
    4. ']:
' → logprob: -7.765447616577148
    5. '):
' → logprob: -9.515447616577148
    6. '):' → logprob: -9.890447616577148
    7. ':

' → logprob: -11.765447616577148
    8. ' :' → logprob: -12.015447616577148
    9. ':return' → logprob: -12.890447616577148
    10. ' ' → logprob: -13.015447616577148

Token 252: '               ' (ID: 506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1158671379089355
    2. '1' → logprob: -1.8658671379089355
    3. ':
' → logprob: -2.2408671379089355
    4. '           ' → logprob: -2.3658671379089355
    5. ''' → logprob: -2.4908671379089355
    6. ':' → logprob: -2.7408671379089355
    7. '               ' → logprob: -3.1158671379089355
    8. ' 
' → logprob: -3.2408671379089355
    9. ' :
' → logprob: -4.2408671379089355
    10. ' i' → logprob: -4.6158671379089355

Token 253: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.021811725571751595
    2. 'max' (adapté à ' max') → logprob: -4.0218119621276855
    3. ' arr' → logprob: -5.7718119621276855
    4. 'arr' → logprob: -7.7718119621276855
    5. '               ' → logprob: -9.896811485290527
    6. ' ' → logprob: -11.146811485290527
    7. ' ' → logprob: -11.271811485290527
    8. '           ' → logprob: -11.771811485290527
    9. ' 
' → logprob: -11.896811485290527
    10. '                ' → logprob: -12.396811485290527

Token 254: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.0006657334160991013
    2. 'current' → logprob: -7.375665664672852
    3. 'Current' → logprob: -11.000665664672852
    4. 'i' → logprob: -12.250665664672852
    5. '[i' → logprob: -12.250665664672852
    6. ' current' → logprob: -12.750665664672852
    7. '_CURRENT' → logprob: -13.125665664672852
    8. '_curr' → logprob: -13.500665664672852
    9. '_Current' → logprob: -13.875665664672852
    10. '_' → logprob: -13.875665664672852

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815052703022957
    2. '=' → logprob: -4.018150329589844
    3. ',' → logprob: -14.893150329589844
    4. ' ' → logprob: -15.643150329589844
    5. '=i' → logprob: -18.268150329589844
    6. ' =
' → logprob: -18.393150329589844
    7. '＝' → logprob: -19.018150329589844
    8. ' ' → logprob: -19.018150329589844
    9. 's' → logprob: -19.268150329589844
    10. ')' → logprob: -19.518150329589844

Token 256: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00861456897109747
    2. ' arr' → logprob: -4.758614540100098
    3. '	arr' → logprob: -17.258615493774414
    4. '_arr' → logprob: -19.008615493774414
    5. ' ' → logprob: -19.133615493774414
    6. '
' → logprob: -19.383615493774414
    7. '(arr' → logprob: -19.633615493774414
    8. ' ' → logprob: -20.133615493774414
    9. '$arr' → logprob: -20.258615493774414
    10. 'array' → logprob: -20.508615493774414

Token 257: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.125001907348633
    3. 'i' → logprob: -16.625001907348633
    4. ' [' → logprob: -20.500001907348633
    5. '[
' → logprob: -20.875001907348633
    6. '{i' → logprob: -20.875001907348633
    7. ' i' → logprob: -21.000001907348633
    8. ' ' → logprob: -21.000001907348633
    9. '```' → logprob: -21.375001907348633
    10. '(i' → logprob: -21.375001907348633

Token 258: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002207712270319462
    2. '                
' → logprob: -6.6272077560424805
    3. '
' → logprob: -7.7522077560424805
    4. '           ' → logprob: -9.25220775604248
    5. ',' → logprob: -9.37720775604248
    6. 's' → logprob: -9.75220775604248
    7. '       ' → logprob: -10.12720775604248
    8. '  
' → logprob: -10.37720775604248
    9. ' s' → logprob: -10.62720775604248
    10. '            
' → logprob: -10.75220775604248

Token 260: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0002728985855355859
    2. ' s' → logprob: -8.250272750854492
    3. '               ' → logprob: -11.375272750854492
    4. 'start' → logprob: -15.875272750854492
    5. '           ' → logprob: -16.875272750854492
    6. '   ' → logprob: -19.000272750854492
    7. '_s' → logprob: -19.250272750854492
    8. '       ' → logprob: -19.625272750854492
    9. '                   ' → logprob: -19.750272750854492
    10. '	s' → logprob: -20.500272750854492

Token 261: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12825316190719604
    2. ' =' → logprob: -2.128253221511841
    3. '=i' → logprob: -6.628252983093262
    4. 'i' → logprob: -13.753252983093262
    5. '＝' → logprob: -14.878252983093262
    6. '=
' → logprob: -15.378252983093262
    7. '.=' → logprob: -17.628253936767578
    8. '=}' → logprob: -17.628253936767578
    9. ' ' → logprob: -17.753253936767578
    10. '=s' → logprob: -18.128253936767578

Token 262: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.941850526549388e-06
    2. ' i' → logprob: -11.750007629394531
    3. '
' → logprob: -20.62500762939453
    4. '   ' → logprob: -21.75000762939453
    5. '	i' → logprob: -21.75000762939453
    6. '[i' → logprob: -22.75000762939453
    7. ' ' → logprob: -23.25000762939453
    8. '_i' → logprob: -23.25000762939453
    9. '  ' → logprob: -23.87500762939453
    10. '```' → logprob: -24.25000762939453

Token 263: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00441943621262908
    2. '
' → logprob: -5.754419326782227
    3. 'else' → logprob: -7.004419326782227
    4. '            
' → logprob: -9.379419326782227
    5. '       ' → logprob: -9.629419326782227
    6. ' else' → logprob: -9.754419326782227
    7. '               ' → logprob: -10.004419326782227
    8. '<|end|>' → logprob: -10.504419326782227
    9. 'elif' → logprob: -11.379419326782227
    10. ' 
' → logprob: -12.129419326782227

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.829823102336377e-05
    2. 'else' → logprob: -9.25009822845459
    3. '               ' → logprob: -14.12509822845459
    4. ' else' → logprob: -14.37509822845459
    5. '       ' → logprob: -14.87509822845459
    6. '```' → logprob: -16.000099182128906
    7. 'elif' → logprob: -16.500099182128906
    8. 'end' → logprob: -17.125099182128906
    9. '          ' → logprob: -17.375099182128906
    10. '[' → logprob: -17.625099182128906

Token 265: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13836517930030823
    2. '           ' → logprob: -2.1383652687072754
    3. '       ' → logprob: -4.513365268707275
    4. ' else' → logprob: -8.013364791870117
    5. 'end' → logprob: -9.763364791870117
    6. '   ' → logprob: -11.263364791870117
    7. 'elif' → logprob: -12.388364791870117
    8. '               ' → logprob: -13.763364791870117
    9. '
' → logprob: -14.138364791870117
    10. '```' → logprob: -14.763364791870117

Token 266: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8102039098739624
    2. '               ' → logprob: -1.4352039098739624
    3. ' max' → logprob: -1.6852039098739624
    4. ':
' → logprob: -2.185204029083252
    5. ':' → logprob: -4.185204029083252
    6. 'max' → logprob: -6.060204029083252
    7. '                   ' → logprob: -8.060203552246094
    8. '{
' → logprob: -8.310203552246094
    9. ' {
' → logprob: -8.435203552246094
    10. ' ' → logprob: -8.935203552246094

Token 267: '               ' (ID: 506)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5367587804794312
    2. '           ' → logprob: -1.4117587804794312
    3. 'max' → logprob: -2.2867588996887207
    4. '               ' → logprob: -2.6617588996887207
    5. '(max' → logprob: -10.286758422851562
    6. '            ' → logprob: -10.536758422851562
    7. '	max' → logprob: -10.661758422851562
    8. '                   ' → logprob: -10.661758422851562
    9. '   ' → logprob: -10.786758422851562
    10. ' ' → logprob: -11.036758422851562

Token 268: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.25202053785324097
    2. 'max' (adapté à ' max') → logprob: -1.5020205974578857
    3. '           ' → logprob: -9.502020835876465
    4. '               ' → logprob: -11.377020835876465
    5. '_max' → logprob: -13.002020835876465
    6. '	max' → logprob: -13.627020835876465
    7. ' ' → logprob: -14.627020835876465
    8. '            ' → logprob: -15.002020835876465
    9. '                ' → logprob: -15.252020835876465
    10. '                   ' → logprob: -15.377020835876465

Token 269: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -3.531315314830863e-06
    2. 'current' → logprob: -12.625003814697266
    3. 'Current' → logprob: -16.500003814697266
    4. '[current' → logprob: -17.875003814697266
    5. '_' → logprob: -18.250003814697266
    6. 'urrent' → logprob: -18.250003814697266
    7. '_CURRENT' → logprob: -18.375003814697266
    8. '$current' → logprob: -18.875003814697266
    9. '_previous' → logprob: -19.500003814697266
    10. ' current' → logprob: -19.750003814697266

Token 270: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5799357891082764
    2. '+=' → logprob: -0.8299357891082764
    3. '=' → logprob: -5.7049360275268555
    4. ' =' → logprob: -7.3299360275268555
    5. '+' → logprob: -13.454936027526855
    6. ' +' → logprob: -14.329936027526855
    7. ']+=' → logprob: -14.579936027526855
    8. ' ' → logprob: -15.454936027526855
    9. '    ' → logprob: -15.704936027526855
    10. ' ' → logprob: -15.829936027526855

Token 271: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.3868720829486847
    2. 'arr' → logprob: -1.1368720531463623
    3. '	arr' → logprob: -14.511872291564941
    4. '(arr' → logprob: -15.511872291564941
    5. ' ' → logprob: -16.136871337890625
    6. '_arr' → logprob: -16.386871337890625
    7. ' ' → logprob: -16.761871337890625
    8. '$arr' → logprob: -17.386871337890625
    9. '<arr' → logprob: -17.886871337890625
    10. '[arr' → logprob: -18.136871337890625

Token 272: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1756367712223437e-05
    2. '[' → logprob: -11.375011444091797
    3. '[
' → logprob: -16.625011444091797
    4. ' [' → logprob: -17.125011444091797
    5. 'i' → logprob: -17.375011444091797
    6. '```' → logprob: -17.625011444091797
    7. '[I' → logprob: -17.625011444091797
    8. '[s' → logprob: -18.750011444091797
    9. ']' → logprob: -19.375011444091797
    10. '\[' → logprob: -19.500011444091797

Token 273: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021993827540427446
    2. '
' → logprob: -6.377199172973633
    3. '       ' → logprob: -9.127199172973633
    4. '<|end|>' → logprob: -9.377199172973633
    5. '  
' → logprob: -9.627199172973633
    6. '```' → logprob: -9.752199172973633
    7. '   ' → logprob: -10.127199172973633
    8. '            
' → logprob: -10.752199172973633
    9. ' if' → logprob: -10.877199172973633
    10. ' ' → logprob: -11.127199172973633

Token 275: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007156484294682741
    2. '           ' → logprob: -5.2571563720703125
    3. ' if' → logprob: -6.2571563720703125
    4. '       ' → logprob: -13.507156372070312
    5. 'If' → logprob: -13.882156372070312
    6. '   ' → logprob: -14.007156372070312
    7. '        ' → logprob: -15.507156372070312
    8. '```' → logprob: -15.632156372070312
    9. ' ' → logprob: -15.757156372070312
    10. '          ' → logprob: -16.007156372070312

Token 276: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5759410262107849
    2. ' max' → logprob: -0.8259410262107849
    3. '(max' → logprob: -14.32594108581543
    4. '	max' → logprob: -14.95094108581543
    5. '_max' → logprob: -15.57594108581543
    6. '[max' → logprob: -15.57594108581543
    7. ' ' → logprob: -15.70094108581543
    8. '   ' → logprob: -16.82594108581543
    9. ',max' → logprob: -17.20094108581543
    10. '           ' → logprob: -18.07594108581543

Token 277: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -1.1472419600977446e-06
    2. 'current' → logprob: -13.875000953674316
    3. 'Current' → logprob: -15.750000953674316
    4. '_curr' → logprob: -18.125001907348633
    5. '_' → logprob: -18.250001907348633
    6. '_cur' → logprob: -18.500001907348633
    7. ' current' → logprob: -18.625001907348633
    8. '_CURRENT' → logprob: -18.625001907348633
    9. '$current' → logprob: -19.250001907348633
    10. '[current' → logprob: -19.375001907348633

Token 278: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06197384372353554
    2. '>' → logprob: -2.811973810195923
    3. ' ' → logprob: -12.061973571777344
    4. ' >
' → logprob: -15.311973571777344
    5. ' ' → logprob: -16.061973571777344
    6. ' >

' → logprob: -17.436973571777344
    7. ' >
' → logprob: -17.436973571777344
    8. '  ' → logprob: -17.936973571777344
    9. '>
' → logprob: -18.061973571777344
    10. '	' → logprob: -18.561973571777344

Token 279: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.006715370807796717
    2. ' max' → logprob: -5.006715297698975
    3. '(max' → logprob: -19.131715774536133
    4. '	max' → logprob: -19.756715774536133
    5. '_max' → logprob: -19.881715774536133
    6. '[max' → logprob: -20.006715774536133
    7. '=max' → logprob: -20.881715774536133
    8. ' ' → logprob: -21.631715774536133
    9. ',max' → logprob: -21.631715774536133
    10. ':max' → logprob: -21.631715774536133

Token 280: '_global' (ID: 46985)
  Prédit: '_global'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_global' → logprob: -0.004085758700966835
    2. 'global' → logprob: -5.504085540771484
    3. ' global' → logprob: -12.004085540771484
    4. 'Global' → logprob: -14.629085540771484
    5. '_GLOBAL' → logprob: -15.254085540771484
    6. 'lobal' → logprob: -15.379085540771484
    7. '.global' → logprob: -15.879085540771484
    8. ' глоб' → logprob: -17.129085540771484
    9. '_globals' → logprob: -17.379085540771484
    10. '	global' → logprob: -17.504085540771484

Token 281: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5299586653709412
    2. ':
' → logprob: -0.9049586653709412
    3. '               ' → logprob: -5.154958724975586
    4. '=' → logprob: -8.029958724975586
    5. '           ' → logprob: -8.654958724975586
    6. '<|end|>' → logprob: -9.154958724975586
    7. '):
' → logprob: -9.279958724975586
    8. ',' → logprob: -9.279958724975586
    9. ' :
' → logprob: -9.404958724975586
    10. ' =' → logprob: -9.654958724975586

Token 282: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03984779119491577
    2. ' max' → logprob: -3.2898478507995605
    3. 'max' → logprob: -7.1648478507995605
    4. '<|end|>' → logprob: -7.2898478507995605
    5. '(max' → logprob: -9.539847373962402
    6. '[max' → logprob: -9.539847373962402
    7. '```' → logprob: -9.914847373962402
    8. '           ' → logprob: -10.289847373962402
    9. '<|end|>' → logprob: -10.789847373962402
    10. '_max' → logprob: -11.164847373962402

Token 283: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06198538839817047
    2. 'max' (adapté à ' max') → logprob: -2.811985492706299
    3. '               ' → logprob: -11.31198501586914
    4. '(max' → logprob: -13.18698501586914
    5. '_max' → logprob: -13.56198501586914
    6. '[max' → logprob: -14.56198501586914
    7. '	max' → logprob: -14.56198501586914
    8. '                ' → logprob: -14.56198501586914
    9. ',max' → logprob: -14.81198501586914
    10. '=max' → logprob: -15.81198501586914

Token 284: '_global' (ID: 46985)
  Prédit: '_global'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_global' → logprob: -2.7133641196996905e-05
    2. '_current' → logprob: -10.87502670288086
    3. 'global' → logprob: -11.75002670288086
    4. '_GLOBAL' → logprob: -16.37502670288086
    5. '_globals' → logprob: -16.37502670288086
    6. ' global' → logprob: -16.50002670288086
    7. 'Global' → logprob: -17.12502670288086
    8. '_' → logprob: -18.00002670288086
    9. '
' → logprob: -18.75002670288086
    10. '	global' → logprob: -19.00002670288086

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014261931180954
    2. '=' → logprob: -1.7014261484146118
    3. ',' → logprob: -11.95142650604248
    4. '=max' → logprob: -12.07642650604248
    5. ' ' → logprob: -15.82642650604248
    6. ',max' → logprob: -15.95142650604248
    7. '=end' → logprob: -16.326425552368164
    8. '=current' → logprob: -16.326425552368164
    9. '   ' → logprob: -16.826425552368164
    10. 'max' → logprob: -16.951425552368164

Token 286: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25192928314208984
    2. ' max' → logprob: -1.5019292831420898
    3. '(max' → logprob: -16.126930236816406
    4. '[max' → logprob: -16.751930236816406
    5. '	max' → logprob: -17.376930236816406
    6. '_max' → logprob: -17.376930236816406
    7. '=max' → logprob: -18.751930236816406
    8. ' ' → logprob: -19.376930236816406
    9. ',max' → logprob: -19.376930236816406
    10. 'Max' → logprob: -20.251930236816406

Token 287: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -3.650518920039758e-06
    2. '_global' → logprob: -12.875003814697266
    3. 'current' → logprob: -14.000003814697266
    4. 'Current' → logprob: -16.625003814697266
    5. ' current' → logprob: -18.000003814697266
    6. '_curr' → logprob: -18.500003814697266
    7. '_' → logprob: -19.250003814697266
    8. '_cur' → logprob: -19.625003814697266
    9. '[current' → logprob: -19.750003814697266
    10. '_CURRENT' → logprob: -19.750003814697266

Token 288: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018529583467170596
    2. '<|end|>' → logprob: -7.376852989196777
    3. '       ' → logprob: -7.626852989196777
    4. ' end' → logprob: -8.376852989196777
    5. '           ' → logprob: -9.126852989196777
    6. ',' → logprob: -9.251852989196777
    7. '[end' → logprob: -9.626852989196777
    8. 'end' → logprob: -9.751852989196777
    9. '
' → logprob: -10.376852989196777
    10. 'start' → logprob: -10.626852989196777

Token 289: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003888470819219947
    2. '       ' → logprob: -8.375389099121094
    3. '<|end|>' → logprob: -9.500389099121094
    4. '```' → logprob: -11.000389099121094
    5. ' end' → logprob: -11.125389099121094
    6. ',' → logprob: -11.250389099121094
    7. 'end' → logprob: -11.375389099121094
    8. '           ' → logprob: -12.125389099121094
    9. 'start' → logprob: -12.625389099121094
    10. '[end' → logprob: -13.125389099121094

Token 290: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -8.125210297293961e-05
    2. ' start' → logprob: -9.500081062316895
    3. 'end' → logprob: -12.000081062316895
    4. 's' → logprob: -16.50008201599121
    5. '   ' → logprob: -17.62508201599121
    6. '               ' → logprob: -18.00008201599121
    7. '           ' → logprob: -18.62508201599121
    8. '	start' → logprob: -19.62508201599121
    9. 'Start' → logprob: -20.37508201599121
    10. '_start' → logprob: -20.37508201599121

Token 291: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519625425338745
    2. '=' → logprob: -1.5019625425338745
    3. '=s' → logprob: -10.376962661743164
    4. '<|end|>' → logprob: -14.001962661743164
    5. 's' → logprob: -14.251962661743164
    6. '=end' → logprob: -14.626962661743164
    7. ',' → logprob: -15.251962661743164
    8. ' s' → logprob: -15.876962661743164
    9. ' ' → logprob: -17.501962661743164
    10. '=start' → logprob: -17.751962661743164

Token 292: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31326186656951904
    2. ' s' → logprob: -1.313261866569519
    3. '
' → logprob: -16.063261032104492
    4. '_s' → logprob: -17.938261032104492
    5. '	s' → logprob: -18.188261032104492
    6. '<|end|>' → logprob: -18.438261032104492
    7. '{s' → logprob: -18.438261032104492
    8. ' ' → logprob: -18.813261032104492
    9. '<s' → logprob: -19.438261032104492
    10. '"s' → logprob: -19.563261032104492

Token 293: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.292095299111679e-05
    2. '       ' → logprob: -10.500082969665527
    3. '           ' → logprob: -10.625082969665527
    4. 'end' → logprob: -11.000082969665527
    5. '
' → logprob: -12.500082969665527
    6. '<|end|>' → logprob: -12.750082969665527
    7. ' end' → logprob: -12.875082969665527
    8. '              ' → logprob: -13.750082969665527
    9. '   ' → logprob: -14.375082969665527
    10. '			' → logprob: -14.500082969665527

Token 294: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003178273618686944
    2. 'end' → logprob: -8.250317573547363
    3. ' end' → logprob: -10.250317573547363
    4. '       ' → logprob: -11.375317573547363
    5. '           ' → logprob: -11.750317573547363
    6. '   ' → logprob: -14.875317573547363
    7. '[end' → logprob: -15.625317573547363
    8. ',end' → logprob: -15.625317573547363
    9. '              ' → logprob: -15.875317573547363
    10. '			' → logprob: -16.00031852722168

Token 295: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.002475777640938759
    2. ' end' → logprob: -6.002475738525391
    3. '               ' → logprob: -16.25247573852539
    4. 'End' → logprob: -19.00247573852539
    5. 'e' → logprob: -19.87747573852539
    6. '@end' → logprob: -19.87747573852539
    7. '_end' → logprob: -20.00247573852539
    8. ''end' → logprob: -20.12747573852539
    9. '[end' → logprob: -20.12747573852539
    10. '	end' → logprob: -20.12747573852539

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02330324426293373
    2. '=' → logprob: -3.773303270339966
    3. '<|end|>' → logprob: -10.273303031921387
    4. '=i' → logprob: -10.773303031921387
    5. ' ' → logprob: -13.648303031921387
    6. ' =
' → logprob: -14.273303031921387
    7. '<|end|>' → logprob: -15.523303031921387
    8. '=
' → logprob: -16.148303985595703
    9. ' i' → logprob: -17.523303985595703
    10. 'i' → logprob: -17.898303985595703

Token 297: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47407710552215576
    2. ' i' → logprob: -0.9740771055221558
    3. '	i' → logprob: -16.599077224731445
    4. ' ' → logprob: -17.974077224731445
    5. '   ' → logprob: -18.974077224731445
    6. ' ' → logprob: -20.099077224731445
    7. '_i' → logprob: -20.599077224731445
    8. '{i' → logprob: -21.224077224731445
    9. ')i' → logprob: -21.349077224731445
    10. '[i' → logprob: -21.474077224731445

Token 298: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6964483261108398
    2. '       ' → logprob: -0.6964483261108398
    3. 'return' → logprob: -6.32144832611084
    4. '        
' → logprob: -6.82144832611084
    5. ' return' → logprob: -8.82144832611084
    6. '<|end|>' → logprob: -9.32144832611084
    7. '
' → logprob: -9.82144832611084
    8. '  
' → logprob: -10.32144832611084
    9. '    
' → logprob: -10.82144832611084
    10. '

' → logprob: -11.32144832611084

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009914840338751674
    2. 'return' → logprob: -7.125991344451904
    3. '
' → logprob: -9.125991821289062
    4. ' return' → logprob: -9.875991821289062
    5. '   ' → logprob: -11.125991821289062
    6. '        
' → logprob: -11.625991821289062
    7. '```' → logprob: -14.375991821289062
    8. '<|end|>' → logprob: -14.375991821289062
    9. '    
' → logprob: -14.750991821289062
    10. '           ' → logprob: -15.375991821289062

Token 300: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00036216014996171
    2. '       ' → logprob: -8.500362396240234
    3. ' return' → logprob: -8.750362396240234
    4. '
' → logprob: -15.375362396240234
    5. '   ' → logprob: -18.125362396240234
    6. '        
' → logprob: -18.875362396240234
    7. '```' → logprob: -19.625362396240234
    8. '	return' → logprob: -20.500362396240234
    9. ')return' → logprob: -21.375362396240234
    10. '{return' → logprob: -21.750362396240234

Token 301: ' Kad' (ID: 53913)
  Prédit: 'Kad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Kad' → logprob: -0.00033677343162707984
    2. ' Kad' → logprob: -8.000336647033691
    3. 'K' → logprob: -13.625336647033691
    4. 'Kd' → logprob: -16.125337600708008
    5. 'Kab' → logprob: -17.875337600708008
    6. 'Kod' → logprob: -17.875337600708008
    7. ' ' → logprob: -18.750337600708008
    8. '   ' → logprob: -19.000337600708008
    9. '(K' → logprob: -19.125337600708008
    10. 'Kaz' → logprob: -19.500337600708008

Token 302: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -3.650518920039758e-06
    2. ' ane' → logprob: -12.875003814697266
    3. 'ANE' → logprob: -14.625003814697266
    4. 'a' → logprob: -14.750003814697266
    5. 'an' → logprob: -17.750003814697266
    6. 'ne' → logprob: -17.875003814697266
    7. 'Pane' → logprob: -17.875003814697266
    8. '[' → logprob: -18.250003814697266
    9. 'ане' → logprob: -18.375003814697266
    10. 'anne' → logprob: -18.500003814697266

Token 303: 'Result' (ID: 2769)
  Prédit: 'Result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: 0.0
    2. '	Result' → logprob: -20.625
    3. '(Result' → logprob: -20.75
    4. '_result' → logprob: -21.625
    5. 'result' → logprob: -21.625
    6. '<Result' → logprob: -22.0
    7. ' Result' → logprob: -22.125
    8. '_Result' → logprob: -22.625
    9. 'Results' → logprob: -22.75
    10. '.Result' → logprob: -22.875

Token 304: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.06219421327114105
    2. '(' → logprob: -2.8121941089630127
    3. '(
' → logprob: -8.437193870544434
    4. ' (' → logprob: -12.062193870544434
    5. '(

' → logprob: -13.312193870544434
    6. 'max' → logprob: -13.937193870544434
    7. '[max' → logprob: -15.562193870544434
    8. '((' → logprob: -15.687193870544434
    9. '(Max' → logprob: -15.687193870544434
    10. '(ma' → logprob: -15.937193870544434

Token 305: '_global' (ID: 46985)
  Prédit: '_global'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_global' → logprob: -0.0017159932758659124
    2. '_sum' → logprob: -6.376716136932373
    3. '_globals' → logprob: -12.376715660095215
    4. ' _' → logprob: -13.251715660095215
    5. '```' → logprob: -13.251715660095215
    6. '_current' → logprob: -14.251715660095215
    7. ')_' → logprob: -14.251715660095215
    8. 'global' → logprob: -14.501715660095215
    9. 'sum' → logprob: -14.626715660095215
    10. '_' → logprob: -14.626715660095215

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008541669230908155
    2. ',start' → logprob: -7.125854015350342
    3. ' ,' → logprob: -10.0008544921875
    4. ',end' → logprob: -12.5008544921875
    5. ',
' → logprob: -15.2508544921875
    6. ')' → logprob: -16.1258544921875
    7. '[start' → logprob: -16.6258544921875
    8. 'start' → logprob: -17.1258544921875
    9. '<|end|>' → logprob: -17.2508544921875
    10. '(start' → logprob: -17.3758544921875

Token 307: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.02324605919420719
    2. ' start' → logprob: -3.7732460498809814
    3. '0' → logprob: -14.398245811462402
    4. ' ' → logprob: -18.27324676513672
    5. '	start' → logprob: -18.89824676513672
    6. '(start' → logprob: -19.14824676513672
    7. '[start' → logprob: -19.14824676513672
    8. ':start' → logprob: -19.89824676513672
    9. '=start' → logprob: -20.02324676513672
    10. ',start' → logprob: -20.14824676513672

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003830129047855735
    2. ' ,' → logprob: -5.6288299560546875
    3. ',end' → logprob: -8.378829956054688
    4. ',
' → logprob: -15.878829956054688
    5. '<|end|>' → logprob: -16.503829956054688
    6. ')' → logprob: -16.628829956054688
    7. '+' → logprob: -17.878829956054688
    8. '       ' → logprob: -18.128829956054688
    9. ' ,
' → logprob: -18.128829956054688
    10. ',int' → logprob: -18.128829956054688

Token 309: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.029750484973192215
    2. ' end' → logprob: -3.5297505855560303
    3. '
' → logprob: -19.02975082397461
    4. '(end' → logprob: -19.40475082397461
    5. '	end' → logprob: -19.65475082397461
    6. '[end' → logprob: -19.90475082397461
    7. ' ' → logprob: -20.02975082397461
    8. ''end' → logprob: -20.27975082397461
    9. '=end' → logprob: -20.40475082397461
    10. 'endon' → logprob: -20.65475082397461

Token 310: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. ')
' → logprob: -11.000017166137695
    3. ' )' → logprob: -15.125017166137695
    4. '<|end|>' → logprob: -15.125017166137695
    5. '   ' → logprob: -16.250017166137695
    6. '}' → logprob: -16.750017166137695
    7. ')return' → logprob: -17.000017166137695
    8. ')#' → logprob: -17.125017166137695
    9. '       ' → logprob: -17.250017166137695
    10. ')}' → logprob: -17.500017166137695

Token 311: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12697650492191315
    2. 'def' → logprob: -2.126976490020752
    3. '
' → logprob: -10.12697696685791
    4. ' class' → logprob: -12.62697696685791
    5. '```' → logprob: -13.50197696685791
    6. '    
' → logprob: -14.00197696685791
    7. '

' → logprob: -14.25197696685791
    8. '   ' → logprob: -14.37697696685791
    9. '  
' → logprob: -14.37697696685791
    10. ' def' → logprob: -15.25197696685791

Token 312: ' Max' (ID: 10093)
  Prédit: 'Matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Matrix' → logprob: -0.4391412138938904
    2. 'Max' → logprob: -1.9391412734985352
    3. ' Matrix' → logprob: -2.064141273498535
    4. 'Maximum' → logprob: -3.314141273498535
    5. ' Max' → logprob: -3.814141273498535
    6. ' Maximum' → logprob: -4.064141273498535
    7. 'Solution' → logprob: -5.439141273498535
    8. 'Rectangle' → logprob: -6.314141273498535
    9. 'Sub' → logprob: -6.564141273498535
    10. ' Solution' → logprob: -8.189141273498535

Token 313: 'Sub' (ID: 3638)
  Prédit: 'Sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sub' → logprob: -0.2019098848104477
    2. 'Sum' → logprob: -1.7019098997116089
    3. 'Square' → logprob: -8.201910018920898
    4. 'imal' → logprob: -9.326910018920898
    5. 'Rectangle' → logprob: -9.701910018920898
    6. 'sub' → logprob: -10.326910018920898
    7. 'imum' → logprob: -11.076910018920898
    8. 'sum' → logprob: -12.076910018920898
    9. '_sub' → logprob: -12.326910018920898
    10. 'Subset' → logprob: -12.701910018920898

Token 314: 'matrix' (ID: 37307)
  Prédit: 'matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.017268767580389977
    2. 'square' → logprob: -4.517268657684326
    3. 'rectangle' → logprob: -5.642268657684326
    4. 'Matrix' → logprob: -6.392268657684326
    5. 'array' → logprob: -7.392268657684326
    6. 'Square' → logprob: -8.017269134521484
    7. 'Rectangle' → logprob: -10.892269134521484
    8. 'rect' → logprob: -12.142269134521484
    9. ' matrix' → logprob: -12.767269134521484
    10. ' square' → logprob: -12.892269134521484

Token 315: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.5937677621841431
    2. ':' → logprob: -0.8437677621841431
    3. 'Finder' → logprob: -4.5937676429748535
    4. ':
' → logprob: -5.0937676429748535
    5. '{' → logprob: -7.3437676429748535
    6. '():' → logprob: -7.8437676429748535
    7. 'Size' → logprob: -8.843768119812012
    8. 'Solver' → logprob: -9.843768119812012
    9. '_sum' → logprob: -10.468768119812012
    10. 'sum' → logprob: -10.718768119812012

Token 316: 'Finder' (ID: 42976)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029761482030153275
    2. ':
' → logprob: -3.529761552810669
    3. ':

' → logprob: -12.52976131439209
    4. ' :' → logprob: -13.77976131439209
    5. '():' → logprob: -13.77976131439209
    6. ':def' → logprob: -13.90476131439209
    7. ':
' → logprob: -14.15476131439209
    8. '(object' → logprob: -14.15476131439209
    9. '{' → logprob: -14.40476131439209
    10. '(' → logprob: -14.52976131439209

Token 317: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04302065819501877
    2. ':
' → logprob: -3.168020725250244
    3. ':def' → logprob: -11.543020248413086
    4. ' :' → logprob: -12.293020248413086
    5. ':

' → logprob: -12.918020248413086
    6. '   ' → logprob: -13.418020248413086
    7. ' :
' → logprob: -14.043020248413086
    8. '(' → logprob: -14.793020248413086
    9. '):' → logprob: -14.918020248413086
    10. '(object' → logprob: -15.168020248413086

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013068697415292263
    2. ' def' → logprob: -4.388068675994873
    3. 'def' → logprob: -7.513068675994873
    4. '
' → logprob: -12.388069152832031
    5. '    
' → logprob: -12.763069152832031
    6. '```' → logprob: -12.888069152832031
    7. ':' → logprob: -14.638069152832031
    8. '	def' → logprob: -14.638069152832031
    9. '   ' → logprob: -14.888069152832031
    10. '(' → logprob: -15.263069152832031

Token 319: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.22067216038703918
    2. ' def' → logprob: -1.7206721305847168
    3. '   ' → logprob: -3.970672130584717
    4. '@' → logprob: -8.470672607421875
    5. ' @' → logprob: -12.470672607421875
    6. '	def' → logprob: -15.595672607421875
    7. ' ' → logprob: -15.595672607421875
    8. '  ' → logprob: -17.345672607421875
    9. '```' → logprob: -17.345672607421875
    10. '
' → logprob: -17.720672607421875

Token 320: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.001261067809537053
    2. ' init' → logprob: -7.626261234283447
    3. '__' → logprob: -7.876261234283447
    4. ' find' → logprob: -8.751260757446289
    5. ' def' → logprob: -8.876260757446289
    6. ' _' → logprob: -10.001260757446289
    7. 'init' → logprob: -10.626260757446289
    8. ' ' → logprob: -11.376260757446289
    9. '_init' → logprob: -11.626260757446289
    10. ' ___' → logprob: -12.876260757446289

Token 321: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.5577775128767826e-06
    2. ' init' → logprob: -12.625005722045898
    3. 'class' → logprob: -13.375005722045898
    4. '   ' → logprob: -16.1250057220459
    5. 'def' → logprob: -16.2500057220459
    6. '(init' → logprob: -16.2500057220459
    7. 'new' → logprob: -16.5000057220459
    8. 'inite' → logprob: -16.5000057220459
    9. '_init' → logprob: -16.5000057220459
    10. 'int' → logprob: -16.7500057220459

Token 322: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0021665559615939856
    2. '(self' → logprob: -6.252166748046875
    3. '__' → logprob: -8.502166748046875
    4. '__(
' → logprob: -10.877166748046875
    5. '(' → logprob: -11.877166748046875
    6. ' (' → logprob: -12.627166748046875
    7. '_(' → logprob: -13.127166748046875
    8. '__((' → logprob: -13.502166748046875
    9. 'self' → logprob: -14.127166748046875
    10. '   ' → logprob: -14.877166748046875

Token 323: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4140441635390744e-05
    2. ' self' → logprob: -11.375014305114746
    3. 'n' → logprob: -14.000014305114746
    4. '
' → logprob: -14.000014305114746
    5. '   ' → logprob: -14.625014305114746
    6. ',' → logprob: -15.875014305114746
    7. ')' → logprob: -16.00001335144043
    8. '       ' → logprob: -16.00001335144043
    9. '(self' → logprob: -16.50001335144043
    10. 'elf' → logprob: -16.75001335144043

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004797019064426422
    2. ' ,' → logprob: -5.379796981811523
    3. 'self' → logprob: -8.754796981811523
    4. ',n' → logprob: -11.879796981811523
    5. '(self' → logprob: -12.629796981811523
    6. ',self' → logprob: -12.629796981811523
    7. 'n' → logprob: -13.379796981811523
    8. ' self' → logprob: -13.629796981811523
    9. ',
' → logprob: -14.004796981811523
    10. ' (' → logprob: -14.504796981811523

Token 325: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.6341241002082825
    2. ' matrix' → logprob: -0.7591241002082825
    3. 'n' → logprob: -6.759124279022217
    4. ' n' → logprob: -8.134123802185059
    5. 'self' → logprob: -10.759123802185059
    6. 'Matrix' → logprob: -11.009123802185059
    7. '   ' → logprob: -11.009123802185059
    8. ' Matrix' → logprob: -12.884123802185059
    9. ' self' → logprob: -12.884123802185059
    10. '       ' → logprob: -13.134123802185059

Token 326: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02702493965625763
    2. '):
' → logprob: -3.652024984359741
    3. ':' → logprob: -7.777024745941162
    4. ',' → logprob: -8.77702522277832
    5. ' ):' → logprob: -8.90202522277832
    6. '   ' → logprob: -11.77702522277832
    7. '):
' → logprob: -13.15202522277832
    8. ' :' → logprob: -13.90202522277832
    9. '):

' → logprob: -14.15202522277832
    10. ' ):
' → logprob: -14.27702522277832

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022725824965164065
    2. ' self' → logprob: -8.750226974487305
    3. 'self' → logprob: -10.250226974487305
    4. '   ' → logprob: -10.750226974487305
    5. ',' → logprob: -12.500226974487305
    6. '        
' → logprob: -12.500226974487305
    7. '      ' → logprob: -14.125226974487305
    8. ':' → logprob: -14.375226974487305
    9. '           ' → logprob: -14.750226974487305
    10. '<|end|>' → logprob: -14.875226974487305

Token 328: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.038279250264167786
    2. ' self' → logprob: -3.9132792949676514
    3. 'matrix' → logprob: -4.288279056549072
    4. '       ' → logprob: -5.788279056549072
    5. ' matrix' → logprob: -7.163279056549072
    6. '   ' → logprob: -11.28827953338623
    7. '_matrix' → logprob: -14.53827953338623
    8. 'Matrix' → logprob: -14.78827953338623
    9. '	self' → logprob: -15.16327953338623
    10. '	matrix' → logprob: -15.66327953338623

Token 329: '.matrix' (ID: 72944)
  Prédit: '.matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matrix' → logprob: -0.002131229266524315
    2. '.' → logprob: -6.252131462097168
    3. '.m' → logprob: -8.752131462097168
    4. ' .' → logprob: -11.002131462097168
    5. '.Matrix' → logprob: -11.002131462097168
    6. 'matrix' → logprob: -12.127131462097168
    7. '	matrix' → logprob: -13.252131462097168
    8. '.mat' → logprob: -13.877131462097168
    9. ' matrix' → logprob: -14.127131462097168
    10. '.mx' → logprob: -14.502131462097168

Token 330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22811771929264069
    2. ' =' → logprob: -1.6031177043914795
    3. '.' → logprob: -5.978117942810059
    4. '.data' → logprob: -9.228117942810059
    5. '=data' → logprob: -10.853117942810059
    6. '.=' → logprob: -10.853117942810059
    7. '.n' → logprob: -11.603117942810059
    8. '.matrix' → logprob: -11.853117942810059
    9. ' .' → logprob: -12.353117942810059
    10. '   ' → logprob: -12.728117942810059

Token 331: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.03804493322968483
    2. ' matrix' → logprob: -3.2880449295043945
    3. '	matrix' → logprob: -12.788044929504395
    4. '.matrix' → logprob: -15.288044929504395
    5. '(matrix' → logprob: -15.413044929504395
    6. 'Matrix' → logprob: -15.788044929504395
    7. '   ' → logprob: -16.53804588317871
    8. '_matrix' → logprob: -17.16304588317871
    9. ' ' → logprob: -18.03804588317871
    10. '
' → logprob: -18.28804588317871

Token 332: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09904961287975311
    2. '

' → logprob: -2.7240495681762695
    3. '<|end|>' → logprob: -3.5990495681762695
    4. 'def' → logprob: -7.7240495681762695
    5. '   ' → logprob: -7.8490495681762695
    6. '<|end|>' → logprob: -8.22404956817627
    7. ' def' → logprob: -9.59904956817627
    8. '    
' → logprob: -9.59904956817627
    9. '
    
' → logprob: -10.59904956817627
    10. '


' → logprob: -10.97404956817627

Token 333: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43142223358154297
    2. '   ' → logprob: -1.056422233581543
    3. 'def' → logprob: -6.556422233581543
    4. '    
' → logprob: -6.806422233581543
    5. '       ' → logprob: -9.806422233581543
    6. ' def' → logprob: -9.931422233581543
    7. '

' → logprob: -10.181422233581543
    8. '        
' → logprob: -10.431422233581543
    9. ' 
' → logprob: -12.181422233581543
    10. '```' → logprob: -12.306422233581543

Token 334: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.2127087504486553e-05
    2. ' def' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.250021934509277
    4. '
' → logprob: -17.625022888183594
    5. ' ' → logprob: -19.500022888183594
    6. '	def' → logprob: -19.500022888183594
    7. 'de' → logprob: -19.750022888183594
    8. '    
' → logprob: -20.750022888183594
    9. 'from' → logprob: -21.000022888183594
    10. '       ' → logprob: -21.375022888183594

Token 335: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.2569640278816223
    2. ' max' → logprob: -1.6319639682769775
    3. 'max' → logprob: -4.006964206695557
    4. 'find' → logprob: -4.381964206695557
    5. ' maximum' → logprob: -8.256963729858398
    6. '_max' → logprob: -10.631963729858398
    7. ' ' → logprob: -11.006963729858398
    8. 'maximum' → logprob: -11.256963729858398
    9. '   ' → logprob: -11.381963729858398
    10. ' maximal' → logprob: -11.381963729858398

Token 336: '_max' (ID: 13731)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3534795343875885
    2. '_max' → logprob: -1.3534795045852661
    3. '(' → logprob: -3.3534796237945557
    4. '_' → logprob: -5.978479385375977
    5. '_(' → logprob: -7.228479385375977
    6. 'max' → logprob: -7.853479385375977
    7. '_best' → logprob: -8.103479385375977
    8. ' (' → logprob: -8.478479385375977
    9. '(_' → logprob: -9.978479385375977
    10. '_all' → logprob: -10.103479385375977

Token 337: '_sum' (ID: 29859)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.6971635818481445
    2. '_sum' → logprob: -0.6971635818481445
    3. '_' → logprob: -5.5721635818481445
    4. '_rectangle' → logprob: -9.072163581848145
    5. '_square' → logprob: -9.822163581848145
    6. '_area' → logprob: -11.822163581848145
    7. 'sum' → logprob: -12.572163581848145
    8. '\' → logprob: -12.572163581848145
    9. ' _' → logprob: -13.072163581848145
    10. 'sub' → logprob: -13.072163581848145

Token 338: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18404509127140045
    2. '(' → logprob: -1.8090450763702393
    3. 'self' → logprob: -5.809045314788818
    4. 'sub' → logprob: -7.809045314788818
    5. '_sub' → logprob: -7.934045314788818
    6. '_' → logprob: -8.80904483795166
    7. ' (' → logprob: -8.80904483795166
    8. '_(' → logprob: -9.43404483795166
    9. '_rectangle' → logprob: -9.93404483795166
    10. ' self' → logprob: -10.80904483795166

Token 339: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036985818296670914
    2. '):' → logprob: -3.6619858741760254
    3. ' ,' → logprob: -4.911985874176025
    4. '):
' → logprob: -6.661985874176025
    5. 'self' → logprob: -7.036985874176025
    6. '       ' → logprob: -8.286985397338867
    7. '   ' → logprob: -8.286985397338867
    8. ',self' → logprob: -8.286985397338867
    9. ' ):' → logprob: -8.911985397338867
    10. ',r' → logprob: -9.286985397338867

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040064091444946826
    2. 'n' → logprob: -7.875400543212891
    3. ' n' → logprob: -10.87540054321289
    4. '
' → logprob: -13.75040054321289
    5. '```' → logprob: -16.00040054321289
    6. ',' → logprob: -16.12540054321289
    7. '(n' → logprob: -16.12540054321289
    8. '      ' → logprob: -16.75040054321289
    9. 'max' → logprob: -17.37540054321289
    10. ' max' → logprob: -17.87540054321289

Token 341: ' n' (ID: 297)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4991554021835327
    2. ' n' → logprob: -1.9991554021835327
    3. 'max' → logprob: -2.1241555213928223
    4. 'n' (adapté à ' n') → logprob: -2.1241555213928223
    5. '       ' → logprob: -3.9991555213928223
    6. ' best' → logprob: -9.999155044555664
    7. '   ' → logprob: -10.374155044555664
    8. 'best' → logprob: -11.624155044555664
    9. '
' → logprob: -11.999155044555664
    10. ' result' → logprob: -12.249155044555664

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033722471445798874
    2. '=' → logprob: -3.408722400665283
    3. '       ' → logprob: -10.533722877502441
    4. ' ' → logprob: -10.658722877502441
    5. '        ' → logprob: -11.408722877502441
    6. '   ' → logprob: -11.533722877502441
    7. '    ' → logprob: -12.533722877502441
    8. '  ' → logprob: -14.533722877502441
    9. ' =
' → logprob: -15.033722877502441
    10. ',' → logprob: -15.783722877502441

Token 343: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759516358375549
    2. ' self' → logprob: -0.8259516358375549
    3. '       ' → logprob: -11.32595157623291
    4. '	self' → logprob: -16.325952529907227
    5. '   ' → logprob: -17.075952529907227
    6. '(self' → logprob: -18.450952529907227
    7. '=self' → logprob: -18.950952529907227
    8. '
' → logprob: -19.325952529907227
    9. '[self' → logprob: -20.450952529907227
    10. '```' → logprob: -20.450952529907227

Token 344: '.matrix' (ID: 72944)
  Prédit: '.matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matrix' → logprob: -0.006747108418494463
    2. '.n' → logprob: -5.006747245788574
    3. 'matrix' → logprob: -10.631747245788574
    4. '.' → logprob: -12.631747245788574
    5. '   ' → logprob: -13.256747245788574
    6. '       ' → logprob: -13.881747245788574
    7. ' .' → logprob: -14.131747245788574
    8. '	matrix' → logprob: -15.131747245788574
    9. '.vector' → logprob: -15.506747245788574
    10. 'self' → logprob: -16.131746292114258

Token 345: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -6.511406809295295e-06
    2. '.' → logprob: -12.250006675720215
    3. ' .' → logprob: -14.375006675720215
    4. '.data' → logprob: -14.500006675720215
    5. '.size' → logprob: -14.875006675720215
    6. 'n' → logprob: -16.3750057220459
    7. '.length' → logprob: -17.8750057220459
    8. '`.' → logprob: -18.0000057220459
    9. '   ' → logprob: -18.1250057220459
    10. '.ng' → logprob: -18.2500057220459

Token 346: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0329609140753746
    2. '
' → logprob: -3.532960891723633
    3. 'max' → logprob: -6.032960891723633
    4. '        
' → logprob: -8.157960891723633
    5. ' max' → logprob: -8.282960891723633
    6. 'result' → logprob: -9.157960891723633
    7. ',' → logprob: -9.907960891723633
    8. '
' → logprob: -10.032960891723633
    9. '   ' → logprob: -10.532960891723633
    10. ' result' → logprob: -11.782960891723633

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13078740239143372
    2. 'max' → logprob: -2.6307873725891113
    3. ' max' → logprob: -3.0057873725891113
    4. '   ' → logprob: -7.255787372589111
    5. '
' → logprob: -8.13078784942627
    6. 'result' → logprob: -10.25578784942627
    7. ' result' → logprob: -11.00578784942627
    8. '        
' → logprob: -12.25578784942627
    9. ' ' → logprob: -12.50578784942627
    10. '      ' → logprob: -13.00578784942627

Token 348: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.1278257519006729
    2. ' max' → logprob: -2.1278257369995117
    3. '       ' → logprob: -7.252825736999512
    4. '   ' → logprob: -8.877825736999512
    5. 'result' → logprob: -10.502825736999512
    6. 'best' → logprob: -11.627825736999512
    7. '
' → logprob: -12.502825736999512
    8. ' ' → logprob: -13.002825736999512
    9. ' result' → logprob: -13.127825736999512
    10. ' best' → logprob: -13.377825736999512

Token 349: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.319370302458992e-06
    2. 'sum' → logprob: -12.375005722045898
    3. '_' → logprob: -13.875005722045898
    4. '_result' → logprob: -16.1250057220459
    5. '_sub' → logprob: -17.1250057220459
    6. 'Sum' → logprob: -17.5000057220459
    7. ' sum' → logprob: -18.8750057220459
    8. '_value' → logprob: -18.8750057220459
    9. '_total' → logprob: -18.8750057220459
    10. '_max' → logprob: -19.2500057220459

Token 350: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197025999426842
    2. ' =' → logprob: -2.8119702339172363
    3. '=float' → logprob: -13.436970710754395
    4. '=-' → logprob: -14.936970710754395
    5. '=None' → logprob: -15.061970710754395
    6. '   ' → logprob: -15.061970710754395
    7. ',' → logprob: -16.186969757080078
    8. '=

' → logprob: -16.436969757080078
    9. '=
' → logprob: -17.686969757080078
    10. '	' → logprob: -17.936969757080078

Token 351: ' -' (ID: 533)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.009336566552519798
    2. ' float' → logprob: -5.259336471557617
    3. 'self' → logprob: -6.134336471557617
    4. 'None' → logprob: -6.384336471557617
    5. '-' → logprob: -9.009336471557617
    6. ' None' → logprob: -9.509336471557617
    7. ' self' → logprob: -10.134336471557617
    8. ' -' → logprob: -13.009336471557617
    9. '-self' → logprob: -15.134336471557617
    10. '	float' → logprob: -15.509336471557617

Token 352: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.320199877838604e-07
    2. '10' → logprob: -16.0
    3. ' float' → logprob: -16.125
    4. '999' → logprob: -16.625
    5. 'sys' → logprob: -17.125
    6. '(float' → logprob: -17.25
    7. '2' → logprob: -17.5
    8. '1' → logprob: -18.625
    9. '100' → logprob: -19.25
    10. '214' → logprob: -19.25

Token 353: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.22684401273727417
    2. '('' → logprob: -1.726844072341919
    3. ''' → logprob: -3.976844072341919
    4. 'inf' → logprob: -6.60184383392334
    5. '"' → logprob: -7.22684383392334
    6. ''op' → logprob: -7.85184383392334
    7. ''on' → logprob: -7.85184383392334
    8. ''emp' → logprob: -7.97684383392334
    9. ''ins' → logprob: -8.22684383392334
    10. ''app' → logprob: -8.35184383392334

Token 354: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.320199877838604e-07
    2. 'in' → logprob: -15.5
    3. ''' → logprob: -16.125
    4. 'info' → logprob: -17.625
    5. 'Inf' → logprob: -17.75
    6. ''in' → logprob: -19.375
    7. ' inf' → logprob: -20.25
    8. '_inf' → logprob: -20.625
    9. '.inf' → logprob: -20.625
    10. 'INF' → logprob: -21.0

Token 355: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8420297503471375
    2. '')' → logprob: -1.0920298099517822
    3. '')
' → logprob: -2.0920298099517822
    4. ')
' → logprob: -2.8420298099517822
    5. '       ' → logprob: -2.9670298099517822
    6. ')')
' → logprob: -8.967029571533203
    7. ' ')
' → logprob: -9.092029571533203
    8. ' )
' → logprob: -9.842029571533203
    9. ' )' → logprob: -9.967029571533203
    10. '   ' → logprob: -11.092029571533203

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010981090366840363
    2. 'result' → logprob: -5.38598108291626
    3. 'max' → logprob: -5.88598108291626
    4. ' max' → logprob: -6.13598108291626
    5. 'start' → logprob: -8.010981559753418
    6. ' result' → logprob: -8.135981559753418
    7. ',' → logprob: -8.260981559753418
    8. ' start' → logprob: -9.135981559753418
    9. 'best' → logprob: -9.135981559753418
    10. ' best' → logprob: -9.510981559753418

Token 357: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0796399638056755
    2. 'left' → logprob: -3.4546399116516113
    3. 'max' → logprob: -3.7046399116516113
    4. 'result' → logprob: -4.954639911651611
    5. 'top' → logprob: -4.954639911651611
    6. 'final' → logprob: -5.829639911651611
    7. 'best' → logprob: -6.579639911651611
    8. ' for' → logprob: -7.079639911651611
    9. '   ' → logprob: -7.579639911651611
    10. 'row' → logprob: -8.82964038848877

Token 358: ' Iterate' (ID: 129410)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01171314250677824
    2. ' for' → logprob: -4.511713027954102
    3. '       ' → logprob: -7.386713027954102
    4. '   ' → logprob: -10.511713027954102
    5. '
' → logprob: -12.011713027954102
    6. 'prefix' → logprob: -12.136713027954102
    7. ' ' → logprob: -13.386713027954102
    8. '        
' → logprob: -13.511713027954102
    9. '    ' → logprob: -14.011713027954102
    10. '        ' → logprob: -14.636713027954102

Token 359: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.3314099609851837
    2. '       ' → logprob: -1.7064099311828613
    3. ' for' → logprob: -2.4564099311828613
    4. 'for' → logprob: -4.831409931182861
    5. 'over' → logprob: -5.706409931182861
    6. ' through' → logprob: -5.956409931182861
    7. '   ' → logprob: -7.456409931182861
    8. 'r' → logprob: -10.33141040802002
    9. '           ' → logprob: -10.33141040802002
    10. 'from' → logprob: -10.33141040802002

Token 360: ' left' (ID: 3561)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.06394635885953903
    2. 'start' → logprob: -3.93894624710083
    3. 'r' → logprob: -4.06394624710083
    4. 'row' → logprob: -4.31394624710083
    5. ' top' → logprob: -4.93894624710083
    6. '   ' → logprob: -5.93894624710083
    7. 'left' → logprob: -6.56394624710083
    8. ' start' → logprob: -8.438946723937988
    9. 'rows' → logprob: -8.688946723937988
    10. 'all' → logprob: -9.938946723937988

Token 361: ' column' (ID: 6000)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28256240487098694
    2. ' =' → logprob: -2.032562494277954
    3. '_col' → logprob: -2.657562494277954
    4. ',' → logprob: -3.407562494277954
    5. 'col' → logprob: -5.157562255859375
    6. ' in' → logprob: -6.157562255859375
    7. '_bound' → logprob: -7.282562255859375
    8. 'c' → logprob: -7.532562255859375
    9. '_column' → logprob: -7.532562255859375
    10. '_c' → logprob: -8.032562255859375

Token 362: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.80828458070755
    2. ' for' → logprob: -0.93328458070755
    3. ' in' → logprob: -2.0582845211029053
    4. ',' → logprob: -3.5582845211029053
    5. 'in' → logprob: -5.558284759521484
    6. '       ' → logprob: -8.183284759521484
    7. '=' → logprob: -8.433284759521484
    8. 'range' → logprob: -8.558284759521484
    9. '   ' → logprob: -9.183284759521484
    10. 'from' → logprob: -9.558284759521484

Token 363: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38814911246299744
    2. 'for' → logprob: -1.1381491422653198
    3. '       ' → logprob: -7.263149261474609
    4. ' in' → logprob: -8.13814926147461
    5. ',' → logprob: -8.76314926147461
    6. '   ' → logprob: -9.51314926147461
    7. 'range' → logprob: -10.76314926147461
    8. ' range' → logprob: -11.88814926147461
    9. 'in' → logprob: -12.13814926147461
    10. '=' → logprob: -12.38814926147461

Token 364: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6351963877677917
    2. ' for' → logprob: -0.7601963877677917
    3. '       ' → logprob: -6.260196208953857
    4. '   ' → logprob: -8.135196685791016
    5. 'left' → logprob: -8.260196685791016
    6. ' left' → logprob: -9.385196685791016
    7. 'range' → logprob: -11.510196685791016
    8. ' range' → logprob: -11.760196685791016
    9. '    ' → logprob: -11.885196685791016
    10. ' ' → logprob: -12.385196685791016

Token 365: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2017883062362671
    2. ' left' → logprob: -1.701788306236267
    3. 'l' → logprob: -8.451787948608398
    4. '   ' → logprob: -9.826787948608398
    5. 'col' → logprob: -10.201787948608398
    6. '	left' → logprob: -10.826787948608398
    7. 'c' → logprob: -11.201787948608398
    8. '_left' → logprob: -11.826787948608398
    9. ' l' → logprob: -12.201787948608398
    10. ' col' → logprob: -12.451787948608398

Token 366: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0141702089458704
    2. 'in' → logprob: -4.264170169830322
    3. '   ' → logprob: -13.01417064666748
    4. ',' → logprob: -13.76417064666748
    5. ' ' → logprob: -14.13917064666748
    6. 'In' → logprob: -14.51417064666748
    7. '```' → logprob: -14.88917064666748
    8. '_in' → logprob: -15.13917064666748
    9. '1' → logprob: -15.51417064666748
    10. '	in' → logprob: -15.51417064666748

Token 367: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16022524237632751
    2. 'range' → logprob: -1.91022527217865
    3. ' ' → logprob: -14.285224914550781
    4. '(range' → logprob: -15.785224914550781
    5. '0' → logprob: -15.910224914550781
    6. '   ' → logprob: -16.53522491455078
    7. '	range' → logprob: -16.91022491455078
    8. ' in' → logprob: -17.16022491455078
    9. ')' → logprob: -17.28522491455078
    10. '  ' → logprob: -17.66022491455078

Token 368: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001180704333819449
    2. '(' → logprob: -6.751180648803711
    3. 'n' → logprob: -11.501180648803711
    4. '(
' → logprob: -16.12618064880371
    5. ' (' → logprob: -16.50118064880371
    6. '0' → logprob: -17.37618064880371
    7. '(left' → logprob: -17.62618064880371
    8. ')n' → logprob: -18.12618064880371
    9. ' n' → logprob: -18.25118064880371
    10. '<n' → logprob: -18.50118064880371

Token 369: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0433809719979763
    2. '):
' → logprob: -3.1683809757232666
    3. ' ):' → logprob: -8.668380737304688
    4. ',' → logprob: -9.668380737304688
    5. '   ' → logprob: -9.668380737304688
    6. ')' → logprob: -10.543380737304688
    7. '       ' → logprob: -11.168380737304688
    8. 'n' → logprob: -11.293380737304688
    9. ':' → logprob: -11.668380737304688
    10. '):

' → logprob: -12.668380737304688

Token 370: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023109667003154755
    2. '       ' → logprob: -4.023109436035156
    3. ' for' → logprob: -6.148109436035156
    4. '   ' → logprob: -7.148109436035156
    5. 'for' → logprob: -7.898109436035156
    6. '               ' → logprob: -8.148109436035156
    7. ',' → logprob: -8.273109436035156
    8. '        ' → logprob: -8.523109436035156
    9. '#' → logprob: -8.648109436035156
    10. '	       ' → logprob: -9.398109436035156

Token 371: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19029632210731506
    2. 'temp' → logprob: -2.1902964115142822
    3. 'col' → logprob: -3.3152964115142822
    4. 'row' → logprob: -5.065296173095703
    5. '   ' → logprob: -5.440296173095703
    6. 'column' → logprob: -5.565296173095703
    7. '               ' → logprob: -6.190296173095703
    8. 'tmp' → logprob: -6.315296173095703
    9. 'cols' → logprob: -6.440296173095703
    10. ' temp' → logprob: -6.690296173095703

Token 372: ' Temporary' (ID: 100004)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.28188568353652954
    2. 'col' → logprob: -2.2818856239318848
    3. 'row' → logprob: -2.4068856239318848
    4. 'right' → logprob: -4.406885623931885
    5. 'tmp' → logprob: -4.531885623931885
    6. ' temp' → logprob: -4.781885623931885
    7. '   ' → logprob: -5.156885623931885
    8. 'for' → logprob: -5.781885623931885
    9. 'column' → logprob: -5.906885623931885
    10. '           ' → logprob: -6.281885623931885

Token 373: ' array' (ID: 2644)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.5829485058784485
    2. 'row' → logprob: -1.9579484462738037
    3. 'arr' → logprob: -2.2079484462738037
    4. 'col' → logprob: -2.5829484462738037
    5. 'tmp' → logprob: -2.7079484462738037
    6. ' temp' → logprob: -4.457948684692383
    7. 'column' → logprob: -4.582948684692383
    8. ' row' → logprob: -4.832948684692383
    9. ' col' → logprob: -5.457948684692383
    10. 'cols' → logprob: -5.957948684692383

Token 374: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2071250081062317
    2. '=' → logprob: -1.707124948501587
    3. '           ' → logprob: -5.207125186920166
    4. '=[' → logprob: -9.832124710083008
    5. '=zeros' → logprob: -9.832124710083008
    6. '               ' → logprob: -11.457124710083008
    7. '=[]' → logprob: -11.457124710083008
    8. '            ' → logprob: -11.457124710083008
    9. '=row' → logprob: -11.457124710083008
    10. '   ' → logprob: -11.457124710083008

Token 375: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6406390070915222
    2. 'right' → logprob: -1.015639066696167
    3. 'temp' → logprob: -2.765639066696167
    4. 'sum' → logprob: -4.390638828277588
    5. '0' → logprob: -4.765638828277588
    6. ' row' → logprob: -4.890638828277588
    7. '[' → logprob: -5.390638828277588
    8. ' right' → logprob: -5.890638828277588
    9. 'tmp' → logprob: -6.015638828277588
    10. 's' → logprob: -6.265638828277588

Token 376: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18057860434055328
    2. '=' → logprob: -2.3055787086486816
    3. ' =' → logprob: -3.1805787086486816
    4. '_s' → logprob: -4.555578708648682
    5. ' sums' → logprob: -5.430578708648682
    6. '   ' → logprob: -6.305578708648682
    7. 'sum' → logprob: -6.555578708648682
    8. '-wise' → logprob: -6.930578708648682
    9. '_sum' → logprob: -7.055578708648682
    10. ' cumulative' → logprob: -7.680578708648682

Token 377: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015929419314488769
    2. ' =' → logprob: -6.876593112945557
    3. '=' → logprob: -9.251592636108398
    4. '            
' → logprob: -9.251592636108398
    5. '               ' → logprob: -9.751592636108398
    6. ' row' → logprob: -9.876592636108398
    7. '       ' → logprob: -10.001592636108398
    8. ',' → logprob: -10.251592636108398
    9. ':' → logprob: -10.751592636108398
    10. '   ' → logprob: -10.751592636108398

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001402621390298009
    2. ' =' → logprob: -7.126402854919434
    3. '=' → logprob: -9.501402854919434
    4. ' row' → logprob: -9.626402854919434
    5. '            
' → logprob: -10.001402854919434
    6. '               ' → logprob: -10.001402854919434
    7. ' temp' → logprob: -10.376402854919434
    8. '       ' → logprob: -10.376402854919434
    9. '            ' → logprob: -10.376402854919434
    10. '[]' → logprob: -10.376402854919434

Token 379: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.051004551351070404
    2. ' temp' → logprob: -3.801004648208618
    3. 'row' → logprob: -4.176004409790039
    4. 'tmp' → logprob: -4.551004409790039
    5. ' row' → logprob: -6.801004409790039
    6. ' tmp' → logprob: -8.801004409790039
    7. '   ' → logprob: -9.051004409790039
    8. 'temps' → logprob: -10.676004409790039
    9. 'rows' → logprob: -10.801004409790039
    10. '       ' → logprob: -12.051004409790039

Token 380: '_row' (ID: 19157)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869326412677765
    2. '=' → logprob: -1.136932611465454
    3. '=[' → logprob: -10.011932373046875
    4. ' =[' → logprob: -11.386932373046875
    5. '=[]' → logprob: -13.136932373046875
    6. ' ' → logprob: -13.261932373046875
    7. '   ' → logprob: -14.386932373046875
    8. '[' → logprob: -14.886932373046875
    9. '    ' → logprob: -15.886932373046875
    10. '=[]
' → logprob: -16.011932373046875

Token 381: '_sum' (ID: 29859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48224347829818726
    2. '=' → logprob: -0.9822434782981873
    3. 's' → logprob: -4.857243537902832
    4. '_s' → logprob: -9.357243537902832
    5. '   ' → logprob: -9.607243537902832
    6. '=[' → logprob: -9.857243537902832
    7. '=[]' → logprob: -10.107243537902832
    8. '           ' → logprob: -10.607243537902832
    9. ' =[' → logprob: -11.107243537902832
    10. '       ' → logprob: -11.107243537902832

Token 382: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741052985191345
    2. '=' → logprob: -0.9741052985191345
    3. '=[' → logprob: -11.099104881286621
    4. ' =[' → logprob: -11.474104881286621
    5. ' ' → logprob: -13.599104881286621
    6. '[' → logprob: -14.099104881286621
    7. '=[]' → logprob: -14.724104881286621
    8. '   ' → logprob: -16.349105834960938
    9. 's' → logprob: -16.349105834960938
    10. ' [' → logprob: -16.599105834960938

Token 383: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004081959370523691
    2. ' [' → logprob: -5.504081726074219
    3. '[n' → logprob: -12.629081726074219
    4. '   ' → logprob: -15.504081726074219
    5. '[self' → logprob: -16.87908172607422
    6. '           ' → logprob: -17.87908172607422
    7. '       ' → logprob: -18.37908172607422
    8. ' ' → logprob: -18.37908172607422
    9. '[class' → logprob: -18.62908172607422
    10. '[data' → logprob: -19.12908172607422

Token 384: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.000011444091797
    4. '           ' → logprob: -19.000011444091797
    5. '               ' → logprob: -19.250011444091797
    6. '۰' → logprob: -19.250011444091797
    7. '    ' → logprob: -20.250011444091797
    8. '       ' → logprob: -20.375011444091797
    9. '  ' → logprob: -20.625011444091797
    10. '                   ' → logprob: -20.875011444091797

Token 385: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3174477517604828
    2. ' for' → logprob: -1.4424477815628052
    3. ']*' → logprob: -3.4424476623535156
    4. '           ' → logprob: -6.817447662353516
    5. ' ]' → logprob: -6.942447662353516
    6. 'for' → logprob: -7.442447662353516
    7. ')' → logprob: -8.067447662353516
    8. '               ' → logprob: -8.692447662353516
    9. '            ' → logprob: -9.192447662353516
    10. '<|end|>' → logprob: -9.317447662353516

Token 386: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012958917766809464
    2. 'for' → logprob: -4.512959003448486
    3. '           ' → logprob: -7.012959003448486
    4. ']' → logprob: -7.262959003448486
    5. ']*' → logprob: -9.387958526611328
    6. ' *' → logprob: -10.387958526611328
    7. '               ' → logprob: -10.387958526611328
    8. '       ' → logprob: -10.637958526611328
    9. ')' → logprob: -10.637958526611328
    10. '*' → logprob: -10.887958526611328

Token 387: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0280383548888494e-06
    2. ' n' → logprob: -13.875000953674316
    3. 'self' → logprob: -18.375001907348633
    4. '       ' → logprob: -18.750001907348633
    5. '
' → logprob: -18.750001907348633
    6. '(n' → logprob: -19.250001907348633
    7. '   ' → logprob: -20.125001907348633
    8. '	n' → logprob: -20.500001907348633
    9. ')n' → logprob: -21.875001907348633
    10. '        
' → logprob: -22.000001907348633

Token 388: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1440647691488266
    2. '           ' → logprob: -2.1440646648406982
    3. '<|end|>' → logprob: -4.269064903259277
    4. '            
' → logprob: -6.394064903259277
    5. '  
' → logprob: -7.894064903259277
    6. '<|end|>' → logprob: -8.019064903259277
    7. ' 
' → logprob: -8.519064903259277
    8. '    
' → logprob: -8.644064903259277
    9. '\n' → logprob: -9.644064903259277
    10. '   
' → logprob: -10.644064903259277

Token 389: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016363817267119884
    2. '
' → logprob: -7.251636505126953
    3. '       ' → logprob: -7.501636505126953
    4. '            
' → logprob: -9.126636505126953
    5. ' for' → logprob: -9.376636505126953
    6. ' 
' → logprob: -9.876636505126953
    7. '   ' → logprob: -10.251636505126953
    8. '        
' → logprob: -10.501636505126953
    9. '               ' → logprob: -11.126636505126953
    10. '    
' → logprob: -11.251636505126953

Token 390: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3189324736595154
    2. 'for' → logprob: -1.3189325332641602
    3. '       ' → logprob: -5.69393253326416
    4. ' for' → logprob: -6.19393253326416
    5. '#' (adapté à ' #') → logprob: -8.81893253326416
    6. '   ' → logprob: -9.56893253326416
    7. '
' → logprob: -11.56893253326416
    8. '               ' → logprob: -12.31893253326416
    9. '            
' → logprob: -12.31893253326416
    10. '          ' → logprob: -12.56893253326416

Token 391: ' Iterate' (ID: 129410)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001039479160681367
    2. ' for' → logprob: -7.126039505004883
    3. '           ' → logprob: -8.376039505004883
    4. '       ' → logprob: -12.876039505004883
    5. '   ' → logprob: -14.001039505004883
    6. '#' → logprob: -14.501039505004883
    7. '               ' → logprob: -15.251039505004883
    8. '            
' → logprob: -15.751039505004883
    9. 'right' → logprob: -15.876039505004883
    10. '
' → logprob: -16.126039505004883

Token 392: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.20902037620544434
    2. 'over' → logprob: -1.7090203762054443
    3. ' for' → logprob: -5.834020614624023
    4. 'right' → logprob: -6.209020614624023
    5. 'for' → logprob: -6.584020614624023
    6. ' right' → logprob: -7.584020614624023
    7. '           ' → logprob: -7.959020614624023
    8. ' through' → logprob: -8.834020614624023
    9. ' ' → logprob: -9.084020614624023
    10. 'through' → logprob: -10.209020614624023

Token 393: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02869485877454281
    2. ' right' → logprob: -3.7786948680877686
    3. 'range' → logprob: -5.2786946296691895
    4. ' range' → logprob: -8.153695106506348
    5. 'left' → logprob: -10.028695106506348
    6. '[right' → logprob: -13.778695106506348
    7. '	right' → logprob: -14.528695106506348
    8. '(right' → logprob: -14.903695106506348
    9. '   ' → logprob: -15.278695106506348
    10. '
' → logprob: -15.278695106506348

Token 394: ' column' (ID: 6000)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012526600621640682
    2. 'in' → logprob: -4.387526512145996
    3. ' ' → logprob: -12.512526512145996
    4. 'column' → logprob: -12.637526512145996
    5. ' column' → logprob: -13.262526512145996
    6. ',' → logprob: -13.387526512145996
    7. ')' → logprob: -13.387526512145996
    8. 'range' → logprob: -13.512526512145996
    9. ' range' → logprob: -13.762526512145996
    10. '+' → logprob: -14.137526512145996

Token 395: ' >=' (ID: 5064)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08435650169849396
    2. '           ' → logprob: -3.2093565464019775
    3. 'for' → logprob: -3.5843565464019775
    4. '[left' → logprob: -5.709356307983398
    5. ' in' → logprob: -5.959356307983398
    6. ',' → logprob: -6.084356307983398
    7. '(left' → logprob: -6.709356307983398
    8. 'left' → logprob: -6.959356307983398
    9. ' left' → logprob: -6.959356307983398
    10. ' from' → logprob: -8.209356307983398

Token 396: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0028061794582754374
    2. ' left' → logprob: -5.877806186676025
    3. '	left' → logprob: -14.377805709838867
    4. '   ' → logprob: -14.752805709838867
    5. '[left' → logprob: -16.002805709838867
    6. ' ' → logprob: -17.502805709838867
    7. '```' → logprob: -17.502805709838867
    8. '(left' → logprob: -17.627805709838867
    9. '_left' → logprob: -17.752805709838867
    10. '.left' → logprob: -17.877805709838867

Token 397: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05898480862379074
    2. ' for' → logprob: -2.9339847564697266
    3. 'for' → logprob: -5.683984756469727
    4. '       ' → logprob: -7.808984756469727
    5. '
' → logprob: -9.308984756469727
    6. ',' → logprob: -9.933984756469727
    7. ' in' → logprob: -10.558984756469727
    8. '            
' → logprob: -10.683984756469727
    9. '               ' → logprob: -10.933984756469727
    10. '   ' → logprob: -10.933984756469727

Token 398: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02238263189792633
    2. ' for' → logprob: -4.147382736206055
    3. 'for' → logprob: -5.272382736206055
    4. '       ' → logprob: -6.772382736206055
    5. '               ' → logprob: -10.647382736206055
    6. '   ' → logprob: -11.147382736206055
    7. ',' → logprob: -12.772382736206055
    8. '		' → logprob: -13.022382736206055
    9. '          ' → logprob: -13.147382736206055
    10. '         ' → logprob: -13.772382736206055

Token 399: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6947334408760071
    2. 'for' (adapté à ' for') → logprob: -0.6947334408760071
    3. '           ' → logprob: -6.944733619689941
    4. '       ' → logprob: -8.944733619689941
    5. 'range' → logprob: -8.944733619689941
    6. ' range' → logprob: -9.319733619689941
    7. 'left' → logprob: -9.319733619689941
    8. '   ' → logprob: -9.319733619689941
    9. 'right' → logprob: -10.194733619689941
    10. ' left' → logprob: -10.819733619689941

Token 400: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.5759578943252563
    2. 'right' → logprob: -0.8259578943252563
    3. 'left' → logprob: -11.200958251953125
    4. ' left' → logprob: -12.950958251953125
    5. '	right' → logprob: -13.700958251953125
    6. ' ' → logprob: -14.575958251953125
    7. '(right' → logprob: -15.200958251953125
    8. 'r' → logprob: -15.450958251953125
    9. '   ' → logprob: -15.575958251953125
    10. '_right' → logprob: -17.200958251953125

Token 401: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002805940806865692
    2. 'in' → logprob: -5.877805709838867
    3. 'range' → logprob: -15.002805709838867
    4. ' ' → logprob: -15.127805709838867
    5. '   ' → logprob: -15.627805709838867
    6. '
' → logprob: -15.627805709838867
    7. ',' → logprob: -16.877805709838867
    8. '```' → logprob: -17.252805709838867
    9. ' 
' → logprob: -17.377805709838867
    10. '	in' → logprob: -17.502805709838867

Token 402: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006717267446219921
    2. ' range' → logprob: -5.006717205047607
    3. 'left' → logprob: -13.381717681884766
    4. '(range' → logprob: -15.006717681884766
    5. ' ' → logprob: -17.381717681884766
    6. '   ' → logprob: -17.506717681884766
    7. ' left' → logprob: -19.006717681884766
    8. 'right' → logprob: -19.006717681884766
    9. '
' → logprob: -19.256717681884766
    10. '	range' → logprob: -19.881717681884766

Token 403: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -1.2352385965641588e-05
    2. '(' → logprob: -11.750012397766113
    3. 'left' → logprob: -12.375012397766113
    4. ' left' → logprob: -16.250011444091797
    5. '[left' → logprob: -17.375011444091797
    6. ',left' → logprob: -18.000011444091797
    7. ' (' → logprob: -18.375011444091797
    8. '	left' → logprob: -18.375011444091797
    9. '(right' → logprob: -18.500011444091797
    10. '(
' → logprob: -18.625011444091797

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007370850071310997
    2. ' ,' → logprob: -7.375737190246582
    3. ',n' → logprob: -9.125737190246582
    4. ',
' → logprob: -14.250737190246582
    5. '‌,' → logprob: -15.500737190246582
    6. ',len' → logprob: -15.750737190246582
    7. ',right' → logprob: -16.250736236572266
    8. 'n' → logprob: -16.375736236572266
    9. ',left' → logprob: -16.500736236572266
    10. ',current' → logprob: -16.500736236572266

Token 405: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141363143920898
    2. ' n' → logprob: -1.701413631439209
    3. '	n' → logprob: -15.451414108276367
    4. '   ' → logprob: -16.576414108276367
    5. '       ' → logprob: -16.826414108276367
    6. '
' → logprob: -17.576414108276367
    7. ')n' → logprob: -17.826414108276367
    8. '           ' → logprob: -18.076414108276367
    9. '_n' → logprob: -18.326414108276367
    10. '<n' → logprob: -18.451414108276367

Token 406: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0891299769282341
    2. '):' → logprob: -2.46412992477417
    3. ':' → logprob: -9.839130401611328
    4. ':
' → logprob: -9.964130401611328
    5. '):
' → logprob: -10.339130401611328
    6. '           ' → logprob: -10.714130401611328
    7. '               ' → logprob: -10.839130401611328
    8. '):

' → logprob: -11.964130401611328
    9. '+' → logprob: -12.464130401611328
    10. ' ):
' → logprob: -13.589130401611328

Token 407: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016675653168931603
    2. '                
' → logprob: -6.751667499542236
    3. '
' → logprob: -9.126667976379395
    4. '            
' → logprob: -9.501667976379395
    5. ' 
' → logprob: -9.876667976379395
    6. '<|end|>' → logprob: -10.001667976379395
    7. '	           ' → logprob: -10.126667976379395
    8. '           ' → logprob: -10.501667976379395
    9. ' for' → logprob: -10.751667976379395
    10. '[' → logprob: -11.251667976379395

Token 408: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21450607478618622
    2. ' for' → logprob: -1.7145060300827026
    3. '                
' → logprob: -5.714506149291992
    4. 'for' (adapté à ' for') → logprob: -5.839506149291992
    5. '                   ' → logprob: -5.964506149291992
    6. '                ' → logprob: -6.714506149291992
    7. ' 
' → logprob: -6.964506149291992
    8. '
' → logprob: -7.339506149291992
    9. '	           ' → logprob: -8.214506149291992
    10. '                    
' → logprob: -9.089506149291992

Token 409: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5870414972305298
    2. ' row' → logprob: -1.8370414972305298
    3. 'i' → logprob: -2.0870413780212402
    4. ' i' → logprob: -2.0870413780212402
    5. 'r' → logprob: -3.3370413780212402
    6. ' r' → logprob: -6.83704137802124
    7. '   ' → logprob: -10.962041854858398
    8. ' ' → logprob: -13.712041854858398
    9. '	row' → logprob: -14.462041854858398
    10. '       ' → logprob: -15.212041854858398

Token 410: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0041290996596217155
    2. 'in' → logprob: -5.504128932952881
    3. '                   ' → logprob: -10.629129409790039
    4. '               ' → logprob: -11.754129409790039
    5. 's' → logprob: -12.629129409790039
    6. 'n' → logprob: -12.629129409790039
    7. ' ' → logprob: -13.004129409790039
    8. '	in' → logprob: -13.004129409790039
    9. '   ' → logprob: -13.129129409790039
    10. '                ' → logprob: -14.254129409790039

Token 411: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416350994259119
    2. ' range' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.514163970947266
    4. '(range' → logprob: -18.514163970947266
    5. '	range' → logprob: -18.514163970947266
    6. '   ' → logprob: -19.139163970947266
    7. '
' → logprob: -20.014163970947266
    8. 'n' → logprob: -20.889163970947266
    9. ')' → logprob: -21.514163970947266
    10. '  ' → logprob: -21.639163970947266

Token 412: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0028500445187091827
    2. 'n' → logprob: -5.87785005569458
    3. '(' → logprob: -10.252849578857422
    4. ' n' → logprob: -12.127849578857422
    5. '	n' → logprob: -13.252849578857422
    6. '(
' → logprob: -14.002849578857422
    7. ')n' → logprob: -14.252849578857422
    8. '               ' → logprob: -14.752849578857422
    9. '                   ' → logprob: -15.377849578857422
    10. '<n' → logprob: -16.002849578857422

Token 413: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.062357861548662186
    2. '):' → logprob: -2.9373579025268555
    3. '               ' → logprob: -5.5623579025268555
    4. '                   ' → logprob: -5.8123579025268555
    5. ')' → logprob: -8.187357902526855
    6. '           ' → logprob: -9.062357902526855
    7. '):
' → logprob: -9.187357902526855
    8. '   ' → logprob: -11.312357902526855
    9. ':' → logprob: -11.312357902526855
    10. '):

' → logprob: -11.437357902526855

Token 414: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00024120506714098155
    2. '               ' → logprob: -9.00024127960205
    3. '                    ' → logprob: -10.25024127960205
    4. '                       ' → logprob: -10.50024127960205
    5. '                ' → logprob: -10.87524127960205
    6. '                    
' → logprob: -11.12524127960205
    7. '                  ' → logprob: -12.00024127960205
    8. '           ' → logprob: -12.12524127960205
    9. ',' → logprob: -12.62524127960205
    10. '       ' → logprob: -14.00024127960205

Token 415: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.2559823989868164
    2. '                       ' → logprob: -1.6309823989868164
    3. 'temp' (adapté à ' temp') → logprob: -3.8809823989868164
    4. '                   ' → logprob: -4.880982398986816
    5. '               ' → logprob: -7.380982398986816
    6. '                           ' → logprob: -8.005982398986816
    7. '   ' → logprob: -8.130982398986816
    8. '                        ' → logprob: -9.255982398986816
    9. '                               ' → logprob: -9.380982398986816
    10. '                    ' → logprob: -9.505982398986816

Token 416: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -9.088346359931165e-07
    2. '               ' → logprob: -15.500000953674316
    3. '[row' → logprob: -15.625000953674316
    4. '                   ' → logprob: -15.750000953674316
    5. 'row' → logprob: -15.875000953674316
    6. '[_' → logprob: -16.125
    7. '           ' → logprob: -17.375
    8. '_ROW' → logprob: -17.5
    9. '```' → logprob: -17.875
    10. '<Row' → logprob: -18.0

Token 417: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -9.253090865968261e-06
    2. '[row' → logprob: -12.375009536743164
    3. 'sum' → logprob: -12.750009536743164
    4. '_row' → logprob: -13.375009536743164
    5. '[_' → logprob: -15.500009536743164
    6. '                   ' → logprob: -16.625009536743164
    7. '_SUM' → logprob: -16.875009536743164
    8. '               ' → logprob: -17.000009536743164
    9. '[' → logprob: -17.250009536743164
    10. ' _' → logprob: -17.500009536743164

Token 418: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.006437891628593206
    2. '[right' → logprob: -5.1314377784729
    3. '[' → logprob: -8.006438255310059
    4. '[left' → logprob: -8.756438255310059
    5. ' [' → logprob: -11.881438255310059
    6. '[word' → logprob: -13.006438255310059
    7. '[line' → logprob: -13.381438255310059
    8. '                   ' → logprob: -13.631438255310059
    9. '               ' → logprob: -13.631438255310059
    10. ' +=' → logprob: -13.756438255310059

Token 419: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.7365904450416565
    2. ']' → logprob: -1.1115903854370117
    3. ' +=' → logprob: -1.7365903854370117
    4. '+=' → logprob: -4.486590385437012
    5. ')' → logprob: -5.986590385437012
    6. ' ]' → logprob: -6.236590385437012
    7. ']+' → logprob: -8.236590385437012
    8. '+' → logprob: -10.486590385437012
    9. ' )' → logprob: -10.861590385437012
    10. '[' → logprob: -10.861590385437012

Token 420: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.386914998292923
    2. '+=' → logprob: -1.1369149684906006
    3. ']+=' → logprob: -10.63691520690918
    4. '+' → logprob: -11.13691520690918
    5. ' +' → logprob: -14.01191520690918
    6. '+=(' → logprob: -14.38691520690918
    7. '                ' → logprob: -14.51191520690918
    8. '+='' → logprob: -14.51191520690918
    9. '                   ' → logprob: -14.76191520690918
    10. '```' → logprob: -15.01191520690918

Token 421: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011049231514334679
    2. ' self' → logprob: -4.511049270629883
    3. '                   ' → logprob: -14.386049270629883
    4. '[self' → logprob: -14.886049270629883
    5. '(self' → logprob: -15.386049270629883
    6. 'matrix' → logprob: -15.636049270629883
    7. '	self' → logprob: -16.261049270629883
    8. '=self' → logprob: -17.636049270629883
    9. '               ' → logprob: -17.886049270629883
    10. '                       ' → logprob: -18.136049270629883

Token 422: '.matrix' (ID: 72944)
  Prédit: '.matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matrix' → logprob: -0.000774846994318068
    2. 'matrix' → logprob: -7.25077486038208
    3. '.data' → logprob: -9.875774383544922
    4. '.' → logprob: -11.375774383544922
    5. '	matrix' → logprob: -13.750774383544922
    6. ' matrix' → logprob: -14.250774383544922
    7. ' .' → logprob: -16.250774383544922
    8. '_matrix' → logprob: -16.750774383544922
    9. 'Matrix' → logprob: -16.750774383544922
    10. 'atrix' → logprob: -17.250774383544922

Token 423: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -2.951771421066951e-05
    2. '.' → logprob: -10.625029563903809
    3. ' .' → logprob: -12.250029563903809
    4. 'data' → logprob: -15.000029563903809
    5. '.dat' → logprob: -18.250028610229492
    6. '.matrix' → logprob: -18.250028610229492
    7. '[data' → logprob: -18.750028610229492
    8. '.sub' → logprob: -19.125028610229492
    9. '[' → logprob: -19.625028610229492
    10. '.rows' → logprob: -20.000028610229492

Token 424: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.00014716439181938767
    2. '[right' → logprob: -8.875146865844727
    3. 'row' → logprob: -12.250146865844727
    4. '[' → logprob: -13.250146865844727
    5. '[r' → logprob: -15.500146865844727
    6. '```' → logprob: -15.875146865844727
    7. '[left' → logprob: -16.375146865844727
    8. ' [' → logprob: -16.500146865844727
    9. 'right' → logprob: -17.375146865844727
    10. '   ' → logprob: -17.375146865844727

Token 425: '][' (ID: 2696)
  Prédit: '[right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.04865242913365364
    2. '][' → logprob: -3.048652410507202
    3. '[' → logprob: -10.423652648925781
    4. '[left' → logprob: -11.048652648925781
    5. ' ][' → logprob: -11.798652648925781
    6. ')[' → logprob: -12.673652648925781
    7. 'right' → logprob: -12.923652648925781
    8. '[r' → logprob: -13.173652648925781
    9. '}[' → logprob: -13.798652648925781
    10. ' [' → logprob: -13.798652648925781

Token 426: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -2.8087270038668066e-05
    2. ' right' → logprob: -10.500027656555176
    3. '[right' → logprob: -14.750027656555176
    4. '	right' → logprob: -17.750028610229492
    5. '   ' → logprob: -18.750028610229492
    6. '
' → logprob: -19.625028610229492
    7. 'r' → logprob: -19.750028610229492
    8. ':right' → logprob: -19.750028610229492
    9. ',right' → logprob: -20.250028610229492
    10. '(right' → logprob: -20.625028610229492

Token 427: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003160393098369241
    2. ' ]' → logprob: -8.87531566619873
    3. '<|end|>' → logprob: -9.75031566619873
    4. ']
' → logprob: -9.87531566619873
    5. '               ' → logprob: -10.37531566619873
    6. ')' → logprob: -10.37531566619873
    7. ')]' → logprob: -13.37531566619873
    8. ']

' → logprob: -14.50031566619873
    9. '<|end|>' → logprob: -15.25031566619873
    10. '```' → logprob: -15.62531566619873

Token 428: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20738567411899567
    2. '
' → logprob: -1.7073856592178345
    3. '                
' → logprob: -5.207385540008545
    4. '        
' → logprob: -9.207386016845703
    5. '  
' → logprob: -9.207386016845703
    6. '```' → logprob: -9.707386016845703
    7. '                

' → logprob: -10.207386016845703
    8. '            
' → logprob: -10.707386016845703
    9. '<|end|>' → logprob: -10.707386016845703
    10. '
' → logprob: -10.957386016845703

Token 429: ' #' (ID: 1069)
  Prédit: 'kad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kad' → logprob: -0.7870189547538757
    2. 'result' → logprob: -0.9120189547538757
    3. '               ' → logprob: -2.1620190143585205
    4. 'k' → logprob: -4.037018775939941
    5. ' kad' → logprob: -5.787018775939941
    6. 'res' → logprob: -6.037018775939941
    7. '           ' → logprob: -6.537018775939941
    8. 'current' → logprob: -7.162018775939941
    9. ' result' → logprob: -7.537018775939941
    10. '                
' → logprob: -7.912018775939941

Token 430: ' Use' (ID: 7649)
  Prédit: 'kad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kad' → logprob: -0.4568953216075897
    2. 'result' → logprob: -1.081895351409912
    3. 'k' → logprob: -4.206895351409912
    4. ' kad' → logprob: -5.456895351409912
    5. ' result' → logprob: -5.956895351409912
    6. 'current' → logprob: -6.081895351409912
    7. '           ' → logprob: -6.706895351409912
    8. 'res' → logprob: -7.331895351409912
    9. '               ' → logprob: -7.831895351409912
    10. '   ' → logprob: -7.831895351409912

Token 431: ' Kad' (ID: 53913)
  Prédit: ' kad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' kad' → logprob: -0.7332858443260193
    2. 'kad' → logprob: -1.358285903930664
    3. 'Kad' → logprob: -2.608285903930664
    4. ' result' → logprob: -2.733285903930664
    5. 'result' → logprob: -3.233285903930664
    6. ' k' → logprob: -3.608285903930664
    7. ' Kad' → logprob: -3.733285903930664
    8. '               ' → logprob: -3.983285903930664
    9. 'k' → logprob: -4.608285903930664
    10. '           ' → logprob: -7.233285903930664

Token 432: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -2.339278580620885e-06
    2. 'ане' → logprob: -14.250001907348633
    3. 'ANE' → logprob: -14.250001907348633
    4. 'a' → logprob: -14.750001907348633
    5. ' ane' → logprob: -14.875001907348633
    6. 'anes' → logprob: -16.125001907348633
    7. 'ene' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. '   ' → logprob: -18.000001907348633
    10. 'ne' → logprob: -18.125001907348633

Token 433: ''s' (ID: 885)
  Prédit: 'Result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: -0.11871769279241562
    2. '.Result' → logprob: -2.868717670440674
    3. 'result' → logprob: -3.993717670440674
    4. ''s' → logprob: -4.743717670440674
    5. ' result' → logprob: -4.743717670440674
    6. '_result' → logprob: -5.118717670440674
    7. '   ' → logprob: -5.368717670440674
    8. '.' → logprob: -5.868717670440674
    9. '               ' → logprob: -6.493717670440674
    10. '.run' → logprob: -7.493717670440674

Token 434: ' algorithm' (ID: 22184)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5526554584503174
    2. 'result' → logprob: -0.9276554584503174
    3. '_result' → logprob: -3.8026554584503174
    4. 'Result' → logprob: -5.552655220031738
    5. ' run' → logprob: -6.927655220031738
    6. ' algorithm' → logprob: -7.052655220031738
    7. '               ' → logprob: -7.427655220031738
    8. 'run' → logprob: -9.177655220031738
    9. 'algorithm' → logprob: -9.802655220031738
    10. '.run' → logprob: -10.677655220031738

Token 435: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005602141842246056
    2. 'result' → logprob: -5.2556023597717285
    3. ' result' → logprob: -8.50560188293457
    4. '                
' → logprob: -9.00560188293457
    5. ' to' → logprob: -11.63060188293457
    6. ',' → logprob: -11.63060188293457
    7. '           ' → logprob: -11.63060188293457
    8. '                   ' → logprob: -12.50560188293457
    9. '                

' → logprob: -12.88060188293457
    10. '                
' → logprob: -13.50560188293457

Token 436: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.12697209417819977
    2. ' temp' → logprob: -2.126972198486328
    3. '               ' → logprob: -10.251972198486328
    4. '[temp' → logprob: -13.126972198486328
    5. '
' → logprob: -13.751972198486328
    6. 'the' → logprob: -13.876972198486328
    7. 'tem' → logprob: -13.876972198486328
    8. '           ' → logprob: -14.001972198486328
    9. '(temp' → logprob: -14.251972198486328
    10. '                   ' → logprob: -14.251972198486328

Token 437: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -5.264322317088954e-05
    2. '               ' → logprob: -9.875052452087402
    3. ' _' → logprob: -15.250052452087402
    4. '                   ' → logprob: -15.500052452087402
    5. '           ' → logprob: -16.00005340576172
    6. 'row' → logprob: -16.37505340576172
    7. '_line' → logprob: -16.50005340576172
    8. '\' → logprob: -16.75005340576172
    9. '_ROW' → logprob: -17.00005340576172
    10. '```' → logprob: -17.12505340576172

Token 438: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.7968066206085496e-05
    2. 'sum' → logprob: -10.500027656555176
    3. '               ' → logprob: -14.875027656555176
    4. '_s' → logprob: -17.000028610229492
    5. ' sum' → logprob: -17.625028610229492
    6. '           ' → logprob: -17.875028610229492
    7. 'Sum' → logprob: -18.250028610229492
    8. '                   ' → logprob: -19.000028610229492
    9. '_' → logprob: -19.375028610229492
    10. '_row' → logprob: -19.500028610229492

Token 439: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011641497258096933
    2. 'result' → logprob: -7.001163959503174
    3. ' result' → logprob: -8.876164436340332
    4. '                
' → logprob: -9.251164436340332
    5. ',' → logprob: -12.376164436340332
    6. '
' → logprob: -12.751164436340332
    7. '           ' → logprob: -12.751164436340332
    8. '                   ' → logprob: -13.376164436340332
    9. '                

' → logprob: -13.876164436340332
    10. '              ' → logprob: -14.376164436340332

Token 440: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.7904864549636841
    2. 'find' → logprob: -0.7904864549636841
    3. '               ' → logprob: -2.9154863357543945
    4. 'result' → logprob: -3.7904863357543945
    5. ' get' → logprob: -5.0404863357543945
    6. 'get' → logprob: -5.4154863357543945
    7. ' result' → logprob: -6.0404863357543945
    8. '                   ' → logprob: -7.1654863357543945
    9. 'identify' → logprob: -7.7904863357543945
    10. '           ' → logprob: -8.290486335754395

Token 441: ' max' (ID: 2999)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7413646578788757
    2. ' current' → logprob: -1.2413647174835205
    3. 'kad' → logprob: -1.8663647174835205
    4. 'max' → logprob: -3.6163647174835205
    5. ' max' → logprob: -3.9913647174835205
    6. 'result' → logprob: -4.616364479064941
    7. ' kad' → logprob: -4.741364479064941
    8. '               ' → logprob: -4.866364479064941
    9. 'curr' → logprob: -5.866364479064941
    10. ' result' → logprob: -6.116364479064941

Token 442: ' sub' (ID: 1543)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.88897705078125
    2. '_sub' → logprob: -1.76397705078125
    3. '               ' → logprob: -2.01397705078125
    4. 'result' → logprob: -2.13897705078125
    5. 'sub' → logprob: -2.38897705078125
    6. '_current' → logprob: -3.26397705078125
    7. '_sum' → logprob: -4.51397705078125
    8. 'sum' → logprob: -4.76397705078125
    9. '_k' → logprob: -5.51397705078125
    10. 'current' → logprob: -6.01397705078125

Token 443: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -7.040457421680912e-05
    2. 'rectangle' → logprob: -10.125070571899414
    3. 'matrix' → logprob: -11.500070571899414
    4. 'sum' → logprob: -12.125070571899414
    5. 'arr' → logprob: -12.750070571899414
    6. 'row' → logprob: -13.000070571899414
    7. ' array' → logprob: -13.125070571899414
    8. '_array' → logprob: -13.375070571899414
    9. '_sum' → logprob: -13.625070571899414
    10. 'result' → logprob: -14.000070571899414

Token 444: ' sum' (ID: 4215)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2940514087677002
    2. '               ' → logprob: -1.4190514087677002
    3. ' result' → logprob: -4.419051170349121
    4. '_result' → logprob: -7.794051170349121
    5. 'sum' → logprob: -8.669051170349121
    6. '                
' → logprob: -9.044051170349121
    7. ' sum' → logprob: -10.419051170349121
    8. '                ' → logprob: -11.544051170349121
    9. '_sum' → logprob: -11.794051170349121
    10. '```' → logprob: -11.919051170349121

Token 445: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00026085900026373565
    2. 'result' → logprob: -8.625261306762695
    3. '                
' → logprob: -10.250261306762695
    4. ',' → logprob: -10.875261306762695
    5. ' result' → logprob: -10.875261306762695
    6. '<|end|>' → logprob: -13.500261306762695
    7. '                

' → logprob: -13.500261306762695
    8. '
' → logprob: -14.000261306762695
    9. '              ' → logprob: -14.125261306762695
    10. '                   ' → logprob: -14.500261306762695

Token 446: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.097437315271236e-05
    2. 'result' → logprob: -10.12505054473877
    3. ' result' → logprob: -12.00005054473877
    4. '           ' → logprob: -12.75005054473877
    5. '                   ' → logprob: -14.25005054473877
    6. ' kad' → logprob: -14.87505054473877
    7. ',' → logprob: -15.75005054473877
    8. '                
' → logprob: -15.75005054473877
    9. 'kad' → logprob: -15.87505054473877
    10. 'k' → logprob: -16.375051498413086

Token 447: ' kad' (ID: 13283)
  Prédit: 'kad'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kad' (adapté à ' kad') → logprob: -0.3818826973438263
    2. 'result' → logprob: -1.631882667541504
    3. ' kad' → logprob: -2.756882667541504
    4. ' result' → logprob: -3.506882667541504
    5. '               ' → logprob: -4.256882667541504
    6. 'k' → logprob: -4.381882667541504
    7. 'res' → logprob: -7.506882667541504
    8. '                   ' → logprob: -7.756882667541504
    9. ' k' → logprob: -8.381882667541504
    10. '           ' → logprob: -9.631882667541504

Token 448: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.00022129806166049093
    2. '               ' → logprob: -9.375221252441406
    3. 'Result' → logprob: -9.875221252441406
    4. '_result' → logprob: -10.750221252441406
    5. '   ' → logprob: -10.875221252441406
    6. '           ' → logprob: -11.250221252441406
    7. '             ' → logprob: -12.125221252441406
    8. '              ' → logprob: -12.375221252441406
    9. 'result' → logprob: -12.500221252441406
    10. 'an' → logprob: -13.000221252441406

Token 449: '_res' (ID: 10626)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0016812481917440891
    2. ' =' → logprob: -7.501681327819824
    3. 'result' → logprob: -7.626681327819824
    4. '=' → logprob: -7.751681327819824
    5. 'Result' → logprob: -8.626681327819824
    6. '_res' → logprob: -11.001681327819824
    7. '=result' → logprob: -12.751681327819824
    8. '   ' → logprob: -13.001681327819824
    9. '_' → logprob: -13.501681327819824
    10. '.Result' → logprob: -13.626681327819824

Token 450: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.0804746001958847
    2. ' =' → logprob: -2.705474615097046
    3. '=' → logprob: -4.580474376678467
    4. ' ult' → logprob: -9.330474853515625
    5. 'ultat' → logprob: -10.330474853515625
    6. 'ults' → logprob: -10.455474853515625
    7. 'lt' → logprob: -11.080474853515625
    8. 'ULT' → logprob: -11.330474853515625
    9. ')' → logprob: -11.705474853515625
    10. 'olt' → logprob: -11.830474853515625

Token 451: ' Kad' (ID: 53913)
  Prédit: 'Kad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Kad' → logprob: -0.0015024791937321424
    2. ' Kad' → logprob: -6.501502513885498
    3. 'Kd' → logprob: -17.376502990722656
    4. 'K' → logprob: -17.501502990722656
    5. 'Kab' → logprob: -17.501502990722656
    6. 'Kod' → logprob: -17.876502990722656
    7. 'Kan' → logprob: -18.751502990722656
    8. 'Kaz' → logprob: -18.876502990722656
    9. 'Kar' → logprob: -19.376502990722656
    10. 'Kas' → logprob: -19.376502990722656

Token 452: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -5.512236498361744e-07
    2. ' ane' → logprob: -14.625000953674316
    3. 'ане' → logprob: -16.875
    4. 'an' → logprob: -17.875
    5. 'ne' → logprob: -18.25
    6. 'ANE' → logprob: -19.0
    7. '   ' → logprob: -20.375
    8. 'a' → logprob: -20.625
    9. '
' → logprob: -20.75
    10. 'anes' → logprob: -20.875

Token 453: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.0009432652732357383
    2. '.' → logprob: -7.000943183898926
    3. ' .' → logprob: -10.375943183898926
    4. ').' → logprob: -15.500943183898926
    5. '   ' → logprob: -16.375944137573242
    6. '}.' → logprob: -16.500944137573242
    7. '().' → logprob: -17.500944137573242
    8. '\.' → logprob: -17.750944137573242
    9. '.perform' → logprob: -18.375944137573242
    10. '.
' → logprob: -18.375944137573242

Token 454: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.375004768371582
    3. '(tmp' → logprob: -14.750004768371582
    4. 'temp' → logprob: -14.875004768371582
    5. ' (' → logprob: -16.8750057220459
    6. ' temp' → logprob: -17.5000057220459
    7. '[temp' → logprob: -18.2500057220459
    8. '(
' → logprob: -19.3750057220459
    9. '(t' → logprob: -19.6250057220459
    10. ',temp' → logprob: -19.7500057220459

Token 455: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -5.512236498361744e-07
    2. 'row' → logprob: -15.000000953674316
    3. '_sum' → logprob: -16.5
    4. '_ROW' → logprob: -18.0
    5. 'Row' → logprob: -18.25
    6. '[row' → logprob: -18.375
    7. '_array' → logprob: -19.125
    8. '```' → logprob: -19.125
    9. '<Row' → logprob: -19.125
    10. '_Row' → logprob: -19.375

Token 456: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00023417205375153571
    2. 'sum' → logprob: -8.375234603881836
    3. '_row' → logprob: -12.875234603881836
    4. ')' → logprob: -15.250234603881836
    5. 'Sum' → logprob: -15.375234603881836
    6. 'um' → logprob: -16.125234603881836
    7. '               ' → logprob: -16.500234603881836
    8. '_s' → logprob: -16.625234603881836
    9. ' sum' → logprob: -16.750234603881836
    10. 's' → logprob: -16.875234603881836

Token 457: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5771523714065552
    2. ')
' → logprob: -0.8271523714065552
    3. '               ' → logprob: -7.452152252197266
    4. ')

' → logprob: -7.702152252197266
    5. '
' → logprob: -9.702152252197266
    6. ')
' → logprob: -9.827152252197266
    7. '<|end|>' → logprob: -10.702152252197266
    8. ')return' → logprob: -11.452152252197266
    9. '       ' → logprob: -12.202152252197266
    10. ' )' → logprob: -12.452152252197266

Token 458: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003729966701939702
    2. 'if' → logprob: -8.750372886657715
    3. '                
' → logprob: -9.375372886657715
    4. ' if' → logprob: -9.625372886657715
    5. '
' → logprob: -10.375372886657715
    6. '```' → logprob: -10.750372886657715
    7. '           ' → logprob: -12.250372886657715
    8. '<|end|>' → logprob: -13.625372886657715
    9. '       ' → logprob: -13.750372886657715
    10. '              ' → logprob: -14.750372886657715

Token 459: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2041780650615692
    2. 'if' (adapté à ' if') → logprob: -1.7041780948638916
    3. ' if' → logprob: -5.9541778564453125
    4. '           ' → logprob: -8.954177856445312
    5. 'max' → logprob: -11.204177856445312
    6. '       ' → logprob: -11.829177856445312
    7. '```' → logprob: -11.954177856445312
    8. '                
' → logprob: -12.204177856445312
    9. '
' → logprob: -13.204177856445312
    10. '                   ' → logprob: -14.454177856445312

Token 460: ' kad' (ID: 13283)
  Prédit: 'kad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kad' → logprob: -0.575953483581543
    2. ' kad' → logprob: -0.825953483581543
    3. 'k' → logprob: -11.450953483581543
    4. '   ' → logprob: -13.450953483581543
    5. ' ' → logprob: -14.075953483581543
    6. 'Kad' → logprob: -14.950953483581543
    7. '           ' → logprob: -15.700953483581543
    8. '	k' → logprob: -15.950953483581543
    9. '
' → logprob: -16.45095443725586
    10. '(k' → logprob: -16.45095443725586

Token 461: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -1.2664456789934775e-06
    2. 'ana' → logprob: -14.375000953674316
    3. ' ane' → logprob: -14.875000953674316
    4. 'ане' → logprob: -15.125000953674316
    5. '   ' → logprob: -17.000001907348633
    6. 'an' → logprob: -17.875001907348633
    7. '[' → logprob: -18.500001907348633
    8. '>' → logprob: -18.750001907348633
    9. '_' → logprob: -18.875001907348633
    10. 'ANE' → logprob: -19.250001907348633

Token 462: '_res' (ID: 10626)
  Prédit: '_res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -3.15441757265944e-05
    2. 'res' → logprob: -10.500031471252441
    3. '.res' → logprob: -12.875031471252441
    4. '   ' → logprob: -15.000031471252441
    5. '	res' → logprob: -15.375031471252441
    6. 'Res' → logprob: -15.500031471252441
    7. '_' → logprob: -16.125032424926758
    8. '.' → logprob: -16.250032424926758
    9. '
' → logprob: -16.750032424926758
    10. 's' → logprob: -16.875032424926758

Token 463: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -1.1472419600977446e-06
    2. 'max' → logprob: -13.750000953674316
    3. '.' → logprob: -16.875001907348633
    4. ' .' → logprob: -19.125001907348633
    5. '	max' → logprob: -19.500001907348633
    6. ':max' → logprob: -20.125001907348633
    7. '.maximum' → logprob: -20.250001907348633
    8. ' max' → logprob: -20.750001907348633
    9. ',max' → logprob: -20.875001907348633
    10. '.Max' → logprob: -21.375001907348633

Token 464: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.384836888173595e-05
    2. '_global' → logprob: -10.3750638961792
    3. '_' → logprob: -10.8750638961792
    4. 'sum' → logprob: -12.2500638961792
    5. '_max' → logprob: -12.8750638961792
    6. '_current' → logprob: -13.2500638961792
    7. '\' → logprob: -13.6250638961792
    8. '>' → logprob: -13.7500638961792
    9. '__' → logprob: -14.2500638961792
    10. '._' → logprob: -14.5000638961792

Token 465: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25193557143211365
    2. '>' → logprob: -1.501935601234436
    3. ' ' → logprob: -12.251935958862305
    4. '   ' → logprob: -15.251935958862305
    5. ' ' → logprob: -15.501935958862305
    6. '">' → logprob: -15.626935958862305
    7. '()>' → logprob: -15.876935958862305
    8. '  ' → logprob: -16.001935958862305
    9. '```' → logprob: -16.376935958862305
    10. ')>' → logprob: -16.501935958862305

Token 466: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005233882926404476
    2. ' max' → logprob: -5.2552337646484375
    3. '               ' → logprob: -16.880233764648438
    4. '           ' → logprob: -17.005233764648438
    5. '                   ' → logprob: -18.755233764648438
    6. '	max' → logprob: -19.005233764648438
    7. '_max' → logprob: -19.255233764648438
    8. '
' → logprob: -20.005233764648438
    9. '[max' → logprob: -20.130233764648438
    10. '(max' → logprob: -20.380233764648438

Token 467: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.292907877039397e-06
    2. 'sum' → logprob: -12.75000286102295
    3. '_' → logprob: -15.62500286102295
    4. '_max' → logprob: -16.375003814697266
    5. '_SUM' → logprob: -18.375003814697266
    6. '_s' → logprob: -18.750003814697266
    7. ')' → logprob: -18.750003814697266
    8. ' sum' → logprob: -19.125003814697266
    9. '_sub' → logprob: -19.125003814697266
    10. '_set' → logprob: -19.500003814697266

Token 468: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04459906369447708
    2. ':
' → logprob: -3.1695990562438965
    3. '                   ' → logprob: -7.1695990562438965
    4. '               ' → logprob: -7.4195990562438965
    5. '           ' → logprob: -9.169599533081055
    6. '                       ' → logprob: -9.419599533081055
    7. '=' → logprob: -11.794599533081055
    8. '):
' → logprob: -11.794599533081055
    9. '                           ' → logprob: -12.294599533081055
    10. ',' → logprob: -12.794599533081055

Token 469: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0031089074909687042
    2. '                       ' → logprob: -6.503108978271484
    3. '               ' → logprob: -7.003108978271484
    4. '                    
' → logprob: -7.628108978271484
    5. '           ' → logprob: -9.378108978271484
    6. '
' → logprob: -10.003108978271484
    7. '                    ' → logprob: -11.128108978271484
    8. '                        
' → logprob: -11.628108978271484
    9. ' max' → logprob: -11.753108978271484
    10. '                  ' → logprob: -11.753108978271484

Token 470: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.38962021470069885
    2. ' max' → logprob: -1.3896201848983765
    3. '                   ' → logprob: -2.639620304107666
    4. '               ' → logprob: -6.639620304107666
    5. '                       ' → logprob: -7.264620304107666
    6. '           ' → logprob: -9.389619827270508
    7. '                    ' → logprob: -11.264619827270508
    8. '                ' → logprob: -12.014619827270508
    9. '```' → logprob: -12.139619827270508
    10. '
' → logprob: -12.639619827270508

Token 471: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.625001907348633
    3. '_max' → logprob: -14.625001907348633
    4. 'sum' → logprob: -15.125001907348633
    5. '                   ' → logprob: -16.750001907348633
    6. '_score' → logprob: -17.000001907348633
    7. '_s' → logprob: -17.125001907348633
    8. '_sub' → logprob: -17.750001907348633
    9. ' _' → logprob: -18.125001907348633
    10. '```' → logprob: -18.125001907348633

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740777611732483
    2. '=' → logprob: -0.9740777611732483
    3. ',' → logprob: -14.224078178405762
    4. ' ' → logprob: -16.599077224731445
    5. ' =
' → logprob: -17.724077224731445
    6. '    ' → logprob: -17.849077224731445
    7. '=max' → logprob: -17.849077224731445
    8. ')' → logprob: -18.099077224731445
    9. '=k' → logprob: -18.224077224731445
    10. '＝' → logprob: -18.474077224731445

Token 473: ' kad' (ID: 13283)
  Prédit: 'kad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kad' → logprob: -0.3869291841983795
    2. ' kad' → logprob: -1.1369291543960571
    3. 'k' → logprob: -9.886929512023926
    4. 'kod' → logprob: -13.386929512023926
    5. 'kd' → logprob: -13.511929512023926
    6. 'Kad' → logprob: -13.886929512023926
    7. ' Kad' → logprob: -14.511929512023926
    8. 'ked' → logprob: -15.511929512023926
    9. ' kd' → logprob: -15.511929512023926
    10. ' kard' → logprob: -15.636929512023926

Token 474: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -2.176947600673884e-05
    2. 'ana' → logprob: -11.250021934509277
    3. '_res' → logprob: -13.125021934509277
    4. '_' → logprob: -13.375021934509277
    5. 'ане' → logprob: -13.625021934509277
    6. 'anea' → logprob: -13.625021934509277
    7. 'anee' → logprob: -14.875021934509277
    8. '[' → logprob: -14.875021934509277
    9. 'a' → logprob: -15.250021934509277
    10. '
' → logprob: -15.500021934509277

Token 475: '_res' (ID: 10626)
  Prédit: '_res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -0.00014573395310435444
    2. 'res' → logprob: -8.87514591217041
    3. '_sum' → logprob: -12.75014591217041
    4. 'sum' → logprob: -14.00014591217041
    5. 'Res' → logprob: -14.37514591217041
    6. '._' → logprob: -14.75014591217041
    7. '.res' → logprob: -15.12514591217041
    8. '   ' → logprob: -15.62514591217041
    9. 'es' → logprob: -15.87514591217041
    10. '_' → logprob: -16.625144958496094

Token 476: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.0001217813478433527
    2. 'max' → logprob: -9.1251220703125
    3. '_max' → logprob: -12.7501220703125
    4. '_.' → logprob: -13.0001220703125
    5. ' .' → logprob: -13.5001220703125
    6. '.' → logprob: -13.7501220703125
    7. '	max' → logprob: -13.7501220703125
    8. ' max' → logprob: -14.0001220703125
    9. '._' → logprob: -14.2501220703125
    10. ',max' → logprob: -15.0001220703125

Token 477: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.76628842484206e-05
    2. 'sum' → logprob: -9.750067710876465
    3. 'Sum' → logprob: -12.375067710876465
    4. '_res' → logprob: -12.625067710876465
    5. '.sum' → logprob: -14.500067710876465
    6. '._' → logprob: -15.000067710876465
    7. '_result' → logprob: -15.875067710876465
    8. '_index' → logprob: -16.12506675720215
    9. '_SUM' → logprob: -16.37506675720215
    10. ' sum' → logprob: -16.50006675720215

Token 478: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3104710280895233
    2. '<|end|>' → logprob: -1.5604710578918457
    3. '               ' → logprob: -4.185471057891846
    4. '
' → logprob: -4.310471057891846
    5. 'return' → logprob: -5.185471057891846
    6. ',' → logprob: -5.185471057891846
    7. '       ' → logprob: -5.310471057891846
    8. '                ' → logprob: -5.560471057891846
    9. '                    ' → logprob: -5.935471057891846
    10. '        ' → logprob: -6.185471057891846

Token 479: '       ' (ID: 309)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.32967501878738403
    2. '       ' → logprob: -1.8296749591827393
    3. 'return' → logprob: -2.3296749591827393
    4. '<|end|>' → logprob: -4.204675197601318
    5. ' return' → logprob: -6.079675197601318
    6. '               ' → logprob: -6.329675197601318
    7. '        ' → logprob: -6.454675197601318
    8. '```' → logprob: -7.704675197601318
    9. '           ' → logprob: -7.829675197601318
    10. '                    ' → logprob: -8.20467472076416

Token 480: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01901351660490036
    2. 'return' (adapté à ' return') → logprob: -4.144013404846191
    3. '
' → logprob: -6.394013404846191
    4. ' return' → logprob: -7.769013404846191
    5. '   ' → logprob: -8.019013404846191
    6. '        
' → logprob: -8.644013404846191
    7. '                   ' → logprob: -8.769013404846191
    8. '               ' → logprob: -9.144013404846191
    9. '      ' → logprob: -10.394013404846191
    10. '                       ' → logprob: -10.769013404846191

Token 481: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6931471824645996
    2. 'max' → logprob: -0.6931471824645996
    3. '[max' → logprob: -19.943147659301758
    4. '(max' → logprob: -20.068147659301758
    5. '	max' → logprob: -20.943147659301758
    6. '_max' → logprob: -21.068147659301758
    7. ',max' → logprob: -22.068147659301758
    8. '=max' → logprob: -23.318147659301758
    9. ' ' → logprob: -24.068147659301758
    10. '
' → logprob: -24.818147659301758

Token 482: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -14.500001907348633
    3. 'sum' → logprob: -14.500001907348633
    4. '_s' → logprob: -15.750001907348633
    5. ' _' → logprob: -15.875001907348633
    6. '_max' → logprob: -15.875001907348633
    7. '._' → logprob: -16.000001907348633
    8. '```' → logprob: -16.000001907348633
    9. '_set' → logprob: -17.125001907348633
    10. '_score' → logprob: -17.250001907348633

Token 483: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 484: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: ' Input' (ID: 10090)
  Prédit: ' Max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Max' → logprob: -0.8787186741828918
    2. 'Max' → logprob: -1.253718614578247
    3. 'Matrix' → logprob: -2.128718614578247
    4. ' Matrix' → logprob: -2.378718614578247
    5. 'Test' → logprob: -3.628718614578247
    6. ' Test' → logprob: -4.503718852996826
    7. 'Solution' → logprob: -4.503718852996826
    8. ' Solution' → logprob: -4.753718852996826
    9. 'Square' → logprob: -5.628718852996826
    10. 'Diagonal' → logprob: -5.628718852996826

Token 486: 'Reader' (ID: 7171)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2515227794647217
    2. 'Reader' → logprob: -1.2515227794647217
    3. 'Parser' → logprob: -1.7515227794647217
    4. 'Handler' → logprob: -2.2515227794647217
    5. 'Processor' → logprob: -2.6265227794647217
    6. '():' → logprob: -3.2515227794647217
    7. 'Data' → logprob: -4.126523017883301
    8. 'Generator' → logprob: -5.126523017883301
    9. 'Provider' → logprob: -5.501523017883301
    10. 'Validator' → logprob: -6.376523017883301

Token 487: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005666146171279252
    2. ':
' → logprob: -7.500566482543945
    3. ' :' → logprob: -12.500566482543945
    4. ':def' → logprob: -12.750566482543945
    5. '():' → logprob: -13.250566482543945
    6. '(' → logprob: -13.500566482543945
    7. '<|end|>' → logprob: -13.625566482543945
    8. '):' → logprob: -14.000566482543945
    9. '(object' → logprob: -14.625566482543945
    10. ':

' → logprob: -15.000566482543945

Token 488: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004602199420332909
    2. ' def' → logprob: -5.504602432250977
    3. 'def' → logprob: -7.754602432250977
    4. 'import' → logprob: -9.754602432250977
    5. '	def' → logprob: -11.379602432250977
    6. ':' → logprob: -11.629602432250977
    7. '<|end|>' → logprob: -12.629602432250977
    8. '  ' → logprob: -13.004602432250977
    9. '    ' → logprob: -13.129602432250977
    10. '```' → logprob: -13.504602432250977

Token 489: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9603508710861206
    2. 'def' → logprob: -1.2103508710861206
    3. '@' (adapté à ' @') → logprob: -1.4603508710861206
    4. ' @' → logprob: -2.46035099029541
    5. '   ' → logprob: -6.83535099029541
    6. 'staticmethod' → logprob: -7.58535099029541
    7. 'import' → logprob: -12.96035099029541
    8. ' ' → logprob: -13.58535099029541
    9. ' static' → logprob: -13.96035099029541
    10. '	def' → logprob: -14.96035099029541

Token 490: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -2.963691804325208e-05
    2. 'static' → logprob: -10.500029563903809
    3. 'dat' → logprob: -13.375029563903809
    4. 'classmethod' → logprob: -14.625029563903809
    5. 'st' → logprob: -18.125030517578125
    6. 'stat' → logprob: -19.500030517578125
    7. 'property' → logprob: -19.875030517578125
    8. ' static' → logprob: -20.000030517578125
    9. 'Static' → logprob: -20.750030517578125
    10. '@' → logprob: -22.375030517578125

Token 491: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.037020280957221985
    2. ' def' → logprob: -3.787020206451416
    3. '   ' → logprob: -4.412020206451416
    4. '(' → logprob: -6.662020206451416
    5. '
' → logprob: -9.162020683288574
    6. '()' → logprob: -9.912020683288574
    7. ' ' → logprob: -11.162020683288574
    8. ':' → logprob: -11.287020683288574
    9. '(
' → logprob: -11.287020683288574
    10. '()
' → logprob: -11.412020683288574

Token 492: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012518597766757011
    2. ' def' → logprob: -4.387518405914307
    3. '   ' → logprob: -11.762518882751465
    4. '	def' → logprob: -15.012518882751465
    5. '_def' → logprob: -15.012518882751465
    6. '
' → logprob: -15.512518882751465
    7. '(def' → logprob: -15.762518882751465
    8. ' ' → logprob: -16.01251792907715
    9. '```' → logprob: -16.88751792907715
    10. ':def' → logprob: -17.38751792907715

Token 493: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00033546582562848926
    2. ' def' → logprob: -8.000335693359375
    3. 'read' → logprob: -18.500335693359375
    4. '   ' → logprob: -18.500335693359375
    5. 'from' → logprob: -20.625335693359375
    6. ' ' → logprob: -20.625335693359375
    7. 'import' → logprob: -20.750335693359375
    8. '
' → logprob: -21.250335693359375
    9. '	def' → logprob: -21.375335693359375
    10. 'method' → logprob: -21.750335693359375

Token 494: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.009831173345446587
    2. ' read' → logprob: -4.634830951690674
    3. ' readline' → logprob: -9.759831428527832
    4. 'from' → logprob: -11.884831428527832
    5. 'input' → logprob: -12.009831428527832
    6. 'parse' → logprob: -13.259831428527832
    7. ' input' → logprob: -14.009831428527832
    8. 'get' → logprob: -14.759831428527832
    9. '	read' → logprob: -14.759831428527832
    10. '.read' → logprob: -15.259831428527832

Token 495: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08787697553634644
    2. '():
' → logprob: -2.962877035140991
    3. '():' → logprob: -3.837877035140991
    4. '()>' → logprob: -6.587876796722412
    5. '(' → logprob: -6.712876796722412
    6. '()(' → logprob: -6.962876796722412
    7. '(n' → logprob: -7.087876796722412
    8. 'line' → logprob: -7.212876796722412
    9. '_line' → logprob: -7.337876796722412
    10. '_lines' → logprob: -7.587876796722412

Token 496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036526948679238558
    2. 'n' → logprob: -6.128652572631836
    3. 'import' → logprob: -7.253652572631836
    4. ' n' → logprob: -8.378652572631836
    5. '()' → logprob: -8.378652572631836
    6. '(n' → logprob: -9.253652572631836
    7. '```' → logprob: -9.253652572631836
    8. 'return' → logprob: -10.503652572631836
    9. ' import' → logprob: -10.878652572631836
    10. ' return' → logprob: -11.253652572631836

Token 497: ' import' (ID: 1588)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31386980414390564
    2. 'n' → logprob: -1.313869833946228
    3. ' import' → logprob: -7.938869953155518
    4. 'import' (adapté à ' import') → logprob: -8.43886947631836
    5. ' lines' → logprob: -10.68886947631836
    6. ' size' → logprob: -12.93886947631836
    7. ' data' → logprob: -12.93886947631836
    8. ' line' → logprob: -13.43886947631836
    9. ' return' → logprob: -13.56386947631836
    10. '       ' → logprob: -13.93886947631836

Token 498: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16022992134094238
    2. 'sys' → logprob: -1.9102299213409424
    3. '=sys' → logprob: -12.160229682922363
    4. '	sys' → logprob: -14.785229682922363
    5. '(sys' → logprob: -17.16023063659668
    6. '_sys' → logprob: -17.41023063659668
    7. '.sys' → logprob: -19.78523063659668
    8. 's' → logprob: -19.91023063659668
    9. 'json' → logprob: -20.16023063659668
    10. 'io' → logprob: -20.66023063659668

Token 499: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010136376367881894
    2. 'n' → logprob: -7.37601375579834
    3. '        
' → logprob: -9.25101375579834
    4. 'data' → logprob: -9.37601375579834
    5. 'input' → logprob: -9.37601375579834
    6. '
' → logprob: -10.12601375579834
    7. 'line' → logprob: -10.50101375579834
    8. ' lines' → logprob: -10.87601375579834
    9. ' line' → logprob: -11.50101375579834
    10. 'lines' → logprob: -12.25101375579834

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061876703053712845
    2. 'n' → logprob: -3.4368767738342285
    3. 'input' → logprob: -4.4368767738342285
    4. 'data' → logprob: -4.6868767738342285
    5. 'line' → logprob: -6.1868767738342285
    6. '        
' → logprob: -6.3118767738342285
    7. ' line' → logprob: -7.3118767738342285
    8. ' lines' → logprob: -7.6868767738342285
    9. '
' → logprob: -8.06187629699707
    10. ' input' → logprob: -8.06187629699707

Token 501: ' lines' (ID: 8698)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.9476459622383118
    2. ' data' → logprob: -1.822645902633667
    3. ' n' → logprob: -1.947645902633667
    4. ' lines' → logprob: -2.447645902633667
    5. 'n' → logprob: -2.697645902633667
    6. 'line' → logprob: -2.822645902633667
    7. '       ' → logprob: -3.322645902633667
    8. ' line' → logprob: -3.697645902633667
    9. 'lines' (adapté à ' lines') → logprob: -4.072646141052246
    10. 'input' → logprob: -4.572646141052246

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142026245594025
    2. '=' → logprob: -1.7014203071594238
    3. ' =
' → logprob: -13.576419830322266
    4. '()' → logprob: -13.826419830322266
    5. '=[]' → logprob: -14.201419830322266
    6. '=line' → logprob: -14.451419830322266
    7. '＝' → logprob: -14.576419830322266
    8. '   ' → logprob: -14.701419830322266
    9. '=sys' → logprob: -14.951419830322266
    10. ' ' → logprob: -15.201419830322266

Token 503: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011047935113310814
    2. ' sys' → logprob: -4.511047840118408
    3. '[' → logprob: -16.63604736328125
    4. '(sys' → logprob: -17.76104736328125
    5. '=sys' → logprob: -18.01104736328125
    6. '	sys' → logprob: -18.76104736328125
    7. ' [' → logprob: -20.26104736328125
    8. 'list' → logprob: -20.63604736328125
    9. '/sys' → logprob: -21.51104736328125
    10. '.sys' → logprob: -22.26104736328125

Token 504: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.739826181321405e-05
    2. '.' → logprob: -10.12504768371582
    3. 'stdin' → logprob: -12.62504768371582
    4. '.stdout' → logprob: -12.87504768371582
    5. '.std' → logprob: -14.25004768371582
    6. '.argv' → logprob: -14.50004768371582
    7. ' stdin' → logprob: -16.12504768371582
    8. ' .' → logprob: -16.25004768371582
    9. '(stdin' → logprob: -17.37504768371582
    10. '.readline' → logprob: -17.37504768371582

Token 505: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.20606669783592224
    2. '.readline' → logprob: -1.7060667276382446
    3. '.read' → logprob: -6.081066608428955
    4. 'read' → logprob: -6.581066608428955
    5. '.' → logprob: -6.956066608428955
    6. 'buffer' → logprob: -11.331067085266113
    7. '.buffer' → logprob: -12.581067085266113
    8. ' .' → logprob: -14.206067085266113
    9. '   ' → logprob: -14.706067085266113
    10. 'lines' → logprob: -14.956067085266113

Token 506: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02326621301472187
    2. '()' → logprob: -3.773266315460205
    3. 'lines' → logprob: -11.648265838623047
    4. '(' → logprob: -12.523265838623047
    5. '()
' → logprob: -12.773265838623047
    6. 'line' → logprob: -13.023265838623047
    7. '()\' → logprob: -13.898265838623047
    8. '_lines' → logprob: -14.398265838623047
    9. '()

' → logprob: -14.398265838623047
    10. 'ines' → logprob: -15.398265838623047

Token 507: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16022524237632751
    2. 'split' → logprob: -1.91022527217865
    3. 'rstrip' → logprob: -14.410224914550781
    4. 'decode' → logprob: -14.910224914550781
    5. '(split' → logprob: -16.66022491455078
    6. ' split' → logprob: -17.16022491455078
    7. ' strip' → logprob: -17.66022491455078
    8. '(strip' → logprob: -18.28522491455078
    9. 'read' → logprob: -18.91022491455078
    10. 'lines' → logprob: -19.03522491455078

Token 508: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0031813981477171183
    2. '()' → logprob: -5.753181457519531
    3. '(' → logprob: -12.878181457519531
    4. '()
' → logprob: -14.503181457519531
    5. 'split' → logprob: -15.003181457519531
    6. '()

' → logprob: -17.00318145751953
    7. '(),' → logprob: -17.12818145751953
    8. '()`' → logprob: -17.12818145751953
    9. ' ().' → logprob: -17.12818145751953
    10. '()\' → logprob: -17.25318145751953

Token 509: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -16.875
    3. '(split' → logprob: -17.5
    4. '```' → logprob: -20.125
    5. 'decode' → logprob: -20.375
    6. 'spl' → logprob: -21.375
    7. 'lines' → logprob: -22.125
    8. '.split' → logprob: -22.25
    9. 'strip' → logprob: -22.375
    10. 'rstrip' → logprob: -23.25

Token 510: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20363761484622955
    2. '('\' → logprob: -1.7036375999450684
    3. 'lines' → logprob: -6.328637599945068
    4. '()
' → logprob: -8.453638076782227
    5. '()\' → logprob: -8.953638076782227
    6. '("\' → logprob: -9.578638076782227
    7. '(' → logprob: -11.078638076782227
    8. '('' → logprob: -12.203638076782227
    9. '()[' → logprob: -13.078638076782227
    10. '()

' → logprob: -14.078638076782227

Token 511: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.1008713702030946e-06
    2. '\n' → logprob: -13.125001907348633
    3. 'lines' → logprob: -16.375001907348633
    4. 'newline' → logprob: -17.750001907348633
    5. '
' → logprob: -19.375001907348633
    6. ' n' → logprob: -19.625001907348633
    7. ''\' → logprob: -20.500001907348633
    8. '	n' → logprob: -21.000001907348633
    9. ''n' → logprob: -21.875001907348633
    10. '```' → logprob: -21.875001907348633

Token 512: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.05486682429909706
    2. ')' → logprob: -3.4298667907714844
    3. '')
' → logprob: -3.9298667907714844
    4. '       ' → logprob: -6.804866790771484
    5. ')
' → logprob: -8.679866790771484
    6. '')
' → logprob: -9.929866790771484
    7. '")' → logprob: -12.054866790771484
    8. ')')
' → logprob: -12.929866790771484
    9. ']' → logprob: -13.054866790771484
    10. ')
' → logprob: -13.304866790771484

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0560317188501358
    2. 'n' → logprob: -2.9310317039489746
    3. ' n' → logprob: -6.806031703948975
    4. 'num' → logprob: -10.556032180786133
    5. 'return' → logprob: -12.806032180786133
    6. '```' → logprob: -12.931032180786133
    7. '   ' → logprob: -13.681032180786133
    8. '        
' → logprob: -13.681032180786133
    9. '	n' → logprob: -14.056032180786133
    10. '           ' → logprob: -14.181032180786133

Token 514: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.688212614681106e-05
    2. '       ' → logprob: -11.250017166137695
    3. '```' → logprob: -13.000017166137695
    4. ' n' → logprob: -13.875017166137695
    5. '   ' → logprob: -15.250017166137695
    6. '
' → logprob: -15.500017166137695
    7. '        
' → logprob: -16.250017166137695
    8. 'num' → logprob: -16.875017166137695
    9. '``' → logprob: -16.875017166137695
    10. 'size' → logprob: -17.375017166137695

Token 515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06208162382245064
    2. '=' → logprob: -2.8120815753936768
    3. ',' → logprob: -9.812081336975098
    4. '=int' → logprob: -9.812081336975098
    5. ' =
' → logprob: -13.187081336975098
    6. ' ' → logprob: -14.687081336975098
    7. ' ,' → logprob: -14.812081336975098
    8. ')' → logprob: -14.937081336975098
    9. ' =
' → logprob: -15.187081336975098
    10. ' ' → logprob: -15.812081336975098

Token 516: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.615255839889869e-05
    2. ' int' → logprob: -9.250096321105957
    3. '[int' → logprob: -23.12509536743164
    4. '(int' → logprob: -23.62509536743164
    5. '   ' → logprob: -23.87509536743164
    6. 'len' → logprob: -24.00009536743164
    7. '=int' → logprob: -24.62509536743164
    8. '<int' → logprob: -25.37509536743164
    9. ' ' → logprob: -25.37509536743164
    10. '
' → logprob: -25.50009536743164

Token 517: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -1.3544423381972592e-05
    2. 'lines' → logprob: -11.25001335144043
    3. '(' → logprob: -14.87501335144043
    4. ' lines' → logprob: -16.62501335144043
    5. '	lines' → logprob: -18.62501335144043
    6. '(line' → logprob: -20.50001335144043
    7. 'Lines' → logprob: -21.25001335144043
    8. '(
' → logprob: -21.37501335144043
    9. '_lines' → logprob: -22.62501335144043
    10. ' (' → logprob: -22.87501335144043

Token 518: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5213274309644476e-05
    2. '0' → logprob: -11.125015258789062
    3. '[
' → logprob: -15.625015258789062
    4. ' [' → logprob: -17.125015258789062
    5. ')[' → logprob: -17.625015258789062
    6. '```' → logprob: -17.750015258789062
    7. '(' → logprob: -17.875015258789062
    8. '   ' → logprob: -18.000015258789062
    9. '1' → logprob: -18.125015258789062
    10. '\[' → logprob: -18.625015258789062

Token 519: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.500000953674316
    3. ' ' → logprob: -16.375
    4. '```' → logprob: -18.375
    5. '   ' → logprob: -19.25
    6. '۰' → logprob: -19.875
    7. '1' → logprob: -20.125
    8. '00' → logprob: -20.25
    9. '`' → logprob: -20.375
    10. '０' → logprob: -21.0625

Token 520: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.018219824880361557
    2. ')' → logprob: -4.018219947814941
    3. ']' → logprob: -10.143219947814941
    4. '].' → logprob: -11.518219947814941
    5. ' ])' → logprob: -11.893219947814941
    6. '])
' → logprob: -12.393219947814941
    7. ''])' → logprob: -13.018219947814941
    8. '.strip' → logprob: -13.143219947814941
    9. ')]' → logprob: -13.393219947814941
    10. '[' → logprob: -14.143219947814941

Token 521: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6974887251853943
    2. 'data' → logprob: -0.6974887251853943
    3. ' data' → logprob: -5.447488784790039
    4. '	data' → logprob: -11.447488784790039
    5. '[data' → logprob: -12.697488784790039
    6. '   ' → logprob: -12.947488784790039
    7. '<data' → logprob: -13.072488784790039
    8. '```' → logprob: -13.322488784790039
    9. '_data' → logprob: -13.822488784790039
    10. ',data' → logprob: -13.947488784790039

Token 522: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.12703730165958405
    2. ' data' → logprob: -2.127037286758423
    3. '       ' → logprob: -9.127037048339844
    4. '```' → logprob: -15.252037048339844
    5. '	data' → logprob: -16.002037048339844
    6. '[data' → logprob: -17.377037048339844
    7. '_data' → logprob: -17.377037048339844
    8. '.data' → logprob: -17.377037048339844
    9. '   ' → logprob: -17.752037048339844
    10. 'lines' → logprob: -18.252037048339844

Token 523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25211504101753235
    2. '=' → logprob: -1.50211501121521
    3. '=[]' → logprob: -8.627115249633789
    4. '=[' → logprob: -13.127115249633789
    5. '   ' → logprob: -14.127115249633789
    6. ')' → logprob: -14.127115249633789
    7. '=[]
' → logprob: -14.252115249633789
    8. ' =[' → logprob: -14.502115249633789
    9. '[]' → logprob: -15.002115249633789
    10. ',' → logprob: -15.252115249633789

Token 524: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14547781646251678
    2. '[list' → logprob: -2.145477771759033
    3. '[line' → logprob: -4.395477771759033
    4. '[[' → logprob: -6.145477771759033
    5. '[array' → logprob: -6.645477771759033
    6. '[List' → logprob: -7.145477771759033
    7. '[
' → logprob: -7.395477771759033
    8. ' [' → logprob: -7.395477771759033
    9. '[row' → logprob: -9.020478248596191
    10. '[int' → logprob: -9.145478248596191

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004386321175843477
    2. ' for' → logprob: -5.6293864250183105
    3. 'for' → logprob: -7.2543864250183105
    4. '   ' → logprob: -10.254385948181152
    5. '<|end|>' → logprob: -10.629385948181152
    6. '	for' → logprob: -11.379385948181152
    7. '	' → logprob: -12.629385948181152
    8. '```' → logprob: -13.754385948181152
    9. '	   ' → logprob: -13.879385948181152
    10. ',' → logprob: -14.129385948181152

Token 526: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22583137452602386
    2. '       ' → logprob: -1.725831389427185
    3. ' for' → logprob: -3.7258312702178955
    4. '   ' → logprob: -10.975831031799316
    5. '	for' → logprob: -11.600831031799316
    6. '```' → logprob: -13.100831031799316
    7. 'i' → logprob: -15.225831031799316
    8. ' ' → logprob: -15.350831031799316
    9. '<|end|>' → logprob: -15.475831031799316
    10. '	' → logprob: -16.475831985473633

Token 527: ' i' (ID: 575)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16052885353565216
    2. 'i' → logprob: -1.9105288982391357
    3. ' line' → logprob: -8.410529136657715
    4. ' i' → logprob: -9.410529136657715
    5. 'row' → logprob: -15.410529136657715
    6. 'l' → logprob: -17.2855281829834
    7. '	line' → logprob: -18.4105281829834
    8. '_line' → logprob: -19.7855281829834
    9. '(line' → logprob: -19.9105281829834
    10. '   ' → logprob: -21.1605281829834

Token 528: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31327328085899353
    2. 'in' → logprob: -1.313273310661316
    3. 'n' → logprob: -12.313273429870605
    4. 'range' → logprob: -13.063273429870605
    5. '1' → logprob: -13.313273429870605
    6. ' ' → logprob: -14.063273429870605
    7. '```' → logprob: -14.188273429870605
    8. '	in' → logprob: -14.688273429870605
    9. ',' → logprob: -14.813273429870605
    10. 'i' → logprob: -15.563273429870605

Token 529: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416350994259119
    2. ' range' → logprob: -4.264163494110107
    3. '	range' → logprob: -19.014163970947266
    4. '(range' → logprob: -19.264163970947266
    5. 'lines' → logprob: -19.889163970947266
    6. 'Range' → logprob: -21.764163970947266
    7. '   ' → logprob: -22.014163970947266
    8. ' ' → logprob: -22.014163970947266
    9. '_range' → logprob: -22.139163970947266
    10. 'ange' → logprob: -22.389163970947266

Token 530: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004306692280806601
    2. '1' → logprob: -7.750430583953857
    3. '(n' → logprob: -18.625431060791016
    4. '   ' → logprob: -18.875431060791016
    5. ' ' → logprob: -19.500431060791016
    6. 'n' → logprob: -20.125431060791016
    7. ' (' → logprob: -20.750431060791016
    8. '```' → logprob: -20.875431060791016
    9. 'from' → logprob: -20.875431060791016
    10. '[' → logprob: -21.125431060791016

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -18.5
    4. 'n' → logprob: -18.625
    5. '１' → logprob: -21.25
    6. '۱' → logprob: -22.5
    7. 'from' → logprob: -23.5
    8. 'i' → logprob: -23.75
    9. '(' → logprob: -24.125
    10. '১' → logprob: -24.5

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023691373644396663
    2. ',n' → logprob: -8.875236511230469
    3. ' ,' → logprob: -9.500236511230469
    4. ',len' → logprob: -10.875236511230469
    5. 'n' → logprob: -13.750236511230469
    6. ',
' → logprob: -13.875236511230469
    7. ',i' → logprob: -15.125236511230469
    8. '，' → logprob: -16.12523651123047
    9. ',num' → logprob: -16.25023651123047
    10. '<|end|>' → logprob: -16.25023651123047

Token 533: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.318681188422488e-05
    2. ' n' → logprob: -11.75001335144043
    3. 'len' → logprob: -12.50001335144043
    4. '1' → logprob: -13.37501335144043
    5. ' len' → logprob: -19.25001335144043
    6. '	n' → logprob: -20.12501335144043
    7. '(n' → logprob: -21.50001335144043
    8. ' ' → logprob: -21.87501335144043
    9. '<n' → logprob: -21.87501335144043
    10. ')n' → logprob: -22.00001335144043

Token 534: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0028254427015781403
    2. ' +' → logprob: -5.8778252601623535
    3. '1' → logprob: -11.127825736999512
    4. '+n' → logprob: -12.252825736999512
    5. 'n' → logprob: -14.377825736999512
    6. '   ' → logprob: -15.252825736999512
    7. '(n' → logprob: -16.252824783325195
    8. '+i' → logprob: -16.627824783325195
    9. ',' → logprob: -17.877824783325195
    10. '=' → logprob: -18.377824783325195

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. 'n' → logprob: -12.125005722045898
    3. ' ' → logprob: -14.750005722045898
    4. ' n' → logprob: -19.0000057220459
    5. '   ' → logprob: -20.6250057220459
    6. '```' → logprob: -21.1250057220459
    7. '
' → logprob: -21.7500057220459
    8. '<|end|>' → logprob: -21.8750057220459
    9. '  ' → logprob: -22.0000057220459
    10. '2' → logprob: -22.2500057220459

Token 536: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2896794378757477
    2. '):
' → logprob: -1.5396794080734253
    3. ':' → logprob: -3.414679527282715
    4. '       ' → logprob: -6.289679527282715
    5. ':
' → logprob: -6.664679527282715
    6. ',' → logprob: -7.289679527282715
    7. '           ' → logprob: -8.914679527282715
    8. '):
' → logprob: -9.664679527282715
    9. '   ' → logprob: -10.039679527282715
    10. ']:' → logprob: -10.664679527282715

Token 537: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034671444445848465
    2. '       ' → logprob: -5.878467082977295
    3. '<|end|>' → logprob: -8.503467559814453
    4. ' data' → logprob: -8.628467559814453
    5. 'data' → logprob: -8.878467559814453
    6. '   ' → logprob: -10.503467559814453
    7. '```' → logprob: -10.628467559814453
    8. '	       ' → logprob: -10.628467559814453
    9. ',' → logprob: -11.003467559814453
    10. '               ' → logprob: -11.503467559814453

Token 538: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.7359879612922668
    2. 'data' → logprob: -1.485987901687622
    3. ' row' → logprob: -1.985987901687622
    4. '           ' → logprob: -2.235987901687622
    5. ' data' → logprob: -2.985987901687622
    6. 'rows' → logprob: -10.485987663269043
    7. 'line' → logprob: -11.485987663269043
    8. '   ' → logprob: -11.985987663269043
    9. '	row' → logprob: -12.485987663269043
    10. '       ' → logprob: -12.735987663269043

Token 539: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133470118045807
    2. ' =' → logprob: -1.3133469820022583
    3. ')' → logprob: -9.938346862792969
    4. '=line' → logprob: -11.813346862792969
    5. ')=' → logprob: -12.063346862792969
    6. ']' → logprob: -12.688346862792969
    7. '_tokens' → logprob: -12.938346862792969
    8. 'tokens' → logprob: -12.938346862792969
    9. '.append' → logprob: -12.938346862792969
    10. '.' → logprob: -13.063346862792969

Token 540: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01105265598744154
    2. ' list' → logprob: -4.51105260848999
    3. '[list' → logprob: -12.261053085327148
    4. '[' → logprob: -16.38605308532715
    5. '	list' → logprob: -18.38605308532715
    6. 'lines' → logprob: -19.88605308532715
    7. '(list' → logprob: -19.88605308532715
    8. '=list' → logprob: -20.01105308532715
    9. ' [' → logprob: -20.51105308532715
    10. ':list' → logprob: -21.63605308532715

Token 541: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0003403495065867901
    2. 'map' → logprob: -8.000340461730957
    3. '(' → logprob: -12.250340461730957
    4. ' map' → logprob: -15.875340461730957
    5. '	map' → logprob: -17.25033950805664
    6. '(int' → logprob: -17.87533950805664
    7. ',map' → logprob: -18.00033950805664
    8. '.map' → logprob: -18.25033950805664
    9. '_map' → logprob: -18.50033950805664
    10. '(
' → logprob: -18.87533950805664

Token 542: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017275377176702023
    2. 'int' → logprob: -6.75172758102417
    3. '(' → logprob: -7.50172758102417
    4. '(
' → logprob: -13.126727104187012
    5. ' int' → logprob: -14.251727104187012
    6. '[int' → logprob: -14.376727104187012
    7. '<int' → logprob: -14.376727104187012
    8. '(lambda' → logprob: -14.376727104187012
    9. ',int' → logprob: -15.626727104187012
    10. '=int' → logprob: -16.001728057861328

Token 543: ',' (ID: 11)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.048877231776714325
    2. ',' → logprob: -3.048877239227295
    3. 'lines' → logprob: -9.048876762390137
    4. '(' → logprob: -9.298876762390137
    5. ' lines' → logprob: -10.298876762390137
    6. ' ,' → logprob: -10.548876762390137
    7. '	lines' → logprob: -11.798876762390137
    8. ' (' → logprob: -11.923876762390137
    9. ')' → logprob: -12.923876762390137
    10. '(parts' → logprob: -14.423876762390137

Token 544: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0019294669618830085
    2. ' lines' → logprob: -6.25192928314209
    3. '(lines' → logprob: -14.00192928314209
    4. '	lines' → logprob: -17.376930236816406
    5. 'line' → logprob: -21.001930236816406
    6. '.lines' → logprob: -21.126930236816406
    7. '-lines' → logprob: -21.751930236816406
    8. '_lines' → logprob: -22.001930236816406
    9. 'lin' → logprob: -24.001930236816406
    10. ' lignes' → logprob: -24.126930236816406

Token 545: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -13.000005722045898
    3. 'i' → logprob: -13.375005722045898
    4. '[
' → logprob: -14.375005722045898
    5. '(i' → logprob: -14.625005722045898
    6. ' [' → logprob: -15.500005722045898
    7. '   ' → logprob: -15.625005722045898
    8. ' i' → logprob: -16.6250057220459
    9. '[I' → logprob: -16.6250057220459
    10. '```' → logprob: -17.0000057220459

Token 546: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.7133641196996905e-05
    2. '][' → logprob: -11.62502670288086
    3. ']' → logprob: -12.00002670288086
    4. ' ].' → logprob: -12.37502670288086
    5. '.split' → logprob: -12.62502670288086
    6. '[' → logprob: -13.37502670288086
    7. '.strip' → logprob: -14.00002670288086
    8. ''].' → logprob: -14.12502670288086
    9. '().' → logprob: -15.50002670288086
    10. '1' → logprob: -15.50002670288086

Token 547: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16022665798664093
    2. 'strip' → logprob: -1.9102267026901245
    3. 'rstrip' → logprob: -13.160226821899414
    4. ' split' → logprob: -14.910226821899414
    5. ' strip' → logprob: -15.660226821899414
    6. '.strip' → logprob: -16.785226821899414
    7. '(split' → logprob: -16.785226821899414
    8. '.split' → logprob: -17.535226821899414
    9. 'spl' → logprob: -17.785226821899414
    10. '(strip' → logprob: -19.785226821899414

Token 548: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.451116051815916e-05
    2. '()' → logprob: -10.625024795532227
    3. ' ().' → logprob: -16.625024795532227
    4. '()
' → logprob: -18.250024795532227
    5. '.split' → logprob: -19.000024795532227
    6. '(' → logprob: -19.750024795532227
    7. 'split' → logprob: -20.000024795532227
    8. '().'' → logprob: -20.000024795532227
    9. '()['' → logprob: -21.375024795532227
    10. '   ' → logprob: -21.500024795532227

Token 549: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.0
    3. '(split' → logprob: -18.625
    4. '.split' → logprob: -18.75
    5. 'spl' → logprob: -20.125
    6. '_split' → logprob: -23.375
    7. 'plit' → logprob: -23.5
    8. 'rstrip' → logprob: -23.875
    9. 'strip' → logprob: -24.125
    10. 'sp' → logprob: -25.75

Token 550: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.006197299342602491
    2. '()' → logprob: -5.131197452545166
    3. '('' → logprob: -9.131196975708008
    4. '()))
' → logprob: -9.631196975708008
    5. '())' → logprob: -10.256196975708008
    6. '(' → logprob: -10.381196975708008
    7. '())))' → logprob: -11.256196975708008
    8. '(','' → logprob: -12.006196975708008
    9. '))' → logprob: -12.381196975708008
    10. '()));' → logprob: -12.631196975708008

Token 551: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.635164754698053e-05
    2. ')' → logprob: -10.125066757202148
    3. '<|end|>' → logprob: -11.625066757202148
    4. 'data' → logprob: -12.000066757202148
    5. '               ' → logprob: -13.000066757202148
    6. '       ' → logprob: -13.250066757202148
    7. ')data' → logprob: -13.250066757202148
    8. '          ' → logprob: -13.500066757202148
    9. ' data' → logprob: -13.500066757202148
    10. ',' → logprob: -14.250066757202148

Token 552: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.011767464689910412
    2. '           ' → logprob: -4.761767387390137
    3. ' data' → logprob: -5.761767387390137
    4. '       ' → logprob: -13.761767387390137
    5. '	data' → logprob: -15.386767387390137
    6. ')data' → logprob: -15.386767387390137
    7. '_data' → logprob: -15.511767387390137
    8. '   ' → logprob: -15.886767387390137
    9. '[data' → logprob: -16.136768341064453
    10. '<data' → logprob: -16.261768341064453

Token 553: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011173023842275143
    2. '.' → logprob: -4.511173248291016
    3. '.app' → logprob: -9.636173248291016
    4. ').' → logprob: -11.011173248291016
    5. '.ap' → logprob: -11.136173248291016
    6. '.extend' → logprob: -11.386173248291016
    7. '.Append' → logprob: -11.886173248291016
    8. ' .' → logprob: -13.136173248291016
    9. '.py' → logprob: -13.511173248291016
    10. '.add' → logprob: -13.511173248291016

Token 554: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0001801801408873871
    2. '(' → logprob: -8.7501802444458
    3. 'row' → logprob: -10.7501802444458
    4. '(
' → logprob: -15.2501802444458
    5. ',row' → logprob: -18.000179290771484
    6. ' row' → logprob: -18.375179290771484
    7. '=row' → logprob: -19.125179290771484
    8. '[row' → logprob: -19.125179290771484
    9. ' (' → logprob: -20.125179290771484
    10. '(rows' → logprob: -20.625179290771484

Token 555: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019688516855239868
    2. ')
' → logprob: -4.019688606262207
    3. '       ' → logprob: -6.644688606262207
    4. ')return' → logprob: -8.394688606262207
    5. '<|end|>' → logprob: -12.394688606262207
    6. ')\
' → logprob: -13.394688606262207
    7. ')
' → logprob: -13.769688606262207
    8. 'return' → logprob: -13.769688606262207
    9. '   ' → logprob: -14.519688606262207
    10. '
' → logprob: -14.769688606262207

Token 556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013460656628012657
    2. '
' → logprob: -6.751346111297607
    3. 'return' → logprob: -9.37634563446045
    4. '	' → logprob: -10.25134563446045
    5. '   ' → logprob: -10.87634563446045
    6. '```' → logprob: -11.00134563446045
    7. ' return' → logprob: -11.75134563446045
    8. '<|end|>' → logprob: -12.87634563446045
    9. '        
' → logprob: -13.12634563446045
    10. '           ' → logprob: -13.25134563446045

Token 557: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6941298842430115
    2. 'return' (adapté à ' return') → logprob: -0.6941298842430115
    3. ' return' → logprob: -6.944129943847656
    4. '   ' → logprob: -11.819129943847656
    5. '
' → logprob: -11.944129943847656
    6. '```' → logprob: -13.319129943847656
    7. '	return' → logprob: -13.694129943847656
    8. '      ' → logprob: -15.069129943847656
    9. '        
' → logprob: -15.194129943847656
    10. '	' → logprob: -15.569129943847656

Token 558: ' n' (ID: 297)
  Prédit: 'Matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Matrix' → logprob: -0.03136296197772026
    2. ' Matrix' → logprob: -3.531363010406494
    3. 'n' → logprob: -6.531363010406494
    4. ' n' → logprob: -8.906362533569336
    5. '(Matrix' → logprob: -11.406362533569336
    6. '	Matrix' → logprob: -12.031362533569336
    7. '(n' → logprob: -14.656362533569336
    8. 'data' → logprob: -14.781362533569336
    9. '_matrix' → logprob: -15.656362533569336
    10. ' data' → logprob: -15.906362533569336

Token 559: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015154577558860183
    2. ',data' → logprob: -6.5015153884887695
    3. ',
' → logprob: -12.00151538848877
    4. 'data' → logprob: -12.12651538848877
    5. ' ,' → logprob: -13.50151538848877
    6. '```' → logprob: -17.001516342163086
    7. 'return' → logprob: -18.126516342163086
    8. ' data' → logprob: -18.251516342163086
    9. ',\
' → logprob: -18.376516342163086
    10. 'Data' → logprob: -18.501516342163086

Token 560: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.004078401252627373
    2. ' data' → logprob: -5.504078388214111
    3. 'Data' → logprob: -17.754077911376953
    4. '	data' → logprob: -20.879077911376953
    5. '_data' → logprob: -21.504077911376953
    6. '$data' → logprob: -22.004077911376953
    7. '(data' → logprob: -22.254077911376953
    8. '[data' → logprob: -22.754077911376953
    9. '```' → logprob: -22.754077911376953
    10. 'd' → logprob: -22.879077911376953

Token 561: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.25299856066703796
    2. '
' → logprob: -1.8779985904693604
    3. '<|end|>' → logprob: -2.7529985904693604
    4. '```' → logprob: -5.877998352050781
    5. 'if' → logprob: -6.002998352050781
    6. 'n' → logprob: -7.252998352050781
    7. 'def' → logprob: -8.502998352050781
    8. '#' → logprob: -8.627998352050781
    9. '

' → logprob: -8.752998352050781
    10. '<|end|>' → logprob: -9.252998352050781

Token 562: 'class' (ID: 1444)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07178059965372086
    2. 'def' → logprob: -3.0717806816101074
    3. 'class' → logprob: -3.8217806816101074
    4. '```' → logprob: -6.946780681610107
    5. 'matrix' → logprob: -10.19678020477295
    6. '
' → logprob: -10.44678020477295
    7. ' if' → logprob: -12.82178020477295
    8. '#' → logprob: -13.19678020477295
    9. 'n' → logprob: -13.32178020477295
    10. '``' → logprob: -14.19678020477295

Token 563: ' Max' (ID: 10093)
  Prédit: 'Max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Max' → logprob: -0.8071714639663696
    2. 'Matrix' → logprob: -1.0571714639663696
    3. 'Main' → logprob: -2.43217134475708
    4. ' Max' → logprob: -3.43217134475708
    5. 'Solution' → logprob: -3.43217134475708
    6. 'Solver' → logprob: -4.05717134475708
    7. 'Output' → logprob: -4.30717134475708
    8. ' Matrix' → logprob: -4.55717134475708
    9. 'Runner' → logprob: -5.55717134475708
    10. ' Solver' → logprob: -5.93217134475708

Token 564: 'Sum' (ID: 17434)
  Prédit: 'Sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sub' → logprob: -0.0008267794037237763
    2. 'Sum' → logprob: -7.125826835632324
    3. 'Matrix' → logprob: -11.125826835632324
    4. '_sub' → logprob: -13.375826835632324
    5. 'Summ' → logprob: -13.500826835632324
    6. ' Sub' → logprob: -14.000826835632324
    7. 'Solver' → logprob: -14.125826835632324
    8. 'Square' → logprob: -14.750826835632324
    9. 'Max' → logprob: -14.750826835632324
    10. 'Finder' → logprob: -14.875826835632324

Token 565: 'Sequence' (ID: 17333)
  Prédit: 'Sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sub' → logprob: -0.08828957378864288
    2. 'Finder' → logprob: -2.588289499282837
    3. 'Matrix' → logprob: -5.338289737701416
    4. 'Rectangle' → logprob: -5.588289737701416
    5. 'Calculator' → logprob: -8.338289260864258
    6. 'Solver' → logprob: -8.338289260864258
    7. 'Square' → logprob: -8.588289260864258
    8. 'Rect' → logprob: -9.213289260864258
    9. 'Extractor' → logprob: -11.838289260864258
    10. '_Sub' → logprob: -12.088289260864258

Token 566: 'II' (ID: 6013)
  Prédit: 'Finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -0.2599097192287445
    2. ':' → logprob: -1.509909749031067
    3. ':
' → logprob: -4.884909629821777
    4. 'Searcher' → logprob: -9.509909629821777
    5. '(' → logprob: -9.634909629821777
    6. '{' → logprob: -9.759909629821777
    7. 'Extractor' → logprob: -9.884909629821777
    8. ' Finder' → logprob: -10.259909629821777
    9. '():' → logprob: -10.759909629821777
    10. 'Solver' → logprob: -11.634909629821777

Token 567: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024918261915445328
    2. ':
' → logprob: -6.0024919509887695
    3. '(' → logprob: -11.87749195098877
    4. ':def' → logprob: -12.75249195098877
    5. ':

' → logprob: -13.25249195098877
    6. '(Max' → logprob: -13.62749195098877
    7. ' :' → logprob: -14.62749195098877
    8. '<|end|>' → logprob: -15.25249195098877
    9. '():' → logprob: -15.37749195098877
    10. '(Main' → logprob: -15.50249195098877

Token 568: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010005502961575985
    2. ':' → logprob: -5.260005474090576
    3. ':
' → logprob: -5.385005474090576
    4. 'def' → logprob: -9.385005950927734
    5. ' def' → logprob: -9.510005950927734
    6. ':def' → logprob: -12.635005950927734
    7. '(' → logprob: -12.885005950927734
    8. '```' → logprob: -13.135005950927734
    9. 'class' → logprob: -13.260005950927734
    10. '<|end|>' → logprob: -13.635005950927734

Token 569: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.40071773529052734
    2. '   ' → logprob: -1.7757177352905273
    3. 'def' (adapté à ' def') → logprob: -1.9007177352905273
    4. '@' → logprob: -4.650717735290527
    5. ' @' → logprob: -6.400717735290527
    6. 'class' → logprob: -9.150717735290527
    7. 'staticmethod' → logprob: -11.650717735290527
    8. ':' → logprob: -13.150717735290527
    9. ' class' → logprob: -13.650717735290527
    10. '	def' → logprob: -13.650717735290527

Token 570: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7084446549415588
    2. 'def' → logprob: -1.458444595336914
    3. ' __' → logprob: -1.583444595336914
    4. ' def' → logprob: -3.333444595336914
    5. 'init' → logprob: -3.583444595336914
    6. '   ' → logprob: -5.958444595336914
    7. 'find' → logprob: -6.708444595336914
    8. ' find' → logprob: -7.333444595336914
    9. '```' → logprob: -7.583444595336914
    10. ' init' → logprob: -7.833444595336914

Token 571: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.023249439895153046
    2. 'f' → logprob: -4.648249626159668
    3. 'def' → logprob: -5.023249626159668
    4. '__' → logprob: -5.148249626159668
    5. '_init' → logprob: -8.023249626159668
    6. '```' → logprob: -8.273249626159668
    7. 'staticmethod' → logprob: -8.523249626159668
    8. 'nit' → logprob: -10.148249626159668
    9. 'class' → logprob: -10.523249626159668
    10. '   ' → logprob: -10.898249626159668

Token 572: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0011766550596803427
    2. '__' → logprob: -6.751176834106445
    3. '(self' → logprob: -12.626176834106445
    4. '__(
' → logprob: -13.001176834106445
    5. '__((' → logprob: -14.626176834106445
    6. '_(' → logprob: -15.501176834106445
    7. '(' → logprob: -15.751176834106445
    8. '__('' → logprob: -16.876176834106445
    9. 'self' → logprob: -17.126176834106445
    10. '__("' → logprob: -17.501176834106445

Token 573: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00019007037917617708
    2. ')' → logprob: -8.750189781188965
    3. ' self' → logprob: -11.000189781188965
    4. '
' → logprob: -11.875189781188965
    5. 'matrix' → logprob: -13.000189781188965
    6. '(self' → logprob: -13.125189781188965
    7. ',' → logprob: -13.875189781188965
    8. ')(' → logprob: -14.250189781188965
    9. ',self' → logprob: -14.500189781188965
    10. '<|end|>' → logprob: -15.125189781188965

Token 574: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018472475931048393
    2. 'self' → logprob: -6.501847267150879
    3. ',self' → logprob: -8.501847267150879
    4. '(self' → logprob: -9.126847267150879
    5. ' ,' → logprob: -11.376847267150879
    6. ' self' → logprob: -11.376847267150879
    7. '<|end|>' → logprob: -12.876847267150879
    8. ')' → logprob: -13.001847267150879
    9. ' (' → logprob: -13.501847267150879
    10. ',
' → logprob: -14.126847267150879

Token 575: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.453737710718997e-05
    2. ' self' → logprob: -10.750044822692871
    3. '       ' → logprob: -10.875044822692871
    4. '(self' → logprob: -13.000044822692871
    5. '
' → logprob: -14.500044822692871
    6. '	self' → logprob: -14.875044822692871
    7. '   ' → logprob: -15.000044822692871
    8. 'matrix' → logprob: -15.500044822692871
    9. '```' → logprob: -15.750044822692871
    10. '0' → logprob: -16.375043869018555

Token 576: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0676320418715477
    2. '       ' → logprob: -2.817631959915161
    3. ' self' → logprob: -5.19263219833374
    4. 'pass' → logprob: -9.567631721496582
    5. ' pass' → logprob: -11.317631721496582
    6. '	self' → logprob: -12.817631721496582
    7. '   ' → logprob: -12.942631721496582
    8. '0' → logprob: -13.567631721496582
    9. 's' → logprob: -14.067631721496582
    10. '
' → logprob: -15.067631721496582

Token 577: '.n' (ID: 1835)
  Prédit: '.matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matrix' → logprob: -0.25709521770477295
    2. '.max' → logprob: -1.757095217704773
    3. '.' → logprob: -3.3820953369140625
    4. '.input' → logprob: -5.1320953369140625
    5. '.data' → logprob: -5.3820953369140625
    6. '.m' → logprob: -6.2570953369140625
    7. '.n' → logprob: -6.2570953369140625
    8. '.sequence' → logprob: -6.6320953369140625
    9. '.maximum' → logprob: -7.5070953369140625
    10. '.best' → logprob: -7.6320953369140625

Token 578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520962357521057
    2. '=' → logprob: -1.502096176147461
    3. '<|end|>' → logprob: -9.627096176147461
    4. ' ' → logprob: -9.752096176147461
    5. ',' → logprob: -10.752096176147461
    6. ' =
' → logprob: -11.752096176147461
    7. '=None' → logprob: -12.002096176147461
    8. '  ' → logprob: -13.252096176147461
    9. ' =)' → logprob: -13.627096176147461
    10. '   ' → logprob: -13.752096176147461

Token 579: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008530299179255962
    2. ' ' → logprob: -5.008530139923096
    3. ' None' → logprob: -7.258530139923096
    4. 'None' → logprob: -7.258530139923096
    5. 'int' → logprob: -8.133530616760254
    6. ' int' → logprob: -9.133530616760254
    7. '[]' → logprob: -14.258530616760254
    8. '1' → logprob: -14.758530616760254
    9. '10' → logprob: -14.758530616760254
    10. '<|end|>' → logprob: -14.758530616760254

Token 580: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02611507475376129
    2. '<|end|>' → logprob: -3.7761151790618896
    3. 'self' → logprob: -6.5261149406433105
    4. '
' → logprob: -7.2761149406433105
    5. ' self' → logprob: -8.276115417480469
    6. ',' → logprob: -8.401115417480469
    7. '   ' → logprob: -9.276115417480469
    8. '<|end|>' → logprob: -10.276115417480469
    9. '        
' → logprob: -10.776115417480469
    10. ' ' → logprob: -11.151115417480469

Token 581: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03849916160106659
    2. 'self' → logprob: -3.288499116897583
    3. ' self' → logprob: -8.288498878479004
    4. '<|end|>' → logprob: -8.788498878479004
    5. '   ' → logprob: -10.288498878479004
    6. '	self' → logprob: -11.788498878479004
    7. '
' → logprob: -12.663498878479004
    8. 'data' → logprob: -13.288498878479004
    9. '           ' → logprob: -13.413498878479004
    10. ' ' → logprob: -13.663498878479004

Token 582: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00047356789582408965
    2. '       ' → logprob: -7.750473499298096
    3. ' self' → logprob: -10.250473976135254
    4. 'data' → logprob: -12.375473976135254
    5. '   ' → logprob: -13.375473976135254
    6. '
' → logprob: -14.250473976135254
    7. 's' → logprob: -14.625473976135254
    8. '	self' → logprob: -15.250473976135254
    9. '           ' → logprob: -15.500473976135254
    10. 'def' → logprob: -17.125473022460938

Token 583: '.matrix' (ID: 72944)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.6936158537864685
    2. '.matrix' → logprob: -0.6936158537864685
    3. 'matrix' → logprob: -8.568615913391113
    4. '.m' → logprob: -9.443615913391113
    5. ' matrix' → logprob: -10.193615913391113
    6. 'data' → logprob: -10.318615913391113
    7. '.Matrix' → logprob: -10.443615913391113
    8. ' .' → logprob: -10.443615913391113
    9. '.max' → logprob: -10.818615913391113
    10. '.mat' → logprob: -11.318615913391113

Token 584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6405410170555115
    2. '=' → logprob: -0.7655410170555115
    3. '<|end|>' → logprob: -5.765541076660156
    4. 'data' → logprob: -6.015541076660156
    5. '=None' → logprob: -6.890541076660156
    6. '   ' → logprob: -7.640541076660156
    7. '_data' → logprob: -7.890541076660156
    8. '       ' → logprob: -9.390541076660156
    9. ',' → logprob: -9.640541076660156
    10. '=data' → logprob: -9.890541076660156

Token 585: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0031777136027812958
    2. ' None' → logprob: -5.753177642822266
    3. '(None' → logprob: -17.378177642822266
    4. '=None' → logprob: -18.003177642822266
    5. '_None' → logprob: -19.378177642822266
    6. '   ' → logprob: -20.378177642822266
    7. ',None' → logprob: -21.003177642822266
    8. '
' → logprob: -21.003177642822266
    9. 'none' → logprob: -21.503177642822266
    10. '.None' → logprob: -21.878177642822266

Token 586: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06383464485406876
    2. '   ' → logprob: -2.8138346672058105
    3. '<|end|>' → logprob: -6.5638346672058105
    4. '    
' → logprob: -7.9388346672058105
    5. '

' → logprob: -9.938834190368652
    6. '<|end|>' → logprob: -11.188834190368652
    7. 'def' → logprob: -11.438834190368652
    8. '        
' → logprob: -12.063834190368652
    9. '       ' → logprob: -12.438834190368652
    10. ' 
' → logprob: -12.438834190368652

Token 587: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 588: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0881984531879425
    2. '   ' → logprob: -2.58819842338562
    3. ' def' → logprob: -5.338198661804199
    4. '
' → logprob: -5.588198661804199
    5. 'self' (adapté à ' self') → logprob: -7.713198661804199
    6. '       ' → logprob: -8.4631986618042
    7. '	def' → logprob: -10.3381986618042
    8. '    
' → logprob: -11.7131986618042
    9. 'data' → logprob: -11.8381986618042
    10. '```' → logprob: -12.4631986618042

Token 589: '.find' (ID: 4231)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.07751695066690445
    2. 'max' → logprob: -3.327517032623291
    3. ' max' → logprob: -4.452517032623291
    4. '.find' → logprob: -4.452517032623291
    5. ' .' → logprob: -5.577517032623291
    6. '.result' → logprob: -5.702517032623291
    7. 'result' → logprob: -6.952517032623291
    8. 'finder' → logprob: -6.952517032623291
    9. '.' → logprob: -7.077517032623291
    10. '.best' → logprob: -7.327517032623291

Token 590: 'er' (ID: 259)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.03859046474099159
    2. 'er' → logprob: -3.288590431213379
    3. 'max' → logprob: -8.038590431213379
    4. '_' → logprob: -8.538590431213379
    5. 'Max' → logprob: -11.538590431213379
    6. '__' → logprob: -11.788590431213379
    7. '_MAX' → logprob: -12.663590431213379
    8. '_Max' → logprob: -13.038590431213379
    9. '_method' → logprob: -13.538590431213379
    10. 'ing' → logprob: -14.163590431213379

Token 591: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14269261062145233
    2. ' =' → logprob: -2.0176925659179688
    3. 'er' → logprob: -12.392692565917969
    4. '<|end|>' → logprob: -12.767692565917969
    5. '_' → logprob: -13.017692565917969
    6. '=None' → logprob: -13.142692565917969
    7. ' ' → logprob: -13.142692565917969
    8. '.' → logprob: -13.517692565917969
    9. '   ' → logprob: -13.642692565917969
    10. ')' → logprob: -14.392692565917969

Token 592: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.080032467842102
    2. 'None' → logprob: -1.080032467842102
    3. ' Max' → logprob: -1.830032467842102
    4. 'Max' → logprob: -1.830032467842102
    5. '	Max' → logprob: -11.955032348632812
    6. ' ' → logprob: -12.705032348632812
    7. '0' → logprob: -13.705032348632812
    8. '_Max' → logprob: -14.080032348632812
    9. '(None' → logprob: -14.330032348632812
    10. '<|end|>' → logprob: -14.455032348632812

Token 593: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31568464636802673
    2. '
' → logprob: -1.3156846761703491
    3. '<|end|>' → logprob: -6.565684795379639
    4. '    
' → logprob: -7.065684795379639
    5. '<|end|>' → logprob: -10.44068431854248
    6. ' def' → logprob: -10.56568431854248
    7. '        
' → logprob: -10.81568431854248
    8. 'def' → logprob: -11.06568431854248
    9. '```' → logprob: -11.06568431854248
    10. '	def' → logprob: -11.81568431854248

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034525249153375626
    2. '
' → logprob: -3.534525156021118
    3. ' def' → logprob: -5.784525394439697
    4. '    
' → logprob: -7.284525394439697
    5. 'def' → logprob: -7.409525394439697
    6. '```' → logprob: -8.909524917602539
    7. '<|end|>' → logprob: -8.909524917602539
    8. '	def' → logprob: -9.909524917602539
    9. ' 
' → logprob: -10.409524917602539
    10. '        
' → logprob: -11.534524917602539

Token 595: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16044722497463226
    2. ' def' → logprob: -1.9104472398757935
    3. '   ' → logprob: -8.410447120666504
    4. '	def' → logprob: -14.785447120666504
    5. '
' → logprob: -16.78544807434082
    6. ' ' → logprob: -17.03544807434082
    7. '```' → logprob: -18.03544807434082
    8. '  ' → logprob: -18.78544807434082
    9. '<|end|>' → logprob: -18.78544807434082
    10. 'de' → logprob: -19.16044807434082

Token 596: ' execute' (ID: 15792)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.2924356162548065
    2. 'run' → logprob: -1.542435646057129
    3. 'initialize' → logprob: -4.792435646057129
    4. ' load' → logprob: -5.042435646057129
    5. 'load' → logprob: -5.167435646057129
    6. ' initialize' → logprob: -5.292435646057129
    7. 'read' → logprob: -5.292435646057129
    8. 'setup' → logprob: -5.542435646057129
    9. ' read' → logprob: -6.292435646057129
    10. ' setup' → logprob: -6.667435646057129

Token 597: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012584884651005268
    2. '(' → logprob: -4.387584686279297
    3. '(
' → logprob: -10.637584686279297
    4. ' (' → logprob: -10.762584686279297
    5. '()' → logprob: -10.887584686279297
    6. '(s' → logprob: -12.387584686279297
    7. 'self' → logprob: -12.887584686279297
    8. '   ' → logprob: -13.762584686279297
    9. '```' → logprob: -14.637584686279297
    10. '(Self' → logprob: -14.762584686279297

Token 598: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014078998006880283
    2. ',' → logprob: -4.6390790939331055
    3. '):
' → logprob: -5.6390790939331055
    4. 'self' → logprob: -7.3890790939331055
    5. '():' → logprob: -9.639079093933105
    6. '(self' → logprob: -10.639079093933105
    7. ',self' → logprob: -11.014079093933105
    8. ' ):' → logprob: -11.639079093933105
    9. ')' → logprob: -12.139079093933105
    10. '):
' → logprob: -12.389079093933105

Token 599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015278366627171636
    2. 'n' → logprob: -6.626527786254883
    3. ' n' → logprob: -9.626527786254883
    4. '```' → logprob: -9.876527786254883
    5. '        
' → logprob: -10.376527786254883
    6. '<|end|>' → logprob: -10.626527786254883
    7. ',' → logprob: -11.751527786254883
    8. '{
' → logprob: -12.751527786254883
    9. 'data' → logprob: -12.876527786254883
    10. 'self' → logprob: -13.001527786254883

Token 600: ' self' (ID: 1051)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008910943870432675
    2. '       ' → logprob: -7.750891208648682
    3. 'self' (adapté à ' self') → logprob: -7.750891208648682
    4. ' n' → logprob: -10.500890731811523
    5. '```' → logprob: -13.125890731811523
    6. 'import' → logprob: -15.000890731811523
    7. ' self' → logprob: -16.125890731811523
    8. '	n' → logprob: -17.625890731811523
    9. '   ' → logprob: -17.875890731811523
    10. '_n' → logprob: -18.375890731811523

Token 601: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -1.2948405128554441e-05
    2. 'self' → logprob: -12.25001335144043
    3. 'n' → logprob: -12.75001335144043
    4. '```' → logprob: -13.25001335144043
    5. '.' → logprob: -13.50001335144043
    6. ' .' → logprob: -13.75001335144043
    7. '       ' → logprob: -15.12501335144043
    8. '   ' → logprob: -15.12501335144043
    9. '().' → logprob: -15.62501335144043
    10. '
' → logprob: -16.75001335144043

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030829108436591923
    2. ',self' → logprob: -8.2503080368042
    3. ' ,' → logprob: -10.0003080368042
    4. '=' → logprob: -15.2503080368042
    5. '‌,' → logprob: -15.2503080368042
    6. ' =' → logprob: -15.3753080368042
    7. ',None' → logprob: -15.3753080368042
    8. 'self' → logprob: -15.8753080368042
    9. '_,' → logprob: -16.250308990478516
    10. ',
' → logprob: -16.500308990478516

Token 603: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.31727465987205505
    2. ' data' → logprob: -1.3172746896743774
    3. 'self' → logprob: -5.817274570465088
    4. ' self' → logprob: -7.317274570465088
    5. '<|end|>' → logprob: -7.942274570465088
    6. '_data' → logprob: -12.817275047302246
    7. '       ' → logprob: -13.942275047302246
    8. ' =' → logprob: -14.067275047302246
    9. '=data' → logprob: -14.442275047302246
    10. ' ' → logprob: -14.442275047302246

Token 604: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975071594119072
    2. ' =' → logprob: -3.5297508239746094
    3. '=self' → logprob: -16.40475082397461
    4. '＝' → logprob: -17.52975082397461
    5. '<|end|>' → logprob: -17.77975082397461
    6. '=}' → logprob: -18.65475082397461
    7. '_=' → logprob: -18.77975082397461
    8. ' ' → logprob: -19.77975082397461
    9. ')=' → logprob: -19.77975082397461
    10. '=data' → logprob: -20.15475082397461

Token 605: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.004078401252627373
    2. ' Input' → logprob: -5.504078388214111
    3. '	Input' → logprob: -18.754077911376953
    4. '_Input' → logprob: -21.379077911376953
    5. '\Input' → logprob: -21.629077911376953
    6. '<Input' → logprob: -21.879077911376953
    7. '_input' → logprob: -22.004077911376953
    8. 'self' → logprob: -22.879077911376953
    9. '   ' → logprob: -23.129077911376953
    10. '       ' → logprob: -23.254077911376953

Token 606: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -3.128163257315464e-07
    2. '.Reader' → logprob: -15.5
    3. '_reader' → logprob: -17.125
    4. ' Reader' → logprob: -17.625
    5. 'reader' → logprob: -19.375
    6. '.reader' → logprob: -20.625
    7. 'Readers' → logprob: -21.0
    8. '-reader' → logprob: -21.5
    9. 'Receiver' → logprob: -22.0
    10. 'Re' → logprob: -22.625

Token 607: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -13.500001907348633
    3. ' .' → logprob: -16.875001907348633
    4. 'read' → logprob: -19.625001907348633
    5. '.readline' → logprob: -20.125001907348633
    6. '().' → logprob: -20.500001907348633
    7. '.Read' → logprob: -21.750001907348633
    8. '.readlines' → logprob: -22.000001907348633
    9. '```' → logprob: -22.625001907348633
    10. '.write' → logprob: -22.875001907348633

Token 608: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023251067847013474
    2. '()
' → logprob: -3.7732510566711426
    3. '()
' → logprob: -12.2732515335083
    4. '()

' → logprob: -14.5232515335083
    5. '()`' → logprob: -15.8982515335083
    6. '()\' → logprob: -16.273250579833984
    7. ' ()' → logprob: -16.398250579833984
    8. '()<' → logprob: -17.273250579833984
    9. '(' → logprob: -17.523250579833984
    10. '();' → logprob: -18.648250579833984

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005582740413956344
    2. 'self' → logprob: -7.625558376312256
    3. '
' → logprob: -9.875557899475098
    4. ' self' → logprob: -11.625557899475098
    5. '        
' → logprob: -12.375557899475098
    6. '```' → logprob: -12.750557899475098
    7. '<|end|>' → logprob: -13.500557899475098
    8. '   ' → logprob: -14.000557899475098
    9. '           ' → logprob: -16.500558853149414
    10. '​' → logprob: -16.875558853149414

Token 610: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.14743323624134064
    2. '       ' → logprob: -2.147433280944824
    3. ' self' → logprob: -3.897433280944824
    4. '   ' → logprob: -13.397433280944824
    5. '```' → logprob: -14.522433280944824
    6. '	self' → logprob: -15.272433280944824
    7. '        
' → logprob: -16.647432327270508
    8. ' ' → logprob: -16.772432327270508
    9. '           ' → logprob: -17.522432327270508
    10. '
' → logprob: -18.022432327270508

Token 611: '.matrix' (ID: 72944)
  Prédit: '.matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matrix' → logprob: -3.292907877039397e-06
    2. '.' → logprob: -13.12500286102295
    3. 'matrix' → logprob: -14.75000286102295
    4. ' .' → logprob: -14.75000286102295
    5. '.n' → logprob: -15.12500286102295
    6. '.m' → logprob: -16.875003814697266
    7. '	matrix' → logprob: -17.750003814697266
    8. '.mat' → logprob: -17.875003814697266
    9. '.Matrix' → logprob: -17.875003814697266
    10. '.vector' → logprob: -19.125003814697266

Token 612: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575939416885376
    2. '=' → logprob: -0.825939416885376
    3. '=create' → logprob: -19.325939178466797
    4. '＝' → logprob: -19.575939178466797
    5. '=
' → logprob: -19.950939178466797
    6. ' =
' → logprob: -20.075939178466797
    7. '<|end|>' → logprob: -20.075939178466797
    8. ' ' → logprob: -20.575939178466797
    9. '=

' → logprob: -20.700939178466797
    10. '=new' → logprob: -20.950939178466797

Token 613: ' Matrix' (ID: 23226)
  Prédit: 'Matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Matrix' → logprob: -0.004078997299075127
    2. ' Matrix' → logprob: -5.5040788650512695
    3. '(Matrix' → logprob: -14.87907886505127
    4. '	Matrix' → logprob: -15.37907886505127
    5. '.Matrix' → logprob: -19.629079818725586
    6. '_matrix' → logprob: -20.379079818725586
    7. '   ' → logprob: -21.004079818725586
    8. 'Mat' → logprob: -21.129079818725586
    9. ' ' → logprob: -21.629079818725586
    10. '
' → logprob: -22.254079818725586

Token 614: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.15310683415737e-05
    2. '(' → logprob: -10.750021934509277
    3. '(
' → logprob: -17.37502098083496
    4. ' (' → logprob: -17.50002098083496
    5. '(this' → logprob: -18.37502098083496
    6. '(s' → logprob: -19.25002098083496
    7. 'self' → logprob: -19.87502098083496
    8. ' self' → logprob: -20.37502098083496
    9. '(sel' → logprob: -20.62502098083496
    10. '(se' → logprob: -21.00002098083496

Token 615: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -7.107425062713446e-06
    2. ',' → logprob: -13.000006675720215
    3. 'n' → logprob: -13.125006675720215
    4. 'self' → logprob: -13.750006675720215
    5. '.' → logprob: -13.875006675720215
    6. ',n' → logprob: -14.625006675720215
    7. ' .' → logprob: -16.75000762939453
    8. ' self' → logprob: -17.37500762939453
    9. '(n' → logprob: -17.75000762939453
    10. ')' → logprob: -17.87500762939453

Token 616: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.860340752406046e-05
    2. ',data' → logprob: -9.8750581741333
    3. ' ,' → logprob: -11.8750581741333
    4. 'data' → logprob: -15.7500581741333
    5. ',
' → logprob: -17.250059127807617
    6. ')' → logprob: -17.750059127807617
    7. '),' → logprob: -18.000059127807617
    8. ' data' → logprob: -18.875059127807617
    9. '‌,' → logprob: -19.500059127807617
    10. '```' → logprob: -19.500059127807617

Token 617: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3868710398674011
    2. ' data' → logprob: -1.136871099472046
    3. '[data' → logprob: -17.886871337890625
    4. ')data' → logprob: -18.261871337890625
    5. '(data' → logprob: -19.136871337890625
    6. '	data' → logprob: -19.261871337890625
    7. ' ' → logprob: -19.386871337890625
    8. '
' → logprob: -19.636871337890625
    9. 'dat' → logprob: -19.636871337890625
    10. '_data' → logprob: -19.886871337890625

Token 618: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759726762771606
    2. ')
' → logprob: -0.8259726762771606
    3. '       ' → logprob: -10.825972557067871
    4. ')
' → logprob: -11.325972557067871
    5. ')

' → logprob: -14.575972557067871
    6. '<|end|>' → logprob: -15.325972557067871
    7. ' )
' → logprob: -15.700972557067871
    8. '),' → logprob: -16.325973510742188
    9. ' )' → logprob: -16.450973510742188
    10. '   ' → logprob: -17.200973510742188

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013452349230647087
    2. 'self' → logprob: -6.626345157623291
    3. ' self' → logprob: -11.62634563446045
    4. '   ' → logprob: -11.62634563446045
    5. '
' → logprob: -14.12634563446045
    6. '<|end|>' → logprob: -14.75134563446045
    7. '           ' → logprob: -15.62634563446045
    8. '      ' → logprob: -16.626344680786133
    9. '```' → logprob: -16.751344680786133
    10. '        
' → logprob: -17.126344680786133

Token 620: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5761326551437378
    2. '       ' → logprob: -0.8261326551437378
    3. ' self' → logprob: -8.576132774353027
    4. '   ' → logprob: -12.326132774353027
    5. '	self' → logprob: -16.07613182067871
    6. '           ' → logprob: -17.07613182067871
    7. ' ' → logprob: -17.45113182067871
    8. '      ' → logprob: -17.70113182067871
    9. '```' → logprob: -17.82613182067871
    10. '[self' → logprob: -18.32613182067871

Token 621: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -2.935296834039036e-06
    2. 'find' → logprob: -14.00000286102295
    3. 'finder' → logprob: -14.12500286102295
    4. '.' → logprob: -14.25000286102295
    5. '.findall' → logprob: -14.50000286102295
    6. ' .' → logprob: -16.750003814697266
    7. '=find' → logprob: -16.875003814697266
    8. '
' → logprob: -16.875003814697266
    9. '.f' → logprob: -18.250003814697266
    10. '   ' → logprob: -18.250003814697266

Token 622: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -6.704273118884885e-07
    2. 'r' → logprob: -15.750000953674316
    3. 'der' → logprob: -15.750000953674316
    4. 'ter' → logprob: -15.875000953674316
    5. '       ' → logprob: -16.125
    6. '_er' → logprob: -17.625
    7. '_' → logprob: -17.75
    8. '__' → logprob: -17.75
    9. 'e' → logprob: -17.875
    10. '   ' → logprob: -19.0

Token 623: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519313097000122
    2. '=' → logprob: -1.5019313097000122
    3. '.=' → logprob: -13.626931190490723
    4. '.' → logprob: -14.251931190490723
    5. '=find' → logprob: -15.001931190490723
    6. '.find' → logprob: -17.25193214416504
    7. '=create' → logprob: -17.37693214416504
    8. '＝' → logprob: -18.62693214416504
    9. '=new' → logprob: -19.00193214416504
    10. ' ' → logprob: -19.12693214416504

Token 624: ' Max' (ID: 10093)
  Prédit: 'Max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Max' → logprob: -0.0001584850688232109
    2. ' Max' → logprob: -8.750158309936523
    3. '(Max' → logprob: -19.250158309936523
    4. '	Max' → logprob: -20.375158309936523
    5. '_Max' → logprob: -20.875158309936523
    6. 'max' → logprob: -22.750158309936523
    7. '
' → logprob: -23.000158309936523
    8. ' ' → logprob: -23.125158309936523
    9. '   ' → logprob: -23.125158309936523
    10. 'MAX' → logprob: -23.625158309936523

Token 625: 'Sub' (ID: 3638)
  Prédit: 'Sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sub' → logprob: -3.128163257315464e-07
    2. ' Sub' → logprob: -15.5
    3. 'Sum' → logprob: -16.75
    4. 'sub' → logprob: -16.875
    5. '_sub' → logprob: -18.75
    6. '(Sub' → logprob: -20.125
    7. 'S' → logprob: -20.625
    8. '
' → logprob: -20.75
    9. '_Sub' → logprob: -20.75
    10. '```' → logprob: -21.25

Token 626: 'matrix' (ID: 37307)
  Prédit: 'matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -2.5776860184123507e-06
    2. 'Sub' → logprob: -13.50000286102295
    3. 'Sum' → logprob: -14.75000286102295
    4. 'atrix' → logprob: -14.75000286102295
    5. 'mat' → logprob: -15.25000286102295
    6. ' matrix' → logprob: -16.875001907348633
    7. '(matrix' → logprob: -17.500001907348633
    8. 'sum' → logprob: -17.875001907348633
    9. 'Matrix' → logprob: -18.000001907348633
    10. 'max' → logprob: -18.375001907348633

Token 627: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -2.1008713702030946e-06
    2. 'Finder' → logprob: -13.875001907348633
    3. 'sum' → logprob: -14.500001907348633
    4. 'S' → logprob: -14.750001907348633
    5. 'Find' → logprob: -16.000001907348633
    6. 'Summ' → logprob: -17.875001907348633
    7. '_sum' → logprob: -18.125001907348633
    8. ' Sum' → logprob: -18.375001907348633
    9. 'Su' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.500001907348633

Token 628: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -3.128163257315464e-07
    2. 'Fetcher' → logprob: -15.875
    3. 'Find' → logprob: -16.625
    4. 'F' → logprob: -16.875
    5. ' Finder' → logprob: -16.875
    6. 'finder' → logprob: -18.125
    7. 'Fi' → logprob: -19.875
    8. 'Searcher' → logprob: -19.875
    9. 'Founder' → logprob: -20.25
    10. 'Follower' → logprob: -20.5

Token 629: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.842555426876061e-06
    2. '(
' → logprob: -12.750004768371582
    3. '(' → logprob: -13.250004768371582
    4. '(this' → logprob: -16.1250057220459
    5. 'self' → logprob: -18.5000057220459
    6. '(matrix' → logprob: -19.3750057220459
    7. '(sel' → logprob: -19.7500057220459
    8. '(

' → logprob: -20.1250057220459
    9. ' (' → logprob: -20.3750057220459
    10. '(s' → logprob: -20.6250057220459

Token 630: '.matrix' (ID: 72944)
  Prédit: '.matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matrix' → logprob: -3.054500666621607e-06
    2. 'matrix' → logprob: -12.87500286102295
    3. '.' → logprob: -15.25000286102295
    4. ' .' → logprob: -16.000003814697266
    5. '	matrix' → logprob: -18.125003814697266
    6. '.m' → logprob: -18.500003814697266
    7. '(matrix' → logprob: -19.125003814697266
    8. ' matrix' → logprob: -19.250003814697266
    9. ').' → logprob: -19.375003814697266
    10. '.vector' → logprob: -19.500003814697266

Token 631: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4788321852684021
    2. ')' → logprob: -0.9788321852684021
    3. '()
' → logprob: -5.728832244873047
    4. '       ' → logprob: -7.603832244873047
    5. '()' → logprob: -7.978832244873047
    6. ').' → logprob: -9.103832244873047
    7. ' )
' → logprob: -9.228832244873047
    8. ' ' → logprob: -9.228832244873047
    9. '   ' → logprob: -9.353832244873047
    10. '())
' → logprob: -9.478832244873047

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026711849495768547
    2. 'result' → logprob: -4.276711940765381
    3. 'print' → logprob: -4.901711940765381
    4. 'return' → logprob: -5.401711940765381
    5. 'max' → logprob: -7.776711940765381
    6. '
' → logprob: -10.276711463928223
    7. '   ' → logprob: -10.401711463928223
    8. '```' → logprob: -10.901711463928223
    9. ' result' → logprob: -11.526711463928223
    10. ' return' → logprob: -12.151711463928223

Token 633: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.27135711908340454
    2. 'result' → logprob: -1.5213570594787598
    3. 'max' → logprob: -4.02135705947876
    4. '       ' → logprob: -6.77135705947876
    5. 'return' → logprob: -8.771357536315918
    6. ' print' → logprob: -12.646357536315918
    7. 'maximum' → logprob: -12.646357536315918
    8. 'res' → logprob: -13.271357536315918
    9. ' result' → logprob: -13.271357536315918
    10. '```' → logprob: -15.521357536315918

Token 634: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004078878089785576
    2. '=' → logprob: -5.5040788650512695
    3. '_' → logprob: -15.62907886505127
    4. ' ' → logprob: -15.75407886505127
    5. ')' → logprob: -18.004079818725586
    6. ' =)' → logprob: -18.004079818725586
    7. '.' → logprob: -18.254079818725586
    8. '	' → logprob: -18.254079818725586
    9. ' ' → logprob: -18.504079818725586
    10. ' =
' → logprob: -18.504079818725586

Token 635: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47407710552215576
    2. 'self' → logprob: -0.9740771055221558
    3. '       ' → logprob: -16.349077224731445
    4. '	self' → logprob: -18.849077224731445
    5. '(self' → logprob: -19.724077224731445
    6. '[self' → logprob: -20.599077224731445
    7. '=self' → logprob: -21.099077224731445
    8. '   ' → logprob: -21.224077224731445
    9. '           ' → logprob: -21.349077224731445
    10. '        
' → logprob: -22.474077224731445

Token 636: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -15.000000953674316
    3. ' .' → logprob: -15.750000953674316
    4. 'finder' → logprob: -16.625
    5. '.findall' → logprob: -16.875
    6. '.get' → logprob: -17.125
    7. '
' → logprob: -17.5
    8. '.
' → logprob: -18.625
    9. '.fin' → logprob: -18.75
    10. 'find' → logprob: -20.0

Token 637: 'er' (ID: 259)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.31352677941322327
    2. 'er' → logprob: -1.3135267496109009
    3. '_sum' → logprob: -8.31352710723877
    4. 'max' → logprob: -12.18852710723877
    5. 'e' → logprob: -12.31352710723877
    6. '_' → logprob: -13.06352710723877
    7. 'Max' → logprob: -13.81352710723877
    8. '_m' → logprob: -13.93852710723877
    9. '_min' → logprob: -14.18852710723877
    10. 'er's' → logprob: -14.43852710723877

Token 638: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -1.6166903151315637e-05
    2. '.' → logprob: -11.375016212463379
    3. '.findall' → logprob: -12.375016212463379
    4. 'find' → logprob: -14.625016212463379
    5. ' .' → logprob: -17.000015258789062
    6. '.
' → logprob: -19.000015258789062
    7. '   ' → logprob: -20.000015258789062
    8. '.run' → logprob: -20.125015258789062
    9. '.get' → logprob: -20.500015258789062
    10. '
' → logprob: -20.500015258789062

Token 639: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -5.080963092041202e-06
    2. 'max' → logprob: -12.500004768371582
    3. '_' → logprob: -13.875004768371582
    4. ' _' → logprob: -15.875004768371582
    5. '_sum' → logprob: -15.875004768371582
    6. '_m' → logprob: -16.8750057220459
    7. '_min' → logprob: -17.5000057220459
    8. '(_' → logprob: -18.3750057220459
    9. '\' → logprob: -18.5000057220459
    10. '_Max' → logprob: -18.5000057220459

Token 640: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.6240566083070007e-06
    2. 'sum' → logprob: -13.625001907348633
    3. '_' → logprob: -16.000001907348633
    4. ' _' → logprob: -16.000001907348633
    5. '_score' → logprob: -17.000001907348633
    6. '\' → logprob: -17.750001907348633
    7. '_answer' → logprob: -18.000001907348633
    8. '```' → logprob: -18.250001907348633
    9. '"_' → logprob: -18.375001907348633
    10. '_s' → logprob: -18.500001907348633

Token 641: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011488670483231544
    2. 'print' → logprob: -4.511488437652588
    3. 'return' → logprob: -8.386488914489746
    4. '
' → logprob: -8.511488914489746
    5. '```' → logprob: -12.386488914489746
    6. ' print' → logprob: -12.636488914489746
    7. '   ' → logprob: -13.261488914489746
    8. '
' → logprob: -14.136488914489746
    9. '        
' → logprob: -14.511488914489746
    10. '	' → logprob: -14.636488914489746

Token 642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002742469310760498
    2. 'return' → logprob: -6.377742290496826
    3. '
' → logprob: -7.002742290496826
    4. '```' → logprob: -10.252742767333984
    5. 'print' → logprob: -10.377742767333984
    6. '	' → logprob: -10.877742767333984
    7. ' return' → logprob: -11.002742767333984
    8. '   ' → logprob: -11.377742767333984
    9. '        
' → logprob: -11.877742767333984
    10. '' → logprob: -12.752742767333984

Token 643: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.014204051345586777
    2. '       ' → logprob: -4.264204025268555
    3. 'return' → logprob: -10.264204025268555
    4. '
' → logprob: -12.514204025268555
    5. ' print' → logprob: -13.389204025268555
    6. '```' → logprob: -14.764204025268555
    7. '   ' → logprob: -18.764204025268555
    8. '#print' → logprob: -19.014204025268555
    9. '
' → logprob: -19.264204025268555
    10. '	print' → logprob: -19.389204025268555

Token 644: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.000001907348633
    3. 'answer' → logprob: -16.750001907348633
    4. '(ans' → logprob: -17.625001907348633
    5. '(f' → logprob: -19.375001907348633
    6. '(question' → logprob: -20.250001907348633
    7. ' (' → logprob: -20.500001907348633
    8. '()' → logprob: -20.625001907348633
    9. '(abs' → logprob: -21.375001907348633
    10. '	answer' → logprob: -21.500001907348633

Token 645: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.375000953674316
    3. '()' → logprob: -15.625000953674316
    4. ' )' → logprob: -16.000001907348633
    5. '())' → logprob: -16.375001907348633
    6. ')`' → logprob: -17.500001907348633
    7. '`)' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '))' → logprob: -18.500001907348633
    10. '')' → logprob: -18.750001907348633

Token 646: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04986564815044403
    2. 'i' → logprob: -3.04986572265625
    3. '#' → logprob: -7.92486572265625
    4. 'M' → logprob: -8.17486572265625
    5. 'm' → logprob: -8.54986572265625
    6. ' if' → logprob: -8.92486572265625
    7. 'Max' → logprob: -9.04986572265625
    8. 'max' → logprob: -9.92486572265625
    9. '```' → logprob: -10.04986572265625
    10. '
' → logprob: -10.54986572265625

Token 647: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02325642853975296
    2. '__' → logprob: -3.773256540298462
    3. 'name' → logprob: -11.648256301879883
    4. '_name' → logprob: -13.773256301879883
    5. '_' → logprob: -14.148256301879883
    6. ' ' → logprob: -16.148256301879883
    7. '___' → logprob: -16.273256301879883
    8. ' ' → logprob: -16.398256301879883
    9. 'Name' → logprob: -17.523256301879883
    10. ' ___' → logprob: -17.898256301879883

Token 648: 'name' (ID: 897)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5757802724838257
    2. '__' → logprob: -0.9507802724838257
    3. ' ==' → logprob: -3.4507803916931152
    4. 'name' → logprob: -4.075780391693115
    5. '.__' → logprob: -7.325780391693115
    6. '==' → logprob: -7.700780391693115
    7. '.name' → logprob: -7.950780391693115
    8. '_name' → logprob: -8.200779914855957
    9. 'if' → logprob: -8.450779914855957
    10. ' if' → logprob: -8.700779914855957

Token 649: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.9728669738397e-05
    2. '==' → logprob: -9.500100135803223
    3. '__.__' → logprob: -11.000100135803223
    4. ' ==' → logprob: -11.875100135803223
    5. '=="' → logprob: -14.250100135803223
    6. '__.' → logprob: -15.875100135803223
    7. ' __' → logprob: -16.250099182128906
    8. '____' → logprob: -16.250099182128906
    9. '__":
' → logprob: -16.750099182128906
    10. '__["' → logprob: -16.875099182128906

Token 650: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018207771703600883
    2. '==' → logprob: -4.393207550048828
    3. ' ==' → logprob: -5.268207550048828
    4. '=="' → logprob: -7.643207550048828
    5. '__.__' → logprob: -10.268207550048828
    6. '=='' → logprob: -12.268207550048828
    7. '_' → logprob: -12.393207550048828
    8. ' __' → logprob: -13.893207550048828
    9. '___' → logprob: -14.018207550048828
    10. '__":
' → logprob: -14.018207550048828

Token 651: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005272061098366976
    2. ''' → logprob: -5.255271911621094
    3. ' "__' → logprob: -10.255271911621094
    4. '__' → logprob: -12.880271911621094
    5. ' '__' → logprob: -15.505271911621094
    6. '"name' → logprob: -16.130271911621094
    7. '"class' → logprob: -16.880271911621094
    8. ''"' → logprob: -17.005271911621094
    9. '   ' → logprob: -17.130271911621094
    10. '("__' → logprob: -17.130271911621094

Token 652: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001961701549589634
    2. '__' → logprob: -6.251961708068848
    3. 'name' → logprob: -10.376961708068848
    4. '"' → logprob: -13.501961708068848
    5. '_main' → logprob: -15.501961708068848
    6. ' main' → logprob: -15.876961708068848
    7. 'python' → logprob: -16.62696075439453
    8. '__":
' → logprob: -16.87696075439453
    9. 'built' → logprob: -17.37696075439453
    10. 'MAIN' → logprob: -17.62696075439453

Token 653: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03019218146800995
    2. '__' → logprob: -3.5301921367645264
    3. '__':
' → logprob: -8.155192375183105
    4. '__:' → logprob: -8.780192375183105
    5. ':' → logprob: -16.03019142150879
    6. '__["' → logprob: -16.15519142150879
    7. '__.' → logprob: -16.28019142150879
    8. '__
' → logprob: -16.78019142150879
    9. '__
' → logprob: -17.15519142150879
    10. '__",' → logprob: -17.28019142150879

Token 654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03192679584026337
    2. ' Max' → logprob: -3.5319268703460693
    3. 'Max' → logprob: -6.78192663192749
    4. '   ' → logprob: -7.53192663192749
    5. '	Max' → logprob: -7.78192663192749
    6. '_Max' → logprob: -10.531927108764648
    7. '
' → logprob: -11.281927108764648
    8. ' MS' → logprob: -11.406927108764648
    9. '    
' → logprob: -11.781927108764648
    10. ' ' → logprob: -12.406927108764648

Token 655: ' program' (ID: 2193)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.6275222897529602
    2. 'app' → logprob: -1.1275222301483154
    3. 'Max' → logprob: -2.7525222301483154
    4. 'program' (adapté à ' program') → logprob: -3.8775222301483154
    5. 'max' → logprob: -4.0025224685668945
    6. 'runner' → logprob: -4.3775224685668945
    7. 'solution' → logprob: -4.5025224685668945
    8. 'obj' → logprob: -5.0025224685668945
    9. 'instance' → logprob: -6.1275224685668945
    10. 'ms' → logprob: -6.5025224685668945

Token 656: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013307877816259861
    2. '=' → logprob: -4.388308048248291
    3. ' ' → logprob: -7.763308048248291
    4. '_' → logprob: -8.388307571411133
    5. '   ' → logprob: -9.888307571411133
    6. '.' → logprob: -9.888307571411133
    7. '  ' → logprob: -10.513307571411133
    8. '	' → logprob: -11.888307571411133
    9. '().' → logprob: -13.013307571411133
    10. ' .' → logprob: -13.388307571411133

Token 657: ' Max' (ID: 10093)
  Prédit: 'Max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Max' → logprob: -0.693147599697113
    2. ' Max' → logprob: -0.693147599697113
    3. '	Max' → logprob: -15.193147659301758
    4. '_Max' → logprob: -16.443147659301758
    5. ' ' → logprob: -17.943147659301758
    6. ' max' → logprob: -18.193147659301758
    7. 'max' → logprob: -20.318147659301758
    8. '(Max' → logprob: -20.443147659301758
    9. ' Maxim' → logprob: -20.568147659301758
    10. ' Maximum' → logprob: -20.818147659301758

Token 658: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -9.088346359931165e-07
    2. 'sum' → logprob: -14.500000953674316
    3. 'Sequence' → logprob: -15.500000953674316
    4. 'S' → logprob: -16.25
    5. ' Sum' → logprob: -17.5
    6. '_sum' → logprob: -18.125
    7. 'Summ' → logprob: -18.375
    8. '
' → logprob: -18.5
    9. 'Seq' → logprob: -18.625
    10. '.Sum' → logprob: -18.875

Token 659: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.9361264946837764e-07
    2. 'Sum' → logprob: -16.125
    3. 'sequence' → logprob: -18.5
    4. ' Sequence' → logprob: -20.125
    5. 'Sequ' → logprob: -20.5
    6. 'Sequences' → logprob: -21.625
    7. '_sequence' → logprob: -22.125
    8. 'S' → logprob: -22.625
    9. ' sequence' → logprob: -22.875
    10. '_SEQUENCE' → logprob: -23.0

Token 660: 'II' (ID: 6013)
  Prédit: 'II'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -7.107425062713446e-06
    2. 'I' → logprob: -11.875006675720215
    3. ' II' → logprob: -16.37500762939453
    4. 'ІІ' → logprob: -18.87500762939453
    5. 'III' → logprob: -19.50000762939453
    6. 'IIl' → logprob: -19.75000762939453
    7. 'Ⅱ' → logprob: -20.37500762939453
    8. 'ii' → logprob: -21.50000762939453
    9. 'IO' → logprob: -22.00000762939453
    10. 'IIII' → logprob: -22.00000762939453

Token 661: '()
' (ID: 1234)
  Prédit: '.execute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.execute' → logprob: -0.006782504729926586
    2. '.' → logprob: -5.006782531738281
    3. 'execute' → logprob: -11.131782531738281
    4. '.
' → logprob: -11.506782531738281
    5. '<|end|>' → logprob: -11.506782531738281
    6. '.Execute' → logprob: -12.006782531738281
    7. '.run' → logprob: -12.506782531738281
    8. '
' → logprob: -12.631782531738281
    9. '.mainloop' → logprob: -12.631782531738281
    10. '.exec' → logprob: -12.881782531738281

Token 662: '   ' (ID: 271)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.0001093841710826382
    2. '   ' → logprob: -9.250109672546387
    3. ' program' → logprob: -11.250109672546387
    4. '(program' → logprob: -15.750109672546387
    5. '.program' → logprob: -16.12510871887207
    6. '
' → logprob: -17.25010871887207
    7. '_program' → logprob: -18.62510871887207
    8. '    
' → logprob: -19.00010871887207
    9. 'programma' → logprob: -19.50010871887207
    10. 'programme' → logprob: -19.75010871887207

Token 663: ' program' (ID: 2193)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' (adapté à ' program') → logprob: 0.0
    2. ' program' → logprob: -17.625
    3. 'programm' → logprob: -21.75
    4. 'programme' → logprob: -21.875
    5. 'programma' → logprob: -22.0
    6. '   ' → logprob: -22.625
    7. '.program' → logprob: -22.625
    8. '(program' → logprob: -23.75
    9. 'prog' → logprob: -24.625
    10. 'protocol' → logprob: -24.75

Token 664: '.execute' (ID: 13242)
  Prédit: '.execute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.execute' → logprob: -0.0005547016044147313
    2. '.' → logprob: -7.50055456161499
    3. '.run' → logprob: -13.750555038452148
    4. '.exec' → logprob: -15.000555038452148
    5. '.execut' → logprob: -16.12555503845215
    6. '.Execute' → logprob: -16.37555503845215
    7. '.execution' → logprob: -16.50055503845215
    8. '.exe' → logprob: -17.37555503845215
    9. '.mainloop' → logprob: -17.50055503845215
    10. '.executor' → logprob: -17.87555503845215

Token 665: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 663
Tokens correctement prédits (1ère position, stricte): 345
Tokens correctement prédits (1ère position, avec adaptation): 379
Tokens correctement prédits (top 10): 600
Précision stricte (1ère position): 52.04%
Précision adaptée (1ère position): 57.16%
Précision (top 10): 90.50%
================================================================================
