================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:57:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
for _ in range(7):
    a, b = input().split()
    a = int(a)
    b = int(b)
    print(a - b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'for' (ID: 1938)
  → Token d'amorce (pas de prédiction)

Token 1: ' _' (ID: 1175)
  → Token d'amorce (pas de prédiction)

Token 2: ' in' (ID: 306)
  → Token d'amorce (pas de prédiction)

Token 3: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1602502167224884
    2. 'range' → logprob: -1.910250186920166
    3. ' ' → logprob: -10.910250663757324
    4. ' in' → logprob: -12.785250663757324
    5. '_range' → logprob: -13.910250663757324
    6. '  ' → logprob: -14.285250663757324
    7. '```' → logprob: -14.285250663757324
    8. '(range' → logprob: -14.660250663757324
    9. ' xrange' → logprob: -14.660250663757324
    10. '`' → logprob: -14.785250663757324

Token 4: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014299227041192353
    2. ' (' → logprob: -9.375143051147461
    3. '```' → logprob: -10.250143051147461
    4. '`' → logprob: -12.250143051147461
    5. '(n' → logprob: -12.250143051147461
    6. ' ' → logprob: -13.250143051147461
    7. '(len' → logprob: -13.375143051147461
    8. '(`' → logprob: -13.500143051147461
    9. '1' → logprob: -13.750143051147461
    10. '(
' → logprob: -14.250143051147461

Token 5: '7' (ID: 22)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00047202190035022795
    2. '1' → logprob: -8.750472068786621
    3. '5' → logprob: -8.875472068786621
    4. ')' → logprob: -9.625472068786621
    5. '100' → logprob: -9.750472068786621
    6. '0' → logprob: -10.125472068786621
    7. ' ' → logprob: -12.375472068786621
    8. 'range' → logprob: -13.375472068786621
    9. '3' → logprob: -14.000472068786621
    10. '20' → logprob: -14.125472068786621

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020608574151992798
    2. ')' → logprob: -3.89560866355896
    3. ':' → logprob: -9.645608901977539
    4. '):
' → logprob: -14.645608901977539
    5. '+' → logprob: -14.770608901977539
    6. '),' → logprob: -16.02060890197754
    7. ')**' → logprob: -16.02060890197754
    8. '```' → logprob: -16.27060890197754
    9. '**' → logprob: -16.39560890197754
    10. ')：' → logprob: -16.39560890197754

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3857938051223755
    2. '\n' → logprob: -2.260793685913086
    3. '    ' → logprob: -3.010793685913086
    4. '\' → logprob: -3.010793685913086
    5. '    
' → logprob: -3.385793685913086
    6. '```' → logprob: -3.635793685913086
    7. ' ' → logprob: -4.260793685913086
    8. '<|end|>' → logprob: -4.885793685913086
    9. ' 
' → logprob: -5.135793685913086
    10. ''' → logprob: -5.260793685913086

Token 8: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7561206817626953
    2. '   ' → logprob: -0.8811206817626953
    3. '    ' → logprob: -2.6311206817626953
    4. '```' → logprob: -4.881120681762695
    5. '       ' → logprob: -5.006120681762695
    6. ' ' → logprob: -5.131120681762695
    7. '\t' → logprob: -5.256120681762695
    8. '\n' → logprob: -5.381120681762695
    9. ' print' → logprob: -5.381120681762695
    10. '    
' → logprob: -5.506120681762695

Token 9: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.1610586643218994
    2. '+=' → logprob: -1.7860586643218994
    3. '+' → logprob: -2.0360586643218994
    4. 'd' → logprob: -2.4110586643218994
    5. 'p' → logprob: -2.6610586643218994
    6. ' ' → logprob: -2.9110586643218994
    7. 'dd' → logprob: -3.1610586643218994
    8. '[' → logprob: -3.4110586643218994
    9. '=' → logprob: -3.9110586643218994
    10. 'r' → logprob: -4.41105842590332

Token 10: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25335291028022766
    2. ' b' → logprob: -1.5033528804779053
    3. ',' → logprob: -7.753353118896484
    4. '_' → logprob: -7.878353118896484
    5. ',b' → logprob: -8.628353118896484
    6. ' ' → logprob: -8.628353118896484
    7. '=' → logprob: -8.878353118896484
    8. ' =' → logprob: -10.378353118896484
    9. '_b' → logprob: -10.503353118896484
    10. ' ,' → logprob: -10.753353118896484

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.052760254591703415
    2. ',' → logprob: -3.552760362625122
    3. '=' → logprob: -3.802760362625122
    4. ' ,' → logprob: -8.427760124206543
    5. ')' → logprob: -9.802760124206543
    6. '[' → logprob: -9.802760124206543
    7. '   ' → logprob: -10.927760124206543
    8. ' ' → logprob: -11.052760124206543
    9. '    ' → logprob: -11.177760124206543
    10. '<|end|>' → logprob: -11.177760124206543

Token 12: ' input' (ID: 3422)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39183324575424194
    2. ' ' → logprob: -1.3918333053588867
    3. '1' → logprob: -3.0168333053588867
    4. ' b' → logprob: -4.391833305358887
    5. 'a' → logprob: -5.391833305358887
    6. 'b' → logprob: -5.391833305358887
    7. ' a' → logprob: -5.641833305358887
    8. 'i' → logprob: -8.016833305358887
    9. '7' → logprob: -8.516833305358887
    10. ' i' → logprob: -8.516833305358887

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10420206934213638
    2. '(' → logprob: -2.3542020320892334
    3. '().' → logprob: -5.6042022705078125
    4. '(),' → logprob: -9.979202270507812
    5. '('' → logprob: -10.229202270507812
    6. '()(' → logprob: -10.229202270507812
    7. '()`' → logprob: -10.729202270507812
    8. '("("' → logprob: -10.729202270507812
    9. '())' → logprob: -10.854202270507812
    10. ' ()' → logprob: -10.979202270507812

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016027313540689647
    2. 'strip' → logprob: -8.750160217285156
    3. 'rstrip' → logprob: -14.000160217285156
    4. 'spl' → logprob: -14.125160217285156
    5. 's' → logprob: -16.125160217285156
    6. ' split' → logprob: -16.500160217285156
    7. 'rs' → logprob: -16.750160217285156
    8. 'replace' → logprob: -16.875160217285156
    9. 'sp' → logprob: -17.375160217285156
    10. '.split' → logprob: -18.500160217285156

Token 15: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2873336374759674
    2. '()' → logprob: -1.412333607673645
    3. '('' → logprob: -5.2873334884643555
    4. '("("' → logprob: -7.4123334884643555
    5. '("' → logprob: -8.787333488464355
    6. '(
' → logprob: -9.912333488464355
    7. '(`' → logprob: -9.912333488464355
    8. '(

' → logprob: -10.162333488464355
    9. '((' → logprob: -10.412333488464355
    10. '()`' → logprob: -10.537333488464355

Token 16: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.36735886335372925
    2. '   ' → logprob: -2.492358922958374
    3. '
' → logprob: -2.617358922958374
    4. '    
' → logprob: -2.992358922958374
    5. '<|end|>' → logprob: -3.742358922958374
    6. ')' → logprob: -3.992358922958374
    7. ' ' → logprob: -4.117358684539795
    8. '  
' → logprob: -4.617358684539795
    9. '    ' → logprob: -5.367358684539795
    10. '\' → logprob: -5.367358684539795

Token 17: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7235770225524902
    2. '[' → logprob: -1.3485770225524902
    3. '<|end|>' → logprob: -2.9735770225524902
    4. ',' → logprob: -3.2235770225524902
    5. ')' → logprob: -3.4735770225524902
    6. 'if' → logprob: -3.5985770225524902
    7. ' if' → logprob: -3.7235770225524902
    8. '.' → logprob: -4.59857702255249
    9. '\n' → logprob: -4.97357702255249
    10. 'a' (adapté à ' a') → logprob: -5.09857702255249

Token 18: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49766868352890015
    2. '[' → logprob: -1.997668743133545
    3. '.' → logprob: -2.122668743133545
    4. ',' → logprob: -2.872668743133545
    5. ' ' → logprob: -3.872668743133545
    6. ')' → logprob: -4.372668743133545
    7. '<|end|>' → logprob: -4.622668743133545
    8. ' ==' → logprob: -4.872668743133545
    9. '==' → logprob: -5.247668743133545
    10. '=' → logprob: -5.372668743133545

Token 19: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3958800137042999
    2. ' int' → logprob: -1.1458799839019775
    3. ' float' → logprob: -5.645880222320557
    4. 'float' → logprob: -5.895880222320557
    5. 'a' → logprob: -6.395880222320557
    6. ' a' → logprob: -7.020880222320557
    7. ' ' → logprob: -10.520879745483398
    8. ' b' → logprob: -11.145879745483398
    9. 'b' → logprob: -11.395879745483398
    10. ' str' → logprob: -11.395879745483398

Token 20: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.11290674656629562
    2. '(' → logprob: -2.2379066944122314
    3. '('' → logprob: -10.112906455993652
    4. '()' → logprob: -10.862906455993652
    5. '(input' → logprob: -12.737906455993652
    6. ' ' → logprob: -13.112906455993652
    7. '("("' → logprob: -13.237906455993652
    8. '(
' → logprob: -13.237906455993652
    9. '("' → logprob: -13.362906455993652
    10. '(A' → logprob: -13.487906455993652

Token 21: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000495605927426368
    2. '+' → logprob: -8.125495910644531
    3. ' )' → logprob: -9.000495910644531
    4. ' +' → logprob: -10.875495910644531
    5. ')
' → logprob: -11.000495910644531
    6. '*' → logprob: -11.250495910644531
    7. ',' → logprob: -12.500495910644531
    8. ')+' → logprob: -12.500495910644531
    9. '   ' → logprob: -12.625495910644531
    10. '<|end|>' → logprob: -12.875495910644531

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.927563488483429
    2. '+' → logprob: -1.3025634288787842
    3. '<|end|>' → logprob: -1.8025634288787842
    4. ' ' → logprob: -2.177563428878784
    5. ' +' → logprob: -4.427563667297363
    6. '    ' → logprob: -4.677563667297363
    7. '    
' → logprob: -4.802563667297363
    8. '  ' → logprob: -5.677563667297363
    9. '```' → logprob: -5.802563667297363
    10. ',' → logprob: -5.802563667297363

Token 23: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.30120497941970825
    2. ' b' → logprob: -2.0512049198150635
    3. ' ' → logprob: -2.4262049198150635
    4. '    ' → logprob: -3.8012049198150635
    5. '   ' → logprob: -4.676205158233643
    6. '<|end|>' → logprob: -5.801205158233643
    7. '+' → logprob: -5.926205158233643
    8. ',' → logprob: -7.176205158233643
    9. ')' → logprob: -7.301205158233643
    10. '  ' → logprob: -7.426205158233643

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36429107189178467
    2. '=' → logprob: -1.6142910718917847
    3. '<|end|>' → logprob: -3.489291191101074
    4. ' ==' → logprob: -4.114291191101074
    5. ' +' → logprob: -4.364291191101074
    6. ')' → logprob: -4.364291191101074
    7. '+' → logprob: -4.864291191101074
    8. ' +=' → logprob: -4.864291191101074
    9. ' ' → logprob: -5.239291191101074
    10. ' >' → logprob: -5.364291191101074

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.14279885590076447
    2. 'int' → logprob: -2.017798900604248
    3. ' b' → logprob: -10.01779842376709
    4. 'b' → logprob: -11.14279842376709
    5. ' float' → logprob: -11.39279842376709
    6. ' ' → logprob: -11.39279842376709
    7. ' a' → logprob: -11.51779842376709
    8. '   ' → logprob: -12.01779842376709
    9. 'a' → logprob: -12.14279842376709
    10. '0' → logprob: -12.51779842376709

Token 26: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.1004832461476326
    2. '(' → logprob: -2.3504831790924072
    3. ' (' → logprob: -8.850482940673828
    4. '(input' → logprob: -10.225482940673828
    5. ')' → logprob: -10.475482940673828
    6. '('' → logprob: -10.600482940673828
    7. '(B' → logprob: -10.975482940673828
    8. ' ' → logprob: -12.475482940673828
    9. 'b' → logprob: -12.600482940673828
    10. '()' → logprob: -12.975482940673828

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5358694731257856e-05
    2. ')
' → logprob: -10.750035285949707
    3. '+' → logprob: -11.625035285949707
    4. ' )' → logprob: -13.125035285949707
    5. '   ' → logprob: -14.000035285949707
    6. '))' → logprob: -15.125035285949707
    7. '+)' → logprob: -15.375035285949707
    8. ')+' → logprob: -15.500035285949707
    9. '')' → logprob: -15.875035285949707
    10. '<|end|>' → logprob: -15.875035285949707

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28717511892318726
    2. ' ' → logprob: -1.912175178527832
    3. ' if' → logprob: -3.287175178527832
    4. '<|end|>' → logprob: -4.287175178527832
    5. 'if' → logprob: -4.412175178527832
    6. '    
' → logprob: -4.537175178527832
    7. '+' → logprob: -4.912175178527832
    8. ',' → logprob: -5.912175178527832
    9. '    ' → logprob: -5.912175178527832
    10. '
' → logprob: -6.037175178527832

Token 29: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45704251527786255
    2. 'i' → logprob: -2.2070424556732178
    3. ' if' → logprob: -2.5820424556732178
    4. 'n' → logprob: -3.3320424556732178
    5. '   ' → logprob: -3.4570424556732178
    6. 'print' (adapté à ' print') → logprob: -3.8320424556732178
    7. ' ' → logprob: -3.9570424556732178
    8. 'c' → logprob: -4.207042694091797
    9. '#' → logprob: -4.332042694091797
    10. '+' → logprob: -4.957042694091797

Token 30: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20607039332389832
    2. '(a' → logprob: -1.7060704231262207
    3. '(max' → logprob: -6.081070423126221
    4. '()' → logprob: -6.831070423126221
    5. '('' → logprob: -7.581070423126221
    6. '(sum' → logprob: -8.456069946289062
    7. '(abs' → logprob: -8.581069946289062
    8. '(min' → logprob: -9.206069946289062
    9. '(b' → logprob: -9.206069946289062
    10. '((' → logprob: -9.706069946289062

Token 31: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09977617114782333
    2. ' +' → logprob: -2.724776268005371
    3. '+b' → logprob: -4.099776268005371
    4. ')' → logprob: -5.099776268005371
    5. ',' → logprob: -5.724776268005371
    6. ' ,' → logprob: -5.974776268005371
    7. '+)' → logprob: -8.724776268005371
    8. ' )' → logprob: -8.724776268005371
    9. '>' → logprob: -8.849776268005371
    10. '*' → logprob: -9.099776268005371

Token 32: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.22566206753253937
    2. 'b' → logprob: -1.600662112236023
    3. '1' → logprob: -8.475662231445312
    4. ' ' → logprob: -10.225662231445312
    5. '	b' → logprob: -13.975662231445312
    6. ')' → logprob: -14.350662231445312
    7. ')b' → logprob: -14.850662231445312
    8. '32' → logprob: -14.975662231445312
    9. '6' → logprob: -15.100662231445312
    10. ' б' → logprob: -15.100662231445312

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. '))' → logprob: -14.250001907348633
    3. ' )' → logprob: -15.000001907348633
    4. '`)' → logprob: -15.375001907348633
    5. ')`' → logprob: -15.500001907348633
    6. '')' → logprob: -17.000001907348633
    7. ')
' → logprob: -17.375001907348633
    8. '+' → logprob: -17.500001907348633
    9. '*' → logprob: -18.000001907348633
    10. '")' → logprob: -18.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 31
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 24
Précision stricte (1ère position): 41.94%
Précision adaptée (1ère position): 45.16%
Précision (top 10): 77.42%
================================================================================
