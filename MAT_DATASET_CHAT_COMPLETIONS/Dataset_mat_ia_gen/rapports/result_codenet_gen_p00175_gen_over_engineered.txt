================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:28:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Optional

class NumberSystem(ABC):
    @abstractmethod
    def convert_from_decimal(self, n: int) -> str:
        pass

    @abstractmethod
    def convert_to_decimal(self, s: str) -> int:
        pass

class BaseFourNumberSystem(NumberSystem):
    def __init__(self):
        self.base = 4
        self.digits = ['0', '1', '2', '3']

    def convert_from_decimal(self, n: int) -> str:
        if n == 0:
            return '0'
        digits_reversed = []
        current = n
        while current > 0:
            remainder = current % self.base
            digits_reversed.append(self.digits[remainder])
            current //= self.base
        return ''.join(reversed(digits_reversed))

    def convert_to_decimal(self, s: str) -> int:
        result = 0
        for c in s:
            if c not in self.digits:
                raise ValueError(f"Invalid digit '{c}' for base {self.base}")
            result = result * self.base + self.digits.index(c)
        return result

class InputOutputHandler:
    def __init__(self, number_system: NumberSystem):
        self.number_system = number_system

    def process_input(self, lines: List[str]) -> List[str]:
        results = []
        for line in lines:
            line = line.strip()
            if line == '-1':
                break
            try:
                n = int(line)
                if not (0 <= n <= 1000000):
                    raise ValueError("Number out of allowed range")
                converted = self.number_system.convert_from_decimal(n)
                results.append(converted)
            except Exception as e:
                # In case of invalid input, here we just continue
                continue
        return results

class Program:
    def __init__(self):
        self.number_system = BaseFourNumberSystem()
        self.io_handler = InputOutputHandler(self.number_system)

    def run(self, input_lines: Optional[List[str]] = None):
        if input_lines is None:
            import sys
            input_lines = sys.stdin.read().splitlines()
        results = self.io_handler.process_input(input_lines)
        for res in results:
            print(res)

if __name__ == '__main__':
    program = Program()
    program.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1604270040988922
    2. 'ABC' → logprob: -1.9104269742965698
    3. ' A' → logprob: -9.53542709350586
    4. 'AB' → logprob: -9.53542709350586
    5. 'A' → logprob: -11.03542709350586
    6. 'ABCDE' → logprob: -11.16042709350586
    7. 'abc' → logprob: -11.28542709350586
    8. 'abstract' → logprob: -12.41042709350586
    9. ' ' → logprob: -13.16042709350586
    10. '_AB' → logprob: -13.41042709350586

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.053023479878902435
    2. ',' → logprob: -3.05302357673645
    3. ' ' → logprob: -6.553023338317871
    4. 'import' → logprob: -6.678023338317871
    5. ' .' → logprob: -7.803023338317871
    6. ':' → logprob: -7.803023338317871
    7. '<|end|>' → logprob: -8.178023338317871
    8. '```' → logprob: -8.678023338317871
    9. ' import' → logprob: -9.303023338317871
    10. ' ,' → logprob: -9.303023338317871

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.21897414326667786
    2. ' abstract' → logprob: -1.7189741134643555
    3. 'Abstract' → logprob: -4.0939741134643555
    4. '```' → logprob: -8.468974113464355
    5. ' ' → logprob: -8.718974113464355
    6. 'Meta' → logprob: -9.218974113464355
    7. '.abstract' → logprob: -9.343974113464355
    8. ' A' → logprob: -10.468974113464355
    9. ' Abstract' → logprob: -11.343974113464355
    10. '`' → logprob: -11.343974113464355

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -9.805981972021982e-05
    2. 'classmethod' → logprob: -10.00009822845459
    3. 'm' → logprob: -11.00009822845459
    4. '_method' → logprob: -12.00009822845459
    5. 'meth' → logprob: -12.00009822845459
    6. 'staticmethod' → logprob: -12.25009822845459
    7. ' method' → logprob: -12.50009822845459
    8. 'abstract' → logprob: -12.75009822845459
    9. 'import' → logprob: -13.37509822845459
    10. 'ethod' → logprob: -13.37509822845459

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48189130425453186
    2. '```' → logprob: -1.4818912744522095
    3. 'class' → logprob: -2.356891393661499
    4. '

' → logprob: -4.23189115524292
    5. '<|end|>' → logprob: -4.35689115524292
    6. '' → logprob: -4.60689115524292
    7. '\n' → logprob: -4.85689115524292
    8. ' class' → logprob: -5.98189115524292
    9. '
' → logprob: -6.10689115524292
    10. '\' → logprob: -6.10689115524292

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08355175703763962
    2. '

' → logprob: -3.4585516452789307
    3. 'class' → logprob: -3.8335516452789307
    4. '
' → logprob: -4.83355188369751
    5. '```' → logprob: -4.83355188369751
    6. '' → logprob: -5.08355188369751
    7. '\n' → logprob: -6.20855188369751
    8. ' 

' → logprob: -7.45855188369751
    9. ' 
' → logprob: -7.45855188369751
    10. '``' → logprob: -8.208551406860352

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.04827742278575897
    2. ' collections' → logprob: -3.4232773780822754
    3. 'typing' → logprob: -4.798277378082275
    4. ' dat' → logprob: -5.423277378082275
    5. 'collections' → logprob: -6.923277378082275
    6. ' math' → logprob: -8.173277854919434
    7. ' sys' → logprob: -9.048277854919434
    8. ' io' → logprob: -9.423277854919434
    9. ' os' → logprob: -9.423277854919434
    10. ' datetime' → logprob: -10.048277854919434

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5059148073196411
    2. 'import' → logprob: -1.2559148073196411
    3. '.' → logprob: -2.2559146881103516
    4. '.import' → logprob: -6.005914688110352
    5. '<|end|>' → logprob: -6.755914688110352
    6. ' ' → logprob: -7.005914688110352
    7. '```' → logprob: -7.380914688110352
    8. '[' → logprob: -7.505914688110352
    9. ' .' → logprob: -8.130914688110352
    10. '.space' → logprob: -8.505914688110352

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.3196485638618469
    2. ' List' → logprob: -1.5696485042572021
    3. ' Union' → logprob: -3.319648504257202
    4. 'Any' → logprob: -4.444648742675781
    5. ' Callable' → logprob: -4.569648742675781
    6. ' Optional' → logprob: -5.944648742675781
    7. ' Protocol' → logprob: -6.444648742675781
    8. ' Iterable' → logprob: -6.694648742675781
    9. 'List' → logprob: -7.944648742675781
    10. ' Generator' → logprob: -8.069648742675781

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.491087943315506
    2. '
' → logprob: -0.9910879135131836
    3. 'class' → logprob: -4.616087913513184
    4. '```' → logprob: -5.116087913513184
    5. '\n' → logprob: -7.866087913513184
    6. '


' → logprob: -8.366087913513184
    7. '
' → logprob: -8.616087913513184
    8. '``' → logprob: -9.241087913513184
    9. ' class' → logprob: -10.741087913513184
    10. '<|end|>' → logprob: -11.741087913513184

Token 13: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.4373971223831177
    2. 'Optional' → logprob: -1.5623971223831177
    3. ' Union' → logprob: -1.6873971223831177
    4. 'Any' → logprob: -1.6873971223831177
    5. ' Any' → logprob: -2.437397003173828
    6. 'Union' → logprob: -3.312397003173828
    7. ' Callable' → logprob: -3.437397003173828
    8. 'Callable' → logprob: -4.812397003173828
    9. 'Tuple' → logprob: -5.062397003173828
    10. 'Iterable' → logprob: -5.437397003173828

Token 14: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4136703312397003
    2. '

' → logprob: -1.538670301437378
    3. 'class' → logprob: -2.288670301437378
    4. '```' → logprob: -3.913670301437378
    5. '\n' → logprob: -6.288670539855957
    6. '``' → logprob: -7.913670539855957
    7. '
' → logprob: -8.538670539855957
    8. ' class' → logprob: -9.038670539855957
    9. '


' → logprob: -9.788670539855957
    10. '<class' → logprob: -10.413670539855957

Token 15: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.018300827592611313
    2. '
' → logprob: -4.018301010131836
    3. '

' → logprob: -9.393301010131836
    4. '```' → logprob: -10.768301010131836
    5. '\n' → logprob: -10.893301010131836
    6. ' class' → logprob: -11.393301010131836
    7. '
' → logprob: -11.768301010131836
    8. '<class' → logprob: -13.018301010131836
    9. '"class' → logprob: -13.393301010131836
    10. '``' → logprob: -13.768301010131836

Token 16: ' Number' (ID: 9184)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020367514342069626
    2. ' Abstract' → logprob: -4.145367622375488
    3. ' Base' → logprob: -6.895367622375488
    4. ' My' → logprob: -6.895367622375488
    5. ' Basic' → logprob: -7.770367622375488
    6. ' Serializer' → logprob: -8.270367622375488
    7. ' Space' → logprob: -8.520367622375488
    8. ' ABC' → logprob: -8.645367622375488
    9. ' Object' → logprob: -8.770367622375488
    10. ' Animal' → logprob: -8.895367622375488

Token 17: 'System' (ID: 3320)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038704924285411835
    2. ':' → logprob: -3.4137048721313477
    3. 'Handler' → logprob: -6.413704872131348
    4. 'Generator' → logprob: -6.413704872131348
    5. 'Processor' → logprob: -7.538704872131348
    6. 'Provider' → logprob: -8.163704872131348
    7. 'Validator' → logprob: -8.788704872131348
    8. '(Abstract' → logprob: -9.038704872131348
    9. 'Converter' → logprob: -9.288704872131348
    10. 'Factory' → logprob: -9.538704872131348

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2819826900959015
    2. ':' → logprob: -1.406982660293579
    3. '(Abstract' → logprob: -7.281982898712158
    4. '():' → logprob: -10.281982421875
    5. '(:' → logprob: -10.406982421875
    6. ' :' → logprob: -11.031982421875
    7. ':**' → logprob: -11.156982421875
    8. '(Base' → logprob: -11.281982421875
    9. '):' → logprob: -12.156982421875
    10. ',' → logprob: -12.906982421875

Token 19: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.04862358421087265
    2. ' ABC' → logprob: -3.048623561859131
    3. ')' → logprob: -10.923624038696289
    4. 'abc' → logprob: -11.798624038696289
    5. 'Abstract' → logprob: -12.298624038696289
    6. 'ABCDE' → logprob: -12.923624038696289
    7. 'AB' → logprob: -13.173624038696289
    8. ' ' → logprob: -14.798624038696289
    9. '   ' → logprob: -15.673624038696289
    10. '):' → logprob: -15.673624038696289

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004182793782092631
    2. ')' → logprob: -7.875418186187744
    3. ':' → logprob: -10.250418663024902
    4. ',' → logprob: -14.000418663024902
    5. '):
' → logprob: -14.125418663024902
    6. ' ):' → logprob: -14.750418663024902
    7. '):

' → logprob: -16.250417709350586
    8. '():' → logprob: -16.375417709350586
    9. ':)' → logprob: -16.375417709350586
    10. '):
' → logprob: -16.500417709350586

Token 21: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005350403371267021
    2. '   ' → logprob: -8.000535011291504
    3. ':
' → logprob: -9.000535011291504
    4. '):' → logprob: -10.375535011291504
    5. ' :' → logprob: -11.250535011291504
    6. ',' → logprob: -11.375535011291504
    7. '```' → logprob: -11.750535011291504
    8. '():' → logprob: -13.250535011291504
    9. ':def' → logprob: -13.500535011291504
    10. ')' → logprob: -13.500535011291504

Token 22: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1471284031867981
    2. 'def' → logprob: -2.6471283435821533
    3. ' def' → logprob: -4.022128582000732
    4. '    ' → logprob: -4.147128582000732
    5. '    
' → logprob: -4.147128582000732
    6. '\n' → logprob: -5.522128582000732
    7. '
' → logprob: -5.647128582000732
    8. '```' → logprob: -5.897128582000732
    9. ' 
' → logprob: -6.022128582000732
    10. '@' (adapté à ' @') → logprob: -7.272128582000732

Token 23: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -4.320199877838604e-07
    2. 'staticmethod' → logprob: -15.5
    3. ' abstract' → logprob: -17.0
    4. 'property' → logprob: -17.125
    5. 'abc' → logprob: -17.25
    6. 'abs' → logprob: -17.5
    7. 'ab' → logprob: -17.75
    8. '.abstract' → logprob: -18.0
    9. 'classmethod' → logprob: -18.25
    10. 'absolute' → logprob: -22.375

Token 24: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00011403311509639025
    2. '_method' → logprob: -9.125114440917969
    3. 'meth' → logprob: -13.000114440917969
    4. 'classmethod' → logprob: -13.250114440917969
    5. 'staticmethod' → logprob: -14.625114440917969
    6. 'ethod' → logprob: -15.625114440917969
    7. '	method' → logprob: -16.50011444091797
    8. ' method' → logprob: -16.50011444091797
    9. '_' → logprob: -16.75011444091797
    10. 'm' → logprob: -16.75011444091797

Token 25: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26787668466567993
    2. ' def' → logprob: -1.7678766250610352
    3. 'method' → logprob: -3.767876625061035
    4. '(' → logprob: -4.267876625061035
    5. '
' → logprob: -4.642876625061035
    6. ' ' → logprob: -5.392876625061035
    7. '\' → logprob: -6.017876625061035
    8. '<|end|>' → logprob: -6.142876625061035
    9. '   ' → logprob: -6.767876625061035
    10. '    
' → logprob: -7.142876625061035

Token 26: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2799043655395508
    2. 'def' → logprob: -1.9049043655395508
    3. 'method' → logprob: -2.654904365539551
    4. '_method' → logprob: -5.279904365539551
    5. '(method' → logprob: -5.404904365539551
    6. '('' → logprob: -6.029904365539551
    7. ' def' → logprob: -6.029904365539551
    8. ')' → logprob: -6.404904365539551
    9. '.method' → logprob: -6.529904365539551
    10. ' (' → logprob: -6.779904365539551

Token 27: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0923062190413475
    2. 'method' → logprob: -2.967306137084961
    3. ' def' → logprob: -3.342306137084961
    4. ' ' → logprob: -7.967306137084961
    5. 'classmethod' → logprob: -8.342306137084961
    6. '
' → logprob: -8.717306137084961
    7. '   ' → logprob: -9.092306137084961
    8. '    
' → logprob: -9.217306137084961
    9. '  ' → logprob: -9.342306137084961
    10. '```' → logprob: -9.842306137084961

Token 28: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.014342255890369415
    2. ' ' → logprob: -4.639342308044434
    3. ' space' → logprob: -6.514342308044434
    4. ' calculate' → logprob: -7.764342308044434
    5. ' decode' → logprob: -7.764342308044434
    6. 'convert' → logprob: -7.889342308044434
    7. ' number' → logprob: -8.014342308044434
    8. ' def' → logprob: -8.389342308044434
    9. ' encode' → logprob: -8.514342308044434
    10. ' get' → logprob: -8.514342308044434

Token 29: '_from' (ID: 12526)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3284654915332794
    2. '(' → logprob: -1.578465461730957
    3. '_to' → logprob: -2.703465461730957
    4. '_' → logprob: -5.328465461730957
    5. '_self' → logprob: -7.203465461730957
    6. '_(' → logprob: -7.953465461730957
    7. 'to' → logprob: -8.828465461730957
    8. 'self' → logprob: -8.953465461730957
    9. ' (' → logprob: -8.953465461730957
    10. '_token' → logprob: -9.828465461730957

Token 30: '_decimal' (ID: 178716)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.0214943885803223
    2. '_decimal' → logprob: -1.0214943885803223
    3. '(self' → logprob: -1.3964943885803223
    4. '_' → logprob: -4.896494388580322
    5. '_str' → logprob: -4.896494388580322
    6. '(' → logprob: -4.896494388580322
    7. '_base' → logprob: -5.646494388580322
    8. '_binary' → logprob: -6.146494388580322
    9. '_number' → logprob: -6.896494388580322
    10. '_self' → logprob: -7.146494388580322

Token 31: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16033166646957397
    2. '(' → logprob: -1.9103317260742188
    3. ' (' → logprob: -9.910331726074219
    4. 'self' → logprob: -10.410331726074219
    5. '(
' → logprob: -11.160331726074219
    6. '(s' → logprob: -11.785331726074219
    7. '(

' → logprob: -13.785331726074219
    8. '(Self' → logprob: -13.910331726074219
    9. ')' → logprob: -14.160331726074219
    10. ' self' → logprob: -14.660331726074219

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011343709047650918
    2. 'self' → logprob: -9.625113487243652
    3. ' ,' → logprob: -10.500113487243652
    4. ')' → logprob: -11.500113487243652
    5. '):' → logprob: -12.750113487243652
    6. ',value' → logprob: -12.875113487243652
    7. ',num' → logprob: -13.500113487243652
    8. ',self' → logprob: -13.750113487243652
    9. ',n' → logprob: -15.250113487243652
    10. ',)' → logprob: -15.500113487243652

Token 33: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4904475510120392
    2. 'self' → logprob: -0.9904475212097168
    3. ' number' → logprob: -4.615447521209717
    4. 'number' → logprob: -5.115447521209717
    5. ' value' → logprob: -9.240447998046875
    6. 'value' → logprob: -9.365447998046875
    7. ' decimal' → logprob: -9.865447998046875
    8. 'decimal' → logprob: -10.115447998046875
    9. 'n' → logprob: -10.865447998046875
    10. ' ' → logprob: -11.615447998046875

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020783171930816025
    2. '):' → logprob: -8.875207901000977
    3. ':int' → logprob: -10.375207901000977
    4. ')' → logprob: -10.375207901000977
    5. ' :' → logprob: -12.875207901000977
    6. ',' → logprob: -14.000207901000977
    7. '_:' → logprob: -14.250207901000977
    8. ':number' → logprob: -14.500207901000977
    9. ':)' → logprob: -15.250207901000977
    10. 'umber' → logprob: -15.875207901000977

Token 35: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.033674053847789764
    2. 'int' → logprob: -3.4086740016937256
    3. ')' → logprob: -10.783674240112305
    4. ' ' → logprob: -12.533674240112305
    5. '[int' → logprob: -13.783674240112305
    6. ':int' → logprob: -14.158674240112305
    7. ' ' → logprob: -14.283674240112305
    8. ' Optional' → logprob: -14.533674240112305
    9. ' )' → logprob: -15.033674240112305
    10. '=int' → logprob: -15.158674240112305

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000375380739569664
    2. '):' → logprob: -8.750375747680664
    3. ',' → logprob: -9.000375747680664
    4. ' )' → logprob: -9.500375747680664
    5. ':' → logprob: -11.625375747680664
    6. ')->' → logprob: -12.000375747680664
    7. '   ' → logprob: -12.875375747680664
    8. ',)' → logprob: -15.500375747680664
    9. ' ' → logprob: -15.875375747680664
    10. '`)' → logprob: -16.000375747680664

Token 37: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7307363152503967
    2. '->' → logprob: -0.8557363152503967
    3. ' ->' → logprob: -2.980736255645752
    4. ')->' → logprob: -3.730736255645752
    5. ':' → logprob: -4.105736255645752
    6. '):' → logprob: -6.355736255645752
    7. '   ' → logprob: -7.980736255645752
    8. '>' → logprob: -10.48073673248291
    9. '}->' → logprob: -10.98073673248291
    10. '```' → logprob: -11.10573673248291

Token 38: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.01937474124133587
    2. 'str' → logprob: -4.019374847412109
    3. ' Optional' → logprob: -6.769374847412109
    4. 'Optional' → logprob: -10.39437484741211
    5. ' List' → logprob: -11.01937484741211
    6. ' ' → logprob: -11.76937484741211
    7. '	str' → logprob: -11.89437484741211
    8. ' None' → logprob: -12.01937484741211
    9. ' ' → logprob: -12.89437484741211
    10. ' int' → logprob: -13.39437484741211

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014811802248004824
    2. '):' → logprob: -9.125147819519043
    3. '<|end|>' → logprob: -11.250147819519043
    4. ':return' → logprob: -11.500147819519043
    5. ':
' → logprob: -12.625147819519043
    6. '   ' → logprob: -12.875147819519043
    7. ':**' → logprob: -13.000147819519043
    8. ':def' → logprob: -13.250147819519043
    9. ' :' → logprob: -13.750147819519043
    10. ':void' → logprob: -14.000147819519043

Token 40: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14163346588611603
    2. 'pass' (adapté à ' pass') → logprob: -2.1416335105895996
    3. ' pass' → logprob: -4.2666335105896
    4. '...' → logprob: -7.6416335105896
    5. '   ' → logprob: -10.016633033752441
    6. '```' → logprob: -10.766633033752441
    7. '	pass' → logprob: -11.516633033752441
    8. ' ...' → logprob: -12.766633033752441
    9. 'raise' → logprob: -13.016633033752441
    10. ' raise' → logprob: -13.891633033752441

Token 42: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5658358335494995
    2. '<|end|>' → logprob: -0.9408358335494995
    3. '   ' → logprob: -4.065835952758789
    4. '

' → logprob: -5.065835952758789
    5. '    
' → logprob: -5.065835952758789
    6. '<|end|>' → logprob: -5.315835952758789
    7. '\n' → logprob: -5.690835952758789
    8. ' 
' → logprob: -6.815835952758789
    9. '  
' → logprob: -7.815835952758789
    10. '```' → logprob: -7.940835952758789

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3254444897174835
    2. '<|end|>' → logprob: -1.8254444599151611
    3. '   ' → logprob: -2.575444459915161
    4. '    
' → logprob: -3.700444459915161
    5. '<|end|>' → logprob: -5.57544469833374
    6. '\n' → logprob: -5.82544469833374
    7. '

' → logprob: -5.95044469833374
    8. 'class' → logprob: -6.57544469833374
    9. ' 
' → logprob: -6.57544469833374
    10. '```' → logprob: -6.95044469833374

Token 44: ' @' (ID: 759)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3190769851207733
    2. '   ' → logprob: -1.5690770149230957
    3. '    
' → logprob: -3.1940770149230957
    4. '<|end|>' → logprob: -4.694077014923096
    5. ' ' → logprob: -5.819077014923096
    6. 'class' → logprob: -6.069077014923096
    7. '

' → logprob: -6.069077014923096
    8. '    ' → logprob: -6.319077014923096
    9. ' 
' → logprob: -6.694077014923096
    10. '  ' → logprob: -6.819077014923096

Token 45: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -2.534558552724775e-05
    2. 'property' → logprob: -11.625025749206543
    3. 'abc' → logprob: -12.000025749206543
    4. 'staticmethod' → logprob: -12.125025749206543
    5. 'classmethod' → logprob: -12.500025749206543
    6. 'ab' → logprob: -14.750025749206543
    7. ' abstract' → logprob: -15.250025749206543
    8. 'convert' → logprob: -15.750025749206543
    9. 'abs' → logprob: -15.875025749206543
    10. '.abstract' → logprob: -16.500024795532227

Token 46: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.08933843672275543
    2. 'def' → logprob: -2.464338541030884
    3. '_method' → logprob: -8.214338302612305
    4. ' def' → logprob: -9.589338302612305
    5. ' method' → logprob: -11.464338302612305
    6. '.method' → logprob: -11.589338302612305
    7. 'ethod' → logprob: -12.089338302612305
    8. '   ' → logprob: -12.339338302612305
    9. 'classmethod' → logprob: -12.339338302612305
    10. 'token' → logprob: -12.339338302612305

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6376041769981384
    2. 'def' → logprob: -0.7626041769981384
    3. '   ' → logprob: -6.262604236602783
    4. '
' → logprob: -6.512604236602783
    5. ' def' → logprob: -6.887604236602783
    6. '\' → logprob: -8.262603759765625
    7. 'newline' → logprob: -9.637603759765625
    8. '```' → logprob: -9.762603759765625
    9. '    
' → logprob: -9.887603759765625
    10. '<|end|>' → logprob: -9.887603759765625

Token 48: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013002344639971852
    2. '
' → logprob: -6.75130033493042
    3. '   ' → logprob: -9.501299858093262
    4. ' def' → logprob: -10.001299858093262
    5. '
' → logprob: -12.626299858093262
    6. '```' → logprob: -13.376299858093262
    7. 'd' → logprob: -13.626299858093262
    8. '\' → logprob: -13.751299858093262
    9. '  ' → logprob: -14.376299858093262
    10. '	def' → logprob: -14.876299858093262

Token 49: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0016134120523929596
    2. 'classmethod' → logprob: -7.251613616943359
    3. '
' → logprob: -7.626613616943359
    4. 'convert' → logprob: -8.87661361694336
    5. 'staticmethod' → logprob: -9.37661361694336
    6. 'property' → logprob: -9.50161361694336
    7. ' def' → logprob: -9.75161361694336
    8. 'method' → logprob: -10.87661361694336
    9. 'class' → logprob: -10.87661361694336
    10. 'abstract' → logprob: -12.75161361694336

Token 50: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.5240538120269775
    2. 'convert' → logprob: -0.8990538120269775
    3. ' def' → logprob: -7.524053573608398
    4. 'def' → logprob: -7.899053573608398
    5. '_convert' → logprob: -11.399053573608398
    6. '.convert' → logprob: -12.899053573608398
    7. '
' → logprob: -13.024053573608398
    8. '   ' → logprob: -14.149053573608398
    9. '```' → logprob: -14.774053573608398
    10. '(convert' → logprob: -15.149053573608398

Token 51: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.12693314254283905
    2. '_from' → logprob: -2.1269330978393555
    3. 'from' → logprob: -12.876933097839355
    4. '_' → logprob: -13.501933097839355
    5. 'to' → logprob: -14.376933097839355
    6. '_for' → logprob: -15.626933097839355
    7. '_into' → logprob: -15.876933097839355
    8. '_t' → logprob: -16.501934051513672
    9. '_of' → logprob: -16.876934051513672
    10. ' to' → logprob: -17.001934051513672

Token 52: '_decimal' (ID: 178716)
  Prédit: '_decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_decimal' → logprob: -6.0033853515051305e-05
    2. 'decimal' → logprob: -9.875060081481934
    3. '_' → logprob: -11.750060081481934
    4. '_dec' → logprob: -15.000060081481934
    5. '_string' → logprob: -16.375059127807617
    6. 'Decimal' → logprob: -17.750059127807617
    7. '_str' → logprob: -18.000059127807617
    8. ' decimal' → logprob: -18.000059127807617
    9. '_de' → logprob: -18.000059127807617
    10. '_integer' → logprob: -18.125059127807617

Token 53: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004218554822728038
    2. 'self' → logprob: -8.125421524047852
    3. '(' → logprob: -9.000421524047852
    4. ' self' → logprob: -13.875421524047852
    5. ' (' → logprob: -14.875421524047852
    6. '   ' → logprob: -15.750421524047852
    7. ')' → logprob: -15.875421524047852
    8. '(
' → logprob: -15.875421524047852
    9. '```' → logprob: -16.12542152404785
    10. '	self' → logprob: -16.25042152404785

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6789137084269896e-05
    2. ' ,' → logprob: -10.87503719329834
    3. 'self' → logprob: -11.00003719329834
    4. ')' → logprob: -15.00003719329834
    5. '   ' → logprob: -15.62503719329834
    6. ',self' → logprob: -15.75003719329834
    7. 's' → logprob: -16.125036239624023
    8. ',n' → logprob: -16.500036239624023
    9. ',
' → logprob: -16.625036239624023
    10. '       ' → logprob: -16.875036239624023

Token 55: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20486468076705933
    2. ' self' → logprob: -1.704864740371704
    3. 's' → logprob: -5.954864501953125
    4. ' s' → logprob: -7.829864501953125
    5. 'str' → logprob: -8.454864501953125
    6. 'n' → logprob: -9.329864501953125
    7. ' str' → logprob: -10.204864501953125
    8. '   ' → logprob: -10.204864501953125
    9. ')' → logprob: -10.579864501953125
    10. '       ' → logprob: -10.704864501953125

Token 56: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024192029377445579
    2. ':str' → logprob: -8.375242233276367
    3. ' :' → logprob: -11.875242233276367
    4. ')' → logprob: -12.750242233276367
    5. '_:' → logprob: -13.875242233276367
    6. '):' → logprob: -15.625242233276367
    7. 's' → logprob: -16.250242233276367
    8. '   ' → logprob: -16.625242233276367
    9. 'str' → logprob: -17.000242233276367
    10. '_str' → logprob: -17.125242233276367

Token 57: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.12705913186073303
    2. ' str' → logprob: -2.1270592212677
    3. ')' → logprob: -9.002058982849121
    4. 'tr' → logprob: -13.127058982849121
    5. '[str' → logprob: -13.127058982849121
    6. 'int' → logprob: -14.002058982849121
    7. ' ' → logprob: -14.252058982849121
    8. '(str' → logprob: -14.752058982849121
    9. ':str' → logprob: -14.752058982849121
    10. '	str' → logprob: -15.252058982849121

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.613945101387799e-05
    2. ' )' → logprob: -9.500085830688477
    3. '   ' → logprob: -11.500085830688477
    4. '):' → logprob: -14.250085830688477
    5. '`)' → logprob: -15.250085830688477
    6. ' ' → logprob: -16.625085830688477
    7. ':' → logprob: -17.125085830688477
    8. ')->' → logprob: -17.500085830688477
    9. '')' → logprob: -17.625085830688477
    10. '  ' → logprob: -18.250085830688477

Token 59: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.21766597032546997
    2. '->' → logprob: -2.217665910720825
    3. ')' → logprob: -2.467665910720825
    4. '   ' → logprob: -6.967666149139404
    5. ')->' → logprob: -7.217666149139404
    6. ' ' → logprob: -8.967665672302246
    7. ':' → logprob: -9.342665672302246
    8. '  ' → logprob: -10.467665672302246
    9. '       ' → logprob: -11.217665672302246
    10. ',' → logprob: -12.092665672302246

Token 60: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3222082257270813
    2. 'int' → logprob: -1.3222081661224365
    3. ' Optional' → logprob: -4.947208404541016
    4. 'Optional' → logprob: -6.322208404541016
    5. ' ' → logprob: -12.697208404541016
    6. '[int' → logprob: -13.697208404541016
    7. '	int' → logprob: -13.697208404541016
    8. '	Optional' → logprob: -14.572208404541016
    9. ':int' → logprob: -14.822208404541016
    10. '<int' → logprob: -15.197208404541016

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004886920796707273
    2. '<|end|>' → logprob: -8.12548828125
    3. ':
' → logprob: -9.12548828125
    4. ':return' → logprob: -10.37548828125
    5. '):' → logprob: -10.87548828125
    6. ':def' → logprob: -11.12548828125
    7. '   ' → logprob: -11.87548828125
    8. ':void' → logprob: -12.62548828125
    9. '<|end|>' → logprob: -13.12548828125
    10. ' :' → logprob: -13.75048828125

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014901040121912956
    2. ' pass' → logprob: -6.751490116119385
    3. 'pass' → logprob: -8.626489639282227
    4. '<|end|>' → logprob: -9.001489639282227
    5. '   ' → logprob: -11.251489639282227
    6. '	pass' → logprob: -13.376489639282227
    7. '      ' → logprob: -14.126489639282227
    8. '    ' → logprob: -15.001489639282227
    9. '```' → logprob: -15.001489639282227
    10. '    ' → logprob: -15.376489639282227

Token 63: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.019577592611312866
    2. ' pass' → logprob: -4.519577503204346
    3. '       ' → logprob: -4.769577503204346
    4. '   ' → logprob: -12.019577980041504
    5. '	pass' → logprob: -13.144577980041504
    6. 'pas' → logprob: -14.519577980041504
    7. '```' → logprob: -14.769577980041504
    8. '...' → logprob: -15.769577980041504
    9. '      ' → logprob: -15.894577980041504
    10. ' ' → logprob: -16.269577026367188

Token 64: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6006528735160828
    2. 'class' → logprob: -0.8506528735160828
    3. '

' → logprob: -3.7256529331207275
    4. ' class' → logprob: -8.850652694702148
    5. '
' → logprob: -9.475652694702148
    6. '```' → logprob: -10.350652694702148
    7. '


' → logprob: -11.225652694702148
    8. '' → logprob: -11.225652694702148
    9. '<|end|>' → logprob: -11.225652694702148
    10. '
    
' → logprob: -12.850652694702148

Token 65: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6970721483230591
    2. 'class' → logprob: -0.6970721483230591
    3. '

' → logprob: -5.5720720291137695
    4. '
' → logprob: -9.69707202911377
    5. '```' → logprob: -11.07207202911377
    6. ' class' → logprob: -11.82207202911377
    7. '\n' → logprob: -11.94707202911377
    8. '' → logprob: -12.32207202911377
    9. '  
' → logprob: -12.32207202911377
    10. '<|end|>' → logprob: -12.69707202911377

Token 66: ' Base' (ID: 8729)
  Prédit: ' Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Binary' → logprob: -0.018491363152861595
    2. ' Decimal' → logprob: -4.393491268157959
    3. 'Binary' → logprob: -5.268491268157959
    4. ' Hex' → logprob: -7.268491268157959
    5. ' Roman' → logprob: -10.018491744995117
    6. 'Decimal' → logprob: -10.268491744995117
    7. ' Integer' → logprob: -11.643491744995117
    8. ' B' → logprob: -12.268491744995117
    9. ' ' → logprob: -12.393491744995117
    10. ' Custom' → logprob: -12.393491744995117

Token 67: 'Four' (ID: 35604)
  Prédit: 'Converter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -0.15630918741226196
    2. '2' → logprob: -2.781309127807617
    3. '10' → logprob: -2.781309127807617
    4. 'Number' → logprob: -5.031309127807617
    5. 'Conversion' → logprob: -5.281309127807617
    6. 'Convert' → logprob: -5.906309127807617
    7. '16' → logprob: -6.156309127807617
    8. 'N' → logprob: -6.531309127807617
    9. 'System' → logprob: -6.781309127807617
    10. '64' → logprob: -7.281309127807617

Token 68: 'Number' (ID: 3695)
  Prédit: '(Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Number' → logprob: -0.2935677170753479
    2. '(' → logprob: -2.043567657470703
    3. ':' → logprob: -2.793567657470703
    4. '(System' → logprob: -3.293567657470703
    5. 'Converter' → logprob: -4.668567657470703
    6. '(Base' → logprob: -5.043567657470703
    7. 'System' → logprob: -5.543567657470703
    8. 'Number' → logprob: -5.668567657470703
    9. '(N' → logprob: -6.918567657470703
    10. '():' → logprob: -7.043567657470703

Token 69: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -0.0016466111410409212
    2. 'system' → logprob: -7.126646518707275
    3. ':' → logprob: -7.501646518707275
    4. '(System' → logprob: -9.251646995544434
    5. '(Number' → logprob: -9.501646995544434
    6. '(' → logprob: -10.376646995544434
    7. ' System' → logprob: -10.626646995544434
    8. 's' → logprob: -11.251646995544434
    9. 'Number' → logprob: -11.376646995544434
    10. ' system' → logprob: -11.501646995544434

Token 70: '(Number' (ID: 76564)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04162110388278961
    2. '(' → logprob: -3.291621208190918
    3. '(Base' → logprob: -6.416621208190918
    4. '():' → logprob: -6.791621208190918
    5. ' :' → logprob: -8.166621208190918
    6. '(Abstract' → logprob: -8.791621208190918
    7. '):' → logprob: -9.166621208190918
    8. '(Number' → logprob: -10.166621208190918
    9. '(:' → logprob: -10.541621208190918
    10. '```' → logprob: -10.916621208190918

Token 71: 'System' (ID: 3320)
  Prédit: 'Four'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Four' → logprob: -0.6332504749298096
    2. 'System' → logprob: -0.7582504749298096
    3. 'system' → logprob: -8.38325023651123
    4. ')' → logprob: -9.00825023651123
    5. '   ' → logprob: -9.13325023651123
    6. 'of' → logprob: -10.00825023651123
    7. '  ' → logprob: -11.00825023651123
    8. ' system' → logprob: -11.25825023651123
    9. ' ' → logprob: -11.50825023651123
    10. ' Four' → logprob: -11.63325023651123

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.805981972021982e-05
    2. ')' → logprob: -9.87509822845459
    3. ':' → logprob: -10.00009822845459
    4. '):
' → logprob: -14.50009822845459
    5. '():' → logprob: -15.25009822845459
    6. '   ' → logprob: -16.000097274780273
    7. ' ):' → logprob: -16.500097274780273
    8. ':)' → logprob: -16.625097274780273
    9. ']:' → logprob: -16.750097274780273
    10. '):
' → logprob: -17.625097274780273

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.271831214427948
    2. '
' → logprob: -1.5218312740325928
    3. '    
' → logprob: -4.146831035614014
    4. 'def' → logprob: -6.521831035614014
    5. '    ' → logprob: -6.771831035614014
    6. '```' → logprob: -7.771831035614014
    7. '4' → logprob: -8.021831512451172
    8. ' def' → logprob: -8.396831512451172
    9. ' 
' → logprob: -9.271831512451172
    10. '   
' → logprob: -10.146831512451172

Token 74: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.07177604734897614
    2. 'def' (adapté à ' def') → logprob: -2.9467761516571045
    3. '   ' → logprob: -4.696775913238525
    4. ' digits' → logprob: -5.321775913238525
    5. 'digits' → logprob: -6.696775913238525
    6. '    ' → logprob: -6.946775913238525
    7. ' DIG' → logprob: -8.571776390075684
    8. ' ' → logprob: -9.196776390075684
    9. ' symbols' → logprob: -10.071776390075684
    10. 'DIG' → logprob: -10.571776390075684

Token 75: ' __' (ID: 2516)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.0011904643615707755
    2. ' ' → logprob: -7.251190662384033
    3. 'convert' → logprob: -7.751190662384033
    4. ' ' → logprob: -11.001190185546875
    5. ' _' → logprob: -11.376190185546875
    6. ' def' → logprob: -11.501190185546875
    7. '_convert' → logprob: -11.876190185546875
    8. '_' → logprob: -12.501190185546875
    9. ' __' → logprob: -15.626190185546875
    10. ' c' → logprob: -16.001190185546875

Token 76: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'convert' → logprob: -15.75
    3. 'ini' → logprob: -17.875
    4. ' init' → logprob: -19.375
    5. 'int' → logprob: -19.625
    6. 'inite' → logprob: -20.5
    7. 'str' → logprob: -20.875
    8. '```' → logprob: -21.5
    9. '	init' → logprob: -21.625
    10. 'call' → logprob: -22.125

Token 77: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16824635863304138
    2. '__(' → logprob: -1.9182463884353638
    3. '(' → logprob: -4.918246269226074
    4. ')(' → logprob: -8.418246269226074
    5. ' (' → logprob: -8.793246269226074
    6. 'self' → logprob: -9.293246269226074
    7. '__' → logprob: -10.043246269226074
    8. '__(
' → logprob: -10.043246269226074
    9. '_(' → logprob: -10.418246269226074
    10. '()(' → logprob: -11.168246269226074

Token 78: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012035090912831947
    2. ')' → logprob: -9.125120162963867
    3. '):
' → logprob: -12.375120162963867
    4. ' self' → logprob: -12.500120162963867
    5. '   ' → logprob: -13.500120162963867
    6. '0' → logprob: -14.250120162963867
    7. '
' → logprob: -14.875120162963867
    8. '(self' → logprob: -15.125120162963867
    9. '       ' → logprob: -15.250120162963867
    10. '	self' → logprob: -16.125120162963867

Token 79: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3696480393409729
    2. '):' → logprob: -1.3696479797363281
    3. ')' → logprob: -2.994647979736328
    4. ' ):' → logprob: -6.369647979736328
    5. ' ,' → logprob: -6.619647979736328
    6. ' ' → logprob: -7.244647979736328
    7. ' )' → logprob: -7.869647979736328
    8. ':' → logprob: -8.244647979736328
    9. '):
' → logprob: -9.119647979736328
    10. 'self' → logprob: -9.369647979736328

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09207803755998611
    2. 'self' → logprob: -2.5920779705047607
    3. '   ' → logprob: -4.84207820892334
    4. ' self' → logprob: -5.34207820892334
    5. ' ' → logprob: -8.71707820892334
    6. ' pass' → logprob: -9.46707820892334
    7. 'pass' → logprob: -9.71707820892334
    8. '0' → logprob: -10.09207820892334
    9. ')' → logprob: -11.09207820892334
    10. 'space' → logprob: -11.84207820892334

Token 81: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.762725830078125
    2. 'self' (adapté à ' self') → logprob: -0.762725830078125
    3. '       ' → logprob: -2.887725830078125
    4. ' super' → logprob: -5.387725830078125
    5. 'super' → logprob: -5.637725830078125
    6. '   ' → logprob: -6.012725830078125
    7. ' pass' → logprob: -7.512725830078125
    8. 'pass' → logprob: -8.637725830078125
    9. ' ' → logprob: -9.262725830078125
    10. '        ' → logprob: -10.512725830078125

Token 82: '.base' (ID: 15523)
  Prédit: '.d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.5838550329208374
    2. '.' → logprob: -1.9588550329208374
    3. '.al' → logprob: -2.208855152130127
    4. '._' → logprob: -2.583855152130127
    5. '.characters' → logprob: -2.958855152130127
    6. ' .' → logprob: -3.458855152130127
    7. '.symbol' → logprob: -4.083855152130127
    8. '.base' → logprob: -4.583855152130127
    9. '.charset' → logprob: -6.833855152130127
    10. '.allowed' → logprob: -7.208855152130127

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022615134716034
    2. '=' → logprob: -1.9102261066436768
    3. '   ' → logprob: -13.535225868225098
    4. '4' → logprob: -14.910225868225098
    5. '_base' → logprob: -16.035226821899414
    6. ':' → logprob: -16.785226821899414
    7. 's' → logprob: -16.910226821899414
    8. '_' → logprob: -17.035226821899414
    9. '    ' → logprob: -17.160226821899414
    10. ' ' → logprob: -17.660226821899414

Token 84: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00033581978641450405
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.875335693359375
    4. '' → logprob: -16.750335693359375
    5. '```' → logprob: -17.125335693359375
    6. '"' → logprob: -17.750335693359375
    7. '٤' → logprob: -18.125335693359375
    8. '۴' → logprob: -18.500335693359375
    9. ' ' → logprob: -19.000335693359375
    10. '  ' → logprob: -19.125335693359375

Token 85: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -18.875
    4. '' → logprob: -19.375
    5. '"' → logprob: -19.375
    6. '```' → logprob: -19.875
    7. '٤' → logprob: -20.125
    8. '۴' → logprob: -20.125
    9. '４' → logprob: -20.375
    10. ''' → logprob: -21.5

Token 86: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0030252449214458466
    2. ' self' → logprob: -5.878025054931641
    3. 'def' → logprob: -9.62802505493164
    4. '       ' → logprob: -9.62802505493164
    5. '   ' → logprob: -10.12802505493164
    6. 'super' → logprob: -10.75302505493164
    7. 'digits' → logprob: -11.00302505493164
    8. '	self' → logprob: -12.87802505493164
    9. ' ' → logprob: -13.00302505493164
    10. '  ' → logprob: -13.62802505493164

Token 89: '.d' (ID: 1380)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.8537407517433167
    2. '.' → logprob: -1.1037406921386719
    3. '.d' → logprob: -2.103740692138672
    4. '_digits' → logprob: -2.728740692138672
    5. '.characters' → logprob: -3.728740692138672
    6. '_chars' → logprob: -4.853740692138672
    7. '.al' → logprob: -5.103740692138672
    8. ' .' → logprob: -5.353740692138672
    9. 'digits' → logprob: -5.353740692138672
    10. '.tokens' → logprob: -7.103740692138672

Token 90: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0025253647472709417
    2. 'igit' → logprob: -6.002525329589844
    3. 'ig' → logprob: -10.252525329589844
    4. 'digits' → logprob: -12.377525329589844
    5. 'igts' → logprob: -13.377525329589844
    6. 'ict' → logprob: -13.377525329589844
    7. 'ictionary' → logprob: -14.002525329589844
    8. 'igs' → logprob: -14.002525329589844
    9. 'i' → logprob: -14.127525329589844
    10. 'igital' → logprob: -14.252525329589844

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011053244583308697
    2. '=' → logprob: -4.511053085327148
    3. ' ' → logprob: -12.636053085327148
    4. ' ='' → logprob: -13.761053085327148
    5. ':' → logprob: -14.636053085327148
    6. 's' → logprob: -15.261053085327148
    7. ' ="' → logprob: -15.636053085327148
    8. '=['' → logprob: -16.01105308532715
    9. '<|end|>' → logprob: -17.01105308532715
    10. '='' → logprob: -17.13605308532715

Token 92: ' ['' (ID: 5140)
  Prédit: ' [''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -1.0173262357711792
    2. ' '' → logprob: -1.5173262357711792
    3. ' "' → logprob: -1.7673262357711792
    4. '"' → logprob: -1.8923262357711792
    5. '['' → logprob: -2.6423263549804688
    6. ''' → logprob: -3.6423263549804688
    7. '["' → logprob: -8.767326354980469
    8. '[' → logprob: -10.267326354980469
    9. ' ["' → logprob: -10.392326354980469
    10. ' [' → logprob: -11.017326354980469

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '۰' → logprob: -15.5
    3. '０' → logprob: -16.25
    4. 'A' → logprob: -16.875
    5. '-' → logprob: -17.625
    6. ''' → logprob: -17.875
    7. '٠' → logprob: -18.0
    8. '०' → logprob: -19.5
    9. ' ' → logprob: -19.625
    10. '_' → logprob: -20.375

Token 94: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0007625799626111984
    2. '','' → logprob: -7.250762462615967
    3. ''' → logprob: -9.875762939453125
    4. ' ',' → logprob: -13.750762939453125
    5. '",' → logprob: -17.125762939453125
    6. '1' → logprob: -17.375762939453125
    7. '',
' → logprob: -17.750762939453125
    8. '0' → logprob: -18.125762939453125
    9. '',"' → logprob: -18.500762939453125
    10. '']' → logprob: -19.125762939453125

Token 95: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5761938691139221
    2. ' '' → logprob: -0.8261938691139221
    3. '1' → logprob: -8.451193809509277
    4. ' ' → logprob: -10.201193809509277
    5. '"' → logprob: -12.951193809509277
    6. ''u' → logprob: -15.201193809509277
    7. ''a' → logprob: -15.826193809509277
    8. ''A' → logprob: -15.826193809509277
    9. '',' → logprob: -15.951193809509277
    10. ' ' → logprob: -16.326194763183594

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '','' → logprob: -18.0
    3. ''' → logprob: -18.125
    4. '3' → logprob: -19.125
    5. '',' → logprob: -19.375
    6. '１' → logprob: -20.5
    7. ' ' → logprob: -21.0
    8. '

' → logprob: -21.25
    9. '۱' → logprob: -22.0
    10. '' → logprob: -22.5

Token 97: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -3.190178904333152e-05
    2. ''' → logprob: -11.000031471252441
    3. '','' → logprob: -11.625031471252441
    4. '2' → logprob: -12.125031471252441
    5. ',' → logprob: -14.875031471252441
    6. '",' → logprob: -15.125031471252441
    7. ' ',' → logprob: -15.750031471252441
    8. '',
' → logprob: -18.000032424926758
    9. ''',' → logprob: -18.750032424926758
    10. '',...
' → logprob: -19.250032424926758

Token 98: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31336697936058044
    2. ' '' → logprob: -1.3133670091629028
    3. ' ' → logprob: -9.313366889953613
    4. '2' → logprob: -11.688366889953613
    5. '"' → logprob: -12.813366889953613
    6. '<|end|>' → logprob: -14.063366889953613
    7. ',' → logprob: -14.188366889953613
    8. '',' → logprob: -14.188366889953613
    9. '['' → logprob: -15.688366889953613
    10. ''user' → logprob: -15.688366889953613

Token 99: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '

' → logprob: -16.875
    4. ''' → logprob: -17.375
    5. '
' → logprob: -18.375
    6. '۲' → logprob: -18.8125
    7. '２' → logprob: -19.0
    8. ''s' → logprob: -19.625
    9. '"' → logprob: -19.75
    10. '3' → logprob: -20.0

Token 100: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00021188464597798884
    2. ',' → logprob: -9.375211715698242
    3. '3' → logprob: -9.750211715698242
    4. ''' → logprob: -10.000211715698242
    5. '','' → logprob: -10.750211715698242
    6. ' ',' → logprob: -13.500211715698242
    7. '",' → logprob: -14.750211715698242
    8. ' ,' → logprob: -16.875211715698242
    9. ','' → logprob: -17.375211715698242
    10. ''',' → logprob: -17.500211715698242

Token 101: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20170655846595764
    2. ' '' → logprob: -1.7017065286636353
    3. '3' → logprob: -8.326706886291504
    4. ' ' → logprob: -10.076706886291504
    5. '"' → logprob: -12.951706886291504
    6. '',' → logprob: -13.576706886291504
    7. '<|end|>' → logprob: -14.076706886291504
    8. ',' → logprob: -14.201706886291504
    9. '`' → logprob: -14.451706886291504
    10. '
' → logprob: -14.701706886291504

Token 102: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.127333340875339e-06
    2. ''' → logprob: -13.125003814697266
    3. ' ' → logprob: -13.125003814697266
    4. '33' → logprob: -17.875003814697266
    5. '３' → logprob: -18.000003814697266
    6. ''s' → logprob: -18.125003814697266
    7. '۳' → logprob: -18.250003814697266
    8. '"' → logprob: -18.562503814697266
    9. ' '' → logprob: -19.312503814697266
    10. '٣' → logprob: -19.625003814697266

Token 103: '']

' (ID: 36979)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -3.173704271830502e-06
    2. ''' → logprob: -13.12500286102295
    3. ']' → logprob: -14.87500286102295
    4. '']
' → logprob: -15.12500286102295
    5. '']

' → logprob: -15.37500286102295
    6. '"]' → logprob: -15.75000286102295
    7. ' ']' → logprob: -15.75000286102295
    8. '',' → logprob: -16.875003814697266
    9. '']
' → logprob: -19.125003814697266
    10. '       ' → logprob: -19.500003814697266

Token 104: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15173745155334473
    2. '   ' → logprob: -2.0267374515533447
    3. '    
' → logprob: -5.276737213134766
    4. ' 
' → logprob: -6.526737213134766
    5. 'def' → logprob: -6.901737213134766
    6. '  
' → logprob: -7.151737213134766
    7. ' def' → logprob: -8.276737213134766
    8. '<|end|>' → logprob: -8.901737213134766
    9. '   
' → logprob: -9.276737213134766
    10. '```' → logprob: -9.651737213134766

Token 105: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0325924449716695e-05
    2. ' def' → logprob: -11.50001049041748
    3. '
' → logprob: -16.500009536743164
    4. '   ' → logprob: -18.000009536743164
    5. 'de' → logprob: -20.125009536743164
    6. '    
' → logprob: -20.375009536743164
    7. '```' → logprob: -22.875009536743164
    8. '	def' → logprob: -23.250009536743164
    9. '        
' → logprob: -23.250009536743164
    10. '  
' → logprob: -23.250009536743164

Token 106: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.01423825602978468
    2. 'convert' → logprob: -4.264238357543945
    3. ' def' → logprob: -9.639238357543945
    4. '_convert' → logprob: -11.889238357543945
    5. 'def' → logprob: -13.264238357543945
    6. '.convert' → logprob: -14.514238357543945
    7. ' ' → logprob: -14.889238357543945
    8. ' ' → logprob: -16.639238357543945
    9. '_' → logprob: -16.639238357543945
    10. ' _' → logprob: -17.889238357543945

Token 107: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0002622894535306841
    2. '_to' → logprob: -8.250262260437012
    3. '_' → logprob: -14.125262260437012
    4. '_for' → logprob: -15.250262260437012
    5. ' _' → logprob: -18.250263214111328
    6. '```' → logprob: -18.250263214111328
    7. ')_' → logprob: -18.375263214111328
    8. '_f' → logprob: -18.500263214111328
    9. 'from' → logprob: -18.625263214111328
    10. '_into' → logprob: -18.750263214111328

Token 108: '_decimal' (ID: 178716)
  Prédit: '_decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_decimal' → logprob: -1.688212614681106e-05
    2. 'decimal' → logprob: -11.000017166137695
    3. '_dec' → logprob: -15.750017166137695
    4. '_' → logprob: -17.375017166137695
    5. ' decimal' → logprob: -17.625017166137695
    6. 'Decimal' → logprob: -19.500017166137695
    7. '_de' → logprob: -19.625017166137695
    8. '_decay' → logprob: -20.375017166137695
    9. '```' → logprob: -20.625017166137695
    10. '(decimal' → logprob: -21.250017166137695

Token 109: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014180023572407663
    2. '(' → logprob: -8.875142097473145
    3. ' (' → logprob: -13.625142097473145
    4. '(
' → logprob: -14.875142097473145
    5. 'self' → logprob: -15.125142097473145
    6. ' self' → logprob: -16.500141143798828
    7. '   ' → logprob: -17.750141143798828
    8. '       ' → logprob: -17.875141143798828
    9. ' ' → logprob: -18.000141143798828
    10. '(s' → logprob: -18.375141143798828

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032068457221612334
    2. ' ,' → logprob: -8.750320434570312
    3. 'self' → logprob: -8.750320434570312
    4. ',n' → logprob: -13.500320434570312
    5. '       ' → logprob: -14.375320434570312
    6. ',self' → logprob: -14.625320434570312
    7. '   ' → logprob: -15.250320434570312
    8. ')' → logprob: -15.375320434570312
    9. ',
' → logprob: -15.500320434570312
    10. 'n' → logprob: -15.875320434570312

Token 111: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8608136177062988
    2. ' n' → logprob: -1.3608136177062988
    3. 'self' → logprob: -1.4858136177062988
    4. 'n' → logprob: -2.360813617706299
    5. '       ' → logprob: -9.98581314086914
    6. '   ' → logprob: -11.48581314086914
    7. ' ' → logprob: -12.48581314086914
    8. '(self' → logprob: -12.73581314086914
    9. '    ' → logprob: -13.73581314086914
    10. ',' → logprob: -14.23581314086914

Token 112: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04753279685974121
    2. '):' → logprob: -3.797532796859741
    3. ' :' → logprob: -4.17253303527832
    4. ')' → logprob: -5.17253303527832
    5. ' ):' → logprob: -6.29753303527832
    6. ' )' → logprob: -7.42253303527832
    7. ':int' → logprob: -8.42253303527832
    8. '):
' → logprob: -8.92253303527832
    9. '   ' → logprob: -9.54753303527832
    10. ' ' → logprob: -11.29753303527832

Token 113: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.575951337814331
    2. ' int' → logprob: -0.825951337814331
    3. ' ' → logprob: -12.20095157623291
    4. ')' → logprob: -12.70095157623291
    5. '   ' → logprob: -14.07595157623291
    6. '(int' → logprob: -14.07595157623291
    7. 'self' → logprob: -14.70095157623291
    8. '```' → logprob: -14.82595157623291
    9. ':int' → logprob: -15.45095157623291
    10. '[int' → logprob: -15.57595157623291

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019488678080961108
    2. '):' → logprob: -6.251948833465576
    3. ' )' → logprob: -11.001949310302734
    4. '):
' → logprob: -13.626949310302734
    5. ')->' → logprob: -14.001949310302734
    6. ':' → logprob: -14.126949310302734
    7. ' ):' → logprob: -14.126949310302734
    8. '   ' → logprob: -16.501949310302734
    9. '):

' → logprob: -17.876949310302734
    10. ' )->' → logprob: -18.501949310302734

Token 115: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011203341418877244
    2. ' :' → logprob: -7.001120567321777
    3. ':
' → logprob: -8.876120567321777
    4. ':return' → logprob: -10.251120567321777
    5. '):' → logprob: -11.126120567321777
    6. ' ->' → logprob: -11.876120567321777
    7. ')' → logprob: -12.376120567321777
    8. '   ' → logprob: -13.376120567321777
    9. ':def' → logprob: -13.501120567321777
    10. '       ' → logprob: -13.501120567321777

Token 116: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.20754055678844452
    2. ' '' → logprob: -2.332540512084961
    3. ' "' → logprob: -3.207540512084961
    4. ' ' → logprob: -3.832540512084961
    5. '"' → logprob: -4.082540512084961
    6. ''' → logprob: -5.207540512084961
    7. 'str' → logprob: -5.957540512084961
    8. ' self' → logprob: -6.332540512084961
    9. ' int' → logprob: -7.832540512084961
    10. ' f' → logprob: -8.707540512084961

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004160787910223007
    2. ':
' → logprob: -5.5041608810424805
    3. '       ' → logprob: -9.62916088104248
    4. '):' → logprob: -11.87916088104248
    5. '):
' → logprob: -12.37916088104248
    6. '   ' → logprob: -13.50416088104248
    7. ':
' → logprob: -13.75416088104248
    8. ':return' → logprob: -13.75416088104248
    9. ':def' → logprob: -14.37916088104248
    10. ',' → logprob: -14.50416088104248

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00965184811502695
    2. ' if' → logprob: -5.0096516609191895
    3. 'result' → logprob: -6.3846516609191895
    4. ' result' → logprob: -7.1346516609191895
    5. 'if' → logprob: -8.009652137756348
    6. '   ' → logprob: -10.509652137756348
    7. 'res' → logprob: -10.759652137756348
    8. 's' → logprob: -10.884652137756348
    9. ' s' → logprob: -11.759652137756348
    10. '        
' → logprob: -12.134652137756348

Token 119: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.013828602619469166
    2. 'if' (adapté à ' if') → logprob: -4.513828754425049
    3. '       ' → logprob: -5.888828754425049
    4. ' result' → logprob: -12.63882827758789
    5. 'result' → logprob: -13.01382827758789
    6. '	if' → logprob: -15.13882827758789
    7. '```' → logprob: -15.26382827758789
    8. ' ' → logprob: -15.51382827758789
    9. '        
' → logprob: -15.51382827758789
    10. ' 
' → logprob: -16.26382827758789

Token 120: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004078639671206474
    2. 'n' → logprob: -5.5040788650512695
    3. '	n' → logprob: -16.129077911376953
    4. ' ' → logprob: -16.379077911376953
    5. ' not' → logprob: -17.879077911376953
    6. ' н' → logprob: -19.129077911376953
    7. '0' → logprob: -19.504077911376953
    8. ' ' → logprob: -19.504077911376953
    9. '_n' → logprob: -19.879077911376953
    10. ')n' → logprob: -20.254077911376953

Token 121: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004176698625087738
    2. '==' → logprob: -5.504176616668701
    3. ' <' → logprob: -9.25417709350586
    4. ' ' → logprob: -13.75417709350586
    5. '<' → logprob: -14.75417709350586
    6. '0' → logprob: -14.87917709350586
    7. '=' → logprob: -15.12917709350586
    8. ' =' → logprob: -15.87917709350586
    9. ' <=' → logprob: -16.37917709350586
    10. ' ' → logprob: -16.62917709350586

Token 122: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01416350994259119
    2. '0' → logprob: -4.264163494110107
    3. '```' → logprob: -19.139163970947266
    4. ' ' → logprob: -19.389163970947266
    5. '   ' → logprob: -19.389163970947266
    6. '  ' → logprob: -20.389163970947266
    7. '	' → logprob: -20.764163970947266
    8. '<|end|>' → logprob: -20.889163970947266
    9. ' "' → logprob: -21.451663970947266
    10. '۰' → logprob: -21.514163970947266

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324547804892063
    2. ' ' → logprob: -3.7732455730438232
    3. '۰' → logprob: -19.023244857788086
    4. '```' → logprob: -19.148244857788086
    5. '   ' → logprob: -19.398244857788086
    6. ' ' → logprob: -19.648244857788086
    7. '  ' → logprob: -19.898244857788086
    8. '０' → logprob: -20.898244857788086
    9. '	' → logprob: -20.898244857788086
    10. '00' → logprob: -21.335744857788086

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06272884458303452
    2. ':
' → logprob: -2.8127288818359375
    3. ':return' → logprob: -7.1877288818359375
    4. ':
' → logprob: -13.562728881835938
    5. '           ' → logprob: -14.062728881835938
    6. '       ' → logprob: -14.187728881835938
    7. ' return' → logprob: -14.562728881835938
    8. ' :' → logprob: -14.687728881835938
    9. 'return' → logprob: -14.812728881835938
    10. ' :
' → logprob: -14.937728881835938

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09963688254356384
    2. ' return' → logprob: -2.4746367931365967
    3. 'return' → logprob: -5.224637031555176
    4. '
' → logprob: -5.599637031555176
    5. '       ' → logprob: -7.099637031555176
    6. '0' → logprob: -7.474637031555176
    7. ' 
' → logprob: -9.849637031555176
    8. ' ' → logprob: -10.224637031555176
    9. ':return' → logprob: -10.974637031555176
    10. '   ' → logprob: -11.224637031555176

Token 126: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3944539725780487
    2. 'return' (adapté à ' return') → logprob: -1.144454002380371
    3. '           ' → logprob: -4.894454002380371
    4. '"' → logprob: -10.519454002380371
    5. ' ' → logprob: -11.644454002380371
    6. '       ' → logprob: -11.894454002380371
    7. ''' → logprob: -12.519454002380371
    8. ' 
' → logprob: -12.519454002380371
    9. ':return' → logprob: -12.519454002380371
    10. '               ' → logprob: -12.894454002380371

Token 127: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07911119610071182
    2. '"' → logprob: -2.579111099243164
    3. ' '' → logprob: -8.454111099243164
    4. ' "' → logprob: -11.704111099243164
    5. '0' → logprob: -15.704111099243164
    6. ' ' → logprob: -16.704111099243164
    7. 'self' → logprob: -17.704111099243164
    8. '`' → logprob: -18.454111099243164
    9. ''s' → logprob: -19.704111099243164
    10. ' self' → logprob: -19.704111099243164

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۰' → logprob: -19.75
    4. '０' → logprob: -20.75
    5. ''' → logprob: -21.75
    6. '٠' → logprob: -22.375
    7. '```' → logprob: -22.625
    8. '00' → logprob: -22.625
    9. '000' → logprob: -22.875
    10. '')' → logprob: -22.9375

Token 129: ''
' (ID: 2207)
  Prédit: ''
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''
' → logprob: -0.04865765571594238
    2. ''' → logprob: -3.0486576557159424
    3. ''
' → logprob: -9.923657417297363
    4. ''

' → logprob: -10.798657417297363
    5. '       ' → logprob: -14.923657417297363
    6. ''"
' → logprob: -16.04865837097168
    7. '"
' → logprob: -16.42365837097168
    8. ''


' → logprob: -17.54865837097168
    9. '''
' → logprob: -17.54865837097168
    10. '   ' → logprob: -17.92365837097168

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004434389993548393
    2. '
' → logprob: -5.754434585571289
    3. '        
' → logprob: -7.504434585571289
    4. '   ' → logprob: -7.879434585571289
    5. 'n' → logprob: -8.504434585571289
    6. '    
' → logprob: -10.129434585571289
    7. 'result' → logprob: -10.754434585571289
    8. '  
' → logprob: -11.379434585571289
    9. '       
' → logprob: -11.629434585571289
    10. ' n' → logprob: -12.004434585571289

Token 131: ' digits' (ID: 37806)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5221964716911316
    2. 'result' → logprob: -1.0221965312957764
    3. '       ' → logprob: -3.1471965312957764
    4. 'res' → logprob: -6.022196292877197
    5. ' res' → logprob: -6.897196292877197
    6. ' digits' → logprob: -8.522196769714355
    7. 'digits' (adapté à ' digits') → logprob: -9.147196769714355
    8. '        
' → logprob: -9.147196769714355
    9. '	result' → logprob: -10.147196769714355
    10. '
' → logprob: -10.272196769714355

Token 132: '_re' (ID: 3067)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020706547424197197
    2. '=' → logprob: -3.8957066535949707
    3. '=[]' → logprob: -9.145706176757812
    4. ':' → logprob: -11.020706176757812
    5. ' ' → logprob: -11.645706176757812
    6. '_str' → logprob: -12.020706176757812
    7. 's' → logprob: -12.020706176757812
    8. '   ' → logprob: -12.145706176757812
    9. ',' → logprob: -12.395706176757812
    10. '=[]
' → logprob: -13.145706176757812

Token 133: 'versed' (ID: 76479)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00308430939912796
    2. 'versed' → logprob: -6.128084182739258
    3. 'mainder' → logprob: -7.878084182739258
    4. 'main' → logprob: -8.503084182739258
    5. 's' → logprob: -8.503084182739258
    6. 'v' → logprob: -9.753084182739258
    7. 'st' → logprob: -10.253084182739258
    8. 'ma' → logprob: -11.503084182739258
    9. 'c' → logprob: -13.128084182739258
    10. 'p' → logprob: -13.503084182739258

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006905759684741497
    2. '=' → logprob: -5.006905555725098
    3. '=[]' → logprob: -8.881905555725098
    4. ' ' → logprob: -10.631905555725098
    5. ':' → logprob: -10.881905555725098
    6. ',' → logprob: -13.381905555725098
    7. 's' → logprob: -13.506905555725098
    8. '   ' → logprob: -13.756905555725098
    9. '[]' → logprob: -14.006905555725098
    10. '_' → logprob: -14.506905555725098

Token 135: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006731949746608734
    2. ' []' → logprob: -5.006731986999512
    3. '[]
' → logprob: -11.131731986999512
    4. '[]

' → logprob: -14.381731986999512
    5. ' []
' → logprob: -14.631731986999512
    6. '[]"' → logprob: -14.881731986999512
    7. '[]}' → logprob: -15.256731986999512
    8. '[]>' → logprob: -16.131731033325195
    9. '[' → logprob: -16.131731033325195
    10. '   ' → logprob: -17.506731033325195

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04932883754372597
    2. '<|end|>' → logprob: -3.5493288040161133
    3. ' ' → logprob: -4.549328804016113
    4. ' while' → logprob: -5.299328804016113
    5. '   ' → logprob: -7.049328804016113
    6. '        
' → logprob: -7.424328804016113
    7. ' 
' → logprob: -7.424328804016113
    8. '    ' → logprob: -8.049328804016113
    9. '        ' → logprob: -8.174328804016113
    10. '  ' → logprob: -8.674328804016113

Token 137: ' current' (ID: 2208)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1036858856678009
    2. ' while' → logprob: -2.3536858558654785
    3. '       ' → logprob: -5.8536858558654785
    4. 'num' → logprob: -7.4786858558654785
    5. ' num' → logprob: -10.478686332702637
    6. '	while' → logprob: -12.353686332702637
    7. '   ' → logprob: -13.103686332702637
    8. 'current' (adapté à ' current') → logprob: -13.853686332702637
    9. 'number' → logprob: -13.978686332702637
    10. 'While' → logprob: -14.103686332702637

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010331686353310943
    2. '=' → logprob: -7.001033306121826
    3. '_number' → logprob: -9.876032829284668
    4. ' ' → logprob: -10.626032829284668
    5. '_n' → logprob: -10.626032829284668
    6. '=n' → logprob: -11.501032829284668
    7. '_num' → logprob: -12.126032829284668
    8. '_value' → logprob: -12.501032829284668
    9. '_' → logprob: -14.001032829284668
    10. ' n' → logprob: -14.626032829284668

Token 139: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06196970492601395
    2. 'n' → logprob: -2.811969757080078
    3. '    ' → logprob: -14.311969757080078
    4. '	n' → logprob: -14.561969757080078
    5. '       ' → logprob: -14.686969757080078
    6. '   ' → logprob: -15.061969757080078
    7. '        ' → logprob: -16.561969757080078
    8. ' ' → logprob: -16.936969757080078
    9. '_n' → logprob: -16.936969757080078
    10. '
' → logprob: -17.186969757080078

Token 140: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37290146946907043
    2. ' 
' → logprob: -1.747901439666748
    3. '       ' → logprob: -2.747901439666748
    4. '        
' → logprob: -3.372901439666748
    5. ' while' → logprob: -4.122901439666748
    6. '        ' → logprob: -4.622901439666748
    7. '  
' → logprob: -5.497901439666748
    8. ' ' → logprob: -5.747901439666748
    9. 'while' → logprob: -5.997901439666748
    10. '<|end|>' → logprob: -6.247901439666748

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037255071103572845
    2. ' while' → logprob: -3.537255048751831
    3. '<|end|>' → logprob: -5.66225528717041
    4. 'while' → logprob: -5.91225528717041
    5. '        
' → logprob: -7.28725528717041
    6. ' 
' → logprob: -8.16225528717041
    7. '<|end|>' → logprob: -9.53725528717041
    8. '        ' → logprob: -9.78725528717041
    9. '
' → logprob: -10.28725528717041
    10. '	while' → logprob: -10.28725528717041

Token 142: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2270566076040268
    2. 'while' (adapté à ' while') → logprob: -2.2270565032958984
    3. '       ' → logprob: -2.3520565032958984
    4. '	while' → logprob: -9.977056503295898
    5. 'While' → logprob: -11.102056503295898
    6. '
' → logprob: -11.352056503295898
    7. '        
' → logprob: -11.477056503295898
    8. ' 
' → logprob: -12.102056503295898
    9. ' ' → logprob: -12.352056503295898
    10. '   ' → logprob: -12.977056503295898

Token 143: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.06197015196084976
    2. 'current' → logprob: -2.8119702339172363
    3. 'Current' → logprob: -14.061969757080078
    4. '(current' → logprob: -14.311969757080078
    5. '	current' → logprob: -14.936969757080078
    6. '$current' → logprob: -15.186969757080078
    7. '_current' → logprob: -15.686969757080078
    8. 'urrent' → logprob: -15.936969757080078
    9. '[current' → logprob: -16.061969757080078
    10. '.current' → logprob: -16.061969757080078

Token 144: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3879023790359497
    2. ' >' → logprob: -1.1379023790359497
    3. '%' → logprob: -6.88790225982666
    4. ' %' → logprob: -11.63790225982666
    5. ' ' → logprob: -14.26290225982666
    6. ':' → logprob: -14.63790225982666
    7. ' ' → logprob: -15.01290225982666
    8. '">' → logprob: -16.012903213500977
    9. '```' → logprob: -16.637903213500977
    10. '&gt' → logprob: -17.262903213500977

Token 145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47407710552215576
    2. ' ' → logprob: -0.9740771055221558
    3. '  ' → logprob: -17.349077224731445
    4. '   ' → logprob: -17.724077224731445
    5. '```' → logprob: -18.599077224731445
    6. ' ' → logprob: -19.474077224731445
    7. '>' → logprob: -19.474077224731445
    8. '
' → logprob: -19.974077224731445
    9. '    ' → logprob: -19.974077224731445
    10. '=' → logprob: -20.661577224731445

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.25023078918457
    4. '```' → logprob: -17.25023078918457
    5. '۰' → logprob: -17.62523078918457
    6. '
' → logprob: -17.87523078918457
    7. '  ' → logprob: -18.00023078918457
    8. '

' → logprob: -18.93773078918457
    9. '=' → logprob: -19.00023078918457
    10. '０' → logprob: -19.06273078918457

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06995855271816254
    2. ':
' → logprob: -2.694958448410034
    3. ' :
' → logprob: -11.944958686828613
    4. ' :' → logprob: -12.194958686828613
    5. ',' → logprob: -12.819958686828613
    6. '):
' → logprob: -12.944958686828613
    7. '       ' → logprob: -13.194958686828613
    8. '           ' → logprob: -13.694958686828613
    9. ':
' → logprob: -14.069958686828613
    10. ':

' → logprob: -14.194958686828613

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016626257449388504
    2. ' digits' → logprob: -5.016626358032227
    3. ' 
' → logprob: -5.891626358032227
    4. 'digits' → logprob: -6.016626358032227
    5. '            
' → logprob: -6.266626358032227
    6. '
' → logprob: -6.766626358032227
    7. '            ' → logprob: -6.891626358032227
    8. '    
' → logprob: -8.641626358032227
    9. '        
' → logprob: -9.391626358032227
    10. '```' → logprob: -9.516626358032227

Token 149: ' remainder' (ID: 47056)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.12202511727809906
    2. ' remainder' → logprob: -3.4970250129699707
    3. 'digits' → logprob: -3.4970250129699707
    4. ' ' → logprob: -3.8720250129699707
    5. ' current' → logprob: -3.9970250129699707
    6. '            ' → logprob: -4.747025012969971
    7. '           ' → logprob: -5.622025012969971
    8. ' ' → logprob: -6.747025012969971
    9. ' 
' → logprob: -6.872025012969971
    10. '_digits' → logprob: -9.122025489807129

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022737324237823
    2. '=' → logprob: -1.9102274179458618
    3. ' ' → logprob: -13.03522777557373
    4. '=current' → logprob: -14.41022777557373
    5. ' =
' → logprob: -15.66022777557373
    6. '.append' → logprob: -16.035226821899414
    7. '=

' → logprob: -17.410226821899414
    8. ')' → logprob: -17.410226821899414
    9. '=int' → logprob: -17.660226821899414
    10. 's' → logprob: -17.910226821899414

Token 151: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.014163863845169544
    2. 'current' → logprob: -4.264163970947266
    3. '	current' → logprob: -15.889163970947266
    4. ' ' → logprob: -16.014163970947266
    5. '[current' → logprob: -16.514163970947266
    6. '$current' → logprob: -16.514163970947266
    7. 'Current' → logprob: -18.264163970947266
    8. '(current' → logprob: -18.264163970947266
    9. '.current' → logprob: -18.639163970947266
    10. '_current' → logprob: -19.139163970947266

Token 152: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0009115827269852161
    2. '%' → logprob: -7.000911712646484
    3. ' ' → logprob: -17.625911712646484
    4. ' ' → logprob: -19.000911712646484
    5. ' %
' → logprob: -22.000911712646484
    6. ' `%' → logprob: -22.750911712646484
    7. '%d' → logprob: -22.875911712646484
    8. '%s' → logprob: -23.000911712646484
    9. '%n' → logprob: -23.250911712646484
    10. '```' → logprob: -23.500911712646484

Token 153: ' self' (ID: 1051)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.8850570321083069
    2. ' self' → logprob: -1.260056972503662
    3. 'self' → logprob: -1.885056972503662
    4. ' ' → logprob: -1.885056972503662
    5. '   ' → logprob: -10.76005744934082
    6. ' four' → logprob: -12.76005744934082
    7. '	self' → logprob: -13.01005744934082
    8. '```' → logprob: -13.76005744934082
    9. '    ' → logprob: -13.88505744934082
    10. '       ' → logprob: -14.51005744934082

Token 154: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -5.824579784530215e-05
    2. 'base' → logprob: -10.2500581741333
    3. '.' → logprob: -10.7500581741333
    4. ' base' → logprob: -13.6250581741333
    5. ' .' → logprob: -15.8750581741333
    6. '	base' → logprob: -17.750059127807617
    7. 'Base' → logprob: -18.250059127807617
    8. '_base' → logprob: -18.875059127807617
    9. '.b' → logprob: -19.000059127807617
    10. '.Base' → logprob: -20.125059127807617

Token 155: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08626987785100937
    2. '
' → logprob: -3.3362698554992676
    3. ')' → logprob: -3.8362698554992676
    4. '            
' → logprob: -4.586269855499268
    5. '<|end|>' → logprob: -5.586269855499268
    6. ' 
' → logprob: -5.836269855499268
    7. '               ' → logprob: -6.086269855499268
    8. ')
' → logprob: -6.461269855499268
    9. '       ' → logprob: -6.461269855499268
    10. ',' → logprob: -7.336269855499268

Token 156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00039647609810344875
    2. 'digits' → logprob: -8.375396728515625
    3. ')' → logprob: -9.750396728515625
    4. ' digits' → logprob: -10.500396728515625
    5. '            
' → logprob: -11.250396728515625
    6. '       ' → logprob: -11.375396728515625
    7. 'current' → logprob: -11.375396728515625
    8. ' current' → logprob: -11.625396728515625
    9. '<|end|>' → logprob: -11.750396728515625
    10. '               ' → logprob: -12.375396728515625

Token 157: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.03998570144176483
    2. 'digits' (adapté à ' digits') → logprob: -3.2899856567382812
    3. ' current' → logprob: -6.289985656738281
    4. 'current' → logprob: -9.664985656738281
    5. '           ' → logprob: -11.664985656738281
    6. '            ' → logprob: -12.414985656738281
    7. '_digits' → logprob: -13.289985656738281
    8. ' ' → logprob: -13.289985656738281
    9. 'igits' → logprob: -13.664985656738281
    10. ' 
' → logprob: -13.789985656738281

Token 158: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.2664456789934775e-06
    2. '.append' → logprob: -14.000000953674316
    3. 're' → logprob: -15.625000953674316
    4. 'Re' → logprob: -16.500001907348633
    5. '._' → logprob: -16.875001907348633
    6. '_' → logprob: -17.625001907348633
    7. '.re' → logprob: -17.625001907348633
    8. '	re' → logprob: -18.625001907348633
    9. '.' → logprob: -19.000001907348633
    10. '_RE' → logprob: -19.500001907348633

Token 159: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.005423481110483408
    2. 'e' → logprob: -5.755423545837402
    3. 've' → logprob: -7.505423545837402
    4. 'vers' → logprob: -7.630423545837402
    5. 'verse' → logprob: -7.880423545837402
    6. 'append' → logprob: -8.255423545837402
    7. 'ever' → logprob: -8.755423545837402
    8. 're' → logprob: -8.880423545837402
    9. 'ver' → logprob: -9.130423545837402
    10. '.append' → logprob: -9.880423545837402

Token 160: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016194197814911604
    2. '.' → logprob: -8.750162124633789
    3. ' .' → logprob: -12.750162124633789
    4. '.ap' → logprob: -15.750162124633789
    5. '.app' → logprob: -16.00016212463379
    6. 'append' → logprob: -16.62516212463379
    7. '.Append' → logprob: -16.87516212463379
    8. '.add' → logprob: -17.12516212463379
    9. '.push' → logprob: -17.25016212463379
    10. '.insert' → logprob: -18.12516212463379

Token 161: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005987849435769022
    2. '(str' → logprob: -7.500598907470703
    3. '(' → logprob: -10.000598907470703
    4. 'self' → logprob: -14.875598907470703
    5. '(
' → logprob: -17.625598907470703
    6. ' (' → logprob: -18.250598907470703
    7. '('' → logprob: -18.750598907470703
    8. ' self' → logprob: -18.875598907470703
    9. 'str' → logprob: -19.125598907470703
    10. '	self' → logprob: -19.500598907470703

Token 162: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.00015502817404922098
    2. '.' → logprob: -9.750155448913574
    3. ' .' → logprob: -10.000155448913574
    4. 'digits' → logprob: -10.000155448913574
    5. ').' → logprob: -12.750155448913574
    6. '	d' → logprob: -13.875155448913574
    7. ' ' → logprob: -14.750155448913574
    8. ''.' → logprob: -14.875155448913574
    9. '".' → logprob: -15.375155448913574
    10. ' digits' → logprob: -15.750155448913574

Token 163: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -5.6934557505883276e-05
    2. 'its' → logprob: -10.250057220458984
    3. 'ig' → logprob: -11.750057220458984
    4. 'igit' → logprob: -12.125057220458984
    5. 'digits' → logprob: -12.875057220458984
    6. 'igts' → logprob: -13.625057220458984
    7. 'i' → logprob: -13.875057220458984
    8. 'g' → logprob: -14.625057220458984
    9. 'e' → logprob: -14.625057220458984
    10. '
' → logprob: -15.000057220458984

Token 164: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.65707261255011e-06
    2. ' [' → logprob: -11.750008583068848
    3. ')[' → logprob: -14.500008583068848
    4. '   ' → logprob: -16.125009536743164
    5. 're' → logprob: -16.750009536743164
    6. ' ' → logprob: -17.750009536743164
    7. ')' → logprob: -18.000009536743164
    8. '       ' → logprob: -18.250009536743164
    9. '[
' → logprob: -18.375009536743164
    10. '(re' → logprob: -18.875009536743164

Token 165: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00020377879263833165
    2. ' remainder' → logprob: -8.500204086303711
    3. 'rema' → logprob: -15.750204086303711
    4. 'rest' → logprob: -16.62520408630371
    5. 'rem' → logprob: -17.00020408630371
    6. '	re' → logprob: -17.37520408630371
    7. ' ' → logprob: -17.87520408630371
    8. '   ' → logprob: -18.00020408630371
    9. '           ' → logprob: -19.50020408630371
    10. 'remaining' → logprob: -19.87520408630371

Token 166: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -8.828512363834307e-05
    2. 'ma' → logprob: -9.375088691711426
    3. 'm' → logprob: -12.750088691711426
    4. 'main' → logprob: -14.750088691711426
    5. ' ma' → logprob: -16.75008773803711
    6. 'a' → logprob: -17.12508773803711
    7. 'st' → logprob: -17.75008773803711
    8. 'mai' → logprob: -18.00008773803711
    9. 'inder' → logprob: -18.50008773803711
    10. 'mand' → logprob: -18.62508773803711

Token 167: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.6548545956611633
    2. '])' → logprob: -1.0298545360565186
    3. ')' → logprob: -2.6548545360565186
    4. ')
' → logprob: -3.1548545360565186
    5. ']' → logprob: -5.029854774475098
    6. '])
' → logprob: -6.529854774475098
    7. '           ' → logprob: -6.779854774475098
    8. ')
' → logprob: -7.529854774475098
    9. ']
' → logprob: -8.154854774475098
    10. '       ' → logprob: -8.154854774475098

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06615737825632095
    2. '
' → logprob: -2.816157341003418
    3. 'current' → logprob: -6.191157341003418
    4. ' current' → logprob: -6.441157341003418
    5. '            
' → logprob: -7.816157341003418
    6. '
' → logprob: -10.066157341003418
    7. '    
' → logprob: -10.566157341003418
    8. ' 
' → logprob: -11.066157341003418
    9. '       ' → logprob: -11.566157341003418
    10. '   ' → logprob: -11.941157341003418

Token 169: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.0336613766849041
    2. 'current' (adapté à ' current') → logprob: -3.408661365509033
    3. ' ' → logprob: -11.783661842346191
    4. ' 
' → logprob: -13.033661842346191
    5. '.current' → logprob: -13.283661842346191
    6. '	current' → logprob: -14.158661842346191
    7. '[current' → logprob: -14.158661842346191
    8. '$current' → logprob: -14.533661842346191
    9. '_current' → logprob: -14.908661842346191
    10. '(current' → logprob: -15.033661842346191

Token 170: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0023681551683694124
    2. ' =' → logprob: -6.752367973327637
    3. '//=' → logprob: -6.752367973327637
    4. ' ' → logprob: -11.127367973327637
    5. '=' → logprob: -11.377367973327637
    6. '//' → logprob: -13.002367973327637
    7. ' >>=' → logprob: -15.377367973327637
    8. ' ' → logprob: -15.377367973327637
    9. '   ' → logprob: -16.127368927001953
    10. '	' → logprob: -17.002368927001953

Token 171: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.935296834039036e-06
    2. '=}' → logprob: -13.75000286102295
    3. '=
' → logprob: -13.87500286102295
    4. '=_' → logprob: -15.50000286102295
    5. '='' → logprob: -16.375003814697266
    6. '=.' → logprob: -16.500003814697266
    7. '=current' → logprob: -16.500003814697266
    8. '4' → logprob: -16.625003814697266
    9. '=:' → logprob: -16.625003814697266
    10. '=self' → logprob: -16.625003814697266

Token 172: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0701238214969635
    2. ' self' → logprob: -2.8201239109039307
    3. '4' → logprob: -4.820123672485352
    4. ' ' → logprob: -9.820123672485352
    5. '   ' → logprob: -13.570123672485352
    6. '	self' → logprob: -14.820123672485352
    7. '```' → logprob: -15.320123672485352
    8. '
' → logprob: -15.570123672485352
    9. '           ' → logprob: -15.820123672485352
    10. '       ' → logprob: -15.945123672485352

Token 173: '.base' (ID: 15523)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0700751468539238
    2. '.base' → logprob: -2.820075035095215
    3. ' base' → logprob: -4.820075035095215
    4. '.' → logprob: -13.445075035095215
    5. '4' → logprob: -13.445075035095215
    6. 'self' → logprob: -13.570075035095215
    7. '_base' → logprob: -13.695075035095215
    8. ' ' → logprob: -13.820075035095215
    9. '	base' → logprob: -13.945075035095215
    10. 'Base' → logprob: -14.320075035095215

Token 174: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2844010591506958
    2. '
' → logprob: -1.4094010591506958
    3. '        
' → logprob: -6.034400939941406
    4. ' 
' → logprob: -7.909400939941406
    5. '  
' → logprob: -8.784400939941406
    6. '    
' → logprob: -8.784400939941406
    7. '
' → logprob: -9.534400939941406
    8. '   ' → logprob: -10.284400939941406
    9. ' return' → logprob: -11.284400939941406
    10. '   
' → logprob: -11.409400939941406

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003633521846495569
    2. ' return' → logprob: -8.75036334991455
    3. '
' → logprob: -9.50036334991455
    4. '   ' → logprob: -10.00036334991455
    5. '        
' → logprob: -10.12536334991455
    6. 'return' → logprob: -10.25036334991455
    7. '      ' → logprob: -13.12536334991455
    8. '    
' → logprob: -13.50036334991455
    9. '  
' → logprob: -13.62536334991455
    10. ' 
' → logprob: -14.12536334991455

Token 176: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2414533942937851
    2. 'return' (adapté à ' return') → logprob: -1.7414534091949463
    3. '       ' → logprob: -3.2414534091949463
    4. '   ' → logprob: -9.491453170776367
    5. 'digits' → logprob: -10.866453170776367
    6. '
' → logprob: -10.991453170776367
    7. ' digits' → logprob: -11.116453170776367
    8. 'result' → logprob: -12.741453170776367
    9. ' ' → logprob: -12.991453170776367
    10. '    ' → logprob: -13.241453170776367

Token 177: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.20175226032733917
    2. ' ''.' → logprob: -1.7017523050308228
    3. '''' → logprob: -8.576752662658691
    4. ' "".' → logprob: -9.826752662658691
    5. '"' → logprob: -9.951752662658691
    6. ' ' → logprob: -10.576752662658691
    7. ''' → logprob: -11.076752662658691
    8. '   ' → logprob: -12.451752662658691
    9. ' '' → logprob: -13.826752662658691
    10. 'digits' → logprob: -14.201752662658691

Token 178: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.4391956685576588e-05
    2. ''.' → logprob: -11.500024795532227
    3. '''.' → logprob: -11.625024795532227
    4. '.join' → logprob: -13.750024795532227
    5. 'j' → logprob: -13.875024795532227
    6. ' ''.' → logprob: -14.000024795532227
    7. 'jo' → logprob: -14.125024795532227
    8. 'reverse' → logprob: -14.375024795532227
    9. '.' → logprob: -15.500024795532227
    10. '```' → logprob: -15.625024795532227

Token 179: '(re' (ID: 8178)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.38692259788513184
    2. '(re' → logprob: -1.1369225978851318
    3. '(' → logprob: -10.011922836303711
    4. 're' → logprob: -12.261922836303711
    5. 'digits' → logprob: -14.011922836303711
    6. '(
' → logprob: -15.011922836303711
    7. '(sorted' → logprob: -15.136922836303711
    8. 'd' → logprob: -15.761922836303711
    9. ' reversed' → logprob: -16.26192283630371
    10. '([' → logprob: -16.63692283630371

Token 180: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.00019293125660624355
    2. 'digits' → logprob: -8.625192642211914
    3. 's' → logprob: -12.250192642211914
    4. 'd' → logprob: -12.625192642211914
    5. 'vers' → logprob: -13.750192642211914
    6. 'verted' → logprob: -14.000192642211914
    7. 're' → logprob: -14.375192642211914
    8. 'verse' → logprob: -14.375192642211914
    9. ' digits' → logprob: -14.625192642211914
    10. 'ver' → logprob: -14.750192642211914

Token 181: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -7.779520092299208e-05
    2. '(' → logprob: -9.500078201293945
    3. ' (' → logprob: -13.250078201293945
    4. ')' → logprob: -14.875078201293945
    5. 'digits' → logprob: -15.125078201293945
    6. '(
' → logprob: -15.125078201293945
    7. ')(' → logprob: -15.875078201293945
    8. '(

' → logprob: -17.125078201293945
    9. ' digits' → logprob: -17.125078201293945
    10. ')d' → logprob: -17.250078201293945

Token 182: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0004154185007791966
    2. 'its' → logprob: -7.875415325164795
    3. 'ig' → logprob: -11.000415802001953
    4. 'igts' → logprob: -11.250415802001953
    5. 'digits' → logprob: -12.375415802001953
    6. 'i' → logprob: -15.000415802001953
    7. ')' → logprob: -15.250415802001953
    8. 'igit' → logprob: -15.500415802001953
    9. 'g' → logprob: -15.750415802001953
    10. 'ights' → logprob: -17.000415802001953

Token 183: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.001281303120777011
    2. '_digits' → logprob: -7.376281261444092
    3. 're' → logprob: -7.751281261444092
    4. 'digits' → logprob: -8.75128173828125
    5. '))' → logprob: -10.37628173828125
    6. 's' → logprob: -11.00128173828125
    7. 'd' → logprob: -12.12628173828125
    8. 'Re' → logprob: -12.62628173828125
    9. 'ed' → logprob: -12.87628173828125
    10. '_d' → logprob: -13.50128173828125

Token 184: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.03581678867340088
    2. 'sed' → logprob: -3.6608166694641113
    3. 'rs' → logprob: -5.035816669464111
    4. 'ds' → logprob: -7.035816669464111
    5. 'ased' → logprob: -7.535816669464111
    6. 'r' → logprob: -8.03581714630127
    7. 'vers' → logprob: -8.41081714630127
    8. 's' → logprob: -8.66081714630127
    9. 'd' → logprob: -8.66081714630127
    10. 'ved' → logprob: -8.91081714630127

Token 185: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0181526318192482
    2. '))' → logprob: -4.018152713775635
    3. ')
' → logprob: -13.143152236938477
    4. ' )' → logprob: -15.143152236938477
    5. ')))' → logprob: -15.393152236938477
    6. '))
' → logprob: -15.893152236938477
    7. ')}' → logprob: -16.893152236938477
    8. ')`' → logprob: -16.893152236938477
    9. ')

' → logprob: -17.393152236938477
    10. '())' → logprob: -18.018152236938477

Token 186: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02964761108160019
    2. '   ' → logprob: -3.6546475887298584
    3. '    
' → logprob: -7.0296478271484375
    4. ' 
' → logprob: -7.1546478271484375
    5. '<|end|>' → logprob: -7.2796478271484375
    6. '  
' → logprob: -7.7796478271484375
    7. '

' → logprob: -8.404647827148438
    8. '```' → logprob: -8.779647827148438
    9. '
' → logprob: -9.779647827148438
    10. '   
' → logprob: -10.154647827148438

Token 187: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07600470632314682
    2. '
' → logprob: -2.70100474357605
    3. '   ' → logprob: -5.826004505157471
    4. ' def' → logprob: -6.076004505157471
    5. '    
' → logprob: -8.076004981994629
    6. '```' → logprob: -8.201004981994629
    7. '

' → logprob: -8.826004981994629
    8. '  
' → logprob: -10.201004981994629
    9. ' ' → logprob: -11.701004981994629
    10. '<|end|>' → logprob: -11.826004981994629

Token 188: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.3132932484149933
    2. 'convert' → logprob: -1.313293218612671
    3. ' def' → logprob: -10.93829345703125
    4. 'def' → logprob: -11.68829345703125
    5. '_convert' → logprob: -12.81329345703125
    6. ' ' → logprob: -13.56329345703125
    7. '.convert' → logprob: -14.06329345703125
    8. '
' → logprob: -15.31329345703125
    9. '(convert' → logprob: -16.18829345703125
    10. '   ' → logprob: -16.56329345703125

Token 189: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.320199877838604e-07
    2. '_from' → logprob: -15.0
    3. '_' → logprob: -16.5
    4. '_t' → logprob: -18.625
    5. '##_' → logprob: -18.75
    6. 'to' → logprob: -19.375
    7. '"_' → logprob: -20.0
    8. ''_' → logprob: -20.5
    9. ' _' → logprob: -21.125
    10. '__' → logprob: -21.125

Token 190: '_decimal' (ID: 178716)
  Prédit: '_decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_decimal' → logprob: -5.2762428822461516e-05
    2. 'decimal' → logprob: -9.875052452087402
    3. '_' → logprob: -13.750052452087402
    4. '_dec' → logprob: -16.25005340576172
    5. ' decimal' → logprob: -16.87505340576172
    6. 'Decimal' → logprob: -18.37505340576172
    7. '_string' → logprob: -18.75005340576172
    8. '```' → logprob: -19.00005340576172
    9. '_integer' → logprob: -19.00005340576172
    10. ' ' → logprob: -19.12505340576172

Token 191: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -12.500007629394531
    3. '(s' → logprob: -12.625007629394531
    4. 'self' → logprob: -14.375007629394531
    5. ' (' → logprob: -15.500007629394531
    6. ' self' → logprob: -17.87500762939453
    7. '   ' → logprob: -18.75000762939453
    8. '       ' → logprob: -18.87500762939453
    9. '(
' → logprob: -19.12500762939453
    10. '[self' → logprob: -19.75000762939453

Token 192: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3244682252407074
    2. ',' → logprob: -1.5744682550430298
    3. 'self' → logprob: -2.6994681358337402
    4. ' self' → logprob: -6.32446813583374
    5. '       ' → logprob: -7.57446813583374
    6. '   ' → logprob: -9.074468612670898
    7. ')' → logprob: -9.074468612670898
    8. ',self' → logprob: -9.824468612670898
    9. 's' → logprob: -9.949468612670898
    10. 'def' → logprob: -10.949468612670898

Token 193: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20773310959339142
    2. ' self' → logprob: -1.957733154296875
    3. 's' → logprob: -3.457733154296875
    4. ' s' → logprob: -4.207733154296875
    5. '       ' → logprob: -11.457733154296875
    6. '   ' → logprob: -12.957733154296875
    7. '(self' → logprob: -13.332733154296875
    8. ' ' → logprob: -13.707733154296875
    9. '	self' → logprob: -14.707733154296875
    10. '
' → logprob: -14.832733154296875

Token 194: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008714404539205134
    2. ':str' → logprob: -7.875871658325195
    3. '):' → logprob: -8.125871658325195
    4. ')' → logprob: -9.375871658325195
    5. 'self' → logprob: -9.875871658325195
    6. ' :' → logprob: -10.250871658325195
    7. '   ' → logprob: -11.750871658325195
    8. ':self' → logprob: -12.875871658325195
    9. '       ' → logprob: -12.875871658325195
    10. '(self' → logprob: -13.000871658325195

Token 195: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.16052916646003723
    2. ' str' → logprob: -1.9105291366577148
    3. ')' → logprob: -8.410529136657715
    4. '[str' → logprob: -9.660529136657715
    5. 's' → logprob: -12.160529136657715
    6. 'int' → logprob: -12.410529136657715
    7. 'self' → logprob: -12.910529136657715
    8. ' ' → logprob: -13.160529136657715
    9. ':str' → logprob: -13.910529136657715
    10. '(str' → logprob: -14.160529136657715

Token 196: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035024698823690414
    2. '):' → logprob: -3.410024642944336
    3. '):
' → logprob: -7.285024642944336
    4. ' )' → logprob: -7.910024642944336
    5. '       ' → logprob: -8.535024642944336
    6. '   ' → logprob: -9.785024642944336
    7. ' ):' → logprob: -10.035024642944336
    8. '):
' → logprob: -11.035024642944336
    9. 'self' → logprob: -12.160024642944336
    10. '):

' → logprob: -13.035024642944336

Token 197: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025109274312853813
    2. ')' → logprob: -4.15010929107666
    3. '->' → logprob: -5.40010929107666
    4. ' ->' → logprob: -6.02510929107666
    5. '):' → logprob: -7.27510929107666
    6. ':
' → logprob: -7.27510929107666
    7. ' :' → logprob: -8.02510929107666
    8. '   ' → logprob: -9.02510929107666
    9. ')->' → logprob: -9.52510929107666
    10. ':int' → logprob: -9.77510929107666

Token 198: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029754308983683586
    2. ' int' → logprob: -3.529754400253296
    3. '[int' → logprob: -12.904754638671875
    4. ' ' → logprob: -14.279754638671875
    5. '(int' → logprob: -14.779754638671875
    6. '   ' → logprob: -16.154754638671875
    7. '	int' → logprob: -16.654754638671875
    8. '<int' → logprob: -16.779754638671875
    9. ':int' → logprob: -17.154754638671875
    10. '```' → logprob: -17.279754638671875

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18119539320468903
    2. ':
' → logprob: -1.8061953783035278
    3. '       ' → logprob: -6.931195259094238
    4. '):
' → logprob: -9.181195259094238
    5. ':
' → logprob: -9.306195259094238
    6. '(self' → logprob: -9.306195259094238
    7. ' :' → logprob: -9.681195259094238
    8. '):' → logprob: -10.181195259094238
    9. ' :
' → logprob: -10.556195259094238
    10. '   ' → logprob: -10.806195259094238

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17309212684631348
    2. 'result' → logprob: -1.9230921268463135
    3. ' result' → logprob: -4.673091888427734
    4. 'total' → logprob: -6.173091888427734
    5. '   ' → logprob: -7.173091888427734
    6. 'value' → logprob: -8.423091888427734
    7. 'n' → logprob: -8.673091888427734
    8. ' total' → logprob: -9.048091888427734
    9. 'current' → logprob: -10.798091888427734
    10. 'num' → logprob: -11.173091888427734

Token 201: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.017711203545331955
    2. 'total' → logprob: -4.267711162567139
    3. ' result' → logprob: -6.017711162567139
    4. '       ' → logprob: -7.017711162567139
    5. 'value' → logprob: -9.017711639404297
    6. ' total' → logprob: -9.892711639404297
    7. 'res' → logprob: -11.142711639404297
    8. 'num' → logprob: -11.267711639404297
    9. 'decimal' → logprob: -12.267711639404297
    10. 'n' → logprob: -12.517711639404297

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715967319905758
    2. '=' → logprob: -5.006715774536133
    3. ' ' → logprob: -14.381715774536133
    4. ' ' → logprob: -17.256715774536133
    5. ',' → logprob: -17.631715774536133
    6. 's' → logprob: -19.131715774536133
    7. ')' → logprob: -19.506715774536133
    8. '0' → logprob: -20.131715774536133
    9. ' ,' → logprob: -20.256715774536133
    10. ':' → logprob: -20.506715774536133

Token 203: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013260759878903627
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.626325607299805
    4. '۰' → logprob: -18.751325607299805
    5. '       ' → logprob: -19.376325607299805
    6. '  ' → logprob: -19.626325607299805
    7. ' ' → logprob: -20.188825607299805
    8. 'int' → logprob: -20.376325607299805
    9. '```' → logprob: -20.563825607299805
    10. 's' → logprob: -20.876325607299805

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.25000762939453
    4. 'sum' → logprob: -19.62500762939453
    5. '۰' → logprob: -19.75000762939453
    6. '000' → logprob: -21.00000762939453
    7. 'int' → logprob: -21.37500762939453
    8. '０' → logprob: -22.06250762939453
    9. '```' → logprob: -22.12500762939453
    10. 's' → logprob: -22.50000762939453

Token 205: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06484492123126984
    2. '
' → logprob: -3.564844846725464
    3. ' for' → logprob: -3.564844846725464
    4. 'for' → logprob: -5.439845085144043
    5. '        
' → logprob: -6.564845085144043
    6. '    
' → logprob: -9.064845085144043
    7. ' 
' → logprob: -9.314845085144043
    8. '   ' → logprob: -9.689845085144043
    9. '  
' → logprob: -9.689845085144043
    10. ',' → logprob: -10.564845085144043

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053596381098032
    2. 'for' → logprob: -3.4285964965820312
    3. ' for' → logprob: -3.9285964965820312
    4. '   ' → logprob: -10.178596496582031
    5. '        
' → logprob: -10.678596496582031
    6. '
' → logprob: -11.428596496582031
    7. ' 
' → logprob: -12.553596496582031
    8. '    
' → logprob: -13.053596496582031
    9. '	for' → logprob: -14.178596496582031
    10. 'multip' → logprob: -14.428596496582031

Token 207: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.050427213311195374
    2. ' for' → logprob: -3.050427198410034
    3. '       ' → logprob: -6.300427436828613
    4. 'power' → logprob: -13.550427436828613
    5. '   ' → logprob: -14.175427436828613
    6. ' power' → logprob: -15.800427436828613
    7. '	for' → logprob: -16.425426483154297
    8. 'pow' → logprob: -16.425426483154297
    9. ' ' → logprob: -17.050426483154297
    10. '        
' → logprob: -17.300426483154297

Token 208: ' c' (ID: 274)
  Prédit: ' char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.3288528621196747
    2. 'char' → logprob: -2.078852891921997
    3. ' ch' → logprob: -2.203852891921997
    4. 'ch' → logprob: -3.953852891921997
    5. ' c' → logprob: -4.203852653503418
    6. ' digit' → logprob: -5.328852653503418
    7. ' i' → logprob: -6.078852653503418
    8. 'c' → logprob: -6.203852653503418
    9. 'digit' → logprob: -7.453852653503418
    10. 'i' → logprob: -7.953852653503418

Token 209: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017318216850981116
    2. 'in' → logprob: -6.376731872558594
    3. ' ' → logprob: -11.376731872558594
    4. 's' → logprob: -11.751731872558594
    5. '   ' → logprob: -12.751731872558594
    6. 'n' → logprob: -13.376731872558594
    7. '  ' → logprob: -13.751731872558594
    8. '       ' → logprob: -13.876731872558594
    9. 'i' → logprob: -14.376731872558594
    10. '    ' → logprob: -14.626731872558594

Token 210: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009759863838553429
    2. ' s' → logprob: -4.634759902954102
    3. '   ' → logprob: -13.134759902954102
    4. ' ' → logprob: -14.134759902954102
    5. 're' → logprob: -15.259759902954102
    6. '	s' → logprob: -15.697259902954102
    7. ' reversed' → logprob: -15.697259902954102
    8. '       ' → logprob: -16.1347599029541
    9. '    ' → logprob: -16.3847599029541
    10. 'c' → logprob: -16.3847599029541

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06198998540639877
    2. ':
' → logprob: -2.8119900226593018
    3. ' :' → logprob: -12.061989784240723
    4. '       ' → logprob: -12.061989784240723
    5. '):
' → logprob: -12.686989784240723
    6. '):' → logprob: -12.936989784240723
    7. '   ' → logprob: -13.561989784240723
    8. ' :
' → logprob: -13.686989784240723
    9. '           ' → logprob: -14.061989784240723
    10. ':
' → logprob: -14.061989784240723

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020776940509676933
    2. 'result' → logprob: -6.502077579498291
    3. ' result' → logprob: -7.627077579498291
    4. '
' → logprob: -10.25207805633545
    5. '       ' → logprob: -10.75207805633545
    6. '0' → logprob: -11.00207805633545
    7. ' if' → logprob: -12.87707805633545
    8. '            
' → logprob: -13.00207805633545
    9. ':
' → logprob: -13.37707805633545
    10. '```' → logprob: -13.62707805633545

Token 213: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5781455039978027
    2. ' result' → logprob: -0.8281455039978027
    3. '           ' → logprob: -6.578145503997803
    4. '               ' → logprob: -8.203145980834961
    5. 'value' → logprob: -8.203145980834961
    6. ' value' → logprob: -8.328145980834961
    7. ' if' → logprob: -11.453145980834961
    8. 'if' (adapté à ' if') → logprob: -13.203145980834961
    9. 'index' → logprob: -13.328145980834961
    10. ' digit' → logprob: -13.328145980834961

Token 214: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06993865221738815
    2. 'c' → logprob: -2.6949386596679688
    3. '           ' → logprob: -13.569938659667969
    4. 'cation' → logprob: -15.819938659667969
    5. ' ' → logprob: -15.819938659667969
    6. 'self' → logprob: -16.19493865966797
    7. ' not' → logprob: -16.19493865966797
    8. ' ' → logprob: -16.19493865966797
    9. '            ' → logprob: -16.56993865966797
    10. '	c' → logprob: -16.81993865966797

Token 215: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.018154039978981018
    2. 'not' → logprob: -4.018154144287109
    3. ' in' → logprob: -12.51815414428711
    4. 'in' → logprob: -15.26815414428711
    5. ')' → logprob: -15.76815414428711
    6. '	not' → logprob: -17.39315414428711
    7. '[' → logprob: -17.76815414428711
    8. ' ' → logprob: -18.14315414428711
    9. '.' → logprob: -18.26815414428711
    10. ']' → logprob: -18.64315414428711

Token 216: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.349139004945755
    2. 'in' → logprob: -1.2241389751434326
    3. 'self' → logprob: -7.849139213562012
    4. '<|end|>' → logprob: -8.599139213562012
    5. ' self' → logprob: -9.349139213562012
    6. 'to' → logprob: -11.474139213562012
    7. ' ' → logprob: -12.224139213562012
    8. '.' → logprob: -12.474139213562012
    9. ' to' → logprob: -12.849139213562012
    10. '<|end|>' → logprob: -13.099139213562012

Token 217: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009783361107110977
    2. ' self' → logprob: -4.6347832679748535
    3. '['' → logprob: -11.009783744812012
    4. ''' → logprob: -12.384783744812012
    5. '[self' → logprob: -13.384783744812012
    6. '{'' → logprob: -13.884783744812012
    7. '           ' → logprob: -14.134783744812012
    8. '       ' → logprob: -14.384783744812012
    9. '(self' → logprob: -14.634783744812012
    10. '	self' → logprob: -15.134783744812012

Token 218: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.00014370749704539776
    2. '.' → logprob: -9.125144004821777
    3. ' .' → logprob: -10.500144004821777
    4. 'digits' → logprob: -11.875144004821777
    5. 'self' → logprob: -16.62514305114746
    6. 'igits' → logprob: -17.37514305114746
    7. 'Digits' → logprob: -18.00014305114746
    8. ' digits' → logprob: -18.12514305114746
    9. '.characters' → logprob: -18.25014305114746
    10. ' ' → logprob: -18.50014305114746

Token 219: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -3.297462171758525e-05
    2. 'its' → logprob: -11.375033378601074
    3. 'igts' → logprob: -11.375033378601074
    4. 'ig' → logprob: -11.875033378601074
    5. 'digits' → logprob: -13.625033378601074
    6. 'g' → logprob: -14.875033378601074
    7. 'igit' → logprob: -15.000033378601074
    8. 'i' → logprob: -15.375033378601074
    9. '{' → logprob: -15.625033378601074
    10. 'igs' → logprob: -16.125032424926758

Token 220: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11333397030830383
    2. ':' → logprob: -2.2383339405059814
    3. '               ' → logprob: -8.488333702087402
    4. '           ' → logprob: -8.613333702087402
    5. '):
' → logprob: -9.613333702087402
    6. ' or' → logprob: -10.238333702087402
    7. ' :
' → logprob: -11.863333702087402
    8. ':
' → logprob: -12.238333702087402
    9. ':return' → logprob: -12.613333702087402
    10. ':

' → logprob: -13.238333702087402

Token 221: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005135323386639357
    2. ' raise' → logprob: -5.505135536193848
    3. ':
' → logprob: -7.880135536193848
    4. 'raise' → logprob: -7.880135536193848
    5. ':' → logprob: -8.255135536193848
    6. '           ' → logprob: -10.755135536193848
    7. ',' → logprob: -12.130135536193848
    8. '	raise' → logprob: -12.880135536193848
    9. ' :' → logprob: -13.755135536193848
    10. '):
' → logprob: -13.755135536193848

Token 222: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.023587265983223915
    2. 'raise' (adapté à ' raise') → logprob: -3.773587226867676
    3. '               ' → logprob: -8.398587226867676
    4. '                ' → logprob: -9.398587226867676
    5. '            ' → logprob: -10.898587226867676
    6. '	raise' → logprob: -11.898587226867676
    7. '           ' → logprob: -12.398587226867676
    8. '                   ' → logprob: -12.898587226867676
    9. 'Raise' → logprob: -14.148587226867676
    10. '    ' → logprob: -14.898587226867676

Token 223: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.014163747429847717
    2. 'Value' → logprob: -4.264163970947266
    3. '	Value' → logprob: -15.514163970947266
    4. '_Value' → logprob: -16.889163970947266
    5. ' ' → logprob: -17.639163970947266
    6. '_value' → logprob: -17.889163970947266
    7. ' value' → logprob: -18.389163970947266
    8. '<Value' → logprob: -18.889163970947266
    9. '(Value' → logprob: -19.014163970947266
    10. '.Value' → logprob: -19.389163970947266

Token 224: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.6932273507118225
    2. 'Error' → logprob: -0.6932273507118225
    3. 'ror' → logprob: -10.068227767944336
    4. 'alue' → logprob: -10.818227767944336
    5. 'error' → logprob: -11.943227767944336
    6. 'n' → logprob: -12.193227767944336
    7. 'ation' → logprob: -13.943227767944336
    8. 'alid' → logprob: -13.943227767944336
    9. 'LError' → logprob: -14.068227767944336
    10. 'al' → logprob: -14.318227767944336

Token 225: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3141196668148041
    2. '(f' → logprob: -1.3141196966171265
    3. '('' → logprob: -7.314119815826416
    4. '(' → logprob: -8.564119338989258
    5. 'f' → logprob: -14.564119338989258
    6. '(
' → logprob: -15.814119338989258
    7. '("'' → logprob: -17.064119338989258
    8. ' f' → logprob: -18.189119338989258
    9. '(F' → logprob: -18.439119338989258
    10. '       ' → logprob: -18.939119338989258

Token 226: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03657180815935135
    2. 'Invalid' → logprob: -4.411571979522705
    3. ' f' → logprob: -4.536571979522705
    4. 'f' → logprob: -5.036571979522705
    5. ''' → logprob: -5.536571979522705
    6. '(f' → logprob: -6.536571979522705
    7. 'invalid' → logprob: -8.036571502685547
    8. ' Invalid' → logprob: -8.161571502685547
    9. ' invalid' → logprob: -8.661571502685547
    10. ')' → logprob: -9.286571502685547

Token 227: 'Invalid' (ID: 12278)
  Prédit: 'Invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.08302164822816849
    2. '"' → logprob: -2.708021640777588
    3. ' Invalid' → logprob: -4.458021640777588
    4. ' f' → logprob: -7.333021640777588
    5. 'f' → logprob: -8.333022117614746
    6. ' invalid' → logprob: -8.458022117614746
    7. ''' → logprob: -8.958022117614746
    8. 'Unsupported' → logprob: -9.833022117614746
    9. 'Unexpected' → logprob: -10.333022117614746
    10. 'invalid' → logprob: -10.708022117614746

Token 228: ' digit' (ID: 19181)
  Prédit: ' digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.1748688817024231
    2. ' character' → logprob: -2.0498688220977783
    3. 'digit' → logprob: -3.5498688220977783
    4. 'character' → logprob: -6.049869060516357
    5. ' base' → logprob: -8.0498685836792
    6. ' token' → logprob: -9.5498685836792
    7. ' number' → logprob: -9.7998685836792
    8. ' input' → logprob: -10.4248685836792
    9. 'token' → logprob: -10.6748685836792
    10. ' ' → logprob: -10.6748685836792

Token 229: ' '{' (ID: 24918)
  Prédit: ' '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '{' → logprob: -0.42962056398391724
    2. '{' → logprob: -2.1796205043792725
    3. ':' → logprob: -2.4296205043792725
    4. ' for' → logprob: -3.1796205043792725
    5. ''{' → logprob: -3.3046205043792725
    6. ' in' → logprob: -3.4296205043792725
    7. ' {' → logprob: -3.5546205043792725
    8. 'for' → logprob: -4.804620742797852
    9. 'in' → logprob: -7.929620742797852
    10. '{s' → logprob: -9.304620742797852

Token 230: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03046383149921894
    2. ' c' → logprob: -4.030463695526123
    3. '{' → logprob: -4.405463695526123
    4. ' {' → logprob: -11.030464172363281
    5. '%c' → logprob: -12.655464172363281
    6. '	c' → logprob: -13.030464172363281
    7. '}' → logprob: -13.405464172363281
    8. '{
' → logprob: -13.780464172363281
    9. ' ' → logprob: -14.030464172363281
    10. '   ' → logprob: -14.155464172363281

Token 231: '}'' (ID: 24321)
  Prédit: '}''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'' → logprob: -0.0010893779108300805
    2. ''' → logprob: -7.126089572906494
    3. 'for' → logprob: -8.251089096069336
    4. '}' → logprob: -11.376089096069336
    5. 'in' → logprob: -11.876089096069336
    6. ' for' → logprob: -13.501089096069336
    7. ')'' → logprob: -13.751089096069336
    8. ' in' → logprob: -14.001089096069336
    9. ''}' → logprob: -14.001089096069336
    10. '}')' → logprob: -14.751089096069336

Token 232: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.146847665309906
    2. ' in' → logprob: -2.021847724914551
    3. 'for' → logprob: -5.521847724914551
    4. ')' → logprob: -9.52184772491455
    5. 'in' → logprob: -9.77184772491455
    6. '")' → logprob: -11.39684772491455
    7. ' ' → logprob: -11.77184772491455
    8. '")
' → logprob: -12.64684772491455
    9. ' )' → logprob: -12.77184772491455
    10. '           ' → logprob: -12.77184772491455

Token 233: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.00539122661575675
    2. 'base' → logprob: -5.7553911209106445
    3. 'Base' → logprob: -6.7553911209106445
    4. ' Base' → logprob: -7.5053911209106445
    5. ' the' → logprob: -7.8803911209106445
    6. ' ' → logprob: -10.130391120910645
    7. ' this' → logprob: -10.880391120910645
    8. ' a' → logprob: -11.130391120910645
    9. '_base' → logprob: -11.255391120910645
    10. 'the' → logprob: -11.505391120910645

Token 234: ' {' (ID: 354)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.18371698260307312
    2. ' ' → logprob: -1.8087170124053955
    3. ' four' → logprob: -5.933716773986816
    4. 'four' → logprob: -6.933716773986816
    5. '-' → logprob: -8.808716773986816
    6. '_four' → logprob: -9.683716773986816
    7. 'Four' → logprob: -10.058716773986816
    8. '{' → logprob: -10.558716773986816
    9. '-four' → logprob: -10.558716773986816
    10. ' Four' → logprob: -12.058716773986816

Token 235: 'self' (ID: 1156)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.13978590071201324
    2. 'self' → logprob: -2.2647860050201416
    3. ' self' → logprob: -4.3897857666015625
    4. ' four' → logprob: -5.0147857666015625
    5. ' ' → logprob: -5.2647857666015625
    6. '{' → logprob: -7.3897857666015625
    7. ' Four' → logprob: -7.5147857666015625
    8. 'four' → logprob: -7.5147857666015625
    9. 'Four' → logprob: -8.389785766601562
    10. '_four' → logprob: -8.389785766601562

Token 236: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.0003184233792126179
    2. '.' → logprob: -8.75031852722168
    3. 'base' → logprob: -9.00031852722168
    4. '4' → logprob: -10.50031852722168
    5. 'Four' → logprob: -13.00031852722168
    6. ' .' → logprob: -13.62531852722168
    7. '}' → logprob: -13.75031852722168
    8. ' ' → logprob: -14.00031852722168
    9. '.f' → logprob: -14.12531852722168
    10. ' base' → logprob: -14.25031852722168

Token 237: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.478122353553772
    2. '")
' → logprob: -1.728122353553772
    3. '')' → logprob: -1.853122353553772
    4. ''")
' → logprob: -3.9781222343444824
    5. '')")
' → logprob: -4.978122234344482
    6. ')")
' → logprob: -4.978122234344482
    7. '')
' → logprob: -5.603122234344482
    8. '}")
' → logprob: -5.728122234344482
    9. '       ' → logprob: -6.228122234344482
    10. '}")' → logprob: -6.228122234344482

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04905863106250763
    2. '       ' → logprob: -3.049058675765991
    3. 'result' → logprob: -8.04905891418457
    4. ' result' → logprob: -9.92405891418457
    5. '        
' → logprob: -10.67405891418457
    6. '
' → logprob: -10.92405891418457
    7. '```' → logprob: -11.04905891418457
    8. '0' → logprob: -11.29905891418457
    9. '   ' → logprob: -11.54905891418457
    10. '            
' → logprob: -11.67405891418457

Token 239: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6521353125572205
    2. 'result' (adapté à ' result') → logprob: -1.0271353721618652
    3. '           ' → logprob: -2.1521353721618652
    4. '       ' → logprob: -5.402135372161865
    5. '
' → logprob: -8.652134895324707
    6. 'value' → logprob: -10.152134895324707
    7. ' value' → logprob: -10.902134895324707
    8. '   ' → logprob: -11.777134895324707
    9. '```' → logprob: -11.777134895324707
    10. ')' → logprob: -12.027134895324707

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023050010204315
    2. '=' → logprob: -2.3502304553985596
    3. ' *=' → logprob: -10.85023021697998
    4. '*=' → logprob: -12.35023021697998
    5. ' ' → logprob: -15.97523021697998
    6. '   ' → logprob: -16.975231170654297
    7. '	' → logprob: -17.975231170654297
    8. '＝' → logprob: -18.100231170654297
    9. ' ' → logprob: -18.850231170654297
    10. ' <<=' → logprob: -19.475231170654297

Token 241: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.06196858361363411
    2. 'result' → logprob: -2.8119685649871826
    3. '(result' → logprob: -14.186968803405762
    4. ' ' → logprob: -16.061967849731445
    5. '	result' → logprob: -16.561967849731445
    6. '[result' → logprob: -17.186967849731445
    7. '=result' → logprob: -17.811967849731445
    8. '   ' → logprob: -18.061967849731445
    9. '$result' → logprob: -18.186967849731445
    10. '  ' → logprob: -19.061967849731445

Token 242: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0013307139743119478
    2. '*' → logprob: -6.626330852508545
    3. ' ' → logprob: -12.626330375671387
    4. '*self' → logprob: -13.501330375671387
    5. ' ' → logprob: -16.501331329345703
    6. '*object' → logprob: -18.501331329345703
    7. '   ' → logprob: -19.126331329345703
    8. '    ' → logprob: -19.876331329345703
    9. ' **' → logprob: -21.001331329345703
    10. 'self' → logprob: -21.001331329345703

Token 243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09098522365093231
    2. '4' → logprob: -2.4659852981567383
    3. ' self' → logprob: -6.215985298156738
    4. ' ' → logprob: -10.215985298156738
    5. '   ' → logprob: -11.965985298156738
    6. '```' → logprob: -14.340985298156738
    7. '       ' → logprob: -14.465985298156738
    8. '[self' → logprob: -14.465985298156738
    9. '
' → logprob: -14.590985298156738
    10. '	self' → logprob: -14.840985298156738

Token 244: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.07890664041042328
    2. 'base' → logprob: -2.578906536102295
    3. '.' → logprob: -11.328907012939453
    4. ' base' → logprob: -12.328907012939453
    5. ' .' → logprob: -15.703907012939453
    6. '(base' → logprob: -16.453907012939453
    7. '4' → logprob: -16.953907012939453
    8. 'Base' → logprob: -17.328907012939453
    9. '_base' → logprob: -17.578907012939453
    10. '	base' → logprob: -17.703907012939453

Token 245: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326258182525635
    2. '+' → logprob: -1.3132625818252563
    3. '+self' → logprob: -14.813262939453125
    4. ' plus' → logprob: -16.063262939453125
    5. 'plus' → logprob: -16.688262939453125
    6. '+
' → logprob: -16.938262939453125
    7. '＋' → logprob: -17.063262939453125
    8. '4' → logprob: -17.063262939453125
    9. ' ' → logprob: -17.813262939453125
    10. '+c' → logprob: -18.063262939453125

Token 246: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0025504580698907375
    2. ' self' → logprob: -6.0025506019592285
    3. 'int' → logprob: -9.50255012512207
    4. ' int' → logprob: -15.75255012512207
    5. '[self' → logprob: -17.12755012512207
    6. '   ' → logprob: -18.37755012512207
    7. '(self' → logprob: -18.37755012512207
    8. '
' → logprob: -19.25255012512207
    9. '           ' → logprob: -19.75255012512207
    10. '	self' → logprob: -20.12755012512207

Token 247: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.004158887546509504
    2. 'digits' → logprob: -5.504158973693848
    3. '.' → logprob: -9.879158973693848
    4. ' .' → logprob: -11.129158973693848
    5. ' digits' → logprob: -12.129158973693848
    6. 'd' → logprob: -12.254158973693848
    7. '   ' → logprob: -13.254158973693848
    8. 'igits' → logprob: -14.129158973693848
    9. 'Digits' → logprob: -14.504158973693848
    10. '  ' → logprob: -14.879158973693848

Token 248: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0009346862207166851
    2. 'its' → logprob: -7.000934600830078
    3. 'igts' → logprob: -11.625934600830078
    4. 'ig' → logprob: -12.375934600830078
    5. '[' → logprob: -13.000934600830078
    6. 'digits' → logprob: -13.375934600830078
    7. 'g' → logprob: -13.500934600830078
    8. 'igit' → logprob: -13.750934600830078
    9. 'e' → logprob: -14.250934600830078
    10. 'i' → logprob: -14.375934600830078

Token 249: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -9.849109119386412e-06
    2. '.' → logprob: -11.750009536743164
    3. ' .' → logprob: -13.250009536743164
    4. 'index' → logprob: -16.500009536743164
    5. '   ' → logprob: -18.000009536743164
    6. '.Index' → logprob: -19.375009536743164
    7. '].' → logprob: -19.750009536743164
    8. ').' → logprob: -21.000009536743164
    9. ' index' → logprob: -21.625009536743164
    10. '.find' → logprob: -22.125009536743164

Token 250: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.625003814697266
    3. 'c' → logprob: -16.000003814697266
    4. '(
' → logprob: -19.000003814697266
    5. ')c' → logprob: -20.000003814697266
    6. ' (' → logprob: -20.625003814697266
    7. '((' → logprob: -21.250003814697266
    8. '[c' → logprob: -21.375003814697266
    9. '(s' → logprob: -21.500003814697266
    10. '©' → logprob: -21.625003814697266

Token 251: ')
' (ID: 446)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.06300681084394455
    2. ')' → logprob: -2.81300687789917
    3. ')c' → logprob: -6.93800687789917
    4. '(' → logprob: -9.938006401062012
    5. ')
' → logprob: -11.563006401062012
    6. ' )' → logprob: -12.563006401062012
    7. 'c' → logprob: -13.063006401062012
    8. ' (' → logprob: -13.438006401062012
    9. '(
' → logprob: -14.188006401062012
    10. '       ' → logprob: -14.563006401062012

Token 252: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.48885661363601685
    2. '       ' → logprob: -0.9888566136360168
    3. ' return' → logprob: -4.238856792449951
    4. '   ' → logprob: -8.488856315612793
    5. '
' → logprob: -10.613856315612793
    6. '	return' → logprob: -11.863856315612793
    7. '        
' → logprob: -12.613856315612793
    8. ':return' → logprob: -13.613856315612793
    9. '```' → logprob: -13.738856315612793
    10. '    
' → logprob: -14.113856315612793

Token 253: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009823975153267384
    2. ' return' → logprob: -4.759823799133301
    3. '       ' → logprob: -6.759823799133301
    4. '   ' → logprob: -10.0098237991333
    5. '
' → logprob: -12.6348237991333
    6. ' ' → logprob: -15.0098237991333
    7. '	return' → logprob: -15.2598237991333
    8. '```' → logprob: -16.134824752807617
    9. ':return' → logprob: -16.259824752807617
    10. '        
' → logprob: -16.384824752807617

Token 254: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.25192907452583313
    2. ' result' → logprob: -1.5019290447235107
    3. '(result' → logprob: -20.126928329467773
    4. '	result' → logprob: -20.501928329467773
    5. ' ' → logprob: -21.126928329467773
    6. '$result' → logprob: -22.251928329467773
    7. '0' → logprob: -22.376928329467773
    8. ' ' → logprob: -22.626928329467773
    9. '_result' → logprob: -22.626928329467773
    10. '=result' → logprob: -22.751928329467773

Token 255: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.051972646266222
    2. '<|end|>' → logprob: -3.4269726276397705
    3. '
' → logprob: -4.80197286605835
    4. 'def' → logprob: -4.92697286605835
    5. '#' → logprob: -6.42697286605835
    6. ' class' → logprob: -8.426972389221191
    7. '<|end|>' → logprob: -8.551972389221191
    8. '```' → logprob: -8.676972389221191
    9. '[' → logprob: -8.801972389221191
    10. 'n' → logprob: -9.801972389221191

Token 257: ' Input' (ID: 10090)
  Prédit: 'Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.37683361768722534
    2. ' Base' → logprob: -1.2518336772918701
    3. 'Binary' → logprob: -4.751833438873291
    4. ' Binary' → logprob: -4.751833438873291
    5. 'Hex' → logprob: -5.251833438873291
    6. ' Hex' → logprob: -6.001833438873291
    7. 'Decimal' → logprob: -7.126833438873291
    8. ' Decimal' → logprob: -7.626833438873291
    9. 'Oct' → logprob: -7.876833438873291
    10. 'Number' → logprob: -8.37683391571045

Token 258: 'Output' (ID: 6310)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.8966811299324036
    2. 'Handler' → logprob: -1.0216810703277588
    3. 'Parser' → logprob: -2.521681070327759
    4. 'Processor' → logprob: -2.646681070327759
    5. 'Validator' → logprob: -3.521681070327759
    6. 'Reader' → logprob: -4.271681308746338
    7. 'System' → logprob: -4.646681308746338
    8. 'Data' → logprob: -4.896681308746338
    9. 'Converter' → logprob: -5.396681308746338
    10. 'Provider' → logprob: -5.396681308746338

Token 259: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.29361873865127563
    2. 'System' → logprob: -2.293618679046631
    3. 'Manager' → logprob: -2.543618679046631
    4. 'Processor' → logprob: -2.918618679046631
    5. 'Interface' → logprob: -4.793618679046631
    6. 'Number' → logprob: -4.918618679046631
    7. 'Helper' → logprob: -6.293618679046631
    8. 'Controller' → logprob: -7.168618679046631
    9. ':' → logprob: -7.168618679046631
    10. 'Converter' → logprob: -7.918618679046631

Token 260: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017743845819495618
    2. '(Number' → logprob: -9.000177383422852
    3. '():' → logprob: -10.875177383422852
    4. '(' → logprob: -11.000177383422852
    5. ':
' → logprob: -11.500177383422852
    6. ':Number' → logprob: -12.750177383422852
    7. '(Base' → logprob: -13.875177383422852
    8. ' :' → logprob: -14.250177383422852
    9. '(Abstract' → logprob: -14.250177383422852
    10. ':

' → logprob: -14.375177383422852

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003309361054562032
    2. ' def' → logprob: -8.125330924987793
    3. 'def' → logprob: -10.500330924987793
    4. '    
' → logprob: -12.000330924987793
    5. '
' → logprob: -15.000330924987793
    6. '   ' → logprob: -15.125330924987793
    7. '	def' → logprob: -15.625330924987793
    8. ',' → logprob: -16.25033187866211
    9. ':' → logprob: -16.37533187866211
    10. '<|end|>' → logprob: -16.50033187866211

Token 262: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3142358362674713
    2. ' def' → logprob: -1.314235806465149
    3. '   ' → logprob: -6.939235687255859
    4. '@' → logprob: -13.18923568725586
    5. ' @' → logprob: -13.68923568725586
    6. 'class' → logprob: -14.81423568725586
    7. ' ' → logprob: -14.93923568725586
    8. 'de' → logprob: -15.31423568725586
    9. '	def' → logprob: -15.68923568725586
    10. 'import' → logprob: -16.06423568725586

Token 263: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5778483748435974
    2. ' def' → logprob: -0.8278483748435974
    3. 'def' → logprob: -6.577848434448242
    4. '__' → logprob: -7.827848434448242
    5. ' ' → logprob: -9.452848434448242
    6. ' _' → logprob: -11.202848434448242
    7. '_' → logprob: -12.077848434448242
    8. ' init' → logprob: -12.202848434448242
    9. 'init' → logprob: -12.952848434448242
    10. ' ___' → logprob: -12.952848434448242

Token 264: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -17.875
    3. 'in' → logprob: -19.5
    4. ' init' → logprob: -19.75
    5. 'inite' → logprob: -19.875
    6. 'innit' → logprob: -19.875
    7. '_init' → logprob: -20.375
    8. 'int' → logprob: -20.625
    9. 'i' → logprob: -20.625
    10. 'call' → logprob: -20.75

Token 265: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007665063603781164
    2. '__' → logprob: -7.375766277313232
    3. '(self' → logprob: -9.37576675415039
    4. '__(
' → logprob: -9.87576675415039
    5. '(' → logprob: -14.12576675415039
    6. '__((' → logprob: -14.25076675415039
    7. '__('' → logprob: -14.50076675415039
    8. '_(' → logprob: -14.62576675415039
    9. 'self' → logprob: -15.12576675415039
    10. '__("' → logprob: -15.25076675415039

Token 266: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.432518421206623e-05
    2. ')' → logprob: -10.0000638961792
    3. ' self' → logprob: -11.3750638961792
    4. '):
' → logprob: -12.1250638961792
    5. '   ' → logprob: -14.0000638961792
    6. '
' → logprob: -14.6250638961792
    7. '       ' → logprob: -15.1250638961792
    8. '(self' → logprob: -16.125064849853516
    9. '):' → logprob: -16.250064849853516
    10. '):

' → logprob: -17.000064849853516

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5388136506080627
    2. '):' → logprob: -1.288813591003418
    3. 'self' → logprob: -2.038813591003418
    4. '):
' → logprob: -4.663813591003418
    5. ')' → logprob: -7.288813591003418
    6. ' self' → logprob: -8.538813591003418
    7. '   ' → logprob: -8.788813591003418
    8. '__' → logprob: -9.538813591003418
    9. '(self' → logprob: -9.913813591003418
    10. ',self' → logprob: -9.913813591003418

Token 268: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.431393563747406
    2. ' number' → logprob: -1.0563936233520508
    3. 'converter' → logprob: -6.556393623352051
    4. ' converter' → logprob: -7.931393623352051
    5. 'num' → logprob: -8.18139362335205
    6. 'input' → logprob: -8.93139362335205
    7. 'system' → logprob: -9.05639362335205
    8. ' system' → logprob: -9.30639362335205
    9. ' input' → logprob: -9.68139362335205
    10. 'ns' → logprob: -10.18139362335205

Token 269: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -0.00023369524569716305
    2. 'system' → logprob: -8.75023365020752
    3. 'System' → logprob: -9.50023365020752
    4. ' system' → logprob: -16.125234603881836
    5. '_sys' → logprob: -17.000234603881836
    6. 'SYSTEM' → logprob: -17.375234603881836
    7. 's' → logprob: -17.500234603881836
    8. 'ssystem' → logprob: -17.875234603881836
    9. '_class' → logprob: -18.625234603881836
    10. 'sys' → logprob: -18.750234603881836

Token 270: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010354319238103926
    2. '):' → logprob: -9.250103950500488
    3. ' :' → logprob: -12.125103950500488
    4. ')' → logprob: -13.750103950500488
    5. ' ):' → logprob: -14.750103950500488
    6. '):
' → logprob: -15.375103950500488
    7. '_:' → logprob: -16.500102996826172
    8. '   ' → logprob: -17.250102996826172
    9. '=None' → logprob: -17.500102996826172
    10. ':System' → logprob: -17.500102996826172

Token 271: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.5761067867279053
    2. ' Number' → logprob: -0.8261067867279053
    3. 'Base' → logprob: -8.826107025146484
    4. ' Base' → logprob: -10.826107025146484
    5. '_Number' → logprob: -15.201107025146484
    6. ')' → logprob: -16.201107025146484
    7. '_number' → logprob: -16.201107025146484
    8. ' number' → logprob: -16.451107025146484
    9. ' ' → logprob: -16.826107025146484
    10. 'number' → logprob: -17.201107025146484

Token 272: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -1.9361264946837764e-07
    2. 'system' → logprob: -16.125
    3. ' System' → logprob: -17.375
    4. '<System' → logprob: -17.625
    5. '_system' → logprob: -17.875
    6. ' system' → logprob: -18.0
    7. 'Systems' → logprob: -18.125
    8. '	System' → logprob: -18.5
    9. '_System' → logprob: -19.0
    10. 'ystem' → logprob: -19.125

Token 273: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38718488812446594
    2. '):
' → logprob: -1.1371848583221436
    3. ')' → logprob: -8.137185096740723
    4. '):
' → logprob: -11.262185096740723
    5. ':' → logprob: -12.137185096740723
    6. '   ' → logprob: -13.387185096740723
    7. ',' → logprob: -14.387185096740723
    8. ' ):' → logprob: -14.762185096740723
    9. ' ):
' → logprob: -15.262185096740723
    10. '):

' → logprob: -15.512185096740723

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014828738756477833
    2. 'self' → logprob: -4.264828681945801
    3. ' self' → logprob: -7.764828681945801
    4. '   ' → logprob: -8.5148286819458
    5. 'def' → logprob: -11.1398286819458
    6. '):
' → logprob: -11.7648286819458
    7. ')' → logprob: -12.3898286819458
    8. ',' → logprob: -12.3898286819458
    9. '
' → logprob: -12.5148286819458
    10. ' ' → logprob: -13.7648286819458

Token 275: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010767534375190735
    2. '       ' → logprob: -5.010767459869385
    3. ' self' → logprob: -5.510767459869385
    4. '   ' → logprob: -14.760767936706543
    5. '	self' → logprob: -14.760767936706543
    6. '
' → logprob: -16.760766983032227
    7. '(self' → logprob: -18.135766983032227
    8. ' ' → logprob: -18.135766983032227
    9. '        
' → logprob: -18.885766983032227
    10. ',self' → logprob: -19.010766983032227

Token 276: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -1.8550976164988242e-05
    2. '.' → logprob: -11.375018119812012
    3. 'number' → logprob: -12.000018119812012
    4. '.n' → logprob: -15.125018119812012
    5. ' .' → logprob: -15.625018119812012
    6. '.input' → logprob: -16.500019073486328
    7. ' number' → logprob: -16.750019073486328
    8. '.num' → logprob: -16.875019073486328
    9. '	number' → logprob: -16.875019073486328
    10. '.Number' → logprob: -17.625019073486328

Token 277: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -1.1472419600977446e-06
    2. 'system' → logprob: -13.750000953674316
    3. 'System' → logprob: -17.875001907348633
    4. ' system' → logprob: -20.250001907348633
    5. 'ystem' → logprob: -20.625001907348633
    6. '_SYSTEM' → logprob: -21.625001907348633
    7. '_System' → logprob: -22.125001907348633
    8. '_s' → logprob: -22.125001907348633
    9. '_number' → logprob: -22.500001907348633
    10. 'ssystem' → logprob: -23.125001907348633

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. '   ' → logprob: -17.876928329467773
    4. ')' → logprob: -18.001928329467773
    5. ' ' → logprob: -18.001928329467773
    6. ':' → logprob: -18.126928329467773
    7. '_number' → logprob: -18.376928329467773
    8. ' ' → logprob: -18.751928329467773
    9. 'number' → logprob: -19.251928329467773
    10. '=n' → logprob: -19.626928329467773

Token 279: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.005233882926404476
    2. ' number' → logprob: -5.2552337646484375
    3. '	number' → logprob: -17.630233764648438
    4. '_number' → logprob: -18.005233764648438
    5. '[number' → logprob: -19.255233764648438
    6. '(number' → logprob: -20.130233764648438
    7. 'Number' → logprob: -20.380233764648438
    8. 'numbers' → logprob: -21.130233764648438
    9. '   ' → logprob: -21.505233764648438
    10. 'num' → logprob: -21.505233764648438

Token 280: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -1.981667537620524e-06
    2. 'system' → logprob: -13.250001907348633
    3. 'System' → logprob: -16.500001907348633
    4. ' system' → logprob: -17.000001907348633
    5. '_SYSTEM' → logprob: -18.625001907348633
    6. 'ystem' → logprob: -19.500001907348633
    7. '_space' → logprob: -20.375001907348633
    8. '_System' → logprob: -20.750001907348633
    9. 'SYSTEM' → logprob: -20.750001907348633
    10. 'ssystem' → logprob: -20.875001907348633

Token 281: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5354457497596741
    2. '   ' → logprob: -0.9104457497596741
    3. '    
' → logprob: -5.035445690155029
    4. 'def' → logprob: -5.785445690155029
    5. '<|end|>' → logprob: -6.160445690155029
    6. '

' → logprob: -7.910445690155029
    7. '<|end|>' → logprob: -9.660446166992188
    8. '        
' → logprob: -9.910446166992188
    9. '  
' → logprob: -10.285446166992188
    10. ' def' → logprob: -11.035446166992188

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025021275505423546
    2. 'def' → logprob: -3.7750213146209717
    3. '
' → logprob: -6.400021076202393
    4. ' def' → logprob: -9.27502155303955
    5. '    
' → logprob: -11.02502155303955
    6. '```' → logprob: -14.40002155303955
    7. '	def' → logprob: -14.40002155303955
    8. '        
' → logprob: -14.65002155303955
    9. '<|end|>' → logprob: -15.02502155303955
    10. '

' → logprob: -15.15002155303955

Token 283: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.5048530030981055e-06
    2. ' def' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '
' → logprob: -22.000001907348633
    5. 'async' → logprob: -23.125001907348633
    6. '```' → logprob: -24.125001907348633
    7. ' ' → logprob: -24.250001907348633
    8. 'de' → logprob: -24.500001907348633
    9. '	def' → logprob: -24.500001907348633
    10. 'from' → logprob: -24.750001907348633

Token 284: ' process' (ID: 2273)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.500074565410614
    2. ' read' → logprob: -1.8750746250152588
    3. 'process' → logprob: -2.250074625015259
    4. 'convert' → logprob: -2.875074625015259
    5. ' process' → logprob: -3.125074625015259
    6. ' convert' → logprob: -4.37507438659668
    7. 'run' → logprob: -5.00007438659668
    8. 'def' → logprob: -5.12507438659668
    9. ' run' → logprob: -5.75007438659668
    10. 'handle' → logprob: -5.87507438659668

Token 285: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.434589147567749
    2. '_input' → logprob: -1.184589147567749
    3. '_line' → logprob: -3.184589147567749
    4. '(' → logprob: -5.934589385986328
    5. '_' → logprob: -6.559589385986328
    6. '_(' → logprob: -8.059589385986328
    7. '_number' → logprob: -8.059589385986328
    8. 'self' → logprob: -9.184589385986328
    9. '()' → logprob: -9.934589385986328
    10. '_inputs' → logprob: -10.059589385986328

Token 286: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.955703818472102e-05
    2. '(' → logprob: -9.875059127807617
    3. ' (' → logprob: -12.250059127807617
    4. 'self' → logprob: -13.375059127807617
    5. '_line' → logprob: -13.875059127807617
    6. '(s' → logprob: -15.500059127807617
    7. 's' → logprob: -15.750059127807617
    8. '   ' → logprob: -16.000059127807617
    9. ' self' → logprob: -16.750059127807617
    10. '(
' → logprob: -17.000059127807617

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009358783136121929
    2. 'self' → logprob: -7.375936031341553
    3. ')' → logprob: -8.625935554504395
    4. '):
' → logprob: -9.125935554504395
    5. '):' → logprob: -11.375935554504395
    6. ' ,' → logprob: -13.000935554504395
    7. 's' → logprob: -13.000935554504395
    8. ',input' → logprob: -13.375935554504395
    9. '   ' → logprob: -13.625935554504395
    10. '(self' → logprob: -14.750935554504395

Token 288: ' lines' (ID: 8698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.26569634675979614
    2. ' input' → logprob: -1.7656962871551514
    3. 's' → logprob: -3.5156962871551514
    4. ' s' → logprob: -4.3906965255737305
    5. 'line' → logprob: -4.6406965255737305
    6. 'self' → logprob: -6.2656965255737305
    7. ' line' → logprob: -6.5156965255737305
    8. 'inputs' → logprob: -6.5156965255737305
    9. ' inputs' → logprob: -6.7656965255737305
    10. ' lines' → logprob: -7.1406965255737305

Token 289: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009710140293464065
    2. 'self' → logprob: -7.000970840454102
    3. '(self' → logprob: -10.750970840454102
    4. '):' → logprob: -11.000970840454102
    5. ')' → logprob: -11.750970840454102
    6. '):
' → logprob: -12.375970840454102
    7. '   ' → logprob: -12.625970840454102
    8. ':self' → logprob: -13.000970840454102
    9. '```' → logprob: -13.500970840454102
    10. '       ' → logprob: -14.125970840454102

Token 290: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.02668050304055214
    2. 'self' → logprob: -3.9016804695129395
    3. ')' → logprob: -5.6516804695129395
    4. ' List' → logprob: -6.7766804695129395
    5. ' self' → logprob: -7.2766804695129395
    6. 'Optional' → logprob: -7.4016804695129395
    7. 'list' → logprob: -9.401680946350098
    8. 'str' → logprob: -10.526680946350098
    9. ' Optional' → logprob: -11.151680946350098
    10. '):
' → logprob: -11.276680946350098

Token 291: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.500000953674316
    3. 'str' → logprob: -15.125000953674316
    4. '[int' → logprob: -16.125001907348633
    5. 'Optional' → logprob: -16.875001907348633
    6. ')' → logprob: -18.625001907348633
    7. '[
' → logprob: -19.125001907348633
    8. '
' → logprob: -19.250001907348633
    9. '):
' → logprob: -20.750001907348633
    10. '):' → logprob: -21.000001907348633

Token 292: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741040766239166
    2. '])' → logprob: -0.9741040468215942
    3. '   ' → logprob: -11.599103927612305
    4. ']' → logprob: -11.599103927612305
    5. ' ])' → logprob: -13.349103927612305
    6. ''])' → logprob: -13.724103927612305
    7. '`)' → logprob: -13.724103927612305
    8. ']):
' → logprob: -14.099103927612305
    9. '）' → logprob: -14.099103927612305
    10. ' )' → logprob: -14.349103927612305

Token 293: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.3165990710258484
    2. '->' → logprob: -1.3165991306304932
    3. ':' → logprob: -6.816598892211914
    4. '   ' → logprob: -7.191598892211914
    5. ')' → logprob: -7.191598892211914
    6. '       ' → logprob: -7.691598892211914
    7. ')->' → logprob: -8.691598892211914
    8. 'self' → logprob: -10.566598892211914
    9. '(self' → logprob: -10.691598892211914
    10. '->[' → logprob: -11.191598892211914

Token 294: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.034509241580963135
    2. ' List' → logprob: -3.4095091819763184
    3. 'Optional' → logprob: -7.409509181976318
    4. 'str' → logprob: -9.034509658813477
    5. 'None' → logprob: -9.409509658813477
    6. ' Optional' → logprob: -10.409509658813477
    7. ' str' → logprob: -11.534509658813477
    8. ' None' → logprob: -12.534509658813477
    9. 'int' → logprob: -12.534509658813477
    10. '[List' → logprob: -12.659509658813477

Token 295: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.00013369438238441944
    2. '[' → logprob: -9.000133514404297
    3. '[int' → logprob: -11.500133514404297
    4. 'Optional' → logprob: -16.750133514404297
    5. 'str' → logprob: -18.125133514404297
    6. '[
' → logprob: -19.500133514404297
    7. ' [' → logprob: -20.625133514404297
    8. '[List' → logprob: -21.125133514404297
    9. ':' → logprob: -21.375133514404297
    10. ' Optional' → logprob: -21.500133514404297

Token 296: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4778952896595001
    2. ']:' → logprob: -0.9778952598571777
    3. ']' → logprob: -5.977895259857178
    4. ']:
' → logprob: -6.727895259857178
    5. '   ' → logprob: -10.352895736694336
    6. ':' → logprob: -11.727895736694336
    7. '']:
' → logprob: -11.727895736694336
    8. ']:

' → logprob: -11.727895736694336
    9. '):
' → logprob: -11.852895736694336
    10. '       ' → logprob: -12.102895736694336

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0177572313696146
    2. 'result' → logprob: -4.517757415771484
    3. 'output' → logprob: -5.392757415771484
    4. 'results' → logprob: -6.767757415771484
    5. ' result' → logprob: -7.642757415771484
    6. ' results' → logprob: -8.642757415771484
    7. ' output' → logprob: -8.767757415771484
    8. 'outputs' → logprob: -8.767757415771484
    9. '```' → logprob: -12.017757415771484
    10. ' outputs' → logprob: -12.142757415771484

Token 298: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.6326438784599304
    2. '       ' → logprob: -1.1326439380645752
    3. 'output' → logprob: -2.382643938064575
    4. 'result' → logprob: -3.382643938064575
    5. ' results' → logprob: -4.632643699645996
    6. 'outputs' → logprob: -4.632643699645996
    7. ' output' → logprob: -7.632643699645996
    8. ' result' → logprob: -8.007643699645996
    9. ' outputs' → logprob: -9.382643699645996
    10. 'responses' → logprob: -12.632643699645996

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759516358375549
    2. ' =' → logprob: -0.8259516358375549
    3. ':' → logprob: -11.57595157623291
    4. '=[]' → logprob: -13.70095157623291
    5. ' ' → logprob: -13.82595157623291
    6. '   ' → logprob: -14.70095157623291
    7. '=[]
' → logprob: -16.075952529907227
    8. '  ' → logprob: -16.825952529907227
    9. '[]' → logprob: -17.200952529907227
    10. ']' → logprob: -17.325952529907227

Token 300: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00022046364028938115
    2. '[]
' → logprob: -8.50022029876709
    3. ' []' → logprob: -11.00022029876709
    4. '[' → logprob: -15.62522029876709
    5. '[]>' → logprob: -17.875221252441406
    6. '[]

' → logprob: -17.875221252441406
    7. '[]}' → logprob: -18.375221252441406
    8. ' []
' → logprob: -18.375221252441406
    9. '[])' → logprob: -19.625221252441406
    10. '[],' → logprob: -19.750221252441406

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.339278580620885e-06
    2. ' for' → logprob: -13.375001907348633
    3. 'for' → logprob: -14.375001907348633
    4. '   ' → logprob: -15.750001907348633
    5. '```' → logprob: -17.375001907348633
    6. '
' → logprob: -18.500001907348633
    7. '           ' → logprob: -18.625001907348633
    8. '	' → logprob: -18.750001907348633
    9. '	   ' → logprob: -19.250001907348633
    10. ',' → logprob: -19.375001907348633

Token 302: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009980365866795182
    2. ' for' → logprob: -7.500998020172119
    3. '       ' → logprob: -7.750998020172119
    4. 'n' → logprob: -11.250998497009277
    5. 'num' → logprob: -14.125998497009277
    6. '```' → logprob: -15.750998497009277
    7. 'mode' → logprob: -15.875998497009277
    8. 'i' → logprob: -15.875998497009277
    9. ' n' → logprob: -16.12599754333496
    10. 'operation' → logprob: -16.37599754333496

Token 303: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00015920029545668513
    2. ' line' → logprob: -8.75015926361084
    3. 's' → logprob: -14.37515926361084
    4. '	line' → logprob: -17.500158309936523
    5. 'number' → logprob: -17.875158309936523
    6. 'value' → logprob: -18.125158309936523
    7. 'input' → logprob: -18.625158309936523
    8. '(line' → logprob: -18.875158309936523
    9. 'lines' → logprob: -19.375158309936523
    10. '   ' → logprob: -19.375158309936523

Token 304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001328095211647451
    2. 'in' → logprob: -6.626327991485596
    3. '.strip' → logprob: -13.626328468322754
    4. '_in' → logprob: -15.876328468322754
    5. ' =' → logprob: -16.126327514648438
    6. '        ' → logprob: -16.251327514648438
    7. ' ' → logprob: -16.376327514648438
    8. '_' → logprob: -16.376327514648438
    9. 's' → logprob: -16.501327514648438
    10. 'line' → logprob: -16.876327514648438

Token 305: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.002477677771821618
    2. ' lines' → logprob: -6.002477645874023
    3. '(lines' → logprob: -13.627477645874023
    4. 'line' → logprob: -14.502477645874023
    5. '	lines' → logprob: -15.627477645874023
    6. '   ' → logprob: -16.252477645874023
    7. '.lines' → logprob: -17.002477645874023
    8. ' ' → logprob: -17.502477645874023
    9. '```' → logprob: -18.502477645874023
    10. '
' → logprob: -18.627477645874023

Token 306: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29967525601387024
    2. ':
' → logprob: -1.4246752262115479
    3. '           ' → logprob: -4.174675464630127
    4. '.strip' → logprob: -5.924675464630127
    5. '):
' → logprob: -9.299674987792969
    6. ',' → logprob: -9.299674987792969
    7. '.' → logprob: -10.549674987792969
    8. '       ' → logprob: -11.174674987792969
    9. '.split' → logprob: -11.174674987792969
    10. '.rstrip' → logprob: -11.424674987792969

Token 307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024965754710137844
    2. 'line' → logprob: -8.875249862670898
    3. ' line' → logprob: -9.250249862670898
    4. 's' → logprob: -12.250249862670898
    5. ' stripped' → logprob: -13.125249862670898
    6. 'tokens' → logprob: -13.250249862670898
    7. 'strip' → logprob: -13.875249862670898
    8. '#line' → logprob: -14.375249862670898
    9. '=line' → logprob: -14.625249862670898
    10. '(line' → logprob: -15.000249862670898

Token 308: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.16663527488708496
    2. ' line' → logprob: -1.916635274887085
    3. '           ' → logprob: -5.166635513305664
    4. 'parts' → logprob: -8.666635513305664
    5. 'if' → logprob: -9.041635513305664
    6. ' parts' → logprob: -9.416635513305664
    7. 'number' → logprob: -9.666635513305664
    8. 'try' → logprob: -9.916635513305664
    9. ' stripped' → logprob: -10.166635513305664
    10. 's' → logprob: -10.666635513305664

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4748277962207794
    2. '=' → logprob: -0.974827766418457
    3. '.strip' → logprob: -7.599827766418457
    4. '=line' → logprob: -8.724827766418457
    5. '_strip' → logprob: -9.599827766418457
    6. '.startswith' → logprob: -11.724827766418457
    7. '_parts' → logprob: -12.849827766418457
    8. '_str' → logprob: -13.224827766418457
    9. 'strip' → logprob: -13.474827766418457
    10. '=str' → logprob: -13.599827766418457

Token 310: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015023599844425917
    2. ' line' → logprob: -6.501502513885498
    3. '	line' → logprob: -21.126502990722656
    4. '=line' → logprob: -21.251502990722656
    5. '(line' → logprob: -21.501502990722656
    6. '[line' → logprob: -22.626502990722656
    7. '   ' → logprob: -22.751502990722656
    8. '#line' → logprob: -22.876502990722656
    9. 'lines' → logprob: -23.126502990722656
    10. ' ' → logprob: -23.251502990722656

Token 311: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0024819616228342056
    2. '.' → logprob: -6.002481937408447
    3. 'strip' → logprob: -12.877482414245605
    4. '.rstrip' → logprob: -13.002482414245605
    5. '.trim' → logprob: -14.002482414245605
    6. ' .' → logprob: -14.377482414245605
    7. '.replace' → logprob: -17.00248146057129
    8. ' strip' → logprob: -17.50248146057129
    9. '.lower' → logprob: -17.87748146057129
    10. '().' → logprob: -17.87748146057129

Token 312: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.576313316822052
    2. '()' → logprob: -0.826313316822052
    3. '           ' → logprob: -8.326313018798828
    4. ')' → logprob: -9.826313018798828
    5. '()

' → logprob: -10.201313018798828
    6. '()
' → logprob: -11.326313018798828
    7. ')
' → logprob: -11.701313018798828
    8. '())
' → logprob: -12.201313018798828
    9. '())' → logprob: -12.576313018798828
    10. '<|end|>' → logprob: -13.326313018798828

Token 313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06228494644165039
    2. 'if' → logprob: -3.0622849464416504
    3. ' if' → logprob: -4.31228494644165
    4. '       ' → logprob: -8.812284469604492
    5. 'try' → logprob: -10.687284469604492
    6. ',' → logprob: -12.187284469604492
    7. 'tokens' → logprob: -12.312284469604492
    8. '            
' → logprob: -12.812284469604492
    9. '```' → logprob: -12.812284469604492
    10. '   ' → logprob: -13.062284469604492

Token 314: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003233070601709187
    2. '           ' → logprob: -8.125323295593262
    3. ' if' → logprob: -11.250323295593262
    4. 'try' → logprob: -11.625323295593262
    5. 'parts' → logprob: -12.500323295593262
    6. '#' → logprob: -14.250323295593262
    7. '       ' → logprob: -14.875323295593262
    8. 'tokens' → logprob: -15.250323295593262
    9. '               ' → logprob: -15.750323295593262
    10. '```' → logprob: -16.375324249267578

Token 315: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.09824557602405548
    2. ' line' → logprob: -3.348245620727539
    3. ' not' → logprob: -3.473245620727539
    4. 'not' → logprob: -3.598245620727539
    5. 'len' → logprob: -10.848245620727539
    6. ''' → logprob: -11.598245620727539
    7. ' ' → logprob: -12.598245620727539
    8. '	line' → logprob: -13.598245620727539
    9. 'n't' → logprob: -13.723245620727539
    10. 'all' → logprob: -13.973245620727539

Token 316: ' ==' (ID: 951)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.08453311771154404
    2. ' ==' → logprob: -2.834533214569092
    3. '==' → logprob: -4.209533214569092
    4. '.is' → logprob: -5.084533214569092
    5. ':' → logprob: -7.209533214569092
    6. '.' → logprob: -8.209532737731934
    7. '.endswith' → logprob: -9.084532737731934
    8. 'startswith' → logprob: -9.334532737731934
    9. '.lower' → logprob: -11.334532737731934
    10. '.upper' → logprob: -11.834532737731934

Token 317: ' '-' (ID: 17489)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.669650673866272
    2. '''' → logprob: -0.919650673866272
    3. '"":' → logprob: -2.7946505546569824
    4. ''ex' → logprob: -4.294650554656982
    5. '""' → logprob: -4.919650554656982
    6. '"' → logprob: -5.169650554656982
    7. ''end' → logprob: -7.044650554656982
    8. ''#' → logprob: -8.91965103149414
    9. ''q' → logprob: -9.29465103149414
    10. ''ob' → logprob: -9.66965103149414

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001808460452593863
    2. '-' → logprob: -6.6268086433410645
    3. ''' → logprob: -7.8768086433410645
    4. '':' → logprob: -10.001808166503906
    5. '':
' → logprob: -11.001808166503906
    6. ''>' → logprob: -11.126808166503906
    7. ''-' → logprob: -11.626808166503906
    8. 'end' → logprob: -12.751808166503906
    9. '0' → logprob: -12.876808166503906
    10. '-end' → logprob: -13.376808166503906

Token 319: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.11451631784439087
    2. '':' → logprob: -2.239516258239746
    3. ''' → logprob: -6.489516258239746
    4. '':
' → logprob: -8.864516258239746
    5. ':' → logprob: -11.489516258239746
    6. ''):
' → logprob: -12.364516258239746
    7. ''or' → logprob: -12.364516258239746
    8. '':

' → logprob: -12.614516258239746
    9. ':
' → logprob: -12.739516258239746
    10. '0' → logprob: -13.489516258239746

Token 320: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6895122528076172
    2. '               ' → logprob: -0.9395122528076172
    3. ':' → logprob: -2.814512252807617
    4. ':
' → logprob: -3.064512252807617
    5. '                   ' → logprob: -8.939512252807617
    6. '            ' → logprob: -9.439512252807617
    7. ' break' → logprob: -9.439512252807617
    8. '	           ' → logprob: -9.564512252807617
    9. ' or' → logprob: -9.689512252807617
    10. ' and' → logprob: -9.689512252807617

Token 321: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3414943218231201
    2. ' break' → logprob: -1.3414943218231201
    3. '               ' → logprob: -3.59149432182312
    4. '                   ' → logprob: -8.8414945602417
    5. '	break' → logprob: -9.3414945602417
    6. '           ' → logprob: -10.0914945602417
    7. '_break' → logprob: -12.9664945602417
    8. 'return' → logprob: -13.3414945602417
    9. '
' → logprob: -13.5914945602417
    10. 'Break' → logprob: -14.8414945602417

Token 322: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002678920282050967
    2. '            
' → logprob: -8.62526798248291
    3. '
' → logprob: -9.50026798248291
    4. '               ' → logprob: -12.62526798248291
    5. ',' → logprob: -12.87526798248291
    6. '<|end|>' → logprob: -13.37526798248291
    7. '          ' → logprob: -13.87526798248291
    8. ' for' → logprob: -14.25026798248291
    9. '    
' → logprob: -14.62526798248291
    10. '       ' → logprob: -14.75026798248291

Token 323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.611323624383658e-05
    2. '            
' → logprob: -10.000065803527832
    3. '
' → logprob: -11.125065803527832
    4. '          ' → logprob: -13.625065803527832
    5. ' if' → logprob: -13.875065803527832
    6. ',' → logprob: -14.375065803527832
    7. 'if' → logprob: -14.625065803527832
    8. '               ' → logprob: -14.750065803527832
    9. 'elif' → logprob: -15.000065803527832
    10. '```' → logprob: -15.125065803527832

Token 324: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.3568047881126404
    2. '       ' → logprob: -2.106804847717285
    3. '           ' → logprob: -2.606804847717285
    4. 'if' → logprob: -2.981804847717285
    5. 'decimal' → logprob: -3.731804847717285
    6. 'number' → logprob: -4.481804847717285
    7. 'num' → logprob: -4.731804847717285
    8. 'n' → logprob: -5.731804847717285
    9. 'converted' → logprob: -6.481804847717285
    10. ' try' → logprob: -6.481804847717285

Token 325: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07402513176202774
    2. ':' → logprob: -2.6990251541137695
    3. '               ' → logprob: -5.5740251541137695
    4. '           ' → logprob: -8.32402515411377
    5. '):
' → logprob: -11.32402515411377
    6. '       ' → logprob: -11.32402515411377
    7. ':
' → logprob: -11.69902515411377
    8. ' :
' → logprob: -12.44902515411377
    9. ',' → logprob: -13.32402515411377
    10. ':

' → logprob: -13.69902515411377

Token 326: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5163649916648865
    2. '               ' → logprob: -1.0163650512695312
    3. 'n' → logprob: -4.141365051269531
    4. 'num' → logprob: -4.141365051269531
    5. 'number' → logprob: -5.016365051269531
    6. '   ' → logprob: -6.516365051269531
    7. 'value' → logprob: -7.516365051269531
    8. 'int' → logprob: -7.891365051269531
    9. ' n' → logprob: -9.141365051269531
    10. 'decimal' → logprob: -9.141365051269531

Token 327: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.9327411651611328
    2. 'num' → logprob: -1.1827411651611328
    3. 'decimal' → logprob: -2.057741165161133
    4. '                   ' → logprob: -2.432741165161133
    5. 'number' → logprob: -2.682741165161133
    6. ' n' → logprob: -5.057741165161133
    7. ' num' → logprob: -6.057741165161133
    8. '               ' → logprob: -6.432741165161133
    9. ' decimal' → logprob: -6.682741165161133
    10. 'value' → logprob: -6.932741165161133

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043020084500312805
    2. '=' → logprob: -3.168020009994507
    3. '_decimal' → logprob: -11.668020248413086
    4. '=int' → logprob: -11.918020248413086
    5. '_int' → logprob: -13.418020248413086
    6. ' ' → logprob: -14.043020248413086
    7. 'decimal' → logprob: -14.168020248413086
    8. 'int' → logprob: -14.793020248413086
    9. '               ' → logprob: -15.043020248413086
    10. '   ' → logprob: -15.168020248413086

Token 329: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011706985533237457
    2. ' int' → logprob: -6.751170635223389
    3. '                   ' → logprob: -15.501171112060547
    4. '               ' → logprob: -15.876171112060547
    5. '[int' → logprob: -15.876171112060547
    6. '   ' → logprob: -18.251171112060547
    7. '(int' → logprob: -18.376171112060547
    8. '=int' → logprob: -18.376171112060547
    9. ' ' → logprob: -19.126171112060547
    10. ':int' → logprob: -19.751171112060547

Token 330: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.3782830137643032e-05
    2. 'line' → logprob: -11.75001335144043
    3. ' line' → logprob: -12.25001335144043
    4. '(' → logprob: -14.62501335144043
    5. '[line' → logprob: -14.75001335144043
    6. '#line' → logprob: -16.12501335144043
    7. '=line' → logprob: -16.37501335144043
    8. '	line' → logprob: -16.62501335144043
    9. ',line' → logprob: -17.37501335144043
    10. ' (' → logprob: -19.37501335144043

Token 331: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2525327801704407
    2. ')' → logprob: -1.502532720565796
    3. '               ' → logprob: -7.752532958984375
    4. ')
' → logprob: -8.752532958984375
    5. ')

' → logprob: -12.252532958984375
    6. '           ' → logprob: -12.502532958984375
    7. ' )
' → logprob: -12.627532958984375
    8. '                   ' → logprob: -13.252532958984375
    9. ')`
' → logprob: -14.127532958984375
    10. ' )' → logprob: -14.752532958984375

Token 332: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002406931249424815
    2. ' results' → logprob: -6.377407073974609
    3. 'results' → logprob: -7.752407073974609
    4. '           ' → logprob: -9.50240707397461
    5. ' except' → logprob: -9.75240707397461
    6. 'result' → logprob: -9.87740707397461
    7. 'except' → logprob: -10.12740707397461
    8. ' result' → logprob: -11.25240707397461
    9. '                
' → logprob: -11.50240707397461
    10. 'output' → logprob: -12.62740707397461

Token 333: ' if' (ID: 538)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.7083911895751953
    2. 'results' → logprob: -1.5833911895751953
    3. 'converted' → logprob: -1.7083911895751953
    4. 'result' → logprob: -3.2083911895751953
    5. ' converted' → logprob: -3.5833911895751953
    6. ' result' → logprob: -3.7083911895751953
    7. '               ' → logprob: -3.9583911895751953
    8. '                   ' → logprob: -4.833391189575195
    9. 'conv' → logprob: -7.833391189575195
    10. 'output' → logprob: -8.833391189575195

Token 334: ' not' (ID: 625)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01721065118908882
    2. ' n' → logprob: -4.142210483551025
    3. '0' → logprob: -7.642210483551025
    4. '                   ' → logprob: -8.267210960388184
    5. '               ' → logprob: -8.517210960388184
    6. '   ' → logprob: -10.142210960388184
    7. ' ' → logprob: -10.267210960388184
    8. '-' → logprob: -10.767210960388184
    9. 'not' → logprob: -11.142210960388184
    10. 'self' → logprob: -11.454710960388184

Token 335: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6810736656188965
    2. '(' → logprob: -1.4310736656188965
    3. ' isinstance' → logprob: -2.5560736656188965
    4. ' ' → logprob: -3.0560736656188965
    5. '0' → logprob: -3.0560736656188965
    6. ' -' → logprob: -4.0560736656188965
    7. '-' → logprob: -4.1810736656188965
    8. '(n' → logprob: -4.4310736656188965
    9. ' (-' → logprob: -4.4310736656188965
    10. '(-' → logprob: -4.6810736656188965

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04670035466551781
    2. ' ' → logprob: -3.1717002391815186
    3. '-' → logprob: -6.046700477600098
    4. '1' → logprob: -7.421700477600098
    5. ' -' → logprob: -7.796700477600098
    6. '(' → logprob: -8.921700477600098
    7. ' (' → logprob: -9.796700477600098
    8. '   ' → logprob: -10.671700477600098
    9. '100' → logprob: -10.796700477600098
    10. '10' → logprob: -10.859200477600098

Token 337: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.575946033000946
    2. '<=' → logprob: -0.825946033000946
    3. '0' → logprob: -12.325945854187012
    4. ' ' → logprob: -13.950945854187012
    5. '   ' → logprob: -15.075945854187012
    6. ')<=' → logprob: -15.575945854187012
    7. '```' → logprob: -16.200946807861328
    8. 'le' → logprob: -16.450946807861328
    9. '<' → logprob: -16.700946807861328
    10. '<|end|>' → logprob: -17.200946807861328

Token 338: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0036026788875460625
    2. ' n' → logprob: -5.628602504730225
    3. '   ' → logprob: -14.128602981567383
    4. ' ' → logprob: -15.003602981567383
    5. '	n' → logprob: -15.003602981567383
    6. ')n' → logprob: -15.128602981567383
    7. '  ' → logprob: -15.691102981567383
    8. ')' → logprob: -15.816102981567383
    9. '_n' → logprob: -16.253602981567383
    10. '
' → logprob: -16.316102981567383

Token 339: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.16143277287483215
    2. ' <=' → logprob: -1.9114327430725098
    3. '<' → logprob: -6.91143274307251
    4. 'and' → logprob: -9.536433219909668
    5. ' and' → logprob: -9.786433219909668
    6. ' <' → logprob: -10.411433219909668
    7. ')' → logprob: -10.786433219909668
    8. ')<=' → logprob: -11.536433219909668
    9. ' ' → logprob: -11.911433219909668
    10. '<n' → logprob: -13.161433219909668

Token 340: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.15894529223442078
    2. '10' → logprob: -2.408945322036743
    3. '214' → logprob: -4.408945083618164
    4. '999' → logprob: -4.533945083618164
    5. '429' → logprob: -4.533945083618164
    6. '255' → logprob: -5.158945083618164
    7. '655' → logprob: -5.533945083618164
    8. '102' → logprob: -5.908945083618164
    9. ' ' → logprob: -6.158945083618164
    10. '2' → logprob: -6.283945083618164

Token 341: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1421457976102829
    2. '10' → logprob: -2.267145872116089
    3. '214' → logprob: -4.51714563369751
    4. '999' → logprob: -5.89214563369751
    5. '655' → logprob: -6.01714563369751
    6. '429' → logprob: -6.01714563369751
    7. '2' → logprob: -6.14214563369751
    8. '102' → logprob: -6.26714563369751
    9. '1' → logprob: -6.76714563369751
    10. '500' → logprob: -7.14214563369751

Token 342: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.3840978741645813
    2. '0' → logprob: -1.7590978145599365
    3. '00' → logprob: -2.2590978145599365
    4. '):
' → logprob: -3.7590978145599365
    5. '):' → logprob: -4.259098052978516
    6. '_' → logprob: -5.384098052978516
    7. ')' → logprob: -9.384098052978516
    8. ' ' → logprob: -10.009098052978516
    9. '):

' → logprob: -11.009098052978516
    10. '):
' → logprob: -11.071598052978516

Token 343: '0' (ID: 15)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5277121067047119
    2. '0' → logprob: -1.527712106704712
    3. '):' → logprob: -1.652712106704712
    4. '000' → logprob: -7.777711868286133
    5. '00' → logprob: -7.902711868286133
    6. '):
' → logprob: -8.277711868286133
    7. ')' → logprob: -8.527711868286133
    8. ' ):
' → logprob: -8.902711868286133
    9. '):

' → logprob: -10.027711868286133
    10. ' ):' → logprob: -10.027711868286133

Token 344: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04879742115736008
    2. '):' → logprob: -3.048797369003296
    3. ' ):
' → logprob: -8.673797607421875
    4. '):
' → logprob: -10.798797607421875
    5. ' ):' → logprob: -11.923797607421875
    6. ')' → logprob: -12.548797607421875
    7. '):

' → logprob: -12.798797607421875
    8. ' and' → logprob: -13.048797607421875
    9. ':' → logprob: -13.423797607421875
    10. ':
' → logprob: -13.923797607421875

Token 345: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005518446210771799
    2. ':' → logprob: -6.255518436431885
    3. ':
' → logprob: -6.380518436431885
    4. '):
' → logprob: -7.255518436431885
    5. '               ' → logprob: -7.380518436431885
    6. '):' → logprob: -8.755518913269043
    7. '                       ' → logprob: -9.005518913269043
    8. ',' → logprob: -10.005518913269043
    9. '                    
' → logprob: -10.005518913269043
    10. '<|end|>' → logprob: -10.505518913269043

Token 346: ' raise' (ID: 9338)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.4633118510246277
    2. ' results' → logprob: -1.0883119106292725
    3. '                   ' → logprob: -3.4633119106292725
    4. 'raise' (adapté à ' raise') → logprob: -6.963311672210693
    5. ' raise' → logprob: -7.213311672210693
    6. 'continue' → logprob: -7.713311672210693
    7. ' continue' → logprob: -8.213312149047852
    8. '   ' → logprob: -9.088312149047852
    9. '	results' → logprob: -9.463312149047852
    10. '                       ' → logprob: -9.963312149047852

Token 347: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.10021303594112396
    2. 'Value' → logprob: -2.350213050842285
    3. '	Value' → logprob: -12.600213050842285
    4. '_value' → logprob: -14.100213050842285
    5. '(Value' → logprob: -14.100213050842285
    6. '<Value' → logprob: -14.725213050842285
    7. '_Value' → logprob: -14.850213050842285
    8. ' ' → logprob: -15.350213050842285
    9. 'value' → logprob: -15.725213050842285
    10. '.Value' → logprob: -16.10021209716797

Token 348: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0023163107689470053
    2. 'rror' → logprob: -6.627316474914551
    3. 'Value' → logprob: -7.002316474914551
    4. 'alue' → logprob: -9.50231647491455
    5. 'SError' → logprob: -12.50231647491455
    6. 'ror' → logprob: -14.62731647491455
    7. 'n' → logprob: -15.37731647491455
    8. 'value' → logprob: -15.50231647491455
    9. 'error' → logprob: -15.62731647491455
    10. 'Warning' → logprob: -15.87731647491455

Token 349: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.19184046983718872
    2. '()' → logprob: -2.066840410232544
    3. '               ' → logprob: -3.316840410232544
    4. '()
' → logprob: -4.816840648651123
    5. '('' → logprob: -6.566840648651123
    6. '                   ' → logprob: -7.066840648651123
    7. '           ' → logprob: -7.441840648651123
    8. '(f' → logprob: -8.066840171813965
    9. '(' → logprob: -9.066840171813965
    10. '
' → logprob: -9.191840171813965

Token 350: 'Number' (ID: 3695)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06881845742464066
    2. 'Number' → logprob: -3.6938185691833496
    3. ' "' → logprob: -4.44381856918335
    4. 'Input' → logprob: -4.56881856918335
    5. '")' → logprob: -4.69381856918335
    6. 'n' → logprob: -5.56881856918335
    7. ')' → logprob: -6.19381856918335
    8. 'Invalid' → logprob: -6.69381856918335
    9. 'Value' → logprob: -7.19381856918335
    10. ' n' → logprob: -7.69381856918335

Token 351: ' out' (ID: 842)
  Prédit: ' out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' out' → logprob: -0.0006156971794553101
    2. ' must' → logprob: -7.62561559677124
    3. 'out' → logprob: -10.000616073608398
    4. ' not' → logprob: -10.000616073608398
    5. ' outside' → logprob: -11.000616073608398
    6. ' too' → logprob: -11.500616073608398
    7. ' should' → logprob: -12.500616073608398
    8. ' is' → logprob: -12.750616073608398
    9. ' ' → logprob: -13.375616073608398
    10. ' exceeds' → logprob: -14.250616073608398

Token 352: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0039048073813319206
    2. 'of' → logprob: -5.628904819488525
    3. '<|end|>' → logprob: -8.378904342651367
    4. '_of' → logprob: -10.003904342651367
    5. ' ' → logprob: -11.503904342651367
    6. '<|end|>' → logprob: -12.628904342651367
    7. ' range' → logprob: -12.753904342651367
    8. '-of' → logprob: -12.878904342651367
    9. 'Of' → logprob: -13.003904342651367
    10. '    ' → logprob: -13.253904342651367

Token 353: ' allowed' (ID: 9279)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09971641004085541
    2. ' range' → logprob: -2.4747164249420166
    3. 'allowed' → logprob: -4.9747161865234375
    4. ' allowed' → logprob: -6.2247161865234375
    5. ' valid' → logprob: -7.3497161865234375
    6. 'bounds' → logprob: -7.5997161865234375
    7. 'valid' → logprob: -7.9747161865234375
    8. ' bounds' → logprob: -8.849716186523438
    9. 'accepted' → logprob: -9.474716186523438
    10. 'acceptable' → logprob: -10.224716186523438

Token 354: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.009761521592736244
    2. 'range' → logprob: -4.634761333465576
    3. '	range' → logprob: -13.634761810302734
    4. '   ' → logprob: -14.009761810302734
    5. ' ' → logprob: -14.009761810302734
    6. ' ranges' → logprob: -14.134761810302734
    7. ' bounds' → logprob: -14.509761810302734
    8. '  ' → logprob: -14.634761810302734
    9. 'ranges' → logprob: -15.259761810302734
    10. '_range' → logprob: -15.759761810302734

Token 355: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.14474451541900635
    2. '")' → logprob: -2.019744396209717
    3. '               ' → logprob: -7.019744396209717
    4. '           ' → logprob: -7.519744396209717
    5. '.")
' → logprob: -8.644744873046875
    6. '                   ' → logprob: -9.269744873046875
    7. ':' → logprob: -9.644744873046875
    8. '0' → logprob: -9.894744873046875
    9. '")
' → logprob: -10.144744873046875
    10. ' (' → logprob: -10.144744873046875

Token 356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003361774142831564
    2. '           ' → logprob: -8.625336647033691
    3. ')' → logprob: -9.125336647033691
    4. '                
' → logprob: -11.000336647033691
    5. '<|end|>' → logprob: -11.375336647033691
    6. '                   ' → logprob: -11.750336647033691
    7. ',' → logprob: -12.750336647033691
    8. '```' → logprob: -13.625336647033691
    9. '              ' → logprob: -13.875336647033691
    10. ' ' → logprob: -14.125336647033691

Token 357: ' converted' (ID: 28358)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3208717405796051
    2. 'converted' (adapté à ' converted') → logprob: -1.6958717107772827
    3. 'result' → logprob: -3.4458718299865723
    4. ' converted' → logprob: -3.8208718299865723
    5. 'results' → logprob: -4.070871829986572
    6. ' results' → logprob: -4.570871829986572
    7. ' result' → logprob: -5.320871829986572
    8. 'output' → logprob: -6.320871829986572
    9. 's' → logprob: -6.695871829986572
    10. 'conv' → logprob: -7.945871829986572

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01819278672337532
    2. '=' → logprob: -4.268192768096924
    3. '_str' → logprob: -6.393192768096924
    4. '_value' → logprob: -6.518192768096924
    5. '_number' → logprob: -7.143192768096924
    6. '_string' → logprob: -10.143193244934082
    7. '_num' → logprob: -11.143193244934082
    8. '_' → logprob: -11.643193244934082
    9. '	' → logprob: -12.643193244934082
    10. '_result' → logprob: -13.143193244934082

Token 359: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931578516960144
    2. 'self' → logprob: -0.6931578516960144
    3. '               ' → logprob: -11.693158149719238
    4. '                   ' → logprob: -13.693158149719238
    5. '           ' → logprob: -14.818158149719238
    6. ' ' → logprob: -15.568158149719238
    7. '	self' → logprob: -15.943158149719238
    8. '                ' → logprob: -16.318157196044922
    9. ' ' → logprob: -16.693157196044922
    10. ' f' → logprob: -16.693157196044922

Token 360: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.0700211226940155
    2. 'number' → logprob: -2.695021152496338
    3. ' number' → logprob: -10.19502067565918
    4. 'umber' → logprob: -10.69502067565918
    5. '.' → logprob: -11.57002067565918
    6. ' .' → logprob: -12.82002067565918
    7. '[number' → logprob: -13.07002067565918
    8. '_number' → logprob: -13.32002067565918
    9. 'Number' → logprob: -13.32002067565918
    10. '   ' → logprob: -13.32002067565918

Token 361: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -6.704273118884885e-07
    2. 'system' → logprob: -14.250000953674316
    3. 'System' → logprob: -17.25
    4. '_SYSTEM' → logprob: -19.625
    5. ' system' → logprob: -20.25
    6. 'ssystem' → logprob: -20.875
    7. 'ystem' → logprob: -21.25
    8. '_System' → logprob: -21.5
    9. 'convert' → logprob: -21.75
    10. '系统' → logprob: -21.75

Token 362: '.convert' (ID: 37827)
  Prédit: '.convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.convert' → logprob: -0.0006375004886649549
    2. '.' → logprob: -7.375637531280518
    3. ' .' → logprob: -11.75063705444336
    4. 'convert' → logprob: -12.75063705444336
    5. '   ' → logprob: -16.37563705444336
    6. ' convert' → logprob: -17.75063705444336
    7. '.process' → logprob: -18.50063705444336
    8. '_convert' → logprob: -18.50063705444336
    9. '(convert' → logprob: -18.75063705444336
    10. '.
' → logprob: -18.75063705444336

Token 363: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: 0.0
    2. 'from' → logprob: -19.125
    3. '_to' → logprob: -19.25
    4. '_FROM' → logprob: -23.375
    5. '_for' → logprob: -23.75
    6. '_' → logprob: -24.125
    7. 'From' → logprob: -24.25
    8. ' from' → logprob: -24.75
    9. '_From' → logprob: -25.25
    10. '.from' → logprob: -25.875

Token 364: '_decimal' (ID: 178716)
  Prédit: '_decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_decimal' → logprob: -0.006716555915772915
    2. 'decimal' → logprob: -5.006716728210449
    3. ' decimal' → logprob: -13.88171672821045
    4. 'Decimal' → logprob: -16.131715774536133
    5. '_dec' → logprob: -16.131715774536133
    6. '_' → logprob: -17.881715774536133
    7. '```' → logprob: -17.881715774536133
    8. 'dec' → logprob: -17.881715774536133
    9. 'from' → logprob: -18.256715774536133
    10. '(decimal' → logprob: -18.381715774536133

Token 365: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.8802491215174086e-05
    2. '(' → logprob: -10.625028610229492
    3. ' (' → logprob: -13.000028610229492
    4. '(convert' → logprob: -13.125028610229492
    5. '(
' → logprob: -15.875028610229492
    6. ')' → logprob: -17.500028610229492
    7. '```' → logprob: -17.500028610229492
    8. '(con' → logprob: -17.750028610229492
    9. '(number' → logprob: -18.625028610229492
    10. '   ' → logprob: -18.750028610229492

Token 366: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.019437531009316444
    2. ')' → logprob: -4.019437313079834
    3. '               ' → logprob: -6.894437313079834
    4. '           ' → logprob: -8.644437789916992
    5. ')
' → logprob: -9.269437789916992
    6. ')

' → logprob: -13.894437789916992
    7. ' )
' → logprob: -14.269437789916992
    8. '                   ' → logprob: -14.269437789916992
    9. '       ' → logprob: -15.144437789916992
    10. ')`
' → logprob: -15.144437789916992

Token 367: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00037359268753789365
    2. '           ' → logprob: -8.250373840332031
    3. 'results' → logprob: -9.250373840332031
    4. ' results' → logprob: -11.125373840332031
    5. '```' → logprob: -14.625373840332031
    6. '       ' → logprob: -15.000373840332031
    7. '                   ' → logprob: -15.250373840332031
    8. '   ' → logprob: -15.500373840332031
    9. '              ' → logprob: -16.50037384033203
    10. '(results' → logprob: -16.62537384033203

Token 368: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.02107149548828602
    2. ' results' → logprob: -4.021071434020996
    3. '               ' → logprob: -5.896071434020996
    4. '           ' → logprob: -8.771071434020996
    5. '	results' → logprob: -12.021071434020996
    6. '   ' → logprob: -13.271071434020996
    7. '       ' → logprob: -13.646071434020996
    8. '.results' → logprob: -13.896071434020996
    9. '                   ' → logprob: -14.146071434020996
    10. '(results' → logprob: -15.146071434020996

Token 369: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003362966235727072
    2. '.' → logprob: -8.000336647033691
    3. 'append' → logprob: -14.125336647033691
    4. '.ap' → logprob: -16.125335693359375
    5. '.app' → logprob: -16.625335693359375
    6. '.Append' → logprob: -17.375335693359375
    7. ' .' → logprob: -17.875335693359375
    8. '_append' → logprob: -18.625335693359375
    9. '.extend' → logprob: -19.000335693359375
    10. ' append' → logprob: -19.500335693359375

Token 370: '(convert' (ID: 101435)
  Prédit: '(convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(convert' → logprob: -6.704273118884885e-07
    2. 'converted' → logprob: -14.250000953674316
    3. '(' → logprob: -17.0
    4. '(f' → logprob: -17.375
    5. '(str' → logprob: -18.125
    6. ' converted' → logprob: -20.0
    7. 'convert' → logprob: -20.125
    8. '(Convert' → logprob: -20.5
    9. '(con' → logprob: -21.375
    10. ' (' → logprob: -22.125

Token 371: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.005243122112005949
    2. 'ted' → logprob: -5.505243301391602
    3. 'ent' → logprob: -7.255243301391602
    4. 'ented' → logprob: -8.005243301391602
    5. 'ited' → logprob: -9.755243301391602
    6. 'eted' → logprob: -10.630243301391602
    7. 'ated' → logprob: -11.505243301391602
    8. 'uted' → logprob: -11.755243301391602
    9. '(convert' → logprob: -12.255243301391602
    10. 'itted' → logprob: -13.255243301391602

Token 372: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030558640137314796
    2. ')
' → logprob: -3.5305585861206055
    3. '           ' → logprob: -7.1555585861206055
    4. '       ' → logprob: -11.030558586120605
    5. '               ' → logprob: -12.030558586120605
    6. ')
' → logprob: -12.780558586120605
    7. '```' → logprob: -13.655558586120605
    8. ')`
' → logprob: -15.780558586120605
    9. '
' → logprob: -15.780558586120605
    10. '')' → logprob: -16.030559539794922

Token 373: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011216417187824845
    2. '       ' → logprob: -6.876121520996094
    3. 'except' → logprob: -10.001121520996094
    4. '
' → logprob: -10.876121520996094
    5. '```' → logprob: -11.626121520996094
    6. ' except' → logprob: -11.751121520996094
    7. 'return' → logprob: -12.876121520996094
    8. '            
' → logprob: -13.751121520996094
    9. '               ' → logprob: -14.126121520996094
    10. ' return' → logprob: -14.126121520996094

Token 374: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20700928568840027
    2. 'except' (adapté à ' except') → logprob: -1.7070093154907227
    3. ' except' → logprob: -5.332009315490723
    4. '       ' → logprob: -7.207009315490723
    5. '	except' → logprob: -13.707009315490723
    6. '          ' → logprob: -13.832009315490723
    7. 'catch' → logprob: -14.707009315490723
    8. 'return' → logprob: -14.957009315490723
    9. '         ' → logprob: -15.082009315490723
    10. '   ' → logprob: -15.207009315490723

Token 375: ' Exception' (ID: 6851)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.10138381272554398
    2. 'Value' → logprob: -2.851383924484253
    3. '(Value' → logprob: -3.351383924484253
    4. ' (' → logprob: -6.726383686065674
    5. ' Exception' → logprob: -6.726383686065674
    6. '(Exception' → logprob: -7.226383686065674
    7. 'Exception' → logprob: -8.851384162902832
    8. '<|end|>' → logprob: -9.226384162902832
    9. '	Value' → logprob: -9.476384162902832
    10. '(' → logprob: -9.726384162902832

Token 376: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.03819859400391579
    2. ':' → logprob: -3.413198709487915
    3. 'as' → logprob: -5.413198471069336
    4. ':
' → logprob: -9.538198471069336
    5. ')' → logprob: -12.663198471069336
    6. '	as' → logprob: -12.663198471069336
    7. '           ' → logprob: -13.038198471069336
    8. ',' → logprob: -13.788198471069336
    9. '<|end|>' → logprob: -13.913198471069336
    10. '):' → logprob: -15.038198471069336

Token 377: ' e' (ID: 319)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3570729196071625
    2. ' ' → logprob: -1.6070729494094849
    3. ' Exception' → logprob: -3.4820728302001953
    4. ' as' → logprob: -3.7320728302001953
    5. ' e' → logprob: -3.9820728302001953
    6. ' Value' → logprob: -5.232072830200195
    7. '   ' → logprob: -5.857072830200195
    8. ' None' → logprob: -6.107072830200195
    9. 'Value' → logprob: -6.232072830200195
    10. '  ' → logprob: -6.232072830200195

Token 378: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062118254601955414
    2. ':
' → logprob: -3.1871182918548584
    3. ' as' → logprob: -4.062118053436279
    4. '               ' → logprob: -6.437118053436279
    5. '           ' → logprob: -9.687118530273438
    6. ',' → logprob: -11.062118530273438
    7. 'as' → logprob: -11.062118530273438
    8. '):
' → logprob: -11.437118530273438
    9. '):' → logprob: -12.187118530273438
    10. ')' → logprob: -12.187118530273438

Token 379: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00041339205927215517
    2. 'results' → logprob: -8.250412940979004
    3. '           ' → logprob: -9.375412940979004
    4. ' results' → logprob: -9.625412940979004
    5. '       ' → logprob: -14.500412940979004
    6. '              ' → logprob: -15.750412940979004
    7. '   ' → logprob: -15.875412940979004
    8. '	results' → logprob: -16.25041389465332
    9. '	           ' → logprob: -16.37541389465332
    10. ',' → logprob: -16.50041389465332

Token 380: ' #' (ID: 1069)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.2116684466600418
    2. ' results' → logprob: -1.7116684913635254
    3. '               ' → logprob: -4.586668491363525
    4. '	results' → logprob: -11.586668014526367
    5. '           ' → logprob: -13.086668014526367
    6. '   ' → logprob: -13.711668014526367
    7. '                   ' → logprob: -14.336668014526367
    8. 'result' → logprob: -14.586668014526367
    9. '(results' → logprob: -14.711668014526367
    10. '.results' → logprob: -14.836668014526367

Token 381: ' In' (ID: 730)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.055361974984407425
    2. ' results' → logprob: -2.9303619861602783
    3. '               ' → logprob: -7.680361747741699
    4. '           ' → logprob: -12.1803617477417
    5. 'continue' → logprob: -12.1803617477417
    6. 'pass' → logprob: -13.4303617477417
    7. 'return' → logprob: -13.6803617477417
    8. '#' → logprob: -13.8053617477417
    9. '	results' → logprob: -14.0553617477417
    10. ' continue' → logprob: -14.6803617477417

Token 382: ' case' (ID: 1890)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.11387643218040466
    2. ' results' → logprob: -2.2388763427734375
    3. '           ' → logprob: -8.613876342773438
    4. '_results' → logprob: -8.738876342773438
    5. 'Results' → logprob: -8.863876342773438
    6. 'the' → logprob: -9.363876342773438
    7. ' the' → logprob: -9.363876342773438
    8. '               ' → logprob: -9.863876342773438
    9. '#' → logprob: -9.988876342773438
    10. 's' → logprob: -10.238876342773438

Token 383: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6119270324707031
    2. '               ' → logprob: -0.9869270324707031
    3. 'of' → logprob: -3.361927032470703
    4. 'results' → logprob: -3.361927032470703
    5. ' results' → logprob: -4.486927032470703
    6. '           ' → logprob: -5.861927032470703
    7. ' the' → logprob: -7.486927032470703
    8. ' we' → logprob: -8.611927032470703
    9. '                ' → logprob: -8.736927032470703
    10. ',' → logprob: -9.236927032470703

Token 384: ' invalid' (ID: 15796)
  Prédit: 'invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'invalid' → logprob: -0.05440607666969299
    2. 'error' → logprob: -4.17940616607666
    3. ' invalid' → logprob: -4.30440616607666
    4. 'any' → logprob: -4.80440616607666
    5. 'unexpected' → logprob: -5.30440616607666
    6. 'Value' → logprob: -5.42940616607666
    7. 'input' → logprob: -6.42940616607666
    8. ' any' → logprob: -6.92940616607666
    9. ' error' → logprob: -7.05440616607666
    10. 'e' → logprob: -7.30440616607666

Token 385: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.18025174736976624
    2. 'input' → logprob: -1.8052517175674438
    3. 'Input' → logprob: -8.930252075195312
    4. '_input' → logprob: -9.055252075195312
    5. ' inputs' → logprob: -9.055252075195312
    6. 'number' → logprob: -10.180252075195312
    7. '<|end|>' → logprob: -10.680252075195312
    8. 'inputs' → logprob: -10.680252075195312
    9. ' data' → logprob: -11.930252075195312
    10. ' number' → logprob: -12.055252075195312

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19157689809799194
    2. '               ' → logprob: -1.8165769577026367
    3. '           ' → logprob: -4.566576957702637
    4. ' or' → logprob: -7.316576957702637
    5. ' ,' → logprob: -7.691576957702637
    6. ',
' → logprob: -9.441576957702637
    7. '<|end|>' → logprob: -10.066576957702637
    8. ':' → logprob: -10.441576957702637
    9. '                
' → logprob: -11.441576957702637
    10. '            
' → logprob: -11.566576957702637

Token 387: ' here' (ID: 2105)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.10392340272665024
    2. ' results' → logprob: -2.3539233207702637
    3. '               ' → logprob: -5.603923320770264
    4. '           ' → logprob: -11.728923797607422
    5. '	results' → logprob: -12.103923797607422
    6. '                   ' → logprob: -12.603923797607422
    7. 'continue' → logprob: -12.603923797607422
    8. '.results' → logprob: -13.228923797607422
    9. ' continue' → logprob: -13.978923797607422
    10. '                ' → logprob: -14.353923797607422

Token 388: ' we' (ID: 581)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.9495514035224915
    2. '               ' → logprob: -1.1995513439178467
    3. 'results' → logprob: -1.1995513439178467
    4. ',' → logprob: -5.074551582336426
    5. ' we' → logprob: -5.824551582336426
    6. '           ' → logprob: -8.199551582336426
    7. '```' → logprob: -9.199551582336426
    8. ' continue' → logprob: -9.324551582336426
    9. 'we' → logprob: -9.449551582336426
    10. ''s' → logprob: -9.449551582336426

Token 389: ' just' (ID: 1327)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.05901885777711868
    2. ' append' → logprob: -2.934018850326538
    3. '               ' → logprob: -5.684019088745117
    4. 'continue' → logprob: -8.309019088745117
    5. '.append' → logprob: -8.934019088745117
    6. ' continue' → logprob: -10.184019088745117
    7. 'skip' → logprob: -10.184019088745117
    8. 'add' → logprob: -10.309019088745117
    9. '_append' → logprob: -10.559019088745117
    10. '                   ' → logprob: -10.684019088745117

Token 390: ' continue' (ID: 4901)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.591539740562439
    2. 'results' → logprob: -1.216539740562439
    3. ' results' → logprob: -2.2165398597717285
    4. ' append' → logprob: -3.5915398597717285
    5. 'continue' → logprob: -4.5915398597717285
    6. '               ' → logprob: -6.5915398597717285
    7. ' continue' → logprob: -6.5915398597717285
    8. '           ' → logprob: -7.4665398597717285
    9. 'pass' → logprob: -8.84153938293457
    10. ' pass' → logprob: -10.34153938293457

Token 391: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009221290238201618
    2. '           ' → logprob: -4.884221076965332
    3. '<|end|>' → logprob: -6.634221076965332
    4. 'continue' → logprob: -8.634221076965332
    5. ' continue' → logprob: -9.634221076965332
    6. ',' → logprob: -10.759221076965332
    7. '.' → logprob: -11.009221076965332
    8. '<|end|>' → logprob: -12.134221076965332
    9. ' with' → logprob: -12.884221076965332
    10. '       ' → logprob: -13.884221076965332

Token 392: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04067566618323326
    2. '           ' → logprob: -3.915675640106201
    3. ' continue' → logprob: -4.040675640106201
    4. 'continue' → logprob: -6.165675640106201
    5. '<|end|>' → logprob: -8.66567611694336
    6. '       ' → logprob: -10.54067611694336
    7. '```' → logprob: -11.16567611694336
    8. ' pass' → logprob: -11.41567611694336
    9. 'pass' → logprob: -12.16567611694336
    10. '_continue' → logprob: -12.66567611694336

Token 393: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1452537328004837
    2. '               ' → logprob: -2.3952536582946777
    3. ' continue' → logprob: -3.1452536582946777
    4. 'pass' → logprob: -7.395253658294678
    5. '           ' → logprob: -8.020254135131836
    6. ' pass' → logprob: -10.020254135131836
    7. '                   ' → logprob: -13.895254135131836
    8. '   ' → logprob: -13.895254135131836
    9. '	continue' → logprob: -14.270254135131836
    10. '```' → logprob: -14.770254135131836

Token 394: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0168168768286705
    2. 'return' → logprob: -4.766817092895508
    3. '
' → logprob: -5.016817092895508
    4. ' return' → logprob: -7.516817092895508
    5. '<|end|>' → logprob: -7.641817092895508
    6. '        
' → logprob: -7.891817092895508
    7. '	return' → logprob: -10.016817092895508
    8. '```' → logprob: -10.891817092895508
    9. '<|end|>' → logprob: -11.016817092895508
    10. '   ' → logprob: -11.641817092895508

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002519061556085944
    2. 'return' → logprob: -6.002519130706787
    3. ' return' → logprob: -10.377518653869629
    4. '
' → logprob: -11.752518653869629
    5. '   ' → logprob: -13.752518653869629
    6. '	return' → logprob: -14.127518653869629
    7. '```' → logprob: -14.252518653869629
    8. '           ' → logprob: -14.877518653869629
    9. '<|end|>' → logprob: -15.002518653869629
    10. '	' → logprob: -15.502518653869629

Token 396: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.474941223859787
    2. 'return' (adapté à ' return') → logprob: -0.9749412536621094
    3. ' return' → logprob: -7.099941253662109
    4. '   ' → logprob: -10.34994125366211
    5. '	return' → logprob: -12.59994125366211
    6. '
' → logprob: -13.72494125366211
    7. 'eturn' → logprob: -15.09994125366211
    8. '<|end|>' → logprob: -15.22494125366211
    9. '      ' → logprob: -15.34994125366211
    10. '	' → logprob: -15.47494125366211

Token 397: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.005233763717114925
    2. ' results' → logprob: -5.2552337646484375
    3. '	results' → logprob: -17.755233764648438
    4. '(results' → logprob: -18.755233764648438
    5. '[]' → logprob: -20.005233764648438
    6. '.results' → logprob: -21.005233764648438
    7. '[' → logprob: -21.630233764648438
    8. 'Results' → logprob: -22.880233764648438
    9. 'result' → logprob: -23.505233764648438
    10. '   ' → logprob: -23.505233764648438

Token 398: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9964773058891296
    2. '<|end|>' → logprob: -0.9964773058891296
    3. '```' → logprob: -2.3714773654937744
    4. 'if' → logprob: -2.3714773654937744
    5. 'def' → logprob: -2.6214773654937744
    6. '<|end|>' → logprob: -6.496477127075195
    7. '
' → logprob: -8.746477127075195
    8. 'import' → logprob: -8.996477127075195
    9. 'class' → logprob: -9.121477127075195
    10. ' if' → logprob: -9.121477127075195

Token 400: ' Program' (ID: 7335)
  Prédit: 'Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.6603948473930359
    2. 'Output' → logprob: -1.0353949069976807
    3. 'Main' → logprob: -3.0353949069976807
    4. 'Test' → logprob: -3.6603949069976807
    5. 'Number' → logprob: -3.7853949069976807
    6. 'Solution' → logprob: -4.535394668579102
    7. ' Base' → logprob: -5.785394668579102
    8. 'Input' → logprob: -5.910394668579102
    9. 'User' → logprob: -6.285394668579102
    10. 'Advanced' → logprob: -6.535394668579102

Token 401: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036580299492925406
    2. ':
' → logprob: -5.628657817840576
    3. '():' → logprob: -10.128658294677734
    4. ':

' → logprob: -11.878658294677734
    5. '(Base' → logprob: -13.128658294677734
    6. '(' → logprob: -13.128658294677734
    7. '):' → logprob: -14.128658294677734
    8. '():
' → logprob: -14.128658294677734
    9. '(Number' → logprob: -14.128658294677734
    10. ':**' → logprob: -14.253658294677734

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022713904036208987
    2. ' def' → logprob: -8.750226974487305
    3. 'def' → logprob: -9.625226974487305
    4. '   ' → logprob: -13.500226974487305
    5. '	def' → logprob: -14.625226974487305
    6. '<|end|>' → logprob: -15.000226974487305
    7. '```' → logprob: -16.250226974487305
    8. '    
' → logprob: -16.625226974487305
    9. ',' → logprob: -16.625226974487305
    10. ':' → logprob: -17.125226974487305

Token 403: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04858986660838127
    2. ' def' → logprob: -3.0485899448394775
    3. '   ' → logprob: -13.048589706420898
    4. '@' → logprob: -15.298589706420898
    5. ' @' → logprob: -17.6735897064209
    6. 'number' → logprob: -18.2985897064209
    7. '```' → logprob: -18.2985897064209
    8. '	def' → logprob: -18.2985897064209
    9. ' ' → logprob: -18.5485897064209
    10. '__' → logprob: -19.2985897064209

Token 404: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6643806099891663
    2. 'init' → logprob: -1.4143805503845215
    3. ' __' → logprob: -1.6643805503845215
    4. ' init' → logprob: -3.5393805503845215
    5. 'def' → logprob: -3.9143805503845215
    6. '__' → logprob: -5.5393805503845215
    7. '_init' → logprob: -10.16438102722168
    8. '```' → logprob: -10.91438102722168
    9. 'int' → logprob: -11.41438102722168
    10. 'staticmethod' → logprob: -11.41438102722168

Token 405: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.2200749754119897e-06
    2. 'name' → logprob: -13.750001907348633
    3. ' init' → logprob: -14.250001907348633
    4. '   ' → logprob: -15.000001907348633
    5. 'def' → logprob: -15.875001907348633
    6. '```' → logprob: -17.125001907348633
    7. '(init' → logprob: -18.625001907348633
    8. 'new' → logprob: -18.625001907348633
    9. '  ' → logprob: -18.750001907348633
    10. 'main' → logprob: -19.250001907348633

Token 406: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00027480217977426946
    2. '__' → logprob: -8.375274658203125
    3. '__(
' → logprob: -10.250274658203125
    4. '(self' → logprob: -11.875274658203125
    5. 'self' → logprob: -14.875274658203125
    6. '__((' → logprob: -15.000274658203125
    7. '(' → logprob: -15.000274658203125
    8. '_(' → logprob: -15.250274658203125
    9. '<>(' → logprob: -15.500274658203125
    10. '__('' → logprob: -15.750274658203125

Token 407: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001158211671281606
    2. ')' → logprob: -9.500115394592285
    3. ' self' → logprob: -11.000115394592285
    4. '):
' → logprob: -11.250115394592285
    5. '
' → logprob: -11.875115394592285
    6. '   ' → logprob: -12.875115394592285
    7. '(self' → logprob: -15.000115394592285
    8. '):

' → logprob: -15.125115394592285
    9. ')(' → logprob: -15.500115394592285
    10. ' ' → logprob: -15.875115394592285

Token 408: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014627055265009403
    2. 'self' → logprob: -4.389626979827881
    3. '):
' → logprob: -6.389626979827881
    4. '):' → logprob: -8.639627456665039
    5. '(self' → logprob: -9.014627456665039
    6. '   ' → logprob: -9.514627456665039
    7. '       ' → logprob: -10.639627456665039
    8. ',self' → logprob: -11.264627456665039
    9. ' self' → logprob: -11.639627456665039
    10. ' ,' → logprob: -12.264627456665039

Token 409: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.3557529857498594e-05
    2. ' self' → logprob: -11.12502384185791
    3. '       ' → logprob: -12.37502384185791
    4. '   ' → logprob: -12.37502384185791
    5. '(self' → logprob: -16.625022888183594
    6. '):
' → logprob: -16.875022888183594
    7. '
' → logprob: -17.125022888183594
    8. '	self' → logprob: -17.250022888183594
    9. ')' → logprob: -17.500022888183594
    10. 'number' → logprob: -18.250022888183594

Token 410: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0064420378766953945
    2. ' self' → logprob: -5.256442070007324
    3. '       ' → logprob: -6.756442070007324
    4. 'io' → logprob: -10.756442070007324
    5. 'handler' → logprob: -11.006442070007324
    6. '   ' → logprob: -13.006442070007324
    7. 'input' → logprob: -14.506442070007324
    8. 'number' → logprob: -14.631442070007324
    9. 'def' → logprob: -14.631442070007324
    10. ' ' → logprob: -14.756442070007324

Token 411: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.005014224909245968
    2. 'number' → logprob: -5.630014419555664
    3. '.input' → logprob: -7.630014419555664
    4. '.' → logprob: -8.005014419555664
    5. '.handler' → logprob: -8.005014419555664
    6. ' number' → logprob: -10.005014419555664
    7. '.io' → logprob: -10.005014419555664
    8. ' .' → logprob: -10.005014419555664
    9. 'handler' → logprob: -10.505014419555664
    10. '.n' → logprob: -10.880014419555664

Token 412: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -3.702754474943504e-05
    2. 'system' → logprob: -10.25003719329834
    3. 'System' → logprob: -13.37503719329834
    4. ' system' → logprob: -17.125036239624023
    5. 'ystem' → logprob: -19.625036239624023
    6. '_handler' → logprob: -19.875036239624023
    7. '_SYSTEM' → logprob: -19.875036239624023
    8. '   ' → logprob: -20.000036239624023
    9. 'ssystem' → logprob: -20.250036239624023
    10. '_System' → logprob: -20.250036239624023

Token 413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192907452583313
    2. ' =' → logprob: -1.5019290447235107
    3. ':' → logprob: -17.501928329467773
    4. '=create' → logprob: -18.126928329467773
    5. '=}' → logprob: -18.876928329467773
    6. ' ' → logprob: -19.001928329467773
    7. '＝' → logprob: -19.251928329467773
    8. ')' → logprob: -19.376928329467773
    9. '=

' → logprob: -19.501928329467773
    10. '=None' → logprob: -20.001928329467773

Token 414: ' Base' (ID: 8729)
  Prédit: 'Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.0024756586644798517
    2. ' Base' → logprob: -6.002475738525391
    3. '	Base' → logprob: -17.87747573852539
    4. 'Bas' → logprob: -18.25247573852539
    5. '(Base' → logprob: -19.62747573852539
    6. '_Base' → logprob: -19.62747573852539
    7. 'Baseline' → logprob: -20.62747573852539
    8. '   ' → logprob: -20.87747573852539
    9. ' ' → logprob: -21.37747573852539
    10. '<Base' → logprob: -22.12747573852539

Token 415: 'Four' (ID: 35604)
  Prédit: 'Four'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Four' → logprob: 0.0
    2. ' Four' → logprob: -20.125
    3. 'F' → logprob: -21.625
    4. 'Five' → logprob: -21.75
    5. '4' → logprob: -22.0
    6. '四' → logprob: -22.375
    7. '_four' → logprob: -22.625
    8. 'Fourth' → logprob: -23.125
    9. 'four' → logprob: -23.5
    10. '```' → logprob: -23.625

Token 416: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.3856492842023727e-06
    2. 'number' → logprob: -13.875000953674316
    3. ' Number' → logprob: -16.000001907348633
    4. 'umber' → logprob: -16.500001907348633
    5. '_number' → logprob: -16.500001907348633
    6. '(Number' → logprob: -17.375001907348633
    7. '```' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '
' → logprob: -18.875001907348633
    10. ' number' → logprob: -18.875001907348633

Token 417: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -0.0005556552205234766
    2. 'system' → logprob: -7.750555515289307
    3. 'ystem' → logprob: -9.000555992126465
    4. ' system' → logprob: -13.750555992126465
    5. '_system' → logprob: -15.750555992126465
    6. 'ssystem' → logprob: -16.12555503845215
    7. 'Number' → logprob: -16.62555503845215
    8. 'umber' → logprob: -16.75055503845215
    9. ' System' → logprob: -18.12555503845215
    10. '   ' → logprob: -18.62555503845215

Token 418: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3129737079143524
    2. '       ' → logprob: -1.4379737377166748
    3. '   ' → logprob: -3.812973737716675
    4. 'self' → logprob: -4.812973499298096
    5. '<|end|>' → logprob: -7.687973499298096
    6. ' self' → logprob: -7.812973499298096
    7. '    
' → logprob: -9.812973976135254
    8. ' ' → logprob: -10.312973976135254
    9. 'def' → logprob: -10.562973976135254
    10. '
' → logprob: -10.562973976135254

Token 419: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2003302425146103
    2. '       ' → logprob: -1.8253302574157715
    3. 'self' → logprob: -4.4503302574157715
    4. '
' → logprob: -5.2003302574157715
    5. ' self' → logprob: -6.0753302574157715
    6. 'def' → logprob: -7.0753302574157715
    7. ' def' → logprob: -10.950329780578613
    8. '	self' → logprob: -11.950329780578613
    9. '    
' → logprob: -12.200329780578613
    10. '```' → logprob: -12.575329780578613

Token 420: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002350314985960722
    2. '       ' → logprob: -6.752350330352783
    3. ' self' → logprob: -6.752350330352783
    4. 'def' → logprob: -11.877349853515625
    5. '   ' → logprob: -12.877349853515625
    6. '
' → logprob: -13.877349853515625
    7. '	self' → logprob: -14.377349853515625
    8. '(self' → logprob: -16.627349853515625
    9. ' ' → logprob: -16.627349853515625
    10. '           ' → logprob: -17.377349853515625

Token 421: '.io' (ID: 6249)
  Prédit: '.io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.io' → logprob: -0.3446377217769623
    2. '.handler' → logprob: -2.094637632369995
    3. '.input' → logprob: -2.094637632369995
    4. 'io' → logprob: -3.719637632369995
    5. 'handler' → logprob: -4.094637870788574
    6. 'input' → logprob: -6.219637870788574
    7. '   ' → logprob: -6.969637870788574
    8. '.' → logprob: -8.094637870788574
    9. '_io' → logprob: -8.219637870788574
    10. '.output' → logprob: -8.344637870788574

Token 422: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.004108323249965906
    2. 'handler' → logprob: -5.504108428955078
    3. ' =' → logprob: -11.504108428955078
    4. '_handle' → logprob: -12.004108428955078
    5. '_handlers' → logprob: -12.379108428955078
    6. 'Handler' → logprob: -12.504108428955078
    7. '=' → logprob: -12.879108428955078
    8. '_HANDLER' → logprob: -13.754108428955078
    9. '   ' → logprob: -14.254108428955078
    10. '_input' → logprob: -15.129108428955078

Token 423: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.078889846801758
    4. '   ' → logprob: -19.078889846801758
    5. '＝' → logprob: -19.453889846801758
    6. ')' → logprob: -20.203889846801758
    7. '        ' → logprob: -20.328889846801758
    8. '    ' → logprob: -20.703889846801758
    9. '       ' → logprob: -20.703889846801758
    10. 'Handler' → logprob: -20.703889846801758

Token 424: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.3868711292743683
    2. ' Input' → logprob: -1.136871099472046
    3. '	Input' → logprob: -16.136871337890625
    4. '(Input' → logprob: -19.636871337890625
    5. '_Input' → logprob: -19.761871337890625
    6. '_input' → logprob: -20.511871337890625
    7. '<Input' → logprob: -20.636871337890625
    8. '\Input' → logprob: -21.511871337890625
    9. ' input' → logprob: -21.761871337890625
    10. '.Input' → logprob: -22.636871337890625

Token 425: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. 'output' → logprob: -18.125
    3. 'O' → logprob: -18.875
    4. '_output' → logprob: -19.375
    5. '	Output' → logprob: -19.5
    6. '/output' → logprob: -20.5
    7. '-output' → logprob: -20.625
    8. ' Output' → logprob: -21.5
    9. '_Output' → logprob: -21.75
    10. '(Output' → logprob: -22.625

Token 426: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: 0.0
    2. 'handler' → logprob: -17.375
    3. '_handler' → logprob: -18.375
    4. 'Handle' → logprob: -19.75
    5. '_Handler' → logprob: -20.25
    6. '_HANDLER' → logprob: -20.625
    7. ' Handler' → logprob: -21.5
    8. '.Handler' → logprob: -21.75
    9. 'Hand' → logprob: -22.0
    10. ' handler' → logprob: -22.75

Token 427: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.747814349073451e-05
    2. 'self' → logprob: -11.750017166137695
    3. '(' → logprob: -11.875017166137695
    4. '       ' → logprob: -13.625017166137695
    5. '(
' → logprob: -13.625017166137695
    6. ' (' → logprob: -16.500017166137695
    7. ' self' → logprob: -17.125017166137695
    8. '```' → logprob: -19.250017166137695
    9. '(this' → logprob: -19.625017166137695
    10. '   ' → logprob: -19.875017166137695

Token 428: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -4.906711546937004e-05
    2. 'number' → logprob: -10.000048637390137
    3. '.' → logprob: -12.625048637390137
    4. ' .' → logprob: -15.250048637390137
    5. '[number' → logprob: -17.500049591064453
    6. '.n' → logprob: -17.625049591064453
    7. '	number' → logprob: -17.625049591064453
    8. ' number' → logprob: -17.750049591064453
    9. ').' → logprob: -17.875049591064453
    10. '.num' → logprob: -18.750049591064453

Token 429: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -2.176947600673884e-05
    2. 'system' → logprob: -10.750021934509277
    3. 'System' → logprob: -15.625021934509277
    4. 'ystem' → logprob: -16.50002098083496
    5. ' system' → logprob: -18.12502098083496
    6. '_SYSTEM' → logprob: -18.37502098083496
    7. 'SYSTEM' → logprob: -18.75002098083496
    8. '.system' → logprob: -19.00002098083496
    9. 'ssystem' → logprob: -19.00002098083496
    10. 'sys' → logprob: -19.25002098083496

Token 430: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. '   ' → logprob: -11.50001335144043
    3. ')

' → logprob: -13.37501335144043
    4. ')
' → logprob: -14.25001335144043
    5. ' )' → logprob: -15.50001335144043
    6. '       ' → logprob: -16.00001335144043
    7. ' ' → logprob: -16.25001335144043
    8. '<|end|>' → logprob: -17.00001335144043
    9. '	' → logprob: -17.75001335144043
    10. '),' → logprob: -18.62501335144043

Token 431: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04883387312293053
    2. '   ' → logprob: -3.0488338470458984
    3. ' def' → logprob: -8.673833847045898
    4. '
' → logprob: -9.673833847045898
    5. '<|end|>' → logprob: -12.173833847045898
    6. '    
' → logprob: -12.423833847045898
    7. '	def' → logprob: -13.298833847045898
    8. '```' → logprob: -14.048833847045898
    9. '<|end|>' → logprob: -14.673833847045898
    10. '  ' → logprob: -15.548833847045898

Token 432: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.3902033970225602e-05
    2. ' def' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.000014305114746
    4. '	def' → logprob: -21.37501335144043
    5. '```' → logprob: -23.25001335144043
    6. '
' → logprob: -23.87501335144043
    7. '    
' → logprob: -24.37501335144043
    8. ' ' → logprob: -24.62501335144043
    9. '  ' → logprob: -26.00001335144043
    10. '@' → logprob: -26.50001335144043

Token 433: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.04863210767507553
    2. ' run' → logprob: -3.0486321449279785
    3. 'main' → logprob: -11.17363166809082
    4. 'def' → logprob: -11.42363166809082
    5. 'read' → logprob: -11.79863166809082
    6. 'process' → logprob: -11.92363166809082
    7. ' main' → logprob: -12.54863166809082
    8. 'execute' → logprob: -14.04863166809082
    9. ' def' → logprob: -14.17363166809082
    10. ' process' → logprob: -14.67363166809082

Token 434: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00195979792624712
    2. '(' → logprob: -6.251959800720215
    3. 'self' → logprob: -10.876959800720215
    4. '()' → logprob: -11.626959800720215
    5. '():' → logprob: -13.376959800720215
    6. '(
' → logprob: -14.001959800720215
    7. '():
' → logprob: -14.751959800720215
    8. '   ' → logprob: -15.126959800720215
    9. '       ' → logprob: -15.751959800720215
    10. ' (' → logprob: -15.876959800720215

Token 435: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03665031120181084
    2. '):
' → logprob: -3.4116504192352295
    3. ')' → logprob: -6.41165018081665
    4. 'self' → logprob: -6.66165018081665
    5. ',' → logprob: -10.661650657653809
    6. '):
' → logprob: -11.161650657653809
    7. '():' → logprob: -11.411650657653809
    8. '):

' → logprob: -11.786650657653809
    9. ' ):' → logprob: -12.036650657653809
    10. '(self' → logprob: -12.286650657653809

Token 436: ' input' (ID: 3422)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6690515279769897
    2. 'input' → logprob: -1.2940515279769897
    3. ' lines' → logprob: -1.7940515279769897
    4. ' input' → logprob: -3.2940516471862793
    5. 'self' → logprob: -5.544051647186279
    6. 'inputs' → logprob: -5.544051647186279
    7. ')' → logprob: -6.919051647186279
    8. ' inputs' → logprob: -7.294051647186279
    9. '):' → logprob: -8.294051170349121
    10. ' self' → logprob: -8.419051170349121

Token 437: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.004115203861147165
    2. ':' → logprob: -6.504115104675293
    3. '):' → logprob: -7.129115104675293
    4. ')' → logprob: -7.754115104675293
    5. 'lines' → logprob: -8.129115104675293
    6. 's' → logprob: -8.254115104675293
    7. '   ' → logprob: -8.754115104675293
    8. '_strings' → logprob: -8.754115104675293
    9. '()' → logprob: -9.379115104675293
    10. 'self' → logprob: -9.504115104675293

Token 438: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023403525352478027
    2. '):' → logprob: -3.7734036445617676
    3. ')' → logprob: -9.02340316772461
    4. 'self' → logprob: -10.64840316772461
    5. '   ' → logprob: -12.14840316772461
    6. '):
' → logprob: -12.64840316772461
    7. ' ):' → logprob: -13.52340316772461
    8. '```' → logprob: -13.64840316772461
    9. ' :' → logprob: -13.89840316772461
    10. '       ' → logprob: -14.64840316772461

Token 439: ' Optional' (ID: 19351)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.006020283792167902
    2. ')' → logprob: -5.5060200691223145
    3. ' List' → logprob: -7.0060200691223145
    4. 'self' → logprob: -7.6310200691223145
    5. 'Optional' → logprob: -7.8810200691223145
    6. 'list' → logprob: -9.256020545959473
    7. '[List' → logprob: -10.381020545959473
    8. '):
' → logprob: -11.506020545959473
    9. ' Optional' → logprob: -11.881020545959473
    10. ' self' → logprob: -12.256020545959473

Token 440: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.00000286102295
    3. ')' → logprob: -16.500001907348633
    4. 'List' → logprob: -16.625001907348633
    5. '=' → logprob: -18.500001907348633
    6. '[str' → logprob: -19.000001907348633
    7. '<List' → logprob: -19.875001907348633
    8. '(List' → logprob: -20.250001907348633
    9. '[
' → logprob: -20.375001907348633
    10. '[list' → logprob: -20.500001907348633

Token 441: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -6.034592388459714e-06
    2. 'str' → logprob: -12.375005722045898
    3. '[int' → logprob: -13.250005722045898
    4. '[' → logprob: -18.6250057220459
    5. 'Str' → logprob: -18.7500057220459
    6. '```' → logprob: -18.8750057220459
    7. ']' → logprob: -19.0000057220459
    8. '])' → logprob: -19.3750057220459
    9. '	str' → logprob: -19.8750057220459
    10. '=str' → logprob: -20.0000057220459

Token 442: ']]' (ID: 8928)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -3.023293538717553e-05
    2. ']' → logprob: -11.125030517578125
    3. ']])' → logprob: -11.375030517578125
    4. ']):' → logprob: -13.750030517578125
    5. ']]' → logprob: -14.000030517578125
    6. ']=' → logprob: -14.250030517578125
    7. '])]' → logprob: -14.875030517578125
    8. ')' → logprob: -15.125030517578125
    9. ']):
' → logprob: -15.125030517578125
    10. ']))' → logprob: -15.750030517578125

Token 443: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. '=None' → logprob: -14.000003814697266
    3. '   ' → logprob: -14.125003814697266
    4. '):' → logprob: -14.375003814697266
    5. '`)' → logprob: -14.500003814697266
    6. '=' → logprob: -14.500003814697266
    7. ' )' → logprob: -14.750003814697266
    8. '):
' → logprob: -15.875003814697266
    9. ')->' → logprob: -16.500003814697266
    10. ':' → logprob: -16.750003814697266

Token 444: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.018150296062231064
    2. ' None' → logprob: -4.018150329589844
    3. '=None' → logprob: -15.393150329589844
    4. '(None' → logprob: -16.393150329589844
    5. ')' → logprob: -17.893150329589844
    6. '   ' → logprob: -17.893150329589844
    7. ',None' → logprob: -18.518150329589844
    8. '_None' → logprob: -20.518150329589844
    9. 'none' → logprob: -21.018150329589844
    10. '```' → logprob: -21.143150329589844

Token 445: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023762896307744086
    2. '):' → logprob: -8.625237464904785
    3. '):
' → logprob: -10.000237464904785
    4. ')->' → logprob: -12.000237464904785
    5. '   ' → logprob: -12.250237464904785
    6. '       ' → logprob: -14.000237464904785
    7. ':' → logprob: -15.000237464904785
    8. ' )' → logprob: -15.375237464904785
    9. '`)' → logprob: -16.6252384185791
    10. '):
' → logprob: -16.6252384185791

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005980697460472584
    2. ' if' → logprob: -7.625597953796387
    3. 'if' → logprob: -9.125597953796387
    4. '```' → logprob: -14.500597953796387
    5. '   ' → logprob: -14.625597953796387
    6. 'If' → logprob: -16.250598907470703
    7. '	' → logprob: -16.375598907470703
    8. '           ' → logprob: -16.875598907470703
    9. ',' → logprob: -17.125598907470703
    10. '      ' → logprob: -17.750598907470703

Token 447: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007227493450045586
    2. ' if' → logprob: -5.007227420806885
    3. 'results' → logprob: -8.007227897644043
    4. 'import' → logprob: -9.007227897644043
    5. '       ' → logprob: -9.882227897644043
    6. ' results' → logprob: -12.632227897644043
    7. 'lines' → logprob: -14.257227897644043
    8. 'output' → logprob: -14.382227897644043
    9. ' import' → logprob: -15.257227897644043
    10. 'result' → logprob: -15.382227897644043

Token 448: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132633566856384
    2. ' input' → logprob: -1.3132634162902832
    3. '	input' → logprob: -13.438262939453125
    4. '<input' → logprob: -16.938262939453125
    5. 'Input' → logprob: -17.688262939453125
    6. '=input' → logprob: -17.938262939453125
    7. '_input' → logprob: -18.188262939453125
    8. '(input' → logprob: -18.688262939453125
    9. ' ' → logprob: -18.938262939453125
    10. 'import' → logprob: -19.438262939453125

Token 449: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: 0.0
    2. '_line' → logprob: -17.375
    3. '_' → logprob: -17.625
    4. 'lines' → logprob: -19.75
    5. '
' → logprob: -19.875
    6. '_LINES' → logprob: -20.125
    7. '_strings' → logprob: -20.25
    8. '_links' → logprob: -20.5
    9. '_layers' → logprob: -20.75
    10. '_rows' → logprob: -20.875

Token 450: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03804252669215202
    2. 'is' → logprob: -3.2880425453186035
    3. ')' → logprob: -14.413042068481445
    4. ' ' → logprob: -15.413042068481445
    5. '	is' → logprob: -15.788042068481445
    6. ')is' → logprob: -16.413042068481445
    7. ' )' → logprob: -17.538042068481445
    8. '   ' → logprob: -18.038042068481445
    9. ' ' → logprob: -18.413042068481445
    10. '```' → logprob: -19.038042068481445

Token 451: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4740793704986572
    2. ' None' → logprob: -0.9740793704986572
    3. ' not' → logprob: -13.349079132080078
    4. 'not' → logprob: -14.224079132080078
    5. '   ' → logprob: -16.974079132080078
    6. '_None' → logprob: -17.474079132080078
    7. ' ' → logprob: -17.724079132080078
    8. '(None' → logprob: -17.849079132080078
    9. '=None' → logprob: -18.099079132080078
    10. 'none' → logprob: -18.599079132080078

Token 452: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4743958115577698
    2. ':
' → logprob: -0.9743958115577698
    3. '           ' → logprob: -8.974395751953125
    4. '       ' → logprob: -9.224395751953125
    5. '):
' → logprob: -10.349395751953125
    6. '<|end|>' → logprob: -10.599395751953125
    7. '<|end|>' → logprob: -11.599395751953125
    8. ',' → logprob: -11.849395751953125
    9. ':
' → logprob: -12.724395751953125
    10. 'import' → logprob: -12.974395751953125

Token 453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06726464629173279
    2. 'import' → logprob: -3.5672645568847656
    3. ' input' → logprob: -3.8172645568847656
    4. 'input' → logprob: -4.692264556884766
    5. ' import' → logprob: -5.192264556884766
    6. '   ' → logprob: -10.692264556884766
    7. '
' → logprob: -11.692264556884766
    8. '       ' → logprob: -11.817264556884766
    9. '_input' → logprob: -11.817264556884766
    10. ',input' → logprob: -11.817264556884766

Token 454: ' import' (ID: 1588)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7824994325637817
    2. 'import' (adapté à ' import') → logprob: -0.9074994325637817
    3. ' input' → logprob: -2.032499313354492
    4. ' import' → logprob: -5.282499313354492
    5. '           ' → logprob: -5.782499313354492
    6. '               ' → logprob: -11.657499313354492
    7. 'try' → logprob: -11.782499313354492
    8. 'while' → logprob: -12.157499313354492
    9. '_input' → logprob: -13.032499313354492
    10. '   ' → logprob: -13.032499313354492

Token 455: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.01416350994259119
    2. ' sys' → logprob: -4.264163494110107
    3. '=sys' → logprob: -17.139163970947266
    4. '	sys' → logprob: -17.889163970947266
    5. '_sys' → logprob: -21.264163970947266
    6. '(sys' → logprob: -21.389163970947266
    7. 'stdin' → logprob: -21.639163970947266
    8. '.sys' → logprob: -21.639163970947266
    9. '```' → logprob: -22.139163970947266
    10. ' ' → logprob: -23.139163970947266

Token 456: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06747293472290039
    2. '
' → logprob: -2.9424729347229004
    3. '       ' → logprob: -4.9424729347229
    4. '               ' → logprob: -6.1924729347229
    5. 'input' → logprob: -6.9424729347229
    6. 'for' → logprob: -7.4424729347229
    7. ' for' → logprob: -7.8174729347229
    8. '.readline' → logprob: -8.442472457885742
    9. '            
' → logprob: -8.817472457885742
    10. '		' → logprob: -8.942472457885742

Token 457: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006330686621367931
    2. '       ' → logprob: -5.631330490112305
    3. ' for' → logprob: -7.256330490112305
    4. 'input' → logprob: -7.631330490112305
    5. '               ' → logprob: -8.006330490112305
    6. ' input' → logprob: -8.131330490112305
    7. '	       ' → logprob: -8.256330490112305
    8. '
' → logprob: -8.506330490112305
    9. 'for' → logprob: -8.756330490112305
    10. ' lines' → logprob: -9.131330490112305

Token 458: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.183429554104805
    2. ' input' → logprob: -1.8084295988082886
    3. 'for' → logprob: -6.433429718017578
    4. '           ' → logprob: -6.808429718017578
    5. ' for' → logprob: -7.308429718017578
    6. ' lines' → logprob: -8.808429718017578
    7. 'lines' → logprob: -9.433429718017578
    8. '=input' → logprob: -10.433429718017578
    9. '	input' → logprob: -11.933429718017578
    10. '
' → logprob: -11.933429718017578

Token 459: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00019007037917617708
    2. '=' → logprob: -9.000189781188965
    3. 'lines' → logprob: -10.625189781188965
    4. ' =' → logprob: -10.875189781188965
    5. '=sys' → logprob: -11.000189781188965
    6. '=_' → logprob: -13.000189781188965
    7. '_data' → logprob: -13.875189781188965
    8. '```' → logprob: -14.125189781188965
    9. '=input' → logprob: -14.625189781188965
    10. '_=' → logprob: -14.750189781188965

Token 460: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760291814804077
    2. '=' → logprob: -0.8260291814804077
    3. '=sys' → logprob: -9.326028823852539
    4. ' ' → logprob: -15.451028823852539
    5. '=[]' → logprob: -15.951028823852539
    6. '=input' → logprob: -16.07602882385254
    7. '=line' → logprob: -17.07602882385254
    8. '   ' → logprob: -17.32602882385254
    9. '=

' → logprob: -17.45102882385254
    10. '=subprocess' → logprob: -17.57602882385254

Token 461: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07931207865476608
    2. ' sys' → logprob: -2.5793120861053467
    3. '[' → logprob: -7.829311847686768
    4. ' [' → logprob: -10.704312324523926
    5. '(sys' → logprob: -13.829312324523926
    6. '	sys' → logprob: -14.579312324523926
    7. '=sys' → logprob: -15.329312324523926
    8. 'list' → logprob: -15.579312324523926
    9. '[s' → logprob: -16.70431137084961
    10. '   ' → logprob: -17.95431137084961

Token 462: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.849109119386412e-06
    2. '.' → logprob: -12.125009536743164
    3. '.stdout' → logprob: -13.250009536743164
    4. 'stdin' → logprob: -13.250009536743164
    5. '.std' → logprob: -14.875009536743164
    6. '.argv' → logprob: -15.000009536743164
    7. '.stderr' → logprob: -17.125009536743164
    8. ' stdin' → logprob: -17.250009536743164
    9. '.__' → logprob: -17.625009536743164
    10. ' .' → logprob: -17.750009536743164

Token 463: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.017266545444726944
    2. '.read' → logprob: -4.517266750335693
    3. 'read' → logprob: -5.517266750335693
    4. '.readline' → logprob: -6.142266750335693
    5. '.' → logprob: -10.392266273498535
    6. '   ' → logprob: -14.392266273498535
    7. 'buffer' → logprob: -15.142266273498535
    8. '```' → logprob: -15.517266273498535
    9. '       ' → logprob: -15.767266273498535
    10. 'lines' → logprob: -16.26726722717285

Token 464: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.146429223008454e-05
    2. '()' → logprob: -9.75006103515625
    3. 'lines' → logprob: -12.75006103515625
    4. '_lines' → logprob: -16.37506103515625
    5. '()
' → logprob: -17.37506103515625
    6. ' ().' → logprob: -17.50006103515625
    7. ' lines' → logprob: -18.12506103515625
    8. 'Lines' → logprob: -18.37506103515625
    9. 'line' → logprob: -18.50006103515625
    10. '(' → logprob: -18.62506103515625

Token 465: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00524667976424098
    2. 'strip' → logprob: -5.505246639251709
    3. 'decode' → logprob: -7.380246639251709
    4. 'lines' → logprob: -7.630246639251709
    5. 'read' → logprob: -10.130247116088867
    6. ' split' → logprob: -11.380247116088867
    7. 'rstrip' → logprob: -12.505247116088867
    8. '(split' → logprob: -13.130247116088867
    9. 'line' → logprob: -14.630247116088867
    10. '_lines' → logprob: -14.880247116088867

Token 466: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.00046630011638626456
    2. '('\' → logprob: -7.750466346740723
    3. '()' → logprob: -10.250466346740723
    4. 'line' → logprob: -16.375465393066406
    5. '()\' → logprob: -16.750465393066406
    6. '("\' → logprob: -17.125465393066406
    7. '()
' → logprob: -18.000465393066406
    8. ' lines' → logprob: -19.250465393066406
    9. '(' → logprob: -19.250465393066406
    10. 'lin' → logprob: -21.125465393066406

Token 467: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011066801846027374
    2. '()
' → logprob: -4.511066913604736
    3. '       ' → logprob: -11.136066436767578
    4. '()

' → logprob: -12.511066436767578
    5. '()
' → logprob: -15.386066436767578
    6. '()\' → logprob: -15.386066436767578
    7. '())' → logprob: -16.511066436767578
    8. '()`' → logprob: -17.136066436767578
    9. '()[' → logprob: -17.386066436767578
    10. '()?' → logprob: -17.386066436767578

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013965456746518612
    2. 'for' → logprob: -7.001396656036377
    3. ' for' → logprob: -8.251396179199219
    4. '        
' → logprob: -9.376396179199219
    5. 'results' → logprob: -9.751396179199219
    6. '
' → logprob: -11.001396179199219
    7. '   ' → logprob: -11.001396179199219
    8. 'result' → logprob: -11.251396179199219
    9. '<|end|>' → logprob: -11.626396179199219
    10. '```' → logprob: -12.126396179199219

Token 469: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.018525414168834686
    2. 'output' → logprob: -4.76852560043335
    3. ' results' → logprob: -5.26852560043335
    4. 'outputs' → logprob: -5.76852560043335
    5. '       ' → logprob: -6.89352560043335
    6. 'result' → logprob: -7.51852560043335
    7. ' output' → logprob: -11.018525123596191
    8. ' outputs' → logprob: -12.268525123596191
    9. 'for' → logprob: -12.393525123596191
    10. '```' → logprob: -13.643525123596191

Token 470: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889298349618912
    2. '=' → logprob: -2.578892946243286
    3. '.extend' → logprob: -13.328892707824707
    4. '=[]' → logprob: -14.078892707824707
    5. '.append' → logprob: -15.578892707824707
    6. '   ' → logprob: -16.328893661499023
    7. ')' → logprob: -16.328893661499023
    8. ':' → logprob: -16.453893661499023
    9. ' =
' → logprob: -16.828893661499023
    10. ' +=' → logprob: -17.078893661499023

Token 471: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975129522383213
    2. ' self' → logprob: -3.5297513008117676
    3. '[self' → logprob: -14.27975082397461
    4. '       ' → logprob: -15.77975082397461
    5. '	self' → logprob: -17.90475082397461
    6. '(self' → logprob: -18.27975082397461
    7. '=self' → logprob: -18.40475082397461
    8. '[]' → logprob: -19.27975082397461
    9. '           ' → logprob: -19.40475082397461
    10. '[' → logprob: -19.52975082397461

Token 472: '.io' (ID: 6249)
  Prédit: '.io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.io' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -15.125000953674316
    3. ' .' → logprob: -15.625000953674316
    4. '.i' → logprob: -18.875
    5. 'io' → logprob: -19.0
    6. '	io' → logprob: -19.125
    7. '.ip' → logprob: -19.375
    8. '.IO' → logprob: -19.5
    9. '.ie' → logprob: -19.625
    10. '.py' → logprob: -19.625

Token 473: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.7120533811976202e-05
    2. 'handler' → logprob: -11.000017166137695
    3. 'andler' → logprob: -14.875017166137695
    4. 'Handler' → logprob: -17.875017166137695
    5. '_handle' → logprob: -17.875017166137695
    6. '_HANDLER' → logprob: -18.125017166137695
    7. 'h' → logprob: -18.875017166137695
    8. 'handle' → logprob: -19.375017166137695
    9. '_hand' → logprob: -20.125017166137695
    10. 'hdl' → logprob: -20.500017166137695

Token 474: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -4.56102097814437e-05
    2. 'process' → logprob: -10.000045776367188
    3. '.' → logprob: -16.625045776367188
    4. ' process' → logprob: -16.750045776367188
    5. ' .' → logprob: -17.875045776367188
    6. '	process' → logprob: -21.000045776367188
    7. '(process' → logprob: -22.375045776367188
    8. '.Process' → logprob: -23.625045776367188
    9. '_process' → logprob: -24.250045776367188
    10. '   ' → logprob: -24.625045776367188

Token 475: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.7697225252486533e-06
    2. 'input' → logprob: -12.500003814697266
    3. 'Input' → logprob: -17.250003814697266
    4. '_' → logprob: -18.750003814697266
    5. '_output' → logprob: -18.750003814697266
    6. '(input' → logprob: -18.875003814697266
    7. '_INPUT' → logprob: -19.875003814697266
    8. ' input' → logprob: -20.125003814697266
    9. '_inputs' → logprob: -20.125003814697266
    10. '_Input' → logprob: -20.375003814697266

Token 476: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.512236498361744e-07
    2. '(lines' → logprob: -15.000000953674316
    3. '(' → logprob: -15.875000953674316
    4. '(inputs' → logprob: -17.625
    5. 'input' → logprob: -19.0
    6. '(output' → logprob: -19.75
    7. ' (' → logprob: -19.875
    8. '(
' → logprob: -20.125
    9. '(results' → logprob: -20.125
    10. '(inp' → logprob: -21.5

Token 477: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.4415767788887024
    2. '(input' → logprob: -1.1915767192840576
    3. 's' → logprob: -3.1915767192840576
    4. 'input' → logprob: -4.941576957702637
    5. 'lines' → logprob: -6.566576957702637
    6. ')' → logprob: -6.691576957702637
    7. '[input' → logprob: -7.316576957702637
    8. 'es' → logprob: -7.941576957702637
    9. '=input' → logprob: -8.066576957702637
    10. '(lines' → logprob: -8.066576957702637

Token 478: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03876112028956413
    2. ')' → logprob: -3.2887611389160156
    3. '       ' → logprob: -7.288761138916016
    4. ')
' → logprob: -10.288761138916016
    5. '   ' → logprob: -13.913761138916016
    6. ' )
' → logprob: -14.413761138916016
    7. ')

' → logprob: -15.163761138916016
    8. ' ' → logprob: -15.413761138916016
    9. ')return' → logprob: -16.163761138916016
    10. '```' → logprob: -17.163761138916016

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014312991872429848
    2. 'for' → logprob: -4.264313220977783
    3. ' for' → logprob: -8.889312744140625
    4. '   ' → logprob: -11.764312744140625
    5. '
' → logprob: -13.139312744140625
    6. '```' → logprob: -14.014312744140625
    7. '	' → logprob: -14.889312744140625
    8. '        
' → logprob: -15.139312744140625
    9. '	for' → logprob: -15.139312744140625
    10. '           ' → logprob: -15.764312744140625

Token 480: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.012658914551138878
    2. '       ' → logprob: -4.762659072875977
    3. ' for' → logprob: -5.512659072875977
    4. '	for' → logprob: -14.387659072875977
    5. 'return' → logprob: -15.262659072875977
    6. '   ' → logprob: -17.262659072875977
    7. '```' → logprob: -17.762659072875977
    8. '	' → logprob: -18.137659072875977
    9. '
' → logprob: -19.762659072875977
    10. '           ' → logprob: -20.387659072875977

Token 481: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.22909021377563477
    2. 'result' → logprob: -1.7290902137756348
    3. ' res' → logprob: -4.229090213775635
    4. 'r' → logprob: -4.479090213775635
    5. ' result' → logprob: -6.979090213775635
    6. ' r' → logprob: -7.979090213775635
    7. 'line' → logprob: -9.479089736938477
    8. 'output' → logprob: -10.604089736938477
    9. ' line' → logprob: -11.354089736938477
    10. '   ' → logprob: -14.229089736938477

Token 482: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10075143724679947
    2. 'ult' → logprob: -2.3507513999938965
    3. 'ults' → logprob: -7.9757513999938965
    4. 'ut' → logprob: -9.225751876831055
    5. 'ault' → logprob: -10.975751876831055
    6. 'alt' → logprob: -11.350751876831055
    7. 'lt' → logprob: -11.350751876831055
    8. '   ' → logprob: -11.350751876831055
    9. ' ' → logprob: -11.600751876831055
    10. 'lut' → logprob: -11.850751876831055

Token 483: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0031777136027812958
    2. ' results' → logprob: -5.753177642822266
    3. '(results' → logprob: -17.628177642822266
    4. 'result' → logprob: -18.503177642822266
    5. '
' → logprob: -18.753177642822266
    6. '	results' → logprob: -19.003177642822266
    7. 'res' → logprob: -19.878177642822266
    8. '   ' → logprob: -20.128177642822266
    9. '.results' → logprob: -20.503177642822266
    10. 'Results' → logprob: -21.503177642822266

Token 484: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7733210325241089
    2. ':
' → logprob: -1.1483210325241089
    3. '           ' → logprob: -1.5233210325241089
    4. 'print' → logprob: -5.773321151733398
    5. ' print' → logprob: -9.023321151733398
    6. '.print' → logprob: -10.273321151733398
    7. ':
' → logprob: -10.523321151733398
    8. '):
' → logprob: -10.773321151733398
    9. ',' → logprob: -11.273321151733398
    10. '.' → logprob: -11.648321151733398

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3158959746360779
    2. 'print' → logprob: -1.3158960342407227
    3. ' print' → logprob: -5.940896034240723
    4. '```' → logprob: -14.815896034240723
    5. '	print' → logprob: -15.815896034240723
    6. '.print' → logprob: -15.940896034240723
    7. '		' → logprob: -16.065895080566406
    8. '	       ' → logprob: -16.190895080566406
    9. '   ' → logprob: -16.565895080566406
    10. '          ' → logprob: -16.940895080566406

Token 486: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.200166469876422e-06
    2. ' print' → logprob: -12.250004768371582
    3. '           ' → logprob: -14.750004768371582
    4. '```' → logprob: -22.0000057220459
    5. '	print' → logprob: -23.0000057220459
    6. '   ' → logprob: -23.1250057220459
    7. '               ' → logprob: -23.5000057220459
    8. 'println' → logprob: -25.5000057220459
    9. '       ' → logprob: -26.2500057220459
    10. '
' → logprob: -26.3750057220459

Token 487: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -2.935296834039036e-06
    2. 'res' → logprob: -12.75000286102295
    3. ' res' → logprob: -18.125003814697266
    4. '(' → logprob: -19.250003814697266
    5. '=res' → logprob: -20.375003814697266
    6. '(f' → logprob: -20.875003814697266
    7. '$res' → logprob: -22.500003814697266
    8. ',res' → logprob: -22.625003814697266
    9. '	res' → logprob: -23.125003814697266
    10. ' (' → logprob: -24.375003814697266

Token 488: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.0
    3. ' )' → logprob: -17.875
    4. '())' → logprob: -17.875
    5. '')' → logprob: -18.75
    6. '()' → logprob: -18.875
    7. ')`' → logprob: -18.875
    8. '))' → logprob: -19.625
    9. '       ' → logprob: -19.625
    10. '`)' → logprob: -20.125

Token 489: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0012098762672394514
    2. '```' → logprob: -7.001209735870361
    3. '<|end|>' → logprob: -8.62621021270752
    4. '#' → logprob: -9.37621021270752
    5. ' if' → logprob: -10.62621021270752
    6. 'program' → logprob: -12.37621021270752
    7. '
' → logprob: -13.12621021270752
    8. 'def' → logprob: -14.00121021270752
    9. 'p' → logprob: -14.25121021270752
    10. '#if' → logprob: -14.50121021270752

Token 490: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10029153525829315
    2. '__' → logprob: -2.3502914905548096
    3. 'name' → logprob: -9.72529125213623
    4. '_name' → logprob: -10.85029125213623
    5. ' ' → logprob: -13.22529125213623
    6. '___' → logprob: -13.47529125213623
    7. '_' → logprob: -14.22529125213623
    8. 'Name' → logprob: -14.35029125213623
    9. ' "__' → logprob: -14.60029125213623
    10. ' ' → logprob: -15.72529125213623

Token 491: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2204783409833908
    2. '__' → logprob: -1.9704782962799072
    3. '==' → logprob: -3.7204782962799072
    4. 'name' → logprob: -3.8454782962799072
    5. ' __' → logprob: -4.595478534698486
    6. '.__' → logprob: -7.345478534698486
    7. '=="' → logprob: -7.345478534698486
    8. '.name' → logprob: -7.720478534698486
    9. '=='' → logprob: -8.220478057861328
    10. '_name' → logprob: -9.220478057861328

Token 492: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.268254896393046e-05
    2. '==' → logprob: -9.750082969665527
    3. '__.__' → logprob: -11.250082969665527
    4. ' ==' → logprob: -11.500082969665527
    5. '__.' → logprob: -14.500082969665527
    6. '=="' → logprob: -15.000082969665527
    7. '=='' → logprob: -15.500082969665527
    8. '___' → logprob: -17.00008201599121
    9. 'name' → logprob: -17.25008201599121
    10. '.__' → logprob: -17.75008201599121

Token 493: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.43734025955200195
    2. ' ==' → logprob: -1.687340259552002
    3. '==' → logprob: -1.812340259552002
    4. '=="' → logprob: -5.562340259552002
    5. '=='' → logprob: -6.187340259552002
    6. '.__' → logprob: -10.312339782714844
    7. '__.__' → logprob: -11.562339782714844
    8. '['' → logprob: -11.812339782714844
    9. '___' → logprob: -12.437339782714844
    10. '===' → logprob: -12.937339782714844

Token 494: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12695153057575226
    2. ''' → logprob: -2.1269514560699463
    3. ' "__' → logprob: -10.751951217651367
    4. ' '__' → logprob: -13.751951217651367
    5. '__' → logprob: -14.251951217651367
    6. '"name' → logprob: -16.751951217651367
    7. '"user' → logprob: -17.001951217651367
    8. ''"' → logprob: -17.001951217651367
    9. '"class' → logprob: -17.626951217651367
    10. '("__' → logprob: -17.751951217651367

Token 495: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.627176768844947e-05
    2. 'name' → logprob: -9.250096321105957
    3. '__' → logprob: -15.875096321105957
    4. 'm' → logprob: -18.75009536743164
    5. ' main' → logprob: -18.87509536743164
    6. 'ma' → logprob: -19.37509536743164
    7. '_main' → logprob: -19.37509536743164
    8. '-main' → logprob: -20.37509536743164
    9. 'built' → logprob: -20.50009536743164
    10. '(main' → logprob: -21.25009536743164

Token 496: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0015071245143190026
    2. '__' → logprob: -6.50150728225708
    3. '__":
' → logprob: -12.876506805419922
    4. '':
' → logprob: -13.501506805419922
    5. '__:' → logprob: -14.876506805419922
    6. '':' → logprob: -15.251506805419922
    7. '_' → logprob: -16.126506805419922
    8. '':
' → logprob: -16.501506805419922
    9. ':' → logprob: -16.751506805419922
    10. '___' → logprob: -19.001506805419922

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.803360495017841e-05
    2. ' program' → logprob: -10.000078201293945
    3. 'program' → logprob: -11.000078201293945
    4. 'Program' → logprob: -11.875078201293945
    5. ' Program' → logprob: -12.875078201293945
    6. '  ' → logprob: -13.125078201293945
    7. '   ' → logprob: -13.500078201293945
    8. '```' → logprob: -14.125078201293945
    9. ' ' → logprob: -14.500078201293945
    10. '_program' → logprob: -14.875078201293945

Token 498: ' program' (ID: 2193)
  Prédit: 'Program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Program' → logprob: -0.6969481706619263
    2. 'program' (adapté à ' program') → logprob: -0.6969481706619263
    3. 'prog' → logprob: -5.696948051452637
    4. ' program' → logprob: -7.946948051452637
    5. ' Program' → logprob: -10.196948051452637
    6. '_program' → logprob: -10.946948051452637
    7. 'p' → logprob: -10.946948051452637
    8. '   ' → logprob: -12.696948051452637
    9. 'import' → logprob: -12.821948051452637
    10. 'app' → logprob: -13.321948051452637

Token 499: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8638690710067749
    2. ' =' → logprob: -1.113869071006775
    3. '.run' → logprob: -1.613869071006775
    4. '=' → logprob: -3.2388691902160645
    5. '.program' → logprob: -4.8638691902160645
    6. '().' → logprob: -6.1138691902160645
    7. ' .' → logprob: -7.2388691902160645
    8. 'program' → logprob: -7.7388691902160645
    9. ').' → logprob: -8.613868713378906
    10. '   ' → logprob: -9.113868713378906

Token 500: ' Program' (ID: 7335)
  Prédit: 'Program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Program' → logprob: -0.07888978719711304
    2. ' Program' → logprob: -2.578889846801758
    3. ' program' → logprob: -19.203889846801758
    4. '.Program' → logprob: -20.078889846801758
    5. 'program' → logprob: -20.203889846801758
    6. 'Programming' → logprob: -20.453889846801758
    7. ' ' → logprob: -21.078889846801758
    8. '_program' → logprob: -21.078889846801758
    9. '```' → logprob: -21.703889846801758
    10. '   ' → logprob: -21.828889846801758

Token 501: '()
' (ID: 1234)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.4313252568244934
    2. '
' → logprob: -1.4313251972198486
    3. '   ' → logprob: -2.3063251972198486
    4. '.program' → logprob: -5.181325435638428
    5. '(program' → logprob: -5.931325435638428
    6. '()
' → logprob: -6.681325435638428
    7. ' program' → logprob: -7.181325435638428
    8. '    
' → logprob: -7.681325435638428
    9. '<|end|>' → logprob: -8.18132495880127
    10. '  
' → logprob: -8.43132495880127

Token 502: '   ' (ID: 271)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.0009997017914429307
    2. '   ' → logprob: -7.000999927520752
    3. ' program' → logprob: -9.375999450683594
    4. '(program' → logprob: -13.000999450683594
    5. '.program' → logprob: -14.375999450683594
    6. '_program' → logprob: -14.750999450683594
    7. '
' → logprob: -16.375999450683594
    8. 'programma' → logprob: -16.750999450683594
    9. '    
' → logprob: -17.500999450683594
    10. 'programme' → logprob: -17.500999450683594

Token 503: ' program' (ID: 2193)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' (adapté à ' program') → logprob: -1.9361264946837764e-07
    2. ' program' → logprob: -16.0
    3. '   ' → logprob: -20.625
    4. 'import' → logprob: -23.0
    5. '_program' → logprob: -23.5
    6. '(program' → logprob: -23.625
    7. 'programme' → logprob: -24.25
    8. 'Program' → logprob: -24.5
    9. '.program' → logprob: -24.625
    10. 'programma' → logprob: -24.625

Token 504: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -1.0206720617134124e-05
    2. '.' → logprob: -11.50001049041748
    3. ' .' → logprob: -17.375009536743164
    4. 'run' → logprob: -20.125009536743164
    5. '.
' → logprob: -20.750009536743164
    6. '.Run' → logprob: -21.875009536743164
    7. ' run' → logprob: -22.000009536743164
    8. '.start' → logprob: -22.625009536743164
    9. '().' → logprob: -23.250009536743164
    10. '   ' → logprob: -23.500009536743164

Token 505: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003267639840487391
    2. '(' → logprob: -8.750327110290527
    3. '()
' → logprob: -8.750327110290527
    4. ' ()' → logprob: -13.250327110290527
    5. '()\' → logprob: -13.250327110290527
    6. '("")' → logprob: -13.875327110290527
    7. '(
' → logprob: -14.125327110290527
    8. '()`' → logprob: -14.250327110290527
    9. '()<' → logprob: -14.250327110290527
    10. '()

' → logprob: -14.250327110290527


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 503
Tokens correctement prédits (1ère position, stricte): 277
Tokens correctement prédits (1ère position, avec adaptation): 308
Tokens correctement prédits (top 10): 470
Précision stricte (1ère position): 55.07%
Précision adaptée (1ère position): 61.23%
Précision (top 10): 93.44%
================================================================================
