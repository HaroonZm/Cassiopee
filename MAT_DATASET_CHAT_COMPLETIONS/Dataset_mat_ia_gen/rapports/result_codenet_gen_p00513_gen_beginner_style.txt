================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:08:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
areas = []
for _ in range(n):
    areas.append(int(input()))

def is_possible(area):
    # 2xy + x + y = area
    # On cherche des x,y entiers positifs satisfaisant ça
    # On essaie x de 1 jusqu'à ce que 2x^2+x > area (borne raisonnable)
    for x in range(1, area+1):
        # Calcul de y possible
        # area = 2xy + x + y = y(2x+1) + x
        # y(2x+1) = area - x
        diff = area - x
        if diff <= 0:
            continue
        if diff % (2*x + 1) == 0:
            y = diff // (2*x + 1)
            if y > 0:
                return True
        if 2*x*x + x > area:
            break
    return False

count_wrong = 0
for area in areas:
    if not is_possible(area):
        count_wrong += 1

print(count_wrong)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008432185277342796
    2. '('' → logprob: -7.625843048095703
    3. ''' → logprob: -8.500843048095703
    4. '```' → logprob: -10.375843048095703
    5. '("("' → logprob: -10.500843048095703
    6. '`' → logprob: -10.500843048095703
    7. '(
' → logprob: -10.750843048095703
    8. '(n' → logprob: -11.000843048095703
    9. '()' → logprob: -12.000843048095703
    10. '"' → logprob: -12.500843048095703

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2073645442724228
    2. ')' → logprob: -1.707364559173584
    3. '()' → logprob: -5.457364559173584
    4. '())' → logprob: -7.082364559173584
    5. '(
' → logprob: -8.082364082336426
    6. '```' → logprob: -9.582364082336426
    7. '))' → logprob: -9.707364082336426
    8. '[' → logprob: -10.582364082336426
    9. '')' → logprob: -10.582364082336426
    10. '")' → logprob: -10.582364082336426

Token 5: 'areas' (ID: 69250)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006962943356484175
    2. '(' → logprob: -5.881962776184082
    3. '.' → logprob: -6.381962776184082
    4. '_' → logprob: -6.506962776184082
    5. '[]' → logprob: -8.631962776184082
    6. '=' → logprob: -9.131962776184082
    7. '[n' → logprob: -9.131962776184082
    8. ')' → logprob: -9.506962776184082
    9. '\[' → logprob: -9.506962776184082
    10. ' =' → logprob: -9.631962776184082

Token 7: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.03768382966518402
    2. '[]' → logprob: -3.6626837253570557
    3. ' [' → logprob: -5.287683963775635
    4. ' list' → logprob: -6.037683963775635
    5. 'list' → logprob: -6.412683963775635
    6. '[' → logprob: -7.037683963775635
    7. ' ' → logprob: -7.412683963775635
    8. ' {}' → logprob: -8.912683486938477
    9. ' set' → logprob: -9.162683486938477
    10. '[input' → logprob: -9.162683486938477

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00043007321073673666
    2. ' for' → logprob: -7.875430107116699
    3. '```' → logprob: -10.1254301071167
    4. '\n' → logprob: -13.0004301071167
    5. ' 
' → logprob: -13.2504301071167
    6. '
' → logprob: -13.2504301071167
    7. '`' → logprob: -13.8754301071167
    8. '\' → logprob: -14.6254301071167
    9. '[' → logprob: -14.6254301071167
    10. 'area' → logprob: -14.8754301071167

Token 9: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11568642407655716
    2. ' i' → logprob: -2.2406864166259766
    3. '  ' → logprob: -6.615686416625977
    4. ' n' → logprob: -6.740686416625977
    5. 'i' → logprob: -8.990686416625977
    6. ' area' → logprob: -9.365686416625977
    7. ' range' → logprob: -10.490686416625977
    8. ' ' → logprob: -10.990686416625977
    9. ' )' → logprob: -11.240686416625977
    10. ' I' → logprob: -11.365686416625977

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00728016858920455
    2. 'in' → logprob: -5.007280349731445
    3. ' ' → logprob: -7.507280349731445
    4. ' i' → logprob: -12.757280349731445
    5. 'n' → logprob: -13.007280349731445
    6. ' n' → logprob: -13.257280349731445
    7. 'import' → logprob: -13.507280349731445
    8. 'range' → logprob: -13.507280349731445
    9. '_' → logprob: -13.882280349731445
    10. ' ,' → logprob: -14.132280349731445

Token 11: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324605919420719
    2. ' range' → logprob: -3.7732460498809814
    3. '(range' → logprob: -15.773245811462402
    4. 'n' → logprob: -15.773245811462402
    5. '	range' → logprob: -16.02324676513672
    6. 'rang' → logprob: -16.39824676513672
    7. 'ran' → logprob: -17.27324676513672
    8. '_range' → logprob: -17.39824676513672
    9. '```' → logprob: -18.02324676513672
    10. ' xrange' → logprob: -18.52324676513672

Token 12: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1992240995168686
    2. ' (' → logprob: -1.9492241144180298
    3. '(n' → logprob: -3.3242239952087402
    4. ' n' → logprob: -6.69922399520874
    5. ' range' → logprob: -7.94922399520874
    6. '(range' → logprob: -8.574224472045898
    7. 'n' → logprob: -8.824224472045898
    8. '(
' → logprob: -9.574224472045898
    9. '```' → logprob: -10.074224472045898
    10. ')' → logprob: -10.074224472045898

Token 13: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07893341779708862
    2. '):' → logprob: -2.5789334774017334
    3. ' )' → logprob: -11.078933715820312
    4. '):
' → logprob: -11.453933715820312
    5. ':' → logprob: -12.578933715820312
    6. ')>' → logprob: -13.203933715820312
    7. ')**' → logprob: -13.578933715820312
    8. ')
' → logprob: -13.703933715820312
    9. '`)' → logprob: -13.703933715820312
    10. ' ):' → logprob: -13.828933715820312

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09023982286453247
    2. ' areas' → logprob: -2.9652397632598877
    3. '    ' → logprob: -3.7152397632598877
    4. '```' → logprob: -5.465240001678467
    5. 'areas' → logprob: -6.090240001678467
    6. ' ```' → logprob: -7.090240001678467
    7. ' ' → logprob: -7.340240001678467
    8. ' area' → logprob: -7.840240001678467
    9. ' input' → logprob: -7.965240001678467
    10. '    
' → logprob: -8.215239524841309

Token 15: ' areas' (ID: 6723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4935193955898285
    2. ' areas' → logprob: -1.3685194253921509
    3. 'areas' (adapté à ' areas') → logprob: -2.2435193061828613
    4. ' area' → logprob: -4.493519306182861
    5. 'area' → logprob: -4.993519306182861
    6. 'a' → logprob: -5.618519306182861
    7. '```' → logprob: -5.993519306182861
    8. ' ```' → logprob: -7.118519306182861
    9. ' a' → logprob: -7.493519306182861
    10. ' city' → logprob: -7.993519306182861

Token 16: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.018169725313782692
    2. '.' → logprob: -4.01816987991333
    3. '.extend' → logprob: -11.268169403076172
    4. ' .' → logprob: -13.518169403076172
    5. '.setdefault' → logprob: -13.518169403076172
    6. '.add' → logprob: -13.643169403076172
    7. '.push' → logprob: -14.268169403076172
    8. '.pop' → logprob: -14.393169403076172
    9. '.app' → logprob: -14.893169403076172
    10. ').' → logprob: -15.518169403076172

Token 17: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.058031950145959854
    2. '(input' → logprob: -3.3080320358276367
    3. '(int' → logprob: -4.058032035827637
    4. '(float' → logprob: -6.183032035827637
    5. ' (' → logprob: -8.683032035827637
    6. '(list' → logprob: -8.808032035827637
    7. '(
' → logprob: -9.933032035827637
    8. '()' → logprob: -11.183032035827637
    9. '(eval' → logprob: -11.558032035827637
    10. '(

' → logprob: -11.808032035827637

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931948661804199
    2. '(input' → logprob: -0.6931948661804199
    3. '()' → logprob: -10.943195343017578
    4. ')' → logprob: -11.193195343017578
    5. '(
' → logprob: -12.443195343017578
    6. ' (' → logprob: -12.568195343017578
    7. '(

' → logprob: -12.943195343017578
    8. 'input' → logprob: -13.443195343017578
    9. '(in' → logprob: -13.693195343017578
    10. '('' → logprob: -14.818195343017578

Token 19: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.25025153160095215
    2. '())' → logprob: -1.6252515316009521
    3. '()' → logprob: -3.750251531600952
    4. '())))' → logprob: -7.625251770019531
    5. '(' → logprob: -8.250251770019531
    6. '))' → logprob: -9.625251770019531
    7. ')' → logprob: -10.000251770019531
    8. '()))
' → logprob: -10.125251770019531
    9. '()));' → logprob: -10.625251770019531
    10. '())
' → logprob: -11.125251770019531

Token 20: 'def' (ID: 1314)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12600095570087433
    2. 'total' → logprob: -2.8760008811950684
    3. 'sum' → logprob: -3.8760008811950684
    4. 'areas' → logprob: -4.876000881195068
    5. 's' → logprob: -5.126000881195068
    6. 'min' → logprob: -5.251000881195068
    7. 'm' → logprob: -5.251000881195068
    8. 'maximum' → logprob: -5.501000881195068
    9. 'print' → logprob: -5.751000881195068
    10. 'largest' → logprob: -6.251000881195068

Token 21: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6435560584068298
    2. ' calculate' → logprob: -1.2685561180114746
    3. ' area' → logprob: -2.7685561180114746
    4. ' space' → logprob: -3.1435561180114746
    5. ' find' → logprob: -3.5185561180114746
    6. ' largest' → logprob: -3.7685561180114746
    7. ' max' → logprob: -5.143556118011475
    8. ' compute' → logprob: -5.393556118011475
    9. ' sum' → logprob: -5.768556118011475
    10. ' factorial' → logprob: -5.893556118011475

Token 22: '_possible' (ID: 185849)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.8167775869369507
    2. '_pal' → logprob: -1.0667775869369507
    3. '_' → logprob: -2.8167777061462402
    4. '_div' → logprob: -3.0667777061462402
    5. '_square' → logprob: -3.0667777061462402
    6. '_valid' → logprob: -4.31677770614624
    7. '_sorted' → logprob: -5.06677770614624
    8. '_area' → logprob: -5.06677770614624
    9. '_per' → logprob: -5.19177770614624
    10. '_possible' → logprob: -5.31677770614624

Token 23: '(area' (ID: 115185)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018892568768933415
    2. '_' → logprob: -6.626889228820801
    3. '(_' → logprob: -9.1268892288208
    4. ' (' → logprob: -9.2518892288208
    5. '_(' → logprob: -9.2518892288208
    6. '((' → logprob: -10.3768892288208
    7. '_to' → logprob: -10.3768892288208
    8. '(a' → logprob: -10.3768892288208
    9. '("("' → logprob: -10.3768892288208
    10. '(n' → logprob: -11.1268892288208

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5945005416870117
    2. ')' → logprob: -1.3445005416870117
    3. ',' → logprob: -1.7195005416870117
    4. ')):' → logprob: -5.719500541687012
    5. ' ):' → logprob: -6.594500541687012
    6. ' ,' → logprob: -7.094500541687012
    7. '_' → logprob: -7.344500541687012
    8. ' )' → logprob: -7.719500541687012
    9. '))' → logprob: -7.969500541687012
    10. ')>' → logprob: -8.094500541687012

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01332834456115961
    2. '    ' → logprob: -5.138328552246094
    3. ':' → logprob: -6.388328552246094
    4. '    
' → logprob: -6.888328552246094
    5. ' ' → logprob: -7.013328552246094
    6. '(' → logprob: -7.138328552246094
    7. ')' → logprob: -7.388328552246094
    8. '<|end|>' → logprob: -7.388328552246094
    9. ' return' → logprob: -7.763328552246094
    10. ' 
' → logprob: -8.263328552246094

Token 26: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.045188307762146
    2. '   ' → logprob: -1.170188307762146
    3. ' ' → logprob: -1.670188307762146
    4. '    ' → logprob: -2.1701884269714355
    5. ' 
' → logprob: -4.5451884269714355
    6. 'return' → logprob: -4.7951884269714355
    7. ' )' → logprob: -5.7951884269714355
    8. ' ' → logprob: -6.2951884269714355
    9. ' ```' → logprob: -6.4201884269714355
    10. '    
' → logprob: -7.2951884269714355

Token 27: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8300169110298157
    2. ' return' → logprob: -1.455016851425171
    3. ' area' → logprob: -1.955016851425171
    4. '    ' → logprob: -2.955016851425171
    5. ' ' → logprob: -3.080016851425171
    6. ' True' → logprob: -3.830016851425171
    7. ' for' → logprob: -4.20501708984375
    8. 'area' → logprob: -4.33001708984375
    9. 'return' → logprob: -4.70501708984375
    10. ' if' → logprob: -4.83001708984375

Token 28: '2' (ID: 17)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.8334880471229553
    2. 'return' → logprob: -1.0834879875183105
    3. '   ' → logprob: -2.3334879875183105
    4. 'for' → logprob: -3.2084879875183105
    5. 'if' → logprob: -3.9584879875183105
    6. ' area' → logprob: -4.4584879875183105
    7. ' return' → logprob: -4.4584879875183105
    8. ')' → logprob: -4.8334879875183105
    9. 'max' → logprob: -4.8334879875183105
    10. ' for' → logprob: -5.2084879875183105

Token 29: 'xy' (ID: 6077)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3235619068145752
    2. ' *' → logprob: -1.5735619068145752
    3. ' **' → logprob: -3.073561906814575
    4. '*' → logprob: -4.573561668395996
    5. '_' → logprob: -6.198561668395996
    6. ' <=' → logprob: -6.698561668395996
    7. '**' → logprob: -6.823561668395996
    8. '   ' → logprob: -6.948561668395996
    9. '    ' → logprob: -6.948561668395996
    10. ' >=' → logprob: -6.948561668395996

Token 30: ' +' (ID: 659)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.1796257495880127
    2. ' ' → logprob: -1.4296257495880127
    3. ' >=' → logprob: -1.6796257495880127
    4. ' ==' → logprob: -1.6796257495880127
    5. '*' → logprob: -4.554625511169434
    6. ' *' → logprob: -4.929625511169434
    7. '==' → logprob: -4.929625511169434
    8. ')' → logprob: -5.054625511169434
    9. '<=' → logprob: -5.054625511169434
    10. '>=' → logprob: -5.179625511169434

Token 31: ' x' (ID: 1215)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24576488137245178
    2. ' ' → logprob: -1.6207648515701294
    3. ' x' → logprob: -4.87076473236084
    4. '4' → logprob: -4.99576473236084
    5. 'x' → logprob: -5.37076473236084
    6. '1' → logprob: -7.99576473236084
    7. 'xz' → logprob: -8.62076473236084
    8. ' y' → logprob: -9.37076473236084
    9. ' (' → logprob: -9.49576473236084
    10. ' z' → logprob: -9.62076473236084

Token 32: ' +' (ID: 659)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5436359643936157
    2. '*y' → logprob: -1.5436359643936157
    3. '*' → logprob: -1.9186359643936157
    4. ' *' → logprob: -3.668635845184326
    5. ' +' → logprob: -3.793635845184326
    6. '+' → logprob: -5.293635845184326
    7. ' y' → logprob: -6.418635845184326
    8. 'z' → logprob: -7.043635845184326
    9. '+y' → logprob: -7.293635845184326
    10. '2' → logprob: -7.293635845184326

Token 33: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.039233945310115814
    2. ' y' → logprob: -3.289233922958374
    3. '2' → logprob: -6.789234161376953
    4. '1' → logprob: -9.789234161376953
    5. ' ' → logprob: -12.539234161376953
    6. '	y' → logprob: -13.789234161376953
    7. '3' → logprob: -13.914234161376953
    8. '_y' → logprob: -14.414234161376953
    9. '4' → logprob: -14.789234161376953
    10. '(' → logprob: -15.164234161376953

Token 34: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' area' (ID: 3624)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4505266547203064
    2. '0' → logprob: -1.3255267143249512
    3. ' area' → logprob: -2.450526714324951
    4. 'area' → logprob: -4.825526714324951
    5. '<|end|>' → logprob: -7.325526714324951
    6. ' n' → logprob: -8.075526237487793
    7. ' (' → logprob: -8.450526237487793
    8. ' '' → logprob: -8.450526237487793
    9. ''' → logprob: -8.575526237487793
    10. ' space' → logprob: -8.700526237487793

Token 36: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7474191188812256
    2. '   ' → logprob: -1.3724191188812256
    3. ' ' → logprob: -1.9974191188812256
    4. '\' → logprob: -3.3724191188812256
    5. '\n' → logprob: -3.7474191188812256
    6. '<|end|>' → logprob: -3.9974191188812256
    7. ')' → logprob: -4.122419357299805
    8. '    ' → logprob: -4.247419357299805
    9. ' :' → logprob: -4.622419357299805
    10. '_' → logprob: -5.247419357299805

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07158875465393066
    2. '<|end|>' → logprob: -2.9465887546539307
    3. '\' → logprob: -5.446588516235352
    4. '    
' → logprob: -5.821588516235352
    5. '\n' → logprob: -6.446588516235352
    6. '    ' → logprob: -6.446588516235352
    7. '<|end|>' → logprob: -6.446588516235352
    8. ' ' → logprob: -6.696588516235352
    9. ':' → logprob: -7.696588516235352
    10. '```' → logprob: -7.696588516235352

Token 38: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09303532540798187
    2. '<|end|>' → logprob: -2.8430352210998535
    3. '    ' → logprob: -5.0930352210998535
    4. ' ' → logprob: -5.2180352210998535
    5. '\n' → logprob: -5.2180352210998535
    6. '    
' → logprob: -5.4680352210998535
    7. '
' → logprob: -5.8430352210998535
    8. ' 
' → logprob: -6.3430352210998535
    9. '<|end|>' → logprob: -6.4680352210998535
    10. '  ' → logprob: -6.9680352210998535

Token 39: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3235076367855072
    2. ' x' → logprob: -2.19850754737854
    3. ' for' → logprob: -2.44850754737854
    4. '    ' → logprob: -2.94850754737854
    5. ' import' → logprob: -5.198507785797119
    6. ' def' → logprob: -5.573507785797119
    7. ' from' → logprob: -5.823507785797119
    8. ' return' → logprob: -5.948507785797119
    9. 'import' → logprob: -6.323507785797119
    10. ' ' → logprob: -6.448507785797119

Token 40: ' cherche' (ID: 52345)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.005813010036945343
    2. ' e' → logprob: -5.255813121795654
    3. 'ly' → logprob: -8.130812644958496
    4. 'line' → logprob: -8.630812644958496
    5. ' the' → logprob: -10.505812644958496
    6. ' line' → logprob: -11.255812644958496
    7. 'l' → logprob: -11.255812644958496
    8. '(e' → logprob: -11.380812644958496
    9. 'es' → logprob: -11.755812644958496
    10. ' l' → logprob: -12.255812644958496

Token 41: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4409514367580414
    2. ' x' → logprob: -1.4409514665603638
    3. ' à' → logprob: -2.815951347351074
    4. 'x' → logprob: -3.940951347351074
    5. ' deux' → logprob: -4.315951347351074
    6. ' ' → logprob: -5.065951347351074
    7. ' two' → logprob: -5.315951347351074
    8. ' a' → logprob: -5.565951347351074
    9. ' un' → logprob: -5.565951347351074
    10. ' to' → logprob: -6.315951347351074

Token 42: ' x' (ID: 1215)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.9037400484085083
    2. ' x' → logprob: -1.2787400484085083
    3. ' ent' → logprob: -2.5287399291992188
    4. ' solutions' → logprob: -2.6537399291992188
    5. ' valeurs' → logprob: -3.1537399291992188
    6. ' nombres' → logprob: -3.6537399291992188
    7. ' entier' → logprob: -3.7787399291992188
    8. 'x' → logprob: -4.278739929199219
    9. ' couples' → logprob: -4.403739929199219
    10. ' ' → logprob: -4.653739929199219

Token 43: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03654296696186066
    2. ' ,' → logprob: -4.036542892456055
    3. ' et' → logprob: -4.536542892456055
    4. ' and' → logprob: -5.786542892456055
    5. ',y' → logprob: -5.911542892456055
    6. ' =' → logprob: -7.661542892456055
    7. 'et' → logprob: -8.036542892456055
    8. '=' → logprob: -8.036542892456055
    9. ' y' → logprob: -8.661542892456055
    10. ' ' → logprob: -8.786542892456055

Token 44: ' ent' (ID: 1121)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0014421383384615183
    2. 'ières' → logprob: -6.876441955566406
    3. 'ier' → logprob: -7.876441955566406
    4. '   ' → logprob: -11.626441955566406
    5. 'ière' → logprob: -12.501441955566406
    6. 'i' → logprob: -13.001441955566406
    7. 'ieres' → logprob: -13.001441955566406
    8. 're' → logprob: -13.251441955566406
    9. '```' → logprob: -13.251441955566406
    10. 'er' → logprob: -13.626441955566406

Token 46: ' posit' (ID: 13047)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009900813922286034
    2. '<|end|>' → logprob: -5.25990104675293
    3. ' for' → logprob: -6.88490104675293
    4. ' ' → logprob: -7.38490104675293
    5. '<|end|>' → logprob: -7.50990104675293
    6. '
' → logprob: -7.63490104675293
    7. '    ' → logprob: -7.63490104675293
    8. ':' → logprob: -8.00990104675293
    9. '```' → logprob: -8.63490104675293
    10. '    
' → logprob: -8.75990104675293

Token 47: 'ifs' (ID: 14119)
  Prédit: 'iers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00012833021173719317
    2. 'ers' → logprob: -9.750128746032715
    3. 'ières' → logprob: -10.125128746032715
    4. 'i' → logprob: -11.125128746032715
    5. '```' → logprob: -12.375128746032715
    6. 'ier' → logprob: -12.625128746032715
    7. 'és' → logprob: -13.000128746032715
    8. '   ' → logprob: -13.500128746032715
    9. 'ires' → logprob: -14.250128746032715
    10. 's' → logprob: -15.000128746032715

Token 48: ' satisf' (ID: 8824)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13849087059497833
    2. ':' → logprob: -2.638490915298462
    3. ' ' → logprob: -4.013490676879883
    4. '<|end|>' → logprob: -4.513490676879883
    5. ' :' → logprob: -4.888490676879883
    6. '
' → logprob: -5.388490676879883
    7. '    
' → logprob: -5.388490676879883
    8. '    ' → logprob: -5.888490676879883
    9. ' 
' → logprob: -6.388490676879883
    10. '<|end|>' → logprob: -6.513490676879883

Token 49: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.0018144060159102082
    2. 'a' → logprob: -7.501814365386963
    3. 'ont' → logprob: -8.251814842224121
    4. 'aient' → logprob: -8.501814842224121
    5. '   ' → logprob: -8.876814842224121
    6. '```' → logprob: -8.876814842224121
    7. 'ai' → logprob: -9.001814842224121
    8. 'aits' → logprob: -9.251814842224121
    9. 'e' → logprob: -10.376814842224121
    10. 'es' → logprob: -10.751814842224121

Token 50: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.007192577235400677
    2. 'ants' → logprob: -5.007192611694336
    3. 's' → logprob: -8.507192611694336
    4. 'ans' → logprob: -9.257192611694336
    5. 'ais' → logprob: -10.507192611694336
    6. 'ent' → logprob: -10.882192611694336
    7. '#' → logprob: -11.007192611694336
    8. 'nt' → logprob: -11.632192611694336
    9. 'aient' → logprob: -11.632192611694336
    10. 'ont' → logprob: -11.757192611694336

Token 51: ' ça' (ID: 13590)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31227433681488037
    2. '<|end|>' → logprob: -2.43727445602417
    3. ' la' → logprob: -2.81227445602417
    4. '```' → logprob: -3.31227445602417
    5. ' x' → logprob: -4.43727445602417
    6. ' ' → logprob: -4.43727445602417
    7. ' the' → logprob: -4.93727445602417
    8. ' à' → logprob: -4.93727445602417
    9. ',' → logprob: -5.06227445602417
    10. ' l' → logprob: -5.18727445602417

Token 52: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014562796801328659
    2. '<|end|>' → logprob: -4.639562606811523
    3. ':' → logprob: -6.389562606811523
    4. '<|end|>' → logprob: -7.264562606811523
    5. '
' → logprob: -7.764562606811523
    6. '    
' → logprob: -8.139562606811523
    7. 'def' → logprob: -8.514562606811523
    8. ' :' → logprob: -8.514562606811523
    9. ' ' → logprob: -8.514562606811523
    10. ' for' → logprob: -8.764562606811523

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009740623645484447
    2. ' for' → logprob: -5.884740829467773
    3. ' 
' → logprob: -6.259740829467773
    4. ' ' → logprob: -6.884740829467773
    5. '    
' → logprob: -7.259740829467773
    6. '    ' → logprob: -7.384740829467773
    7. 'def' → logprob: -7.509740829467773
    8. '<|end|>' → logprob: -7.759740829467773
    9. '
' → logprob: -7.884740829467773
    10. ':' → logprob: -8.259740829467773

Token 54: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45087960362434387
    2. ' for' → logprob: -1.0758795738220215
    3. 'for' → logprob: -4.5758795738220215
    4. ' 
' → logprob: -6.0758795738220215
    5. '    ' → logprob: -6.2008795738220215
    6. '    
' → logprob: -6.2008795738220215
    7. '<|end|>' → logprob: -6.4508795738220215
    8. ' ' → logprob: -6.9508795738220215
    9. '
' → logprob: -7.4508795738220215
    10. ' x' → logprob: -8.32588005065918

Token 55: ' On' (ID: 2160)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14315834641456604
    2. '   ' → logprob: -2.143158435821533
    3. 'for' → logprob: -4.518158435821533
    4. ' import' → logprob: -6.643158435821533
    5. 'import' → logprob: -7.268158435821533
    6. ' return' → logprob: -7.393158435821533
    7. ' ' → logprob: -7.643158435821533
    8. ' possible' → logprob: -7.768158435821533
    9. '    ' → logprob: -7.893158435821533
    10. ' x' → logprob: -8.268157958984375

Token 56: ' essa' (ID: 19417)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1617579162120819
    2. 'for' → logprob: -1.9117579460144043
    3. ' ranges' → logprob: -8.161757469177246
    4. '   ' → logprob: -8.411757469177246
    5. 'range' → logprob: -9.161757469177246
    6. ' range' → logprob: -9.286757469177246
    7. 'ranges' → logprob: -9.286757469177246
    8. ' return' → logprob: -9.536757469177246
    9. ' peux' → logprob: -9.536757469177246
    10. '<|end|>' → logprob: -10.036757469177246

Token 57: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.005753153003752232
    2. 'y' → logprob: -5.505753040313721
    3. 'ye' → logprob: -6.630753040313721
    4. 'yer' → logprob: -9.505753517150879
    5. 'i' → logprob: -9.630753517150879
    6. 'iye' → logprob: -10.505753517150879
    7. 'aye' → logprob: -10.755753517150879
    8. 'eye' → logprob: -10.880753517150879
    9. '\' → logprob: -11.255753517150879
    10. 'e' → logprob: -11.505753517150879

Token 58: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6286813020706177
    2. '   ' → logprob: -1.1286813020706177
    3. ' ' → logprob: -3.003681182861328
    4. 'for' → logprob: -3.753681182861328
    5. '    ' → logprob: -3.878681182861328
    6. '<|end|>' → logprob: -4.378681182861328
    7. ' 
' → logprob: -5.253681182861328
    8. '
' → logprob: -5.503681182861328
    9. ' x' → logprob: -5.628681182861328
    10. 'n' → logprob: -5.878681182861328

Token 59: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04566524550318718
    2. '=' → logprob: -3.1706652641296387
    3. ' in' → logprob: -6.045665264129639
    4. 's' → logprob: -8.79566478729248
    5. ' for' → logprob: -9.79566478729248
    6. ' from' → logprob: -10.67066478729248
    7. ' ' → logprob: -11.04566478729248
    8. 'from' → logprob: -11.17066478729248
    9. 'for' → logprob: -11.54566478729248
    10. ',' → logprob: -12.17066478729248

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026965318247675896
    2. ' ' → logprob: -3.651965379714966
    3. '0' → logprob: -7.651965141296387
    4. ' range' → logprob: -9.151965141296387
    5. 'range' → logprob: -10.276965141296387
    6. '2' → logprob: -10.401965141296387
    7. '```' → logprob: -13.089465141296387
    8. '   ' → logprob: -13.464465141296387
    9. 'from' → logprob: -13.964465141296387
    10. 'r' → logprob: -14.151965141296387

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007790212985128164
    2. '0' → logprob: -4.8827900886535645
    3. 'range' → logprob: -8.757790565490723
    4. ' ' → logprob: -10.757790565490723
    5. ' range' → logprob: -13.132790565490723
    6. '```' → logprob: -13.757790565490723
    7. '2' → logprob: -13.757790565490723
    8. 'x' → logprob: -15.882790565490723
    9. 'ranges' → logprob: -16.320289611816406
    10. '`' → logprob: -16.320289611816406

Token 62: ' jusqu' (ID: 21961)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.20856566727161407
    2. ' à' → logprob: -2.4585657119750977
    3. 'to' → logprob: -3.0835657119750977
    4. ' ' → logprob: -3.3335657119750977
    5. 'à' → logprob: -4.583565711975098
    6. ' a' → logprob: -4.958565711975098
    7. ' jusqu' → logprob: -7.208565711975098
    8. 'a' → logprob: -7.583565711975098
    9. ' up' → logprob: -7.583565711975098
    10. '1' → logprob: -7.708565711975098

Token 63: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.08704676479101181
    2. ''au' → logprob: -3.5870468616485596
    3. '’à' → logprob: -3.8370468616485596
    4. 'à' → logprob: -3.9620468616485596
    5. 'au' → logprob: -4.5870466232299805
    6. ' à' → logprob: -6.0870466232299805
    7. 'a' → logprob: -6.2120466232299805
    8. '’au' → logprob: -7.8370466232299805
    9. ''' → logprob: -9.71204662322998
    10. 'e' → logprob: -10.08704662322998

Token 64: ' ce' (ID: 2357)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.5717685222625732
    2. ' area' → logprob: -1.0717685222625732
    3. ' int' → logprob: -2.8217685222625732
    4. 'int' → logprob: -3.4467685222625732
    5. 'areas' → logprob: -7.696768760681152
    6. '(area' → logprob: -7.821768760681152
    7. ' (' → logprob: -8.571768760681152
    8. '(int' → logprob: -8.571768760681152
    9. ' areas' → logprob: -8.696768760681152
    10. ' ' → logprob: -9.634268760681152

Token 65: ' que' (ID: 661)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7398974895477295
    2. 'area' → logprob: -0.8648974895477295
    3. 'n' → logprob: -3.2398974895477295
    4. ' area' → logprob: -3.7398974895477295
    5. 'x' → logprob: -5.114897727966309
    6. '(area' → logprob: -5.364897727966309
    7. '   ' → logprob: -5.989897727966309
    8. ' que' → logprob: -5.989897727966309
    9. 'sqrt' → logprob: -5.989897727966309
    10. '```' → logprob: -5.989897727966309

Token 66: ' ' (ID: 220)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.22719083726406097
    2. 'x' → logprob: -1.6021908521652222
    3. ' area' → logprob: -6.727190971374512
    4. 'area' → logprob: -8.852190971374512
    5. ' ' → logprob: -8.977190971374512
    6. ' n' → logprob: -9.227190971374512
    7. 'n' → logprob: -9.727190971374512
    8. ' (' → logprob: -10.102190971374512
    9. '   ' → logprob: -10.727190971374512
    10. '```' → logprob: -10.977190971374512

Token 67: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006601210217922926
    2. ' x' → logprob: -5.256601333618164
    3. 'True' → logprob: -7.131601333618164
    4. ' True' → logprob: -7.756601333618164
    5. '(x' → logprob: -9.881601333618164
    6. '(' → logprob: -10.506601333618164
    7. '2' → logprob: -11.256601333618164
    8. '(True' → logprob: -11.506601333618164
    9. ' ' → logprob: -11.631601333618164
    10. ' (' → logprob: -11.756601333618164

Token 68: 'x' (ID: 87)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.40719249844551086
    2. 'area' → logprob: -1.9071924686431885
    3. ' *' → logprob: -2.6571924686431885
    4. 'x' → logprob: -2.7821924686431885
    5. '*x' → logprob: -3.1571924686431885
    6. 'xy' → logprob: -6.032192707061768
    7. ' area' → logprob: -6.157192707061768
    8. '**' → logprob: -6.907192707061768
    9. 'int' → logprob: -7.032192707061768
    10. '(area' → logprob: -7.032192707061768

Token 69: '^' (ID: 61)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.655093789100647
    2. ' >' → logprob: -1.405093789100647
    3. '>' → logprob: -2.2800936698913574
    4. ' <=' → logprob: -3.2800936698913574
    5. ' *' → logprob: -3.5300936698913574
    6. ' ' → logprob: -3.7800936698913574
    7. '+' → logprob: -4.155093669891357
    8. '<=' → logprob: -5.405093669891357
    9. ' >=' → logprob: -5.405093669891357
    10. '**' → logprob: -5.530093669891357

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00041113083716481924
    2. '3' → logprob: -8.125411033630371
    3. ' ' → logprob: -10.125411033630371
    4. '1' → logprob: -10.375411033630371
    5. '²' → logprob: -11.250411033630371
    6. '0' → logprob: -12.250411033630371
    7. '(' → logprob: -12.750411033630371
    8. '23' → logprob: -12.875411033630371
    9. '21' → logprob: -12.875411033630371
    10. '4' → logprob: -13.187911033630371

Token 71: '+x' (ID: 91888)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0148793458938599
    2. ' +' → logprob: -1.2648793458938599
    3. ' >' → logprob: -1.3898793458938599
    4. ' <=' → logprob: -2.6398792266845703
    5. '>' → logprob: -4.13987922668457
    6. '<=' → logprob: -4.63987922668457
    7. ' <' → logprob: -5.51487922668457
    8. ' >=' → logprob: -6.13987922668457
    9. '<' → logprob: -6.88987922668457
    10. ' ' → logprob: -7.63987922668457

Token 72: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1678384393453598
    2. '>' → logprob: -2.2928383350372314
    3. ' <=' → logprob: -3.4178383350372314
    4. '+' → logprob: -5.0428385734558105
    5. '<=' → logprob: -5.0428385734558105
    6. ' >=' → logprob: -6.0428385734558105
    7. ' +' → logprob: -6.4178385734558105
    8. '>=' → logprob: -6.9178385734558105
    9. '*' → logprob: -7.1678385734558105
    10. ' ' → logprob: -7.7928385734558105

Token 73: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.0036047017201781273
    2. ' area' → logprob: -5.628604888916016
    3. 'areas' → logprob: -13.378604888916016
    4. '(area' → logprob: -13.878604888916016
    5. '<|end|>' → logprob: -14.253604888916016
    6. ' ' → logprob: -14.753604888916016
    7. 'n' → logprob: -15.503604888916016
    8. '  ' → logprob: -15.753604888916016
    9. '   ' → logprob: -16.128604888916016
    10. '<|end|>' → logprob: -16.253604888916016

Token 74: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03623443841934204
    2. ':' → logprob: -3.5362343788146973
    3. ' for' → logprob: -5.286234378814697
    4. '):' → logprob: -8.286234855651855
    5. 'for' → logprob: -8.911234855651855
    6. ' :' → logprob: -9.036234855651855
    7. ' ' → logprob: -9.036234855651855
    8. ',' → logprob: -9.161234855651855
    9. '
' → logprob: -9.286234855651855
    10. ')' → logprob: -9.411234855651855

Token 75: 'borne' (ID: 52545)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1988765001296997
    2. ' )' → logprob: -2.44887638092041
    3. '):' → logprob: -2.69887638092041
    4. '   ' → logprob: -3.94887638092041
    5. ' ):' → logprob: -5.32387638092041
    6. '):
' → logprob: -7.32387638092041
    7. ')
' → logprob: -7.94887638092041
    8. ' ):
' → logprob: -8.44887638092041
    9. ' for' → logprob: -8.69887638092041
    10. ' ' → logprob: -8.69887638092041

Token 76: ' raisonn' (ID: 144705)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8353756070137024
    2. '):' → logprob: -0.8353756070137024
    3. '=' → logprob: -2.9603755474090576
    4. '+' → logprob: -3.3353755474090576
    5. ' =' → logprob: -4.335375785827637
    6. ' +' → logprob: -4.710375785827637
    7. '   ' → logprob: -4.960375785827637
    8. ' ' → logprob: -5.210375785827637
    9. ' ):' → logprob: -5.710375785827637
    10. ' )' → logprob: -5.960375785827637

Token 77: 'able' (ID: 562)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5210809707641602
    2. 'e' → logprob: -1.6460809707641602
    3. 'able' → logprob: -1.6460809707641602
    4. 'nable' → logprob: -4.77108097076416
    5. 'ée' → logprob: -5.52108097076416
    6. 'é' → logprob: -6.14608097076416
    7. 'ble' → logprob: -6.64608097076416
    8. 'ale' → logprob: -6.77108097076416
    9. 'de' → logprob: -7.77108097076416
    10. ' ' → logprob: -8.14608097076416

Token 78: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18586516380310059
    2. ')' → logprob: -1.8108651638031006
    3. '   ' → logprob: -5.81086540222168
    4. ' ):' → logprob: -6.43586540222168
    5. ':' → logprob: -7.18586540222168
    6. ' )' → logprob: -7.93586540222168
    7. '):
' → logprob: -8.43586540222168
    8. '=' → logprob: -10.43586540222168
    9. ',' → logprob: -10.81086540222168
    10. 'def' → logprob: -11.06086540222168

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019991206005215645
    2. ' for' → logprob: -4.269991397857666
    3. ':' → logprob: -6.144991397857666
    4. '    ' → logprob: -6.394991397857666
    5. ' ' → logprob: -7.519991397857666
    6. '    
' → logprob: -7.894991397857666
    7. 'for' → logprob: -8.394990921020508
    8. ' :' → logprob: -8.644990921020508
    9. ' 
' → logprob: -8.769990921020508
    10. ')' → logprob: -9.019990921020508

Token 80: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03598814830183983
    2. ' for' → logprob: -3.4109880924224854
    3. '    
' → logprob: -7.0359883308410645
    4. ' x' → logprob: -7.7859883308410645
    5. 'for' (adapté à ' for') → logprob: -8.035987854003906
    6. '    ' → logprob: -8.285987854003906
    7. ' i' → logprob: -9.160987854003906
    8. 'x' → logprob: -9.410987854003906
    9. ' ' → logprob: -9.535987854003906
    10. '  ' → logprob: -9.785987854003906

Token 81: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.014168446883559227
    2. 'x' → logprob: -4.2641682624816895
    3. ' ' → logprob: -12.514168739318848
    4. ' i' → logprob: -14.389168739318848
    5. '_x' → logprob: -15.764168739318848
    6. '```' → logprob: -15.889168739318848
    7. ' ' → logprob: -16.01416778564453
    8. '	x' → logprob: -16.01416778564453
    9. ')' → logprob: -16.88916778564453
    10. ')x' → logprob: -17.01416778564453

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009810513816773891
    2. 'in' → logprob: -4.634810447692871
    3. ' ' → logprob: -10.259810447692871
    4. 'In' → logprob: -13.134810447692871
    5. 's' → logprob: -13.259810447692871
    6. '```' → logprob: -13.259810447692871
    7. 'import' → logprob: -13.384810447692871
    8. '  ' → logprob: -13.822310447692871
    9. 'range' → logprob: -13.884810447692871
    10. ')' → logprob: -14.072310447692871

Token 83: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003609458915889263
    2. 'range' → logprob: -5.628609657287598
    3. ' xrange' → logprob: -12.878609657287598
    4. '	range' → logprob: -12.878609657287598
    5. '(range' → logprob: -13.003609657287598
    6. ' ' → logprob: -13.503609657287598
    7. '1' → logprob: -15.003609657287598
    8. '.range' → logprob: -16.37860870361328
    9. '_range' → logprob: -17.00360870361328
    10. '  ' → logprob: -17.25360870361328

Token 84: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.45848218582978e-06
    2. ' (' → logprob: -13.50000286102295
    3. '1' → logprob: -14.62500286102295
    4. '(n' → logprob: -15.25000286102295
    5. '(
' → logprob: -15.87500286102295
    6. '(int' → logprob: -17.000001907348633
    7. '<|end|>' → logprob: -17.750001907348633
    8. '[](' → logprob: -18.000001907348633
    9. ' ' → logprob: -18.250001907348633
    10. '[' → logprob: -18.625001907348633

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005631658714264631
    2. 'int' → logprob: -6.005631446838379
    3. '(' → logprob: -6.130631446838379
    4. ' ' → logprob: -7.630631446838379
    5. '(int' → logprob: -7.880631446838379
    6. ' int' → logprob: -10.005631446838379
    7. 'n' → logprob: -11.130631446838379
    8. '(area' → logprob: -11.130631446838379
    9. 'area' → logprob: -11.255631446838379
    10. '(n' → logprob: -11.380631446838379

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01881968043744564
    2. ' ,' → logprob: -4.018819808959961
    3. ',int' → logprob: -8.018819808959961
    4. ',(' → logprob: -8.518819808959961
    5. '(' → logprob: -9.393819808959961
    6. ',n' → logprob: -10.893819808959961
    7. '(int' → logprob: -11.268819808959961
    8. '(),' → logprob: -12.143819808959961
    9. '(area' → logprob: -12.268819808959961
    10. ',
' → logprob: -12.268819808959961

Token 87: ' area' (ID: 3624)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.49306240677833557
    2. ' int' → logprob: -0.9930623769760132
    3. '(int' → logprob: -4.618062496185303
    4. 'area' → logprob: -5.493062496185303
    5. ' area' → logprob: -6.243062496185303
    6. '(' → logprob: -6.743062496185303
    7. '(area' → logprob: -7.243062496185303
    8. ' (' → logprob: -7.493062496185303
    9. ' ' → logprob: -8.618062019348145
    10. ')' → logprob: -9.993062019348145

Token 88: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6447967886924744
    2. '+' → logprob: -0.8947967886924744
    3. '**' → logprob: -3.269796848297119
    4. '//' → logprob: -3.769796848297119
    5. ' +' → logprob: -5.769796848297119
    6. '):
' → logprob: -6.644796848297119
    7. ':' → logprob: -7.769796848297119
    8. ' ):' → logprob: -8.644796371459961
    9. ')):' → logprob: -9.019796371459961
    10. ' //' → logprob: -9.019796371459961

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -11.750009536743164
    3. '2' → logprob: -13.250009536743164
    4. '(' → logprob: -16.000009536743164
    5. '   ' → logprob: -18.250009536743164
    6. ')' → logprob: -19.125009536743164
    7. 'int' → logprob: -20.000009536743164
    8. '  ' → logprob: -20.000009536743164
    9. '
' → logprob: -20.062509536743164
    10. ' (' → logprob: -20.250009536743164

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008707110770046711
    2. '):
' → logprob: -4.758707046508789
    3. '   ' → logprob: -10.258707046508789
    4. ' ):' → logprob: -10.383707046508789
    5. ')' → logprob: -11.258707046508789
    6. ':' → logprob: -12.008707046508789
    7. '):
' → logprob: -12.508707046508789
    8. '():' → logprob: -13.758707046508789
    9. '):

' → logprob: -13.883707046508789
    10. ' ):
' → logprob: -14.133707046508789

Token 91: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1654476374387741
    2. '       ' → logprob: -1.9154475927352905
    3. '<|end|>' → logprob: -6.29044771194458
    4. ' ' → logprob: -6.54044771194458
    5. '    ' → logprob: -7.91544771194458
    6. '<|end|>' → logprob: -8.165447235107422
    7. '        
' → logprob: -8.290447235107422
    8. '  ' → logprob: -8.665447235107422
    9. '```' → logprob: -8.915447235107422
    10. '    
' → logprob: -9.040447235107422

Token 92: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3162493109703064
    2. ' if' → logprob: -1.5662493705749512
    3. 'if' → logprob: -2.941249370574951
    4. '   ' → logprob: -4.691249370574951
    5. '           ' → logprob: -8.941248893737793
    6. ' ' → logprob: -9.566248893737793
    7. '2' → logprob: -10.566248893737793
    8. '```' → logprob: -11.191248893737793
    9. '	if' → logprob: -11.566248893737793
    10. '    ' → logprob: -11.816248893737793

Token 93: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.363100528717041
    2. ' if' → logprob: -1.238100528717041
    3. '       ' → logprob: -4.363100528717041
    4. '   ' → logprob: -7.738100528717041
    5. '2' → logprob: -7.863100528717041
    6. '           ' → logprob: -8.863100051879883
    7. ' ' → logprob: -9.238100051879883
    8. 'dis' → logprob: -9.238100051879883
    9. 'left' → logprob: -9.488100051879883
    10. 'temp' → logprob: -9.738100051879883

Token 94: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24835489690303802
    2. '       ' → logprob: -2.248354911804199
    3. 'dis' → logprob: -3.623354911804199
    4. ' y' → logprob: -3.748354911804199
    5. 'y' → logprob: -4.248354911804199
    6. ' discrimin' → logprob: -4.248354911804199
    7. ' for' → logprob: -4.998354911804199
    8. 'possible' → logprob: -5.373354911804199
    9. ' possible' → logprob: -6.123354911804199
    10. 'for' → logprob: -6.373354911804199

Token 95: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6382575631141663
    2. 'y' → logprob: -1.0132575035095215
    3. '2' → logprob: -2.8882575035095215
    4. ' ' → logprob: -3.8882575035095215
    5. '(' → logprob: -4.7632575035095215
    6. ' (' → logprob: -5.3882575035095215
    7. 'dis' → logprob: -5.5132575035095215
    8. 'int' → logprob: -6.1382575035095215
    9. '(y' → logprob: -6.2632575035095215
    10. 'delta' → logprob: -6.2632575035095215

Token 96: ' possible' (ID: 4149)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15906639397144318
    2. '<|end|>' → logprob: -2.9090664386749268
    3. ')' → logprob: -4.034066200256348
    4. '=' → logprob: -4.034066200256348
    5. '       ' → logprob: -4.159066200256348
    6. ':' → logprob: -4.284066200256348
    7. '<|end|>' → logprob: -4.784066200256348
    8. '   ' → logprob: -5.409066200256348
    9. '(' → logprob: -5.534066200256348
    10. ',' → logprob: -6.159066200256348

Token 97: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7881088852882385
    2. '<|end|>' → logprob: -1.1631088256835938
    3. ':' → logprob: -3.1631088256835938
    4. '=' → logprob: -3.4131088256835938
    5. ')' → logprob: -3.4131088256835938
    6. '       ' → logprob: -3.5381088256835938
    7. '<|end|>' → logprob: -3.6631088256835938
    8. ' for' → logprob: -4.413108825683594
    9. ' y' → logprob: -4.538108825683594
    10. '(' → logprob: -4.913108825683594

Token 98: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.197891116142273
    2. 'y' → logprob: -1.322891116142273
    3. 'dis' → logprob: -1.697891116142273
    4. ' discrimin' → logprob: -2.6978912353515625
    5. 'if' → logprob: -3.4478912353515625
    6. ' y' → logprob: -3.5728912353515625
    7. 'delta' → logprob: -3.9478912353515625
    8. 'possible' → logprob: -4.1978912353515625
    9. 'temp' → logprob: -4.5728912353515625
    10. 'D' → logprob: -4.5728912353515625

Token 100: ' area' (ID: 3624)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7886078357696533
    2. ' y' → logprob: -1.5386078357696533
    3. '       ' → logprob: -1.6636078357696533
    4. 'possible' → logprob: -3.1636078357696533
    5. ' if' → logprob: -3.4136078357696533
    6. 'if' → logprob: -3.6636078357696533
    7. ' possible' → logprob: -4.163607597351074
    8. 'for' → logprob: -5.163607597351074
    9. ' for' → logprob: -5.413607597351074
    10. '   ' → logprob: -6.163607597351074

Token 101: ' =' (ID: 314)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3989521265029907
    2. '-' → logprob: -1.3989521265029907
    3. ' =' → logprob: -2.648952007293701
    4. '=' → logprob: -5.148952007293701
    5. ')' → logprob: -6.523952007293701
    6. '<|end|>' → logprob: -6.773952007293701
    7. '+' → logprob: -7.148952007293701
    8. ' -=' → logprob: -7.398952007293701
    9. ' ' → logprob: -7.648952007293701
    10. ' +' → logprob: -8.14895248413086

Token 102: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37578195333480835
    2. '2' → logprob: -1.5007820129394531
    3. ' (' → logprob: -2.875782012939453
    4. 'area' → logprob: -3.875782012939453
    5. ' ' → logprob: -5.000782012939453
    6. '(area' → logprob: -5.500782012939453
    7. ' area' → logprob: -6.750782012939453
    8. 'x' → logprob: -8.500782012939453
    9. '   ' → logprob: -8.625782012939453
    10. '(x' → logprob: -8.750782012939453

Token 103: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002658893121406436
    2. '(' → logprob: -6.002658843994141
    3. 'area' → logprob: -9.62765884399414
    4. ' ' → logprob: -9.87765884399414
    5. 'x' → logprob: -10.37765884399414
    6. '(x' → logprob: -11.75265884399414
    7. ' (' → logprob: -12.00265884399414
    8. 'y' → logprob: -12.50265884399414
    9. '(area' → logprob: -12.75265884399414
    10. '((' → logprob: -13.00265884399414

Token 104: 'xy' (ID: 6077)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8962152600288391
    2. '*x' → logprob: -0.8962152600288391
    3. ' *' → logprob: -2.3962152004241943
    4. 'xy' → logprob: -2.6462152004241943
    5. 'x' → logprob: -3.8962152004241943
    6. '*(' → logprob: -7.396215438842773
    7. '*y' → logprob: -8.521215438842773
    8. 'area' → logprob: -8.521215438842773
    9. 'def' → logprob: -9.396215438842773
    10. '**' → logprob: -9.771215438842773

Token 105: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.49235212802886963
    2. '+' → logprob: -1.1173521280288696
    3. ' -' → logprob: -2.99235200881958
    4. '-' → logprob: -5.74235200881958
    5. 'x' → logprob: -6.11735200881958
    6. '+x' → logprob: -6.36735200881958
    7. ' ' → logprob: -6.61735200881958
    8. ' x' → logprob: -7.86735200881958
    9. ')' → logprob: -7.86735200881958
    10. ' /' → logprob: -8.242352485656738

Token 106: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004079470410943031
    2. ' x' → logprob: -5.504079341888428
    3. '(x' → logprob: -15.129079818725586
    4. '<|end|>' → logprob: -15.254079818725586
    5. ' ' → logprob: -16.379079818725586
    6. '2' → logprob: -16.504079818725586
    7. 'y' → logprob: -16.504079818725586
    8. ''x' → logprob: -16.879079818725586
    9. '1' → logprob: -17.004079818725586
    10. '"x' → logprob: -17.629079818725586

Token 107: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.05880880728363991
    2. '+' → logprob: -3.0588088035583496
    3. ' *' → logprob: -5.18380880355835
    4. '*' → logprob: -5.55880880355835
    5. '*y' → logprob: -8.308809280395508
    6. '+y' → logprob: -8.308809280395508
    7. '   ' → logprob: -9.933809280395508
    8. ' ' → logprob: -10.058809280395508
    9. 'y' → logprob: -10.308809280395508
    10. ')' → logprob: -10.933809280395508

Token 108: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001346542383544147
    2. ' y' → logprob: -6.626346588134766
    3. 'x' → logprob: -11.751346588134766
    4. '1' → logprob: -11.751346588134766
    5. '<|end|>' → logprob: -13.251346588134766
    6. ''y' → logprob: -13.376346588134766
    7. '2' → logprob: -13.876346588134766
    8. '(y' → logprob: -16.126346588134766
    9. ')y' → logprob: -16.251346588134766
    10. '	y' → logprob: -16.376346588134766

Token 109: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00714121712371707
    2. ' =' → logprob: -5.88214111328125
    3. ' y' → logprob: -6.00714111328125
    4. '=' → logprob: -7.00714111328125
    5. '<|end|>' → logprob: -8.50714111328125
    6. '   ' → logprob: -8.75714111328125
    7. ',' → logprob: -8.88214111328125
    8. 'y' → logprob: -9.25714111328125
    9. ')' → logprob: -9.50714111328125
    10. '#' → logprob: -9.63214111328125

Token 110: ' y' (ID: 342)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6354065537452698
    2. '(area' → logprob: -0.8854065537452698
    3. '(' → logprob: -2.885406494140625
    4. '(x' → logprob: -6.760406494140625
    5. 'area' → logprob: -8.885406494140625
    6. '(space' → logprob: -9.010406494140625
    7. '   ' → logprob: -9.385406494140625
    8. '((' → logprob: -9.760406494140625
    9. ' ' → logprob: -9.885406494140625
    10. '(y' → logprob: -10.010406494140625

Token 111: '(' (ID: 7)
  Prédit: '(area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -0.6839877963066101
    2. '(' → logprob: -1.6839878559112549
    3. ' (' → logprob: -1.6839878559112549
    4. '*(' → logprob: -3.308987855911255
    5. '*' → logprob: -3.683987855911255
    6. 'area' → logprob: -3.808987855911255
    7. ' *' → logprob: -4.683987617492676
    8. '(x' → logprob: -5.183987617492676
    9. '((' → logprob: -5.308987617492676
    10. ' area' → logprob: -5.433987617492676

Token 112: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015067843720316887
    2. '2' → logprob: -4.265068054199219
    3. ' (' → logprob: -7.140068054199219
    4. ')' → logprob: -9.390068054199219
    5. ' ' → logprob: -11.015068054199219
    6. '`' → logprob: -12.890068054199219
    7. '*(' → logprob: -13.265068054199219
    8. 'x' → logprob: -13.640068054199219
    9. ')(' → logprob: -13.640068054199219
    10. '(x' → logprob: -13.890068054199219

Token 113: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.991464786347933e-05
    2. ' x' → logprob: -9.875060081481934
    3. '*x' → logprob: -12.000060081481934
    4. ')x' → logprob: -13.250060081481934
    5. '<|end|>' → logprob: -15.250060081481934
    6. ')' → logprob: -16.375059127807617
    7. ''x' → logprob: -16.875059127807617
    8. '{x' → logprob: -17.750059127807617
    9. '```' → logprob: -17.750059127807617
    10. '<|end|>' → logprob: -18.000059127807617

Token 114: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132938742637634
    2. ' +' → logprob: -1.3132939338684082
    3. ')' → logprob: -10.81329345703125
    4. '+)' → logprob: -12.18829345703125
    5. ')+' → logprob: -12.68829345703125
    6. ' plus' → logprob: -13.68829345703125
    7. '<|end|>' → logprob: -15.06329345703125
    8. '()+' → logprob: -15.31329345703125
    9. 'plus' → logprob: -15.43829345703125
    10. '2' → logprob: -15.56329345703125

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.398067828034982e-05
    2. ' ' → logprob: -9.62507438659668
    3. '2' → logprob: -11.87507438659668
    4. ')' → logprob: -14.62507438659668
    5. 'x' → logprob: -15.12507438659668
    6. '   ' → logprob: -16.93757438659668
    7. '(' → logprob: -17.31257438659668
    8. '```' → logprob: -17.43757438659668
    9. 'area' → logprob: -17.56257438659668
    10. '+' → logprob: -17.75007438659668

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005781835410743952
    2. ')+' → logprob: -5.505781650543213
    3. ' )' → logprob: -7.005781650543213
    4. ' +' → logprob: -7.880781650543213
    5. '+' → logprob: -7.880781650543213
    6. ')+(' → logprob: -11.005782127380371
    7. '+)' → logprob: -11.380782127380371
    8. ' ' → logprob: -13.380782127380371
    9. ')
' → logprob: -13.630782127380371
    10. '),' → logprob: -13.880782127380371

Token 117: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03675511106848717
    2. ' +' → logprob: -3.661755084991455
    3. ' y' → logprob: -5.036755084991455
    4. '+' → logprob: -5.911755084991455
    5. '<|end|>' → logprob: -7.911755084991455
    6. ' =' → logprob: -8.536755561828613
    7. '   ' → logprob: -8.661755561828613
    8. ',' → logprob: -9.411755561828613
    9. ' -' → logprob: -9.661755561828613
    10. '=' → logprob: -9.786755561828613

Token 118: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033558503491804004
    2. ' x' → logprob: -8.000335693359375
    3. '<|end|>' → logprob: -16.250335693359375
    4. ''x' → logprob: -17.750335693359375
    5. ')x' → logprob: -18.000335693359375
    6. '(x' → logprob: -18.000335693359375
    7. '	x' → logprob: -18.875335693359375
    8. '"x' → logprob: -19.125335693359375
    9. '$x' → logprob: -19.500335693359375
    10. '>x' → logprob: -20.125335693359375

Token 119: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034298391547054052
    2. ' =' → logprob: -7.003429889678955
    3. '<|end|>' → logprob: -7.003429889678955
    4. ')' → logprob: -7.878429889678955
    5. ' y' → logprob: -8.253429412841797
    6. '   ' → logprob: -8.253429412841797
    7. '=' → logprob: -8.503429412841797
    8. '        
' → logprob: -8.878429412841797
    9. '<|end|>' → logprob: -8.878429412841797
    10. ',' → logprob: -9.378429412841797

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009159822366200387
    2. ' y' → logprob: -7.250916004180908
    3. '   ' → logprob: -9.25091552734375
    4. 'y' → logprob: -10.00091552734375
    5. ',' → logprob: -10.75091552734375
    6. '        
' → logprob: -11.50091552734375
    7. ' =' → logprob: -11.87591552734375
    8. '           ' → logprob: -12.00091552734375
    9. ')' → logprob: -13.00091552734375
    10. '<|end|>' → logprob: -13.25091552734375

Token 121: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11466950178146362
    2. 'y' → logprob: -2.8646695613861084
    3. ' y' → logprob: -2.9896695613861084
    4. ' if' → logprob: -8.114669799804688
    5. 'if' → logprob: -8.364669799804688
    6. '   ' → logprob: -9.364669799804688
    7. ' for' → logprob: -9.489669799804688
    8. 'possible' → logprob: -9.864669799804688
    9. ',' → logprob: -9.989669799804688
    10. ' possible' → logprob: -10.114669799804688

Token 122: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5057941675186157
    2. '       ' → logprob: -1.1307941675186157
    3. 'y' → logprob: -2.630794048309326
    4. '   ' → logprob: -6.630794048309326
    5. ' possible' → logprob: -8.130794525146484
    6. 'possible' → logprob: -8.755794525146484
    7. ' for' → logprob: -9.380794525146484
    8. ' if' → logprob: -9.630794525146484
    9. '
' → logprob: -10.505794525146484
    10. 'if' → logprob: -10.755794525146484

Token 123: '(' (ID: 7)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759556293487549
    2. ' =' → logprob: -0.8259556293487549
    3. ')' → logprob: -12.200955390930176
    4. ',' → logprob: -12.700955390930176
    5. '_possible' → logprob: -12.825955390930176
    6. 's' → logprob: -13.325955390930176
    7. '   ' → logprob: -13.700955390930176
    8. ' ' → logprob: -14.825955390930176
    9. ' =(' → logprob: -14.825955390930176
    10. 'possible' → logprob: -14.825955390930176

Token 124: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0023661323357373476
    2. '(' → logprob: -6.377366065979004
    3. ')' → logprob: -8.127366065979004
    4. ' ' → logprob: -8.252366065979004
    5. '*' → logprob: -10.627366065979004
    6. ' (' → logprob: -11.127366065979004
    7. '*(' → logprob: -11.502366065979004
    8. '`' → logprob: -11.752366065979004
    9. '=' → logprob: -11.752366065979004
    10. ' =' → logprob: -12.002366065979004

Token 125: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.688212614681106e-05
    2. ' x' → logprob: -11.625017166137695
    3. '*x' → logprob: -12.250017166137695
    4. '*' → logprob: -14.000017166137695
    5. '+' → logprob: -14.000017166137695
    6. ')x' → logprob: -14.625017166137695
    7. '<|end|>' → logprob: -14.625017166137695
    8. ')' → logprob: -15.250017166137695
    9. '

' → logprob: -16.125017166137695
    10. '
' → logprob: -17.250017166137695

Token 126: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015056940028443933
    2. ' +' → logprob: -6.5015058517456055
    3. '1' → logprob: -14.251505851745605
    4. ')' → logprob: -14.626505851745605
    5. '

' → logprob: -15.001505851745605
    6. '+)' → logprob: -15.126505851745605
    7. ')+' → logprob: -15.501505851745605
    8. '<|end|>' → logprob: -15.501505851745605
    9. '+
' → logprob: -15.626505851745605
    10. 'plus' → logprob: -15.626505851745605

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.79811754100956e-05
    2. ' ' → logprob: -10.250038146972656
    3. ')' → logprob: -14.250038146972656
    4. '<|end|>' → logprob: -14.750038146972656
    5. '

' → logprob: -14.812538146972656
    6. '+' → logprob: -15.375038146972656
    7. '2' → logprob: -15.437538146972656
    8. '
' → logprob: -15.875038146972656
    9. '<|end|>' → logprob: -16.312538146972656
    10. '  ' → logprob: -17.187538146972656

Token 128: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16008274257183075
    2. '=' → logprob: -2.2850828170776367
    3. ' =' → logprob: -3.6600828170776367
    4. '+' → logprob: -4.035082817077637
    5. ')=' → logprob: -6.535082817077637
    6. ' +' → logprob: -7.410082817077637
    7. ' )' → logprob: -8.035082817077637
    8. '<=' → logprob: -8.660082817077637
    9. '>=' → logprob: -9.660082817077637
    10. ' <=' → logprob: -10.410082817077637

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022510588169098
    2. ' =' → logprob: -2.3502252101898193
    3. ',' → logprob: -12.100225448608398
    4. '<=' → logprob: -12.350225448608398
    5. ')' → logprob: -12.975225448608398
    6. '>=' → logprob: -13.350225448608398
    7. ' <=' → logprob: -13.975225448608398
    8. '==' → logprob: -14.225225448608398
    9. ' ' → logprob: -14.350225448608398
    10. '=

' → logprob: -15.100225448608398

Token 130: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.023254211992025375
    2. ' area' → logprob: -3.773254156112671
    3. '(area' → logprob: -12.27325439453125
    4. '`' → logprob: -13.39825439453125
    5. 'areas' → logprob: -13.89825439453125
    6. '```' → logprob: -14.52325439453125
    7. '   ' → logprob: -15.02325439453125
    8. '_area' → logprob: -15.89825439453125
    9. ' ' → logprob: -15.89825439453125
    10. ' área' → logprob: -16.02325439453125

Token 131: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004785868804901838
    2. '-' → logprob: -5.379786014556885
    3. ' ' → logprob: -8.879785537719727
    4. ')' → logprob: -11.379785537719727
    5. ' ' → logprob: -12.129785537719727
    6. '<|end|>' → logprob: -12.129785537719727
    7. ',' → logprob: -13.379785537719727
    8. ' =' → logprob: -14.754785537719727
    9. '=' → logprob: -15.254785537719727
    10. 'import' → logprob: -15.254785537719727

Token 132: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007099286303855479
    2. ' x' → logprob: -7.2507100105285645
    3. '	x' → logprob: -20.000709533691406
    4. '<|end|>' → logprob: -20.250709533691406
    5. '(x' → logprob: -20.375709533691406
    6. ')x' → logprob: -21.375709533691406
    7. ' ' → logprob: -21.750709533691406
    8. '
' → logprob: -22.250709533691406
    9. '   ' → logprob: -22.250709533691406
    10. ''x' → logprob: -22.375709533691406

Token 133: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028247982263565063
    2. 'if' → logprob: -4.278247833251953
    3. ' if' → logprob: -4.528247833251953
    4. ' y' → logprob: -6.528247833251953
    5. 'y' → logprob: -7.278247833251953
    6. ')' → logprob: -7.778247833251953
    7. ',' → logprob: -8.778247833251953
    8. '           ' → logprob: -9.403247833251953
    9. '   ' → logprob: -9.903247833251953
    10. ' =' → logprob: -9.903247833251953

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010460380464792252
    2. ' if' → logprob: -4.885460376739502
    3. 'if' → logprob: -5.885460376739502
    4. ',' → logprob: -10.88546085357666
    5. '           ' → logprob: -11.26046085357666
    6. ')' → logprob: -11.63546085357666
    7. '<|end|>' → logprob: -11.88546085357666
    8. ' y' → logprob: -12.13546085357666
    9. '   ' → logprob: -12.38546085357666
    10. '        
' → logprob: -12.63546085357666

Token 135: ' diff' (ID: 8868)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43808507919311523
    2. 'if' → logprob: -1.5630850791931152
    3. ' if' → logprob: -1.9380850791931152
    4. ' y' → logprob: -7.063085079193115
    5. 'y' → logprob: -8.563085556030273
    6. '   ' → logprob: -10.188085556030273
    7. '           ' → logprob: -10.313085556030273
    8. ',' → logprob: -10.563085556030273
    9. 'for' → logprob: -11.063085556030273
    10. ')' → logprob: -11.188085556030273

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47411203384399414
    2. '=' → logprob: -0.9741120338439941
    3. 'er' → logprob: -10.349111557006836
    4. ')' → logprob: -13.974111557006836
    5. '=int' → logprob: -14.349111557006836
    6. ' ' → logprob: -15.349111557006836
    7. ' ' → logprob: -15.724111557006836
    8. ',' → logprob: -15.849111557006836
    9. '}' → logprob: -16.224111557006836
    10. '_' → logprob: -16.474111557006836

Token 137: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.3868756890296936
    2. ' area' → logprob: -1.1368756294250488
    3. '   ' → logprob: -12.886876106262207
    4. '(area' → logprob: -13.136876106262207
    5. '_area' → logprob: -17.38687515258789
    6. ' ' → logprob: -17.51187515258789
    7. '.area' → logprob: -17.63687515258789
    8. ' área' → logprob: -17.63687515258789
    9. '    ' → logprob: -17.76187515258789
    10. 'Area' → logprob: -18.38687515258789

Token 138: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0015196226304396987
    2. '-' → logprob: -6.501519680023193
    3. ' ' → logprob: -11.001519203186035
    4. ')' → logprob: -15.376519203186035
    5. ' ' → logprob: -15.626519203186035
    6. ' –' → logprob: -16.87652015686035
    7. '   ' → logprob: -16.87652015686035
    8. '<|end|>' → logprob: -16.87652015686035
    9. '[' → logprob: -17.00152015686035
    10. ' -
' → logprob: -18.25152015686035

Token 139: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.493430894101039e-05
    2. ' x' → logprob: -9.500075340270996
    3. '<|end|>' → logprob: -20.00007438659668
    4. '	x' → logprob: -20.62507438659668
    5. ')x' → logprob: -21.25007438659668
    6. '(x' → logprob: -22.25007438659668
    7. '   ' → logprob: -22.25007438659668
    8. '$x' → logprob: -23.00007438659668
    9. '```' → logprob: -23.50007438659668
    10. ''x' → logprob: -23.62507438659668

Token 140: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16562704741954803
    2. ' if' → logprob: -2.2906270027160645
    3. 'if' → logprob: -3.4156270027160645
    4. '   ' → logprob: -4.9156270027160645
    5. '
' → logprob: -5.1656270027160645
    6. '<|end|>' → logprob: -5.9156270027160645
    7. ')' → logprob: -6.4156270027160645
    8. '        
' → logprob: -7.9156270027160645
    9. '  
' → logprob: -8.790627479553223
    10. '	if' → logprob: -8.790627479553223

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00932533759623766
    2. ' if' → logprob: -5.1343255043029785
    3. 'if' → logprob: -5.7593255043029785
    4. '<|end|>' → logprob: -9.50932502746582
    5. ',' → logprob: -9.88432502746582
    6. ')' → logprob: -10.00932502746582
    7. '   ' → logprob: -10.38432502746582
    8. '        
' → logprob: -11.38432502746582
    9. '           ' → logprob: -12.25932502746582
    10. '	if' → logprob: -12.50932502746582

Token 142: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13463284075260162
    2. '       ' → logprob: -2.2596328258514404
    3. ' if' → logprob: -3.8846328258514404
    4. 'div' → logprob: -7.1346330642700195
    5. 'den' → logprob: -9.63463306427002
    6. 'y' → logprob: -10.13463306427002
    7. 'for' → logprob: -10.88463306427002
    8. 'divider' → logprob: -11.63463306427002
    9. 'd' → logprob: -12.00963306427002
    10. ' div' → logprob: -12.00963306427002

Token 143: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.2292812317609787
    2. 'diff' → logprob: -1.6042811870574951
    3. '(' → logprob: -5.979281425476074
    4. ' (' → logprob: -6.729281425476074
    5. '(diff' → logprob: -9.604281425476074
    6. ' ' → logprob: -10.479281425476074
    7. '	diff' → logprob: -10.854281425476074
    8. '2' → logprob: -11.729281425476074
    9. ' x' → logprob: -12.854281425476074
    10. '   ' → logprob: -12.916781425476074

Token 144: ' <=' (ID: 5017)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5786917209625244
    2. '%' → logprob: -0.8286917209625244
    3. '<' → logprob: -6.203691482543945
    4. ' <' → logprob: -7.703691482543945
    5. '>=' → logprob: -8.703691482543945
    6. ' >=' → logprob: -9.953691482543945
    7. ' ' → logprob: -11.203691482543945
    8. '>' → logprob: -11.328691482543945
    9. '%s' → logprob: -11.953691482543945
    10. '%i' → logprob: -12.203691482543945

Token 145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -17.12502670288086
    4. 'zero' → logprob: -18.37502670288086
    5. '<|end|>' → logprob: -19.25002670288086
    6. '00' → logprob: -19.37502670288086
    7. '۰' → logprob: -20.00002670288086
    8. '   ' → logprob: -20.00002670288086
    9. '```' → logprob: -20.37502670288086
    10. ' zero' → logprob: -20.50002670288086

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '۰' → logprob: -20.625
    4. 'zero' → logprob: -21.375
    5. '<|end|>' → logprob: -21.875
    6. '00' → logprob: -22.875
    7. '０' → logprob: -22.875
    8. '٠' → logprob: -23.5
    9. '000' → logprob: -23.75
    10. '०' → logprob: -24.125

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05148056894540787
    2. ':
' → logprob: -3.051480531692505
    3. '           ' → logprob: -6.051480770111084
    4. ' or' → logprob: -8.176480293273926
    5. '       ' → logprob: -8.801480293273926
    6. ':return' → logprob: -9.426480293273926
    7. ' and' → logprob: -12.176480293273926
    8. '   ' → logprob: -12.551480293273926
    9. ',' → logprob: -12.676480293273926
    10. ' :' → logprob: -13.051480293273926

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038621893618255854
    2. 'continue' → logprob: -6.003862380981445
    3. ' continue' → logprob: -6.878862380981445
    4. '       ' → logprob: -8.128862380981445
    5. 'break' → logprob: -10.378862380981445
    6. ' break' → logprob: -11.628862380981445
    7. '               ' → logprob: -12.003862380981445
    8. 'return' → logprob: -12.253862380981445
    9. ',' → logprob: -13.128862380981445
    10. '```' → logprob: -13.378862380981445

Token 149: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4020822048187256
    2. '           ' → logprob: -1.1520822048187256
    3. ' break' → logprob: -4.527082443237305
    4. 'continue' (adapté à ' continue') → logprob: -5.527082443237305
    5. 'return' → logprob: -9.152082443237305
    6. ' continue' → logprob: -9.277082443237305
    7. '       ' → logprob: -9.652082443237305
    8. '               ' → logprob: -10.527082443237305
    9. '	break' → logprob: -11.527082443237305
    10. '   ' → logprob: -13.027082443237305

Token 150: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016792253591120243
    2. '   ' → logprob: -7.126679420471191
    3. 'if' → logprob: -7.876679420471191
    4. ' if' → logprob: -8.251679420471191
    5. '        
' → logprob: -9.126679420471191
    6. ',' → logprob: -10.251679420471191
    7. '           ' → logprob: -10.751679420471191
    8. ')' → logprob: -11.251679420471191
    9. '
' → logprob: -11.751679420471191
    10. '<|end|>' → logprob: -11.751679420471191

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021206384990364313
    2. ' if' → logprob: -6.877120494842529
    3. 'if' → logprob: -7.377120494842529
    4. '   ' → logprob: -8.002120971679688
    5. '        
' → logprob: -9.877120971679688
    6. ' y' → logprob: -11.127120971679688
    7. '           ' → logprob: -11.127120971679688
    8. ' for' → logprob: -11.377120971679688
    9. ',' → logprob: -11.752120971679688
    10. 'for' → logprob: -12.502120971679688

Token 152: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6421178579330444
    2. 'if' (adapté à ' if') → logprob: -0.7671178579330444
    3. ' if' → logprob: -5.017117977142334
    4. 'den' → logprob: -6.767117977142334
    5. 'div' → logprob: -7.142117977142334
    6. 'y' → logprob: -8.892117500305176
    7. 'rest' → logprob: -9.142117500305176
    8. 'for' → logprob: -9.517117500305176
    9. '(' → logprob: -9.642117500305176
    10. 'b' → logprob: -10.017117500305176

Token 153: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.6938197612762451
    2. 'diff' → logprob: -0.6938197612762451
    3. '(diff' → logprob: -7.318819999694824
    4. '	diff' → logprob: -12.068819999694824
    5. ' (' → logprob: -13.068819999694824
    6. '(' → logprob: -13.943819999694824
    7. '_diff' → logprob: -15.318819999694824
    8. '.diff' → logprob: -16.193819046020508
    9. ' dif' → logprob: -16.443819046020508
    10. 'Diff' → logprob: -16.943819046020508

Token 154: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11284158378839493
    2. '%' → logprob: -2.2378416061401367
    3. ' ' → logprob: -11.612841606140137
    4. ' ' → logprob: -11.862841606140137
    5. '%s' → logprob: -13.612841606140137
    6. '%i' → logprob: -14.487841606140137
    7. ')' → logprob: -14.612841606140137
    8. '%x' → logprob: -15.362841606140137
    9. '%e' → logprob: -15.362841606140137
    10. '%d' → logprob: -15.612841606140137

Token 155: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.0722858102526516e-05
    2. ' (' → logprob: -10.125041007995605
    3. '2' → logprob: -14.250041007995605
    4. '   ' → logprob: -18.37504005432129
    5. '((' → logprob: -18.75004005432129
    6. '{' → logprob: -18.87504005432129
    7. ' ' → logprob: -19.50004005432129
    8. '
' → logprob: -20.50004005432129
    9. ')' → logprob: -20.75004005432129
    10. '1' → logprob: -21.25004005432129

Token 156: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029773399233818054
    2. '2' → logprob: -3.529773473739624
    3. ' (' → logprob: -10.904773712158203
    4. ')' → logprob: -13.154773712158203
    5. ' ' → logprob: -13.654773712158203
    6. '{' → logprob: -15.029773712158203
    7. '
' → logprob: -15.029773712158203
    8. '```' → logprob: -15.404773712158203
    9. '   ' → logprob: -15.779773712158203
    10. '[' → logprob: -15.779773712158203

Token 157: '*x' (ID: 46987)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017112360801547766
    2. '*x' → logprob: -6.376711368560791
    3. ' *' → logprob: -11.876710891723633
    4. '*' → logprob: -13.876710891723633
    5. '
' → logprob: -14.376710891723633
    6. ' x' → logprob: -14.876710891723633
    7. '```' → logprob: -16.876710891723633
    8. 'def' → logprob: -17.126710891723633
    9. 's' → logprob: -17.376710891723633
    10. '<|end|>' → logprob: -17.626710891723633

Token 158: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023248620331287384
    2. ' +' → logprob: -3.7732486724853516
    3. '1' → logprob: -13.023248672485352
    4. ')' → logprob: -15.398248672485352
    5. ' plus' → logprob: -15.523248672485352
    6. '+)' → logprob: -15.773248672485352
    7. ')+' → logprob: -16.52324867248535
    8. '+x' → logprob: -16.77324867248535
    9. 'plus' → logprob: -16.89824867248535
    10. '＋' → logprob: -17.02324867248535

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. ')' → logprob: -16.75
    4. '<|end|>' → logprob: -17.0
    5. '
' → logprob: -19.125
    6. '```' → logprob: -19.25
    7. '<|end|>' → logprob: -20.75
    8. '

' → logprob: -21.25
    9. '۱' → logprob: -22.0625
    10. '   ' → logprob: -22.25

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '<|end|>' → logprob: -18.625
    4. ')' → logprob: -20.0
    5. '```' → logprob: -21.375
    6. '
' → logprob: -22.0
    7. '[' → logprob: -22.625
    8. '<|end|>' → logprob: -23.125
    9. '   ' → logprob: -23.5
    10. '１' → logprob: -23.5

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003265530103817582
    2. ')==' → logprob: -5.753265380859375
    3. '==' → logprob: -9.378265380859375
    4. ' )' → logprob: -13.128265380859375
    5. ')!=' → logprob: -14.128265380859375
    6. ' ==' → logprob: -15.378265380859375
    7. '')' → logprob: -16.253265380859375
    8. '))' → logprob: -16.503265380859375
    9. '```' → logprob: -16.503265380859375
    10. ')=' → logprob: -17.128265380859375

Token 162: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06198202446103096
    2. ' ==' → logprob: -2.8119819164276123
    3. '=' → logprob: -12.061982154846191
    4. '!=' → logprob: -12.311982154846191
    5. ')==' → logprob: -13.061982154846191
    6. '===' → logprob: -13.811982154846191
    7. ' !=' → logprob: -14.311982154846191
    8. '()==' → logprob: -15.811982154846191
    9. '==
' → logprob: -15.811982154846191
    10. ']==' → logprob: -16.186981201171875

Token 163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۰' → logprob: -21.250011444091797
    4. '   ' → logprob: -22.125011444091797
    5. '٠' → logprob: -23.250011444091797
    6. '```' → logprob: -23.625011444091797
    7. ' ' → logprob: -24.000011444091797
    8. ')' → logprob: -24.000011444091797
    9. '  ' → logprob: -24.000011444091797
    10. '<|end|>' → logprob: -24.000011444091797

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۰' → logprob: -20.125
    4. 'zero' → logprob: -21.875
    5. ')' → logprob: -22.125
    6. '<|end|>' → logprob: -22.125
    7. '০' → logprob: -22.25
    8. '   ' → logprob: -22.375
    9. '٠' → logprob: -22.75
    10. '０' → logprob: -22.875

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004900231026113033
    2. ':
' → logprob: -5.5049004554748535
    3. ' and' → logprob: -7.2549004554748535
    4. '           ' → logprob: -9.754899978637695
    5. '       ' → logprob: -10.879899978637695
    6. '):' → logprob: -11.379899978637695
    7. '<|end|>' → logprob: -11.754899978637695
    8. 'and' → logprob: -12.254899978637695
    9. '):
' → logprob: -12.754899978637695
    10. ',' → logprob: -12.754899978637695

Token 166: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45319268107414246
    2. ' y' → logprob: -1.3281927108764648
    3. '       ' → logprob: -2.703192710876465
    4. '<|end|>' → logprob: -4.453192710876465
    5. '        ' → logprob: -4.703192710876465
    6. '	       ' → logprob: -5.578192710876465
    7. 'y' → logprob: -5.953192710876465
    8. ',' → logprob: -6.953192710876465
    9. '        
' → logprob: -7.578192710876465
    10. '<|end|>' → logprob: -7.578192710876465

Token 167: ' y' (ID: 342)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21319973468780518
    2. 'y' (adapté à ' y') → logprob: -1.7131997346878052
    3. ' return' → logprob: -5.338199615478516
    4. '           ' → logprob: -5.463199615478516
    5. '       ' → logprob: -6.338199615478516
    6. ' y' → logprob: -7.213199615478516
    7. '               ' → logprob: -9.088199615478516
    8. '   ' → logprob: -10.463199615478516
    9. 'yield' → logprob: -11.463199615478516
    10. 'if' → logprob: -11.963199615478516

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687121868133545
    2. '=' → logprob: -1.1368712186813354
    3. ' ' → logprob: -16.261871337890625
    4. ',' → logprob: -17.011871337890625
    5. '=}' → logprob: -17.511871337890625
    6. ')' → logprob: -17.636871337890625
    7. '＝' → logprob: -17.636871337890625
    8. 's' → logprob: -17.636871337890625
    9. '<|end|>' → logprob: -17.886871337890625
    10. ' ' → logprob: -18.261871337890625

Token 169: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.20141363143920898
    2. ' diff' → logprob: -1.701413631439209
    3. '	diff' → logprob: -15.576414108276367
    4. '(diff' → logprob: -16.326414108276367
    5. '_diff' → logprob: -21.326414108276367
    6. '   ' → logprob: -21.576414108276367
    7. 'int' → logprob: -21.701414108276367
    8. '.diff' → logprob: -21.826414108276367
    9. 'd' → logprob: -22.701414108276367
    10. ' dif' → logprob: -22.701414108276367

Token 170: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.07951071858406067
    2. ' //' → logprob: -2.5795106887817383
    3. '/' → logprob: -7.829510688781738
    4. '           ' → logprob: -9.829510688781738
    5. '//=' → logprob: -9.829510688781738
    6. '=' → logprob: -10.204510688781738
    7. ' ' → logprob: -11.079510688781738
    8. ' ' → logprob: -11.454510688781738
    9. ' /' → logprob: -11.579510688781738
    10. '#' → logprob: -11.954510688781738

Token 171: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020354038861114532
    2. ' (' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.87520408630371
    4. '((' → logprob: -20.37520408630371
    5. ' ' → logprob: -21.12520408630371
    6. '  ' → logprob: -23.12520408630371
    7. '2' → logprob: -23.12520408630371
    8. ',' → logprob: -23.62520408630371
    9. '
' → logprob: -23.87520408630371
    10. '(int' → logprob: -24.00020408630371

Token 172: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759697556495667
    2. '2' → logprob: -0.8259697556495667
    3. ' (' → logprob: -10.950969696044922
    4. ' ' → logprob: -11.450969696044922
    5. '   ' → logprob: -13.450969696044922
    6. '           ' → logprob: -15.700969696044922
    7. '
' → logprob: -15.825969696044922
    8. ')' → logprob: -16.325969696044922
    9. '       ' → logprob: -16.950969696044922
    10. '               ' → logprob: -17.075969696044922

Token 173: '*x' (ID: 46987)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019301822176203132
    2. '*x' → logprob: -6.251930236816406
    3. '*' → logprob: -13.751930236816406
    4. ' x' → logprob: -14.876930236816406
    5. '(x' → logprob: -16.751930236816406
    6. '	x' → logprob: -17.001930236816406
    7. ' *' → logprob: -17.126930236816406
    8. ')x' → logprob: -18.126930236816406
    9. ''x' → logprob: -18.876930236816406
    10. '
' → logprob: -19.376930236816406

Token 174: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25192946195602417
    2. ' +' → logprob: -1.501929521560669
    3. '1' → logprob: -16.126930236816406
    4. ')' → logprob: -16.501930236816406
    5. ' ' → logprob: -16.501930236816406
    6. '   ' → logprob: -17.376930236816406
    7. '+
' → logprob: -18.001930236816406
    8. ')+' → logprob: -18.126930236816406
    9. '           ' → logprob: -18.626930236816406
    10. ' plus' → logprob: -18.626930236816406

Token 175: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -18.1250057220459
    4. '           ' → logprob: -19.5000057220459
    5. '   ' → logprob: -19.8750057220459
    6. ')' → logprob: -20.1250057220459
    7. '```' → logprob: -20.3750057220459
    8. '                   ' → logprob: -21.6250057220459
    9. '  ' → logprob: -21.6250057220459
    10. '0' → logprob: -21.6250057220459

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.625
    4. '１' → logprob: -20.625
    5. '۱' → logprob: -20.6875
    6. '  ' → logprob: -21.1875
    7. '```' → logprob: -21.5
    8. '१' → logprob: -21.5625
    9. '১' → logprob: -21.6875
    10. '(' → logprob: -21.75

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741531312465668
    2. ')
' → logprob: -0.9741531610488892
    3. '           ' → logprob: -10.599153518676758
    4. '<|end|>' → logprob: -10.599153518676758
    5. ')
' → logprob: -11.474153518676758
    6. ')return' → logprob: -12.099153518676758
    7. '<|end|>' → logprob: -13.224153518676758
    8. ')

' → logprob: -13.474153518676758
    9. ' )
' → logprob: -13.849153518676758
    10. '')
' → logprob: -14.099153518676758

Token 178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.034592388459714e-06
    2. '<|end|>' → logprob: -12.750005722045898
    3. ' if' → logprob: -13.500005722045898
    4. '		' → logprob: -14.500005722045898
    5. '            
' → logprob: -14.750005722045898
    6. '       ' → logprob: -15.125005722045898
    7. '	       ' → logprob: -15.375005722045898
    8. 'if' → logprob: -16.1250057220459
    9. '<|end|>' → logprob: -16.7500057220459
    10. '   ' → logprob: -16.8750057220459

Token 179: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05964391678571701
    2. '           ' → logprob: -3.0596439838409424
    3. ' if' → logprob: -4.559643745422363
    4. 'return' → logprob: -7.559643745422363
    5. ' return' → logprob: -12.184643745422363
    6. '       ' → logprob: -12.684643745422363
    7. '   ' → logprob: -15.184643745422363
    8. '               ' → logprob: -16.43464469909668
    9. '	if' → logprob: -16.68464469909668
    10. '          ' → logprob: -16.80964469909668

Token 180: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931594014167786
    2. ' y' → logprob: -0.6931594014167786
    3. '           ' → logprob: -11.568159103393555
    4. '               ' → logprob: -13.318159103393555
    5. '	y' → logprob: -15.193159103393555
    6. '1' → logprob: -15.443159103393555
    7. '   ' → logprob: -15.943159103393555
    8. ' ' → logprob: -16.068159103393555
    9. '            ' → logprob: -16.068159103393555
    10. 'x' → logprob: -16.318159103393555

Token 181: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5762761235237122
    2. '>' → logprob: -0.8262761235237122
    3. '>=' → logprob: -8.576275825500488
    4. ' >=' → logprob: -8.826275825500488
    5. ' ' → logprob: -15.076275825500488
    6. '&gt' → logprob: -15.201275825500488
    7. '1' → logprob: -16.201276779174805
    8. ' ' → logprob: -16.201276779174805
    9. '   ' → logprob: -16.451276779174805
    10. 'and' → logprob: -16.451276779174805

Token 182: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029751179739832878
    2. ' ' → logprob: -3.5297510623931885
    3. '=' → logprob: -14.52975082397461
    4. '<|end|>' → logprob: -15.40475082397461
    5. '>' → logprob: -18.65475082397461
    6. '   ' → logprob: -18.77975082397461
    7. ' ' → logprob: -19.02975082397461
    8. '<|end|>' → logprob: -19.27975082397461
    9. '
' → logprob: -19.77975082397461
    10. ' =' → logprob: -20.02975082397461

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '=' → logprob: -15.375031471252441
    4. '<|end|>' → logprob: -18.250032424926758
    5. '<|end|>' → logprob: -20.125032424926758
    6. '00' → logprob: -20.250032424926758
    7. '   ' → logprob: -20.250032424926758
    8. '1' → logprob: -20.250032424926758
    9. '۰' → logprob: -20.500032424926758
    10. 'x' → logprob: -21.062532424926758

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04941371828317642
    2. ':
' → logprob: -3.2994136810302734
    3. ' and' → logprob: -4.924413681030273
    4. '           ' → logprob: -6.424413681030273
    5. ':return' → logprob: -7.049413681030273
    6. '               ' → logprob: -7.549413681030273
    7. '<|end|>' → logprob: -7.549413681030273
    8. '):' → logprob: -8.549413681030273
    9. 'and' → logprob: -9.174413681030273
    10. '):
' → logprob: -9.174413681030273

Token 185: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.1080467781284824e-05
    2. '           ' → logprob: -11.000041007995605
    3. ' return' → logprob: -11.375041007995605
    4. 'return' → logprob: -11.500041007995605
    5. '                   ' → logprob: -13.875041007995605
    6. '                       ' → logprob: -14.750041007995605
    7. ':return' → logprob: -14.750041007995605
    8. '<|end|>' → logprob: -15.250041007995605
    9. '                
' → logprob: -16.000041961669922
    10. '       ' → logprob: -16.125041961669922

Token 186: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1726326197385788
    2. ' return' → logprob: -1.9226325750350952
    3. '               ' → logprob: -4.422632694244385
    4. '                   ' → logprob: -8.047632217407227
    5. '           ' → logprob: -12.047632217407227
    6. '       ' → logprob: -13.297632217407227
    7. '   ' → logprob: -13.797632217407227
    8. '	return' → logprob: -14.422632217407227
    9. ':return' → logprob: -16.172632217407227
    10. '                       ' → logprob: -16.422632217407227

Token 187: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.5776860184123507e-06
    2. ' True' → logprob: -13.00000286102295
    3. '"' → logprob: -16.000001907348633
    4. '(True' → logprob: -16.375001907348633
    5. '1' → logprob: -19.875001907348633
    6. 'x' → logprob: -20.125001907348633
    7. 'False' → logprob: -20.625001907348633
    8. 'y' → logprob: -21.750001907348633
    9. '   ' → logprob: -22.000001907348633
    10. 'true' → logprob: -22.250001907348633

Token 188: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03323262184858322
    2. ' return' → logprob: -4.283232688903809
    3. '    
' → logprob: -4.533232688903809
    4. '       ' → logprob: -5.783232688903809
    5. 'return' → logprob: -6.283232688903809
    6. '<|end|>' → logprob: -7.033232688903809
    7. '        
' → logprob: -7.158232688903809
    8. ' 
' → logprob: -8.408232688903809
    9. '            
' → logprob: -8.533232688903809
    10. '    ' → logprob: -8.533232688903809

Token 189: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007636455120518804
    2. 'return' → logprob: -7.375763416290283
    3. ' return' → logprob: -9.000763893127441
    4. '       ' → logprob: -11.500763893127441
    5. '	return' → logprob: -13.125763893127441
    6. 'None' → logprob: -14.375763893127441
    7. '           ' → logprob: -15.500763893127441
    8. 'print' → logprob: -15.750763893127441
    9. '```' → logprob: -16.125762939453125
    10. '    
' → logprob: -16.500762939453125

Token 190: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0014421383384615183
    2. '   ' → logprob: -6.626441955566406
    3. ' return' → logprob: -9.126441955566406
    4. ')' → logprob: -13.376441955566406
    5. '	return' → logprob: -13.501441955566406
    6. '```' → logprob: -13.876441955566406
    7. ')return' → logprob: -14.251441955566406
    8. ':return' → logprob: -14.376441955566406
    9. 'print' → logprob: -14.751441955566406
    10. 'eturn' → logprob: -14.876441955566406

Token 191: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5524933338165283
    2. ' ' → logprob: -0.9274933338165283
    3. '(' → logprob: -3.6774933338165283
    4. ' (' → logprob: -5.927493095397949
    5. '   ' → logprob: -7.427493095397949
    6. '  ' → logprob: -8.67749309539795
    7. 'x' → logprob: -9.05249309539795
    8. '(x' → logprob: -10.55249309539795
    9. ' x' → logprob: -10.80249309539795
    10. '    ' → logprob: -11.67749309539795

Token 192: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007246668450534344
    2. '(' → logprob: -5.007246494293213
    3. 'x' → logprob: -7.757246494293213
    4. 'diff' → logprob: -9.882246971130371
    5. 'area' → logprob: -10.757246971130371
    6. '(x' → logprob: -10.882246971130371
    7. ' ' → logprob: -12.507246971130371
    8. '((' → logprob: -12.757246971130371
    9. '(diff' → logprob: -13.757246971130371
    10. ' (' → logprob: -13.757246971130371

Token 193: '*x' (ID: 46987)
  Prédit: '*x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*x' → logprob: -0.010898785665631294
    2. '*' → logprob: -5.010898590087891
    3. ' *' → logprob: -5.510898590087891
    4. 'x' → logprob: -9.01089859008789
    5. '*(' → logprob: -11.76089859008789
    6. '```' → logprob: -14.01089859008789
    7. '**' → logprob: -14.76089859008789
    8. ' x' → logprob: -14.88589859008789
    9. '*object' → logprob: -15.63589859008789
    10. '*k' → logprob: -16.38589859008789

Token 194: '*x' (ID: 46987)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26676079630851746
    2. '*' → logprob: -1.6417608261108398
    3. '*x' → logprob: -3.51676082611084
    4. '**' → logprob: -5.26676082611084
    5. ' +' → logprob: -5.76676082611084
    6. '2' → logprob: -6.76676082611084
    7. '>' → logprob: -7.26676082611084
    8. 'x' → logprob: -8.76676082611084
    9. ' *' → logprob: -9.01676082611084
    10. '*(' → logprob: -9.14176082611084

Token 195: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17284263670444489
    2. '>' → logprob: -2.2978427410125732
    3. ' +' → logprob: -3.4228427410125732
    4. ' >' → logprob: -3.6728427410125732
    5. '>x' → logprob: -8.922842979431152
    6. '>=' → logprob: -10.172842979431152
    7. '+x' → logprob: -10.172842979431152
    8. ' >=' → logprob: -12.172842979431152
    9. '()>' → logprob: -12.797842979431152
    10. ' ' → logprob: -13.047842979431152

Token 196: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012106612848583609
    2. '1' → logprob: -9.500121116638184
    3. ' x' → logprob: -10.000121116638184
    4. '   ' → logprob: -14.625121116638184
    5. '<|end|>' → logprob: -16.250120162963867
    6. '>x' → logprob: -16.625120162963867
    7. '	x' → logprob: -16.875120162963867
    8. '
' → logprob: -17.625120162963867
    9. ''x' → logprob: -19.000120162963867
    10. ' ' → logprob: -19.125120162963867

Token 197: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03804987296462059
    2. ' >' → logprob: -3.2880499362945557
    3. '>x' → logprob: -12.413049697875977
    4. '>=' → logprob: -13.663049697875977
    5. '+' → logprob: -14.288049697875977
    6. '()>' → logprob: -14.413049697875977
    7. '">' → logprob: -14.788049697875977
    8. ')>' → logprob: -14.788049697875977
    9. ' ' → logprob: -15.413049697875977
    10. '>end' → logprob: -15.538049697875977

Token 198: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.07889000326395035
    2. ' area' → logprob: -2.578890085220337
    3. '(area' → logprob: -16.328889846801758
    4. '   ' → logprob: -17.328889846801758
    5. ' ' → logprob: -17.578889846801758
    6. 'Area' → logprob: -17.953889846801758
    7. 'space' → logprob: -18.078889846801758
    8. ' ' → logprob: -18.453889846801758
    9. 'areas' → logprob: -18.828889846801758
    10. '_area' → logprob: -19.078889846801758

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0070092324167490005
    2. ':
' → logprob: -5.007009029388428
    3. '   ' → logprob: -9.132009506225586
    4. '):' → logprob: -9.507009506225586
    5. ':return' → logprob: -9.882009506225586
    6. '       ' → logprob: -10.257009506225586
    7. '):
' → logprob: -12.257009506225586
    8. ' :' → logprob: -12.257009506225586
    9. '           ' → logprob: -12.382009506225586
    10. '<|end|>' → logprob: -12.882009506225586

Token 200: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49244603514671326
    2. '           ' → logprob: -1.2424460649490356
    3. 'break' → logprob: -2.617445945739746
    4. ' break' → logprob: -3.617445945739746
    5. '	break' → logprob: -8.617445945739746
    6. '   ' → logprob: -9.117445945739746
    7. '               ' → logprob: -10.367445945739746
    8. '	       ' → logprob: -11.617445945739746
    9. '_break' → logprob: -12.117445945739746
    10. '		' → logprob: -12.867445945739746

Token 201: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0012808336177840829
    2. '       ' → logprob: -7.251280784606934
    3. 'return' → logprob: -8.251280784606934
    4. ' break' → logprob: -8.251280784606934
    5. '           ' → logprob: -10.001280784606934
    6. '	break' → logprob: -12.751280784606934
    7. '   ' → logprob: -14.751280784606934
    8. '               ' → logprob: -15.626280784606934
    9. ' return' → logprob: -17.37628173828125
    10. 'Break' → logprob: -17.75128173828125

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007697483524680138
    2. 'return' → logprob: -4.882697582244873
    3. ' return' → logprob: -9.632697105407715
    4. '    
' → logprob: -11.132697105407715
    5. ':return' → logprob: -12.632697105407715
    6. '
' → logprob: -12.882697105407715
    7. '	return' → logprob: -13.507697105407715
    8. '       ' → logprob: -14.132697105407715
    9. '```' → logprob: -14.382697105407715
    10. 'print' → logprob: -14.507697105407715

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1610335260629654
    2. 'return' → logprob: -1.9110335111618042
    3. 'False' → logprob: -7.411033630371094
    4. ' return' → logprob: -9.036033630371094
    5. '```' → logprob: -10.661033630371094
    6. '    
' → logprob: -11.036033630371094
    7. '
' → logprob: -11.411033630371094
    8. ':return' → logprob: -11.786033630371094
    9. 'None' → logprob: -11.911033630371094
    10. 'print' → logprob: -12.036033630371094

Token 204: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01501042302697897
    2. '   ' → logprob: -4.390010356903076
    3. ' return' → logprob: -6.015010356903076
    4. ':return' → logprob: -10.515010833740234
    5. '    
' → logprob: -11.765010833740234
    6. '	return' → logprob: -12.265010833740234
    7. '```' → logprob: -12.390010833740234
    8. 'False' → logprob: -13.140010833740234
    9. '
' → logprob: -13.390010833740234
    10. 'eturn' → logprob: -13.390010833740234

Token 205: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0206720617134124e-05
    2. ' False' → logprob: -11.50001049041748
    3. '(False' → logprob: -22.000009536743164
    4. 'false' → logprob: -23.875009536743164
    5. 'True' → logprob: -25.000009536743164
    6. 'None' → logprob: -26.625009536743164
    7. '_false' → logprob: -26.875009536743164
    8. '=False' → logprob: -27.250009536743164
    9. 'FALSE' → logprob: -27.375009536743164
    10. '0' → logprob: -28.125009536743164

Token 206: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007116707041859627
    2. 'results' → logprob: -5.257116794586182
    3. 'result' → logprob: -6.757116794586182
    4. ' for' → logprob: -8.007116317749023
    5. 'valid' → logprob: -8.507116317749023
    6. 'res' → logprob: -9.882116317749023
    7. 'possible' → logprob: -10.007116317749023
    8. 'answers' → logprob: -10.757116317749023
    9. 'print' → logprob: -11.007116317749023
    10. '```' → logprob: -11.882116317749023

Token 207: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043803565204143524
    2. 'results' → logprob: -3.6688034534454346
    3. 'valid' → logprob: -5.043803691864014
    4. 'result' → logprob: -5.293803691864014
    5. 'count' → logprob: -5.418803691864014
    6. 'possible' → logprob: -7.543803691864014
    7. 'answers' → logprob: -8.293803215026855
    8. 'total' → logprob: -8.293803215026855
    9. 'res' → logprob: -8.793803215026855
    10. 'answer' → logprob: -9.293803215026855

Token 208: '_wrong' (ID: 190896)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11738753318786621
    2. '=' → logprob: -2.367387533187866
    3. '_' → logprob: -4.117387771606445
    4. '(' → logprob: -8.242387771606445
    5. ')' → logprob: -9.117387771606445
    6. '_space' → logprob: -9.242387771606445
    7. '<|end|>' → logprob: -9.742387771606445
    8. '_=' → logprob: -10.117387771606445
    9. '_count' → logprob: -10.367387771606445
    10. ' ' → logprob: -10.867387771606445

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6958808302879333
    2. ' =' → logprob: -0.8208808302879333
    3. 's' → logprob: -2.945880889892578
    4. '_' → logprob: -4.945880889892578
    5. '_area' → logprob: -7.320880889892578
    6. '_s' → logprob: -8.195880889892578
    7. '_cases' → logprob: -8.195880889892578
    8. '_possible' → logprob: -8.820880889892578
    9. '_answers' → logprob: -9.570880889892578
    10. '_=' → logprob: -10.695880889892578

Token 210: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. 'sum' → logprob: -18.250059127807617
    4. '```' → logprob: -19.625059127807617
    5. 'n' → logprob: -20.250059127807617
    6. '[' → logprob: -21.250059127807617
    7. ' sum' → logprob: -21.625059127807617
    8. '`' → logprob: -21.875059127807617
    9. '۰' → logprob: -21.875059127807617
    10. '(' → logprob: -22.000059127807617

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014132341311778873
    2. 'sum' → logprob: -8.875141143798828
    3. ' ' → logprob: -14.000141143798828
    4. 'len' → logprob: -14.750141143798828
    5. '```' → logprob: -16.125141143798828
    6. ' sum' → logprob: -16.500141143798828
    7. '[' → logprob: -17.500141143798828
    8. 'n' → logprob: -18.000141143798828
    9. 's' → logprob: -18.437641143798828
    10. '1' → logprob: -18.687641143798828

Token 212: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004202813375741243
    2. '
' → logprob: -5.504202842712402
    3. ' for' → logprob: -9.004202842712402
    4. '<|end|>' → logprob: -14.504202842712402
    5. 'count' → logprob: -14.629202842712402
    6. '
' → logprob: -16.379201889038086
    7. ' 
' → logprob: -16.504201889038086
    8. '  
' → logprob: -16.754201889038086
    9. '\n' → logprob: -16.754201889038086
    10. '```' → logprob: -17.004201889038086

Token 213: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0280383548888494e-06
    2. ' for' → logprob: -13.875000953674316
    3. 'count' → logprob: -16.875001907348633
    4. '
' → logprob: -17.250001907348633
    5. 'correct' → logprob: -17.875001907348633
    6. '```' → logprob: -18.625001907348633
    7. 'total' → logprob: -18.750001907348633
    8. 'area' → logprob: -20.500001907348633
    9. 'true' → logprob: -20.750001907348633
    10. '<|end|>' → logprob: -21.125001907348633

Token 214: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.012668101117014885
    2. 'area' → logprob: -4.387668132781982
    3. ' _' → logprob: -9.387667655944824
    4. '_' → logprob: -10.637667655944824
    5. ' a' → logprob: -11.012667655944824
    6. '_area' → logprob: -11.137667655944824
    7. 'a' → logprob: -12.262667655944824
    8. ' i' → logprob: -12.762667655944824
    9. '(area' → logprob: -13.137667655944824
    10. ' ' → logprob: -13.512667655944824

Token 215: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38695815205574036
    2. 'in' → logprob: -1.136958122253418
    3. '_' → logprob: -9.761958122253418
    4. '_in' → logprob: -10.886958122253418
    5. ' ' → logprob: -12.511958122253418
    6. '	in' → logprob: -13.136958122253418
    7. 'import' → logprob: -13.636958122253418
    8. ' _' → logprob: -14.636958122253418
    9. '  ' → logprob: -14.636958122253418
    10. 'n' → logprob: -15.011958122253418

Token 216: ' areas' (ID: 6723)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -0.029751529917120934
    2. ' areas' → logprob: -3.5297515392303467
    3. 'area' → logprob: -13.904751777648926
    4. 'Areas' → logprob: -17.02975082397461
    5. ' áreas' → logprob: -17.40475082397461
    6. 'are' → logprob: -17.77975082397461
    7. 'ares' → logprob: -18.52975082397461
    8. '   ' → logprob: -18.65475082397461
    9. '_' → logprob: -19.02975082397461
    10. ' area' → logprob: -19.27975082397461

Token 217: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07889452576637268
    2. ':
' → logprob: -2.57889461517334
    3. '   ' → logprob: -13.57889461517334
    4. ':

' → logprob: -13.95389461517334
    5. '):
' → logprob: -14.07889461517334
    6. ':
' → logprob: -14.07889461517334
    7. ' :' → logprob: -15.45389461517334
    8. ' :
' → logprob: -15.70389461517334
    9. ' if' → logprob: -15.82889461517334
    10. '=' → logprob: -16.078893661499023

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002629161812365055
    2. ' if' → logprob: -6.752629280090332
    3. '<|end|>' → logprob: -6.752629280090332
    4. '    
' → logprob: -8.502629280090332
    5. '```' → logprob: -10.502629280090332
    6. '<|end|>' → logprob: -10.627629280090332
    7. 'if' → logprob: -11.127629280090332
    8. '	if' → logprob: -11.752629280090332
    9. '
' → logprob: -12.877629280090332
    10. '       ' → logprob: -13.252629280090332

Token 219: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5769144296646118
    2. ' if' → logprob: -1.0769144296646118
    3. '   ' → logprob: -2.3269143104553223
    4. 'print' → logprob: -9.07691478729248
    5. ' print' → logprob: -11.82691478729248
    6. '```' → logprob: -12.45191478729248
    7. '    
' → logprob: -13.57691478729248
    8. 'count' → logprob: -13.70191478729248
    9. 'result' → logprob: -14.45191478729248
    10. '	if' → logprob: -14.45191478729248

Token 220: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.28567227721214294
    2. 'not' → logprob: -1.4106723070144653
    3. ' is' → logprob: -6.035672187805176
    4. 'is' → logprob: -6.160672187805176
    5. '(not' → logprob: -13.035672187805176
    6. ' ' → logprob: -13.473172187805176
    7. '	not' → logprob: -13.973172187805176
    8. 'n' → logprob: -14.348172187805176
    9. '!' → logprob: -14.410672187805176
    10. '   ' → logprob: -14.410672187805176

Token 221: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0024756586644798517
    2. 'is' → logprob: -6.002475738525391
    3. '(is' → logprob: -17.25247573852539
    4. '	is' → logprob: -18.12747573852539
    5. ' (' → logprob: -18.62747573852539
    6. '_is' → logprob: -18.87747573852539
    7. ' ' → logprob: -19.12747573852539
    8. ')' → logprob: -19.25247573852539
    9. ' ' → logprob: -19.25247573852539
    10. ')is' → logprob: -19.37747573852539

Token 222: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -1.0280383548888494e-06
    2. 'possible' → logprob: -13.875000953674316
    3. ' possible' → logprob: -17.500001907348633
    4. '_' → logprob: -18.125001907348633
    5. 'Possible' → logprob: -18.875001907348633
    6. '```' → logprob: -19.250001907348633
    7. '_present' → logprob: -20.500001907348633
    8. '_correct' → logprob: -20.625001907348633
    9. '_available' → logprob: -21.000001907348633
    10. '_per' → logprob: -21.000001907348633

Token 223: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.750001907348633
    3. ' (' → logprob: -14.625001907348633
    4. ' area' → logprob: -19.625001907348633
    5. 'area' → logprob: -19.625001907348633
    6. '(
' → logprob: -20.000001907348633
    7. '(amount' → logprob: -21.125001907348633
    8. '(angle' → logprob: -21.500001907348633
    9. '```' → logprob: -21.500001907348633
    10. '(article' → logprob: -21.875001907348633

Token 224: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01419159211218357
    2. '):
' → logprob: -4.264191627502441
    3. ':' → logprob: -10.889191627502441
    4. '   ' → logprob: -12.514191627502441
    5. '):
' → logprob: -12.514191627502441
    6. ')' → logprob: -13.389191627502441
    7. ' ):' → logprob: -15.264191627502441
    8. ':
' → logprob: -16.389190673828125
    9. '():' → logprob: -16.389190673828125
    10. '():
' → logprob: -17.264190673828125

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017398154886905104
    2. ':
' → logprob: -9.375173568725586
    3. '   ' → logprob: -10.750173568725586
    4. 'count' → logprob: -10.875173568725586
    5. ':' → logprob: -11.000173568725586
    6. '
' → logprob: -11.375173568725586
    7. '):
' → logprob: -11.875173568725586
    8. ' count' → logprob: -12.500173568725586
    9. ',' → logprob: -12.875173568725586
    10. '[count' → logprob: -13.625173568725586

Token 226: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.47656887769699097
    2. '   ' → logprob: -1.2265689373016357
    3. ' count' → logprob: -2.4765689373016357
    4. '       ' → logprob: -6.351568698883057
    5. '	count' → logprob: -11.476569175720215
    6. ' ' → logprob: -13.351569175720215
    7. '
' → logprob: -13.476569175720215
    8. '  ' → logprob: -13.726569175720215
    9. '           ' → logprob: -13.851569175720215
    10. 'print' → logprob: -14.226569175720215

Token 227: '_wrong' (ID: 190896)
  Prédit: '_wrong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wrong' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.375000953674316
    3. '_wr' → logprob: -14.750000953674316
    4. 'wrong' → logprob: -17.500001907348633
    5. '_w' → logprob: -17.875001907348633
    6. '_WR' → logprob: -17.875001907348633
    7. '_possible' → logprob: -19.125001907348633
    8. '_in' → logprob: -19.500001907348633
    9. '```' → logprob: -19.625001907348633
    10. '_missing' → logprob: -19.625001907348633

Token 228: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4740851819515228
    2. ' +=' → logprob: -0.9740852117538452
    3. ']+=' → logprob: -12.599084854125977
    4. '=' → logprob: -13.599084854125977
    5. '+' → logprob: -13.724084854125977
    6. '```' → logprob: -14.099084854125977
    7. '   ' → logprob: -14.224084854125977
    8. '+="' → logprob: -14.849084854125977
    9. '+='' → logprob: -15.474084854125977
    10. ')' → logprob: -15.849084854125977

Token 229: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '<|end|>' → logprob: -21.125
    4. '```' → logprob: -21.25
    5. '۱' → logprob: -21.5
    6. '１' → logprob: -22.0
    7. '   ' → logprob: -22.5
    8. '१' → logprob: -22.625
    9. '১' → logprob: -22.75
    10. '١' → logprob: -24.5625

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. 'area' → logprob: -19.875
    4. '```' → logprob: -20.0
    5. '   ' → logprob: -20.375
    6. '<|end|>' → logprob: -20.625
    7. 'count' → logprob: -20.75
    8. '۱' → logprob: -21.3125
    9. 'n' → logprob: -21.9375
    10. '१' → logprob: -22.125

Token 231: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02334168180823326
    2. '
' → logprob: -3.773341655731201
    3. '<|end|>' → logprob: -9.52334213256836
    4. ' print' → logprob: -11.02334213256836
    5. '```' → logprob: -13.52334213256836
    6. '  
' → logprob: -13.52334213256836
    7. '
' → logprob: -14.02334213256836
    8. '

' → logprob: -14.39834213256836
    9. ')
' → logprob: -14.52334213256836
    10. '(print' → logprob: -14.77334213256836

Token 232: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.0
    3. '```' → logprob: -20.875
    4. 'for' → logprob: -22.625
    5. '
' → logprob: -23.5
    6. '#print' → logprob: -24.0
    7. '(print' → logprob: -24.625
    8. 'count' → logprob: -25.25
    9. '.print' → logprob: -25.75
    10. '	print' → logprob: -26.125

Token 233: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.04860859736800194
    2. '(' → logprob: -3.0486085414886475
    3. '(len' → logprob: -11.798608779907227
    4. '('' → logprob: -12.173608779907227
    5. '()' → logprob: -12.298608779907227
    6. '((' → logprob: -13.798608779907227
    7. '("("' → logprob: -14.298608779907227
    8. ' (' → logprob: -14.548608779907227
    9. 'count' → logprob: -15.048608779907227
    10. '(f' → logprob: -15.298608779907227

Token 234: '_wrong' (ID: 190896)
  Prédit: '_wrong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wrong' → logprob: -4.4849443838757e-06
    2. '_wr' → logprob: -12.625004768371582
    3. '_w' → logprob: -13.875004768371582
    4. '_WR' → logprob: -16.250003814697266
    5. ')_' → logprob: -17.375003814697266
    6. '_' → logprob: -17.500003814697266
    7. 'wrong' → logprob: -18.000003814697266
    8. '_)' → logprob: -19.375003814697266
    9. ')' → logprob: -19.625003814697266
    10. '_missing' → logprob: -19.750003814697266

Token 235: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.125000953674316
    3. ')`' → logprob: -16.375
    4. ')
' → logprob: -18.0
    5. '))' → logprob: -18.125
    6. '())' → logprob: -18.75
    7. '()' → logprob: -18.75
    8. '+' → logprob: -19.75
    9. '`)' → logprob: -19.875
    10. ')}' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 233
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 86
Tokens correctement prédits (top 10): 179
Précision stricte (1ère position): 33.91%
Précision adaptée (1ère position): 36.91%
Précision (top 10): 76.82%
================================================================================
