================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:01:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

while True:
    n = int(input())
    if n == 0:
        break
    best_p = None
    best_diff = float('inf')
    for _ in range(n):
        p, h, w = map(int, input().split())
        bmi = w / ((h / 100) ** 2)
        diff = abs(bmi - 22)
        if diff < best_diff or (diff == best_diff and p < best_p):
            best_diff = diff
            best_p = p
    print(best_p)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024047892075031996
    2. '.' → logprob: -7.002404689788818
    3. '()' → logprob: -7.127404689788818
    4. '(
' → logprob: -8.877405166625977
    5. '=' → logprob: -9.002405166625977
    6. ')' → logprob: -9.252405166625977
    7. '_' → logprob: -9.502405166625977
    8. ' (' → logprob: -10.002405166625977
    9. '```' → logprob: -10.127405166625977
    10. ' =' → logprob: -10.252405166625977

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06210717186331749
    2. 'sys' → logprob: -2.8121070861816406
    3. ' input' → logprob: -9.31210708618164
    4. 'input' → logprob: -10.06210708618164
    5. '	sys' → logprob: -12.93710708618164
    6. '=sys' → logprob: -13.18710708618164
    7. ' ' → logprob: -13.68710708618164
    8. '(sys' → logprob: -13.93710708618164
    9. ' system' → logprob: -16.18710708618164
    10. ' lambda' → logprob: -16.68710708618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010973773896694183
    2. ' .' → logprob: -4.885973930358887
    3. '.stdin' → logprob: -6.010973930358887
    4. '.import' → logprob: -7.885973930358887
    5. '.readline' → logprob: -8.885973930358887
    6. '.argv' → logprob: -9.135973930358887
    7. '.input' → logprob: -9.885973930358887
    8. '.stdout' → logprob: -10.135973930358887
    9. '.
' → logprob: -10.635973930358887
    10. '.exit' → logprob: -10.760973930358887

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04071744531393051
    2. '.' → logprob: -3.915717363357544
    3. '.read' → logprob: -3.915717363357544
    4. '.readlines' → logprob: -10.665717124938965
    5. 'read' → logprob: -11.040717124938965
    6. '.Read' → logprob: -12.665717124938965
    7. ' readline' → logprob: -13.915717124938965
    8. '.buffer' → logprob: -14.165717124938965
    9. '```' → logprob: -14.415717124938965
    10. '<|end|>' → logprob: -14.415717124938965

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1419765055179596
    2. '(' → logprob: -2.2669765949249268
    3. '()
' → logprob: -4.266976356506348
    4. '(
' → logprob: -4.766976356506348
    5. '().' → logprob: -6.516976356506348
    6. '
' → logprob: -6.516976356506348
    7. '()\' → logprob: -7.016976356506348
    8. '()

' → logprob: -7.391976356506348
    9. '\' → logprob: -7.516976356506348
    10. '\n' → logprob: -7.641976356506348

Token 9: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34941479563713074
    2. '(' → logprob: -1.2244148254394531
    3. '().' → logprob: -7.849414825439453
    4. '(
' → logprob: -8.599414825439453
    5. '()
' → logprob: -8.724414825439453
    6. '()

' → logprob: -10.474414825439453
    7. 'a' → logprob: -10.599414825439453
    8. ')' → logprob: -10.849414825439453
    9. '.' → logprob: -10.849414825439453
    10. '#' → logprob: -11.224414825439453

Token 10: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0004878723411820829
    2. ' True' → logprob: -8.12548828125
    3. '  ' → logprob: -9.25048828125
    4. ' (' → logprob: -9.87548828125
    5. '    ' → logprob: -12.12548828125
    6. '(' → logprob: -12.50048828125
    7. ' "' → logprob: -12.62548828125
    8. ' )' → logprob: -12.62548828125
    9. ''' → logprob: -13.00048828125
    10. '   ' → logprob: -13.12548828125

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005906827282160521
    2. '():' → logprob: -7.875590801239014
    3. ' :' → logprob: -8.625590324401855
    4. ':**' → logprob: -11.250590324401855
    5. '(:' → logprob: -12.125590324401855
    6. '):' → logprob: -13.375590324401855
    7. '   ' → logprob: -13.500590324401855
    8. ':
' → logprob: -13.625590324401855
    9. ':return' → logprob: -13.625590324401855
    10. '[:]' → logprob: -13.750590324401855

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056810617446899414
    2. '    
' → logprob: -4.05681037902832
    3. ' ' → logprob: -4.93181037902832
    4. ' 
' → logprob: -4.93181037902832
    5. '  
' → logprob: -4.93181037902832
    6. '    ' → logprob: -5.05681037902832
    7. '(' → logprob: -5.18181037902832
    8. '  ' → logprob: -7.30681037902832
    9. ':' → logprob: -7.68181037902832
    10. ' (' → logprob: -7.68181037902832

Token 13: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.24047908186912537
    2. 'line' → logprob: -1.8654791116714478
    3. 'data' → logprob: -3.365478992462158
    4. '   ' → logprob: -4.365478992462158
    5. 'user' → logprob: -4.990478992462158
    6. ' data' → logprob: -5.990478992462158
    7. ' user' → logprob: -6.740478992462158
    8. 'text' → logprob: -7.740478992462158
    9. 'command' → logprob: -8.990479469299316
    10. ' inp' → logprob: -9.115479469299316

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3190760314464569
    2. '=' → logprob: -1.3190760612487793
    3. ' ==' → logprob: -5.569076061248779
    4. ' ' → logprob: -6.569076061248779
    5. '==' → logprob: -8.569075584411621
    6. '=int' → logprob: -8.694075584411621
    7. ' :=' → logprob: -9.069075584411621
    8. '=input' → logprob: -10.319075584411621
    9. ':=' → logprob: -11.319075584411621
    10. ' =)' → logprob: -11.569075584411621

Token 15: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0046987533569336
    2. 'input' → logprob: -1.2546987533569336
    3. 'int' → logprob: -1.6296987533569336
    4. ' int' → logprob: -1.8796987533569336
    5. '=int' → logprob: -11.129698753356934
    6. '=input' → logprob: -11.129698753356934
    7. ' ' → logprob: -11.254698753356934
    8. '   ' → logprob: -13.129698753356934
    9. '(input' → logprob: -13.129698753356934
    10. 'n' → logprob: -13.254698753356934

Token 16: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005301942583173513
    2. '(' → logprob: -5.2553019523620605
    3. 'input' → logprob: -9.630301475524902
    4. ' (' → logprob: -13.505301475524902
    5. '(in' → logprob: -15.380301475524902
    6. '(
' → logprob: -15.380301475524902
    7. ' input' → logprob: -15.630301475524902
    8. '()' → logprob: -15.880301475524902
    9. '=input' → logprob: -16.50530242919922
    10. ',input' → logprob: -17.00530242919922

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007064273580908775
    2. '()))' → logprob: -5.007064342498779
    3. '()' → logprob: -8.257063865661621
    4. ')' → logprob: -10.257063865661621
    5. '().' → logprob: -10.507063865661621
    6. '())
' → logprob: -11.132063865661621
    7. ' ())' → logprob: -12.257063865661621
    8. '))' → logprob: -12.632063865661621
    9. '(' → logprob: -13.007063865661621
    10. '()))
' → logprob: -14.507063865661621

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029698768630623817
    2. '    
' → logprob: -4.529698848724365
    3. '<|end|>' → logprob: -4.904698848724365
    4. ' if' → logprob: -5.779698848724365
    5. '\n' → logprob: -6.279698848724365
    6. '    ' → logprob: -6.404698848724365
    7. '
' → logprob: -6.654698848724365
    8. ' ' → logprob: -7.029698848724365
    9. ')' → logprob: -7.529698848724365
    10. '  
' → logprob: -7.654698848724365

Token 19: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5972598791122437
    2. ' ' → logprob: -1.8472598791122437
    3. '   ' → logprob: -2.097259998321533
    4. '<|end|>' → logprob: -2.472259998321533
    5. '    ' → logprob: -3.222259998321533
    6. 'if' (adapté à ' if') → logprob: -3.597259998321533
    7. '\n' → logprob: -5.347259998321533
    8. '  ' → logprob: -5.722259998321533
    9. '    
' → logprob: -5.847259998321533
    10. ' 
' → logprob: -5.847259998321533

Token 20: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.006042085122317076
    2. ' not' → logprob: -5.131042003631592
    3. 'n' → logprob: -9.13104248046875
    4. ' ' → logprob: -12.75604248046875
    5. 'not' → logprob: -13.38104248046875
    6. '	n' → logprob: -14.63104248046875
    7. ' ' → logprob: -14.88104248046875
    8. ' н' → logprob: -18.13104248046875
    9. '	not' → logprob: -19.00604248046875
    10. '  ' → logprob: -19.75604248046875

Token 21: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011170546524226665
    2. '==' → logprob: -4.511170387268066
    3. ' <=' → logprob: -9.261170387268066
    4. ' <' → logprob: -11.386170387268066
    5. ')' → logprob: -12.511170387268066
    6. '<=' → logprob: -12.636170387268066
    7. ' ' → logprob: -12.886170387268066
    8. '=' → logprob: -13.511170387268066
    9. ')==' → logprob: -13.636170387268066
    10. '<' → logprob: -13.886170387268066

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02324605919420719
    2. '0' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.023245811462402
    4. '  ' → logprob: -16.27324676513672
    5. '   ' → logprob: -17.02324676513672
    6. '=' → logprob: -17.46074676513672
    7. ' EOF' → logprob: -17.58574676513672
    8. '    ' → logprob: -17.89824676513672
    9. '_' → logprob: -18.77324676513672
    10. 'EOF' → logprob: -18.83574676513672

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003362966235727072
    2. ' ' → logprob: -8.000336647033691
    3. '-' → logprob: -15.250336647033691
    4. '```' → logprob: -15.875336647033691
    5. '42' → logprob: -16.250335693359375
    6. '1' → logprob: -17.187835693359375
    7. 'EOF' → logprob: -17.250335693359375
    8. '   ' → logprob: -17.312835693359375
    9. '``' → logprob: -17.625335693359375
    10. '  ' → logprob: -17.750335693359375

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001499060745118186
    2. ':
' → logprob: -8.875149726867676
    3. '   ' → logprob: -12.125149726867676
    4. ' :' → logprob: -13.375149726867676
    5. ':return' → logprob: -13.875149726867676
    6. '	break' → logprob: -14.125149726867676
    7. ' break' → logprob: -14.500149726867676
    8. '       ' → logprob: -15.000149726867676
    9. '.' → logprob: -16.250150680541992
    10. '<|end|>' → logprob: -16.375150680541992

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007542393868789077
    2. '   ' → logprob: -7.375754356384277
    3. ' break' → logprob: -9.250754356384277
    4. '	break' → logprob: -11.000754356384277
    5. 'break' → logprob: -12.250754356384277
    6. '    ' → logprob: -12.750754356384277
    7. '     ' → logprob: -13.375754356384277
    8. '      ' → logprob: -13.500754356384277
    9. '<|end|>' → logprob: -14.375754356384277
    10. '    ' → logprob: -14.625754356384277

Token 26: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7117437124252319
    2. ' break' → logprob: -0.7117437124252319
    3. 'break' (adapté à ' break') → logprob: -4.2117438316345215
    4. '   ' → logprob: -6.2117438316345215
    5. '	break' → logprob: -6.4617438316345215
    6. '           ' → logprob: -11.711743354797363
    7. '_break' → logprob: -11.836743354797363
    8. '\n' → logprob: -12.086743354797363
    9. '```' → logprob: -12.461743354797363
    10. '-break' → logprob: -12.961743354797363

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14559952914714813
    2. '\n' → logprob: -2.645599603652954
    3. '    
' → logprob: -3.270599603652954
    4. ':' → logprob: -5.145599365234375
    5. '\' → logprob: -5.395599365234375
    6. '<|end|>' → logprob: -5.895599365234375
    7. ' 
' → logprob: -6.020599365234375
    8. '
' → logprob: -6.270599365234375
    9. ')' → logprob: -6.520599365234375
    10. '    ' → logprob: -6.645599365234375

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007839066907763481
    2. '    
' → logprob: -5.007839202880859
    3. '<|end|>' → logprob: -7.757839202880859
    4. 'print' → logprob: -8.50783920288086
    5. '[' → logprob: -9.13283920288086
    6. '    ' → logprob: -9.50783920288086
    7. '```' → logprob: -9.50783920288086
    8. ')' → logprob: -9.88283920288086
    9. '\n' → logprob: -10.25783920288086
    10. '\' → logprob: -10.75783920288086

Token 29: ' best' (ID: 1636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025682717561721802
    2. ' ' → logprob: -4.5256829261779785
    3. '    ' → logprob: -4.7756829261779785
    4. '    
' → logprob: -5.6506829261779785
    5. '[' → logprob: -7.1506829261779785
    6. 'print' → logprob: -8.15068244934082
    7. ')' → logprob: -8.52568244934082
    8. '  ' → logprob: -8.52568244934082
    9. 'n' → logprob: -8.77568244934082
    10. '```' → logprob: -8.90068244934082

Token 30: '_p' (ID: 1359)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7296571731567383
    2. '_score' → logprob: -0.7296571731567383
    3. ' =' → logprob: -4.979657173156738
    4. '=' → logprob: -4.979657173156738
    5. '_count' → logprob: -4.979657173156738
    6. '_sum' → logprob: -5.229657173156738
    7. '_s' → logprob: -6.729657173156738
    8. '_time' → logprob: -6.729657173156738
    9. '_length' → logprob: -7.229657173156738
    10. '_answer' → logprob: -7.354657173156738

Token 31: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7205203771591187
    2. 'er' → logprob: -1.3455203771591187
    3. 'ro' → logprob: -3.095520496368408
    4. '=' → logprob: -3.220520496368408
    5. ' =' → logprob: -3.595520496368408
    6. 'oint' → logprob: -4.095520496368408
    7. '_' → logprob: -4.220520496368408
    8. 'rice' → logprob: -4.345520496368408
    9. '_score' → logprob: -4.720520496368408
    10. 'rocess' → logprob: -4.720520496368408

Token 32: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.16083906590938568
    2. '0' → logprob: -2.910839080810547
    3. ' ' → logprob: -3.285839080810547
    4. 'None' → logprob: -3.285839080810547
    5. ' float' → logprob: -5.285839080810547
    6. ' n' → logprob: -6.035839080810547
    7. ' -' → logprob: -6.035839080810547
    8. '-' → logprob: -6.035839080810547
    9. ' []' → logprob: -6.410839080810547
    10. ' sys' → logprob: -6.535839080810547

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07773447036743164
    2. '<|end|>' → logprob: -2.7027344703674316
    3. '    
' → logprob: -5.952734470367432
    4. '
' → logprob: -6.202734470367432
    5. ' ' → logprob: -7.077734470367432
    6. '<|end|>' → logprob: -7.577734470367432
    7. '    ' → logprob: -7.702734470367432
    8. '  ' → logprob: -8.077733993530273
    9. ' 
' → logprob: -8.077733993530273
    10. ',' → logprob: -8.702733993530273

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018837232142686844
    2. '    
' → logprob: -5.0188374519348145
    3. '<|end|>' → logprob: -5.3938374519348145
    4. ' ' → logprob: -6.2688374519348145
    5. ' for' → logprob: -6.6438374519348145
    6. '  ' → logprob: -6.7688374519348145
    7. ' 
' → logprob: -6.8938374519348145
    8. '   
' → logprob: -7.5188374519348145
    9. '    ' → logprob: -7.5188374519348145
    10. ')' → logprob: -8.518836975097656

Token 35: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.045274779200553894
    2. ' best' → logprob: -3.6702747344970703
    3. 'max' → logprob: -4.79527473449707
    4. '   ' → logprob: -5.04527473449707
    5. 'for' → logprob: -6.17027473449707
    6. ' max' → logprob: -7.79527473449707
    7. 'b' → logprob: -7.79527473449707
    8. ' for' → logprob: -8.04527473449707
    9. '	best' → logprob: -8.92027473449707
    10. 'count' → logprob: -9.29527473449707

Token 36: '_diff' (ID: 41047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.329753577709198
    2. '_p' → logprob: -2.4547536373138428
    3. '_s' → logprob: -2.7047536373138428
    4. '_sum' → logprob: -3.2047536373138428
    5. '_d' → logprob: -4.079753398895264
    6. '_diff' → logprob: -4.329753398895264
    7. '_r' → logprob: -4.954753398895264
    8. '_score' → logprob: -4.954753398895264
    9. '_n' → logprob: -5.204753398895264
    10. '_i' → logprob: -5.454753398895264

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004660572856664658
    2. '=' → logprob: -5.379660606384277
    3. ' ' → logprob: -10.254660606384277
    4. '_' → logprob: -12.879660606384277
    5. ' =
' → logprob: -14.004660606384277
    6. ')' → logprob: -14.254660606384277
    7. ',' → logprob: -14.629660606384277
    8. '  ' → logprob: -15.504660606384277
    9. '   ' → logprob: -16.00465965270996
    10. ' =)' → logprob: -16.12965965270996

Token 38: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6926753520965576
    2. ' float' → logprob: -0.8176753520965576
    3. '10' → logprob: -3.1926753520965576
    4. ' None' → logprob: -4.567675590515137
    5. ' ' → logprob: -5.817675590515137
    6. '100' → logprob: -5.942675590515137
    7. 'None' → logprob: -6.942675590515137
    8. '1' → logprob: -8.817675590515137
    9. '999' → logprob: -9.567675590515137
    10. 'int' → logprob: -10.317675590515137

Token 39: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011615309631451964
    2. ''in' → logprob: -7.251161575317383
    3. ''s' → logprob: -8.751161575317383
    4. ''' → logprob: -8.876161575317383
    5. 'inf' → logprob: -9.001161575317383
    6. ''n' → logprob: -12.501161575317383
    7. ''i' → logprob: -12.626161575317383
    8. '(' → logprob: -13.126161575317383
    9. ''a' → logprob: -13.376161575317383
    10. ''d' → logprob: -13.376161575317383

Token 40: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00010926496179308742
    2. ''in' → logprob: -9.375109672546387
    3. '-inf' → logprob: -10.875109672546387
    4. 'in' → logprob: -13.000109672546387
    5. ''' → logprob: -13.875109672546387
    6. 'info' → logprob: -14.250109672546387
    7. ''i' → logprob: -14.875109672546387
    8. '.inf' → logprob: -15.250109672546387
    9. '_inf' → logprob: -15.250109672546387
    10. ''s' → logprob: -16.12510871887207

Token 41: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039409202872775495
    2. ')
' → logprob: -8.750393867492676
    3. '')' → logprob: -9.125393867492676
    4. ' )' → logprob: -9.625393867492676
    5. '   ' → logprob: -9.750393867492676
    6. '')
' → logprob: -14.875393867492676
    7. ' )
' → logprob: -15.000393867492676
    8. '  ' → logprob: -15.125393867492676
    9. ' ' → logprob: -15.500393867492676
    10. ')
' → logprob: -15.625393867492676

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016850750893354416
    2. '    
' → logprob: -4.39185094833374
    3. '<|end|>' → logprob: -6.76685094833374
    4. '   
' → logprob: -7.51685094833374
    5. '
' → logprob: -7.51685094833374
    6. '\n' → logprob: -7.76685094833374
    7. ' 
' → logprob: -7.76685094833374
    8. '  
' → logprob: -7.89185094833374
    9. '  ' → logprob: -8.016850471496582
    10. ' ' → logprob: -8.641850471496582

Token 43: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17330503463745117
    2. ' for' → logprob: -2.673305034637451
    3. ' 
' → logprob: -3.298305034637451
    4. 'for' (adapté à ' for') → logprob: -3.673305034637451
    5. ' ' → logprob: -4.548305034637451
    6. '    
' → logprob: -4.673305034637451
    7. '```' → logprob: -6.673305034637451
    8. '   
' → logprob: -6.798305034637451
    9. '\n' → logprob: -6.923305034637451
    10. '  ' → logprob: -7.298305034637451

Token 44: ' _' (ID: 1175)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.935437798500061
    2. ' i' → logprob: -1.185437798500061
    3. 'p' → logprob: -1.935437798500061
    4. 'i' → logprob: -2.5604376792907715
    5. '_' → logprob: -3.8104376792907715
    6. 'a' → logprob: -4.5604376792907715
    7. ' _' → logprob: -4.6854376792907715
    8. ' x' → logprob: -5.0604376792907715
    9. ' a' → logprob: -5.1854376792907715
    10. '_p' → logprob: -5.1854376792907715

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03420964255928993
    2. 'in' → logprob: -3.409209728240967
    3. 'n' → logprob: -8.909209251403809
    4. 'i' → logprob: -9.284209251403809
    5. ' i' → logprob: -9.409209251403809
    6. 'range' → logprob: -9.534209251403809
    7. ' ' → logprob: -9.784209251403809
    8. 'p' → logprob: -10.534209251403809
    9. 's' → logprob: -11.409209251403809
    10. 'import' → logprob: -11.534209251403809

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003198273479938507
    2. ' range' → logprob: -5.753198146820068
    3. '(range' → logprob: -11.753198623657227
    4. '	range' → logprob: -12.003198623657227
    5. '[' → logprob: -13.878198623657227
    6. ')' → logprob: -14.003198623657227
    7. 'rang' → logprob: -14.003198623657227
    8. '<|end|>' → logprob: -14.378198623657227
    9. '_range' → logprob: -14.503198623657227
    10. 'Range' → logprob: -15.003198623657227

Token 47: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.027563301846385002
    2. '(' → logprob: -3.7775633335113525
    3. ' (' → logprob: -5.527563095092773
    4. ' n' → logprob: -8.277563095092773
    5. '(range' → logprob: -10.277563095092773
    6. 'n' → logprob: -10.777563095092773
    7. ' range' → logprob: -11.652563095092773
    8. '()' → logprob: -12.277563095092773
    9. '(s' → logprob: -12.777563095092773
    10. ' ' → logprob: -12.902563095092773

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028781031724065542
    2. ')' → logprob: -6.002878189086914
    3. '):
' → logprob: -8.377878189086914
    4. '   ' → logprob: -9.377878189086914
    5. ' ):' → logprob: -10.127878189086914
    6. ':' → logprob: -10.377878189086914
    7. ',' → logprob: -11.877878189086914
    8. '):
' → logprob: -13.377878189086914
    9. '+' → logprob: -13.627878189086914
    10. ' )' → logprob: -13.752878189086914

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038083845283836126
    2. ' ' → logprob: -6.753808498382568
    3. '   ' → logprob: -6.878808498382568
    4. '<|end|>' → logprob: -7.128808498382568
    5. '    ' → logprob: -7.628808498382568
    6. '	   ' → logprob: -10.12880802154541
    7. '        
' → logprob: -10.25380802154541
    8. '  ' → logprob: -10.37880802154541
    9. '     ' → logprob: -10.62880802154541
    10. '      ' → logprob: -10.75380802154541

Token 50: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.42399489879608154
    2. '       ' → logprob: -1.9239948987960815
    3. 'p' (adapté à ' p') → logprob: -2.423995018005371
    4. ' line' → logprob: -2.673995018005371
    5. '   ' → logprob: -4.673995018005371
    6. ' x' → logprob: -5.048995018005371
    7. ' price' → logprob: -5.173995018005371
    8. 'a' → logprob: -6.048995018005371
    9. ' a' → logprob: -6.173995018005371
    10. 'x' → logprob: -6.173995018005371

Token 51: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3061366379261017
    2. ',' → logprob: -1.6811366081237793
    3. '=' → logprob: -3.4311366081237793
    4. ' ,' → logprob: -4.306136608123779
    5. 'r' → logprob: -4.681136608123779
    6. 'rice' → logprob: -4.681136608123779
    7. ' ' → logprob: -4.806136608123779
    8. ',r' → logprob: -6.556136608123779
    9. '   ' → logprob: -7.306136608123779
    10. '=int' → logprob: -7.431136608123779

Token 52: ' h' (ID: 312)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1029722690582275
    2. 'd' → logprob: -2.1029722690582275
    3. 's' → logprob: -2.2279722690582275
    4. 'k' → logprob: -2.8529722690582275
    5. 'h' → logprob: -2.9779722690582275
    6. 'w' → logprob: -3.1029722690582275
    7. 'c' → logprob: -3.1029722690582275
    8. 'v' → logprob: -3.2279722690582275
    9. 'l' → logprob: -3.4779722690582275
    10. 'a' → logprob: -3.6029722690582275

Token 53: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08933614939451218
    2. '=' → logprob: -2.4643361568450928
    3. 'p' → logprob: -8.839336395263672
    4. ',' → logprob: -9.214336395263672
    5. ' ' → logprob: -9.464336395263672
    6. ')' → logprob: -10.089336395263672
    7. '=int' → logprob: -12.714336395263672
    8. '   ' → logprob: -13.089336395263672
    9. '    ' → logprob: -13.089336395263672
    10. 'orizontal' → logprob: -13.214336395263672

Token 54: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.5125973224639893
    2. 'd' → logprob: -2.0125973224639893
    3. 's' → logprob: -2.0125973224639893
    4. 'a' → logprob: -2.6375973224639893
    5. 'f' → logprob: -2.8875973224639893
    6. 'm' → logprob: -3.0125973224639893
    7. 'c' → logprob: -3.1375973224639893
    8. '=' → logprob: -3.2625973224639893
    9. 't' → logprob: -3.3875973224639893
    10. 'l' → logprob: -3.3875973224639893

Token 55: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931794881820679
    2. ' =' → logprob: -0.6931794881820679
    3. ',' → logprob: -10.9431791305542
    4. ' ' → logprob: -12.1931791305542
    5. '=input' → logprob: -12.4431791305542
    6. ')' → logprob: -12.9431791305542
    7. '   ' → logprob: -13.9431791305542
    8. '    ' → logprob: -14.1931791305542
    9. '=line' → logprob: -14.5681791305542
    10. 'p' → logprob: -15.3181791305542

Token 56: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12718543410301208
    2. 'map' → logprob: -2.127185344696045
    3. ' input' → logprob: -8.877185821533203
    4. ' ' → logprob: -10.002185821533203
    5. 'input' → logprob: -10.377185821533203
    6. '   ' → logprob: -10.877185821533203
    7. '	map' → logprob: -11.502185821533203
    8. ' list' → logprob: -12.627185821533203
    9. ' ' → logprob: -12.627185821533203
    10. '  ' → logprob: -13.252185821533203

Token 57: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012625250034034252
    2. '(' → logprob: -4.387625217437744
    3. '(input' → logprob: -10.012625694274902
    4. '(str' → logprob: -10.387625694274902
    5. '(lambda' → logprob: -11.012625694274902
    6. 'int' → logprob: -11.637625694274902
    7. '<int' → logprob: -12.262625694274902
    8. '(float' → logprob: -12.887625694274902
    9. '[int' → logprob: -13.262625694274902
    10. '(
' → logprob: -13.762625694274902

Token 58: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3891286849975586
    2. ',' → logprob: -1.1391286849975586
    3. '(input' → logprob: -6.389128684997559
    4. 'input' → logprob: -7.514128684997559
    5. '(' → logprob: -11.389128684997559
    6. ' ,' → logprob: -12.139128684997559
    7. ')' → logprob: -12.514128684997559
    8. ' input' → logprob: -12.514128684997559
    9. '[input' → logprob: -13.139128684997559
    10. '=input' → logprob: -14.139128684997559

Token 59: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.474081814289093
    2. ' input' → logprob: -0.974081814289093
    3. ')' → logprob: -13.099081993103027
    4. '	input' → logprob: -14.474081993103027
    5. '(input' → logprob: -14.599081993103027
    6. '=input' → logprob: -14.724081993103027
    7. ',input' → logprob: -14.849081993103027
    8. ' ' → logprob: -15.224081993103027
    9. '[input' → logprob: -15.849081993103027
    10. '<input' → logprob: -16.22408103942871

Token 60: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.080963092041202e-06
    2. '()' → logprob: -12.250004768371582
    3. ' ().' → logprob: -15.875004768371582
    4. ')' → logprob: -17.8750057220459
    5. '(' → logprob: -18.1250057220459
    6. '())' → logprob: -18.2500057220459
    7. '()
' → logprob: -18.3750057220459
    8. '.' → logprob: -19.5000057220459
    9. '   ' → logprob: -19.6250057220459
    10. '()

' → logprob: -19.8750057220459

Token 61: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007386347278952599
    2. 'strip' → logprob: -7.250738620758057
    3. 'rstrip' → logprob: -10.500739097595215
    4. ' split' → logprob: -13.875739097595215
    5. '(split' → logprob: -15.500739097595215
    6. 'spl' → logprob: -17.1257381439209
    7. '.split' → logprob: -18.6257381439209
    8. 'sp' → logprob: -19.6257381439209
    9. 'rs' → logprob: -19.7507381439209
    10. 's' → logprob: -20.3757381439209

Token 62: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004295638296753168
    2. '())' → logprob: -6.004295825958252
    3. '))' → logprob: -6.629295825958252
    4. '()' → logprob: -7.629295825958252
    5. ' )' → logprob: -12.629295349121094
    6. '()))' → logprob: -13.004295349121094
    7. ')
' → logprob: -13.254295349121094
    8. ')))' → logprob: -13.754295349121094
    9. '   ' → logprob: -14.879295349121094
    10. '`)' → logprob: -14.879295349121094

Token 63: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0663694143295288
    2. '<|end|>' → logprob: -1.0663694143295288
    3. ')' → logprob: -1.4413694143295288
    4. '   ' → logprob: -3.6913695335388184
    5. ' ' → logprob: -4.066369533538818
    6. ' 
' → logprob: -4.316369533538818
    7. '<|end|>' → logprob: -4.941369533538818
    8. '    
' → logprob: -5.441369533538818
    9. '  
' → logprob: -6.566369533538818
    10. ' )' → logprob: -6.816369533538818

Token 64: ' bmi' (ID: 186346)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diff' → logprob: -1.1146891117095947
    2. 'diff' → logprob: -1.4896891117095947
    3. '       ' → logprob: -2.1146891117095947
    4. ' if' → logprob: -2.2396891117095947
    5. '   ' → logprob: -2.6146891117095947
    6. ' d' → logprob: -3.8646891117095947
    7. 'd' → logprob: -3.9896891117095947
    8. '        
' → logprob: -4.489688873291016
    9. '```' → logprob: -4.489688873291016
    10. ' weight' → logprob: -4.739688873291016

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193148851394653
    2. '=' → logprob: -1.5019314289093018
    3. ' ' → logprob: -14.001931190490723
    4. 's' → logprob: -15.126931190490723
    5. '＝' → logprob: -15.376931190490723
    6. '=p' → logprob: -16.00193214416504
    7. ' =(' → logprob: -16.00193214416504
    8. 'w' → logprob: -16.25193214416504
    9. '_' → logprob: -16.25193214416504
    10. ')' → logprob: -16.37693214416504

Token 66: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1336899697780609
    2. ' w' → logprob: -2.2586898803710938
    3. 'h' → logprob: -4.508689880371094
    4. 'p' → logprob: -5.383689880371094
    5. ' h' → logprob: -6.008689880371094
    6. ' p' → logprob: -6.258689880371094
    7. '100' → logprob: -8.633689880371094
    8. ' ' → logprob: -8.633689880371094
    9. '(w' → logprob: -9.508689880371094
    10. '   ' → logprob: -9.883689880371094

Token 67: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.015437652356922626
    2. ' /' → logprob: -4.265437602996826
    3. '/(' → logprob: -7.140437602996826
    4. '/h' → logprob: -8.390438079833984
    5. '/p' → logprob: -8.890438079833984
    6. '*' → logprob: -9.265438079833984
    7. 'p' → logprob: -13.265438079833984
    8. 'h' → logprob: -13.515438079833984
    9. '(' → logprob: -13.640438079833984
    10. '/
' → logprob: -13.640438079833984

Token 68: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.20231319963932037
    2. '(h' → logprob: -1.7023131847381592
    3. '(' → logprob: -7.202313423156738
    4. ' ((' → logprob: -9.577313423156738
    5. 'h' → logprob: -10.327313423156738
    6. '(p' → logprob: -10.702313423156738
    7. ' (' → logprob: -11.327313423156738
    8. '(w' → logprob: -11.702313423156738
    9. '(((' → logprob: -12.452313423156738
    10. '(m' → logprob: -13.952313423156738

Token 69: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01839328743517399
    2. '(h' → logprob: -4.018393516540527
    3. '(' → logprob: -9.393393516540527
    4. ' (' → logprob: -9.643393516540527
    5. ' h' → logprob: -10.893393516540527
    6. '((' → logprob: -10.893393516540527
    7. '   ' → logprob: -11.018393516540527
    8. '1' → logprob: -11.768393516540527
    9. '0' → logprob: -12.143393516540527
    10. ' ' → logprob: -12.268393516540527

Token 70: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.14278273284435272
    2. ' /' → logprob: -2.017782688140869
    3. '*' → logprob: -9.767783164978027
    4. '   ' → logprob: -10.642783164978027
    5. ' *' → logprob: -11.392783164978027
    6. ' ' → logprob: -12.892783164978027
    7. ' ' → logprob: -13.017783164978027
    8. ')' → logprob: -13.267783164978027
    9. '100' → logprob: -13.392783164978027
    10. '2' → logprob: -13.642783164978027

Token 71: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.061982475221157074
    2. ' ' → logprob: -2.8119823932647705
    3. '10' → logprob: -11.686982154846191
    4. '1' → logprob: -13.186982154846191
    5. '   ' → logprob: -13.561982154846191
    6. '  ' → logprob: -14.186982154846191
    7. '

' → logprob: -14.999482154846191
    8. ')' → logprob: -15.186982154846191
    9. '200' → logprob: -15.624482154846191
    10. '```' → logprob: -15.624482154846191

Token 72: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -8.125210297293961e-05
    2. ' ' → logprob: -9.875081062316895
    3. '10' → logprob: -11.000081062316895
    4. '1' → logprob: -11.500081062316895
    5. '   ' → logprob: -13.875081062316895
    6. '  ' → logprob: -14.250081062316895
    7. '１００' → logprob: -16.00008201599121
    8. '2' → logprob: -16.25008201599121
    9. '3' → logprob: -16.25008201599121
    10. '

' → logprob: -16.37508201599121

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023305227980017662
    2. ')**' → logprob: -3.7733051776885986
    3. ' )' → logprob: -9.77330493927002
    4. '.' → logprob: -14.02330493927002
    5. '   ' → logprob: -14.89830493927002
    6. ')*' → logprob: -15.39830493927002
    7. ')*(' → logprob: -15.39830493927002
    8. ')`' → logprob: -15.39830493927002
    9. '）' → logprob: -15.77330493927002
    10. '))' → logprob: -16.023305892944336

Token 74: ' **' (ID: 6240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14288432896137238
    2. ')**' → logprob: -2.0178842544555664
    3. ' )' → logprob: -8.517884254455566
    4. '**' → logprob: -12.517884254455566
    5. '2' → logprob: -13.767884254455566
    6. '**)' → logprob: -13.892884254455566
    7. '）' → logprob: -14.267884254455566
    8. '*' → logprob: -14.517884254455566
    9. ')*' → logprob: -14.892884254455566
    10. ' **' → logprob: -15.017884254455566

Token 75: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00036025288864038885
    2. ' ' → logprob: -8.000360488891602
    3. '²' → logprob: -11.875360488891602
    4. '22' → logprob: -12.125360488891602
    5. ')' → logprob: -12.812860488891602
    6. '  ' → logprob: -13.875360488891602
    7. '۲' → logprob: -14.250360488891602
    8. '23' → logprob: -14.312860488891602
    9. '```' → logprob: -14.375360488891602
    10. '   ' → logprob: -14.375360488891602

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.023293538717553e-05
    2. ' ' → logprob: -10.625030517578125
    3. '²' → logprob: -12.625030517578125
    4. '22' → logprob: -14.500030517578125
    5. '۲' → logprob: -15.187530517578125
    6. '२' → logprob: -15.562530517578125
    7. '   ' → logprob: -15.937530517578125
    8. '  ' → logprob: -15.937530517578125
    9. '```' → logprob: -16.062530517578125
    10. '٢' → logprob: -16.125030517578125

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005156196653842926
    2. ')
' → logprob: -5.38015604019165
    3. ' )' → logprob: -7.63015604019165
    4. ' )
' → logprob: -11.130156517028809
    5. ')

' → logprob: -11.630156517028809
    6. ')
' → logprob: -11.630156517028809
    7. '   ' → logprob: -12.005156517028809
    8. '       ' → logprob: -12.005156517028809
    9. ' ' → logprob: -13.380156517028809
    10. '))' → logprob: -14.380156517028809

Token 78: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8101791739463806
    2. '<|end|>' → logprob: -0.9351791739463806
    3. ' ' → logprob: -2.0601792335510254
    4. ' 
' → logprob: -4.435179233551025
    5. ' if' → logprob: -5.060179233551025
    6. '<|end|>' → logprob: -5.810179233551025
    7. '    
' → logprob: -5.935179233551025
    8. ')' → logprob: -6.185179233551025
    9. '    ' → logprob: -6.185179233551025
    10. '
' → logprob: -6.310179233551025

Token 79: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.04779034107923508
    2. ' diff' → logprob: -3.422790288925171
    3. 'if' → logprob: -5.04779052734375
    4. '       ' → logprob: -5.92279052734375
    5. ' if' → logprob: -6.17279052734375
    6. '   ' → logprob: -6.42279052734375
    7. 'd' → logprob: -7.17279052734375
    8. '```' → logprob: -8.67279052734375
    9. '	diff' → logprob: -9.67279052734375
    10. '    ' → logprob: -9.92279052734375

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193408131599426
    2. '=' → logprob: -1.5019340515136719
    3. ' ' → logprob: -13.001934051513672
    4. '_' → logprob: -13.626934051513672
    5. '   ' → logprob: -14.626934051513672
    6. '    ' → logprob: -15.126934051513672
    7. '	' → logprob: -16.001934051513672
    8. '.' → logprob: -16.751934051513672
    9. '＝' → logprob: -16.751934051513672
    10. ',' → logprob: -17.126934051513672

Token 81: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.38689014315605164
    2. 'abs' → logprob: -1.136890172958374
    3. 'b' → logprob: -12.261890411376953
    4. '       ' → logprob: -12.636890411376953
    5. '   ' → logprob: -12.886890411376953
    6. '(abs' → logprob: -13.136890411376953
    7. '    ' → logprob: -13.386890411376953
    8. ' p' → logprob: -14.011890411376953
    9. ' bmi' → logprob: -14.011890411376953
    10. ' ' → logprob: -14.136890411376953

Token 82: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.09488264471292496
    2. '(' → logprob: -2.7198827266693115
    3. '(p' → logprob: -3.7198827266693115
    4. '(best' → logprob: -7.969882488250732
    5. ' (' → logprob: -10.46988296508789
    6. 'b' → logprob: -12.46988296508789
    7. '(s' → logprob: -12.84488296508789
    8. '(bp' → logprob: -12.84488296508789
    9. '(i' → logprob: -13.21988296508789
    10. '(m' → logprob: -13.21988296508789

Token 83: 'mi' (ID: 3900)
  Prédit: 'mi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mi' → logprob: -0.014455408789217472
    2. 'm' → logprob: -4.514455318450928
    3. 'est' → logprob: -5.889455318450928
    4. '       ' → logprob: -8.764455795288086
    5. 'MI' → logprob: -9.639455795288086
    6. '   ' → logprob: -9.889455795288086
    7. '_m' → logprob: -10.014455795288086
    8. 'st' → logprob: -10.764455795288086
    9. '           ' → logprob: -10.889455795288086
    10. 'pi' → logprob: -11.514455795288086

Token 84: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6335141062736511
    2. ' -' → logprob: -0.7585141062736511
    3. ' ' → logprob: -7.383513927459717
    4. '0' → logprob: -10.008514404296875
    5. '1' → logprob: -10.133514404296875
    6. '   ' → logprob: -10.133514404296875
    7. ')' → logprob: -10.508514404296875
    8. '5' → logprob: -11.508514404296875
    9. '100' → logprob: -11.758514404296875
    10. '2' → logprob: -11.821014404296875

Token 85: ' ' (ID: 220)
  Prédit: '22'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.005878194235265255
    2. ' ' → logprob: -5.88087797164917
    3. '20' → logprob: -6.88087797164917
    4. '23' → logprob: -7.00587797164917
    5. '21' → logprob: -7.25587797164917
    6. '25' → logprob: -8.130878448486328
    7. '2' → logprob: -9.505878448486328
    8. '24' → logprob: -11.380878448486328
    9. '   ' → logprob: -11.380878448486328
    10. '	' → logprob: -12.193378448486328

Token 86: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.0005809116992168128
    2. '20' → logprob: -8.250580787658691
    3. '21' → logprob: -8.750580787658691
    4. '23' → logprob: -9.625580787658691
    5. '25' → logprob: -10.125580787658691
    6. '2' → logprob: -10.875580787658691
    7. 'best' → logprob: -12.000580787658691
    8. ' ' → logprob: -12.125580787658691
    9. '24' → logprob: -12.375580787658691
    10. 'b' → logprob: -12.625580787658691

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05526971444487572
    2. ')
' → logprob: -2.930269718170166
    3. '.' → logprob: -8.055269241333008
    4. ')
' → logprob: -10.805269241333008
    5. ')

' → logprob: -10.805269241333008
    6. ' )' → logprob: -11.805269241333008
    7. '0' → logprob: -12.555269241333008
    8. ' )
' → logprob: -12.680269241333008
    9. '.)' → logprob: -13.055269241333008
    10. '2' → logprob: -13.180269241333008

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10742127895355225
    2. '   ' → logprob: -2.607421398162842
    3. '
' → logprob: -3.732421398162842
    4. ' ' → logprob: -6.732421398162842
    5. '  
' → logprob: -6.857421398162842
    6. '        
' → logprob: -7.357421398162842
    7. '<|end|>' → logprob: -8.357420921325684
    8. '    
' → logprob: -8.607420921325684
    9. '	' → logprob: -8.857420921325684
    10. ' 
' → logprob: -8.982420921325684

Token 89: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.529975175857544
    2. 'if' (adapté à ' if') → logprob: -1.529975175857544
    3. '   ' → logprob: -2.279975175857544
    4. ' if' → logprob: -2.529975175857544
    5. '	if' → logprob: -5.654974937438965
    6. ' ' → logprob: -6.154974937438965
    7. '        
' → logprob: -6.279974937438965
    8. '
' → logprob: -6.404974937438965
    9. ' 
' → logprob: -7.154974937438965
    10. '    
' → logprob: -7.529974937438965

Token 90: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.007377554662525654
    2. 'diff' → logprob: -5.132377624511719
    3. ' best' → logprob: -6.882377624511719
    4. ' ' → logprob: -8.507377624511719
    5. '	diff' → logprob: -8.757377624511719
    6. ' ' → logprob: -10.882377624511719
    7. '(diff' → logprob: -10.882377624511719
    8. 'best' → logprob: -11.007377624511719
    9. '  ' → logprob: -12.882377624511719
    10. ' (' → logprob: -13.757377624511719

Token 91: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2255936712026596
    2. '<' → logprob: -1.6005936861038208
    3. ' ' → logprob: -8.725593566894531
    4. ' less' → logprob: -13.100593566894531
    5. 'a' → logprob: -13.225593566894531
    6. '  ' → logprob: -13.350593566894531
    7. '[' → logprob: -13.600593566894531
    8. '   ' → logprob: -13.600593566894531
    9. '0' → logprob: -13.725593566894531
    10. ')' → logprob: -13.725593566894531

Token 92: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.6931514739990234
    2. 'best' → logprob: -0.6931514739990234
    3. '	best' → logprob: -12.693151473999023
    4. '(best' → logprob: -14.318151473999023
    5. ' ' → logprob: -15.443151473999023
    6. '_best' → logprob: -15.693151473999023
    7. '.best' → logprob: -15.943151473999023
    8. 'b' → logprob: -16.568151473999023
    9. ' ' → logprob: -17.068151473999023
    10. '   ' → logprob: -17.068151473999023

Token 93: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -2.618001053633634e-05
    2. '_d' → logprob: -10.750025749206543
    3. '_di' → logprob: -13.000025749206543
    4. '_' → logprob: -13.750025749206543
    5. 'diff' → logprob: -13.875025749206543
    6. '_p' → logprob: -16.12502670288086
    7. '__' → logprob: -16.62502670288086
    8. ' _' → logprob: -16.75002670288086
    9. '_DIFF' → logprob: -17.50002670288086
    10. '_df' → logprob: -17.62502670288086

Token 94: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020693697035312653
    2. ':
' → logprob: -3.895693778991699
    3. '       ' → logprob: -10.0206937789917
    4. ' or' → logprob: -10.3956937789917
    5. '   ' → logprob: -10.5206937789917
    6. '):' → logprob: -10.5206937789917
    7. '):
' → logprob: -12.0206937789917
    8. ' :' → logprob: -12.1456937789917
    9. ':
' → logprob: -12.7706937789917
    10. ' and' → logprob: -13.2706937789917

Token 95: ' (' (ID: 350)
  Prédit: '(best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.4149070978164673
    2. ' (' → logprob: -1.1649070978164673
    3. '(diff' → logprob: -4.664906978607178
    4. '(p' → logprob: -5.164906978607178
    5. '(' → logprob: -5.289906978607178
    6. ' best' → logprob: -5.539906978607178
    7. 'best' → logprob: -6.039906978607178
    8. '(b' → logprob: -7.164906978607178
    9. '(abs' → logprob: -9.289907455444336
    10. 'diff' → logprob: -9.664907455444336

Token 96: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.16099019348621368
    2. ' diff' → logprob: -1.9109902381896973
    3. 'abs' → logprob: -8.035989761352539
    4. ' abs' → logprob: -8.410989761352539
    5. '(diff' → logprob: -9.410989761352539
    6. '	diff' → logprob: -9.535989761352539
    7. ' ' → logprob: -10.785989761352539
    8. '   ' → logprob: -11.160989761352539
    9. 'best' → logprob: -11.785989761352539
    10. '  ' → logprob: -12.410989761352539

Token 97: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1270933598279953
    2. '==' → logprob: -2.1270933151245117
    3. ' <=' → logprob: -9.377093315124512
    4. '=' → logprob: -10.127093315124512
    5. '<=' → logprob: -10.877093315124512
    6. ' ' → logprob: -11.502093315124512
    7. '==
' → logprob: -12.377093315124512
    8. ' =' → logprob: -12.502093315124512
    9. '```' → logprob: -14.689593315124512
    10. ')==' → logprob: -14.752093315124512

Token 98: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.3132820129394531
    2. ' best' → logprob: -1.3132820129394531
    3. '	best' → logprob: -11.063282012939453
    4. ' ' → logprob: -13.313282012939453
    5. '(best' → logprob: -13.313282012939453
    6. '0' → logprob: -14.313282012939453
    7. '_best' → logprob: -15.688282012939453
    8. 'Best' → logprob: -15.688282012939453
    9. '.best' → logprob: -15.938282012939453
    10. '   ' → logprob: -16.063282012939453

Token 99: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.0004996551433578134
    2. 'diff' → logprob: -7.625499725341797
    3. '_p' → logprob: -12.375499725341797
    4. '_d' → logprob: -13.125499725341797
    5. 'Diff' → logprob: -13.625499725341797
    6. ' diff' → logprob: -13.625499725341797
    7. '	diff' → logprob: -13.625499725341797
    8. '_DIFF' → logprob: -14.250499725341797
    9. '_' → logprob: -14.750499725341797
    10. '_token' → logprob: -15.500499725341797

Token 100: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.033654000610113144
    2. 'and' → logprob: -3.408653974533081
    3. '   ' → logprob: -12.53365421295166
    4. '    ' → logprob: -12.65865421295166
    5. ' ' → logprob: -14.53365421295166
    6. '	and' → logprob: -15.03365421295166
    7. '        ' → logprob: -15.65865421295166
    8. '       ' → logprob: -15.78365421295166
    9. '           ' → logprob: -16.408653259277344
    10. ')' → logprob: -16.783653259277344

Token 101: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08999089896678925
    2. ' p' → logprob: -2.4649908542633057
    3. '(p' → logprob: -7.089991092681885
    4. ' (' → logprob: -9.464990615844727
    5. '(' → logprob: -9.964990615844727
    6. 'best' → logprob: -9.964990615844727
    7. '(best' → logprob: -11.464990615844727
    8. ' ' → logprob: -11.589990615844727
    9. ' best' → logprob: -11.839990615844727
    10. '   ' → logprob: -11.964990615844727

Token 102: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4328794479370117
    2. '<' → logprob: -1.0578794479370117
    3. ' >' → logprob: -5.682879447937012
    4. '>' → logprob: -7.307879447937012
    5. ' ' → logprob: -9.557879447937012
    6. '<p' → logprob: -11.807879447937012
    7. '<|end|>' → logprob: -13.182879447937012
    8. ')' → logprob: -13.307879447937012
    9. '<int' → logprob: -13.557879447937012
    10. ' p' → logprob: -13.807879447937012

Token 103: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0040807779878377914
    2. ' best' → logprob: -5.504080772399902
    3. '	best' → logprob: -13.504080772399902
    4. 'p' → logprob: -14.129080772399902
    5. '(best' → logprob: -15.379080772399902
    6. ' p' → logprob: -17.25408172607422
    7. '_best' → logprob: -18.00408172607422
    8. '=' → logprob: -18.00408172607422
    9. '   ' → logprob: -18.00408172607422
    10. '.best' → logprob: -18.12908172607422

Token 104: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.625
    3. 'p' → logprob: -16.125
    4. ')' → logprob: -18.875
    5. ' _' → logprob: -19.0
    6. '<p' → logprob: -19.5
    7. '_pos' → logprob: -19.875
    8. ' p' → logprob: -20.0
    9. '<|end|>' → logprob: -20.25
    10. '_price' → logprob: -20.75

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08019628375768661
    2. '):
' → logprob: -2.5801963806152344
    3. ')' → logprob: -7.080196380615234
    4. '       ' → logprob: -9.205196380615234
    5. ' ):' → logprob: -9.330196380615234
    6. ' or' → logprob: -9.455196380615234
    7. '   ' → logprob: -9.580196380615234
    8. ' ):
' → logprob: -10.080196380615234
    9. ':' → logprob: -10.205196380615234
    10. '):
' → logprob: -10.580196380615234

Token 106: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07596327364444733
    2. ' best' → logprob: -3.200963258743286
    3. ':' → logprob: -4.200963497161865
    4. '           ' → logprob: -4.450963497161865
    5. 'best' → logprob: -6.450963497161865
    6. '(best' → logprob: -6.950963497161865
    7. ':
' → logprob: -7.450963497161865
    8. '):' → logprob: -7.450963497161865
    9. '	best' → logprob: -7.700963497161865
    10. '   ' → logprob: -8.450963020324707

Token 107: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.16058306396007538
    2. 'best' (adapté à ' best') → logprob: -1.9105830192565918
    3. '           ' → logprob: -8.03558349609375
    4. '       ' → logprob: -11.16058349609375
    5. '	best' → logprob: -11.28558349609375
    6. '(best' → logprob: -13.28558349609375
    7. '               ' → logprob: -13.41058349609375
    8. '_best' → logprob: -13.53558349609375
    9. '            ' → logprob: -13.66058349609375
    10. '   ' → logprob: -13.66058349609375

Token 108: '_diff' (ID: 41047)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0013294065138325095
    2. '_diff' → logprob: -6.62632942199707
    3. '_' → logprob: -13.75132942199707
    4. 'p' → logprob: -14.50132942199707
    5. '_best' → logprob: -14.50132942199707
    6. '_d' → logprob: -14.75132942199707
    7. 'diff' → logprob: -15.25132942199707
    8. ' _' → logprob: -16.37632942199707
    9. '_prob' → logprob: -16.50132942199707
    10. '_difference' → logprob: -16.62632942199707

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014188071712851524
    2. '=' → logprob: -4.264188289642334
    3. ',' → logprob: -11.014187812805176
    4. ' ' → logprob: -11.889187812805176
    5. ' ,' → logprob: -15.264187812805176
    6. '<|end|>' → logprob: -15.514187812805176
    7. ' =)' → logprob: -15.514187812805176
    8. ')' → logprob: -15.889187812805176
    9. ' =
' → logprob: -16.014188766479492
    10. '.' → logprob: -17.014188766479492

Token 110: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.048591118305921555
    2. ' diff' → logprob: -3.048591136932373
    3. '	diff' → logprob: -12.548590660095215
    4. '           ' → logprob: -16.17359161376953
    5. '(diff' → logprob: -16.67359161376953
    6. 'difference' → logprob: -18.67359161376953
    7. 'dif' → logprob: -18.92359161376953
    8. 'd' → logprob: -18.92359161376953
    9. '.diff' → logprob: -18.92359161376953
    10. '_diff' → logprob: -19.17359161376953

Token 111: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049518782645463943
    2. ' best' → logprob: -3.0495188236236572
    3. ' 
' → logprob: -8.549518585205078
    4. 'best' → logprob: -8.799518585205078
    5. '            ' → logprob: -8.924518585205078
    6. '       ' → logprob: -9.424518585205078
    7. '	best' → logprob: -9.424518585205078
    8. '   ' → logprob: -9.549518585205078
    9. ' ' → logprob: -9.924518585205078
    10. ',' → logprob: -10.299518585205078

Token 112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023805202916264534
    2. ' best' → logprob: -3.7738051414489746
    3. 'best' → logprob: -8.273805618286133
    4. '   ' → logprob: -8.523805618286133
    5. '	best' → logprob: -10.398805618286133
    6. ' 
' → logprob: -11.273805618286133
    7. '            ' → logprob: -11.773805618286133
    8. '       ' → logprob: -11.773805618286133
    9. '    ' → logprob: -12.023805618286133
    10. ',' → logprob: -12.273805618286133

Token 113: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.011048642918467522
    2. ' best' → logprob: -4.511048793792725
    3. '           ' → logprob: -14.636048316955566
    4. '	best' → logprob: -15.511048316955566
    5. 'p' → logprob: -16.261049270629883
    6. '(best' → logprob: -17.386049270629883
    7. '_best' → logprob: -18.261049270629883
    8. '   ' → logprob: -18.636049270629883
    9. 'Best' → logprob: -18.636049270629883
    10. ' p' → logprob: -18.761049270629883

Token 114: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. 'p' → logprob: -18.625
    4. ' _' → logprob: -18.625
    5. '_ps' → logprob: -19.625
    6. '\' → logprob: -20.125
    7. '_pred' → logprob: -20.75
    8. '```' → logprob: -20.75
    9. '_s' → logprob: -20.875
    10. '=' → logprob: -21.25

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143458247184753
    2. '=' → logprob: -1.70143461227417
    3. '=p' → logprob: -10.951434135437012
    4. ' ' → logprob: -13.201434135437012
    5. ' p' → logprob: -13.826434135437012
    6. ',' → logprob: -15.076434135437012
    7. '＝' → logprob: -15.451434135437012
    8. 'p' → logprob: -15.701434135437012
    9. '<|end|>' → logprob: -15.701434135437012
    10. ')' → logprob: -16.826435089111328

Token 116: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0024756586644798517
    2. ' p' → logprob: -6.002475738525391
    3. '_p' → logprob: -19.50247573852539
    4. '<p' → logprob: -20.12747573852539
    5. '	p' → logprob: -20.25247573852539
    6. ' ' → logprob: -21.37747573852539
    7. '$p' → logprob: -21.37747573852539
    8. '(p' → logprob: -21.87747573852539
    9. ''p' → logprob: -22.00247573852539
    10. '*p' → logprob: -22.25247573852539

Token 117: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43552300333976746
    2. 'print' → logprob: -1.6855230331420898
    3. '   ' → logprob: -2.06052303314209
    4. '<|end|>' → logprob: -4.31052303314209
    5. ')' → logprob: -4.68552303314209
    6. '    
' → logprob: -4.81052303314209
    7. '\n' → logprob: -5.06052303314209
    8. '  
' → logprob: -6.68552303314209
    9. ' print' → logprob: -7.31052303314209
    10. '' → logprob: -8.68552303314209

Token 118: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05909796804189682
    2. ')' → logprob: -3.5590980052948
    3. '   ' → logprob: -3.6840980052948
    4. '<|end|>' → logprob: -6.434097766876221
    5. '
' → logprob: -6.809097766876221
    6. ' print' → logprob: -7.559097766876221
    7. '    
' → logprob: -8.309098243713379
    8. ')
' → logprob: -9.184098243713379
    9. '#' → logprob: -10.309098243713379
    10. '```' → logprob: -10.434098243713379

Token 119: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00020425561524461955
    2. '   ' → logprob: -8.750204086303711
    3. ' print' → logprob: -10.000204086303711
    4. '    
' → logprob: -16.00020408630371
    5. '
' → logprob: -16.50020408630371
    6. '```' → logprob: -16.62520408630371
    7. ')' → logprob: -17.00020408630371
    8. '(print' → logprob: -18.12520408630371
    9. '	print' → logprob: -18.50020408630371
    10. ')
' → logprob: -19.25020408630371

Token 120: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -3.225939872208983e-05
    2. '(' → logprob: -10.375032424926758
    3. 'best' → logprob: -14.500032424926758
    4. '(f' → logprob: -15.000032424926758
    5. '(b' → logprob: -16.250032424926758
    6. '('' → logprob: -17.625032424926758
    7. '()' → logprob: -17.625032424926758
    8. ' best' → logprob: -18.625032424926758
    9. '	best' → logprob: -19.125032424926758
    10. ' (' → logprob: -19.125032424926758

Token 121: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.500000953674316
    3. ' _' → logprob: -15.750000953674316
    4. ')_' → logprob: -16.5
    5. ')' → logprob: -16.625
    6. '_best' → logprob: -17.125
    7. 'p' → logprob: -18.375
    8. '"_' → logprob: -18.5
    9. '._' → logprob: -18.875
    10. '\' → logprob: -19.25

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.625000953674316
    4. ')`' → logprob: -17.875
    5. '')' → logprob: -18.125
    6. '))' → logprob: -18.125
    7. ')}' → logprob: -19.75
    8. '`)' → logprob: -19.75
    9. ')

' → logprob: -19.75
    10. '")' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 120
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 107
Précision stricte (1ère position): 47.50%
Précision adaptée (1ère position): 50.83%
Précision (top 10): 89.17%
================================================================================
