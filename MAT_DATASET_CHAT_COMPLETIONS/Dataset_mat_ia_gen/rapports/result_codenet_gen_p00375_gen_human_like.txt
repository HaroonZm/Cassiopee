================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
F = int(input())
C = (F - 30) // 2
print(C)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'F' (ID: 37)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007923588855192065
    2. ''' → logprob: -7.500792503356934
    3. '('' → logprob: -9.250792503356934
    4. 'F' → logprob: -9.875792503356934
    5. ' (' → logprob: -11.000792503356934
    6. '_' → logprob: -11.625792503356934
    7. '(
' → logprob: -11.750792503356934
    8. '"' → logprob: -11.875792503356934
    9. '[' → logprob: -11.875792503356934
    10. ')' → logprob: -12.125792503356934

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06083887442946434
    2. ')' → logprob: -2.9358389377593994
    3. '()' → logprob: -5.43583869934082
    4. '(
' → logprob: -7.68583869934082
    5. '())' → logprob: -8.31083869934082
    6. '('' → logprob: -8.93583869934082
    7. '```' → logprob: -9.31083869934082
    8. ''' → logprob: -9.43583869934082
    9. '(

' → logprob: -9.81083869934082
    10. '("("' → logprob: -9.81083869934082

Token 5: 'C' (ID: 34)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.017235517501831
    2. '*' → logprob: -1.517235517501831
    3. '%' → logprob: -1.767235517501831
    4. 'if' → logprob: -2.017235517501831
    5. ')' → logprob: -3.892235517501831
    6. 's' → logprob: -4.01723575592041
    7. '#' → logprob: -4.26723575592041
    8. '>' → logprob: -4.76723575592041
    9. '\n' → logprob: -4.76723575592041
    10. 'i' → logprob: -5.01723575592041

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2959398627281189
    2. '+' → logprob: -2.2959399223327637
    3. '*' → logprob: -2.7959399223327637
    4. ' =' → logprob: -2.7959399223327637
    5. '/' → logprob: -4.795939922332764
    6. '_' → logprob: -5.170939922332764
    7. '(' → logprob: -6.045939922332764
    8. '.' → logprob: -6.170939922332764
    9. '-' → logprob: -6.295939922332764
    10. 'elsius' → logprob: -6.420939922332764

Token 7: ' (' (ID: 350)
  Prédit: ' F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' F' → logprob: -0.47646892070770264
    2. 'F' → logprob: -1.7264689207077026
    3. ' (' → logprob: -1.7264689207077026
    4. '(F' → logprob: -4.226469039916992
    5. '(' → logprob: -5.726469039916992
    6. ' ' → logprob: -5.976469039916992
    7. 'int' → logprob: -6.476469039916992
    8. '32' → logprob: -7.601469039916992
    9. '(int' → logprob: -8.726469039916992
    10. '5' → logprob: -8.851469039916992

Token 8: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.039664726704359055
    2. ' F' → logprob: -4.1646647453308105
    3. '5' → logprob: -4.4146647453308105
    4. '(F' → logprob: -5.1646647453308105
    5. ' (' → logprob: -6.0396647453308105
    6. ' ' → logprob: -6.5396647453308105
    7. '9' → logprob: -7.0396647453308105
    8. '(' → logprob: -7.2896647453308105
    9. ')' → logprob: -9.914664268493652
    10. '((' → logprob: -11.289664268493652

Token 9: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12705284357070923
    2. '-' → logprob: -2.1270527839660645
    3. ' ' → logprob: -9.627053260803223
    4. '```' → logprob: -10.502053260803223
    5. ' −' → logprob: -11.627053260803223
    6. '−' → logprob: -12.002053260803223
    7. ' ' → logprob: -12.127053260803223
    8. ')' → logprob: -13.127053260803223
    9. ' ```' → logprob: -13.252053260803223
    10. '"' → logprob: -13.502053260803223

Token 10: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.34859198331832886
    2. ' ' → logprob: -1.2235920429229736
    3. ')' → logprob: -10.223591804504395
    4. '	' → logprob: -10.598591804504395
    5. '-' → logprob: -11.348591804504395
    6. ' ' → logprob: -11.661091804504395
    7. '3' → logprob: -11.848591804504395
    8. '```' → logprob: -12.036091804504395
    9. '35' → logprob: -12.098591804504395
    10. '  ' → logprob: -12.223591804504395

Token 11: '30' (ID: 1130)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.002043913584202528
    2. ' ' → logprob: -6.252043724060059
    3. '3' → logprob: -9.502043724060059
    4. '320' → logprob: -12.127043724060059
    5. '  ' → logprob: -12.502043724060059
    6. ')' → logprob: -12.564543724060059
    7. '   ' → logprob: -12.814543724060059
    8. '-' → logprob: -12.939543724060059
    9. '33' → logprob: -13.064543724060059
    10. '31' → logprob: -13.127043724060059

Token 12: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062214601784944534
    2. ' )' → logprob: -2.8122146129608154
    3. '0' → logprob: -9.312214851379395
    4. '4' → logprob: -10.187214851379395
    5. '5' → logprob: -10.187214851379395
    6. ' ' → logprob: -11.062214851379395
    7. '1' → logprob: -11.187214851379395
    8. ')*' → logprob: -11.312214851379395
    9. '41' → logprob: -11.687214851379395
    10. '	' → logprob: -11.812214851379395

Token 13: ' //' (ID: 602)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -1.070176601409912
    2. ')' → logprob: -1.570176601409912
    3. ' *' → logprob: -2.070176601409912
    4. '/' → logprob: -2.445176601409912
    5. '*' → logprob: -2.445176601409912
    6. ' /' → logprob: -3.195176601409912
    7. '//' → logprob: -3.945176601409912
    8. '20' → logprob: -4.070176601409912
    9. '0' → logprob: -4.820176601409912
    10. ' ' → logprob: -4.945176601409912

Token 14: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.24179228907451e-05
    2. ' ' → logprob: -9.750061988830566
    3. '20' → logprob: -13.125061988830566
    4. '3' → logprob: -14.375061988830566
    5. '  ' → logprob: -14.625061988830566
    6. '6' → logprob: -14.875061988830566
    7. '   ' → logprob: -15.375061988830566
    8. '	' → logprob: -16.000062942504883
    9. '```' → logprob: -16.375062942504883
    10. '２' → logprob: -16.875062942504883

Token 15: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0445127372804563e-05
    2. '20' → logprob: -11.87501049041748
    3. ' ' → logprob: -13.75001049041748
    4. '3' → logprob: -14.00001049041748
    5. '6' → logprob: -15.37501049041748
    6. '  ' → logprob: -15.43751049041748
    7. '   ' → logprob: -15.75001049041748
    8. '``' → logprob: -15.75001049041748
    9. '```' → logprob: -16.187509536743164
    10. '

' → logprob: -16.187509536743164

Token 16: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 17: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014236374758183956
    2. ' print' → logprob: -4.6392364501953125
    3. ')' → logprob: -6.7642364501953125
    4. '
' → logprob: -6.8892364501953125
    5. '<|end|>' → logprob: -6.8892364501953125
    6. '#' → logprob: -7.2642364501953125
    7. ' ' → logprob: -9.139236450195312
    8. '\n' → logprob: -9.264236450195312
    9. '#print' → logprob: -9.389236450195312
    10. '```' → logprob: -10.014236450195312

Token 18: '(C' (ID: 5559)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011131414212286472
    2. '(C' → logprob: -4.511131286621094
    3. '('' → logprob: -10.511131286621094
    4. '((' → logprob: -10.761131286621094
    5. '(F' → logprob: -11.011131286621094
    6. '()' → logprob: -11.636131286621094
    7. '("("' → logprob: -12.511131286621094
    8. '(f' → logprob: -13.261131286621094
    9. '("' → logprob: -13.261131286621094
    10. '(`' → logprob: -14.011131286621094

Token 19: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. '))' → logprob: -12.000007629394531
    3. ' )' → logprob: -13.875007629394531
    4. ')`' → logprob: -15.625007629394531
    5. '')' → logprob: -16.12500762939453
    6. '`)' → logprob: -16.75000762939453
    7. '）' → logprob: -17.37500762939453
    8. ')))' → logprob: -18.25000762939453
    9. ')
' → logprob: -18.37500762939453
    10. '```' → logprob: -18.62500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 17
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 11
Précision stricte (1ère position): 35.29%
Précision adaptée (1ère position): 35.29%
Précision (top 10): 64.71%
================================================================================
