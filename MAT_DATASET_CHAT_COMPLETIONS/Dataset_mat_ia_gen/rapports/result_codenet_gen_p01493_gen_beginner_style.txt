================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
V = int(input())
graph = [input() for _ in range(V)]

visited = [False] * V

def dfs(u):
    stack = [u]
    count = 0
    visited[u] = True
    while stack:
        node = stack.pop()
        count += 1
        for v in range(V):
            if graph[node][v] == 'Y' and not visited[v]:
                visited[v] = True
                stack.append(v)
    return count

components = []
for i in range(V):
    if not visited[i]:
        c = dfs(i)
        components.append(c)

# nombre d'arêtes à ajouter pour connecter tous les composants = nombre_de_composants -1
edges_to_add = len(components) - 1

# si edges_to_add est impair => Taro gagne, sinon Hanako gagne
if edges_to_add % 2 == 1:
    print("Taro")
else:
    print("Hanako")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'V' (ID: 53)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011582005536183715
    2. 'V' → logprob: -7.501158237457275
    3. '('' → logprob: -8.251157760620117
    4. '(V' → logprob: -9.001157760620117
    5. ''' → logprob: -9.376157760620117
    6. '[' → logprob: -10.251157760620117
    7. '```' → logprob: -10.876157760620117
    8. '("' → logprob: -11.376157760620117
    9. '32' → logprob: -11.626157760620117
    10. ')' → logprob: -11.876157760620117

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02434193342924118
    2. ')' → logprob: -3.8993418216705322
    3. '()' → logprob: -6.149342060089111
    4. '('' → logprob: -7.899342060089111
    5. '(
' → logprob: -8.024341583251953
    6. '())' → logprob: -8.399341583251953
    7. '("("' → logprob: -8.649341583251953
    8. '```' → logprob: -9.399341583251953
    9. '(

' → logprob: -9.524341583251953
    10. '(""))' → logprob: -9.774341583251953

Token 5: 'graph' (ID: 7978)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8286287784576416
    2. '*' → logprob: -1.0786287784576416
    3. '+' → logprob: -1.9536287784576416
    4. '%' → logprob: -2.9536287784576416
    5. '#' → logprob: -4.8286285400390625
    6. 'i' → logprob: -5.7036285400390625
    7. ' if' → logprob: -5.8286285400390625
    8. 'for' → logprob: -5.8286285400390625
    9. ')' → logprob: -6.2036285400390625
    10. 's' → logprob: -6.2036285400390625

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024366363883018494
    2. '.' → logprob: -4.64936637878418
    3. ' =' → logprob: -4.77436637878418
    4. '=' → logprob: -5.39936637878418
    5. '[]' → logprob: -8.02436637878418
    6. '_' → logprob: -8.14936637878418
    7. ')' → logprob: -8.39936637878418
    8. '[V' → logprob: -8.64936637878418
    9. '\[' → logprob: -9.27436637878418
    10. '[:]' → logprob: -9.64936637878418

Token 7: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.5451803207397461
    2. ' {}' → logprob: -1.045180320739746
    3. '[' → logprob: -3.045180320739746
    4. ' []' → logprob: -4.545180320739746
    5. ' [[]' → logprob: -5.420180320739746
    6. '[]' → logprob: -5.920180320739746
    7. ' [' → logprob: -6.045180320739746
    8. '{' → logprob: -8.045180320739746
    9. ' [{}' → logprob: -8.545180320739746
    10. ' {' → logprob: -8.545180320739746

Token 8: 'input' (ID: 2586)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0018932949751615524
    2. ' []' → logprob: -6.626893520355225
    3. '[' → logprob: -8.001893043518066
    4. '[])' → logprob: -8.501893043518066
    5. '   ' → logprob: -11.251893043518066
    6. ']' → logprob: -11.876893043518066
    7. ' ' → logprob: -13.126893043518066
    8. '[]
' → logprob: -13.251893043518066
    9. ' [])' → logprob: -13.626893043518066
    10. '[],' → logprob: -13.876893043518066

Token 9: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.42196354269981384
    2. '()]' → logprob: -1.1719635725021362
    3. '(' → logprob: -3.6719634532928467
    4. ']()' → logprob: -5.421963691711426
    5. '())' → logprob: -6.546963691711426
    6. '('' → logprob: -6.546963691711426
    7. '().' → logprob: -7.296963691711426
    8. ']' → logprob: -7.546963691711426
    9. '("("' → logprob: -8.671963691711426
    10. '("' → logprob: -9.296963691711426

Token 10: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0809736251831055
    2. '()]' → logprob: -1.3309736251831055
    3. '()' → logprob: -1.5809736251831055
    4. ')]' → logprob: -2.8309736251831055
    5. ']' → logprob: -3.2059736251831055
    6. '[' → logprob: -3.3309736251831055
    7. '())' → logprob: -3.7059736251831055
    8. '()[' → logprob: -4.8309736251831055
    9. ' for' → logprob: -5.3309736251831055
    10. 'for' → logprob: -5.4559736251831055

Token 11: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0027608913369476795
    2. ' ' → logprob: -6.127760887145996
    3. ' _' → logprob: -8.502760887145996
    4. 'range' → logprob: -9.002760887145996
    5. ' i' → logprob: -9.252760887145996
    6. '_range' → logprob: -9.627760887145996
    7. '_' → logprob: -10.502760887145996
    8. ' xrange' → logprob: -10.627760887145996
    9. '	range' → logprob: -11.002760887145996
    10. ' in' → logprob: -11.627760887145996

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12528330087661743
    2. ' range' → logprob: -2.6252832412719727
    3. 'range' → logprob: -3.1252832412719727
    4. 'in' → logprob: -6.625283241271973
    5. '	range' → logprob: -10.250283241271973
    6. ' ' → logprob: -10.875283241271973
    7. '(range' → logprob: -11.875283241271973
    8. ' xrange' → logprob: -12.250283241271973
    9. ' ran' → logprob: -13.000283241271973
    10. '(' → logprob: -13.375283241271973

Token 13: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017027945723384619
    2. ' range' → logprob: -6.376702785491943
    3. '(range' → logprob: -15.501703262329102
    4. '	range' → logprob: -16.1267032623291
    5. '```' → logprob: -16.2517032623291
    6. '[' → logprob: -17.3767032623291
    7. 'r' → logprob: -17.5017032623291
    8. ' ' → logprob: -17.7517032623291
    9. 'V' → logprob: -17.7517032623291
    10. 'input' → logprob: -17.8767032623291

Token 14: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0009122979827225208
    2. '(' → logprob: -7.000912189483643
    3. ' (' → logprob: -15.1259126663208
    4. '(I' → logprob: -15.6259126663208
    5. '(len' → logprob: -16.500911712646484
    6. '(int' → logprob: -16.750911712646484
    7. '(A' → logprob: -17.250911712646484
    8. 'V' → logprob: -17.375911712646484
    9. '(F' → logprob: -17.625911712646484
    10. '(B' → logprob: -17.625911712646484

Token 15: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00022272850037552416
    2. ')' → logprob: -8.500223159790039
    3. ']' → logprob: -11.875223159790039
    4. ' )' → logprob: -12.500223159790039
    5. ')])' → logprob: -12.750223159790039
    6. '')]' → logprob: -12.750223159790039
    7. '])]' → logprob: -14.000223159790039
    8. '))' → logprob: -14.500223159790039
    9. ')],' → logprob: -15.375223159790039
    10. ')]
' → logprob: -15.375223159790039

Token 16: 'visited' (ID: 52453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8285895586013794
    2. ')' → logprob: -1.4535895586013794
    3. '[' → logprob: -2.20358943939209
    4. '.' → logprob: -2.57858943939209
    5. ']' → logprob: -3.70358943939209
    6. 'd' → logprob: -3.70358943939209
    7. '#' → logprob: -4.07858943939209
    8. 's' → logprob: -4.20358943939209
    9. '(' → logprob: -5.07858943939209
    10. 'm' → logprob: -5.32858943939209

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24629133939743042
    2. ' =' → logprob: -1.7462913990020752
    3. '_' → logprob: -3.871291399002075
    4. '=' → logprob: -4.121291160583496
    5. '[]' → logprob: -5.871291160583496
    6. '[:]' → logprob: -6.246291160583496
    7. ']' → logprob: -7.621291160583496
    8. ' ' → logprob: -7.746291160583496
    9. '.' → logprob: -8.621291160583496
    10. '_space' → logprob: -8.746291160583496

Token 18: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31348660588264465
    2. ' [' → logprob: -1.3134865760803223
    3. ' set' → logprob: -8.81348705291748
    4. 'set' → logprob: -9.68848705291748
    5. ' ' → logprob: -12.81348705291748
    6. '[]' → logprob: -12.93848705291748
    7. ' []' → logprob: -12.93848705291748
    8. '[V' → logprob: -12.93848705291748
    9. '[int' → logprob: -13.43848705291748
    10. '[v' → logprob: -14.56348705291748

Token 19: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00029852005536668
    2. '0' → logprob: -8.750298500061035
    3. ' False' → logprob: -8.875298500061035
    4. '(False' → logprob: -15.625298500061035
    5. '   ' → logprob: -17.12529945373535
    6. 'True' → logprob: -17.25029945373535
    7. ']' → logprob: -17.37529945373535
    8. 'F' → logprob: -17.87529945373535
    9. ' ' → logprob: -18.75029945373535
    10. '.False' → logprob: -18.75029945373535

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021224225929472595
    2. ' ]' → logprob: -8.500212669372559
    3. ')' → logprob: -12.875212669372559
    4. ']*' → logprob: -13.000212669372559
    5. ')]' → logprob: -14.125212669372559
    6. '[' → logprob: -14.125212669372559
    7. ',' → logprob: -14.625212669372559
    8. ' for' → logprob: -14.750212669372559
    9. '']' → logprob: -15.250212669372559
    10. '])' → logprob: -15.500212669372559

Token 21: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.017399517819285393
    2. ' *' → logprob: -5.267399311065674
    3. '[V' → logprob: -5.392399311065674
    4. '+' → logprob: -5.642399311065674
    5. '[' → logprob: -6.267399311065674
    6. '*(' → logprob: -7.642399311065674
    7. ']' → logprob: -7.892399311065674
    8. '(V' → logprob: -8.267399787902832
    9. ' for' → logprob: -8.392399787902832
    10. '*[' → logprob: -8.642399787902832

Token 22: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.07170670479536057
    2. '(V' → logprob: -2.696706771850586
    3. ' V' → logprob: -6.571706771850586
    4. '(' → logprob: -8.071706771850586
    5. ' (' → logprob: -9.821706771850586
    6. '	V' → logprob: -14.071706771850586
    7. ')V' → logprob: -14.696706771850586
    8. ' ' → logprob: -15.071706771850586
    9. '\(' → logprob: -15.196706771850586
    10. '_V' → logprob: -15.571706771850586

Token 23: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8458188772201538
    2. '
' → logprob: -0.9708188772201538
    3. 'stack' → logprob: -1.8458188772201538
    4. 'visited' → logprob: -4.470818996429443
    5. '<|end|>' → logprob: -5.970818996429443
    6. 'distance' → logprob: -6.095818996429443
    7. 'def' → logprob: -6.220818996429443
    8. ' for' → logprob: -6.345818996429443
    9. 'graph' → logprob: -6.595818996429443
    10. 'neighbors' → logprob: -6.595818996429443

Token 24: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004171594977378845
    2. 'def' → logprob: -5.504171371459961
    3. 'stack' → logprob: -9.379171371459961
    4. ' for' → logprob: -12.254171371459961
    5. '```' → logprob: -13.379171371459961
    6. 'dfs' → logprob: -14.129171371459961
    7. 'd' → logprob: -14.254171371459961
    8. '0' → logprob: -15.129171371459961
    9. '_stack' → logprob: -16.12917137145996
    10. 'f' → logprob: -16.25417137145996

Token 25: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.03253971040248871
    2. ' ' → logprob: -3.5325396060943604
    3. ' visit' → logprob: -6.7825398445129395
    4. ' DFS' → logprob: -7.1575398445129395
    5. ' space' → logprob: -7.9075398445129395
    6. ' bfs' → logprob: -8.032539367675781
    7. ' check' → logprob: -10.407539367675781
    8. ' find' → logprob: -10.657539367675781
    9. 'dfs' → logprob: -11.032539367675781
    10. ' visited' → logprob: -11.282539367675781

Token 26: '(u' (ID: 17057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03958474099636078
    2. '(node' → logprob: -3.5395846366882324
    3. '(graph' → logprob: -5.539584636688232
    4. '(V' → logprob: -5.914584636688232
    5. '(v' → logprob: -7.039584636688232
    6. '(i' → logprob: -7.039584636688232
    7. '(vertex' → logprob: -7.914584636688232
    8. ' (' → logprob: -8.91458511352539
    9. '(u' → logprob: -8.91458511352539
    10. '(n' → logprob: -9.16458511352539

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31648892164230347
    2. ',' → logprob: -1.3164889812469482
    3. ')' → logprob: -5.816488742828369
    4. ',u' → logprob: -9.066489219665527
    5. 'u' → logprob: -10.066489219665527
    6. '):
' → logprob: -10.191489219665527
    7. '(u' → logprob: -11.316489219665527
    8. ':' → logprob: -12.066489219665527
    9. ' ):' → logprob: -12.066489219665527
    10. ' ,' → logprob: -12.441489219665527

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11066682636737823
    2. ':' → logprob: -2.3606667518615723
    3. '<|end|>' → logprob: -5.735666751861572
    4. ' visited' → logprob: -5.985666751861572
    5. ')' → logprob: -6.360666751861572
    6. 'visited' → logprob: -6.860666751861572
    7. '):' → logprob: -7.610666751861572
    8. ' ' → logprob: -7.985666751861572
    9. '    
' → logprob: -8.61066722869873
    10. '```' → logprob: -8.98566722869873

Token 29: ' stack' (ID: 10825)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3283049464225769
    2. '   ' → logprob: -1.7033050060272217
    3. ' visited' → logprob: -2.3283050060272217
    4. ' for' → logprob: -9.5783052444458
    5. '    
' → logprob: -9.8283052444458
    6. '```' → logprob: -10.0783052444458
    7. '  ' → logprob: -10.2033052444458
    8. 'for' → logprob: -10.4533052444458
    9. ' ' → logprob: -10.7033052444458
    10. 'Visited' → logprob: -10.9533052444458

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014296668581664562
    2. '=' → logprob: -4.264296531677246
    3. '=[]' → logprob: -10.014296531677246
    4. ' ' → logprob: -10.264296531677246
    5. '[' → logprob: -11.514296531677246
    6. '   ' → logprob: -11.639296531677246
    7. '    ' → logprob: -11.889296531677246
    8. ')' → logprob: -11.889296531677246
    9. ' =[' → logprob: -12.389296531677246
    10. '.append' → logprob: -12.514296531677246

Token 31: ' [' (ID: 723)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.011783243156969547
    2. ' [' → logprob: -4.761783123016357
    3. '[' → logprob: -5.761783123016357
    4. '[]' → logprob: -11.636783599853516
    5. '[user' → logprob: -12.636783599853516
    6. '[v' → logprob: -13.136783599853516
    7. '   ' → logprob: -13.761783599853516
    8. '[node' → logprob: -14.636783599853516
    9. '[s' → logprob: -14.761783599853516
    10. '[int' → logprob: -14.886783599853516

Token 32: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0002964935847558081
    2. ' u' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.000296592712402
    4. '	u' → logprob: -16.500295639038086
    5. '(u' → logprob: -18.625295639038086
    6. '0' → logprob: -19.375295639038086
    7. ''u' → logprob: -19.500295639038086
    8. '[u' → logprob: -19.625295639038086
    9. '```' → logprob: -20.125295639038086
    10. ',u' → logprob: -20.625295639038086

Token 33: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009716100175864995
    2. ']
' → logprob: -7.375971794128418
    3. ')' → logprob: -8.750971794128418
    4. ' ]' → logprob: -8.875971794128418
    5. '   ' → logprob: -11.000971794128418
    6. ')]' → logprob: -11.250971794128418
    7. '])' → logprob: -11.500971794128418
    8. ']
' → logprob: -12.625971794128418
    9. ']

' → logprob: -14.000971794128418
    10. ' ' → logprob: -14.875971794128418

Token 34: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.347042977809906
    2. '   ' → logprob: -2.597043037414551
    3. ' 
' → logprob: -2.597043037414551
    4. '<|end|>' → logprob: -2.847043037414551
    5. '    
' → logprob: -3.597043037414551
    6. '  
' → logprob: -4.347043037414551
    7. ' ' → logprob: -4.472043037414551
    8. ' while' → logprob: -4.722043037414551
    9. '\n' → logprob: -5.222043037414551
    10. 'while' → logprob: -5.597043037414551

Token 35: ' count' (ID: 3605)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9823852777481079
    2. ' while' → logprob: -1.232385277748108
    3. '   ' → logprob: -2.2323851585388184
    4. ' ' → logprob: -2.7323851585388184
    5. ' 
' → logprob: -2.8573851585388184
    6. '
' → logprob: -3.1073851585388184
    7. '    
' → logprob: -3.7323851585388184
    8. 'visited' → logprob: -4.232385158538818
    9. '<|end|>' → logprob: -5.857385158538818
    10. '	while' → logprob: -5.982385158538818

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11288832128047943
    2. '=' → logprob: -2.2378883361816406
    3. ' ' → logprob: -9.73788833618164
    4. ',' → logprob: -13.23788833618164
    5. ')' → logprob: -13.36288833618164
    6. '  ' → logprob: -13.61288833618164
    7. ' +=' → logprob: -14.36288833618164
    8. 's' → logprob: -14.86288833618164
    9. '[' → logprob: -14.86288833618164
    10. '   ' → logprob: -15.11288833618164

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.668936014175415
    2. '1' → logprob: -1.293936014175415
    3. ' ' → logprob: -1.543936014175415
    4. '   ' → logprob: -11.418935775756836
    5. ' ' → logprob: -13.668935775756836
    6. '  ' → logprob: -13.793935775756836
    7. '    ' → logprob: -13.793935775756836
    8. 'int' → logprob: -15.106435775756836
    9. '2' → logprob: -15.293935775756836
    10. '(' → logprob: -15.293935775756836

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2521609961986542
    2. '1' → logprob: -1.5021610260009766
    3. ' ' → logprob: -8.377161026000977
    4. '   ' → logprob: -14.252161026000977
    5. '```' → logprob: -15.877161026000977
    6. 'int' → logprob: -16.189661026000977
    7. '-' → logprob: -16.314661026000977
    8. '[' → logprob: -16.377161026000977
    9. '  ' → logprob: -16.502161026000977
    10. '{' → logprob: -16.502161026000977

Token 39: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5793111324310303
    2. '<|end|>' → logprob: -1.3293111324310303
    3. '   ' → logprob: -2.5793111324310303
    4. ' 
' → logprob: -2.7043111324310303
    5. '<|end|>' → logprob: -4.704311370849609
    6. '    
' → logprob: -5.079311370849609
    7. '  
' → logprob: -5.454311370849609
    8. ' ' → logprob: -5.579311370849609
    9. '```' → logprob: -6.204311370849609
    10. ')' → logprob: -6.329311370849609

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14601609110832214
    2. '<|end|>' → logprob: -2.3960161209106445
    3. '   ' → logprob: -3.6460161209106445
    4. ' 
' → logprob: -4.7710161209106445
    5. '    
' → logprob: -5.5210161209106445
    6. '  
' → logprob: -6.3960161209106445
    7. '<|end|>' → logprob: -6.3960161209106445
    8. ' ' → logprob: -7.0210161209106445
    9. '   
' → logprob: -7.8960161209106445
    10. ')' → logprob: -8.021016120910645

Token 41: ' visited' (ID: 18416)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8428695797920227
    2. '   ' → logprob: -1.467869520187378
    3. 'while' → logprob: -1.842869520187378
    4. ' 
' → logprob: -2.967869520187378
    5. '```' → logprob: -3.467869520187378
    6. '<|end|>' → logprob: -3.467869520187378
    7. '
' → logprob: -4.217869758605957
    8. '    
' → logprob: -4.467869758605957
    9. '	while' → logprob: -4.592869758605957
    10. '\n' → logprob: -4.717869758605957

Token 42: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0036057746037840843
    2. '[' → logprob: -5.628605842590332
    3. '[v' → logprob: -12.878605842590332
    4. '[user' → logprob: -14.253605842590332
    5. '[s' → logprob: -14.378605842590332
    6. '[...]' → logprob: -14.753605842590332
    7. '```' → logprob: -15.253605842590332
    8. '[count' → logprob: -15.378605842590332
    9. '[current' → logprob: -16.128604888916016
    10. '[start' → logprob: -16.253604888916016

Token 43: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.289473822107539e-05
    2. ']=' → logprob: -9.750062942504883
    3. ' ]' → logprob: -12.750062942504883
    4. '=' → logprob: -13.500062942504883
    5. ']
' → logprob: -16.125062942504883
    6. '   ' → logprob: -16.375062942504883
    7. ')' → logprob: -16.750062942504883
    8. ' =' → logprob: -17.250062942504883
    9. '`]' → logprob: -17.500062942504883
    10. '']' → logprob: -17.750062942504883

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740923047065735
    2. '=' → logprob: -0.9740923047065735
    3. '=True' → logprob: -11.224092483520508
    4. ' ' → logprob: -14.099092483520508
    5. '   ' → logprob: -15.474092483520508
    6. ']' → logprob: -15.599092483520508
    7. 'True' → logprob: -15.724092483520508
    8. '    ' → logprob: -15.724092483520508
    9. '[' → logprob: -15.974092483520508
    10. '=False' → logprob: -16.224092483520508

Token 45: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006715370807796717
    2. ' True' → logprob: -5.006715297698975
    3. '(True' → logprob: -19.131715774536133
    4. '1' → logprob: -20.256715774536133
    5. '=True' → logprob: -20.381715774536133
    6. ' ' → logprob: -21.131715774536133
    7. 'T' → logprob: -22.381715774536133
    8. 'False' → logprob: -22.506715774536133
    9. 'Tr' → logprob: -22.506715774536133
    10. 'true' → logprob: -23.131715774536133

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011178210377693176
    2. '\n' → logprob: -5.386178016662598
    3. '<|end|>' → logprob: -5.761178016662598
    4. '   ' → logprob: -7.011178016662598
    5. ' 
' → logprob: -7.261178016662598
    6. '```' → logprob: -7.636178016662598
    7. '    
' → logprob: -8.261178016662598
    8. '' → logprob: -8.386178016662598
    9. '  
' → logprob: -8.761178016662598
    10. '<|end|>' → logprob: -9.136178016662598

Token 47: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.4789716601371765
    2. '
' → logprob: -1.6039717197418213
    3. '<|end|>' → logprob: -2.4789717197418213
    4. '\n' → logprob: -2.7289717197418213
    5. ' ' → logprob: -4.478971481323242
    6. '    
' → logprob: -5.353971481323242
    7. '```' → logprob: -5.853971481323242
    8. '  
' → logprob: -6.103971481323242
    9. '   ' → logprob: -6.103971481323242
    10. ' ' → logprob: -7.228971481323242

Token 48: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.8191953301429749
    2. ' while' → logprob: -1.06919527053833
    3. '   ' → logprob: -1.56919527053833
    4. '```' → logprob: -5.81919527053833
    5. '
' → logprob: -6.69419527053833
    6. '	while' → logprob: -6.81919527053833
    7. '\n' → logprob: -7.06919527053833
    8. '    
' → logprob: -7.81919527053833
    9. ' ' → logprob: -8.319195747375488
    10. ')' → logprob: -8.694195747375488

Token 49: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07889551669359207
    2. ' stack' → logprob: -2.5788955688476562
    3. '	stack' → logprob: -12.578895568847656
    4. '(stack' → logprob: -13.453895568847656
    5. ' ' → logprob: -14.578895568847656
    6. 'st' → logprob: -15.578895568847656
    7. '   ' → logprob: -15.953895568847656
    8. '  ' → logprob: -17.578895568847656
    9. 'len' → logprob: -17.578895568847656
    10. 'Stack' → logprob: -17.953895568847656

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014902232214808464
    2. ' and' → logprob: -6.876490116119385
    3. ':
' → logprob: -8.001490592956543
    4. '):' → logprob: -10.001490592956543
    5. 'and' → logprob: -10.126490592956543
    6. ' :' → logprob: -11.376490592956543
    7. ')' → logprob: -12.001490592956543
    8. ':**' → logprob: -12.376490592956543
    9. '.pop' → logprob: -12.876490592956543
    10. '>:' → logprob: -13.251490592956543

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03488484025001526
    2. '   ' → logprob: -3.6598849296569824
    3. ' 
' → logprob: -6.284884929656982
    4. '```' → logprob: -6.284884929656982
    5. '    ' → logprob: -6.659884929656982
    6. '        
' → logprob: -7.159884929656982
    7. '    
' → logprob: -7.534884929656982
    8. 'n' → logprob: -8.159884452819824
    9. '<|end|>' → logprob: -8.159884452819824
    10. '  
' → logprob: -8.159884452819824

Token 52: ' node' (ID: 4596)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.35620278120040894
    2. ' u' → logprob: -1.3562028408050537
    3. 'v' → logprob: -4.106202602386475
    4. '       ' → logprob: -4.356202602386475
    5. ' v' → logprob: -5.606202602386475
    6. '           ' → logprob: -5.856202602386475
    7. '```' → logprob: -5.981202602386475
    8. '   ' → logprob: -6.981202602386475
    9. 'node' (adapté à ' node') → logprob: -6.981202602386475
    10. ' node' → logprob: -7.606202602386475

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006716317031532526
    2. '=' → logprob: -5.006716251373291
    3. ')' → logprob: -15.25671672821045
    4. ' ' → logprob: -15.50671672821045
    5. '    ' → logprob: -15.50671672821045
    6. '   ' → logprob: -16.131715774536133
    7. ',' → logprob: -16.506715774536133
    8. ' =
' → logprob: -17.256715774536133
    9. ']' → logprob: -17.381715774536133
    10. ' =)' → logprob: -17.506715774536133

Token 54: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.0019298245897516608
    2. 'stack' → logprob: -6.251929759979248
    3. '	stack' → logprob: -13.876930236816406
    4. '(stack' → logprob: -15.376930236816406
    5. '.stack' → logprob: -17.251930236816406
    6. ' ' → logprob: -17.751930236816406
    7. '_stack' → logprob: -18.001930236816406
    8. ' graph' → logprob: -19.001930236816406
    9. 'Stack' → logprob: -19.251930236816406
    10. ' Stack' → logprob: -19.751930236816406

Token 55: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.002133960137143731
    2. 'pop' → logprob: -6.502133846282959
    3. '[-' → logprob: -8.252134323120117
    4. ']' → logprob: -8.502134323120117
    5. '   ' → logprob: -9.752134323120117
    6. ' pop' → logprob: -10.502134323120117
    7. ' =' → logprob: -10.502134323120117
    8. '=' → logprob: -11.127134323120117
    9. ')' → logprob: -11.877134323120117
    10. 'Pop' → logprob: -11.877134323120117

Token 56: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000116655595775228
    2. '()
' → logprob: -9.375116348266602
    3. '(' → logprob: -10.750116348266602
    4. ')' → logprob: -11.750116348266602
    5. '()

' → logprob: -14.125116348266602
    6. '())' → logprob: -14.250116348266602
    7. ' ()' → logprob: -15.250116348266602
    8. '()`' → logprob: -15.500116348266602
    9. '()]' → logprob: -15.500116348266602
    10. '()
' → logprob: -15.750116348266602

Token 57: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08863961696624756
    2. '       ' → logprob: -3.588639736175537
    3. ' 
' → logprob: -3.963639736175537
    4. 'count' → logprob: -4.213639736175537
    5. '        
' → logprob: -4.713639736175537
    6. ' count' → logprob: -5.213639736175537
    7. '\n' → logprob: -5.713639736175537
    8. '    
' → logprob: -6.588639736175537
    9. '```' → logprob: -6.963639736175537
    10. '  
' → logprob: -7.338639736175537

Token 58: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.14256082475185394
    2. ' count' → logprob: -2.1425607204437256
    3. '   ' → logprob: -4.892560958862305
    4. ' for' → logprob: -5.142560958862305
    5. 'for' → logprob: -6.892560958862305
    6. '       ' → logprob: -6.892560958862305
    7. ' ' → logprob: -10.392560958862305
    8. '
' → logprob: -10.517560958862305
    9. '	count' → logprob: -10.767560958862305
    10. '```' → logprob: -10.892560958862305

Token 59: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07891886681318283
    2. '+=' → logprob: -2.578918933868408
    3. '+' → logprob: -10.57891845703125
    4. ' +' → logprob: -13.82891845703125
    5. '=' → logprob: -14.20391845703125
    6. ']+=' → logprob: -14.32891845703125
    7. ' =' → logprob: -14.82891845703125
    8. '   ' → logprob: -15.07891845703125
    9. '++' → logprob: -15.70391845703125
    10. '    ' → logprob: -16.07891845703125

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '+' → logprob: -17.129077911376953
    4. 'graph' → logprob: -17.816577911376953
    5. ' ' → logprob: -17.941577911376953
    6. '   ' → logprob: -17.941577911376953
    7. '0' → logprob: -18.191577911376953
    8. ' +' → logprob: -19.004077911376953
    9. 'node' → logprob: -19.066577911376953
    10. '  ' → logprob: -19.254077911376953

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'graph' → logprob: -18.6250057220459
    4. 'count' → logprob: -19.3750057220459
    5. '+' → logprob: -19.5000057220459
    6. 'node' → logprob: -19.6250057220459
    7. 'int' → logprob: -19.7500057220459
    8. 'len' → logprob: -19.7500057220459
    9. '   ' → logprob: -20.0000057220459
    10. '```' → logprob: -20.0625057220459

Token 62: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4676319360733032
    2. 'for' → logprob: -1.5926319360733032
    3. '<|end|>' → logprob: -2.2176318168640137
    4. ' ' → logprob: -3.7176318168640137
    5. '   ' → logprob: -4.092631816864014
    6. '
' → logprob: -5.217631816864014
    7. ' 
' → logprob: -5.717631816864014
    8. '    
' → logprob: -5.717631816864014
    9. '\n' → logprob: -6.092631816864014
    10. '  ' → logprob: -6.717631816864014

Token 63: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8208600282669067
    2. ' for' → logprob: -1.4458600282669067
    3. 'for' → logprob: -2.195859909057617
    4. ' 
' → logprob: -2.320859909057617
    5. '    
' → logprob: -2.695859909057617
    6. '   ' → logprob: -3.695859909057617
    7. '<|end|>' → logprob: -4.820859909057617
    8. '   
' → logprob: -5.570859909057617
    9. '  
' → logprob: -5.820859909057617
    10. ' ' → logprob: -5.820859909057617

Token 64: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.048742134124040604
    2. ' for' → logprob: -3.0487420558929443
    3. '
' → logprob: -9.173742294311523
    4. '   ' → logprob: -10.298742294311523
    5. '	for' → logprob: -11.298742294311523
    6. '    
' → logprob: -12.798742294311523
    7. '```' → logprob: -13.298742294311523
    8. ' 
' → logprob: -15.798742294311523
    9. '       ' → logprob: -16.298742294311523
    10. '\n' → logprob: -16.548742294311523

Token 65: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4757404923439026
    2. 'v' → logprob: -0.9757404923439026
    3. ' i' → logprob: -6.600740432739258
    4. 'i' → logprob: -8.225740432739258
    5. 'neighbor' → logprob: -11.475740432739258
    6. ' w' → logprob: -11.725740432739258
    7. 'w' → logprob: -12.100740432739258
    8. 'j' → logprob: -12.225740432739258
    9. '	v' → logprob: -13.600740432739258
    10. ' j' → logprob: -13.725740432739258

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005429762415587902
    2. 'in' → logprob: -5.255429744720459
    3. ' ' → logprob: -9.005430221557617
    4. ',' → logprob: -10.130430221557617
    5. '	in' → logprob: -11.630430221557617
    6. ' ,' → logprob: -12.130430221557617
    7. 's' → logprob: -12.505430221557617
    8. '  ' → logprob: -12.630430221557617
    9. '<|end|>' → logprob: -12.755430221557617
    10. '   ' → logprob: -13.005430221557617

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693430483341217
    2. ' range' → logprob: -2.126934289932251
    3. '(range' → logprob: -13.501934051513672
    4. '	range' → logprob: -13.626934051513672
    5. ' ' → logprob: -14.126934051513672
    6. 'graph' → logprob: -14.251934051513672
    7. 'rang' → logprob: -14.501934051513672
    8. 'raph' → logprob: -14.876934051513672
    9. 'r' → logprob: -15.001934051513672
    10. '   ' → logprob: -15.626934051513672

Token 68: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -6.12258882028982e-05
    2. '(' → logprob: -9.87506103515625
    3. 'V' → logprob: -11.75006103515625
    4. '(len' → logprob: -13.87506103515625
    5. '   ' → logprob: -14.62506103515625
    6. '(v' → logprob: -15.50006103515625
    7. '	V' → logprob: -15.87506103515625
    8. ' (' → logprob: -16.87506103515625
    9. '(
' → logprob: -17.25006103515625
    10. 'len' → logprob: -17.62506103515625

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021366888657212257
    2. '):
' → logprob: -3.896366834640503
    3. ' ):' → logprob: -7.396367073059082
    4. ')' → logprob: -9.271367073059082
    5. '   ' → logprob: -10.146367073059082
    6. '       ' → logprob: -10.396367073059082
    7. ' ):
' → logprob: -11.271367073059082
    8. 'if' → logprob: -11.521367073059082
    9. '           ' → logprob: -12.146367073059082
    10. ':' → logprob: -12.146367073059082

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005588156636804342
    2. ' if' → logprob: -6.130588054656982
    3. '<|end|>' → logprob: -6.130588054656982
    4. ':' → logprob: -8.00558853149414
    5. '       ' → logprob: -8.75558853149414
    6. ' ' → logprob: -8.75558853149414
    7. '               ' → logprob: -8.88058853149414
    8. ' :' → logprob: -9.50558853149414
    9. 'if' → logprob: -9.50558853149414
    10. '          ' → logprob: -10.00558853149414

Token 71: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.604718029499054
    2. ' if' → logprob: -1.2297179698944092
    3. '           ' → logprob: -2.354717969894409
    4. ' ' → logprob: -3.354717969894409
    5. 'if' (adapté à ' if') → logprob: -4.229718208312988
    6. '<|end|>' → logprob: -4.479718208312988
    7. '            ' → logprob: -6.354718208312988
    8. ' 
' → logprob: -7.479718208312988
    9. '                ' → logprob: -7.729718208312988
    10. '   ' → logprob: -7.854718208312988

Token 72: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5807868838310242
    2. 'graph' → logprob: -0.8307868838310242
    3. ' not' → logprob: -5.45578670501709
    4. 'not' → logprob: -7.58078670501709
    5. ' v' → logprob: -11.20578670501709
    6. '   ' → logprob: -11.20578670501709
    7. '	graph' → logprob: -11.20578670501709
    8. '(graph' → logprob: -11.95578670501709
    9. 'v' → logprob: -12.45578670501709
    10. ' ' → logprob: -14.33078670501709

Token 73: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.003216568613424897
    2. '[u' → logprob: -5.878216743469238
    3. '[v' → logprob: -7.878216743469238
    4. '[' → logprob: -10.628216743469238
    5. '[int' → logprob: -13.003216743469238
    6. '][' → logprob: -13.503216743469238
    7. '[user' → logprob: -13.503216743469238
    8. '[row' → logprob: -14.378216743469238
    9. ' [' → logprob: -14.503216743469238
    10. '[n' → logprob: -14.753216743469238

Token 74: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.48156067728996277
    2. '[v' → logprob: -0.9815607070922852
    3. '[' → logprob: -4.981560707092285
    4. '[node' → logprob: -8.856560707092285
    5. '[u' → logprob: -8.981560707092285
    6. 'v' → logprob: -9.231560707092285
    7. ''][' → logprob: -9.606560707092285
    8. '"][' → logprob: -10.106560707092285
    9. '[j' → logprob: -10.356560707092285
    10. ']' → logprob: -10.981560707092285

Token 75: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0004094619944225997
    2. ' ==' → logprob: -8.750409126281738
    3. ''' → logprob: -9.750409126281738
    4. ' v' → logprob: -10.000409126281738
    5. '==' → logprob: -10.125409126281738
    6. ']' → logprob: -10.500409126281738
    7. '[v' → logprob: -10.750409126281738
    8. ')' → logprob: -11.250409126281738
    9. 'vj' → logprob: -11.250409126281738
    10. ']==' → logprob: -11.250409126281738

Token 76: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18994323909282684
    2. ']' → logprob: -2.564943313598633
    3. '==' → logprob: -2.939943313598633
    4. ''' → logprob: -3.689943313598633
    5. '=='' → logprob: -5.064943313598633
    6. '=' → logprob: -5.314943313598633
    7. '']' → logprob: -6.189943313598633
    8. ']==' → logprob: -6.814943313598633
    9. ' '' → logprob: -6.939943313598633
    10. ')' → logprob: -7.064943313598633

Token 77: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18524381518363953
    2. ''' → logprob: -2.185243844985962
    3. '==' → logprob: -3.310243844985962
    4. '=='' → logprob: -4.310243606567383
    5. '=' → logprob: -5.560243606567383
    6. ' '' → logprob: -6.435243606567383
    7. ' =='' → logprob: -7.935243606567383
    8. '"' → logprob: -8.060243606567383
    9. ' =' → logprob: -8.185243606567383
    10. ' ' → logprob: -9.435243606567383

Token 78: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03800705820322037
    2. ' '' → logprob: -3.7880070209503174
    3. '"' → logprob: -4.2880072593688965
    4. ' ' → logprob: -8.038006782531738
    5. '1' → logprob: -8.163006782531738
    6. ' "' → logprob: -8.413006782531738
    7. '`' → logprob: -10.288006782531738
    8. ''A' → logprob: -11.538006782531738
    9. ''a' → logprob: -11.913006782531738
    10. ' ' → logprob: -12.413006782531738

Token 79: 'Y' (ID: 56)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021581923589110374
    2. 'Y' → logprob: -3.8965818881988525
    3. ''' → logprob: -6.896582126617432
    4. '0' → logprob: -11.021581649780273
    5. ' Y' → logprob: -12.146581649780273
    6. 'y' → logprob: -13.396581649780273
    7. '"' → logprob: -13.646581649780273
    8. '')' → logprob: -14.396581649780273
    9. 'A' → logprob: -14.896581649780273
    10. 'O' → logprob: -15.271581649780273

Token 80: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0036139667499810457
    2. ' '' → logprob: -6.1286139488220215
    3. ' and' → logprob: -6.7536139488220215
    4. 'and' → logprob: -8.25361442565918
    5. 'a' → logprob: -15.25361442565918
    6. ''s' → logprob: -15.62861442565918
    7. '"' → logprob: -16.00361442565918
    8. '`' → logprob: -16.25361442565918
    9. '')' → logprob: -16.37861442565918
    10. ''a' → logprob: -17.12861442565918

Token 81: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02635256014764309
    2. 'and' → logprob: -3.651352643966675
    3. ' ' → logprob: -9.901352882385254
    4. '    ' → logprob: -14.276352882385254
    5. '            ' → logprob: -15.151352882385254
    6. '        ' → logprob: -15.276352882385254
    7. ')' → logprob: -15.401352882385254
    8. '	and' → logprob: -15.901352882385254
    9. '   ' → logprob: -16.026351928710938
    10. ' an' → logprob: -16.151351928710938

Token 82: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00861669983714819
    2. 'not' → logprob: -4.758616924285889
    3. ' ' → logprob: -13.63361644744873
    4. ' visited' → logprob: -14.63361644744873
    5. ' ' → logprob: -15.63361644744873
    6. '	not' → logprob: -16.133617401123047
    7. ' and' → logprob: -16.258617401123047
    8. '(not' → logprob: -16.758617401123047
    9. 'visited' → logprob: -16.883617401123047
    10. ' no' → logprob: -17.883617401123047

Token 83: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.0006304710987024009
    2. 'visited' → logprob: -7.3756303787231445
    3. ' ' → logprob: -12.500630378723145
    4. ' ' → logprob: -15.625630378723145
    5. 'Visited' → logprob: -17.75063133239746
    6. ' visit' → logprob: -18.25063133239746
    7. ' visite' → logprob: -18.50063133239746
    8. ' visits' → logprob: -19.50063133239746
    9. '<|end|>' → logprob: -19.87563133239746
    10. ' vis' → logprob: -20.25063133239746

Token 84: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -12.375004768371582
    3. 'v' → logprob: -16.625003814697266
    4. ' [' → logprob: -16.875003814697266
    5. '```' → logprob: -17.875003814697266
    6. '[V' → logprob: -18.125003814697266
    7. '[u' → logprob: -19.250003814697266
    8. '	v' → logprob: -20.125003814697266
    9. ' ' → logprob: -20.250003814697266
    10. '[val' → logprob: -20.750003814697266

Token 85: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.11441053450107574
    2. ':' → logprob: -2.364410638809204
    3. ']' → logprob: -4.864410400390625
    4. '):' → logprob: -5.114410400390625
    5. ']:
' → logprob: -8.489410400390625
    6. '']:' → logprob: -10.364410400390625
    7. ':
' → logprob: -10.989410400390625
    8. ' ]' → logprob: -11.114410400390625
    9. '   ' → logprob: -11.239410400390625
    10. '[' → logprob: -11.364410400390625

Token 86: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004374224692583084
    2. '           ' → logprob: -5.754374027252197
    3. '                
' → logprob: -8.004374504089355
    4. ' visited' → logprob: -8.379374504089355
    5. '              ' → logprob: -8.879374504089355
    6. '            ' → logprob: -9.129374504089355
    7. ' ' → logprob: -9.379374504089355
    8. '                ' → logprob: -9.379374504089355
    9. '                   ' → logprob: -10.004374504089355
    10. '             ' → logprob: -10.379374504089355

Token 87: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.17541567981243134
    2. '                   ' → logprob: -2.4254157543182373
    3. '               ' → logprob: -3.6754157543182373
    4. ' stack' → logprob: -3.8004157543182373
    5. 'visited' (adapté à ' visited') → logprob: -4.050415515899658
    6. '                ' → logprob: -5.550415515899658
    7. 'stack' → logprob: -5.925415515899658
    8. '                    
' → logprob: -8.800415992736816
    9. '                    ' → logprob: -9.050415992736816
    10. '```' → logprob: -9.550415992736816

Token 88: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -8.506661833962426e-05
    2. '[' → logprob: -9.37508487701416
    3. 'v' → logprob: -16.500085830688477
    4. '[V' → logprob: -17.125085830688477
    5. '[u' → logprob: -17.500085830688477
    6. '```' → logprob: -17.500085830688477
    7. '[val' → logprob: -18.375085830688477
    8. '	v' → logprob: -19.500085830688477
    9. '[y' → logprob: -19.750085830688477
    10. ' [' → logprob: -20.000085830688477

Token 89: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012248923303559422
    2. ']=' → logprob: -9.3751220703125
    3. ' ]' → logprob: -10.6251220703125
    4. '=' → logprob: -11.3751220703125
    5. ' =' → logprob: -13.5001220703125
    6. '[' → logprob: -15.2501220703125
    7. '   ' → logprob: -16.5001220703125
    8. '']' → logprob: -16.7501220703125
    9. ')' → logprob: -16.8751220703125
    10. '=True' → logprob: -17.2501220703125

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760394334793091
    2. '=' → logprob: -0.8260394334793091
    3. ']' → logprob: -9.32603931427002
    4. '=True' → logprob: -11.82603931427002
    5. '[' → logprob: -13.20103931427002
    6. ')' → logprob: -14.32603931427002
    7. ']=' → logprob: -15.07603931427002
    8. 'True' → logprob: -15.20103931427002
    9. '    ' → logprob: -15.57603931427002
    10. '   ' → logprob: -15.57603931427002

Token 91: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.25192928314208984
    2. ' True' → logprob: -1.5019292831420898
    3. '(True' → logprob: -15.87692928314209
    4. '=True' → logprob: -16.501930236816406
    5. ' ' → logprob: -19.876930236816406
    6. '.True' → logprob: -20.376930236816406
    7. ' Tru' → logprob: -21.251930236816406
    8. '_true' → logprob: -21.626930236816406
    9. '1' → logprob: -21.876930236816406
    10. 'False' → logprob: -22.376930236816406

Token 92: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010424555512145162
    2. ' stack' → logprob: -8.126042366027832
    3. 'stack' → logprob: -8.376042366027832
    4. '                ' → logprob: -8.376042366027832
    5. '                
' → logprob: -9.626042366027832
    6. '	stack' → logprob: -9.876042366027832
    7. '                   ' → logprob: -10.626042366027832
    8. '
' → logprob: -10.876042366027832
    9. '			' → logprob: -10.876042366027832
    10. '(stack' → logprob: -11.251042366027832

Token 93: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005554486531764269
    2. 'stack' → logprob: -5.380554676055908
    3. ' stack' → logprob: -7.130554676055908
    4. '	stack' → logprob: -9.50555419921875
    5. '                ' → logprob: -11.38055419921875
    6. '(stack' → logprob: -12.00555419921875
    7. '_stack' → logprob: -12.25555419921875
    8. '                
' → logprob: -12.38055419921875
    9. '           ' → logprob: -12.38055419921875
    10. '   ' → logprob: -12.63055419921875

Token 94: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.16023144125938416
    2. ' stack' → logprob: -1.9102314710617065
    3. '	stack' → logprob: -12.410231590270996
    4. '               ' → logprob: -13.035231590270996
    5. '(stack' → logprob: -14.785231590270996
    6. '.stack' → logprob: -14.785231590270996
    7. '_stack' → logprob: -15.535231590270996
    8. 'Stack' → logprob: -16.91023063659668
    9. 'stackoverflow' → logprob: -17.66023063659668
    10. '   ' → logprob: -17.78523063659668

Token 95: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.596781946020201e-05
    2. '.' → logprob: -10.125045776367188
    3. '.extend' → logprob: -12.250045776367188
    4. '.app' → logprob: -14.250045776367188
    5. ' .' → logprob: -15.625045776367188
    6. '.push' → logprob: -16.000045776367188
    7. 'append' → logprob: -16.750045776367188
    8. '.add' → logprob: -17.750045776367188
    9. '.ap' → logprob: -18.375045776367188
    10. '.Append' → logprob: -18.625045776367188

Token 96: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0005532711511477828
    2. '(' → logprob: -7.500553131103516
    3. '((' → logprob: -15.125553131103516
    4. ' (' → logprob: -17.375553131103516
    5. '(
' → logprob: -17.625553131103516
    6. '(V' → logprob: -18.125553131103516
    7. '(s' → logprob: -18.625553131103516
    8. '()' → logprob: -18.875553131103516
    9. '(iv' → logprob: -19.250553131103516
    10. 'v' → logprob: -19.500553131103516

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6656825866666622e-05
    2. ')
' → logprob: -10.62502670288086
    3. ')v' → logprob: -13.75002670288086
    4. ' )' → logprob: -14.25002670288086
    5. ')`' → logprob: -15.87502670288086
    6. '）' → logprob: -16.37502670288086
    7. '))' → logprob: -16.62502670288086
    8. ')
' → logprob: -16.87502670288086
    9. 'v' → logprob: -17.00002670288086
    10. ')

' → logprob: -17.25002670288086

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08383626490831375
    2. 'return' → logprob: -2.708836317062378
    3. ')' → logprob: -5.083836078643799
    4. '       ' → logprob: -5.458836078643799
    5. ' return' → logprob: -6.208836078643799
    6. '               ' → logprob: -7.458836078643799
    7. '    ' → logprob: -8.958836555480957
    8. '
' → logprob: -9.083836555480957
    9. '    
' → logprob: -9.083836555480957
    10. '           ' → logprob: -9.583836555480957

Token 99: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007428672630339861
    2. '   ' → logprob: -5.2574286460876465
    3. ' return' → logprob: -6.1324286460876465
    4. ' ' → logprob: -11.507429122924805
    5. '	return' → logprob: -13.132429122924805
    6. '```' → logprob: -13.257429122924805
    7. ')' → logprob: -13.382429122924805
    8. '       ' → logprob: -13.507429122924805
    9. ':return' → logprob: -14.007429122924805
    10. 'eturn' → logprob: -14.257429122924805

Token 100: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0015024791937321424
    2. ' count' → logprob: -6.501502513885498
    3. '(count' → logprob: -16.001502990722656
    4. ' ' → logprob: -17.001502990722656
    5. '	count' → logprob: -18.626502990722656
    6. 'c' → logprob: -18.751502990722656
    7. 'counts' → logprob: -19.251502990722656
    8. '[count' → logprob: -19.501502990722656
    9. 'cnt' → logprob: -20.251502990722656
    10. '<count' → logprob: -20.376502990722656

Token 101: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4029408395290375
    2. 'for' → logprob: -1.7779408693313599
    3. 'def' → logprob: -2.4029407501220703
    4. '<|end|>' → logprob: -3.1529407501220703
    5. '    
' → logprob: -5.27794075012207
    6. '  
' → logprob: -6.02794075012207
    7. 'u' → logprob: -6.02794075012207
    8. '#' → logprob: -6.02794075012207
    9. 'v' → logprob: -6.02794075012207
    10. '

' → logprob: -6.27794075012207

Token 102: 'components' (ID: 8395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.192523717880249
    2. 'max' → logprob: -1.317523717880249
    3. 'result' → logprob: -2.192523717880249
    4. 'answer' → logprob: -2.192523717880249
    5. 'results' → logprob: -2.817523717880249
    6. 'components' → logprob: -3.067523717880249
    7. 'answers' → logprob: -3.567523717880249
    8. 'component' → logprob: -3.692523717880249
    9. 'sizes' → logprob: -4.192523956298828
    10. 'ans' → logprob: -5.067523956298828

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1380996704101562
    2. '_' → logprob: -1.5130996704101562
    3. '_count' → logprob: -1.6380996704101562
    4. '_sizes' → logprob: -1.7630996704101562
    5. '_size' → logprob: -2.8880996704101562
    6. '=' → logprob: -3.8880996704101562
    7. '_counts' → logprob: -4.388099670410156
    8. ')' → logprob: -7.138099670410156
    9. '(' → logprob: -7.138099670410156
    10. 's' → logprob: -7.263099670410156

Token 104: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1339702606201172
    2. ' []' → logprob: -2.633970260620117
    3. '0' → logprob: -3.008970260620117
    4. '[' → logprob: -6.008970260620117
    5. 'sum' → logprob: -7.258970260620117
    6. ' [' → logprob: -8.008970260620117
    7. ' ' → logprob: -8.508970260620117
    8. '[]
' → logprob: -8.758970260620117
    9. ' sum' → logprob: -9.383970260620117
    10. '[int' → logprob: -9.383970260620117

Token 105: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8624639324116288e-06
    2. ' for' → logprob: -13.500001907348633
    3. 'visited' → logprob: -15.000001907348633
    4. '```' → logprob: -17.875001907348633
    5. '
' → logprob: -18.125001907348633
    6. 'found' → logprob: -18.625001907348633
    7. 'used' → logprob: -18.625001907348633
    8. 'un' → logprob: -19.375001907348633
    9. '	for' → logprob: -19.625001907348633
    10. 'remaining' → logprob: -19.875001907348633

Token 106: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6645954251289368
    2. ' u' → logprob: -0.7895954251289368
    3. 'u' → logprob: -3.914595365524292
    4. 'i' → logprob: -5.039595603942871
    5. ' v' → logprob: -5.414595603942871
    6. ' node' → logprob: -8.414595603942871
    7. 'v' → logprob: -8.789595603942871
    8. ' vertex' → logprob: -9.539595603942871
    9. ' _' → logprob: -9.789595603942871
    10. ' ' → logprob: -10.289595603942871

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021250776946544647
    2. 'in' → logprob: -3.8962507247924805
    3. ' ' → logprob: -7.2712507247924805
    4. 'n' → logprob: -11.77125072479248
    5. '  ' → logprob: -13.14625072479248
    6. 'range' → logprob: -13.27125072479248
    7. '	in' → logprob: -14.02125072479248
    8. ' ' → logprob: -15.02125072479248
    9. ' range' → logprob: -15.39625072479248
    10. ' n' → logprob: -16.021251678466797

Token 108: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012356207298580557
    2. ' range' → logprob: -9.000123977661133
    3. '(range' → logprob: -16.375123977661133
    4. '	range' → logprob: -19.000123977661133
    5. ' ' → logprob: -20.125123977661133
    6. 'ange' → logprob: -20.875123977661133
    7. '```' → logprob: -20.875123977661133
    8. '  ' → logprob: -20.875123977661133
    9. '   ' → logprob: -21.250123977661133
    10. 'Range' → logprob: -21.500123977661133

Token 109: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0019299437990412116
    2. '(' → logprob: -6.251929759979248
    3. ' (' → logprob: -14.626930236816406
    4. '(len' → logprob: -15.626930236816406
    5. 'V' → logprob: -15.751930236816406
    6. '(
' → logprob: -15.876930236816406
    7. '(s' → logprob: -16.126930236816406
    8. '(range' → logprob: -16.251930236816406
    9. '((' → logprob: -16.751930236816406
    10. '()' → logprob: -17.501930236816406

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026795833837240934
    2. ')' → logprob: -6.627679347991943
    3. '):
' → logprob: -7.002679347991943
    4. ' ):' → logprob: -7.752679347991943
    5. ':' → logprob: -11.627679824829102
    6. '+' → logprob: -13.752679824829102
    7. ' )' → logprob: -13.877679824829102
    8. '):
' → logprob: -13.877679824829102
    9. '}:' → logprob: -14.377679824829102
    10. '():' → logprob: -15.377679824829102

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07139729708433151
    2. ' if' → logprob: -2.696397304534912
    3. '<|end|>' → logprob: -6.821397304534912
    4. 'if' → logprob: -8.321396827697754
    5. '    
' → logprob: -9.696396827697754
    6. '	if' → logprob: -10.946396827697754
    7. '<|end|>' → logprob: -10.946396827697754
    8. ' ' → logprob: -11.696396827697754
    9. ' 
' → logprob: -12.321396827697754
    10. '```' → logprob: -12.696396827697754

Token 112: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19128777086734772
    2. ' if' → logprob: -2.4412877559661865
    3. '   ' → logprob: -2.4412877559661865
    4. '	if' → logprob: -12.566287994384766
    5. '```' → logprob: -13.441287994384766
    6. 'If' → logprob: -13.941287994384766
    7. '    
' → logprob: -14.316287994384766
    8. ' ' → logprob: -14.441287994384766
    9. 'not' → logprob: -15.816287994384766
    10. ' not' → logprob: -15.941287994384766

Token 113: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0263078510761261
    2. 'not' → logprob: -3.6513078212738037
    3. ' visited' → logprob: -12.651308059692383
    4. '	not' → logprob: -12.901308059692383
    5. ' ' → logprob: -14.526308059692383
    6. ' ' → logprob: -14.651308059692383
    7. 'visited' → logprob: -14.651308059692383
    8. '   ' → logprob: -15.276308059692383
    9. '(not' → logprob: -15.901308059692383
    10. ' no' → logprob: -17.026308059692383

Token 114: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.10020678490400314
    2. 'visited' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.72520637512207
    4. ' ' → logprob: -17.97520637512207
    5. 'Visited' → logprob: -18.85020637512207
    6. ' visit' → logprob: -19.97520637512207
    7. 'vis' → logprob: -20.22520637512207
    8. 'visit' → logprob: -20.35020637512207
    9. ' visits' → logprob: -20.47520637512207
    10. '   ' → logprob: -21.47520637512207

Token 115: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -11.37501335144043
    3. ' [' → logprob: -14.37501335144043
    4. '[v' → logprob: -14.62501335144043
    5. '[u' → logprob: -14.87501335144043
    6. '[V' → logprob: -15.75001335144043
    7. '[I' → logprob: -16.00001335144043
    8. '```' → logprob: -17.12501335144043
    9. '[
' → logprob: -17.50001335144043
    10. 'i' → logprob: -18.12501335144043

Token 116: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07090592384338379
    2. ']:' → logprob: -2.820905923843384
    3. ':' → logprob: -4.820905685424805
    4. '):
' → logprob: -7.820905685424805
    5. ')' → logprob: -8.695905685424805
    6. ']' → logprob: -8.820905685424805
    7. ' ):' → logprob: -10.070905685424805
    8. ']):' → logprob: -10.320905685424805
    9. '():' → logprob: -11.320905685424805
    10. ']:
' → logprob: -11.570905685424805

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024764176458120346
    2. ' components' → logprob: -4.274764060974121
    3. 'components' → logprob: -4.774764060974121
    4. '   ' → logprob: -6.649764060974121
    5. '        
' → logprob: -7.899764060974121
    6. '    
' → logprob: -9.274764060974121
    7. ':
' → logprob: -9.649764060974121
    8. '<|end|>' → logprob: -9.899764060974121
    9. '):
' → logprob: -10.149764060974121
    10. ':' → logprob: -10.274764060974121

Token 118: ' c' (ID: 274)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.28571760654449463
    2. ' components' → logprob: -1.4107176065444946
    3. 'count' → logprob: -5.785717487335205
    4. ' count' → logprob: -7.535717487335205
    5. 'component' → logprob: -8.410717964172363
    6. '           ' → logprob: -9.035717964172363
    7. '       ' → logprob: -9.160717964172363
    8. ' size' → logprob: -9.535717964172363
    9. 'size' → logprob: -9.660717964172363
    10. '   ' → logprob: -9.785717964172363

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7615857720375061
    2. 'ount' → logprob: -1.2615857124328613
    3. 'om' → logprob: -2.1365857124328613
    4. '=' → logprob: -2.7615857124328613
    5. 'omp' → logprob: -3.6365857124328613
    6. 'components' → logprob: -4.386585712432861
    7. '_size' → logprob: -4.761585712432861
    8. '   ' → logprob: -5.136585712432861
    9. '_components' → logprob: -5.261585712432861
    10. 'size' → logprob: -5.511585712432861

Token 120: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.004094547126442194
    2. ' dfs' → logprob: -5.50409460067749
    3. 'df' → logprob: -11.254094123840332
    4. '   ' → logprob: -13.379094123840332
    5. ' ' → logprob: -15.004094123840332
    6. '
' → logprob: -15.004094123840332
    7. 'd' → logprob: -15.129094123840332
    8. 'ds' → logprob: -15.379094123840332
    9. 'fs' → logprob: -15.504094123840332
    10. 'DFS' → logprob: -16.37909507751465

Token 121: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.611323624383658e-05
    2. '(' → logprob: -9.625065803527832
    3. '(
' → logprob: -17.62506675720215
    4. ' (' → logprob: -18.75006675720215
    5. 'i' → logprob: -19.62506675720215
    6. '(I' → logprob: -19.75006675720215
    7. '(ii' → logprob: -19.75006675720215
    8. ' ' → logprob: -20.50006675720215
    9. '(u' → logprob: -20.62506675720215
    10. '(

' → logprob: -20.87506675720215

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3137276768684387
    2. ')
' → logprob: -1.313727617263794
    3. ')
' → logprob: -7.688727855682373
    4. ')

' → logprob: -12.188727378845215
    5. ' )
' → logprob: -13.688727378845215
    6. ' )' → logprob: -14.063727378845215
    7. ')`
' → logprob: -15.938727378845215
    8. ')`' → logprob: -16.06372833251953
    9. ')#' → logprob: -16.31372833251953
    10. ')

' → logprob: -16.43872833251953

Token 123: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41625577211380005
    2. '       ' → logprob: -1.5412557125091553
    3. 'components' → logprob: -2.1662557125091553
    4. '
' → logprob: -4.916255950927734
    5. ' components' → logprob: -5.541255950927734
    6. '```' → logprob: -8.666255950927734
    7. '.components' → logprob: -8.791255950927734
    8. '    
' → logprob: -9.416255950927734
    9. '        
' → logprob: -10.041255950927734
    10. '_components' → logprob: -10.416255950927734

Token 124: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' (adapté à ' components') → logprob: -1.3544423381972592e-05
    2. ' components' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.50001335144043
    4. '
' → logprob: -15.62501335144043
    5. '       ' → logprob: -16.37501335144043
    6. '.components' → logprob: -16.62501335144043
    7. '```' → logprob: -19.12501335144043
    8. '    
' → logprob: -19.50001335144043
    9. '           ' → logprob: -19.75001335144043
    10. 'component' → logprob: -20.25001335144043

Token 125: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019514684099704027
    2. '.' → logprob: -6.251951694488525
    3. '.app' → logprob: -11.376951217651367
    4. '.ap' → logprob: -12.126951217651367
    5. '.extend' → logprob: -13.001951217651367
    6. '.py' → logprob: -13.501951217651367
    7. '.setdefault' → logprob: -14.251951217651367
    8. '.add' → logprob: -14.626951217651367
    9. '.push' → logprob: -15.126951217651367
    10. 'append' → logprob: -15.251951217651367

Token 126: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0009130131802521646
    2. '(' → logprob: -7.000913143157959
    3. '(count' → logprob: -14.3759126663208
    4. '(
' → logprob: -14.7509126663208
    5. ' (' → logprob: -15.2509126663208
    6. 'c' → logprob: -16.625913619995117
    7. '((' → logprob: -16.625913619995117
    8. ')c' → logprob: -16.625913619995117
    9. '(

' → logprob: -18.250913619995117
    10. ' c' → logprob: -18.500913619995117

Token 127: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ')
' → logprob: -11.62501049041748
    3. ' )' → logprob: -14.62501049041748
    4. '))' → logprob: -15.87501049041748
    5. ')`' → logprob: -16.000011444091797
    6. '),' → logprob: -16.375011444091797
    7. ']' → logprob: -16.500011444091797
    8. '}' → logprob: -16.625011444091797
    9. '())' → logprob: -16.625011444091797
    10. '`)' → logprob: -16.625011444091797

Token 128: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20637252926826477
    2. 'components' → logprob: -1.7063724994659424
    3. 'max' → logprob: -6.3313727378845215
    4. 'if' → logprob: -6.4563727378845215
    5. 'for' → logprob: -7.8313727378845215
    6. 'total' → logprob: -8.206372261047363
    7. 'answer' → logprob: -8.331372261047363
    8. 'largest' → logprob: -8.331372261047363
    9. 'sizes' → logprob: -9.956372261047363
    10. 'component' → logprob: -9.956372261047363

Token 129: ' nombre' (ID: 9733)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.3299412727355957
    2. 'print' → logprob: -1.4549412727355957
    3. ' components' → logprob: -3.4549412727355957
    4. 'for' → logprob: -5.704941272735596
    5. 'max' → logprob: -5.829941272735596
    6. ' print' → logprob: -5.954941272735596
    7. 'total' → logprob: -6.329941272735596
    8. ' for' → logprob: -6.454941272735596
    9. 'sorted' → logprob: -7.079941272735596
    10. 'answer' → logprob: -7.204941272735596

Token 130: ' d' (ID: 272)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5150696635246277
    2. '_components' → logprob: -1.7650697231292725
    3. ' =' → logprob: -2.6400697231292725
    4. '_of' → logprob: -3.0150697231292725
    5. '=' → logprob: -3.1400697231292725
    6. '_' → logprob: -3.5150697231292725
    7. '_total' → logprob: -4.265069484710693
    8. '_max' → logprob: -5.015069484710693
    9. '_comp' → logprob: -6.015069484710693
    10. '_de' → logprob: -6.015069484710693

Token 131: ''ar' (ID: 54307)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2656885385513306
    2. ' de' → logprob: -1.3906885385513306
    3. '_components' → logprob: -2.140688419342041
    4. ' components' → logprob: -2.640688419342041
    5. '_' → logprob: -2.765688419342041
    6. ' composants' → logprob: -3.265688419342041
    7. ' =' → logprob: -3.390688419342041
    8. '=' → logprob: -4.015688419342041
    9. 'components' → logprob: -4.265688419342041
    10. ' e' → logprob: -4.390688419342041

Token 132: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.08172828704118729
    2. 'reurs' → logprob: -3.206728219985962
    3. 'êts' → logprob: -4.706728458404541
    4. 'etes' → logprob: -4.831728458404541
    5. 'tes' → logprob: -5.456728458404541
    6. 'e' → logprob: -5.456728458404541
    7. 'r' → logprob: -5.581728458404541
    8. 'ete' → logprob: -6.206728458404541
    9. 'ête' → logprob: -6.706728458404541
    10. 're' → logprob: -6.831728458404541

Token 133: ' à' (ID: 1221)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0017318216850981116
    2. 'edge' → logprob: -6.876731872558594
    3. 'total' → logprob: -8.126731872558594
    4. 'E' → logprob: -8.251731872558594
    5. 'ar' → logprob: -10.501731872558594
    6. '=' → logprob: -10.501731872558594
    7. ' edges' → logprob: -10.626731872558594
    8. 'num' → logprob: -10.751731872558594
    9. 'm' → logprob: -10.876731872558594
    10. ' =' → logprob: -11.376731872558594

Token 134: ' ajouter' (ID: 78457)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.003084428608417511
    2. 'sup' → logprob: -6.878084659576416
    3. 'part' → logprob: -8.003084182739258
    4. 'addition' → logprob: -8.253084182739258
    5. 'ret' → logprob: -8.503084182739258
    6. 'add' → logprob: -8.628084182739258
    7. 'calcul' → logprob: -8.753084182739258
    8. 'Ajouter' → logprob: -9.128084182739258
    9. 'aff' → logprob: -9.378084182739258
    10. 'tr' → logprob: -9.378084182739258

Token 135: ' pour' (ID: 1930)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.010366596281528473
    2. 'total' → logprob: -5.635366439819336
    3. 'added' → logprob: -6.260366439819336
    4. 'needed' → logprob: -6.510366439819336
    5. 'answer' → logprob: -7.135366439819336
    6. 'edge' → logprob: -7.260366439819336
    7. 'additional' → logprob: -7.510366439819336
    8. 'missing' → logprob: -8.385366439819336
    9. 'ans' → logprob: -8.510366439819336
    10. 'result' → logprob: -9.135366439819336

Token 136: ' connecter' (ID: 85351)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.805956244468689
    2. ' rendre' → logprob: -1.180956244468689
    3. 'connect' → logprob: -1.680956244468689
    4. 'conn' → logprob: -3.4309563636779785
    5. ' connecter' → logprob: -4.4309563636779785
    6. 'que' → logprob: -5.0559563636779785
    7. ' r' → logprob: -6.3059563636779785
    8. '#' → logprob: -6.4309563636779785
    9. 'compl' → logprob: -6.5559563636779785
    10. 'rel' → logprob: -6.8059563636779785

Token 137: ' tous' (ID: 10688)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.555412232875824
    2. 'components' → logprob: -1.4304122924804688
    3. ' len' → logprob: -2.3054122924804688
    4. 'le' → logprob: -3.9304122924804688
    5. ' le' → logprob: -4.555412292480469
    6. 'all' → logprob: -4.680412292480469
    7. ' components' → logprob: -4.805412292480469
    8. 'les' → logprob: -5.055412292480469
    9. 'graph' → logprob: -5.180412292480469
    10. 'com' → logprob: -5.180412292480469

Token 138: ' les' (ID: 1341)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.28661587834358215
    2. 'le' → logprob: -2.0366158485412598
    3. 'les' → logprob: -3.2866158485412598
    4. 'edges' → logprob: -3.4116158485412598
    5. '=' → logprob: -4.41161584854126
    6. 'l' → logprob: -5.16161584854126
    7. 'graph' → logprob: -5.16161584854126
    8. 'nodes' → logprob: -5.53661584854126
    9. ' le' → logprob: -5.78661584854126
    10. ' les' → logprob: -5.91161584854126

Token 139: ' composants' (ID: 162030)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.23193983733654022
    2. 'components' → logprob: -1.7319397926330566
    3. ' composants' → logprob: -3.8569397926330566
    4. 's' → logprob: -5.481939792633057
    5. ' compos' → logprob: -6.356939792633057
    6. 'som' → logprob: -6.481939792633057
    7. 'component' → logprob: -7.481939792633057
    8. 'comp' → logprob: -8.606940269470215
    9. ' somm' → logprob: -8.731940269470215
    10. 'élé' → logprob: -9.231940269470215

Token 140: ' =' (ID: 314)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5291038155555725
    2. 'print' → logprob: -0.9041038155555725
    3. 'answer' → logprob: -6.404103755950928
    4. 'result' → logprob: -6.404103755950928
    5. 'ans' → logprob: -6.654103755950928
    6. 'len' → logprob: -8.154104232788086
    7. 'edge' → logprob: -8.904104232788086
    8. 'needed' → logprob: -9.154104232788086
    9. 'num' → logprob: -9.154104232788086
    10. ' edges' → logprob: -9.154104232788086

Token 141: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0016310286009684205
    2. ' len' → logprob: -6.501631259918213
    3. 'components' → logprob: -9.501630783081055
    4. '(len' → logprob: -10.251630783081055
    5. 'sum' → logprob: -11.876630783081055
    6. 'max' → logprob: -12.501630783081055
    7. '[len' → logprob: -12.751630783081055
    8. '`' → logprob: -14.001630783081055
    9. '
' → logprob: -14.001630783081055
    10. '```' → logprob: -14.001630783081055

Token 142: '_de' (ID: 5047)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08141603320837021
    2. 'components' → logprob: -2.831416130065918
    3. 'len' → logprob: -4.456416130065918
    4. '(len' → logprob: -6.206416130065918
    5. 'de' → logprob: -6.456416130065918
    6. '_components' → logprob: -6.581416130065918
    7. 'des' → logprob: -6.956416130065918
    8. 'd' → logprob: -7.331416130065918
    9. 'of' → logprob: -7.456416130065918
    10. '=len' → logprob: -9.331416130065918

Token 143: '_com' (ID: 10828)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.35689568519592285
    2. 'com' → logprob: -1.6068956851959229
    3. '_components' → logprob: -2.481895685195923
    4. '_com' → logprob: -4.731895446777344
    5. ' composants' → logprob: -6.231895446777344
    6. 'component' → logprob: -6.856895446777344
    7. '_' → logprob: -6.981895446777344
    8. 'conn' → logprob: -6.981895446777344
    9. 's' → logprob: -7.356895446777344
    10. 'ar' → logprob: -8.231895446777344

Token 144: 'pos' (ID: 1103)
  Prédit: 'ponents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponents' → logprob: -0.2356792539358139
    2. 'pos' → logprob: -1.610679268836975
    3. 'p' → logprob: -5.3606791496276855
    4. 'pont' → logprob: -5.8606791496276855
    5. 'pon' → logprob: -6.7356791496276855
    6. 'ponent' → logprob: -7.1106791496276855
    7. 'n' → logprob: -9.360679626464844
    8. 'pons' → logprob: -9.360679626464844
    9. '```' → logprob: -10.110679626464844
    10. 's' → logprob: -10.110679626464844

Token 145: 'ants' (ID: 2027)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.01821994222700596
    2. 'nts' → logprob: -4.018219947814941
    3. 'ts' → logprob: -10.518219947814941
    4. 'n' → logprob: -11.143219947814941
    5. 'ants' → logprob: -11.143219947814941
    6. 'ent' → logprob: -12.018219947814941
    7. 'nt' → logprob: -13.643219947814941
    8. '
' → logprob: -14.018219947814941
    9. 'entes' → logprob: -14.268219947814941
    10. 's' → logprob: -14.393219947814941

Token 146: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.060708187520504
    2. '-' → logprob: -3.1857082843780518
    3. 's' → logprob: -4.060708045959473
    4. ' ' → logprob: -8.560708045959473
    5. ' ' → logprob: -10.435708045959473
    6. 'len' → logprob: -11.060708045959473
    7. 'components' → logprob: -11.310708045959473
    8. 'es' → logprob: -11.435708045959473
    9. ' =' → logprob: -12.185708045959473
    10. ')' → logprob: -12.435708045959473

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '```' → logprob: -16.000179290771484
    4. ' ' → logprob: -16.750179290771484
    5. '   ' → logprob: -17.375179290771484
    6. 'len' → logprob: -18.875179290771484
    7. '=' → logprob: -19.625179290771484
    8. '`' → logprob: -19.750179290771484
    9. '  ' → logprob: -19.875179290771484
    10. '۱' → logprob: -20.250179290771484

Token 148: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07503906637430191
    2. 'edges' → logprob: -3.3250391483306885
    3. 'if' → logprob: -4.075038909912109
    4. 'nombre' → logprob: -4.825038909912109
    5. 'num' → logprob: -5.825038909912109
    6. 'answer' → logprob: -5.825038909912109
    7. 'result' → logprob: -6.200038909912109
    8. 'components' → logprob: -6.700038909912109
    9. 'number' → logprob: -7.575038909912109
    10. 'n' → logprob: -7.700038909912109

Token 149: 'edges' (ID: 39127)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005202094092965126
    2. 'edges' → logprob: -5.380202293395996
    3. 'result' → logprob: -8.630202293395996
    4. 'answer' → logprob: -9.505202293395996
    5. 'num' → logprob: -9.755202293395996
    6. 'len' → logprob: -10.005202293395996
    7. 'nombre' → logprob: -10.005202293395996
    8. 'components' → logprob: -10.130202293395996
    9. 'ans' → logprob: -10.130202293395996
    10. 'if' → logprob: -10.380202293395996

Token 150: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.07755324244499207
    2. '_' → logprob: -2.7025532722473145
    3. '_added' → logprob: -5.8275532722473145
    4. ' =' → logprob: -6.5775532722473145
    5. '_add' → logprob: -6.5775532722473145
    6. '_needed' → logprob: -6.5775532722473145
    7. '_a' → logprob: -8.702552795410156
    8. '=' → logprob: -9.702552795410156
    9. '_required' → logprob: -9.827552795410156
    10. '_count' → logprob: -10.077552795410156

Token 151: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.006690275855362415
    2. '_connect' → logprob: -5.256690502166748
    3. 'add' → logprob: -6.631690502166748
    4. '_' → logprob: -9.25669002532959
    5. 'connect' → logprob: -10.63169002532959
    6. '_append' → logprob: -11.75669002532959
    7. '_attach' → logprob: -13.13169002532959
    8. '_added' → logprob: -13.50669002532959
    9. ' add' → logprob: -14.00669002532959
    10. '_remove' → logprob: -14.13169002532959

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028290078043937683
    2. '=' → logprob: -5.877829074859619
    3. '_' → logprob: -11.252828598022461
    4. ' ' → logprob: -11.877828598022461
    5. ' +=' → logprob: -13.752828598022461
    6. '=len' → logprob: -13.752828598022461
    7. ' _' → logprob: -14.002828598022461
    8. ' =
' → logprob: -15.502828598022461
    9. ' ' → logprob: -15.627828598022461
    10. ')' → logprob: -15.877828598022461

Token 153: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011051828041672707
    2. ' len' → logprob: -4.511051654815674
    3. '(len' → logprob: -12.511052131652832
    4. '[len' → logprob: -15.636052131652832
    5. 'max' → logprob: -16.386051177978516
    6. '	len' → logprob: -17.761051177978516
    7. '=len' → logprob: -18.136051177978516
    8. 'components' → logprob: -20.011051177978516
    9. ' max' → logprob: -20.386051177978516
    10. '
' → logprob: -20.761051177978516

Token 154: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.41866585687967e-06
    2. 'components' → logprob: -12.375008583068848
    3. '(edges' → logprob: -12.625008583068848
    4. '(
' → logprob: -14.625008583068848
    5. '(com' → logprob: -15.500008583068848
    6. '(component' → logprob: -16.25000762939453
    7. ' (' → logprob: -17.00000762939453
    8. '(comp' → logprob: -17.25000762939453
    9. '(parts' → logprob: -17.25000762939453
    10. ' components' → logprob: -17.50000762939453

Token 155: 'components' (ID: 8395)
  Prédit: 'components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.500001907348633
    3. ' components' → logprob: -15.625001907348633
    4. '.components' → logprob: -17.750001907348633
    5. 'component' → logprob: -19.250001907348633
    6. '_components' → logprob: -20.125001907348633
    7. '/components' → logprob: -20.250001907348633
    8. '-components' → logprob: -21.125001907348633
    9. '[' → logprob: -21.500001907348633
    10. 'Components' → logprob: -21.750001907348633

Token 156: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09438270330429077
    2. ' -' → logprob: -2.5943827629089355
    3. '-' → logprob: -4.2193827629089355
    4. ')-' → logprob: -7.9693827629089355
    5. ' )' → logprob: -8.094382286071777
    6. '-)' → logprob: -11.719382286071777
    7. '')' → logprob: -13.219382286071777
    8. '()' → logprob: -13.719382286071777
    9. ']' → logprob: -13.844382286071777
    10. '")' → logprob: -14.594382286071777

Token 157: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06198751926422119
    2. '-' → logprob: -2.8119874000549316
    3. ' ' → logprob: -10.93698787689209
    4. ' ' → logprob: -14.18698787689209
    5. ')' → logprob: -15.06198787689209
    6. '[' → logprob: -15.31198787689209
    7. '...' → logprob: -15.56198787689209
    8. '```' → logprob: -15.81198787689209
    9. '`' → logprob: -15.93698787689209
    10. '  ' → logprob: -17.061986923217773

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -18.125001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '１' → logprob: -21.625001907348633
    6. '۱' → logprob: -21.875001907348633
    7. ' ' → logprob: -22.000001907348633
    8. '[' → logprob: -22.000001907348633
    9. '<|end|>' → logprob: -22.000001907348633
    10. '
' → logprob: -22.375001907348633

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -19.625
    4. '   ' → logprob: -21.5
    5. '
' → logprob: -22.875
    6. '１' → logprob: -23.0
    7. '<|end|>' → logprob: -23.375
    8. '۱' → logprob: -23.625
    9. '[' → logprob: -24.25
    10. '	' → logprob: -24.375

Token 160: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5107177862082608e-05
    2. '
' → logprob: -11.250024795532227
    3. '<|end|>' → logprob: -11.875024795532227
    4. ' print' → logprob: -12.750024795532227
    5. '```' → logprob: -13.875024795532227
    6. 'edges' → logprob: -13.875024795532227
    7. '#print' → logprob: -15.625024795532227
    8. '#' → logprob: -16.250024795532227
    9. 'for' → logprob: -16.625024795532227
    10. ')' → logprob: -17.125024795532227

Token 161: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. 'for' → logprob: -16.25
    3. 'pr' → logprob: -17.375
    4. ' print' → logprob: -17.75
    5. 'if' → logprob: -17.875
    6. '
' → logprob: -18.625
    7. 'edges' → logprob: -18.625
    8. '```' → logprob: -18.75
    9. '#print' → logprob: -18.875
    10. ')' → logprob: -20.25

Token 162: ' si' (ID: 1784)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.0126840758603066e-05
    2. 'for' → logprob: -11.250040054321289
    3. ' print' → logprob: -11.750040054321289
    4. 'if' → logprob: -12.000040054321289
    5. 'edges' → logprob: -12.000040054321289
    6. 'total' → logprob: -13.500040054321289
    7. 'pr' → logprob: -13.625040054321289
    8. 'components' → logprob: -14.250040054321289
    9. 'result' → logprob: -14.500040054321289
    10. 'answer' → logprob: -14.750040054321289

Token 163: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.14331980049610138
    2. 'edges' → logprob: -2.018319845199585
    3. ' len' → logprob: -7.893319606781006
    4. ' not' → logprob: -9.018320083618164
    5. 'len' → logprob: -9.268320083618164
    6. ' V' → logprob: -11.018320083618164
    7. 'V' → logprob: -11.643320083618164
    8. ' components' → logprob: -12.143320083618164
    9. '(edges' → logprob: -12.393320083618164
    10. ' ' → logprob: -12.643320083618164

Token 164: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.250001907348633
    3. '_t' → logprob: -14.750001907348633
    4. 'to' → logprob: -17.000001907348633
    5. '_a' → logprob: -17.375001907348633
    6. 'à' → logprob: -18.125001907348633
    7. '_TO' → logprob: -18.250001907348633
    8. 's' → logprob: -18.375001907348633
    9. '_needed' → logprob: -18.375001907348633
    10. '\' → logprob: -18.875001907348633

Token 165: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.25266268849372864
    2. 'add' → logprob: -1.5026626586914062
    3. '_' → logprob: -8.502662658691406
    4. 'aj' → logprob: -9.002662658691406
    5. '_to' → logprob: -9.002662658691406
    6. 'edges' → logprob: -10.377662658691406
    7. '>' → logprob: -10.377662658691406
    8. '#' → logprob: -10.627662658691406
    9. 'to' → logprob: -10.877662658691406
    10. 'Ajouter' → logprob: -11.002662658691406

Token 166: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8658177256584167
    2. '>' → logprob: -1.3658177852630615
    3. ' ==' → logprob: -1.4908177852630615
    4. '==' → logprob: -2.4908177852630615
    5. ' <=' → logprob: -4.490817546844482
    6. '<=' → logprob: -5.365817546844482
    7. ' ' → logprob: -10.24081802368164
    8. ':' → logprob: -10.24081802368164
    9. ' <' → logprob: -10.36581802368164
    10. '=' → logprob: -10.61581802368164

Token 167: ' impair' (ID: 64113)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.053610846400260925
    2. '>' → logprob: -3.0536108016967773
    3. '==' → logprob: -6.678610801696777
    4. ' supérieur' → logprob: -6.678610801696777
    5. 'sup' → logprob: -7.303610801696777
    6. ' ' → logprob: -7.678610801696777
    7. ' >' → logprob: -7.803610801696777
    8. '=' → logprob: -8.053610801696777
    9. 'greater' → logprob: -8.928610801696777
    10. 'strict' → logprob: -9.053610801696777

Token 168: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16130860149860382
    2. ':
' → logprob: -2.036308526992798
    3. 'if' → logprob: -4.161308765411377
    4. ',' → logprob: -6.036308765411377
    5. ' if' → logprob: -8.161308288574219
    6. ' :' → logprob: -9.161308288574219
    7. ',
' → logprob: -9.911308288574219
    8. ' :
' → logprob: -10.411308288574219
    9. ':

' → logprob: -12.286308288574219
    10. '#' → logprob: -14.036308288574219

Token 169: ' T' (ID: 353)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5172120928764343
    2. 'edges' → logprob: -1.767212152481079
    3. 'print' → logprob: -2.017212152481079
    4. ' print' → logprob: -2.392212152481079
    5. '
' → logprob: -4.8922119140625
    6. '   ' → logprob: -7.3922119140625
    7. '(edges' → logprob: -9.7672119140625
    8. '
' → logprob: -10.0172119140625
    9. ' if' → logprob: -10.2047119140625
    10. 'if' → logprob: -10.3922119140625

Token 170: 'aro' (ID: 8421)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5711706280708313
    2. 'r' → logprob: -1.1961705684661865
    3. 'O' → logprob: -2.8211705684661865
    4. 'R' → logprob: -3.4461705684661865
    5. 'F' → logprob: -5.571170806884766
    6. 'o' → logprob: -5.821170806884766
    7. 'P' → logprob: -5.821170806884766
    8. 'if' → logprob: -6.071170806884766
    9. 'edges' → logprob: -6.071170806884766
    10. 'E' → logprob: -6.446170806884766

Token 171: ' gagne' (ID: 141776)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25984492897987366
    2. ' if' → logprob: -2.134845018386841
    3. 'print' → logprob: -2.759845018386841
    4. '
' → logprob: -3.259845018386841
    5. 'edges' → logprob: -5.509844779968262
    6. ' print' → logprob: -6.634844779968262
    7. ' edges' → logprob: -7.384844779968262
    8. 'else' → logprob: -7.634844779968262
    9. ' =' → logprob: -7.759844779968262
    10. '\' → logprob: -8.134844779968262

Token 172: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009551728144288063
    2. 'print' → logprob: -4.884551525115967
    3. '
' → logprob: -6.634551525115967
    4. ' if' → logprob: -7.384551525115967
    5. 'result' → logprob: -13.009552001953125
    6. '\n' → logprob: -13.384552001953125
    7. '```' → logprob: -14.134552001953125
    8. 'edges' → logprob: -14.634552001953125
    9. ' print' → logprob: -14.759552001953125
    10. '\' → logprob: -14.884552001953125

Token 173: ' sinon' (ID: 52915)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08235009014606476
    2. ' else' → logprob: -3.082350015640259
    3. 'print' → logprob: -3.582350015640259
    4. '"' → logprob: -5.707350254058838
    5. ' print' → logprob: -7.082350254058838
    6. '#' → logprob: -7.457350254058838
    7. 'if' → logprob: -8.08234977722168
    8. ''' → logprob: -9.20734977722168
    9. 'edges' → logprob: -9.70734977722168
    10. '"T' → logprob: -10.45734977722168

Token 174: ' Han' (ID: 21513)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03141644224524498
    2. ' print' → logprob: -3.656416416168213
    3. '"' → logprob: -5.656416416168213
    4. 'if' → logprob: -8.281416893005371
    5. '   ' → logprob: -8.406416893005371
    6. ''' → logprob: -8.531416893005371
    7. '#' → logprob: -8.781416893005371
    8. 'tar' → logprob: -8.781416893005371
    9. 'T' → logprob: -8.906416893005371
    10. ' T' → logprob: -9.281416893005371

Token 175: 'ako' (ID: 5938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7454465627670288
    2. '
' → logprob: -0.9954465627670288
    3. 'if' → logprob: -1.8704465627670288
    4. '\n' → logprob: -6.745446681976318
    5. ' if' → logprob: -8.24544620513916
    6. '\' → logprob: -9.24544620513916
    7. '`
' → logprob: -9.49544620513916
    8. '
' → logprob: -9.49544620513916
    9. '```' → logprob: -9.99544620513916
    10. ' print' → logprob: -10.49544620513916

Token 176: ' gagne' (ID: 141776)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5243561863899231
    2. 'if' → logprob: -1.0243561267852783
    3. '
' → logprob: -3.0243561267852783
    4. '\n' → logprob: -8.3993558883667
    5. ' if' → logprob: -8.7743558883667
    6. '\' → logprob: -10.7743558883667
    7. ' print' → logprob: -11.1493558883667
    8. '```' → logprob: -11.1493558883667
    9. 'result' → logprob: -12.8993558883667
    10. ' 
' → logprob: -13.0243558883667

Token 177: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3183063268661499
    2. 'print' → logprob: -1.31830632686615
    3. '
' → logprob: -5.3183064460754395
    4. ' if' → logprob: -9.568305969238281
    5. 'result' → logprob: -10.068305969238281
    6. '\n' → logprob: -11.693305969238281
    7. 'edges' → logprob: -12.818305969238281
    8. ' print' → logprob: -13.193305969238281
    9. '```' → logprob: -13.318305969238281
    10. '
' → logprob: -14.193305969238281

Token 178: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4740808606147766
    2. 'if' → logprob: -0.9740808606147766
    3. ' if' → logprob: -13.349081039428711
    4. 'result' → logprob: -13.849081039428711
    5. ' print' → logprob: -14.724081039428711
    6. 'prin' → logprob: -15.349081039428711
    7. '
' → logprob: -15.724081039428711
    8. 'pr' → logprob: -15.974081039428711
    9. '```' → logprob: -15.974081039428711
    10. 'for' → logprob: -16.59908103942871

Token 179: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.2014322429895401
    2. ' edges' → logprob: -1.701432228088379
    3. '(edges' → logprob: -11.076432228088379
    4. 'edge' → logprob: -12.951432228088379
    5. ' edge' → logprob: -15.076432228088379
    6. '_edges' → logprob: -15.326432228088379
    7. '.edges' → logprob: -15.451432228088379
    8. 'Edges' → logprob: -16.076433181762695
    9. ' ' → logprob: -16.701433181762695
    10. 'ed' → logprob: -16.826433181762695

Token 180: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -15.125000953674316
    3. 'to' → logprob: -16.250001907348633
    4. '__' → logprob: -16.250001907348633
    5. 's' → logprob: -16.375001907348633
    6. 'To' → logprob: -16.375001907348633
    7. '_TO' → logprob: -16.625001907348633
    8. '"_' → logprob: -17.000001907348633
    9. '```' → logprob: -17.125001907348633
    10. '_edges' → logprob: -17.125001907348633

Token 181: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.0003364158037584275
    2. 'add' → logprob: -8.125336647033691
    3. '_' → logprob: -10.375336647033691
    4. '_to' → logprob: -12.500336647033691
    5. ''_' → logprob: -13.000336647033691
    6. ' _' → logprob: -14.250336647033691
    7. '_ad' → logprob: -14.250336647033691
    8. 'Add' → logprob: -14.500336647033691
    9. '_a' → logprob: -15.375336647033691
    10. ' add' → logprob: -15.375336647033691

Token 182: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.003288701642304659
    2. '%' → logprob: -5.753288745880127
    3. ' ' → logprob: -9.128288269042969
    4. ' ' → logprob: -13.003288269042969
    5. ' %
' → logprob: -15.878288269042969
    6. '```' → logprob: -17.75328826904297
    7. ' %)' → logprob: -18.37828826904297
    8. ' %

' → logprob: -19.00328826904297
    9. ' %=' → logprob: -19.37828826904297
    10. ' `%' → logprob: -19.37828826904297

Token 183: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3132627606391907
    2. '2' → logprob: -1.313262701034546
    3. '```' → logprob: -14.938262939453125
    4. ' ' → logprob: -15.313262939453125
    5. '  ' → logprob: -15.813262939453125
    6. '1' → logprob: -16.188262939453125
    7. ')' → logprob: -16.688262939453125
    8. '==' → logprob: -17.063262939453125
    9. ' ==' → logprob: -17.188262939453125
    10. '=' → logprob: -17.438262939453125

Token 184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018029935017693788
    2. ' ' → logprob: -8.6251802444458
    3. '```' → logprob: -14.3751802444458
    4. '==' → logprob: -16.500181198120117
    5. '   ' → logprob: -17.750181198120117
    6. '1' → logprob: -17.812681198120117
    7. '  ' → logprob: -17.812681198120117
    8. '=' → logprob: -18.125181198120117
    9. '２' → logprob: -18.312681198120117
    10. '!' → logprob: -19.125181198120117

Token 185: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47931143641471863
    2. '==' → logprob: -0.979311466217041
    3. ':' → logprob: -5.854311466217041
    4. '=' → logprob: -6.104311466217041
    5. ' =' → logprob: -9.854310989379883
    6. ' :' → logprob: -10.104310989379883
    7. '0' → logprob: -11.354310989379883
    8. '1' → logprob: -12.104310989379883
    9. ' !=' → logprob: -12.354310989379883
    10. '!=' → logprob: -13.479310989379883

Token 186: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.306356817483902
    2. '1' → logprob: -1.8063567876815796
    3. ' ' → logprob: -2.306356906890869
    4. '=' → logprob: -14.931356430053711
    5. '```' → logprob: -14.931356430053711
    6. '   ' → logprob: -16.05635643005371
    7. '  ' → logprob: -16.61885643005371
    8. '01' → logprob: -16.93135643005371
    9. ' ' → logprob: -16.99385643005371
    10. '2' → logprob: -17.36885643005371

Token 187: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.055724307894706726
    2. '1' → logprob: -2.9307243824005127
    3. '2' → logprob: -7.305724143981934
    4. ' ' → logprob: -8.680724143981934
    5. '```' → logprob: -15.930724143981934
    6. '=' → logprob: -17.18072509765625
    7. '==' → logprob: -17.80572509765625
    8. '01' → logprob: -17.93072509765625
    9. ':' → logprob: -18.18072509765625
    10. '   ' → logprob: -18.68072509765625

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011051236651837826
    2. ':
' → logprob: -4.511051177978516
    3. ' :' → logprob: -12.761051177978516
    4. ':
' → logprob: -15.261051177978516
    5. ' :
' → logprob: -15.636051177978516
    6. ':\' → logprob: -17.386051177978516
    7. ':

' → logprob: -17.886051177978516
    8. ':`' → logprob: -18.011051177978516
    9. '):' → logprob: -18.261051177978516
    10. '   ' → logprob: -18.386051177978516

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0463515967130661
    2. ' print' → logprob: -3.296351671218872
    3. 'print' → logprob: -4.796351432800293
    4. '	print' → logprob: -11.296351432800293
    5. '   ' → logprob: -12.921351432800293
    6. '       ' → logprob: -15.046351432800293
    7. '    ' → logprob: -15.421351432800293
    8. '```' → logprob: -16.04635238647461
    9. '
' → logprob: -16.17135238647461
    10. '  ' → logprob: -16.79635238647461

Token 190: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011724866926670074
    2. ' print' → logprob: -7.0011725425720215
    3. '   ' → logprob: -8.251172065734863
    4. '	print' → logprob: -16.87617301940918
    5. '```' → logprob: -20.00117301940918
    6. '
' → logprob: -20.25117301940918
    7. '.print' → logprob: -20.75117301940918
    8. '       ' → logprob: -20.87617301940918
    9. 'Print' → logprob: -21.50117301940918
    10. '_print' → logprob: -21.50117301940918

Token 191: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0033172115217894316
    2. '('' → logprob: -5.753317356109619
    3. '(' → logprob: -8.878316879272461
    4. '("'' → logprob: -16.25331687927246
    5. '("("' → logprob: -17.62831687927246
    6. ' ("' → logprob: -18.00331687927246
    7. '('"' → logprob: -18.00331687927246
    8. '(("' → logprob: -18.75331687927246
    9. '("")' → logprob: -18.87831687927246
    10. '("(' → logprob: -18.87831687927246

Token 192: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0006990921101532876
    2. '"T' → logprob: -7.750699043273926
    3. '"' → logprob: -8.250699043273926
    4. 'First' → logprob: -13.125699043273926
    5. '   ' → logprob: -13.500699043273926
    6. ''T' → logprob: -14.125699043273926
    7. ''' → logprob: -15.000699043273926
    8. 'Tar' → logprob: -15.125699043273926
    9. '{"' → logprob: -15.125699043273926
    10. ' T' → logprob: -15.250699043273926

Token 193: 'aro' (ID: 8421)
  Prédit: 'aro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aro' → logprob: -5.438573680294212e-06
    2. 'ar' → logprob: -12.875005722045898
    3. 'аро' → logprob: -13.625005722045898
    4. 'a' → logprob: -14.250005722045898
    5. 'ARO' → logprob: -15.000005722045898
    6. 'aroo' → logprob: -15.000005722045898
    7. 'arrow' → logprob: -16.5000057220459
    8. 'arro' → logprob: -16.6250057220459
    9. '"' → logprob: -16.7500057220459
    10. ''' → logprob: -16.8750057220459

Token 194: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.002523937961086631
    2. '")
' → logprob: -6.002523899078369
    3. '")
' → logprob: -10.752524375915527
    4. '"' → logprob: -10.877524375915527
    5. ')' → logprob: -12.627524375915527
    6. '")

' → logprob: -13.752524375915527
    7. ' ")' → logprob: -13.877524375915527
    8. ' wins' → logprob: -14.627524375915527
    9. 'G' → logprob: -14.877524375915527
    10. '勝' → logprob: -15.502524375915527

Token 195: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0002613358374219388
    2. ' else' → logprob: -8.250261306762695
    3. 'e' → logprob: -18.000261306762695
    4. '	else' → logprob: -18.625261306762695
    5. 'elser' → logprob: -18.625261306762695
    6. '_else' → logprob: -18.750261306762695
    7. 'elses' → logprob: -18.875261306762695
    8. 'elif' → logprob: -19.000261306762695
    9. 'els' → logprob: -19.250261306762695
    10. '   ' → logprob: -19.375261306762695

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22613294422626495
    2. ':
' → logprob: -1.6011329889297485
    3. '   ' → logprob: -7.476132869720459
    4. ' :
' → logprob: -9.101133346557617
    5. ' :' → logprob: -10.226133346557617
    6. ':
' → logprob: -13.101133346557617
    7. 'print' → logprob: -14.226133346557617
    8. '():
' → logprob: -14.226133346557617
    9. ':

' → logprob: -14.726133346557617
    10. ' print' → logprob: -15.226133346557617

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006658296100795269
    2. '"' → logprob: -5.38165807723999
    3. 'print' → logprob: -6.50665807723999
    4. ' print' → logprob: -8.006658554077148
    5. '("' → logprob: -9.131658554077148
    6. ' "' → logprob: -9.506658554077148
    7. '    ' → logprob: -11.506658554077148
    8. '       ' → logprob: -12.381658554077148
    9. '  ' → logprob: -12.756658554077148
    10. '	print' → logprob: -13.006658554077148

Token 198: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002099773846566677
    2. ' print' → logprob: -8.50020980834961
    3. '   ' → logprob: -12.00020980834961
    4. '"' → logprob: -15.12520980834961
    5. '	print' → logprob: -17.00020980834961
    6. '.print' → logprob: -17.50020980834961
    7. 'Print' → logprob: -17.87520980834961
    8. '(print' → logprob: -19.37520980834961
    9. '```' → logprob: -19.75020980834961
    10. '("' → logprob: -20.00020980834961

Token 199: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0001234428636962548
    2. '(' → logprob: -9.000123023986816
    3. '("("' → logprob: -16.875123977661133
    4. '('' → logprob: -17.750123977661133
    5. '"' → logprob: -18.625123977661133
    6. '(
' → logprob: -20.000123977661133
    7. '("(' → logprob: -20.500123977661133
    8. ' ("' → logprob: -20.500123977661133
    9. '(("' → logprob: -20.750123977661133
    10. '("")' → logprob: -21.125123977661133

Token 200: 'Han' (ID: 72234)
  Prédit: 'Han'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Han' → logprob: -0.3133930265903473
    2. '"' → logprob: -1.313392996788025
    3. '"H' → logprob: -9.313392639160156
    4. ''H' → logprob: -10.813392639160156
    5. ' Han' → logprob: -11.813392639160156
    6. 'H' → logprob: -12.563392639160156
    7. ''' → logprob: -13.063392639160156
    8. 'han' → logprob: -13.188392639160156
    9. '("' → logprob: -13.313392639160156
    10. ')' → logprob: -14.813392639160156

Token 201: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -3.173704271830502e-06
    2. 'ak' → logprob: -13.12500286102295
    3. 'Ako' → logprob: -14.87500286102295
    4. 'a' → logprob: -15.00000286102295
    5. 'ако' → logprob: -15.25000286102295
    6. '"' → logprob: -15.75000286102295
    7. 'ko' → logprob: -17.000003814697266
    8. '```' → logprob: -18.250003814697266
    9. '   ' → logprob: -18.500003814697266
    10. 'akoa' → logprob: -18.750003814697266

Token 202: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00024989593657664955
    2. ')")' → logprob: -8.500249862670898
    3. ')' → logprob: -10.000249862670898
    4. '()' → logprob: -14.125249862670898
    5. '}")' → logprob: -16.1252498626709
    6. '")
' → logprob: -16.7502498626709
    7. '')' → logprob: -17.5002498626709
    8. '"' → logprob: -18.5002498626709
    9. '("' → logprob: -18.8752498626709
    10. '())' → logprob: -19.0002498626709


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 200
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 98
Tokens correctement prédits (top 10): 160
Précision stricte (1ère position): 44.50%
Précision adaptée (1ère position): 49.00%
Précision (top 10): 80.00%
================================================================================
