================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from collections import deque

DIRS = [(1,0),(-1,0),(0,1),(0,-1)]

def inside(x,y,w,h):
    return 0<=x<w and 0<=y<h

def solve():
    lines = iter(stdin.read().splitlines())
    while True:
        w,h = map(int,next(lines).split())
        if w==0 and h==0: break
        grid = [list(next(lines)) for _ in range(h)]

        black_adj = [[False]*w for _ in range(h)]
        white_adj = [[False]*w for _ in range(h)]

        # Mark black adjacency
        queue = deque()
        for y in range(h):
            for x in range(w):
                if grid[y][x]=='B':
                    black_adj[y][x] = True
                    queue.append((x,y))
        while queue:
            x,y = queue.popleft()
            for dx,dy in DIRS:
                nx,ny = x+dx,y+dy
                if inside(nx,ny,w,h) and not black_adj[ny][nx] and grid[ny][nx]=='.':
                    black_adj[ny][nx] = True
                    queue.append((nx,ny))

        # Mark white adjacency
        queue = deque()
        for y in range(h):
            for x in range(w):
                if grid[y][x]=='W':
                    white_adj[y][x] = True
                    queue.append((x,y))
        while queue:
            x,y = queue.popleft()
            for dx,dy in DIRS:
                nx,ny = x+dx,y+dy
                if inside(nx,ny,w,h) and not white_adj[ny][nx] and grid[ny][nx]=='.':
                    white_adj[ny][nx] = True
                    queue.append((nx,ny))

        black_count = 0
        white_count = 0

        for y in range(h):
            for x in range(w):
                if grid[y][x]=='.':
                    is_black = black_adj[y][x]
                    is_white = white_adj[y][x]
                    # Check adjacency of this cell to opposite color's pins
                    def adj_to_opposite(c):
                        for dx,dy in DIRS:
                            nx,ny = x+dx,y+dy
                            if inside(nx,ny,w,h) and grid[ny][nx]==c:
                                return True
                        return False
                    if is_black and not adj_to_opposite('W'):
                        black_count += 1
                    if is_white and not adj_to_opposite('B'):
                        white_count += 1

        print(black_count, white_count)

if __name__=="__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.4016507863998413
    2. 'exit' → logprob: -1.7766507863998413
    3. ' exit' → logprob: -2.401650905609131
    4. ' argv' → logprob: -2.901650905609131
    5. 'import' → logprob: -4.526650905609131
    6. 'stdout' → logprob: -5.901650905609131
    7. 'path' → logprob: -7.026650905609131
    8. ' import' → logprob: -7.401650905609131
    9. 'stdin' → logprob: -7.776650905609131
    10. 'version' → logprob: -8.526650428771973

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10230562835931778
    2. '\n' → logprob: -2.7273056507110596
    3. '.readline' → logprob: -3.7273056507110596
    4. '\' → logprob: -6.3523054122924805
    5. 'newline' → logprob: -6.6023054122924805
    6. '
' → logprob: -6.8523054122924805
    7. '.read' → logprob: -7.2273054122924805
    8. 'for' → logprob: -7.4773054122924805
    9. 'import' → logprob: -7.4773054122924805
    10. '' → logprob: -7.8523054122924805

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10680919140577316
    2. 'for' → logprob: -3.481809139251709
    3. 'import' → logprob: -3.856809139251709
    4. '.readline' → logprob: -4.106809139251709
    5. '\n' → logprob: -4.356809139251709
    6. 'print' → logprob: -5.356809139251709
    7. '' → logprob: -5.856809139251709
    8. '```' → logprob: -5.981809139251709
    9. '
' → logprob: -6.481809139251709
    10. '\' → logprob: -6.606809139251709

Token 6: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0207197405397892
    2. ' sys' → logprob: -4.145719528198242
    3. ' io' → logprob: -5.770719528198242
    4. 'os' → logprob: -6.895719528198242
    5. ' typing' → logprob: -8.270719528198242
    6. ' math' → logprob: -9.770719528198242
    7. ' space' → logprob: -9.895719528198242
    8. 'sys' → logprob: -10.395719528198242
    9. ' stdout' → logprob: -10.520719528198242
    10. ' string' → logprob: -10.770719528198242

Token 7: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.45438891649246216
    2. ' import' → logprob: -1.0793888568878174
    3. '.' → logprob: -3.9543888568878174
    4. '<|end|>' → logprob: -5.9543890953063965
    5. ' ' → logprob: -6.0793890953063965
    6. '```' → logprob: -7.2043890953063965
    7. '.import' → logprob: -9.079388618469238
    8. '<|end|>' → logprob: -9.704388618469238
    9. ' defaultdict' → logprob: -9.954388618469238
    10. '.Counter' → logprob: -10.204388618469238

Token 8: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.24909456074237823
    2. ' defaultdict' → logprob: -1.7490946054458618
    3. 'deque' → logprob: -3.1240944862365723
    4. ' abc' → logprob: -5.999094486236572
    5. 'abc' → logprob: -10.49909496307373
    6. ' import' → logprob: -10.99909496307373
    7. 'default' → logprob: -11.24909496307373
    8. ' named' → logprob: -11.37409496307373
    9. ' Counter' → logprob: -11.37409496307373
    10. ' collections' → logprob: -12.49909496307373

Token 9: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.41886794567108154
    2. '
' → logprob: -1.4188679456710815
    3. '\' → logprob: -3.043868064880371
    4. '```' → logprob: -3.668868064880371
    5. 'newline' → logprob: -4.543868064880371
    6. 'd' → logprob: -5.293868064880371
    7. 'for' → logprob: -6.043868064880371
    8. 'import' → logprob: -6.418868064880371
    9. '' → logprob: -6.543868064880371
    10. '

' → logprob: -6.918868064880371

Token 10: 'DIR' (ID: 28773)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5130832195281982
    2. '\' → logprob: -2.6380832195281982
    3. 'def' → logprob: -2.7630832195281982
    4. '```' → logprob: -2.7630832195281982
    5. 'n' → logprob: -2.8880832195281982
    6. 'for' → logprob: -3.1380832195281982
    7. '`' → logprob: -3.1380832195281982
    8. 'deque' → logprob: -4.263083457946777
    9. 'import' → logprob: -4.763083457946777
    10. '.' → logprob: -5.263083457946777

Token 11: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00027337539358995855
    2. '_' → logprob: -9.000273704528809
    3. 'ECT' → logprob: -9.375273704528809
    4. ' =' → logprob: -10.375273704528809
    5. 'ections' → logprob: -11.375273704528809
    6. 'ection' → logprob: -12.125273704528809
    7. 'E' → logprob: -12.375273704528809
    8. '=' → logprob: -12.625273704528809
    9. '_S' → logprob: -12.875273704528809
    10. 'CTIONS' → logprob: -13.375273704528809

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00195384887047112
    2. '=' → logprob: -7.126954078674316
    3. '[:]' → logprob: -7.751954078674316
    4. ' =[' → logprob: -8.001954078674316
    5. '[' → logprob: -8.251954078674316
    6. '=[' → logprob: -10.501954078674316
    7. '[]' → logprob: -10.751954078674316
    8. '_' → logprob: -11.001954078674316
    9. '=[]' → logprob: -11.376954078674316
    10. '.' → logprob: -12.126954078674316

Token 13: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.08141570538282394
    2. ' [' → logprob: -3.0814156532287598
    3. '[(' → logprob: -3.5814156532287598
    4. '[' → logprob: -6.08141565322876
    5. ' {(' → logprob: -7.45641565322876
    6. ' ' → logprob: -7.83141565322876
    7. ' {'' → logprob: -8.081416130065918
    8. ' deque' → logprob: -8.331416130065918
    9. 'deque' → logprob: -8.706416130065918
    10. ' [('' → logprob: -8.831416130065918

Token 14: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.32028889656066895
    2. '0' → logprob: -1.320288896560669
    3. '1' → logprob: -5.07028865814209
    4. ' ' → logprob: -8.07028865814209
    5. '(-' → logprob: -8.57028865814209
    6. ' -' → logprob: -8.82028865814209
    7. '(' → logprob: -9.57028865814209
    8. '   ' → logprob: -14.19528865814209
    9. ' (' → logprob: -14.32028865814209
    10. ' (-' → logprob: -14.82028865814209

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6696149840718135e-05
    2. '0' → logprob: -10.500056266784668
    3. ' ,' → logprob: -10.500056266784668
    4. ' ' → logprob: -14.375056266784668
    5. ',)' → logprob: -15.125056266784668
    6. '```' → logprob: -15.250056266784668
    7. ',),' → logprob: -16.125057220458984
    8. ')' → logprob: -16.125057220458984
    9. ',
' → logprob: -16.875057220458984
    10. '<|end|>' → logprob: -17.000057220458984

Token 16: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326012015342712
    2. '0' → logprob: -0.7576012015342712
    3. '  ' → logprob: -14.132600784301758
    4. '1' → logprob: -15.007600784301758
    5. '-' → logprob: -15.132600784301758
    6. ' ' → logprob: -15.507600784301758
    7. '   ' → logprob: -15.757600784301758
    8. ' -' → logprob: -15.882600784301758
    9. '	' → logprob: -16.445100784301758
    10. ')' → logprob: -16.445100784301758

Token 17: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0438399501144886
    2. '),(' → logprob: -3.168839931488037
    3. '),
' → logprob: -7.793839931488037
    4. ')' → logprob: -7.918839931488037
    5. ' ),' → logprob: -10.418840408325195
    6. ')]' → logprob: -10.918840408325195
    7. '),

' → logprob: -11.293840408325195
    8. '),
' → logprob: -13.418840408325195
    9. ')],' → logprob: -14.418840408325195
    10. ',),' → logprob: -14.793840408325195

Token 18: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.6519967317581177
    2. '(' → logprob: -1.0269967317581177
    3. ' (-' → logprob: -2.526996612548828
    4. ' (' → logprob: -3.901996612548828
    5. '0' → logprob: -4.526996612548828
    6. '-' → logprob: -4.776996612548828
    7. ' -' → logprob: -7.026996612548828
    8. ' ' → logprob: -7.276996612548828
    9. ')' → logprob: -14.651996612548828
    10. '<|end|>' → logprob: -16.026996612548828

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '-' → logprob: -18.0
    4. '１' → logprob: -18.0625
    5. '۱' → logprob: -18.5625
    6. '

' → logprob: -18.875
    7. '১' → logprob: -18.9375
    8. '१' → logprob: -19.0625
    9. '0' → logprob: -19.375
    10. '```' → logprob: -20.0

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.392202976712724e-06
    2. '0' → logprob: -12.500006675720215
    3. ' ,' → logprob: -13.375006675720215
    4. '1' → logprob: -14.000006675720215
    5. '<|end|>' → logprob: -15.500006675720215
    6. '```' → logprob: -17.5000057220459
    7. ',(' → logprob: -17.8750057220459
    8. ')' → logprob: -18.3750057220459
    9. '),(' → logprob: -18.5000057220459
    10. '‌,' → logprob: -19.1250057220459

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '1' → logprob: -17.250015258789062
    4. '۰' → logprob: -18.250015258789062
    5. '```' → logprob: -18.375015258789062
    6. '０' → logprob: -20.250015258789062
    7. '2' → logprob: -20.750015258789062
    8. '٠' → logprob: -20.812515258789062
    9. '  ' → logprob: -21.000015258789062
    10. ',' → logprob: -21.062515258789062

Token 22: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.07903938740491867
    2. '),' → logprob: -2.5790393352508545
    3. ')]' → logprob: -9.204039573669434
    4. ')' → logprob: -10.079039573669434
    5. ' ),' → logprob: -12.329039573669434
    6. ')],' → logprob: -14.204039573669434
    7. '),
' → logprob: -14.329039573669434
    8. ',' → logprob: -14.829039573669434
    9. '],[' → logprob: -15.829039573669434
    10. ')])' → logprob: -15.954039573669434

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -11.000019073486328
    3. '1' → logprob: -13.687519073486328
    4. '```' → logprob: -14.187519073486328
    5. '۰' → logprob: -15.562519073486328
    6. '   ' → logprob: -16.125019073486328
    7. '``' → logprob: -16.312519073486328
    8. '  ' → logprob: -16.750019073486328
    9. ' ' → logprob: -17.125019073486328
    10. ')' → logprob: -17.187519073486328

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.190178904333152e-05
    2. ' ,' → logprob: -11.000031471252441
    3. ',-' → logprob: -11.500031471252441
    4. '1' → logprob: -12.250031471252441
    5. '```' → logprob: -16.125032424926758
    6. ',+' → logprob: -16.375032424926758
    7. '<|end|>' → logprob: -18.312532424926758
    8. ',
' → logprob: -18.437532424926758
    9. ' ' → logprob: -18.625032424926758
    10. '‌,' → logprob: -18.750032424926758

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000830355507787317
    2. '-' → logprob: -7.125830173492432
    3. ' ' → logprob: -10.62583065032959
    4. ' -' → logprob: -13.75083065032959
    5. '```' → logprob: -15.68833065032959
    6. '0' → logprob: -15.81333065032959
    7. ')' → logprob: -16.750829696655273
    8. ',' → logprob: -17.000829696655273
    9. '   ' → logprob: -17.250829696655273
    10. '2' → logprob: -17.313329696655273

Token 26: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.012788857333362103
    2. '),' → logprob: -4.387788772583008
    3. ')]' → logprob: -8.887788772583008
    4. ')' → logprob: -8.887788772583008
    5. ' ),' → logprob: -13.762788772583008
    6. ',' → logprob: -14.387788772583008
    7. '),
' → logprob: -15.262788772583008
    8. ')],' → logprob: -15.387788772583008
    9. ')])' → logprob: -16.012788772583008
    10. ',),' → logprob: -16.137788772583008

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1054253011243418e-05
    2. '-' → logprob: -11.125020980834961
    3. ' ' → logprob: -12.125020980834961
    4. ',' → logprob: -15.000020980834961
    5. '```' → logprob: -16.25002098083496
    6. '۰' → logprob: -16.81252098083496
    7. '1' → logprob: -17.43752098083496
    8. ' -' → logprob: -17.50002098083496
    9. '

' → logprob: -17.87502098083496
    10. '00' → logprob: -17.93752098083496

Token 28: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.10021442919969559
    2. ',' → logprob: -2.3502144813537598
    3. ' ,-' → logprob: -12.725214004516602
    4. '-' → logprob: -13.350214004516602
    5. '1' → logprob: -13.850214004516602
    6. ',-

' → logprob: -14.350214004516602
    7. ',--' → logprob: -14.850214004516602
    8. ',(' → logprob: -14.975214004516602
    9. ' ,' → logprob: -15.600214004516602
    10. ',-
' → logprob: -15.725214004516602

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.750000953674316
    3. '```' → logprob: -15.125000953674316
    4. '0' → logprob: -15.250000953674316
    5. ')' → logprob: -16.750001907348633
    6. '-' → logprob: -17.687501907348633
    7. '4' → logprob: -17.750001907348633
    8. '2' → logprob: -17.750001907348633
    9. ')]' → logprob: -17.750001907348633
    10. '   ' → logprob: -18.062501907348633

Token 30: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0019785952754318714
    2. ')' → logprob: -6.251978397369385
    3. '),' → logprob: -10.626978874206543
    4. ')])' → logprob: -11.501978874206543
    5. ']' → logprob: -11.626978874206543
    6. ')],' → logprob: -13.501978874206543
    7. ' )' → logprob: -13.626978874206543
    8. ')}' → logprob: -13.751978874206543
    9. '))' → logprob: -13.876978874206543
    10. '])]' → logprob: -14.126978874206543

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010952114826068282
    2. 'n' → logprob: -7.501095294952393
    3. 'for' → logprob: -7.626095294952393
    4. 'queue' → logprob: -10.376094818115234
    5. 'deque' → logprob: -11.501094818115234
    6. 'd' → logprob: -12.751094818115234
    7. 'N' → logprob: -13.251094818115234
    8. 'class' → logprob: -13.501094818115234
    9. '```' → logprob: -13.751094818115234
    10. 'de' → logprob: -14.001094818115234

Token 32: ' inside' (ID: 6772)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.04476938024163246
    2. ' solve' → logprob: -3.294769287109375
    3. 'b' → logprob: -6.294769287109375
    4. ' shortest' → logprob: -6.794769287109375
    5. ' BFS' → logprob: -6.794769287109375
    6. ' solution' → logprob: -7.294769287109375
    7. 'solve' → logprob: -7.419769287109375
    8. ' main' → logprob: -7.919769287109375
    9. ' ' → logprob: -8.544769287109375
    10. ' find' → logprob: -8.669769287109375

Token 33: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.593329131603241
    2. '(x' → logprob: -0.843329131603241
    3. '(row' → logprob: -4.718328952789307
    4. '(i' → logprob: -5.468328952789307
    5. '(grid' → logprob: -7.343328952789307
    6. '((' → logprob: -7.968328952789307
    7. '(a' → logprob: -7.968328952789307
    8. '(p' → logprob: -7.968328952789307
    9. '(point' → logprob: -8.218329429626465
    10. '(node' → logprob: -8.218329429626465

Token 34: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004341261519584805
    2. ',y' → logprob: -8.125433921813965
    3. ' ,' → logprob: -9.000433921813965
    4. ',int' → logprob: -11.625433921813965
    5. ',x' → logprob: -13.000433921813965
    6. ',n' → logprob: -13.875433921813965
    7. ',num' → logprob: -15.125433921813965
    8. ',size' → logprob: -15.500433921813965
    9. ',
' → logprob: -15.625433921813965
    10. '‌,' → logprob: -15.750433921813965

Token 35: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033512013033032417
    2. '):' → logprob: -6.003351211547852
    3. ' ,' → logprob: -7.378351211547852
    4. ',x' → logprob: -9.753351211547852
    5. ',n' → logprob: -9.878351211547852
    6. ',int' → logprob: -10.128351211547852
    7. ',size' → logprob: -10.878351211547852
    8. ')' → logprob: -11.003351211547852
    9. ',num' → logprob: -11.253351211547852
    10. ',width' → logprob: -11.378351211547852

Token 36: ',h' (ID: 42751)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003645568387582898
    2. ')' → logprob: -6.253645420074463
    3. '):' → logprob: -7.503645420074463
    4. ',w' → logprob: -7.628645420074463
    5. ',width' → logprob: -9.128645896911621
    6. ' ,' → logprob: -9.253645896911621
    7. ',y' → logprob: -9.378645896911621
    8. ',int' → logprob: -9.753645896911621
    9. ',h' → logprob: -9.878645896911621
    10. ',height' → logprob: -10.003645896911621

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009774863719940186
    2. ')' → logprob: -4.634774684906006
    3. ' ):' → logprob: -11.884775161743164
    4. '):
' → logprob: -12.009775161743164
    5. ':' → logprob: -13.134775161743164
    6. ')：' → logprob: -14.259775161743164
    7. ')):' → logprob: -14.509775161743164
    8. '),' → logprob: -14.884775161743164
    9. ',' → logprob: -14.884775161743164
    10. ' ' → logprob: -15.134775161743164

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006326555274426937
    2. ' return' → logprob: -5.131326675415039
    3. '	return' → logprob: -8.256326675415039
    4. ':return' → logprob: -9.881326675415039
    5. '<|end|>' → logprob: -10.381326675415039
    6. '    
' → logprob: -10.756326675415039
    7. 'return' → logprob: -11.256326675415039
    8. ':' → logprob: -12.006326675415039
    9. '```' → logprob: -12.256326675415039
    10. ':
' → logprob: -12.881326675415039

Token 39: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4560645520687103
    2. '   ' → logprob: -1.2060645818710327
    3. 'return' (adapté à ' return') → logprob: -2.706064462661743
    4. '	return' → logprob: -10.706064224243164
    5. '       ' → logprob: -11.456064224243164
    6. '    ' → logprob: -11.581064224243164
    7. ':return' → logprob: -12.081064224243164
    8. ' ' → logprob: -12.331064224243164
    9. '```' → logprob: -13.831064224243164
    10. '  ' → logprob: -14.581064224243164

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04302442818880081
    2. ' ' → logprob: -3.1680245399475098
    3. ' (' → logprob: -11.293024063110352
    4. 'x' → logprob: -12.293024063110352
    5. '(' → logprob: -12.543024063110352
    6. ' x' → logprob: -13.043024063110352
    7. '   ' → logprob: -13.293024063110352
    8. ' ' → logprob: -14.543024063110352
    9. '  ' → logprob: -16.04302406311035
    10. '`' → logprob: -16.29302406311035

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.217951886355877e-05
    2. ' ' → logprob: -10.125061988830566
    3. '(' → logprob: -10.750061988830566
    4. '   ' → logprob: -15.000061988830566
    5. 'x' → logprob: -16.250062942504883
    6. ' (' → logprob: -16.500062942504883
    7. '```' → logprob: -17.250062942504883
    8. '`' → logprob: -17.375062942504883
    9. '(x' → logprob: -18.250062942504883
    10. '  ' → logprob: -19.625062942504883

Token 42: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5039269924163818
    2. ' <=' → logprob: -1.0039269924163818
    3. '<' → logprob: -3.628926992416382
    4. ' <' → logprob: -5.878927230834961
    5. '<x' → logprob: -11.003927230834961
    6. ' ' → logprob: -11.503927230834961
    7. 'x' → logprob: -11.628927230834961
    8. ' ' → logprob: -12.503927230834961
    9. '=<' → logprob: -12.628927230834961
    10. '≤' → logprob: -13.128927230834961

Token 43: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.896309739408025e-07
    2. ' x' → logprob: -14.125000953674316
    3. '	x' → logprob: -19.375
    4. ')x' → logprob: -20.25
    5. '"x' → logprob: -20.375
    6. 'xref' → logprob: -20.375
    7. '<|end|>' → logprob: -20.5
    8. '```' → logprob: -21.125
    9. 'y' → logprob: -21.25
    10. ''x' → logprob: -21.25

Token 44: '<w' (ID: 45719)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11456350982189178
    2. '<w' → logprob: -2.239563465118408
    3. 'and' → logprob: -7.239563465118408
    4. ' and' → logprob: -7.864563465118408
    5. '<x' → logprob: -7.989563465118408
    6. ' <' → logprob: -8.739563941955566
    7. 'w' → logprob: -10.364563941955566
    8. '<len' → logprob: -10.614563941955566
    9. '<size' → logprob: -10.739563941955566
    10. '<n' → logprob: -11.114563941955566

Token 45: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029899397864937782
    2. 'and' → logprob: -3.5298993587493896
    3. '   ' → logprob: -8.904899597167969
    4. ' ' → logprob: -11.529899597167969
    5. '0' → logprob: -13.154899597167969
    6. '    ' → logprob: -14.654899597167969
    7. '	and' → logprob: -15.029899597167969
    8. '  ' → logprob: -15.154899597167969
    9. '&&' → logprob: -16.65489959716797
    10. '&' → logprob: -16.77989959716797

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048972927033901215
    2. ' ' → logprob: -3.0489728450775146
    3. '   ' → logprob: -7.923973083496094
    4. '    ' → logprob: -11.548973083496094
    5. '<|end|>' → logprob: -11.798973083496094
    6. '  ' → logprob: -12.048973083496094
    7. 'y' → logprob: -15.423973083496094
    8. '<|end|>' → logprob: -16.173973083496094
    9. ' ' → logprob: -16.423973083496094
    10. ',' → logprob: -17.298973083496094

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.125019073486328
    4. 'y' → logprob: -17.250019073486328
    5. '<|end|>' → logprob: -19.000019073486328
    6. 'x' → logprob: -19.625019073486328
    7. '۰' → logprob: -20.500019073486328
    8. ' y' → logprob: -21.250019073486328
    9. '  ' → logprob: -21.250019073486328
    10. '`' → logprob: -21.687519073486328

Token 48: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08117171376943588
    2. '<h' → logprob: -2.581171751022339
    3. '0' → logprob: -7.83117151260376
    4. '<w' → logprob: -8.081171989440918
    5. ' <' → logprob: -8.206171989440918
    6. '<x' → logprob: -8.456171989440918
    7. '<b' → logprob: -8.706171989440918
    8. '<t' → logprob: -8.831171989440918
    9. '<f' → logprob: -9.081171989440918
    10. 'h' → logprob: -9.456171989440918

Token 49: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.2723104848410003e-05
    2. ' y' → logprob: -10.875022888183594
    3. 'h' → logprob: -12.500022888183594
    4. '0' → logprob: -18.125022888183594
    5. '	y' → logprob: -18.625022888183594
    6. 'x' → logprob: -18.625022888183594
    7. '1' → logprob: -19.750022888183594
    8. ''y' → logprob: -19.875022888183594
    9. '<|end|>' → logprob: -20.125022888183594
    10. '   ' → logprob: -20.875022888183594

Token 50: '<h' (ID: 23843)
  Prédit: '<h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<h' → logprob: -0.001141526736319065
    2. '<' → logprob: -7.001141548156738
    3. ' <' → logprob: -8.751141548156738
    4. 'h' → logprob: -10.126141548156738
    5. '<p' → logprob: -11.876141548156738
    6. '0' → logprob: -12.376141548156738
    7. '<w' → logprob: -12.501141548156738
    8. '<len' → logprob: -12.501141548156738
    9. '<v' → logprob: -13.251141548156738
    10. '<H' → logprob: -13.376141548156738

Token 51: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1249673068523407
    2. 'newline' → logprob: -2.624967336654663
    3. '

' → logprob: -3.874967336654663
    4. 'def' → logprob: -4.624967098236084
    5. '```' → logprob: -4.999967098236084
    6. '\n' → logprob: -5.999967098236084
    7. '
' → logprob: -6.374967098236084
    8. '    
' → logprob: -7.249967098236084
    9. '  
' → logprob: -7.499967098236084
    10. '\' → logprob: -7.624967098236084

Token 52: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03586198762059212
    2. '
' → logprob: -3.4108619689941406
    3. '

' → logprob: -6.410861968994141
    4. '```' → logprob: -8.53586196899414
    5. '<|end|>' → logprob: -9.53586196899414
    6. 'class' → logprob: -9.66086196899414
    7. '
' → logprob: -9.78586196899414
    8. 'deque' → logprob: -10.53586196899414
    9. '\' → logprob: -10.66086196899414
    10. '  
' → logprob: -10.91086196899414

Token 53: ' solve' (ID: 17722)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.0002600245934445411
    2. ' BFS' → logprob: -9.000260353088379
    3. ' solve' → logprob: -9.375260353088379
    4. 'b' → logprob: -11.250260353088379
    5. ' dfs' → logprob: -11.625260353088379
    6. ' main' → logprob: -11.875260353088379
    7. ' space' → logprob: -12.250260353088379
    8. ' breadth' → logprob: -12.500260353088379
    9. ' shortest' → logprob: -12.625260353088379
    10. ' solution' → logprob: -12.750260353088379

Token 54: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013448669575154781
    2. '():' → logprob: -4.763448715209961
    3. '(x' → logprob: -6.263448715209961
    4. '(a' → logprob: -7.638448715209961
    5. '(s' → logprob: -7.763448715209961
    6. '(line' → logprob: -7.888448715209961
    7. '((' → logprob: -8.138448715209961
    8. '(q' → logprob: -9.013448715209961
    9. '(p' → logprob: -9.138448715209961
    10. '(input' → logprob: -9.638448715209961

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002632611431181431
    2. 'input' → logprob: -7.3776326179504395
    3. 'n' → logprob: -8.002632141113281
    4. '    ' → logprob: -8.252632141113281
    5. ' readline' → logprob: -8.252632141113281
    6. 'import' → logprob: -8.377632141113281
    7. '```' → logprob: -8.752632141113281
    8. ' input' → logprob: -9.002632141113281
    9. 'x' → logprob: -9.252632141113281
    10. 'stdin' → logprob: -9.377632141113281

Token 56: ' lines' (ID: 8698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5612398982048035
    2. 'w' → logprob: -1.8112399578094482
    3. 'h' → logprob: -1.9362399578094482
    4. ' h' → logprob: -2.9362399578094482
    5. ' w' → logprob: -3.6862399578094482
    6. 'import' → logprob: -4.186239719390869
    7. 'n' → logprob: -4.686239719390869
    8. ' import' → logprob: -4.811239719390869
    9. 'input' → logprob: -5.811239719390869
    10. ' n' → logprob: -6.061239719390869

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759473443031311
    2. '=' → logprob: -0.8259473443031311
    3. '_' → logprob: -13.200947761535645
    4. '=input' → logprob: -13.450947761535645
    5. '=[]' → logprob: -14.075947761535645
    6. 's' → logprob: -14.325947761535645
    7. '=line' → logprob: -14.450947761535645
    8. '=int' → logprob: -14.825947761535645
    9. '[:]' → logprob: -14.950947761535645
    10. '[]' → logprob: -15.075947761535645

Token 58: ' iter' (ID: 10621)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.5003812313079834
    2. ' stdin' → logprob: -1.3753812313079834
    3. '[' → logprob: -2.6253812313079834
    4. ' [' → logprob: -2.8753812313079834
    5. 'list' → logprob: -5.6253814697265625
    6. '(stdin' → logprob: -5.7503814697265625
    7. '[int' → logprob: -6.5003814697265625
    8. '[list' → logprob: -6.7503814697265625
    9. '.stdin' → logprob: -7.2503814697265625
    10. '[in' → logprob: -7.3753814697265625

Token 59: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.0008279714384116232
    2. '(st' → logprob: -7.625827789306641
    3. '(' → logprob: -8.00082778930664
    4. ' (' → logprob: -14.25082778930664
    5. '(std' → logprob: -14.37582778930664
    6. '(stderr' → logprob: -14.62582778930664
    7. '(
' → logprob: -15.00082778930664
    8. '(stdout' → logprob: -15.00082778930664
    9. 'stdin' → logprob: -15.00082778930664
    10. '(input' → logprob: -15.25082778930664

Token 60: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4676308035850525
    2. '.readlines' → logprob: -1.4676308631896973
    3. ')' → logprob: -1.9676308631896973
    4. '())' → logprob: -6.217630863189697
    5. '.' → logprob: -6.842630863189697
    6. '().' → logprob: -9.717630386352539
    7. '()' → logprob: -9.842630386352539
    8. '.read' → logprob: -10.342630386352539
    9. ').' → logprob: -11.467630386352539
    10. ' )' → logprob: -11.717630386352539

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03483728691935539
    2. '()' → logprob: -3.534837245941162
    3. '())' → logprob: -5.409837245941162
    4. 'lines' → logprob: -8.28483772277832
    5. 'line' → logprob: -8.53483772277832
    6. '_lines' → logprob: -9.28483772277832
    7. '_line' → logprob: -10.78483772277832
    8. ')' → logprob: -11.28483772277832
    9. '(' → logprob: -12.15983772277832
    10. '_text' → logprob: -12.15983772277832

Token 62: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2519776225090027
    2. 'split' → logprob: -1.5019776821136475
    3. 'decode' → logprob: -10.251977920532227
    4. 'read' → logprob: -11.501977920532227
    5. 'rstrip' → logprob: -13.001977920532227
    6. 'lines' → logprob: -14.876977920532227
    7. '```' → logprob: -15.751977920532227
    8. 'str' → logprob: -16.251977920532227
    9. ' split' → logprob: -16.501977920532227
    10. '(split' → logprob: -17.501977920532227

Token 63: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.00987472664564848
    2. '()' → logprob: -4.7598748207092285
    3. '('\' → logprob: -6.8848748207092285
    4. '())' → logprob: -8.38487434387207
    5. ')' → logprob: -12.63487434387207
    6. 'line' → logprob: -12.88487434387207
    7. '()\' → logprob: -14.25987434387207
    8. '("\' → logprob: -14.50987434387207
    9. '()]' → logprob: -15.38487434387207
    10. '(' → logprob: -15.50987434387207

Token 64: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010114554315805435
    2. '()' → logprob: -4.635114669799805
    3. ')' → logprob: -8.135114669799805
    4. ' ())' → logprob: -10.010114669799805
    5. '();)' → logprob: -11.635114669799805
    6. '()]' → logprob: -12.260114669799805
    7. '(' → logprob: -12.760114669799805
    8. '()))' → logprob: -13.635114669799805
    9. '(),' → logprob: -14.260114669799805
    10. '()[' → logprob: -14.760114669799805

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18006935715675354
    2. '    
' → logprob: -2.3050694465637207
    3. '
' → logprob: -3.4300694465637207
    4. '```' → logprob: -4.680069446563721
    5. 'w' → logprob: -4.930069446563721
    6. 'n' → logprob: -5.055069446563721
    7. 'while' → logprob: -6.305069446563721
    8. ' while' → logprob: -6.680069446563721
    9. '  
' → logprob: -7.430069446563721
    10. '    ' → logprob: -7.555069446563721

Token 66: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.710440456867218
    2. 'while' (adapté à ' while') → logprob: -1.3354403972625732
    3. ' while' → logprob: -1.7104403972625732
    4. 'w' → logprob: -2.9604403972625732
    5. ' w' → logprob: -5.335440635681152
    6. 'n' → logprob: -5.585440635681152
    7. 'try' → logprob: -6.460440635681152
    8. 't' → logprob: -6.460440635681152
    9. 'h' → logprob: -7.460440635681152
    10. '```' → logprob: -8.710440635681152

Token 67: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.014345075003802776
    2. 'True' → logprob: -4.264345169067383
    3. '(True' → logprob: -8.639345169067383
    4. '1' → logprob: -13.139345169067383
    5. ' ' → logprob: -13.264345169067383
    6. ' ' → logprob: -14.764345169067383
    7. '=True' → logprob: -15.264345169067383
    8. ' Tru' → logprob: -16.889345169067383
    9. '  ' → logprob: -17.014345169067383
    10. '   ' → logprob: -17.264345169067383

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002205828350270167
    2. '):' → logprob: -9.12522029876709
    3. ':
' → logprob: -10.37522029876709
    4. '       ' → logprob: -10.37522029876709
    5. ',' → logprob: -10.87522029876709
    6. '():' → logprob: -11.50022029876709
    7. ' :' → logprob: -11.62522029876709
    8. '   ' → logprob: -11.87522029876709
    9. ':**' → logprob: -12.87522029876709
    10. '    ' → logprob: -15.87522029876709

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002604195149615407
    2. ' try' → logprob: -6.377604007720947
    3. 'try' → logprob: -7.877604007720947
    4. '   ' → logprob: -7.877604007720947
    5. '    ' → logprob: -10.377604484558105
    6. '<|end|>' → logprob: -10.377604484558105
    7. '```' → logprob: -11.252604484558105
    8. '           ' → logprob: -11.502604484558105
    9. '	try' → logprob: -11.627604484558105
    10. '        
' → logprob: -11.877604484558105

Token 70: ' w' (ID: 286)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6687085628509521
    2. ' try' → logprob: -1.2937085628509521
    3. 'try' → logprob: -1.6687085628509521
    4. 'n' → logprob: -4.668708801269531
    5. ' w' → logprob: -5.668708801269531
    6. '       ' → logprob: -5.793708801269531
    7. 'w' (adapté à ' w') → logprob: -6.043708801269531
    8. ' n' → logprob: -6.168708801269531
    9. ' line' → logprob: -6.168708801269531
    10. 'line' → logprob: -6.543708801269531

Token 71: ',h' (ID: 42751)
  Prédit: ',h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',h' → logprob: -0.6327015161514282
    2. ',' → logprob: -0.7577015161514282
    3. ' ,' → logprob: -10.382701873779297
    4. 'h' → logprob: -10.632701873779297
    5. ',y' → logprob: -11.507701873779297
    6. '=' → logprob: -11.632701873779297
    7. ',n' → logprob: -12.007701873779297
    8. ',d' → logprob: -12.382701873779297
    9. ',s' → logprob: -13.007701873779297
    10. ',c' → logprob: -13.132701873779297

Token 72: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3484804332256317
    2. ' =' → logprob: -1.223480463027954
    3. ',' → logprob: -10.473480224609375
    4. '=line' → logprob: -12.598480224609375
    5. '=int' → logprob: -13.348480224609375
    6. ' ' → logprob: -14.973480224609375
    7. '=

' → logprob: -14.973480224609375
    8. '=input' → logprob: -14.973480224609375
    9. '＝' → logprob: -15.473480224609375
    10. ')' → logprob: -15.598480224609375

Token 73: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.25201499462127686
    2. 'map' → logprob: -1.5020149946212769
    3. ' next' → logprob: -9.627015113830566
    4. 'next' → logprob: -11.252015113830566
    5. '(map' → logprob: -13.127015113830566
    6. ' list' → logprob: -13.877015113830566
    7. 'int' → logprob: -14.252015113830566
    8. 'list' → logprob: -14.252015113830566
    9. ' tuple' → logprob: -14.252015113830566
    10. '	map' → logprob: -14.377015113830566

Token 74: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009859384037554264
    2. '(next' → logprob: -5.134859561920166
    3. '(' → logprob: -5.759859561920166
    4. 'int' → logprob: -7.509859561920166
    5. '(lambda' → logprob: -9.384859085083008
    6. 'next' → logprob: -10.134859085083008
    7. '[int' → logprob: -10.509859085083008
    8. '<int' → logprob: -10.509859085083008
    9. '(str' → logprob: -11.259859085083008
    10. ']int' → logprob: -11.634859085083008

Token 75: ',next' (ID: 129376)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17113298177719116
    2. ',next' → logprob: -2.171133041381836
    3. '(next' → logprob: -3.796133041381836
    4. 'next' → logprob: -4.296133041381836
    5. '(lines' → logprob: -5.671133041381836
    6. ' next' → logprob: -5.671133041381836
    7. ' ,' → logprob: -9.171133041381836
    8. ')' → logprob: -9.671133041381836
    9. 'lines' → logprob: -10.296133041381836
    10. '.next' → logprob: -11.421133041381836

Token 76: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -1.3856492842023727e-06
    2. 'lines' → logprob: -13.750000953674316
    3. '(' → logprob: -16.375001907348633
    4. '	lines' → logprob: -16.750001907348633
    5. ' lines' → logprob: -18.000001907348633
    6. '(line' → logprob: -19.250001907348633
    7. ')(' → logprob: -19.250001907348633
    8. '_lines' → logprob: -19.750001907348633
    9. ')' → logprob: -20.125001907348633
    10. '(files' → logprob: -20.500001907348633

Token 77: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.3492691218852997
    2. '().' → logprob: -1.474269151687622
    3. ')' → logprob: -3.224269151687622
    4. '()).' → logprob: -3.724269151687622
    5. '()' → logprob: -7.224268913269043
    6. '())' → logprob: -7.849268913269043
    7. ' ).' → logprob: -7.849268913269043
    8. '))' → logprob: -8.599268913269043
    9. '>().' → logprob: -9.599268913269043
    10. '(' → logprob: -10.349268913269043

Token 78: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001513312105089426
    2. 'strip' → logprob: -6.501513481140137
    3. '(split' → logprob: -11.751513481140137
    4. ' split' → logprob: -13.126513481140137
    5. 'rstrip' → logprob: -13.876513481140137
    6. '.split' → logprob: -17.50151252746582
    7. '_split' → logprob: -17.75151252746582
    8. '(strip' → logprob: -18.62651252746582
    9. ')' → logprob: -18.75151252746582
    10. 'spl' → logprob: -18.75151252746582

Token 79: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010804803110659122
    2. '('' → logprob: -5.510804653167725
    3. '()))' → logprob: -5.635804653167725
    4. '()' → logprob: -5.885804653167725
    5. '(' → logprob: -8.635805130004883
    6. ')' → logprob: -9.635805130004883
    7. '())
' → logprob: -10.385805130004883
    8. '(','' → logprob: -10.510805130004883
    9. '()),' → logprob: -10.760805130004883
    10. '(),' → logprob: -11.885805130004883

Token 80: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.10049078613519669
    2. 'w' → logprob: -2.3504908084869385
    3. '(w' → logprob: -8.22549057006836
    4. ' (' → logprob: -11.22549057006836
    5. ' not' → logprob: -13.47549057006836
    6. '(' → logprob: -13.60049057006836
    7. ' ' → logprob: -15.35049057006836
    8. '	w' → logprob: -16.22549057006836
    9. ' ' → logprob: -17.85049057006836
    10. 'not' → logprob: -17.85049057006836

Token 83: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03809714689850807
    2. ' ==' → logprob: -3.2880971431732178
    3. '0' → logprob: -10.788097381591797
    4. ' ' → logprob: -11.163097381591797
    5. '=' → logprob: -11.288097381591797
    6. '===' → logprob: -12.663097381591797
    7. '<=' → logprob: -13.663097381591797
    8. ' or' → logprob: -14.038097381591797
    9. ')==' → logprob: -14.163097381591797
    10. ']==' → logprob: -14.413097381591797

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. 'h' → logprob: -11.50001335144043
    3. ' ' → logprob: -12.75001335144043
    4. ' h' → logprob: -17.12501335144043
    5. '```' → logprob: -17.25001335144043
    6. '۰' → logprob: -19.00001335144043
    7. '０' → logprob: -19.50001335144043
    8. '<h' → logprob: -19.87501335144043
    9. ' ' → logprob: -20.00001335144043
    10. '`' → logprob: -20.00001335144043

Token 85: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12727580964565277
    2. 'and' → logprob: -2.1272757053375244
    3. ' or' → logprob: -8.002275466918945
    4. ' ' → logprob: -11.877275466918945
    5. '	and' → logprob: -12.752275466918945
    6. 'or' → logprob: -13.377275466918945
    7. '0' → logprob: -14.002275466918945
    8. '   ' → logprob: -15.127275466918945
    9. ' и' → logprob: -15.877275466918945
    10. '```' → logprob: -16.002275466918945

Token 86: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5759409666061401
    2. 'h' → logprob: -0.8259409666061401
    3. '	h' → logprob: -13.70094108581543
    4. ' ' → logprob: -15.70094108581543
    5. ' ' → logprob: -15.95094108581543
    6. ',h' → logprob: -17.32594108581543
    7. '<h' → logprob: -17.70094108581543
    8. '0' → logprob: -18.20094108581543
    9. '<|end|>' → logprob: -18.20094108581543
    10. '   ' → logprob: -18.82594108581543

Token 87: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00047202190035022795
    2. ' ==' → logprob: -8.125472068786621
    3. '0' → logprob: -9.125472068786621
    4. '=' → logprob: -10.000472068786621
    5. ')==' → logprob: -11.750472068786621
    6. ']==' → logprob: -12.125472068786621
    7. '```' → logprob: -12.750472068786621
    8. '<|end|>' → logprob: -13.250472068786621
    9. '()==' → logprob: -13.500472068786621
    10. '===' → logprob: -14.125472068786621

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.1250057220459
    4. '```' → logprob: -18.1250057220459
    5. '۰' → logprob: -18.8750057220459
    6. '  ' → logprob: -19.3750057220459
    7. '       ' → logprob: -20.2500057220459
    8. '०' → logprob: -20.3750057220459
    9. '০' → logprob: -20.4375057220459
    10. '``' → logprob: -20.5000057220459

Token 89: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00037466554204002023
    2. ':
' → logprob: -8.000374794006348
    3. ':return' → logprob: -10.500374794006348
    4. '       ' → logprob: -11.750374794006348
    5. '           ' → logprob: -13.125374794006348
    6. '):' → logprob: -14.375374794006348
    7. '   ' → logprob: -14.500374794006348
    8. ',' → logprob: -15.500374794006348
    9. '.' → logprob: -15.875374794006348
    10. ' :' → logprob: -16.25037384033203

Token 90: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010101577267050743
    2. '       ' → logprob: -4.635101795196533
    3. '   ' → logprob: -8.885101318359375
    4. '<|end|>' → logprob: -10.010101318359375
    5. '
' → logprob: -10.385101318359375
    6. ' break' → logprob: -10.635101318359375
    7. '	       ' → logprob: -11.010101318359375
    8. '		' → logprob: -11.260101318359375
    9. 'break' → logprob: -11.385101318359375
    10. '	break' → logprob: -11.385101318359375

Token 91: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20721173286437988
    2. '<|end|>' → logprob: -1.8322117328643799
    3. '       ' → logprob: -4.082211494445801
    4. '<|end|>' → logprob: -6.207211494445801
    5. '    
' → logprob: -6.457211494445801
    6. '   ' → logprob: -6.582211494445801
    7. '
' → logprob: -6.707211494445801
    8. 'newline' → logprob: -6.707211494445801
    9. '        
' → logprob: -7.457211494445801
    10. '```' → logprob: -7.582211494445801

Token 92: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.152349054813385
    2. '<|end|>' → logprob: -2.7773489952087402
    3. '    
' → logprob: -3.9023489952087402
    4. '   ' → logprob: -4.02734899520874
    5. '       ' → logprob: -4.02734899520874
    6. '```' → logprob: -4.65234899520874
    7. '        
' → logprob: -5.90234899520874
    8. 'newline' → logprob: -6.02734899520874
    9. '
' → logprob: -6.15234899520874
    10. '  
' → logprob: -6.52734899520874

Token 93: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.4081054925918579
    2. '
' → logprob: -2.4081053733825684
    3. 'map' → logprob: -2.6581053733825684
    4. '       ' → logprob: -3.4081053733825684
    5. 'graph' → logprob: -3.4081053733825684
    6. ' grid' → logprob: -3.6581053733825684
    7. 'field' → logprob: -3.9081053733825684
    8. '        
' → logprob: -4.158105373382568
    9. 'board' → logprob: -4.533105373382568
    10. '   ' → logprob: -5.283105373382568

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020582646131515503
    2. '=' → logprob: -3.895582675933838
    3. '=[]' → logprob: -10.52058219909668
    4. ' =[' → logprob: -12.02058219909668
    5. ',' → logprob: -12.64558219909668
    6. ' ' → logprob: -14.27058219909668
    7. '[:]' → logprob: -14.27058219909668
    8. '[' → logprob: -14.52058219909668
    9. '=[' → logprob: -14.77058219909668
    10. '   ' → logprob: -15.14558219909668

Token 95: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44225025177001953
    2. '[list' → logprob: -1.4422502517700195
    3. ' [' → logprob: -2.1922502517700195
    4. '[str' → logprob: -6.1922502517700195
    5. '[next' → logprob: -6.3172502517700195
    6. '[List' → logprob: -6.8172502517700195
    7. '[line' → logprob: -6.9422502517700195
    8. '[new' → logprob: -7.3172502517700195
    9. '[data' → logprob: -7.4422502517700195
    10. '[to' → logprob: -7.8172502517700195

Token 96: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004101077560335398
    2. 'next' → logprob: -5.754101276397705
    3. ' list' → logprob: -7.754101276397705
    4. '[next' → logprob: -7.754101276397705
    5. '[list' → logprob: -9.754100799560547
    6. ' next' → logprob: -12.254100799560547
    7. '(list' → logprob: -14.629100799560547
    8. '[' → logprob: -15.004100799560547
    9. '   ' → logprob: -15.129100799560547
    10. 'input' → logprob: -15.254100799560547

Token 97: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -7.278864359250292e-05
    2. '(map' → logprob: -9.750072479248047
    3. 'next' → logprob: -11.250072479248047
    4. '(' → logprob: -14.125072479248047
    5. '[next' → logprob: -14.750072479248047
    6. 'map' → logprob: -15.125072479248047
    7. '()' → logprob: -16.375072479248047
    8. '(lines' → logprob: -17.250072479248047
    9. '(str' → logprob: -18.125072479248047
    10. ' next' → logprob: -18.125072479248047

Token 98: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00017112065688706934
    2. 'lines' → logprob: -8.750170707702637
    3. ' lines' → logprob: -11.375170707702637
    4. ')' → logprob: -14.625170707702637
    5. '	lines' → logprob: -14.625170707702637
    6. ')(' → logprob: -16.125171661376953
    7. '(line' → logprob: -16.500171661376953
    8. '_lines' → logprob: -18.375171661376953
    9. '.lines' → logprob: -19.000171661376953
    10. '(' → logprob: -19.000171661376953

Token 99: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.22935165464878082
    2. '()))' → logprob: -1.6043516397476196
    3. ')' → logprob: -6.10435152053833
    4. ').' → logprob: -7.22935152053833
    5. '())' → logprob: -8.604351997375488
    6. '()' → logprob: -8.729351997375488
    7. ' ))' → logprob: -8.729351997375488
    8. '   ' → logprob: -8.729351997375488
    9. '()).' → logprob: -9.479351997375488
    10. ' ' → logprob: -9.604351997375488

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2524665594100952
    2. 'for' → logprob: -1.5024665594100952
    3. ')' → logprob: -8.127466201782227
    4. '()' → logprob: -8.502466201782227
    5. '	for' → logprob: -11.377466201782227
    6. '   ' → logprob: -11.502466201782227
    7. '           ' → logprob: -12.377466201782227
    8. ']' → logprob: -12.627466201782227
    9. ' ' → logprob: -12.877466201782227
    10. '       ' → logprob: -13.377466201782227

Token 101: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3192020058631897
    2. ' range' → logprob: -1.569201946258545
    3. 'range' → logprob: -3.319201946258545
    4. ' _' → logprob: -3.819201946258545
    5. ' in' → logprob: -5.069201946258545
    6. '_range' → logprob: -7.569201946258545
    7. '(range' → logprob: -9.694202423095703
    8. 'in' → logprob: -10.444202423095703
    9. '_in' → logprob: -11.569202423095703
    10. '_h' → logprob: -11.944202423095703

Token 102: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024975579231977463
    2. '(range' → logprob: -4.274975776672363
    3. ' range' → logprob: -4.899975776672363
    4. ' in' → logprob: -5.899975776672363
    5. 'in' → logprob: -7.524975776672363
    6. '	range' → logprob: -10.774975776672363
    7. ' xrange' → logprob: -13.274975776672363
    8. ')' → logprob: -13.274975776672363
    9. 'x' → logprob: -14.274975776672363
    10. 'for' → logprob: -14.649975776672363

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067248414270579815
    2. ' range' → logprob: -5.006724834442139
    3. '(range' → logprob: -11.631725311279297
    4. '	range' → logprob: -15.256725311279297
    5. 'r' → logprob: -16.381725311279297
    6. ')' → logprob: -16.381725311279297
    7. 'ran' → logprob: -16.631725311279297
    8. 'h' → logprob: -17.256725311279297
    9. 'rang' → logprob: -17.381725311279297
    10. 'ra' → logprob: -17.506725311279297

Token 104: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.45848218582978e-06
    2. ' (' → logprob: -13.25000286102295
    3. 'h' → logprob: -14.87500286102295
    4. '(' → logprob: -15.37500286102295
    5. ')' → logprob: -17.250001907348633
    6. '	h' → logprob: -17.500001907348633
    7. ' h' → logprob: -18.000001907348633
    8. ')(' → logprob: -18.250001907348633
    9. '<h' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.250001907348633

Token 105: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002658655575942248
    2. ')' → logprob: -8.625266075134277
    3. ']' → logprob: -9.375266075134277
    4. '   ' → logprob: -15.000266075134277
    5. ' )' → logprob: -15.000266075134277
    6. ' ' → logprob: -15.625266075134277
    7. '))' → logprob: -15.875266075134277
    8. ')],' → logprob: -16.37526512145996
    9. ')}' → logprob: -16.50026512145996
    10. ')]
' → logprob: -16.75026512145996

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7259252667427063
    2. '   ' → logprob: -1.2259252071380615
    3. 'visited' → logprob: -2.4759252071380615
    4. '
' → logprob: -2.9759252071380615
    5. '<|end|>' → logprob: -3.7259252071380615
    6. ' visited' → logprob: -4.225925445556641
    7. '```' → logprob: -4.725925445556641
    8. ',' → logprob: -4.725925445556641
    9. '        
' → logprob: -4.975925445556641
    10. 'queue' → logprob: -5.475925445556641

Token 107: ' black' (ID: 5960)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8651915788650513
    2. 'visited' → logprob: -1.3651915788650513
    3. 'start' → logprob: -1.8651915788650513
    4. 'q' → logprob: -2.9901914596557617
    5. 'queue' → logprob: -3.6151914596557617
    6. '       ' → logprob: -4.740191459655762
    7. 'count' → logprob: -4.865191459655762
    8. 'starts' → logprob: -4.990191459655762
    9. 'vis' → logprob: -5.240191459655762
    10. 'seen' → logprob: -5.240191459655762

Token 108: '_adj' (ID: 117293)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7385432720184326
    2. ' =' → logprob: -1.9885432720184326
    3. '_positions' → logprob: -2.1135432720184326
    4. '_queue' → logprob: -2.2385432720184326
    5. '_cells' → logprob: -2.4885432720184326
    6. '_regions' → logprob: -2.4885432720184326
    7. '_count' → logprob: -2.4885432720184326
    8. '=' → logprob: -2.7385432720184326
    9. 's' → logprob: -2.9885432720184326
    10. '_area' → logprob: -3.8635432720184326

Token 109: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1988551914691925
    2. 'acent' → logprob: -2.07385516166687
    3. '=[]' → logprob: -3.57385516166687
    4. 'acency' → logprob: -4.698855400085449
    5. ' =' → logprob: -4.948855400085449
    6. 'ac' → logprob: -5.823855400085449
    7. '_count' → logprob: -5.823855400085449
    8. '_counts' → logprob: -6.948855400085449
    9. '_' → logprob: -7.448855400085449
    10. 's' → logprob: -7.823855400085449

Token 110: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.7203257083892822
    2. '[' → logprob: -1.0953257083892822
    3. 'deque' → logprob: -2.4703257083892822
    4. '{}' → logprob: -3.3453257083892822
    5. '0' → logprob: -4.095325469970703
    6. ' [[' → logprob: -4.345325469970703
    7. '[]' → logprob: -4.470325469970703
    8. 'set' → logprob: -4.845325469970703
    9. ' [' → logprob: -5.220325469970703
    10. '{' → logprob: -6.220325469970703

Token 111: 'False' (ID: 8168)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0034330463968217373
    2. 'False' → logprob: -5.7534332275390625
    3. '-' → logprob: -8.503433227539062
    4. '[' → logprob: -11.128433227539062
    5. '[]' → logprob: -11.128433227539062
    6. 'set' → logprob: -11.253433227539062
    7. 'float' → logprob: -13.003433227539062
    8. '[-' → logprob: -13.128433227539062
    9. ' ' → logprob: -13.253433227539062
    10. 'deque' → logprob: -13.503433227539062

Token 112: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030019136145710945
    2. 'for' → logprob: -3.5300190448760986
    3. ']*' → logprob: -8.40501880645752
    4. ']' → logprob: -10.90501880645752
    5. '   ' → logprob: -11.65501880645752
    6. ' ' → logprob: -11.78001880645752
    7. '	for' → logprob: -11.90501880645752
    8. '    ' → logprob: -14.28001880645752
    9. ']*(' → logprob: -14.40501880645752
    10. ')' → logprob: -14.90501880645752

Token 113: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00460386136546731
    2. '(w' → logprob: -5.879603862762451
    3. 'h' → logprob: -6.379603862762451
    4. '(h' → logprob: -10.004603385925293
    5. ' w' → logprob: -10.504603385925293
    6. '(' → logprob: -11.004603385925293
    7. '   ' → logprob: -12.629603385925293
    8. ' (' → logprob: -13.504603385925293
    9. '((' → logprob: -13.754603385925293
    10. '	w' → logprob: -14.129603385925293

Token 114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20145484805107117
    2. 'for' → logprob: -1.7014548778533936
    3. '	for' → logprob: -10.826455116271973
    4. ')' → logprob: -11.451455116271973
    5. '   ' → logprob: -12.076455116271973
    6. ' ' → logprob: -13.326455116271973
    7. ']' → logprob: -13.576455116271973
    8. '```' → logprob: -14.826455116271973
    9. '           ' → logprob: -14.951455116271973
    10. ' ' → logprob: -14.951455116271973

Token 115: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.04332070052623749
    2. ' range' → logprob: -3.293320655822754
    3. '_' → logprob: -5.668320655822754
    4. 'range' → logprob: -6.918320655822754
    5. '_range' → logprob: -7.293320655822754
    6. ' xrange' → logprob: -10.168320655822754
    7. ' ' → logprob: -10.293320655822754
    8. ' in' → logprob: -10.918320655822754
    9. ' y' → logprob: -11.168320655822754
    10. '<|end|>' → logprob: -11.793320655822754

Token 116: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10188165307044983
    2. ' range' → logprob: -2.351881742477417
    3. ' in' → logprob: -6.601881504058838
    4. 'in' → logprob: -8.101881980895996
    5. '(range' → logprob: -11.976881980895996
    6. '	range' → logprob: -12.726881980895996
    7. '[' → logprob: -13.851881980895996
    8. ' ' → logprob: -13.976881980895996
    9. ' xrange' → logprob: -14.601881980895996
    10. '_range' → logprob: -14.976881980895996

Token 117: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02327227033674717
    2. ' range' → logprob: -3.7732722759246826
    3. '(range' → logprob: -11.148272514343262
    4. '[' → logprob: -11.648272514343262
    5. 'black' → logprob: -13.773272514343262
    6. '	range' → logprob: -13.898272514343262
    7. '   ' → logprob: -14.398272514343262
    8. '(' → logprob: -14.898272514343262
    9. 'grid' → logprob: -15.773272514343262
    10. '.range' → logprob: -16.148271560668945

Token 118: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08695879578590393
    2. ' h' → logprob: -3.086958885192871
    3. '(h' → logprob: -3.711958885192871
    4. ' range' → logprob: -4.836958885192871
    5. 'range' → logprob: -5.336958885192871
    6. ' (' → logprob: -9.211958885192871
    7. ' black' → logprob: -9.586958885192871
    8. ')' → logprob: -9.586958885192871
    9. 'black' → logprob: -9.836958885192871
    10. '   ' → logprob: -10.336958885192871

Token 119: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.2524021157296374e-05
    2. ']' → logprob: -10.250052452087402
    3. ')' → logprob: -11.250052452087402
    4. ' )' → logprob: -12.875052452087402
    5. ' ]' → logprob: -14.875052452087402
    6. '))' → logprob: -15.500052452087402
    7. '   ' → logprob: -15.750052452087402
    8. ')]
' → logprob: -16.00005340576172
    9. ')],' → logprob: -16.12505340576172
    10. ' ' → logprob: -16.25005340576172

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2915200889110565
    2. '
' → logprob: -1.791520118713379
    3. '<|end|>' → logprob: -2.541520118713379
    4. '        
' → logprob: -5.541520118713379
    5. ' for' → logprob: -6.541520118713379
    6. '<|end|>' → logprob: -7.166520118713379
    7. 'for' → logprob: -7.791520118713379
    8. ',' → logprob: -8.791520118713379
    9. ')' → logprob: -9.166520118713379
    10. '```' → logprob: -9.666520118713379

Token 121: ' white' (ID: 6461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08034854382276535
    2. ' queue' → logprob: -2.830348491668701
    3. ' for' → logprob: -4.580348491668701
    4. 'queue' → logprob: -5.205348491668701
    5. 'for' → logprob: -7.330348491668701
    6. '        
' → logprob: -7.580348491668701
    7. ' ' → logprob: -7.830348491668701
    8. 'q' → logprob: -8.45534896850586
    9. '' → logprob: -9.08034896850586
    10. '        ' → logprob: -9.08034896850586

Token 122: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.01814023219048977
    2. '_queue' → logprob: -4.3931403160095215
    3. '_ad' → logprob: -6.7681403160095215
    4. '_' → logprob: -7.0181403160095215
    5. '_q' → logprob: -7.8931403160095215
    6. 'adj' → logprob: -8.143139839172363
    7. '_count' → logprob: -8.143139839172363
    8. ' =' → logprob: -8.393139839172363
    9. '=' → logprob: -8.393139839172363
    10. 'queue' → logprob: -8.518139839172363

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1273958683013916
    2. '=' → logprob: -2.1273958683013916
    3. '[' → logprob: -8.502395629882812
    4. ')' → logprob: -9.502395629882812
    5. '=[]' → logprob: -9.627395629882812
    6. ']' → logprob: -10.127395629882812
    7. '=[' → logprob: -10.377395629882812
    8. ' =[' → logprob: -11.752395629882812
    9. ' ' → logprob: -12.002395629882812
    10. ']=' → logprob: -12.002395629882812

Token 124: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.023252001032233238
    2. ' [[' → logprob: -3.773252010345459
    3. '([[' → logprob: -12.7732515335083
    4. '[' → logprob: -13.2732515335083
    5. 'False' → logprob: -13.7732515335083
    6. '=[[' → logprob: -15.1482515335083
    7. '[['' → logprob: -15.2732515335083
    8. ':[[' → logprob: -16.398252487182617
    9. '   ' → logprob: -16.773252487182617
    10. ' [' → logprob: -17.148252487182617

Token 125: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.018610959872603416
    2. '[' → logprob: -4.018610954284668
    3. '(False' → logprob: -7.893610954284668
    4. ' False' → logprob: -9.518610954284668
    5. ' [' → logprob: -11.393610954284668
    6. '=False' → logprob: -13.268610954284668
    7. 'True' → logprob: -14.518610954284668
    8. '0' → logprob: -15.018610954284668
    9. '.False' → logprob: -15.143610954284668
    10. '
' → logprob: -16.268611907958984

Token 126: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.018798859789967537
    2. '*w' → logprob: -4.018798828125
    3. ')*' → logprob: -7.393798828125
    4. 'w' → logprob: -11.518798828125
    5. '   ' → logprob: -11.768798828125
    6. '```' → logprob: -12.268798828125
    7. '*' → logprob: -13.018798828125
    8. '[w' → logprob: -13.393798828125
    9. ']' → logprob: -13.518798828125
    10. '"*' → logprob: -14.393798828125

Token 127: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0002930366899818182
    2. 'h' → logprob: -8.375292778015137
    3. '(w' → logprob: -10.000292778015137
    4. ' w' → logprob: -12.250292778015137
    5. '[w' → logprob: -12.250292778015137
    6. '(' → logprob: -12.500292778015137
    7. '(h' → logprob: -13.500292778015137
    8. '[' → logprob: -14.125292778015137
    9. '   ' → logprob: -14.500292778015137
    10. '[h' → logprob: -15.125292778015137

Token 128: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07890047132968903
    2. 'for' → logprob: -2.5789005756378174
    3. '   ' → logprob: -12.078900337219238
    4. '	for' → logprob: -13.328900337219238
    5. ' ' → logprob: -14.078900337219238
    6. '][' → logprob: -14.453900337219238
    7. ']' → logprob: -14.578900337219238
    8. 'w' → logprob: -14.828900337219238
    9. ' [' → logprob: -15.078900337219238
    10. '[h' → logprob: -15.453900337219238

Token 129: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.010236806236207485
    2. 'range' → logprob: -4.635236740112305
    3. '(range' → logprob: -8.010236740112305
    4. '[h' → logprob: -9.385236740112305
    5. '_range' → logprob: -10.510236740112305
    6. '[w' → logprob: -11.135236740112305
    7. '(w' → logprob: -11.385236740112305
    8. '(h' → logprob: -12.760236740112305
    9. ' _' → logprob: -13.010236740112305
    10. ' in' → logprob: -13.135236740112305

Token 130: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.017628053203225136
    2. 'h' → logprob: -4.767628192901611
    3. '(h' → logprob: -5.517628192901611
    4. ' range' → logprob: -5.767628192901611
    5. '[h' → logprob: -6.392628192901611
    6. 'w' → logprob: -9.517627716064453
    7. '(w' → logprob: -10.267627716064453
    8. '(range' → logprob: -10.392627716064453
    9. '[' → logprob: -12.517627716064453
    10. '(' → logprob: -12.517627716064453

Token 131: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2806328535079956
    2. ' range' → logprob: -1.5306328535079956
    3. '[h' → logprob: -3.655632972717285
    4. '[' → logprob: -6.780632972717285
    5. '[w' → logprob: -7.155632972717285
    6. '(range' → logprob: -8.280632972717285
    7. 'h' → logprob: -8.780632972717285
    8. 'w' → logprob: -10.030632972717285
    9. '(h' → logprob: -10.030632972717285
    10. ' [' → logprob: -11.530632972717285

Token 132: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.005941001698374748
    2. '(w' → logprob: -5.130940914154053
    3. '(' → logprob: -12.630941390991211
    4. ' (' → logprob: -12.630941390991211
    5. 'h' → logprob: -12.755941390991211
    6. 'w' → logprob: -14.255941390991211
    7. '       ' → logprob: -14.255941390991211
    8. '[h' → logprob: -14.255941390991211
    9. '   ' → logprob: -15.255941390991211
    10. 'range' → logprob: -15.755941390991211

Token 133: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0759437158703804
    2. ')' → logprob: -3.2009437084198
    3. ']' → logprob: -3.4509437084198
    4. '       ' → logprob: -7.325943946838379
    5. '   ' → logprob: -10.950943946838379
    6. '])' → logprob: -12.950943946838379
    7. ' ]' → logprob: -13.450943946838379
    8. '()]' → logprob: -13.575943946838379
    9. '           ' → logprob: -13.950943946838379
    10. ' )' → logprob: -13.950943946838379

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4073548913002014
    2. '
' → logprob: -1.7823548316955566
    3. '<|end|>' → logprob: -1.9073548316955566
    4. '        
' → logprob: -4.282354831695557
    5. '<|end|>' → logprob: -6.907354831695557
    6. '  
' → logprob: -7.532354831695557
    7. ' 
' → logprob: -7.657354831695557
    8. '    
' → logprob: -7.657354831695557
    9. ' for' → logprob: -8.657355308532715
    10. '' → logprob: -8.782355308532715

Token 135: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08220373839139938
    2. 'queue' → logprob: -2.8322036266326904
    3. 'q' → logprob: -4.4572038650512695
    4. '       ' → logprob: -5.5822038650512695
    5. ' for' → logprob: -6.3322038650512695
    6. 'def' → logprob: -6.8322038650512695
    7. 'stack' → logprob: -7.7072038650512695
    8. 'black' → logprob: -7.9572038650512695
    9. 'from' → logprob: -8.20720386505127
    10. 'dq' → logprob: -8.58220386505127

Token 136: ' Mark' (ID: 5070)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022771567106246948
    2. ' for' → logprob: -4.14777135848999
    3. 'def' → logprob: -5.27277135848999
    4. 'queue' → logprob: -7.02277135848999
    5. '#' → logprob: -8.022771835327148
    6. 'q' → logprob: -9.022771835327148
    7. 'from' → logprob: -9.147771835327148
    8. '       ' → logprob: -10.147771835327148
    9. ' queue' → logprob: -10.522771835327148
    10. 'For' → logprob: -11.397771835327148

Token 137: ' black' (ID: 5960)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.13675057888031
    2. ' black' → logprob: -1.13675057888031
    3. ' cells' → logprob: -2.0117506980895996
    4. '<|end|>' → logprob: -2.8867506980895996
    5. ' all' → logprob: -3.1367506980895996
    6. ' the' → logprob: -3.7617506980895996
    7. ' positions' → logprob: -3.8867506980895996
    8. 'for' → logprob: -4.3867506980896
    9. '_black' → logprob: -5.0117506980896
    10. ' edges' → logprob: -5.1367506980896

Token 138: ' adjacency' (ID: 177015)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.4390273690223694
    2. '_adj' → logprob: -1.6890273094177246
    3. 'cells' → logprob: -2.9390273094177246
    4. 'adj' → logprob: -3.4390273094177246
    5. ' and' → logprob: -3.8140273094177246
    6. ' edges' → logprob: -4.439027309417725
    7. '_cells' → logprob: -5.064027309417725
    8. ' adjacent' → logprob: -5.064027309417725
    9. ' adjacency' → logprob: -5.564027309417725
    10. ' positions' → logprob: -5.689027309417725

Token 139: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11066490411758423
    2. '<|end|>' → logprob: -2.8606648445129395
    3. ' for' → logprob: -3.7356648445129395
    4. '
' → logprob: -3.8606648445129395
    5. 'for' → logprob: -6.4856648445129395
    6. '<|end|>' → logprob: -7.6106648445129395
    7. '        
' → logprob: -7.8606648445129395
    8. '	for' → logprob: -9.735665321350098
    9. ',' → logprob: -10.485665321350098
    10. '   ' → logprob: -11.235665321350098

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015865543857216835
    2. '<|end|>' → logprob: -4.765865325927734
    3. ' for' → logprob: -5.140865325927734
    4. '        
' → logprob: -7.140865325927734
    5. 'for' → logprob: -8.515865325927734
    6. '
' → logprob: -8.765865325927734
    7. '<|end|>' → logprob: -9.765865325927734
    8. ',' → logprob: -10.015865325927734
    9. '        ' → logprob: -10.390865325927734
    10. ')' → logprob: -11.140865325927734

Token 141: ' queue' (ID: 13661)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25721845030784607
    2. '       ' → logprob: -2.007218360900879
    3. 'for' → logprob: -2.382218360900879
    4. '	for' → logprob: -10.132218360900879
    5. '<|end|>' → logprob: -10.257218360900879
    6. '        
' → logprob: -11.632218360900879
    7. '
' → logprob: -12.757218360900879
    8. '   ' → logprob: -14.007218360900879
    9. ',' → logprob: -14.132218360900879
    10. '	' → logprob: -14.257218360900879

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197183206677437
    2. '=' → logprob: -2.81197190284729
    3. ' ' → logprob: -13.311971664428711
    4. ')' → logprob: -14.061971664428711
    5. '.' → logprob: -14.686971664428711
    6. '=[]' → logprob: -15.686971664428711
    7. '<|end|>' → logprob: -15.811971664428711
    8. ' =)' → logprob: -16.18697166442871
    9. ' ' → logprob: -16.31197166442871
    10. '	' → logprob: -16.43697166442871

Token 143: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.001170460251159966
    2. ' deque' → logprob: -6.751170635223389
    3. 'de' → logprob: -16.251171112060547
    4. '	de' → logprob: -16.751171112060547
    5. '(de' → logprob: -17.126171112060547
    6. 'Deque' → logprob: -17.126171112060547
    7. ' ' → logprob: -17.626171112060547
    8. '   ' → logprob: -18.251171112060547
    9. '```' → logprob: -19.001171112060547
    10. '  ' → logprob: -19.001171112060547

Token 144: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004196998197585344
    2. '([(' → logprob: -5.629197120666504
    3. '([]' → logprob: -7.504197120666504
    4. '()
' → logprob: -11.004197120666504
    5. '(' → logprob: -11.754197120666504
    6. '([' → logprob: -11.879197120666504
    7. '()]' → logprob: -12.629197120666504
    8. '[]' → logprob: -12.629197120666504
    9. '()\' → logprob: -13.379197120666504
    10. '())' → logprob: -13.629197120666504

Token 145: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0182123351842165
    2. ' for' → logprob: -4.01821231842041
    3. '       ' → logprob: -9.76821231842041
    4. '<|end|>' → logprob: -12.39321231842041
    5. '	for' → logprob: -14.14321231842041
    6. '        
' → logprob: -15.51821231842041
    7. '
' → logprob: -16.893213272094727
    8. '#' → logprob: -17.018213272094727
    9. '<|end|>' → logprob: -17.518213272094727
    10. '```' → logprob: -17.768213272094727

Token 147: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.09778222441673279
    2. 'x' → logprob: -3.2227821350097656
    3. ' y' → logprob: -3.3477821350097656
    4. 'i' → logprob: -4.097782135009766
    5. ' i' → logprob: -6.972782135009766
    6. ' x' → logprob: -7.972782135009766
    7. 'j' → logprob: -8.972782135009766
    8. 'r' → logprob: -9.222782135009766
    9. '	y' → logprob: -12.097782135009766
    10. '```' → logprob: -12.347782135009766

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05497346073389053
    2. 'in' → logprob: -2.9299733638763428
    3. ',' → logprob: -9.804973602294922
    4. 'range' → logprob: -11.054973602294922
    5. ')' → logprob: -11.554973602294922
    6. ' ' → logprob: -12.304973602294922
    7. ' ,' → logprob: -13.929973602294922
    8. '```' → logprob: -14.179973602294922
    9. ' range' → logprob: -14.304973602294922
    10. 'In' → logprob: -14.804973602294922

Token 149: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -17.375709533691406
    4. '	range' → logprob: -17.625709533691406
    5. '   ' → logprob: -18.375709533691406
    6. ' ' → logprob: -19.250709533691406
    7. 'r' → logprob: -19.750709533691406
    8. '
' → logprob: -19.875709533691406
    9. ')' → logprob: -20.000709533691406
    10. '0' → logprob: -20.250709533691406

Token 150: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.8219583075260743e-05
    2. 'h' → logprob: -10.375038146972656
    3. '(' → logprob: -12.250038146972656
    4. '	h' → logprob: -13.500038146972656
    5. '       ' → logprob: -14.875038146972656
    6. '   ' → logprob: -15.250038146972656
    7. ',h' → logprob: -16.250038146972656
    8. ' h' → logprob: -16.500038146972656
    9. '           ' → logprob: -17.750038146972656
    10. ' (' → logprob: -17.750038146972656

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07892272621393204
    2. '):
' → logprob: -2.578922748565674
    3. '):
' → logprob: -11.328922271728516
    4. ' ):' → logprob: -11.578922271728516
    5. ':' → logprob: -12.578922271728516
    6. '   ' → logprob: -12.703922271728516
    7. '):

' → logprob: -12.828922271728516
    8. ')' → logprob: -14.453922271728516
    9. ' ):
' → logprob: -14.453922271728516
    10. '}:' → logprob: -15.453922271728516

Token 152: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6991136074066162
    2. '<|end|>' → logprob: -1.1991136074066162
    3. '           ' → logprob: -2.324113607406616
    4. '	       ' → logprob: -2.949113607406616
    5. '	   ' → logprob: -3.824113607406616
    6. '<|end|>' → logprob: -4.699113845825195
    7. '   ' → logprob: -4.949113845825195
    8. ' for' → logprob: -5.699113845825195
    9. '    	   ' → logprob: -6.574113845825195
    10. '	' → logprob: -6.699113845825195

Token 153: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07894905656576157
    2. 'for' (adapté à ' for') → logprob: -2.578948974609375
    3. '   ' → logprob: -10.078948974609375
    4. '	for' → logprob: -12.203948974609375
    5. '       ' → logprob: -12.578948974609375
    6. ' ' → logprob: -12.703948974609375
    7. '<|end|>' → logprob: -13.453948974609375
    8. ' in' → logprob: -13.578948974609375
    9. '
' → logprob: -13.828948974609375
    10. '           ' → logprob: -14.828948974609375

Token 154: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03238669037818909
    2. 'w' → logprob: -4.032386779785156
    3. ' x' → logprob: -4.282386779785156
    4. ' w' → logprob: -8.032386779785156
    5. '0' → logprob: -14.282386779785156
    6. ' ' → logprob: -14.532386779785156
    7. '	x' → logprob: -16.657386779785156
    8. 'range' → logprob: -16.657386779785156
    9. ')' → logprob: -16.782386779785156
    10. ' range' → logprob: -16.907386779785156

Token 155: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003694731742143631
    2. 'in' → logprob: -5.753694534301758
    3. '<|end|>' → logprob: -7.753694534301758
    4. ' ' → logprob: -9.628694534301758
    5. '	in' → logprob: -11.753694534301758
    6. '<|end|>' → logprob: -12.628694534301758
    7. 'In' → logprob: -13.003694534301758
    8. ')' → logprob: -13.503694534301758
    9. '0' → logprob: -13.628694534301758
    10. '(' → logprob: -14.378694534301758

Token 156: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759430527687073
    2. 'range' → logprob: -0.8259430527687073
    3. 'w' → logprob: -13.200942993164062
    4. '[' → logprob: -13.950942993164062
    5. '(range' → logprob: -14.575942993164062
    6. '	range' → logprob: -15.950942993164062
    7. ' w' → logprob: -16.325942993164062
    8. ' [' → logprob: -16.825942993164062
    9. ' xrange' → logprob: -16.950942993164062
    10. '[w' → logprob: -17.325942993164062

Token 157: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0006484562181867659
    2. '(' → logprob: -7.500648498535156
    3. '(h' → logprob: -9.500648498535156
    4. 'w' → logprob: -12.375648498535156
    5. ' (' → logprob: -12.375648498535156
    6. '(s' → logprob: -12.500648498535156
    7. ')' → logprob: -12.875648498535156
    8. '(x' → logprob: -13.000648498535156
    9. '(
' → logprob: -13.875648498535156
    10. ')(' → logprob: -14.500648498535156

Token 158: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5233407020568848
    2. '):' → logprob: -0.8983407020568848
    3. '):
' → logprob: -9.148340225219727
    4. ':' → logprob: -10.023340225219727
    5. '):

' → logprob: -11.148340225219727
    6. '           ' → logprob: -11.398340225219727
    7. ')' → logprob: -11.773340225219727
    8. '       ' → logprob: -12.148340225219727
    9. '():
' → logprob: -12.148340225219727
    10. ' ):
' → logprob: -12.148340225219727

Token 159: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6060407757759094
    2. '           ' → logprob: -1.1060407161712646
    3. ':' → logprob: -2.2310407161712646
    4. '<|end|>' → logprob: -4.981040954589844
    5. ' if' → logprob: -5.981040954589844
    6. ',' → logprob: -6.231040954589844
    7. ':
' → logprob: -6.481040954589844
    8. '<|end|>' → logprob: -6.731040954589844
    9. '       ' → logprob: -6.856040954589844
    10. 'if' → logprob: -8.606040954589844

Token 160: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08893008530139923
    2. 'if' (adapté à ' if') → logprob: -2.838930130004883
    3. '                   ' → logprob: -4.213930130004883
    4. '           ' → logprob: -4.713930130004883
    5. '               ' → logprob: -7.213930130004883
    6. '<|end|>' → logprob: -7.213930130004883
    7. ' ' → logprob: -7.713930130004883
    8. '   ' → logprob: -8.338930130004883
    9. '       ' → logprob: -8.838930130004883
    10. '                       ' → logprob: -9.088930130004883

Token 161: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.5760085582733154
    2. 'grid' → logprob: -0.8260085582733154
    3. '(grid' → logprob: -9.951008796691895
    4. 'black' → logprob: -12.576008796691895
    5. '	grid' → logprob: -12.576008796691895
    6. ' not' → logprob: -12.826008796691895
    7. ' black' → logprob: -13.076008796691895
    8. ' x' → logprob: -13.201008796691895
    9. 'not' → logprob: -13.326008796691895
    10. 'x' → logprob: -13.576008796691895

Token 162: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.47495681833243e-05
    2. '[x' → logprob: -10.875024795532227
    3. '[' → logprob: -13.375024795532227
    4. '[h' → logprob: -14.250024795532227
    5. '```' → logprob: -14.250024795532227
    6. ' [' → logprob: -14.625024795532227
    7. ')[' → logprob: -15.000024795532227
    8. '[j' → logprob: -15.250024795532227
    9. '][' → logprob: -15.500024795532227
    10. '[i' → logprob: -15.750024795532227

Token 163: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6948090195655823
    2. '[x' → logprob: -0.6948090195655823
    3. '[y' → logprob: -6.5698089599609375
    4. ']' → logprob: -8.944808959960938
    5. '[
' → logprob: -9.944808959960938
    6. '[' → logprob: -11.444808959960938
    7. '"][' → logprob: -11.444808959960938
    8. '```' → logprob: -11.569808959960938
    9. ')[' → logprob: -11.944808959960938
    10. ']==' → logprob: -12.319808959960938

Token 164: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.8889261304575484e-06
    2. ' x' → logprob: -12.750003814697266
    3. '[x' → logprob: -15.250003814697266
    4. ''x' → logprob: -15.250003814697266
    5. '"x' → logprob: -15.250003814697266
    6. '	x' → logprob: -17.125003814697266
    7. ')x' → logprob: -17.375003814697266
    8. ']' → logprob: -17.750003814697266
    9. '```' → logprob: -17.875003814697266
    10. '{x' → logprob: -18.375003814697266

Token 165: ']=='' (ID: 71177)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1353226602077484
    2. ']==' → logprob: -2.7603225708007812
    3. ']=='' → logprob: -3.7603225708007812
    4. '==' → logprob: -3.7603225708007812
    5. '=='' → logprob: -4.510322570800781
    6. ' ==' → logprob: -5.510322570800781
    7. ')' → logprob: -7.010322570800781
    8. ' ]' → logprob: -7.885322570800781
    9. ' =='' → logprob: -9.260322570800781
    10. '']=='' → logprob: -9.760322570800781

Token 166: 'B' (ID: 33)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4981280565261841
    2. 'B' → logprob: -1.123128056526184
    3. '.' → logprob: -4.4981279373168945
    4. ''' → logprob: -4.4981279373168945
    5. '1' → logprob: -4.4981279373168945
    6. 'W' → logprob: -4.8731279373168945
    7. 'b' → logprob: -5.1231279373168945
    8. ''#' → logprob: -5.4981279373168945
    9. '.'' → logprob: -5.6231279373168945
    10. 'X' → logprob: -5.9981279373168945

Token 167: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0922446995973587
    2. '':' → logprob: -3.3422446250915527
    3. ' and' → logprob: -4.092244625091553
    4. 'and' → logprob: -4.467244625091553
    5. ':' → logprob: -4.842244625091553
    6. ' '' → logprob: -5.592244625091553
    7. ')' → logprob: -5.967244625091553
    8. ''):' → logprob: -6.092244625091553
    9. '')' → logprob: -6.342244625091553
    10. '):' → logprob: -6.467244625091553

Token 168: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11852426826953888
    2. 'and' → logprob: -3.1185243129730225
    3. ':' → logprob: -3.2435243129730225
    4. '                   ' → logprob: -4.118524074554443
    5. ':
' → logprob: -4.493524074554443
    6. '               ' → logprob: -7.493524074554443
    7. '                       ' → logprob: -8.868524551391602
    8. '   ' → logprob: -9.743524551391602
    9. ' or' → logprob: -9.743524551391602
    10. '           ' → logprob: -9.868524551391602

Token 169: ' black' (ID: 5960)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.35516947507858276
    2. ' for' → logprob: -1.7301695346832275
    3. 'queue' → logprob: -2.4801695346832275
    4. 'for' → logprob: -3.3551695346832275
    5. '                   ' → logprob: -6.980169296264648
    6. ' black' → logprob: -7.105169296264648
    7. 'black' (adapté à ' black') → logprob: -7.605169296264648
    8. '                       ' → logprob: -7.980169296264648
    9. ' if' → logprob: -9.105169296264648
    10. '   ' → logprob: -9.105169296264648

Token 170: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.004239381290972233
    2. '_queue' → logprob: -6.379239559173584
    3. 'queue' → logprob: -6.504239559173584
    4. '_ad' → logprob: -7.879239559173584
    5. 'adj' → logprob: -8.879239082336426
    6. ')' → logprob: -9.004239082336426
    7. '```' → logprob: -9.879239082336426
    8. '_' → logprob: -10.504239082336426
    9. 'for' → logprob: -10.504239082336426
    10. ' queue' → logprob: -10.879239082336426

Token 171: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -5.180879816180095e-05
    2. '[' → logprob: -11.750051498413086
    3. '[x' → logprob: -12.000051498413086
    4. ' [' → logprob: -12.250051498413086
    5. 'queue' → logprob: -12.250051498413086
    6. '[Y' → logprob: -12.500051498413086
    7. 'y' → logprob: -12.625051498413086
    8. '[(' → logprob: -12.750051498413086
    9. '[q' → logprob: -13.125051498413086
    10. '][' → logprob: -13.500051498413086

Token 172: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0015884159365668893
    2. ' ][' → logprob: -7.751588344573975
    3. ']' → logprob: -7.876588344573975
    4. '+' → logprob: -8.251588821411133
    5. '[x' → logprob: -8.376588821411133
    6. '-' → logprob: -8.751588821411133
    7. '   ' → logprob: -10.376588821411133
    8. '[y' → logprob: -11.501588821411133
    9. ')][' → logprob: -11.751588821411133
    10. '+x' → logprob: -12.001588821411133

Token 173: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.084206375409849e-05
    2. ' x' → logprob: -10.125041007995605
    3. 'max' → logprob: -14.625041007995605
    4. '(x' → logprob: -15.500041007995605
    5. '0' → logprob: -16.87504005432129
    6. ']' → logprob: -18.00004005432129
    7. ')x' → logprob: -18.50004005432129
    8. ' ' → logprob: -18.62504005432129
    9. '	x' → logprob: -18.75004005432129
    10. '[x' → logprob: -18.75004005432129

Token 174: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04520835354924202
    2. ']=' → logprob: -3.17020845413208
    3. '=' → logprob: -6.42020845413208
    4. ' =' → logprob: -8.420207977294922
    5. ' ]' → logprob: -8.420207977294922
    6. '=True' → logprob: -9.045207977294922
    7. '[' → logprob: -12.045207977294922
    8. ')' → logprob: -12.670207977294922
    9. 'True' → logprob: -12.920207977294922
    10. '=False' → logprob: -13.920207977294922

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2534335255622864
    2. ' =' → logprob: -1.5034334659576416
    3. '=True' → logprob: -6.503433704376221
    4. '=true' → logprob: -13.503433227539062
    5. '=False' → logprob: -13.753433227539062
    6. ' ' → logprob: -13.878433227539062
    7. '[' → logprob: -14.878433227539062
    8. ',' → logprob: -14.878433227539062
    9. ' True' → logprob: -15.503433227539062
    10. '.=' → logprob: -15.878433227539062

Token 176: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.023252815008163452
    2. ' True' → logprob: -3.7732527256011963
    3. 'False' → logprob: -11.898252487182617
    4. ' ' → logprob: -15.523252487182617
    5. '0' → logprob: -15.773252487182617
    6. '(True' → logprob: -16.148252487182617
    7. '1' → logprob: -16.648252487182617
    8. ' False' → logprob: -17.398252487182617
    9. '=True' → logprob: -18.023252487182617
    10. '[]' → logprob: -18.148252487182617

Token 177: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6627792716026306
    2. '<|end|>' → logprob: -0.7877792716026306
    3. '<|end|>' → logprob: -4.662779331207275
    4. '               ' → logprob: -5.037779331207275
    5. '
' → logprob: -5.662779331207275
    6. '                    
' → logprob: -6.037779331207275
    7. '       ' → logprob: -6.037779331207275
    8. ' ' → logprob: -7.162779331207275
    9. '                ' → logprob: -7.662779331207275
    10. '                    ' → logprob: -7.662779331207275

Token 179: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.4315541982650757
    2. ' queue' → logprob: -1.0565541982650757
    3. '                   ' → logprob: -5.931554317474365
    4. ' for' → logprob: -9.556553840637207
    5. 'for' → logprob: -9.556553840637207
    6. '       ' → logprob: -11.681553840637207
    7. '                       ' → logprob: -11.806553840637207
    8. '           ' → logprob: -11.931553840637207
    9. '```' → logprob: -11.931553840637207
    10. '   ' → logprob: -12.431553840637207

Token 180: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006521515315398574
    2. '.' → logprob: -7.375652313232422
    3. '.enqueue' → logprob: -11.250652313232422
    4. '.extend' → logprob: -11.750652313232422
    5. '.app' → logprob: -13.375652313232422
    6. '.put' → logprob: -13.875652313232422
    7. 'append' → logprob: -14.750652313232422
    8. '.push' → logprob: -14.875652313232422
    9. '.p' → logprob: -14.875652313232422
    10. ').' → logprob: -15.125652313232422

Token 181: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -9.7500581741333
    3. '(((' → logprob: -16.375059127807617
    4. '(x' → logprob: -17.375059127807617
    5. ' ((' → logprob: -17.500059127807617
    6. '(('' → logprob: -18.750059127807617
    7. '(
' → logprob: -19.000059127807617
    8. '[(' → logprob: -19.375059127807617
    9. '([(' → logprob: -19.625059127807617
    10. '((-' → logprob: -20.250059127807617

Token 182: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.5014188799541444e-05
    2. 'y' → logprob: -10.125044822692871
    3. ' x' → logprob: -12.500044822692871
    4. '(x' → logprob: -14.125044822692871
    5. ')' → logprob: -15.750044822692871
    6. ')x' → logprob: -15.750044822692871
    7. ''x' → logprob: -16.750045776367188
    8. ',x' → logprob: -18.750045776367188
    9. '"x' → logprob: -18.750045776367188
    10. '   ' → logprob: -18.750045776367188

Token 183: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.12727560102939606
    2. ',' → logprob: -2.1272757053375244
    3. ' ,' → logprob: -8.002275466918945
    4. 'y' → logprob: -13.377275466918945
    5. ',
' → logprob: -13.752275466918945
    6. '```' → logprob: -13.877275466918945
    7. '<|end|>' → logprob: -14.002275466918945
    8. '
' → logprob: -14.127275466918945
    9. '

' → logprob: -14.127275466918945
    10. ')' → logprob: -14.252275466918945

Token 184: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00028767617186531425
    2. '))
' → logprob: -9.000288009643555
    3. ')' → logprob: -9.375288009643555
    4. ' ))' → logprob: -10.000288009643555
    5. ')))' → logprob: -10.875288009643555
    6. ',' → logprob: -11.500288009643555
    7. '))

' → logprob: -14.000288009643555
    8. '),' → logprob: -14.250288009643555
    9. '<|end|>' → logprob: -14.625288009643555
    10. ' ' → logprob: -14.625288009643555

Token 185: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.033098507672548294
    2. '       ' → logprob: -3.5330984592437744
    3. ' while' → logprob: -6.9080986976623535
    4. 'while' → logprob: -6.9080986976623535
    5. '   ' → logprob: -7.7830986976623535
    6. '	while' → logprob: -8.158098220825195
    7. '
' → logprob: -8.533098220825195
    8. '```' → logprob: -8.783098220825195
    9. '\n' → logprob: -9.408098220825195
    10. '        
' → logprob: -9.783098220825195

Token 186: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8452864289283752
    2. '
' → logprob: -1.0952863693237305
    3. 'while' (adapté à ' while') → logprob: -1.5952863693237305
    4. ' while' → logprob: -3.8452863693237305
    5. '   ' → logprob: -4.5952863693237305
    6. '        
' → logprob: -7.2202863693237305
    7. '	while' → logprob: -8.22028636932373
    8. '```' → logprob: -8.22028636932373
    9. '    
' → logprob: -8.72028636932373
    10. ' 
' → logprob: -9.47028636932373

Token 187: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.38692641258239746
    2. ' queue' → logprob: -1.1369264125823975
    3. '(queue' → logprob: -10.636926651000977
    4. '	queue' → logprob: -10.636926651000977
    5. 'len' → logprob: -13.011926651000977
    6. 'que' → logprob: -13.261926651000977
    7. '```' → logprob: -13.886926651000977
    8. ' len' → logprob: -14.636926651000977
    9. ' ' → logprob: -14.761926651000977
    10. ' ' → logprob: -15.011926651000977

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.039169300347566605
    2. '):' → logprob: -3.2891693115234375
    3. '>:' → logprob: -7.0391693115234375
    4. 'and' → logprob: -9.914169311523438
    5. '():' → logprob: -10.164169311523438
    6. ')' → logprob: -10.414169311523438
    7. '}:' → logprob: -10.539169311523438
    8. ']:' → logprob: -10.789169311523438
    9. '):
' → logprob: -11.539169311523438
    10. '.pop' → logprob: -11.539169311523438

Token 189: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3105754554271698
    2. 'x' → logprob: -1.4355754852294922
    3. '       ' → logprob: -3.810575485229492
    4. ' (' → logprob: -5.810575485229492
    5. ',' → logprob: -7.185575485229492
    6. '(x' → logprob: -7.435575485229492
    7. ' ,' → logprob: -7.560575485229492
    8. ' 
' → logprob: -7.685575485229492
    9. '   ' → logprob: -7.810575485229492
    10. ',x' → logprob: -8.435575485229492

Token 190: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.25193527340888977
    2. ' x' → logprob: -1.5019352436065674
    3. ')x' → logprob: -13.251935005187988
    4. '	x' → logprob: -13.876935005187988
    5. '```' → logprob: -14.001935005187988
    6. ',x' → logprob: -14.126935005187988
    7. '   ' → logprob: -14.501935005187988
    8. '(x' → logprob: -15.251935005187988
    9. '               ' → logprob: -15.626935005187988
    10. ')' → logprob: -15.876935005187988

Token 191: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5236564874649048
    2. ',y' → logprob: -0.8986564874649048
    3. ' ,' → logprob: -8.148656845092773
    4. '+' → logprob: -8.523656845092773
    5. '+,' → logprob: -10.773656845092773
    6. '-' → logprob: -12.023656845092773
    7. ',x' → logprob: -12.148656845092773
    8. '+y' → logprob: -12.523656845092773
    9. ',n' → logprob: -13.773656845092773
    10. ',
' → logprob: -13.773656845092773

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2063007652759552
    2. '=' → logprob: -1.7063007354736328
    3. ',' → logprob: -5.331300735473633
    4. ' ,' → logprob: -10.581300735473633
    5. ')' → logprob: -11.956300735473633
    6. ',x' → logprob: -13.331300735473633
    7. '(queue' → logprob: -13.831300735473633
    8. ' =
' → logprob: -14.581300735473633
    9. ')=' → logprob: -14.706300735473633
    10. '=x' → logprob: -15.706300735473633

Token 193: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.12694920599460602
    2. ' queue' → logprob: -2.1269493103027344
    3. '	queue' → logprob: -11.501949310302734
    4. '(queue' → logprob: -12.126949310302734
    5. 'deque' → logprob: -12.376949310302734
    6. '.queue' → logprob: -14.626949310302734
    7. 'que' → logprob: -15.126949310302734
    8. ' deque' → logprob: -15.251949310302734
    9. '
' → logprob: -16.126949310302734
    10. '   ' → logprob: -16.126949310302734

Token 194: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0032459204085171223
    2. '.pop' → logprob: -5.753245830535889
    3. '.' → logprob: -10.003246307373047
    4. ' .' → logprob: -11.628246307373047
    5. 'p' → logprob: -12.003246307373047
    6. '.dequeue' → logprob: -12.878246307373047
    7. '=' → logprob: -13.878246307373047
    8. '   ' → logprob: -13.878246307373047
    9. 'opleft' → logprob: -14.128246307373047
    10. '.queue' → logprob: -14.378246307373047

Token 195: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.00866858009248972
    2. 'op' → logprob: -4.758668422698975
    3. 'opl' → logprob: -10.258668899536133
    4. 'ople' → logprob: -10.883668899536133
    5. 'opt' → logprob: -16.008668899536133
    6. 'opf' → logprob: -17.633668899536133
    7. 'opup' → logprob: -17.758668899536133
    8. 'o' → logprob: -18.133668899536133
    9. 'ope' → logprob: -18.508668899536133
    10. '```' → logprob: -18.758668899536133

Token 196: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23152540624141693
    2. '<|end|>' → logprob: -2.606525421142578
    3. ')' → logprob: -2.856525421142578
    4. '
' → logprob: -3.356525421142578
    5. 'for' → logprob: -4.481525421142578
    6. '               ' → logprob: -4.856525421142578
    7. '       ' → logprob: -5.231525421142578
    8. '            
' → logprob: -5.731525421142578
    9. '<|end|>' → logprob: -6.231525421142578
    10. ')
' → logprob: -6.231525421142578

Token 197: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1270357221364975
    2. ' for' → logprob: -2.502035617828369
    3. '<|end|>' → logprob: -4.252035617828369
    4. '           ' → logprob: -4.877035617828369
    5. '       ' → logprob: -5.252035617828369
    6. '   ' → logprob: -5.752035617828369
    7. ' 
' → logprob: -6.252035617828369
    8. 'for' → logprob: -6.627035617828369
    9. '    
' → logprob: -6.752035617828369
    10. '  
' → logprob: -7.002035617828369

Token 198: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04861892759799957
    2. 'for' (adapté à ' for') → logprob: -3.048619031906128
    3. '
' → logprob: -10.923619270324707
    4. '           ' → logprob: -12.048619270324707
    5. ' 
' → logprob: -12.173619270324707
    6. '	for' → logprob: -14.423619270324707
    7. '   ' → logprob: -14.798619270324707
    8. '            
' → logprob: -14.798619270324707
    9. ' ' → logprob: -14.923619270324707
    10. '```' → logprob: -15.548619270324707

Token 199: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0007145775598473847
    2. ' dx' → logprob: -7.2507147789001465
    3. '(dx' → logprob: -13.125714302062988
    4. '_dx' → logprob: -13.875714302062988
    5. '   ' → logprob: -14.500714302062988
    6. '```' → logprob: -14.625714302062988
    7. 'nx' → logprob: -15.000714302062988
    8. '

' → logprob: -15.500714302062988
    9. 'd' → logprob: -16.750715255737305
    10. '.dx' → logprob: -16.875715255737305

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017733541317284107
    2. ',y' → logprob: -6.376773357391357
    3. ',d' → logprob: -10.0017728805542
    4. ' ,' → logprob: -11.6267728805542
    5. ',(' → logprob: -13.0017728805542
    6. ',x' → logprob: -13.0017728805542
    7. ',_' → logprob: -13.1267728805542
    8. ',user' → logprob: -13.1267728805542
    9. ',n' → logprob: -13.3767728805542
    10. ',my' → logprob: -14.3767728805542

Token 201: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0040785204619169235
    2. ' dy' → logprob: -5.504078388214111
    3. '.dy' → logprob: -18.129077911376953
    4. 'Dy' → logprob: -18.754077911376953
    5. 'dym' → logprob: -20.754077911376953
    6. 'ay' → logprob: -21.379077911376953
    7. ',' → logprob: -22.004077911376953
    8. 'd' → logprob: -22.004077911376953
    9. 'DY' → logprob: -22.504077911376953
    10. ' ' → logprob: -22.629077911376953

Token 202: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11284594237804413
    2. 'in' → logprob: -2.2378458976745605
    3. ')' → logprob: -11.112846374511719
    4. ',' → logprob: -12.487846374511719
    5. ' ' → logprob: -13.612846374511719
    6. '<|end|>' → logprob: -13.612846374511719
    7. 'In' → logprob: -14.487846374511719
    8. '	in' → logprob: -14.487846374511719
    9. 'inth' → logprob: -15.487846374511719
    10. ' ,' → logprob: -15.487846374511719

Token 203: ' DIR' (ID: 83023)
  Prédit: 'DIR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIR' → logprob: -0.0015029559144750237
    2. ' DIR' → logprob: -6.501502990722656
    3. 'DR' → logprob: -14.751502990722656
    4. ' ' → logprob: -16.001502990722656
    5. 'DI' → logprob: -16.126502990722656
    6. '_DIR' → logprob: -17.751502990722656
    7. 'D' → logprob: -17.876502990722656
    8. 'DIRECT' → logprob: -18.001502990722656
    9. ' DIRE' → logprob: -18.626502990722656
    10. ')' → logprob: -18.751502990722656

Token 204: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.013994814362377e-05
    2. 's' → logprob: -10.12505054473877
    3. ')' → logprob: -11.87505054473877
    4. '```' → logprob: -13.87505054473877
    5. ' S' → logprob: -14.37505054473877
    6. '(S' → logprob: -14.75005054473877
    7. '):
' → logprob: -15.50005054473877
    8. ':' → logprob: -16.375049591064453
    9. '):' → logprob: -16.500049591064453
    10. ']' → logprob: -16.750049591064453

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2207186073064804
    2. '<|end|>' → logprob: -2.2207186222076416
    3. ':
' → logprob: -2.9707186222076416
    4. ',' → logprob: -3.9707186222076416
    5. ')' → logprob: -5.3457183837890625
    6. '   ' → logprob: -5.5957183837890625
    7. '<|end|>' → logprob: -6.2207183837890625
    8. '       ' → logprob: -6.2207183837890625
    9. '           ' → logprob: -6.5957183837890625
    10. '):
' → logprob: -6.8457183837890625

Token 206: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0700102373957634
    2. ' 
' → logprob: -4.195010185241699
    3. '<|end|>' → logprob: -4.570010185241699
    4. '           ' → logprob: -4.820010185241699
    5. ' ' → logprob: -4.820010185241699
    6. '            ' → logprob: -5.570010185241699
    7. '                
' → logprob: -5.820010185241699
    8. '                ' → logprob: -5.820010185241699
    9. ' new' → logprob: -5.945010185241699
    10. '  
' → logprob: -5.945010185241699

Token 207: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.004273919388651848
    2. 'nx' (adapté à ' nx') → logprob: -5.504273891448975
    3. ' new' → logprob: -9.379274368286133
    4. '(nx' → logprob: -9.754274368286133
    5. ' ' → logprob: -10.754274368286133
    6. ' ' → logprob: -11.379274368286133
    7. ' 
' → logprob: -11.754274368286133
    8. '                ' → logprob: -12.754274368286133
    9. ' x' → logprob: -12.879274368286133
    10. 'x' → logprob: -13.254274368286133

Token 208: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10722948610782623
    2. ',' → logprob: -2.607229471206665
    3. ' =' → logprob: -3.607229471206665
    4. '=x' → logprob: -7.732229709625244
    5. ',x' → logprob: -8.982229232788086
    6. ',n' → logprob: -9.107229232788086
    7. ' ,' → logprob: -9.982229232788086
    8. ',y' → logprob: -9.982229232788086
    9. '=n' → logprob: -10.232229232788086
    10. 'x' → logprob: -12.857229232788086

Token 209: 'ny' (ID: 3008)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001502598519437015
    2. ' x' → logprob: -6.501502513885498
    3. '<|end|>' → logprob: -15.751502990722656
    4. '0' → logprob: -16.126502990722656
    5. ' ' → logprob: -17.001502990722656
    6. '=' → logprob: -18.501502990722656
    7. ')x' → logprob: -19.251502990722656
    8. '=x' → logprob: -19.251502990722656
    9. ' 
' → logprob: -19.251502990722656
    10. '(x' → logprob: -19.626502990722656

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16027569770812988
    2. ' =' → logprob: -1.9102756977081299
    3. '=x' → logprob: -9.91027545928955
    4. '=n' → logprob: -13.91027545928955
    5. ',' → logprob: -14.66027545928955
    6. ')' → logprob: -15.78527545928955
    7. '=
' → logprob: -16.160276412963867
    8. 'x' → logprob: -17.410276412963867
    9. '   ' → logprob: -17.535276412963867
    10. ' ' → logprob: -17.535276412963867

Token 211: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04858794063329697
    2. 'x' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.048587799072266
    4. '(x' → logprob: -15.923587799072266
    5. '	x' → logprob: -17.048587799072266
    6. ' 
' → logprob: -17.048587799072266
    7. '<|end|>' → logprob: -17.673587799072266
    8. ' ' → logprob: -17.923587799072266
    9. ')x' → logprob: -18.298587799072266
    10. ' (' → logprob: -19.048587799072266

Token 212: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6355303525924683
    2. ' +' → logprob: -0.7605303525924683
    3. '+x' → logprob: -5.885530471801758
    4. '+y' → logprob: -9.885530471801758
    5. '+,' → logprob: -10.510530471801758
    6. '+d' → logprob: -10.510530471801758
    7. '+
' → logprob: -11.260530471801758
    8. ' +
' → logprob: -12.010530471801758
    9. ',' → logprob: -12.260530471801758
    10. '+n' → logprob: -12.385530471801758

Token 213: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.8312570318812504e-05
    2. ' dx' → logprob: -11.250018119812012
    3. '0' → logprob: -12.625018119812012
    4. '1' → logprob: -14.750018119812012
    5. '(dx' → logprob: -15.000018119812012
    6. '_dx' → logprob: -15.000018119812012
    7. ',' → logprob: -15.500018119812012
    8. '
' → logprob: -15.875018119812012
    9. ' ' → logprob: -15.875018119812012
    10. 'x' → logprob: -16.250019073486328

Token 214: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.023316634818911552
    2. ',' → logprob: -3.7733166217803955
    3. ' ,' → logprob: -10.273316383361816
    4. ',x' → logprob: -10.273316383361816
    5. ',n' → logprob: -13.398316383361816
    6. ',w' → logprob: -14.898316383361816
    7. ',
' → logprob: -16.148317337036133
    8. ',v' → logprob: -16.648317337036133
    9. ',z' → logprob: -17.148317337036133
    10. ',u' → logprob: -18.523317337036133

Token 215: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.034592388459714e-06
    2. ' +' → logprob: -12.875005722045898
    3. '<|end|>' → logprob: -13.250005722045898
    4. '+d' → logprob: -13.875005722045898
    5. '+y' → logprob: -14.375005722045898
    6. '+x' → logprob: -16.5000057220459
    7. '+h' → logprob: -16.8750057220459
    8. '+
' → logprob: -17.1250057220459
    9. '+n' → logprob: -18.5000057220459
    10. '+s' → logprob: -18.8750057220459

Token 216: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0011286636581644416
    2. 'dx' → logprob: -7.126128673553467
    3. ' dy' → logprob: -8.501128196716309
    4. '1' → logprob: -10.126128196716309
    5. 'd' → logprob: -10.251128196716309
    6. '0' → logprob: -10.751128196716309
    7. 'y' → logprob: -11.501128196716309
    8. 'dj' → logprob: -12.876128196716309
    9. '.dy' → logprob: -13.001128196716309
    10. 'x' → logprob: -13.001128196716309

Token 217: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025338062550872564
    2. '<|end|>' → logprob: -6.877533912658691
    3. '                ' → logprob: -7.252533912658691
    4. '                
' → logprob: -7.627533912658691
    5. '           ' → logprob: -9.877533912658691
    6. ' 
' → logprob: -10.127533912658691
    7. '              ' → logprob: -10.377533912658691
    8. ' ' → logprob: -10.502533912658691
    9. '                   ' → logprob: -10.502533912658691
    10. ' if' → logprob: -10.877533912658691

Token 219: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6864543557167053
    2. ' if' → logprob: -0.9364543557167053
    3. '                ' → logprob: -2.8114542961120605
    4. ' 
' → logprob: -3.9364542961120605
    5. ' ' → logprob: -4.5614542961120605
    6. ' ' → logprob: -5.0614542961120605
    7. 'if' (adapté à ' if') → logprob: -5.3114542961120605
    8. '                
' → logprob: -6.3114542961120605
    9. ' \' → logprob: -8.186454772949219
    10. '                   ' → logprob: -8.811454772949219

Token 220: ' inside' (ID: 6772)
  Prédit: ' inside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inside' → logprob: -0.47432073950767517
    2. 'inside' → logprob: -0.9743207693099976
    3. ' ' → logprob: -8.599320411682129
    4. '0' → logprob: -9.974320411682129
    5. ' black' → logprob: -13.099320411682129
    6. ' ' → logprob: -13.099320411682129
    7. '(' → logprob: -13.224320411682129
    8. ' not' → logprob: -13.224320411682129
    9. '_inside' → logprob: -13.724320411682129
    10. 'Inside' → logprob: -14.286820411682129

Token 221: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -5.3358446166384965e-05
    2. '(' → logprob: -9.875053405761719
    3. ' (' → logprob: -14.000053405761719
    4. '(
' → logprob: -14.500053405761719
    5. '(n' → logprob: -15.000053405761719
    6. '((' → logprob: -16.87505340576172
    7. 'nx' → logprob: -17.12505340576172
    8. '```' → logprob: -17.37505340576172
    9. '(dx' → logprob: -18.12505340576172
    10. ')(' → logprob: -18.62505340576172

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007544778054580092
    2. ' ,' → logprob: -7.250754356384277
    3. ',n' → logprob: -10.625754356384277
    4. ',
' → logprob: -11.250754356384277
    5. ',y' → logprob: -12.250754356384277
    6. ' ny' → logprob: -14.125754356384277
    7. 'ny' → logprob: -14.875754356384277
    8. 'y' → logprob: -15.375754356384277
    9. ',int' → logprob: -15.500754356384277
    10. '```' → logprob: -15.625754356384277

Token 223: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00033510822686366737
    2. 'w' → logprob: -8.625334739685059
    3. ' ny' → logprob: -9.125334739685059
    4. 'nx' → logprob: -10.750334739685059
    5. 'y' → logprob: -11.250334739685059
    6. '0' → logprob: -12.125334739685059
    7. 'n' → logprob: -13.000334739685059
    8. '
' → logprob: -13.625334739685059
    9. '```' → logprob: -14.375334739685059
    10. 'h' → logprob: -14.625334739685059

Token 224: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.0036985352635383606
    2. ',' → logprob: -6.128698348999023
    3. ' ,' → logprob: -6.503698348999023
    4. 'w' → logprob: -13.253698348999023
    5. ',n' → logprob: -13.378698348999023
    6. ',,' → logprob: -13.378698348999023
    7. ',h' → logprob: -13.753698348999023
    8. '   ' → logprob: -13.753698348999023
    9. ',y' → logprob: -13.753698348999023
    10. '       ' → logprob: -13.878698348999023

Token 225: ',h' (ID: 42751)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007617745082825422
    2. ',h' → logprob: -4.882617950439453
    3. ',y' → logprob: -12.257617950439453
    4. ' ,' → logprob: -12.257617950439453
    5. ',
' → logprob: -13.757617950439453
    6. ',n' → logprob: -14.257617950439453
    7. ',height' → logprob: -15.632617950439453
    8. ',int' → logprob: -17.257617950439453
    9. ',

' → logprob: -17.382617950439453
    10. 'h' → logprob: -17.382617950439453

Token 226: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02462390810251236
    2. 'and' → logprob: -4.149623870849609
    3. ')' → logprob: -4.774623870849609
    4. ' )' → logprob: -9.14962387084961
    5. '):' → logprob: -13.14962387084961
    6. ' ' → logprob: -14.27462387084961
    7. ' ' → logprob: -14.52462387084961
    8. '               ' → logprob: -14.89962387084961
    9. '	and' → logprob: -14.89962387084961
    10. '                   ' → logprob: -15.14962387084961

Token 227: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009784307330846786
    2. 'and' → logprob: -4.63478422164917
    3. '               ' → logprob: -11.759784698486328
    4. '                   ' → logprob: -12.134784698486328
    5. '<|end|>' → logprob: -12.259784698486328
    6. '           ' → logprob: -13.134784698486328
    7. '	and' → logprob: -13.134784698486328
    8. '              ' → logprob: -13.509784698486328
    9. '                ' → logprob: -13.634784698486328
    10. '                       ' → logprob: -14.384784698486328

Token 228: ' not' (ID: 625)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.6229384541511536
    2. 'not' → logprob: -0.8729384541511536
    3. ' not' → logprob: -3.497938394546509
    4. ' grid' → logprob: -4.497938632965088
    5. 'black' → logprob: -5.622938632965088
    6. '(not' → logprob: -7.872938632965088
    7. '(grid' → logprob: -7.997938632965088
    8. ' black' → logprob: -8.99793815612793
    9. 'white' → logprob: -10.74793815612793
    10. ' (' → logprob: -11.56043815612793

Token 229: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.38694414496421814
    2. 'black' → logprob: -1.1369441747665405
    3. ' white' → logprob: -9.886943817138672
    4. 'white' → logprob: -10.761943817138672
    5. '.black' → logprob: -15.261943817138672
    6. '   ' → logprob: -16.386943817138672
    7. '```' → logprob: -16.386943817138672
    8. ' ' → logprob: -16.511943817138672
    9. ' ' → logprob: -16.511943817138672
    10. '_black' → logprob: -16.636943817138672

Token 230: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -1.2664456789934775e-06
    2. '_ad' → logprob: -14.125000953674316
    3. 'adj' → logprob: -15.000000953674316
    4. ' _' → logprob: -16.875001907348633
    5. '_' → logprob: -17.375001907348633
    6. ''_' → logprob: -17.875001907348633
    7. '```' → logprob: -18.000001907348633
    8. '_adv' → logprob: -18.125001907348633
    9. '[_' → logprob: -18.625001907348633
    10. 'Adj' → logprob: -19.000001907348633

Token 231: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '[n' → logprob: -13.75000286102295
    3. 'ny' → logprob: -14.25000286102295
    4. '```' → logprob: -14.75000286102295
    5. ' ny' → logprob: -15.25000286102295
    6. '

' → logprob: -15.62500286102295
    7. ' [' → logprob: -15.62500286102295
    8. '[
' → logprob: -16.375003814697266
    9. '
' → logprob: -16.625003814697266
    10. '][' → logprob: -17.125003814697266

Token 232: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.009804493747651577
    2. '[' → logprob: -4.634804725646973
    3. '][' → logprob: -10.634804725646973
    4. ' ny' → logprob: -11.384804725646973
    5. ']' → logprob: -12.634804725646973
    6. 'n' → logprob: -12.759804725646973
    7. '[n' → logprob: -13.509804725646973
    8. 'ni' → logprob: -13.634804725646973
    9. '```' → logprob: -13.884804725646973
    10. 'nx' → logprob: -14.009804725646973

Token 233: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.036639392375946045
    2. '[' → logprob: -3.911639451980591
    3. '[n' → logprob: -4.161639213562012
    4. ']' → logprob: -8.161639213562012
    5. ' ][' → logprob: -9.786639213562012
    6. '(nx' → logprob: -11.661639213562012
    7. '   ' → logprob: -12.161639213562012
    8. '"][' → logprob: -12.286639213562012
    9. '```' → logprob: -12.286639213562012
    10. ']][' → logprob: -12.536639213562012

Token 234: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -5.717296517104842e-05
    2. 'x' → logprob: -10.000057220458984
    3. '(nx' → logprob: -11.625057220458984
    4. ' nx' → logprob: -13.125057220458984
    5. 'ny' → logprob: -14.375057220458984
    6. '
' → logprob: -15.750057220458984
    7. 'n' → logprob: -17.625057220458984
    8. 'xn' → logprob: -18.125057220458984
    9. '```' → logprob: -18.250057220458984
    10. 'nz' → logprob: -18.375057220458984

Token 235: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7649152874946594
    2. ']' → logprob: -1.0149152278900146
    3. 'and' → logprob: -1.7649152278900146
    4. ')' → logprob: -7.514915466308594
    5. ' ]' → logprob: -8.639915466308594
    6. ']:
' → logprob: -9.389915466308594
    7. ' ' → logprob: -10.014915466308594
    8. ']:' → logprob: -10.389915466308594
    9. '   ' → logprob: -10.889915466308594
    10. '<|end|>' → logprob: -10.889915466308594

Token 236: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018183890730142593
    2. 'and' → logprob: -4.018183708190918
    3. ':
' → logprob: -11.518183708190918
    4. '<|end|>' → logprob: -12.018183708190918
    5. ':' → logprob: -12.268183708190918
    6. '	and' → logprob: -12.893183708190918
    7. '           ' → logprob: -13.268183708190918
    8. '               ' → logprob: -13.393183708190918
    9. '<|end|>' → logprob: -13.393183708190918
    10. '   ' → logprob: -13.893183708190918

Token 237: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0006658526253886521
    2. ' grid' → logprob: -7.625665664672852
    3. '(grid' → logprob: -8.750665664672852
    4. '                   ' → logprob: -11.500665664672852
    5. 'black' → logprob: -13.000665664672852
    6. '   ' → logprob: -13.000665664672852
    7. '               ' → logprob: -13.500665664672852
    8. '                       ' → logprob: -14.250665664672852
    9. '
' → logprob: -14.750665664672852
    10. ' (' → logprob: -14.750665664672852

Token 238: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.1080467781284824e-05
    2. '[y' → logprob: -10.500041007995605
    3. '```' → logprob: -12.250041007995605
    4. '][' → logprob: -12.875041007995605
    5. '[
' → logprob: -14.000041007995605
    6. '[n' → logprob: -14.500041007995605
    7. ' [' → logprob: -14.500041007995605
    8. '<|end|>' → logprob: -14.750041007995605
    9. ']' → logprob: -14.875041007995605
    10. '
' → logprob: -15.125041007995605

Token 239: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.001394165214151144
    2. '[' → logprob: -7.001394271850586
    3. 'y' → logprob: -8.376394271850586
    4. ' ny' → logprob: -9.126394271850586
    5. '][' → logprob: -9.626394271850586
    6. ']' → logprob: -9.876394271850586
    7. 'yn' → logprob: -12.001394271850586
    8. '   ' → logprob: -12.251394271850586
    9. '
' → logprob: -12.751394271850586
    10. '```' → logprob: -13.001394271850586

Token 240: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5943203568458557
    2. '][' → logprob: -0.8443203568458557
    3. '[y' → logprob: -4.344320297241211
    4. ']' → logprob: -5.594320297241211
    5. ']==' → logprob: -7.844320297241211
    6. '[n' → logprob: -7.844320297241211
    7. ']=='' → logprob: -8.719320297241211
    8. ''][' → logprob: -9.219320297241211
    9. ']!='' → logprob: -9.219320297241211
    10. ']!=' → logprob: -9.344320297241211

Token 241: 'nx' (ID: 45103)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006553967017680407
    2. ''y' → logprob: -6.006554126739502
    3. ''x' → logprob: -6.256554126739502
    4. 'B' → logprob: -7.131554126739502
    5. 'x' → logprob: -7.381554126739502
    6. ']' → logprob: -8.256553649902344
    7. ''.' → logprob: -9.381553649902344
    8. 'y' → logprob: -10.131553649902344
    9. '']' → logprob: -10.131553649902344
    10. ''S' → logprob: -10.381553649902344

Token 242: ']==' (ID: 34128)
  Prédit: ']==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -1.07180917263031
    2. ']==' → logprob: -1.32180917263031
    3. ']!='' → logprob: -1.44680917263031
    4. ']' → logprob: -2.4468092918395996
    5. ']!=' → logprob: -2.6968092918395996
    6. '=='' → logprob: -7.5718092918396
    7. '!='' → logprob: -7.6968092918396
    8. '']=='' → logprob: -8.446808815002441
    9. ']!' → logprob: -8.571808815002441
    10. ']=="' → logprob: -9.071808815002441

Token 243: ''.' (ID: 6120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03870297223329544
    2. ''.' → logprob: -3.288702964782715
    3. ''#' → logprob: -8.413702964782715
    4. 'B' → logprob: -8.913702964782715
    5. ''A' → logprob: -9.788702964782715
    6. '"B' → logprob: -10.163702964782715
    7. ''C' → logprob: -10.413702964782715
    8. ''O' → logprob: -10.538702964782715
    9. '.' → logprob: -10.788702964782715
    10. ''-' → logprob: -11.038702964782715

Token 244: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.537714421749115
    2. ':
' → logprob: -1.9127144813537598
    3. '':
' → logprob: -2.5377144813537598
    4. '':' → logprob: -2.9127144813537598
    5. '<|end|>' → logprob: -3.9127144813537598
    6. ' and' → logprob: -4.03771448135376
    7. ''' → logprob: -4.28771448135376
    8. '):
' → logprob: -4.28771448135376
    9. ''):
' → logprob: -4.28771448135376
    10. '                   ' → logprob: -4.91271448135376

Token 245: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19148309528827667
    2. ' black' → logprob: -1.8164831399917603
    3. 'black' → logprob: -5.441483020782471
    4. '               ' → logprob: -5.691483020782471
    5. '                       ' → logprob: -5.691483020782471
    6. '```' → logprob: -7.941483020782471
    7. '           ' → logprob: -10.316483497619629
    8. '   ' → logprob: -10.441483497619629
    9. '                               ' → logprob: -10.816483497619629
    10. '                           ' → logprob: -10.941483497619629

Token 246: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.31367599964141846
    2. 'black' (adapté à ' black') → logprob: -1.3136759996414185
    3. '                       ' → logprob: -8.438675880432129
    4. '                   ' → logprob: -8.563675880432129
    5. '```' → logprob: -12.563675880432129
    6. '               ' → logprob: -14.063675880432129
    7. '.black' → logprob: -14.813675880432129
    8. ':black' → logprob: -15.063675880432129
    9. '_black' → logprob: -15.188675880432129
    10. '   ' → logprob: -15.438675880432129

Token 247: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -3.292907877039397e-06
    2. 'adj' → logprob: -13.00000286102295
    3. '_ad' → logprob: -14.12500286102295
    4. '_adv' → logprob: -16.125003814697266
    5. 'Adj' → logprob: -17.000003814697266
    6. ''_' → logprob: -17.375003814697266
    7. '[_' → logprob: -17.750003814697266
    8. '_' → logprob: -17.750003814697266
    9. ' _' → logprob: -17.875003814697266
    10. '```' → logprob: -18.750003814697266

Token 248: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.125000953674316
    3. '][' → logprob: -16.125
    4. '   ' → logprob: -16.25
    5. ' [' → logprob: -16.375
    6. '       ' → logprob: -17.375
    7. '           ' → logprob: -17.5625
    8. '=' → logprob: -18.125
    9. ')[' → logprob: -18.1875
    10. 'y' → logprob: -18.1875

Token 249: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.4498052223643754e-05
    2. ' ny' → logprob: -11.250014305114746
    3. 'ni' → logprob: -14.625014305114746
    4. 'nyi' → logprob: -14.750014305114746
    5. '[' → logprob: -15.500014305114746
    6. 'y' → logprob: -16.375015258789062
    7. 'n' → logprob: -16.500015258789062
    8. 'yn' → logprob: -16.875015258789062
    9. ''ny' → logprob: -17.375015258789062
    10. '   ' → logprob: -17.625015258789062

Token 250: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007983716204762459
    2. '[' → logprob: -4.882983684539795
    3. ']' → logprob: -8.007984161376953
    4. ' ][' → logprob: -11.007984161376953
    5. '[y' → logprob: -11.257984161376953
    6. '[n' → logprob: -12.007984161376953
    7. '   ' → logprob: -13.632984161376953
    8. ']][' → logprob: -14.132984161376953
    9. '```' → logprob: -14.132984161376953
    10. ' [' → logprob: -14.382984161376953

Token 251: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0008542861323803663
    2. 'x' → logprob: -7.1258544921875
    3. ' nx' → logprob: -10.3758544921875
    4. '(nx' → logprob: -11.0008544921875
    5. 'ny' → logprob: -14.6258544921875
    6. 'xn' → logprob: -15.0008544921875
    7. 'Nx' → logprob: -15.8758544921875
    8. '[' → logprob: -16.0008544921875
    9. '```' → logprob: -16.0008544921875
    10. '
' → logprob: -16.2508544921875

Token 252: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006142203696072102
    2. ']=' → logprob: -5.1311421394348145
    3. '=' → logprob: -8.506142616271973
    4. ' =' → logprob: -12.006142616271973
    5. ' ]' → logprob: -13.131142616271973
    6. '[' → logprob: -13.506142616271973
    7. ')' → logprob: -14.006142616271973
    8. '=True' → logprob: -14.256142616271973
    9. ']
' → logprob: -15.631142616271973
    10. '']=' → logprob: -17.131141662597656

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143605768680573
    2. '=' → logprob: -1.7014360427856445
    3. '=True' → logprob: -10.701436042785645
    4. '[' → logprob: -15.576436042785645
    5. ']=' → logprob: -17.32643699645996
    6. ']' → logprob: -17.32643699645996
    7. ' =
' → logprob: -17.57643699645996
    8. '=
' → logprob: -18.07643699645996
    9. ')' → logprob: -18.32643699645996
    10. ',' → logprob: -18.32643699645996

Token 254: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0002613358374219388
    2. ' True' → logprob: -8.250261306762695
    3. '=True' → logprob: -17.375261306762695
    4. '(True' → logprob: -18.375261306762695
    5. '.True' → logprob: -22.250261306762695
    6. 'true' → logprob: -22.625261306762695
    7. '1' → logprob: -22.875261306762695
    8. 'False' → logprob: -23.125261306762695
    9. '[' → logprob: -23.750261306762695
    10. '
' → logprob: -24.500261306762695

Token 255: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00012713817704934627
    2. 'queue' → logprob: -9.375126838684082
    3. '				' → logprob: -11.125126838684082
    4. ' queue' → logprob: -11.625126838684082
    5. '           ' → logprob: -12.125126838684082
    6. '               ' → logprob: -12.625126838684082
    7. '       ' → logprob: -12.750126838684082
    8. '   ' → logprob: -13.500126838684082
    9. '                       ' → logprob: -13.625126838684082
    10. '```' → logprob: -13.750126838684082

Token 256: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019675778225064278
    2. 'queue' → logprob: -4.0196757316589355
    3. ' queue' → logprob: -6.7696757316589355
    4. '				' → logprob: -8.394676208496094
    5. '```' → logprob: -9.894676208496094
    6. '                    
' → logprob: -10.269676208496094
    7. '(queue' → logprob: -10.894676208496094
    8. '           ' → logprob: -11.519676208496094
    9. '
' → logprob: -11.894676208496094
    10. ',' → logprob: -12.144676208496094

Token 257: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -4.320199877838604e-07
    2. ' queue' → logprob: -15.0
    3. '```' → logprob: -18.125
    4. '
' → logprob: -19.125
    5. '                   ' → logprob: -21.125
    6. '	queue' → logprob: -21.625
    7. '`' → logprob: -21.75
    8. '.queue' → logprob: -21.875
    9. 'deque' → logprob: -21.875
    10. '   ' → logprob: -22.25

Token 258: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.084206375409849e-05
    2. '.' → logprob: -10.625041007995605
    3. '.extend' → logprob: -11.750041007995605
    4. '.enqueue' → logprob: -11.875041007995605
    5. ').' → logprob: -14.500041007995605
    6. '.put' → logprob: -15.250041007995605
    7. '.app' → logprob: -15.375041007995605
    8. '.Append' → logprob: -15.625041007995605
    9. 'append' → logprob: -15.750041007995605
    10. ' .' → logprob: -16.00004005432129

Token 259: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00018625585653353482
    2. '(' → logprob: -8.6251859664917
    3. '(((' → logprob: -12.1251859664917
    4. '(nx' → logprob: -13.7501859664917
    5. '(n' → logprob: -16.500186920166016
    6. ' ((' → logprob: -16.625186920166016
    7. '(('' → logprob: -18.750186920166016
    8. '(
' → logprob: -18.750186920166016
    9. ')((' → logprob: -18.875186920166016
    10. '```' → logprob: -19.000186920166016

Token 260: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.12727811932563782
    2. '(nx' → logprob: -2.1272780895233154
    3. ' nx' → logprob: -8.127278327941895
    4. ' (' → logprob: -11.002278327941895
    5. '(n' → logprob: -11.252278327941895
    6. 'n' → logprob: -11.752278327941895
    7. ')' → logprob: -12.002278327941895
    8. '(
' → logprob: -12.752278327941895
    9. '   ' → logprob: -13.377278327941895
    10. 'ny' → logprob: -13.627278327941895

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.526570384972729e-05
    2. ',y' → logprob: -10.375055313110352
    3. ' ,' → logprob: -11.750055313110352
    4. ',
' → logprob: -12.000055313110352
    5. ',n' → logprob: -12.000055313110352
    6. ')' → logprob: -13.750055313110352
    7. '<|end|>' → logprob: -13.750055313110352
    8. '```' → logprob: -14.750055313110352
    9. ',)' → logprob: -15.375055313110352
    10. ',

' → logprob: -15.500055313110352

Token 262: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.1756367712223437e-05
    2. ' ny' → logprob: -11.500011444091797
    3. 'nyi' → logprob: -13.875011444091797
    4. 'n' → logprob: -16.250011444091797
    5. '
' → logprob: -16.750011444091797
    6. ')' → logprob: -16.875011444091797
    7. 'nym' → logprob: -16.875011444091797
    8. ''ny' → logprob: -17.000011444091797
    9. '```' → logprob: -17.125011444091797
    10. 'nyt' → logprob: -17.250011444091797

Token 263: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ')
' → logprob: -12.500005722045898
    3. '))' → logprob: -13.500005722045898
    4. ' )' → logprob: -16.7500057220459
    5. ')x' → logprob: -17.0000057220459
    6. '                   ' → logprob: -17.1250057220459
    7. ')n' → logprob: -17.1250057220459
    8. ')`' → logprob: -17.5000057220459
    9. '<|end|>' → logprob: -17.6250057220459
    10. ')return' → logprob: -18.1250057220459

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0646761953830719
    2. '
' → logprob: -2.814676284790039
    3. '        
' → logprob: -6.189676284790039
    4. '<|end|>' → logprob: -8.814676284790039
    5. '```' → logprob: -9.189676284790039
    6. '        ' → logprob: -9.814676284790039
    7. '
' → logprob: -9.814676284790039
    8. '           ' → logprob: -9.939676284790039
    9. '

' → logprob: -10.439676284790039
    10. '' → logprob: -10.564676284790039

Token 265: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010416212026029825
    2. '#' (adapté à ' #') → logprob: -7.001041412353516
    3. '
' → logprob: -9.876041412353516
    4. 'for' → logprob: -10.001041412353516
    5. ' for' → logprob: -11.376041412353516
    6. '   ' → logprob: -12.126041412353516
    7. ' #' → logprob: -12.251041412353516
    8. '```' → logprob: -12.251041412353516
    9. '        
' → logprob: -12.751041412353516
    10. '      ' → logprob: -13.876041412353516

Token 266: ' Mark' (ID: 5070)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14181388914585114
    2. 'queue' → logprob: -2.5168139934539795
    3. '       ' → logprob: -3.6418139934539795
    4. 'white' → logprob: -3.7668139934539795
    5. 'for' → logprob: -6.7668137550354
    6. '
' → logprob: -7.8918137550354
    7. ' #' → logprob: -8.141814231872559
    8. '   ' → logprob: -8.891814231872559
    9. '           ' → logprob: -10.141814231872559
    10. ' queue' → logprob: -10.391814231872559

Token 267: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.7969399094581604
    2. 'white' → logprob: -0.9219399094581604
    3. ' queue' → logprob: -2.2969398498535156
    4. 'queue' → logprob: -3.0469398498535156
    5. '(queue' → logprob: -6.796939849853516
    6. 'for' → logprob: -7.671939849853516
    7. '_white' → logprob: -8.296939849853516
    8. ' black' → logprob: -8.296939849853516
    9. 'black' → logprob: -8.546939849853516
    10. '       ' → logprob: -8.796939849853516

Token 268: ' adjacency' (ID: 177015)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.008751892484724522
    2. 'adj' → logprob: -4.75875186920166
    3. '_ad' → logprob: -9.50875186920166
    4. 'Adj' → logprob: -10.88375186920166
    5. '_' → logprob: -11.75875186920166
    6. 'for' → logprob: -11.75875186920166
    7. ' adjacency' → logprob: -11.75875186920166
    8. ' adj' → logprob: -12.88375186920166
    9. 'queue' → logprob: -12.88375186920166
    10. 's' → logprob: -13.00875186920166

Token 269: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10031341761350632
    2. 'queue' → logprob: -2.350313425064087
    3. ' queue' → logprob: -9.975313186645508
    4. '   ' → logprob: -10.475313186645508
    5. '
' → logprob: -10.600313186645508
    6. 'for' → logprob: -13.350313186645508
    7. '```' → logprob: -13.350313186645508
    8. '(queue' → logprob: -13.475313186645508
    9. '        
' → logprob: -14.100313186645508
    10. '	queue' → logprob: -14.225313186645508

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0188340675085783
    2. '
' → logprob: -4.018834114074707
    3. 'queue' → logprob: -7.518834114074707
    4. '   ' → logprob: -9.143834114074707
    5. '        
' → logprob: -11.018834114074707
    6. '```' → logprob: -11.643834114074707
    7. ' queue' → logprob: -13.018834114074707
    8. '      ' → logprob: -13.768834114074707
    9. '
' → logprob: -14.143834114074707
    10. '	queue' → logprob: -14.268834114074707

Token 271: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.002346157329156995
    2. '       ' → logprob: -6.127346038818359
    3. ' queue' → logprob: -9.12734603881836
    4. 'for' → logprob: -10.25234603881836
    5. '   ' → logprob: -11.12734603881836
    6. '
' → logprob: -13.62734603881836
    7. '	queue' → logprob: -15.00234603881836
    8. ' for' → logprob: -15.87734603881836
    9. '.queue' → logprob: -15.87734603881836
    10. 'white' → logprob: -15.87734603881836

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967797577381134
    2. '=' → logprob: -2.8119678497314453
    3. '.=' → logprob: -16.061967849731445
    4. '.clear' → logprob: -17.061967849731445
    5. '＝' → logprob: -18.186967849731445
    6. '.' → logprob: -18.561967849731445
    7. '.extend' → logprob: -20.186967849731445
    8. ' ' → logprob: -21.061967849731445
    9. ' =)' → logprob: -21.436967849731445
    10. '=b' → logprob: -21.686967849731445

Token 273: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0015024791937321424
    2. ' deque' → logprob: -6.501502513885498
    3. 'de' → logprob: -16.126502990722656
    4. 'Deque' → logprob: -19.001502990722656
    5. 'deck' → logprob: -19.376502990722656
    6. ' ' → logprob: -19.751502990722656
    7. 'collections' → logprob: -19.751502990722656
    8. '```' → logprob: -20.001502990722656
    9. '	de' → logprob: -20.126502990722656
    10. 'dq' → logprob: -20.626502990722656

Token 274: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07890267670154572
    2. '()
' → logprob: -2.5789027214050293
    3. '()
' → logprob: -11.953902244567871
    4. '()

' → logprob: -12.828902244567871
    5. '()\' → logprob: -13.453902244567871
    6. '(' → logprob: -13.953902244567871
    7. '([(' → logprob: -14.953902244567871
    8. '((' → logprob: -15.078902244567871
    9. '(
' → logprob: -15.453902244567871
    10. '       ' → logprob: -15.828902244567871

Token 275: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0625622421503067
    2. '       ' → logprob: -2.8125622272491455
    3. ' for' → logprob: -7.437562465667725
    4. '	for' → logprob: -12.687561988830566
    5. '   ' → logprob: -13.312561988830566
    6. '<|end|>' → logprob: -15.062561988830566
    7. 'For' → logprob: -16.062562942504883
    8. ')' → logprob: -16.187562942504883
    9. '	' → logprob: -16.562562942504883
    10. '#' → logprob: -16.562562942504883

Token 276: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.052018944174051285
    2. '       ' → logprob: -3.052018880844116
    3. ' for' → logprob: -5.677019119262695
    4. '	for' → logprob: -13.677019119262695
    5. '   ' → logprob: -14.677019119262695
    6. 'from' → logprob: -16.677019119262695
    7. '[' → logprob: -17.177019119262695
    8. '```' → logprob: -17.177019119262695
    9. '	' → logprob: -17.552019119262695
    10. 'For' → logprob: -17.677019119262695

Token 277: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2519383430480957
    2. 'y' → logprob: -1.5019383430480957
    3. '(y' → logprob: -12.251937866210938
    4. '	y' → logprob: -13.501937866210938
    5. '(' → logprob: -14.001937866210938
    6. 'x' → logprob: -14.001937866210938
    7. '_y' → logprob: -15.001937866210938
    8. ' x' → logprob: -15.376937866210938
    9. ')y' → logprob: -15.501937866210938
    10. ' (' → logprob: -15.626937866210938

Token 278: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014167741872370243
    2. 'in' → logprob: -4.264167785644531
    3. '   ' → logprob: -13.514167785644531
    4. 'range' → logprob: -14.139167785644531
    5. ' ' → logprob: -14.514167785644531
    6. '0' → logprob: -15.264167785644531
    7. ')' → logprob: -15.389167785644531
    8. '```' → logprob: -15.639167785644531
    9. ',' → logprob: -15.764167785644531
    10. '	in' → logprob: -16.13916778564453

Token 279: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031797364354133606
    2. ' range' → logprob: -5.753179550170898
    3. '(range' → logprob: -13.128179550170898
    4. 'rang' → logprob: -18.0031795501709
    5. 'ran' → logprob: -19.1281795501709
    6. '	range' → logprob: -19.3781795501709
    7. 'in' → logprob: -19.5031795501709
    8. '(' → logprob: -20.0031795501709
    9. 'ange' → logprob: -20.0031795501709
    10. '_range' → logprob: -20.2531795501709

Token 280: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0018345147836953402
    2. '(range' → logprob: -6.876834392547607
    3. 'range' → logprob: -7.251834392547607
    4. ' range' → logprob: -9.376834869384766
    5. '(' → logprob: -12.626834869384766
    6. ' (' → logprob: -13.126834869384766
    7. '(w' → logprob: -13.251834869384766
    8. 'h' → logprob: -15.376834869384766
    9. 'Range' → logprob: -15.876834869384766
    10. '(s' → logprob: -16.001834869384766

Token 281: '):
' (ID: 1883)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.35070088505744934
    2. ' in' → logprob: -1.725700855255127
    3. '):
' → logprob: -3.100700855255127
    4. '):' → logprob: -3.475700855255127
    5. '   ' → logprob: -4.350700855255127
    6. ')' → logprob: -4.850700855255127
    7. 'for' → logprob: -4.975700855255127
    8. ',' → logprob: -5.100700855255127
    9. '       ' → logprob: -5.600700855255127
    10. '           ' → logprob: -6.975700855255127

Token 282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6234194040298462
    2. '       ' → logprob: -1.1234194040298462
    3. ' for' → logprob: -2.9984192848205566
    4. '   ' → logprob: -2.9984192848205566
    5. 'for' → logprob: -3.2484192848205566
    6. '	for' → logprob: -10.373419761657715
    7. '	       ' → logprob: -10.623419761657715
    8. '<|end|>' → logprob: -10.623419761657715
    9. '```' → logprob: -10.873419761657715
    10. ' ' → logprob: -10.998419761657715

Token 283: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.053737834095954895
    2. ' for' → logprob: -3.0537378787994385
    3. '   ' → logprob: -5.303737640380859
    4. '       ' → logprob: -9.17873764038086
    5. '	for' → logprob: -9.80373764038086
    6. ' ' → logprob: -12.30373764038086
    7. '           ' → logprob: -13.92873764038086
    8. '  ' → logprob: -16.55373764038086
    9. '    ' → logprob: -17.30373764038086
    10. '        ' → logprob: -17.55373764038086

Token 284: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018150877207517624
    2. ' x' → logprob: -4.018150806427002
    3. ' range' → logprob: -14.51815128326416
    4. 'range' → logprob: -15.39315128326416
    5. ' in' → logprob: -15.64315128326416
    6. '(x' → logprob: -17.768150329589844
    7. ',x' → logprob: -17.893150329589844
    8. '<|end|>' → logprob: -17.893150329589844
    9. '```' → logprob: -17.893150329589844
    10. ' xrange' → logprob: -18.143150329589844

Token 285: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132637143135071
    2. 'in' → logprob: -1.3132636547088623
    3. '   ' → logprob: -14.563263893127441
    4. '        ' → logprob: -15.188263893127441
    5. '```' → logprob: -15.438263893127441
    6. '0' → logprob: -15.563263893127441
    7. '=' → logprob: -15.938263893127441
    8. '	in' → logprob: -16.063262939453125
    9. 'range' → logprob: -16.188262939453125
    10. ',' → logprob: -16.188262939453125

Token 286: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003178782993927598
    2. ' range' → logprob: -5.753178596496582
    3. '(range' → logprob: -13.753178596496582
    4. 'w' → logprob: -20.1281795501709
    5. '	range' → logprob: -20.8781795501709
    6. 'rang' → logprob: -21.8781795501709
    7. '_range' → logprob: -22.1281795501709
    8. 'Range' → logprob: -22.3781795501709
    9. '   ' → logprob: -23.0031795501709
    10. '.range' → logprob: -23.0031795501709

Token 287: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0001246348983841017
    2. 'range' → logprob: -9.25012493133545
    3. '(h' → logprob: -11.00012493133545
    4. ' range' → logprob: -11.87512493133545
    5. '(range' → logprob: -12.75012493133545
    6. ' (' → logprob: -13.75012493133545
    7. '(' → logprob: -15.50012493133545
    8. '<w' → logprob: -16.000123977661133
    9. 'Range' → logprob: -16.000123977661133
    10. 'w' → logprob: -16.125123977661133

Token 288: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3166865408420563
    2. '):' → logprob: -1.3166865110397339
    3. '           ' → logprob: -6.691686630249023
    4. ':' → logprob: -6.816686630249023
    5. 'if' → logprob: -7.691686630249023
    6. ')' → logprob: -8.691686630249023
    7. '       ' → logprob: -9.441686630249023
    8. '               ' → logprob: -9.691686630249023
    9. ':
' → logprob: -9.691686630249023
    10. '):
' → logprob: -9.691686630249023

Token 289: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16772021353244781
    2. 'if' → logprob: -1.9177201986312866
    3. ' if' → logprob: -5.292720317840576
    4. '           ' → logprob: -6.042720317840576
    5. '                   ' → logprob: -10.792719841003418
    6. ':
' → logprob: -10.792719841003418
    7. '   ' → logprob: -12.667719841003418
    8. '       ' → logprob: -12.792719841003418
    9. '```' → logprob: -12.792719841003418
    10. ':' → logprob: -12.917719841003418

Token 290: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04416359215974808
    2. '               ' → logprob: -3.544163703918457
    3. ' if' → logprob: -4.294163703918457
    4. '                   ' → logprob: -7.419163703918457
    5. '           ' → logprob: -10.169163703918457
    6. '   ' → logprob: -11.669163703918457
    7. '```' → logprob: -12.044163703918457
    8. '                ' → logprob: -13.044163703918457
    9. ' ' → logprob: -13.669163703918457
    10. 'If' → logprob: -13.919163703918457

Token 291: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.023266561329364777
    2. ' grid' → logprob: -3.773266553878784
    3. '(grid' → logprob: -10.898266792297363
    4. '	grid' → logprob: -13.898266792297363
    5. '.grid' → logprob: -13.898266792297363
    6. ':grid' → logprob: -15.148266792297363
    7. 'Grid' → logprob: -15.648266792297363
    8. '<|end|>' → logprob: -16.398265838623047
    9. '-grid' → logprob: -16.898265838623047
    10. '/grid' → logprob: -17.023265838623047

Token 292: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.2200749754119897e-06
    2. 'y' → logprob: -14.250001907348633
    3. '[x' → logprob: -14.875001907348633
    4. '[' → logprob: -15.125001907348633
    5. '```' → logprob: -15.625001907348633
    6. '[user' → logprob: -16.125001907348633
    7. '[h' → logprob: -16.250001907348633
    8. ' [' → logprob: -16.250001907348633
    9. '][' → logprob: -16.625001907348633
    10. '[s' → logprob: -16.750001907348633

Token 293: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0020886387210339308
    2. '[y' → logprob: -6.25208854675293
    3. '==' → logprob: -10.12708854675293
    4. ')[' → logprob: -10.12708854675293
    5. ']==' → logprob: -11.25208854675293
    6. '[' → logprob: -11.25208854675293
    7. ']' → logprob: -11.25208854675293
    8. '       ' → logprob: -11.62708854675293
    9. '           ' → logprob: -11.62708854675293
    10. 'y' → logprob: -12.12708854675293

Token 294: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0072593386285007
    2. '[y' → logprob: -5.132259368896484
    3. 'x' → logprob: -7.132259368896484
    4. '][' → logprob: -7.757259368896484
    5. ' y' → logprob: -9.382259368896484
    6. '[x' → logprob: -11.132259368896484
    7. ']' → logprob: -14.007259368896484
    8. ''y' → logprob: -14.382259368896484
    9. '
' → logprob: -14.757259368896484
    10. '	y' → logprob: -14.757259368896484

Token 295: ']=='' (ID: 71177)
  Prédit: ']==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.14372265338897705
    2. '=='' → logprob: -2.0187225341796875
    3. ']==' → logprob: -7.6437225341796875
    4. ']' → logprob: -8.143722534179688
    5. '']=='' → logprob: -8.643722534179688
    6. ')=='' → logprob: -9.393722534179688
    7. ' =='' → logprob: -12.143722534179688
    8. ']=="' → logprob: -12.268722534179688
    9. '==' → logprob: -12.893722534179688
    10. ' ==' → logprob: -13.518722534179688

Token 296: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -7.660315895918757e-05
    2. ''' → logprob: -9.750076293945312
    3. 'A' → logprob: -12.000076293945312
    4. '```' → logprob: -13.125076293945312
    5. ' W' → logprob: -13.375076293945312
    6. 'C' → logprob: -13.750076293945312
    7. 'G' → logprob: -14.000076293945312
    8. '

' → logprob: -14.250076293945312
    9. 'B' → logprob: -14.375076293945312
    10. 'L' → logprob: -14.500076293945312

Token 297: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.1972827911376953
    2. ':' → logprob: -2.9472827911376953
    3. '']:' → logprob: -3.5722827911376953
    4. '']:
' → logprob: -3.6972827911376953
    5. '':
' → logprob: -4.072282791137695
    6. ']:' → logprob: -4.197282791137695
    7. '']' → logprob: -4.572282791137695
    8. ''):' → logprob: -4.697282791137695
    9. ''):
' → logprob: -4.822282791137695
    10. ''' → logprob: -4.947282791137695

Token 298: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0042267972603440285
    2. ' white' → logprob: -6.6292266845703125
    3. ':' → logprob: -6.7542266845703125
    4. 'white' → logprob: -7.3792266845703125
    5. ':
' → logprob: -7.7542266845703125
    6. '               ' → logprob: -7.7542266845703125
    7. '                       ' → logprob: -9.379226684570312
    8. '           ' → logprob: -9.879226684570312
    9. ':white' → logprob: -10.379226684570312
    10. '                  ' → logprob: -10.379226684570312

Token 299: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.31327301263809204
    2. 'white' (adapté à ' white') → logprob: -1.3132729530334473
    3. '                   ' → logprob: -12.313273429870605
    4. ' black' → logprob: -12.813273429870605
    5. 'black' → logprob: -13.313273429870605
    6. '白' → logprob: -13.813273429870605
    7. '                       ' → logprob: -14.563273429870605
    8. '.white' → logprob: -15.313273429870605
    9. '                    ' → logprob: -16.06327247619629
    10. '
' → logprob: -16.18827247619629

Token 300: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -1.2233183042553719e-05
    2. '_ad' → logprob: -12.000012397766113
    3. 'adj' → logprob: -12.125012397766113
    4. '_adv' → logprob: -15.375012397766113
    5. '_' → logprob: -16.000011444091797
    6. '_queue' → logprob: -16.375011444091797
    7. 'queue' → logprob: -16.875011444091797
    8. 'Adj' → logprob: -17.750011444091797
    9. '   ' → logprob: -17.875011444091797
    10. '[_' → logprob: -18.000011444091797

Token 301: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.750003814697266
    3. '[Y' → logprob: -15.875003814697266
    4. ' [' → logprob: -16.250003814697266
    5. 'y' → logprob: -17.500003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '[user' → logprob: -18.125003814697266
    8. '][' → logprob: -18.125003814697266
    9. '(y' → logprob: -18.500003814697266
    10. '[h' → logprob: -18.750003814697266

Token 302: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.576105535030365
    2. '][' → logprob: -0.826105535030365
    3. '[x' → logprob: -8.951105117797852
    4. '[' → logprob: -10.951105117797852
    5. ']' → logprob: -12.201105117797852
    6. ' ][' → logprob: -13.076105117797852
    7. '       ' → logprob: -13.326105117797852
    8. '=y' → logprob: -13.576105117797852
    9. '           ' → logprob: -13.701105117797852
    10. ' [' → logprob: -13.951105117797852

Token 303: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.774276774493046e-05
    2. ' x' → logprob: -10.750038146972656
    3. 'y' → logprob: -11.250038146972656
    4. '[x' → logprob: -13.125038146972656
    5. '(x' → logprob: -14.625038146972656
    6. '```' → logprob: -15.500038146972656
    7. '][' → logprob: -15.875038146972656
    8. ']' → logprob: -16.250038146972656
    9. '[' → logprob: -16.500038146972656
    10. '
' → logprob: -16.625038146972656

Token 304: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.754923939704895
    2. ']' → logprob: -0.754923939704895
    3. ' =' → logprob: -2.8799238204956055
    4. ']=' → logprob: -5.6299238204956055
    5. '=True' → logprob: -9.254923820495605
    6. ' ]' → logprob: -9.504923820495605
    7. ')' → logprob: -12.129923820495605
    8. '   ' → logprob: -13.254923820495605
    9. ' ' → logprob: -14.254923820495605
    10. '    ' → logprob: -15.379923820495605

Token 305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0620700865983963
    2. ' =' → logprob: -2.81207013130188
    3. '=True' → logprob: -9.1870698928833
    4. '=
' → logprob: -17.812070846557617
    5. ')' → logprob: -17.937070846557617
    6. '=False' → logprob: -18.187070846557617
    7. ']' → logprob: -18.312070846557617
    8. 'True' → logprob: -18.312070846557617
    9. '[' → logprob: -18.312070846557617
    10. ']=' → logprob: -18.562070846557617

Token 306: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00026169343618676066
    2. ' True' → logprob: -8.250261306762695
    3. '=True' → logprob: -15.375261306762695
    4. '(True' → logprob: -16.625261306762695
    5. '.True' → logprob: -20.000261306762695
    6. 'False' → logprob: -20.875261306762695
    7. '   ' → logprob: -22.750261306762695
    8. '1' → logprob: -23.125261306762695
    9. '[' → logprob: -23.250261306762695
    10. ' ' → logprob: -23.500261306762695

Token 307: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0026011031586676836
    2. 'queue' → logprob: -6.252601146697998
    3. '
' → logprob: -8.12760066986084
    4. '                    
' → logprob: -9.00260066986084
    5. '```' → logprob: -9.50260066986084
    6. '           ' → logprob: -9.87760066986084
    7. '               ' → logprob: -10.75260066986084
    8. '				' → logprob: -11.00260066986084
    9. '(queue' → logprob: -11.00260066986084
    10. '		           ' → logprob: -11.00260066986084

Token 308: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.7292167184641585e-05
    2. '               ' → logprob: -11.000057220458984
    3. '           ' → logprob: -11.250057220458984
    4. 'queue' → logprob: -11.500057220458984
    5. '                    
' → logprob: -12.375057220458984
    6. '                  ' → logprob: -12.875057220458984
    7. '```' → logprob: -13.000057220458984
    8. '                       ' → logprob: -13.375057220458984
    9. '                    ' → logprob: -13.500057220458984
    10. '       ' → logprob: -13.875057220458984

Token 309: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.0007100477814674377
    2. ' queue' → logprob: -7.2507100105285645
    3. '(queue' → logprob: -17.250709533691406
    4. '	queue' → logprob: -17.625709533691406
    5. 'deque' → logprob: -17.625709533691406
    6. '.queue' → logprob: -19.500709533691406
    7. '                   ' → logprob: -19.750709533691406
    8. 'que' → logprob: -19.875709533691406
    9. '```' → logprob: -20.500709533691406
    10. '_queue' → logprob: -21.000709533691406

Token 310: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.822646693966817e-06
    2. '.' → logprob: -11.875007629394531
    3. 'append' → logprob: -14.750007629394531
    4. '.extend' → logprob: -15.000007629394531
    5. '.enqueue' → logprob: -16.87500762939453
    6. ' .' → logprob: -17.12500762939453
    7. '.app' → logprob: -17.25000762939453
    8. '().' → logprob: -17.37500762939453
    9. ').' → logprob: -17.87500762939453
    10. '           ' → logprob: -18.12500762939453

Token 311: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: 0.0
    2. '(' → logprob: -16.875
    3. ' ((' → logprob: -18.5
    4. '(x' → logprob: -18.625
    5. '[(' → logprob: -22.0
    6. '(((' → logprob: -22.5
    7. '(
' → logprob: -23.0
    8. '(("' → logprob: -23.625
    9. '(('' → logprob: -23.625
    10. ')((' → logprob: -23.875

Token 312: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.012514480389654636
    2. 'x' → logprob: -4.387514591217041
    3. ' (' → logprob: -13.137514114379883
    4. ')' → logprob: -14.012514114379883
    5. '(' → logprob: -14.262514114379883
    6. ')x' → logprob: -14.512514114379883
    7. ' x' → logprob: -15.012514114379883
    8. '{x' → logprob: -15.512514114379883
    9. '[x' → logprob: -15.762514114379883
    10. '"x' → logprob: -16.762514114379883

Token 313: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -9.758300438988954e-05
    2. ',' → logprob: -9.250097274780273
    3. ' ,' → logprob: -13.625097274780273
    4. 'y' → logprob: -16.625097274780273
    5. '```' → logprob: -17.250097274780273
    6. '   ' → logprob: -18.000097274780273
    7. '       ' → logprob: -18.625097274780273
    8. ',
' → logprob: -18.875097274780273
    9. '[y' → logprob: -19.000097274780273
    10. '	' → logprob: -19.000097274780273

Token 314: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000682530109770596
    2. '))' → logprob: -7.875682353973389
    3. ')
' → logprob: -8.125682830810547
    4. '       ' → logprob: -12.875682830810547
    5. ')
' → logprob: -14.000682830810547
    6. '   ' → logprob: -14.250682830810547
    7. ' )' → logprob: -14.250682830810547
    8. ')y' → logprob: -15.000682830810547
    9. '))
' → logprob: -15.125682830810547
    10. ')`' → logprob: -15.250682830810547

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009357591043226421
    2. '   ' → logprob: -7.8759355545043945
    3. 'while' → logprob: -7.8759355545043945
    4. ' while' → logprob: -8.750935554504395
    5. '```' → logprob: -12.125935554504395
    6. '	while' → logprob: -12.250935554504395
    7. '           ' → logprob: -12.375935554504395
    8. '                   ' → logprob: -13.625935554504395
    9. '               ' → logprob: -13.750935554504395
    10. 'While' → logprob: -15.000935554504395

Token 316: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.39442843198776245
    2. '       ' → logprob: -1.1444284915924072
    3. ' while' → logprob: -4.894428253173828
    4. '   ' → logprob: -10.769428253173828
    5. '	while' → logprob: -11.144428253173828
    6. '```' → logprob: -12.894428253173828
    7. '
' → logprob: -13.144428253173828
    8. 'While' → logprob: -14.269428253173828
    9. '           ' → logprob: -16.644428253173828
    10. '               ' → logprob: -17.019428253173828

Token 317: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.0019298245897516608
    2. 'queue' → logprob: -6.251929759979248
    3. '(queue' → logprob: -13.626930236816406
    4. '	queue' → logprob: -17.876930236816406
    5. '.queue' → logprob: -19.751930236816406
    6. 'que' → logprob: -20.876930236816406
    7. 'len' → logprob: -21.251930236816406
    8. '_queue' → logprob: -21.876930236816406
    9. 'Queue' → logprob: -22.251930236816406
    10. ' len' → logprob: -22.626930236816406

Token 318: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03381282463669777
    2. ':
' → logprob: -3.4088127613067627
    3. '       ' → logprob: -9.908812522888184
    4. 'p' → logprob: -11.033812522888184
    5. ':p' → logprob: -11.033812522888184
    6. '.p' → logprob: -11.283812522888184
    7. ' not' → logprob: -11.283812522888184
    8. 'not' → logprob: -11.658812522888184
    9. '   ' → logprob: -11.908812522888184
    10. '):' → logprob: -12.283812522888184

Token 319: '           ' (ID: 352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6450323462486267
    2. '           ' → logprob: -1.5200324058532715
    3. '	       ' → logprob: -2.2700324058532715
    4. '       ' → logprob: -2.3950324058532715
    5. ' x' → logprob: -3.2700324058532715
    6. '	   ' → logprob: -4.6450324058532715
    7. '   ' → logprob: -5.5200324058532715
    8. '	x' → logprob: -6.2700324058532715
    9. '(x' → logprob: -6.3950324058532715
    10. '        ' → logprob: -6.7700324058532715

Token 320: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2014162540435791
    2. 'x' (adapté à ' x') → logprob: -1.701416254043579
    3. '	x' → logprob: -13.326416015625
    4. '   ' → logprob: -13.576416015625
    5. '(x' → logprob: -17.826416015625
    6. '       ' → logprob: -18.826416015625
    7. ')x' → logprob: -18.951416015625
    8. ' ' → logprob: -18.951416015625
    9. '    ' → logprob: -19.076416015625
    10. '```' → logprob: -19.076416015625

Token 321: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0017043406842276454
    2. ',' → logprob: -6.376704216003418
    3. ' ,' → logprob: -13.126704216003418
    4. ',p' → logprob: -16.501705169677734
    5. ',q' → logprob: -17.626705169677734
    6. ',w' → logprob: -18.126705169677734
    7. 'y' → logprob: -18.876705169677734
    8. ',
' → logprob: -19.126705169677734
    9. ',x' → logprob: -19.251705169677734
    10. '_,' → logprob: -19.501705169677734

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014133334159851
    2. '=' → logprob: -1.7014133930206299
    3. '   ' → logprob: -17.326414108276367
    4. ' ' → logprob: -17.576414108276367
    5. '=query' → logprob: -17.576414108276367
    6. ',' → logprob: -18.826414108276367
    7. ')' → logprob: -18.826414108276367
    8. '=q' → logprob: -19.326414108276367
    9. ' =
' → logprob: -19.576414108276367
    10. '=
' → logprob: -19.576414108276367

Token 323: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.048588622361421585
    2. ' queue' → logprob: -3.048588514328003
    3. '(queue' → logprob: -14.173588752746582
    4. '	queue' → logprob: -15.048588752746582
    5. 'deque' → logprob: -15.673588752746582
    6. '.queue' → logprob: -16.048587799072266
    7. 'que' → logprob: -17.298587799072266
    8. '_queue' → logprob: -18.048587799072266
    9. 'p' → logprob: -19.048587799072266
    10. '<|end|>' → logprob: -19.798587799072266

Token 324: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.704273118884885e-07
    2. 'p' → logprob: -15.500000953674316
    3. ' .' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.375
    5. 'opleft' → logprob: -16.75
    6. '.' → logprob: -17.5
    7. '       ' → logprob: -18.375
    8. '.pop' → logprob: -18.75
    9. '```' → logprob: -18.875
    10. '().' → logprob: -19.625

Token 325: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -2.3080716346157715e-05
    2. 'op' → logprob: -11.000022888183594
    3. 'opl' → logprob: -12.750022888183594
    4. 'ople' → logprob: -13.000022888183594
    5. 'left' → logprob: -13.750022888183594
    6. 'opt' → logprob: -17.250022888183594
    7. 'opped' → logprob: -17.375022888183594
    8. 'opf' → logprob: -17.750022888183594
    9. 'append' → logprob: -17.875022888183594
    10. 'oplevel' → logprob: -18.375022888183594

Token 326: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04097951203584671
    2. '<|end|>' → logprob: -3.7909796237945557
    3. '       ' → logprob: -4.915979385375977
    4. '               ' → logprob: -5.540979385375977
    5. '   ' → logprob: -6.165979385375977
    6. 'for' → logprob: -6.290979385375977
    7. '<|end|>' → logprob: -7.290979385375977
    8. ' for' → logprob: -7.790979385375977
    9. '
' → logprob: -8.290979385375977
    10. ')' → logprob: -8.415979385375977

Token 327: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5650048851966858
    2. '           ' → logprob: -1.440004825592041
    3. '       ' → logprob: -2.315004825592041
    4. ' for' → logprob: -2.565004825592041
    5. '               ' → logprob: -4.690004825592041
    6. 'for' → logprob: -4.940004825592041
    7. '	for' → logprob: -6.815004825592041
    8. '```' → logprob: -7.440004825592041
    9. '<|end|>' → logprob: -7.940004825592041
    10. ' ' → logprob: -8.3150053024292

Token 328: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38704630732536316
    2. 'for' (adapté à ' for') → logprob: -1.1370463371276855
    3. '           ' → logprob: -9.637045860290527
    4. '   ' → logprob: -9.762045860290527
    5. '	for' → logprob: -10.012045860290527
    6. '       ' → logprob: -12.012045860290527
    7. '<|end|>' → logprob: -14.262045860290527
    8. 'forall' → logprob: -15.387045860290527
    9. ' ' → logprob: -16.012046813964844
    10. '```' → logprob: -16.137046813964844

Token 329: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.012544850818812847
    2. 'dx' → logprob: -4.387544631958008
    3. '(dx' → logprob: -10.512544631958008
    4. ' DX' → logprob: -12.262544631958008
    5. '_dx' → logprob: -13.012544631958008
    6. ' Dx' → logprob: -15.137544631958008
    7. 'DX' → logprob: -15.512544631958008
    8. '.dx' → logprob: -15.637544631958008
    9. 'Dx' → logprob: -15.762544631958008
    10. ' ' → logprob: -16.262544631958008

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -12.750003814697266
    3. ',d' → logprob: -14.375003814697266
    4. 'dy' → logprob: -16.875003814697266
    5. ',y' → logprob: -17.250003814697266
    6. ',
' → logprob: -17.250003814697266
    7. '<|end|>' → logprob: -18.500003814697266
    8. '           ' → logprob: -18.750003814697266
    9. ',int' → logprob: -19.500003814697266
    10. ',n' → logprob: -19.750003814697266

Token 331: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0007105246186256409
    2. ' dy' → logprob: -7.250710487365723
    3. ',' → logprob: -15.125710487365723
    4. 'd' → logprob: -16.00071144104004
    5. '0' → logprob: -16.62571144104004
    6. '.dy' → logprob: -17.37571144104004
    7. 'dx' → logprob: -17.50071144104004
    8. 'Dy' → logprob: -18.12571144104004
    9. ' ' → logprob: -18.75071144104004
    10. 'dym' → logprob: -19.62571144104004

Token 332: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006872848607599735
    2. 'in' → logprob: -5.006872653961182
    3. ' =' → logprob: -9.50687313079834
    4. ' ' → logprob: -9.75687313079834
    5. ',' → logprob: -11.38187313079834
    6. '=' → logprob: -11.75687313079834
    7. '<|end|>' → logprob: -13.50687313079834
    8. ' ,' → logprob: -13.75687313079834
    9. '   ' → logprob: -14.13187313079834
    10. '    ' → logprob: -14.75687313079834

Token 333: ' DIR' (ID: 83023)
  Prédit: 'DIR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIR' → logprob: -0.6931478977203369
    2. ' DIR' → logprob: -0.6931478977203369
    3. ' ' → logprob: -14.318147659301758
    4. '   ' → logprob: -17.693147659301758
    5. '_DIR' → logprob: -17.818147659301758
    6. ' DIRE' → logprob: -18.443147659301758
    7. 'D' → logprob: -18.568147659301758
    8. 'DR' → logprob: -19.193147659301758
    9. '    ' → logprob: -19.318147659301758
    10. 'Dir' → logprob: -19.568147659301758

Token 334: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0325924449716695e-05
    2. 'DIR' → logprob: -11.62501049041748
    3. 's' → logprob: -14.12501049041748
    4. 'RS' → logprob: -16.250009536743164
    5. '[' → logprob: -16.375009536743164
    6. 'IRS' → logprob: -16.375009536743164
    7. 'ORS' → logprob: -16.625009536743164
    8. 'DS' → logprob: -16.750009536743164
    9. '(S' → logprob: -17.125009536743164
    10. '```' → logprob: -17.250009536743164

Token 335: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19879989326000214
    2. '               ' → logprob: -2.1987998485565186
    3. '           ' → logprob: -3.5737998485565186
    4. ':' → logprob: -3.8237998485565186
    5. ',' → logprob: -4.823800086975098
    6. '(nx' → logprob: -5.573800086975098
    7. 'in' → logprob: -6.448800086975098
    8. '       ' → logprob: -6.948800086975098
    9. '   ' → logprob: -7.073800086975098
    10. ' (' → logprob: -7.198800086975098

Token 336: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003380846756044775
    2. '<|end|>' → logprob: -9.125338554382324
    3. '           ' → logprob: -9.375338554382324
    4. ' ' → logprob: -10.500338554382324
    5. '                ' → logprob: -10.875338554382324
    6. '            ' → logprob: -11.000338554382324
    7. '              ' → logprob: -11.250338554382324
    8. ',' → logprob: -11.250338554382324
    9. '	           ' → logprob: -11.875338554382324
    10. '   ' → logprob: -12.250338554382324

Token 337: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.04062416031956673
    2. '               ' → logprob: -3.4156241416931152
    3. '(nx' → logprob: -5.915624141693115
    4. 'nx' (adapté à ' nx') → logprob: -6.165624141693115
    5. '                ' → logprob: -6.915624141693115
    6. ' 
' → logprob: -7.290624141693115
    7. ' ' → logprob: -8.165624618530273
    8. ' ' → logprob: -9.540624618530273
    9. ' Nx' → logprob: -10.290624618530273
    10. '                   ' → logprob: -10.790624618530273

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004498954396694899
    2. ',n' → logprob: -5.8794989585876465
    3. ',y' → logprob: -6.5044989585876465
    4. ',x' → logprob: -8.754498481750488
    5. ' ,' → logprob: -11.504498481750488
    6. '<|end|>' → logprob: -11.629498481750488
    7. '=' → logprob: -11.879498481750488
    8. ',s' → logprob: -12.879498481750488
    9. ',w' → logprob: -13.504498481750488
    10. ',
' → logprob: -13.504498481750488

Token 339: 'ny' (ID: 3008)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00013655527436640114
    2. ' x' → logprob: -9.000136375427246
    3. 'y' → logprob: -11.250136375427246
    4. ' y' → logprob: -17.000137329101562
    5. '(x' → logprob: -17.375137329101562
    6. '+' → logprob: -18.250137329101562
    7. 'nx' → logprob: -18.625137329101562
    8. '+x' → logprob: -18.750137329101562
    9. ' ' → logprob: -19.000137329101562
    10. ',x' → logprob: -19.125137329101562

Token 340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759481191635132
    2. '=' → logprob: -0.8259481191635132
    3. ',' → logprob: -12.200947761535645
    4. '=x' → logprob: -12.700947761535645
    5. '=
' → logprob: -14.825947761535645
    6. ' =
' → logprob: -16.70094871520996
    7. '```' → logprob: -16.95094871520996
    8. 'x' → logprob: -17.20094871520996
    9. '=

' → logprob: -17.70094871520996
    10. '   ' → logprob: -18.07594871520996

Token 341: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3132619559764862
    2. 'x' → logprob: -1.3132619857788086
    3. '(x' → logprob: -16.063261032104492
    4. ' ' → logprob: -16.688261032104492
    5. '	x' → logprob: -18.063261032104492
    6. ')x' → logprob: -18.688261032104492
    7. '<|end|>' → logprob: -19.063261032104492
    8. '               ' → logprob: -19.563261032104492
    9. '   ' → logprob: -20.063261032104492
    10. '>x' → logprob: -20.188261032104492

Token 342: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.747814349073451e-05
    2. ' +' → logprob: -11.250017166137695
    3. '+x' → logprob: -12.625017166137695
    4. '+
' → logprob: -14.625017166137695
    5. '+d' → logprob: -15.375017166137695
    6. ',' → logprob: -15.875017166137695
    7. '+y' → logprob: -16.125017166137695
    8. 'dx' → logprob: -16.500017166137695
    9. '+,' → logprob: -16.625017166137695
    10. '[' → logprob: -16.750017166137695

Token 343: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.013594144023954868
    2. 'x' → logprob: -4.388594150543213
    3. ' dx' → logprob: -6.888594150543213
    4. '(dx' → logprob: -10.013593673706055
    5. '+' → logprob: -12.138593673706055
    6. 'xd' → logprob: -12.888593673706055
    7. ' x' → logprob: -13.138593673706055
    8. '_dx' → logprob: -13.263593673706055
    9. 'nx' → logprob: -13.513593673706055
    10. '(x' → logprob: -13.638593673706055

Token 344: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.00010008628305513412
    2. ',' → logprob: -9.250100135803223
    3. ' ,' → logprob: -12.500100135803223
    4. ',
' → logprob: -16.125099182128906
    5. ',w' → logprob: -16.750099182128906
    6. ',n' → logprob: -17.500099182128906
    7. ',\
' → logprob: -20.125099182128906
    8. ',int' → logprob: -21.125099182128906
    9. ',you' → logprob: -21.250099182128906
    10. ';y' → logprob: -21.375099182128906

Token 345: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05063461884856224
    2. '+' → logprob: -3.0506346225738525
    3. ',n' → logprob: -6.925634384155273
    4. '-' → logprob: -7.300634384155273
    5. ',d' → logprob: -9.050634384155273
    6. ',-' → logprob: -9.050634384155273
    7. '-d' → logprob: -10.175634384155273
    8. '<|end|>' → logprob: -10.175634384155273
    9. '```' → logprob: -11.675634384155273
    10. ',y' → logprob: -12.050634384155273

Token 346: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.03806673735380173
    2. 'dx' → logprob: -3.2880666255950928
    3. ' dy' → logprob: -10.913066864013672
    4. '1' → logprob: -12.413066864013672
    5. 'y' → logprob: -13.788066864013672
    6. ' dx' → logprob: -14.663066864013672
    7. '(dx' → logprob: -15.038066864013672
    8. 'int' → logprob: -15.663066864013672
    9. 'ny' → logprob: -15.788066864013672
    10. 'dp' → logprob: -16.038066864013672

Token 347: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008217801805585623
    2. ',n' → logprob: -8.000822067260742
    3. ',
' → logprob: -8.250822067260742
    4. ',x' → logprob: -8.750822067260742
    5. ',y' → logprob: -10.125822067260742
    6. ',w' → logprob: -12.000822067260742
    7. ' ,' → logprob: -12.125822067260742
    8. '<|end|>' → logprob: -12.875822067260742
    9. ',size' → logprob: -13.125822067260742
    10. ',\
' → logprob: -13.375822067260742

Token 348: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015131603926420212
    2. ',' → logprob: -4.39013147354126
    3. '<|end|>' → logprob: -6.89013147354126
    4. ' if' → logprob: -7.89013147354126
    5. '           ' → logprob: -8.390131950378418
    6. 'if' → logprob: -8.515131950378418
    7. '              ' → logprob: -8.640131950378418
    8. ',
' → logprob: -8.640131950378418
    9. '                ' → logprob: -9.015131950378418
    10. '                   ' → logprob: -9.515131950378418

Token 349: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31866970658302307
    2. ' if' → logprob: -1.3186696767807007
    3. '<|end|>' → logprob: -5.56866979598999
    4. '               ' → logprob: -7.19366979598999
    5. 'x' → logprob: -7.94366979598999
    6. '```' → logprob: -8.818669319152832
    7. '
' → logprob: -9.318669319152832
    8. ',' → logprob: -9.943669319152832
    9. ' ' → logprob: -10.568669319152832
    10. '                ' → logprob: -10.693669319152832

Token 350: ' inside' (ID: 6772)
  Prédit: ' inside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inside' → logprob: -0.023247340694069862
    2. 'inside' → logprob: -3.773247241973877
    3. ' ' → logprob: -14.648247718811035
    4. '_inside' → logprob: -14.898247718811035
    5. ' ' → logprob: -15.023247718811035
    6. 'Inside' → logprob: -15.148247718811035
    7. '(' → logprob: -15.273247718811035
    8. '0' → logprob: -16.52324676513672
    9. 'x' → logprob: -18.27324676513672
    10. 'ins' → logprob: -18.46074676513672

Token 351: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.625006675720215
    3. ' (' → logprob: -12.875006675720215
    4. '(n' → logprob: -14.250006675720215
    5. '(
' → logprob: -18.0000057220459
    6. '(nn' → logprob: -18.7500057220459
    7. 'nx' → logprob: -20.2500057220459
    8. '((' → logprob: -20.7500057220459
    9. '(nt' → logprob: -20.7500057220459
    10. '(cx' → logprob: -21.1250057220459

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0484450437361374e-05
    2. ' ,' → logprob: -11.125040054321289
    3. '(nx' → logprob: -11.125040054321289
    4. ',n' → logprob: -11.625040054321289
    5. 'nx' → logprob: -14.125040054321289
    6. '(' → logprob: -15.375040054321289
    7. '(n' → logprob: -15.500040054321289
    8. ',
' → logprob: -15.875040054321289
    9. 'ny' → logprob: -16.12504005432129
    10. '[' → logprob: -16.37504005432129

Token 353: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.0683535037969705e-05
    2. ' ny' → logprob: -12.62501049041748
    3. 'nyi' → logprob: -12.75001049041748
    4. 'nx' → logprob: -13.50001049041748
    5. 'n' → logprob: -13.87501049041748
    6. 'ni' → logprob: -14.25001049041748
    7. 'nym' → logprob: -14.62501049041748
    8. ',' → logprob: -15.75001049041748
    9. 'ney' → logprob: -16.250011444091797
    10. 'nych' → logprob: -16.375011444091797

Token 354: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -4.11996734328568e-05
    2. 'w' → logprob: -10.250041007995605
    3. ' ,' → logprob: -12.375041007995605
    4. ',' → logprob: -14.250041007995605
    5. ',n' → logprob: -15.500041007995605
    6. '```' → logprob: -15.625041007995605
    7. '<w' → logprob: -16.125041961669922
    8. ',width' → logprob: -16.500041961669922
    9. ',h' → logprob: -16.500041961669922
    10. ',y' → logprob: -16.750041961669922

Token 355: ',h' (ID: 42751)
  Prédit: ',h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',h' → logprob: -3.500108141452074e-05
    2. ',' → logprob: -10.750035285949707
    3. ' ,' → logprob: -11.875035285949707
    4. 'h' → logprob: -12.125035285949707
    5. ',y' → logprob: -14.125035285949707
    6. '<h' → logprob: -16.25003433227539
    7. ',
' → logprob: -16.37503433227539
    8. '```' → logprob: -16.37503433227539
    9. ',height' → logprob: -16.87503433227539
    10. ' h' → logprob: -17.12503433227539

Token 356: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024022165685892105
    2. ' and' → logprob: -3.899022102355957
    3. 'and' → logprob: -5.774022102355957
    4. ' )' → logprob: -8.399022102355957
    5. ',' → logprob: -9.274022102355957
    6. ',w' → logprob: -11.024022102355957
    7. 'w' → logprob: -11.649022102355957
    8. '               ' → logprob: -11.899022102355957
    9. ' ' → logprob: -13.149022102355957
    10. '   ' → logprob: -13.649022102355957

Token 357: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002807725453749299
    2. 'and' → logprob: -5.8778076171875
    3. '               ' → logprob: -13.6278076171875
    4. '                ' → logprob: -14.0028076171875
    5. '              ' → logprob: -15.3778076171875
    6. '            ' → logprob: -15.7528076171875
    7. ' ' → logprob: -16.0028076171875
    8. ',' → logprob: -16.1278076171875
    9. ')' → logprob: -16.7528076171875
    10. '           ' → logprob: -17.0028076171875

Token 358: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.575940728187561
    2. 'not' → logprob: -0.825940728187561
    3. '(not' → logprob: -15.07594108581543
    4. '```' → logprob: -15.20094108581543
    5. '   ' → logprob: -15.45094108581543
    6. '               ' → logprob: -15.70094108581543
    7. '	not' → logprob: -15.95094108581543
    8. '
' → logprob: -16.57594108581543
    9. '           ' → logprob: -16.57594108581543
    10. ' ' → logprob: -17.07594108581543

Token 359: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.11282901465892792
    2. ' white' → logprob: -2.2378289699554443
    3. '.white' → logprob: -12.862829208374023
    4. '白' → logprob: -13.112829208374023
    5. '_white' → logprob: -13.737829208374023
    6. ':white' → logprob: -15.737829208374023
    7. '   ' → logprob: -16.112829208374023
    8. '```' → logprob: -16.237829208374023
    9. '...' → logprob: -16.362829208374023
    10. ' ' → logprob: -16.362829208374023

Token 360: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -2.248469718324486e-05
    2. 'adj' → logprob: -11.000022888183594
    3. '_ad' → logprob: -12.250022888183594
    4. '```' → logprob: -15.000022888183594
    5. '[_' → logprob: -15.750022888183594
    6. '\' → logprob: -16.125022888183594
    7. '_adv' → logprob: -16.125022888183594
    8. ''_' → logprob: -16.500022888183594
    9. '_' → logprob: -16.750022888183594
    10. ' _' → logprob: -17.625022888183594

Token 361: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. '   ' → logprob: -18.75
    4. ' [' → logprob: -18.875
    5. '][' → logprob: -19.125
    6. '​' → logprob: -19.5
    7. 'ny' → logprob: -19.875
    8. ')[' → logprob: -20.25
    9. '[y' → logprob: -20.5
    10. '\[' → logprob: -20.5

Token 362: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.17995832860469818
    2. '[' → logprob: -1.8049583435058594
    3. ' ny' → logprob: -8.55495834350586
    4. 'ni' → logprob: -12.05495834350586
    5. '   ' → logprob: -12.67995834350586
    6. 'n' → logprob: -13.42995834350586
    7. '{' → logprob: -13.80495834350586
    8. '][' → logprob: -13.80495834350586
    9. 'nyi' → logprob: -13.92995834350586
    10. '(' → logprob: -14.05495834350586

Token 363: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04475684463977814
    2. '[n' → logprob: -3.4197568893432617
    3. '[' → logprob: -4.544756889343262
    4. ')[' → logprob: -9.669756889343262
    5. '   ' → logprob: -9.919756889343262
    6. '       ' → logprob: -9.919756889343262
    7. ' ][' → logprob: -9.919756889343262
    8. '```' → logprob: -10.044756889343262
    9. ']' → logprob: -10.544756889343262
    10. '	' → logprob: -10.794756889343262

Token 364: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -8.876193169271573e-05
    2. '(nx' → logprob: -9.750088691711426
    3. ' nx' → logprob: -10.625088691711426
    4. 'x' → logprob: -12.875088691711426
    5. '[n' → logprob: -13.625088691711426
    6. '[' → logprob: -14.250088691711426
    7. 'xn' → logprob: -14.375088691711426
    8. '1' → logprob: -15.250088691711426
    9. 'n' → logprob: -15.500088691711426
    10. 'ny' → logprob: -15.750088691711426

Token 365: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07144679874181747
    2. 'and' → logprob: -2.8214468955993652
    3. ']' → logprob: -5.196446895599365
    4. ')' → logprob: -5.571446895599365
    5. ' )' → logprob: -9.821446418762207
    6. ' ]' → logprob: -11.196446418762207
    7. ' ' → logprob: -11.821446418762207
    8. '[' → logprob: -11.821446418762207
    9. ' 
' → logprob: -13.071446418762207
    10. '][' → logprob: -13.571446418762207

Token 366: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519465982913971
    2. 'and' → logprob: -1.5019465684890747
    3. '[' → logprob: -11.251946449279785
    4. '```' → logprob: -14.126946449279785
    5. ' ' → logprob: -14.376946449279785
    6. '               ' → logprob: -14.501946449279785
    7. ')' → logprob: -14.626946449279785
    8. '	and' → logprob: -15.001946449279785
    9. '           ' → logprob: -15.126946449279785
    10. '             ' → logprob: -15.126946449279785

Token 367: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.06197429448366165
    2. 'grid' → logprob: -2.811974287033081
    3. '(grid' → logprob: -12.43697452545166
    4. '	grid' → logprob: -13.31197452545166
    5. '.grid' → logprob: -15.43697452545166
    6. ':grid' → logprob: -15.56197452545166
    7. '```' → logprob: -16.186973571777344
    8. 'Grid' → logprob: -16.686973571777344
    9. ' ' → logprob: -16.811973571777344
    10. '_grid' → logprob: -17.061973571777344

Token 368: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.375
    3. '[
' → logprob: -17.0
    4. '   ' → logprob: -17.375
    5. ' [' → logprob: -18.5
    6. '
' → logprob: -18.625
    7. '

' → logprob: -18.875
    8. '       ' → logprob: -19.0
    9. '\[' → logprob: -19.125
    10. '[y' → logprob: -19.25

Token 369: 'ny' (ID: 3008)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.755678961984813e-05
    2. 'ny' → logprob: -9.500077247619629
    3. ' ny' → logprob: -13.625077247619629
    4. '   ' → logprob: -14.750077247619629
    5. '```' → logprob: -15.250077247619629
    6. '
' → logprob: -15.875077247619629
    7. 'y' → logprob: -15.875077247619629
    8. '[
' → logprob: -16.000078201293945
    9. ' ' → logprob: -17.000078201293945
    10. ' [' → logprob: -17.000078201293945

Token 370: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0031844829209148884
    2. '][' → logprob: -5.7531843185424805
    3. ')[' → logprob: -13.50318431854248
    4. '```' → logprob: -13.62818431854248
    5. ']' → logprob: -13.75318431854248
    6. '   ' → logprob: -14.37818431854248
    7. '[
' → logprob: -14.62818431854248
    8. '[y' → logprob: -15.37818431854248
    9. ' ][' → logprob: -15.37818431854248
    10. '       ' → logprob: -15.62818431854248

Token 371: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.023260504007339478
    2. 'ny' → logprob: -3.7732605934143066
    3. '[n' → logprob: -12.648260116577148
    4. '(nx' → logprob: -12.648260116577148
    5. '[' → logprob: -12.773260116577148
    6. 'x' → logprob: -13.648260116577148
    7. 'nk' → logprob: -13.898260116577148
    8. '
' → logprob: -14.023260116577148
    9. 'ni' → logprob: -14.148260116577148
    10. '```' → logprob: -14.648260116577148

Token 372: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.5871869921684265
    2. '==' → logprob: -0.8371869921684265
    3. '=='' → logprob: -5.087186813354492
    4. ']=='' → logprob: -5.462186813354492
    5. '']==' → logprob: -7.962186813354492
    6. '==
' → logprob: -8.962186813354492
    7. '']=='' → logprob: -8.962186813354492
    8. ' ==' → logprob: -9.587186813354492
    9. ')==' → logprob: -9.962186813354492
    10. ']' → logprob: -10.712186813354492

Token 373: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -3.6789137084269896e-05
    2. ' '.'' → logprob: -10.25003719329834
    3. ''' → logprob: -15.00003719329834
    4. '"."' → logprob: -15.25003719329834
    5. '('.')' → logprob: -15.50003719329834
    6. '.' → logprob: -15.62503719329834
    7. '	' → logprob: -16.250036239624023
    8. '','' → logprob: -16.250036239624023
    9. '('.' → logprob: -17.250036239624023
    10. ''#' → logprob: -17.625036239624023

Token 374: '':
' (ID: 7669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3467848002910614
    2. ':' → logprob: -2.471784830093384
    3. ':
' → logprob: -2.471784830093384
    4. ' white' → logprob: -2.471784830093384
    5. 'white' → logprob: -4.096784591674805
    6. '[' → logprob: -5.596784591674805
    7. ']' → logprob: -6.221784591674805
    8. '               ' → logprob: -6.221784591674805
    9. ':white' → logprob: -6.346784591674805
    10. ']:
' → logprob: -6.721784591674805

Token 375: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04451264813542366
    2. ' white' → logprob: -3.2945127487182617
    3. 'white' → logprob: -6.044512748718262
    4. '                       ' → logprob: -6.294512748718262
    5. '               ' → logprob: -6.294512748718262
    6. '```' → logprob: -8.794512748718262
    7. '                  ' → logprob: -9.669512748718262
    8. '                           ' → logprob: -9.919512748718262
    9. '                    ' → logprob: -10.044512748718262
    10. '           ' → logprob: -10.544512748718262

Token 376: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' (adapté à ' white') → logprob: -0.04873259365558624
    2. ' white' → logprob: -3.0487325191497803
    3. '                   ' → logprob: -8.92373275756836
    4. '                       ' → logprob: -12.04873275756836
    5. '白' → logprob: -12.92373275756836
    6. '```' → logprob: -13.54873275756836
    7. '               ' → logprob: -13.92373275756836
    8. '
' → logprob: -14.54873275756836
    9. '                    ' → logprob: -15.54873275756836
    10. '           ' → logprob: -15.54873275756836

Token 377: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -7.226628895296017e-06
    2. 'adj' → logprob: -12.375007629394531
    3. '_ad' → logprob: -12.875007629394531
    4. '_' → logprob: -15.625007629394531
    5. '_adv' → logprob: -15.625007629394531
    6. '[_' → logprob: -16.75000762939453
    7. 'Adj' → logprob: -17.37500762939453
    8. ''_' → logprob: -18.00000762939453
    9. '```' → logprob: -18.00000762939453
    10. ' _' → logprob: -18.25000762939453

Token 378: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. ' [' → logprob: -18.125
    4. '   ' → logprob: -18.75
    5. '[i' → logprob: -19.625
    6. '	' → logprob: -19.625
    7. '

' → logprob: -19.75
    8. '
' → logprob: -19.875
    9. '[[' → logprob: -20.125
    10. '[
' → logprob: -20.125

Token 379: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.000650125031825155
    2. '[' → logprob: -7.375649929046631
    3. ' ny' → logprob: -10.875650405883789
    4. 'ni' → logprob: -13.750650405883789
    5. 'yn' → logprob: -14.000650405883789
    6. 'nx' → logprob: -14.125650405883789
    7. '(' → logprob: -14.625650405883789
    8. 'y' → logprob: -15.000650405883789
    9. 'n' → logprob: -15.250650405883789
    10. 'nyi' → logprob: -15.500650405883789

Token 380: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5761887431144714
    2. '][' → logprob: -0.8261887431144714
    3. '[n' → logprob: -9.826189041137695
    4. ']' → logprob: -9.826189041137695
    5. ')[' → logprob: -10.201189041137695
    6. ' ][' → logprob: -11.326189041137695
    7. '       ' → logprob: -11.451189041137695
    8. ' [' → logprob: -11.576189041137695
    9. '```' → logprob: -11.576189041137695
    10. ']][' → logprob: -11.701189041137695

Token 381: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -8.756989700486884e-05
    2. 'ny' → logprob: -9.50008773803711
    3. ' nx' → logprob: -11.87508773803711
    4. '(nx' → logprob: -12.37508773803711
    5. 'x' → logprob: -15.00008773803711
    6. '1' → logprob: -15.00008773803711
    7. 'nk' → logprob: -16.00008773803711
    8. 'tx' → logprob: -16.12508773803711
    9. '[n' → logprob: -16.25008773803711
    10. '[' → logprob: -16.37508773803711

Token 382: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3081236779689789
    2. '=' → logprob: -1.5581237077713013
    3. ' =' → logprob: -3.1831235885620117
    4. ']=' → logprob: -4.558123588562012
    5. ')' → logprob: -6.058123588562012
    6. '                   ' → logprob: -8.808123588562012
    7. ' ]' → logprob: -9.183123588562012
    8. '[' → logprob: -10.183123588562012
    9. ')=' → logprob: -10.433123588562012
    10. '                    ' → logprob: -10.808123588562012

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759462714195251
    2. ' =' → logprob: -0.8259462714195251
    3. '=True' → logprob: -11.950945854187012
    4. '[' → logprob: -15.325945854187012
    5. '                   ' → logprob: -16.575946807861328
    6. '                    ' → logprob: -16.825946807861328
    7. ')' → logprob: -17.575946807861328
    8. ' ' → logprob: -17.700946807861328
    9. ']' → logprob: -18.075946807861328
    10. ']=' → logprob: -18.200946807861328

Token 384: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.941850526549388e-06
    2. ' True' → logprob: -11.750007629394531
    3. '=True' → logprob: -19.25000762939453
    4. '(True' → logprob: -19.50000762939453
    5. 'False' → logprob: -19.75000762939453
    6. 'true' → logprob: -21.87500762939453
    7. '.True' → logprob: -22.12500762939453
    8. '[' → logprob: -22.37500762939453
    9. '1' → logprob: -22.75000762939453
    10. '   ' → logprob: -23.87500762939453

Token 385: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007516168989241123
    2. 'queue' → logprob: -7.250751495361328
    3. ' queue' → logprob: -11.500751495361328
    4. '
' → logprob: -11.875751495361328
    5. '               ' → logprob: -12.125751495361328
    6. '                    ' → logprob: -12.250751495361328
    7. '                    
' → logprob: -12.625751495361328
    8. 'white' → logprob: -13.250751495361328
    9. '				' → logprob: -13.375751495361328
    10. '                       ' → logprob: -13.500751495361328

Token 386: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0031489618122577667
    2. 'white' → logprob: -5.878149032592773
    3. 'queue' → logprob: -8.378149032592773
    4. '               ' → logprob: -9.878149032592773
    5. '```' → logprob: -10.878149032592773
    6. '                       ' → logprob: -11.378149032592773
    7. ' white' → logprob: -11.753149032592773
    8. '
' → logprob: -12.378149032592773
    9. '                    ' → logprob: -12.503149032592773
    10. '                  ' → logprob: -12.503149032592773

Token 387: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.002130041131749749
    2. ' queue' → logprob: -7.002130031585693
    3. 'white' → logprob: -7.252130031585693
    4. '                   ' → logprob: -7.627130031585693
    5. '               ' → logprob: -12.127130508422852
    6. '           ' → logprob: -12.877130508422852
    7. '```' → logprob: -12.877130508422852
    8. '	queue' → logprob: -13.502130508422852
    9. ' white' → logprob: -13.627130508422852
    10. '                       ' → logprob: -13.627130508422852

Token 388: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002342912630410865
    2. 'append' → logprob: -8.375234603881836
    3. '.' → logprob: -12.625234603881836
    4. ' .' → logprob: -16.000234603881836
    5. '           ' → logprob: -16.500234603881836
    6. '```' → logprob: -16.625234603881836
    7. '.extend' → logprob: -17.500234603881836
    8. 'deque' → logprob: -17.750234603881836
    9. '.enqueue' → logprob: -18.000234603881836
    10. 'app' → logprob: -18.250234603881836

Token 389: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.6047699318733066e-05
    2. '(' → logprob: -11.625016212463379
    3. '(nx' → logprob: -11.875016212463379
    4. '(n' → logprob: -17.625015258789062
    5. '(
' → logprob: -17.875015258789062
    6. ' ((' → logprob: -19.250015258789062
    7. '```' → logprob: -20.000015258789062
    8. '[(' → logprob: -20.250015258789062
    9. ')((' → logprob: -20.375015258789062
    10. ' (' → logprob: -20.500015258789062

Token 390: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.3871130347251892
    2. '(nx' → logprob: -1.137113094329834
    3. ' nx' → logprob: -8.387112617492676
    4. ' (' → logprob: -12.012112617492676
    5. '(n' → logprob: -13.012112617492676
    6. 'x' → logprob: -13.512112617492676
    7. ')' → logprob: -14.012112617492676
    8. 'n' → logprob: -14.137112617492676
    9. 'Nx' → logprob: -14.262112617492676
    10. '```' → logprob: -15.262112617492676

Token 391: ',' (ID: 11)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.5936723351478577
    2. ',' → logprob: -1.343672275543213
    3. ',n' → logprob: -2.093672275543213
    4. ',(' → logprob: -3.218672275543213
    5. '(n' → logprob: -4.218672275543213
    6. '(' → logprob: -4.843672275543213
    7. ' (' → logprob: -7.593672275543213
    8. ')' → logprob: -8.718672752380371
    9. ',x' → logprob: -10.093672752380371
    10. ',
' → logprob: -10.343672752380371

Token 392: 'ny' (ID: 3008)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.25201451778411865
    2. '(nx' → logprob: -1.5020145177841187
    3. ' nx' → logprob: -9.50201416015625
    4. '(n' → logprob: -12.00201416015625
    5. 'ny' → logprob: -13.12701416015625
    6. 'Nx' → logprob: -14.37701416015625
    7. 'n' → logprob: -14.62701416015625
    8. ')' → logprob: -14.75201416015625
    9. 'x' → logprob: -14.87701416015625
    10. '1' → logprob: -15.62701416015625

Token 393: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003086486831307411
    2. '))' → logprob: -8.250308990478516
    3. ')
' → logprob: -10.500308990478516
    4. ' )' → logprob: -12.625308990478516
    5. '(nx' → logprob: -12.625308990478516
    6. ')))' → logprob: -12.750308990478516
    7. ')x' → logprob: -12.750308990478516
    8. '(' → logprob: -13.625308990478516
    9. '(n' → logprob: -13.625308990478516
    10. '())' → logprob: -14.375308990478516

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010946773923933506
    2. '```' → logprob: -5.260946750640869
    3. '
' → logprob: -5.635946750640869
    4. '   ' → logprob: -7.635946750640869
    5. '        
' → logprob: -7.760946750640869
    6. 'count' → logprob: -7.760946750640869
    7. 'result' → logprob: -8.260947227478027
    8. '#' → logprob: -9.885947227478027
    9. 'empty' → logprob: -10.010947227478027
    10. 'counts' → logprob: -10.010947227478027

Token 395: ' black' (ID: 5960)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4343092739582062
    2. 'result' → logprob: -1.6843092441558838
    3. 'score' → logprob: -2.684309244155884
    4. 'count' → logprob: -3.559309244155884
    5. 'for' → logprob: -3.809309244155884
    6. 'counts' → logprob: -4.309309482574463
    7. 'results' → logprob: -5.059309482574463
    8. 'territ' → logprob: -5.434309482574463
    9. 'scores' → logprob: -5.559309482574463
    10. '```' → logprob: -6.184309482574463

Token 396: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.920197069644928
    2. '_score' → logprob: -1.1701970100402832
    3. '_count' → logprob: -2.170197010040283
    4. '_area' → logprob: -2.295197010040283
    5. '_cells' → logprob: -4.420197010040283
    6. 'score' → logprob: -5.045197010040283
    7. '_w' → logprob: -5.045197010040283
    8. '_points' → logprob: -5.295197010040283
    9. '_sur' → logprob: -5.545197010040283
    10. 'territ' → logprob: -5.545197010040283

Token 397: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20163270831108093
    2. '=' → logprob: -1.7016327381134033
    3. ',' → logprob: -8.451632499694824
    4. ' ,' → logprob: -12.451632499694824
    5. '=count' → logprob: -15.201632499694824
    6. 's' → logprob: -15.451632499694824
    7. '=sum' → logprob: -15.701632499694824
    8. ')' → logprob: -15.826632499694824
    9. '_=' → logprob: -15.951632499694824
    10. '[' → logprob: -15.951632499694824

Token 398: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011762974318116903
    2. ' ' → logprob: -6.876176357269287
    3. 'sum' → logprob: -9.126175880432129
    4. 'black' → logprob: -10.876175880432129
    5. ' sum' → logprob: -11.501175880432129
    6. ' black' → logprob: -13.376175880432129
    7. 'white' → logprob: -14.126175880432129
    8. '1' → logprob: -14.376175880432129
    9. '   ' → logprob: -14.938675880432129
    10. '[' → logprob: -15.001175880432129

Token 399: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024993177503347397
    2. 'sum' → logprob: -6.127499103546143
    3. 'white' → logprob: -8.7524995803833
    4. 'black' → logprob: -9.3774995803833
    5. '[' → logprob: -10.2524995803833
    6. ' ' → logprob: -10.8774995803833
    7. '{' → logprob: -12.7524995803833
    8. 'set' → logprob: -12.7524995803833
    9. ' sum' → logprob: -13.0024995803833
    10. '1' → logprob: -13.6274995803833

Token 400: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09420912712812424
    2. '       ' → logprob: -2.7192091941833496
    3. '<|end|>' → logprob: -4.46920919418335
    4. 'white' → logprob: -5.09420919418335
    5. '        
' → logprob: -5.46920919418335
    6. ' white' → logprob: -7.59420919418335
    7. ' 
' → logprob: -8.219208717346191
    8. ',' → logprob: -8.969208717346191
    9. '  
' → logprob: -8.969208717346191
    10. '
' → logprob: -9.094208717346191

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22333019971847534
    2. '
' → logprob: -2.22333025932312
    3. 'white' → logprob: -2.97333025932312
    4. ' white' → logprob: -3.22333025932312
    5. ',' → logprob: -8.2233304977417
    6. 'total' → logprob: -8.3483304977417
    7. '        
' → logprob: -9.7233304977417
    8. ',
' → logprob: -9.9733304977417
    9. ' for' → logprob: -10.2233304977417
    10. ' 
' → logprob: -10.7233304977417

Token 402: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' (adapté à ' white') → logprob: -0.0801287293434143
    2. ' white' → logprob: -2.5801286697387695
    3. 'for' → logprob: -7.2051286697387695
    4. ' for' → logprob: -8.33012866973877
    5. '       ' → logprob: -8.70512866973877
    6. 'total' → logprob: -10.58012866973877
    7. 'empty' → logprob: -10.70512866973877
    8. 'black' → logprob: -10.95512866973877
    9. '.white' → logprob: -11.95512866973877
    10. '_white' → logprob: -12.95512866973877

Token 403: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0021612064447253942
    2. '_' → logprob: -6.252161026000977
    3. '_adj' → logprob: -9.127161026000977
    4. '```' → logprob: -10.502161026000977
    5. '_ad' → logprob: -11.252161026000977
    6. ' _' → logprob: -11.627161026000977
    7. '\' → logprob: -11.752161026000977
    8. '_counts' → logprob: -12.127161026000977
    9. '[' → logprob: -12.377161026000977
    10. '##_' → logprob: -12.627161026000977

Token 404: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048589304089546204
    2. '=' → logprob: -3.0485892295837402
    3. ' +=' → logprob: -13.423589706420898
    4. ' ' → logprob: -15.673589706420898
    5. '+=' → logprob: -16.0485897064209
    6. ',' → logprob: -16.7985897064209
    7. ')' → logprob: -17.5485897064209
    8. ' =
' → logprob: -17.7985897064209
    9. ' =)' → logprob: -17.7985897064209
    10. ' ' → logprob: -18.7985897064209

Token 405: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009756677784025669
    2. ' ' → logprob: -4.634756565093994
    3. '   ' → logprob: -15.572257041931152
    4. ' ' → logprob: -16.072256088256836
    5. '1' → logprob: -16.697256088256836
    6. 's' → logprob: -17.384756088256836
    7. '=' → logprob: -17.384756088256836
    8. 'int' → logprob: -17.384756088256836
    9. '  ' → logprob: -17.447256088256836
    10. '.' → logprob: -17.822256088256836

Token 406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.644463479053229e-05
    2. ' ' → logprob: -10.000046730041504
    3. '1' → logprob: -16.125045776367188
    4. 'sum' → logprob: -16.562545776367188
    5. 'int' → logprob: -16.687545776367188
    6. 'h' → logprob: -17.000045776367188
    7. '```' → logprob: -17.125045776367188
    8. '=' → logprob: -17.187545776367188
    9. '   ' → logprob: -17.250045776367188
    10. '[' → logprob: -17.437545776367188

Token 407: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25730904936790466
    2. '
' → logprob: -1.507309079170227
    3. '        
' → logprob: -5.7573089599609375
    4. '<|end|>' → logprob: -7.1323089599609375
    5. '```' → logprob: -7.6323089599609375
    6. ' for' → logprob: -7.7573089599609375
    7. 'for' → logprob: -8.757308959960938
    8. '
' → logprob: -9.507308959960938
    9. '  
' → logprob: -9.632308959960938
    10. '		
' → logprob: -10.132308959960938

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07487073540687561
    2. '
' → logprob: -2.8248708248138428
    3. '<|end|>' → logprob: -4.449870586395264
    4. '        
' → logprob: -7.324870586395264
    5. '```' → logprob: -8.824871063232422
    6. '<|end|>' → logprob: -9.824871063232422
    7. '\' → logprob: -9.949871063232422
    8. '  
' → logprob: -10.074871063232422
    9. '   ' → logprob: -10.324871063232422
    10. '
' → logprob: -10.699871063232422

Token 409: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16983744502067566
    2. 'visited' → logprob: -1.919837474822998
    3. '       ' → logprob: -4.669837474822998
    4. ' for' → logprob: -8.66983699798584
    5. ' visited' → logprob: -12.04483699798584
    6. 'vis' → logprob: -12.04483699798584
    7. 'seen' → logprob: -12.66983699798584
    8. 'marked' → logprob: -13.16983699798584
    9. 'def' → logprob: -14.16983699798584
    10. '   ' → logprob: -14.66983699798584

Token 410: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10020861029624939
    2. ' y' → logprob: -2.3502085208892822
    3. '	y' → logprob: -13.350208282470703
    4. '_y' → logprob: -15.225208282470703
    5. 'x' → logprob: -16.600208282470703
    6. ')y' → logprob: -17.600208282470703
    7. ''y' → logprob: -18.975208282470703
    8. '   ' → logprob: -19.225208282470703
    9. ',y' → logprob: -19.600208282470703
    10. '(y' → logprob: -19.725208282470703

Token 411: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015083164907991886
    2. 'in' → logprob: -6.5015082359313965
    3. ',' → logprob: -12.501508712768555
    4. ' ' → logprob: -13.751508712768555
    5. ' ,' → logprob: -15.001508712768555
    6. '	in' → logprob: -15.126508712768555
    7. ' ' → logprob: -16.376508712768555
    8. '   ' → logprob: -16.626508712768555
    9. ')' → logprob: -17.501508712768555
    10. ',in' → logprob: -17.501508712768555

Token 412: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '(range' → logprob: -17.626171112060547
    4. ')' → logprob: -19.001171112060547
    5. ' ' → logprob: -19.751171112060547
    6. '   ' → logprob: -20.001171112060547
    7. '
' → logprob: -20.251171112060547
    8. 'in' → logprob: -20.626171112060547
    9. 'ran' → logprob: -21.001171112060547
    10. 'r' → logprob: -21.251171112060547

Token 413: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -12.75000286102295
    3. 'h' → logprob: -15.12500286102295
    4. ' (' → logprob: -17.625003814697266
    5. '(
' → logprob: -17.625003814697266
    6. '       ' → logprob: -18.250003814697266
    7. ',h' → logprob: -18.625003814697266
    8. '(height' → logprob: -19.250003814697266
    9. '   ' → logprob: -19.500003814697266
    10. ' h' → logprob: -19.625003814697266

Token 414: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.049016740173101425
    2. '):
' → logprob: -3.0490167140960693
    3. '   ' → logprob: -8.174016952514648
    4. ':' → logprob: -9.549016952514648
    5. ')' → logprob: -10.799016952514648
    6. '       ' → logprob: -11.299016952514648
    7. ' ):' → logprob: -11.549016952514648
    8. ',' → logprob: -11.674016952514648
    9. ' ' → logprob: -11.924016952514648
    10. '+' → logprob: -12.174016952514648

Token 415: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2075791209936142
    2. '   ' → logprob: -2.7075791358947754
    3. '       ' → logprob: -3.2075791358947754
    4. ':
' → logprob: -3.4575791358947754
    5. '           ' → logprob: -3.8325791358947754
    6. ' for' → logprob: -3.9575791358947754
    7. '<|end|>' → logprob: -5.207579135894775
    8. '<|end|>' → logprob: -7.707579135894775
    9. ',' → logprob: -8.082578659057617
    10. '	for' → logprob: -8.207578659057617

Token 416: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10466770082712173
    2. 'for' (adapté à ' for') → logprob: -2.3546676635742188
    3. '   ' → logprob: -5.479667663574219
    4. '       ' → logprob: -8.229667663574219
    5. '           ' → logprob: -11.854667663574219
    6. '	for' → logprob: -11.979667663574219
    7. ' ' → logprob: -15.729667663574219
    8. '```' → logprob: -15.979667663574219
    9. '               ' → logprob: -16.10466766357422
    10. '	   ' → logprob: -16.85466766357422

Token 417: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002476604888215661
    2. ' x' → logprob: -6.002476692199707
    3. '(x' → logprob: -14.127476692199707
    4. ',x' → logprob: -16.50247573852539
    5. ' in' → logprob: -16.87747573852539
    6. '	x' → logprob: -17.87747573852539
    7. ')x' → logprob: -18.37747573852539
    8. ' range' → logprob: -19.00247573852539
    9. 'w' → logprob: -19.12747573852539
    10. '0' → logprob: -19.37747573852539

Token 418: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06995721906423569
    2. 'in' → logprob: -2.6949572563171387
    3. '(' → logprob: -12.06995677947998
    4. '           ' → logprob: -12.44495677947998
    5. '	in' → logprob: -12.69495677947998
    6. '   ' → logprob: -13.56995677947998
    7. ')' → logprob: -13.94495677947998
    8. ',' → logprob: -13.94495677947998
    9. '[' → logprob: -14.06995677947998
    10. ' ' → logprob: -14.19495677947998

Token 419: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0381946861743927
    2. ' range' → logprob: -3.2881946563720703
    3. '(range' → logprob: -8.78819465637207
    4. '(w' → logprob: -14.78819465637207
    5. '(' → logprob: -15.16319465637207
    6. '	range' → logprob: -17.66319465637207
    7. ')' → logprob: -19.16319465637207
    8. 'w' → logprob: -19.28819465637207
    9. '   ' → logprob: -19.28819465637207
    10. 'ran' → logprob: -19.28819465637207

Token 420: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -3.6550729419104755e-05
    2. '(' → logprob: -10.875036239624023
    3. 'range' → logprob: -11.375036239624023
    4. '(range' → logprob: -12.375036239624023
    5. ' (' → logprob: -14.500036239624023
    6. ' range' → logprob: -15.000036239624023
    7. '(width' → logprob: -15.625036239624023
    8. '       ' → logprob: -15.625036239624023
    9. '(h' → logprob: -15.875036239624023
    10. 'w' → logprob: -15.875036239624023

Token 421: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3916880488395691
    2. '):
' → logprob: -1.1416881084442139
    3. ')' → logprob: -5.391687870025635
    4. '):

' → logprob: -10.016688346862793
    5. '   ' → logprob: -10.141688346862793
    6. '       ' → logprob: -10.141688346862793
    7. '):
' → logprob: -10.516688346862793
    8. ' in' → logprob: -10.641688346862793
    9. ':' → logprob: -10.766688346862793
    10. '           ' → logprob: -11.141688346862793

Token 422: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30446264147758484
    2. '           ' → logprob: -1.6794626712799072
    3. ':' → logprob: -2.8044626712799072
    4. ':
' → logprob: -5.304462432861328
    5. ' if' → logprob: -5.804462432861328
    6. ' :' → logprob: -5.929462432861328
    7. ' ' → logprob: -7.054462432861328
    8. ',' → logprob: -7.804462432861328
    9. '<|end|>' → logprob: -7.804462432861328
    10. '            ' → logprob: -8.054462432861328

Token 423: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15384849905967712
    2. ' if' → logprob: -2.27884840965271
    3. ' ' → logprob: -4.403848648071289
    4. '           ' → logprob: -4.778848648071289
    5. 'if' (adapté à ' if') → logprob: -5.153848648071289
    6. '               ' → logprob: -5.153848648071289
    7. '                ' → logprob: -6.778848648071289
    8. '                    ' → logprob: -6.778848648071289
    9. '                    
' → logprob: -7.028848648071289
    10. ' 
' → logprob: -7.028848648071289

Token 424: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.11679459363222122
    2. 'grid' → logprob: -2.2417945861816406
    3. ' black' → logprob: -5.741794586181641
    4. 'black' → logprob: -7.366794586181641
    5. '(grid' → logprob: -9.86679458618164
    6. ' not' → logprob: -10.86679458618164
    7. '	grid' → logprob: -11.61679458618164
    8. 'not' → logprob: -11.74179458618164
    9. ' white' → logprob: -11.74179458618164
    10. ' ' → logprob: -11.86679458618164

Token 425: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.7432603272027336e-06
    2. ' [' → logprob: -14.625001907348633
    3. '[x' → logprob: -15.000001907348633
    4. 'y' → logprob: -15.625001907348633
    5. '][' → logprob: -15.750001907348633
    6. '[' → logprob: -15.875001907348633
    7. '```' → logprob: -16.375001907348633
    8. '[h' → logprob: -16.875001907348633
    9. '[
' → logprob: -17.125001907348633
    10. '[Y' → logprob: -17.125001907348633

Token 426: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004243416246026754
    2. '[y' → logprob: -5.50424337387085
    3. ']' → logprob: -8.879243850708008
    4. ' ][' → logprob: -11.879243850708008
    5. 'y' → logprob: -12.129243850708008
    6. '```' → logprob: -12.754243850708008
    7. '[' → logprob: -13.379243850708008
    8. ''][' → logprob: -13.504243850708008
    9. '   ' → logprob: -13.879243850708008
    10. '       ' → logprob: -13.879243850708008

Token 427: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04341156408190727
    2. 'y' → logprob: -3.1684114933013916
    3. '][' → logprob: -8.168411254882812
    4. ']' → logprob: -9.043411254882812
    5. '
' → logprob: -12.418411254882812
    6. '[x' → logprob: -13.543411254882812
    7. '```' → logprob: -13.918411254882812
    8. ' y' → logprob: -14.168411254882812
    9. ']==' → logprob: -14.168411254882812
    10. '0' → logprob: -14.418411254882812

Token 428: ']==' (ID: 34128)
  Prédit: ']==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.2220240980386734
    2. ']==' → logprob: -1.7220240831375122
    3. ']' → logprob: -3.9720242023468018
    4. '=='' → logprob: -6.722023963928223
    5. '']=='' → logprob: -8.597023963928223
    6. '==' → logprob: -9.722023963928223
    7. ']=="' → logprob: -10.097023963928223
    8. ')=='' → logprob: -10.472023963928223
    9. ']!='' → logprob: -10.972023963928223
    10. ']'' → logprob: -11.472023963928223

Token 429: ''.' (ID: 6120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06057266518473625
    2. ''#' → logprob: -3.185572624206543
    3. ''.' → logprob: -4.185572624206543
    4. ''*' → logprob: -6.810572624206543
    5. ''A' → logprob: -8.310572624206543
    6. ''O' → logprob: -8.935572624206543
    7. '#' → logprob: -9.185572624206543
    8. ''C' → logprob: -9.310572624206543
    9. 'B' → logprob: -9.435572624206543
    10. ''b' → logprob: -9.810572624206543

Token 430: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10361086577177048
    2. '):' → logprob: -3.7286107540130615
    3. 'and' → logprob: -3.9786107540130615
    4. ':' → logprob: -3.9786107540130615
    5. '):
' → logprob: -3.9786107540130615
    6. ')' → logprob: -4.478610992431641
    7. ':
' → logprob: -5.603610992431641
    8. '':' → logprob: -6.853610992431641
    9. ''):
' → logprob: -7.603610992431641
    10. '                   ' → logprob: -8.35361099243164

Token 431: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02865639701485634
    2. ' and' → logprob: -3.653656482696533
    3. '                    
' → logprob: -7.403656482696533
    4. ':' → logprob: -7.403656482696533
    5. '                       ' → logprob: -8.528656005859375
    6. '               ' → logprob: -8.653656005859375
    7. 'and' → logprob: -8.778656005859375
    8. ':
' → logprob: -9.278656005859375
    9. '           ' → logprob: -9.403656005859375
    10. '                  ' → logprob: -9.403656005859375

Token 432: ' is' (ID: 382)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0912618562579155
    2. 'b' → logprob: -3.091261863708496
    3. 'black' → logprob: -3.716261863708496
    4. '                       ' → logprob: -4.591261863708496
    5. ' if' → logprob: -5.091261863708496
    6. ' black' → logprob: -7.591261863708496
    7. ' b' → logprob: -8.466261863708496
    8. '                   ' → logprob: -8.591261863708496
    9. 'bw' → logprob: -9.716261863708496
    10. 'in' → logprob: -10.466261863708496

Token 433: '_black' (ID: 92024)
  Prédit: ' black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.8836387991905212
    2. 'black' → logprob: -1.008638858795166
    3. '_black' → logprob: -1.758638858795166
    4. ' not' → logprob: -3.758638858795166
    5. '_' → logprob: -5.133638858795166
    6. ' white' → logprob: -5.758638858795166
    7. 'white' → logprob: -5.758638858795166
    8. ' ' → logprob: -5.883638858795166
    9. 'not' → logprob: -5.883638858795166
    10. ' _' → logprob: -6.008638858795166

Token 434: ' =' (ID: 314)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.10399947315454483
    2. ' =' → logprob: -2.478999376296997
    3. '=' → logprob: -4.478999614715576
    4. '_ad' → logprob: -5.728999614715576
    5. '_' → logprob: -8.478999137878418
    6. 'adj' → logprob: -9.853999137878418
    7. '   ' → logprob: -10.853999137878418
    8. '_connected' → logprob: -11.103999137878418
    9. '=_' → logprob: -11.103999137878418
    10. '_=' → logprob: -11.353999137878418

Token 435: ' black' (ID: 5960)
  Prédit: 'black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.07892438024282455
    2. ' black' → logprob: -2.5789244174957275
    3. 'all' → logprob: -12.078924179077148
    4. 'False' → logprob: -12.203924179077148
    5. '   ' → logprob: -12.328924179077148
    6. 'white' → logprob: -12.328924179077148
    7. 'not' → logprob: -12.953924179077148
    8. '                   ' → logprob: -13.078924179077148
    9. ' all' → logprob: -13.203924179077148
    10. 'True' → logprob: -13.453924179077148

Token 436: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -4.60414821645827e-06
    2. 'adj' → logprob: -12.500004768371582
    3. '_ad' → logprob: -14.625004768371582
    4. '[_' → logprob: -16.125003814697266
    5. '\' → logprob: -16.750003814697266
    6. '[' → logprob: -17.250003814697266
    7. '_adv' → logprob: -17.250003814697266
    8. ''_' → logprob: -17.375003814697266
    9. 'Adj' → logprob: -17.500003814697266
    10. '"_' → logprob: -17.875003814697266

Token 437: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.04858918860554695
    2. '[' → logprob: -3.0485892295837402
    3. ' [' → logprob: -13.673588752746582
    4. 'y' → logprob: -15.798588752746582
    5. '   ' → logprob: -16.2985897064209
    6. '           ' → logprob: -16.2985897064209
    7. '       ' → logprob: -16.4235897064209
    8. '[Y' → logprob: -17.1735897064209
    9. '][' → logprob: -17.7985897064209
    10. '                   ' → logprob: -18.0485897064209

Token 438: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.16347910463809967
    2. '][' → logprob: -1.9134790897369385
    3. '[x' → logprob: -5.788479328155518
    4. '[' → logprob: -8.66347885131836
    5. ']' → logprob: -11.91347885131836
    6. ' [' → logprob: -13.41347885131836
    7. ' ][' → logprob: -13.53847885131836
    8. '```' → logprob: -14.03847885131836
    9. '   ' → logprob: -14.53847885131836
    10. 'y' → logprob: -14.66347885131836

Token 439: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6240566083070007e-06
    2. ' x' → logprob: -13.875001907348633
    3. '[x' → logprob: -14.375001907348633
    4. '][' → logprob: -18.875001907348633
    5. ')x' → logprob: -19.250001907348633
    6. '{x' → logprob: -19.375001907348633
    7. '	x' → logprob: -19.750001907348633
    8. '(x' → logprob: -20.375001907348633
    9. ']' → logprob: -20.750001907348633
    10. '[' → logprob: -21.000001907348633

Token 440: ']
' (ID: 1592)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20155777037143707
    2. 'and' → logprob: -1.7015577554702759
    3. ' or' → logprob: -9.701558113098145
    4. '
' → logprob: -10.826558113098145
    5. ')' → logprob: -10.951558113098145
    6. '<|end|>' → logprob: -11.201558113098145
    7. '                   ' → logprob: -11.576558113098145
    8. ']' → logprob: -11.951558113098145
    9. '	and' → logprob: -12.701558113098145
    10. '                       ' → logprob: -13.576558113098145

Token 441: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.047541555017232895
    2. 'and' → logprob: -3.672541618347168
    3. '                   ' → logprob: -3.922541618347168
    4. ' or' → logprob: -6.922541618347168
    5. '                    ' → logprob: -9.797541618347168
    6. '               ' → logprob: -10.047541618347168
    7. ' is' → logprob: -10.547541618347168
    8. '<|end|>' → logprob: -10.797541618347168
    9. '                  ' → logprob: -11.047541618347168
    10. ' ' → logprob: -11.422541618347168

Token 442: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4543497860431671
    2. 'is' (adapté à ' is') → logprob: -1.7043497562408447
    3. '                   ' → logprob: -1.7043497562408447
    4. ' white' → logprob: -7.079349994659424
    5. 'white' → logprob: -8.829349517822266
    6. '                    ' → logprob: -9.204349517822266
    7. '               ' → logprob: -9.329349517822266
    8. '   ' → logprob: -10.579349517822266
    9. '                       ' → logprob: -10.579349517822266
    10. ' ' → logprob: -10.704349517822266

Token 443: '_white' (ID: 105599)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.08673486113548279
    2. ' white' → logprob: -2.8367347717285156
    3. '_white' → logprob: -3.7117347717285156
    4. '白' → logprob: -11.461734771728516
    5. '   ' → logprob: -12.586734771728516
    6. '.white' → logprob: -12.586734771728516
    7. '_' → logprob: -13.211734771728516
    8. ' ' → logprob: -13.461734771728516
    9. ':white' → logprob: -13.836734771728516
    10. '
' → logprob: -13.836734771728516

Token 444: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029752571135759354
    2. '=' → logprob: -3.529752492904663
    3. '[y' → logprob: -13.529752731323242
    4. '   ' → logprob: -15.529752731323242
    5. ' =[' → logprob: -15.779752731323242
    6. '=y' → logprob: -15.904752731323242
    7. ' ' → logprob: -16.154752731323242
    8. '[' → logprob: -16.654752731323242
    9. ' =
' → logprob: -17.029752731323242
    10. '=[' → logprob: -17.279752731323242

Token 445: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.16022484004497528
    2. 'white' → logprob: -1.9102247953414917
    3. '白' → logprob: -15.035224914550781
    4. '.white' → logprob: -16.03522491455078
    5. '_white' → logprob: -16.16022491455078
    6. 'White' → logprob: -17.16022491455078
    7. ':white' → logprob: -17.66022491455078
    8. '   ' → logprob: -17.66022491455078
    9. ' ' → logprob: -18.53522491455078
    10. '```' → logprob: -18.78522491455078

Token 446: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.015282470732927322
    2. '[y' → logprob: -4.26528263092041
    3. 'adj' → logprob: -6.89028263092041
    4. '[' → logprob: -9.76528263092041
    5. '_ad' → logprob: -10.64028263092041
    6. 'Adj' → logprob: -11.51528263092041
    7. '[x' → logprob: -12.14028263092041
    8. '[user' → logprob: -14.26528263092041
    9. ' Adj' → logprob: -14.39028263092041
    10. '```' → logprob: -14.39028263092041

Token 447: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.875000953674316
    3. 'y' → logprob: -14.875000953674316
    4. ' [' → logprob: -16.000001907348633
    5. '][' → logprob: -16.375001907348633
    6. '[user' → logprob: -18.000001907348633
    7. '```' → logprob: -19.000001907348633
    8. ')[' → logprob: -19.000001907348633
    9. '[x' → logprob: -19.375001907348633
    10. ',y' → logprob: -19.500001907348633

Token 448: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.012681283056735992
    2. '][' → logprob: -4.387681484222412
    3. '[x' → logprob: -8.762681007385254
    4. ']' → logprob: -12.137681007385254
    5. '[' → logprob: -12.262681007385254
    6. ' [' → logprob: -12.887681007385254
    7. 'y' → logprob: -14.262681007385254
    8. '       ' → logprob: -14.887681007385254
    9. ' ][' → logprob: -15.637681007385254
    10. '```' → logprob: -15.762681007385254

Token 449: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012833021173719317
    2. 'y' → logprob: -9.000128746032715
    3. '[x' → logprob: -12.375128746032715
    4. ' x' → logprob: -14.500128746032715
    5. '][' → logprob: -16.1251277923584
    6. '[y' → logprob: -16.8751277923584
    7. '{x' → logprob: -17.3751277923584
    8. '```' → logprob: -17.5001277923584
    9. ']' → logprob: -17.6251277923584
    10. '(x' → logprob: -17.8751277923584

Token 450: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020012356340885162
    2. '                   ' → logprob: -4.270012378692627
    3. ']
' → logprob: -5.520012378692627
    4. ')' → logprob: -7.020012378692627
    5. '               ' → logprob: -7.895012378692627
    6. ']==' → logprob: -8.020011901855469
    7. '<|end|>' → logprob: -10.395011901855469
    8. ' and' → logprob: -10.520011901855469
    9. ']

' → logprob: -10.770011901855469
    10. ' ]' → logprob: -10.895011901855469

Token 451: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001639354508370161
    2. '               ' → logprob: -7.251639366149902
    3. '                    
' → logprob: -7.751639366149902
    4. '           ' → logprob: -8.876639366149902
    5. '       ' → logprob: -9.501639366149902
    6. '                       ' → logprob: -9.876639366149902
    7. '                    ' → logprob: -10.126639366149902
    8. '   ' → logprob: -10.751639366149902
    9. '                  ' → logprob: -10.751639366149902
    10. ' ' → logprob: -11.376639366149902

Token 452: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3077789545059204
    2. '                   ' → logprob: -1.6827789545059204
    3. ' if' → logprob: -2.557778835296631
    4. '               ' → logprob: -6.932778835296631
    5. '           ' → logprob: -8.682779312133789
    6. '
' → logprob: -9.182779312133789
    7. '       ' → logprob: -9.182779312133789
    8. '                    
' → logprob: -9.307779312133789
    9. '```' → logprob: -9.432779312133789
    10. '                    ' → logprob: -11.182779312133789

Token 453: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006861947942525148
    2. ' if' → logprob: -5.131862163543701
    3. '                   ' → logprob: -7.006862163543701
    4. '               ' → logprob: -11.381861686706543
    5. '```' → logprob: -12.381861686706543
    6. '#' → logprob: -12.631861686706543
    7. '
' → logprob: -12.631861686706543
    8. '           ' → logprob: -13.756861686706543
    9. '                       ' → logprob: -13.756861686706543
    10. 'If' → logprob: -14.006861686706543

Token 454: ' adjacency' (ID: 177015)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.372755229473114
    2. '                   ' → logprob: -1.2477552890777588
    3. 'if' → logprob: -3.872755289077759
    4. '                       ' → logprob: -6.74775505065918
    5. '               ' → logprob: -7.12275505065918
    6. ' for' → logprob: -7.37275505065918
    7. '                    ' → logprob: -8.62275505065918
    8. '                    
' → logprob: -9.24775505065918
    9. '       ' → logprob: -9.62275505065918
    10. '           ' → logprob: -9.99775505065918

Token 455: ' of' (ID: 328)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002202474744990468
    2. '                    
' → logprob: -7.25220251083374
    3. '               ' → logprob: -7.62720251083374
    4. ' if' → logprob: -8.752202033996582
    5. ':' → logprob: -9.127202033996582
    6. ' and' → logprob: -9.377202033996582
    7. ',' → logprob: -9.377202033996582
    8. '<|end|>' → logprob: -9.627202033996582
    9. '                       ' → logprob: -9.752202033996582
    10. '           ' → logprob: -10.002202033996582

Token 456: ' this' (ID: 495)
  Prédit: ' black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.71366286277771
    2. 'black' → logprob: -1.71366286277771
    3. ' is' → logprob: -2.08866286277771
    4. 'is' → logprob: -2.33866286277771
    5. ' grid' → logprob: -3.21366286277771
    6. 'grid' → logprob: -3.21366286277771
    7. ' not' → logprob: -4.838663101196289
    8. 'x' → logprob: -5.088663101196289
    9. ' (' → logprob: -5.588663101196289
    10. ' x' → logprob: -6.088663101196289

Token 457: ' cell' (ID: 4206)
  Prédit: ' cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.09303043782711029
    2. ' spot' → logprob: -3.8430304527282715
    3. 'cell' → logprob: -4.0930304527282715
    4. '                   ' → logprob: -4.3430304527282715
    5. ' tile' → logprob: -4.8430304527282715
    6. ' if' → logprob: -4.8430304527282715
    7. '.' → logprob: -5.3430304527282715
    8. ' position' → logprob: -5.5930304527282715
    9. ' square' → logprob: -6.0930304527282715
    10. 'if' → logprob: -6.2180304527282715

Token 458: ' to' (ID: 316)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04551423341035843
    2. ' and' → logprob: -3.9205143451690674
    3. '               ' → logprob: -5.045514106750488
    4. ':' → logprob: -5.295514106750488
    5. ' if' → logprob: -6.295514106750488
    6. ':
' → logprob: -6.670514106750488
    7. '                       ' → logprob: -6.795514106750488
    8. '   ' → logprob: -6.920514106750488
    9. ',' → logprob: -6.920514106750488
    10. '                    
' → logprob: -6.920514106750488

Token 459: ' opposite' (ID: 23821)
  Prédit: ' black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.13743828237056732
    2. ' both' → logprob: -3.0124382972717285
    3. ''' → logprob: -3.1374382972717285
    4. 'black' → logprob: -4.3874382972717285
    5. ' '' → logprob: -4.7624382972717285
    6. 'both' → logprob: -5.1374382972717285
    7. 'B' → logprob: -5.5124382972717285
    8. ' B' → logprob: -6.6374382972717285
    9. ''s' → logprob: -7.8874382972717285
    10. ' either' → logprob: -8.01243782043457

Token 460: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.5884597897529602
    2. 'color' → logprob: -1.8384597301483154
    3. ' sides' → logprob: -2.3384597301483154
    4. ' if' → logprob: -3.0884597301483154
    5. '_color' → logprob: -3.3384597301483154
    6. ' cells' → logprob: -3.9634597301483154
    7. ' colors' → logprob: -4.3384599685668945
    8. '   ' → logprob: -4.4634599685668945
    9. 'colors' → logprob: -4.4634599685668945
    10. '_colors' → logprob: -4.9634599685668945

Token 461: ''s' (ID: 885)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0030695756431668997
    2. '                    
' → logprob: -5.8780694007873535
    3. '               ' → logprob: -9.878069877624512
    4. '                   
' → logprob: -10.253069877624512
    5. ',' → logprob: -10.378069877624512
    6. '                    ' → logprob: -10.753069877624512
    7. '                  ' → logprob: -11.128069877624512
    8. ' and' → logprob: -11.128069877624512
    9. '
' → logprob: -11.503069877624512
    10. '                        
' → logprob: -11.503069877624512

Token 462: ' pins' (ID: 42137)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cells' → logprob: -1.1259698867797852
    2. ''.' → logprob: -1.7509698867797852
    3. '.' → logprob: -2.000969886779785
    4. ' black' → logprob: -2.625969886779785
    5. 'cells' → logprob: -2.875969886779785
    6. 'black' → logprob: -3.500969886779785
    7. 'adj' → logprob: -4.125969886779785
    8. ' neighbors' → logprob: -4.250969886779785
    9. ' positions' → logprob: -4.500969886779785
    10. ' grid' → logprob: -4.500969886779785

Token 463: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0218246728181839
    2. ' and' → logprob: -5.021824836730957
    3. '                    
' → logprob: -5.021824836730957
    4. '               ' → logprob: -6.271824836730957
    5. '
' → logprob: -7.271824836730957
    6. 'and' → logprob: -7.521824836730957
    7. '                    ' → logprob: -7.521824836730957
    8. ' if' → logprob: -7.646824836730957
    9. ',' → logprob: -7.771824836730957
    10. '           ' → logprob: -8.021824836730957

Token 464: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002172028413042426
    2. '                    
' → logprob: -6.252171993255615
    3. '               ' → logprob: -9.627172470092773
    4. '                    ' → logprob: -10.502172470092773
    5. '    
' → logprob: -10.752172470092773
    6. '           ' → logprob: -11.127172470092773
    7. '
' → logprob: -11.252172470092773
    8. '                   
' → logprob: -11.502172470092773
    9. '                  ' → logprob: -11.627172470092773
    10. '   ' → logprob: -11.877172470092773

Token 465: ' def' (ID: 1056)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004966066684573889
    2. ' if' → logprob: -5.7549662590026855
    3. 'if' → logprob: -7.2549662590026855
    4. '                    
' → logprob: -7.7549662590026855
    5. '           ' → logprob: -8.254965782165527
    6. '               ' → logprob: -8.504965782165527
    7. '
' → logprob: -9.879965782165527
    8. '       ' → logprob: -10.379965782165527
    9. '```' → logprob: -10.879965782165527
    10. ' for' → logprob: -11.379965782165527

Token 466: ' adj' (ID: 20251)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.8178982734680176
    2. ' inside' → logprob: -2.1928982734680176
    3. ' is' → logprob: -2.3178982734680176
    4. 'inside' → logprob: -2.5678982734680176
    5. ' can' → logprob: -2.9428982734680176
    6. ' valid' → logprob: -3.1928982734680176
    7. 'adj' → logprob: -3.6928982734680176
    8. 'check' → logprob: -3.6928982734680176
    9. ' conflict' → logprob: -3.9428982734680176
    10. ' adj' → logprob: -4.192898273468018

Token 467: '_to' (ID: 5089)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.35027140378952026
    2. 'acency' → logprob: -2.225271463394165
    3. '(' → logprob: -2.975271463394165
    4. 'ac' → logprob: -3.225271463394165
    5. '   ' → logprob: -3.725271463394165
    6. '(
' → logprob: -4.225271224975586
    7. '=' → logprob: -4.475271224975586
    8. '(x' → logprob: -4.975271224975586
    9. '       ' → logprob: -5.100271224975586
    10. '```' → logprob: -5.725271224975586

Token 468: '_op' (ID: 20111)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.22398386895656586
    2. 'black' → logprob: -3.3489837646484375
    3. '(' → logprob: -3.4739837646484375
    4. '(dx' → logprob: -3.7239837646484375
    5. 'op' → logprob: -4.2239837646484375
    6. '((' → logprob: -4.4739837646484375
    7. '(dir' → logprob: -4.5989837646484375
    8. '(op' → logprob: -4.5989837646484375
    9. 'the' → logprob: -4.8489837646484375
    10. '(lambda' → logprob: -5.7239837646484375

Token 469: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -0.01435788907110691
    2. 'pos' → logprob: -4.889358043670654
    3. 'p' → logprob: -6.139358043670654
    4. 'osite' → logprob: -6.889358043670654
    5. '```' → logprob: -7.264358043670654
    6. '()' → logprob: -7.264358043670654
    7. 'posit' → logprob: -8.389357566833496
    8. '(' → logprob: -8.514357566833496
    9. 's' → logprob: -8.514357566833496
    10. 'os' → logprob: -9.264357566833496

Token 470: '(c' (ID: 2410)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -1.3776190280914307
    2. '(' → logprob: -1.5026190280914307
    3. '_' → logprob: -1.7526190280914307
    4. ' =' → logprob: -1.7526190280914307
    5. ':' → logprob: -3.1276190280914307
    6. '=' → logprob: -3.5026190280914307
    7. '(x' → logprob: -3.5026190280914307
    8. '_colors' → logprob: -4.502618789672852
    9. '_black' → logprob: -4.752618789672852
    10. '(
' → logprob: -4.877618789672852

Token 471: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1565446853637695
    2. '=' → logprob: -2.5315446853637695
    3. '):' → logprob: -2.6565446853637695
    4. ')' → logprob: -2.7815446853637695
    5. '=(' → logprob: -3.5315446853637695
    6. 'olor' → logprob: -3.5315446853637695
    7. '_dirs' → logprob: -3.5315446853637695
    8. '=True' → logprob: -3.6565446853637695
    9. ' =' → logprob: -3.7815446853637695
    10. 's' → logprob: -4.0315446853637695

Token 472: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03318799287080765
    2. '                   ' → logprob: -4.2831878662109375
    3. '(' → logprob: -4.6581878662109375
    4. '       ' → logprob: -6.2831878662109375
    5. '(x' → logprob: -7.1581878662109375
    6. ':' → logprob: -7.2831878662109375
    7. '():' → logprob: -7.5331878662109375
    8. '   ' → logprob: -7.6581878662109375
    9. '                        
' → logprob: -7.6581878662109375
    10. '(n' → logprob: -7.7831878662109375

Token 473: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29065415263175964
    2. '                           ' → logprob: -1.665654182434082
    3. ' return' → logprob: -3.540654182434082
    4. 'for' (adapté à ' for') → logprob: -4.415654182434082
    5. '                       ' → logprob: -4.665654182434082
    6. '   ' → logprob: -5.290654182434082
    7. 'return' → logprob: -5.415654182434082
    8. '           ' → logprob: -6.415654182434082
    9. '                               ' → logprob: -8.165654182434082
    10. ' x' → logprob: -8.665654182434082

Token 474: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.08911721408367157
    2. ' dx' → logprob: -2.4641172885894775
    3. '(dx' → logprob: -9.589117050170898
    4. 'dy' → logprob: -10.589117050170898
    5. '_dx' → logprob: -10.714117050170898
    6. '   ' → logprob: -11.089117050170898
    7. 'nx' → logprob: -11.214117050170898
    8. 'd' → logprob: -11.714117050170898
    9. ' dy' → logprob: -12.339117050170898
    10. ' ' → logprob: -12.464117050170898

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.408677290892228e-05
    2. ',d' → logprob: -9.8750638961792
    3. ' ,' → logprob: -11.6250638961792
    4. ',y' → logprob: -12.7500638961792
    5. ' in' → logprob: -15.7500638961792
    6. 'dy' → logprob: -16.125064849853516
    7. ',n' → logprob: -16.250064849853516
    8. ',de' → logprob: -16.500064849853516
    9. '1' → logprob: -16.625064849853516
    10. ',int' → logprob: -16.875064849853516

Token 476: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00034392563975416124
    2. ' dy' → logprob: -8.125344276428223
    3. ',' → logprob: -10.000344276428223
    4. 'dx' → logprob: -13.750344276428223
    5. '0' → logprob: -14.125344276428223
    6. ' ' → logprob: -15.125344276428223
    7. ',d' → logprob: -15.750344276428223
    8. '1' → logprob: -16.500343322753906
    9. '   ' → logprob: -16.750343322753906
    10. ' ,' → logprob: -17.250343322753906

Token 477: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012519421055912971
    2. 'in' → logprob: -4.387519359588623
    3. ' ' → logprob: -12.012519836425781
    4. ',' → logprob: -13.387519836425781
    5. ' ,' → logprob: -14.762519836425781
    6. '	in' → logprob: -15.012519836425781
    7. 'In' → logprob: -15.012519836425781
    8. '<|end|>' → logprob: -15.262519836425781
    9. '
' → logprob: -16.13751983642578
    10. '```' → logprob: -16.38751983642578

Token 478: ' DIR' (ID: 83023)
  Prédit: 'DIR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIR' → logprob: -0.20142532885074615
    2. ' DIR' → logprob: -1.701425313949585
    3. ' ' → logprob: -12.076425552368164
    4. '[' → logprob: -13.326425552368164
    5. ')' → logprob: -13.826425552368164
    6. '   ' → logprob: -14.326425552368164
    7. '
' → logprob: -14.826425552368164
    8. 'Dir' → logprob: -14.826425552368164
    9. ' DIRE' → logprob: -14.826425552368164
    10. '_DIR' → logprob: -14.951425552368164

Token 479: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0003469057264737785
    2. 'DIR' → logprob: -8.125347137451172
    3. 's' → logprob: -10.500347137451172
    4. ' DIR' → logprob: -10.875347137451172
    5. '(S' → logprob: -14.250347137451172
    6. 'IR' → logprob: -14.375347137451172
    7. ' S' → logprob: -14.750347137451172
    8. '_DIR' → logprob: -15.000347137451172
    9. ')' → logprob: -15.000347137451172
    10. '[' → logprob: -15.125347137451172

Token 480: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5197655558586121
    2. ':
' → logprob: -1.1447656154632568
    3. '                           ' → logprob: -2.519765615463257
    4. '<|end|>' → logprob: -5.894765377044678
    5. '):
' → logprob: -7.019765377044678
    6. '                               ' → logprob: -7.019765377044678
    7. ',' → logprob: -7.894765377044678
    8. '   ' → logprob: -8.019765853881836
    9. '():
' → logprob: -8.269765853881836
    10. '                       ' → logprob: -8.394765853881836

Token 481: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.009439186193048954
    2. '<|end|>' → logprob: -5.134438991546631
    3. '                               ' → logprob: -6.634438991546631
    4. '                            ' → logprob: -6.634438991546631
    5. ' ' → logprob: -8.384439468383789
    6. '                            
' → logprob: -8.634439468383789
    7. ',' → logprob: -9.509439468383789
    8. '                       ' → logprob: -9.634439468383789
    9. '	                       ' → logprob: -9.884439468383789
    10. '						' → logprob: -10.384439468383789

Token 482: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.5095837712287903
    2. '(nx' → logprob: -1.8845837116241455
    3. ' x' → logprob: -2.3845837116241455
    4. '                               ' → logprob: -3.1345837116241455
    5. 'nx' (adapté à ' nx') → logprob: -3.3845837116241455
    6. ' (' → logprob: -4.134583950042725
    7. 'x' → logprob: -4.259583950042725
    8. 'n' → logprob: -4.634583950042725
    9. '                           ' → logprob: -4.759583950042725
    10. ' ' → logprob: -5.009583950042725

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08666665852069855
    2. ',n' → logprob: -2.5866665840148926
    3. ',x' → logprob: -4.961666584014893
    4. ' ,' → logprob: -7.961666584014893
    5. ',y' → logprob: -8.46166706085205
    6. '=' → logprob: -9.83666706085205
    7. '<|end|>' → logprob: -10.58666706085205
    8. ',s' → logprob: -11.08666706085205
    9. '(nx' → logprob: -11.08666706085205
    10. 'x' → logprob: -11.58666706085205

Token 484: 'ny' (ID: 3008)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008615872822701931
    2. ' x' → logprob: -4.758615970611572
    3. 'nx' → logprob: -14.258615493774414
    4. '(x' → logprob: -15.758615493774414
    5. 'y' → logprob: -15.883615493774414
    6. '   ' → logprob: -16.133615493774414
    7. 'ny' → logprob: -16.133615493774414
    8. ' ' → logprob: -16.258615493774414
    9. ' ny' → logprob: -17.133615493774414
    10. '	x' → logprob: -17.133615493774414

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742838442325592
    2. '=' → logprob: -0.9742838144302368
    3. '=x' → logprob: -8.599284172058105
    4. ',' → logprob: -11.474284172058105
    5. '=n' → logprob: -11.974284172058105
    6. ',x' → logprob: -13.099284172058105
    7. ' ' → logprob: -13.974284172058105
    8. ' x' → logprob: -14.599284172058105
    9. ' ,' → logprob: -14.849284172058105
    10. '=(' → logprob: -14.849284172058105

Token 486: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47407761216163635
    2. 'x' → logprob: -0.974077582359314
    3. ' ' → logprob: -15.224077224731445
    4. '	x' → logprob: -15.349077224731445
    5. '(x' → logprob: -17.224077224731445
    6. '   ' → logprob: -17.349077224731445
    7. '                           ' → logprob: -18.724077224731445
    8. '    ' → logprob: -19.224077224731445
    9. '=x' → logprob: -19.724077224731445
    10. '"x' → logprob: -19.849077224731445

Token 487: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00029041420202702284
    2. '+,' → logprob: -8.875290870666504
    3. ',' → logprob: -9.375290870666504
    4. ' +' → logprob: -10.125290870666504
    5. '+d' → logprob: -11.875290870666504
    6. '+x' → logprob: -12.000290870666504
    7. '+
' → logprob: -12.000290870666504
    8. '+y' → logprob: -13.125290870666504
    9. ',y' → logprob: -13.125290870666504
    10. ',+' → logprob: -14.500290870666504

Token 488: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.8670179997570813e-05
    2. ' dx' → logprob: -11.000019073486328
    3. ',' → logprob: -14.875019073486328
    4. '(dx' → logprob: -14.875019073486328
    5. '   ' → logprob: -15.000019073486328
    6. 'dy' → logprob: -15.375019073486328
    7. '```' → logprob: -16.125019073486328
    8. 'd' → logprob: -16.125019073486328
    9. ' ' → logprob: -16.375019073486328
    10. '
' → logprob: -16.750019073486328

Token 489: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.1271793395280838
    2. ',' → logprob: -2.1271793842315674
    3. ',n' → logprob: -8.502179145812988
    4. ' ,' → logprob: -10.002179145812988
    5. ',p' → logprob: -14.127179145812988
    6. ',w' → logprob: -14.252179145812988
    7. ',x' → logprob: -15.377179145812988
    8. ',
' → logprob: -15.877179145812988
    9. ',num' → logprob: -15.877179145812988
    10. ',user' → logprob: -16.002180099487305

Token 490: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020250584930181503
    2. ',' → logprob: -4.0202507972717285
    3. ',x' → logprob: -7.1452507972717285
    4. ',d' → logprob: -7.2702507972717285
    5. ',n' → logprob: -7.8952507972717285
    6. ' +' → logprob: -9.52025032043457
    7. ',y' → logprob: -10.27025032043457
    8. '+
' → logprob: -11.14525032043457
    9. '+,' → logprob: -11.14525032043457
    10. 'dx' → logprob: -11.27025032043457

Token 491: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00031532408320344985
    2. 'dx' → logprob: -8.12531566619873
    3. '1' → logprob: -11.25031566619873
    4. ' dy' → logprob: -12.12531566619873
    5. 'ny' → logprob: -14.87531566619873
    6. 'd' → logprob: -15.37531566619873
    7. '```' → logprob: -17.000314712524414
    8. '
' → logprob: -17.250314712524414
    9. '0' → logprob: -17.375314712524414
    10. ' ' → logprob: -17.625314712524414

Token 492: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.02524273283779621
    2. '                               ' → logprob: -4.025242805480957
    3. ',' → logprob: -5.775242805480957
    4. '                       ' → logprob: -7.150242805480957
    5. '<|end|>' → logprob: -7.275242805480957
    6. ')' → logprob: -7.775242805480957
    7. ':' → logprob: -7.900242805480957
    8. '=' → logprob: -8.025242805480957
    9. '                            ' → logprob: -8.150242805480957
    10. '           ' → logprob: -8.275242805480957

Token 493: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -6.265633419388905e-05
    2. '                               ' → logprob: -10.625062942504883
    3. '                       ' → logprob: -11.250062942504883
    4. '           ' → logprob: -12.000062942504883
    5. ',' → logprob: -12.375062942504883
    6. '                   ' → logprob: -12.625062942504883
    7. '	                       ' → logprob: -13.000062942504883
    8. '               ' → logprob: -13.375062942504883
    9. '<|end|>' → logprob: -13.750062942504883
    10. '   ' → logprob: -14.000062942504883

Token 494: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.008584783412516117
    2. ' if' → logprob: -5.008584976196289
    3. 'if' (adapté à ' if') → logprob: -7.008584976196289
    4. '                               ' → logprob: -7.133584976196289
    5. '           ' → logprob: -9.758584976196289
    6. '   ' → logprob: -10.133584976196289
    7. '                            ' → logprob: -11.008584976196289
    8. '                                   ' → logprob: -11.258584976196289
    9. '                       ' → logprob: -11.383584976196289
    10. ' ' → logprob: -12.258584976196289

Token 495: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.15404053032398224
    2. ' inside' → logprob: -2.029040575027466
    3. '0' → logprob: -4.529040336608887
    4. ' ' → logprob: -7.654040336608887
    5. '(' → logprob: -12.029040336608887
    6. '   ' → logprob: -12.279040336608887
    7. 'ins' → logprob: -12.466540336608887
    8. 'Inside' → logprob: -12.466540336608887
    9. '_inside' → logprob: -12.841540336608887
    10. '1' → logprob: -13.404040336608887

Token 496: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -14.875004768371582
    4. 'nx' → logprob: -16.2500057220459
    5. '(
' → logprob: -16.6250057220459
    6. '(n' → logprob: -18.1250057220459
    7. '((' → logprob: -18.8750057220459
    8. '```' → logprob: -19.0000057220459
    9. '(dx' → logprob: -19.5000057220459
    10. '(nn' → logprob: -19.8750057220459

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.943783253314905e-05
    2. ' ,' → logprob: -9.875059127807617
    3. ',n' → logprob: -12.125059127807617
    4. ',
' → logprob: -13.375059127807617
    5. ',y' → logprob: -15.000059127807617
    6. '(' → logprob: -16.250059127807617
    7. '(nx' → logprob: -16.875059127807617
    8. '<|end|>' → logprob: -16.875059127807617
    9. ',int' → logprob: -16.875059127807617
    10. '```' → logprob: -17.250059127807617

Token 498: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00034774013329297304
    2. ' ny' → logprob: -8.000348091125488
    3. ',' → logprob: -11.875348091125488
    4. 'n' → logprob: -12.875348091125488
    5. 'nx' → logprob: -13.750348091125488
    6. 'nyi' → logprob: -14.250348091125488
    7. 'y' → logprob: -15.500348091125488
    8. 'ni' → logprob: -15.625348091125488
    9. '
' → logprob: -16.125347137451172
    10. 'nym' → logprob: -16.250347137451172

Token 499: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.013379154726862907
    2. ',n' → logprob: -5.263379096984863
    3. ',' → logprob: -5.513379096984863
    4. ' ,' → logprob: -5.513379096984863
    5. ',h' → logprob: -11.513379096984863
    6. ',x' → logprob: -11.513379096984863
    7. ',y' → logprob: -11.763379096984863
    8. 'w' → logprob: -12.138379096984863
    9. '
' → logprob: -12.888379096984863
    10. '```' → logprob: -13.138379096984863

Token 500: ',h' (ID: 42751)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.2994620242971e-06
    2. ',h' → logprob: -12.625008583068848
    3. ' ,' → logprob: -12.750008583068848
    4. ',n' → logprob: -13.375008583068848
    5. ',y' → logprob: -14.625008583068848
    6. ',
' → logprob: -17.12500762939453
    7. 'ny' → logprob: -18.87500762939453
    8. ',height' → logprob: -19.37500762939453
    9. ',w' → logprob: -20.12500762939453
    10. 'h' → logprob: -20.50000762939453

Token 501: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003556039300747216
    2. '):
' → logprob: -8.37535572052002
    3. ' and' → logprob: -9.75035572052002
    4. '):' → logprob: -10.00035572052002
    5. ' )' → logprob: -11.50035572052002
    6. 'and' → logprob: -12.37535572052002
    7. '):

' → logprob: -12.75035572052002
    8. '                           ' → logprob: -13.50035572052002
    9. '):
' → logprob: -14.37535572052002
    10. ',' → logprob: -14.37535572052002

Token 502: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011584481224417686
    2. 'and' → logprob: -4.511584281921387
    3. '                           ' → logprob: -8.261584281921387
    4. ':
' → logprob: -8.636584281921387
    5. ':' → logprob: -10.011584281921387
    6. '                               ' → logprob: -10.761584281921387
    7. '                       ' → logprob: -11.511584281921387
    8. '<|end|>' → logprob: -12.386584281921387
    9. '           ' → logprob: -13.136584281921387
    10. '):
' → logprob: -13.136584281921387

Token 503: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0023622133303433657
    2. ' grid' → logprob: -6.127362251281738
    3. '(grid' → logprob: -8.752362251281738
    4. '                           ' → logprob: -11.752362251281738
    5. '	grid' → logprob: -12.752362251281738
    6. '                   ' → logprob: -13.377362251281738
    7. '                       ' → logprob: -13.877362251281738
    8. '(' → logprob: -14.002362251281738
    9. 'c' → logprob: -14.002362251281738
    10. 'color' → logprob: -14.377362251281738

Token 504: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002823777496814728
    2. '[n' → logprob: -5.877823829650879
    3. '][' → logprob: -12.002823829650879
    4. ')[' → logprob: -12.877823829650879
    5. ' [' → logprob: -13.002823829650879
    6. '[next' → logprob: -13.377823829650879
    7. '```' → logprob: -13.752823829650879
    8. '[y' → logprob: -14.127823829650879
    9. '[now' → logprob: -14.252823829650879
    10. '[
' → logprob: -14.502823829650879

Token 505: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0018913877429440618
    2. '[' → logprob: -7.001891613006592
    3. ' ny' → logprob: -7.876891613006592
    4. ']' → logprob: -8.251891136169434
    5. '][' → logprob: -8.501891136169434
    6. 'nx' → logprob: -9.626891136169434
    7. '[n' → logprob: -11.126891136169434
    8. 'y' → logprob: -11.251891136169434
    9. 'n' → logprob: -11.501891136169434
    10. '   ' → logprob: -12.126891136169434

Token 506: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000628683075774461
    2. '[' → logprob: -7.875628471374512
    3. ']' → logprob: -9.125628471374512
    4. '[n' → logprob: -9.375628471374512
    5. '[x' → logprob: -10.750628471374512
    6. ' ][' → logprob: -11.750628471374512
    7. '[y' → logprob: -12.000628471374512
    8. '       ' → logprob: -12.250628471374512
    9. '   ' → logprob: -12.500628471374512
    10. ']==' → logprob: -13.250628471374512

Token 507: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00028731857310049236
    2. 'x' → logprob: -9.375287055969238
    3. ' nx' → logprob: -9.375287055969238
    4. '(nx' → logprob: -9.500287055969238
    5. '[n' → logprob: -10.375287055969238
    6. 'ny' → logprob: -12.000287055969238
    7. 'n' → logprob: -13.000287055969238
    8. '
' → logprob: -13.625287055969238
    9. '[' → logprob: -14.125287055969238
    10. '```' → logprob: -14.750287055969238

Token 508: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.07447756826877594
    2. ']=='' → logprob: -2.8244776725769043
    3. ']' → logprob: -5.074477672576904
    4. ']!=' → logprob: -5.324477672576904
    5. ']!='' → logprob: -7.074477672576904
    6. '']=='' → logprob: -8.574477195739746
    7. '']==' → logprob: -8.699477195739746
    8. ']=="' → logprob: -10.324477195739746
    9. '==' → logprob: -10.574477195739746
    10. '']' → logprob: -11.699477195739746

Token 509: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004952543415129185
    2. '('' → logprob: -5.754952430725098
    3. ' c' → logprob: -7.504952430725098
    4. ''' → logprob: -7.879952430725098
    5. '(c' → logprob: -8.254952430725098
    6. '(('' → logprob: -8.879952430725098
    7. '   ' → logprob: -9.379952430725098
    8. 'op' → logprob: -9.629952430725098
    9. '(' → logprob: -10.004952430725098
    10. ''.' → logprob: -10.254952430725098

Token 510: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2446041852235794
    2. ':
' → logprob: -1.619604229927063
    3. ':return' → logprob: -4.119604110717773
    4. ' :' → logprob: -6.994604110717773
    5. ' and' → logprob: -7.494604110717773
    6. '):' → logprob: -7.994604110717773
    7. ' :
' → logprob: -8.369604110717773
    8. '):
' → logprob: -8.744604110717773
    9. '                   ' → logprob: -8.869604110717773
    10. '                       ' → logprob: -9.119604110717773

Token 511: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.017767660319805145
    2. ' return' → logprob: -4.267767429351807
    3. ':
' → logprob: -6.892767429351807
    4. '                           ' → logprob: -7.142767429351807
    5. ' and' → logprob: -7.642767429351807
    6. 'return' → logprob: -8.017767906188965
    7. '                       ' → logprob: -8.142767906188965
    8. ':' → logprob: -8.267767906188965
    9. ':return' → logprob: -8.892767906188965
    10. ',' → logprob: -9.892767906188965

Token 512: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14539793133735657
    2. 'return' (adapté à ' return') → logprob: -2.145397901535034
    3. '                               ' → logprob: -4.020398139953613
    4. '	return' → logprob: -8.395398139953613
    5. '                           ' → logprob: -10.395398139953613
    6. '                                   ' → logprob: -10.395398139953613
    7. '
' → logprob: -10.895398139953613
    8. '   ' → logprob: -11.145398139953613
    9. ':return' → logprob: -12.145398139953613
    10. ' 
' → logprob: -12.395398139953613

Token 513: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006715370807796717
    2. ' True' → logprob: -5.006715297698975
    3. 'False' → logprob: -17.006715774536133
    4. '(True' → logprob: -19.756715774536133
    5. '1' → logprob: -21.756715774536133
    6. '=True' → logprob: -22.506715774536133
    7. 'true' → logprob: -23.006715774536133
    8. '   ' → logprob: -23.131715774536133
    9. '
' → logprob: -23.506715774536133
    10. '	' → logprob: -24.256715774536133

Token 514: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09100796282291412
    2. '                   ' → logprob: -2.716007947921753
    3. '                           ' → logprob: -5.091008186340332
    4. '
' → logprob: -5.716008186340332
    5. ' return' → logprob: -6.091008186340332
    6. '           ' → logprob: -6.216008186340332
    7. '<|end|>' → logprob: -6.466008186340332
    8. '               ' → logprob: -6.841008186340332
    9. '                        
' → logprob: -7.341008186340332
    10. '       ' → logprob: -7.341008186340332

Token 515: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5662629008293152
    2. '                           ' → logprob: -1.69126296043396
    3. '<|end|>' → logprob: -2.44126296043396
    4. '                        
' → logprob: -3.31626296043396
    5. ' return' → logprob: -4.191262722015381
    6. '
' → logprob: -4.191262722015381
    7. '\n' → logprob: -4.316262722015381
    8. '                            
' → logprob: -4.441262722015381
    9. '                               ' → logprob: -4.566262722015381
    10. '```' → logprob: -4.691262722015381

Token 516: ' return' (ID: 622)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08969331532716751
    2. '                   ' → logprob: -2.589693307876587
    3. '                           ' → logprob: -4.964693546295166
    4. ' return' → logprob: -7.089693546295166
    5. '           ' → logprob: -7.339693546295166
    6. '       ' → logprob: -7.589693546295166
    7. 'return' (adapté à ' return') → logprob: -7.714693546295166
    8. ' ' → logprob: -7.839693546295166
    9. '               ' → logprob: -7.964693546295166
    10. '                               ' → logprob: -8.214693069458008

Token 517: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.006715370807796717
    2. ' False' → logprob: -5.006715297698975
    3. '(False' → logprob: -19.256715774536133
    4. 'false' → logprob: -22.756715774536133
    5. 'True' → logprob: -22.881715774536133
    6. '=False' → logprob: -23.756715774536133
    7. '_false' → logprob: -23.756715774536133
    8. 'None' → logprob: -24.131715774536133
    9. '.False' → logprob: -24.756715774536133
    10. 'F' → logprob: -25.006715774536133

Token 518: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04734043404459953
    2. '<|end|>' → logprob: -3.2973403930664062
    3. '                   ' → logprob: -5.547340393066406
    4. '                    
' → logprob: -6.672340393066406
    5. 'newline' → logprob: -7.172340393066406
    6. '  
' → logprob: -7.297340393066406
    7. '                        
' → logprob: -7.422340393066406
    8. '
' → logprob: -8.172340393066406
    9. '\n' → logprob: -8.422340393066406
    10. ' 
' → logprob: -8.422340393066406

Token 519: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1884545534849167
    2. '<|end|>' → logprob: -2.1884546279907227
    3. '                    
' → logprob: -3.3134546279907227
    4. ' 
' → logprob: -4.563454627990723
    5. ' ' → logprob: -5.688454627990723
    6. '
' → logprob: -5.688454627990723
    7. '<|end|>' → logprob: -7.188454627990723
    8. '                    ' → logprob: -7.188454627990723
    9. '  
' → logprob: -7.438454627990723
    10. '               ' → logprob: -7.688454627990723

Token 521: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.017311299219727516
    2. 'is' → logprob: -4.392311096191406
    3. ' (' → logprob: -6.017311096191406
    4. ' not' → logprob: -6.767311096191406
    5. ' black' → logprob: -7.017311096191406
    6. 'black' → logprob: -9.267311096191406
    7. '                   ' → logprob: -9.517311096191406
    8. 'not' → logprob: -10.142311096191406
    9. '(' → logprob: -10.267311096191406
    10. '                    ' → logprob: -11.017311096191406

Token 522: '_black' (ID: 92024)
  Prédit: '_black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_black' → logprob: -0.03561675548553467
    2. '_' → logprob: -4.035616874694824
    3. '_white' → logprob: -4.785616874694824
    4. ' _' → logprob: -4.785616874694824
    5. ''_' → logprob: -8.910616874694824
    6. ' black' → logprob: -9.285616874694824
    7. '_b' → logprob: -10.035616874694824
    8. '_blank' → logprob: -10.035616874694824
    9. 'black' → logprob: -10.160616874694824
    10. '_bl' → logprob: -10.910616874694824

Token 523: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07058604061603546
    2. 'and' → logprob: -2.6955859661102295
    3. ' or' → logprob: -8.070586204528809
    4. '                       ' → logprob: -8.945586204528809
    5. '           ' → logprob: -10.445586204528809
    6. '                           ' → logprob: -10.695586204528809
    7. '                   ' → logprob: -10.820586204528809
    8. ' ' → logprob: -10.945586204528809
    9. '	and' → logprob: -11.070586204528809
    10. '   ' → logprob: -11.570586204528809

Token 524: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.509187638759613
    2. 'not' → logprob: -1.2591876983642578
    3. ' is' → logprob: -3.009187698364258
    4. 'is' → logprob: -3.134187698364258
    5. 'adj' → logprob: -4.509187698364258
    6. ' adj' → logprob: -5.509187698364258
    7. ' black' → logprob: -6.259187698364258
    8. ' (' → logprob: -6.634187698364258
    9. 'black' → logprob: -6.759187698364258
    10. '(not' → logprob: -7.009187698364258

Token 525: ' adj' (ID: 20251)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.35721057653427124
    2. 'is' → logprob: -1.482210636138916
    3. 'adj' → logprob: -3.232210636138916
    4. ' adj' → logprob: -3.607210636138916
    5. ' white' → logprob: -6.232210636138916
    6. ' black' → logprob: -6.232210636138916
    7. 'white' → logprob: -6.482210636138916
    8. 'black' → logprob: -7.232210636138916
    9. '(is' → logprob: -8.982210159301758
    10. ' (' → logprob: -9.357210159301758

Token 526: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -8.537868779967539e-06
    2. '_' → logprob: -12.250008583068848
    3. 'acent' → logprob: -13.625008583068848
    4. 'to' → logprob: -14.000008583068848
    5. '\' → logprob: -14.625008583068848
    6. '__' → logprob: -15.500008583068848
    7. ' to' → logprob: -15.625008583068848
    8. ' _' → logprob: -15.750008583068848
    9. '_t' → logprob: -16.50000762939453
    10. 'ent' → logprob: -16.50000762939453

Token 527: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.5422895550727844
    2. '_white' → logprob: -0.9172895550727844
    3. 'op' → logprob: -4.292289733886719
    4. '_' → logprob: -5.667289733886719
    5. 'white' → logprob: -6.792289733886719
    6. '('' → logprob: -9.042289733886719
    7. '_black' → logprob: -9.042289733886719
    8. '_o' → logprob: -9.667289733886719
    9. '_to' → logprob: -10.292289733886719
    10. ''op' → logprob: -10.417289733886719

Token 528: 'posite' (ID: 25800)
  Prédit: 'osite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osite' → logprob: -0.07978548109531403
    2. 'posite' → logprob: -2.5797855854034424
    3. '_' → logprob: -8.329785346984863
    4. '(' → logprob: -8.579785346984863
    5. 'os' → logprob: -8.579785346984863
    6. '`' → logprob: -10.329785346984863
    7. '()' → logprob: -10.579785346984863
    8. '{' → logprob: -10.704785346984863
    9. '(os' → logprob: -10.829785346984863
    10. '_os' → logprob: -11.204785346984863

Token 529: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0002124806633219123
    2. '(' → logprob: -9.250212669372559
    3. ' ('' → logprob: -9.375212669372559
    4. '(('' → logprob: -11.625212669372559
    5. '("' → logprob: -11.875212669372559
    6. '('_' → logprob: -11.875212669372559
    7. '(
' → logprob: -13.375212669372559
    8. ''' → logprob: -13.500212669372559
    9. '('.' → logprob: -14.125212669372559
    10. '('.')' → logprob: -14.625212669372559

Token 530: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.013476303778588772
    2. ''' → logprob: -4.388476371765137
    3. 'B' → logprob: -7.013476371765137
    4. ' W' → logprob: -11.513476371765137
    5. '`' → logprob: -11.638476371765137
    6. 'w' → logprob: -11.763476371765137
    7. '"W' → logprob: -11.763476371765137
    8. '	W' → logprob: -12.700976371765137
    9. '')' → logprob: -13.138476371765137
    10. '```' → logprob: -13.138476371765137

Token 531: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.22323332726955414
    2. ''):' → logprob: -1.9732333421707153
    3. '')' → logprob: -3.098233222961426
    4. ')' → logprob: -4.348233222961426
    5. '):
' → logprob: -6.598233222961426
    6. '):' → logprob: -7.598233222961426
    7. ''' → logprob: -7.848233222961426
    8. ' '' → logprob: -8.223233222961426
    9. ':' → logprob: -8.848233222961426
    10. ''):
' → logprob: -8.848233222961426

Token 532: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.18104571104049683
    2. ':
' → logprob: -2.0560457706451416
    3. ':' → logprob: -3.4310457706451416
    4. ' and' → logprob: -5.8060455322265625
    5. '):
' → logprob: -7.5560455322265625
    6. '                   ' → logprob: -7.5560455322265625
    7. ' :
' → logprob: -8.056045532226562
    8. ':black' → logprob: -8.681045532226562
    9. ' black' → logprob: -8.806045532226562
    10. ' :' → logprob: -9.431045532226562

Token 533: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.20819643139839172
    2. 'black' (adapté à ' black') → logprob: -1.7081964015960693
    3. '                       ' → logprob: -5.083196640014648
    4. '                   ' → logprob: -8.833196640014648
    5. '   ' → logprob: -9.083196640014648
    6. '                           ' → logprob: -9.958196640014648
    7. '                               ' → logprob: -10.083196640014648
    8. ' white' → logprob: -10.208196640014648
    9. ' ' → logprob: -10.833196640014648
    10. '
' → logprob: -10.958196640014648

Token 534: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.36574100604048e-06
    2. '_' → logprob: -13.250004768371582
    3. ' _' → logprob: -14.375004768371582
    4. '\' → logprob: -14.375004768371582
    5. '_code' → logprob: -15.250004768371582
    6. '```' → logprob: -15.750004768371582
    7. '_c' → logprob: -16.125003814697266
    8. ''_' → logprob: -16.250003814697266
    9. '##_' → logprob: -16.375003814697266
    10. '_counter' → logprob: -16.625003814697266

Token 535: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5760045647621155
    2. ' +=' → logprob: -0.8260045647621155
    3. '+' → logprob: -9.826004981994629
    4. ']+=' → logprob: -12.326004981994629
    5. '   ' → logprob: -12.701004981994629
    6. '    ' → logprob: -13.701004981994629
    7. '=' → logprob: -14.451004981994629
    8. ' +' → logprob: -14.951004981994629
    9. ' ' → logprob: -15.201004981994629
    10. ')' → logprob: -15.451004981994629

Token 536: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -20.125001907348633
    4. '2' → logprob: -20.375001907348633
    5. '   ' → logprob: -20.500001907348633
    6. '100' → logprob: -20.750001907348633
    7. '3' → logprob: -21.500001907348633
    8. '
' → logprob: -21.625001907348633
    9. '10' → logprob: -21.875001907348633
    10. '                   ' → logprob: -21.875001907348633

Token 537: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. 'grid' → logprob: -19.125
    4. '2' → logprob: -19.75
    5. '100' → logprob: -20.75
    6. '
' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. '3' → logprob: -21.125
    9. '10' → logprob: -21.3125
    10. 'black' → logprob: -21.4375

Token 538: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2496080994606018
    2. '                   ' → logprob: -1.624608039855957
    3. '                    
' → logprob: -4.874608039855957
    4. ' 
' → logprob: -5.249608039855957
    5. '               ' → logprob: -5.749608039855957
    6. '  
' → logprob: -6.249608039855957
    7. 'elif' → logprob: -6.499608039855957
    8. '    
' → logprob: -6.749608039855957
    9. '<|end|>' → logprob: -7.499608039855957
    10. ' elif' → logprob: -7.749608039855957

Token 539: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002576370956376195
    2. '<|end|>' → logprob: -6.7525763511657715
    3. '                    
' → logprob: -7.8775763511657715
    4. '               ' → logprob: -8.00257682800293
    5. 'elif' → logprob: -8.62757682800293
    6. ' elif' → logprob: -9.12757682800293
    7. '
' → logprob: -9.50257682800293
    8. '                    ' → logprob: -10.12757682800293
    9. '				' → logprob: -10.12757682800293
    10. '<|end|>' → logprob: -10.37757682800293

Token 540: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12427061796188354
    2. 'elif' → logprob: -2.6242706775665283
    3. ' elif' → logprob: -3.3742706775665283
    4. '               ' → logprob: -5.124270439147949
    5. '                    
' → logprob: -6.374270439147949
    6. '
' → logprob: -7.124270439147949
    7. 'else' → logprob: -7.499270439147949
    8. ' else' → logprob: -7.999270439147949
    9. '                    ' → logprob: -9.12427043914795
    10. '				' → logprob: -9.12427043914795

Token 541: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.030745001509785652
    2. 'is' → logprob: -3.530745029449463
    3. ' white' → logprob: -7.155745029449463
    4. 'white' → logprob: -8.530744552612305
    5. ' not' → logprob: -11.530744552612305
    6. ' ' → logprob: -13.530744552612305
    7. ' ' → logprob: -13.655744552612305
    8. '(is' → logprob: -14.030744552612305
    9. 'not' → logprob: -14.280744552612305
    10. '(' → logprob: -14.405744552612305

Token 542: '_white' (ID: 105599)
  Prédit: '_white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -0.00019185843120794743
    2. 'white' → logprob: -8.625191688537598
    3. '_black' → logprob: -11.375191688537598
    4. 'White' → logprob: -15.375191688537598
    5. ' white' → logprob: -15.750191688537598
    6. '_WHITE' → logprob: -16.125192642211914
    7. 'is' → logprob: -16.625192642211914
    8. '_' → logprob: -17.500192642211914
    9. '白' → logprob: -17.750192642211914
    10. '_true' → logprob: -18.000192642211914

Token 543: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.015797259286046028
    2. 'and' → logprob: -4.515797138214111
    3. ' _' → logprob: -5.515797138214111
    4. '_' → logprob: -7.390797138214111
    5. '_and' → logprob: -10.01579761505127
    6. '[' → logprob: -10.51579761505127
    7. ' ' → logprob: -11.76579761505127
    8. ' [' → logprob: -11.76579761505127
    9. ' &&' → logprob: -13.39079761505127
    10. '   ' → logprob: -13.39079761505127

Token 544: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0015024791937321424
    2. 'not' → logprob: -6.501502513885498
    3. '	not' → logprob: -16.251502990722656
    4. ' ' → logprob: -16.501502990722656
    5. ' ' → logprob: -18.626502990722656
    6. ' no' → logprob: -18.751502990722656
    7. '(not' → logprob: -19.376502990722656
    8. ' n' → logprob: -20.001502990722656
    9. 'n' → logprob: -20.126502990722656
    10. '
' → logprob: -20.626502990722656

Token 545: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5759459733963013
    2. ' adj' → logprob: -0.8259459733963013
    3. '(adj' → logprob: -12.575945854187012
    4. ' ' → logprob: -13.575945854187012
    5. ' adjacent' → logprob: -13.825945854187012
    6. ' black' → logprob: -15.075945854187012
    7. 'black' → logprob: -16.075946807861328
    8. 'Adj' → logprob: -16.200946807861328
    9. '_adj' → logprob: -16.325946807861328
    10. ' ' → logprob: -16.700946807861328

Token 546: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.349075556499884e-05
    2. '_adj' → logprob: -10.0000638961792
    3. 'adj' → logprob: -11.1250638961792
    4. '_ad' → logprob: -13.8750638961792
    5. ' adj' → logprob: -14.5000638961792
    6. '(adj' → logprob: -15.1250638961792
    7. 'To' → logprob: -15.1250638961792
    8. 'to' → logprob: -15.3750638961792
    9. ''_' → logprob: -15.3750638961792
    10. '_' → logprob: -16.000062942504883

Token 547: '_op' (ID: 20111)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.6208598017692566
    2. 'adj' → logprob: -1.1208598613739014
    3. '_op' → logprob: -1.9958598613739014
    4. ''op' → logprob: -8.62086009979248
    5. 'opp' → logprob: -9.12086009979248
    6. ''' → logprob: -9.12086009979248
    7. '_adj' → logprob: -9.87086009979248
    8. ' adj' → logprob: -9.87086009979248
    9. '('' → logprob: -9.99586009979248
    10. ' opposite' → logprob: -11.37086009979248

Token 548: 'posite' (ID: 25800)
  Prédit: 'osite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osite' → logprob: -0.019000409170985222
    2. 'ose' → logprob: -4.26900053024292
    3. 'os' → logprob: -6.01900053024292
    4. 'posite' → logprob: -6.39400053024292
    5. '_to' → logprob: -9.269000053405762
    6. 'osit' → logprob: -9.644000053405762
    7. 'to' → logprob: -9.769000053405762
    8. '`' → logprob: -10.019000053405762
    9. '('' → logprob: -10.019000053405762
    10. 'adj' → logprob: -10.144000053405762

Token 549: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0013564289547502995
    2. '(' → logprob: -6.626356601715088
    3. '(
' → logprob: -10.50135612487793
    4. ' ('' → logprob: -13.12635612487793
    5. ''' → logprob: -14.50135612487793
    6. ' (' → logprob: -15.12635612487793
    7. '("' → logprob: -16.12635612487793
    8. '(('' → logprob: -17.12635612487793
    9. '(

' → logprob: -17.62635612487793
    10. ''s' → logprob: -17.62635612487793

Token 550: 'B' (ID: 33)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -8.73314929776825e-05
    2. '('' → logprob: -9.75008773803711
    3. ' '' → logprob: -11.12508773803711
    4. 'B' → logprob: -11.25008773803711
    5. '
' → logprob: -15.00008773803711
    6. ''S' → logprob: -15.12508773803711
    7. '"B' → logprob: -16.00008773803711
    8. ' ' → logprob: -16.37508773803711
    9. '   ' → logprob: -16.50008773803711
    10. ''A' → logprob: -16.62508773803711

Token 551: ''):
' (ID: 26539)
  Prédit: ''):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.12923885881900787
    2. ''):
' → logprob: -2.2542388439178467
    3. '')' → logprob: -5.004239082336426
    4. '):' → logprob: -5.254239082336426
    5. ')' → logprob: -5.629239082336426
    6. '):
' → logprob: -7.629239082336426
    7. ''' → logprob: -9.129239082336426
    8. '('' → logprob: -9.629239082336426
    9. ' '' → logprob: -10.379239082336426
    10. ''):
' → logprob: -10.754239082336426

Token 552: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.16411373019218445
    2. ' white' → logprob: -1.9141137599945068
    3. 'white' → logprob: -5.664113521575928
    4. ' ' → logprob: -8.664113998413086
    5. '                   ' → logprob: -9.039113998413086
    6. '                      ' → logprob: -10.914113998413086
    7. ' ' → logprob: -10.914113998413086
    8. '   ' → logprob: -11.039113998413086
    9. '                        ' → logprob: -11.664113998413086
    10. '                     ' → logprob: -11.789113998413086

Token 553: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' (adapté à ' white') → logprob: -0.12709000706672668
    2. ' white' → logprob: -2.1270899772644043
    3. '                       ' → logprob: -8.877090454101562
    4. '                   ' → logprob: -11.002090454101562
    5. '   ' → logprob: -13.377090454101562
    6. '白' → logprob: -14.002090454101562
    7. '               ' → logprob: -14.377090454101562
    8. '       ' → logprob: -15.127090454101562
    9. '                    ' → logprob: -15.127090454101562
    10. '
' → logprob: -15.127090454101562

Token 554: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.704273118884885e-07
    2. '\' → logprob: -15.875000953674316
    3. ' _' → logprob: -15.875000953674316
    4. '_counts' → logprob: -16.125
    5. '_' → logprob: -16.625
    6. '+' → logprob: -16.875
    7. '
' → logprob: -17.5
    8. '"_' → logprob: -17.5
    9. ''_' → logprob: -17.875
    10. '```' → logprob: -18.0

Token 555: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2519383430480957
    2. '+=' → logprob: -1.5019383430480957
    3. '   ' → logprob: -12.376937866210938
    4. '    ' → logprob: -13.501937866210938
    5. ']+=' → logprob: -13.501937866210938
    6. '+' → logprob: -13.751937866210938
    7. ' ' → logprob: -15.001937866210938
    8. ' ' → logprob: -15.126937866210938
    9. '  ' → logprob: -15.876937866210938
    10. ' +' → logprob: -16.126937866210938

Token 556: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614808320999146
    2. ' ' → logprob: -4.758615016937256
    3. '                   ' → logprob: -17.008615493774414
    4. '
' → logprob: -17.133615493774414
    5. '   ' → logprob: -17.133615493774414
    6. ' ' → logprob: -17.133615493774414
    7. '                       ' → logprob: -17.508615493774414
    8. '１' → logprob: -18.383615493774414
    9. '```' → logprob: -18.508615493774414
    10. '               ' → logprob: -18.633615493774414

Token 557: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.500051498413086
    4. '```' → logprob: -19.375051498413086
    5. '１' → logprob: -19.875051498413086
    6. '
' → logprob: -20.000051498413086
    7. '  ' → logprob: -20.125051498413086
    8. '۱' → logprob: -20.687551498413086
    9. '<|end|>' → logprob: -21.125051498413086
    10. '       ' → logprob: -21.250051498413086

Token 558: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010334976017475128
    2. '
' → logprob: -4.7603349685668945
    3. 'print' → logprob: -6.7603349685668945
    4. '        
' → logprob: -8.010334968566895
    5. '<|end|>' → logprob: -9.260334968566895
    6. '```' → logprob: -9.760334968566895
    7. '   ' → logprob: -10.760334968566895
    8. '  
' → logprob: -11.135334968566895
    9. '    
' → logprob: -11.635334968566895
    10. ' print' → logprob: -11.760334968566895

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007439327891916037
    2. '
' → logprob: -5.132439136505127
    3. '        
' → logprob: -7.257439136505127
    4. 'print' → logprob: -7.757439136505127
    5. '   ' → logprob: -8.382439613342285
    6. '```' → logprob: -9.507439613342285
    7. '    
' → logprob: -9.757439613342285
    8. '  
' → logprob: -11.882439613342285
    9. '            
' → logprob: -13.007439613342285
    10. '<|end|>' → logprob: -13.382439613342285

Token 560: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009344478603452444
    2. '       ' → logprob: -7.000934600830078
    3. '```' → logprob: -11.125934600830078
    4. ' print' → logprob: -12.250934600830078
    5. '   ' → logprob: -12.750934600830078
    6. '
' → logprob: -14.750934600830078
    7. '``' → logprob: -15.875934600830078
    8. '        
' → logprob: -16.500934600830078
    9. '	print' → logprob: -17.750934600830078
    10. 'printf' → logprob: -18.000934600830078

Token 561: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04861325025558472
    2. '(f' → logprob: -3.0486133098602295
    3. '((' → logprob: -11.423613548278809
    4. 'black' → logprob: -11.548613548278809
    5. '(w' → logprob: -13.298613548278809
    6. '(b' → logprob: -13.923613548278809
    7. 'f' → logprob: -13.923613548278809
    8. '(blank' → logprob: -14.423613548278809
    9. '('' → logprob: -15.048613548278809
    10. ' black' → logprob: -15.298613548278809

Token 562: 'black' (ID: 18474)
  Prédit: 'black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -4.990154047845863e-05
    2. 'f' → logprob: -10.250049591064453
    3. ' black' → logprob: -11.625049591064453
    4. 'b' → logprob: -12.625049591064453
    5. 'bw' → logprob: -13.500049591064453
    6. 'bl' → logprob: -14.375049591064453
    7. 'w' → logprob: -15.625049591064453
    8. 'white' → logprob: -17.625049591064453
    9. ':black' → logprob: -17.625049591064453
    10. '{' → logprob: -18.000049591064453

Token 563: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.1756367712223437e-05
    2. '_,' → logprob: -12.625011444091797
    3. ',_' → logprob: -12.875011444091797
    4. ',' → logprob: -13.125011444091797
    5. '_counts' → logprob: -13.625011444091797
    6. ''_' → logprob: -14.875011444091797
    7. ',count' → logprob: -14.875011444091797
    8. ')' → logprob: -15.000011444091797
    9. 'count' → logprob: -15.000011444091797
    10. '_' → logprob: -15.250011444091797

Token 564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002558561391197145
    2. ' ,' → logprob: -8.500255584716797
    3. ',end' → logprob: -10.500255584716797
    4. ')' → logprob: -11.500255584716797
    5. '   ' → logprob: -12.000255584716797
    6. ',"' → logprob: -12.750255584716797
    7. ',
' → logprob: -13.000255584716797
    8. ',",' → logprob: -13.500255584716797
    9. ',w' → logprob: -15.000255584716797
    10. ',int' → logprob: -15.500255584716797

Token 565: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -5.836499985889532e-05
    2. ' white' → logprob: -9.7500581741333
    3. '.white' → logprob: -20.125059127807617
    4. '白' → logprob: -21.375059127807617
    5. 'wh' → logprob: -21.625059127807617
    6. '_white' → logprob: -21.875059127807617
    7. 'White' → logprob: -22.125059127807617
    8. ')' → logprob: -22.125059127807617
    9. '   ' → logprob: -22.125059127807617
    10. ':white' → logprob: -22.625059127807617

Token 566: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.001991682220250368
    2. ')' → logprob: -6.6269917488098145
    3. '_' → logprob: -8.126991271972656
    4. '_)' → logprob: -8.751991271972656
    5. '_white' → logprob: -9.251991271972656
    6. 'white' → logprob: -10.126991271972656
    7. 'count' → logprob: -10.376991271972656
    8. 't' → logprob: -11.376991271972656
    9. ')_' → logprob: -11.376991271972656
    10. 'Count' → logprob: -12.126991271972656

Token 567: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020771251001860946
    2. '())' → logprob: -9.000207901000977
    3. '()' → logprob: -9.750207901000977
    4. ')
' → logprob: -11.125207901000977
    5. '<|end|>' → logprob: -12.000207901000977
    6. ' )' → logprob: -13.250207901000977
    7. '       ' → logprob: -14.750207901000977
    8. ')#' → logprob: -15.375207901000977
    9. '```' → logprob: -15.375207901000977
    10. '`)' → logprob: -15.500207901000977

Token 568: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 569: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.043049659579992294
    2. '__' → logprob: -3.1680495738983154
    3. '_' → logprob: -10.418049812316895
    4. ' ' → logprob: -11.168049812316895
    5. '___' → logprob: -13.293049812316895
    6. ' ' → logprob: -13.918049812316895
    7. ' _' → logprob: -14.043049812316895
    8. ' ' → logprob: -14.043049812316895
    9. '_name' → logprob: -14.168049812316895
    10. '​' → logprob: -15.043049812316895

Token 570: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.41799798607826233
    2. ' ==' → logprob: -1.29299795627594
    3. '==' → logprob: -2.9179980754852295
    4. '=="' → logprob: -5.04299783706665
    5. 'name' → logprob: -5.79299783706665
    6. ' __' → logprob: -6.04299783706665
    7. '=='' → logprob: -8.042998313903809
    8. ' =="' → logprob: -8.667998313903809
    9. '__.__' → logprob: -9.042998313903809
    10. '()==' → logprob: -9.542998313903809

Token 571: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00024715426843613386
    2. '==' → logprob: -8.50024700164795
    3. ' ==' → logprob: -10.87524700164795
    4. '__.__' → logprob: -11.00024700164795
    5. '=="' → logprob: -12.50024700164795
    6. '=='' → logprob: -13.50024700164795
    7. '__.' → logprob: -14.37524700164795
    8. '__('' → logprob: -14.50024700164795
    9. '___' → logprob: -14.75024700164795
    10. '_' → logprob: -14.87524700164795

Token 572: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07751606404781342
    2. '==' → logprob: -3.3275160789489746
    3. '=="' → logprob: -3.5775160789489746
    4. ' ==' → logprob: -4.577516078948975
    5. '=='' → logprob: -7.952516078948975
    6. '_' → logprob: -9.452515602111816
    7. '___' → logprob: -11.202515602111816
    8. '==
' → logprob: -11.952515602111816
    9. '__.__' → logprob: -12.077515602111816
    10. '=' → logprob: -12.202515602111816

Token 573: '__' (ID: 771)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.026350462809205055
    2. ''' → logprob: -3.776350498199463
    3. '__' → logprob: -5.776350498199463
    4. ' "__' → logprob: -16.401350021362305
    5. '   ' → logprob: -17.901350021362305
    6. 'main' → logprob: -18.526350021362305
    7. ' ' → logprob: -19.901350021362305
    8. '"name' → logprob: -20.151350021362305
    9. '/__' → logprob: -20.151350021362305
    10. ' '__' → logprob: -20.276350021362305

Token 574: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005601812736131251
    2. '"' → logprob: -7.500560283660889
    3. ''' → logprob: -12.50055980682373
    4. 'name' → logprob: -13.00055980682373
    5. '__' → logprob: -14.25055980682373
    6. '"name' → logprob: -14.75055980682373
    7. '_main' → logprob: -16.750560760498047
    8. ' main' → logprob: -17.250560760498047
    9. 'MAIN' → logprob: -18.125560760498047
    10. ''name' → logprob: -18.500560760498047

Token 575: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.9253878593444824
    2. '__":
' → logprob: -1.0503878593444824
    3. ':' → logprob: -1.6753878593444824
    4. ':
' → logprob: -3.1753878593444824
    5. '__:' → logprob: -4.300387859344482
    6. '():
' → logprob: -4.800387859344482
    7. '__':
' → logprob: -6.425387859344482
    8. '():' → logprob: -8.55038833618164
    9. '__
' → logprob: -8.80038833618164
    10. '_' → logprob: -8.92538833618164

Token 576: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013659288175404072
    2. ' solve' → logprob: -4.638659477233887
    3. 'solve' → logprob: -5.638659477233887
    4. '.solve' → logprob: -8.888659477233887
    5. '    
' → logprob: -9.138659477233887
    6. '```' → logprob: -10.513659477233887
    7. '	s' → logprob: -10.638659477233887
    8. '   ' → logprob: -11.138659477233887
    9. '<|end|>' → logprob: -12.138659477233887
    10. '
' → logprob: -12.388659477233887

Token 577: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -9.088346359931165e-07
    2. ' solve' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.000000953674316
    4. '.solve' → logprob: -18.5
    5. 'import' → logprob: -18.75
    6. 'resolve' → logprob: -19.875
    7. '    
' → logprob: -22.125
    8. 'try' → logprob: -22.75
    9. '```' → logprob: -22.875
    10. '  ' → logprob: -23.0

Token 578: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 576
Tokens correctement prédits (1ère position, stricte): 325
Tokens correctement prédits (1ère position, avec adaptation): 344
Tokens correctement prédits (top 10): 509
Précision stricte (1ère position): 56.42%
Précision adaptée (1ère position): 59.72%
Précision (top 10): 88.37%
================================================================================
