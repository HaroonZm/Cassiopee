================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter
import sys

numbers = []
for line in sys.stdin:
    line = line.strip()
    if line.isdigit():
        numbers.append(int(line))

count = Counter(numbers)
max_freq = max(count.values())
modes = [num for num, freq in count.items() if freq == max_freq]
modes.sort()
for mode in modes:
    print(mode)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.408840298652649
    2. 'abc' → logprob: -1.408840298652649
    3. 'deque' → logprob: -1.408840298652649
    4. 'Counter' → logprob: -2.1588401794433594
    5. ' defaultdict' → logprob: -2.1588401794433594
    6. ' Counter' → logprob: -4.033840179443359
    7. ' abc' → logprob: -4.658840179443359
    8. 'named' → logprob: -5.533840179443359
    9. ' deque' → logprob: -6.283840179443359
    10. '```' → logprob: -6.783840179443359

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008525127195753157
    2. '.' → logprob: -7.625852584838867
    3. '\(' → logprob: -8.500852584838867
    4. '\' → logprob: -10.375852584838867
    5. '```' → logprob: -10.625852584838867
    6. 'a' → logprob: -10.875852584838867
    7. ' (' → logprob: -11.000852584838867
    8. 'newline' → logprob: -11.125852584838867
    9. '(
' → logprob: -11.500852584838867
    10. '\n' → logprob: -11.625852584838867

Token 5: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004678849596530199
    2. '(
' → logprob: -6.754678726196289
    3. '.' → logprob: -7.129678726196289
    4. 'a' → logprob: -7.629678726196289
    5. 'newline' → logprob: -7.629678726196289
    6. '\n' → logprob: -8.379678726196289
    7. 'C' → logprob: -8.379678726196289
    8. '\' → logprob: -8.629678726196289
    9. '```' → logprob: -8.879678726196289
    10. '\(' → logprob: -9.004678726196289

Token 6: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5235030055046082
    2. ' ' → logprob: -1.773503065109253
    3. ' collections' → logprob: -1.898503065109253
    4. ' re' → logprob: -2.773503065109253
    5. ' sys' → logprob: -4.523502826690674
    6. ' itertools' → logprob: -5.398502826690674
    7. ' json' → logprob: -5.773502826690674
    8. ' pandas' → logprob: -5.773502826690674
    9. ' math' → logprob: -6.648502826690674
    10. ' random' → logprob: -6.898502826690674

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5289561748504639
    2. '\' → logprob: -1.5289561748504639
    3. '.' → logprob: -1.9039561748504639
    4. '```' → logprob: -4.653956413269043
    5. 'newline' → logprob: -4.778956413269043
    6. '
' → logprob: -5.028956413269043
    7. 'for' → logprob: -5.528956413269043
    8. 'import' → logprob: -5.528956413269043
    9. 'print' → logprob: -5.903956413269043
    10. '.readline' → logprob: -6.403956413269043

Token 8: 'numbers' (ID: 85055)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3000144362449646
    2. 'for' → logprob: -2.5500144958496094
    3. 'data' → logprob: -3.1750144958496094
    4. '`' → logprob: -3.6750144958496094
    5. '```' → logprob: -3.9250144958496094
    6. '[' → logprob: -4.050014495849609
    7. 'print' → logprob: -4.300014495849609
    8. '\' → logprob: -4.425014495849609
    9. ',' → logprob: -4.800014495849609
    10. 'def' → logprob: -5.050014495849609

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32049182057380676
    2. '.' → logprob: -1.6954917907714844
    3. '(' → logprob: -3.0704917907714844
    4. '=' → logprob: -3.3204917907714844
    5. ' =' → logprob: -5.195491790771484
    6. ')' → logprob: -6.695491790771484
    7. '[]' → logprob: -8.070491790771484
    8. '[:]' → logprob: -8.070491790771484
    9. ']' → logprob: -8.445491790771484
    10. '```' → logprob: -8.820491790771484

Token 10: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.31228044629096985
    2. ' [' → logprob: -1.4372804164886475
    3. ' list' → logprob: -4.687280654907227
    4. ' Counter' → logprob: -5.062280654907227
    5. '[' → logprob: -5.312280654907227
    6. '[]' → logprob: -5.312280654907227
    7. ' ' → logprob: -5.437280654907227
    8. 'Counter' → logprob: -7.937280654907227
    9. 'list' → logprob: -8.312280654907227
    10. ' map' → logprob: -9.562280654907227

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007831734605133533
    2. ' for' → logprob: -5.007831573486328
    3. 'input' → logprob: -8.257831573486328
    4. 'n' → logprob: -8.757831573486328
    5. 'numbers' → logprob: -8.757831573486328
    6. 'data' → logprob: -8.882831573486328
    7. '\n' → logprob: -9.382831573486328
    8. '```' → logprob: -9.632831573486328
    9. 'if' → logprob: -9.882831573486328
    10. 'f' → logprob: -10.632831573486328

Token 12: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007173294201493263
    2. ' i' → logprob: -5.38217306137085
    3. ' line' → logprob: -6.88217306137085
    4. '  ' → logprob: -7.63217306137085
    5. ' num' → logprob: -7.88217306137085
    6. ' n' → logprob: -8.132173538208008
    7. ' number' → logprob: -8.257173538208008
    8. ' _' → logprob: -10.507173538208008
    9. ' ' → logprob: -10.507173538208008
    10. ' numbers' → logprob: -11.132173538208008

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009225384565070271
    2. 'in' → logprob: -7.000922679901123
    3. ' ' → logprob: -11.875922203063965
    4. ' =' → logprob: -14.125922203063965
    5. '_in' → logprob: -14.375922203063965
    6. '```' → logprob: -14.875922203063965
    7. ',' → logprob: -15.250922203063965
    8. '_' → logprob: -15.500922203063965
    9. ' ,' → logprob: -15.563422203063965
    10. '	in' → logprob: -15.688422203063965

Token 14: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3484894335269928
    2. 'sys' → logprob: -1.2234894037246704
    3. '=sys' → logprob: -10.723489761352539
    4. '	sys' → logprob: -10.973489761352539
    5. '(sys' → logprob: -12.848489761352539
    6. '```' → logprob: -13.598489761352539
    7. ' ' → logprob: -14.598489761352539
    8. 'stdin' → logprob: -14.723489761352539
    9. ' iter' → logprob: -15.223489761352539
    10. 'iter' → logprob: -15.848489761352539

Token 15: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006268949946388602
    2. '.' → logprob: -7.875627040863037
    3. '.readline' → logprob: -8.625626564025879
    4. '.stdout' → logprob: -10.625626564025879
    5. ' .' → logprob: -11.125626564025879
    6. 'stdin' → logprob: -11.500626564025879
    7. '.argv' → logprob: -12.000626564025879
    8. '.readlines' → logprob: -12.500626564025879
    9. ' stdin' → logprob: -13.250626564025879
    10. '.std' → logprob: -13.500626564025879

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010456704767420888
    2. '.readline' → logprob: -7.1260457038879395
    3. ':
' → logprob: -8.876045227050781
    4. '.strip' → logprob: -10.501045227050781
    5. '.rstrip' → logprob: -11.001045227050781
    6. '.readlines' → logprob: -11.001045227050781
    7. ' :' → logprob: -11.376045227050781
    8. '.split' → logprob: -11.376045227050781
    9. ':**' → logprob: -11.626045227050781
    10. '.' → logprob: -12.626045227050781

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03912894427776337
    2. ' numbers' → logprob: -3.2891290187835693
    3. ' line' → logprob: -7.91412878036499
    4. 'numbers' → logprob: -8.414129257202148
    5. '    
' → logprob: -9.414129257202148
    6. ' n' → logprob: -9.664129257202148
    7. ' if' → logprob: -9.789129257202148
    8. 'n' → logprob: -10.039129257202148
    9. ' tokens' → logprob: -10.289129257202148
    10. '<|end|>' → logprob: -10.289129257202148

Token 18: ' line' (ID: 2543)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.06522693485021591
    2. '   ' → logprob: -3.3152270317077637
    3. ' line' → logprob: -4.190227031707764
    4. 'numbers' → logprob: -4.565227031707764
    5. ' number' → logprob: -7.815227031707764
    6. ' if' → logprob: -8.315226554870605
    7. ' n' → logprob: -8.940226554870605
    8. '    ' → logprob: -9.565226554870605
    9. ' num' → logprob: -9.565226554870605
    10. ' tokens' → logprob: -9.690226554870605

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48747333884239197
    2. '.strip' → logprob: -1.3624733686447144
    3. ' =' → logprob: -2.112473249435425
    4. '.' → logprob: -5.362473487854004
    5. '.rstrip' → logprob: -5.862473487854004
    6. 'strip' → logprob: -8.112473487854004
    7. '_strip' → logprob: -8.112473487854004
    8. '.split' → logprob: -8.862473487854004
    9. '=line' → logprob: -8.987473487854004
    10. 'split' → logprob: -9.362473487854004

Token 20: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.008615042082965374
    2. 'line' → logprob: -4.758615016937256
    3. '	line' → logprob: -15.008615493774414
    4. '=line' → logprob: -15.758615493774414
    5. '(line' → logprob: -16.883615493774414
    6. '   ' → logprob: -17.508615493774414
    7. '#line' → logprob: -18.383615493774414
    8. ' ' → logprob: -18.758615493774414
    9. '[line' → logprob: -18.758615493774414
    10. '    ' → logprob: -19.758615493774414

Token 21: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.005028932821005583
    2. '.' → logprob: -5.50502872467041
    3. '.rstrip' → logprob: -7.00502872467041
    4. 'strip' → logprob: -10.13002872467041
    5. '.split' → logprob: -13.50502872467041
    6. ' .' → logprob: -14.38002872467041
    7. 'rstrip' → logprob: -14.38002872467041
    8. ' strip' → logprob: -15.75502872467041
    9. '.readline' → logprob: -16.005029678344727
    10. '.lower' → logprob: -17.255029678344727

Token 22: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007049248553812504
    2. '(' → logprob: -5.007049083709717
    3. '('' → logprob: -9.132049560546875
    4. '()`' → logprob: -10.007049560546875
    5. '"' → logprob: -10.382049560546875
    6. '`()' → logprob: -10.757049560546875
    7. '()"' → logprob: -11.257049560546875
    8. '().' → logprob: -11.382049560546875
    9. ' parentheses' → logprob: -11.507049560546875
    10. ''' → logprob: -11.507049560546875

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18128451704978943
    2. ' if' → logprob: -1.9312845468521118
    3. 'if' → logprob: -4.056284427642822
    4. '<|end|>' → logprob: -6.431284427642822
    5. '    
' → logprob: -7.681284427642822
    6. '    ' → logprob: -8.18128490447998
    7. '```' → logprob: -8.43128490447998
    8. 'numbers' → logprob: -8.93128490447998
    9. '<|end|>' → logprob: -8.93128490447998
    10. 'tokens' → logprob: -9.05628490447998

Token 24: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01886192336678505
    2. ' if' → logprob: -4.018861770629883
    3. 'numbers' → logprob: -7.268861770629883
    4. '   ' → logprob: -12.268861770629883
    5. ' numbers' → logprob: -12.768861770629883
    6. '```' → logprob: -13.018861770629883
    7. '<|end|>' → logprob: -13.518861770629883
    8. 'If' → logprob: -13.643861770629883
    9. 'tokens' → logprob: -13.768861770629883
    10. '<|end|>' → logprob: -15.018861770629883

Token 25: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011549832299351692
    2. 'not' → logprob: -4.636549949645996
    3. ' line' → logprob: -6.386549949645996
    4. 'line' → logprob: -9.261549949645996
    5. ' ' → logprob: -11.511549949645996
    6. ' len' → logprob: -13.011549949645996
    7. '<|end|>' → logprob: -15.011549949645996
    8. 'len' → logprob: -16.01154899597168
    9. ' ' → logprob: -16.51154899597168
    10. '(line' → logprob: -16.51154899597168

Token 26: '.is' (ID: 3109)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5109465718269348
    2. '.startswith' → logprob: -1.51094651222229
    3. '==' → logprob: -2.26094651222229
    4. '<|end|>' → logprob: -3.01094651222229
    5. ':' → logprob: -4.635946750640869
    6. '<|end|>' → logprob: -4.760946750640869
    7. '.endswith' → logprob: -5.260946750640869
    8. '.' → logprob: -7.260946750640869
    9. ' !=' → logprob: -8.010946273803711
    10. ')' → logprob: -8.385946273803711

Token 27: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.00022606621496379375
    2. 'decimal' → logprob: -8.500226020812988
    3. 'numeric' → logprob: -10.750226020812988
    4. 'alpha' → logprob: -14.500226020812988
    5. 'digits' → logprob: -15.000226020812988
    6. 'al' → logprob: -16.375226974487305
    7. '_digit' → logprob: -16.875226974487305
    8. ' digit' → logprob: -17.125226974487305
    9. 'digital' → logprob: -17.500226974487305
    10. 'dig' → logprob: -17.500226974487305

Token 28: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12744541466236115
    2. '():' → logprob: -2.1274454593658447
    3. '(' → logprob: -7.627445220947266
    4. '())' → logprob: -11.627445220947266
    5. '()>' → logprob: -12.627445220947266
    6. '()==' → logprob: -12.877445220947266
    7. '():
' → logprob: -13.002445220947266
    8. '()(' → logprob: -13.002445220947266
    9. '('' → logprob: -13.127445220947266
    10. '()?' → logprob: -13.502445220947266

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007194612408056855
    2. ' numbers' → logprob: -7.7507195472717285
    3. 'numbers' → logprob: -8.75071907043457
    4. '(numbers' → logprob: -10.00071907043457
    5. '   ' → logprob: -10.25071907043457
    6. '```' → logprob: -10.50071907043457
    7. '    ' → logprob: -13.00071907043457
    8. '      ' → logprob: -13.12571907043457
    9. '           ' → logprob: -13.25071907043457
    10. 'n' → logprob: -13.25071907043457

Token 30: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.04533927142620087
    2. '           ' → logprob: -3.670339345932007
    3. 'numbers' (adapté à ' numbers') → logprob: -4.420339107513428
    4. '       ' → logprob: -5.420339107513428
    5. '   ' → logprob: -6.170339107513428
    6. '(numbers' → logprob: -9.295339584350586
    7. ' ' → logprob: -10.045339584350586
    8. '    ' → logprob: -10.295339584350586
    9. '```' → logprob: -10.295339584350586
    10. ' ' → logprob: -10.670339584350586

Token 31: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011501750908792019
    2. '.' → logprob: -4.511501789093018
    3. '.extend' → logprob: -7.761501789093018
    4. ' .' → logprob: -10.76150131225586
    5. '.add' → logprob: -12.76150131225586
    6. '.app' → logprob: -13.51150131225586
    7. '.setdefault' → logprob: -14.26150131225586
    8. '.ap' → logprob: -14.51150131225586
    9. '   ' → logprob: -14.63650131225586
    10. '.Append' → logprob: -15.88650131225586

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0060662562027573586
    2. '(' → logprob: -5.13106632232666
    3. '(line' → logprob: -9.00606632232666
    4. 'int' → logprob: -12.38106632232666
    5. ' (' → logprob: -12.63106632232666
    6. '((' → logprob: -13.50606632232666
    7. '(in' → logprob: -13.63106632232666
    8. '(i' → logprob: -13.63106632232666
    9. '("("' → logprob: -14.13106632232666
    10. '(
' → logprob: -14.75606632232666

Token 33: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.06197149679064751
    2. '(' → logprob: -2.811971426010132
    3. '(
' → logprob: -14.186971664428711
    4. ')' → logprob: -14.436971664428711
    5. ' line' → logprob: -14.936971664428711
    6. 'line' → logprob: -14.936971664428711
    7. '(

' → logprob: -15.186971664428711
    8. '(token' → logprob: -15.436971664428711
    9. '(lines' → logprob: -15.561971664428711
    10. ')(' → logprob: -15.686971664428711

Token 34: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3869549036026001
    2. ')' → logprob: -1.1369549036026
    3. ')))' → logprob: -9.636955261230469
    4. '   ' → logprob: -12.136955261230469
    5. ')
' → logprob: -12.511955261230469
    6. ' ))' → logprob: -12.511955261230469
    7. '))
' → logprob: -12.761955261230469
    8. ' )' → logprob: -13.636955261230469
    9. '()))' → logprob: -15.011955261230469
    10. '),' → logprob: -15.386955261230469

Token 35: 'count' (ID: 5420)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.02841089852154255
    2. 'counts' → logprob: -4.028410911560059
    3. 'count' → logprob: -4.653410911560059
    4. 'frequency' → logprob: -7.903410911560059
    5. 'c' → logprob: -8.778410911560059
    6. 'freq' → logprob: -9.278410911560059
    7. ' counter' → logprob: -10.653410911560059
    8. 'result' → logprob: -11.403410911560059
    9. 'if' → logprob: -11.528410911560059
    10. 'cnt' → logprob: -12.528410911560059

Token 36: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11291005462408066
    2. '(' → logprob: -2.237910032272339
    3. 'er' → logprob: -9.737910270690918
    4. '(s' → logprob: -11.112910270690918
    5. '(
' → logprob: -12.737910270690918
    6. '=' → logprob: -12.862910270690918
    7. ')' → logprob: -13.362910270690918
    8. 'S' → logprob: -13.362910270690918
    9. '('' → logprob: -13.487910270690918
    10. ' (' → logprob: -15.112910270690918

Token 37: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.003178306156769395
    2. ' Counter' → logprob: -5.753178119659424
    3. '.Counter' → logprob: -14.878178596496582
    4. 'counter' → logprob: -16.878177642822266
    5. 'Counters' → logprob: -17.128177642822266
    6. ' ' → logprob: -17.253177642822266
    7. '(C' → logprob: -17.503177642822266
    8. 'Count' → logprob: -17.628177642822266
    9. '```' → logprob: -17.628177642822266
    10. ' counter' → logprob: -17.878177642822266

Token 38: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.029757777228951454
    2. '(' → logprob: -3.5297577381134033
    3. '(count' → logprob: -13.154757499694824
    4. '(number' → logprob: -13.154757499694824
    5. ' (' → logprob: -13.404757499694824
    6. '(
' → logprob: -13.779757499694824
    7. '(n' → logprob: -15.029757499694824
    8. 'numbers' → logprob: -16.27975845336914
    9. '(nums' → logprob: -16.40475845336914
    10. '(num' → logprob: -16.65475845336914

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. '(' → logprob: -11.750016212463379
    3. '[' → logprob: -12.875016212463379
    4. '))' → logprob: -13.125016212463379
    5. ' )' → logprob: -13.250016212463379
    6. ').' → logprob: -14.625016212463379
    7. ')
' → logprob: -15.625016212463379
    8. ']' → logprob: -15.750016212463379
    9. '()' → logprob: -15.875016212463379
    10. ')`' → logprob: -15.875016212463379

Token 40: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4622315466403961
    2. 'most' → logprob: -1.4622315168380737
    3. 'print' → logprob: -2.4622316360473633
    4. ' for' → logprob: -3.9622316360473633
    5. 'max' → logprob: -4.462231636047363
    6. 'common' → logprob: -5.087231636047363
    7. '
' → logprob: -5.462231636047363
    8. ' most' → logprob: -5.587231636047363
    9. 'mode' → logprob: -6.337231636047363
    10. 'result' → logprob: -6.587231636047363

Token 41: '_freq' (ID: 51889)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.4896431565284729
    2. '_' → logprob: -1.6146430969238281
    3. '(count' → logprob: -1.9896430969238281
    4. '_key' → logprob: -3.614643096923828
    5. '(' → logprob: -4.239643096923828
    6. '_value' → logprob: -6.239643096923828
    7. 'count' → logprob: -6.239643096923828
    8. '_counter' → logprob: -6.864643096923828
    9. '_token' → logprob: -6.989643096923828
    10. '_counts' → logprob: -7.114643096923828

Token 42: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3607866168022156
    2. ' =' → logprob: -1.7357866764068604
    3. '=' → logprob: -2.2357866764068604
    4. '(' → logprob: -4.735786437988281
    5. ')' → logprob: -5.110786437988281
    6. '_count' → logprob: -6.485786437988281
    7. '_freq' → logprob: -7.485786437988281
    8. '_counts' → logprob: -7.610786437988281
    9. '_=' → logprob: -8.235786437988281
    10. '_val' → logprob: -8.360786437988281

Token 43: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.028161760419607162
    2. ' max' → logprob: -4.278161525726318
    3. 'count' → logprob: -4.278161525726318
    4. ' count' → logprob: -10.403162002563477
    5. 'counter' → logprob: -13.403162002563477
    6. '(max' → logprob: -15.528162002563477
    7. ' ' → logprob: -15.653162002563477
    8. '=max' → logprob: -15.778162002563477
    9. 'min' → logprob: -16.528162002563477
    10. '	max' → logprob: -16.653162002563477

Token 44: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.02061440795660019
    2. '(' → logprob: -3.8956143856048584
    3. 'count' → logprob: -10.270614624023438
    4. ' (' → logprob: -10.520614624023438
    5. '(
' → logprob: -12.395614624023438
    6. '(counter' → logprob: -12.770614624023438
    7. '(max' → logprob: -13.395614624023438
    8. ' count' → logprob: -14.520614624023438
    9. '(

' → logprob: -15.270614624023438
    10. '_count' → logprob: -15.520614624023438

Token 45: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -8.756989700486884e-05
    2. 'values' → logprob: -9.50008773803711
    3. '.' → logprob: -11.50008773803711
    4. ' values' → logprob: -14.25008773803711
    5. ' .' → logprob: -14.37508773803711
    6. '.value' → logprob: -14.62508773803711
    7. ')' → logprob: -14.62508773803711
    8. ').' → logprob: -14.75008773803711
    9. '_values' → logprob: -17.37508773803711
    10. '.Values' → logprob: -17.50008773803711

Token 46: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003286678809672594
    2. ')' → logprob: -6.003286838531494
    3. '()' → logprob: -7.128286838531494
    4. ' ())' → logprob: -12.378286361694336
    5. '()))' → logprob: -13.128286361694336
    6. '())
' → logprob: -14.253286361694336
    7. ' )' → logprob: -14.503286361694336
    8. '(),' → logprob: -14.878286361694336
    9. '(' → logprob: -15.503286361694336
    10. '();)' → logprob: -15.753286361694336

Token 47: 'm' (ID: 76)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7239246368408203
    2. '
' → logprob: -1.4739246368408203
    3. 'most' → logprob: -1.5989246368408203
    4. ' 
' → logprob: -3.0989246368408203
    5. ' most' → logprob: -3.9739246368408203
    6. 'for' → logprob: -5.84892463684082
    7. 'result' → logprob: -5.97392463684082
    8. '  
' → logprob: -6.09892463684082
    9. '<|end|>' → logprob: -6.22392463684082
    10. ' max' → logprob: -6.34892463684082

Token 48: 'odes' (ID: 3821)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.13185113668441772
    2. 'odes' → logprob: -2.2568511962890625
    3. 'ode' → logprob: -4.5068511962890625
    4. 'ax' → logprob: -5.1318511962890625
    5. '#' → logprob: -8.381851196289062
    6. '```' → logprob: -8.631851196289062
    7. 'odal' → logprob: -8.756851196289062
    8. 'ajor' → logprob: -8.881851196289062
    9. 'odus' → logprob: -9.006851196289062
    10. 'most' → logprob: -9.319351196289062

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009138475870713592
    2. '=' → logprob: -7.000913619995117
    3. '_' → logprob: -14.000913619995117
    4. ' =[' → logprob: -15.000913619995117
    5. ' =
' → logprob: -15.125913619995117
    6. ' ' → logprob: -15.500913619995117
    7. ' ' → logprob: -15.625913619995117
    8. '=[]' → logprob: -15.750913619995117
    9. 's' → logprob: -15.875913619995117
    10. '.' → logprob: -15.875913619995117

Token 50: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.22848272323608398
    2. '[key' → logprob: -2.603482723236084
    3. '[k' → logprob: -3.103482723236084
    4. '[' → logprob: -3.103482723236084
    5. '[token' → logprob: -4.478482723236084
    6. '[count' → logprob: -4.603482723236084
    7. '[number' → logprob: -5.603482723236084
    8. '[num' → logprob: -6.103482723236084
    9. '[n' → logprob: -6.228482723236084
    10. '[i' → logprob: -6.228482723236084

Token 51: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0013457079185172915
    2. 'k' → logprob: -7.626345634460449
    3. 'number' → logprob: -8.00134563446045
    4. 'x' → logprob: -8.00134563446045
    5. 'key' → logprob: -9.50134563446045
    6. 'n' → logprob: -9.75134563446045
    7. ' num' → logprob: -9.87634563446045
    8. '```' → logprob: -13.62634563446045
    9. '   ' → logprob: -14.37634563446045
    10. ' number' → logprob: -14.75134563446045

Token 52: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008618239313364029
    2. 'for' → logprob: -4.758618354797363
    3. ' ' → logprob: -12.633618354797363
    4. '	for' → logprob: -15.383618354797363
    5. '```' → logprob: -15.883618354797363
    6. ' ' → logprob: -16.258617401123047
    7. ',' → logprob: -16.758617401123047
    8. '
' → logprob: -17.633617401123047
    9. '   ' → logprob: -17.758617401123047
    10. 'or' → logprob: -17.758617401123047

Token 53: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.21564684808254242
    2. 'num' → logprob: -1.7156468629837036
    3. ',num' → logprob: -4.840646743774414
    4. ',' → logprob: -5.090646743774414
    5. '	num' → logprob: -10.715646743774414
    6. ' ,' → logprob: -10.715646743774414
    7. ' in' → logprob: -10.965646743774414
    8. '(num' → logprob: -12.715646743774414
    9. '<num' → logprob: -12.715646743774414
    10. ' ' → logprob: -12.840646743774414

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008302362984977663
    2. ',count' → logprob: -7.625830173492432
    3. ' in' → logprob: -8.12583065032959
    4. ',num' → logprob: -10.87583065032959
    5. ' ,' → logprob: -11.12583065032959
    6. ',value' → logprob: -11.75083065032959
    7. ' ' → logprob: -14.50083065032959
    8. 'in' → logprob: -14.50083065032959
    9. ',val' → logprob: -14.62583065032959
    10. 'count' → logprob: -14.87583065032959

Token 55: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.5759469866752625
    2. 'freq' → logprob: -0.8259469866752625
    3. ' cnt' → logprob: -12.700946807861328
    4. 'cnt' → logprob: -13.075946807861328
    5. '_freq' → logprob: -14.075946807861328
    6. 'fre' → logprob: -14.450946807861328
    7. ' fre' → logprob: -15.200946807861328
    8. '(freq' → logprob: -15.200946807861328
    9. ' frequency' → logprob: -15.575946807861328
    10. 'frequency' → logprob: -15.950946807861328

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07890025526285172
    2. 'in' → logprob: -2.5789003372192383
    3. ' ' → logprob: -12.453900337219238
    4. '	in' → logprob: -13.453900337219238
    5. ',' → logprob: -13.578900337219238
    6. 'inthe' → logprob: -14.078900337219238
    7. '<|end|>' → logprob: -14.891400337219238
    8. 'import' → logprob: -15.328900337219238
    9. '```' → logprob: -15.328900337219238
    10. 'count' → logprob: -15.766400337219238

Token 57: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.20141352713108063
    2. ' count' → logprob: -1.7014135122299194
    3. '[count' → logprob: -16.076414108276367
    4. '=count' → logprob: -16.451414108276367
    5. ' ' → logprob: -17.076414108276367
    6. 'counter' → logprob: -17.451414108276367
    7. '	count' → logprob: -17.701414108276367
    8. '(count' → logprob: -17.701414108276367
    9. 'c' → logprob: -18.201414108276367
    10. '```' → logprob: -18.326414108276367

Token 58: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0432814285159111
    2. 'items' → logprob: -3.168281316757202
    3. ' in' → logprob: -8.668281555175781
    4. '.iteritems' → logprob: -10.043281555175781
    5. 'in' → logprob: -10.668281555175781
    6. ' items' → logprob: -10.918281555175781
    7. '_items' → logprob: -11.668281555175781
    8. ' .' → logprob: -12.043281555175781
    9. '.' → logprob: -12.293281555175781
    10. ' ' → logprob: -13.168281555175781

Token 59: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.7994282795116305e-05
    2. '()]' → logprob: -10.62504768371582
    3. ' ()' → logprob: -11.50004768371582
    4. 'if' → logprob: -12.00004768371582
    5. '(' → logprob: -13.00004768371582
    6. ' if' → logprob: -13.00004768371582
    7. ')' → logprob: -14.25004768371582
    8. 'items' → logprob: -14.62504768371582
    9. ']' → logprob: -14.75004768371582
    10. 'in' → logprob: -15.75004768371582

Token 60: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.001057698973454535
    2. 'if' → logprob: -6.8760576248168945
    3. ' ' → logprob: -10.751057624816895
    4. '   ' → logprob: -13.501057624816895
    5. ' in' → logprob: -13.626057624816895
    6. '	if' → logprob: -15.376057624816895
    7. '    ' → logprob: -15.501057624816895
    8. '  ' → logprob: -15.626057624816895
    9. ')' → logprob: -16.62605857849121
    10. ' for' → logprob: -16.87605857849121

Token 61: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.008616345934569836
    2. 'freq' → logprob: -4.7586164474487305
    3. '(freq' → logprob: -13.38361644744873
    4. ' frequency' → logprob: -16.133615493774414
    5. ' fre' → logprob: -16.508615493774414
    6. 'fre' → logprob: -16.633615493774414
    7. ' ' → logprob: -18.008615493774414
    8. '.freq' → logprob: -18.633615493774414
    9. ' fq' → logprob: -18.633615493774414
    10. '_freq' → logprob: -19.008615493774414

Token 62: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38694193959236145
    2. ' ==' → logprob: -1.136941909790039
    3. '=' → logprob: -9.636941909790039
    4. ']==' → logprob: -12.761941909790039
    5. '===' → logprob: -14.136941909790039
    6. '==
' → logprob: -14.136941909790039
    7. ' =' → logprob: -14.636941909790039
    8. ' ' → logprob: -14.886941909790039
    9. ')==' → logprob: -14.886941909790039
    10. '()==' → logprob: -16.13694190979004

Token 63: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.07888978719711304
    2. 'max' → logprob: -2.578889846801758
    3. '=max' → logprob: -17.953889846801758
    4. ' ' → logprob: -18.453889846801758
    5. '(max' → logprob: -19.203889846801758
    6. ' ' → logprob: -19.328889846801758
    7. '[max' → logprob: -19.453889846801758
    8. '	max' → logprob: -19.578889846801758
    9. '_max' → logprob: -19.953889846801758
    10. 'm' → logprob: -20.578889846801758

Token 64: '_freq' (ID: 51889)
  Prédit: '_freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -2.696889623621246e-06
    2. '_f' → logprob: -13.62500286102295
    3. 'freq' → logprob: -14.37500286102295
    4. '_FREQ' → logprob: -15.12500286102295
    5. '```' → logprob: -16.125001907348633
    6. '_' → logprob: -16.125001907348633
    7. '_prob' → logprob: -16.500001907348633
    8. '_frequency' → logprob: -16.625001907348633
    9. ')' → logprob: -17.000001907348633
    10. '_max' → logprob: -17.125001907348633

Token 65: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.574251918005757e-05
    2. ' ]' → logprob: -10.250055313110352
    3. ']
' → logprob: -11.000055313110352
    4. ']

' → logprob: -12.750055313110352
    5. ']
' → logprob: -15.500055313110352
    6. '}' → logprob: -16.62505531311035
    7. ')' → logprob: -16.62505531311035
    8. ')]' → logprob: -16.75005531311035
    9. '()]' → logprob: -17.25005531311035
    10. '])' → logprob: -17.75005531311035

Token 66: 'm' (ID: 76)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.033104971051216125
    2. 'm' → logprob: -3.53310489654541
    3. 'if' → logprob: -6.53310489654541
    4. ' modes' → logprob: -7.03310489654541
    5. 'result' → logprob: -7.78310489654541
    6. 'mode' → logprob: -8.53310489654541
    7. '```' → logprob: -8.53310489654541
    8. 'for' → logprob: -9.90810489654541
    9. 'min' → logprob: -10.28310489654541
    10. ' print' → logprob: -10.65810489654541

Token 67: 'odes' (ID: 3821)
  Prédit: 'odes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odes' → logprob: -9.102680633077398e-05
    2. 'ode' → logprob: -9.625090599060059
    3. 'm' → logprob: -11.750090599060059
    4. '```' → logprob: -12.375090599060059
    5. 'print' → logprob: -13.125090599060059
    6. 'in' → logprob: -13.125090599060059
    7. 'ax' → logprob: -13.375090599060059
    8. 'ost' → logprob: -13.625090599060059
    9. '   ' → logprob: -13.750090599060059
    10. 'e' → logprob: -14.375090599060059

Token 68: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003314129135105759
    2. '(' → logprob: -8.12533187866211
    3. '()
' → logprob: -10.50033187866211
    4. '()

' → logprob: -13.12533187866211
    5. '()\' → logprob: -13.75033187866211
    6. '()`' → logprob: -13.87533187866211
    7. '()<' → logprob: -14.50033187866211
    8. '()>' → logprob: -14.62533187866211
    9. '()[' → logprob: -14.75033187866211
    10. '()
' → logprob: -14.75033187866211

Token 70: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011050907196477056
    2. 'for' → logprob: -7.251105308532715
    3. 'if' → logprob: -7.876105308532715
    4. '<|end|>' → logprob: -11.626105308532715
    5. '```' → logprob: -12.626105308532715
    6. ' print' → logprob: -13.751105308532715
    7. '
' → logprob: -14.251105308532715
    8. ' for' → logprob: -14.876105308532715
    9. '#print' → logprob: -15.626105308532715
    10. '[' → logprob: -15.751105308532715

Token 71: ' mode' (ID: 6766)
  Prédit: ' mode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mode' → logprob: -0.0033923061564564705
    2. ' num' → logprob: -5.878392219543457
    3. 'mode' → logprob: -7.503392219543457
    4. 'num' → logprob: -11.128392219543457
    5. '	mode' → logprob: -11.628392219543457
    6. ' m' → logprob: -12.378392219543457
    7. ' ' → logprob: -12.628392219543457
    8. ' number' → logprob: -12.878392219543457
    9. ' ' → logprob: -14.503392219543457
    10. ' mod' → logprob: -14.753392219543457

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0076346630230546
    2. 'in' → logprob: -4.88263463973999
    3. ' ' → logprob: -12.007635116577148
    4. ':' → logprob: -12.132635116577148
    5. '_in' → logprob: -12.632635116577148
    6. '<|end|>' → logprob: -12.632635116577148
    7. ',' → logprob: -12.882635116577148
    8. '	in' → logprob: -13.507635116577148
    9. '  ' → logprob: -13.882635116577148
    10. '<|end|>' → logprob: -13.882635116577148

Token 73: ' modes' (ID: 32057)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.22543984651565552
    2. ' modes' → logprob: -1.6004397869110107
    3. 'mode' → logprob: -11.10044002532959
    4. ' m' → logprob: -12.72544002532959
    5. ' mode' → logprob: -13.22544002532959
    6. '_modes' → logprob: -13.22544002532959
    7. '   ' → logprob: -13.35044002532959
    8. '	m' → logprob: -13.60044002532959
    9. ' ' → logprob: -13.60044002532959
    10. ' modos' → logprob: -15.53794002532959

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008210649830289185
    2. ':
' → logprob: -7.250821113586426
    3. 'print' → logprob: -9.250821113586426
    4. ' print' → logprob: -11.750821113586426
    5. '   ' → logprob: -12.125821113586426
    6. '.print' → logprob: -15.125821113586426
    7. '<|end|>' → logprob: -15.250821113586426
    8. ' :' → logprob: -15.500821113586426
    9. '_print' → logprob: -15.500821113586426
    10. ',' → logprob: -15.625821113586426

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04870477691292763
    2. ' print' → logprob: -3.0487048625946045
    3. 'print' → logprob: -9.173705101013184
    4. '```' → logprob: -11.298705101013184
    5. '	print' → logprob: -14.548705101013184
    6. '   ' → logprob: -15.548705101013184
    7. '       ' → logprob: -15.798705101013184
    8. '``' → logprob: -16.048704147338867
    9. '    
' → logprob: -16.048704147338867
    10. '    ' → logprob: -16.423704147338867

Token 76: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001428332761861384
    2. '   ' → logprob: -7.251428127288818
    3. ' print' → logprob: -7.251428127288818
    4. '```' → logprob: -11.626428604125977
    5. '``' → logprob: -17.501428604125977
    6. '	print' → logprob: -18.126428604125977
    7. '`' → logprob: -19.001428604125977
    8. 'printf' → logprob: -19.751428604125977
    9. '#print' → logprob: -20.501428604125977
    10. 'sys' → logprob: -20.501428604125977

Token 77: '(mode' (ID: 68689)
  Prédit: '(mode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mode' → logprob: -4.263011578586884e-05
    2. 'mode' → logprob: -10.375042915344238
    3. '(' → logprob: -11.875042915344238
    4. '(f' → logprob: -12.500042915344238
    5. ' mode' → logprob: -15.125042915344238
    6. ' (' → logprob: -16.625041961669922
    7. '()' → logprob: -16.625041961669922
    8. '(m' → logprob: -17.500041961669922
    9. '	mode' → logprob: -17.875041961669922
    10. '(model' → logprob: -18.500041961669922

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.125005722045898
    3. ' )' → logprob: -15.125005722045898
    4. ')`' → logprob: -18.2500057220459
    5. '))' → logprob: -18.6250057220459
    6. ')
' → logprob: -19.1250057220459
    7. '')' → logprob: -19.3750057220459
    8. ')#' → logprob: -20.0000057220459
    9. '),' → logprob: -20.5000057220459
    10. ')

' → logprob: -20.5000057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 76
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 64
Précision stricte (1ère position): 48.68%
Précision adaptée (1ère position): 51.32%
Précision (top 10): 84.21%
================================================================================
