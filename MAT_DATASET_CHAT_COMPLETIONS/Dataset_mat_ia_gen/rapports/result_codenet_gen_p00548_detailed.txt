================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import collections

def main():
    input = sys.stdin.readline
    N, M, K = map(int, input().split())
    A = [int(input()) for _ in range(N)]

    # dp[i]: coût minimal pour empaqueter les oranges 0 à i-1
    dp = [float('inf')] * (N + 1)
    dp[0] = 0

    # Pour chaque position i (fin de sous-ensemble), on parcourt au plus M oranges à l'arrière
    # Afin de trouver la meilleure découpe possible en considérant des sous-tableaux contigus
    # avec au plus M éléments
    for i in range(1, N + 1):
        max_deque = collections.deque()  # stocke les valeurs A[j] décroissantes pour trouver le max
        min_deque = collections.deque()  # stocke les valeurs A[j] croissantes pour trouver le min
        # On essaie de prendre entre 1 et M oranges avant i
        for s in range(1, min(M, i) + 1):
            j = i - s  # début du segment [j..i-1]
            x = A[j]

            # Mettre à jour max_deque pour trouver max dans A[j..i-1]
            while max_deque and max_deque[-1] < x:
                max_deque.pop()
            max_deque.append(x)
            # Mettre à jour min_deque pour trouver min dans A[j..i-1]
            while min_deque and min_deque[-1] > x:
                min_deque.pop()
            min_deque.append(x)

            a = max_deque[0]
            b = min_deque[0]

            # Calcul du coût pour ce segment
            cost = K + s * (a - b)

            # Mise à jour dp
            if dp[j] + cost < dp[i]:
                dp[i] = dp[j] + cost

    # Résultat final : coût minimal pour empaqueter toutes les oranges
    print(dp[N])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -16.875125885009766

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.044599298387765884
    2. 'import' → logprob: -4.669599533081055
    3. '\' → logprob: -4.794599533081055
    4. '

' → logprob: -5.044599533081055
    5. '
' → logprob: -5.169599533081055
    6. '\n' → logprob: -5.419599533081055
    7. 'newline' → logprob: -5.669599533081055
    8. ',' → logprob: -6.169599533081055
    9. '```' → logprob: -7.044599533081055
    10. '' → logprob: -7.544599533081055

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0665420293807983
    2. 'import' → logprob: -1.3165420293807983
    3. 'Counter' → logprob: -2.816542148590088
    4. '```' → logprob: -3.191542148590088
    5. 'def' → logprob: -3.316542148590088
    6. '
' → logprob: -3.316542148590088
    7. 'deque' → logprob: -3.316542148590088
    8. ',' → logprob: -3.441542148590088
    9. 'from' → logprob: -3.691542148590088
    10. '\n' → logprob: -3.941542148590088

Token 7: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5541833639144897
    2. ' process' → logprob: -1.4291833639144897
    3. ' factorial' → logprob: -2.5541834831237793
    4. ' calculate' → logprob: -3.5541834831237793
    5. ' read' → logprob: -4.429183483123779
    6. ' space' → logprob: -4.929183483123779
    7. ' find' → logprob: -5.054183483123779
    8. ' main' → logprob: -5.179183483123779
    9. ' collections' → logprob: -5.554183483123779
    10. ' count' → logprob: -5.554183483123779

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00196645874530077
    2. '():' → logprob: -7.12696647644043
    3. ':' → logprob: -7.25196647644043
    4. '(:' → logprob: -8.75196647644043
    5. ' (' → logprob: -9.00196647644043
    6. '```' → logprob: -10.00196647644043
    7. '(
' → logprob: -10.25196647644043
    8. '):' → logprob: -11.12696647644043
    9. '(`' → logprob: -11.50196647644043
    10. '('' → logprob: -11.87696647644043

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07864750176668167
    2. '(' → logprob: -3.3286476135253906
    3. ':' → logprob: -4.078647613525391
    4. '    ' → logprob: -4.828647613525391
    5. '():' → logprob: -5.328647613525391
    6. '\' → logprob: -5.953647613525391
    7. ' ' → logprob: -5.953647613525391
    8. '()' → logprob: -6.953647613525391
    9. ' :' → logprob: -7.078647613525391
    10. '    
' → logprob: -7.578647613525391

Token 10: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16939011216163635
    2. ' collections' → logprob: -3.7943902015686035
    3. 'collections' → logprob: -3.9193902015686035
    4. 'n' → logprob: -4.2943902015686035
    5. ' counter' → logprob: -4.6693902015686035
    6. 'data' → logprob: -4.9193902015686035
    7. 'args' → logprob: -4.9193902015686035
    8. ' sys' → logprob: -5.0443902015686035
    9. 'input' (adapté à ' input') → logprob: -5.0443902015686035
    10. ' n' → logprob: -5.1693902015686035

Token 11: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.72978276014328
    2. '_data' → logprob: -1.2297828197479248
    3. '()' → logprob: -2.479782819747925
    4. '(' → logprob: -2.979782819747925
    5. '_' → logprob: -3.354782819747925
    6. '_str' → logprob: -3.729782819747925
    7. '_text' → logprob: -4.229782581329346
    8. '_string' → logprob: -5.729782581329346
    9. '_lines' → logprob: -5.979782581329346
    10. ' =' → logprob: -6.229782581329346

Token 12: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.008866284042596817
    2. 'sys' → logprob: -4.758866310119629
    3. ' input' → logprob: -8.633866310119629
    4. 'input' → logprob: -10.008866310119629
    5. ' ' → logprob: -10.883866310119629
    6. '	sys' → logprob: -12.383866310119629
    7. ' collections' → logprob: -13.008866310119629
    8. '(sys' → logprob: -13.508866310119629
    9. '=sys' → logprob: -13.883866310119629
    10. 'collections' → logprob: -14.633866310119629

Token 13: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.25676754117012024
    2. '.' → logprob: -1.5067675113677979
    3. ' .' → logprob: -5.631767749786377
    4. '.argv' → logprob: -7.256767749786377
    5. '.stdout' → logprob: -8.131767272949219
    6. '.readline' → logprob: -9.131767272949219
    7. '.input' → logprob: -9.381767272949219
    8. '.std' → logprob: -10.756767272949219
    9. '.exit' → logprob: -11.881767272949219
    10. '.setdefault' → logprob: -12.381767272949219

Token 14: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.11157675087451935
    2. '.read' → logprob: -2.361576795578003
    3. '.' → logprob: -4.486576557159424
    4. '.readlines' → logprob: -10.486577033996582
    5. '.Read' → logprob: -11.486577033996582
    6. 'read' → logprob: -12.986577033996582
    7. '.buffer' → logprob: -13.111577033996582
    8. '.write' → logprob: -13.861577033996582
    9. ' .' → logprob: -14.611577033996582
    10. '.READ' → logprob: -14.611577033996582

Token 15: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03106878511607647
    2. '(' → logprob: -3.531068801879883
    3. '()
' → logprob: -7.406068801879883
    4. '(
' → logprob: -7.656068801879883
    5. ')' → logprob: -9.656068801879883
    6. '().' → logprob: -9.656068801879883
    7. ' ()' → logprob: -10.531068801879883
    8. '()\' → logprob: -10.906068801879883
    9. '()

' → logprob: -11.031068801879883
    10. '('' → logprob: -12.156068801879883

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44799306988716125
    2. '()' → logprob: -1.1979930400848389
    3. '    
' → logprob: -3.072993040084839
    4. '(' → logprob: -4.697993278503418
    5. '()
' → logprob: -6.947993278503418
    6. '    ' → logprob: -7.822993278503418
    7. '```' → logprob: -7.822993278503418
    8. '(
' → logprob: -8.072993278503418
    9. ')' → logprob: -8.322993278503418
    10. '(n' → logprob: -9.072993278503418

Token 17: ' N' (ID: 478)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12085109204053879
    2. '(' → logprob: -2.2458510398864746
    3. '   ' → logprob: -5.495851039886475
    4. 'data' → logprob: -6.370851039886475
    5. ' ()' → logprob: -7.370851039886475
    6. '()
' → logprob: -8.245851516723633
    7. '(
' → logprob: -8.495851516723633
    8. '('' → logprob: -8.870851516723633
    9. 's' → logprob: -9.620851516723633
    10. '("")' → logprob: -9.620851516723633

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08659449964761734
    2. '=' → logprob: -2.711594581604004
    3. ' ' → logprob: -4.211594581604004
    4. ')' → logprob: -7.711594581604004
    5. '  ' → logprob: -8.086594581604004
    6. ',' → logprob: -8.211594581604004
    7. '.' → logprob: -8.711594581604004
    8. '    ' → logprob: -9.836594581604004
    9. ' )' → logprob: -9.961594581604004
    10. ' ,' → logprob: -10.086594581604004

Token 19: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.814060389995575
    2. ' M' → logprob: -1.4390604496002197
    3. ' K' → logprob: -1.8140604496002197
    4. 'input' → logprob: -3.0640604496002197
    5. ' input' → logprob: -3.1890604496002197
    6. '  ' → logprob: -4.189060211181641
    7. 'M' → logprob: -4.689060211181641
    8. 'K' → logprob: -5.064060211181641
    9. ' =' → logprob: -5.189060211181641
    10. ' Q' → logprob: -5.314060211181641

Token 20: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007661751471459866
    2. '=' → logprob: -4.882661819458008
    3. ' ' → logprob: -9.882661819458008
    4. ',' → logprob: -12.632661819458008
    5. ' ,' → logprob: -15.007661819458008
    6. ' =",' → logprob: -15.757661819458008
    7. '```' → logprob: -16.132661819458008
    8. ' =
' → logprob: -16.132661819458008
    9. ' ='' → logprob: -16.382661819458008
    10. ')' → logprob: -16.507661819458008

Token 21: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.11163901537656784
    2. 'K' → logprob: -2.9866390228271484
    3. ' ' → logprob: -3.1116390228271484
    4. ' =' → logprob: -5.861639022827148
    5. ' P' → logprob: -6.611639022827148
    6. '  ' → logprob: -6.611639022827148
    7. ' L' → logprob: -7.111639022827148
    8. ' Q' → logprob: -7.486639022827148
    9. ' T' → logprob: -7.861639022827148
    10. ' X' → logprob: -8.111639022827148

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197250634431839
    2. '=' → logprob: -2.8119726181030273
    3. ' ' → logprob: -12.311972618103027
    4. ',' → logprob: -15.186972618103027
    5. '=input' → logprob: -17.56197166442871
    6. ')' → logprob: -17.81197166442871
    7. ' =
' → logprob: -17.81197166442871
    8. '＝' → logprob: -18.56197166442871
    9. '    ' → logprob: -18.81197166442871
    10. '  ' → logprob: -18.81197166442871

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0004411591507960111
    2. 'map' → logprob: -7.750441074371338
    3. ' input' → logprob: -11.750441551208496
    4. ' ' → logprob: -13.500441551208496
    5. ' list' → logprob: -14.250441551208496
    6. '	map' → logprob: -15.375441551208496
    7. ' ' → logprob: -16.37544059753418
    8. ' tuple' → logprob: -16.62544059753418
    9. '   ' → logprob: -16.87544059753418
    10. 'input' → logprob: -17.00044059753418

Token 24: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2118426412343979
    2. '(int' → logprob: -1.961842656135559
    3. '(str' → logprob: -3.4618425369262695
    4. '(input' → logprob: -4.3368425369262695
    5. '(lambda' → logprob: -5.2118425369262695
    6. '(
' → logprob: -8.71184253692627
    7. '(list' → logprob: -9.33684253692627
    8. '(eval' → logprob: -10.58684253692627
    9. '(tuple' → logprob: -10.83684253692627
    10. '(sys' → logprob: -10.96184253692627

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02134517952799797
    2. ',input' → logprob: -3.8963451385498047
    3. '(' → logprob: -7.771345138549805
    4. '(input' → logprob: -8.896345138549805
    5. 'input' → logprob: -9.396345138549805
    6. ' ,' → logprob: -9.896345138549805
    7. ')' → logprob: -10.271345138549805
    8. '(sys' → logprob: -10.521345138549805
    9. ',int' → logprob: -11.396345138549805
    10. ',line' → logprob: -11.521345138549805

Token 26: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12696129083633423
    2. 'input' → logprob: -2.1269612312316895
    3. ')' → logprob: -10.876961708068848
    4. ' sys' → logprob: -11.501961708068848
    5. ' )' → logprob: -13.626961708068848
    6. 'sys' → logprob: -13.876961708068848
    7. ' ' → logprob: -13.876961708068848
    8. ',input' → logprob: -14.501961708068848
    9. '=input' → logprob: -15.376961708068848
    10. '(input' → logprob: -15.376961708068848

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020544764993246645
    2. '()' → logprob: -8.750205039978027
    3. '())' → logprob: -10.000205039978027
    4. ' ().' → logprob: -14.000205039978027
    5. '(' → logprob: -15.250205039978027
    6. '()))' → logprob: -15.500205039978027
    7. ')' → logprob: -16.000205993652344
    8. '()
' → logprob: -16.500205993652344
    9. '()[' → logprob: -18.125205993652344
    10. '()

' → logprob: -18.250205993652344

Token 28: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.33036789298057556
    2. 'split' → logprob: -1.330367922782898
    3. 'rstrip' → logprob: -4.0803680419921875
    4. ')' → logprob: -10.080368041992188
    5. ' strip' → logprob: -11.705368041992188
    6. '())' → logprob: -12.830368041992188
    7. ' split' → logprob: -13.080368041992188
    8. 'read' → logprob: -13.205368041992188
    9. '().' → logprob: -13.705368041992188
    10. 'str' → logprob: -15.080368041992188

Token 29: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006154587608762085
    2. '))' → logprob: -7.50061559677124
    3. '())' → logprob: -10.000615119934082
    4. '()' → logprob: -11.125615119934082
    5. ')))' → logprob: -14.125615119934082
    6. '(' → logprob: -14.875615119934082
    7. '),' → logprob: -15.000615119934082
    8. ')
' → logprob: -15.250615119934082
    9. ')`' → logprob: -15.625615119934082
    10. '`)' → logprob: -15.750615119934082

Token 30: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0199230909347534
    2. '\n' → logprob: -1.3949230909347534
    3. '
' → logprob: -2.019923210144043
    4. '\' → logprob: -2.769923210144043
    5. '   ' → logprob: -3.019923210144043
    6. '    
' → logprob: -3.269923210144043
    7. '```' → logprob: -3.519923210144043
    8. '<|end|>' → logprob: -3.644923210144043
    9. ' 
' → logprob: -4.519923210144043
    10. ',' → logprob: -5.019923210144043

Token 31: ' A' (ID: 355)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1810078620910645
    2. '   ' → logprob: -1.8060078620910645
    3. 'A' (adapté à ' A') → logprob: -2.1810078620910645
    4. 'a' → logprob: -2.4310078620910645
    5. 'c' → logprob: -2.9310078620910645
    6. 'd' → logprob: -3.0560078620910645
    7. ' ' → logprob: -3.4310078620910645
    8. '[' → logprob: -3.9310078620910645
    9. 's' → logprob: -4.0560078620910645
    10. 'graph' → logprob: -4.0560078620910645

Token 32: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6445515155792236
    2. ',' → logprob: -1.3945515155792236
    3. ' =' → logprob: -2.5195515155792236
    4. '_' → logprob: -2.6445515155792236
    5. 's' → logprob: -3.5195515155792236
    6. '=' → logprob: -4.3945512771606445
    7. ')' → logprob: -4.6445512771606445
    8. '[]' → logprob: -5.3945512771606445
    9. '[:]' → logprob: -5.5195512771606445
    10. '_counts' → logprob: -5.7695512771606445

Token 33: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.13067412376403809
    2. 'list' → logprob: -2.255674123764038
    3. ' [' → logprob: -4.130674362182617
    4. '[' → logprob: -7.255674362182617
    5. '[list' → logprob: -8.005674362182617
    6. ' []' → logprob: -8.130674362182617
    7. ' collections' → logprob: -8.880674362182617
    8. '[]' → logprob: -9.505674362182617
    9. 'collections' → logprob: -10.005674362182617
    10. '[int' → logprob: -12.255674362182617

Token 34: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0071073598228394985
    2. '0' → logprob: -5.132107257843018
    3. ' int' → logprob: -7.507107257843018
    4. ']int' → logprob: -8.382107734680176
    5. 'list' → logprob: -8.757107734680176
    6. 'tuple' → logprob: -9.632107734680176
    7. '[int' → logprob: -10.132107734680176
    8. '(int' → logprob: -10.257107734680176
    9. ']' → logprob: -10.507107734680176
    10. 'map' → logprob: -10.507107734680176

Token 35: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3432919383049011
    2. '(input' → logprob: -1.468291997909546
    3. '(x' → logprob: -2.843291997909546
    4. '()' → logprob: -6.968291759490967
    5. '(i' → logprob: -7.468291759490967
    6. '(a' → logprob: -8.718292236328125
    7. '(
' → logprob: -9.093292236328125
    8. '()]' → logprob: -9.468292236328125
    9. 'input' → logprob: -10.468292236328125
    10. '(token' → logprob: -10.593292236328125

Token 36: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0004097003838978708
    2. '()]' → logprob: -8.625410079956055
    3. '()' → logprob: -8.875410079956055
    4. '().' → logprob: -10.000410079956055
    5. ')' → logprob: -10.875410079956055
    6. '())
' → logprob: -11.500410079956055
    7. '()),' → logprob: -11.500410079956055
    8. ' ())' → logprob: -13.625410079956055
    9. '()
' → logprob: -14.000410079956055
    10. '()))' → logprob: -14.125410079956055

Token 37: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02657766081392765
    2. '()]' → logprob: -4.276577472686768
    3. '())' → logprob: -4.526577472686768
    4. ')' → logprob: -7.026577472686768
    5. ' ()' → logprob: -8.651577949523926
    6. '(' → logprob: -8.651577949523926
    7. 'for' → logprob: -9.151577949523926
    8. ' for' → logprob: -9.901577949523926
    9. '()[' → logprob: -10.901577949523926
    10. '()),' → logprob: -11.151577949523926

Token 38: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9719661474227905
    2. ' ' → logprob: -0.9719661474227905
    3. ' _' → logprob: -1.4719661474227905
    4. '(' → logprob: -4.84696626663208
    5. ' range' → logprob: -5.59696626663208
    6. ' i' → logprob: -6.72196626663208
    7. '()' → logprob: -8.221965789794922
    8. '  ' → logprob: -8.346965789794922
    9. 'range' → logprob: -8.846965789794922
    10. ' in' → logprob: -9.096965789794922

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03230474889278412
    2. 'in' → logprob: -3.5323047637939453
    3. 'range' → logprob: -6.157304763793945
    4. '()' → logprob: -8.782304763793945
    5. ' range' → logprob: -9.032304763793945
    6. 'i' → logprob: -9.782304763793945
    7. ' ' → logprob: -10.532304763793945
    8. '_' → logprob: -10.782304763793945
    9. '(' → logprob: -11.157304763793945
    10. '(range' → logprob: -11.532304763793945

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.160235196352005
    2. ' range' → logprob: -1.9102351665496826
    3. ' ' → logprob: -12.285235404968262
    4. '	range' → logprob: -12.410235404968262
    5. '(range' → logprob: -13.785235404968262
    6. '  ' → logprob: -14.660235404968262
    7. '   ' → logprob: -14.910235404968262
    8. 'rang' → logprob: -15.285235404968262
    9. 'A' → logprob: -16.410234451293945
    10. 'r' → logprob: -17.035234451293945

Token 41: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.003990661818534136
    2. '(M' → logprob: -5.628990650177002
    3. '(' → logprob: -7.878990650177002
    4. '(K' → logprob: -12.00399112701416
    5. ' (' → logprob: -12.37899112701416
    6. '(n' → logprob: -14.75399112701416
    7. 'N' → logprob: -15.25399112701416
    8. '(int' → logprob: -15.75399112701416
    9. ')' → logprob: -15.75399112701416
    10. ' N' → logprob: -16.378990173339844

Token 42: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004575969185680151
    2. ']' → logprob: -5.504576206207275
    3. ')' → logprob: -7.629576206207275
    4. ' )' → logprob: -13.129575729370117
    5. '])]' → logprob: -13.129575729370117
    6. '])' → logprob: -13.504575729370117
    7. ')]
' → logprob: -13.629575729370117
    8. ' ]' → logprob: -13.629575729370117
    9. '   ' → logprob: -14.504575729370117
    10. ')])' → logprob: -14.629575729370117

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2567977011203766
    2. '<|end|>' → logprob: -2.7567977905273438
    3. ')' → logprob: -3.1317977905273438
    4. '[' → logprob: -3.6317977905273438
    5. '.' → logprob: -4.381797790527344
    6. ' ' → logprob: -4.381797790527344
    7. '```' → logprob: -4.506797790527344
    8. '\' → logprob: -4.756797790527344
    9. ' 
' → logprob: -4.756797790527344
    10. '  
' → logprob: -4.881797790527344

Token 44: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1935729831457138
    2. 'counter' → logprob: -3.443572998046875
    3. 'd' → logprob: -4.068572998046875
    4. 'deque' → logprob: -4.193572998046875
    5. 'counts' → logprob: -4.443572998046875
    6. 'count' → logprob: -4.443572998046875
    7. 'B' → logprob: -4.568572998046875
    8. 'freq' → logprob: -4.693572998046875
    9. 'sorted' → logprob: -4.818572998046875
    10. 'A' → logprob: -5.318572998046875

Token 45: ' dp' (ID: 21546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013041160069406033
    2. 'd' → logprob: -6.638041019439697
    3. ' #' → logprob: -6.763041019439697
    4. ' max' → logprob: -7.263041019439697
    5. ' dp' → logprob: -7.263041019439697
    6. ' A' → logprob: -7.388041019439697
    7. ' ]' → logprob: -7.513041019439697
    8. 'max' → logprob: -7.638041019439697
    9. '#' → logprob: -7.763041019439697
    10. '    ' → logprob: -7.763041019439697

Token 46: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024079540744423866
    2. '=' → logprob: -3.7740795612335205
    3. '[' → logprob: -7.274079322814941
    4. '_' → logprob: -9.649079322814941
    5. ' ' → logprob: -9.774079322814941
    6. ' =[' → logprob: -12.024079322814941
    7. ',' → logprob: -13.024079322814941
    8. '[n' → logprob: -13.524079322814941
    9. '_space' → logprob: -13.524079322814941
    10. '=[' → logprob: -13.899079322814941

Token 47: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4600571393966675
    2. '][' → logprob: -1.0850571393966675
    3. ' ][' → logprob: -4.210057258605957
    4. ' ]' → logprob: -4.585057258605957
    5. ']=' → logprob: -6.335057258605957
    6. ' ' → logprob: -6.960057258605957
    7. ' =' → logprob: -7.085057258605957
    8. '][]' → logprob: -7.585057258605957
    9. '[' → logprob: -7.835057258605957
    10. '=' → logprob: -7.960057258605957

Token 48: ' coût' (ID: 73109)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.629756510257721
    2. ' collections' → logprob: -1.2547564506530762
    3. '0' → logprob: -2.879756450653076
    4. ' [' → logprob: -2.879756450653076
    5. ' ' → logprob: -3.754756450653076
    6. '[' → logprob: -4.254756450653076
    7. '[]' → logprob: -4.379756450653076
    8. ' []' → logprob: -4.629756450653076
    9. ' i' → logprob: -6.504756450653076
    10. '[i' → logprob: -6.629756450653076

Token 49: ' minimal' (ID: 19957)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05502050742506981
    2. 's' → logprob: -3.305020570755005
    3. '=' → logprob: -5.305020332336426
    4. ' ' → logprob: -5.930020332336426
    5. '[' → logprob: -5.930020332336426
    6. '   ' → logprob: -6.555020332336426
    7. '[i' → logprob: -6.555020332336426
    8. '_' → logprob: -7.180020332336426
    9. '  ' → logprob: -7.180020332336426
    10. ',' → logprob: -7.180020332336426

Token 50: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05796738341450691
    2. ' ' → logprob: -3.5579674243927
    3. '[' → logprob: -4.807967185974121
    4. '   ' → logprob: -5.057967185974121
    5. '=' → logprob: -5.432967185974121
    6. '[i' → logprob: -6.432967185974121
    7. '_' → logprob: -6.807967185974121
    8. 's' → logprob: -6.932967185974121
    9. '(' → logprob: -7.057967185974121
    10. '  ' → logprob: -7.182967185974121

Token 51: ' empa' (ID: 104653)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4955557584762573
    2. 'i' → logprob: -1.9955557584762573
    3. ' gérer' → logprob: -2.870555877685547
    4. ' atteindre' → logprob: -3.495555877685547
    5. ' utiliser' → logprob: -3.745555877685547
    6. ' réaliser' → logprob: -4.245555877685547
    7. ' couvrir' → logprob: -4.370555877685547
    8. 'acheter' → logprob: -4.495555877685547
    9. ' traiter' → logprob: -4.495555877685547
    10. ' ' → logprob: -4.995555877685547

Token 52: 'qu' (ID: 351)
  Prédit: 'qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.03662743791937828
    2. 'quer' → logprob: -4.661627292633057
    3. 'cker' → logprob: -5.411627292633057
    4. 'q' → logprob: -5.786627292633057
    5. '   ' → logprob: -6.536627292633057
    6. '#' → logprob: -6.661627292633057
    7. '```' → logprob: -6.661627292633057
    8. 'c' → logprob: -6.661627292633057
    9. 'quet' → logprob: -6.786627292633057
    10. '[' → logprob: -7.036627292633057

Token 53: 'eter' (ID: 2377)
  Prédit: 'eter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eter' → logprob: -0.006553132552653551
    2. 'etter' → logprob: -5.3815531730651855
    3. 'ter' → logprob: -7.1315531730651855
    4. 'er' → logprob: -8.006552696228027
    5. 'et' → logprob: -8.381552696228027
    6. 'éter' → logprob: -8.506552696228027
    7. 'oter' → logprob: -9.506552696228027
    8. '   ' → logprob: -10.006552696228027
    9. 'етер' → logprob: -10.381552696228027
    10. '
' → logprob: -10.506552696228027

Token 54: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.054019782692193985
    2. 'i' → logprob: -3.0540196895599365
    3. ' jusqu' → logprob: -6.179019927978516
    4. ' les' → logprob: -6.304019927978516
    5. ' le' → logprob: -8.554019927978516
    6. ' ' → logprob: -8.679019927978516
    7. ' up' → logprob: -8.679019927978516
    8. '[i' → logprob: -8.929019927978516
    9. ' la' → logprob: -8.929019927978516
    10. 'les' → logprob: -9.054019927978516

Token 55: ' oranges' (ID: 120311)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3529154062271118
    2. ' i' → logprob: -1.3529154062271118
    3. 'prem' → logprob: -3.7279152870178223
    4. ' A' → logprob: -5.227915287017822
    5. ' premiers' → logprob: -5.852915287017822
    6. 'A' → logprob: -6.227915287017822
    7. 'élé' → logprob: -6.977915287017822
    8. ' ' → logprob: -7.102915287017822
    9. '0' → logprob: -7.602915287017822
    10. 'j' → logprob: -7.852915287017822

Token 56: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25459298491477966
    2. '_' → logprob: -2.5045928955078125
    3. '[' → logprob: -2.6295928955078125
    4. ' ' → logprob: -3.5045928955078125
    5. '=' → logprob: -3.8795928955078125
    6. 's' → logprob: -4.6295928955078125
    7. ',' → logprob: -6.2545928955078125
    8. '(' → logprob: -6.3795928955078125
    9. '[i' → logprob: -6.5045928955078125
    10. '<|end|>' → logprob: -7.2545928955078125

Token 57: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8235340118408203
    2. '[i' → logprob: -1.3235340118408203
    3. ' jusqu' → logprob: -1.8235340118408203
    4. '=' → logprob: -3.8235340118408203
    5. ',' → logprob: -3.8235340118408203
    6. ' i' → logprob: -4.07353401184082
    7. '[' → logprob: -4.44853401184082
    8. '(i' → logprob: -4.44853401184082
    9. '[]' → logprob: -4.57353401184082
    10. '   ' → logprob: -4.94853401184082

Token 58: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4427020847797394
    2. ',' → logprob: -2.567702054977417
    3. '[i' → logprob: -2.567702054977417
    4. ' ' → logprob: -2.942702054977417
    5. 'à' → logprob: -3.192702054977417
    6. ' i' → logprob: -3.942702054977417
    7. ')' → logprob: -4.442702293395996
    8. ' jusqu' → logprob: -4.442702293395996
    9. ' ,' → logprob: -4.817702293395996
    10. ']' → logprob: -5.067702293395996

Token 59: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02326807752251625
    2. ' i' → logprob: -3.773267984390259
    3. ' ' → logprob: -11.02326774597168
    4. '	i' → logprob: -13.64826774597168
    5. '`' → logprob: -13.77326774597168
    6. '[i' → logprob: -13.89826774597168
    7. '   ' → logprob: -14.02326774597168
    8. 'j' → logprob: -14.77326774597168
    9. ''i' → logprob: -14.89826774597168
    10. '  ' → logprob: -15.27326774597168

Token 60: '-' (ID: 12)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6033202409744263
    2. '[' → logprob: -2.2283201217651367
    3. 'dp' → logprob: -2.4783201217651367
    4. ' ' → logprob: -2.8533201217651367
    5. ',' → logprob: -3.1033201217651367
    6. ']' → logprob: -3.3533201217651367
    7. '   ' → logprob: -3.3533201217651367
    8. '=' → logprob: -3.6033201217651367
    9. '_' → logprob: -4.603320121765137
    10. ')' → logprob: -4.978320121765137

Token 61: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9355233907699585
    2. ']' → logprob: -1.1855233907699585
    3. ' i' → logprob: -1.8105233907699585
    4. ')' → logprob: -3.185523509979248
    5. '0' → logprob: -3.560523509979248
    6. ',' → logprob: -4.060523509979248
    7. ' ' → logprob: -4.560523509979248
    8. 's' → logprob: -5.060523509979248
    9. '.' → logprob: -5.185523509979248
    10. '+' → logprob: -5.435523509979248

Token 62: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016152845695614815
    2. ' ' → logprob: -4.891152858734131
    3. '=' → logprob: -5.016152858734131
    4. ',' → logprob: -7.016152858734131
    5. '[' → logprob: -7.891152858734131
    6. ']' → logprob: -8.891152381896973
    7. ' ]' → logprob: -8.891152381896973
    8. '   ' → logprob: -9.266152381896973
    9. '_' → logprob: -10.391152381896973
    10. ' ,' → logprob: -10.641152381896973

Token 63: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016272829845547676
    2. '=' → logprob: -5.141273021697998
    3. '[' → logprob: -5.266273021697998
    4. ' ' → logprob: -5.641273021697998
    5. ',' → logprob: -7.391273021697998
    6. '   ' → logprob: -8.26627254486084
    7. 'dp' → logprob: -8.64127254486084
    8. ':' → logprob: -9.14127254486084
    9. ' dp' → logprob: -9.51627254486084
    10. '_' → logprob: -9.89127254486084

Token 64: ' dp' (ID: 21546)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6308030486106873
    2. 'dp' (adapté à ' dp') → logprob: -1.505803108215332
    3. ' dp' → logprob: -2.005803108215332
    4. ' ' → logprob: -3.130803108215332
    5. '[' → logprob: -4.005803108215332
    6. '=' → logprob: -4.130803108215332
    7. '_dp' → logprob: -4.505803108215332
    8. '_' → logprob: -4.755803108215332
    9. ',' → logprob: -5.380803108215332
    10. '
' → logprob: -6.255803108215332

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0001354824344161898
    2. '=' → logprob: -9.25013542175293
    3. '[' → logprob: -10.37513542175293
    4. ' =[' → logprob: -12.00013542175293
    5. '[:]' → logprob: -14.75013542175293
    6. '[]' → logprob: -14.87513542175293
    7. ' ' → logprob: -15.00013542175293
    8. '=[' → logprob: -15.37513542175293
    9. '.' → logprob: -16.00013542175293
    10. '  ' → logprob: -16.00013542175293

Token 66: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018184827640652657
    2. ' [' → logprob: -4.018184661865234
    3. '[col' → logprob: -11.518184661865234
    4. '[N' → logprob: -11.893184661865234
    5. 'collections' → logprob: -12.643184661865234
    6. '[n' → logprob: -12.768184661865234
    7. '[int' → logprob: -13.018184661865234
    8. '[len' → logprob: -13.393184661865234
    9. '[class' → logprob: -13.393184661865234
    10. '[i' → logprob: -13.768184661865234

Token 67: 'float' (ID: 7829)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3879489004611969
    2. 'float' → logprob: -1.1379488706588745
    3. ' float' → logprob: -7.512948989868164
    4. ' ' → logprob: -8.262948989868164
    5. '10' → logprob: -8.262948989868164
    6. '100' → logprob: -12.637948989868164
    7. 'int' → logprob: -12.762948989868164
    8. '(float' → logprob: -12.762948989868164
    9. ',float' → logprob: -14.262948989868164
    10. '1' → logprob: -14.387948989868164

Token 68: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.464347173576243e-05
    2. '(' → logprob: -11.25003433227539
    3. ''' → logprob: -11.37503433227539
    4. ''in' → logprob: -12.25003433227539
    5. 'inf' → logprob: -13.12503433227539
    6. '("' → logprob: -13.37503433227539
    7. '('-' → logprob: -14.37503433227539
    8. '   ' → logprob: -15.87503433227539
    9. ']' → logprob: -16.12503433227539
    10. ' ('' → logprob: -16.25003433227539

Token 69: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -7.226628895296017e-06
    2. 'in' → logprob: -12.000007629394531
    3. ''in' → logprob: -14.125007629394531
    4. ''' → logprob: -15.750007629394531
    5. 'INF' → logprob: -16.12500762939453
    6. 'info' → logprob: -17.12500762939453
    7. '_inf' → logprob: -18.62500762939453
    8. '∞' → logprob: -18.75000762939453
    9. '')' → logprob: -18.87500762939453
    10. '-inf' → logprob: -18.87500762939453

Token 70: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3117522597312927
    2. ')' → logprob: -1.8117523193359375
    3. '')]' → logprob: -2.3117523193359375
    4. ']' → logprob: -6.6867523193359375
    5. '')' → logprob: -6.8117523193359375
    6. '())' → logprob: -6.8117523193359375
    7. '()' → logprob: -7.1867523193359375
    8. '()]' → logprob: -7.6867523193359375
    9. ' )' → logprob: -7.8117523193359375
    10. '']' → logprob: -9.686752319335938

Token 71: ' *' (ID: 425)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6996938586235046
    2. '(N' → logprob: -0.6996938586235046
    3. ' (' → logprob: -5.82469367980957
    4. ',' → logprob: -7.07469367980957
    5. '([' → logprob: -7.19969367980957
    6. '(len' → logprob: -7.44969367980957
    7. ']' → logprob: -7.94969367980957
    8. '(n' → logprob: -8.19969367980957
    9. '((' → logprob: -8.57469367980957
    10. '(dp' → logprob: -8.82469367980957

Token 72: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00010819212911883369
    2. ' (' → logprob: -9.500107765197754
    3. '(n' → logprob: -11.125107765197754
    4. '(' → logprob: -11.375107765197754
    5. '(M' → logprob: -12.375107765197754
    6. '   ' → logprob: -13.250107765197754
    7. '(i' → logprob: -15.125107765197754
    8. '((' → logprob: -15.375107765197754
    9. 'N' → logprob: -16.00010871887207
    10. ' ' → logprob: -16.75010871887207

Token 73: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00023762896307744086
    2. '(N' → logprob: -8.875237464904785
    3. ' N' → logprob: -9.250237464904785
    4. '   ' → logprob: -14.125237464904785
    5. '(' → logprob: -15.125237464904785
    6. 'M' → logprob: -15.625237464904785
    7. ' ' → logprob: -16.1252384185791
    8. ' (' → logprob: -16.3752384185791
    9. '	N' → logprob: -16.5002384185791
    10. 'n' → logprob: -17.5002384185791

Token 74: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011714138090610504
    2. ' +' → logprob: -6.751171588897705
    3. ')' → logprob: -14.376171112060547
    4. '+)' → logprob: -15.251171112060547
    5. '+
' → logprob: -15.376171112060547
    6. '1' → logprob: -16.376171112060547
    7. ')+' → logprob: -18.501171112060547
    8. ' ' → logprob: -18.626171112060547
    9. '＋' → logprob: -18.751171112060547
    10. ' +
' → logprob: -19.376171112060547

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038169484469108284
    2. ' ' → logprob: -7.8753814697265625
    3. '   ' → logprob: -14.125381469726562
    4. '```' → logprob: -15.000381469726562
    5. '2' → logprob: -15.500381469726562
    6. ')' → logprob: -16.437881469726562
    7. '  ' → logprob: -16.562881469726562
    8. '１' → logprob: -17.187881469726562
    9. '
' → logprob: -18.125381469726562
    10. '0' → logprob: -18.187881469726562

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.750009536743164
    3. '```' → logprob: -14.250009536743164
    4. '2' → logprob: -15.000009536743164
    5. '   ' → logprob: -15.937509536743164
    6. ')' → logprob: -17.125009536743164
    7. '0' → logprob: -17.500009536743164
    8. '１' → logprob: -17.625009536743164
    9. '  ' → logprob: -17.625009536743164
    10. '``' → logprob: -18.125009536743164

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.6312321753939614e-05
    2. ')
' → logprob: -10.375036239624023
    3. ']' → logprob: -13.000036239624023
    4. ' )' → logprob: -13.625036239624023
    5. ')]' → logprob: -14.750036239624023
    6. '）' → logprob: -15.250036239624023
    7. ')
' → logprob: -15.625036239624023
    8. ')`' → logprob: -15.750036239624023
    9. ')

' → logprob: -15.875036239624023
    10. '   ' → logprob: -15.875036239624023

Token 78: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10741398483514786
    2. '
' → logprob: -2.7324140071868896
    3. '<|end|>' → logprob: -4.3574137687683105
    4. ' dp' → logprob: -4.8574137687683105
    5. '[' → logprob: -5.6074137687683105
    6. '(dp' → logprob: -5.7324137687683105
    7. '\n' → logprob: -5.8574137687683105
    8. '	dp' → logprob: -6.2324137687683105
    9. ' 
' → logprob: -6.7324137687683105
    10. '\' → logprob: -7.2324137687683105

Token 79: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.002229713834822178
    2. ' dp' → logprob: -6.127229690551758
    3. '	dp' → logprob: -11.252229690551758
    4. '_dp' → logprob: -12.127229690551758
    5. '(dp' → logprob: -12.252229690551758
    6. '\' → logprob: -12.252229690551758
    7. '[' → logprob: -12.252229690551758
    8. '\n' → logprob: -12.377229690551758
    9. '```' → logprob: -13.252229690551758
    10. ' 
' → logprob: -13.377229690551758

Token 80: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[
' → logprob: -17.375
    3. '0' → logprob: -17.875
    4. '```' → logprob: -18.375
    5. ' [' → logprob: -18.5
    6. '<|end|>' → logprob: -18.5
    7. '\[' → logprob: -19.25
    8. '=' → logprob: -19.5
    9. ' ' → logprob: -20.25
    10. '...' → logprob: -20.625

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '1' → logprob: -17.0
    4. '<|end|>' → logprob: -17.0
    5. ')' → logprob: -18.0
    6. '۰' → logprob: -18.625
    7. '<|end|>' → logprob: -20.5
    8. '```' → logprob: -21.5
    9. '０' → logprob: -21.625
    10. '[' → logprob: -21.625

Token 82: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2113979209971149e-05
    2. ' ]' → logprob: -11.375012397766113
    3. ']=' → logprob: -14.625012397766113
    4. ')' → logprob: -16.000011444091797
    5. '=' → logprob: -18.000011444091797
    6. ')]' → logprob: -18.625011444091797
    7. '']' → logprob: -19.000011444091797
    8. '`]' → logprob: -19.125011444091797
    9. ']
' → logprob: -19.625011444091797
    10. ' =' → logprob: -20.500011444091797

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868723213672638
    2. ' =' → logprob: -1.1368722915649414
    3. ' ' → logprob: -14.886872291564941
    4. '<|end|>' → logprob: -15.136872291564941
    5. ' ' → logprob: -15.261872291564941
    6. '＝' → logprob: -16.011873245239258
    7. '```' → logprob: -16.261873245239258
    8. '0' → logprob: -16.636873245239258
    9. '[' → logprob: -17.386873245239258
    10. '=}' → logprob: -18.011873245239258

Token 84: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.25023078918457
    4. ' ' → logprob: -18.50023078918457
    5. '۰' → logprob: -18.62523078918457
    6. '  ' → logprob: -19.00023078918457
    7. '00' → logprob: -19.37523078918457
    8. '```' → logprob: -19.81273078918457
    9. '０' → logprob: -20.06273078918457
    10. '000' → logprob: -20.43773078918457

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.12500762939453
    4. '۰' → logprob: -18.37500762939453
    5. '00' → logprob: -18.87500762939453
    6. '  ' → logprob: -19.18750762939453
    7. '000' → logprob: -19.50000762939453
    8. '```' → logprob: -19.75000762939453
    9. '０' → logprob: -19.87500762939453
    10. ' ' → logprob: -20.06250762939453

Token 86: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11393005400896072
    2. '<|end|>' → logprob: -2.3639299869537354
    3. '\n' → logprob: -5.3639302253723145
    4. '   ' → logprob: -5.3639302253723145
    5. '<|end|>' → logprob: -6.7389302253723145
    6. '    
' → logprob: -6.9889302253723145
    7. ' 
' → logprob: -7.8639302253723145
    8. '  
' → logprob: -7.8639302253723145
    9. '' → logprob: -8.363929748535156
    10. 'newline' → logprob: -8.738929748535156

Token 87: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0447688102722168
    2. '<|end|>' → logprob: -1.7947688102722168
    3. ' for' → logprob: -2.169768810272217
    4. ' ' → logprob: -2.169768810272217
    5. 'for' → logprob: -2.169768810272217
    6. '   ' → logprob: -2.544768810272217
    7. '\n' → logprob: -3.794768810272217
    8. '<|end|>' → logprob: -4.919768810272217
    9. '    
' → logprob: -5.294768810272217
    10. '' → logprob: -5.419768810272217

Token 88: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8050909042358398
    2. '\n' → logprob: -1.5550909042358398
    3. 'for' → logprob: -1.5550909042358398
    4. ' ' → logprob: -2.68009090423584
    5. '\' → logprob: -4.05509090423584
    6. '   ' → logprob: -4.30509090423584
    7. '<|end|>' → logprob: -4.80509090423584
    8. '
' → logprob: -4.93009090423584
    9. ' 
' → logprob: -5.30509090423584
    10. 'newline' → logprob: -5.43009090423584

Token 89: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25352004170417786
    2. ' for' → logprob: -1.5035200119018555
    3. '   ' → logprob: -7.7535200119018555
    4. 'deque' → logprob: -7.8785200119018555
    5. ' deque' → logprob: -8.128520011901855
    6. ' stack' → logprob: -9.253520011901855
    7. 'stack' → logprob: -9.628520011901855
    8. 'from' → logprob: -9.628520011901855
    9. 'de' → logprob: -10.003520011901855
    10. ' de' → logprob: -10.503520011901855

Token 90: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0003372502396814525
    2. 'i' → logprob: -8.250337600708008
    3. ' ' → logprob: -9.750337600708008
    4. ' ' → logprob: -11.375337600708008
    5. '	i' → logprob: -12.500337600708008
    6. ' space' → logprob: -15.000337600708008
    7. '  ' → logprob: -15.125337600708008
    8. 'space' → logprob: -15.437837600708008
    9. ' ‌' → logprob: -15.562837600708008
    10. ' j' → logprob: -15.812837600708008

Token 91: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759873986244202
    2. 'i' → logprob: -0.8259873986244202
    3. '	i' → logprob: -11.450987815856934
    4. ' ' → logprob: -12.325987815856934
    5. ' ' → logprob: -12.325987815856934
    6. '```' → logprob: -12.325987815856934
    7. '   ' → logprob: -12.950987815856934
    8. ')' → logprob: -13.200987815856934
    9. '`' → logprob: -13.263487815856934
    10. ' length' → logprob: -13.450987815856934

Token 92: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.162915900349617
    2. 'i' → logprob: -2.2879159450531006
    3. ' in' → logprob: -3.0379159450531006
    4. ',' → logprob: -7.7879157066345215
    5. 'in' → logprob: -7.7879157066345215
    6. ',i' → logprob: -10.66291618347168
    7. ' ' → logprob: -10.91291618347168
    8. ' ,' → logprob: -11.53791618347168
    9. '_' → logprob: -11.66291618347168
    10. '   ' → logprob: -12.03791618347168

Token 93: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04877982288599014
    2. 'in' → logprob: -3.0487797260284424
    3. ' i' → logprob: -9.423779487609863
    4. ',' → logprob: -9.673779487609863
    5. 'i' → logprob: -10.923779487609863
    6. ' ' → logprob: -11.673779487609863
    7. '   ' → logprob: -12.173779487609863
    8. '  ' → logprob: -12.173779487609863
    9. ':' → logprob: -13.173779487609863
    10. '1' → logprob: -13.298779487609863

Token 94: 'fin' (ID: 6994)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.32555365562438965
    2. 'in' → logprob: -1.3255536556243896
    3. ')' → logprob: -5.450553894042969
    4. 'dans' → logprob: -6.075553894042969
    5. 'i' → logprob: -6.200553894042969
    6. ' dans' → logprob: -6.450553894042969
    7. 'en' → logprob: -7.575553894042969
    8. ' en' → logprob: -7.700553894042969
    9. ' i' → logprob: -8.200553894042969
    10. 'range' → logprob: -8.325553894042969

Token 95: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5930883884429932
    2. ')' → logprob: -2.218088388442993
    3. ' i' → logprob: -2.218088388442993
    4. '   ' → logprob: -2.343088388442993
    5. '+' → logprob: -3.468088388442993
    6. '  ' → logprob: -4.218088150024414
    7. ' =' → logprob: -4.718088150024414
    8. ' of' → logprob: -4.968088150024414
    9. ' à' → logprob: -4.968088150024414
    10. ' ' → logprob: -5.218088150024414

Token 96: ' sous' (ID: 14487)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0111558437347412
    2. ' l' → logprob: -1.5111558437347412
    3. 'l' → logprob: -2.011155843734741
    4. 'la' → logprob: -2.386155843734741
    5. ' paquet' → logprob: -3.511155843734741
    6. 'un' → logprob: -3.636155843734741
    7. 'pa' → logprob: -3.636155843734741
    8. ')' → logprob: -3.761155843734741
    9. 's' → logprob: -4.26115608215332
    10. ' un' → logprob: -4.38615608215332

Token 97: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.103131890296936
    2. '   ' → logprob: -1.728131890296936
    3. 'interval' → logprob: -2.3531317710876465
    4. 'la' → logprob: -2.7281317710876465
    5. 'chaine' → logprob: -2.9781317710876465
    6. 'array' → logprob: -3.2281317710876465
    7. 'sequence' → logprob: -3.6031317710876465
    8. 'liste' → logprob: -3.7281317710876465
    9. '```' → logprob: -3.7281317710876465
    10. ')' → logprob: -3.9781317710876465

Token 98: 'ensemble' (ID: 37301)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.2514216899871826
    2. 'segment' → logprob: -2.0014216899871826
    3. 'sé' → logprob: -2.2514216899871826
    4. 'array' → logprob: -2.3764216899871826
    5. 'interval' → logprob: -2.3764216899871826
    6. 'liste' → logprob: -2.7514216899871826
    7. 'la' → logprob: -3.0014216899871826
    8. 'table' → logprob: -3.2514216899871826
    9. 'chaine' → logprob: -3.3764216899871826
    10. 's' → logprob: -3.5014216899871826

Token 99: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.0357586145401
    2. ' ),' → logprob: -1.5357586145401
    3. ' de' → logprob: -2.0357584953308105
    4. ' i' → logprob: -2.1607584953308105
    5. ')' → logprob: -2.2857584953308105
    6. ' )' → logprob: -3.5357584953308105
    7. ' ,' → logprob: -4.4107584953308105
    8. 'de' → logprob: -4.5357584953308105
    9. ',' → logprob: -5.0357584953308105
    10. ' des' → logprob: -5.4107584953308105

Token 100: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9665880799293518
    2. '    ' → logprob: -1.091588020324707
    3. ' ' → logprob: -1.716588020324707
    4. 'for' → logprob: -2.591588020324707
    5. '   ' → logprob: -3.841588020324707
    6. ' i' → logprob: -6.216588020324707
    7. ' ' → logprob: -6.466588020324707
    8. ' \' → logprob: -6.841588020324707
    9. ' 
' → logprob: -7.216588020324707
    10. 'range' → logprob: -7.841588020324707

Token 101: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1496027410030365
    2. ' for' → logprob: -2.0246026515960693
    3. 's' → logprob: -6.149602890014648
    4. '   ' → logprob: -6.399602890014648
    5. ' veut' → logprob: -7.649602890014648
    6. 'r' → logprob: -8.149602890014648
    7. 'range' → logprob: -8.524602890014648
    8. ' ' → logprob: -8.649602890014648
    9. 'expl' → logprob: -8.899602890014648
    10. 've' → logprob: -9.024602890014648

Token 102: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.2776089906692505
    2. 'ourt' → logprob: -1.5276089906692505
    3. 'ours' → logprob: -4.152608871459961
    4. 'oure' → logprob: -4.902608871459961
    5. 'ou' → logprob: -6.402608871459961
    6. '```' → logprob: -9.152608871459961
    7. 'orrer' → logprob: -10.027608871459961
    8. 'OUR' → logprob: -10.152608871459961
    9. 'ô' → logprob: -10.277608871459961
    10. '_' → logprob: -10.402608871459961

Token 103: ' au' (ID: 2791)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.798947811126709
    2. ' range' → logprob: -1.048947811126709
    3. 'j' → logprob: -2.298947811126709
    4. ' j' → logprob: -3.923947811126709
    5. ' for' → logprob: -4.048947811126709
    6. '   ' → logprob: -4.298947811126709
    7. ' la' → logprob: -4.548947811126709
    8. ' i' → logprob: -4.673947811126709
    9. 'for' → logprob: -4.798947811126709
    10. ' ' → logprob: -5.048947811126709

Token 104: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.9475526213645935
    2. 'moins' → logprob: -1.0725526809692383
    3. 'c' → logprob: -1.8225526809692383
    4. 'paravant' → logprob: -3.5725526809692383
    5. 'pas' → logprob: -3.8225526809692383
    6. 'm' → logprob: -4.072552680969238
    7. 'p' → logprob: -5.197552680969238
    8. 'pass' → logprob: -5.447552680969238
    9. 'n' → logprob: -5.822552680969238
    10. 'cun' → logprob: -6.072552680969238

Token 105: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.007026745937764645
    2. 'K' → logprob: -6.132026672363281
    3. 'i' → logprob: -6.132026672363281
    4. 'j' → logprob: -6.757026672363281
    5. ' M' → logprob: -7.382026672363281
    6. 'N' → logprob: -7.507026672363281
    7. '   ' → logprob: -8.507026672363281
    8. ' ' → logprob: -10.132026672363281
    9. '```' → logprob: -10.507026672363281
    10. '  ' → logprob: -11.007026672363281

Token 106: ' oranges' (ID: 120311)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15240976214408875
    2. ' for' → logprob: -2.152409791946411
    3. 'for' → logprob: -3.902409791946411
    4. ',' → logprob: -6.402409553527832
    5. ' i' → logprob: -6.652409553527832
    6. ' ' → logprob: -7.652409553527832
    7. '  ' → logprob: -7.777409553527832
    8. '	for' → logprob: -8.777409553527832
    9. '    ' → logprob: -8.902409553527832
    10. '.' → logprob: -9.152409553527832

Token 108: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31208381056785583
    2. 'pr' → logprob: -2.5620837211608887
    3. 'part' → logprob: -2.9370837211608887
    4. 'l' → logprob: -3.3120837211608887
    5. 're' → logprob: -3.9370837211608887
    6. 'ret' → logprob: -4.312083721160889
    7. 'la' → logprob: -4.437083721160889
    8. 'rec' → logprob: -4.437083721160889
    9. 'preced' → logprob: -4.812083721160889
    10. 'prendre' → logprob: -4.937083721160889

Token 109: ''ar' (ID: 54307)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20997503399848938
    2. 'i' → logprob: -1.834975004196167
    3. 'e' → logprob: -5.709975242614746
    4. 'index' → logprob: -6.084975242614746
    5. 'indices' → logprob: -6.209975242614746
    6. 'indice' → logprob: -6.209975242614746
    7. ''i' → logprob: -6.334975242614746
    8. 'imiter' → logprob: -6.709975242614746
    9. ''intérieur' → logprob: -6.834975242614746
    10. '   ' → logprob: -7.209975242614746

Token 110: 'rière' (ID: 34908)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1264062374830246
    2. 'rière' → logprob: -2.251406192779541
    3. 'bit' → logprob: -6.001406192779541
    4. 'd' → logprob: -6.751406192779541
    5. 'ri' → logprob: -6.751406192779541
    6. 'g' → logprob: -6.876406192779541
    7. 'ge' → logprob: -7.001406192779541
    8. 't' → logprob: -7.876406192779541
    9. 'range' → logprob: -7.876406192779541
    10. 'ret' → logprob: -7.876406192779541

Token 111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00759704178199172
    2. ' for' → logprob: -5.007596969604492
    3. '    
' → logprob: -7.882596969604492
    4. 'for' → logprob: -9.007596969604492
    5. '    ' → logprob: -9.507596969604492
    6. '<|end|>' → logprob: -9.882596969604492
    7. ' ' → logprob: -10.007596969604492
    8. '\n' → logprob: -10.007596969604492
    9. '
' → logprob: -10.507596969604492
    10. '  ' → logprob: -10.632596969604492

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003559615579433739
    2. ' for' → logprob: -8.25035572052002
    3. 'for' → logprob: -10.12535572052002
    4. '<|end|>' → logprob: -10.50035572052002
    5. '	for' → logprob: -11.37535572052002
    6. '    
' → logprob: -11.87535572052002
    7. ',' → logprob: -12.62535572052002
    8. '```' → logprob: -13.87535572052002
    9. '<|end|>' → logprob: -13.87535572052002
    10. '\t' → logprob: -14.37535572052002

Token 113: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026363929733633995
    2. ' for' → logprob: -4.151363849639893
    3. 'for' → logprob: -4.651363849639893
    4. '
' → logprob: -7.651363849639893
    5. '    
' → logprob: -9.65136432647705
    6. '	for' → logprob: -9.65136432647705
    7. '\n' → logprob: -10.27636432647705
    8. '```' → logprob: -10.52636432647705
    9. ' ' → logprob: -10.77636432647705
    10. '  ' → logprob: -11.15136432647705

Token 114: ' Afin' (ID: 152861)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3954009711742401
    2. ' for' → logprob: -1.1454010009765625
    3. '   ' → logprob: -4.7704010009765625
    4. '```' → logprob: -11.770401000976562
    5. '	for' → logprob: -11.895401000976562
    6. ' i' → logprob: -13.895401000976562
    7. ' ' → logprob: -14.520401000976562
    8. 'i' → logprob: -15.020401000976562
    9. '
' → logprob: -15.520401000976562
    10. '    
' → logprob: -16.020401000976562

Token 115: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26769453287124634
    2. 'd' → logprob: -2.1426944732666016
    3. 'de' → logprob: -2.2676944732666016
    4. ' de' → logprob: -4.642694473266602
    5. ' d' → logprob: -5.642694473266602
    6. '  ' → logprob: -7.767694473266602
    7. '    ' → logprob: -8.267694473266602
    8. ' ' → logprob: -10.392694473266602
    9. 'def' → logprob: -10.392694473266602
    10. ' of' → logprob: -10.892694473266602

Token 116: ' trouver' (ID: 23195)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.135098934173584
    2. 'optim' → logprob: -1.260098934173584
    3. ' optimiser' → logprob: -1.760098934173584
    4. 'contin' → logprob: -3.260098934173584
    5. 'calcul' → logprob: -4.260098934173584
    6. 'prendre' → logprob: -4.385098934173584
    7. ' limiter' → logprob: -4.635098934173584
    8. 'g' → logprob: -4.760098934173584
    9. ' minim' → logprob: -4.760098934173584
    10. ' optim' → logprob: -4.760098934173584

Token 117: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8275019526481628
    2. ' la' → logprob: -1.3275020122528076
    3. ' le' → logprob: -1.8275020122528076
    4. 'la' → logprob: -2.0775020122528076
    5. 'les' → logprob: -5.7025017738342285
    6. 'une' → logprob: -6.3275017738342285
    7. ' une' → logprob: -6.9525017738342285
    8. ' un' → logprob: -6.9525017738342285
    9. '   ' → logprob: -7.2025017738342285
    10. 'the' → logprob: -7.3275017738342285

Token 118: ' meilleure' (ID: 52387)
  Prédit: ' meilleure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' meilleure' → logprob: -0.3306615650653839
    2. '   ' → logprob: -2.5806615352630615
    3. ' solution' → logprob: -2.5806615352630615
    4. ' ' → logprob: -3.3306615352630615
    5. ' taille' → logprob: -3.8306615352630615
    6. ' meilleur' → logprob: -4.080661773681641
    7. ' minimal' → logprob: -4.455661773681641
    8. 'me' → logprob: -5.205661773681641
    9. ' i' → logprob: -5.205661773681641
    10. 'min' → logprob: -5.830661773681641

Token 119: ' décou' (ID: 68302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4403536319732666
    2. ' option' → logprob: -2.9403536319732666
    3. ' taille' → logprob: -3.1903536319732666
    4. ' ' → logprob: -3.1903536319732666
    5. ' combinaison' → logprob: -3.4403536319732666
    6. ' j' → logprob: -3.9403536319732666
    7. ' segmentation' → logprob: -4.1903533935546875
    8. 'option' → logprob: -4.1903533935546875
    9. 'partition' → logprob: -4.4403533935546875
    10. ' solution' → logprob: -4.4403533935546875

Token 120: 'pe' (ID: 424)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.5645878911018372
    2. 'p' → logprob: -1.5645878314971924
    3. 'pe' → logprob: -2.4395878314971924
    4. 'piece' → logprob: -3.0645878314971924
    5. 'partition' → logprob: -3.5645878314971924
    6. '   ' → logprob: -3.9395878314971924
    7. 'pie' → logprob: -4.6895880699157715
    8. 'ption' → logprob: -4.6895880699157715
    9. '割' → logprob: -5.9395880699157715
    10. 'piec' → logprob: -6.4395880699157715

Token 121: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1896710991859436
    2. ' for' → logprob: -1.9396710395812988
    3. 'for' → logprob: -3.939671039581299
    4. ',' → logprob: -5.439671039581299
    5. ' ' → logprob: -6.814671039581299
    6. '    
' → logprob: -7.189671039581299
    7. '	for' → logprob: -7.439671039581299
    8. ' 
' → logprob: -7.689671039581299
    9. ':' → logprob: -7.814671039581299
    10. '  
' → logprob: -7.939671039581299

Token 122: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6236833333969116
    2. '
' → logprob: -1.2486833333969116
    3. '\n' → logprob: -2.873683452606201
    4. ' for' → logprob: -3.623683452606201
    5. ' 
' → logprob: -3.873683452606201
    6. '  
' → logprob: -3.873683452606201
    7. '    
' → logprob: -3.998683452606201
    8. ' ' → logprob: -4.373683452606201
    9. '\' → logprob: -5.123683452606201
    10. 'for' → logprob: -5.248683452606201

Token 123: ' considér' (ID: 68502)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.39522790908813477
    2. 'for' → logprob: -1.8952279090881348
    3. ' range' → logprob: -2.7702279090881348
    4. '   ' → logprob: -4.145227909088135
    5. '```' → logprob: -4.145227909088135
    6. 'pl' → logprob: -4.270227909088135
    7. 'or' → logprob: -4.270227909088135
    8. 'pack' → logprob: -4.520227909088135
    9. 'une' → logprob: -5.645227909088135
    10. 'dp' → logprob: -5.645227909088135

Token 124: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.5374708771705627
    2. 'nt' → logprob: -1.787470817565918
    3. 'ration' → logprob: -2.662470817565918
    4. 'ng' → logprob: -2.912470817565918
    5. 'ation' → logprob: -3.537470817565918
    6. 't' → logprob: -3.662470817565918
    7. 'rant' → logprob: -3.787470817565918
    8. 'tion' → logprob: -4.662470817565918
    9. 'ération' → logprob: -5.162470817565918
    10. '#' → logprob: -5.162470817565918

Token 125: ' des' (ID: 731)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3112941086292267
    2. ' la' → logprob: -1.9362940788269043
    3. ' j' → logprob: -2.3112940788269043
    4. 'les' → logprob: -4.936294078826904
    5. 'j' → logprob: -5.436294078826904
    6. ' le' → logprob: -5.561294078826904
    7. ' l' → logprob: -6.436294078826904
    8. ' i' → logprob: -6.436294078826904
    9. ' ' → logprob: -6.686294078826904
    10. 'la' → logprob: -6.936294078826904

Token 126: ' sous' (ID: 14487)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.49732932448387146
    2. ' oranges' → logprob: -1.2473293542861938
    3. '   ' → logprob: -3.7473292350769043
    4. 'j' → logprob: -4.247329235076904
    5. 'ranges' → logprob: -4.622329235076904
    6. ' j' → logprob: -4.997329235076904
    7. 's' → logprob: -5.372329235076904
    8. 'group' → logprob: -5.372329235076904
    9. ' groupes' → logprob: -5.497329235076904
    10. ' segments' → logprob: -5.497329235076904

Token 127: '-table' (ID: 35909)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7738887071609497
    2. '   ' → logprob: -1.2738887071609497
    3. 'ense' → logprob: -2.39888858795166
    4. 'sets' → logprob: -2.52388858795166
    5. 'segments' → logprob: -3.39888858795166
    6. 'list' → logprob: -4.27388858795166
    7. '-group' → logprob: -4.89888858795166
    8. '-list' → logprob: -5.39888858795166
    9. '-se' → logprob: -5.39888858795166
    10. 'ranges' → logprob: -5.64888858795166

Token 128: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.008293514139950275
    2. 'sets' → logprob: -6.133293628692627
    3. 's' → logprob: -6.508293628692627
    4. 'au' → logprob: -7.258293628692627
    5. 'ttes' → logprob: -7.258293628692627
    6. '```' → logprob: -7.258293628692627
    7. 'ux' → logprob: -8.008293151855469
    8. ' subsets' → logprob: -8.383293151855469
    9. 'subset' → logprob: -8.633293151855469
    10. '#' → logprob: -8.758293151855469

Token 129: ' cont' (ID: 836)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.329062283039093
    2. 'for' → logprob: -2.0790622234344482
    3. ' for' → logprob: -2.7040622234344482
    4. 'de' → logprob: -3.5790622234344482
    5. ' de' → logprob: -3.8290622234344482
    6. 'range' → logprob: -4.579062461853027
    7. ',' → logprob: -4.704062461853027
    8. 'from' → logprob: -5.579062461853027
    9. ')' → logprob: -5.579062461853027
    10. ' i' → logprob: -6.079062461853027

Token 130: 'igus' (ID: 79914)
  Prédit: 'igus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igus' → logprob: -0.02623375877737999
    2. 'igu' → logprob: -4.526233673095703
    3. 'in' → logprob: -5.026233673095703
    4. 'inus' → logprob: -6.151233673095703
    5. 'iguous' → logprob: -6.276233673095703
    6. '   ' → logprob: -6.526233673095703
    7. 'inue' → logprob: -7.026233673095703
    8. 'inu' → logprob: -7.151233673095703
    9. 'ig' → logprob: -7.276233673095703
    10. 'enus' → logprob: -9.151233673095703

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022586178965866566
    2. 'for' → logprob: -6.752258777618408
    3. ' for' → logprob: -7.127258777618408
    4. '    
' → logprob: -9.00225830078125
    5. ',' → logprob: -9.25225830078125
    6. '
' → logprob: -10.62725830078125
    7. '.' → logprob: -11.37725830078125
    8. '<|end|>' → logprob: -11.62725830078125
    9. ')' → logprob: -12.37725830078125
    10. '	for' → logprob: -13.00225830078125

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00048477304517291486
    2. ' for' → logprob: -8.125484466552734
    3. 'for' → logprob: -9.000484466552734
    4. '    
' → logprob: -10.125484466552734
    5. '
' → logprob: -11.000484466552734
    6. '	for' → logprob: -12.375484466552734
    7. '```' → logprob: -13.250484466552734
    8. ',' → logprob: -14.000484466552734
    9. '<|end|>' → logprob: -15.125484466552734
    10. '    ' → logprob: -15.250484466552734

Token 133: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43174824118614197
    2. 'for' → logprob: -1.6817482709884644
    3. ' for' → logprob: -1.8067482709884644
    4. '
' → logprob: -8.306748390197754
    5. '    
' → logprob: -9.681748390197754
    6. '	for' → logprob: -9.806748390197754
    7. ' ' → logprob: -11.806748390197754
    8. '  ' → logprob: -12.181748390197754
    9. '```' → logprob: -12.181748390197754
    10. '    ' → logprob: -12.681748390197754

Token 134: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4201650619506836
    2. ' for' → logprob: -1.1701650619506836
    3. '   ' → logprob: -3.4201650619506836
    4. '```' → logprob: -10.670165061950684
    5. '
' → logprob: -12.795165061950684
    6. ' i' → logprob: -13.045165061950684
    7. 'from' → logprob: -13.420165061950684
    8. '	for' → logprob: -13.420165061950684
    9. ' ' → logprob: -13.420165061950684
    10. '  ' → logprob: -13.545165061950684

Token 135: ' au' (ID: 2791)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.2123147249221802
    2. ' une' → logprob: -1.8373147249221802
    3. 'une' → logprob: -2.3373146057128906
    4. 'collections' → logprob: -2.3373146057128906
    5. 'des' → logprob: -2.8373146057128906
    6. 'max' → logprob: -2.9623146057128906
    7. 'len' → logprob: -3.3373146057128906
    8. ' un' → logprob: -3.5873146057128906
    9. 'au' → logprob: -3.5873146057128906
    10. ' la' → logprob: -4.087314605712891

Token 136: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.010343351401388645
    2. 'most' → logprob: -4.760343551635742
    3. 'moins' → logprob: -6.510343551635742
    4. '```' → logprob: -8.635343551635742
    5. ' plus' → logprob: -10.510343551635742
    6. 'jus' → logprob: -12.135343551635742
    7. 'Plus' → logprob: -12.135343551635742
    8. '   ' → logprob: -12.760343551635742
    9. 'max' → logprob: -12.760343551635742
    10. 'maximum' → logprob: -12.885343551635742

Token 137: ' M' (ID: 391)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.20169028639793396
    2. 'M' → logprob: -2.451690196990967
    3. ' K' → logprob: -2.451690196990967
    4. ' M' → logprob: -4.576690196990967
    5. ' ' → logprob: -9.826690673828125
    6. '

' → logprob: -12.951690673828125
    7. '```' → logprob: -13.076690673828125
    8. ' ' → logprob: -13.201690673828125
    9. '
' → logprob: -13.451690673828125
    10. '  ' → logprob: -13.576690673828125

Token 138: ' éléments' (ID: 57375)
  Prédit: ' oranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' oranges' → logprob: -0.5490665435791016
    2. ' éléments' → logprob: -1.2990665435791016
    3. 'or' → logprob: -2.5490665435791016
    4. 'élé' → logprob: -3.0490665435791016
    5. ' elements' → logprob: -4.049066543579102
    6. 'elements' → logprob: -6.049066543579102
    7. ' or' → logprob: -6.924066543579102
    8. ' items' → logprob: -7.924066543579102
    9. ' ' → logprob: -7.924066543579102
    10. 'items' → logprob: -8.174066543579102

Token 139: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5006990432739258
    2. '   ' → logprob: -1.5006990432739258
    3. ' for' → logprob: -1.8756990432739258
    4. '
' → logprob: -4.125699043273926
    5. '    
' → logprob: -7.500699043273926
    6. ' ' → logprob: -8.250699043273926
    7. '	for' → logprob: -8.625699043273926
    8. ')' → logprob: -9.000699043273926
    9. '  
' → logprob: -9.750699043273926
    10. ',' → logprob: -9.875699043273926

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0078460443764925
    2. ' for' → logprob: -5.132845878601074
    3. 'for' → logprob: -6.882845878601074
    4. '    
' → logprob: -7.632845878601074
    5. '
' → logprob: -8.007845878601074
    6. ',' → logprob: -10.632845878601074
    7. '	for' → logprob: -11.257845878601074
    8. '<|end|>' → logprob: -11.257845878601074
    9. '```' → logprob: -12.382845878601074
    10. ')' → logprob: -12.507845878601074

Token 141: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015288570895791054
    2. 'for' (adapté à ' for') → logprob: -4.390288352966309
    3. ' for' → logprob: -5.890288352966309
    4. '    
' → logprob: -12.140288352966309
    5. '
' → logprob: -13.640288352966309
    6. '	for' → logprob: -14.640288352966309
    7. '    ' → logprob: -14.765288352966309
    8. 'de' → logprob: -14.890288352966309
    9. 'deque' → logprob: -15.015288352966309
    10. 'from' → logprob: -15.390288352966309

Token 142: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00010211274639004841
    2. 'i' → logprob: -9.250102043151855
    3. ' ' → logprob: -13.000102043151855
    4. '_i' → logprob: -13.250102043151855
    5. '	i' → logprob: -13.875102043151855
    6. ' ' → logprob: -14.750102043151855
    7. ' _' → logprob: -15.375102043151855
    8. '_' → logprob: -15.875102043151855
    9. '```' → logprob: -17.500102996826172
    10. '(i' → logprob: -17.625102996826172

Token 143: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01607918180525303
    2. 'in' → logprob: -4.141078948974609
    3. ' ' → logprob: -10.51607894897461
    4. '1' → logprob: -12.51607894897461
    5. '```' → logprob: -12.64107894897461
    6. 'In' → logprob: -13.01607894897461
    7. '   ' → logprob: -13.14107894897461
    8. '	in' → logprob: -13.76607894897461
    9. 'import' → logprob: -13.89107894897461
    10. 'range' → logprob: -14.14107894897461

Token 144: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01416398212313652
    2. 'range' → logprob: -4.264163970947266
    3. '(range' → logprob: -15.139163970947266
    4. '	range' → logprob: -16.014163970947266
    5. ' ' → logprob: -16.139163970947266
    6. 'ange' → logprob: -18.389163970947266
    7. '```' → logprob: -18.389163970947266
    8. '.range' → logprob: -18.889163970947266
    9. '  ' → logprob: -18.889163970947266
    10. '   ' → logprob: -19.139163970947266

Token 145: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.778209353797138e-05
    2. '(N' → logprob: -9.750067710876465
    3. '(M' → logprob: -12.125067710876465
    4. ' (' → logprob: -12.750067710876465
    5. '(i' → logprob: -14.375067710876465
    6. '1' → logprob: -14.750067710876465
    7. ' ' → logprob: -16.62506866455078
    8. '(K' → logprob: -17.25006866455078
    9. '   ' → logprob: -17.37506866455078
    10. '(n' → logprob: -17.87506866455078

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002251125843031332
    2. 'N' → logprob: -8.625225067138672
    3. ' ' → logprob: -10.125225067138672
    4. '(' → logprob: -13.000225067138672
    5. '   ' → logprob: -13.125225067138672
    6. 'M' → logprob: -14.500225067138672
    7. ' N' → logprob: -14.750225067138672
    8. 'K' → logprob: -16.125225067138672
    9. '(N' → logprob: -16.500225067138672
    10. ')' → logprob: -18.125225067138672

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008097442332655191
    2. ' ,' → logprob: -7.125809669494629
    3. ',i' → logprob: -12.625809669494629
    4. '   ' → logprob: -14.000809669494629
    5. ',N' → logprob: -14.000809669494629
    6. ' ' → logprob: -16.250810623168945
    7. '(i' → logprob: -16.875810623168945
    8. ',n' → logprob: -17.250810623168945
    9. ',
' → logprob: -17.375810623168945
    10. ',len' → logprob: -17.500810623168945

Token 148: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001929228543303907
    2. ' N' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.25192928314209
    4. 'n' → logprob: -17.876928329467773
    5. ' ' → logprob: -18.876928329467773
    6. '	N' → logprob: -19.126928329467773
    7. ')' → logprob: -19.876928329467773
    8. '```' → logprob: -20.001928329467773
    9. 'min' → logprob: -20.251928329467773
    10. '  ' → logprob: -20.501928329467773

Token 149: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3133506774902344
    2. ' +' → logprob: -1.3133506774902344
    3. '   ' → logprob: -9.438350677490234
    4. '1' → logprob: -13.188350677490234
    5. '+i' → logprob: -13.313350677490234
    6. '):
' → logprob: -13.438350677490234
    7. '+
' → logprob: -13.813350677490234
    8. '
' → logprob: -13.938350677490234
    9. ' +
' → logprob: -14.438350677490234
    10. '```' → logprob: -14.813350677490234

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003365350130479783
    2. ' ' → logprob: -8.000336647033691
    3. '   ' → logprob: -13.875336647033691
    4. '```' → logprob: -16.125335693359375
    5. '
' → logprob: -17.875335693359375
    6. ')' → logprob: -18.250335693359375
    7. '2' → logprob: -18.687835693359375
    8. '  ' → logprob: -18.750335693359375
    9. '１' → logprob: -19.062835693359375
    10. '    ' → logprob: -19.312835693359375

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.625009536743164
    4. ')' → logprob: -18.625009536743164
    5. 'i' → logprob: -18.625009536743164
    6. '```' → logprob: -18.750009536743164
    7. '2' → logprob: -19.125009536743164
    8. '
' → logprob: -19.500009536743164
    9. '１' → logprob: -20.125009536743164
    10. '  ' → logprob: -20.687509536743164

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010255470406264067
    2. ':' → logprob: -7.126025676727295
    3. ')' → logprob: -8.876025199890137
    4. '):
' → logprob: -9.501025199890137
    5. ' ):' → logprob: -12.126025199890137
    6. ',' → logprob: -14.751025199890137
    7. '():' → logprob: -15.251025199890137
    8. '   ' → logprob: -15.626025199890137
    9. ']:' → logprob: -16.001026153564453
    10. '}:' → logprob: -16.251026153564453

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010302766226232052
    2. '    ' → logprob: -5.260302543640137
    3. '   ' → logprob: -6.010302543640137
    4. ':' → logprob: -7.135302543640137
    5. ' ' → logprob: -8.010302543640137
    6. '        
' → logprob: -8.260302543640137
    7. '<|end|>' → logprob: -8.385302543640137
    8. ',' → logprob: -8.510302543640137
    9. '    ' → logprob: -9.010302543640137
    10. ' :' → logprob: -9.135302543640137

Token 154: ' max' (ID: 2999)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7382281422615051
    2. 'for' → logprob: -1.3632280826568604
    3. ' j' → logprob: -2.8632280826568604
    4. '   ' → logprob: -2.9882280826568604
    5. 'j' → logprob: -3.1132280826568604
    6. ' max' → logprob: -3.4882280826568604
    7. 'max' (adapté à ' max') → logprob: -3.8632280826568604
    8. ' deque' → logprob: -4.2382283210754395
    9. 'deque' → logprob: -4.3632283210754395
    10. 'cost' → logprob: -5.6132283210754395

Token 155: '_de' (ID: 5047)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.922928512096405
    2. '_' → logprob: -1.1729285717010498
    3. '_or' → logprob: -1.4229285717010498
    4. '_len' → logprob: -4.297928333282471
    5. '_cost' → logprob: -4.672928333282471
    6. '_a' → logprob: -4.922928333282471
    7. '_size' → logprob: -5.172928333282471
    8. '_value' → logprob: -5.422928333282471
    9. '_weight' → logprob: -6.297928333282471
    10. '_price' → logprob: -6.547928333282471

Token 156: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.5308180451393127
    2. 'q' → logprob: -1.030817985534668
    3. 'tail' → logprob: -3.655817985534668
    4. 'p' → logprob: -4.280817985534668
    5. 'f' → logprob: -4.780817985534668
    6. 'l' → logprob: -5.530817985534668
    7. 'mand' → logprob: -8.030817985534668
    8. 'pth' → logprob: -8.155817985534668
    9. 'bug' → logprob: -8.530817985534668
    10. 'qu' → logprob: -8.530817985534668

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026339774951338768
    2. '=' → logprob: -3.6513397693634033
    3. ')' → logprob: -11.151339530944824
    4. '.append' → logprob: -11.151339530944824
    5. ' ' → logprob: -12.776339530944824
    6. '.clear' → logprob: -13.651339530944824
    7. '(' → logprob: -14.026339530944824
    8. ']' → logprob: -14.151339530944824
    9. '=[]' → logprob: -14.151339530944824
    10. '.' → logprob: -14.276339530944824

Token 158: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.004078878089785576
    2. ' collections' → logprob: -5.5040788650512695
    3. 'collection' → logprob: -15.00407886505127
    4. 'deque' → logprob: -15.62907886505127
    5. 'col' → logprob: -16.879079818725586
    6. '.collections' → logprob: -18.629079818725586
    7. 'collect' → logprob: -18.754079818725586
    8. 'Collections' → logprob: -19.254079818725586
    9. ' collection' → logprob: -20.504079818725586
    10. '(collection' → logprob: -20.754079818725586

Token 159: '.de' (ID: 3906)
  Prédit: '.de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.de' → logprob: -0.001424045069143176
    2. '.dequeue' → logprob: -6.6264238357543945
    3. 'deque' → logprob: -10.376423835754395
    4. ' deque' → logprob: -10.876423835754395
    5. '.De' → logprob: -11.501423835754395
    6. '.' → logprob: -11.501423835754395
    7. ' .' → logprob: -11.626423835754395
    8. ' import' → logprob: -12.751423835754395
    9. 'Deque' → logprob: -13.126423835754395
    10. 'import' → logprob: -13.126423835754395

Token 160: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -7.465036105713807e-06
    2. 'q' → logprob: -12.125007629394531
    3. 'qu' → logprob: -13.250007629394531
    4. 'ques' → logprob: -16.62500762939453
    5. 'queue' → logprob: -16.75000762939453
    6. 'uq' → logprob: -17.12500762939453
    7. 'ue' → logprob: -17.37500762939453
    8. 'ck' → logprob: -18.37500762939453
    9. 'deque' → logprob: -18.37500762939453
    10. 'qe' → logprob: -18.50000762939453

Token 161: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01817382499575615
    2. '()
' → logprob: -4.018173694610596
    3. '()

' → logprob: -10.893174171447754
    4. '   ' → logprob: -14.018174171447754
    5. '()\' → logprob: -14.143174171447754
    6. '(' → logprob: -14.268174171447754
    7. '()<' → logprob: -14.768174171447754
    8. '()>' → logprob: -14.893174171447754
    9. '()]' → logprob: -15.018174171447754
    10. '(),' → logprob: -15.143174171447754

Token 162: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017827287956606597
    2. '<|end|>' → logprob: -9.250178337097168
    3. '        
' → logprob: -10.375178337097168
    4. ',' → logprob: -11.125178337097168
    5. '   ' → logprob: -11.250178337097168
    6. ' for' → logprob: -12.250178337097168
    7. '<|end|>' → logprob: -13.000178337097168
    8. ' ' → logprob: -13.000178337097168
    9. ')' → logprob: -13.250178337097168
    10. '        ' → logprob: -13.375178337097168

Token 163: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027134892297908664
    2. ',' → logprob: -9.875271797180176
    3. 'for' → logprob: -10.000271797180176
    4. '        
' → logprob: -10.125271797180176
    5. '   ' → logprob: -10.250271797180176
    6. ')' → logprob: -10.625271797180176
    7. '=' → logprob: -11.000271797180176
    8. '()' → logprob: -11.375271797180176
    9. ' for' → logprob: -11.625271797180176
    10. 'max' → logprob: -12.125271797180176

Token 164: ' stock' (ID: 6546)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: 'e' (ID: 68)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8363242745399475
    2. 'er' → logprob: -1.4613242149353027
    3. '[' → logprob: -2.3363242149353027
    4. ')' → logprob: -2.7113242149353027
    5. '(max' → logprob: -2.9613242149353027
    6. '[]' → logprob: -4.211324214935303
    7. '   ' → logprob: -4.211324214935303
    8. '(' → logprob: -4.211324214935303
    9. '('' → logprob: -4.586324214935303
    10. 'max' → logprob: -4.836324214935303

Token 166: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21703480184078217
    2. 'indices' → logprob: -2.5920348167419434
    3. ' indices' → logprob: -2.9670348167419434
    4. ' (' → logprob: -4.342034816741943
    5. 'des' → logprob: -4.717034816741943
    6. ' des' → logprob: -5.092034816741943
    7. ' les' → logprob: -5.092034816741943
    8. '(indices' → logprob: -5.217034816741943
    9. '(i' → logprob: -5.592034816741943
    10. '())' → logprob: -5.842034816741943

Token 167: ' valeurs' (ID: 73668)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.11889298260211945
    2. ' indices' → logprob: -2.7438929080963135
    3. 'A' → logprob: -4.243893146514893
    4. 'élé' → logprob: -4.243893146514893
    5. 'val' → logprob: -4.493893146514893
    6. 'indexes' → logprob: -5.618893146514893
    7. ' A' → logprob: -7.368893146514893
    8. ' valeurs' → logprob: -7.368893146514893
    9. 'max' → logprob: -7.368893146514893
    10. 'or' → logprob: -8.118892669677734

Token 168: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3751062750816345
    2. ' A' → logprob: -1.7501063346862793
    3. '   ' → logprob: -2.3751063346862793
    4. '(A' → logprob: -3.8751063346862793
    5. '       ' → logprob: -5.125106334686279
    6. '(' → logprob: -5.750106334686279
    7. ' de' → logprob: -6.000106334686279
    8. ' ' → logprob: -6.125106334686279
    9. '[' → logprob: -6.500106334686279
    10. ' (' → logprob: -6.500106334686279

Token 169: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007480407948605716
    2. '[' → logprob: -7.625748157501221
    3. '[j' → logprob: -8.875747680664062
    4. '[max' → logprob: -9.500747680664062
    5. '   ' → logprob: -10.250747680664062
    6. '[min' → logprob: -12.750747680664062
    7. ' [' → logprob: -13.625747680664062
    8. '       ' → logprob: -13.875747680664062
    9. '[index' → logprob: -14.250747680664062
    10. '[m' → logprob: -14.500747680664062

Token 170: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9071987271308899
    2. '])' → logprob: -1.7821986675262451
    3. '],' → logprob: -1.9071986675262451
    4. ':i' → logprob: -1.9071986675262451
    5. 'i' → logprob: -3.657198667526245
    6. '-' → logprob: -3.657198667526245
    7. ':j' → logprob: -3.907198667526245
    8. ':' → logprob: -3.907198667526245
    9. 'j' → logprob: -4.532198905944824
    10. '[i' → logprob: -5.032198905944824

Token 171: ' décro' (ID: 176854)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6736016273498535
    2. ',' → logprob: -1.2986016273498535
    3. ')' → logprob: -2.0486016273498535
    4. '[' → logprob: -3.2986016273498535
    5. '[j' → logprob: -4.4236016273498535
    6. '[i' → logprob: -4.5486016273498535
    7. '       ' → logprob: -4.6736016273498535
    8. '    ' → logprob: -5.5486016273498535
    9. '[:' → logprob: -6.0486016273498535
    10. ')
' → logprob: -6.4236016273498535

Token 172: 'iss' (ID: 1009)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5135287046432495
    2. ']' → logprob: -2.013528823852539
    3. 'vant' → logprob: -2.763528823852539
    4. 'dent' → logprob: -3.263528823852539
    5. 'issant' → logprob: -3.763528823852539
    6. 'ch' → logprob: -4.013528823852539
    7. 'nt' → logprob: -4.138528823852539
    8. 'tant' → logprob: -4.138528823852539
    9. '}' → logprob: -4.638528823852539
    10. 'ment' → logprob: -4.763528823852539

Token 173: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.019782375544309616
    2. 'entes' → logprob: -4.894782543182373
    3. 'ants' → logprob: -5.019782543182373
    4. 'tes' → logprob: -5.769782543182373
    5. 'ques' → logprob: -7.019782543182373
    6. 'j' → logprob: -8.144782066345215
    7. 'ant' → logprob: -8.269782066345215
    8. 'ues' → logprob: -8.394782066345215
    9. 'es' → logprob: -8.519782066345215
    10. 'ents' → logprob: -9.269782066345215

Token 174: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010747483000159264
    2. ')' → logprob: -5.63574743270874
    3. ',' → logprob: -5.63574743270874
    4. '<|end|>' → logprob: -6.51074743270874
    5. '   ' → logprob: -7.63574743270874
    6. '	' → logprob: -8.010747909545898
    7. ' ' → logprob: -8.135747909545898
    8. '        
' → logprob: -8.260747909545898
    9. '    ' → logprob: -9.135747909545898
    10. ' for' → logprob: -9.260747909545898

Token 175: ' trouver' (ID: 23195)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1626487672328949
    2. ' j' → logprob: -1.9126487970352173
    3. 'i' → logprob: -7.162648677825928
    4. 'A' → logprob: -7.662648677825928
    5. ' i' → logprob: -8.162649154663086
    6. 'indices' → logprob: -8.412649154663086
    7. ' A' → logprob: -9.037649154663086
    8. 'max' → logprob: -9.162649154663086
    9. ' indices' → logprob: -9.162649154663086
    10. '   ' → logprob: -9.537649154663086

Token 176: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.48789599537849426
    2. ' max' → logprob: -1.6128959655761719
    3. ' la' → logprob: -2.237895965576172
    4. 'A' → logprob: -4.112895965576172
    5. ' A' → logprob: -4.112895965576172
    6. ' le' → logprob: -4.737895965576172
    7. ' j' → logprob: -4.987895965576172
    8. 'le' → logprob: -5.487895965576172
    9. ')' → logprob: -5.612895965576172
    10. 'j' → logprob: -5.737895965576172

Token 177: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18170078098773956
    2. ' max' → logprob: -2.1817007064819336
    3. 'maximum' → logprob: -4.181700706481934
    4. ' maximum' → logprob: -4.681700706481934
    5. ' j' → logprob: -4.931700706481934
    6. 'j' → logprob: -5.181700706481934
    7. 'i' → logprob: -5.806700706481934
    8. ' i' → logprob: -5.931700706481934
    9. 'A' → logprob: -6.056700706481934
    10. ')' → logprob: -6.681700706481934

Token 178: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036896903067827225
    2. '<|end|>' → logprob: -4.536896705627441
    3. ')' → logprob: -4.911896705627441
    4. '        ' → logprob: -5.411896705627441
    5. ',' → logprob: -5.411896705627441
    6. ' ' → logprob: -6.036896705627441
    7. '	' → logprob: -6.536896705627441
    8. '    ' → logprob: -6.536896705627441
    9. '   ' → logprob: -7.036896705627441
    10. '<|end|>' → logprob: -7.536896705627441

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11545554548501968
    2. '<|end|>' → logprob: -3.1154556274414062
    3. ' ' → logprob: -3.3654556274414062
    4. '   ' → logprob: -4.490455627441406
    5. '        
' → logprob: -5.490455627441406
    6. '    ' → logprob: -5.615455627441406
    7. '	' → logprob: -6.115455627441406
    8. '\' → logprob: -6.740455627441406
    9. ')' → logprob: -6.865455627441406
    10. '        ' → logprob: -7.115455627441406

Token 180: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5120587944984436
    2. 'for' → logprob: -1.3870587348937988
    3. ' for' → logprob: -2.012058734893799
    4. 'j' → logprob: -4.137058734893799
    5. ' j' → logprob: -7.137058734893799
    6. '   ' → logprob: -8.387059211730957
    7. '        ' → logprob: -9.387059211730957
    8. '    ' → logprob: -9.762059211730957
    9. ' ' → logprob: -10.512059211730957
    10. '	for' → logprob: -11.137059211730957

Token 181: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.005494615063071251
    2. '_val' → logprob: -5.880494594573975
    3. '_' → logprob: -6.880494594573975
    4. '_index' → logprob: -8.130495071411133
    5. '_j' → logprob: -8.255495071411133
    6. 'deque' → logprob: -8.255495071411133
    7. '_queue' → logprob: -9.005495071411133
    8. 'Deque' → logprob: -9.130495071411133
    9. '_value' → logprob: -9.380495071411133
    10. '_idx' → logprob: -9.505495071411133

Token 182: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -7.93448489275761e-05
    2. 'q' → logprob: -9.625079154968262
    3. 'ques' → logprob: -12.000079154968262
    4. ' que' → logprob: -12.875079154968262
    5. 'queue' → logprob: -13.625079154968262
    6. 'qu' → logprob: -13.625079154968262
    7. 'deque' → logprob: -14.500079154968262
    8. '```' → logprob: -14.625079154968262
    9. '[' → logprob: -15.500079154968262
    10. 'Que' → logprob: -15.875079154968262

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141714811325073
    2. '=' → logprob: -1.7014172077178955
    3. ' ' → logprob: -12.701416969299316
    4. ')' → logprob: -14.951416969299316
    5. '   ' → logprob: -16.076417922973633
    6. '  ' → logprob: -16.326417922973633
    7. '    ' → logprob: -16.451417922973633
    8. ',' → logprob: -16.951417922973633
    9. '＝' → logprob: -17.201417922973633
    10. '.' → logprob: -17.451417922973633

Token 184: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.3132629990577698
    2. ' collections' → logprob: -1.313262939453125
    3. '.collections' → logprob: -13.688262939453125
    4. 'Collections' → logprob: -16.688262939453125
    5. 'collection' → logprob: -17.688262939453125
    6. 'col' → logprob: -17.688262939453125
    7. ' collection' → logprob: -18.938262939453125
    8. 'collect' → logprob: -19.313262939453125
    9. ' ' → logprob: -19.688262939453125
    10. '   ' → logprob: -20.313262939453125

Token 185: '.de' (ID: 3906)
  Prédit: '.de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.de' → logprob: -4.870950215263292e-05
    2. '.collections' → logprob: -10.750048637390137
    3. 'collections' → logprob: -11.500048637390137
    4. 'deque' → logprob: -12.250048637390137
    5. ' .' → logprob: -12.375048637390137
    6. 'import' → logprob: -12.750048637390137
    7. '.' → logprob: -13.500048637390137
    8. '.dequeue' → logprob: -14.125048637390137
    9. '```' → logprob: -14.375048637390137
    10. '	de' → logprob: -14.875048637390137

Token 186: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.664371848164592e-05
    2. 'q' → logprob: -11.250016212463379
    3. 'ques' → logprob: -13.000016212463379
    4. 'deque' → logprob: -15.000016212463379
    5. 'queue' → logprob: -15.125016212463379
    6. 'qu' → logprob: -15.125016212463379
    7. 'collections' → logprob: -15.125016212463379
    8. 'uq' → logprob: -16.500017166137695
    9. 'quec' → logprob: -16.625017166137695
    10. 'ck' → logprob: -17.000017166137695

Token 187: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.034592388459714e-06
    2. ' ()' → logprob: -12.750005722045898
    3. '()
' → logprob: -12.875005722045898
    4. '(' → logprob: -16.1250057220459
    5. '()]' → logprob: -16.2500057220459
    6. '   ' → logprob: -16.6250057220459
    7. '()

' → logprob: -17.0000057220459
    8. ')' → logprob: -17.2500057220459
    9. '[]' → logprob: -17.3750057220459
    10. '()<' → logprob: -17.8750057220459

Token 188: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020574118942022324
    2. '#' → logprob: -4.89557409286499
    3. '       ' → logprob: -5.02057409286499
    4. '=' → logprob: -5.89557409286499
    5. '   ' → logprob: -6.14557409286499
    6. ' #' → logprob: -7.52057409286499
    7. '()
' → logprob: -8.270574569702148
    8. ' ' → logprob: -8.395574569702148
    9. ' =' → logprob: -8.895574569702148
    10. '[]' → logprob: -9.270574569702148

Token 190: ' stock' (ID: 6546)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.13415905833244324
    2. ' collections' → logprob: -2.2591590881347656
    3. 'A' → logprob: -4.259159088134766
    4. ' A' → logprob: -5.634159088134766
    5. '[]' → logprob: -7.259159088134766
    6. ' ' → logprob: -7.884159088134766
    7. 'max' → logprob: -7.884159088134766
    8. '   ' → logprob: -8.009159088134766
    9. 'deque' → logprob: -8.134159088134766
    10. 'stock' → logprob: -8.134159088134766

Token 191: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3465277850627899
    2. '=' → logprob: -2.2215278148651123
    3. 'er' → logprob: -2.4715278148651123
    4. '       ' → logprob: -4.346527576446533
    5. 'ère' → logprob: -4.721527576446533
    6. 'ote' → logprob: -4.971527576446533
    7. 'stock' → logprob: -5.096527576446533
    8. 'ue' → logprob: -5.221527576446533
    9. '   ' → logprob: -5.346527576446533
    10. 'ent' → logprob: -5.346527576446533

Token 192: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.36680102348327637
    2. 'les' → logprob: -2.8668010234832764
    3. '(A' → logprob: -2.8668010234832764
    4. '(lambda' → logprob: -2.8668010234832764
    5. '(' → logprob: -2.9918010234832764
    6. '(values' → logprob: -3.2418010234832764
    7. '()' → logprob: -3.8668010234832764
    8. 's' → logprob: -4.7418012619018555
    9. '([' → logprob: -5.1168012619018555
    10. 'the' → logprob: -5.9918012619018555

Token 193: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0005258689634501934
    2. 'A' → logprob: -7.875525951385498
    3. ' valeurs' → logprob: -9.50052547454834
    4. 'values' → logprob: -10.12552547454834
    5. '[val' → logprob: -10.87552547454834
    6. 'vals' → logprob: -12.12552547454834
    7. ' val' → logprob: -12.75052547454834
    8. 'valu' → logprob: -14.12552547454834
    9. '[A' → logprob: -14.62552547454834
    10. '-val' → logprob: -14.75052547454834

Token 194: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6389639973640442
    2. ' A' → logprob: -1.5139639377593994
    3. '(A' → logprob: -1.7639639377593994
    4. '[A' → logprob: -2.8889639377593994
    5. '[' → logprob: -4.2639641761779785
    6. '   ' → logprob: -5.1389641761779785
    7. '(' → logprob: -6.7639641761779785
    8. ' (' → logprob: -7.0139641761779785
    9. ' ' → logprob: -7.3889641761779785
    10. ' [' → logprob: -7.5139641761779785

Token 195: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002907718007918447
    2. '[' → logprob: -8.250290870666504
    3. '[min' → logprob: -11.625290870666504
    4. '[i' → logprob: -12.125290870666504
    5. '[max' → logprob: -12.250290870666504
    6. 'j' → logprob: -13.625290870666504
    7. '[:' → logprob: -13.750290870666504
    8. '   ' → logprob: -14.250290870666504
    9. ' [' → logprob: -14.375290870666504
    10. '[(' → logprob: -14.500290870666504

Token 196: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2093268483877182
    2. '])' → logprob: -1.9593268632888794
    3. '],' → logprob: -3.20932674407959
    4. ',' → logprob: -5.95932674407959
    5. '].' → logprob: -6.45932674407959
    6. ')' → logprob: -6.95932674407959
    7. '   ' → logprob: -7.20932674407959
    8. ')]' → logprob: -7.70932674407959
    9. 'j' → logprob: -8.20932674407959
    10. '[' → logprob: -9.45932674407959

Token 197: ' cro' (ID: 11270)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1139299869537354
    2. 'de' → logprob: -1.2389299869537354
    3. ' décro' → logprob: -1.7389299869537354
    4. 'd' → logprob: -3.6139299869537354
    5. 'dec' → logprob: -3.6139299869537354
    6. 'desc' → logprob: -3.7389299869537354
    7. ')' → logprob: -3.7389299869537354
    8. '   ' → logprob: -4.238929748535156
    9. 'dé' → logprob: -4.363929748535156
    10. 'deque' → logprob: -4.363929748535156

Token 198: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.005927966441959143
    2. 'issante' → logprob: -5.505928039550781
    3. 'ss' → logprob: -7.380928039550781
    4. 'issant' → logprob: -7.630928039550781
    5. 'issants' → logprob: -7.880928039550781
    6. 'is' → logprob: -8.630928039550781
    7. 'issent' → logprob: -10.505928039550781
    8. 'sc' → logprob: -10.755928039550781
    9. '   ' → logprob: -10.880928039550781
    10. 'i' → logprob: -11.130928039550781

Token 199: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.002857416868209839
    2. 's' → logprob: -6.502857208251953
    3. 'ing' → logprob: -7.627857208251953
    4. 'entes' → logprob: -8.377857208251953
    5. 'ants' → logprob: -8.752857208251953
    6. 'ante' → logprob: -9.252857208251953
    7. 'ss' → logprob: -9.627857208251953
    8. 'centes' → logprob: -9.877857208251953
    9. 'es' → logprob: -10.002857208251953
    10. 'issants' → logprob: -10.502857208251953

Token 200: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2756929099559784
    2. '<|end|>' → logprob: -1.7756929397583008
    3. ')' → logprob: -3.650692939758301
    4. ',' → logprob: -4.775692939758301
    5. '<|end|>' → logprob: -5.025692939758301
    6. '	' → logprob: -5.275692939758301
    7. '        ' → logprob: -5.400692939758301
    8. ' for' → logprob: -5.525692939758301
    9. '        
' → logprob: -5.650692939758301
    10. ' ' → logprob: -5.775692939758301

Token 201: ' trouver' (ID: 23195)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09842362999916077
    2. 'collections' → logprob: -2.723423719406128
    3. ' A' → logprob: -3.973423719406128
    4. 'range' → logprob: -5.473423480987549
    5. ' collections' → logprob: -6.723423480987549
    6. 'max' → logprob: -6.848423480987549
    7. 'lambda' → logprob: -7.223423480987549
    8. '   ' → logprob: -7.348423480987549
    9. ' range' → logprob: -7.848423480987549
    10. 'col' → logprob: -8.598423957824707

Token 202: ' le' (ID: 505)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9153530597686768
    2. 'max' → logprob: -0.9153530597686768
    3. ' les' → logprob: -2.2903530597686768
    4. '(A' → logprob: -3.6653530597686768
    5. 'A' → logprob: -4.040352821350098
    6. 'the' → logprob: -4.040352821350098
    7. '(max' → logprob: -4.290352821350098
    8. ' A' → logprob: -5.290352821350098
    9. 'le' → logprob: -5.790352821350098
    10. '(' → logprob: -6.040352821350098

Token 203: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014561140909790993
    2. 'min' → logprob: -4.514561176300049
    3. 'j' → logprob: -6.139561176300049
    4. ' max' → logprob: -7.264561176300049
    5. 'i' → logprob: -7.764561176300049
    6. 'A' → logprob: -9.76456069946289
    7. ')' → logprob: -9.88956069946289
    8. 'maximum' → logprob: -10.38956069946289
    9. ' j' → logprob: -10.63956069946289
    10. 'minimum' → logprob: -11.26456069946289

Token 204: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005087764468044043
    2. '
' → logprob: -5.755087852478027
    3. '<|end|>' → logprob: -7.380087852478027
    4. '   ' → logprob: -8.255087852478027
    5. ' for' → logprob: -8.380087852478027
    6. '        
' → logprob: -8.505087852478027
    7. '	' → logprob: -8.630087852478027
    8. ',' → logprob: -9.130087852478027
    9. '<|end|>' → logprob: -9.505087852478027
    10. '		
' → logprob: -10.380087852478027

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010842179879546165
    2. '   ' → logprob: -5.260842323303223
    3. '	' → logprob: -6.510842323303223
    4. ' for' → logprob: -6.635842323303223
    5. ' ' → logprob: -7.635842323303223
    6. '    ' → logprob: -7.760842323303223
    7. '<|end|>' → logprob: -8.260842323303223
    8. 'for' → logprob: -8.385842323303223
    9. '```' → logprob: -8.510842323303223
    10. '        
' → logprob: -8.510842323303223

Token 206: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.703359067440033
    2. 'j' → logprob: -1.3283591270446777
    3. '       ' → logprob: -1.4533591270446777
    4. ' for' → logprob: -5.953359127044678
    5. '   ' → logprob: -6.203359127044678
    6. 'start' → logprob: -7.078359127044678
    7. ' j' → logprob: -7.828359127044678
    8. 'l' → logprob: -8.20335865020752
    9. 'left' → logprob: -8.70335865020752
    10. '```' → logprob: -11.32835865020752

Token 207: ' On' (ID: 2160)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5481805205345154
    2. 'for' → logprob: -1.7981805801391602
    3. ' for' → logprob: -1.7981805801391602
    4. ' j' → logprob: -2.79818058013916
    5. '   ' → logprob: -4.04818058013916
    6. '       ' → logprob: -4.42318058013916
    7. '    ' → logprob: -8.54818058013916
    8. ' ' → logprob: -9.79818058013916
    9. 'start' → logprob: -9.79818058013916
    10. '```' → logprob: -10.04818058013916

Token 208: ' essa' (ID: 19417)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5914208292961121
    2. 'j' → logprob: -1.5914208889007568
    3. ' for' → logprob: -1.7164208889007568
    4. 'for' → logprob: -3.216420888900757
    5. '   ' → logprob: -3.966420888900757
    6. '    ' → logprob: -6.216420650482178
    7. '       ' → logprob: -7.466420650482178
    8. ' ' → logprob: -7.716420650482178
    9. '	j' → logprob: -8.091421127319336
    10. '     ' → logprob: -8.716421127319336

Token 209: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.710477888584137
    2. 'ie' → logprob: -1.3354778289794922
    3. 'ye' → logprob: -1.4604778289794922
    4. 'yer' → logprob: -4.710477828979492
    5. 'yez' → logprob: -6.960477828979492
    6. 'iye' → logprob: -7.210477828979492
    7. 'yage' → logprob: -7.335477828979492
    8. 'yed' → logprob: -7.835477828979492
    9. 'yet' → logprob: -8.085477828979492
    10. 'aye' → logprob: -8.335477828979492

Token 210: ' de' (ID: 334)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.32685527205467224
    2. 'j' → logprob: -2.326855182647705
    3. '       ' → logprob: -2.701855182647705
    4. '    ' → logprob: -2.701855182647705
    5. '   ' → logprob: -3.701855182647705
    6. ' for' → logprob: -4.451855182647705
    7. '	j' → logprob: -5.451855182647705
    8. '        ' → logprob: -5.951855182647705
    9. ' ' → logprob: -6.951855182647705
    10. 'for' → logprob: -7.576855182647705

Token 211: ' prendre' (ID: 24257)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.636131763458252
    2. 'j' → logprob: -0.761131763458252
    3. 'for' → logprob: -6.261131763458252
    4. ' for' → logprob: -7.136131763458252
    5. 'range' → logprob: -8.386131286621094
    6. ' range' → logprob: -8.511131286621094
    7. 'r' → logprob: -9.011131286621094
    8. '   ' → logprob: -10.261131286621094
    9. ' ' → logprob: -10.761131286621094
    10. ' ajouter' → logprob: -10.761131286621094

Token 212: ' entre' (ID: 3853)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.08534376323223114
    2. 'j' → logprob: -2.585343837738037
    3. ' for' → logprob: -5.210343837738037
    4. 'for' → logprob: -7.835343837738037
    5. '    ' → logprob: -8.460343360900879
    6. '   ' → logprob: -8.585343360900879
    7. '	j' → logprob: -9.460343360900879
    8. ' ' → logprob: -10.585343360900879
    9. '```' → logprob: -11.960343360900879
    10. ' a' → logprob: -11.960343360900879

Token 213: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10812532156705856
    2. 'i' → logprob: -2.8581252098083496
    3. ' i' → logprob: -3.8581252098083496
    4. 'j' → logprob: -4.60812520980835
    5. ' ' → logprob: -4.73312520980835
    6. ' j' → logprob: -5.85812520980835
    7. 'max' → logprob: -6.73312520980835
    8. '   ' → logprob: -7.23312520980835
    9. ' max' → logprob: -8.233125686645508
    10. '0' → logprob: -9.608125686645508

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06938216090202332
    2. 'i' → logprob: -3.3193821907043457
    3. 'max' → logprob: -3.5693821907043457
    4. 'j' → logprob: -6.069382190704346
    5. ' ' → logprob: -9.194381713867188
    6. '0' → logprob: -9.319381713867188
    7. ' max' → logprob: -9.444381713867188
    8. ' i' → logprob: -9.819381713867188
    9. '   ' → logprob: -11.569381713867188
    10. '(i' → logprob: -12.194381713867188

Token 215: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.4128612279891968
    2. ' and' → logprob: -1.5378612279891968
    3. 'et' → logprob: -2.4128613471984863
    4. ' ' → logprob: -3.6628613471984863
    5. 'and' → logprob: -5.287861347198486
    6. ' à' → logprob: -7.037861347198486
    7. ' to' → logprob: -7.787861347198486
    8. '```' → logprob: -7.912861347198486
    9. '   ' → logprob: -8.037860870361328
    10. ' и' → logprob: -8.287860870361328

Token 216: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.31359735131263733
    2. ' M' → logprob: -1.313597321510315
    3. ' min' → logprob: -8.688597679138184
    4. 'min' → logprob: -8.813597679138184
    5. 'm' → logprob: -11.063597679138184
    6. 'i' → logprob: -13.688597679138184
    7. ' i' → logprob: -14.563597679138184
    8. ' ' → logprob: -15.063597679138184
    9. ' m' → logprob: -15.688597679138184
    10. '   ' → logprob: -15.813597679138184

Token 217: ' oranges' (ID: 120311)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5670504570007324
    2. ' j' → logprob: -1.8170504570007324
    3. ' in' → logprob: -2.8170504570007324
    4. ':' → logprob: -3.0670504570007324
    5. ' ' → logprob: -3.4420504570007324
    6. 'for' → logprob: -3.6920504570007324
    7. ' :' → logprob: -4.317050457000732
    8. '   ' → logprob: -4.442050457000732
    9. ' tokens' → logprob: -4.692050457000732
    10. ' oranges' → logprob: -4.692050457000732

Token 218: ' avant' (ID: 13339)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10514865815639496
    2. ' for' → logprob: -2.4801485538482666
    3. ',' → logprob: -4.730148792266846
    4. '<|end|>' → logprob: -6.230148792266846
    5. '   ' → logprob: -6.855148792266846
    6. '	' → logprob: -7.355148792266846
    7. ' ' → logprob: -7.480148792266846
    8. '	for' → logprob: -7.730148792266846
    9. 'for' → logprob: -8.105148315429688
    10. ' j' → logprob: -8.105148315429688

Token 219: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23886452615261078
    2. 'i' → logprob: -1.613864541053772
    3. '   ' → logprob: -4.613864421844482
    4. '	i' → logprob: -6.238864421844482
    5. '(i' → logprob: -7.863864421844482
    6. '    ' → logprob: -8.11386489868164
    7. '       ' → logprob: -8.36386489868164
    8. ' ' → logprob: -9.36386489868164
    9. ' for' → logprob: -9.48886489868164
    10. '	' → logprob: -9.61386489868164

Token 220: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12620124220848083
    2. ' for' → logprob: -2.6262011528015137
    3. '   ' → logprob: -4.501201152801514
    4. '    ' → logprob: -5.251201152801514
    5. 'for' → logprob: -5.376201152801514
    6. '	' → logprob: -5.501201152801514
    7. ',' → logprob: -5.751201152801514
    8. '        ' → logprob: -6.001201152801514
    9. ':' → logprob: -6.126201152801514
    10. '        
' → logprob: -6.126201152801514

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01811154931783676
    2. '   ' → logprob: -4.268111705780029
    3. ' for' → logprob: -6.268111705780029
    4. '	' → logprob: -7.768111705780029
    5. 'for' → logprob: -8.143111228942871
    6. '	   ' → logprob: -8.268111228942871
    7. '    ' → logprob: -8.268111228942871
    8. ' ' → logprob: -9.143111228942871
    9. '\t' → logprob: -9.268111228942871
    10. '        
' → logprob: -9.393111228942871

Token 222: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21650876104831696
    2. 'for' (adapté à ' for') → logprob: -2.2165088653564453
    3. '       ' → logprob: -2.4665088653564453
    4. '   ' → logprob: -7.716508865356445
    5. '    ' → logprob: -9.216508865356445
    6. 'j' → logprob: -9.216508865356445
    7. ' j' → logprob: -9.841508865356445
    8. '	for' → logprob: -10.216508865356445
    9. ' ' → logprob: -10.841508865356445
    10. ' ' → logprob: -11.091508865356445

Token 223: ' s' (ID: 265)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.012896070256829262
    2. 'j' → logprob: -4.3878960609436035
    3. ' length' → logprob: -8.262896537780762
    4. 'length' → logprob: -10.262896537780762
    5. ' ' → logprob: -10.887896537780762
    6. ' s' → logprob: -11.512896537780762
    7. ' l' → logprob: -11.512896537780762
    8. '    ' → logprob: -11.512896537780762
    9. ' w' → logprob: -11.887896537780762
    10. ' size' → logprob: -12.262896537780762

Token 224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007008874788880348
    2. 'in' → logprob: -5.132009029388428
    3. ' ' → logprob: -6.882009029388428
    4. ' i' → logprob: -11.38200855255127
    5. '  ' → logprob: -11.63200855255127
    6. '_' → logprob: -11.88200855255127
    7. '   ' → logprob: -12.25700855255127
    8. ' ' → logprob: -12.75700855255127
    9. '	in' → logprob: -12.88200855255127
    10. '    ' → logprob: -13.13200855255127

Token 225: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.523456871509552
    2. 'range' → logprob: -0.898456871509552
    3. ' ' → logprob: -9.023456573486328
    4. '1' → logprob: -9.148456573486328
    5. '(range' → logprob: -9.398456573486328
    6. '   ' → logprob: -11.648456573486328
    7. '  ' → logprob: -12.148456573486328
    8. '	range' → logprob: -12.273456573486328
    9. ' in' → logprob: -13.523456573486328
    10. '_range' → logprob: -14.523456573486328

Token 226: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04859350249171257
    2. '(i' → logprob: -3.048593521118164
    3. '1' → logprob: -12.923593521118164
    4. '(max' → logprob: -12.923593521118164
    5. ' (' → logprob: -14.423593521118164
    6. '(M' → logprob: -14.673593521118164
    7. '(
' → logprob: -17.048593521118164
    8. '(I' → logprob: -17.298593521118164
    9. '(min' → logprob: -17.673593521118164
    10. '(s' → logprob: -18.048593521118164

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006658526253886521
    2. 'i' → logprob: -7.375665664672852
    3. 'max' → logprob: -10.375665664672852
    4. ' ' → logprob: -12.750665664672852
    5. 'M' → logprob: -13.500665664672852
    6. '(i' → logprob: -13.875665664672852
    7. '(' → logprob: -14.000665664672852
    8. 'min' → logprob: -14.000665664672852
    9. '0' → logprob: -14.625665664672852
    10. ' i' → logprob: -15.125665664672852

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.388769103679806e-05
    2. ' ,' → logprob: -9.375093460083008
    3. ',i' → logprob: -11.625093460083008
    4. '，' → logprob: -18.125093460083008
    5. '(i' → logprob: -18.250093460083008
    6. ',
' → logprob: -19.000093460083008
    7. ',M' → logprob: -19.375093460083008
    8. ',int' → logprob: -19.500093460083008
    9. ',s' → logprob: -19.500093460083008
    10. '   ' → logprob: -19.875093460083008

Token 229: ' min' (ID: 1349)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.08969060331583023
    2. 'min' → logprob: -2.589690685272217
    3. ' min' → logprob: -4.964690685272217
    4. ' M' → logprob: -5.589690685272217
    5. 'm' → logprob: -10.839690208435059
    6. '   ' → logprob: -13.339690208435059
    7. '(min' → logprob: -13.714690208435059
    8. 'Min' → logprob: -14.464690208435059
    9. '```' → logprob: -14.464690208435059
    10. '	min' → logprob: -14.714690208435059

Token 230: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0007675791857764125
    2. '(i' → logprob: -7.750767707824707
    3. '(' → logprob: -8.000767707824707
    4. ' (' → logprob: -13.875767707824707
    5. '(s' → logprob: -15.000767707824707
    6. '(m' → logprob: -15.500767707824707
    7. '(
' → logprob: -16.62576675415039
    8. '(I' → logprob: -17.25076675415039
    9. '```' → logprob: -18.12576675415039
    10. ')' → logprob: -18.37576675415039

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012193855829536915
    2. ',i' → logprob: -4.76219367980957
    3. ' ,' → logprob: -6.63719367980957
    4. '+' → logprob: -6.63719367980957
    5. '(i' → logprob: -7.13719367980957
    6. ' +' → logprob: -9.51219367980957
    7. 'i' → logprob: -10.26219367980957
    8. 's' → logprob: -11.01219367980957
    9. '(' → logprob: -12.38719367980957
    10. ')' → logprob: -12.38719367980957

Token 232: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759450793266296
    2. 'i' → logprob: -0.8259450793266296
    3. '   ' → logprob: -12.825944900512695
    4. '	i' → logprob: -12.950944900512695
    5. ' ' → logprob: -15.325944900512695
    6. '(i' → logprob: -15.825944900512695
    7. ')i' → logprob: -16.200944900512695
    8. ')' → logprob: -16.700944900512695
    9. ',i' → logprob: -17.700944900512695
    10. '  ' → logprob: -17.700944900512695

Token 233: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012524845078587532
    2. ')+' → logprob: -4.3875250816345215
    3. '-' → logprob: -12.012524604797363
    4. ' )' → logprob: -12.387524604797363
    5. '+' → logprob: -13.012524604797363
    6. ' -' → logprob: -14.262524604797363
    7. '   ' → logprob: -14.512524604797363
    8. '))+' → logprob: -14.887524604797363
    9. '```' → logprob: -15.762524604797363
    10. '}' → logprob: -15.762524604797363

Token 234: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07004780322313309
    2. ' +' → logprob: -2.6950478553771973
    3. ')+' → logprob: -9.695047378540039
    4. ')' → logprob: -10.320047378540039
    5. '):
' → logprob: -11.570047378540039
    6. '```' → logprob: -12.820047378540039
    7. '):' → logprob: -13.695047378540039
    8. '   ' → logprob: -13.820047378540039
    9. '
' → logprob: -13.945047378540039
    10. '+
' → logprob: -14.195047378540039

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0336734801530838
    2. ' ' → logprob: -3.4086735248565674
    3. ' s' → logprob: -11.283673286437988
    4. 's' → logprob: -11.908673286437988
    5. ')' → logprob: -12.158673286437988
    6. '```' → logprob: -13.533673286437988
    7. ' )' → logprob: -14.408673286437988
    8. '   ' → logprob: -15.033673286437988
    9. '  ' → logprob: -15.658673286437988
    10. ' ' → logprob: -16.096174240112305

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003403495065867901
    2. ' ' → logprob: -8.000340461730957
    3. ')' → logprob: -12.500340461730957
    4. 's' → logprob: -14.875340461730957
    5. '):
' → logprob: -14.875340461730957
    6. ' s' → logprob: -15.500340461730957
    7. '   ' → logprob: -16.25033950805664
    8. '
' → logprob: -16.37533950805664
    9. '```' → logprob: -16.37533950805664
    10. '):' → logprob: -17.50033950805664

Token 237: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016337106004357338
    2. '):
' → logprob: -4.141336917877197
    3. ':' → logprob: -8.141337394714355
    4. '       ' → logprob: -12.391337394714355
    5. '):
' → logprob: -12.891337394714355
    6. ' ):' → logprob: -13.391337394714355
    7. '   ' → logprob: -13.891337394714355
    8. ':
' → logprob: -14.141337394714355
    9. ')' → logprob: -14.266337394714355
    10. '():' → logprob: -15.016337394714355

Token 238: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016105804592370987
    2. '        ' → logprob: -4.891105651855469
    3. '        
' → logprob: -6.141105651855469
    4. ' ' → logprob: -6.766105651855469
    5. ':' → logprob: -7.016105651855469
    6. ',' → logprob: -7.016105651855469
    7. ' 
' → logprob: -7.141105651855469
    8. '           ' → logprob: -7.641105651855469
    9. ' :' → logprob: -8.016105651855469
    10. '<|end|>' → logprob: -8.016105651855469

Token 239: ' j' (ID: 441)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6295701861381531
    2. ' val' → logprob: -1.8795702457427979
    3. 'a' → logprob: -2.754570245742798
    4. '           ' → logprob: -3.004570245742798
    5. 'value' → logprob: -3.004570245742798
    6. 'x' → logprob: -3.254570245742798
    7. 'v' → logprob: -3.504570245742798
    8. 'j' (adapté à ' j') → logprob: -3.504570245742798
    9. '       ' → logprob: -4.379570007324219
    10. '               ' → logprob: -4.629570007324219

Token 240: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859509319067001
    2. ' =' → logprob: -3.0485951900482178
    3. '=i' → logprob: -11.798595428466797
    4. '=
' → logprob: -16.548595428466797
    5. '＝' → logprob: -16.798595428466797
    6. ' ' → logprob: -17.798595428466797
    7. '=}' → logprob: -18.298595428466797
    8. '```' → logprob: -18.298595428466797
    9. '=

' → logprob: -18.548595428466797
    10. '=j' → logprob: -18.673595428466797

Token 241: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006719163153320551
    2. 'i' → logprob: -5.00671911239624
    3. '	i' → logprob: -13.131719589233398
    4. ' ' → logprob: -13.881719589233398
    5. '   ' → logprob: -14.256719589233398
    6. '    ' → logprob: -15.256719589233398
    7. ' ' → logprob: -18.3817195892334
    8. '```' → logprob: -18.5067195892334
    9. '  ' → logprob: -18.8817195892334
    10. ')i' → logprob: -19.1317195892334

Token 242: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1723063588142395
    2. '-' → logprob: -1.9223062992095947
    3. '-s' → logprob: -4.422306537628174
    4. '-j' → logprob: -14.172306060791016
    5. '-S' → logprob: -14.172306060791016
    6. 's' → logprob: -14.547306060791016
    7. '-t' → logprob: -15.172306060791016
    8. '-token' → logprob: -15.297306060791016
    9. '-k' → logprob: -15.422306060791016
    10. ' ' → logprob: -15.922306060791016

Token 243: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005530327325686812
    2. ' s' → logprob: -7.500553131103516
    3. '```' → logprob: -18.375553131103516
    4. '   ' → logprob: -18.875553131103516
    5. '<|end|>' → logprob: -18.875553131103516
    6. '1' → logprob: -18.875553131103516
    7. '{s' → logprob: -19.125553131103516
    8. '`s' → logprob: -19.750553131103516
    9. '	s' → logprob: -20.000553131103516
    10. ' ' → logprob: -20.000553131103516

Token 244: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47313612699508667
    2. '            
' → logprob: -1.9731361865997314
    3. '           ' → logprob: -2.2231361865997314
    4. ' 
' → logprob: -2.2231361865997314
    5. '  
' → logprob: -4.723135948181152
    6. '    
' → logprob: -5.598135948181152
    7. '        
' → logprob: -6.848135948181152
    8. '       ' → logprob: -7.098135948181152
    9. '            ' → logprob: -7.223135948181152
    10. '   
' → logprob: -7.223135948181152

Token 245: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12060027569532394
    2. ' 
' → logprob: -2.8706002235412598
    3. '            
' → logprob: -3.3706002235412598
    4. '           ' → logprob: -4.49560022354126
    5. '  
' → logprob: -5.99560022354126
    6. '    
' → logprob: -6.49560022354126
    7. 'max' → logprob: -6.74560022354126
    8. '
' → logprob: -6.99560022354126
    9. '        
' → logprob: -7.24560022354126
    10. '   
' → logprob: -7.37060022354126

Token 246: ' début' (ID: 29589)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.42985183000564575
    2. 'j' → logprob: -2.179851770401001
    3. '#' → logprob: -2.429851770401001
    4. 'while' → logprob: -3.054851770401001
    5. 'val' → logprob: -3.804851770401001
    6. 'value' → logprob: -3.804851770401001
    7. 'index' → logprob: -4.30485200881958
    8. 'if' → logprob: -4.55485200881958
    9. '
' → logprob: -4.92985200881958
    10. ' A' → logprob: -5.67985200881958

Token 247: ' du' (ID: 1462)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5152731537818909
    2. '<|end|>' → logprob: -1.265273094177246
    3. ')' → logprob: -3.265273094177246
    4. '            
' → logprob: -3.515273094177246
    5. '<|end|>' → logprob: -4.265273094177246
    6. '               ' → logprob: -4.265273094177246
    7. '
' → logprob: -4.890273094177246
    8. '            ' → logprob: -5.015273094177246
    9. '       ' → logprob: -6.890273094177246
    10. '```' → logprob: -7.140273094177246

Token 248: ' segment' (ID: 14806)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5347654223442078
    2. 'segment' → logprob: -1.0347654819488525
    3. 'j' → logprob: -4.034765243530273
    4. ' segment' → logprob: -4.284765243530273
    5. 'window' → logprob: -5.034765243530273
    6. 'sub' → logprob: -5.034765243530273
    7. 'interval' → logprob: -5.284765243530273
    8. 'i' → logprob: -6.534765243530273
    9. '   ' → logprob: -6.659765243530273
    10. '```' → logprob: -6.659765243530273

Token 249: ' [' (ID: 723)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17302514612674713
    2. '            
' → logprob: -2.298025131225586
    3. ' 
' → logprob: -3.673025131225586
    4. '
' → logprob: -3.923025131225586
    5. '            ' → logprob: -6.048025131225586
    6. ',' → logprob: -6.298025131225586
    7. '  
' → logprob: -6.548025131225586
    8. '<|end|>' → logprob: -6.548025131225586
    9. '    
' → logprob: -6.673025131225586
    10. ')' → logprob: -6.923025131225586

Token 250: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00016027313540689647
    2. ' j' → logprob: -8.875160217285156
    3. 'i' → logprob: -11.000160217285156
    4. ']' → logprob: -14.000160217285156
    5. ')' → logprob: -14.125160217285156
    6. '```' → logprob: -14.500160217285156
    7. ',j' → logprob: -15.125160217285156
    8. ',' → logprob: -15.250160217285156
    9. '[j' → logprob: -15.750160217285156
    10. '<|end|>' → logprob: -15.875160217285156

Token 251: '..' (ID: 485)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.046863481402397156
    2. ',' → logprob: -4.296863555908203
    3. ':j' → logprob: -4.421863555908203
    4. ':' → logprob: -5.171863555908203
    5. ' ]' → logprob: -5.546863555908203
    6. ' :' → logprob: -5.796863555908203
    7. ']
' → logprob: -6.171863555908203
    8. ':i' → logprob: -6.421863555908203
    9. '+' → logprob: -6.546863555908203
    10. ':]' → logprob: -7.796863555908203

Token 252: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031879288144409657
    2. ' i' → logprob: -5.753188133239746
    3. '   ' → logprob: -12.378188133239746
    4. ' ' → logprob: -13.253188133239746
    5. '	i' → logprob: -14.128188133239746
    6. '(i' → logprob: -14.253188133239746
    7. 'j' → logprob: -14.253188133239746
    8. ']' → logprob: -14.503188133239746
    9. ' ' → logprob: -15.753188133239746
    10. '
' → logprob: -15.753188133239746

Token 253: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7966704964637756
    2. ')' → logprob: -1.2966704368591309
    3. '-' → logprob: -1.2966704368591309
    4. '])' → logprob: -6.796670436859131
    5. ' -' → logprob: -7.421670436859131
    6. ')]' → logprob: -8.421670913696289
    7. '[' → logprob: -8.921670913696289
    8. '-)' → logprob: -10.171670913696289
    9. ' )' → logprob: -10.296670913696289
    10. ' ]' → logprob: -10.296670913696289

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1782583391759545e-05
    2. ')' → logprob: -10.875031471252441
    3. '-' → logprob: -11.500031471252441
    4. ' ' → logprob: -13.375031471252441
    5. ']' → logprob: -13.875031471252441
    6. '```' → logprob: -15.750031471252441
    7. '])' → logprob: -17.500032424926758
    8. '   ' → logprob: -17.625032424926758
    9. ' -' → logprob: -18.750032424926758
    10. '0' → logprob: -18.750032424926758

Token 255: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030732521787285805
    2. ']
' → logprob: -3.5307326316833496
    3. '])' → logprob: -7.90573263168335
    4. ')' → logprob: -7.90573263168335
    5. ' ]' → logprob: -9.280732154846191
    6. ']
' → logprob: -10.155732154846191
    7. ')
' → logprob: -10.655732154846191
    8. '           ' → logprob: -10.655732154846191
    9. ')]' → logprob: -11.030732154846191
    10. ']

' → logprob: -11.030732154846191

Token 256: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.041447963565588
    2. ' while' → logprob: -4.16644811630249
    3. '            
' → logprob: -4.16644811630249
    4. 'while' → logprob: -4.79144811630249
    5. ' 
' → logprob: -7.54144811630249
    6. 'A' → logprob: -9.291447639465332
    7. ' if' → logprob: -9.416447639465332
    8. '       ' → logprob: -9.541447639465332
    9. '           
' → logprob: -9.541447639465332
    10. 'a' → logprob: -9.916447639465332

Token 257: ' x' (ID: 1215)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2552500367164612
    2. ' while' → logprob: -1.5052499771118164
    3. 'val' → logprob: -7.005249977111816
    4. '           ' → logprob: -7.130249977111816
    5. '#' → logprob: -7.380249977111816
    6. '            
' → logprob: -8.130249977111816
    7. ' val' → logprob: -8.380249977111816
    8. ' #' → logprob: -9.255249977111816
    9. '       ' → logprob: -9.380249977111816
    10. 'value' → logprob: -9.755249977111816

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08927726745605469
    2. '=' → logprob: -2.4642772674560547
    3. '=A' → logprob: -8.339277267456055
    4. '_val' → logprob: -9.464277267456055
    5. 'A' → logprob: -12.464277267456055
    6. '_value' → logprob: -12.589277267456055
    7. ',' → logprob: -12.714277267456055
    8. 'val' → logprob: -12.714277267456055
    9. 'max' → logprob: -13.339277267456055
    10. '=max' → logprob: -13.714277267456055

Token 259: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1128304973244667
    2. ' A' → logprob: -2.237830400466919
    3. '   ' → logprob: -12.11283016204834
    4. '	A' → logprob: -13.48783016204834
    5. ' ' → logprob: -14.23783016204834
    6. '(A' → logprob: -16.237831115722656
    7. '       ' → logprob: -16.237831115722656
    8. '    ' → logprob: -16.487831115722656
    9. '           ' → logprob: -16.612831115722656
    10. ' ' → logprob: -16.612831115722656

Token 260: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00011081460979767144
    2. 'j' → logprob: -9.125110626220703
    3. '[i' → logprob: -13.875110626220703
    4. '[' → logprob: -14.375110626220703
    5. '[
' → logprob: -16.000110626220703
    6. '[x' → logprob: -16.250110626220703
    7. '```' → logprob: -17.500110626220703
    8. '	j' → logprob: -17.625110626220703
    9. ' [' → logprob: -19.125110626220703
    10. '][' → logprob: -19.125110626220703

Token 261: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03646940365433693
    2. '])' → logprob: -3.4114694595336914
    3. ']
' → logprob: -6.161469459533691
    4. ' ]' → logprob: -7.911469459533691
    5. ')' → logprob: -8.786469459533691
    6. '[j' → logprob: -9.286469459533691
    7. '])
' → logprob: -9.911469459533691
    8. ' ])' → logprob: -11.036469459533691
    9. ')]' → logprob: -11.411469459533691
    10. '           ' → logprob: -11.911469459533691

Token 262: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8798198699951172
    2. '           ' → logprob: -1.2548198699951172
    3. '            
' → logprob: -2.379819869995117
    4. ')' → logprob: -2.879819869995117
    5. '<|end|>' → logprob: -3.004819869995117
    6. ' ' → logprob: -3.504819869995117
    7. '
' → logprob: -4.004819869995117
    8. '  
' → logprob: -4.879819869995117
    9. '       ' → logprob: -5.004819869995117
    10. '        
' → logprob: -5.129819869995117

Token 263: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.006895820144563913
    2. ' while' → logprob: -5.006896018981934
    3. '#' (adapté à ' #') → logprob: -9.006896018981934
    4. '           ' → logprob: -10.006896018981934
    5. '       ' → logprob: -12.006896018981934
    6. '            
' → logprob: -12.756896018981934
    7. '	while' → logprob: -13.006896018981934
    8. '
' → logprob: -13.881896018981934
    9. 'While' → logprob: -14.881896018981934
    10. '   ' → logprob: -16.506895065307617

Token 264: ' Met' (ID: 7227)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.014489714987576008
    2. ' while' → logprob: -4.264489650726318
    3. '#' → logprob: -8.514490127563477
    4. '           ' → logprob: -9.014490127563477
    5. 'While' → logprob: -13.389490127563477
    6. ' #' → logprob: -13.639490127563477
    7. '
' → logprob: -14.889490127563477
    8. '       ' → logprob: -15.014490127563477
    9. '	while' → logprob: -15.014490127563477
    10. '            
' → logprob: -15.264490127563477

Token 265: 'tre' (ID: 4086)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.661953330039978
    2. 'while' → logprob: -1.161953330039978
    3. ' while' → logprob: -2.5369534492492676
    4. '       ' → logprob: -3.1619534492492676
    5. '           ' → logprob: -3.2869534492492676
    6. ' #' → logprob: -5.036953449249268
    7. '   ' → logprob: -5.911953449249268
    8. '```' → logprob: -6.786953449249268
    9. '	while' → logprob: -8.03695297241211
    10. '        ' → logprob: -8.28695297241211

Token 266: ' à' (ID: 1221)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1801997721195221
    2. 'while' → logprob: -1.9301997423171997
    3. ' #' → logprob: -4.30519962310791
    4. '#' → logprob: -5.80519962310791
    5. '	while' → logprob: -7.18019962310791
    6. ' x' → logprob: -7.30519962310791
    7. ' ' → logprob: -7.93019962310791
    8. '   ' → logprob: -8.18019962310791
    9. '           ' → logprob: -8.43019962310791
    10. '  ' → logprob: -8.68019962310791

Token 267: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.007561433129012585
    2. ' jour' → logprob: -5.007561206817627
    3. '```' → logprob: -7.882561206817627
    4. ' ' → logprob: -8.757561683654785
    5. 'jourd' → logprob: -9.257561683654785
    6. 'jou' → logprob: -9.757561683654785
    7. '``' → logprob: -10.382561683654785
    8. '   ' → logprob: -10.632561683654785
    9. 'jours' → logprob: -10.757561683654785
    10. 'l' → logprob: -11.257561683654785

Token 268: ' max' (ID: 2999)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.47446930408477783
    2. 'while' → logprob: -0.9744693040847778
    3. '#' → logprob: -8.224469184875488
    4. ' #' → logprob: -9.349469184875488
    5. '           ' → logprob: -10.974469184875488
    6. '	while' → logprob: -12.099469184875488
    7. ' ' → logprob: -13.099469184875488
    8. '
' → logprob: -13.349469184875488
    9. 'While' → logprob: -13.599469184875488
    10. '       ' → logprob: -13.599469184875488

Token 269: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.06415499746799469
    2. 'while' → logprob: -2.939155101776123
    3. ' while' → logprob: -5.939155101776123
    4. '()' → logprob: -6.439155101776123
    5. '           ' → logprob: -6.564155101776123
    6. '       ' → logprob: -7.064155101776123
    7. 'deque' → logprob: -7.064155101776123
    8. '    ' → logprob: -7.939155101776123
    9. '   ' → logprob: -8.064154624938965
    10. '_' → logprob: -8.689154624938965

Token 270: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -7.922563963802531e-05
    2. 'q' → logprob: -10.375079154968262
    3. 'deque' → logprob: -11.250079154968262
    4. 'ques' → logprob: -11.375079154968262
    5. 'aque' → logprob: -11.875079154968262
    6. '```' → logprob: -12.500079154968262
    7. 'e' → logprob: -12.625079154968262
    8. 'queue' → logprob: -13.000079154968262
    9. 'qu' → logprob: -13.750079154968262
    10. 'a' → logprob: -13.750079154968262

Token 271: ' pour' (ID: 1930)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.40280818939208984
    2. '           ' → logprob: -1.9028081893920898
    3. 'while' → logprob: -2.02780818939209
    4. '
' → logprob: -3.77780818939209
    5. '            
' → logprob: -4.15280818939209
    6. ' 
' → logprob: -5.52780818939209
    7. ':
' → logprob: -6.40280818939209
    8. '	while' → logprob: -6.90280818939209
    9. '  
' → logprob: -7.65280818939209
    10. 'While' → logprob: -7.77780818939209

Token 272: ' trouver' (ID: 23195)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7163364887237549
    2. 'while' → logprob: -1.8413364887237549
    3. 'x' → logprob: -2.091336488723755
    4. ' x' → logprob: -2.216336488723755
    5. ' maintenir' → logprob: -2.841336488723755
    6. 'maint' → logprob: -3.591336488723755
    7. ' que' → logprob: -4.841336250305176
    8. ' garder' → logprob: -5.591336250305176
    9. 'que' → logprob: -6.216336250305176
    10. '   ' → logprob: -6.341336250305176

Token 273: ' max' (ID: 2999)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.7222745418548584
    2. ' x' → logprob: -1.9722745418548584
    3. ' la' → logprob: -1.9722745418548584
    4. 'max' → logprob: -1.9722745418548584
    5. 'le' → logprob: -2.0972745418548584
    6. 'x' → logprob: -2.2222745418548584
    7. ' les' → logprob: -3.0972745418548584
    8. 'les' → logprob: -3.4722745418548584
    9. 'la' → logprob: -3.7222745418548584
    10. ' l' → logprob: -3.8472745418548584

Token 274: ' dans' (ID: 2671)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.22327670454978943
    2. 'while' → logprob: -2.2232766151428223
    3. '           ' → logprob: -3.0982766151428223
    4. ':
' → logprob: -4.473276615142822
    5. '()' → logprob: -4.723276615142822
    6. ':' → logprob: -5.223276615142822
    7. '()
' → logprob: -5.723276615142822
    8. '():
' → logprob: -5.723276615142822
    9. ' :
' → logprob: -5.848276615142822
    10. '            
' → logprob: -6.348276615142822

Token 275: ' A' (ID: 355)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3510110378265381
    2. 'x' → logprob: -1.851011037826538
    3. ' max' → logprob: -3.351011037826538
    4. 'A' → logprob: -3.476011037826538
    5. 's' → logprob: -3.601011037826538
    6. ' x' → logprob: -4.976011276245117
    7. ' s' → logprob: -5.101011276245117
    8. 'while' → logprob: -5.351011276245117
    9. ' la' → logprob: -5.726011276245117
    10. 'j' → logprob: -5.726011276245117

Token 276: '[j' (ID: 7895)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8931363224983215
    2. ' while' → logprob: -1.2681362628936768
    3. '           ' → logprob: -1.8931362628936768
    4. '[j' → logprob: -3.0181362628936768
    5. ':
' → logprob: -3.5181362628936768
    6. '
' → logprob: -4.268136501312256
    7. '            
' → logprob: -4.893136501312256
    8. ')' → logprob: -5.143136501312256
    9. 'deque' → logprob: -5.268136501312256
    10. '):
' → logprob: -5.393136501312256

Token 277: '..' (ID: 485)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -1.000870704650879
    2. '],' → logprob: -1.750870704650879
    3. ']):
' → logprob: -2.125870704650879
    4. ']' → logprob: -2.375870704650879
    5. ']:
' → logprob: -2.625870704650879
    6. '])
' → logprob: -3.000870704650879
    7. ']
' → logprob: -3.750870704650879
    8. 'j' → logprob: -4.000870704650879
    9. ']):' → logprob: -4.250870704650879
    10. '):
' → logprob: -4.500870704650879

Token 278: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019657472148537636
    2. ' i' → logprob: -6.626965522766113
    3. 'j' → logprob: -7.501965522766113
    4. '   ' → logprob: -10.751965522766113
    5. '
' → logprob: -11.126965522766113
    6. ']' → logprob: -11.126965522766113
    7. ' ' → logprob: -11.251965522766113
    8. 'x' → logprob: -12.126965522766113
    9. ' j' → logprob: -12.876965522766113
    10. '[i' → logprob: -13.626965522766113

Token 279: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9282158017158508
    2. '])' → logprob: -1.053215742111206
    3. 'j' → logprob: -2.178215742111206
    4. '[j' → logprob: -3.803215742111206
    5. '])
' → logprob: -3.928215742111206
    6. ']
' → logprob: -4.678215980529785
    7. 'max' → logprob: -4.678215980529785
    8. '-' → logprob: -4.803215980529785
    9. '       ' → logprob: -4.803215980529785
    10. '   ' → logprob: -4.803215980529785

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.004696090007201e-05
    2. 's' → logprob: -10.500069618225098
    3. 'j' → logprob: -11.250069618225098
    4. ' ' → logprob: -11.750069618225098
    5. '0' → logprob: -12.000069618225098
    6. '```' → logprob: -12.500069618225098
    7. ']' → logprob: -12.750069618225098
    8. '-' → logprob: -12.875069618225098
    9. '])' → logprob: -13.812569618225098
    10. '   ' → logprob: -13.812569618225098

Token 281: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07148320227861404
    2. '           ' → logprob: -3.3214831352233887
    3. ')' → logprob: -3.6964831352233887
    4. ')
' → logprob: -6.196483135223389
    5. '):
' → logprob: -6.321483135223389
    6. ' )
' → logprob: -6.696483135223389
    7. '       ' → logprob: -7.071483135223389
    8. '])
' → logprob: -7.196483135223389
    9. ']
' → logprob: -8.196483612060547
    10. ']' → logprob: -8.571483612060547

Token 282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1070113331079483
    2. ' while' → logprob: -2.607011318206787
    3. 'while' → logprob: -3.732011318206787
    4. '
' → logprob: -5.732011318206787
    5. '       ' → logprob: -8.357011795043945
    6. '            
' → logprob: -8.482011795043945
    7. '	while' → logprob: -10.857011795043945
    8. 'While' → logprob: -11.107011795043945
    9. '   ' → logprob: -11.357011795043945
    10. '<|end|>' → logprob: -11.607011795043945

Token 283: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5861896872520447
    2. 'while' (adapté à ' while') → logprob: -0.8361896872520447
    3. '           ' → logprob: -4.5861897468566895
    4. '	while' → logprob: -12.586189270019531
    5. 'While' → logprob: -13.711189270019531
    6. '       ' → logprob: -13.961189270019531
    7. '   ' → logprob: -15.086189270019531
    8. '            
' → logprob: -15.211189270019531
    9. '```' → logprob: -16.21118927001953
    10. ' While' → logprob: -16.96118927001953

Token 284: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04860587790608406
    2. ' max' → logprob: -3.0486059188842773
    3. 'len' → logprob: -11.048605918884277
    4. '(max' → logprob: -13.423605918884277
    5. ' len' → logprob: -14.798605918884277
    6. ' ' → logprob: -15.048605918884277
    7. '	max' → logprob: -15.923605918884277
    8. '   ' → logprob: -16.54860496520996
    9. 'min' → logprob: -17.04860496520996
    10. '[max' → logprob: -17.29860496520996

Token 285: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.0206720617134124e-05
    2. 'deque' → logprob: -12.12501049041748
    3. 'max' → logprob: -12.87501049041748
    4. 'de' → logprob: -13.87501049041748
    5. '_max' → logprob: -14.75001049041748
    6. '	de' → logprob: -15.75001049041748
    7. 'Deque' → logprob: -16.500009536743164
    8. '(max' → logprob: -16.500009536743164
    9. '_d' → logprob: -17.125009536743164
    10. '   ' → logprob: -17.250009536743164

Token 286: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.00030400342075154185
    2. 'q' → logprob: -8.750304222106934
    3. 'ques' → logprob: -9.500304222106934
    4. 'qu' → logprob: -10.875304222106934
    5. 'max' → logprob: -11.125304222106934
    6. 'ue' → logprob: -11.500304222106934
    7. 'deque' → logprob: -11.500304222106934
    8. 'ax' → logprob: -13.250304222106934
    9. 'x' → logprob: -13.375304222106934
    10. 'aque' → logprob: -13.500304222106934

Token 287: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.25194251537323
    2. ' and' → logprob: -1.50194251537323
    3. ' ' → logprob: -12.12694263458252
    4. '   ' → logprob: -13.00194263458252
    5. '	and' → logprob: -13.37694263458252
    6. 'a' → logprob: -13.87694263458252
    7. '```' → logprob: -14.37694263458252
    8. ' и' → logprob: -14.37694263458252
    9. '    ' → logprob: -15.00194263458252
    10. 'not' → logprob: -15.50194263458252

Token 288: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18372084200382233
    2. ' max' → logprob: -1.9337208271026611
    3. 'A' → logprob: -3.933720827102661
    4. ' A' → logprob: -6.05872106552124
    5. 'x' → logprob: -6.68372106552124
    6. ' x' → logprob: -9.808720588684082
    7. '   ' → logprob: -12.808720588684082
    8. ' ' → logprob: -13.058720588684082
    9. '	max' → logprob: -13.683720588684082
    10. '(max' → logprob: -14.558720588684082

Token 289: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -9.088346359931165e-07
    2. 'de' → logprob: -14.375000953674316
    3. 'deque' → logprob: -15.375000953674316
    4. '	de' → logprob: -18.5
    5. ',de' → logprob: -18.625
    6. '_DE' → logprob: -18.625
    7. 'Deque' → logprob: -19.125
    8. '_d' → logprob: -19.375
    9. '[max' → logprob: -19.75
    10. '/de' → logprob: -20.0

Token 290: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0002181987656513229
    2. 'qu' → logprob: -10.000218391418457
    3. 'q' → logprob: -10.125218391418457
    4. 'ques' → logprob: -10.375218391418457
    5. '_de' → logprob: -10.500218391418457
    6. 'deque' → logprob: -10.500218391418457
    7. 'e' → logprob: -11.750218391418457
    8. 'de' → logprob: -12.125218391418457
    9. '```' → logprob: -12.750218391418457
    10. '[' → logprob: -12.875218391418457

Token 291: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.173704271830502e-06
    2. ' and' → logprob: -12.87500286102295
    3. 'and' → logprob: -15.00000286102295
    4. '[' → logprob: -15.37500286102295
    5. '][-' → logprob: -17.875003814697266
    6. ' [-' → logprob: -19.250003814697266
    7. '```' → logprob: -21.250003814697266
    8. ' ' → logprob: -21.250003814697266
    9. '   ' → logprob: -21.875003814697266
    10. '[
' → logprob: -22.000003814697266

Token 292: '1' (ID: 16)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.29950714111328125
    2. '[' → logprob: -2.2995071411132812
    3. '][' → logprob: -2.7995071411132812
    4. '1' → logprob: -2.9245071411132812
    5. '()][' → logprob: -3.2995071411132812
    6. 'idx' → logprob: -6.049507141113281
    7. 'index' → logprob: -6.674507141113281
    8. '()' → logprob: -7.049507141113281
    9. ''][' → logprob: -7.174507141113281
    10. '(' → logprob: -7.924507141113281

Token 293: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06265003234148026
    2. '[' → logprob: -2.812649965286255
    3. '()[' → logprob: -7.562650203704834
    4. ''][' → logprob: -9.812649726867676
    5. '()][' → logprob: -10.437649726867676
    6. ' ][' → logprob: -10.687649726867676
    7. ' <' → logprob: -11.687649726867676
    8. ')[' → logprob: -11.812649726867676
    9. '<' → logprob: -12.062649726867676
    10. ' [' → logprob: -12.062649726867676

Token 294: ' <' (ID: 464)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008645339403301477
    2. '<' → logprob: -7.875864505767822
    3. ' <' → logprob: -8.00086498260498
    4. '()[' → logprob: -9.12586498260498
    5. ' [' → logprob: -11.50086498260498
    6. '][' → logprob: -11.62586498260498
    7. '<x' → logprob: -12.25086498260498
    8. 'x' → logprob: -12.75086498260498
    9. '['' → logprob: -13.37586498260498
    10. '()<' → logprob: -13.37586498260498

Token 295: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5759398937225342
    2. 'x' → logprob: -0.8259398937225342
    3. '	x' → logprob: -15.575940132141113
    4. '(x' → logprob: -16.700939178466797
    5. ' ' → logprob: -16.825939178466797
    6. '>x' → logprob: -16.825939178466797
    7. ' ' → logprob: -17.325939178466797
    8. '=x' → logprob: -17.450939178466797
    9. ')x' → logprob: -17.575939178466797
    10. '<x' → logprob: -18.075939178466797

Token 296: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.041507091373205185
    2. ':' → logprob: -3.4165070056915283
    3. '():
' → logprob: -5.541507244110107
    4. '):
' → logprob: -5.666507244110107
    5. ' :
' → logprob: -8.54150676727295
    6. ']:
' → logprob: -9.91650676727295
    7. ':max' → logprob: -10.29150676727295
    8. 'max' → logprob: -10.29150676727295
    9. ',' → logprob: -10.54150676727295
    10. '(max' → logprob: -10.66650676727295

Token 297: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4951133131980896
    2. '):
' → logprob: -2.1201133728027344
    3. ':' → logprob: -2.3701133728027344
    4. '               ' → logprob: -3.1201133728027344
    5. '
' → logprob: -3.6201133728027344
    6. ' :
' → logprob: -3.7451133728027344
    7. ' max' → logprob: -3.7451133728027344
    8. '():
' → logprob: -4.120113372802734
    9. '(max' → logprob: -4.245113372802734
    10. '           ' → logprob: -4.370113372802734

Token 298: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.004078758880496025
    2. ' max' → logprob: -5.5040788650512695
    3. '_max' → logprob: -15.62907886505127
    4. 'pop' → logprob: -16.004077911376953
    5. '(max' → logprob: -17.379077911376953
    6. '	max' → logprob: -17.754077911376953
    7. '
' → logprob: -18.629077911376953
    8. 'ma' → logprob: -19.129077911376953
    9. '=max' → logprob: -19.629077911376953
    10. '.max' → logprob: -19.879077911376953

Token 299: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -6.575563020305708e-05
    2. 'de' → logprob: -10.125065803527832
    3. 'deque' → logprob: -10.625065803527832
    4. '	de' → logprob: -14.500065803527832
    5. 'max' → logprob: -14.750065803527832
    6. 'Deque' → logprob: -15.875065803527832
    7. '(de' → logprob: -16.625064849853516
    8. '_max' → logprob: -17.625064849853516
    9. '_' → logprob: -17.625064849853516
    10. '(max' → logprob: -17.750064849853516

Token 300: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -5.5577775128767826e-06
    2. 'q' → logprob: -13.000005722045898
    3. 'deque' → logprob: -13.500005722045898
    4. 'ques' → logprob: -13.625005722045898
    5. 'qu' → logprob: -15.250005722045898
    6. 'e' → logprob: -16.0000057220459
    7. 'queue' → logprob: -16.5000057220459
    8. 'quem' → logprob: -17.1250057220459
    9. 'che' → logprob: -18.0000057220459
    10. 'de' → logprob: -18.3750057220459

Token 301: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -1.1637164789135568e-05
    2. '.' → logprob: -12.125011444091797
    3. '.p' → logprob: -12.375011444091797
    4. 'pop' → logprob: -13.625011444091797
    5. ' .' → logprob: -14.375011444091797
    6. '].' → logprob: -17.875011444091797
    7. '().' → logprob: -18.125011444091797
    8. '_pop' → logprob: -18.125011444091797
    9. '	pop' → logprob: -18.250011444091797
    10. ').' → logprob: -18.625011444091797

Token 302: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7167567610740662
    2. '()
' → logprob: -0.7167567610740662
    3. '           ' → logprob: -4.216756820678711
    4. ')' → logprob: -4.966756820678711
    5. ')
' → logprob: -7.091756820678711
    6. '())
' → logprob: -8.091756820678711
    7. '())' → logprob: -8.966756820678711
    8. '               ' → logprob: -9.591756820678711
    9. '()\' → logprob: -9.591756820678711
    10. '()
' → logprob: -9.716756820678711

Token 303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004915769677609205
    2. ' 
' → logprob: -6.379915714263916
    3. ' max' → logprob: -6.379915714263916
    4. ')' → logprob: -8.004916191101074
    5. '            
' → logprob: -8.129916191101074
    6. '[max' → logprob: -8.254916191101074
    7. '(max' → logprob: -8.879916191101074
    8. '[' → logprob: -8.879916191101074
    9. '<|end|>' → logprob: -9.504916191101074
    10. ' )' → logprob: -10.379916191101074

Token 304: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06680622696876526
    2. '           ' → logprob: -2.8168063163757324
    3. 'max' (adapté à ' max') → logprob: -5.691806316375732
    4. '(max' → logprob: -7.441806316375732
    5. '[max' → logprob: -7.441806316375732
    6. ' x' → logprob: -9.941805839538574
    7. '[' → logprob: -10.066805839538574
    8. '            
' → logprob: -10.316805839538574
    9. ')' → logprob: -10.566805839538574
    10. '	max' → logprob: -10.941805839538574

Token 305: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.4617256056226324e-05
    2. 'deque' → logprob: -11.375014305114746
    3. 'de' → logprob: -12.875014305114746
    4. 'Deque' → logprob: -16.125015258789062
    5. '\' → logprob: -16.500015258789062
    6. '_max' → logprob: -16.875015258789062
    7. '_' → logprob: -17.000015258789062
    8. 'max' → logprob: -17.250015258789062
    9. '	de' → logprob: -17.250015258789062
    10. '```' → logprob: -18.000015258789062

Token 306: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -8.65707261255011e-06
    2. 'deque' → logprob: -12.375008583068848
    3. 'q' → logprob: -13.125008583068848
    4. 'ques' → logprob: -13.625008583068848
    5. 'qu' → logprob: -14.375008583068848
    6. 'queue' → logprob: -15.625008583068848
    7. '```' → logprob: -16.875009536743164
    8. 'de' → logprob: -16.875009536743164
    9. 'ue' → logprob: -17.125009536743164
    10. 'quez' → logprob: -17.500009536743164

Token 307: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.704273118884885e-07
    2. ' .' → logprob: -14.875000953674316
    3. '.' → logprob: -15.500000953674316
    4. 'append' → logprob: -19.125
    5. '.app' → logprob: -19.875
    6. '.extend' → logprob: -19.875
    7. '.ap' → logprob: -20.625
    8. '	append' → logprob: -21.0
    9. '.Append' → logprob: -21.25
    10. ' append' → logprob: -21.375

Token 308: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.014195355586707592
    2. '((' → logprob: -4.264195442199707
    3. '(' → logprob: -10.639195442199707
    4. 'left' → logprob: -12.139195442199707
    5. 'x' → logprob: -13.639195442199707
    6. '(j' → logprob: -13.639195442199707
    7. ' (' → logprob: -16.63919448852539
    8. '(i' → logprob: -17.13919448852539
    9. '(left' → logprob: -17.26419448852539
    10. '(
' → logprob: -17.63919448852539

Token 309: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003048378275707364
    2. ')
' → logprob: -8.25030517578125
    3. '           ' → logprob: -10.37530517578125
    4. ' )' → logprob: -11.50030517578125
    5. '<|end|>' → logprob: -14.37530517578125
    6. '       ' → logprob: -14.87530517578125
    7. ')

' → logprob: -15.00030517578125
    8. '),' → logprob: -16.12530517578125
    9. '))' → logprob: -16.25030517578125
    10. ',' → logprob: -16.37530517578125

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22732049226760864
    2. '<|end|>' → logprob: -1.8523204326629639
    3. '            
' → logprob: -3.727320432662964
    4. ' ' → logprob: -4.727320671081543
    5. ' 
' → logprob: -5.352320671081543
    6. '            ' → logprob: -5.977320671081543
    7. '       ' → logprob: -6.977320671081543
    8. '[' → logprob: -7.477320671081543
    9. '<|end|>' → logprob: -7.477320671081543
    10. '           
' → logprob: -7.602320671081543

Token 311: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1016315296292305
    2. 'while' → logprob: -2.9766316413879395
    3. ' while' → logprob: -3.3516316413879395
    4. '            
' → logprob: -4.7266316413879395
    5. '       ' → logprob: -7.6016316413879395
    6. ' 
' → logprob: -7.8516316413879395
    7. '        
' → logprob: -8.351631164550781
    8. '
' → logprob: -8.976631164550781
    9. '  
' → logprob: -9.101631164550781
    10. '           
' → logprob: -9.351631164550781

Token 312: ' Met' (ID: 7227)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.649468183517456
    2. 'while' → logprob: -0.899468183517456
    3. '           ' → logprob: -2.649468183517456
    4. '       ' → logprob: -9.274468421936035
    5. '   ' → logprob: -10.524468421936035
    6. '	while' → logprob: -10.524468421936035
    7. '            
' → logprob: -10.649468421936035
    8. 'While' → logprob: -11.649468421936035
    9. '#' → logprob: -12.024468421936035
    10. ' ' → logprob: -13.274468421936035

Token 313: 'tre' (ID: 4086)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3045939803123474
    2. ' while' → logprob: -2.554594039916992
    3. '           ' → logprob: -2.679594039916992
    4. 'min' → logprob: -3.054594039916992
    5. '       ' → logprob: -3.929594039916992
    6. '               ' → logprob: -4.554594039916992
    7. '	while' → logprob: -5.179594039916992
    8. '        ' → logprob: -5.429594039916992
    9. '   ' → logprob: -5.804594039916992
    10. 'in' → logprob: -5.929594039916992

Token 314: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.13843481242656708
    2. 'à' → logprob: -2.138434886932373
    3. 'while' → logprob: -4.888434886932373
    4. '           ' → logprob: -6.263434886932373
    5. ' while' → logprob: -6.638434886932373
    6. '#' → logprob: -8.013434410095215
    7. ' #' → logprob: -9.388434410095215
    8. '            ' → logprob: -9.388434410095215
    9. '-à' → logprob: -10.013434410095215
    10. 'À' → logprob: -10.888434410095215

Token 315: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.06210246682167053
    2. ' jour' → logprob: -2.8121025562286377
    3. 'jours' → logprob: -9.312102317810059
    4. 'Jour' → logprob: -10.812102317810059
    5. 'jou' → logprob: -11.562102317810059
    6. 'day' → logprob: -11.812102317810059
    7. ' jours' → logprob: -13.187102317810059
    8. '```' → logprob: -13.187102317810059
    9. '   ' → logprob: -14.312102317810059
    10. 'update' → logprob: -14.437102317810059

Token 316: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3242204189300537
    2. ' min' → logprob: -1.3242204189300537
    3. 'while' → logprob: -4.949220657348633
    4. ' while' → logprob: -5.574220657348633
    5. ' ' → logprob: -11.699220657348633
    6. '   ' → logprob: -12.699220657348633
    7. 'max' → logprob: -14.324220657348633
    8. '    ' → logprob: -14.449220657348633
    9. 'mini' → logprob: -14.449220657348633
    10. '  ' → logprob: -14.824220657348633

Token 317: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.4617256056226324e-05
    2. 'deque' → logprob: -11.375014305114746
    3. 'de' → logprob: -13.250014305114746
    4. 'min' → logprob: -14.500014305114746
    5. '_min' → logprob: -14.875014305114746
    6. 'Deque' → logprob: -15.625014305114746
    7. 'while' → logprob: -16.625015258789062
    8. '_' → logprob: -17.250015258789062
    9. '	de' → logprob: -17.500015258789062
    10. '_DE' → logprob: -17.625015258789062

Token 318: 'que' (ID: 1126)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.5042021870613098
    2. 'que' → logprob: -1.004202127456665
    3. 'de' → logprob: -4.129202365875244
    4. '_de' → logprob: -4.379202365875244
    5. ' deque' → logprob: -8.379201889038086
    6. 'Deque' → logprob: -8.629201889038086
    7. 'q' → logprob: -8.879201889038086
    8. 'min' → logprob: -9.004201889038086
    9. 'e' → logprob: -9.129201889038086
    10. 'queue' → logprob: -9.379201889038086

Token 319: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30794987082481384
    2. ' while' → logprob: -1.6829499006271362
    3. '           ' → logprob: -2.6829497814178467
    4. 'while' → logprob: -4.932950019836426
    5. 'for' → logprob: -5.807950019836426
    6. ' pour' → logprob: -9.182950019836426
    7. '       ' → logprob: -9.557950019836426
    8. '            
' → logprob: -9.807950019836426
    9. ' =' → logprob: -9.932950019836426
    10. '   ' → logprob: -10.182950019836426

Token 320: ' trouver' (ID: 23195)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14325854182243347
    2. ' while' → logprob: -2.018258571624756
    3. 'min' → logprob: -7.893258571624756
    4. ' min' → logprob: -9.518258094787598
    5. ' x' → logprob: -9.893258094787598
    6. '           ' → logprob: -10.393258094787598
    7. 'x' → logprob: -10.643258094787598
    8. '(min' → logprob: -11.768258094787598
    9. '#' → logprob: -12.143258094787598
    10. 'While' → logprob: -13.018258094787598

Token 321: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1489066630601883
    2. ' min' → logprob: -2.148906707763672
    3. 'x' → logprob: -4.023906707763672
    4. ' x' → logprob: -6.148906707763672
    5. 'max' → logprob: -6.898906707763672
    6. '(min' → logprob: -7.898906707763672
    7. 'while' → logprob: -9.273906707763672
    8. '(x' → logprob: -9.773906707763672
    9. 'A' → logprob: -9.898906707763672
    10. ' while' → logprob: -10.023906707763672

Token 322: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6839948892593384
    2. ' while' → logprob: -1.1839948892593384
    3. 'while' → logprob: -2.058994770050049
    4. '(min' → logprob: -4.058994770050049
    5. '()' → logprob: -4.183994770050049
    6. '()
' → logprob: -5.058994770050049
    7. ' (' → logprob: -5.308994770050049
    8. '            ' → logprob: -5.558994770050049
    9. '               ' → logprob: -5.558994770050049
    10. '          ' → logprob: -6.433994770050049

Token 323: ' A' (ID: 355)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00689072348177433
    2. ' x' → logprob: -5.131890773773193
    3. 'A' → logprob: -7.006890773773193
    4. ' A' → logprob: -10.006890296936035
    5. '[x' → logprob: -12.381890296936035
    6. ' ' → logprob: -13.631890296936035
    7. '   ' → logprob: -13.631890296936035
    8. 'max' → logprob: -14.131890296936035
    9. '[' → logprob: -14.506890296936035
    10. '```' → logprob: -14.756890296936035

Token 324: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.945094355614856e-05
    2. '[min' → logprob: -10.750069618225098
    3. 'min' → logprob: -10.875069618225098
    4. 'max' → logprob: -11.250069618225098
    5. '[max' → logprob: -12.125069618225098
    6. '[' → logprob: -12.375069618225098
    7. 'deque' → logprob: -13.250069618225098
    8. '
' → logprob: -13.875069618225098
    9. '   ' → logprob: -14.125069618225098
    10. 'j' → logprob: -14.375069618225098

Token 325: '..' (ID: 485)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.179821491241455
    2. '..' → logprob: -1.304821491241455
    3. '-' → logprob: -2.179821491241455
    4. ')' → logprob: -2.929821491241455
    5. '_' → logprob: -3.304821491241455
    6. ']' → logprob: -3.554821491241455
    7. 'de' → logprob: -3.679821491241455
    8. '...' → logprob: -3.679821491241455
    9. 'and' → logprob: -3.804821491241455
    10. 'deque' → logprob: -3.929821491241455

Token 326: 'i' (ID: 72)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005093070212751627
    2. 'max' → logprob: -7.625509262084961
    3. '[max' → logprob: -11.875509262084961
    4. 'A' → logprob: -12.125509262084961
    5. ' x' → logprob: -13.000509262084961
    6. ')' → logprob: -13.375509262084961
    7. '[x' → logprob: -13.625509262084961
    8. ']' → logprob: -14.250509262084961
    9. '[' → logprob: -14.500509262084961
    10. '[j' → logprob: -14.875509262084961

Token 327: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003843659767881036
    2. '_' → logprob: -6.253843784332275
    3. 'min' → logprob: -6.628843784332275
    4. '_de' → logprob: -7.753843784332275
    5. '1' → logprob: -10.628843307495117
    6. 'deque' → logprob: -10.753843307495117
    7. '
' → logprob: -11.128843307495117
    8. '_min' → logprob: -11.128843307495117
    9. '```' → logprob: -11.128843307495117
    10. '[-' → logprob: -11.378843307495117

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.727905979962088e-05
    2. '-' → logprob: -10.37504768371582
    3. 'min' → logprob: -11.62504768371582
    4. ' ' → logprob: -13.12504768371582
    5. 'max' → logprob: -14.00004768371582
    6. '   ' → logprob: -14.00004768371582
    7. 'j' → logprob: -14.12504768371582
    8. 'deque' → logprob: -14.50004768371582
    9. '```' → logprob: -14.87504768371582
    10. ' -' → logprob: -15.12504768371582

Token 329: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03986050933599472
    2. 'while' → logprob: -3.289860486984253
    3. ' while' → logprob: -6.414860725402832
    4. ')
' → logprob: -10.039860725402832
    5. '
' → logprob: -10.164860725402832
    6. '):
' → logprob: -10.539860725402832
    7. '               ' → logprob: -10.664860725402832
    8. ')' → logprob: -11.039860725402832
    9. '       ' → logprob: -11.789860725402832
    10. ':
' → logprob: -11.914860725402832

Token 330: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15213631093502045
    2. 'while' → logprob: -2.6521363258361816
    3. ' while' → logprob: -2.6521363258361816
    4. '       ' → logprob: -9.652135848999023
    5. '	while' → logprob: -10.027135848999023
    6. '```' → logprob: -12.402135848999023
    7. '   ' → logprob: -12.527135848999023
    8. '            
' → logprob: -13.027135848999023
    9. '		' → logprob: -13.027135848999023
    10. '               ' → logprob: -13.152135848999023

Token 331: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.07946964353322983
    2. 'while' (adapté à ' while') → logprob: -2.579469680786133
    3. '           ' → logprob: -7.579469680786133
    4. '	while' → logprob: -9.704469680786133
    5. '       ' → logprob: -11.954469680786133
    6. 'While' → logprob: -13.954469680786133
    7. '   ' → logprob: -14.579469680786133
    8. '               ' → logprob: -17.204469680786133
    9. '```' → logprob: -17.329469680786133
    10. ' While' → logprob: -18.079469680786133

Token 332: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4740782678127289
    2. 'min' → logprob: -0.9740782976150513
    3. '(min' → logprob: -13.849078178405762
    4. ' ' → logprob: -16.474079132080078
    5. '	min' → logprob: -16.849079132080078
    6. '[min' → logprob: -17.099079132080078
    7. 'len' → logprob: -17.349079132080078
    8. ' len' → logprob: -18.099079132080078
    9. ' not' → logprob: -18.599079132080078
    10. 'not' → logprob: -18.724079132080078

Token 333: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -2.2007883671903983e-05
    2. 'min' → logprob: -11.500021934509277
    3. '_min' → logprob: -12.375021934509277
    4. '(min' → logprob: -12.625021934509277
    5. 'deque' → logprob: -13.000021934509277
    6. '_' → logprob: -14.250021934509277
    7. 'de' → logprob: -14.250021934509277
    8. 'Deque' → logprob: -15.125021934509277
    9. '_d' → logprob: -16.500022888183594
    10. '=min' → logprob: -16.625022888183594

Token 334: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.10957317054271698
    2. 'deque' → logprob: -2.7345731258392334
    3. '_de' → logprob: -3.3595731258392334
    4. 'de' → logprob: -5.7345733642578125
    5. 'queue' → logprob: -8.484573364257812
    6. 'qu' → logprob: -8.609573364257812
    7. 'q' → logprob: -9.234573364257812
    8. 'oque' → logprob: -9.359573364257812
    9. '_' → logprob: -9.734573364257812
    10. '_queue' → logprob: -9.859573364257812

Token 335: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3134244680404663
    2. ' and' → logprob: -1.3134244680404663
    3. '[-' → logprob: -8.813424110412598
    4. '   ' → logprob: -12.438424110412598
    5. '           ' → logprob: -13.063424110412598
    6. 'min' → logprob: -13.688424110412598
    7. '       ' → logprob: -13.813424110412598
    8. '    ' → logprob: -13.813424110412598
    9. ' ' → logprob: -14.188424110412598
    10. '        ' → logprob: -14.188424110412598

Token 336: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.38687559962272644
    2. ' min' → logprob: -1.1368756294250488
    3. '[min' → logprob: -12.63687515258789
    4. '(min' → logprob: -14.13687515258789
    5. '	min' → logprob: -14.63687515258789
    6. '   ' → logprob: -17.26187515258789
    7. '_min' → logprob: -17.51187515258789
    8. '=min' → logprob: -17.63687515258789
    9. ' ' → logprob: -17.88687515258789
    10. '.min' → logprob: -18.76187515258789

Token 337: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -7.755678961984813e-05
    2. '(min' → logprob: -10.375077247619629
    3. 'deque' → logprob: -11.250077247619629
    4. '_min' → logprob: -11.375077247619629
    5. 'min' → logprob: -11.500077247619629
    6. '[min' → logprob: -12.500077247619629
    7. 'de' → logprob: -12.625077247619629
    8. 'Deque' → logprob: -13.125077247619629
    9. '_' → logprob: -13.625077247619629
    10. '_DE' → logprob: -15.375077247619629

Token 338: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.3918810784816742
    2. 'deque' → logprob: -1.6418811082839966
    3. '_de' → logprob: -2.516880989074707
    4. 'de' → logprob: -3.141880989074707
    5. 'e' → logprob: -6.141880989074707
    6. 'Deque' → logprob: -6.641880989074707
    7. 'oque' → logprob: -7.016880989074707
    8. '_' → logprob: -7.016880989074707
    9. 'min' → logprob: -7.391880989074707
    10. 'quee' → logprob: -9.016880989074707

Token 339: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.000122608442325145
    2. ' and' → logprob: -9.125123023986816
    3. 'and' → logprob: -11.250123023986816
    4. '[' → logprob: -14.500123023986816
    5. '
' → logprob: -18.0001220703125
    6. '][-' → logprob: -18.0001220703125
    7. '   ' → logprob: -18.3751220703125
    8. ' ' → logprob: -18.7501220703125
    9. '>' → logprob: -18.7501220703125
    10. '-' → logprob: -19.0001220703125

Token 340: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3481563329696655
    2. '1' → logprob: -1.3481563329696655
    3. '[-' → logprob: -3.473156452178955
    4. 'deque' → logprob: -6.723156452178955
    5. '(-' → logprob: -6.973156452178955
    6. 'min' → logprob: -7.473156452178955
    7. 'de' → logprob: -8.473155975341797
    8. ' -' → logprob: -9.223155975341797
    9. '   ' → logprob: -9.723155975341797
    10. '[' → logprob: -9.973155975341797

Token 341: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3132939338684082
    2. '>' → logprob: -1.3132939338684082
    3. '>x' → logprob: -11.18829345703125
    4. ' <' → logprob: -12.06329345703125
    5. ' ' → logprob: -12.31329345703125
    6. ']' → logprob: -13.18829345703125
    7. '<' → logprob: -13.56329345703125
    8. ')' → logprob: -13.56329345703125
    9. '()>' → logprob: -13.93829345703125
    10. 'x' → logprob: -14.56329345703125

Token 342: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.029825812205672264
    2. ' >' → logprob: -3.5298259258270264
    3. '>x' → logprob: -9.529826164245605
    4. '>
' → logprob: -14.029826164245605
    5. ' ' → logprob: -14.279826164245605
    6. '<' → logprob: -15.154826164245605
    7. '[' → logprob: -15.654826164245605
    8. '>

' → logprob: -15.779826164245605
    9. ' >
' → logprob: -15.904826164245605
    10. '>a' → logprob: -15.904826164245605

Token 343: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001170225441455841
    2. ' x' → logprob: -6.7511701583862305
    3. '	x' → logprob: -18.751171112060547
    4. '<|end|>' → logprob: -19.501171112060547
    5. '"x' → logprob: -20.001171112060547
    6. ')x' → logprob: -20.126171112060547
    7. '(x' → logprob: -20.751171112060547
    8. ''x' → logprob: -21.501171112060547
    9. '$x' → logprob: -22.001171112060547
    10. '{x' → logprob: -22.001171112060547

Token 344: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.45292624831199646
    2. '               ' → logprob: -1.0779262781143188
    3. '):
' → logprob: -4.702926158905029
    4. 'min' → logprob: -4.827926158905029
    5. ':' → logprob: -5.827926158905029
    6. '           ' → logprob: -6.077926158905029
    7. '(min' → logprob: -7.327926158905029
    8. ':min' → logprob: -8.202926635742188
    9. ' min' → logprob: -8.452926635742188
    10. '():
' → logprob: -9.202926635742188

Token 345: '               ' (ID: 506)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.013180120848119259
    2. ' min' → logprob: -4.638180255889893
    3. '           ' → logprob: -5.888180255889893
    4. '               ' → logprob: -7.388180255889893
    5. '	min' → logprob: -11.638179779052734
    6. '(min' → logprob: -12.013179779052734
    7. '   ' → logprob: -12.013179779052734
    8. '[min' → logprob: -12.763179779052734
    9. ',min' → logprob: -13.888179779052734
    10. '_min' → logprob: -13.888179779052734

Token 346: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -1.0206720617134124e-05
    2. ' min' → logprob: -11.50001049041748
    3. '	min' → logprob: -18.750009536743164
    4. '[min' → logprob: -19.000009536743164
    5. 'mini' → logprob: -20.000009536743164
    6. '           ' → logprob: -20.375009536743164
    7. 'max' → logprob: -20.500009536743164
    8. 'm' → logprob: -20.625009536743164
    9. '               ' → logprob: -20.750009536743164
    10. '(min' → logprob: -20.875009536743164

Token 347: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -8.816591434879228e-05
    2. 'deque' → logprob: -9.37508773803711
    3. 'de' → logprob: -13.37508773803711
    4. 'Deque' → logprob: -13.62508773803711
    5. '_' → logprob: -15.25008773803711
    6. 'min' → logprob: -15.87508773803711
    7. '_min' → logprob: -16.50008773803711
    8. ' deque' → logprob: -17.12508773803711
    9. '_d' → logprob: -17.37508773803711
    10. '_DE' → logprob: -17.75008773803711

Token 348: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0007909284322522581
    2. 'deque' → logprob: -7.250791072845459
    3. 'queue' → logprob: -9.6257905960083
    4. 'de' → logprob: -12.6257905960083
    5. 'oque' → logprob: -12.7507905960083
    6. 'min' → logprob: -13.1257905960083
    7. 'qu' → logprob: -13.5007905960083
    8. 'q' → logprob: -13.7507905960083
    9. 'quee' → logprob: -14.0007905960083
    10. ' deque' → logprob: -14.6257905960083

Token 349: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00012356207298580557
    2. 'pop' → logprob: -9.000123977661133
    3. '.' → logprob: -16.625123977661133
    4. ' pop' → logprob: -18.375123977661133
    5. ' .' → logprob: -19.875123977661133
    6. '(pop' → logprob: -20.375123977661133
    7. '	pop' → logprob: -20.625123977661133
    8. '_pop' → logprob: -21.625123977661133
    9. '.p' → logprob: -21.750123977661133
    10. '.Pop' → logprob: -21.875123977661133

Token 350: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.7610454708337784e-05
    2. '()
' → logprob: -11.625027656555176
    3. 'min' → logprob: -12.750027656555176
    4. ')
' → logprob: -12.750027656555176
    5. '          ' → logprob: -12.875027656555176
    6. '		' → logprob: -12.875027656555176
    7. '            
' → logprob: -13.250027656555176
    8. '
' → logprob: -13.375027656555176
    9. '(min' → logprob: -14.000027656555176
    10. '```' → logprob: -14.625027656555176

Token 351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13116593658924103
    2. 'min' → logprob: -2.1311659812927246
    3. ' min' → logprob: -6.256165981292725
    4. '	min' → logprob: -6.631165981292725
    5. '		' → logprob: -7.506165981292725
    6. '[min' → logprob: -8.006165504455566
    7. '(min' → logprob: -10.381165504455566
    8. '            
' → logprob: -10.506165504455566
    9. '       ' → logprob: -11.881165504455566
    10. '_min' → logprob: -12.131165504455566

Token 352: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -2.339278580620885e-06
    2. ' min' → logprob: -13.250001907348633
    3. '           ' → logprob: -14.625001907348633
    4. '[min' → logprob: -18.125001907348633
    5. '	min' → logprob: -19.750001907348633
    6. '(min' → logprob: -20.000001907348633
    7. '_min' → logprob: -20.000001907348633
    8. '.min' → logprob: -21.375001907348633
    9. 'max' → logprob: -21.625001907348633
    10. '```' → logprob: -21.750001907348633

Token 353: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -3.2617008400848135e-05
    2. 'deque' → logprob: -10.375032424926758
    3. 'de' → logprob: -14.125032424926758
    4. 'Deque' → logprob: -14.500032424926758
    5. '_' → logprob: -16.375032424926758
    6. '	de' → logprob: -17.750032424926758
    7. '_DE' → logprob: -17.750032424926758
    8. '_min' → logprob: -18.250032424926758
    9. ' deque' → logprob: -18.375032424926758
    10. '_d' → logprob: -18.625032424926758

Token 354: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -5.512236498361744e-07
    2. 'q' → logprob: -15.750000953674316
    3. 'queue' → logprob: -15.875000953674316
    4. 'qu' → logprob: -16.5
    5. 'ques' → logprob: -16.625
    6. 'deque' → logprob: -17.125
    7. 'e' → logprob: -19.0
    8. 'Que' → logprob: -19.375
    9. 'ue' → logprob: -19.875
    10. 'qe' → logprob: -20.25

Token 355: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.4259644558478612e-05
    2. 'append' → logprob: -11.250014305114746
    3. '.' → logprob: -13.875014305114746
    4. ' .' → logprob: -16.62501335144043
    5. '.app' → logprob: -16.75001335144043
    6. 'app' → logprob: -17.75001335144043
    7. '.Append' → logprob: -18.75001335144043
    8. ' append' → logprob: -19.37501335144043
    9. '	append' → logprob: -19.50001335144043
    10. 'Append' → logprob: -19.62501335144043

Token 356: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.045823566731997e-05
    2. '(' → logprob: -11.375020027160645
    3. 'x' → logprob: -11.625020027160645
    4. ' (' → logprob: -18.75002098083496
    5. '(
' → logprob: -19.00002098083496
    6. ' x' → logprob: -20.75002098083496
    7. '(t' → logprob: -21.50002098083496
    8. '(s' → logprob: -22.25002098083496
    9. '()' → logprob: -22.62502098083496
    10. '((' → logprob: -23.12502098083496

Token 357: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4175896644592285
    2. '<|end|>' → logprob: -1.5425896644592285
    3. '           ' → logprob: -2.7925896644592285
    4. '
' → logprob: -2.9175896644592285
    5. '<|end|>' → logprob: -5.2925896644592285
    6. '       ' → logprob: -6.2925896644592285
    7. '            
' → logprob: -6.5425896644592285
    8. ')
' → logprob: -6.7925896644592285
    9. ' 
' → logprob: -7.6675896644592285
    10. ',' → logprob: -7.7925896644592285

Token 358: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019365737214684486
    2. '       ' → logprob: -4.5193657875061035
    3. ' if' → logprob: -5.5193657875061035
    4. '
' → logprob: -6.3943657875061035
    5. ' dp' → logprob: -7.2693657875061035
    6. '            
' → logprob: -7.5193657875061035
    7. 'dp' → logprob: -7.6443657875061035
    8. 'if' → logprob: -8.394365310668945
    9. '   ' → logprob: -8.769365310668945
    10. ' cost' → logprob: -9.269365310668945

Token 359: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1044753789901733
    2. 'if' → logprob: -1.3544753789901733
    3. 'dp' → logprob: -1.9794753789901733
    4. ' cost' → logprob: -2.604475498199463
    5. 'cost' → logprob: -2.604475498199463
    6. 'diff' → logprob: -2.604475498199463
    7. '           ' → logprob: -3.729475498199463
    8. ' dp' → logprob: -3.854475498199463
    9. ' diff' → logprob: -6.104475498199463
    10. '   ' → logprob: -7.229475498199463

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49955663084983826
    2. 'max' → logprob: -2.249556541442871
    3. '=' → logprob: -2.874556541442871
    4. '_cost' → logprob: -3.124556541442871
    5. '=max' → logprob: -3.374556541442871
    6. 'b' → logprob: -3.749556541442871
    7. '_max' → logprob: -3.999556541442871
    8. 'll' → logprob: -4.124556541442871
    9. 'l' → logprob: -4.624556541442871
    10. '_val' → logprob: -4.624556541442871

Token 361: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.49099427461624146
    2. 'dp' → logprob: -0.9909942746162415
    3. ' max' → logprob: -4.240994453430176
    4. ' dp' → logprob: -6.115994453430176
    5. '   ' → logprob: -10.490994453430176
    6. 'K' → logprob: -10.490994453430176
    7. 'min' → logprob: -10.615994453430176
    8. ' ' → logprob: -10.865994453430176
    9. 'abs' → logprob: -10.865994453430176
    10. 'float' → logprob: -11.115994453430176

Token 362: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.9266199160483666e-05
    2. '(max' → logprob: -11.000019073486328
    3. 'a' → logprob: -14.125019073486328
    4. 'deque' → logprob: -14.250019073486328
    5. 'max' → logprob: -15.125019073486328
    6. '_' → logprob: -15.250019073486328
    7. 'Deque' → logprob: -15.750019073486328
    8. 'de' → logprob: -15.875019073486328
    9. '(a' → logprob: -16.375019073486328
    10. '_max' → logprob: -16.625019073486328

Token 363: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.02734699659049511
    2. '_de' → logprob: -4.027347087860107
    3. 'deque' → logprob: -4.777347087860107
    4. 'de' → logprob: -7.777347087860107
    5. 'qu' → logprob: -8.90234661102295
    6. 'q' → logprob: -9.40234661102295
    7. 'quee' → logprob: -10.27734661102295
    8. 'quet' → logprob: -11.27734661102295
    9. '_' → logprob: -11.65234661102295
    10. 'queue' → logprob: -11.77734661102295

Token 364: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02324547804892063
    2. '[-' → logprob: -3.7732455730438232
    3. '][-' → logprob: -19.148244857788086
    4. '   ' → logprob: -19.398244857788086
    5. '```' → logprob: -19.398244857788086
    6. '0' → logprob: -19.398244857788086
    7. '][' → logprob: -19.523244857788086
    8. ']' → logprob: -20.523244857788086
    9. ' ' → logprob: -20.773244857788086
    10. '\[' → logprob: -21.148244857788086

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '-' → logprob: -14.875009536743164
    4. '
' → logprob: -17.000009536743164
    5. '   ' → logprob: -18.875009536743164
    6. '[' → logprob: -19.125009536743164
    7. ' -' → logprob: -19.125009536743164
    8. '  ' → logprob: -20.250009536743164
    9. '```' → logprob: -20.625009536743164
    10. ')' → logprob: -20.750009536743164

Token 366: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20710542798042297
    2. ')' → logprob: -1.7071053981781006
    3. ' -' → logprob: -6.20710563659668
    4. '-' → logprob: -7.08210563659668
    5. '])' → logprob: -7.08210563659668
    6. ' ]' → logprob: -7.20710563659668
    7. ']-' → logprob: -7.95710563659668
    8. ' )' → logprob: -8.20710563659668
    9. '<|end|>' → logprob: -8.20710563659668
    10. ')]' → logprob: -8.70710563659668

Token 367: '           ' (ID: 352)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14214466512203217
    2. ' ' → logprob: -3.0171446800231934
    3. '           ' → logprob: -3.0171446800231934
    4. '-' → logprob: -4.267144680023193
    5. '            ' → logprob: -4.892144680023193
    6. 'b' → logprob: -5.267144680023193
    7. ' b' → logprob: -6.017144680023193
    8. ' min' → logprob: -7.142144680023193
    9. ')' → logprob: -7.392144680023193
    10. ' 
' → logprob: -7.642144680023193

Token 368: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.41292378306388855
    2. 'b' (adapté à ' b') → logprob: -1.412923812866211
    3. ' min' → logprob: -3.287923812866211
    4. ' -' → logprob: -3.287923812866211
    5. '-' → logprob: -4.537923812866211
    6. ' ' → logprob: -5.162923812866211
    7. 'min' → logprob: -6.412923812866211
    8. ' =' → logprob: -7.537923812866211
    9. '           ' → logprob: -8.537923812866211
    10. ' a' → logprob: -8.662923812866211

Token 369: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12717168033123016
    2. '=' → logprob: -2.127171754837036
    3. ' -' → logprob: -8.752171516418457
    4. '-' → logprob: -10.127171516418457
    5. '=min' → logprob: -10.627171516418457
    6. 'min' → logprob: -12.127171516418457
    7. '=max' → logprob: -12.252171516418457
    8. '<|end|>' → logprob: -12.377171516418457
    9. ')' → logprob: -13.752171516418457
    10. ' ' → logprob: -13.752171516418457

Token 370: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07888978719711304
    2. ' min' → logprob: -2.578889846801758
    3. '	min' → logprob: -19.828889846801758
    4. 'max' → logprob: -20.078889846801758
    5. '[min' → logprob: -20.078889846801758
    6. '(min' → logprob: -20.703889846801758
    7. ' ' → logprob: -20.828889846801758
    8. '   ' → logprob: -21.578889846801758
    9. 'mini' → logprob: -22.203889846801758
    10. '_min' → logprob: -22.578889846801758

Token 371: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -3.273621405242011e-05
    2. 'deque' → logprob: -10.500032424926758
    3. '(min' → logprob: -12.875032424926758
    4. 'Deque' → logprob: -13.500032424926758
    5. 'de' → logprob: -14.500032424926758
    6. '(max' → logprob: -14.875032424926758
    7. '_' → logprob: -16.625032424926758
    8. '\' → logprob: -16.875032424926758
    9. 'max' → logprob: -17.875032424926758
    10. '
' → logprob: -17.875032424926758

Token 372: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0001295222609769553
    2. 'deque' → logprob: -9.250129699707031
    3. 'de' → logprob: -11.000129699707031
    4. 'qu' → logprob: -12.375129699707031
    5. 'q' → logprob: -12.750129699707031
    6. 'ques' → logprob: -13.000129699707031
    7. 'min' → logprob: -13.375129699707031
    8. 'quet' → logprob: -13.625129699707031
    9. '_de' → logprob: -14.000129699707031
    10. 'queue' → logprob: -14.250129699707031

Token 373: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -13.125001907348633
    3. '()[' → logprob: -16.625001907348633
    4. '[-' → logprob: -18.625001907348633
    5. '(' → logprob: -18.875001907348633
    6. '
' → logprob: -19.625001907348633
    7. '[
' → logprob: -19.750001907348633
    8. ' [' → logprob: -19.750001907348633
    9. ' ' → logprob: -19.875001907348633
    10. '```' → logprob: -20.000001907348633

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '[' → logprob: -17.0
    4. '   ' → logprob: -19.375
    5. '
' → logprob: -19.75
    6. '۰' → logprob: -20.375
    7. '  ' → logprob: -20.5
    8. '<|end|>' → logprob: -21.75
    9. '    ' → logprob: -21.875
    10. '```' → logprob: -22.3125

Token 375: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16302113234996796
    2. ')' → logprob: -1.9130210876464844
    3. ']
' → logprob: -6.538021087646484
    4. '])' → logprob: -7.163021087646484
    5. ')]' → logprob: -8.163021087646484
    6. ')
' → logprob: -8.538021087646484
    7. ' ]' → logprob: -9.913021087646484
    8. ' )' → logprob: -11.913021087646484
    9. '           ' → logprob: -12.038021087646484
    10. ']

' → logprob: -12.163021087646484

Token 376: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014435910619795322
    2. '
' → logprob: -4.514435768127441
    3. '            
' → logprob: -6.889435768127441
    4. ' if' → logprob: -7.139435768127441
    5. ' 
' → logprob: -7.639435768127441
    6. '  
' → logprob: -8.389435768127441
    7. '   ' → logprob: -8.514435768127441
    8. '       ' → logprob: -9.139435768127441
    9. '```' → logprob: -9.264435768127441
    10. '<|end|>' → logprob: -9.264435768127441

Token 377: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7297658324241638
    2. ' dp' → logprob: -1.3547658920288086
    3. ' cost' → logprob: -2.4797658920288086
    4. '           ' → logprob: -2.6047658920288086
    5. 'cost' → logprob: -2.6047658920288086
    6. ' if' → logprob: -3.8547658920288086
    7. 'if' → logprob: -5.229765892028809
    8. '
' → logprob: -7.479765892028809
    9. ' new' → logprob: -8.354765892028809
    10. 'diff' → logprob: -8.854765892028809

Token 378: ' Calcul' (ID: 57243)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6871184706687927
    2. 'dp' → logprob: -0.8121184706687927
    3. 'if' → logprob: -3.8121185302734375
    4. ' cost' → logprob: -4.1871185302734375
    5. ' dp' → logprob: -4.9371185302734375
    6. '           ' → logprob: -5.6871185302734375
    7. ' if' → logprob: -5.8121185302734375
    8. 'diff' → logprob: -6.9371185302734375
    9. 'co' → logprob: -8.312118530273438
    10. 'val' → logprob: -8.687118530273438

Token 379: ' du' (ID: 1462)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011489142663776875
    2. ' du' → logprob: -5.636488914489746
    3. ' cost' → logprob: -6.261488914489746
    4. ' dp' → logprob: -6.511488914489746
    5. ' =' → logprob: -6.761488914489746
    6. ' de' → logprob: -6.761488914489746
    7. 'er' → logprob: -7.511488914489746
    8. ' coût' → logprob: -7.886488914489746
    9. 'cost' → logprob: -8.011488914489746
    10. 'dp' → logprob: -8.636488914489746

Token 380: ' coût' (ID: 73109)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04780898243188858
    2. 'cout' → logprob: -4.17280912399292
    3. 'co' → logprob: -4.54780912399292
    4. ' dp' → logprob: -4.54780912399292
    5. 'cost' → logprob: -5.04780912399292
    6. '           ' → logprob: -6.92280912399292
    7. ' coût' → logprob: -7.29780912399292
    8. ' cout' → logprob: -7.54780912399292
    9. 'c' → logprob: -7.79780912399292
    10. '   ' → logprob: -8.047808647155762

Token 381: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3488588035106659
    2. ' =' → logprob: -1.3488588333129883
    3. ' dp' → logprob: -3.7238588333129883
    4. 'dp' → logprob: -5.848858833312988
    5. ' cost' → logprob: -5.973858833312988
    6. ' if' → logprob: -6.098858833312988
    7. '=' → logprob: -7.348858833312988
    8. 'cost' → logprob: -7.473858833312988
    9. '
' → logprob: -7.723858833312988
    10. ' du' → logprob: -7.973858833312988

Token 382: ' ce' (ID: 2357)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05670597776770592
    2. ' dp' → logprob: -2.931705951690674
    3. '           ' → logprob: -6.556705951690674
    4. '   ' → logprob: -8.181706428527832
    5. '	dp' → logprob: -11.056706428527832
    6. '               ' → logprob: -11.181706428527832
    7. '(dp' → logprob: -11.806706428527832
    8. ' ' → logprob: -12.056706428527832
    9. 'segment' → logprob: -12.181706428527832
    10. 'le' → logprob: -12.306706428527832

Token 383: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.4091437757015228
    2. ' segment' → logprob: -1.1591438055038452
    3. 'dp' → logprob: -4.659143924713135
    4. 's' → logprob: -5.409143924713135
    5. ' sous' → logprob: -5.659143924713135
    6. '   ' → logprob: -6.534143924713135
    7. ' dp' → logprob: -6.659143924713135
    8. 'seg' → logprob: -7.784143924713135
    9. ' morceau' → logprob: -8.909143447875977
    10. ' décou' → logprob: -9.159143447875977

Token 384: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0045464192517101765
    2. '
' → logprob: -5.879546642303467
    3. ' =' → logprob: -7.129546642303467
    4. '            
' → logprob: -8.504546165466309
    5. ' cost' → logprob: -8.754546165466309
    6. ' dp' → logprob: -8.879546165466309
    7. ',' → logprob: -9.129546165466309
    8. 'dp' → logprob: -9.129546165466309
    9. 'cost' → logprob: -9.129546165466309
    10. ':' → logprob: -11.379546165466309

Token 385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013376918621361256
    2. '
' → logprob: -5.138376712799072
    3. ' cost' → logprob: -5.388376712799072
    4. '            
' → logprob: -7.013376712799072
    5. 'cost' → logprob: -7.138376712799072
    6. ' dp' → logprob: -8.13837718963623
    7. ' if' → logprob: -8.26337718963623
    8. '```' → logprob: -8.76337718963623
    9. ' 
' → logprob: -8.88837718963623
    10. 'dp' → logprob: -9.63837718963623

Token 386: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.14102116227149963
    2. 'cost' (adapté à ' cost') → logprob: -2.766021251678467
    3. ' dp' → logprob: -2.891021251678467
    4. '           ' → logprob: -5.266021251678467
    5. 'dp' → logprob: -5.266021251678467
    6. ' new' → logprob: -6.641021251678467
    7. ' current' → logprob: -8.391020774841309
    8. ' temp' → logprob: -9.016020774841309
    9. ' candidate' → logprob: -9.141020774841309
    10. ' if' → logprob: -9.391020774841309

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031790214125066996
    2. '=' → logprob: -5.75317907333374
    3. ' ' → logprob: -14.503178596496582
    4. ' ' → logprob: -15.253178596496582
    5. '   ' → logprob: -15.378178596496582
    6. '    ' → logprob: -16.2531795501709
    7. ')' → logprob: -16.7531795501709
    8. 's' → logprob: -17.0031795501709
    9. ' +=' → logprob: -17.1281795501709
    10. ' =
' → logprob: -17.5031795501709

Token 388: ' K' (ID: 658)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0068765184842050076
    2. ' dp' → logprob: -5.131876468658447
    3. '           ' → logprob: -7.631876468658447
    4. 'a' → logprob: -8.756876945495605
    5. 'max' → logprob: -9.631876945495605
    6. 'K' → logprob: -9.631876945495605
    7. '   ' → logprob: -9.881876945495605
    8. 'b' → logprob: -10.631876945495605
    9. '(dp' → logprob: -10.631876945495605
    10. 'cost' → logprob: -11.131876945495605

Token 389: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6856651306152344
    2. '*' → logprob: -1.0606651306152344
    3. ' +' → logprob: -2.3106651306152344
    4. '+' → logprob: -3.0606651306152344
    5. '*(' → logprob: -5.560665130615234
    6. ' ' → logprob: -9.810665130615234
    7. '*s' → logprob: -10.685665130615234
    8. ' ' → logprob: -11.310665130615234
    9. '   ' → logprob: -12.185665130615234
    10. '+(' → logprob: -12.560665130615234

Token 390: ' s' (ID: 265)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7314598560333252
    2. 'dp' → logprob: -1.2314598560333252
    3. ' (' → logprob: -2.106459856033325
    4. '(dp' → logprob: -2.481459856033325
    5. 'a' → logprob: -4.606459617614746
    6. ' dp' → logprob: -4.731459617614746
    7. ' a' → logprob: -7.731459617614746
    8. '(max' → logprob: -7.856459617614746
    9. 'max' → logprob: -7.856459617614746
    10. '(b' → logprob: -7.856459617614746

Token 391: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5770390033721924
    2. '*' → logprob: -0.8270390033721924
    3. '*(' → logprob: -6.827038764953613
    4. ' ' → logprob: -11.952038764953613
    5. ' ' → logprob: -12.452038764953613
    6. ' *(' → logprob: -13.577038764953613
    7. '   ' → logprob: -14.202038764953613
    8. '**' → logprob: -14.452038764953613
    9. '  ' → logprob: -14.827038764953613
    10. ' *
' → logprob: -15.202038764953613

Token 392: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.019533630460500717
    2. ' (' → logprob: -4.394533634185791
    3. '(b' → logprob: -5.019533634185791
    4. '(abs' → logprob: -8.394533157348633
    5. '(' → logprob: -9.394533157348633
    6. '(max' → logprob: -10.394533157348633
    7. '(ab' → logprob: -10.394533157348633
    8. '   ' → logprob: -12.269533157348633
    9. 'b' → logprob: -12.769533157348633
    10. '(c' → logprob: -12.894533157348633

Token 393: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0041935560293495655
    2. '(a' → logprob: -5.5041937828063965
    3. ' a' → logprob: -9.504193305969238
    4. ' (' → logprob: -10.379193305969238
    5. '(' → logprob: -12.504193305969238
    6. '   ' → logprob: -13.379193305969238
    7. ')a' → logprob: -14.254193305969238
    8. ' ' → logprob: -14.629193305969238
    9. 'abs' → logprob: -14.629193305969238
    10. 'b' → logprob: -14.629193305969238

Token 394: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25198420882225037
    2. '-' → logprob: -1.5019842386245728
    3. '-b' → logprob: -10.376984596252441
    4. ' ' → logprob: -11.001984596252441
    5. '  ' → logprob: -13.001984596252441
    6. ')' → logprob: -13.376984596252441
    7. '-
' → logprob: -14.376984596252441
    8. '```' → logprob: -14.376984596252441
    9. ' -
' → logprob: -14.501984596252441
    10. ' b' → logprob: -14.626984596252441

Token 395: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008615042082965374
    2. ' b' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.133615493774414
    4. ')b' → logprob: -16.383615493774414
    5. '   ' → logprob: -16.758615493774414
    6. '  ' → logprob: -16.883615493774414
    7. '	b' → logprob: -17.133615493774414
    8. ')' → logprob: -17.633615493774414
    9. '
' → logprob: -18.508615493774414
    10. ' 
' → logprob: -18.633615493774414

Token 396: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018180495128035545
    2. ')
' → logprob: -4.0181803703308105
    3. ')
' → logprob: -10.643180847167969
    4. ' )' → logprob: -12.393180847167969
    5. ')

' → logprob: -13.393180847167969
    6. '))' → logprob: -15.143180847167969
    7. ' )
' → logprob: -15.268180847167969
    8. '           ' → logprob: -15.893180847167969
    9. ')`
' → logprob: -16.64318084716797
    10. ')`' → logprob: -16.64318084716797

Token 397: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3543611466884613
    2. '           ' → logprob: -1.2293611764907837
    3. ' if' → logprob: -5.979361057281494
    4. ' 
' → logprob: -6.979361057281494
    5. '  
' → logprob: -7.229361057281494
    6. '            
' → logprob: -7.229361057281494
    7. '    
' → logprob: -8.604361534118652
    8. '\n' → logprob: -8.604361534118652
    9. '       ' → logprob: -8.979361534118652
    10. ')' → logprob: -9.104361534118652

Token 398: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.684756875038147
    2. '           ' → logprob: -0.809756875038147
    3. 'if' → logprob: -3.3097567558288574
    4. '
' → logprob: -4.309756755828857
    5. '       ' → logprob: -7.809756755828857
    6. 'dp' → logprob: -8.684757232666016
    7. '            
' → logprob: -9.309757232666016
    8. '   ' → logprob: -9.809757232666016
    9. ' dp' → logprob: -10.184757232666016
    10. ' 
' → logprob: -10.559757232666016

Token 399: ' Mise' (ID: 157932)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012811454944312572
    2. 'if' → logprob: -4.512811660766602
    3. ' dp' → logprob: -6.512811660766602
    4. ' if' → logprob: -8.512811660766602
    5. '           ' → logprob: -9.762811660766602
    6. '       ' → logprob: -11.387811660766602
    7. '   ' → logprob: -12.137811660766602
    8. '	dp' → logprob: -13.637811660766602
    9. '               ' → logprob: -14.887811660766602
    10. '```' → logprob: -15.387811660766602

Token 400: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8445412516593933
    2. '       ' → logprob: -0.9695412516593933
    3. '   ' → logprob: -1.844541311264038
    4. '               ' → logprob: -4.719541072845459
    5. '[i' → logprob: -5.094541072845459
    6. '```' → logprob: -5.344541072845459
    7. ' à' → logprob: -5.719541072845459
    8. 'dp' → logprob: -5.844541072845459
    9. 'à' → logprob: -6.594541072845459
    10. '[j' → logprob: -6.719541072845459

Token 401: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.014438836835324764
    2. ' jour' → logprob: -4.389438629150391
    3. 'day' → logprob: -6.389438629150391
    4. 'jours' → logprob: -9.26443862915039
    5. 'dp' → logprob: -10.01443862915039
    6. '```' → logprob: -10.13943862915039
    7. '   ' → logprob: -10.51443862915039
    8. 'Jour' → logprob: -10.63943862915039
    9. 'jou' → logprob: -12.51443862915039
    10. 'min' → logprob: -12.63943862915039

Token 402: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6049805879592896
    2. ' dp' → logprob: -1.3549805879592896
    3. ' if' → logprob: -1.8549805879592896
    4. 'dp' → logprob: -3.35498046875
    5. 'if' → logprob: -5.97998046875
    6. '       ' → logprob: -6.85498046875
    7. '	dp' → logprob: -7.97998046875
    8. '```' → logprob: -8.60498046875
    9. '   ' → logprob: -8.97998046875
    10. '[' → logprob: -9.35498046875

Token 403: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.3451433409936726e-05
    2. '[j' → logprob: -10.750033378601074
    3. '   ' → logprob: -11.875033378601074
    4. '       ' → logprob: -12.500033378601074
    5. ' [' → logprob: -14.375033378601074
    6. '           ' → logprob: -14.875033378601074
    7. '[' → logprob: -15.625033378601074
    8. 'dp' → logprob: -16.87503433227539
    9. '```' → logprob: -16.87503433227539
    10. '][' → logprob: -18.00003433227539

Token 404: '           ' (ID: 352)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019579214858822525
    2. '       ' → logprob: -9.625195503234863
    3. '[j' → logprob: -9.625195503234863
    4. '   ' → logprob: -10.250195503234863
    5. ' [' → logprob: -11.250195503234863
    6. '           ' → logprob: -11.750195503234863
    7. '[' → logprob: -12.000195503234863
    8. '```' → logprob: -14.625195503234863
    9. '\[' → logprob: -15.750195503234863
    10. '][' → logprob: -15.875195503234863

Token 405: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7777308821678162
    2. 'dp' → logprob: -1.277730941772461
    3. ' dp' → logprob: -1.527730941772461
    4. 'if' (adapté à ' if') → logprob: -3.152730941772461
    5. '           ' → logprob: -6.277730941772461
    6. '       ' → logprob: -8.402730941772461
    7. '   ' → logprob: -11.777730941772461
    8. '	dp' → logprob: -12.652730941772461
    9. '
' → logprob: -12.777730941772461
    10. '               ' → logprob: -13.777730941772461

Token 406: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.577076256275177
    2. 'dp' → logprob: -0.827076256275177
    3. ' cost' → logprob: -7.452076435089111
    4. 'cost' → logprob: -7.702076435089111
    5. '(dp' → logprob: -10.077075958251953
    6. '	dp' → logprob: -10.202075958251953
    7. '   ' → logprob: -11.827075958251953
    8. ' ' → logprob: -12.077075958251953
    9. 'd' → logprob: -12.577075958251953
    10. ' ' → logprob: -13.327075958251953

Token 407: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07889948040246964
    2. '[j' → logprob: -2.578899383544922
    3. 'i' → logprob: -11.828899383544922
    4. 'j' → logprob: -13.828899383544922
    5. '[' → logprob: -14.453899383544922
    6. '   ' → logprob: -15.203899383544922
    7. '][' → logprob: -15.828899383544922
    8. '[
' → logprob: -16.078899383544922
    9. ']' → logprob: -16.578899383544922
    10. '       ' → logprob: -16.828899383544922

Token 408: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004494208376854658
    2. ']+' → logprob: -6.1294941902160645
    3. ' ]' → logprob: -6.2544941902160645
    4. '+' → logprob: -8.379494667053223
    5. '[' → logprob: -10.129494667053223
    6. ' +' → logprob: -10.504494667053223
    7. ']!=' → logprob: -10.629494667053223
    8. ']>' → logprob: -10.754494667053223
    9. '[j' → logprob: -10.879494667053223
    10. '   ' → logprob: -11.879494667053223

Token 409: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20143496990203857
    2. ' +' → logprob: -1.7014349699020386
    3. '!=' → logprob: -10.826435089111328
    4. ' !=' → logprob: -13.826435089111328
    5. '+k' → logprob: -16.201435089111328
    6. '[' → logprob: -16.326435089111328
    7. '```' → logprob: -16.451435089111328
    8. '<' → logprob: -16.576435089111328
    9. '+i' → logprob: -16.576435089111328
    10. '+c' → logprob: -16.701435089111328

Token 410: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0015023599844425917
    2. ' cost' → logprob: -6.501502513885498
    3. '(cost' → logprob: -20.001502990722656
    4. 'Cost' → logprob: -20.626502990722656
    5. 'co' → logprob: -20.876502990722656
    6. '_cost' → logprob: -21.001502990722656
    7. '.cost' → logprob: -23.126502990722656
    8. '   ' → logprob: -23.251502990722656
    9. 'cout' → logprob: -23.376502990722656
    10. 'code' → logprob: -23.876502990722656

Token 411: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3132641315460205
    2. '<' → logprob: -1.3132641315460205
    3. '<int' → logprob: -14.188263893127441
    4. ')' → logprob: -15.313263893127441
    5. ' ' → logprob: -15.563263893127441
    6. ' ' → logprob: -15.813263893127441
    7. '<th' → logprob: -15.813263893127441
    8. '<num' → logprob: -16.063264846801758
    9. '[' → logprob: -16.438264846801758
    10. '<n' → logprob: -16.438264846801758

Token 412: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00671584764495492
    2. ' dp' → logprob: -5.006715774536133
    3. '	dp' → logprob: -14.881715774536133
    4. '   ' → logprob: -15.881715774536133
    5. '_dp' → logprob: -18.006715774536133
    6. '(dp' → logprob: -18.006715774536133
    7. '=' → logprob: -19.631715774536133
    8. '       ' → logprob: -20.256715774536133
    9. '
' → logprob: -20.381715774536133
    10. '           ' → logprob: -20.631715774536133

Token 413: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.75
    3. '[j' → logprob: -16.375
    4. '   ' → logprob: -16.375
    5. '```' → logprob: -17.125
    6. '[' → logprob: -19.0
    7. '
' → logprob: -19.875
    8. '[
' → logprob: -20.125
    9. '       ' → logprob: -21.375
    10. '           ' → logprob: -21.5

Token 414: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.003464770969003439
    2. ']' → logprob: -6.378464698791504
    3. ']:
' → logprob: -6.378464698791504
    4. ':' → logprob: -10.878464698791504
    5. '[i' → logprob: -11.253464698791504
    6. '[' → logprob: -11.503464698791504
    7. '[j' → logprob: -12.003464698791504
    8. ']:
' → logprob: -12.128464698791504
    9. ' ]' → logprob: -12.628464698791504
    10. '   ' → logprob: -13.128464698791504

Token 415: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04435040056705475
    2. '           ' → logprob: -3.5443503856658936
    3. ' dp' → logprob: -4.544350624084473
    4. 'dp' → logprob: -6.544350624084473
    5. ':' → logprob: -7.294350624084473
    6. '):
' → logprob: -8.169350624084473
    7. '(dp' → logprob: -8.294350624084473
    8. ')' → logprob: -8.294350624084473
    9. ':
' → logprob: -8.794350624084473
    10. '       ' → logprob: -9.044350624084473

Token 416: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.25443828105926514
    2. ' dp' → logprob: -1.5044382810592651
    3. '               ' → logprob: -6.004438400268555
    4. '	dp' → logprob: -10.629438400268555
    5. '                   ' → logprob: -11.754438400268555
    6. '           ' → logprob: -12.254438400268555
    7. '_dp' → logprob: -14.754438400268555
    8. '(dp' → logprob: -15.004438400268555
    9. '                ' → logprob: -15.379438400268555
    10. '   ' → logprob: -15.504438400268555

Token 417: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -15.875
    3. '[j' → logprob: -17.625
    4. '[' → logprob: -18.125
    5. '```' → logprob: -21.0
    6. '[I' → logprob: -21.625
    7. ' i' → logprob: -22.125
    8. '(i' → logprob: -22.375
    9. '[
' → logprob: -22.375
    10. ' [' → logprob: -22.375

Token 418: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002489423204679042
    2. ' ]' → logprob: -8.750248908996582
    3. ']=' → logprob: -10.250248908996582
    4. '[j' → logprob: -10.625248908996582
    5. '[i' → logprob: -10.750248908996582
    6. ' =' → logprob: -12.250248908996582
    7. '=' → logprob: -12.500248908996582
    8. '[' → logprob: -14.375248908996582
    9. '   ' → logprob: -15.750248908996582
    10. 'i' → logprob: -16.6252498626709

Token 419: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002068892121315
    2. '=' → logprob: -2.3502068519592285
    3. '＝' → logprob: -16.35020637512207
    4. '[' → logprob: -16.35020637512207
    5. ',' → logprob: -17.10020637512207
    6. 'dp' → logprob: -18.72520637512207
    7. '.=' → logprob: -18.72520637512207
    8. ' =
' → logprob: -19.22520637512207
    9. '=

' → logprob: -19.35020637512207
    10. ' ' → logprob: -19.72520637512207

Token 420: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009119403548538685
    2. ' dp' → logprob: -7.000911712646484
    3. '	dp' → logprob: -15.375911712646484
    4. '   ' → logprob: -17.250911712646484
    5. '           ' → logprob: -17.250911712646484
    6. '               ' → logprob: -17.500911712646484
    7. 'dc' → logprob: -17.500911712646484
    8. 'd' → logprob: -17.875911712646484
    9. '(dp' → logprob: -18.000911712646484
    10. 'df' → logprob: -18.750911712646484

Token 421: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00018113377154804766
    2. 'j' → logprob: -8.625181198120117
    3. '[i' → logprob: -14.000181198120117
    4. '_j' → logprob: -15.125181198120117
    5. '[' → logprob: -15.750181198120117
    6. '	j' → logprob: -16.000181198120117
    7. '```' → logprob: -16.000181198120117
    8. '   ' → logprob: -18.125181198120117
    9. '][' → logprob: -18.750181198120117
    10. ' j' → logprob: -18.875181198120117

Token 422: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005653033731505275
    2. ']+' → logprob: -7.500565528869629
    3. '[i' → logprob: -11.750565528869629
    4. ' ]' → logprob: -13.250565528869629
    5. '+' → logprob: -14.000565528869629
    6. '   ' → logprob: -14.375565528869629
    7. '][' → logprob: -15.250565528869629
    8. '[' → logprob: -15.500565528869629
    9. '']' → logprob: -15.625565528869629
    10. '[j' → logprob: -15.625565528869629

Token 423: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931746006011963
    2. ' +' → logprob: -0.6931746006011963
    3. '[' → logprob: -10.818174362182617
    4. '+c' → logprob: -12.193174362182617
    5. ']+' → logprob: -15.193174362182617
    6. ' ' → logprob: -15.318174362182617
    7. '＋' → logprob: -15.568174362182617
    8. ']' → logprob: -15.818174362182617
    9. 'dp' → logprob: -15.943174362182617
    10. ' plus' → logprob: -15.943174362182617

Token 424: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -9.615255839889869e-05
    2. ' cost' → logprob: -9.250096321105957
    3. '_cost' → logprob: -19.62509536743164
    4. '(cost' → logprob: -19.62509536743164
    5. 'Cost' → logprob: -20.62509536743164
    6. 'code' → logprob: -22.37509536743164
    7. '.cost' → logprob: -23.37509536743164
    8. 'count' → logprob: -23.87509536743164
    9. '
' → logprob: -23.87509536743164
    10. 'co' → logprob: -23.87509536743164

Token 425: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7194209694862366
    2. '<|end|>' → logprob: -0.7194209694862366
    3. '   ' → logprob: -4.844420909881592
    4. '    
' → logprob: -5.344420909881592
    5. '```' → logprob: -5.719420909881592
    6. '\n' → logprob: -5.844420909881592
    7. '  
' → logprob: -6.469420909881592
    8. 'return' → logprob: -6.594420909881592
    9. '<|end|>' → logprob: -6.594420909881592
    10. ' 
' → logprob: -7.344420909881592

Token 426: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00415378762409091
    2. '   ' → logprob: -5.504153728485107
    3. '```' → logprob: -10.254154205322266
    4. ' print' → logprob: -10.629154205322266
    5. '
' → logprob: -11.629154205322266
    6. 'return' → logprob: -12.129154205322266
    7. '    
' → logprob: -13.879154205322266
    8. '	print' → logprob: -14.754154205322266
    9. '#print' → logprob: -16.379154205322266
    10. '  
' → logprob: -16.754154205322266

Token 428: ' Rés' (ID: 104378)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010640407708706334
    2. '   ' → logprob: -9.250106811523438
    3. ' print' → logprob: -11.500106811523438
    4. 'return' → logprob: -15.625106811523438
    5. '```' → logprob: -18.375106811523438
    6. '#print' → logprob: -19.750106811523438
    7. '
' → logprob: -20.000106811523438
    8. '	print' → logprob: -20.625106811523438
    9. '    
' → logprob: -20.750106811523438
    10. 'printf' → logprob: -21.125106811523438

Token 429: 'ultat' (ID: 133070)
  Prédit: 'ultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultat' → logprob: -0.31676140427589417
    2. 'ult' → logprob: -1.3167613744735718
    3. '   ' → logprob: -6.191761493682861
    4. 'print' → logprob: -6.566761493682861
    5. '```' → logprob: -11.691761016845703
    6. ' print' → logprob: -11.691761016845703
    7. 'umé' → logprob: -11.941761016845703
    8. '       ' → logprob: -12.441761016845703
    9. 'ults' → logprob: -12.566761016845703
    10. '    ' → logprob: -12.941761016845703

Token 430: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03806180879473686
    2. 'print' → logprob: -3.2880618572235107
    3. '
' → logprob: -11.28806209564209
    4. ' print' → logprob: -11.91306209564209
    5. '```' → logprob: -13.91306209564209
    6. '    
' → logprob: -15.53806209564209
    7. '	print' → logprob: -17.663061141967773
    8. '       ' → logprob: -18.788061141967773
    9. '
' → logprob: -19.538061141967773
    10. '  
' → logprob: -20.163061141967773

Token 431: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029989054426550865
    2. 'print' → logprob: -3.529989004135132
    3. ' print' → logprob: -9.029989242553711
    4. '
' → logprob: -9.154989242553711
    5. '```' → logprob: -11.404989242553711
    6. '    
' → logprob: -13.154989242553711
    7. '	print' → logprob: -17.02998924255371
    8. '
' → logprob: -17.15498924255371
    9. '#print' → logprob: -18.27998924255371
    10. '  
' → logprob: -18.40498924255371

Token 432: ' coût' (ID: 73109)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007567389984615147
    2. ' print' → logprob: -7.500756740570068
    3. '   ' → logprob: -8.50075626373291
    4. '```' → logprob: -14.87575626373291
    5. '
' → logprob: -18.500757217407227
    6. '	print' → logprob: -20.250757217407227
    7. '``' → logprob: -20.875757217407227
    8. '  ' → logprob: -21.875757217407227
    9. 'printf' → logprob: -22.125757217407227
    10. ' ' → logprob: -22.375757217407227

Token 433: ' minimal' (ID: 19957)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05285682901740074
    2. '   ' → logprob: -3.677856922149658
    3. ' print' → logprob: -3.677856922149658
    4. 'min' → logprob: -8.5528564453125
    5. ' =' → logprob: -8.8028564453125
    6. 'optimal' → logprob: -9.4278564453125
    7. '=' → logprob: -9.5528564453125
    8. 'à' → logprob: -9.5528564453125
    9. '```' → logprob: -9.9278564453125
    10. 'final' → logprob: -9.9278564453125

Token 434: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4927116632461548
    2. 'print' → logprob: -0.9927116632461548
    3. ' print' → logprob: -3.9927115440368652
    4. '```' → logprob: -11.742712020874023
    5. '
' → logprob: -12.867712020874023
    6. '	print' → logprob: -13.992712020874023
    7. '(print' → logprob: -14.242712020874023
    8. '.print' → logprob: -15.992712020874023
    9. 'import' → logprob: -16.367712020874023
    10. ',' → logprob: -16.617712020874023

Token 435: ' empa' (ID: 104653)
  Prédit: ' empa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' empa' → logprob: -0.02686806209385395
    2. ' emball' → logprob: -4.026867866516113
    3. 'emb' → logprob: -5.901867866516113
    4. 'emp' → logprob: -6.151867866516113
    5. 'pack' → logprob: -6.526867866516113
    6. ' emp' → logprob: -7.026867866516113
    7. 'em' → logprob: -7.651867866516113
    8. 'dp' → logprob: -7.776867866516113
    9. ' dp' → logprob: -8.526867866516113
    10. ' pack' → logprob: -9.276867866516113

Token 436: 'qu' (ID: 351)
  Prédit: 'qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.0001600347168277949
    2. 'q' → logprob: -9.250160217285156
    3. 'quer' → logprob: -11.875160217285156
    4. 'que' → logprob: -11.875160217285156
    5. 'ball' → logprob: -12.125160217285156
    6. 'c' → logprob: -12.125160217285156
    7. 'ter' → logprob: -12.125160217285156
    8. 'b' → logprob: -12.625160217285156
    9. 'quet' → logprob: -12.750160217285156
    10. '   ' → logprob: -12.875160217285156

Token 437: 'eter' (ID: 2377)
  Prédit: 'eter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eter' → logprob: -0.06133398413658142
    2. 'qu' → logprob: -2.9363338947296143
    3. 'etter' → logprob: -5.811334133148193
    4. 'ter' → logprob: -6.436334133148193
    5. 'reter' → logprob: -8.061333656311035
    6. 'aqu' → logprob: -8.186333656311035
    7. 'éter' → logprob: -8.186333656311035
    8. 't' → logprob: -8.936333656311035
    9. 'acheter' → logprob: -8.936333656311035
    10. 'êter' → logprob: -9.186333656311035

Token 438: ' toutes' (ID: 17502)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.1221461296081543
    2. ' les' → logprob: -2.2471461296081543
    3. 'N' → logprob: -5.122146129608154
    4. ' oranges' → logprob: -6.497146129608154
    5. ' N' → logprob: -7.247146129608154
    6. ' toutes' → logprob: -8.497146606445312
    7. '[N' → logprob: -8.622146606445312
    8. 'dp' → logprob: -8.622146606445312
    9. '   ' → logprob: -8.872146606445312
    10. 'le' → logprob: -9.247146606445312

Token 439: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3485032320022583
    2. ' les' → logprob: -1.2235032320022583
    3. '```' → logprob: -10.848503112792969
    4. ' ' → logprob: -11.473503112792969
    5. ' ' → logprob: -11.973503112792969
    6. ' oranges' → logprob: -12.098503112792969
    7. '   ' → logprob: -12.848503112792969
    8. '_' → logprob: -12.848503112792969
    9. 'Les' → logprob: -13.098503112792969
    10. 'leurs' → logprob: -13.473503112792969

Token 440: ' oranges' (ID: 120311)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -3.690834273584187e-05
    2. ' oranges' → logprob: -10.25003719329834
    3. ' or' → logprob: -14.12503719329834
    4. 'orange' → logprob: -14.62503719329834
    5. '   ' → logprob: -16.625036239624023
    6. 'orang' → logprob: -17.000036239624023
    7. '(or' → logprob: -17.000036239624023
    8. '_or' → logprob: -17.500036239624023
    9. 'N' → logprob: -18.375036239624023
    10. ''or' → logprob: -18.625036239624023

Token 441: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07906945049762726
    2. 'print' → logprob: -2.5790693759918213
    3. ' print' → logprob: -8.829069137573242
    4. '```' → logprob: -10.329069137573242
    5. '
' → logprob: -14.704069137573242
    6. '	print' → logprob: -15.829069137573242
    7. '    
' → logprob: -18.204069137573242
    8. '``' → logprob: -18.329069137573242
    9. '#print' → logprob: -19.079069137573242
    10. '       ' → logprob: -19.079069137573242

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1612088531255722
    2. 'print' → logprob: -1.9112088680267334
    3. ' print' → logprob: -7.161208629608154
    4. '```' → logprob: -8.536209106445312
    5. '
' → logprob: -11.411209106445312
    6. '	print' → logprob: -15.036209106445312
    7. '    
' → logprob: -15.161209106445312
    8. '#print' → logprob: -16.411209106445312
    9. '``' → logprob: -16.536209106445312
    10. 'return' → logprob: -16.911209106445312

Token 443: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002057119505479932
    2. '   ' → logprob: -6.502057075500488
    3. ' print' → logprob: -7.502057075500488
    4. '```' → logprob: -13.002057075500488
    5. '
' → logprob: -15.252057075500488
    6. 'return' → logprob: -15.877057075500488
    7. '	print' → logprob: -18.877058029174805
    8. '    
' → logprob: -19.127058029174805
    9. '``' → logprob: -19.752058029174805
    10. '#print' → logprob: -20.252058029174805

Token 444: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -8.995397365652025e-05
    2. '(' → logprob: -9.500089645385742
    3. ' (' → logprob: -11.625089645385742
    4. 'dp' → logprob: -12.375089645385742
    5. '()' → logprob: -13.375089645385742
    6. ' dp' → logprob: -15.500089645385742
    7. '(df' → logprob: -16.625089645385742
    8. '(
' → logprob: -17.625089645385742
    9. '	dp' → logprob: -18.000089645385742
    10. '(dc' → logprob: -18.000089645385742

Token 445: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.01105265598744154
    2. '[-' → logprob: -4.51105260848999
    3. '[len' → logprob: -12.636053085327148
    4. '[n' → logprob: -13.636053085327148
    5. 'N' → logprob: -15.886053085327148
    6. '[i' → logprob: -16.51105308532715
    7. '[' → logprob: -16.76105308532715
    8. '(N' → logprob: -16.76105308532715
    9. '```' → logprob: -18.51105308532715
    10. '   ' → logprob: -18.63605308532715

Token 446: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006323783891275525
    2. ')' → logprob: -7.375632286071777
    3. ']' → logprob: -13.000632286071777
    4. '])
' → logprob: -13.625632286071777
    5. ' ])' → logprob: -13.750632286071777
    6. '))' → logprob: -15.000632286071777
    7. ''])' → logprob: -15.000632286071777
    8. ')])' → logprob: -15.250632286071777
    9. '})' → logprob: -16.125633239746094
    10. '[' → logprob: -16.625633239746094

Token 447: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00103042705450207
    2. '__' → logprob: -7.001030445098877
    3. ' ' → logprob: -10.126029968261719
    4. ' _' → logprob: -10.251029968261719
    5. '_' → logprob: -10.626029968261719
    6. ' ' → logprob: -11.751029968261719
    7. ' main' → logprob: -12.126029968261719
    8. ' ___' → logprob: -13.376029968261719
    9. '_name' → logprob: -13.501029968261719
    10. ' ​' → logprob: -14.251029968261719

Token 449: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10028096288442612
    2. ' ==' → logprob: -2.475281000137329
    3. '==' → logprob: -4.72528076171875
    4. '.__' → logprob: -7.10028076171875
    5. ' __' → logprob: -7.22528076171875
    6. '__.' → logprob: -7.72528076171875
    7. '__.__' → logprob: -8.47528076171875
    8. ' .' → logprob: -10.22528076171875
    9. '.' → logprob: -10.47528076171875
    10. 'name' → logprob: -10.60028076171875

Token 450: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.885492621222511e-05
    2. '__.__' → logprob: -9.750068664550781
    3. '==' → logprob: -12.000068664550781
    4. '__.' → logprob: -12.875068664550781
    5. '=="' → logprob: -14.125068664550781
    6. ' ==' → logprob: -15.000068664550781
    7. '__('' → logprob: -15.375068664550781
    8. '__["' → logprob: -15.875068664550781
    9. '__[' → logprob: -16.50006866455078
    10. '____' → logprob: -16.75006866455078

Token 451: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.047760799527168274
    2. ' ==' → logprob: -3.5477607250213623
    3. '==' → logprob: -4.047760963439941
    4. '=="' → logprob: -8.047760963439941
    5. '=='' → logprob: -10.422760963439941
    6. '__.__' → logprob: -10.797760963439941
    7. '___' → logprob: -12.547760963439941
    8. '__["' → logprob: -12.922760963439941
    9. '__.' → logprob: -13.172760963439941
    10. '.__' → logprob: -13.297760963439941

Token 452: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04862211272120476
    2. ''' → logprob: -3.0486221313476562
    3. ' "__' → logprob: -10.798622131347656
    4. '__' → logprob: -11.298622131347656
    5. ' '__' → logprob: -13.298622131347656
    6. '"name' → logprob: -15.923622131347656
    7. '   ' → logprob: -17.298622131347656
    8. '"user' → logprob: -17.298622131347656
    9. ''"' → logprob: -17.423622131347656
    10. '("__' → logprob: -17.548622131347656

Token 453: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6934835910797119
    2. 'main' → logprob: -0.6934835910797119
    3. '"' → logprob: -8.443483352661133
    4. ''' → logprob: -9.318483352661133
    5. ' __' → logprob: -11.068483352661133
    6. '_main' → logprob: -12.068483352661133
    7. ' main' → logprob: -12.318483352661133
    8. 'name' → logprob: -13.068483352661133
    9. '___' → logprob: -14.193483352661133
    10. ' "__' → logprob: -14.568483352661133

Token 454: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.09108501672744751
    2. '__' → logprob: -2.4660849571228027
    3. '__':
' → logprob: -6.216084957122803
    4. '():
' → logprob: -9.841085433959961
    5. '__()
' → logprob: -10.466085433959961
    6. '__["' → logprob: -10.966085433959961
    7. '__
' → logprob: -11.591085433959961
    8. '__.' → logprob: -11.966085433959961
    9. '__:' → logprob: -11.966085433959961
    10. '_' → logprob: -11.966085433959961

Token 455: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.514789879322052
    2. 'main' → logprob: -1.5147898197174072
    3. '	main' → logprob: -2.0147898197174072
    4. '   ' → logprob: -3.0147898197174072
    5. '_main' → logprob: -9.514789581298828
    6. '(main' → logprob: -11.264789581298828
    7. '   ' → logprob: -12.389789581298828
    8. '    
' → logprob: -12.639789581298828
    9. ' ' → logprob: -12.764789581298828
    10. '	Main' → logprob: -12.764789581298828

Token 456: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.688212614681106e-05
    2. ' main' → logprob: -11.000017166137695
    3. '	main' → logprob: -16.250017166137695
    4. '   ' → logprob: -18.000017166137695
    5. '_main' → logprob: -21.250017166137695
    6. '(main' → logprob: -22.125017166137695
    7. '.main' → logprob: -22.250017166137695
    8. 'Main' → logprob: -24.250017166137695
    9. '  ' → logprob: -24.500017166137695
    10. '```' → logprob: -25.125017166137695

Token 457: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7339616417884827
    2. '<|end|>' → logprob: -0.9839616417884827
    3. '
' → logprob: -2.108961582183838
    4. '\n' → logprob: -4.358961582183838
    5. '(' → logprob: -5.733961582183838
    6. '()
' → logprob: -5.983961582183838
    7. '```' → logprob: -6.108961582183838
    8. ')' → logprob: -6.358961582183838
    9. '<|end|>' → logprob: -7.483961582183838
    10. 'newline' → logprob: -7.858961582183838


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 455
Tokens correctement prédits (1ère position, stricte): 176
Tokens correctement prédits (1ère position, avec adaptation): 183
Tokens correctement prédits (top 10): 329
Précision stricte (1ère position): 38.68%
Précision adaptée (1ère position): 40.22%
Précision (top 10): 72.31%
================================================================================
