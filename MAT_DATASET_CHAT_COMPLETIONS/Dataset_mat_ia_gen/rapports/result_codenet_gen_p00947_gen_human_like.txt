================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
table = [list(map(int, input().split())) for _ in range(10)]

def op(i, j):
    return table[i][j]

def check(ssn):
    val = 0
    for d in ssn:
        val = op(val, d)
    return val

bad_count = 0

for num in range(10000):
    digits = [num // 1000, (num // 100) % 10, (num // 10) % 10, num % 10]
    e = 0
    for d in digits:
        e = op(e, d)
    ssn = digits + [e]

    detected = True

    # Check all single digit errors (alter one digit)
    for pos in range(5):
        original = ssn[pos]
        for new_digit in range(10):
            if new_digit == original:
                continue
            error_ssn = ssn[:]
            error_ssn[pos] = new_digit
            if check(error_ssn) == 0:
                detected = False
                break
        if not detected:
            break

    if not detected:
        bad_count += 1
        continue

    # Check all adjacent transposition errors
    for i in range(4):
        error_ssn = ssn[:]
        error_ssn[i], error_ssn[i+1] = error_ssn[i+1], error_ssn[i]
        if check(error_ssn) == 0:
            detected = False
            break

    if not detected:
        bad_count += 1

print(bad_count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'table' (ID: 4202)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' [' (ID: 723)
  → Token d'amorce (pas de prédiction)

Token 3: 'list' (ID: 2641)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08159205317497253
    2. '[]' → logprob: -2.581592082977295
    3. ']' → logprob: -6.081592082977295
    4. '   ' → logprob: -8.581591606140137
    5. '{' → logprob: -9.081591606140137
    6. '[],' → logprob: -10.456591606140137
    7. '[
' → logprob: -10.706591606140137
    8. ' [' → logprob: -10.956591606140137
    9. '```' → logprob: -11.081591606140137
    10. '['' → logprob: -12.081591606140137

Token 4: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.322470486164093
    2. '(' → logprob: -1.3224704265594482
    3. '(map' → logprob: -4.947470664978027
    4. '(filter' → logprob: -7.322470664978027
    5. '('' → logprob: -8.572470664978027
    6. ']' → logprob: -9.072470664978027
    7. '(chain' → logprob: -9.072470664978027
    8. '(column' → logprob: -9.197470664978027
    9. '(zip' → logprob: -9.447470664978027
    10. '[' → logprob: -9.447470664978027

Token 5: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3116006553173065
    2. '(str' → logprob: -1.561600685119629
    3. '(lambda' → logprob: -3.186600685119629
    4. '(' → logprob: -4.561600685119629
    5. 'int' → logprob: -6.686600685119629
    6. 'str' → logprob: -6.811600685119629
    7. ')' → logprob: -6.936600685119629
    8. '```' → logprob: -7.061600685119629
    9. '[int' → logprob: -8.061600685119629
    10. '<int' → logprob: -8.186600685119629

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10334881395101547
    2. '(token' → logprob: -3.478348731994629
    3. '(table' → logprob: -3.978348731994629
    4. ')' → logprob: -4.603348731994629
    5. '(user' → logprob: -4.728348731994629
    6. '(range' → logprob: -4.978348731994629
    7. '(input' → logprob: -6.103348731994629
    8. '(data' → logprob: -6.228348731994629
    9. '(row' → logprob: -6.603348731994629
    10. '(line' → logprob: -6.603348731994629

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006200734525918961
    2. ' input' → logprob: -5.506200790405273
    3. '(input' → logprob: -6.881200790405273
    4. 'row' → logprob: -7.381200790405273
    5. 'line' → logprob: -8.131200790405273
    6. ',input' → logprob: -10.006200790405273
    7. ')' → logprob: -10.131200790405273
    8. 'x' → logprob: -11.131200790405273
    9. ' line' → logprob: -11.381200790405273
    10. 'user' → logprob: -11.881200790405273

Token 8: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.28323450684547424
    2. '().' → logprob: -2.0332345962524414
    3. '()' → logprob: -2.2832345962524414
    4. '()));' → logprob: -5.283234596252441
    5. '())))' → logprob: -5.908234596252441
    6. '())' → logprob: -6.283234596252441
    7. '(' → logprob: -6.283234596252441
    8. '(()' → logprob: -7.033234596252441
    9. '());' → logprob: -8.533234596252441
    10. '()>' → logprob: -8.783234596252441

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0008974085212685168
    2. 'strip' → logprob: -7.125897407531738
    3. ' split' → logprob: -9.500897407531738
    4. 'rstrip' → logprob: -11.500897407531738
    5. '(split' → logprob: -12.000897407531738
    6. ')' → logprob: -14.000897407531738
    7. 'read' → logprob: -14.125897407531738
    8. ' strip' → logprob: -16.000898361206055
    9. 'spl' → logprob: -16.375898361206055
    10. 's' → logprob: -16.875898361206055

Token 10: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.11262281984090805
    2. '))' → logprob: -2.3626227378845215
    3. '())' → logprob: -4.6126227378845215
    4. '()' → logprob: -7.1126227378845215
    5. '('' → logprob: -7.8626227378845215
    6. ')' → logprob: -7.8626227378845215
    7. '())))' → logprob: -7.8626227378845215
    8. '(' → logprob: -8.61262321472168
    9. ')))' → logprob: -8.98762321472168
    10. ''))' → logprob: -9.86262321472168

Token 11: ' for' (ID: 395)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.6247433423995972
    2. ']' → logprob: -0.9997433423995972
    3. ')' → logprob: -2.3747434616088867
    4. '])' → logprob: -7.249743461608887
    5. '[' → logprob: -7.499743461608887
    6. '`]' → logprob: -7.749743461608887
    7. 'for' → logprob: -7.874743461608887
    8. '()]' → logprob: -7.999743461608887
    9. ' for' → logprob: -7.999743461608887
    10. '])]' → logprob: -8.124743461608887

Token 12: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004252319689840078
    2. 'range' → logprob: -6.3792524337768555
    3. ' ' → logprob: -7.0042524337768555
    4. ' row' → logprob: -7.2542524337768555
    5. ' i' → logprob: -7.8792524337768555
    6. ' _' → logprob: -8.629252433776855
    7. '_' → logprob: -9.379252433776855
    8. ' rows' → logprob: -9.754252433776855
    9. '_range' → logprob: -10.129252433776855
    10. '(range' → logprob: -10.379252433776855

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31332018971443176
    2. 'in' → logprob: -1.3133201599121094
    3. '<|end|>' → logprob: -10.56332015991211
    4. 'range' → logprob: -11.43832015991211
    5. 'import' → logprob: -11.56332015991211
    6. ' ' → logprob: -12.93832015991211
    7. 's' → logprob: -13.18832015991211
    8. '_' → logprob: -13.56332015991211
    9. '	in' → logprob: -14.06332015991211
    10. 'to' → logprob: -14.06332015991211

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026305990293622017
    2. 'range' → logprob: -3.651305913925171
    3. ' ' → logprob: -13.15130615234375
    4. '	range' → logprob: -13.27630615234375
    5. '(range' → logprob: -13.77630615234375
    6. ' xrange' → logprob: -14.52630615234375
    7. '_range' → logprob: -15.27630615234375
    8. ' table' → logprob: -16.02630615234375
    9. '-range' → logprob: -16.90130615234375
    10. '  ' → logprob: -17.15130615234375

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003051862120628357
    2. '(len' → logprob: -5.8780517578125
    3. '(n' → logprob: -8.8780517578125
    4. ' (' → logprob: -9.2530517578125
    5. '(int' → logprob: -13.0030517578125
    6. '(range' → logprob: -13.1280517578125
    7. '(
' → logprob: -13.2530517578125
    8. '(num' → logprob: -14.0030517578125
    9. '(size' → logprob: -14.1280517578125
    10. '(N' → logprob: -14.1280517578125

Token 16: '10' (ID: 702)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3006318211555481
    2. '9' → logprob: -1.8006317615509033
    3. '5' → logprob: -2.9256317615509033
    4. '10' → logprob: -4.175631999969482
    5. 'n' → logprob: -4.675631999969482
    6. '4' → logprob: -5.175631999969482
    7. '6' → logprob: -5.550631999969482
    8. 'int' → logprob: -5.675631999969482
    9. ' ' → logprob: -7.175631999969482
    10. '8' → logprob: -7.175631999969482

Token 17: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.096126576769166e-05
    2. ')' → logprob: -10.375041007995605
    3. ']' → logprob: -11.750041007995605
    4. ')])' → logprob: -14.000041007995605
    5. '])]' → logprob: -15.125041007995605
    6. ' )' → logprob: -15.750041007995605
    7. '')]' → logprob: -15.750041007995605
    8. ')],' → logprob: -15.875041007995605
    9. '))' → logprob: -16.50004005432129
    10. '])' → logprob: -16.75004005432129

Token 18: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.32751622796058655
    2. ']' → logprob: -1.9525161981582642
    3. '[' → logprob: -2.2025163173675537
    4. ',' → logprob: -4.202516078948975
    5. ')' → logprob: -5.327516078948975
    6. '\' → logprob: -6.702516078948975
    7. '#' → logprob: -6.827516078948975
    8. '.]' → logprob: -6.952516078948975
    9. '\[' → logprob: -7.327516078948975
    10. ' ' → logprob: -8.077516555786133

Token 19: ' op' (ID: 991)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09523744136095047
    2. ' space' → logprob: -2.8452374935150146
    3. ' process' → logprob: -5.2202372550964355
    4. ' calculate' → logprob: -5.3452372550964355
    5. ' find' → logprob: -5.5952372550964355
    6. ' a' → logprob: -5.9702372550964355
    7. ' my' → logprob: -6.2202372550964355
    8. ' table' → logprob: -6.3452372550964355
    9. ' ' → logprob: -6.7202372550964355
    10. ' is' → logprob: -6.9702372550964355

Token 20: '(i' (ID: 3649)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5296507477760315
    2. '(' → logprob: -2.1546506881713867
    3. 'en' → logprob: -2.1546506881713867
    4. '1' → logprob: -3.5296506881713867
    5. 'a' → logprob: -3.9046506881713867
    6. '```' → logprob: -4.029650688171387
    7. '(table' → logprob: -4.029650688171387
    8. 'er' → logprob: -4.654650688171387
    9. '_(' → logprob: -4.654650688171387
    10. '(a' → logprob: -5.154650688171387

Token 21: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6893005967140198
    2. '):' → logprob: -1.064300537109375
    3. ',' → logprob: -2.064300537109375
    4. ')]' → logprob: -3.814300537109375
    5. '[' → logprob: -7.064300537109375
    6. ' ,' → logprob: -7.939300537109375
    7. ']' → logprob: -7.939300537109375
    8. '_' → logprob: -8.064300537109375
    9. ' )' → logprob: -8.189300537109375
    10. '+' → logprob: -8.189300537109375

Token 22: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.218205988407135
    2. 'j' → logprob: -1.7182059288024902
    3. ' table' → logprob: -4.84320592880249
    4. 'table' → logprob: -6.46820592880249
    5. ' row' → logprob: -6.46820592880249
    6. ' x' → logprob: -7.34320592880249
    7. ' n' → logprob: -7.34320592880249
    8. 'row' → logprob: -7.59320592880249
    9. ')' → logprob: -7.84320592880249
    10. 'a' → logprob: -8.093206405639648

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5489980578422546
    2. ')' → logprob: -0.9239980578422546
    3. ',' → logprob: -3.7989981174468994
    4. ')]' → logprob: -5.92399787902832
    5. ']:' → logprob: -9.42399787902832
    6. ' ):' → logprob: -9.92399787902832
    7. ']' → logprob: -9.92399787902832
    8. ':' → logprob: -10.29899787902832
    9. ')])' → logprob: -10.54899787902832
    10. '   ' → logprob: -10.67399787902832

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2910861670970917
    2. ':' → logprob: -1.666086196899414
    3. '    ' → logprob: -4.291086196899414
    4. ' return' → logprob: -4.791086196899414
    5. '[' → logprob: -5.041086196899414
    6. '[]' → logprob: -5.416086196899414
    7. '(' → logprob: -5.541086196899414
    8. ' ' → logprob: -5.666086196899414
    9. ':return' → logprob: -5.666086196899414
    10. '[:]' → logprob: -5.666086196899414

Token 25: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.4005415439605713
    2. '   ' → logprob: -1.5255415439605713
    3. ' return' → logprob: -1.5255415439605713
    4. ' ' → logprob: -2.5255415439605713
    5. ' if' → logprob: -2.9005415439605713
    6. ' for' → logprob: -3.6505415439605713
    7. 'r' → logprob: -3.6505415439605713
    8. 'if' → logprob: -3.9005415439605713
    9. 't' → logprob: -4.150541305541992
    10. 'for' → logprob: -4.275541305541992

Token 26: ' table' (ID: 3293)
  Prédit: ' table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' table' → logprob: -0.20369458198547363
    2. 'table' → logprob: -1.9536945819854736
    3. ' max' → logprob: -3.7036945819854736
    4. ' sum' → logprob: -5.3286943435668945
    5. ' ' → logprob: -5.4536943435668945
    6. 'sum' → logprob: -5.9536943435668945
    7. 'max' → logprob: -6.5786943435668945
    8. ' i' → logprob: -7.0786943435668945
    9. ' abs' → logprob: -7.2036943435668945
    10. ' (' → logprob: -7.4536943435668945

Token 27: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023543603718280792
    2. '[' → logprob: -3.7735435962677
    3. '[j' → logprob: -8.523543357849121
    4. '[max' → logprob: -10.773543357849121
    5. '[int' → logprob: -10.773543357849121
    6. '[user' → logprob: -12.023543357849121
    7. '[min' → logprob: -12.398543357849121
    8. '[row' → logprob: -12.398543357849121
    9. '\[' → logprob: -12.898543357849121
    10. '[u' → logprob: -13.023543357849121

Token 28: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0021150470711290836
    2. ']' → logprob: -6.377115249633789
    3. '[j' → logprob: -8.627115249633789
    4. '-' → logprob: -9.127115249633789
    5. '+' → logprob: -9.752115249633789
    6. ' ][' → logprob: -10.502115249633789
    7. '[' → logprob: -10.627115249633789
    8. ',j' → logprob: -13.002115249633789
    9. '   ' → logprob: -13.377115249633789
    10. '+j' → logprob: -13.502115249633789

Token 29: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9385402993066236e-05
    2. ' j' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.000019073486328
    4. ' ' → logprob: -16.250019073486328
    5. '	j' → logprob: -16.500019073486328
    6. '    ' → logprob: -16.750019073486328
    7. ']' → logprob: -17.250019073486328
    8. '  ' → logprob: -17.375019073486328
    9. '0' → logprob: -17.625019073486328
    10. ':j' → logprob: -18.875019073486328

Token 30: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005398084758780897
    2. '+' → logprob: -7.875539779663086
    3. ')' → logprob: -10.125539779663086
    4. ']+' → logprob: -10.250539779663086
    5. ' ]' → logprob: -10.500539779663086
    6. '[' → logprob: -10.500539779663086
    7. '-' → logprob: -11.125539779663086
    8. ']
' → logprob: -12.625539779663086
    9. ')]' → logprob: -13.000539779663086
    10. '])' → logprob: -13.375539779663086

Token 31: 'def' (ID: 1314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05446286126971245
    2. '*' → logprob: -3.1794629096984863
    3. '[' → logprob: -5.179462909698486
    4. '(' → logprob: -6.804462909698486
    5. '<|end|>' → logprob: -7.054462909698486
    6. ' +' → logprob: -7.179462909698486
    7. ' ' → logprob: -7.554462909698486
    8. '.' → logprob: -7.554462909698486
    9. '-' → logprob: -8.054462432861328
    10. ')' → logprob: -8.054462432861328

Token 32: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6329864263534546
    2. ' op' → logprob: -1.5079864263534546
    3. ' max' → logprob: -3.257986545562744
    4. ' table' → logprob: -3.382986545562744
    5. ' count' → logprob: -3.882986545562744
    6. ' sum' → logprob: -3.882986545562744
    7. ' ' → logprob: -4.132986545562744
    8. ' row' → logprob: -4.257986545562744
    9. ' rotate' → logprob: -4.382986545562744
    10. ' rows' → logprob: -4.632986545562744

Token 33: '(ss' (ID: 68597)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1274966150522232
    2. '_' → logprob: -2.1274967193603516
    3. '(i' → logprob: -9.127496719360352
    4. '(_)' → logprob: -9.377496719360352
    5. '_(' → logprob: -9.627496719360352
    6. '()' → logprob: -10.377496719360352
    7. '(a' → logprob: -10.877496719360352
    8. 's' → logprob: -10.877496719360352
    9. ' (' → logprob: -11.002496719360352
    10. '(n' → logprob: -11.002496719360352

Token 34: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22083619236946106
    2. ',' → logprob: -3.0958361625671387
    3. 'q' → logprob: -3.0958361625671387
    4. 's' → logprob: -3.2208361625671387
    5. '):' → logprob: -4.220836162567139
    6. '[' → logprob: -4.345836162567139
    7. '(' → logprob: -4.845836162567139
    8. 'a' → logprob: -5.470836162567139
    9. 'quare' → logprob: -5.720836162567139
    10. 'um' → logprob: -6.095836162567139

Token 35: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7048611044883728
    2. '):' → logprob: -0.7048611044883728
    3. ',' → logprob: -5.079861164093018
    4. '_' → logprob: -6.579861164093018
    5. '(' → logprob: -6.954861164093018
    6. 's' → logprob: -7.329861164093018
    7. '[' → logprob: -7.579861164093018
    8. ')):' → logprob: -8.07986068725586
    9. ']):' → logprob: -9.07986068725586
    10. '_)' → logprob: -9.20486068725586

Token 36: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0430675745010376
    2. '   ' → logprob: -1.0430675745010376
    3. '    ' → logprob: -2.293067455291748
    4. ':' → logprob: -2.418067455291748
    5. ' (' → logprob: -3.043067455291748
    6. ' ' → logprob: -4.418067455291748
    7. ' :' → logprob: -4.543067455291748
    8. ')' → logprob: -4.793067455291748
    9. '[' → logprob: -5.168067455291748
    10. '_' → logprob: -5.293067455291748

Token 37: ' val' (ID: 1459)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1905447542667389
    2. 'for' → logprob: -2.190544843673706
    3. '   ' → logprob: -3.440544843673706
    4. ' sum' → logprob: -4.815544605255127
    5. ' all' → logprob: -5.065544605255127
    6. 'sum' → logprob: -5.940544605255127
    7. ' return' → logprob: -6.440544605255127
    8. ' max' → logprob: -6.440544605255127
    9. 'all' → logprob: -6.940544605255127
    10. ' len' → logprob: -7.065544605255127

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2895827293395996
    2. '=' → logprob: -1.9145827293395996
    3. '[' → logprob: -2.5395827293395996
    4. ' ' → logprob: -4.5395827293396
    5. '(' → logprob: -5.1645827293396
    6. '   ' → logprob: -6.2895827293396
    7. 'ue' → logprob: -6.4145827293396
    8. 's' → logprob: -6.5395827293396
    9. '_' → logprob: -7.2895827293396
    10. '[]' → logprob: -7.6645827293396

Token 39: ' ' (ID: 220)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.32866236567497253
    2. '0' → logprob: -1.953662395477295
    3. 'op' → logprob: -2.578662395477295
    4. ' ' → logprob: -3.828662395477295
    5. ' ss' → logprob: -4.203662395477295
    6. ' table' → logprob: -4.703662395477295
    7. 'ss' → logprob: -5.078662395477295
    8. ' sum' → logprob: -5.828662395477295
    9. 'sum' → logprob: -5.953662395477295
    10. 'table' → logprob: -6.078662395477295

Token 40: '0' (ID: 15)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.2779831886291504
    2. '0' → logprob: -2.1529831886291504
    3. 'ss' → logprob: -2.6529831886291504
    4. 'sum' → logprob: -3.1529831886291504
    5. 'table' → logprob: -5.02798318862915
    6. 'int' → logprob: -6.15298318862915
    7. 'len' → logprob: -6.40298318862915
    8. '1' → logprob: -6.90298318862915
    9. ' op' → logprob: -7.65298318862915
    10. '[' → logprob: -7.65298318862915

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14561302959918976
    2. '<|end|>' → logprob: -2.395612955093384
    3. ' for' → logprob: -4.020613193511963
    4. 'for' → logprob: -5.020613193511963
    5. '	for' → logprob: -5.270613193511963
    6. ' ' → logprob: -6.020613193511963
    7. '    ' → logprob: -6.145613193511963
    8. ',' → logprob: -6.520613193511963
    9. '    
' → logprob: -6.645613193511963
    10. '<|end|>' → logprob: -6.770613193511963

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1672930121421814
    2. ' for' → logprob: -2.667293071746826
    3. '	for' → logprob: -3.167293071746826
    4. 'for' → logprob: -4.042293071746826
    5. '<|end|>' → logprob: -4.667293071746826
    6. '    ' → logprob: -5.542293071746826
    7. ' ' → logprob: -5.917293071746826
    8. 'x' → logprob: -6.292293071746826
    9. '    
' → logprob: -6.792293071746826
    10. '\t' → logprob: -6.792293071746826

Token 43: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5289919972419739
    2. 'for' (adapté à ' for') → logprob: -0.9039919972419739
    3. '   ' → logprob: -5.653992176055908
    4. ' ' → logprob: -6.653992176055908
    5. 'n' → logprob: -8.15399169921875
    6. '*' → logprob: -9.27899169921875
    7. '```' → logprob: -9.27899169921875
    8. '	for' → logprob: -9.65399169921875
    9. '
' → logprob: -9.65399169921875
    10. 's' → logprob: -9.77899169921875

Token 44: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20979247987270355
    2. ' i' → logprob: -2.084792375564575
    3. ' _' → logprob: -3.209792375564575
    4. '_' → logprob: -4.834792613983154
    5. ' s' → logprob: -5.334792613983154
    6. ' in' → logprob: -5.709792613983154
    7. ' ss' → logprob: -5.709792613983154
    8. ' range' → logprob: -5.959792613983154
    9. '  ' → logprob: -6.834792613983154
    10. 'i' → logprob: -7.584792613983154

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02826548181474209
    2. 'in' → logprob: -3.6532654762268066
    3. ' ' → logprob: -7.028265476226807
    4. ',' → logprob: -7.653265476226807
    5. 'i' → logprob: -8.903265953063965
    6. 'e' → logprob: -9.028265953063965
    7. '  ' → logprob: -9.653265953063965
    8. 'd' → logprob: -10.153265953063965
    9. '   ' → logprob: -10.153265953063965
    10. 'x' → logprob: -10.153265953063965

Token 46: ' ss' (ID: 20928)
  Prédit: ' ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ss' → logprob: -0.4396647810935974
    2. 'ss' → logprob: -1.1896648406982422
    3. ' range' → logprob: -3.564664840698242
    4. 'range' → logprob: -3.814664840698242
    5. '(ss' → logprob: -7.939664840698242
    6. ' ' → logprob: -8.814664840698242
    7. 'str' → logprob: -9.064664840698242
    8. ' str' → logprob: -9.439664840698242
    9. ' s' → logprob: -9.689664840698242
    10. 's' → logprob: -9.877164840698242

Token 47: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.2729995988775045e-06
    2. 'н' → logprob: -14.000006675720215
    3. 'number' → logprob: -14.250006675720215
    4. '   ' → logprob: -14.250006675720215
    5. ' ' → logprob: -14.625006675720215
    6. 'N' → logprob: -14.750006675720215
    7. 'num' → logprob: -15.000006675720215
    8. 'd' → logprob: -15.000006675720215
    9. '_n' → logprob: -15.125006675720215
    10. 'ن' → logprob: -15.250006675720215

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006914667319506407
    2. ' :' → logprob: -8.000691413879395
    3. '):' → logprob: -8.750691413879395
    4. '   ' → logprob: -9.500691413879395
    5. '[:-' → logprob: -10.000691413879395
    6. ':
' → logprob: -10.500691413879395
    7. '[' → logprob: -11.625691413879395
    8. ',' → logprob: -11.750691413879395
    9. ':d' → logprob: -12.625691413879395
    10. 'd' → logprob: -12.625691413879395

Token 49: '       ' (ID: 309)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.8076369762420654
    2. '   ' → logprob: -1.4326369762420654
    3. '    ' → logprob: -1.8076369762420654
    4. '       ' → logprob: -2.6826369762420654
    5. 'val' → logprob: -3.6826369762420654
    6. '=' → logprob: -4.4326372146606445
    7. 'd' → logprob: -4.4326372146606445
    8. ' ' → logprob: -4.5576372146606445
    9. '0' → logprob: -5.6826372146606445
    10. '+' → logprob: -5.8076372146606445

Token 50: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.021187283098697662
    2. 'val' (adapté à ' val') → logprob: -3.8961873054504395
    3. '    ' → logprob: -8.521186828613281
    4. ' ' → logprob: -9.021186828613281
    5. '   ' → logprob: -9.646186828613281
    6. '       ' → logprob: -9.896186828613281
    7. '_val' → logprob: -10.021186828613281
    8. 'd' → logprob: -10.646186828613281
    9. '.val' → logprob: -10.896186828613281
    10. '        ' → logprob: -11.146186828613281

Token 51: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2297530472278595
    2. '+=' → logprob: -1.979753017425537
    3. '=' → logprob: -3.854753017425537
    4. ' =' → logprob: -3.854753017425537
    5. ' ^=' → logprob: -3.979753017425537
    6. ' *=' → logprob: -5.729753017425537
    7. ' <<=' → logprob: -6.979753017425537
    8. ' ' → logprob: -7.229753017425537
    9. '*=' → logprob: -7.354753017425537
    10. ' |=' → logprob: -7.729753017425537

Token 52: ' op' (ID: 991)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.1455923169851303
    2. 'val' → logprob: -2.020592212677002
    3. '(val' → logprob: -6.020592212677002
    4. ' (' → logprob: -7.895592212677002
    5. '[val' → logprob: -9.52059268951416
    6. '(' → logprob: -11.39559268951416
    7. '10' → logprob: -11.52059268951416
    8. ',val' → logprob: -12.02059268951416
    9. 'd' → logprob: -12.64559268951416
    10. '	val' → logprob: -13.27059268951416

Token 53: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.025804821401834488
    2. '(' → logprob: -4.1508049964904785
    3. '(d' → logprob: -5.2758049964904785
    4. '(i' → logprob: -6.6508049964904785
    5. 'val' → logprob: -6.7758049964904785
    6. '(ss' → logprob: -7.2758049964904785
    7. '(len' → logprob: -7.6508049964904785
    8. '(int' → logprob: -8.15080451965332
    9. '[val' → logprob: -8.77580451965332
    10. '(op' → logprob: -9.15080451965332

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3156203031539917
    2. ',d' → logprob: -1.3156203031539917
    3. ' ,' → logprob: -6.815620422363281
    4. 'd' → logprob: -7.190620422363281
    5. '[d' → logprob: -8.690620422363281
    6. ',int' → logprob: -9.190620422363281
    7. '(d' → logprob: -10.315620422363281
    8. ',val' → logprob: -10.315620422363281
    9. ' d' → logprob: -10.940620422363281
    10. 'int' → logprob: -11.190620422363281

Token 55: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13963888585567474
    2. 'int' → logprob: -2.139638900756836
    3. ' d' → logprob: -5.014638900756836
    4. ' int' → logprob: -5.264638900756836
    5. 'ord' → logprob: -7.514638900756836
    6. ' ord' → logprob: -9.139638900756836
    7. ' ' → logprob: -10.014638900756836
    8. '(int' → logprob: -10.764638900756836
    9. '   ' → logprob: -10.827138900756836
    10. 'val' → logprob: -11.014638900756836

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024822709383443
    2. ' )' → logprob: -8.750247955322266
    3. '))' → logprob: -10.750247955322266
    4. '])' → logprob: -10.875247955322266
    5. '[' → logprob: -11.375247955322266
    6. ']' → logprob: -11.500247955322266
    7. '   ' → logprob: -11.750247955322266
    8. ')])' → logprob: -12.500247955322266
    9. ')]' → logprob: -12.500247955322266
    10. ')
' → logprob: -12.750247955322266

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6895878314971924
    2. ' ' → logprob: -1.6895878314971924
    3. '
' → logprob: -2.6895878314971924
    4. '<|end|>' → logprob: -2.9395878314971924
    5. ' %' → logprob: -3.4395878314971924
    6. '%' → logprob: -3.4395878314971924
    7. '+' → logprob: -4.189587593078613
    8. ' 
' → logprob: -4.189587593078613
    9. ' return' → logprob: -4.314587593078613
    10. '  ' → logprob: -4.314587593078613

Token 58: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8507687449455261
    2. ' return' → logprob: -1.600768804550171
    3. ' ' → logprob: -1.850768804550171
    4. 'return' (adapté à ' return') → logprob: -2.600768804550171
    5. '
' → logprob: -2.975768804550171
    6. ' val' → logprob: -4.100768566131592
    7. ' 
' → logprob: -4.100768566131592
    8. '<|end|>' → logprob: -4.225768566131592
    9. ')' → logprob: -4.975768566131592
    10. '    ' → logprob: -5.225768566131592

Token 59: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.5769521594047546
    2. 'val' → logprob: -0.8269521594047546
    3. ' op' → logprob: -7.70195198059082
    4. ' bool' → logprob: -9.20195198059082
    5. 'op' → logprob: -9.32695198059082
    6. 'bool' → logprob: -9.57695198059082
    7. ' not' → logprob: -9.95195198059082
    8. ' ' → logprob: -10.07695198059082
    9. 'table' → logprob: -10.20195198059082
    10. ' ' → logprob: -10.57695198059082

Token 60: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: 'bad' (ID: 22023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05670405924320221
    2. '[' → logprob: -3.556704044342041
    3. '_' → logprob: -4.556704044342041
    4. ' ' → logprob: -5.056704044342041
    5. '<|end|>' → logprob: -5.931704044342041
    6. ':' → logprob: -6.306704044342041
    7. ')' → logprob: -6.556704044342041
    8. '.' → logprob: -7.431704044342041
    9. '0' → logprob: -7.806704044342041
    10. '=' → logprob: -7.931704044342041

Token 62: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19869014620780945
    2. '_chars' → logprob: -3.573690176010132
    3. '[' → logprob: -3.823690176010132
    4. ')' → logprob: -4.073689937591553
    5. '_s' → logprob: -4.198689937591553
    6. '_ss' → logprob: -4.198689937591553
    7. ' _' → logprob: -4.698689937591553
    8. ' =' → logprob: -4.948689937591553
    9. 's' → logprob: -5.073689937591553
    10. '_words' → logprob: -5.323689937591553

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22185634076595306
    2. '=' → logprob: -2.3468563556671143
    3. ' +=' → logprob: -2.5968563556671143
    4. '<|end|>' → logprob: -3.8468563556671143
    5. '(' → logprob: -5.596856117248535
    6. '+=' → logprob: -6.596856117248535
    7. ')' → logprob: -7.596856117248535
    8. ' ' → logprob: -7.721856117248535
    9. '+' → logprob: -8.221856117248535
    10. ' ==' → logprob: -8.346856117248535

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2811686098575592
    2. ' ' → logprob: -1.4061685800552368
    3. 'sum' → logprob: -11.781168937683105
    4. ' sum' → logprob: -12.406168937683105
    5. 'int' → logprob: -13.406168937683105
    6. '1' → logprob: -13.843668937683105
    7. ' ' → logprob: -14.531168937683105
    8. ' int' → logprob: -14.656168937683105
    9. '   ' → logprob: -14.718668937683105
    10. 'len' → logprob: -14.906168937683105

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000998155795969069
    2. ' ' → logprob: -7.000998020172119
    3. 'sum' → logprob: -9.500998497009277
    4. 'int' → logprob: -12.500998497009277
    5. 'len' → logprob: -13.125998497009277
    6. '[' → logprob: -13.625998497009277
    7. '1' → logprob: -13.750998497009277
    8. ' sum' → logprob: -13.875998497009277
    9. 'table' → logprob: -14.750998497009277
    10. '   ' → logprob: -14.875998497009277

Token 66: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1941099613904953
    2. 'for' → logprob: -2.0691099166870117
    3. ' for' → logprob: -3.4441099166870117
    4. '<|end|>' → logprob: -4.069109916687012
    5. '\n' → logprob: -7.569109916687012
    6. '
' → logprob: -8.569109916687012
    7. '<|end|>' → logprob: -9.444109916687012
    8. '0' → logprob: -9.569109916687012
    9. '10' → logprob: -9.819109916687012
    10. ':' → logprob: -9.944109916687012

Token 67: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.702754474943504e-05
    2. 'n' → logprob: -10.75003719329834
    3. ' for' → logprob: -12.12503719329834
    4. 'while' → logprob: -12.25003719329834
    5. 'ss' → logprob: -12.50003719329834
    6. '10' → logprob: -14.37503719329834
    7. '
' → logprob: -14.50003719329834
    8. '```' → logprob: -15.50003719329834
    9. 'bad' → logprob: -16.000036239624023
    10. 'num' → logprob: -17.375036239624023

Token 68: ' num' (ID: 2269)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.06133510172367096
    2. ' ' → logprob: -2.9363350868225098
    3. '_' → logprob: -5.31133508682251
    4. ' i' → logprob: -6.56133508682251
    5. '  ' → logprob: -10.561335563659668
    6. ' row' → logprob: -10.811335563659668
    7. ' s' → logprob: -11.311335563659668
    8. ' ' → logprob: -11.936335563659668
    9. ' ss' → logprob: -12.186335563659668
    10. ' ‌' → logprob: -12.186335563659668

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02035839855670929
    2. 'in' → logprob: -4.020358562469482
    3. '_' → logprob: -6.895358562469482
    4. 's' → logprob: -6.895358562469482
    5. ' ' → logprob: -10.520358085632324
    6. '_in' → logprob: -10.520358085632324
    7. 'range' → logprob: -10.645358085632324
    8. 'space' → logprob: -11.145358085632324
    9. '  ' → logprob: -11.395358085632324
    10. '1' → logprob: -11.770358085632324

Token 70: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4287830591201782
    2. 'range' → logprob: -1.0537830591201782
    3. '	range' → logprob: -10.178783416748047
    4. '(range' → logprob: -10.678783416748047
    5. ' ' → logprob: -11.553783416748047
    6. '[' → logprob: -12.303783416748047
    7. ' xrange' → logprob: -13.678783416748047
    8. '   ' → logprob: -13.803783416748047
    9. 'table' → logprob: -13.928783416748047
    10. '10' → logprob: -14.428783416748047

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.173704271830502e-06
    2. ' (' → logprob: -13.62500286102295
    3. '((' → logprob: -14.00000286102295
    4. '(-' → logprob: -14.50000286102295
    5. '100' → logprob: -15.00000286102295
    6. '10' → logprob: -17.000003814697266
    7. '(int' → logprob: -17.125003814697266
    8. ' ' → logprob: -17.625003814697266
    9. '1' → logprob: -17.625003814697266
    10. '(
' → logprob: -17.750003814697266

Token 72: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0767545998096466
    2. '10' → logprob: -3.076754570007324
    3. '0' → logprob: -4.201754570007324
    4. '000' → logprob: -4.826754570007324
    5. '1' → logprob: -5.576754570007324
    6. '999' → logprob: -7.951754570007324
    7. '(' → logprob: -8.451754570007324
    8. ' ' → logprob: -8.576754570007324
    9. '111' → logprob: -9.326754570007324
    10. '   ' → logprob: -10.576754570007324

Token 73: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5575297474861145
    2. '0' → logprob: -0.9325297474861145
    3. '):' → logprob: -3.9325296878814697
    4. '00' → logprob: -4.557529926300049
    5. ',' → logprob: -6.307529926300049
    6. '):
' → logprob: -6.432529926300049
    7. '_' → logprob: -9.30752944946289
    8. ')' → logprob: -9.80752944946289
    9. ' ' → logprob: -10.30752944946289
    10. '```' → logprob: -10.30752944946289

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003642595838755369
    2. '):
' → logprob: -6.253642559051514
    3. ':' → logprob: -7.378642559051514
    4. ' ):' → logprob: -7.628642559051514
    5. ',' → logprob: -7.753642559051514
    6. '0' → logprob: -9.503643035888672
    7. '+' → logprob: -10.503643035888672
    8. ')' → logprob: -10.753643035888672
    9. '000' → logprob: -11.378643035888672
    10. '   ' → logprob: -11.628643035888672

Token 75: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4102299213409424
    2. '   ' → logprob: -1.1602299213409424
    3. ':
' → logprob: -4.410229682922363
    4. ' :' → logprob: -5.535229682922363
    5. ',' → logprob: -5.910229682922363
    6. '    
' → logprob: -6.910229682922363
    7. ' if' → logprob: -7.660229682922363
    8. '(' → logprob: -7.660229682922363
    9. ' :
' → logprob: -7.660229682922363
    10. '):' → logprob: -7.785229682922363

Token 76: ' digits' (ID: 37806)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048003293573856354
    2. ' ss' → logprob: -3.5480031967163086
    3. ' s' → logprob: -5.298003196716309
    4. '    ' → logprob: -5.798003196716309
    5. ' if' → logprob: -5.923003196716309
    6. '    
' → logprob: -6.298003196716309
    7. ' ' → logprob: -6.548003196716309
    8. ' 
' → logprob: -7.673003196716309
    9. '0' → logprob: -8.173003196716309
    10. ' ' → logprob: -8.298003196716309

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006717267446219921
    2. '=' → logprob: -5.006717205047607
    3. ' ' → logprob: -14.631717681884766
    4. ')' → logprob: -14.756717681884766
    5. '	' → logprob: -15.756717681884766
    6. ' =[' → logprob: -15.881717681884766
    7. ',' → logprob: -16.256717681884766
    8. ' ' → logprob: -16.256717681884766
    9. '[' → logprob: -16.381717681884766
    10. '_' → logprob: -16.381717681884766

Token 78: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.18270154297351837
    2. '[' → logprob: -1.932701587677002
    3. '[list' → logprob: -4.682701587677002
    4. ' list' → logprob: -4.807701587677002
    5. 'list' → logprob: -6.057701587677002
    6. '[f' → logprob: -7.057701587677002
    7. '[int' → logprob: -7.932701587677002
    8. '[str' → logprob: -8.057701110839844
    9. '[(' → logprob: -8.682701110839844
    10. '[len' → logprob: -8.807701110839844

Token 79: 'num' (ID: 4571)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.37319618463516235
    2. 'num' → logprob: -1.2481961250305176
    3. ' num' → logprob: -4.748196125030518
    4. '(num' → logprob: -4.998196125030518
    5. ' int' → logprob: -4.998196125030518
    6. '(int' → logprob: -6.248196125030518
    7. ' (' → logprob: -8.498196601867676
    8. '   ' → logprob: -10.248196601867676
    9. '(' → logprob: -10.498196601867676
    10. '[num' → logprob: -10.748196601867676

Token 80: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4741443693637848
    2. ' //' → logprob: -0.9741443395614624
    3. '   ' → logprob: -9.974143981933594
    4. ' ' → logprob: -11.724143981933594
    5. '%' → logprob: -12.099143981933594
    6. ']' → logprob: -12.724143981933594
    7. '//=' → logprob: -13.724143981933594
    8. '  ' → logprob: -13.849143981933594
    9. '```' → logprob: -15.224143981933594
    10. '    ' → logprob: -15.349143981933594

Token 81: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.10028150677680969
    2. ' ' → logprob: -2.3502814769744873
    3. '  ' → logprob: -9.725281715393066
    4. '10' → logprob: -11.975281715393066
    5. '1' → logprob: -12.475281715393066
    6. '{' → logprob: -13.475281715393066
    7. '   ' → logprob: -13.725281715393066
    8. '999' → logprob: -14.600281715393066
    9. '    ' → logprob: -15.537781715393066
    10. '(' → logprob: -15.662781715393066

Token 82: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.8908587662735954e-05
    2. ' ' → logprob: -11.125019073486328
    3. '10' → logprob: -13.250019073486328
    4. '  ' → logprob: -13.250019073486328
    5. '   ' → logprob: -15.375019073486328
    6. '1' → logprob: -15.875019073486328
    7. '{' → logprob: -16.875019073486328
    8. '```' → logprob: -17.000019073486328
    9. '(' → logprob: -17.125019073486328
    10. '[' → logprob: -17.625019073486328

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002285383641719818
    2. '%' → logprob: -6.877285480499268
    3. ' ' → logprob: -7.127285480499268
    4. ' %' → logprob: -7.752285480499268
    5. '   ' → logprob: -12.12728500366211
    6. '  ' → logprob: -12.50228500366211
    7. '    ' → logprob: -12.62728500366211
    8. ',' → logprob: -12.75228500366211
    9. '%d' → logprob: -13.87728500366211
    10. '     ' → logprob: -14.37728500366211

Token 84: ',' (ID: 11)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1357458382844925
    2. '%' → logprob: -2.5107457637786865
    3. ',' → logprob: -3.5107457637786865
    4. ' ' → logprob: -4.635746002197266
    5. ' ,' → logprob: -5.135746002197266
    6. ' %,' → logprob: -9.385746002197266
    7. ' ' → logprob: -9.760746002197266
    8. '  ' → logprob: -10.010746002197266
    9. '%,' → logprob: -11.010746002197266
    10. ' %=' → logprob: -11.510746002197266

Token 85: ' (' (ID: 350)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.22015251219272614
    2. ' (' → logprob: -1.720152497291565
    3. ' num' → logprob: -4.470152378082275
    4. 'num' → logprob: -4.970152378082275
    5. '(' → logprob: -9.345152854919434
    6. ' ' → logprob: -10.470152854919434
    7. '[num' → logprob: -10.845152854919434
    8. ',num' → logprob: -11.470152854919434
    9. '<num' → logprob: -11.970152854919434
    10. '   ' → logprob: -12.220152854919434

Token 86: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0032629151828587055
    2. ' num' → logprob: -5.753262996673584
    3. '(num' → logprob: -9.378262519836426
    4. '	num' → logprob: -15.003262519836426
    5. '[num' → logprob: -16.628263473510742
    6. ' ' → logprob: -16.628263473510742
    7. '   ' → logprob: -16.753263473510742
    8. ',num' → logprob: -17.378263473510742
    9. '<num' → logprob: -17.503263473510742
    10. ')' → logprob: -17.878263473510742

Token 87: ' //' (ID: 602)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08103585243225098
    2. '%' → logprob: -3.206035852432251
    3. ' //' → logprob: -3.331035852432251
    4. ' ' → logprob: -6.706035614013672
    5. '//' → logprob: -8.081035614013672
    6. ' ' → logprob: -12.206035614013672
    7. '```' → logprob: -12.331035614013672
    8. '   ' → logprob: -12.456035614013672
    9. '`' → logprob: -12.581035614013672
    10. ')' → logprob: -12.706035614013672

Token 88: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0209345705807209
    2. ' ' → logprob: -3.895934581756592
    3. '  ' → logprob: -7.895934581756592
    4. '   ' → logprob: -11.145934104919434
    5. '    ' → logprob: -13.145934104919434
    6. '```' → logprob: -13.770934104919434
    7. ' ' → logprob: -13.958434104919434
    8. '１００' → logprob: -14.895934104919434
    9. '10' → logprob: -15.083434104919434
    10. ' hundred' → logprob: -15.270934104919434

Token 89: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0011757015017792583
    2. ' ' → logprob: -6.751175880432129
    3. '  ' → logprob: -12.251175880432129
    4. '10' → logprob: -15.251175880432129
    5. '```' → logprob: -15.376175880432129
    6. '   ' → logprob: -15.876175880432129
    7. '1' → logprob: -16.251174926757812
    8. '１００' → logprob: -17.626174926757812
    9. 'hund' → logprob: -17.751174926757812
    10. ' hundred' → logprob: -18.313674926757812

Token 90: ')' (ID: 8)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010952555574476719
    2. ' ' → logprob: -4.635952472686768
    3. ')' → logprob: -7.635952472686768
    4. '0' → logprob: -8.260952949523926
    5. '3' → logprob: -8.885952949523926
    6. '%' → logprob: -9.010952949523926
    7. '<|end|>' → logprob: -9.010952949523926
    8. '  ' → logprob: -10.885952949523926
    9. '1' → logprob: -11.135952949523926
    10. '   ' → logprob: -11.760952949523926

Token 91: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02542591281235218
    2. '%' → logprob: -3.775425910949707
    3. ' ' → logprob: -6.150425910949707
    4. ' ' → logprob: -11.025425910949707
    5. ' //' → logprob: -12.025425910949707
    6. ')' → logprob: -12.400425910949707
    7. '  ' → logprob: -12.650425910949707
    8. ',' → logprob: -12.900425910949707
    9. ')%' → logprob: -13.025425910949707
    10. '   ' → logprob: -13.025425910949707

Token 92: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '  ' → logprob: -15.875040054321289
    4. '100' → logprob: -16.62504005432129
    5. '<|end|>' → logprob: -17.25004005432129
    6. '   ' → logprob: -17.62504005432129
    7. '۱۰' → logprob: -18.00004005432129
    8. '```' → logprob: -18.50004005432129
    9. '１０' → logprob: -19.18754005432129
    10. '1' → logprob: -19.31254005432129

Token 93: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '100' → logprob: -16.250001907348633
    4. '1' → logprob: -18.000001907348633
    5. '  ' → logprob: -18.000001907348633
    6. '۱۰' → logprob: -18.375001907348633
    7. '{' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.250001907348633
    9. '१०' → logprob: -19.250001907348633
    10. '১০' → logprob: -19.750001907348633

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05548277124762535
    2. ' ,' → logprob: -2.930482864379883
    3. ' ' → logprob: -8.180482864379883
    4. ')' → logprob: -9.305482864379883
    5. '0' → logprob: -9.555482864379883
    6. ',num' → logprob: -10.180482864379883
    7. ',d' → logprob: -10.180482864379883
    8. '100' → logprob: -10.930482864379883
    9. ',
' → logprob: -11.680482864379883
    10. '(' → logprob: -12.055482864379883

Token 95: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1004321351647377
    2. '(num' → logprob: -2.3504321575164795
    3. ' ' → logprob: -8.725432395935059
    4. '(number' → logprob: -10.725432395935059
    5. '(' → logprob: -10.850432395935059
    6. '  ' → logprob: -11.975432395935059
    7. '(n' → logprob: -12.225432395935059
    8. '(nums' → logprob: -13.100432395935059
    9. '   ' → logprob: -13.850432395935059
    10. ',' → logprob: -14.350432395935059

Token 96: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.04325540363788605
    2. '(num' → logprob: -3.41825532913208
    3. ' num' → logprob: -4.66825532913208
    4. ' (' → logprob: -9.168255805969238
    5. ' ' → logprob: -10.043255805969238
    6. '100' → logprob: -11.793255805969238
    7. '(' → logprob: -12.543255805969238
    8. '	num' → logprob: -12.543255805969238
    9. '<num' → logprob: -12.918255805969238
    10. '[num' → logprob: -13.418255805969238

Token 97: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2358943223953247
    2. '//' → logprob: -1.6108943223953247
    3. ' ' → logprob: -4.735894203186035
    4. '100' → logprob: -7.360894203186035
    5. '%' → logprob: -7.985894203186035
    6. '   ' → logprob: -9.110894203186035
    7. '400' → logprob: -9.235894203186035
    8. ')' → logprob: -9.235894203186035
    9. ' %' → logprob: -9.235894203186035
    10. ' ' → logprob: -9.860894203186035

Token 98: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0017231308156624436
    2. ' ' → logprob: -6.376723289489746
    3. '  ' → logprob: -10.876723289489746
    4. '100' → logprob: -14.751723289489746
    5. '   ' → logprob: -14.876723289489746
    6. '50' → logprob: -15.251723289489746
    7. ')' → logprob: -15.626723289489746
    8. ' ' → logprob: -15.751723289489746
    9. '1' → logprob: -16.25172233581543
    10. '0' → logprob: -16.37672233581543

Token 99: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.750059127807617
    3. '  ' → logprob: -14.625059127807617
    4. '0' → logprob: -18.125059127807617
    5. '1' → logprob: -18.250059127807617
    6. '100' → logprob: -18.375059127807617
    7. '   ' → logprob: -18.500059127807617
    8. '50' → logprob: -18.875059127807617
    9. '۱۰' → logprob: -19.125059127807617
    10. '```' → logprob: -19.375059127807617

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015634235460311174
    2. ' )' → logprob: -6.501563549041748
    3. ')%' → logprob: -9.75156307220459
    4. '),' → logprob: -13.75156307220459
    5. ' ' → logprob: -14.12656307220459
    6. ',' → logprob: -15.12656307220459
    7. '0' → logprob: -15.62656307220459
    8. ')
' → logprob: -16.001564025878906
    9. '%' → logprob: -16.751564025878906
    10. ')#' → logprob: -17.001564025878906

Token 101: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5949488878250122
    2. ' %' → logprob: -1.3449488878250122
    3. '%' → logprob: -2.5949487686157227
    4. ')' → logprob: -2.8449487686157227
    5. ' ' → logprob: -3.3449487686157227
    6. ' ,' → logprob: -4.094948768615723
    7. ')%' → logprob: -6.219948768615723
    8. '),' → logprob: -7.844948768615723
    9. ' )' → logprob: -8.844948768615723
    10. '   ' → logprob: -9.094948768615723

Token 102: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. '100' → logprob: -16.125709533691406
    4. '1' → logprob: -17.750709533691406
    5. '   ' → logprob: -18.750709533691406
    6. '  ' → logprob: -18.750709533691406
    7. '```' → logprob: -19.625709533691406
    8. '0' → logprob: -20.375709533691406
    9. ' ' → logprob: -20.750709533691406
    10. '۱۰' → logprob: -21.125709533691406

Token 103: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '1' → logprob: -16.375001907348633
    4. '100' → logprob: -16.500001907348633
    5. '۱۰' → logprob: -19.750001907348633
    6. '```' → logprob: -19.750001907348633
    7. '0' → logprob: -20.500001907348633
    8. '１０' → logprob: -20.500001907348633
    9. '  ' → logprob: -20.625001907348633
    10. '{' → logprob: -20.875001907348633

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009775686077773571
    2. ' ,' → logprob: -4.634775638580322
    3. ',num' → logprob: -11.13477611541748
    4. ',d' → logprob: -12.50977611541748
    5. '0' → logprob: -14.63477611541748
    6. ',
' → logprob: -14.75977611541748
    7. ')' → logprob: -15.13477611541748
    8. ' ' → logprob: -15.25977611541748
    9. ',n' → logprob: -17.384775161743164
    10. ',

' → logprob: -17.509775161743164

Token 105: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.31338006258010864
    2. ' num' → logprob: -1.3133800029754639
    3. ' ' → logprob: -9.938380241394043
    4. '(num' → logprob: -10.063380241394043
    5. ' (' → logprob: -10.688380241394043
    6. '	num' → logprob: -13.563380241394043
    7. '  ' → logprob: -14.063380241394043
    8. '(' → logprob: -14.188380241394043
    9. '   ' → logprob: -14.688380241394043
    10. '[num' → logprob: -15.063380241394043

Token 106: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04471682757139206
    2. '%' → logprob: -3.1697168350219727
    3. ' ' → logprob: -6.419716835021973
    4. ')' → logprob: -10.169716835021973
    5. ' ' → logprob: -11.169716835021973
    6. '`' → logprob: -11.794716835021973
    7. '[' → logprob: -11.919716835021973
    8. '  ' → logprob: -13.044716835021973
    9. ' `' → logprob: -13.169716835021973
    10. '0' → logprob: -13.294716835021973

Token 107: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008616226725280285
    2. ' ' → logprob: -4.7586164474487305
    3. '100' → logprob: -14.00861644744873
    4. '1' → logprob: -14.63361644744873
    5. '   ' → logprob: -15.75861644744873
    6. '  ' → logprob: -15.88361644744873
    7. ' ' → logprob: -16.383615493774414
    8. '```' → logprob: -17.883615493774414
    9. '(' → logprob: -18.133615493774414
    10. '۱۰' → logprob: -18.508615493774414

Token 108: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.500011444091797
    3. '1' → logprob: -14.000011444091797
    4. '100' → logprob: -15.750011444091797
    5. '   ' → logprob: -16.750011444091797
    6. '```' → logprob: -17.125011444091797
    7. '  ' → logprob: -18.000011444091797
    8. '۱۰' → logprob: -19.000011444091797
    9. '`' → logprob: -19.562511444091797
    10. '0' → logprob: -20.375011444091797

Token 109: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024662634823471308
    2. ' ]' → logprob: -6.252466201782227
    3. '   ' → logprob: -7.752466201782227
    4. ')' → logprob: -9.627466201782227
    5. ')]' → logprob: -10.627466201782227
    6. ']
' → logprob: -11.627466201782227
    7. ' ' → logprob: -13.127466201782227
    8. '']' → logprob: -13.252466201782227
    9. ',' → logprob: -13.752466201782227
    10. '<|end|>' → logprob: -13.877466201782227

Token 110: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' e' (ID: 319)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.332830548286438
    2. 'if' → logprob: -1.332830548286438
    3. '   ' → logprob: -4.207830429077148
    4. ' bad' → logprob: -6.207830429077148
    5. 'bad' → logprob: -6.832830429077148
    6. '
' → logprob: -7.457830429077148
    7. '    
' → logprob: -8.457830429077148
    8. ' val' → logprob: -8.707830429077148
    9. 'val' → logprob: -9.082830429077148
    10. ' ' → logprob: -9.082830429077148

Token 112: ' =' (ID: 314)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.532293438911438
    2. 'rr' → logprob: -1.157293438911438
    3. '=' → logprob: -3.5322933197021484
    4. 'val' → logprob: -4.657293319702148
    5. 'qual' → logprob: -4.657293319702148
    6. ' =' → logprob: -4.782293319702148
    7. 'm' → logprob: -5.407293319702148
    8. 'n' → logprob: -5.407293319702148
    9. 'ven' → logprob: -5.532293319702148
    10. 'x' → logprob: -5.532293319702148

Token 113: ' ' (ID: 220)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.2815575897693634
    2. 'check' → logprob: -1.406557559967041
    3. ' ' → logprob: -8.2815580368042
    4. ' digits' → logprob: -10.1565580368042
    5. '0' → logprob: -10.6565580368042
    6. '(check' → logprob: -10.9065580368042
    7. ' bad' → logprob: -11.0315580368042
    8. ' len' → logprob: -11.9065580368042
    9. 'digits' → logprob: -12.0315580368042
    10. ' num' → logprob: -12.1565580368042

Token 114: '0' (ID: 15)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.006750305183231831
    2. ' check' → logprob: -5.756750106811523
    3. 'digits' → logprob: -6.756750106811523
    4. 'num' → logprob: -7.131750106811523
    5. '0' → logprob: -7.881750106811523
    6. 'len' → logprob: -8.381750106811523
    7. 'bad' → logprob: -8.506750106811523
    8. '(check' → logprob: -8.631750106811523
    9. 'e' → logprob: -8.756750106811523
    10. '4' → logprob: -10.006750106811523

Token 115: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018954087048768997
    2. ' for' → logprob: -5.018954277038574
    3. 'while' → logprob: -5.143954277038574
    4. 'e' → logprob: -5.518954277038574
    5. '4' → logprob: -6.518954277038574
    6. '   ' → logprob: -7.518954277038574
    7. '
' → logprob: -9.643954277038574
    8. ' ' → logprob: -10.018954277038574
    9. ' while' → logprob: -10.018954277038574
    10. '<|end|>' → logprob: -10.518954277038574

Token 118: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6943714022636414
    2. ' d' → logprob: -0.8193714022636414
    3. 'digit' → logprob: -3.444371461868286
    4. ' digit' → logprob: -4.319371223449707
    5. ' i' → logprob: -5.569371223449707
    6. 'i' → logprob: -5.694371223449707
    7. ' digits' → logprob: -5.819371223449707
    8. 'digits' → logprob: -5.819371223449707
    9. '_' → logprob: -8.319371223449707
    10. 'dig' → logprob: -9.006871223449707

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03392379730939865
    2. 'in' → logprob: -3.408923864364624
    3. '<|end|>' → logprob: -8.533924102783203
    4. ' ' → logprob: -10.033924102783203
    5. 'd' → logprob: -10.908924102783203
    6. '<|end|>' → logprob: -12.533924102783203
    7. 's' → logprob: -12.658924102783203
    8. 'e' → logprob: -12.658924102783203
    9. '	in' → logprob: -13.158924102783203
    10. '  ' → logprob: -14.033924102783203

Token 120: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.00775864627212286
    2. ' digits' → logprob: -4.882758617401123
    3. '[' → logprob: -9.382759094238281
    4. 'range' → logprob: -10.257759094238281
    5. 'd' → logprob: -11.507759094238281
    6. ' range' → logprob: -11.882759094238281
    7. 'digit' → logprob: -12.632759094238281
    8. '   ' → logprob: -12.882759094238281
    9. ' [' → logprob: -13.382759094238281
    10. 're' → logprob: -13.695259094238281

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020908182486891747
    2. ':
' → logprob: -4.145908355712891
    3. '<|end|>' → logprob: -6.145908355712891
    4. '   ' → logprob: -6.770908355712891
    5. '       ' → logprob: -7.645908355712891
    6. 'e' → logprob: -7.770908355712891
    7. '<|end|>' → logprob: -8.64590835571289
    8. '+' → logprob: -8.89590835571289
    9. ',' → logprob: -9.64590835571289
    10. '=' → logprob: -10.27090835571289

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008120656944811344
    2. 'e' → logprob: -5.383120536804199
    3. ' ' → logprob: -6.133120536804199
    4. ' e' → logprob: -7.633120536804199
    5. '	' → logprob: -8.3831205368042
    6. '<|end|>' → logprob: -8.7581205368042
    7. '        
' → logprob: -9.6331205368042
    8. '   ' → logprob: -9.8831205368042
    9. '	e' → logprob: -10.0081205368042
    10. '    ' → logprob: -10.3831205368042

Token 123: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.0731746032834053
    2. 'e' (adapté à ' e') → logprob: -2.6981747150421143
    3. ' ' → logprob: -5.948174476623535
    4. '       ' → logprob: -8.198174476623535
    5. ' ' → logprob: -9.073174476623535
    6. ' 
' → logprob: -9.323174476623535
    7. ' d' → logprob: -10.573174476623535
    8. '    ' → logprob: -10.823174476623535
    9. '        ' → logprob: -11.073174476623535
    10. 's' → logprob: -11.073174476623535

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005954395048320293
    2. '=' → logprob: -5.130954265594482
    3. ' ' → logprob: -10.75595474243164
    4. ' +=' → logprob: -13.63095474243164
    5. ',' → logprob: -13.75595474243164
    6. ')' → logprob: -14.50595474243164
    7. '  ' → logprob: -14.75595474243164
    8. ' =
' → logprob: -15.38095474243164
    9. '    ' → logprob: -15.50595474243164
    10. '<|end|>' → logprob: -16.00595474243164

Token 125: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.17902806401252747
    2. ' op' → logprob: -2.304028034210205
    3. 'table' → logprob: -2.804028034210205
    4. ' table' → logprob: -5.679028034210205
    5. '	op' → logprob: -9.929028511047363
    6. ' ' → logprob: -12.179028511047363
    7. '	table' → logprob: -12.429028511047363
    8. ')table' → logprob: -12.804028511047363
    9. 'e' → logprob: -12.929028511047363
    10. '   ' → logprob: -13.179028511047363

Token 126: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.625004768371582
    3. 'e' → logprob: -13.250004768371582
    4. ' (' → logprob: -17.8750057220459
    5. ' e' → logprob: -19.0000057220459
    6. ',e' → logprob: -19.1250057220459
    7. '	e' → logprob: -19.2500057220459
    8. '=e' → logprob: -19.5000057220459
    9. '(
' → logprob: -19.6250057220459
    10. '[e' → logprob: -19.8750057220459

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.060656800866127014
    2. ',d' → logprob: -2.935656785964966
    3. 'd' → logprob: -5.185657024383545
    4. ' ,' → logprob: -9.435656547546387
    5. ' d' → logprob: -9.810656547546387
    6. ' ' → logprob: -11.185656547546387
    7. '(d' → logprob: -12.560656547546387
    8. ')' → logprob: -13.310656547546387
    9. ')d' → logprob: -13.560656547546387
    10. '<|end|>' → logprob: -13.810656547546387

Token 128: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5759504437446594
    2. 'd' → logprob: -0.8259504437446594
    3. ' ' → logprob: -12.200950622558594
    4. ' ' → logprob: -12.575950622558594
    5. ')' → logprob: -13.700950622558594
    6. ')d' → logprob: -14.700950622558594
    7. ' 
' → logprob: -14.950950622558594
    8. '	d' → logprob: -15.575950622558594
    9. '_d' → logprob: -15.700950622558594
    10. ' )' → logprob: -16.200950622558594

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. ')
' → logprob: -10.875019073486328
    3. ' )' → logprob: -15.375019073486328
    4. ')

' → logprob: -17.250019073486328
    5. ')
' → logprob: -17.375019073486328
    6. ')`' → logprob: -18.750019073486328
    7. '))' → logprob: -19.000019073486328
    8. ')d' → logprob: -19.500019073486328
    9. '   ' → logprob: -19.750019073486328
    10. ')}' → logprob: -20.000019073486328

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.166251540184021
    2. 'if' → logprob: -1.916251540184021
    3. ' if' → logprob: -5.5412516593933105
    4. 'e' → logprob: -7.1662516593933105
    5. '
' → logprob: -7.2912516593933105
    6. '    
' → logprob: -8.166251182556152
    7. '  ' → logprob: -8.791251182556152
    8. ' ' → logprob: -9.416251182556152
    9. '  
' → logprob: -10.291251182556152
    10. '       ' → logprob: -10.791251182556152

Token 131: ' ss' (ID: 20928)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.228937566280365
    2. '   ' → logprob: -1.9789376258850098
    3. ' if' → logprob: -2.7289376258850098
    4. '
' → logprob: -7.35393762588501
    5. ' ' → logprob: -8.603937149047852
    6. 'e' → logprob: -8.853937149047852
    7. '    
' → logprob: -9.728937149047852
    8. '  ' → logprob: -10.353937149047852
    9. ' 
' → logprob: -11.103937149047852
    10. '  
' → logprob: -11.353937149047852

Token 132: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.2994620242971e-06
    2. 'num' → logprob: -12.750008583068848
    3. 'number' → logprob: -13.750008583068848
    4. '=' → logprob: -14.250008583068848
    5. ' =' → logprob: -14.500008583068848
    6. 'an' → logprob: -14.750008583068848
    7. 'N' → logprob: -15.000008583068848
    8. 'н' → logprob: -15.250008583068848
    9. '_number' → logprob: -15.375008583068848
    10. 'ns' → logprob: -15.500008583068848

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26658815145492554
    2. '=' → logprob: -1.7665882110595703
    3. 's' → logprob: -3.0165882110595703
    4. '_' → logprob: -4.39158821105957
    5. '_valid' → logprob: -8.01658821105957
    6. ' ' → logprob: -8.14158821105957
    7. ')' → logprob: -8.39158821105957
    8. '_val' → logprob: -9.14158821105957
    9. '[:]' → logprob: -9.39158821105957
    10. '[' → logprob: -9.39158821105957

Token 134: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.9889640808105469
    2. ' digits' → logprob: -1.2389640808105469
    3. '[' → logprob: -1.4889640808105469
    4. ' [' → logprob: -2.238964080810547
    5. '[d' → logprob: -6.488964080810547
    6. '[]' → logprob: -6.863964080810547
    7. ' []' → logprob: -7.488964080810547
    8. '[num' → logprob: -7.863964080810547
    9. ' ' → logprob: -7.988964080810547
    10. '[e' → logprob: -7.988964080810547

Token 135: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3240249752998352
    2. '+[' → logprob: -1.9490249156951904
    3. ' +' → logprob: -2.1990249156951904
    4. '[:]' → logprob: -4.5740251541137695
    5. '[' → logprob: -5.0740251541137695
    6. '[::-' → logprob: -5.4490251541137695
    7. '[:' → logprob: -6.5740251541137695
    8. '[:-' → logprob: -6.8240251541137695
    9. '.copy' → logprob: -10.32402515411377
    10. '.append' → logprob: -11.57402515411377

Token 136: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2575624883174896
    2. ' [' → logprob: -1.632562518119812
    3. '[d' → logprob: -4.257562637329102
    4. ' digits' → logprob: -4.507562637329102
    5. 'digits' → logprob: -5.132562637329102
    6. ' ' → logprob: -9.382562637329102
    7. '[s' → logprob: -9.882562637329102
    8. '[int' → logprob: -10.382562637329102
    9. '[t' → logprob: -10.507562637329102
    10. '[b' → logprob: -10.632562637329102

Token 137: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.012666920199990273
    2. ' e' → logprob: -4.387666702270508
    3. '0' → logprob: -10.012666702270508
    4. '7' → logprob: -10.512666702270508
    5. '4' → logprob: -11.012666702270508
    6. 'op' → logprob: -11.387666702270508
    7. ' ' → logprob: -11.637666702270508
    8. '3' → logprob: -11.762666702270508
    9. '1' → logprob: -12.387666702270508
    10. '6' → logprob: -12.387666702270508

Token 138: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015472402796149254
    2. ']
' → logprob: -4.515472412109375
    3. ']

' → logprob: -5.515472412109375
    4. ' ]' → logprob: -8.640472412109375
    5. ']
' → logprob: -8.640472412109375
    6. ',' → logprob: -11.390472412109375
    7. ']

' → logprob: -11.640472412109375
    8. '   ' → logprob: -12.390472412109375
    9. ' ]
' → logprob: -12.515472412109375
    10. ']


' → logprob: -13.390472412109375

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2588960528373718
    2. ' if' → logprob: -2.5088961124420166
    3. '
' → logprob: -2.6338961124420166
    4. '<|end|>' → logprob: -2.8838961124420166
    5. '    
' → logprob: -5.3838958740234375
    6. ':' → logprob: -5.6338958740234375
    7. ' ' → logprob: -5.8838958740234375
    8. 'if' → logprob: -6.2588958740234375
    9. '  
' → logprob: -6.3838958740234375
    10. ')' → logprob: -6.7588958740234375

Token 140: ' detected' (ID: 28357)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06476368010044098
    2. ' if' → logprob: -2.8147637844085693
    3. 'bad' → logprob: -6.56476354598999
    4. '   ' → logprob: -7.56476354598999
    5. 'for' → logprob: -7.68976354598999
    6. ' bad' → logprob: -9.564764022827148
    7. ' for' → logprob: -10.064764022827148
    8. 'i' → logprob: -10.189764022827148
    9. '    
' → logprob: -10.189764022827148
    10. ' ' → logprob: -10.439764022827148

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03925412520766258
    2. '=' → logprob: -3.4142541885375977
    3. '_' → logprob: -5.539254188537598
    4. ' ' → logprob: -7.664254188537598
    5. 'if' → logprob: -8.289254188537598
    6. '_bad' → logprob: -8.414254188537598
    7. '_count' → logprob: -8.539254188537598
    8. 'bad' → logprob: -9.914254188537598
    9. '[' → logprob: -10.164254188537598
    10. '_=' → logprob: -10.289254188537598

Token 142: ' True' (ID: 6432)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.366001695394516
    2. 'check' → logprob: -1.2410017251968384
    3. ' not' → logprob: -4.616001605987549
    4. 'not' → logprob: -6.241001605987549
    5. ' False' → logprob: -6.741001605987549
    6. 'False' → logprob: -6.741001605987549
    7. ' True' → logprob: -6.991001605987549
    8. ' bad' → logprob: -7.366001605987549
    9. 'bad' → logprob: -7.491001605987549
    10. 'True' → logprob: -7.866001605987549

Token 143: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9214671850204468
    2. '<|end|>' → logprob: -1.1714671850204468
    3. '   ' → logprob: -1.4214671850204468
    4. 'if' → logprob: -3.2964673042297363
    5. '
' → logprob: -4.671467304229736
    6. '    
' → logprob: -6.796467304229736
    7. ')' → logprob: -7.171467304229736
    8. ' ' → logprob: -7.296467304229736
    9. '<|end|>' → logprob: -7.921467304229736
    10. '  ' → logprob: -7.921467304229736

Token 145: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.114156074821949
    2. ' for' → logprob: -2.3641560077667236
    3. 'if' → logprob: -4.989156246185303
    4. '   ' → logprob: -5.114156246185303
    5. ' if' → logprob: -7.364156246185303
    6. '
' → logprob: -8.614155769348145
    7. ' ' → logprob: -9.739155769348145
    8. '<|end|>' → logprob: -10.239155769348145
    9. '    
' → logprob: -10.614155769348145
    10. '    ' → logprob: -10.614155769348145

Token 146: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25843510031700134
    2. ' for' → logprob: -2.008435010910034
    3. 'if' → logprob: -2.633435010910034
    4. ' if' → logprob: -3.883435010910034
    5. '   ' → logprob: -7.633435249328613
    6. ' detected' → logprob: -8.758435249328613
    7. 'det' → logprob: -8.758435249328613
    8. 'continue' → logprob: -9.633435249328613
    9. '#' → logprob: -9.883435249328613
    10. ' continue' → logprob: -10.508435249328613

Token 147: ' all' (ID: 722)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5602578520774841
    2. ' for' → logprob: -1.310257911682129
    3. 'if' → logprob: -2.935257911682129
    4. 'for' → logprob: -3.310257911682129
    5. ' not' → logprob: -3.810257911682129
    6. ' ss' → logprob: -4.685257911682129
    7. ' detected' → logprob: -5.060257911682129
    8. ' ' → logprob: -5.185257911682129
    9. ' i' → logprob: -5.310257911682129
    10. ' all' → logprob: -5.435257911682129

Token 148: ' single' (ID: 4590)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39033710956573486
    2. 'ss' → logprob: -2.3903369903564453
    3. '   ' → logprob: -2.6403369903564453
    4. ' i' → logprob: -3.1403369903564453
    5. 'range' → logprob: -3.6403369903564453
    6. 'indices' → logprob: -4.265336990356445
    7. 'len' → logprob: -4.890336990356445
    8. 'digits' → logprob: -4.890336990356445
    9. '4' → logprob: -5.015336990356445
    10. '_' → logprob: -5.390336990356445

Token 149: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.1879466325044632
    2. '-digit' → logprob: -2.1879465579986572
    3. 'digits' → logprob: -3.5629465579986572
    4. ' digit' → logprob: -5.187946796417236
    5. 'mut' → logprob: -5.937946796417236
    6. 'errors' → logprob: -6.062946796417236
    7. 'trans' → logprob: -6.062946796417236
    8. 'd' → logprob: -6.187946796417236
    9. ' digits' → logprob: -6.562946796417236
    10. ')' → logprob: -6.687946796417236

Token 150: ' errors' (ID: 10664)
  Prédit: 'errors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'errors' → logprob: -1.0375621318817139
    2. 'cor' → logprob: -1.1625621318817139
    3. ' errors' → logprob: -3.287562131881714
    4. ' replacements' → logprob: -3.287562131881714
    5. 'mut' → logprob: -3.412562131881714
    6. 'mod' → logprob: -3.412562131881714
    7. 'changes' → logprob: -3.662562131881714
    8. 'positions' → logprob: -3.787562131881714
    9. ' corrections' → logprob: -3.787562131881714
    10. 'sub' → logprob: -3.912562131881714

Token 151: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007775560021400452
    2. ' for' → logprob: -5.007775783538818
    3. 'for' → logprob: -7.257775783538818
    4. '<|end|>' → logprob: -8.38277530670166
    5. ':' → logprob: -9.63277530670166
    6. ',' → logprob: -10.13277530670166
    7. '
' → logprob: -12.38277530670166
    8. '    
' → logprob: -12.75777530670166
    9. ')' → logprob: -13.13277530670166
    10. '<|end|>' → logprob: -13.25777530670166

Token 152: 'alter' (ID: 39515)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5286563038825989
    2. ' for' → logprob: -0.9036563038825989
    3. 'd' → logprob: -6.028656482696533
    4. ')' → logprob: -6.778656482696533
    5. 'i' → logprob: -7.278656482696533
    6. ' i' → logprob: -7.403656482696533
    7. ' d' → logprob: -8.028656005859375
    8. 'digit' → logprob: -9.528656005859375
    9. ' detected' → logprob: -9.653656005859375
    10. 'range' → logprob: -10.028656005859375

Token 153: ' one' (ID: 1001)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.6718724370002747
    2. '   ' → logprob: -1.5468723773956299
    3. 'ing' → logprob: -1.6718723773956299
    4. 'for' → logprob: -3.17187237739563
    5. 'ation' → logprob: -3.92187237739563
    6. ' for' → logprob: -5.046872615814209
    7. 'range' → logprob: -5.046872615814209
    8. 'ations' → logprob: -5.171872615814209
    9. ' detected' → logprob: -5.171872615814209
    10. ')' → logprob: -7.296872615814209

Token 154: ' digit' (ID: 19181)
  Prédit: ' digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.28630760312080383
    2. 'digit' → logprob: -1.4113075733184814
    3. ' position' → logprob: -6.5363078117370605
    4. ')' → logprob: -6.6613078117370605
    5. 'position' → logprob: -8.036307334899902
    6. ' for' → logprob: -8.161307334899902
    7. ' index' → logprob: -8.286307334899902
    8. ' of' → logprob: -8.411307334899902
    9. 'digits' → logprob: -8.411307334899902
    10. ' digits' → logprob: -8.536307334899902

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9578208327293396
    2. ' at' → logprob: -1.3328208923339844
    3. '   ' → logprob: -2.0828208923339844
    4. ' for' → logprob: -2.3328208923339844
    5. 'for' → logprob: -2.7078208923339844
    6. ' in' → logprob: -3.9578208923339844
    7. 'at' → logprob: -4.082820892333984
    8. ',' → logprob: -4.457820892333984
    9. 'in' → logprob: -4.707820892333984
    10. '):' → logprob: -5.332820892333984

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1394861787557602
    2. ' for' → logprob: -2.139486074447632
    3. 'for' → logprob: -4.389486312866211
    4. '	for' → logprob: -10.514486312866211
    5. '<|end|>' → logprob: -10.764486312866211
    6. '    
' → logprob: -11.764486312866211
    7. '
' → logprob: -11.889486312866211
    8. '```' → logprob: -12.514486312866211
    9. ':' → logprob: -13.639486312866211
    10. ' ' → logprob: -14.139486312866211

Token 157: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7333984375
    2. 'for' (adapté à ' for') → logprob: -0.7333984375
    3. '   ' → logprob: -3.2333984375
    4. '
' → logprob: -11.6083984375
    5. '	for' → logprob: -12.1083984375
    6. '    
' → logprob: -12.2333984375
    7. ' ' → logprob: -13.1083984375
    8. 'i' → logprob: -13.3583984375
    9. '  ' → logprob: -13.4833984375
    10. 'd' → logprob: -14.2333984375

Token 158: ' pos' (ID: 1253)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1966434270143509
    2. 'i' → logprob: -2.321643352508545
    3. ' pos' → logprob: -2.946643352508545
    4. ' idx' → logprob: -4.321643352508545
    5. 'pos' → logprob: -4.321643352508545
    6. 'idx' → logprob: -6.821643352508545
    7. 'k' → logprob: -9.946643829345703
    8. ' error' → logprob: -10.446643829345703
    9. ' p' → logprob: -10.696643829345703
    10. 'p' → logprob: -10.946643829345703

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005237429868429899
    2. 'in' → logprob: -5.255237579345703
    3. ' ' → logprob: -13.380237579345703
    4. 'range' → logprob: -14.755237579345703
    5. ',' → logprob: -14.880237579345703
    6. '	in' → logprob: -15.255237579345703
    7. 's' → logprob: -15.380237579345703
    8. '  ' → logprob: -16.005237579345703
    9. '0' → logprob: -16.130237579345703
    10. '<|end|>' → logprob: -16.130237579345703

Token 160: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007106438861228526
    2. ' range' → logprob: -7.250710487365723
    3. '[' → logprob: -15.000710487365723
    4. '0' → logprob: -15.875710487365723
    5. ' ' → logprob: -16.50071144104004
    6. '(range' → logprob: -16.62571144104004
    7. '	range' → logprob: -17.00071144104004
    8. '   ' → logprob: -17.50071144104004
    9. '  ' → logprob: -18.37571144104004
    10. ')' → logprob: -18.50071144104004

Token 161: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006554892170242965
    2. '(len' → logprob: -7.875655651092529
    3. '4' → logprob: -8.375655174255371
    4. 'len' → logprob: -10.875655174255371
    5. '5' → logprob: -11.500655174255371
    6. ' ' → logprob: -11.875655174255371
    7. '   ' → logprob: -12.250655174255371
    8. ' (' → logprob: -13.875655174255371
    9. '7' → logprob: -14.375655174255371
    10. '6' → logprob: -14.375655174255371

Token 162: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.429318368434906
    2. '5' → logprob: -1.0543184280395508
    3. '6' → logprob: -8.17931842803955
    4. 'len' → logprob: -8.30431842803955
    5. ' ' → logprob: -10.05431842803955
    6. '   ' → logprob: -10.80431842803955
    7. '8' → logprob: -11.86681842803955
    8. '3' → logprob: -12.24181842803955
    9. '10' → logprob: -12.49181842803955
    10. '7' → logprob: -12.74181842803955

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04862847179174423
    2. '):
' → logprob: -3.048628568649292
    3. '):

' → logprob: -11.423628807067871
    4. '):
' → logprob: -11.798628807067871
    5. '   ' → logprob: -11.798628807067871
    6. ')' → logprob: -11.923628807067871
    7. ':' → logprob: -12.298628807067871
    8. '+' → logprob: -13.298628807067871
    9. ' ):' → logprob: -13.673628807067871
    10. ' ' → logprob: -16.173627853393555

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15753337740898132
    2. '<|end|>' → logprob: -2.6575334072113037
    3. '   ' → logprob: -3.6575334072113037
    4. ':' → logprob: -3.7825334072113037
    5. ' for' → logprob: -4.407533168792725
    6. ',' → logprob: -5.157533168792725
    7. '    ' → logprob: -6.157533168792725
    8. '
' → logprob: -6.157533168792725
    9. ':
' → logprob: -6.532533168792725
    10. ' if' → logprob: -7.282533168792725

Token 165: ' original' (ID: 4756)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7361936569213867
    2. ' for' → logprob: -0.9861936569213867
    3. '   ' → logprob: -2.3611936569213867
    4. 'for' → logprob: -2.9861936569213867
    5. ' if' → logprob: -6.111193656921387
    6. 'if' → logprob: -7.361193656921387
    7. '	for' → logprob: -9.486193656921387
    8. '    ' → logprob: -9.861193656921387
    9. '<|end|>' → logprob: -9.986193656921387
    10. ' detected' → logprob: -10.361193656921387

Token 166: ' =' (ID: 314)
  Prédit: '_digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.021742552518844604
    2. 'digit' → logprob: -4.521742343902588
    3. '_val' → logprob: -5.521742343902588
    4. '_d' → logprob: -6.021742343902588
    5. ' =' → logprob: -6.521742343902588
    6. '_digits' → logprob: -7.146742343902588
    7. '_value' → logprob: -7.146742343902588
    8. '=' → logprob: -7.771742343902588
    9. 'Digit' → logprob: -7.771742343902588
    10. 'd' → logprob: -9.146742820739746

Token 167: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.010589085519313812
    2. ' ss' → logprob: -4.635589122772217
    3. 'digits' → logprob: -7.260589122772217
    4. '   ' → logprob: -9.385588645935059
    5. ' digits' → logprob: -10.385588645935059
    6. '	ss' → logprob: -12.635588645935059
    7. ' ' → logprob: -13.135588645935059
    8. '  ' → logprob: -13.510588645935059
    9. '(ss' → logprob: -13.760588645935059
    10. 'd' → logprob: -14.135588645935059

Token 168: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.5941604690160602e-05
    2. '[' → logprob: -11.125025749206543
    3. 'num' → logprob: -13.375025749206543
    4. 'd' → logprob: -13.500025749206543
    5. 'ns' → logprob: -13.750025749206543
    6. '[n' → logprob: -14.000025749206543
    7. 'digits' → logprob: -14.062525749206543
    8. '[pos' → logprob: -14.312525749206543
    9. 'u' → logprob: -14.562525749206543
    10. 'н' → logprob: -14.687525749206543

Token 169: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.750003814697266
    3. '[val' → logprob: -15.375003814697266
    4. '[p' → logprob: -15.625003814697266
    5. ' [' → logprob: -15.625003814697266
    6. 'pos' → logprob: -16.000003814697266
    7. '       ' → logprob: -16.250003814697266
    8. '   ' → logprob: -16.625003814697266
    9. '[position' → logprob: -16.750003814697266
    10. '```' → logprob: -17.500003814697266

Token 170: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04947781562805176
    2. ')
' → logprob: -3.4244778156280518
    3. ']' → logprob: -4.299477577209473
    4. ']
' → logprob: -7.049477577209473
    5. '])' → logprob: -7.924477577209473
    6. ')]' → logprob: -8.049477577209473
    7. ' )' → logprob: -8.174477577209473
    8. '       ' → logprob: -8.799477577209473
    9. '<|end|>' → logprob: -10.549477577209473
    10. '   ' → logprob: -10.549477577209473

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03322720527648926
    2. '<|end|>' → logprob: -3.5332272052764893
    3. ' for' → logprob: -6.15822696685791
    4. '
' → logprob: -7.28322696685791
    5. ',' → logprob: -8.65822696685791
    6. '<|end|>' → logprob: -9.03322696685791
    7. '        
' → logprob: -9.15822696685791
    8. '   ' → logprob: -9.78322696685791
    9. ')' → logprob: -9.90822696685791
    10. 'for' → logprob: -10.28322696685791

Token 172: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02335483767092228
    2. ' for' → logprob: -3.7733547687530518
    3. '       ' → logprob: -9.148354530334473
    4. '   ' → logprob: -13.023354530334473
    5. '	for' → logprob: -14.148354530334473
    6. ' ' → logprob: -17.64835548400879
    7. '           ' → logprob: -18.27335548400879
    8. '
' → logprob: -18.52335548400879
    9. '<|end|>' → logprob: -18.52335548400879
    10. '```' → logprob: -19.27335548400879

Token 173: ' new' (ID: 620)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -1.2474559545516968
    2. 'new' → logprob: -1.7474559545516968
    3. 'err' → logprob: -2.1224560737609863
    4. 'd' → logprob: -2.1224560737609863
    5. ' new' → logprob: -2.3724560737609863
    6. ' digit' → logprob: -2.8724560737609863
    7. 'alt' → logprob: -3.4974560737609863
    8. 'alter' → logprob: -3.7474560737609863
    9. 'replacement' → logprob: -3.8724560737609863
    10. ' d' → logprob: -3.9974560737609863

Token 174: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.04360147565603256
    2. 'digit' → logprob: -3.5436015129089355
    3. '_d' → logprob: -4.9186015129089355
    4. 'd' → logprob: -5.1686015129089355
    5. '_val' → logprob: -7.5436015129089355
    6. ' in' → logprob: -8.918601036071777
    7. 'dig' → logprob: -10.168601036071777
    8. 'Digit' → logprob: -10.418601036071777
    9. ' digit' → logprob: -11.793601036071777
    10. '_value' → logprob: -12.543601036071777

Token 175: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06994599103927612
    2. 'in' → logprob: -2.694946050643921
    3. ' ' → logprob: -12.1949462890625
    4. 's' → logprob: -13.6949462890625
    5. '	in' → logprob: -14.4449462890625
    6. 'import' → logprob: -14.8199462890625
    7. 'from' → logprob: -14.9449462890625
    8. 'In' → logprob: -15.1949462890625
    9. 'range' → logprob: -15.3199462890625
    10. 'to' → logprob: -15.4449462890625

Token 176: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931495070457458
    2. 'range' → logprob: -0.6931495070457458
    3. ' ' → logprob: -14.19314956665039
    4. '	range' → logprob: -14.19314956665039
    5. '(range' → logprob: -14.81814956665039
    6. '   ' → logprob: -15.06814956665039
    7. '0' → logprob: -15.56814956665039
    8. '  ' → logprob: -16.81814956665039
    9. '    ' → logprob: -17.81814956665039
    10. '[' → logprob: -18.31814956665039

Token 177: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009115827269852161
    2. '10' → logprob: -7.000911712646484
    3. '(
' → logprob: -16.250911712646484
    4. ' (' → logprob: -18.375911712646484
    5. ' ' → logprob: -18.375911712646484
    6. '   ' → logprob: -18.625911712646484
    7. '[' → logprob: -19.375911712646484
    8. '{' → logprob: -19.375911712646484
    9. '```' → logprob: -19.500911712646484
    10. '0' → logprob: -19.750911712646484

Token 178: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -11.875018119812012
    3. '1' → logprob: -12.000018119812012
    4. '0' → logprob: -12.375018119812012
    5. '(' → logprob: -15.000018119812012
    6. ')' → logprob: -16.500017166137695
    7. '   ' → logprob: -16.875017166137695
    8. '9' → logprob: -17.250017166137695
    9. '```' → logprob: -18.125017166137695
    10. '{' → logprob: -19.250017166137695

Token 179: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5375288128852844
    2. '):' → logprob: -0.9125288128852844
    3. ':' → logprob: -4.287528991699219
    4. '           ' → logprob: -8.412528991699219
    5. '):
' → logprob: -8.787528991699219
    6. ':
' → logprob: -9.287528991699219
    7. '):

' → logprob: -10.412528991699219
    8. '       ' → logprob: -10.662528991699219
    9. ')' → logprob: -11.537528991699219
    10. '<|end|>' → logprob: -11.662528991699219

Token 180: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1059100553393364
    2. '<|end|>' → logprob: -2.480910062789917
    3. ' if' → logprob: -4.730909824371338
    4. '       ' → logprob: -5.730909824371338
    5. ' ' → logprob: -6.730909824371338
    6. '               ' → logprob: -6.980909824371338
    7. 'if' → logprob: -7.105909824371338
    8. '	       ' → logprob: -7.105909824371338
    9. '<|end|>' → logprob: -8.230910301208496
    10. '        ' → logprob: -9.230910301208496

Token 181: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3538738191127777
    2. '               ' → logprob: -1.8538738489151
    3. ' ' → logprob: -2.6038737297058105
    4. 'if' (adapté à ' if') → logprob: -3.7288737297058105
    5. '<|end|>' → logprob: -3.8538737297058105
    6. '           ' → logprob: -4.1038737297058105
    7. '            ' → logprob: -5.4788737297058105
    8. '                ' → logprob: -7.6038737297058105
    9. '             ' → logprob: -8.478874206542969
    10. '              ' → logprob: -9.353874206542969

Token 182: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5759403705596924
    2. 'new' → logprob: -0.8259403705596924
    3. '	new' → logprob: -14.825940132141113
    4. ' newid' → logprob: -16.32594108581543
    5. '(new' → logprob: -16.70094108581543
    6. ' ' → logprob: -16.70094108581543
    7. '$new' → logprob: -16.70094108581543
    8. ' original' → logprob: -16.82594108581543
    9. '   ' → logprob: -17.07594108581543
    10. '新' → logprob: -17.07594108581543

Token 183: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.0011722482740879059
    2. 'digit' → logprob: -7.126172065734863
    3. '_digits' → logprob: -9.001172065734863
    4. ' digit' → logprob: -9.126172065734863
    5. 'igit' → logprob: -9.751172065734863
    6. '_d' → logprob: -10.876172065734863
    7. '-digit' → logprob: -11.501172065734863
    8. 'isdigit' → logprob: -11.876172065734863
    9. 'new' → logprob: -12.126172065734863
    10. '[' → logprob: -12.376172065734863

Token 184: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.39310863614082336
    2. ' ==' → logprob: -1.268108606338501
    3. '!=' → logprob: -3.768108606338501
    4. '==' → logprob: -3.893108606338501
    5. '<|end|>' → logprob: -8.893108367919922
    6. ' ' → logprob: -10.518108367919922
    7. ' ' → logprob: -11.518108367919922
    8. '=' → logprob: -11.643108367919922
    9. '<|end|>' → logprob: -12.518108367919922
    10. ')' → logprob: -12.518108367919922

Token 185: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.04858884960412979
    2. ' original' → logprob: -3.048588752746582
    3. ' ' → logprob: -14.173588752746582
    4. '(original' → logprob: -14.673588752746582
    5. '  ' → logprob: -16.1735897064209
    6. '
' → logprob: -16.1735897064209
    7. '   ' → logprob: -16.2985897064209
    8. '.original' → logprob: -17.6735897064209
    9. ' оригин' → logprob: -18.1735897064209
    10. ' ' → logprob: -18.1735897064209

Token 186: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48156508803367615
    2. ':
' → logprob: -1.1065651178359985
    3. '               ' → logprob: -2.981564998626709
    4. '           ' → logprob: -8.106565475463867
    5. ' continue' → logprob: -8.731565475463867
    6. 'continue' → logprob: -9.356565475463867
    7. '       ' → logprob: -9.481565475463867
    8. ' or' → logprob: -10.481565475463867
    9. '	continue' → logprob: -10.481565475463867
    10. '   ' → logprob: -10.981565475463867

Token 187: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019495632499456406
    2. ' continue' → logprob: -4.144495487213135
    3. 'continue' → logprob: -5.769495487213135
    4. '	continue' → logprob: -8.644495964050293
    5. '           ' → logprob: -9.769495964050293
    6. '	           ' → logprob: -10.519495964050293
    7. '   ' → logprob: -10.769495964050293
    8. ':' → logprob: -12.019495964050293
    9. '       ' → logprob: -12.019495964050293
    10. '		       ' → logprob: -12.019495964050293

Token 188: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7089270949363708
    2. 'continue' (adapté à ' continue') → logprob: -0.7089270949363708
    3. '               ' → logprob: -4.208927154541016
    4. '	continue' → logprob: -7.708927154541016
    5. '                   ' → logprob: -8.583927154541016
    6. '   ' → logprob: -8.958927154541016
    7. '_continue' → logprob: -11.458927154541016
    8. '           ' → logprob: -11.833927154541016
    9. 'contin' → logprob: -12.833927154541016
    10. '                       ' → logprob: -13.083927154541016

Token 189: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004205070901662111
    2. '
' → logprob: -6.004205226898193
    3. '            
' → logprob: -6.504205226898193
    4. '               ' → logprob: -9.754204750061035
    5. '    
' → logprob: -10.504204750061035
    6. '                
' → logprob: -10.629204750061035
    7. '       ' → logprob: -10.754204750061035
    8. '```' → logprob: -11.629204750061035
    9. '        
' → logprob: -11.754204750061035
    10. ' 
' → logprob: -11.879204750061035

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013244071742519736
    2. '            
' → logprob: -7.87632417678833
    3. '       ' → logprob: -8.251324653625488
    4. ' if' → logprob: -8.501324653625488
    5. 'if' → logprob: -8.751324653625488
    6. '
' → logprob: -9.251324653625488
    7. '               ' → logprob: -10.126324653625488
    8. '          ' → logprob: -10.376324653625488
    9. ')' → logprob: -10.751324653625488
    10. ' for' → logprob: -11.376324653625488

Token 191: ' error' (ID: 2915)
  Prédit: ' ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ss' → logprob: -0.5762590169906616
    2. '           ' → logprob: -1.7012590169906616
    3. ' temp' → logprob: -3.201259136199951
    4. ' new' → logprob: -3.451259136199951
    5. 'ss' → logprob: -3.576259136199951
    6. '               ' → logprob: -3.576259136199951
    7. ' error' → logprob: -4.076259136199951
    8. ' modified' → logprob: -4.576259136199951
    9. ' s' → logprob: -4.701259136199951
    10. ' if' → logprob: -4.826259136199951

Token 192: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -0.14437632262706757
    2. '_val' → logprob: -3.019376277923584
    3. ' =' → logprob: -3.644376277923584
    4. '_code' → logprob: -4.394376277923584
    5. '_state' → logprob: -4.644376277923584
    6. '_value' → logprob: -4.769376277923584
    7. '_detect' → logprob: -5.144376277923584
    8. '_digit' → logprob: -5.269376277923584
    9. '_s' → logprob: -5.519376277923584
    10. '_found' → logprob: -5.894376277923584

Token 193: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. 's' → logprob: -16.125
    3. 'н' → logprob: -16.25
    4. 'ns' → logprob: -16.375
    5. '_n' → logprob: -16.75
    6. 'an' → logprob: -16.875
    7. 'num' → logprob: -17.0
    8. 'number' → logprob: -17.4375
    9. '```' → logprob: -17.875
    10. '=' → logprob: -18.125

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859157279133797
    2. '=' → logprob: -3.0485916137695312
    3. '[' → logprob: -12.798591613769531
    4. '[pos' → logprob: -14.173591613769531
    5. ' ' → logprob: -15.423591613769531
    6. ']' → logprob: -15.798591613769531
    7. 's' → logprob: -16.54859161376953
    8. ' =[' → logprob: -16.54859161376953
    9. ')' → logprob: -17.04859161376953
    10. '=[' → logprob: -17.29859161376953

Token 195: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.062076136469841
    2. ' ss' → logprob: -2.8120760917663574
    3. '   ' → logprob: -9.437076568603516
    4. '(ss' → logprob: -11.687076568603516
    5. '	ss' → logprob: -11.937076568603516
    6. ' ' → logprob: -12.312076568603516
    7. '  ' → logprob: -12.312076568603516
    8. 'sss' → logprob: -13.937076568603516
    9. '_ss' → logprob: -14.187076568603516
    10. '[' → logprob: -14.187076568603516

Token 196: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.8206473871250637e-05
    2. '[' → logprob: -11.375028610229492
    3. '[n' → logprob: -11.625028610229492
    4. 'N' → logprob: -12.625028610229492
    5. 'н' → logprob: -14.750028610229492
    6. '{' → logprob: -14.875028610229492
    7. 'num' → logprob: -15.187528610229492
    8. 'ns' → logprob: -15.562528610229492
    9. '[
' → logprob: -15.562528610229492
    10. 'number' → logprob: -15.625028610229492

Token 197: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.45601287484169006
    2. '[:]' → logprob: -1.2060128450393677
    3. '.copy' → logprob: -2.7060129642486572
    4. 'copy' → logprob: -13.581012725830078
    5. '[' → logprob: -13.581012725830078
    6. '.' → logprob: -14.706012725830078
    7. '_copy' → logprob: -17.206012725830078
    8. '[:-' → logprob: -17.581012725830078
    9. ' [:' → logprob: -17.956012725830078
    10. '][:' → logprob: -17.956012725830078

Token 198: ']
' (ID: 1592)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.006785232108086348
    2. ']' → logprob: -5.0067853927612305
    3. ':' → logprob: -9.75678539276123
    4. ' pos' → logprob: -11.88178539276123
    5. ':]' → logprob: -13.50678539276123
    6. '0' → logprob: -13.63178539276123
    7. ']
' → logprob: -14.63178539276123
    8. ']

' → logprob: -14.75678539276123
    9. ')' → logprob: -15.63178539276123
    10. 'position' → logprob: -15.63178539276123

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2548794448375702
    2. 'error' → logprob: -1.6298794746398926
    3. ' error' → logprob: -3.6298794746398926
    4. '<|end|>' → logprob: -7.379879474639893
    5. '
' → logprob: -7.879879474639893
    6. '            ' → logprob: -8.129878997802734
    7. '            
' → logprob: -8.629878997802734
    8. '          ' → logprob: -8.754878997802734
    9. '<|end|>' → logprob: -8.879878997802734
    10. '               ' → logprob: -9.129878997802734

Token 200: ' error' (ID: 2915)
  Prédit: 'error'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'error' (adapté à ' error') → logprob: -0.0015067668864503503
    2. ' error' → logprob: -6.501506805419922
    3. 'pos' → logprob: -12.626506805419922
    4. '           ' → logprob: -14.126506805419922
    5. ' pos' → logprob: -15.126506805419922
    6. '               ' → logprob: -17.126506805419922
    7. '   ' → logprob: -17.876506805419922
    8. '[pos' → logprob: -18.126506805419922
    9. '[' → logprob: -18.751506805419922
    10. '       ' → logprob: -19.001506805419922

Token 201: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -0.0007366081699728966
    2. '[pos' → logprob: -7.375736713409424
    3. 'ss' → logprob: -9.375736236572266
    4. 'pos' → logprob: -11.375736236572266
    5. '_pos' → logprob: -12.000736236572266
    6. 'error' → logprob: -13.500736236572266
    7. '_s' → logprob: -13.625736236572266
    8. '[' → logprob: -14.000736236572266
    9. '[position' → logprob: -14.250736236572266
    10. '	ss' → logprob: -14.375736236572266

Token 202: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00018065694894175977
    2. 'error' → logprob: -9.0001802444458
    3. '[' → logprob: -10.7501802444458
    4. 'r' → logprob: -11.2501802444458
    5. ' error' → logprob: -12.0001802444458
    6. 'N' → logprob: -12.5001802444458
    7. '[pos' → logprob: -13.1251802444458
    8. '_error' → logprob: -13.3751802444458
    9. 's' → logprob: -13.7501802444458
    10. '[n' → logprob: -13.8751802444458

Token 203: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. '[position' → logprob: -17.875001907348633
    4. 'pos' → logprob: -18.250001907348633
    5. '```' → logprob: -18.250001907348633
    6. ' [' → logprob: -18.750001907348633
    7. 'error' → logprob: -18.750001907348633
    8. '[p' → logprob: -19.875001907348633
    9. '[prop' → logprob: -20.000001907348633
    10. '[val' → logprob: -20.125001907348633

Token 204: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013482891023159027
    2. '=' → logprob: -4.513483047485352
    3. ' =' → logprob: -6.263483047485352
    4. ']=' → logprob: -7.638483047485352
    5. ' ]' → logprob: -10.013483047485352
    6. ')' → logprob: -14.888483047485352
    7. '<|end|>' → logprob: -15.513483047485352
    8. '   ' → logprob: -16.13848304748535
    9. ' ' → logprob: -16.76348304748535
    10. '][' → logprob: -16.88848304748535

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014141082763672
    2. ' =' → logprob: -1.7014141082763672
    3. ']' → logprob: -14.326414108276367
    4. ']=' → logprob: -15.826414108276367
    5. ' ' → logprob: -17.451414108276367
    6. '<|end|>' → logprob: -17.701414108276367
    7. '＝' → logprob: -17.826414108276367
    8. ')' → logprob: -18.201414108276367
    9. '=
' → logprob: -18.826414108276367
    10. '=

' → logprob: -19.076414108276367

Token 206: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.10020667314529419
    2. ' new' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.97520637512207
    4. '新' → logprob: -18.10020637512207
    5. '_new' → logprob: -18.22520637512207
    6. '	new' → logprob: -18.47520637512207
    7. 'New' → logprob: -18.97520637512207
    8. '```' → logprob: -19.72520637512207
    9. 'n' → logprob: -20.22520637512207
    10. ' ' → logprob: -20.85020637512207

Token 207: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.0009823163272812963
    2. '_' → logprob: -7.125982284545898
    3. 'digit' → logprob: -9.375982284545898
    4. 'igit' → logprob: -10.375982284545898
    5. ' _' → logprob: -10.750982284545898
    6. 'w' → logprob: -11.000982284545898
    7. '-digit' → logprob: -12.625982284545898
    8. '_d' → logprob: -13.000982284545898
    9. '__' → logprob: -13.125982284545898
    10. '```' → logprob: -13.375982284545898

Token 208: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22546057403087616
    2. '           ' → logprob: -2.1004605293273926
    3. '<|end|>' → logprob: -2.7254605293273926
    4. '  
' → logprob: -5.350460529327393
    5. '<|end|>' → logprob: -5.975460529327393
    6. '            
' → logprob: -5.975460529327393
    7. ' 
' → logprob: -6.725460529327393
    8. '
' → logprob: -6.850460529327393
    9. '    
' → logprob: -7.475460529327393
    10. '       ' → logprob: -8.47546100616455

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004576799925416708
    2. ' if' → logprob: -5.879576683044434
    3. '
' → logprob: -6.879576683044434
    4. 'if' → logprob: -8.004576683044434
    5. '       ' → logprob: -9.129576683044434
    6. '   ' → logprob: -9.504576683044434
    7. '<|end|>' → logprob: -10.129576683044434
    8. '            
' → logprob: -10.379576683044434
    9. ' detected' → logprob: -11.004576683044434
    10. '```' → logprob: -11.129576683044434

Token 210: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07105537503957748
    2. ' if' → logprob: -2.6960554122924805
    3. '           ' → logprob: -7.1960554122924805
    4. 'val' → logprob: -8.82105541229248
    5. '   ' → logprob: -9.19605541229248
    6. 'det' → logprob: -9.69605541229248
    7. ' detected' → logprob: -10.82105541229248
    8. 'result' → logprob: -11.57105541229248
    9. '       ' → logprob: -11.82105541229248
    10. ' val' → logprob: -12.19605541229248

Token 211: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.7876443862915039
    2. 'check' → logprob: -0.7876443862915039
    3. ' not' → logprob: -2.662644386291504
    4. 'not' → logprob: -3.912644386291504
    5. '   ' → logprob: -8.662644386291504
    6. ' ' → logprob: -9.537644386291504
    7. ' detected' → logprob: -9.912644386291504
    8. 'det' → logprob: -10.412644386291504
    9. 'detect' → logprob: -11.100144386291504
    10. '(check' → logprob: -11.225144386291504

Token 212: '(error' (ID: 12157)
  Prédit: '(error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(error' → logprob: -1.6240566083070007e-06
    2. 'error' → logprob: -13.875001907348633
    3. '(' → logprob: -14.750001907348633
    4. ' (' → logprob: -15.750001907348633
    5. '(Error' → logprob: -17.125001907348633
    6. 'rror' → logprob: -17.750001907348633
    7. ' error' → logprob: -17.875001907348633
    8. '(answer' → logprob: -18.000001907348633
    9. ')' → logprob: -18.250001907348633
    10. '(
' → logprob: -18.625001907348633

Token 213: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -0.0001239196863025427
    2. 'ss' → logprob: -9.625123977661133
    3. '(ss' → logprob: -10.875123977661133
    4. 'error' → logprob: -11.125123977661133
    5. '_s' → logprob: -12.000123977661133
    6. ')' → logprob: -12.125123977661133
    7. '(error' → logprob: -12.375123977661133
    8. 's' → logprob: -13.000123977661133
    9. '(' → logprob: -13.125123977661133
    10. ' ss' → logprob: -14.250123977661133

Token 214: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00030602619517594576
    2. 'error' → logprob: -8.500306129455566
    3. ' error' → logprob: -10.625306129455566
    4. ')' → logprob: -11.375306129455566
    5. 'r' → logprob: -11.375306129455566
    6. 'rror' → logprob: -11.625306129455566
    7. '_error' → logprob: -11.625306129455566
    8. '(error' → logprob: -11.750306129455566
    9. 'N' → logprob: -12.625306129455566
    10. 's' → logprob: -12.750306129455566

Token 215: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022219838574528694
    2. ' )' → logprob: -7.252222061157227
    3. ')!=' → logprob: -7.502222061157227
    4. ')==' → logprob: -8.002222061157227
    5. '==' → logprob: -8.252222061157227
    6. ' !=' → logprob: -8.627222061157227
    7. '!=' → logprob: -8.877222061157227
    8. ' ==' → logprob: -10.877222061157227
    9. '[' → logprob: -11.752222061157227
    10. '()' → logprob: -11.877222061157227

Token 216: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3756316900253296
    2. ' ==' → logprob: -1.6256316900253296
    3. '==' → logprob: -2.625631809234619
    4. '!=' → logprob: -3.125631809234619
    5. ' ' → logprob: -10.625631332397461
    6. '   ' → logprob: -11.875631332397461
    7. ')' → logprob: -12.250631332397461
    8. '()!=' → logprob: -12.625631332397461
    9. ':' → logprob: -12.875631332397461
    10. '=' → logprob: -13.375631332397461

Token 217: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16856749355793
    2. 'ss' → logprob: -2.668567419052124
    3. 'error' → logprob: -2.793567419052124
    4. 'new' → logprob: -4.668567657470703
    5. 'original' → logprob: -5.043567657470703
    6. '1' → logprob: -5.543567657470703
    7. 'val' → logprob: -6.668567657470703
    8. 'bad' → logprob: -7.418567657470703
    9. '5' → logprob: -7.793567657470703
    10. 'good' → logprob: -7.918567657470703

Token 218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08556264638900757
    2. 'error' → logprob: -2.9605627059936523
    3. '5' → logprob: -4.710562705993652
    4. '1' → logprob: -4.835562705993652
    5. 'ss' → logprob: -5.210562705993652
    6. 'val' → logprob: -5.960562705993652
    7. 'e' → logprob: -6.460562705993652
    8. '4' → logprob: -7.210562705993652
    9. '10' → logprob: -7.335562705993652
    10. '9' → logprob: -7.460562705993652

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09200345724821091
    2. ':
' → logprob: -2.467003345489502
    3. '           ' → logprob: -6.592003345489502
    4. '               ' → logprob: -6.967003345489502
    5. '       ' → logprob: -7.592003345489502
    6. ':return' → logprob: -8.96700382232666
    7. ' and' → logprob: -10.59200382232666
    8. ' or' → logprob: -10.96700382232666
    9. '   ' → logprob: -11.21700382232666
    10. ' continue' → logprob: -11.46700382232666

Token 220: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008168928325176239
    2. '           ' → logprob: -8.50081729888916
    3. 'False' → logprob: -8.75081729888916
    4. ' continue' → logprob: -9.00081729888916
    5. '                   ' → logprob: -9.12581729888916
    6. 'continue' → logprob: -9.75081729888916
    7. ' False' → logprob: -9.87581729888916
    8. ' detected' → logprob: -9.87581729888916
    9. '   ' → logprob: -11.62581729888916
    10. '       ' → logprob: -11.87581729888916

Token 221: ' detected' (ID: 28357)
  Prédit: ' detected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' detected' → logprob: -0.21350368857383728
    2. '               ' → logprob: -1.8385037183761597
    3. 'det' → logprob: -4.338503837585449
    4. ' bad' → logprob: -5.088503837585449
    5. 'bad' → logprob: -5.463503837585449
    6. '           ' → logprob: -5.713503837585449
    7. ' continue' → logprob: -5.963503837585449
    8. 'continue' → logprob: -7.088503837585449
    9. '                   ' → logprob: -7.088503837585449
    10. ' break' → logprob: -7.463503837585449

Token 222: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3897315561771393
    2. ' =' → logprob: -1.139731526374817
    3. '=False' → logprob: -5.889731407165527
    4. 'False' → logprob: -10.139731407165527
    5. '==' → logprob: -10.639731407165527
    6. ' False' → logprob: -12.389731407165527
    7. ' ==' → logprob: -12.389731407165527
    8. '=True' → logprob: -12.514731407165527
    9. 'continue' → logprob: -13.139731407165527
    10. ' is' → logprob: -13.389731407165527

Token 223: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00036691725836135447
    2. ' False' → logprob: -8.000367164611816
    3. 'True' → logprob: -10.375367164611816
    4. '(False' → logprob: -16.3753662109375
    5. '=False' → logprob: -16.7503662109375
    6. 'false' → logprob: -17.1253662109375
    7. ' True' → logprob: -17.8753662109375
    8. '0' → logprob: -17.8753662109375
    9. '
' → logprob: -18.2503662109375
    10. 'F' → logprob: -18.5003662109375

Token 224: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1227567121386528
    2. '           ' → logprob: -2.3727567195892334
    3. '<|end|>' → logprob: -4.122756481170654
    4. '                   ' → logprob: -6.372756481170654
    5. '                           ' → logprob: -7.372756481170654
    6. '            ' → logprob: -7.497756481170654
    7. '              ' → logprob: -7.747756481170654
    8. '            
' → logprob: -7.997756481170654
    9. '                               ' → logprob: -7.997756481170654
    10. '                ' → logprob: -8.247756958007812

Token 225: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20667827129364014
    2. '               ' → logprob: -1.9566782712936401
    3. '<|end|>' → logprob: -3.5816783905029297
    4. '                           ' → logprob: -5.45667839050293
    5. '            ' → logprob: -5.95667839050293
    6. '                   ' → logprob: -6.20667839050293
    7. ')' → logprob: -6.20667839050293
    8. '                               ' → logprob: -6.70667839050293
    9. '            
' → logprob: -7.45667839050293
    10. '                                   ' → logprob: -7.58167839050293

Token 226: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.19289004802703857
    2. ' break' → logprob: -1.9428900480270386
    3. '               ' → logprob: -3.442890167236328
    4. '           ' → logprob: -8.942890167236328
    5. '                   ' → logprob: -10.442890167236328
    6. '                       ' → logprob: -13.067890167236328
    7. '	break' → logprob: -13.692890167236328
    8. '                           ' → logprob: -14.442890167236328
    9. '                               ' → logprob: -14.817890167236328
    10. '       ' → logprob: -15.067890167236328

Token 227: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3267422914505005
    2. '<|end|>' → logprob: -1.4517422914505005
    3. '
' → logprob: -4.201742172241211
    4. '           ' → logprob: -4.326742172241211
    5. '        
' → logprob: -5.451742172241211
    6. ' 
' → logprob: -6.451742172241211
    7. '	' → logprob: -6.451742172241211
    8. '  
' → logprob: -6.826742172241211
    9. '    
' → logprob: -6.826742172241211
    10. '		
' → logprob: -6.951742172241211

Token 229: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058436933904886246
    2. '   ' → logprob: -3.308436870574951
    3. '<|end|>' → logprob: -4.683436870574951
    4. '    ' → logprob: -5.683436870574951
    5. '
' → logprob: -6.058436870574951
    6. '           ' → logprob: -6.683436870574951
    7. '     ' → logprob: -7.308436870574951
    8. ' ' → logprob: -7.308436870574951
    9. '        
' → logprob: -7.808436870574951
    10. '  
' → logprob: -7.933436870574951

Token 230: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.002051766263321042
    2. 'not' → logprob: -6.252051830291748
    3. ' detected' → logprob: -9.00205135345459
    4. 'det' → logprob: -17.252052307128906
    5. '	not' → logprob: -18.127052307128906
    6. ' ' → logprob: -18.502052307128906
    7. '   ' → logprob: -20.127052307128906
    8. ' ' → logprob: -20.377052307128906
    9. ' no' → logprob: -20.502052307128906
    10. '_not' → logprob: -21.127052307128906

Token 231: ' detected' (ID: 28357)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.00861456897109747
    2. ' detected' → logprob: -4.758614540100098
    3. 'detect' → logprob: -18.383615493774414
    4. '_detect' → logprob: -19.258615493774414
    5. 'determ' → logprob: -19.383615493774414
    6. ' det' → logprob: -20.383615493774414
    7. ' ' → logprob: -20.758615493774414
    8. 'dete' → logprob: -20.883615493774414
    9. 'd' → logprob: -21.383615493774414
    10. '   ' → logprob: -22.008615493774414

Token 232: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8615907430648804
    2. ':
' → logprob: -0.9865907430648804
    3. ':' → logprob: -1.7365907430648804
    4. '       ' → logprob: -4.11159086227417
    5. '   ' → logprob: -4.98659086227417
    6. '               ' → logprob: -6.86159086227417
    7. 'break' → logprob: -6.86159086227417
    8. ' break' → logprob: -6.98659086227417
    9. '<|end|>' → logprob: -7.36159086227417
    10. '=' → logprob: -7.98659086227417

Token 233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041756415157578886
    2. ' break' → logprob: -7.875417709350586
    3. '               ' → logprob: -10.375417709350586
    4. 'break' → logprob: -12.375417709350586
    5. '       ' → logprob: -14.250417709350586
    6. '
' → logprob: -14.625417709350586
    7. '		' → logprob: -15.500417709350586
    8. '```' → logprob: -15.750417709350586
    9. '            
' → logprob: -15.875417709350586
    10. '                   ' → logprob: -15.875417709350586

Token 234: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4986437261104584
    2. ' break' → logprob: -1.2486437559127808
    3. '           ' → logprob: -2.248643636703491
    4. '   ' → logprob: -8.99864387512207
    5. '       ' → logprob: -9.62364387512207
    6. '	break' → logprob: -11.49864387512207
    7. '               ' → logprob: -11.62364387512207
    8. '		' → logprob: -14.62364387512207
    9. ' ' → logprob: -15.12364387512207
    10. '```' → logprob: -15.37364387512207

Token 235: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2963255047798157
    2. '<|end|>' → logprob: -1.796325445175171
    3. '   ' → logprob: -2.546325445175171
    4. 'bad' → logprob: -5.79632568359375
    5. '+' → logprob: -6.42132568359375
    6. '```' → logprob: -6.92132568359375
    7. ']' → logprob: -6.92132568359375
    8. 'if' → logprob: -7.67132568359375
    9. '#' → logprob: -7.79632568359375
    10. '    ' → logprob: -7.79632568359375

Token 236: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048852477222681046
    2. '<|end|>' → logprob: -3.1738524436950684
    3. '   ' → logprob: -5.923852443695068
    4. '
' → logprob: -6.548852443695068
    5. '```' → logprob: -8.173852920532227
    6. '#' → logprob: -8.423852920532227
    7. ')
' → logprob: -8.798852920532227
    8. 'print' → logprob: -9.048852920532227
    9. 'if' → logprob: -9.048852920532227
    10. ']' → logprob: -9.048852920532227

Token 237: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5272395610809326
    2. 'print' → logprob: -1.0272395610809326
    3. 'bad' → logprob: -3.0272395610809326
    4. 'for' → logprob: -6.152239799499512
    5. 'else' → logprob: -7.777239799499512
    6. ' if' → logprob: -8.527239799499512
    7. '
' → logprob: -8.777239799499512
    8. '   ' → logprob: -9.152239799499512
    9. '<|end|>' → logprob: -9.277239799499512
    10. 'continue' → logprob: -9.527239799499512

Token 238: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02763821929693222
    2. 'not' → logprob: -3.6526381969451904
    3. ' detected' → logprob: -6.6526384353637695
    4. 'det' → logprob: -10.40263843536377
    5. ' bad' → logprob: -11.65263843536377
    6. ' ' → logprob: -12.40263843536377
    7. 'bad' → logprob: -14.02763843536377
    8. '	not' → logprob: -14.27763843536377
    9. '   ' → logprob: -14.40263843536377
    10. '!' → logprob: -15.15263843536377

Token 239: ' detected' (ID: 28357)
  Prédit: ' detected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' detected' → logprob: -0.16023722290992737
    2. 'det' → logprob: -1.910237193107605
    3. '_detect' → logprob: -12.035237312316895
    4. ' det' → logprob: -13.285237312316895
    5. 'detect' → logprob: -13.410237312316895
    6. ' bad' → logprob: -13.660237312316895
    7. 'Detected' → logprob: -13.910237312316895
    8. 'bad' → logprob: -14.285237312316895
    9. ' ' → logprob: -14.910237312316895
    10. 'd' → logprob: -15.035237312316895

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24697265028953552
    2. ':
' → logprob: -1.621972680091858
    3. '       ' → logprob: -4.621972560882568
    4. '   ' → logprob: -4.746972560882568
    5. '=' → logprob: -7.121972560882568
    6. ' +=' → logprob: -7.246972560882568
    7. '+' → logprob: -8.121973037719727
    8. '+=' → logprob: -8.871973037719727
    9. ' =' → logprob: -8.996973037719727
    10. '==' → logprob: -8.996973037719727

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21320706605911255
    2. '   ' → logprob: -2.0882070064544678
    3. ' bad' → logprob: -3.0882070064544678
    4. 'bad' → logprob: -3.8382070064544678
    5. '           ' → logprob: -7.838207244873047
    6. '```' → logprob: -8.088207244873047
    7. '    ' → logprob: -9.963207244873047
    8. '     ' → logprob: -10.463207244873047
    9. 'b' → logprob: -10.588207244873047
    10. '+' → logprob: -10.588207244873047

Token 242: ' bad' (ID: 4790)
  Prédit: 'bad'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bad' (adapté à ' bad') → logprob: -0.2319055050611496
    2. ' bad' → logprob: -1.856905460357666
    3. '   ' → logprob: -2.981905460357666
    4. '       ' → logprob: -9.606905937194824
    5. '```' → logprob: -10.981905937194824
    6. '           ' → logprob: -11.231905937194824
    7. '
' → logprob: -11.731905937194824
    8. ' ' → logprob: -12.106905937194824
    9. 'b' → logprob: -12.481905937194824
    10. '    ' → logprob: -13.106905937194824

Token 243: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.37500286102295
    3. ' _' → logprob: -14.12500286102295
    4. '_counter' → logprob: -17.125001907348633
    5. '\' → logprob: -17.875001907348633
    6. '_code' → logprob: -18.000001907348633
    7. '_counts' → logprob: -18.125001907348633
    8. '__' → logprob: -18.250001907348633
    9. '_co' → logprob: -18.250001907348633
    10. '_c' → logprob: -18.500001907348633

Token 244: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31327712535858154
    2. ' +=' → logprob: -1.3132771253585815
    3. '+' → logprob: -11.313277244567871
    4. '   ' → logprob: -13.938277244567871
    5. '=' → logprob: -14.063277244567871
    6. '+="' → logprob: -14.938277244567871
    7. ']+=' → logprob: -14.938277244567871
    8. '+='' → logprob: -15.313277244567871
    9. '```' → logprob: -15.563277244567871
    10. ' -=' → logprob: -16.438276290893555

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -20.3750057220459
    4. '```' → logprob: -20.7500057220459
    5. '<|end|>' → logprob: -20.8750057220459
    6. '  ' → logprob: -22.3125057220459
    7. '0' → logprob: -22.4375057220459
    8. '۱' → logprob: -22.5000057220459
    9. '+' → logprob: -22.5625057220459
    10. '
' → logprob: -22.6875057220459

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -20.625001907348633
    4. '```' → logprob: -20.875001907348633
    5. '<|end|>' → logprob: -21.750001907348633
    6. '
' → logprob: -22.062501907348633
    7. ')' → logprob: -22.250001907348633
    8. '  ' → logprob: -22.250001907348633
    9. '۱' → logprob: -22.375001907348633
    10. '10' → logprob: -22.500001907348633

Token 247: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005352347623556852
    2. '
' → logprob: -5.88035249710083
    3. ')' → logprob: -6.38035249710083
    4. '<|end|>' → logprob: -7.50535249710083
    5. ' print' → logprob: -8.380352020263672
    6. 'bad' → logprob: -11.130352020263672
    7. '\n' → logprob: -11.255352020263672
    8. '```' → logprob: -11.380352020263672
    9. ')
' → logprob: -12.005352020263672
    10. '+' → logprob: -12.380352020263672

Token 248: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.815280696377158e-05
    2. ' print' → logprob: -10.125078201293945
    3. '
' → logprob: -10.500078201293945
    4. ')' → logprob: -11.625078201293945
    5. '<|end|>' → logprob: -14.250078201293945
    6. '

' → logprob: -15.000078201293945
    7. '```' → logprob: -15.375078201293945
    8. '.print' → logprob: -16.875078201293945
    9. '  
' → logprob: -17.000078201293945
    10. '(print' → logprob: -17.375078201293945

Token 249: ' continue' (ID: 4901)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10317303240299225
    2. ' print' → logprob: -3.353173017501831
    3. 'break' → logprob: -3.478173017501831
    4. '   ' → logprob: -4.47817325592041
    5. ' break' → logprob: -4.47817325592041
    6. '       ' → logprob: -4.72817325592041
    7. ' if' → logprob: -8.47817325592041
    8. 'if' → logprob: -8.60317325592041
    9. '           ' → logprob: -9.35317325592041
    10. '
' → logprob: -9.85317325592041

Token 250: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003993296413682401
    2. '<|end|>' → logprob: -8.375399589538574
    3. ')' → logprob: -9.875399589538574
    4. 'bad' → logprob: -10.000399589538574
    5. ' print' → logprob: -10.500399589538574
    6. '
' → logprob: -11.125399589538574
    7. 'for' → logprob: -11.375399589538574
    8. '   ' → logprob: -11.875399589538574
    9. ']' → logprob: -12.375399589538574
    10. '```' → logprob: -13.000399589538574

Token 251: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00071695790393278
    2. '   ' → logprob: -8.000717163085938
    3. 'for' → logprob: -8.125717163085938
    4. 'if' → logprob: -10.750717163085938
    5. '#' → logprob: -11.000717163085938
    6. 'bad' → logprob: -11.750717163085938
    7. '    
' → logprob: -12.000717163085938
    8. 'else' → logprob: -12.375717163085938
    9. 'correct' → logprob: -12.500717163085938
    10. 'pass' → logprob: -12.500717163085938

Token 252: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06575684249401093
    2. '#' (adapté à ' #') → logprob: -2.9407567977905273
    3. '   ' → logprob: -5.190756797790527
    4. 'for' → logprob: -5.315756797790527
    5. 'bad' → logprob: -9.190756797790527
    6. 'if' → logprob: -10.190756797790527
    7. 'pass' → logprob: -10.565756797790527
    8. '    
' → logprob: -10.565756797790527
    9. '#print' → logprob: -10.815756797790527
    10. 'correct' → logprob: -11.065756797790527

Token 253: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.026047367602586746
    2. 'for' → logprob: -4.151047229766846
    3. 'Check' → logprob: -4.651047229766846
    4. '   ' → logprob: -8.901047706604004
    5. 'print' → logprob: -9.276047706604004
    6. '
' → logprob: -9.901047706604004
    7. 'check' → logprob: -10.401047706604004
    8. ' #' → logprob: -10.901047706604004
    9. 'if' → logprob: -11.776047706604004
    10. ' for' → logprob: -12.151047706604004

Token 254: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.12753723561763763
    2. ' all' → logprob: -2.127537250518799
    3. '#' → logprob: -8.37753677368164
    4. 'for' → logprob: -8.87753677368164
    5. ' ' → logprob: -9.62753677368164
    6. 'two' → logprob: -9.75253677368164
    7. ' two' → logprob: -10.37753677368164
    8. 'double' → logprob: -10.37753677368164
    9. ' for' → logprob: -11.12753677368164
    10. '   ' → logprob: -11.75253677368164

Token 255: ' adjacent' (ID: 39069)
  Prédit: 'double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'double' → logprob: -0.10040269792079926
    2. 'two' → logprob: -2.975402593612671
    3. 'single' → logprob: -3.475402593612671
    4. ' double' → logprob: -4.60040283203125
    5. 'trans' → logprob: -6.60040283203125
    6. ' two' → logprob: -7.60040283203125
    7. 'pairs' → logprob: -7.72540283203125
    8. 'pair' → logprob: -8.10040283203125
    9. ' single' → logprob: -8.35040283203125
    10. '#' → logprob: -8.47540283203125

Token 256: ' trans' (ID: 1643)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.07655840367078781
    2. 'trans' → logprob: -3.5765583515167236
    3. ' trans' → logprob: -4.451558589935303
    4. 'digits' → logprob: -4.701558589935303
    5. '_digit' → logprob: -4.826558589935303
    6. ' digit' → logprob: -5.576558589935303
    7. 'swap' → logprob: -5.576558589935303
    8. '-digit' → logprob: -5.826558589935303
    9. 'pos' → logprob: -6.201558589935303
    10. ' swaps' → logprob: -6.951558589935303

Token 257: 'position' (ID: 4504)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.23591476678848267
    2. 'position' → logprob: -1.610914707183838
    3. 'pose' → logprob: -4.610914707183838
    4. 'pos' → logprob: -8.110915184020996
    5. 'p' → logprob: -9.735915184020996
    6. '

' → logprob: -10.485915184020996
    7. '#' → logprob: -10.735915184020996
    8. 'posit' → logprob: -11.110915184020996
    9. 'posals' → logprob: -11.610915184020996
    10. '_positions' → logprob: -11.735915184020996

Token 258: ' errors' (ID: 10664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48919960856437683
    2. ' errors' → logprob: -1.6141996383666992
    3. ' for' → logprob: -2.364199638366699
    4. 'errors' → logprob: -2.989199638366699
    5. 'for' → logprob: -3.364199638366699
    6. ' s' → logprob: -5.364199638366699
    7. ' of' → logprob: -6.864199638366699
    8. '   ' → logprob: -7.114199638366699
    9. '_errors' → logprob: -7.114199638366699
    10. ' ' → logprob: -7.989199638366699

Token 259: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018398716347292066
    2. 'for' → logprob: -6.501839637756348
    3. ' for' → logprob: -8.001839637756348
    4. '       ' → logprob: -14.501839637756348
    5. '	for' → logprob: -14.501839637756348
    6. ',' → logprob: -14.751839637756348
    7. 'found' → logprob: -14.876839637756348
    8. '    
' → logprob: -15.501839637756348
    9. '  ' → logprob: -16.251840591430664
    10. '(' → logprob: -16.251840591430664

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013798395171761513
    2. 'for' → logprob: -4.638798236846924
    3. ' for' → logprob: -5.513798236846924
    4. '    
' → logprob: -13.513798713684082
    5. '	for' → logprob: -13.638798713684082
    6. ',' → logprob: -15.013798713684082
    7. '       ' → logprob: -15.638798713684082
    8. '(' → logprob: -16.388797760009766
    9. '<|end|>' → logprob: -16.388797760009766
    10. ':' → logprob: -16.888797760009766

Token 261: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007391115068458021
    2. '   ' → logprob: -8.000739097595215
    3. 'trans' → logprob: -8.625739097595215
    4. ' for' → logprob: -9.000739097595215
    5. 'det' → logprob: -9.250739097595215
    6. 'found' → logprob: -13.500739097595215
    7. 'adj' → logprob: -13.750739097595215
    8. 'transpose' → logprob: -14.000739097595215
    9. ' detected' → logprob: -14.125739097595215
    10. 'swap' → logprob: -15.875739097595215

Token 262: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0836220383644104
    2. 'i' → logprob: -2.7086219787597656
    3. ' pos' → logprob: -4.583621978759766
    4. ' i' → logprob: -5.708621978759766
    5. 'idx' → logprob: -10.333621978759766
    6. 'k' → logprob: -11.458621978759766
    7. 'p' → logprob: -12.458621978759766
    8. 'adj' → logprob: -12.708621978759766
    9. ' idx' → logprob: -13.208621978759766
    10. 'j' → logprob: -13.583621978759766

Token 263: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004319804720580578
    2. 'in' → logprob: -7.750432014465332
    3. ' ' → logprob: -14.375432014465332
    4. 'range' → logprob: -15.000432014465332
    5. 'n' → logprob: -15.500432014465332
    6. '
' → logprob: -16.750431060791016
    7. '```' → logprob: -17.000431060791016
    8. 'd' → logprob: -17.375431060791016
    9. ',' → logprob: -17.500431060791016
    10. '1' → logprob: -17.625431060791016

Token 264: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. ' ' → logprob: -19.12520408630371
    4. '0' → logprob: -19.37520408630371
    5. '(range' → logprob: -19.87520408630371
    6. '
' → logprob: -20.50020408630371
    7. '	range' → logprob: -21.37520408630371
    8. '   ' → logprob: -21.50020408630371
    9. 'ran' → logprob: -22.12520408630371
    10. '[' → logprob: -22.12520408630371

Token 265: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.002481127390637994
    2. '(' → logprob: -6.002480983734131
    3. ' ' → logprob: -12.502481460571289
    4. '5' → logprob: -14.502481460571289
    5. 'len' → logprob: -14.502481460571289
    6. '(len' → logprob: -14.752481460571289
    7. '   ' → logprob: -15.127481460571289
    8. '```' → logprob: -17.87748146057129
    9. '
' → logprob: -18.25248146057129
    10. 'four' → logprob: -18.75248146057129

Token 266: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.4849443838757e-06
    2. '5' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.625004768371582
    4. 'len' → logprob: -15.875004768371582
    5. '   ' → logprob: -16.250003814697266
    6. 'four' → logprob: -19.187503814697266
    7. '```' → logprob: -19.562503814697266
    8. '４' → logprob: -20.187503814697266
    9. '1' → logprob: -20.375003814697266
    10. '(' → logprob: -20.625003814697266

Token 267: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13425558805465698
    2. '):' → logprob: -2.2592556476593018
    3. '-' → logprob: -4.384255409240723
    4. ' -' → logprob: -4.759255409240723
    5. '   ' → logprob: -9.259255409240723
    6. ' ):
' → logprob: -10.634255409240723
    7. '):
' → logprob: -11.384255409240723
    8. ' ):' → logprob: -11.634255409240723
    9. ')' → logprob: -12.384255409240723
    10. '       ' → logprob: -12.884255409240723

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09187622368335724
    2. '   ' → logprob: -2.466876268386841
    3. ' error' → logprob: -5.966876029968262
    4. 'error' → logprob: -8.966876029968262
    5. ' if' → logprob: -9.091876029968262
    6. ' trans' → logprob: -9.466876029968262
    7. '    ' → logprob: -11.591876029968262
    8. ' for' → logprob: -11.591876029968262
    9. ',' → logprob: -12.341876029968262
    10. '           ' → logprob: -12.466876029968262

Token 269: ' error' (ID: 2915)
  Prédit: 'error'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'error' (adapté à ' error') → logprob: -0.04429064318537712
    2. 'sw' → logprob: -3.794290542602539
    3. 'trans' → logprob: -4.419290542602539
    4. 'ss' → logprob: -5.294290542602539
    5. ' error' → logprob: -6.794290542602539
    6. '   ' → logprob: -7.044290542602539
    7. 'if' → logprob: -7.544290542602539
    8. 'ts' → logprob: -7.794290542602539
    9. '       ' → logprob: -8.544290542602539
    10. 'swap' → logprob: -8.544290542602539

Token 270: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.250000953674316
    3. '_s' → logprob: -14.875000953674316
    4. 'ss' → logprob: -16.750001907348633
    5. '	ss' → logprob: -17.250001907348633
    6. '_ps' → logprob: -18.250001907348633
    7. '_sr' → logprob: -18.250001907348633
    8. ' =' → logprob: -18.625001907348633
    9. '_pos' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.000001907348633

Token 271: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011951648048125207
    2. 'N' → logprob: -10.50011920928955
    3. 'error' → logprob: -10.87511920928955
    4. '=' → logprob: -11.12511920928955
    5. 's' → logprob: -11.25011920928955
    6. '[' → logprob: -11.25011920928955
    7. '[i' → logprob: -11.62511920928955
    8. '_error' → logprob: -12.00011920928955
    9. ' =' → logprob: -12.75011920928955
    10. '_n' → logprob: -13.12511920928955

Token 272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10049724578857422
    2. ' =' → logprob: -2.350497245788574
    3. '[i' → logprob: -8.225497245788574
    4. '=i' → logprob: -11.225497245788574
    5. '[' → logprob: -12.350497245788574
    6. '=[' → logprob: -12.600497245788574
    7. '=s' → logprob: -15.350497245788574
    8. ' ' → logprob: -15.850497245788574
    9. 's' → logprob: -15.850497245788574
    10. 'i' → logprob: -15.975497245788574

Token 273: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.02054574340581894
    2. ' ss' → logprob: -3.895545721054077
    3. '   ' → logprob: -13.645545959472656
    4. ' ' → logprob: -14.270545959472656
    5. '	ss' → logprob: -14.770545959472656
    6. 'sss' → logprob: -14.895545959472656
    7. 'digits' → logprob: -15.020545959472656
    8. '(ss' → logprob: -15.395545959472656
    9. 'ssid' → logprob: -15.770545959472656
    10. '  ' → logprob: -15.895545959472656

Token 274: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05357853323221207
    2. '[:' → logprob: -4.1785783767700195
    3. '[i' → logprob: -4.4285783767700195
    4. '[' → logprob: -4.6785783767700195
    5. 's' → logprob: -5.4285783767700195
    6. '_ss' → logprob: -6.0535783767700195
    7. 'sn' → logprob: -6.1785783767700195
    8. 'ss' → logprob: -6.3035783767700195
    9. '[:]' → logprob: -6.3035783767700195
    10. '[n' → logprob: -7.9285783767700195

Token 275: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.5759397745132446
    2. '[:]' → logprob: -0.8259397745132446
    3. ':' → logprob: -15.325940132141113
    4. '[:-' → logprob: -15.575940132141113
    5. '[' → logprob: -17.700939178466797
    6. '[]' → logprob: -18.575939178466797
    7. ' [:' → logprob: -19.075939178466797
    8. '.copy' → logprob: -19.950939178466797
    9. '[i' → logprob: -20.200939178466797
    10. '[::-' → logprob: -21.325939178466797

Token 276: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.04093751311302185
    2. ']' → logprob: -3.4159374237060547
    3. '       ' → logprob: -5.540937423706055
    4. '   ' → logprob: -6.665937423706055
    5. '
' → logprob: -7.665937423706055
    6. ')
' → logprob: -8.040937423706055
    7. '()
' → logprob: -8.290937423706055
    8. ']
' → logprob: -8.540937423706055
    9. '[i' → logprob: -8.665937423706055
    10. 'i' → logprob: -8.790937423706055

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036763211246579885
    2. 'error' → logprob: -6.003676414489746
    3. ' error' → logprob: -6.753676414489746
    4. '   ' → logprob: -10.628676414489746
    5. '	error' → logprob: -13.003676414489746
    6. '<|end|>' → logprob: -13.128676414489746
    7. '#error' → logprob: -14.003676414489746
    8. '           ' → logprob: -14.253676414489746
    9. 'rror' → logprob: -14.503676414489746
    10. '[' → logprob: -14.503676414489746

Token 278: ' error' (ID: 2915)
  Prédit: 'error'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'error' (adapté à ' error') → logprob: -0.0011841575615108013
    2. ' error' → logprob: -6.751183986663818
    3. '       ' → logprob: -11.376184463500977
    4. '   ' → logprob: -13.001184463500977
    5. '	error' → logprob: -16.001184463500977
    6. '           ' → logprob: -17.001184463500977
    7. 'temp' → logprob: -18.376184463500977
    8. '    ' → logprob: -18.751184463500977
    9. '_error' → logprob: -18.751184463500977
    10. ' ' → logprob: -18.876184463500977

Token 279: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -5.9153885558771435e-06
    2. '[i' → logprob: -12.750005722045898
    3. 'ss' → logprob: -12.875005722045898
    4. '_s' → logprob: -15.875005722045898
    5. '	ss' → logprob: -16.3750057220459
    6. 'error' → logprob: -17.2500057220459
    7. '[' → logprob: -17.3750057220459
    8. '_error' → logprob: -17.7500057220459
    9. '_sm' → logprob: -18.1250057220459
    10. '```' → logprob: -18.3750057220459

Token 280: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003737610299140215
    2. '[i' → logprob: -6.378737449645996
    3. '_ss' → logprob: -7.253737449645996
    4. 's' → logprob: -7.628737449645996
    5. '_n' → logprob: -8.128737449645996
    6. 'm' → logprob: -8.378737449645996
    7. 'sm' → logprob: -9.003737449645996
    8. 'ss' → logprob: -9.753737449645996
    9. '_i' → logprob: -10.003737449645996
    10. 'sn' → logprob: -10.128737449645996

Token 281: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1160349458805285e-05
    2. 'i' → logprob: -12.125011444091797
    3. '[' → logprob: -12.625011444091797
    4. ',i' → logprob: -14.500011444091797
    5. '   ' → logprob: -14.750011444091797
    6. '
' → logprob: -15.250011444091797
    7. '(i' → logprob: -15.375011444091797
    8. '[
' → logprob: -15.750011444091797
    9. ',' → logprob: -15.875011444091797
    10. '=' → logprob: -15.875011444091797

Token 282: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0021961715538054705
    2. '+' → logprob: -6.127196311950684
    3. '],
' → logprob: -12.377196311950684
    4. '+i' → logprob: -13.252196311950684
    5. ' +' → logprob: -13.502196311950684
    6. ',' → logprob: -13.627196311950684
    7. ']' → logprob: -13.627196311950684
    8. ' ],' → logprob: -13.877196311950684
    9. ' ' → logprob: -16.502195358276367
    10. '>,' → logprob: -16.627195358276367

Token 283: ' error' (ID: 2915)
  Prédit: 'error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'error' → logprob: -0.04859872907400131
    2. ' error' → logprob: -3.0485987663269043
    3. 'ss' → logprob: -11.423598289489746
    4. '       ' → logprob: -16.173599243164062
    5. '	error' → logprob: -16.298599243164062
    6. ' ss' → logprob: -16.298599243164062
    7. 'rror' → logprob: -17.173599243164062
    8. ' ' → logprob: -18.173599243164062
    9. '(error' → logprob: -18.298599243164062
    10. '           ' → logprob: -18.423599243164062

Token 284: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -0.000181372175575234
    2. 'ss' → logprob: -8.625181198120117
    3. '_error' → logprob: -14.250181198120117
    4. 'error' → logprob: -14.250181198120117
    5. 'SS' → logprob: -15.750181198120117
    6. ' ss' → logprob: -16.125181198120117
    7. '_s' → logprob: -16.125181198120117
    8. '	ss' → logprob: -16.375181198120117
    9. 's' → logprob: -17.250181198120117
    10. ':ss' → logprob: -17.250181198120117

Token 285: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3904060125350952
    2. '_ss' → logprob: -1.1404060125350952
    3. 'ss' → logprob: -5.765406131744385
    4. '_n' → logprob: -9.390405654907227
    5. 'i' → logprob: -9.390405654907227
    6. 's' → logprob: -9.515405654907227
    7. '_' → logprob: -10.390405654907227
    8. '_s' → logprob: -10.390405654907227
    9. 'Ss' → logprob: -11.265405654907227
    10. '[i' → logprob: -11.390405654907227

Token 286: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.729906196298543e-06
    2. 'i' → logprob: -11.875009536743164
    3. 'error' → logprob: -13.000009536743164
    4. '[' → logprob: -15.375009536743164
    5. ' i' → logprob: -16.125009536743164
    6. ' [' → logprob: -16.375009536743164
    7. '
' → logprob: -16.500009536743164
    8. '{i' → logprob: -17.500009536743164
    9. '[
' → logprob: -17.500009536743164
    10. ' error' → logprob: -17.875009536743164

Token 287: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014120421838015318
    2. ' +' → logprob: -9.250141143798828
    3. '+i' → logprob: -10.250141143798828
    4. 'i' → logprob: -11.625141143798828
    5. '1' → logprob: -14.750141143798828
    6. '+
' → logprob: -16.000141143798828
    7. '[i' → logprob: -16.125141143798828
    8. ' i' → logprob: -16.125141143798828
    9. '(i' → logprob: -17.375141143798828
    10. '   ' → logprob: -18.250141143798828

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.250005722045898
    3. 'i' → logprob: -15.375005722045898
    4. '```' → logprob: -15.875005722045898
    5. '   ' → logprob: -16.8750057220459
    6. '0' → logprob: -17.2500057220459
    7. ']' → logprob: -18.3750057220459
    8. '-' → logprob: -18.5000057220459
    9. '<|end|>' → logprob: -18.6250057220459
    10. '  ' → logprob: -18.7500057220459

Token 289: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41386130452156067
    2. ']' → logprob: -1.2888612747192383
    3. ' =' → logprob: -2.7888612747192383
    4. ']=' → logprob: -6.538861274719238
    5. 'error' → logprob: -8.163861274719238
    6. ')' → logprob: -9.538861274719238
    7. '<|end|>' → logprob: -11.663861274719238
    8. ' ]' → logprob: -12.538861274719238
    9. ' error' → logprob: -12.913861274719238
    10. ')=' → logprob: -13.663861274719238

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692862749099731
    2. ' =' → logprob: -2.1269285678863525
    3. '=

' → logprob: -16.501928329467773
    4. '<|end|>' → logprob: -16.501928329467773
    5. 'error' → logprob: -16.751928329467773
    6. ',' → logprob: -16.751928329467773
    7. '=
' → logprob: -17.001928329467773
    8. '.=' → logprob: -17.126928329467773
    9. ' ' → logprob: -17.501928329467773
    10. '    ' → logprob: -18.376928329467773

Token 291: ' error' (ID: 2915)
  Prédit: 'error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'error' → logprob: -0.02054235339164734
    2. ' error' → logprob: -3.8955423831939697
    3. '
' → logprob: -16.02054214477539
    4. 'ss' → logprob: -16.14554214477539
    5. '	error' → logprob: -16.52054214477539
    6. '(error' → logprob: -16.89554214477539
    7. ' ' → logprob: -17.27054214477539
    8. '
' → logprob: -18.02054214477539
    9. '   ' → logprob: -18.27054214477539
    10. 'rror' → logprob: -18.52054214477539

Token 292: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -0.00044068231363780797
    2. 'ss' → logprob: -7.87544059753418
    3. 'error' → logprob: -9.87544059753418
    4. '_error' → logprob: -12.75044059753418
    5. 'SS' → logprob: -13.62544059753418
    6. '[' → logprob: -13.75044059753418
    7. '```' → logprob: -14.25044059753418
    8. '_' → logprob: -14.37544059753418
    9. 'Ss' → logprob: -15.25044059753418
    10. ' ss' → logprob: -15.50044059753418

Token 293: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005212767515331507
    2. '_ss' → logprob: -5.380212783813477
    3. 'error' → logprob: -8.755212783813477
    4. 'ss' → logprob: -8.880212783813477
    5. '_n' → logprob: -9.255212783813477
    6. 'ns' → logprob: -9.505212783813477
    7. 'r' → logprob: -11.005212783813477
    8. 'rror' → logprob: -11.005212783813477
    9. '_error' → logprob: -11.380212783813477
    10. '_ns' → logprob: -11.755212783813477

Token 294: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.054907217621803284
    2. 'i' → logprob: -2.9299073219299316
    3. ' i' → logprob: -10.929906845092773
    4. 'error' → logprob: -13.054906845092773
    5. '(i' → logprob: -13.304906845092773
    6. '	i' → logprob: -14.179906845092773
    7. ' [' → logprob: -14.304906845092773
    8. '{i' → logprob: -14.429906845092773
    9. '```' → logprob: -15.304906845092773
    10. '[' → logprob: -15.429906845092773

Token 295: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008614341728389263
    2. 'i' → logprob: -5.008614540100098
    3. '[i' → logprob: -6.883614540100098
    4. '+i' → logprob: -7.133614540100098
    5. '(i' → logprob: -10.383614540100098
    6. ' +' → logprob: -11.133614540100098
    7. ' i' → logprob: -11.508614540100098
    8. ',i' → logprob: -12.383614540100098
    9. ']+' → logprob: -13.383614540100098
    10. '+
' → logprob: -13.383614540100098

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5120287066092715e-05
    2. ' ' → logprob: -10.500035285949707
    3. '+' → logprob: -12.750035285949707
    4. '
' → logprob: -13.875035285949707
    5. '   ' → logprob: -13.937535285949707
    6. '```' → logprob: -14.250035285949707
    7. '' → logprob: -15.750035285949707
    8. '...' → logprob: -15.875035285949707
    9. '  ' → logprob: -16.00003433227539
    10. '[' → logprob: -16.37503433227539

Token 297: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039766079862602055
    2. '],' → logprob: -8.625397682189941
    3. ',error' → logprob: -8.625397682189941
    4. 'error' → logprob: -10.875397682189941
    5. ' ,' → logprob: -11.000397682189941
    6. ' error' → logprob: -13.625397682189941
    7. ',
' → logprob: -13.875397682189941
    8. ']' → logprob: -15.125397682189941
    9. 'Error' → logprob: -16.500396728515625
    10. '‌,' → logprob: -16.500396728515625

Token 298: ' error' (ID: 2915)
  Prédit: 'error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'error' → logprob: -0.01416350994259119
    2. ' error' → logprob: -4.264163494110107
    3. '	error' → logprob: -17.514163970947266
    4. ' ' → logprob: -19.014163970947266
    5. '
' → logprob: -20.139163970947266
    6. '(error' → logprob: -20.764163970947266
    7. '   ' → logprob: -20.889163970947266
    8. ',error' → logprob: -21.139163970947266
    9. '  ' → logprob: -21.639163970947266
    10. '```' → logprob: -21.889163970947266

Token 299: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -0.0015398615505546331
    2. 'ss' → logprob: -6.501539707183838
    3. 'error' → logprob: -10.251540184020996
    4. '[i' → logprob: -14.126540184020996
    5. '_error' → logprob: -14.751540184020996
    6. ' ss' → logprob: -15.376540184020996
    7. ' error' → logprob: -15.376540184020996
    8. 'SS' → logprob: -15.501540184020996
    9. 'i' → logprob: -16.00153923034668
    10. '_s' → logprob: -16.25153923034668

Token 300: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14021287858486176
    2. '_ss' → logprob: -2.3902127742767334
    3. 'ss' → logprob: -3.2652127742767334
    4. 's' → logprob: -7.6402130126953125
    5. 'i' → logprob: -8.515213012695312
    6. 'ns' → logprob: -9.265213012695312
    7. 'error' → logprob: -9.765213012695312
    8. 'sn' → logprob: -10.015213012695312
    9. '_n' → logprob: -10.015213012695312
    10. 'nn' → logprob: -10.890213012695312

Token 301: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019697926472872496
    2. 'i' → logprob: -6.251969814300537
    3. 'error' → logprob: -10.126969337463379
    4. '[' → logprob: -14.751969337463379
    5. ' i' → logprob: -14.876969337463379
    6. '(i' → logprob: -15.501969337463379
    7. '{i' → logprob: -16.251970291137695
    8. '```' → logprob: -16.751970291137695
    9. '	i' → logprob: -17.126970291137695
    10. ' error' → logprob: -18.001970291137695

Token 302: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029154305811971426
    2. ']
' → logprob: -5.877915382385254
    3. '<|end|>' → logprob: -9.377915382385254
    4. ' ]' → logprob: -11.877915382385254
    5. ']

' → logprob: -11.877915382385254
    6. '       ' → logprob: -11.877915382385254
    7. ']
' → logprob: -13.252915382385254
    8. ')' → logprob: -14.127915382385254
    9. '<|end|>' → logprob: -14.502915382385254
    10. '']' → logprob: -14.627915382385254

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019903331995010376
    2. '   ' → logprob: -4.019903182983398
    3. '
' → logprob: -6.394903182983398
    4. '           ' → logprob: -10.144903182983398
    5. 'if' → logprob: -10.894903182983398
    6. '        
' → logprob: -11.519903182983398
    7. '```' → logprob: -12.394903182983398
    8. ' if' → logprob: -12.769903182983398
    9. '<|end|>' → logprob: -13.519903182983398
    10. '    
' → logprob: -13.644903182983398

Token 304: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004990590969100595
    2. ' if' → logprob: -7.625499248504639
    3. '   ' → logprob: -11.50049877166748
    4. '       ' → logprob: -14.62549877166748
    5. '           ' → logprob: -15.12549877166748
    6. '```' → logprob: -15.62549877166748
    7. '
' → logprob: -16.875499725341797
    8. '	if' → logprob: -17.125499725341797
    9. 'det' → logprob: -18.000499725341797
    10. 'If' → logprob: -18.250499725341797

Token 305: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.2014208436012268
    2. 'check' → logprob: -1.701420783996582
    3. ' not' → logprob: -12.576420783996582
    4. '   ' → logprob: -13.701420783996582
    5. '(check' → logprob: -14.076420783996582
    6. ' ' → logprob: -14.201420783996582
    7. 'not' → logprob: -14.326420783996582
    8. '	check' → logprob: -14.826420783996582
    9. '    ' → logprob: -16.0764217376709
    10. '
' → logprob: -16.5764217376709

Token 306: '(error' (ID: 12157)
  Prédit: '(error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(error' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.625001907348633
    3. 'error' → logprob: -14.000001907348633
    4. ' (' → logprob: -16.125001907348633
    5. '(
' → logprob: -17.000001907348633
    6. ' error' → logprob: -17.500001907348633
    7. '$error' → logprob: -17.875001907348633
    8. ',error' → logprob: -18.625001907348633
    9. '#error' → logprob: -18.875001907348633
    10. '```' → logprob: -18.875001907348633

Token 307: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -0.0003864630125463009
    2. '(error' → logprob: -8.375386238098145
    3. '_error' → logprob: -10.000386238098145
    4. 'ss' → logprob: -10.250386238098145
    5. 'error' → logprob: -10.250386238098145
    6. '_s' → logprob: -10.250386238098145
    7. '(ss' → logprob: -13.000386238098145
    8. ' error' → logprob: -14.375386238098145
    9. 's' → logprob: -14.625386238098145
    10. 'Ss' → logprob: -15.500386238098145

Token 308: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009911301312968135
    2. '_ss' → logprob: -7.750991344451904
    3. 'error' → logprob: -8.625990867614746
    4. '_n' → logprob: -9.125990867614746
    5. 's' → logprob: -9.750990867614746
    6. '_error' → logprob: -9.875990867614746
    7. '_s' → logprob: -10.125990867614746
    8. 'm' → logprob: -10.500990867614746
    9. 'N' → logprob: -10.625990867614746
    10. 'ns' → logprob: -11.250990867614746

Token 309: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018375257786829025
    2. ')==' → logprob: -9.000184059143066
    3. '==' → logprob: -10.375184059143066
    4. '()' → logprob: -11.250184059143066
    5. ' ==' → logprob: -11.500184059143066
    6. ' )' → logprob: -12.375184059143066
    7. '())' → logprob: -13.875184059143066
    8. ')!=' → logprob: -14.750184059143066
    9. '()==' → logprob: -15.625184059143066
    10. '）' → logprob: -16.62518310546875

Token 310: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20141597092151642
    2. '==' → logprob: -1.701416015625
    3. '=' → logprob: -14.326416015625
    4. ' ' → logprob: -14.701416015625
    5. ')==' → logprob: -14.826416015625
    6. '==
' → logprob: -14.951416015625
    7. '   ' → logprob: -15.076416015625
    8. ')' → logprob: -15.701416015625
    9. ']==' → logprob: -15.826416015625
    10. '===' → logprob: -16.326416015625

Token 311: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.875431060791016
    4. '۰' → logprob: -18.375431060791016
    5. '00' → logprob: -18.937931060791016
    6. '[' → logprob: -19.000431060791016
    7. '=' → logprob: -19.125431060791016
    8. '  ' → logprob: -19.250431060791016
    9. '000' → logprob: -19.500431060791016
    10. '```' → logprob: -20.187931060791016

Token 312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. '[' → logprob: -16.750024795532227
    4. '۰' → logprob: -16.937524795532227
    5. '   ' → logprob: -17.062524795532227
    6. '<|end|>' → logprob: -17.250024795532227
    7. '  ' → logprob: -17.562524795532227
    8. '1' → logprob: -18.250024795532227
    9. ')' → logprob: -18.375024795532227
    10. '০' → logprob: -18.437524795532227

Token 313: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033819619566202164
    2. ':
' → logprob: -3.5338196754455566
    3. '           ' → logprob: -5.533819675445557
    4. '       ' → logprob: -9.783819198608398
    5. '):
' → logprob: -11.783819198608398
    6. '               ' → logprob: -11.783819198608398
    7. '          ' → logprob: -11.908819198608398
    8. '):' → logprob: -11.908819198608398
    9. '=' → logprob: -12.533819198608398
    10. ':

' → logprob: -12.533819198608398

Token 314: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014370749704539776
    2. '               ' → logprob: -9.125144004821777
    3. ' continue' → logprob: -11.375144004821777
    4. 'continue' → logprob: -11.875144004821777
    5. ' detected' → logprob: -12.000144004821777
    6. '       ' → logprob: -12.875144004821777
    7. '          ' → logprob: -13.500144004821777
    8. '0' → logprob: -14.000144004821777
    9. '```' → logprob: -14.000144004821777
    10. ' break' → logprob: -14.250144004821777

Token 315: ' detected' (ID: 28357)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6153116226196289
    2. ' detected' → logprob: -1.240311622619629
    3. '           ' → logprob: -2.365311622619629
    4. 'det' → logprob: -2.990311622619629
    5. '       ' → logprob: -3.740311622619629
    6. '   ' → logprob: -6.490311622619629
    7. 'bad' → logprob: -7.865311622619629
    8. ' bad' → logprob: -8.240311622619629
    9. ' continue' → logprob: -10.365311622619629
    10. ' ' → logprob: -10.490311622619629

Token 316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760647654533386
    2. ' =' → logprob: -0.8260647654533386
    3. '=False' → logprob: -9.076065063476562
    4. '==' → logprob: -12.076065063476562
    5. '=True' → logprob: -13.701065063476562
    6. ':' → logprob: -13.826065063476562
    7. ' ==' → logprob: -14.076065063476562
    8. '       ' → logprob: -14.201065063476562
    9. '           ' → logprob: -14.451065063476562
    10. '               ' → logprob: -14.826065063476562

Token 317: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0003377270477358252
    2. ' False' → logprob: -8.000337600708008
    3. 'True' → logprob: -13.000337600708008
    4. '   ' → logprob: -18.875337600708008
    5. '(False' → logprob: -18.875337600708008
    6. '=False' → logprob: -19.625337600708008
    7. ' True' → logprob: -20.500337600708008
    8. 'F' → logprob: -21.375337600708008
    9. 'false' → logprob: -21.500337600708008
    10. '       ' → logprob: -21.500337600708008

Token 318: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015050210640765727
    2. '               ' → logprob: -9.000150680541992
    3. '<|end|>' → logprob: -11.375150680541992
    4. '       ' → logprob: -12.125150680541992
    5. '		' → logprob: -12.500150680541992
    6. 'break' → logprob: -12.875150680541992
    7. '	       ' → logprob: -14.500150680541992
    8. 'continue' → logprob: -14.750150680541992
    9. '                   ' → logprob: -14.875150680541992
    10. '          ' → logprob: -14.875150680541992

Token 319: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002752790169324726
    2. '       ' → logprob: -8.375275611877441
    3. '               ' → logprob: -10.625275611877441
    4. 'break' → logprob: -12.125275611877441
    5. ' break' → logprob: -12.250275611877441
    6. '```' → logprob: -12.375275611877441
    7. '<|end|>' → logprob: -12.750275611877441
    8. '   ' → logprob: -13.250275611877441
    9. 'continue' → logprob: -14.875275611877441
    10. '          ' → logprob: -15.250275611877441

Token 320: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.45836225152015686
    2. '           ' → logprob: -1.2083622217178345
    3. ' break' → logprob: -2.708362340927124
    4. '       ' → logprob: -6.458362102508545
    5. '               ' → logprob: -7.208362102508545
    6. '   ' → logprob: -10.458362579345703
    7. '	break' → logprob: -11.708362579345703
    8. '```' → logprob: -12.958362579345703
    9. 'continue' → logprob: -13.958362579345703
    10. '		' → logprob: -15.208362579345703

Token 321: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40664243698120117
    2. 'if' → logprob: -1.1566424369812012
    3. ' if' → logprob: -4.156642436981201
    4. '<|end|>' → logprob: -6.406642436981201
    5. ')' → logprob: -6.781642436981201
    6. '    
' → logprob: -8.03164291381836
    7. '```' → logprob: -8.90664291381836
    8. '       ' → logprob: -9.03164291381836
    9. 'for' → logprob: -9.15664291381836
    10. '
' → logprob: -9.15664291381836

Token 322: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38363587856292725
    2. '   ' → logprob: -1.2586358785629272
    3. ' if' → logprob: -3.383635997772217
    4. '<|end|>' → logprob: -8.633635520935059
    5. 'print' → logprob: -8.883635520935059
    6. 'for' → logprob: -9.633635520935059
    7. ')' → logprob: -9.633635520935059
    8. '    
' → logprob: -9.633635520935059
    9. '```' → logprob: -9.758635520935059
    10. '
' → logprob: -10.633635520935059

Token 323: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00886711198836565
    2. '   ' → logprob: -5.258867263793945
    3. ' if' → logprob: -5.633867263793945
    4. ')' → logprob: -10.633867263793945
    5. '    
' → logprob: -11.133867263793945
    6. '
' → logprob: -12.133867263793945
    7. 'else' → logprob: -13.383867263793945
    8. '```' → logprob: -13.508867263793945
    9. '  
' → logprob: -14.133867263793945
    10. '       ' → logprob: -14.383867263793945

Token 324: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03364869952201843
    2. 'not' → logprob: -3.408648729324341
    3. ' detected' → logprob: -13.908648490905762
    4. '   ' → logprob: -14.283648490905762
    5. ' ' → logprob: -14.408648490905762
    6. '
' → logprob: -14.783648490905762
    7. '	not' → logprob: -15.783648490905762
    8. '!' → logprob: -15.908648490905762
    9. '(not' → logprob: -16.408649444580078
    10. ' ' → logprob: -16.533649444580078

Token 325: ' detected' (ID: 28357)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.5759406685829163
    2. ' detected' → logprob: -0.8259406685829163
    3. '_detect' → logprob: -13.82594108581543
    4. 'detect' → logprob: -16.32594108581543
    5. 'Detected' → logprob: -16.32594108581543
    6. ' det' → logprob: -16.57594108581543
    7. 'etected' → logprob: -17.82594108581543
    8. '.detect' → logprob: -20.07594108581543
    9. 'd' → logprob: -20.20094108581543
    10. ' ' → logprob: -20.32594108581543

Token 326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39245903491973877
    2. '       ' → logprob: -1.1424590349197388
    3. ':
' → logprob: -5.892458915710449
    4. '=' → logprob: -7.017458915710449
    5. ' +=' → logprob: -7.267458915710449
    6. '+=' → logprob: -7.767458915710449
    7. '<|end|>' → logprob: -8.26745891571045
    8. '==' → logprob: -8.64245891571045
    9. ' =' → logprob: -9.14245891571045
    10. '   ' → logprob: -9.89245891571045

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00157127995043993
    2. 'bad' → logprob: -6.751571178436279
    3. '   ' → logprob: -8.376571655273438
    4. ' bad' → logprob: -8.751571655273438
    5. '```' → logprob: -11.876571655273438
    6. '           ' → logprob: -12.376571655273438
    7. '      ' → logprob: -14.626571655273438
    8. '     ' → logprob: -15.251571655273438
    9. 'b' → logprob: -15.626571655273438
    10. '        
' → logprob: -15.876571655273438

Token 328: ' bad' (ID: 4790)
  Prédit: 'bad'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bad' (adapté à ' bad') → logprob: -0.08338571339845657
    2. ' bad' → logprob: -2.833385705947876
    3. '   ' → logprob: -4.333385944366455
    4. '       ' → logprob: -4.833385944366455
    5. ' ' → logprob: -10.208385467529297
    6. '           ' → logprob: -10.208385467529297
    7. 'b' → logprob: -11.708385467529297
    8. '```' → logprob: -12.458385467529297
    9. '    ' → logprob: -12.708385467529297
    10. '  ' → logprob: -12.708385467529297

Token 329: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.75
    3. '_continue' → logprob: -16.875
    4. 'count' → logprob: -17.25
    5. '_code' → logprob: -18.5
    6. '_counts' → logprob: -18.625
    7. ' _' → logprob: -18.875
    8. '_cont' → logprob: -18.875
    9. '_c' → logprob: -19.125
    10. '__' → logprob: -19.375

Token 330: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10035385936498642
    2. ' +=' → logprob: -2.350353956222534
    3. '+' → logprob: -8.850354194641113
    4. '   ' → logprob: -13.600354194641113
    5. '=' → logprob: -13.975354194641113
    6. ']+=' → logprob: -14.100354194641113
    7. '    ' → logprob: -14.850354194641113
    8. '```' → logprob: -15.725354194641113
    9. '        ' → logprob: -15.975354194641113
    10. '       ' → logprob: -16.350353240966797

Token 331: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.250627517700195
    4. '```' → logprob: -17.500627517700195
    5. '       ' → logprob: -18.125627517700195
    6. '+' → logprob: -18.125627517700195
    7. '10' → logprob: -18.500627517700195
    8. '
' → logprob: -19.188127517700195
    9. 'continue' → logprob: -19.188127517700195
    10. '           ' → logprob: -19.250627517700195

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.250003814697266
    4. '0' → logprob: -18.500003814697266
    5. 'continue' → logprob: -18.750003814697266
    6. '```' → logprob: -18.875003814697266
    7. '
' → logprob: -19.562503814697266
    8. '  ' → logprob: -20.937503814697266
    9. '10' → logprob: -21.187503814697266
    10. '-' → logprob: -21.187503814697266

Token 333: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023738660383969545
    2. 'continue' → logprob: -6.252373695373535
    3. '
' → logprob: -8.377373695373535
    4. '       ' → logprob: -9.752373695373535
    5. ' print' → logprob: -9.752373695373535
    6. '   ' → logprob: -10.252373695373535
    7. '```' → logprob: -10.627373695373535
    8. '<|end|>' → logprob: -10.752373695373535
    9. ' continue' → logprob: -11.627373695373535
    10. '        
' → logprob: -13.252373695373535

Token 334: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0022200802341103554
    2. '(' → logprob: -6.127220153808594
    3. '('' → logprob: -11.127220153808594
    4. '("("' → logprob: -11.377220153808594
    5. '(f' → logprob: -12.627220153808594
    6. '(len' → logprob: -12.877220153808594
    7. '(`' → logprob: -14.252220153808594
    8. '(B' → logprob: -14.252220153808594
    9. '(n' → logprob: -15.502220153808594
    10. '()' → logprob: -15.627220153808594

Token 336: 'ad' (ID: 324)
  Prédit: 'ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ad' → logprob: -6.511406809295295e-06
    2. 'bad' → logprob: -12.000006675720215
    3. 'a' → logprob: -15.250006675720215
    4. 'ад' → logprob: -16.5000057220459
    5. 'add' → logprob: -17.5000057220459
    6. ''ad' → logprob: -18.5000057220459
    7. '"' → logprob: -18.7500057220459
    8. 'adb' → logprob: -18.8750057220459
    9. '```' → logprob: -19.0000057220459
    10. '(ad' → logprob: -19.1250057220459

Token 337: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.128163257315464e-07
    2. '_counts' → logprob: -16.25
    3. '_bad' → logprob: -16.375
    4. '_' → logprob: -17.5
    5. ' _' → logprob: -18.125
    6. '_COUNT' → logprob: -18.25
    7. 'count' → logprob: -18.625
    8. '\' → logprob: -18.875
    9. '_Count' → logprob: -19.125
    10. '__' → logprob: -19.5

Token 338: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -14.00000286102295
    3. '())' → logprob: -14.12500286102295
    4. ')`' → logprob: -14.37500286102295
    5. '()' → logprob: -15.12500286102295
    6. '))' → logprob: -15.25000286102295
    7. '(' → logprob: -16.500003814697266
    8. ')
' → logprob: -17.625003814697266
    9. '`)' → logprob: -18.500003814697266
    10. '**' → logprob: -18.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 336
Tokens correctement prédits (1ère position, stricte): 158
Tokens correctement prédits (1ère position, avec adaptation): 174
Tokens correctement prédits (top 10): 283
Précision stricte (1ère position): 47.02%
Précision adaptée (1ère position): 51.79%
Précision (top 10): 84.23%
================================================================================
