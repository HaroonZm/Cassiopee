================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Tuple, Iterator
import sys

class Schedule:
    """Represents a single water usage schedule."""
    def __init__(self, start: int, end: int, usage_rate: int) -> None:
        self.start = start
        self.end = end
        self.usage_rate = usage_rate
        self.duration = end - start
        self.total_usage = self.duration * self.usage_rate

class ScheduleTable:
    """Holds multiple schedules representing one day's water consumption pattern."""
    DAY_DURATION = 86400

    def __init__(self, schedules: List[Schedule], tank_capacity: int) -> None:
        self.schedules = schedules
        self.tank_capacity = tank_capacity

    def intervals(self) -> Iterator[Tuple[int, int, int]]:
        """Generate tuples of (start_time, end_time, net_usage_rate) for all continuous intervals including idle times.
        The usage_rate is positive for consumption."""
        pos = 0
        for sched in self.schedules:
            if pos < sched.start:
                # Idle interval, usage rate 0
                yield (pos, sched.start, 0)
            yield (sched.start, sched.end, sched.usage_rate)
            pos = sched.end
        if pos < self.DAY_DURATION:
            # Tail idle interval
            yield (pos, self.DAY_DURATION, 0)

class ConsumptionModel(ABC):
    @abstractmethod
    def minimal_pump_rate(self, schedule_table: ScheduleTable) -> float:
        """Calculates minimal pump flow needed."""
        pass

class TankConsumptionModel(ConsumptionModel):
    """Simulate the tank water level evolution to find minimal pump speed."""

    def minimal_pump_rate(self, schedule_table: ScheduleTable) -> float:
        L = schedule_table.tank_capacity
        intervals = list(schedule_table.intervals())

        # Lower and upper bounds for binary search of pump speed:
        # Lower bound cannot be less than 0
        # Upper bound could be max usage rate in the schedules or more
        max_usage = max((interval[2] for interval in intervals), default=0)
        low, high = 0.0, max_usage

        def check(pump_rate: float) -> bool:
            # Returns True if pump_rate keeps tank never empty during the day
            tank_level = L
            for start, end, rate in intervals:
                length = end - start
                net_rate = pump_rate - rate
                tank_level += net_rate * length
                if tank_level < 0:
                    return False
                # Cap water to max tank capacity (overflow ignored, but no point going above)
                if tank_level > L:
                    tank_level = L
            return True

        # We want minimal pump_rate with error tolerance of 1e-7 to ensure output precision better than 1e-6
        for _ in range(60):  # about 60 iterations good for double precision binary search
            mid = (low + high) / 2
            if check(mid):
                high = mid
            else:
                low = mid
        return high

class InputParser:
    """Parses multiple datasets from stdin for ScheduleTable(s)."""

    @staticmethod
    def parse() -> Iterator[ScheduleTable]:
        lines = sys.stdin
        while True:
            line = ''
            while line.strip() == '':
                line = next(lines).strip()
            if line == '0 0':
                break
            N_str, L_str = line.split()
            N, L = int(N_str), int(L_str)
            schedules = []
            for _ in range(N):
                s, t, u = map(int, next(lines).strip().split())
                schedules.append(Schedule(s, t, u))
            yield ScheduleTable(schedules, L)

class OutputFormatter:
    """Formats output to required precision."""

    @staticmethod
    def format_pump_rate(rate: float) -> str:
        return f"{rate:.6f}"

def main():
    parser = InputParser()
    model = TankConsumptionModel()
    for schedule_table in parser.parse():
        answer = model.minimal_pump_rate(schedule_table)
        print(OutputFormatter.format_pump_rate(answer))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.4742446839809418
    2. 'ABC' → logprob: -0.9742447137832642
    3. ' A' → logprob: -9.849245071411133
    4. 'AB' → logprob: -10.224245071411133
    5. 'A' → logprob: -10.724245071411133
    6. 'ABCDE' → logprob: -10.724245071411133
    7. 'abc' → logprob: -10.849245071411133
    8. 'abstract' → logprob: -11.849245071411133
    9. ' abstract' → logprob: -13.224245071411133
    10. 'import' → logprob: -13.599245071411133

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21777556836605072
    2. ',' → logprob: -1.717775583267212
    3. 'import' → logprob: -5.342775344848633
    4. '' → logprob: -5.967775344848633
    5. ':' → logprob: -6.092775344848633
    6. '```' → logprob: -6.217775344848633
    7. ' ' → logprob: -7.217775344848633
    8. ' ,' → logprob: -7.342775344848633
    9. '<|end|>' → logprob: -7.967775344848633
    10. '\' → logprob: -7.967775344848633

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.6972059607505798
    2. ' abstract' → logprob: -0.8222059607505798
    3. 'Abstract' → logprob: -2.8222060203552246
    4. ' ' → logprob: -6.822206020355225
    5. 'Meta' → logprob: -6.822206020355225
    6. '```' → logprob: -8.572205543518066
    7. '.abstract' → logprob: -8.822205543518066
    8. ' A' → logprob: -9.322205543518066
    9. ' Abstract' → logprob: -9.447205543518066
    10. ' ABC' → logprob: -10.447205543518066

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -2.7133641196996905e-05
    2. 'classmethod' → logprob: -10.62502670288086
    3. 'staticmethod' → logprob: -13.75002670288086
    4. 'meth' → logprob: -14.12502670288086
    5. 'm' → logprob: -15.50002670288086
    6. '_method' → logprob: -15.62502670288086
    7. 'ethod' → logprob: -15.75002670288086
    8. ' method' → logprob: -15.87502670288086
    9. 'abstract' → logprob: -16.00002670288086
    10. 'met' → logprob: -16.37502670288086

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4196794033050537
    2. '```' → logprob: -1.4196794033050537
    3. 'class' → logprob: -2.9196794033050537
    4. '

' → logprob: -4.044679641723633
    5. '\n' → logprob: -5.044679641723633
    6. '' → logprob: -5.044679641723633
    7. '<|end|>' → logprob: -5.169679641723633
    8. '
' → logprob: -5.794679641723633
    9. '``' → logprob: -5.919679641723633
    10. '\' → logprob: -6.419679641723633

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.275044709444046
    2. '

' → logprob: -1.6500446796417236
    3. 'class' → logprob: -3.4000446796417236
    4. '```' → logprob: -4.525044918060303
    5. '' → logprob: -6.775044918060303
    6. '
' → logprob: -7.275044918060303
    7. ' 

' → logprob: -7.650044918060303
    8. ' class' → logprob: -7.775044918060303
    9. '\n' → logprob: -8.150044441223145
    10. '``' → logprob: -8.150044441223145

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.11298394203186035
    2. ' collections' → logprob: -2.4879839420318604
    3. 'typing' → logprob: -4.487983703613281
    4. ' dat' → logprob: -4.987983703613281
    5. 'collections' → logprob: -6.362983703613281
    6. ' os' → logprob: -6.487983703613281
    7. ' math' → logprob: -7.612983703613281
    8. ' sys' → logprob: -7.737983703613281
    9. ' datetime' → logprob: -7.737983703613281
    10. ' io' → logprob: -8.112983703613281

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08955023437738419
    2. 'import' → logprob: -2.589550256729126
    3. '.' → logprob: -4.839550018310547
    4. '```' → logprob: -6.839550018310547
    5. '[' → logprob: -7.714550018310547
    6. '.import' → logprob: -7.839550018310547
    7. ' ' → logprob: -8.839550018310547
    8. '<|end|>' → logprob: -9.089550018310547
    9. ' .' → logprob: -9.339550018310547
    10. ' as' → logprob: -9.964550018310547

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.4760826826095581
    2. ' List' → logprob: -1.601082682609558
    3. 'Any' → logprob: -2.1010828018188477
    4. ' Union' → logprob: -3.7260828018188477
    5. ' Callable' → logprob: -4.226082801818848
    6. 'List' → logprob: -5.101082801818848
    7. ' Protocol' → logprob: -5.601082801818848
    8. ' Optional' → logprob: -6.101082801818848
    9. 'Union' → logprob: -6.851082801818848
    10. 'Callable' → logprob: -6.976082801818848

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5872132778167725
    2. '
' → logprob: -0.8372132778167725
    3. 'class' → logprob: -4.837213516235352
    4. '


' → logprob: -6.837213516235352
    5. '```' → logprob: -6.837213516235352
    6. '\n' → logprob: -7.337213516235352
    7. '
' → logprob: -8.212213516235352
    8. '``' → logprob: -9.712213516235352
    9. '`

' → logprob: -10.587213516235352
    10. '



' → logprob: -10.837213516235352

Token 13: ' Tuple' (ID: 50841)
  Prédit: ' Callable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Callable' → logprob: -1.0891209840774536
    2. ' Union' → logprob: -1.3391209840774536
    3. ' Optional' → logprob: -1.4641209840774536
    4. ' Any' → logprob: -3.089120864868164
    5. 'Optional' → logprob: -3.339120864868164
    6. 'Any' → logprob: -3.964120864868164
    7. 'Callable' → logprob: -4.089120864868164
    8. ' Protocol' → logprob: -4.589120864868164
    9. ' Tuple' → logprob: -4.589120864868164
    10. 'Union' → logprob: -4.714120864868164

Token 14: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6561242341995239
    2. '

' → logprob: -1.281124234199524
    3. '
' → logprob: -1.906124234199524
    4. '```' → logprob: -3.0311241149902344
    5. '\n' → logprob: -5.781124114990234
    6. '``' → logprob: -6.156124114990234
    7. ' class' → logprob: -8.031124114990234
    8. '


' → logprob: -8.156124114990234
    9. '
' → logprob: -8.531124114990234
    10. '<class' → logprob: -8.656124114990234

Token 15: ' Iterator' (ID: 41994)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.7136119604110718
    2. ' Optional' → logprob: -2.2136120796203613
    3. ' Callable' → logprob: -2.2136120796203613
    4. ' Any' → logprob: -2.3386120796203613
    5. 'Any' → logprob: -2.7136120796203613
    6. 'Union' → logprob: -2.9636120796203613
    7. 'Optional' → logprob: -3.4636120796203613
    8. 'Callable' → logprob: -3.8386120796203613
    9. ' Protocol' → logprob: -4.463612079620361
    10. ' Dict' → logprob: -5.463612079620361

Token 16: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6022621393203735
    2. '
' → logprob: -1.1022621393203735
    3. '

' → logprob: -2.227262020111084
    4. '```' → logprob: -4.852262020111084
    5. '\n' → logprob: -5.602262020111084
    6. '``' → logprob: -8.102262496948242
    7. ' class' → logprob: -8.602262496948242
    8. '<class' → logprob: -8.852262496948242
    9. '


' → logprob: -8.977262496948242
    10. '
' → logprob: -9.227262496948242

Token 17: 'import' (ID: 561)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.016812656074762344
    2. '
' → logprob: -4.391812801361084
    3. '```' → logprob: -5.766812801361084
    4. '

' → logprob: -7.141812801361084
    5. ' class' → logprob: -9.016812324523926
    6. '<class' → logprob: -9.516812324523926
    7. '``' → logprob: -9.641812324523926
    8. '\n' → logprob: -10.016812324523926
    9. '' → logprob: -11.266812324523926
    10. '


' → logprob: -11.516812324523926

Token 18: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.8462379574775696
    2. ' typing' → logprob: -1.4712378978729248
    3. ' collections' → logprob: -1.8462378978729248
    4. ' abc' → logprob: -1.9712378978729248
    5. ' itertools' → logprob: -3.971237897872925
    6. ' re' → logprob: -5.096238136291504
    7. ' sys' → logprob: -5.096238136291504
    8. ' io' → logprob: -5.471238136291504
    9. ' pathlib' → logprob: -6.346238136291504
    10. ' pandas' → logprob: -7.096238136291504

Token 19: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5407493710517883
    2. 'class' → logprob: -1.1657493114471436
    3. '

' → logprob: -2.5407493114471436
    4. '```' → logprob: -3.7907493114471436
    5. '\n' → logprob: -5.665749549865723
    6. '
' → logprob: -8.290749549865723
    7. '``' → logprob: -8.290749549865723
    8. '' → logprob: -8.540749549865723
    9. ' class' → logprob: -8.665749549865723
    10. '<class' → logprob: -9.290749549865723

Token 20: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.022058507427573204
    2. 'c' → logprob: -4.397058486938477
    3. '
' → logprob: -4.772058486938477
    4. '```' → logprob: -7.772058486938477
    5. 'cla' → logprob: -8.897058486938477
    6. 'clas' → logprob: -9.272058486938477
    7. '

' → logprob: -9.397058486938477
    8. 'cl' → logprob: -9.397058486938477
    9. '' → logprob: -9.647058486938477
    10. '\n' → logprob: -9.772058486938477

Token 21: ' Schedule' (ID: 36691)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03726816177368164
    2. ' Abstract' → logprob: -3.5372681617736816
    3. ' Basic' → logprob: -6.412268161773682
    4. ' ABC' → logprob: -6.662268161773682
    5. ' Base' → logprob: -7.162268161773682
    6. ' My' → logprob: -7.662268161773682
    7. ' Serializer' → logprob: -7.787268161773682
    8. ' System' → logprob: -7.912268161773682
    9. ' Space' → logprob: -8.037267684936523
    10. ' Object' → logprob: -8.662267684936523

Token 22: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11357235908508301
    2. ':' → logprob: -2.238572359085083
    3. '(Abstract' → logprob: -7.738572120666504
    4. '(S' → logprob: -8.488572120666504
    5. '():' → logprob: -10.113572120666504
    6. '(:' → logprob: -10.613572120666504
    7. '(object' → logprob: -11.613572120666504
    8. '(Base' → logprob: -11.863572120666504
    9. '```' → logprob: -12.863572120666504
    10. ' :' → logprob: -13.113572120666504

Token 23: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18103596568107605
    2. '<|end|>' → logprob: -2.5560359954833984
    3. '   ' → logprob: -2.9310359954833984
    4. '<|end|>' → logprob: -4.931035995483398
    5. '(object' → logprob: -5.181035995483398
    6. '(' → logprob: -5.306035995483398
    7. ' ' → logprob: -5.556035995483398
    8. '```' → logprob: -5.806035995483398
    9. ')' → logprob: -6.056035995483398
    10. ':
' → logprob: -6.556035995483398

Token 24: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8881992101669312
    2. 'def' → logprob: -1.2631992101669312
    3. ' def' → logprob: -1.2631992101669312
    4. 'class' → logprob: -4.138199329376221
    5. '    
' → logprob: -5.388199329376221
    6. '    ' → logprob: -7.513199329376221
    7. '```' → logprob: -7.888199329376221
    8. ' 
' → logprob: -8.138198852539062
    9. 'pass' → logprob: -8.138198852539062
    10. ' pass' → logprob: -8.138198852539062

Token 25: 'Rep' (ID: 17265)
  Prédit: 'Rep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rep' → logprob: -0.9172821640968323
    2. 'A' → logprob: -1.1672821044921875
    3. ' A' → logprob: -2.0422821044921875
    4. 'Schedule' → logprob: -3.1672821044921875
    5. ' Represents' → logprob: -3.1672821044921875
    6. 'Class' → logprob: -4.2922821044921875
    7. '"""' → logprob: -4.2922821044921875
    8. ' Schedule' → logprob: -4.7922821044921875
    9. ' """' → logprob: -4.9172821044921875
    10. 'Base' → logprob: -4.9172821044921875

Token 26: 'resents' (ID: 16483)
  Prédit: 'resents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resents' → logprob: -0.005740713328123093
    2. 'ro' → logprob: -6.130740642547607
    3. 'res' → logprob: -6.130740642547607
    4. 'r' → logprob: -7.755740642547607
    5. 'resent' → logprob: -7.755740642547607
    6. 'resentation' → logprob: -8.255741119384766
    7. 're' → logprob: -10.880741119384766
    8. ' res' → logprob: -11.005741119384766
    9. 'orts' → logprob: -11.005741119384766
    10. 'le' → logprob: -11.130741119384766

Token 27: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.004404482431709766
    2. 'a' → logprob: -5.629404544830322
    3. ' an' → logprob: -7.754404544830322
    4. ' the' → logprob: -8.629404067993164
    5. ' ' → logprob: -9.254404067993164
    6. '   ' → logprob: -9.754404067993164
    7. ' scheduling' → logprob: -11.129404067993164
    8. ' schedules' → logprob: -11.879404067993164
    9. ' schedule' → logprob: -12.504404067993164
    10. '    ' → logprob: -12.754404067993164

Token 28: ' single' (ID: 4590)
  Prédit: ' schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' schedule' → logprob: -0.43689772486686707
    2. ' sequence' → logprob: -2.1868977546691895
    3. ' scheduling' → logprob: -2.6868977546691895
    4. ' scheduled' → logprob: -2.9368977546691895
    5. ' task' → logprob: -3.3118977546691895
    6. ' collection' → logprob: -3.4368977546691895
    7. 'schedule' → logprob: -4.5618977546691895
    8. ' series' → logprob: -5.1868977546691895
    9. ' specific' → logprob: -5.3118977546691895
    10. '   ' → logprob: -5.4368977546691895

Token 29: ' water' (ID: 3411)
  Prédit: ' task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' task' → logprob: -0.626146137714386
    2. ' schedule' → logprob: -0.876146137714386
    3. ' job' → logprob: -4.62614631652832
    4. ' scheduled' → logprob: -5.12614631652832
    5. 'schedule' → logprob: -5.25114631652832
    6. ' ' → logprob: -5.37614631652832
    7. 'Schedule' → logprob: -5.37614631652832
    8. '   ' → logprob: -5.62614631652832
    9. ' scheduling' → logprob: -5.75114631652832
    10. ' event' → logprob: -6.12614631652832

Token 30: ' usage' (ID: 16622)
  Prédit: ' source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' source' → logprob: -0.3314310908317566
    2. ' ' → logprob: -1.9564311504364014
    3. 'fall' → logprob: -3.2064311504364014
    4. ' schedule' → logprob: -4.206430912017822
    5. 'ing' → logprob: -4.331430912017822
    6. ' usage' → logprob: -4.456430912017822
    7. '   ' → logprob: -4.831430912017822
    8. ' scheduling' → logprob: -5.081430912017822
    9. '_' → logprob: -5.206430912017822
    10. '  ' → logprob: -5.206430912017822

Token 31: ' schedule' (ID: 12262)
  Prédit: ' schedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' schedule' → logprob: -0.20836350321769714
    2. 'schedule' → logprob: -2.0833635330200195
    3. ' event' → logprob: -2.9583635330200195
    4. ' period' → logprob: -5.7083635330200195
    5. 'event' → logprob: -5.8333635330200195
    6. 'period' → logprob: -6.7083635330200195
    7. ' scheduling' → logprob: -6.9583635330200195
    8. ' time' → logprob: -7.3333635330200195
    9. ' interval' → logprob: -8.08336353302002
    10. ' scenario' → logprob: -8.08336353302002

Token 32: '."""
' (ID: 33044)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.25961798429489136
    2. ' for' → logprob: -2.509618043899536
    3. '   ' → logprob: -2.634618043899536
    4. '.' → logprob: -3.634618043899536
    5. '```' → logprob: -3.759618043899536
    6. '."""' → logprob: -4.509617805480957
    7. ' """' → logprob: -4.634617805480957
    8. ' with' → logprob: -6.884617805480957
    9. '"' → logprob: -7.259617805480957
    10. ' of' → logprob: -7.884617805480957

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1556236743927002
    2. ' 
' → logprob: -1.4056236743927002
    3. '    
' → logprob: -2.1556236743927
    4. '\' → logprob: -2.4056236743927
    5. ' ' → logprob: -2.6556236743927
    6. '
' → logprob: -2.7806236743927
    7. '\n' → logprob: -3.4056236743927
    8. '    ' → logprob: -3.6556236743927
    9. '     
' → logprob: -4.155623435974121
    10. '```' → logprob: -5.030623435974121

Token 34: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5960139036178589
    2. '   ' → logprob: -1.3460139036178589
    3. 'class' → logprob: -2.7210140228271484
    4. ' def' → logprob: -3.0960140228271484
    5. '    
' → logprob: -3.2210140228271484
    6. ' 
' → logprob: -4.221014022827148
    7. '
' → logprob: -4.471014022827148
    8. '    ' → logprob: -5.471014022827148
    9. '   
' → logprob: -6.346014022827148
    10. '```' → logprob: -6.346014022827148

Token 35: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.09338587522506714
    2. ' __' → logprob: -2.593385934829712
    3. '_init' → logprob: -4.968385696411133
    4. '__' → logprob: -5.343385696411133
    5. ' init' → logprob: -6.468385696411133
    6. 'def' → logprob: -7.343385696411133
    7. ' def' → logprob: -8.593385696411133
    8. '_' → logprob: -8.718385696411133
    9. '```' → logprob: -10.468385696411133
    10. '___' → logprob: -10.718385696411133

Token 36: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1472419600977446e-06
    2. 'doc' → logprob: -14.000000953674316
    3. 'ini' → logprob: -15.875000953674316
    4. 'int' → logprob: -16.375001907348633
    5. 'in' → logprob: -16.750001907348633
    6. 'i' → logprob: -17.625001907348633
    7. ' init' → logprob: -18.250001907348633
    8. 'inite' → logprob: -18.625001907348633
    9. '```' → logprob: -19.625001907348633
    10. 'str' → logprob: -19.750001907348633

Token 37: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.13125011324882507
    2. '(' → logprob: -2.2562501430511475
    3. '__' → logprob: -4.381249904632568
    4. '__(
' → logprob: -5.506249904632568
    5. '(self' → logprob: -7.506249904632568
    6. '<|end|>' → logprob: -8.256250381469727
    7. ' (' → logprob: -8.381250381469727
    8. '__((' → logprob: -8.756250381469727
    9. '__(*' → logprob: -8.756250381469727
    10. '_' → logprob: -9.506250381469727

Token 38: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006279678200371563
    2. ' self' → logprob: -7.3756279945373535
    3. ')' → logprob: -13.875627517700195
    4. '(self' → logprob: -15.500627517700195
    5. ' ' → logprob: -16.625627517700195
    6. 's' → logprob: -17.000627517700195
    7. '
' → logprob: -17.125627517700195
    8. '   ' → logprob: -17.125627517700195
    9. '	self' → logprob: -17.250627517700195
    10. '_self' → logprob: -17.500627517700195

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08186999708414078
    2. ')' → logprob: -3.4568700790405273
    3. ' ,' → logprob: -4.206870079040527
    4. 'self' → logprob: -4.456870079040527
    5. ' )' → logprob: -4.956870079040527
    6. '(' → logprob: -5.831870079040527
    7. ' self' → logprob: -5.831870079040527
    8. '(self' → logprob: -5.956870079040527
    9. ' (' → logprob: -6.331870079040527
    10. ' ' → logprob: -6.581870079040527

Token 40: ' start' (ID: 1604)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7154040932655334
    2. 'self' → logprob: -1.7154040336608887
    3. ' start' → logprob: -2.4654040336608887
    4. ' times' → logprob: -2.7154040336608887
    5. ' usage' → logprob: -3.5904040336608887
    6. ' time' → logprob: -3.8404040336608887
    7. ' name' → logprob: -3.8404040336608887
    8. 'times' → logprob: -3.8404040336608887
    9. 'start' → logprob: -3.9654040336608887
    10. 'name' → logprob: -4.090404033660889

Token 41: ':' (ID: 25)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.1645413637161255
    2. '_' → logprob: -1.9145413637161255
    3. ',' → logprob: -6.164541244506836
    4. ')' → logprob: -6.914541244506836
    5. '_,' → logprob: -7.914541244506836
    6. ' _' → logprob: -8.164541244506836
    7. '_)' → logprob: -8.914541244506836
    8. '_timestamp' → logprob: -9.539541244506836
    9. '_date' → logprob: -9.914541244506836
    10. 'time' → logprob: -10.164541244506836

Token 42: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6561979055404663
    2. 'int' → logprob: -0.7811979055404663
    3. ' float' → logprob: -4.156198024749756
    4. 'float' → logprob: -4.906198024749756
    5. ' str' → logprob: -9.281197547912598
    6. '[int' → logprob: -9.906197547912598
    7. 'str' → logprob: -10.281197547912598
    8. ')' → logprob: -10.531197547912598
    9. ' Tuple' → logprob: -11.281197547912598
    10. 'time' → logprob: -12.281197547912598

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005010855966247618
    2. ')' → logprob: -7.8755011558532715
    3. ' ,' → logprob: -9.375500679016113
    4. '<|end|>' → logprob: -11.500500679016113
    5. ',
' → logprob: -11.875500679016113
    6. '):' → logprob: -12.250500679016113
    7. '   ' → logprob: -12.375500679016113
    8. '<|end|>' → logprob: -12.625500679016113
    9. ':' → logprob: -13.375500679016113
    10. '=' → logprob: -13.500500679016113

Token 44: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.057062968611717224
    2. ' duration' → logprob: -3.557062864303589
    3. 'end' → logprob: -3.807062864303589
    4. 'duration' → logprob: -5.432063102722168
    5. ' stop' → logprob: -8.182063102722168
    6. 'stop' → logprob: -10.807063102722168
    7. ' ' → logprob: -10.932063102722168
    8. '	end' → logprob: -11.807063102722168
    9. ' length' → logprob: -12.682063102722168
    10. '   ' → logprob: -12.807063102722168

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09707821160554886
    2. '):' → logprob: -2.597078323364258
    3. ',' → logprob: -4.222078323364258
    4. ')' → logprob: -5.972078323364258
    5. ':int' → logprob: -7.472078323364258
    6. '=' → logprob: -9.472078323364258
    7. '_time' → logprob: -9.722078323364258
    8. ' ):' → logprob: -10.472078323364258
    9. '=int' → logprob: -11.472078323364258
    10. ' :' → logprob: -11.597078323364258

Token 46: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.34870976209640503
    2. 'int' → logprob: -1.2237098217010498
    3. ')' → logprob: -8.598710060119629
    4. ' )' → logprob: -10.598710060119629
    5. ':int' → logprob: -10.598710060119629
    6. '=int' → logprob: -11.098710060119629
    7. ',int' → logprob: -12.348710060119629
    8. ']int' → logprob: -12.848710060119629
    9. '[int' → logprob: -13.098710060119629
    10. '(int' → logprob: -13.098710060119629

Token 47: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05173666402697563
    2. ')' → logprob: -3.42673659324646
    3. ',' → logprob: -4.051736831665039
    4. ':' → logprob: -8.176736831665039
    5. ' ):' → logprob: -8.926736831665039
    6. '):
' → logprob: -10.301736831665039
    7. '   ' → logprob: -10.301736831665039
    8. ' ,' → logprob: -11.426736831665039
    9. ' )' → logprob: -11.801736831665039
    10. ' ' → logprob: -11.801736831665039

Token 48: ' usage' (ID: 16622)
  Prédit: ' flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flow' → logprob: -0.3577427864074707
    2. ' amount' → logprob: -2.1077427864074707
    3. ' usage' → logprob: -2.8577427864074707
    4. ' volume' → logprob: -2.9827427864074707
    5. ' rate' → logprob: -3.7327427864074707
    6. ' duration' → logprob: -4.232742786407471
    7. ' level' → logprob: -5.357742786407471
    8. ' water' → logprob: -5.607742786407471
    9. ' ' → logprob: -5.857742786407471
    10. 'amount' → logprob: -6.107742786407471

Token 49: '_rate' (ID: 20477)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006703823455609381
    2. '):' → logprob: -7.750670433044434
    3. '_amount' → logprob: -9.375670433044434
    4. ')' → logprob: -9.625670433044434
    5. ' :' → logprob: -10.125670433044434
    6. ' ):' → logprob: -11.250670433044434
    7. '_' → logprob: -12.250670433044434
    8. ':int' → logprob: -12.375670433044434
    9. '_percent' → logprob: -12.500670433044434
    10. ' )' → logprob: -12.500670433044434

Token 50: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002757210284471512
    2. '):' → logprob: -6.0027570724487305
    3. ' :' → logprob: -9.12775707244873
    4. ')' → logprob: -9.62775707244873
    5. '=' → logprob: -9.62775707244873
    6. ' ):' → logprob: -10.62775707244873
    7. ':int' → logprob: -11.50275707244873
    8. ',' → logprob: -13.25275707244873
    9. ' )' → logprob: -13.75275707244873
    10. '):
' → logprob: -14.00275707244873

Token 51: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.0406375527381897
    2. 'float' → logprob: -3.415637493133545
    3. ' int' → logprob: -5.290637493133545
    4. 'int' → logprob: -6.665637493133545
    5. ')' → logprob: -7.915637493133545
    6. ' ' → logprob: -8.665637969970703
    7. ' )' → logprob: -9.790637969970703
    8. 'flo' → logprob: -10.290637969970703
    9. '=float' → logprob: -11.040637969970703
    10. '	float' → logprob: -13.290637969970703

Token 52: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00540035730227828
    2. ')' → logprob: -5.25540018081665
    3. ' ):' → logprob: -9.755400657653809
    4. ',' → logprob: -9.755400657653809
    5. '):
' → logprob: -10.380400657653809
    6. ':' → logprob: -11.380400657653809
    7. '   ' → logprob: -12.630400657653809
    8. ' )' → logprob: -13.380400657653809
    9. ' ' → logprob: -13.880400657653809
    10. '):
' → logprob: -14.005400657653809

Token 53: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5238090753555298
    2. '):' → logprob: -0.8988090753555298
    3. ')' → logprob: -7.52380895614624
    4. '):
' → logprob: -10.273809432983398
    5. '():' → logprob: -10.398809432983398
    6. ')->' → logprob: -11.148809432983398
    7. '   ' → logprob: -11.273809432983398
    8. ':
' → logprob: -11.648809432983398
    9. ',' → logprob: -11.773809432983398
    10. '->' → logprob: -12.023809432983398

Token 54: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.03829542547464371
    2. 'None' → logprob: -3.2882955074310303
    3. ' ' → logprob: -8.28829574584961
    4. ' int' → logprob: -13.53829574584961
    5. '  ' → logprob: -14.66329574584961
    6. ' none' → logprob: -15.03829574584961
    7. 'int' → logprob: -15.53829574584961
    8. '   ' → logprob: -15.91329574584961
    9. ')' → logprob: -16.53829574584961
    10. ' )' → logprob: -17.28829574584961

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005678066518157721
    2. '):' → logprob: -7.50056791305542
    3. ':
' → logprob: -12.250567436218262
    4. '<|end|>' → logprob: -12.500567436218262
    5. ':**' → logprob: -13.625567436218262
    6. ',' → logprob: -13.875567436218262
    7. ' :' → logprob: -14.125567436218262
    8. '():' → logprob: -14.250567436218262
    9. ':def' → logprob: -14.375567436218262
    10. '       ' → logprob: -14.375567436218262

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003217283869162202
    2. 'self' → logprob: -6.5032172203063965
    3. '<|end|>' → logprob: -6.7532172203063965
    4. '   ' → logprob: -8.753217697143555
    5. ')' → logprob: -8.753217697143555
    6. '```' → logprob: -9.878217697143555
    7. ' self' → logprob: -10.378217697143555
    8. 'newline' → logprob: -10.753217697143555
    9. '\' → logprob: -11.128217697143555
    10. '...' → logprob: -11.378217697143555

Token 57: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15322522819042206
    2. '       ' → logprob: -2.5282251834869385
    3. ' self' → logprob: -2.7782251834869385
    4. 'super' → logprob: -10.52822494506836
    5. ' ' → logprob: -10.90322494506836
    6. ' ' → logprob: -11.40322494506836
    7. '```' → logprob: -11.40322494506836
    8. '   ' → logprob: -11.52822494506836
    9. '	self' → logprob: -11.77822494506836
    10. ' super' → logprob: -11.90322494506836

Token 58: '.start' (ID: 10181)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001270589418709278
    2. '.start' → logprob: -6.751270771026611
    3. ' .' → logprob: -9.376270294189453
    4. '<|end|>' → logprob: -12.251270294189453
    5. '.s' → logprob: -13.376270294189453
    6. ').' → logprob: -13.626270294189453
    7. '‌.' → logprob: -14.126270294189453
    8. '.)' → logprob: -14.251270294189453
    9. 'start' → logprob: -14.376270294189453
    10. ' ' → logprob: -14.501270294189453

Token 59: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.07889121770858765
    2. 'start' → logprob: -2.5788912773132324
    3. '	start' → logprob: -14.703890800476074
    4. '_start' → logprob: -15.078890800476074
    5. '(start' → logprob: -15.453890800476074
    6. '[start' → logprob: -16.07889175415039
    7. '=start' → logprob: -16.20389175415039
    8. '<|end|>' → logprob: -16.82889175415039
    9. '<|end|>' → logprob: -17.07889175415039
    10. '.start' → logprob: -17.20389175415039

Token 61: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' self' (ID: 1051)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.10021993517875671
    2. 'end' → logprob: -2.350219964981079
    3. '(end' → logprob: -12.6002197265625
    4. '=end' → logprob: -13.2252197265625
    5. ' ' → logprob: -13.4752197265625
    6. 'endon' → logprob: -13.6002197265625
    7. ''end' → logprob: -13.7252197265625
    8. ',end' → logprob: -13.8502197265625
    9. '_end' → logprob: -13.9752197265625
    10. '	end' → logprob: -14.1002197265625

Token 64: '.end' (ID: 10289)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28206145763397217
    2. '.end' → logprob: -1.4070614576339722
    3. 'end' → logprob: -7.907061576843262
    4. '.start' → logprob: -8.657061576843262
    5. '<|end|>' → logprob: -8.657061576843262
    6. ' .' → logprob: -9.782061576843262
    7. '<|end|>' → logprob: -10.782061576843262
    8. '.period' → logprob: -11.032061576843262
    9. '=end' → logprob: -11.407061576843262
    10. ')' → logprob: -11.532061576843262

Token 65: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.020549247041344643
    2. 'end' → logprob: -3.8955492973327637
    3. '=end' → logprob: -12.645548820495605
    4. '(end' → logprob: -13.395548820495605
    5. ' ' → logprob: -13.895548820495605
    6. '	end' → logprob: -14.770548820495605
    7. '[end' → logprob: -15.020548820495605
    8. '_end' → logprob: -15.270548820495605
    9. ',end' → logprob: -15.895548820495605
    10. ''end' → logprob: -16.270549774169922

Token 67: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13360071182250977
    2. '<|end|>' → logprob: -2.1336007118225098
    3. '
' → logprob: -6.13360071182251
    4. '        ' → logprob: -6.50860071182251
    5. '<|end|>' → logprob: -6.63360071182251
    6. '        
' → logprob: -7.13360071182251
    7. ',' → logprob: -8.383600234985352
    8. '```' → logprob: -8.758600234985352
    9. ' 
' → logprob: -9.133600234985352
    10. ' ' → logprob: -9.383600234985352

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032658842392265797
    2. 'self' → logprob: -5.753265857696533
    3. ' self' → logprob: -10.003266334533691
    4. '<|end|>' → logprob: -10.378266334533691
    5. '   ' → logprob: -13.003266334533691
    6. ',' → logprob: -13.378266334533691
    7. '<|end|>' → logprob: -13.378266334533691
    8. '      ' → logprob: -13.628266334533691
    9. ' ' → logprob: -14.003266334533691
    10. '        ' → logprob: -14.253266334533691

Token 69: ' self' (ID: 1051)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.42906802892684937
    2. ' usage' → logprob: -1.0540680885314941
    3. '       ' → logprob: -8.179067611694336
    4. 'self' (adapté à ' self') → logprob: -9.929067611694336
    5. '_usage' → logprob: -11.054067611694336
    6. ' self' → logprob: -11.179067611694336
    7. '        ' → logprob: -13.179067611694336
    8. ' ' → logprob: -13.804067611694336
    9. '```' → logprob: -14.179067611694336
    10. 'Usage' → logprob: -14.179067611694336

Token 70: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011968901380896568
    2. ' .' → logprob: -4.886969089508057
    3. '.start' → logprob: -6.261969089508057
    4. 'usage' → logprob: -7.136969089508057
    5. '=' → logprob: -7.886969089508057
    6. '<|end|>' → logprob: -8.136968612670898
    7. '_usage' → logprob: -9.261968612670898
    8. '.use' → logprob: -9.386968612670898
    9. ' =' → logprob: -9.386968612670898
    10. '.end' → logprob: -9.511968612670898

Token 71: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -3.404745439183898e-05
    2. ' usage' → logprob: -11.50003433227539
    3. 'start' → logprob: -11.50003433227539
    4. 'end' → logprob: -11.75003433227539
    5. 'use' → logprob: -12.75003433227539
    6. '_usage' → logprob: -13.37503433227539
    7. 'us' → logprob: -14.75003433227539
    8. 'Usage' → logprob: -14.75003433227539
    9. 'rate' → logprob: -16.00003433227539
    10. 'using' → logprob: -16.00003433227539

Token 72: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.474247545003891
    2. '_' → logprob: -0.9742475748062134
    3. '_r' → logprob: -9.724247932434082
    4. ' _' → logprob: -9.974247932434082
    5. '_time' → logprob: -11.099247932434082
    6. '_ratio' → logprob: -11.724247932434082
    7. '_rates' → logprob: -12.349247932434082
    8. '_period' → logprob: -12.849247932434082
    9. '_rat' → logprob: -12.849247932434082
    10. '_

' → logprob: -12.974247932434082

Token 73: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6229382157325745
    2. ' =' → logprob: -0.8729382157325745
    3. '<|end|>' → logprob: -3.7479381561279297
    4. ' ' → logprob: -3.8729381561279297
    5. ')' → logprob: -6.99793815612793
    6. '<|end|>' → logprob: -7.99793815612793
    7. '_' → logprob: -8.99793815612793
    8. '  ' → logprob: -10.49793815612793
    9. '   ' → logprob: -10.49793815612793
    10. ' )' → logprob: -10.62293815612793

Token 74: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.06196846812963486
    2. 'usage' → logprob: -2.8119685649871826
    3. ' ' → logprob: -14.686968803405762
    4. '_usage' → logprob: -15.311968803405762
    5. 'Usage' → logprob: -16.061967849731445
    6. '```' → logprob: -17.936967849731445
    7. ' use' → logprob: -19.186967849731445
    8. '   ' → logprob: -19.311967849731445
    9. '<|end|>' → logprob: -19.311967849731445
    10. '_USAGE' → logprob: -19.436967849731445

Token 75: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.0341610386967659
    2. '_' → logprob: -3.40916109085083
    3. '_r' → logprob: -8.409160614013672
    4. ' _' → logprob: -10.034160614013672
    5. '_space' → logprob: -10.284160614013672
    6. '_val' → logprob: -10.409160614013672
    7. '_t' → logprob: -10.659160614013672
    8. '_factor' → logprob: -10.784160614013672
    9. '_token' → logprob: -10.909160614013672
    10. '_code' → logprob: -11.534160614013672

Token 76: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039189815521240234
    2. '   ' → logprob: -3.6641898155212402
    3. '    
' → logprob: -4.66418981552124
    4. ' 
' → logprob: -6.78918981552124
    5. '

' → logprob: -7.53918981552124
    6. '' → logprob: -7.78918981552124
    7. '\n' → logprob: -8.039190292358398
    8. '<|end|>' → logprob: -8.039190292358398
    9. '  
' → logprob: -8.539190292358398
    10. '        
' → logprob: -9.164190292358398

Token 77: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004905089270323515
    2. '   ' → logprob: -5.8799052238464355
    3. '    
' → logprob: -6.8799052238464355
    4. '

' → logprob: -7.5049052238464355
    5. ' 
' → logprob: -8.504904747009277
    6. '<|end|>' → logprob: -9.129904747009277
    7. '
    
' → logprob: -10.129904747009277
    8. '' → logprob: -10.129904747009277
    9. '\n' → logprob: -11.004904747009277
    10. '        
' → logprob: -11.129904747009277

Token 78: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01872386783361435
    2. '<|end|>' → logprob: -4.268723964691162
    3. '   ' → logprob: -6.643723964691162
    4. '    
' → logprob: -7.018723964691162
    5. '

' → logprob: -7.643723964691162
    6. ' 
' → logprob: -8.268723487854004
    7. '<|end|>' → logprob: -8.518723487854004
    8. '\n' → logprob: -8.643723487854004
    9. '        
' → logprob: -8.643723487854004
    10. '       ' → logprob: -8.768723487854004

Token 79: '.duration' (ID: 55787)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00021641071361955255
    2. ' .' → logprob: -9.500216484069824
    3. '._' → logprob: -10.125216484069824
    4. 'def' → logprob: -10.625216484069824
    5. '.is' → logprob: -11.500216484069824
    6. ' ' → logprob: -12.000216484069824
    7. '_' → logprob: -12.250216484069824
    8. '.data' → logprob: -12.250216484069824
    9. '<|end|>' → logprob: -12.375216484069824
    10. '.s' → logprob: -12.750216484069824

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05864717438817024
    2. '=' → logprob: -2.9336471557617188
    3. '<|end|>' → logprob: -6.183647155761719
    4. ' ' → logprob: -6.558647155761719
    5. '_' → logprob: -9.183647155761719
    6. 's' → logprob: -9.308647155761719
    7. '<|end|>' → logprob: -11.183647155761719
    8. ')' → logprob: -11.433647155761719
    9. ',' → logprob: -11.558647155761719
    10. '  ' → logprob: -11.683647155761719

Token 81: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.13684648275375366
    2. ' self' → logprob: -2.1368465423583984
    3. 'end' → logprob: -5.011846542358398
    4. 'self' → logprob: -5.761846542358398
    5. '(end' → logprob: -10.011846542358398
    6. ' ' → logprob: -11.636846542358398
    7. '=end' → logprob: -12.636846542358398
    8. '	end' → logprob: -12.761846542358398
    9. ' (' → logprob: -12.886846542358398
    10. ' ' → logprob: -13.386846542358398

Token 82: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02065785974264145
    2. '-' → logprob: -3.895657777786255
    3. '<|end|>' → logprob: -9.770657539367676
    4. ' ' → logprob: -10.020657539367676
    5. '-start' → logprob: -11.395657539367676
    6. '<|end|>' → logprob: -14.145657539367676
    7. ' -
' → logprob: -14.270657539367676
    8. '  ' → logprob: -15.520657539367676
    9. '–' → logprob: -15.645657539367676
    10. '-end' → logprob: -15.645657539367676

Token 83: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.12693461775779724
    2. ' start' → logprob: -2.12693452835083
    3. '	start' → logprob: -12.501935005187988
    4. ' ' → logprob: -13.501935005187988
    5. '<|end|>' → logprob: -14.251935005187988
    6. '=start' → logprob: -15.751935005187988
    7. 'star' → logprob: -15.876935005187988
    8. '_start' → logprob: -16.376934051513672
    9. 'self' → logprob: -16.751934051513672
    10. '.start' → logprob: -17.001934051513672

Token 84: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005036524962633848
    2. '   ' → logprob: -5.630036354064941
    3. '<|end|>' → logprob: -7.630036354064941
    4. '    
' → logprob: -7.755036354064941
    5. '

' → logprob: -8.005036354064941
    6. ' 
' → logprob: -9.505036354064941
    7. '\n' → logprob: -10.755036354064941
    8. '' → logprob: -11.255036354064941
    9. '<|end|>' → logprob: -11.255036354064941
    10. '```' → logprob: -11.380036354064941

Token 85: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024144237861037254
    2. '   ' → logprob: -3.899144172668457
    3. '    
' → logprob: -6.524144172668457
    4. '

' → logprob: -6.774144172668457
    5. ' 
' → logprob: -8.024144172668457
    6. '<|end|>' → logprob: -8.399144172668457
    7. '' → logprob: -8.899144172668457
    8. '\n' → logprob: -9.524144172668457
    9. '        
' → logprob: -10.399144172668457
    10. ' ' → logprob: -10.399144172668457

Token 86: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03799352049827576
    2. '<|end|>' → logprob: -3.5379934310913086
    3. '   ' → logprob: -5.662993431091309
    4. '

' → logprob: -6.412993431091309
    5. '    
' → logprob: -6.662993431091309
    6. '<|end|>' → logprob: -7.662993431091309
    7. '\n' → logprob: -8.287993431091309
    8. ' 
' → logprob: -8.412993431091309
    9. '```' → logprob: -8.912993431091309
    10. ' ' → logprob: -9.037993431091309

Token 87: '.total' (ID: 23374)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0035489860456436872
    2. ' .' → logprob: -5.753549098968506
    3. '.is' → logprob: -9.378548622131348
    4. '.duration' → logprob: -9.503548622131348
    5. '.validate' → logprob: -10.378548622131348
    6. 'def' → logprob: -10.753548622131348
    7. '<|end|>' → logprob: -11.003548622131348
    8. '.total' → logprob: -11.253548622131348
    9. '._' → logprob: -11.378548622131348
    10. '.period' → logprob: -11.628548622131348

Token 88: '_usage' (ID: 77753)
  Prédit: '_usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.21718016266822815
    2. '_' → logprob: -1.8421801328659058
    3. '_water' → logprob: -3.4671802520751953
    4. ' _' → logprob: -5.717180252075195
    5. '_use' → logprob: -6.592180252075195
    6. '_amount' → logprob: -7.592180252075195
    7. '_volume' → logprob: -9.217180252075195
    8. '_consum' → logprob: -9.967180252075195
    9. '_used' → logprob: -10.717180252075195
    10. '_energy' → logprob: -10.842180252075195

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2038063257932663
    2. '=' → logprob: -1.7038062810897827
    3. '<|end|>' → logprob: -6.328806400299072
    4. ' ' → logprob: -7.578806400299072
    5. ' +=' → logprob: -10.203805923461914
    6. '_' → logprob: -10.453805923461914
    7. '<|end|>' → logprob: -11.328805923461914
    8. 's' → logprob: -12.828805923461914
    9. ')' → logprob: -13.078805923461914
    10. '_=' → logprob: -13.453805923461914

Token 90: ' self' (ID: 1051)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.020813968032598495
    2. 'usage' → logprob: -4.270813941955566
    3. ' start' → logprob: -6.020813941955566
    4. ' self' → logprob: -6.020813941955566
    5. ' ' → logprob: -6.520813941955566
    6. 'self' → logprob: -9.395813941955566
    7. 'start' → logprob: -9.520813941955566
    8. ' end' → logprob: -9.645813941955566
    9. '0' → logprob: -10.020813941955566
    10. ' use' → logprob: -11.770813941955566

Token 91: '.duration' (ID: 55787)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.600714161526412e-05
    2. 'usage' → logprob: -9.750076293945312
    3. ' .' → logprob: -11.625076293945312
    4. '.duration' → logprob: -12.375076293945312
    5. '.start' → logprob: -13.250076293945312
    6. '_usage' → logprob: -14.750076293945312
    7. '.us' → logprob: -14.875076293945312
    8. '.total' → logprob: -14.875076293945312
    9. ' usage' → logprob: -14.875076293945312
    10. '.use' → logprob: -15.000076293945312

Token 92: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0008684676722623408
    2. '*' → logprob: -7.125868320465088
    3. ' ' → logprob: -9.750868797302246
    4. '<|end|>' → logprob: -12.500868797302246
    5. ' ' → logprob: -13.875868797302246
    6. '*object' → logprob: -15.125868797302246
    7. '*self' → logprob: -15.500868797302246
    8. '  ' → logprob: -16.37586784362793
    9. ' **' → logprob: -16.75086784362793
    10. '<|end|>' → logprob: -16.87586784362793

Token 93: ' self' (ID: 1051)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.005938040092587471
    2. 'usage' → logprob: -5.1309380531311035
    3. ' ' → logprob: -12.630937576293945
    4. ' self' → logprob: -12.880937576293945
    5. '_usage' → logprob: -13.255937576293945
    6. ' use' → logprob: -14.130937576293945
    7. '<|end|>' → logprob: -14.380937576293945
    8. 'self' → logprob: -15.255937576293945
    9. ' user' → logprob: -16.255937576293945
    10. ')' → logprob: -16.755937576293945

Token 94: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.0339031834737398e-05
    2. 'usage' → logprob: -11.125020027160645
    3. ' .' → logprob: -12.500020027160645
    4. '.use' → logprob: -14.000020027160645
    5. 'Usage' → logprob: -15.125020027160645
    6. ' usage' → logprob: -15.500020027160645
    7. '.user' → logprob: -15.750020027160645
    8. '.us' → logprob: -15.875020027160645
    9. '_usage' → logprob: -16.62502098083496
    10. '```' → logprob: -17.00002098083496

Token 95: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -3.173704271830502e-06
    2. ' usage' → logprob: -12.75000286102295
    3. '_usage' → logprob: -15.50000286102295
    4. 'use' → logprob: -16.750003814697266
    5. 'using' → logprob: -19.750003814697266
    6. 'us' → logprob: -19.875003814697266
    7. 'Usage' → logprob: -19.875003814697266
    8. ' ' → logprob: -20.000003814697266
    9. 'user' → logprob: -20.500003814697266
    10. 'u' → logprob: -21.625003814697266

Token 96: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.0015727103454992175
    2. '_' → logprob: -6.501572608947754
    3. '_r' → logprob: -10.001572608947754
    4. ' _' → logprob: -11.751572608947754
    5. '_usage' → logprob: -12.501572608947754
    6. 'rate' → logprob: -13.251572608947754
    7. '_ra' → logprob: -13.501572608947754
    8. '_ratio' → logprob: -13.501572608947754
    9. '_rates' → logprob: -13.876572608947754
    10. '_factor' → logprob: -13.876572608947754

Token 97: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04933564364910126
    2. '<|end|>' → logprob: -3.4243357181549072
    3. '   ' → logprob: -4.299335479736328
    4. '    
' → logprob: -7.049335479736328
    5. '

' → logprob: -7.299335479736328
    6. '<|end|>' → logprob: -8.549335479736328
    7. '' → logprob: -10.174335479736328
    8. '\n' → logprob: -10.299335479736328
    9. '
' → logprob: -10.549335479736328
    10. ' 
' → logprob: -10.674335479736328

Token 98: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006731711328029633
    2. '

' → logprob: -5.3817315101623535
    3. '   ' → logprob: -6.3817315101623535
    4. '    
' → logprob: -8.881731986999512
    5. '<|end|>' → logprob: -8.881731986999512
    6. '```' → logprob: -10.381731986999512
    7. '
' → logprob: -10.631731986999512
    8. ' 
' → logprob: -11.256731986999512
    9. '' → logprob: -11.381731986999512
    10. '
    
' → logprob: -11.506731986999512

Token 99: ' Schedule' (ID: 36691)
  Prédit: ' Water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Water' → logprob: -0.6827804446220398
    2. ' Schedule' → logprob: -1.3077805042266846
    3. ' Scheduler' → logprob: -1.5577805042266846
    4. ' ' → logprob: -5.4327802658081055
    5. 'Water' → logprob: -6.1827802658081055
    6. 'Schedule' → logprob: -6.8077802658081055
    7. ' Scheduling' → logprob: -7.3077802658081055
    8. 'Scheduler' → logprob: -7.4327802658081055
    9. ' Reservoir' → logprob: -7.5577802658081055
    10. ' System' → logprob: -7.6827802658081055

Token 100: 'Table' (ID: 3429)
  Prédit: 'Manager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Manager' → logprob: -0.3251860737800598
    2. 'Set' → logprob: -2.450186014175415
    3. 'Collection' → logprob: -2.575186014175415
    4. 'Iterator' → logprob: -2.950186014175415
    5. 's' → logprob: -3.950186014175415
    6. 'Aggregator' → logprob: -4.575186252593994
    7. 'Generator' → logprob: -4.700186252593994
    8. 'Processor' → logprob: -4.825186252593994
    9. 'Provider' → logprob: -6.325186252593994
    10. 'Group' → logprob: -6.325186252593994

Token 101: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07004635781049728
    2. ':' → logprob: -2.6950464248657227
    3. '(Abstract' → logprob: -9.570046424865723
    4. '(S' → logprob: -10.570046424865723
    5. ':
' → logprob: -12.445046424865723
    6. ' :' → logprob: -13.070046424865723
    7. ' (' → logprob: -13.945046424865723
    8. '(s' → logprob: -13.945046424865723
    9. '(QWidget' → logprob: -14.195046424865723
    10. '():' → logprob: -14.195046424865723

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008539751172065735
    2. '(' → logprob: -6.13353967666626
    3. '    
' → logprob: -6.38353967666626
    4. ':' → logprob: -6.63353967666626
    5. ':
' → logprob: -6.63353967666626
    6. '    ' → logprob: -7.13353967666626
    7. ' ABC' → logprob: -7.88353967666626
    8. '(Abstract' → logprob: -8.508540153503418
    9. 'ABC' → logprob: -9.383540153503418
    10. ' 
' → logprob: -9.383540153503418

Token 103: ' """' (ID: 9280)
  Prédit: ' ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -1.1200371980667114
    2. 'ABC' → logprob: -1.2450371980667114
    3. '   ' → logprob: -1.3700371980667114
    4. 'def' → logprob: -2.870037078857422
    5. ' def' → logprob: -3.620037078857422
    6. ':' → logprob: -3.620037078857422
    7. 'List' → logprob: -5.370037078857422
    8. 'class' → logprob: -5.495037078857422
    9. '(' → logprob: -5.620037078857422
    10. ' List' → logprob: -5.620037078857422

Token 104: 'H' (ID: 39)
  Prédit: 'Man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Man' → logprob: -0.40101587772369385
    2. ' Man' → logprob: -1.6510158777236938
    3. 'Rep' → logprob: -2.7760157585144043
    4. 'Stores' → logprob: -4.026015758514404
    5. 'Handles' → logprob: -4.276015758514404
    6. 'Maint' → logprob: -4.276015758514404
    7. ' Maint' → logprob: -4.901015758514404
    8. 'H' → logprob: -5.276015758514404
    9. ' Stores' → logprob: -5.651015758514404
    10. 'class' → logprob: -5.901015758514404

Token 105: 'olds' (ID: 37608)
  Prédit: 'olds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olds' → logprob: -0.05330720171332359
    2. 'and' → logprob: -3.053307294845581
    3. 'old' → logprob: -5.678307056427002
    4. 'eld' → logprob: -8.17830753326416
    5. 'olding' → logprob: -8.30330753326416
    6. 'an' → logprob: -8.92830753326416
    7. '   ' → logprob: -8.92830753326416
    8. 'older' → logprob: -9.05330753326416
    9. 'rep' → logprob: -9.17830753326416
    10. 'andler' → logprob: -9.92830753326416

Token 106: ' multiple' (ID: 7598)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.04377058520913124
    2. ' multiple' → logprob: -3.9187705516815186
    3. ' schedules' → logprob: -4.043770790100098
    4. ' List' → logprob: -5.668770790100098
    5. ' the' → logprob: -7.668770790100098
    6. ' ' → logprob: -7.668770790100098
    7. ' all' → logprob: -7.918770790100098
    8. '   ' → logprob: -8.293770790100098
    9. 'a' → logprob: -8.543770790100098
    10. 's' → logprob: -9.793770790100098

Token 107: ' schedules' (ID: 50216)
  Prédit: ' schedules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' schedules' → logprob: -0.2600165009498596
    2. ' Schedule' → logprob: -1.5100164413452148
    3. 'Schedule' → logprob: -5.635016441345215
    4. ' S' → logprob: -6.510016441345215
    5. 'Schedules' → logprob: -6.635016441345215
    6. ' ' → logprob: -8.010016441345215
    7. 's' → logprob: -8.010016441345215
    8. ' schedule' → logprob: -8.135016441345215
    9. ' water' → logprob: -8.385016441345215
    10. ' List' → logprob: -8.510016441345215

Token 108: ' representing' (ID: 25389)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2621437609195709
    2. ' and' → logprob: -2.137143850326538
    3. '.' → logprob: -2.637143850326538
    4. ',' → logprob: -4.262143611907959
    5. ':
' → logprob: -4.637143611907959
    6. '   ' → logprob: -4.762143611907959
    7. '):' → logprob: -6.012143611907959
    8. '<|end|>' → logprob: -6.387143611907959
    9. ')' → logprob: -6.762143611907959
    10. '```' → logprob: -7.262143611907959

Token 109: ' one' (ID: 1001)
  Prédit: ' water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' water' → logprob: -0.28145474195480347
    2. ' a' → logprob: -1.9064548015594482
    3. ' the' → logprob: -2.7814548015594482
    4. 'a' → logprob: -4.281454563140869
    5. 'the' → logprob: -5.656454563140869
    6. ' different' → logprob: -5.781454563140869
    7. ' schedules' → logprob: -5.781454563140869
    8. 'water' → logprob: -6.031454563140869
    9. ' usage' → logprob: -6.406454563140869
    10. ' all' → logprob: -6.531454563140869

Token 110: ' day's' (ID: 139960)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.737720787525177
    2. ' day' → logprob: -2.4877207279205322
    3. 'water' → logprob: -2.7377207279205322
    4. ' day's' → logprob: -2.8627207279205322
    5. 'house' → logprob: -2.9877207279205322
    6. ' water' → logprob: -2.9877207279205322
    7. 'user' → logprob: -3.8627207279205322
    8. 'location' → logprob: -4.112720966339111
    9. 'usage' → logprob: -4.237720966339111
    10. ' usage' → logprob: -4.612720966339111

Token 111: ' water' (ID: 3411)
  Prédit: ' water'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' water' → logprob: -0.21595284342765808
    2. ' schedules' → logprob: -1.7159528732299805
    3. ' usage' → logprob: -4.9659528732299805
    4. 'water' → logprob: -5.9659528732299805
    5. ' schedule' → logprob: -6.0909528732299805
    6. ' ' → logprob: -6.4659528732299805
    7. ' scheduling' → logprob: -8.84095287322998
    8. ' worth' → logprob: -8.96595287322998
    9. ' demand' → logprob: -9.09095287322998
    10. ' collection' → logprob: -9.09095287322998

Token 112: ' consumption' (ID: 23818)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.015248429961502552
    2. 'usage' → logprob: -4.2652482986450195
    3. '_usage' → logprob: -8.01524829864502
    4. ' use' → logprob: -8.39024829864502
    5. ' usages' → logprob: -8.39024829864502
    6. ' consumption' → logprob: -8.89024829864502
    7. ' schedules' → logprob: -9.39024829864502
    8. ' ' → logprob: -10.51524829864502
    9. ' demand' → logprob: -10.89024829864502
    10. ' schedule' → logprob: -12.14024829864502

Token 113: ' pattern' (ID: 8302)
  Prédit: '."""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '."""' → logprob: -0.14569535851478577
    2. '.' → logprob: -2.395695447921753
    3. '"""' → logprob: -3.895695447921753
    4. '."' → logprob: -4.145695209503174
    5. '."""
' → logprob: -5.645695209503174
    6. ' schedules' → logprob: -5.770695209503174
    7. 's' → logprob: -7.895695209503174
    8. ')' → logprob: -8.520695686340332
    9. ',' → logprob: -8.645695686340332
    10. 'Schedules' → logprob: -8.895695686340332

Token 114: '."""
' (ID: 33044)
  Prédit: '."""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '."""' → logprob: -0.6917826533317566
    2. '.' → logprob: -1.0667827129364014
    3. '"""' → logprob: -2.0667827129364014
    4. '."' → logprob: -4.816782474517822
    5. '```' → logprob: -5.191782474517822
    6. '."""
' → logprob: -5.316782474517822
    7. ',' → logprob: -5.566782474517822
    8. '"""
' → logprob: -6.441782474517822
    9. '"' → logprob: -6.566782474517822
    10. '   ' → logprob: -6.816782474517822

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0051630777306854725
    2. 'def' → logprob: -6.505163192749023
    3. '
' → logprob: -6.630163192749023
    4. '    
' → logprob: -6.755163192749023
    5. ' def' → logprob: -6.880163192749023
    6. 'class' → logprob: -9.505163192749023
    7. ' 
' → logprob: -11.255163192749023
    8. '```' → logprob: -11.255163192749023
    9. ' ' → logprob: -11.380163192749023
    10. '    ' → logprob: -11.630163192749023

Token 116: ' DAY' (ID: 57137)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12711843848228455
    2. 'def' → logprob: -2.1271183490753174
    3. '   ' → logprob: -8.627118110656738
    4. 'class' → logprob: -11.752118110656738
    5. ' ' → logprob: -14.252118110656738
    6. '
' → logprob: -14.252118110656738
    7. ' schedules' → logprob: -14.627118110656738
    8. '	def' → logprob: -14.877118110656738
    9. 'de' → logprob: -15.377118110656738
    10. '```' → logprob: -15.502118110656738

Token 117: '_DURATION' (ID: 119913)
  Prédit: '_LENGTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.3112814426422119
    2. '_H' → logprob: -2.686281442642212
    3. '_DURATION' → logprob: -2.936281442642212
    4. '_SECONDS' → logprob: -2.936281442642212
    5. '_MIN' → logprob: -3.686281442642212
    6. '_' → logprob: -4.186281204223633
    7. 'S' → logprob: -4.311281204223633
    8. '   ' → logprob: -4.436281204223633
    9. '_IN' → logprob: -4.561281204223633
    10. '_LEN' → logprob: -5.186281204223633

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004205901641398668
    2. '=' → logprob: -5.754205703735352
    3. ':' → logprob: -7.254205703735352
    4. ' :' → logprob: -9.004205703735352
    5. ' ' → logprob: -9.254205703735352
    6. '   ' → logprob: -9.379205703735352
    7. '  ' → logprob: -11.879205703735352
    8. ':int' → logprob: -12.754205703735352
    9. ',' → logprob: -13.379205703735352
    10. '_IN' → logprob: -13.629205703735352

Token 119: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009947322309017181
    2. '24' → logprob: -5.009947299957275
    3. '864' → logprob: -5.759947299957275
    4. '144' → logprob: -10.134947776794434
    5. '86' → logprob: -10.384947776794434
    6. '240' → logprob: -12.509947776794434
    7. '863' → logprob: -15.759947776794434
    8. '288' → logprob: -15.884947776794434
    9. '846' → logprob: -16.009946823120117
    10. '360' → logprob: -16.134946823120117

Token 120: '864' (ID: 37438)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.3376873731613159
    2. '864' → logprob: -1.587687373161316
    3. '144' → logprob: -3.0876874923706055
    4. ' ' → logprob: -3.3376874923706055
    5. '86' → logprob: -6.9626874923706055
    6. '240' → logprob: -9.462687492370605
    7. '360' → logprob: -11.462687492370605
    8. '   ' → logprob: -12.712687492370605
    9. '288' → logprob: -12.837687492370605
    10. '860' → logprob: -13.462687492370605

Token 121: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -3.666993507067673e-05
    2. '0' → logprob: -10.250036239624023
    3. '000' → logprob: -13.750036239624023
    4. '۰۰' → logprob: -15.750036239624023
    5. '００' → logprob: -18.375036239624023
    6. '01' → logprob: -19.250036239624023
    7. '०' → logprob: -19.312536239624023
    8. '٠' → logprob: -19.500036239624023
    9. '006' → logprob: -19.812536239624023
    10. '{' → logprob: -20.000036239624023

Token 122: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7237082123756409
    2. '   ' → logprob: -1.098708152770996
    3. '    
' → logprob: -2.848708152770996
    4. ' 
' → logprob: -3.098708152770996
    5. ' ' → logprob: -3.473708152770996
    6. '    ' → logprob: -4.223708152770996
    7. '

' → logprob: -5.223708152770996
    8. '<|end|>' → logprob: -5.348708152770996
    9. 'def' → logprob: -5.473708152770996
    10. ' 

' → logprob: -5.598708152770996

Token 123: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9158629179000854
    2. '   ' → logprob: -1.1658629179000854
    3. '    
' → logprob: -1.2908629179000854
    4. ' 
' → logprob: -5.415863037109375
    5. 'def' → logprob: -5.790863037109375
    6. '    ' → logprob: -6.040863037109375
    7. '     
' → logprob: -6.290863037109375
    8. ':' → logprob: -8.290863037109375
    9. '   
' → logprob: -8.540863037109375
    10. '  
' → logprob: -8.915863037109375

Token 124: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0036155125126242638
    2. ' def' → logprob: -5.628615379333496
    3. '   ' → logprob: -11.503615379333496
    4. '_def' → logprob: -13.753615379333496
    5. 's' → logprob: -14.128615379333496
    6. 'de' → logprob: -14.628615379333496
    7. 'class' → logprob: -14.753615379333496
    8. ' schedules' → logprob: -14.878615379333496
    9. 'MAX' → logprob: -15.128615379333496
    10. '"""' → logprob: -15.378615379333496

Token 125: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2705768942832947
    2. ' def' → logprob: -1.7705769538879395
    3. ' __' → logprob: -2.8955769538879395
    4. '_' → logprob: -5.3955769538879395
    5. ' _' → logprob: -5.6455769538879395
    6. ' add' → logprob: -6.2705769538879395
    7. '  ' → logprob: -7.0205769538879395
    8. 'def' → logprob: -8.520576477050781
    9. ' ' → logprob: -9.145576477050781
    10. ' init' → logprob: -9.145576477050781

Token 126: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.1326749324798584
    2. 'nit' → logprob: -2.1326749324798584
    3. 'it' → logprob: -5.2576751708984375
    4. 'i' → logprob: -8.757675170898438
    5. 'def' → logprob: -9.007675170898438
    6. 'ini' → logprob: -9.507675170898438
    7. 'in' → logprob: -9.757675170898438
    8. 'int' → logprob: -10.382675170898438
    9. 'mit' → logprob: -11.132675170898438
    10. 'ni' → logprob: -11.632675170898438

Token 127: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02336287684738636
    2. '__' → logprob: -3.773362874984741
    3. '__(
' → logprob: -9.14836311340332
    4. '__((' → logprob: -12.27336311340332
    5. '__('' → logprob: -12.64836311340332
    6. '___' → logprob: -13.52336311340332
    7. '__(*' → logprob: -14.27336311340332
    8. '__("' → logprob: -15.02336311340332
    9. '(self' → logprob: -15.39836311340332
    10. '_' → logprob: -15.77336311340332

Token 128: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0026515135541558266
    2. ' self' → logprob: -6.002651691436768
    3. ')' → logprob: -8.75265121459961
    4. ' ' → logprob: -12.12765121459961
    5. '
' → logprob: -12.25265121459961
    6. '   ' → logprob: -12.37765121459961
    7. '  ' → logprob: -14.12765121459961
    8. '):
' → logprob: -14.75265121459961
    9. '(self' → logprob: -15.00265121459961
    10. '

' → logprob: -15.00265121459961

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017812862992286682
    2. '):' → logprob: -4.642812728881836
    3. ')' → logprob: -5.017812728881836
    4. 'self' → logprob: -7.392812728881836
    5. ' ,' → logprob: -7.517812728881836
    6. ' ):' → logprob: -9.392812728881836
    7. '   ' → logprob: -10.017812728881836
    8. ' ' → logprob: -10.767812728881836
    9. ' )' → logprob: -10.892812728881836
    10. '):
' → logprob: -11.017812728881836

Token 130: ' schedules' (ID: 50216)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8229519724845886
    2. ' schedules' → logprob: -1.1979520320892334
    3. ' self' → logprob: -1.5729520320892334
    4. 's' → logprob: -3.0729520320892334
    5. ')' → logprob: -5.572951793670654
    6. '   ' → logprob: -7.447951793670654
    7. ' ' → logprob: -8.072952270507812
    8. ')s' → logprob: -8.822952270507812
    9. '):
' → logprob: -9.322952270507812
    10. ' )' → logprob: -9.572952270507812

Token 131: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.9153885558771435e-06
    2. ' :' → logprob: -12.125005722045898
    3. '):' → logprob: -15.125005722045898
    4. '_:' → logprob: -16.1250057220459
    5. ')' → logprob: -17.5000057220459
    6. '=' → logprob: -17.6250057220459
    7. '   ' → logprob: -18.0000057220459
    8. '=None' → logprob: -18.3750057220459
    9. '__:' → logprob: -18.3750057220459
    10. ' ):' → logprob: -18.6250057220459

Token 132: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.030608925968408585
    2. 'List' → logprob: -3.530608892440796
    3. ' Optional' → logprob: -7.530609130859375
    4. ' None' → logprob: -8.655609130859375
    5. ' ' → logprob: -9.405609130859375
    6. 'None' → logprob: -11.030609130859375
    7. 'Optional' → logprob: -11.155609130859375
    8. ' list' → logprob: -11.780609130859375
    9. ')' → logprob: -11.905609130859375
    10. '	List' → logprob: -12.280609130859375

Token 133: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.895480277715251e-06
    2. ' [' → logprob: -12.250008583068848
    3. '[
' → logprob: -13.250008583068848
    4. ')' → logprob: -14.125008583068848
    5. ' ' → logprob: -14.625008583068848
    6. '[List' → logprob: -14.750008583068848
    7. '['' → logprob: -15.625008583068848
    8. '```' → logprob: -16.125009536743164
    9. '[int' → logprob: -16.625009536743164
    10. '[Index' → logprob: -16.625009536743164

Token 134: 'Schedule' (ID: 25891)
  Prédit: 'Schedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Schedule' → logprob: -0.0005099030095152557
    2. ' Schedule' → logprob: -7.625509738922119
    3. 'Tuple' → logprob: -10.750510215759277
    4. 'Scheduler' → logprob: -15.250510215759277
    5. 'Scheduled' → logprob: -16.75050926208496
    6. '   ' → logprob: -17.12550926208496
    7. 'Scheduling' → logprob: -17.37550926208496
    8. 'Schedules' → logprob: -17.37550926208496
    9. 'schedule' → logprob: -17.50050926208496
    10. ')' → logprob: -17.87550926208496

Token 135: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.012872648425400257
    2. ']):' → logprob: -4.887872695922852
    3. ']' → logprob: -5.387872695922852
    4. ')' → logprob: -7.387872695922852
    5. ']):
' → logprob: -10.637872695922852
    6. ']=' → logprob: -11.137872695922852
    7. ']:' → logprob: -11.887872695922852
    8. ' ])' → logprob: -12.137872695922852
    9. '):' → logprob: -12.512872695922852
    10. '],' → logprob: -12.637872695922852

Token 136: ' tank' (ID: 16109)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.8068187236785889
    2. ' total' → logprob: -1.4318187236785889
    3. ' capacity' → logprob: -3.056818723678589
    4. ' current' → logprob: -3.181818723678589
    5. ' max' → logprob: -3.181818723678589
    6. ')' → logprob: -3.556818723678589
    7. ' )' → logprob: -3.806818723678589
    8. ' start' → logprob: -4.431818962097168
    9. ' time' → logprob: -4.556818962097168
    10. ' base' → logprob: -4.744318962097168

Token 137: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.11711549758911133
    2. '_volume' → logprob: -2.3671154975891113
    3. '_size' → logprob: -5.242115497589111
    4. '_level' → logprob: -5.242115497589111
    5. '_' → logprob: -5.867115497589111
    6. '_levels' → logprob: -7.242115497589111
    7. ':' → logprob: -7.492115497589111
    8. '_cap' → logprob: -8.117115020751953
    9. '_height' → logprob: -8.117115020751953
    10. '_max' → logprob: -8.242115020751953

Token 138: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007430415134876966
    2. ':int' → logprob: -7.6257429122924805
    3. '=' → logprob: -9.25074291229248
    4. '):' → logprob: -9.75074291229248
    5. ')' → logprob: -9.87574291229248
    6. ' :' → logprob: -10.62574291229248
    7. ',' → logprob: -11.00074291229248
    8. '=None' → logprob: -13.00074291229248
    9. '=int' → logprob: -13.25074291229248
    10. ' ):' → logprob: -14.00074291229248

Token 139: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22549006342887878
    2. ' int' → logprob: -1.6004900932312012
    3. ':int' → logprob: -10.225489616394043
    4. ')' → logprob: -11.475489616394043
    5. '=int' → logprob: -11.600489616394043
    6. '[int' → logprob: -11.725489616394043
    7. 'float' → logprob: -12.350489616394043
    8. ' ' → logprob: -12.975489616394043
    9. ']int' → logprob: -13.600489616394043
    10. '	int' → logprob: -13.725489616394043

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015542018227279186
    2. '):' → logprob: -4.515542030334473
    3. ',' → logprob: -5.640542030334473
    4. ':' → logprob: -7.265542030334473
    5. ' )' → logprob: -8.765542030334473
    6. '=' → logprob: -9.890542030334473
    7. ' ):' → logprob: -12.015542030334473
    8. '=None' → logprob: -12.265542030334473
    9. '):
' → logprob: -12.515542030334473
    10. ' ' → logprob: -12.640542030334473

Token 141: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003012617235071957
    2. ')' → logprob: -8.375301361083984
    3. ' ->' → logprob: -10.500301361083984
    4. '->' → logprob: -11.000301361083984
    5. '):' → logprob: -11.500301361083984
    6. ',' → logprob: -11.625301361083984
    7. ':
' → logprob: -12.250301361083984
    8. ')->' → logprob: -13.750301361083984
    9. ' :' → logprob: -14.250301361083984
    10. '   ' → logprob: -15.250301361083984

Token 142: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.20141616463661194
    2. 'None' → logprob: -1.7014161348342896
    3. ' ' → logprob: -13.701416015625
    4. ' int' → logprob: -14.451416015625
    5. 'int' → logprob: -14.451416015625
    6. '_None' → logprob: -15.076416015625
    7. '   ' → logprob: -15.326416015625
    8. '=None' → logprob: -16.326416015625
    9. ')' → logprob: -16.451416015625
    10. '(None' → logprob: -17.076416015625

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013738969573751092
    2. '):' → logprob: -9.000137329101562
    3. ':
' → logprob: -11.625137329101562
    4. ',' → logprob: -13.250137329101562
    5. ' :' → logprob: -14.000137329101562
    6. ':def' → logprob: -14.250137329101562
    7. '():' → logprob: -15.000137329101562
    8. ':**' → logprob: -15.000137329101562
    9. ')' → logprob: -15.250137329101562
    10. '):
' → logprob: -15.875137329101562

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027099132421426475
    2. 'self' → logprob: -8.75027084350586
    3. ' self' → logprob: -10.12527084350586
    4. '   ' → logprob: -10.75027084350586
    5. '        
' → logprob: -10.75027084350586
    6. '
' → logprob: -11.62527084350586
    7. ':' → logprob: -12.50027084350586
    8. '      ' → logprob: -13.00027084350586
    9. '<|end|>' → logprob: -13.25027084350586
    10. ' ' → logprob: -13.62527084350586

Token 145: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08915996551513672
    2. ' self' → logprob: -2.7141599655151367
    3. '       ' → logprob: -3.9641599655151367
    4. '   ' → logprob: -10.589159965515137
    5. '	self' → logprob: -11.089159965515137
    6. 'super' → logprob: -11.839159965515137
    7. ' ' → logprob: -12.089159965515137
    8. '	' → logprob: -14.714159965515137
    9. ' super' → logprob: -14.839159965515137
    10. ' ' → logprob: -15.089159965515137

Token 146: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.1627212017774582
    2. '.' → logprob: -1.9127211570739746
    3. '.t' → logprob: -6.537721157073975
    4. ' .' → logprob: -7.037721157073975
    5. '.schedule' → logprob: -9.912721633911133
    6. ' ' → logprob: -10.412721633911133
    7. 's' → logprob: -10.787721633911133
    8. '.schedulers' → logprob: -10.787721633911133
    9. '.scheduler' → logprob: -11.287721633911133
    10. '.period' → logprob: -12.537721633911133

Token 147: 'chedules' (ID: 112594)
  Prédit: 'chedules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chedules' → logprob: -3.8889261304575484e-06
    2. 'chedule' → logprob: -12.750003814697266
    3. 'elf' → logprob: -15.625003814697266
    4. 'c' → logprob: -15.750003814697266
    5. 'hed' → logprob: -15.875003814697266
    6. 'ch' → logprob: -16.750003814697266
    7. 'chedulers' → logprob: -16.875003814697266
    8. 't' → logprob: -17.000003814697266
    9. 'ched' → logprob: -17.250003814697266
    10. 'Schedules' → logprob: -17.375003814697266

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07895775884389877
    2. '=' → logprob: -2.5789577960968018
    3. ' ' → logprob: -9.703957557678223
    4. '=s' → logprob: -11.953957557678223
    5. '  ' → logprob: -15.328957557678223
    6. ':' → logprob: -16.57895851135254
    7. 's' → logprob: -16.82895851135254
    8. '.extend' → logprob: -16.95395851135254
    9. '＝' → logprob: -17.07895851135254
    10. '   ' → logprob: -17.20395851135254

Token 149: ' schedules' (ID: 50216)
  Prédit: ' schedules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' schedules' → logprob: -0.005933893844485283
    2. 's' → logprob: -5.13093376159668
    3. 'Schedules' → logprob: -13.38093376159668
    4. '	s' → logprob: -14.00593376159668
    5. ' schedule' → logprob: -14.25593376159668
    6. 'schedule' → logprob: -14.25593376159668
    7. ' s' → logprob: -14.50593376159668
    8. '_s' → logprob: -15.13093376159668
    9. 'chedules' → logprob: -15.25593376159668
    10. ' scheduling' → logprob: -15.38093376159668

Token 150: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036477106623351574
    2. '
' → logprob: -5.753647804260254
    3. ',' → logprob: -8.503647804260254
    4. '<|end|>' → logprob: -9.503647804260254
    5. 'self' → logprob: -9.753647804260254
    6. '        
' → logprob: -9.753647804260254
    7. ' self' → logprob: -10.128647804260254
    8. '   ' → logprob: -11.628647804260254
    9. ',
' → logprob: -11.753647804260254
    10. '        ' → logprob: -12.878647804260254

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009171743295155466
    2. '
' → logprob: -7.125916957855225
    3. '<|end|>' → logprob: -10.375917434692383
    4. ' self' → logprob: -10.625917434692383
    5. '        
' → logprob: -11.000917434692383
    6. ',' → logprob: -11.000917434692383
    7. 'self' → logprob: -11.125917434692383
    8. '   ' → logprob: -13.375917434692383
    9. '  
' → logprob: -13.875917434692383
    10. '      ' → logprob: -14.125917434692383

Token 152: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01112634688615799
    2. ' self' → logprob: -4.511126518249512
    3. '       ' → logprob: -9.511126518249512
    4. '   ' → logprob: -13.386126518249512
    5. 's' → logprob: -13.761126518249512
    6. '	self' → logprob: -14.761126518249512
    7. '
' → logprob: -15.136126518249512
    8. 'tank' → logprob: -16.011125564575195
    9. '```' → logprob: -16.011125564575195
    10. ' ' → logprob: -16.136125564575195

Token 153: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.05584809556603432
    2. '.' → logprob: -2.9308481216430664
    3. '.capacity' → logprob: -7.680848121643066
    4. ' .' → logprob: -8.305848121643066
    5. '.s' → logprob: -8.430848121643066
    6. ' ' → logprob: -12.055848121643066
    7. ' tank' → logprob: -12.430848121643066
    8. 'tank' → logprob: -13.055848121643066
    9. '.cap' → logprob: -13.305848121643066
    10. '       ' → logprob: -13.555848121643066

Token 154: 'ank' (ID: 1104)
  Prédit: 'ank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ank' → logprob: -0.0013519029598683119
    2. 'tank' → logprob: -6.626351833343506
    3. '   ' → logprob: -12.126352310180664
    4. '```' → logprob: -12.501352310180664
    5. 'ankt' → logprob: -13.001352310180664
    6. 'Tank' → logprob: -13.126352310180664
    7. 'anks' → logprob: -13.126352310180664
    8. 'a' → logprob: -13.126352310180664
    9. ' tank' → logprob: -13.626352310180664
    10. '_' → logprob: -13.876352310180664

Token 155: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.0024395049549639225
    2. '_cap' → logprob: -6.502439498901367
    3. '_' → logprob: -7.002439498901367
    4. ' _' → logprob: -12.002439498901367
    5. 'capacity' → logprob: -12.627439498901367
    6. '_caps' → logprob: -13.002439498901367
    7. '_c' → logprob: -13.127439498901367
    8. '_depth' → logprob: -13.252439498901367
    9. '_current' → logprob: -13.627439498901367
    10. '_usage' → logprob: -14.002439498901367

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326761841773987
    2. '=' → logprob: -1.3132675886154175
    3. ' ' → logprob: -12.813267707824707
    4. '=int' → logprob: -13.563267707824707
    5. '<|end|>' → logprob: -13.938267707824707
    6. ':' → logprob: -14.938267707824707
    7. ',' → logprob: -15.438267707824707
    8. ')' → logprob: -15.563267707824707
    9. '.' → logprob: -16.56326675415039
    10. '=

' → logprob: -17.06326675415039

Token 157: ' tank' (ID: 16109)
  Prédit: ' tank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tank' → logprob: -0.3868752717971802
    2. 'tank' → logprob: -1.1368752717971802
    3. 't' → logprob: -12.76187515258789
    4. ' tanker' → logprob: -15.13687515258789
    5. ' t' → logprob: -15.63687515258789
    6. ' ' → logprob: -15.63687515258789
    7. '	t' → logprob: -15.88687515258789
    8. 'Tank' → logprob: -15.88687515258789
    9. ' ' → logprob: -16.01187515258789
    10. ' tanque' → logprob: -16.13687515258789

Token 158: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.00019579214858822525
    2. '_' → logprob: -8.750195503234863
    3. '_cap' → logprob: -11.125195503234863
    4. 'capacity' → logprob: -11.250195503234863
    5. ' _' → logprob: -12.000195503234863
    6. '   ' → logprob: -13.500195503234863
    7. '_
' → logprob: -14.375195503234863
    8. ' capacity' → logprob: -14.500195503234863
    9. ' ' → logprob: -15.250195503234863
    10. '  ' → logprob: -16.25019645690918

Token 159: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09917526692152023
    2. '<|end|>' → logprob: -2.599175214767456
    3. '

' → logprob: -3.974175214767456
    4. '
    
' → logprob: -7.724175453186035
    5. '<|end|>' → logprob: -7.724175453186035
    6. '   ' → logprob: -8.724175453186035
    7. '    
' → logprob: -9.349175453186035
    8. 'def' → logprob: -9.474175453186035
    9. ' def' → logprob: -11.474175453186035
    10. ',' → logprob: -11.599175453186035

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4106481373310089
    2. '
' → logprob: -1.1606481075286865
    3. '    
' → logprob: -4.410648345947266
    4. 'def' → logprob: -4.660648345947266
    5. '<|end|>' → logprob: -8.035648345947266
    6. ' 
' → logprob: -8.160648345947266
    7. ' def' → logprob: -8.660648345947266
    8. '\n' → logprob: -8.910648345947266
    9. '        
' → logprob: -8.910648345947266
    10. ',' → logprob: -9.035648345947266

Token 161: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.037424683570861816
    2. '@' → logprob: -3.4124245643615723
    3. ' def' → logprob: -5.662424564361572
    4. '   ' → logprob: -8.66242504119873
    5. ' @' → logprob: -9.78742504119873
    6. '@property' → logprob: -9.78742504119873
    7. 'd' → logprob: -11.66242504119873
    8. ' ' → logprob: -13.41242504119873
    9. 'class' → logprob: -13.91242504119873
    10. 'de' → logprob: -14.66242504119873

Token 162: ' intervals' (ID: 49900)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.024256879463791847
    2. ' calculate' → logprob: -4.899256706237793
    3. 'def' → logprob: -5.524256706237793
    4. ' total' → logprob: -5.774256706237793
    5. ' max' → logprob: -6.274256706237793
    6. '_' → logprob: -6.524256706237793
    7. ' get' → logprob: -6.649256706237793
    8. '_iter' → logprob: -7.024256706237793
    9. '_total' → logprob: -7.524256706237793
    10. ' ' → logprob: -7.524256706237793

Token 163: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000718030845746398
    2. '(' → logprob: -7.250718116760254
    3. ' (' → logprob: -12.875718116760254
    4. '_' → logprob: -13.625718116760254
    5. '(s' → logprob: -14.125718116760254
    6. '_(' → logprob: -14.250718116760254
    7. '()' → logprob: -14.375718116760254
    8. 'self' → logprob: -14.875718116760254
    9. '   ' → logprob: -15.250718116760254
    10. 's' → logprob: -15.750718116760254

Token 164: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23453326523303986
    2. '(self' → logprob: -1.6095333099365234
    3. 'self' → logprob: -4.734533309936523
    4. '   ' → logprob: -9.609533309936523
    5. '       ' → logprob: -9.859533309936523
    6. ' self' → logprob: -10.109533309936523
    7. ' )' → logprob: -10.109533309936523
    8. '```' → logprob: -10.859533309936523
    9. '	self' → logprob: -11.234533309936523
    10. ' ' → logprob: -11.484533309936523

Token 165: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07543512433767319
    2. ' ->' → logprob: -3.575435161590576
    3. 'self' → logprob: -3.825435161590576
    4. '->' → logprob: -4.075435161590576
    5. ')' → logprob: -5.325435161590576
    6. '   ' → logprob: -7.325435161590576
    7. '       ' → logprob: -8.325434684753418
    8. ' self' → logprob: -10.700434684753418
    9. '(' → logprob: -10.950434684753418
    10. ' ' → logprob: -11.075434684753418

Token 166: ' Iterator' (ID: 41994)
  Prédit: ' Iterator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Iterator' → logprob: -0.02327972650527954
    2. 'Iterator' → logprob: -3.7732796669006348
    3. ' List' → logprob: -11.148280143737793
    4. '	Iterator' → logprob: -11.523280143737793
    5. 'List' → logprob: -12.898280143737793
    6. ' ' → logprob: -13.148280143737793
    7. '   ' → logprob: -13.398280143737793
    8. ' Iterable' → logprob: -13.648280143737793
    9. ' Generator' → logprob: -13.773280143737793
    10. '_iterator' → logprob: -14.148280143737793

Token 167: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00019865304057020694
    2. '[List' → logprob: -9.000198364257812
    3. '[int' → logprob: -9.625198364257812
    4. '[
' → logprob: -13.000198364257812
    5. '[T' → logprob: -13.875198364257812
    6. '[(' → logprob: -13.875198364257812
    7. ' [' → logprob: -13.875198364257812
    8. '[Index' → logprob: -14.125198364257812
    9. '```' → logprob: -14.250198364257812
    10. '[str' → logprob: -14.250198364257812

Token 168: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.6445276141166687
    2. 'Schedule' → logprob: -1.0195276737213135
    3. ' Tuple' → logprob: -2.5195276737213135
    4. ' Schedule' → logprob: -3.3945276737213135
    5. 'Interval' → logprob: -9.769527435302734
    6. ' ' → logprob: -10.019527435302734
    7. 'Tu' → logprob: -10.644527435302734
    8. 'int' → logprob: -10.644527435302734
    9. 'tuple' → logprob: -11.144527435302734
    10. 'Scheduler' → logprob: -11.207027435302734

Token 169: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -12.87500286102295
    3. 'int' → logprob: -16.375001907348633
    4. ',int' → logprob: -16.625001907348633
    5. '[in' → logprob: -18.000001907348633
    6. '[Int' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.250001907348633
    8. ' [' → logprob: -19.375001907348633
    9. '(int' → logprob: -19.625001907348633
    10. '[str' → logprob: -19.625001907348633

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002441741817165166
    2. ',int' → logprob: -8.375244140625
    3. ' ,' → logprob: -11.500244140625
    4. '<|end|>' → logprob: -13.500244140625
    5. 'int' → logprob: -14.750244140625
    6. '‌,' → logprob: -15.125244140625
    7. '[int' → logprob: -15.250244140625
    8. ',Integer' → logprob: -15.625244140625
    9. ' ' → logprob: -15.875244140625
    10. ',
' → logprob: -16.125244140625

Token 171: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00013715129171032459
    2. ' int' → logprob: -9.750137329101562
    3. 'Schedule' → logprob: -10.375137329101562
    4. '[int' → logprob: -10.500137329101562
    5. 'List' → logprob: -12.750137329101562
    6. '	int' → logprob: -13.250137329101562
    7. 'Tuple' → logprob: -13.250137329101562
    8. ']int' → logprob: -13.250137329101562
    9. '   ' → logprob: -13.500137329101562
    10. 'Optional' → logprob: -13.687637329101562

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001387009397149086
    2. ']]' → logprob: -10.000138282775879
    3. ',int' → logprob: -10.000138282775879
    4. ' ,' → logprob: -10.125138282775879
    5. ',List' → logprob: -12.625138282775879
    6. ']]:
' → logprob: -13.375138282775879
    7. ']],' → logprob: -14.750138282775879
    8. ',None' → logprob: -15.000138282775879
    9. 'int' → logprob: -15.125138282775879
    10. ']]]' → logprob: -15.500138282775879

Token 173: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0023359241895377636
    2. ' int' → logprob: -6.127336025238037
    3. 'List' → logprob: -10.002335548400879
    4. '[int' → logprob: -10.002335548400879
    5. 'Schedule' → logprob: -10.502335548400879
    6. 'float' → logprob: -11.252335548400879
    7. ' ' → logprob: -12.252335548400879
    8. ']int' → logprob: -12.502335548400879
    9. '	int' → logprob: -13.252335548400879
    10. ' Schedule' → logprob: -13.377335548400879

Token 174: ']]:
' (ID: 183340)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.052825041115283966
    2. ',' → logprob: -3.4278249740600586
    3. ']:' → logprob: -4.677824974060059
    4. ']]:
' → logprob: -5.052824974060059
    5. ']' → logprob: -6.302824974060059
    6. ' ]' → logprob: -6.927824974060059
    7. ']>' → logprob: -8.177824974060059
    8. ':' → logprob: -9.677824974060059
    9. ']):' → logprob: -9.927824974060059
    10. ')]' → logprob: -11.552824974060059

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6328749060630798
    2. ':' → logprob: -0.7578749060630798
    3. '   ' → logprob: -9.757874488830566
    4. ' :' → logprob: -9.882874488830566
    5. ':
' → logprob: -10.007874488830566
    6. ',' → logprob: -10.382874488830566
    7. '):' → logprob: -10.507874488830566
    8. '    ' → logprob: -11.382874488830566
    9. '        
' → logprob: -11.632874488830566
    10. '\n' → logprob: -12.007874488830566

Token 176: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004818018991500139
    2. ' for' → logprob: -6.379817962646484
    3. ':' → logprob: -6.629817962646484
    4. '
' → logprob: -7.004817962646484
    5. 'for' → logprob: -7.629817962646484
    6. '   ' → logprob: -9.004817962646484
    7. 'n' → logprob: -9.504817962646484
    8. '        
' → logprob: -10.004817962646484
    9. '"""' (adapté à ' """') → logprob: -11.129817962646484
    10. '#' → logprob: -11.129817962646484

Token 177: 'Generate' (ID: 40569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2723056375980377
    2. '       ' → logprob: -2.022305727005005
    3. 'prev' → logprob: -3.647305727005005
    4. 'current' → logprob: -3.772305727005005
    5. 'start' → logprob: -4.147305488586426
    6. 'last' → logprob: -4.397305488586426
    7. '"""' → logprob: -4.522305488586426
    8. '   ' → logprob: -5.022305488586426
    9. 'yield' → logprob: -5.397305488586426
    10. '#' → logprob: -6.397305488586426

Token 178: ' tuples' (ID: 112464)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.2762738466262817
    2. ' (' → logprob: -1.4012738466262817
    3. ' for' → logprob: -2.026273727416992
    4. ' schedule' → logprob: -2.026273727416992
    5. 'from' → logprob: -2.401273727416992
    6. '(schedule' → logprob: -3.651273727416992
    7. 'for' → logprob: -3.901273727416992
    8. '       ' → logprob: -4.276273727416992
    9. '           ' → logprob: -4.776273727416992
    10. 'schedule' → logprob: -5.026273727416992

Token 179: ' of' (ID: 328)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.46369272470474243
    2. ' of' → logprob: -1.2136926651000977
    3. '(start' → logprob: -3.5886926651000977
    4. ' for' → logprob: -4.213692665100098
    5. '(' → logprob: -4.463692665100098
    6. '       ' → logprob: -5.713692665100098
    7. ' in' → logprob: -5.838692665100098
    8. 'of' → logprob: -5.963692665100098
    9. ' with' → logprob: -6.088692665100098
    10. ' from' → logprob: -6.463692665100098

Token 180: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.9662230610847473
    2. 'start' → logprob: -1.0912230014801025
    3. ' (' → logprob: -1.7162230014801025
    4. ' start' → logprob: -2.7162230014801025
    5. '(schedule' → logprob: -3.9662230014801025
    6. '(self' → logprob: -5.591223239898682
    7. ' schedule' → logprob: -5.716223239898682
    8. 'interval' → logprob: -5.841223239898682
    9. 'schedule' → logprob: -5.966223239898682
    10. 'self' → logprob: -6.341223239898682

Token 181: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04891651123762131
    2. ' start' → logprob: -3.0489165782928467
    3. 'interval' → logprob: -8.923916816711426
    4. 'self' → logprob: -9.173916816711426
    5. 'schedule' → logprob: -10.423916816711426
    6. ')' → logprob: -11.173916816711426
    7. '   ' → logprob: -11.423916816711426
    8. 'int' → logprob: -11.548916816711426
    9. ' interval' → logprob: -12.298916816711426
    10. ' ' → logprob: -12.423916816711426

Token 182: '_time' (ID: 6425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003662020608317107
    2. ' ,' → logprob: -8.2503662109375
    3. ',start' → logprob: -10.5003662109375
    4. 'time' → logprob: -10.6253662109375
    5. '_time' → logprob: -10.6253662109375
    6. ',end' → logprob: -11.7503662109375
    7. '_,' → logprob: -11.8753662109375
    8. ',time' → logprob: -12.5003662109375
    9. ',int' → logprob: -12.7503662109375
    10. '_start' → logprob: -13.8753662109375

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.939851037808694e-05
    2. ' ,' → logprob: -10.500029563903809
    3. ',start' → logprob: -14.375029563903809
    4. '<|end|>' → logprob: -15.000029563903809
    5. ',
' → logprob: -15.250029563903809
    6. ',int' → logprob: -15.375029563903809
    7. '‌,' → logprob: -16.125028610229492
    8. ',end' → logprob: -17.500028610229492
    9. 'start' → logprob: -17.875028610229492
    10. ',

' → logprob: -17.875028610229492

Token 184: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4288158118724823
    2. ' end' → logprob: -1.0538158416748047
    3. 'duration' → logprob: -9.428815841674805
    4. ' duration' → logprob: -11.178815841674805
    5. ',' → logprob: -12.303815841674805
    6. '   ' → logprob: -12.553815841674805
    7. ',end' → logprob: -13.178815841674805
    8. ' ' → logprob: -13.303815841674805
    9. ' usage' → logprob: -13.303815841674805
    10. '	end' → logprob: -13.428815841674805

Token 185: '_time' (ID: 6425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03585117310285568
    2. '_time' → logprob: -3.410851240158081
    3. '_' → logprob: -6.535851001739502
    4. '_,' → logprob: -7.910851001739502
    5. ')' → logprob: -8.28585147857666
    6. ' ,' → logprob: -10.16085147857666
    7. 'time' → logprob: -10.66085147857666
    8. ',_' → logprob: -10.66085147857666
    9. ' _' → logprob: -11.78585147857666
    10. '_times' → logprob: -11.91085147857666

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.754368223482743e-05
    2. ' ,' → logprob: -9.625067710876465
    3. ',int' → logprob: -14.875067710876465
    4. '‌,' → logprob: -15.750067710876465
    5. ',
' → logprob: -16.12506675720215
    6. 's' → logprob: -16.25006675720215
    7. ',start' → logprob: -16.62506675720215
    8. '<|end|>' → logprob: -16.75006675720215
    9. ',user' → logprob: -17.00006675720215
    10. ')' → logprob: -17.12506675720215

Token 187: ' net' (ID: 2776)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.10654529184103012
    2. ' water' → logprob: -2.7315452098846436
    3. 'usage' → logprob: -3.3565452098846436
    4. 'water' → logprob: -7.731545448303223
    5. ' rate' → logprob: -8.231545448303223
    6. ' ' → logprob: -8.606545448303223
    7. ' use' → logprob: -10.106545448303223
    8. 'rate' → logprob: -10.481545448303223
    9. ' current' → logprob: -10.606545448303223
    10. '   ' → logprob: -10.731545448303223

Token 188: '_usage' (ID: 77753)
  Prédit: '_usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.6719781160354614
    2. '_water' → logprob: -1.4219781160354614
    3. ' water' → logprob: -1.6719781160354614
    4. ' usage' → logprob: -3.796977996826172
    5. '_' → logprob: -4.546977996826172
    6. 'water' → logprob: -4.921977996826172
    7. ')' → logprob: -5.046977996826172
    8. 'usage' → logprob: -5.046977996826172
    9. ' ' → logprob: -6.296977996826172
    10. ' _' → logprob: -6.546977996826172

Token 189: '_rate' (ID: 20477)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022726545576006174
    2. '_rate' → logprob: -6.502272605895996
    3. ' )' → logprob: -7.752272605895996
    4. '),' → logprob: -9.377272605895996
    5. '):' → logprob: -9.627272605895996
    6. ',' → logprob: -10.002272605895996
    7. '_change' → logprob: -10.377272605895996
    8. ').' → logprob: -10.502272605895996
    9. ')
' → logprob: -10.627272605895996
    10. ',)' → logprob: -11.502272605895996

Token 190: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003231878508813679
    2. ' )' → logprob: -8.125323295593262
    3. '):' → logprob: -11.500323295593262
    4. '   ' → logprob: -12.375323295593262
    5. ')
' → logprob: -12.625323295593262
    6. '),' → logprob: -12.875323295593262
    7. ',' → logprob: -13.000323295593262
    8. '       ' → logprob: -13.500323295593262
    9. ',)' → logprob: -14.250323295593262
    10. ').' → logprob: -14.500323295593262

Token 191: ' for' (ID: 395)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3963793218135834
    2. ')' → logprob: -2.271379232406616
    3. '       ' → logprob: -2.396379232406616
    4. ':' → logprob: -2.396379232406616
    5. ' for' → logprob: -4.396379470825195
    6. ' ):' → logprob: -4.896379470825195
    7. '   ' → logprob: -5.021379470825195
    8. ',' → logprob: -5.271379470825195
    9. ' from' → logprob: -6.021379470825195
    10. '):
' → logprob: -6.271379470825195

Token 192: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9450186491012573
    2. ' self' → logprob: -1.4450186491012573
    3. ' each' → logprob: -1.8200186491012573
    4. ' schedule' → logprob: -2.320018768310547
    5. ' the' → logprob: -2.820018768310547
    6. 'self' → logprob: -3.820018768310547
    7. ' s' → logprob: -5.695018768310547
    8. '   ' → logprob: -5.695018768310547
    9. ' intervals' → logprob: -5.695018768310547
    10. ' interval' → logprob: -5.945018768310547

Token 193: ' continuous' (ID: 27979)
  Prédit: ' schedules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' schedules' → logprob: -0.6591094732284546
    2. ' intervals' → logprob: -0.7841094732284546
    3. ' schedule' → logprob: -4.534109592437744
    4. 'interval' → logprob: -6.034109592437744
    5. ' periods' → logprob: -6.034109592437744
    6. ' scheduled' → logprob: -6.159109592437744
    7. 'schedule' → logprob: -6.409109592437744
    8. ' time' → logprob: -6.534109592437744
    9. ' events' → logprob: -7.159109592437744
    10. ' times' → logprob: -7.534109592437744

Token 194: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.2770022749900818
    2. ' periods' → logprob: -2.0270023345947266
    3. ' usage' → logprob: -3.4020023345947266
    4. ' time' → logprob: -3.9020023345947266
    5. ' segments' → logprob: -4.027002334594727
    6. ' schedules' → logprob: -4.777002334594727
    7. 'interval' → logprob: -5.027002334594727
    8. ' water' → logprob: -5.152002334594727
    9. 'period' → logprob: -6.027002334594727
    10. 'usage' → logprob: -6.277002334594727

Token 195: ' including' (ID: 3463)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4774351418018341
    2. '):' → logprob: -1.3524351119995117
    3. '   ' → logprob: -2.9774351119995117
    4. ':' → logprob: -3.7274351119995117
    5. ')' → logprob: -4.102435111999512
    6. ',' → logprob: -4.727435111999512
    7. '):
' → logprob: -4.852435111999512
    8. ' ):' → logprob: -5.477435111999512
    9. ' in' → logprob: -6.602435111999512
    10. '.' → logprob: -6.602435111999512

Token 196: ' idle' (ID: 54644)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -1.8789390325546265
    2. ' tank' → logprob: -1.8789390325546265
    3. ' gaps' → logprob: -2.128939151763916
    4. ' periods' → logprob: -2.128939151763916
    5. ' the' → logprob: -2.628939151763916
    6. 'tank' → logprob: -2.628939151763916
    7. ' changes' → logprob: -3.003939151763916
    8. ' intervals' → logprob: -3.003939151763916
    9. ' idle' → logprob: -3.503939151763916
    10. ' all' → logprob: -3.503939151763916

Token 197: ' times' (ID: 4238)
  Prédit: ' periods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' periods' → logprob: -0.5200900435447693
    2. ' intervals' → logprob: -2.145090103149414
    3. '_period' → logprob: -2.770090103149414
    4. 's' → logprob: -2.895090103149414
    5. ' times' → logprob: -3.020090103149414
    6. ')' → logprob: -3.895090103149414
    7. '_' → logprob: -3.895090103149414
    8. '_times' → logprob: -4.020090103149414
    9. '_inter' → logprob: -4.145090103149414
    10. 'period' → logprob: -4.645090103149414

Token 198: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09349402040243149
    2. '       ' → logprob: -3.093493938446045
    3. '):
' → logprob: -3.468493938446045
    4. ')' → logprob: -5.343493938446045
    5. '   ' → logprob: -5.343493938446045
    6. ':' → logprob: -6.593493938446045
    7. ',' → logprob: -7.218493938446045
    8. '):
' → logprob: -7.718493938446045
    9. ' ):' → logprob: -7.968493938446045
    10. '    ' → logprob: -9.968494415283203

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05900852754712105
    2. ')' → logprob: -3.1840085983276367
    3. '        
' → logprob: -5.434008598327637
    4. '):
' → logprob: -6.059008598327637
    5. '
' → logprob: -6.434008598327637
    6. ' 
' → logprob: -6.559008598327637
    7. '"""' → logprob: -6.559008598327637
    8. '```' → logprob: -6.559008598327637
    9. '):' → logprob: -7.434008598327637
    10. ' )' → logprob: -7.684008598327637

Token 200: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19001510739326477
    2. '
' → logprob: -2.3150150775909424
    3. '"""' → logprob: -3.0650150775909424
    4. ')' → logprob: -4.9400153160095215
    5. '        
' → logprob: -4.9400153160095215
    6. '"""
' → logprob: -5.5650153160095215
    7. ' """' → logprob: -5.6900153160095215
    8. ' 
' → logprob: -6.5650153160095215
    9. '```' → logprob: -7.0650153160095215
    10. ' """
' → logprob: -7.1900153160095215

Token 201: ' usage' (ID: 16622)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -1.1679797172546387
    2. ' schedules' → logprob: -1.5429797172546387
    3. ' times' → logprob: -2.0429797172546387
    4. ' all' → logprob: -2.2929797172546387
    5. '       ' → logprob: -2.6679797172546387
    6. 's' → logprob: -3.6679797172546387
    7. ' usage' → logprob: -3.7929797172546387
    8. '#' → logprob: -4.042979717254639
    9. 'times' → logprob: -4.042979717254639
    10. ' if' → logprob: -4.292979717254639

Token 202: '_rate' (ID: 20477)
  Prédit: '_rates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rates' → logprob: -0.5868445038795471
    2. '_rate' → logprob: -1.5868444442749023
    3. '   ' → logprob: -1.9618444442749023
    4. '_' → logprob: -3.3368444442749023
    5. ' rates' → logprob: -3.5868444442749023
    6. '       ' → logprob: -4.336844444274902
    7. ' _' → logprob: -4.711844444274902
    8. 's' → logprob: -5.336844444274902
    9. ' =' → logprob: -6.211844444274902
    10. '    ' → logprob: -6.711844444274902

Token 203: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.297040730714798
    2. ' changes' → logprob: -3.1720407009124756
    3. ' for' → logprob: -3.4220407009124756
    4. ' s' → logprob: -3.5470407009124756
    5. ' is' → logprob: -3.6720407009124756
    6. ' of' → logprob: -3.9220407009124756
    7. ')' → logprob: -3.9220407009124756
    8. ' should' → logprob: -4.422040939331055
    9. ' from' → logprob: -4.547040939331055
    10. ' in' → logprob: -4.797040939331055

Token 204: ' positive' (ID: 8841)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.625047504901886
    2. '0' → logprob: -1.8750474452972412
    3. ' zero' → logprob: -2.250047445297241
    4. ' ' → logprob: -2.750047445297241
    5. ' summed' → logprob: -3.375047445297241
    6. ' adjusted' → logprob: -3.500047445297241
    7. ' net' → logprob: -3.500047445297241
    8. ' cumulative' → logprob: -4.12504768371582
    9. 'the' → logprob: -4.50004768371582
    10. 'net' → logprob: -5.37504768371582

Token 205: ' for' (ID: 395)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.36578458547592163
    2. ',' → logprob: -1.6157846450805664
    3. ' and' → logprob: -2.9907846450805664
    4. ' for' → logprob: -3.8657846450805664
    5. ' if' → logprob: -4.240784645080566
    6. ' during' → logprob: -5.240784645080566
    7. ')' → logprob: -5.490784645080566
    8. '.' → logprob: -5.740784645080566
    9. '   ' → logprob: -6.490784645080566
    10. ' to' → logprob: -6.615784645080566

Token 206: ' consumption' (ID: 23818)
  Prédit: ' water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' water' → logprob: -0.33655253052711487
    2. ' consumption' → logprob: -2.211552619934082
    3. 'cons' → logprob: -2.461552619934082
    4. 'water' → logprob: -2.836552619934082
    5. ' usage' → logprob: -3.836552619934082
    6. 'usage' → logprob: -5.461552619934082
    7. ' intervals' → logprob: -6.086552619934082
    8. ' periods' → logprob: -7.211552619934082
    9. ' ' → logprob: -7.711552619934082
    10. ' net' → logprob: -7.836552619934082

Token 207: '."""
' (ID: 33044)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.399971604347229
    2. ' and' → logprob: -1.149971604347229
    3. ' ,' → logprob: -4.8999714851379395
    4. '   ' → logprob: -6.2749714851379395
    5. '.' → logprob: -6.6499714851379395
    6. ')' → logprob: -7.0249714851379395
    7. ' or' → logprob: -7.6499714851379395
    8. '       ' → logprob: -8.024971961975098
    9. 'and' → logprob: -8.149971961975098
    10. ' (' → logprob: -9.649971961975098

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22845663130283356
    2. ':' → logprob: -1.6034566164016724
    3. '   ' → logprob: -6.603456497192383
    4. ':
' → logprob: -7.853456497192383
    5. '        
' → logprob: -8.103456497192383
    6. '
' → logprob: -8.353456497192383
    7. '):' → logprob: -8.853456497192383
    8. ',' → logprob: -8.978456497192383
    9. '\n' → logprob: -9.353456497192383
    10. ' :' → logprob: -9.728456497192383

Token 209: ' pos' (ID: 1253)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9953964352607727
    2. 'times' → logprob: -1.370396375656128
    3. '       ' → logprob: -1.745396375656128
    4. 'interval' → logprob: -2.620396375656128
    5. 'points' → logprob: -3.370396375656128
    6. 'if' → logprob: -3.745396375656128
    7. '#' → logprob: -3.745396375656128
    8. 'time' → logprob: -4.620396614074707
    9. 'events' → logprob: -4.620396614074707
    10. 'usage' → logprob: -4.995396614074707

Token 210: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6634870171546936
    2. 'ition' → logprob: -1.9134869575500488
    3. 'itive' → logprob: -2.663486957550049
    4. '   ' → logprob: -2.788486957550049
    5. 'itions' → logprob: -3.038486957550049
    6. 's' → logprob: -3.163486957550049
    7. 'usage' → logprob: -4.288486957550049
    8. 'current' → logprob: -4.413486957550049
    9. '_usage' → logprob: -4.413486957550049
    10. 'sible' → logprob: -4.788486957550049

Token 211: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001177608733996749
    2. ' ' → logprob: -6.751177787780762
    3. '   ' → logprob: -12.751177787780762
    4. '       ' → logprob: -13.126177787780762
    5. '[' → logprob: -14.001177787780762
    6. 'self' → logprob: -14.626177787780762
    7. '           ' → logprob: -15.251177787780762
    8. '  ' → logprob: -16.126176834106445
    9. ' self' → logprob: -16.376176834106445
    10. ')' → logprob: -16.688676834106445

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.0391463193809614e-05
    2. ' ' → logprob: -9.750060081481934
    3. '   ' → logprob: -14.250060081481934
    4. 'self' → logprob: -14.625060081481934
    5. '[' → logprob: -15.375060081481934
    6. '-' → logprob: -16.50006103515625
    7. '[]' → logprob: -16.62506103515625
    8. '1' → logprob: -16.68756103515625
    9. '  ' → logprob: -16.87506103515625
    10. ')' → logprob: -17.06256103515625

Token 213: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007320747245103121
    2. '       ' → logprob: -5.257320880889893
    3. ' 
' → logprob: -7.257320880889893
    4. ',' → logprob: -7.632320880889893
    5. '        
' → logprob: -8.132320404052734
    6. '' → logprob: -9.132320404052734
    7. ',
' → logprob: -9.382320404052734
    8. '
' → logprob: -9.757320404052734
    9. ':' → logprob: -9.882320404052734
    10. '  
' → logprob: -10.132320404052734

Token 214: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012915730476379395
    2. '       ' → logprob: -4.51291561126709
    3. '        
' → logprob: -7.38791561126709
    4. '
' → logprob: -8.13791561126709
    5. ' 
' → logprob: -8.26291561126709
    6. '  
' → logprob: -8.51291561126709
    7. '' → logprob: -9.76291561126709
    8. '    
' → logprob: -9.88791561126709
    9. ':' → logprob: -10.01291561126709
    10. '   ' → logprob: -10.01291561126709

Token 215: ' for' (ID: 395)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.1087696552276611
    2. 'for' (adapté à ' for') → logprob: -1.3587696552276611
    3. 'events' → logprob: -1.6087696552276611
    4. 'while' → logprob: -2.983769655227661
    5. '       ' → logprob: -3.233769655227661
    6. 'merged' → logprob: -3.483769655227661
    7. 'current' → logprob: -4.358769416809082
    8. 'combined' → logprob: -4.483769416809082
    9. 'times' → logprob: -4.733769416809082
    10. 'sorted' → logprob: -5.108769416809082

Token 216: ' sched' (ID: 27398)
  Prédit: 'schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'schedule' → logprob: -0.0715884193778038
    2. 'sched' → logprob: -2.9465885162353516
    3. 'sch' → logprob: -4.821588516235352
    4. ' schedule' → logprob: -5.196588516235352
    5. 's' → logprob: -6.571588516235352
    6. ' sched' → logprob: -7.196588516235352
    7. 'i' → logprob: -7.946588516235352
    8. 'sche' → logprob: -8.696588516235352
    9. ' sch' → logprob: -9.571588516235352
    10. 'interval' → logprob: -9.696588516235352

Token 217: ' in' (ID: 306)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00030948311905376613
    2. ' in' → logprob: -8.125309944152832
    3. '   ' → logprob: -12.500309944152832
    4. ' ' → logprob: -12.875309944152832
    5. 'ules' → logprob: -13.125309944152832
    6. ' ule' → logprob: -13.250309944152832
    7. 'u' → logprob: -13.500309944152832
    8. 'ul' → logprob: -15.000309944152832
    9. 'dule' → logprob: -15.250309944152832
    10. '  ' → logprob: -15.375309944152832

Token 218: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22547142207622528
    2. ' self' → logprob: -1.6004713773727417
    3. '   ' → logprob: -10.600471496582031
    4. '       ' → logprob: -11.100471496582031
    5. ' ' → logprob: -12.350471496582031
    6. '	self' → logprob: -12.475471496582031
    7. 'sorted' → logprob: -12.850471496582031
    8. '    ' → logprob: -13.475471496582031
    9. ' sorted' → logprob: -13.475471496582031
    10. '(self' → logprob: -13.600471496582031

Token 219: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.001098418957553804
    2. '.' → logprob: -7.0010986328125
    3. 's' → logprob: -8.7510986328125
    4. ' .' → logprob: -11.5010986328125
    5. 'chedules' → logprob: -11.6260986328125
    6. ' schedules' → logprob: -12.2510986328125
    7. 'Schedules' → logprob: -13.1260986328125
    8. '.schedulers' → logprob: -14.6260986328125
    9. '.
' → logprob: -15.0010986328125
    10. '.schedule' → logprob: -15.2510986328125

Token 220: 'chedules' (ID: 112594)
  Prédit: 'chedules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chedules' → logprob: -0.0001358400477329269
    2. '.s' → logprob: -10.00013542175293
    3. 'hed' → logprob: -10.00013542175293
    4. 's' → logprob: -11.25013542175293
    5. 'ched' → logprob: -11.50013542175293
    6. 'chedule' → logprob: -11.87513542175293
    7. '.' → logprob: -12.25013542175293
    8. 'chedulers' → logprob: -12.87513542175293
    9. 'he' → logprob: -13.87513542175293
    10. 'heds' → logprob: -13.87513542175293

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28138989210128784
    2. ':
' → logprob: -1.4063899517059326
    3. '           ' → logprob: -9.406390190124512
    4. '):
' → logprob: -10.156390190124512
    5. ',' → logprob: -10.656390190124512
    6. ' :
' → logprob: -10.656390190124512
    7. ' :' → logprob: -10.906390190124512
    8. '       ' → logprob: -10.906390190124512
    9. ':
' → logprob: -11.031390190124512
    10. ':

' → logprob: -11.906390190124512

Token 222: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03641239553689957
    2. ':' → logprob: -3.786412477493286
    3. ',' → logprob: -5.036412239074707
    4. ':
' → logprob: -5.911412239074707
    5. '            
' → logprob: -6.536412239074707
    6. '
' → logprob: -7.036412239074707
    7. '            ' → logprob: -7.536412239074707
    8. ' if' → logprob: -7.786412239074707
    9. '       ' → logprob: -9.286412239074707
    10. '        
' → logprob: -9.411412239074707

Token 223: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.009219765663147
    2. 'if' (adapté à ' if') → logprob: -1.009219765663147
    3. ' if' → logprob: -1.384219765663147
    4. 'while' → logprob: -4.134219646453857
    5. 'yield' → logprob: -6.009219646453857
    6. ' while' → logprob: -6.759219646453857
    7. '               ' → logprob: -7.884219646453857
    8. ' yield' → logprob: -8.759220123291016
    9. 'start' → logprob: -9.009220123291016
    10. ',' → logprob: -9.259220123291016

Token 224: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.619673490524292
    2. 'sched' → logprob: -0.994673490524292
    3. ' pos' → logprob: -2.744673490524292
    4. ' sched' → logprob: -3.619673490524292
    5. '	pos' → logprob: -9.057173728942871
    6. '   ' → logprob: -9.057173728942871
    7. '_sched' → logprob: -9.182173728942871
    8. ' ' → logprob: -9.182173728942871
    9. 'Sched' → logprob: -10.119673728942871
    10. '  ' → logprob: -10.182173728942871

Token 225: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3870125412940979
    2. '<' → logprob: -1.1370124816894531
    3. '<int' → logprob: -10.137012481689453
    4. ' ' → logprob: -10.637012481689453
    5. '<class' → logprob: -11.887012481689453
    6. ' !=' → logprob: -11.887012481689453
    7. '<len' → logprob: -12.137012481689453
    8. '<size' → logprob: -12.262012481689453
    9. '<num' → logprob: -12.262012481689453
    10. '<n' → logprob: -12.387012481689453

Token 226: ' sched' (ID: 27398)
  Prédit: 'sched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sched' → logprob: -0.10029357671737671
    2. ' sched' → logprob: -2.3502936363220215
    3. '_sched' → logprob: -9.975293159484863
    4. 's' → logprob: -10.975293159484863
    5. ' ' → logprob: -11.975293159484863
    6. 'sess' → logprob: -13.100293159484863
    7. 'Sched' → logprob: -13.100293159484863
    8. 'sche' → logprob: -13.225293159484863
    9. '           ' → logprob: -13.600293159484863
    10. '	s' → logprob: -13.600293159484863

Token 227: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.001556759118102491
    2. '.' → logprob: -6.501556873321533
    3. ' .' → logprob: -10.626556396484375
    4. 'start' → logprob: -10.876556396484375
    5. '.end' → logprob: -11.751556396484375
    6. '_start' → logprob: -15.376556396484375
    7. ' start' → logprob: -15.376556396484375
    8. '.period' → logprob: -15.376556396484375
    9. '   ' → logprob: -15.501556396484375
    10. '.star' → logprob: -15.751556396484375

Token 228: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08944331109523773
    2. ':' → logprob: -2.4644432067871094
    3. '               ' → logprob: -8.33944320678711
    4. '           ' → logprob: -9.08944320678711
    5. ' and' → logprob: -9.21444320678711
    6. ' :
' → logprob: -11.08944320678711
    7. '):
' → logprob: -11.46444320678711
    8. ':
' → logprob: -11.58944320678711
    9. ',' → logprob: -12.21444320678711
    10. ':

' → logprob: -12.46444320678711

Token 229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2786129415035248
    2. ' yield' → logprob: -1.5286129713058472
    3. 'yield' → logprob: -3.9036128520965576
    4. '           ' → logprob: -5.153613090515137
    5. '	yield' → logprob: -8.778613090515137
    6. ',' → logprob: -8.903613090515137
    7. '
' → logprob: -11.278613090515137
    8. '                
' → logprob: -11.403613090515137
    9. '```' → logprob: -11.403613090515137
    10. ' if' → logprob: -12.153613090515137

Token 230: ' #' (ID: 1069)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.4875146746635437
    2. ' yield' → logprob: -0.9875146746635437
    3. '               ' → logprob: -4.362514495849609
    4. '	yield' → logprob: -7.862514495849609
    5. '           ' → logprob: -8.48751449584961
    6. '
' → logprob: -11.86251449584961
    7. 'Yield' → logprob: -13.36251449584961
    8. '                   ' → logprob: -14.36251449584961
    9. '```' → logprob: -14.61251449584961
    10. '   ' → logprob: -14.98751449584961

Token 231: ' Idle' (ID: 136098)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.0004441355704329908
    2. ' yield' → logprob: -7.750443935394287
    3. '               ' → logprob: -11.500444412231445
    4. '	yield' → logprob: -13.250444412231445
    5. '#' → logprob: -13.500444412231445
    6. '           ' → logprob: -15.625444412231445
    7. 'Yield' → logprob: -17.875444412231445
    8. 'interval' → logprob: -18.250444412231445
    9. '                   ' → logprob: -19.500444412231445
    10. '   ' → logprob: -19.625444412231445

Token 232: ' interval' (ID: 17116)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3790331780910492
    2. '               ' → logprob: -1.5040332078933716
    3. ' yield' → logprob: -3.379033088684082
    4. '           ' → logprob: -3.629033088684082
    5. 'yield' → logprob: -3.879033088684082
    6. 'interval' → logprob: -5.129033088684082
    7. ' ,' → logprob: -5.879033088684082
    8. ' interval' → logprob: -7.754033088684082
    9. ':' → logprob: -7.879033088684082
    10. '	yield' → logprob: -8.004033088684082

Token 233: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4337535500526428
    2. ' yield' → logprob: -1.183753490447998
    3. 'yield' → logprob: -3.183753490447998
    4. ',' → logprob: -6.683753490447998
    5. ':' → logprob: -6.933753490447998
    6. '                   ' → logprob: -7.183753490447998
    7. '	yield' → logprob: -7.933753490447998
    8. ' =' → logprob: -8.558753967285156
    9. ' (' → logprob: -8.558753967285156
    10. '
' → logprob: -8.683753967285156

Token 234: ' usage' (ID: 16622)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.20199988782405853
    2. ' yield' → logprob: -1.7019999027252197
    3. '               ' → logprob: -7.576999664306641
    4. '	yield' → logprob: -9.70199966430664
    5. '                   ' → logprob: -12.07699966430664
    6. 'usage' → logprob: -12.70199966430664
    7. 'start' → logprob: -13.20199966430664
    8. ' usage' → logprob: -14.20199966430664
    9. '           ' → logprob: -14.57699966430664
    10. 'Yield' → logprob: -14.70199966430664

Token 235: ' rate' (ID: 6251)
  Prédit: '_rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.0012251086300238967
    2. '=' → logprob: -7.126224994659424
    3. ' =' → logprob: -8.501225471496582
    4. 'rate' → logprob: -9.376225471496582
    5. '       ' → logprob: -9.626225471496582
    6. '           ' → logprob: -9.876225471496582
    7. '   ' → logprob: -12.501225471496582
    8. ' ' → logprob: -13.001225471496582
    9. ' rate' → logprob: -13.001225471496582
    10. '_RATE' → logprob: -13.626225471496582

Token 236: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038201235234737396
    2. ' =' → logprob: -3.288201332092285
    3. '0' → logprob: -8.913201332092285
    4. ' is' → logprob: -10.913201332092285
    5. ' ' → logprob: -12.663201332092285
    6. ':' → logprob: -13.163201332092285
    7. ',' → logprob: -14.163201332092285
    8. '           ' → logprob: -14.413201332092285
    9. '               ' → logprob: -15.413201332092285
    10. '=-' → logprob: -16.53820037841797

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08098649233579636
    2. '=' → logprob: -2.580986499786377
    3. ' ' → logprob: -6.955986499786377
    4. ' is' → logprob: -7.955986499786377
    5. ' =' → logprob: -7.955986499786377
    6. 'is' → logprob: -8.205986022949219
    7. '               ' → logprob: -9.455986022949219
    8. ':' → logprob: -9.580986022949219
    9. '           ' → logprob: -12.080986022949219
    10. ',' → logprob: -12.705986022949219

Token 238: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47010084986686707
    2. ' yield' → logprob: -1.4701008796691895
    3. 'yield' → logprob: -2.0951008796691895
    4. '           ' → logprob: -4.7201008796691895
    5. ',' → logprob: -5.0951008796691895
    6. '
' → logprob: -5.4701008796691895
    7. ':' → logprob: -6.5951008796691895
    8. ':
' → logprob: -7.7201008796691895
    9. '	yield' → logprob: -8.345100402832031
    10. '                
' → logprob: -8.595100402832031

Token 239: '               ' (ID: 506)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.6258947849273682
    2. '               ' → logprob: -1.0008947849273682
    3. 'yield' → logprob: -2.500894784927368
    4. '           ' → logprob: -4.250894546508789
    5. ',' → logprob: -7.000894546508789
    6. '	yield' → logprob: -8.625894546508789
    7. ':' → logprob: -9.125894546508789
    8. '```' → logprob: -10.125894546508789
    9. 'Yield' → logprob: -10.375894546508789
    10. ' yields' → logprob: -10.375894546508789

Token 240: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.004253269638866186
    2. ' yield' → logprob: -5.504253387451172
    3. '               ' → logprob: -8.754253387451172
    4. '	yield' → logprob: -11.004253387451172
    5. '
' → logprob: -16.254253387451172
    6. 'y' → logprob: -16.379253387451172
    7. '           ' → logprob: -16.504253387451172
    8. 'Yield' → logprob: -16.504253387451172
    9. '                   ' → logprob: -17.004253387451172
    10. '   ' → logprob: -18.129253387451172

Token 241: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.26016557216644287
    2. 'pos' → logprob: -1.5101655721664429
    3. ' pos' → logprob: -5.010165691375732
    4. ' (' → logprob: -6.510165691375732
    5. '[pos' → logprob: -10.635165214538574
    6. ',pos' → logprob: -11.635165214538574
    7. '               ' → logprob: -12.510165214538574
    8. '(' → logprob: -12.510165214538574
    9. '	pos' → logprob: -13.260165214538574
    10. '(
' → logprob: -13.885165214538574

Token 242: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -9.615255839889869e-05
    2. ' pos' → logprob: -9.250096321105957
    3. '               ' → logprob: -18.62509536743164
    4. '           ' → logprob: -19.50009536743164
    5. '	pos' → logprob: -19.50009536743164
    6. '(pos' → logprob: -20.25009536743164
    7. ',pos' → logprob: -20.50009536743164
    8. '_pos' → logprob: -21.12509536743164
    9. '[pos' → logprob: -21.25009536743164
    10. '                   ' → logprob: -21.37509536743164

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.898723561083898e-05
    2. ' ,' → logprob: -10.000079154968262
    3. ',
' → logprob: -10.375079154968262
    4. ',s' → logprob: -14.125079154968262
    5. '‌,' → logprob: -14.500079154968262
    6. ',

' → logprob: -15.500079154968262
    7. ',",' → logprob: -15.750079154968262
    8. '),' → logprob: -16.125078201293945
    9. ',\
' → logprob: -16.500078201293945
    10. '‍,' → logprob: -16.625078201293945

Token 244: ' sched' (ID: 27398)
  Prédit: 'sched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sched' → logprob: -0.007626149337738752
    2. ' sched' → logprob: -4.882626056671143
    3. '_sched' → logprob: -11.6326265335083
    4. '           ' → logprob: -13.0076265335083
    5. ' ' → logprob: -13.5076265335083
    6. '               ' → logprob: -14.0076265335083
    7. '    ' → logprob: -14.1326265335083
    8. 's' → logprob: -14.1326265335083
    9. 'Sched' → logprob: -14.3826265335083
    10. '   ' → logprob: -14.3826265335083

Token 245: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.02068132720887661
    2. '.' → logprob: -3.895681381225586
    3. ' .' → logprob: -9.645681381225586
    4. 'start' → logprob: -9.895681381225586
    5. '.end' → logprob: -11.395681381225586
    6. '.s' → logprob: -13.520681381225586
    7. ').' → logprob: -13.770681381225586
    8. '.period' → logprob: -13.770681381225586
    9. '.START' → logprob: -14.270681381225586
    10. ' ' → logprob: -14.270681381225586

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.27099974633893e-05
    2. ' ,' → logprob: -11.750012397766113
    3. '0' → logprob: -12.375012397766113
    4. ',
' → logprob: -15.125012397766113
    5. ')' → logprob: -16.00001335144043
    6. '),' → logprob: -16.00001335144043
    7. '```' → logprob: -17.50001335144043
    8. ' ' → logprob: -18.00001335144043
    9. '   ' → logprob: -18.00001335144043
    10. ',

' → logprob: -19.00001335144043

Token 247: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -18.00023078918457
    4. '۰' → logprob: -18.62523078918457
    5. ')' → logprob: -18.87523078918457
    6. '  ' → logprob: -19.12523078918457
    7. ' ' → logprob: -19.68773078918457
    8. '```' → logprob: -19.68773078918457
    9. '           ' → logprob: -19.93773078918457
    10. '               ' → logprob: -20.25023078918457

Token 248: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -19.000001907348633
    4. ')' → logprob: -19.250001907348633
    5. '   ' → logprob: -19.312501907348633
    6. '```' → logprob: -20.437501907348633
    7. '000' → logprob: -20.937501907348633
    8. '00' → logprob: -21.125001907348633
    9. '  ' → logprob: -21.375001907348633
    10. '০' → logprob: -21.500001907348633

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3182869255542755
    2. ')
' → logprob: -1.3182868957519531
    3. '           ' → logprob: -5.318286895751953
    4. '               ' → logprob: -10.318286895751953
    5. ' )
' → logprob: -10.443286895751953
    6. ')
' → logprob: -10.693286895751953
    7. ' )' → logprob: -11.193286895751953
    8. ')

' → logprob: -11.943286895751953
    9. '       ' → logprob: -13.193286895751953
    10. ',' → logprob: -13.318286895751953

Token 250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02636324055492878
    2. '
' → logprob: -4.151363372802734
    3. '            
' → logprob: -5.026363372802734
    4. 'pos' → logprob: -6.026363372802734
    5. '               ' → logprob: -7.776363372802734
    6. '[pos' → logprob: -8.651363372802734
    7. '                
' → logprob: -8.776363372802734
    8. ' 
' → logprob: -8.901363372802734
    9. '\n' → logprob: -8.901363372802734
    10. ' pos' → logprob: -9.651363372802734

Token 251: ' yield' (ID: 14376)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.22387057542800903
    2. '           ' → logprob: -2.2238705158233643
    3. 'yield' (adapté à ' yield') → logprob: -2.7238705158233643
    4. ' pos' → logprob: -4.098870754241943
    5. ' yield' → logprob: -4.598870754241943
    6. '            ' → logprob: -10.348870277404785
    7. '       ' → logprob: -10.848870277404785
    8. '               ' → logprob: -11.348870277404785
    9. '	yield' → logprob: -11.848870277404785
    10. '          ' → logprob: -12.098870277404785

Token 252: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.386900931596756
    2. '(s' → logprob: -1.1369009017944336
    3. '(pos' → logprob: -10.511900901794434
    4. '(schedule' → logprob: -13.761900901794434
    5. ' ' → logprob: -14.136900901794434
    6. '(' → logprob: -14.261900901794434
    7. '(start' → logprob: -16.26190185546875
    8. '(sess' → logprob: -16.63690185546875
    9. '(p' → logprob: -17.13690185546875
    10. ' sched' → logprob: -17.13690185546875

Token 253: 'sched' (ID: 192485)
  Prédit: 'sched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sched' → logprob: -7.088138227118179e-05
    2. ' sched' → logprob: -9.750070571899414
    3. '_sched' → logprob: -11.875070571899414
    4. 'sess' → logprob: -13.500070571899414
    5. '           ' → logprob: -14.125070571899414
    6. 'Sched' → logprob: -14.375070571899414
    7. '   ' → logprob: -14.625070571899414
    8. 'sche' → logprob: -15.125070571899414
    9. 'scheduler' → logprob: -15.375070571899414
    10. '               ' → logprob: -15.625070571899414

Token 254: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -6.468279752880335e-05
    2. '.' → logprob: -10.125064849853516
    3. 'start' → logprob: -11.000064849853516
    4. ' .' → logprob: -12.375064849853516
    5. '.s' → logprob: -13.250064849853516
    6. ').' → logprob: -14.000064849853516
    7. '.end' → logprob: -15.500064849853516
    8. ' ' → logprob: -16.000064849853516
    9. '	start' → logprob: -16.250064849853516
    10. '   ' → logprob: -16.250064849853516

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8074162653647363e-05
    2. ' ,' → logprob: -11.250018119812012
    3. ',
' → logprob: -12.875018119812012
    4. ',s' → logprob: -14.375018119812012
    5. '<|end|>' → logprob: -14.750018119812012
    6. '‌,' → logprob: -15.000018119812012
    7. ')' → logprob: -15.250018119812012
    8. '),' → logprob: -15.750018119812012
    9. ',

' → logprob: -15.750018119812012
    10. '<|end|>' → logprob: -16.375017166137695

Token 256: ' sched' (ID: 27398)
  Prédit: 'sched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sched' → logprob: -0.023315127938985825
    2. ' sched' → logprob: -3.773315191268921
    3. '_sched' → logprob: -9.7733154296875
    4. 'Sched' → logprob: -12.2733154296875
    5. 's' → logprob: -12.5233154296875
    6. 'sess' → logprob: -14.0233154296875
    7. 'schedule' → logprob: -14.1483154296875
    8. ' ' → logprob: -14.8983154296875
    9. 'sche' → logprob: -15.1483154296875
    10. 'scheduler' → logprob: -15.2733154296875

Token 257: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -2.236549335066229e-05
    2. '.start' → logprob: -11.250021934509277
    3. 'end' → logprob: -12.000021934509277
    4. '.' → logprob: -12.875021934509277
    5. ' .' → logprob: -14.875021934509277
    6. '```' → logprob: -16.250022888183594
    7. '   ' → logprob: -16.750022888183594
    8. '	end' → logprob: -17.500022888183594
    9. ',end' → logprob: -17.625022888183594
    10. ' ' → logprob: -17.750022888183594

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -10.875019073486328
    3. '‌,' → logprob: -16.250019073486328
    4. ',
' → logprob: -16.375019073486328
    5. ',s' → logprob: -17.250019073486328
    6. '<|end|>' → logprob: -17.750019073486328
    7. '           ' → logprob: -18.000019073486328
    8. '),' → logprob: -18.375019073486328
    9. '       ' → logprob: -18.375019073486328
    10. '‍,' → logprob: -18.500019073486328

Token 259: ' sched' (ID: 27398)
  Prédit: 'sched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sched' → logprob: -0.030521299690008163
    2. ' sched' → logprob: -3.5305213928222656
    3. '-s' → logprob: -7.530521392822266
    4. '-' → logprob: -9.405521392822266
    5. ' -' → logprob: -10.030521392822266
    6. 's' → logprob: -10.030521392822266
    7. '   ' → logprob: -11.280521392822266
    8. '_sched' → logprob: -11.530521392822266
    9. ' ' → logprob: -11.655521392822266
    10. 'Sched' → logprob: -12.780521392822266

Token 260: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0008298786706291139
    2. 'usage' → logprob: -7.125829696655273
    3. '_usage' → logprob: -11.500829696655273
    4. 'u' → logprob: -12.250829696655273
    5. '.use' → logprob: -12.625829696655273
    6. ' usage' → logprob: -13.000829696655273
    7. 'ution' → logprob: -13.500829696655273
    8. ' .' → logprob: -14.125829696655273
    9. '.rate' → logprob: -14.250829696655273
    10. '   ' → logprob: -14.625829696655273

Token 261: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.009801419451832771
    2. 'rate' → logprob: -4.634801387786865
    3. '_rate' → logprob: -10.759801864624023
    4. ' usage' → logprob: -11.759801864624023
    5. 'use' → logprob: -12.509801864624023
    6. 'ate' → logprob: -12.509801864624023
    7. '_usage' → logprob: -12.759801864624023
    8. '   ' → logprob: -13.509801864624023
    9. ' ' → logprob: -13.634801864624023
    10. ' rate' → logprob: -14.009801864624023

Token 262: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: 0.0
    2. 'rate' → logprob: -17.75
    3. '_' → logprob: -19.0
    4. ' _' → logprob: -20.125
    5. '_RATE' → logprob: -20.25
    6. '_rates' → logprob: -21.75
    7. ' rate' → logprob: -22.125
    8. '_r' → logprob: -22.375
    9. '_rating' → logprob: -23.125
    10. '_ratio' → logprob: -23.375

Token 263: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0046730381436645985
    2. ')
' → logprob: -5.379673004150391
    3. ' )' → logprob: -10.00467300415039
    4. ')
' → logprob: -12.12967300415039
    5. ' )
' → logprob: -14.00467300415039
    6. ')

' → logprob: -14.87967300415039
    7. '   ' → logprob: -14.87967300415039
    8. '       ' → logprob: -15.12967300415039
    9. '<|end|>' → logprob: -16.62967300415039
    10. '),' → logprob: -16.75467300415039

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022763425949960947
    2. 'pos' → logprob: -6.127276420593262
    3. ' pos' → logprob: -9.377276420593262
    4. '       ' → logprob: -12.627276420593262
    5. ',' → logprob: -14.502276420593262
    6. '
' → logprob: -14.502276420593262
    7. '   ' → logprob: -14.627276420593262
    8. '```' → logprob: -15.127276420593262
    9. '               ' → logprob: -15.252276420593262
    10. '            
' → logprob: -15.502276420593262

Token 265: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.13365691900253296
    2. '           ' → logprob: -2.1336569786071777
    3. ' pos' → logprob: -5.008656978607178
    4. '       ' → logprob: -10.75865650177002
    5. '	pos' → logprob: -13.13365650177002
    6. '   ' → logprob: -13.25865650177002
    7. '.pos' → logprob: -15.00865650177002
    8. ',pos' → logprob: -15.13365650177002
    9. '[pos' → logprob: -15.75865650177002
    10. '               ' → logprob: -16.008657455444336

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858771339058876
    2. ' =' → logprob: -3.0485877990722656
    3. '=s' → logprob: -15.298587799072266
    4. '=end' → logprob: -17.548587799072266
    5. '=
' → logprob: -17.798587799072266
    6. '+=' → logprob: -17.923587799072266
    7. '.=' → logprob: -18.423587799072266
    8. '=}' → logprob: -18.673587799072266
    9. '＝' → logprob: -18.798587799072266
    10. ' +=' → logprob: -18.798587799072266

Token 267: ' sched' (ID: 27398)
  Prédit: 'sched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sched' → logprob: -0.00033713103039190173
    2. ' sched' → logprob: -8.000337600708008
    3. '_sched' → logprob: -14.125337600708008
    4. 's' → logprob: -14.625337600708008
    5. 'sche' → logprob: -15.500337600708008
    6. 'Sched' → logprob: -16.500337600708008
    7. '   ' → logprob: -16.625337600708008
    8. 'sess' → logprob: -17.750337600708008
    9. ' ' → logprob: -18.250337600708008
    10. '	s' → logprob: -18.625337600708008

Token 268: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -4.961759259458631e-06
    2. '.' → logprob: -12.375004768371582
    3. ' .' → logprob: -14.750004768371582
    4. 'end' → logprob: -15.750004768371582
    5. '=end' → logprob: -17.6250057220459
    6. '[end' → logprob: -17.7500057220459
    7. '   ' → logprob: -18.5000057220459
    8. '.END' → logprob: -18.5000057220459
    9. '	end' → logprob: -18.6250057220459
    10. ' ' → logprob: -18.6250057220459

Token 269: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18204058706760406
    2. '<|end|>' → logprob: -2.4320406913757324
    3. '
' → logprob: -2.5570406913757324
    4. '        
' → logprob: -7.432040691375732
    5. '<|end|>' → logprob: -9.182040214538574
    6. ')' → logprob: -9.682040214538574
    7. '        ' → logprob: -9.682040214538574
    8. '```' → logprob: -9.932040214538574
    9. ',' → logprob: -10.557040214538574
    10. ')
' → logprob: -11.307040214538574

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058101121336221695
    2. '<|end|>' → logprob: -3.058101177215576
    3. '
' → logprob: -4.808101177215576
    4. '   ' → logprob: -7.683101177215576
    5. '```' → logprob: -8.183100700378418
    6. '        ' → logprob: -9.058100700378418
    7. ')' → logprob: -9.433100700378418
    8. '        
' → logprob: -9.683100700378418
    9. ' if' → logprob: -9.933100700378418
    10. '           ' → logprob: -10.058100700378418

Token 271: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.33040690422058105
    2. ' if' → logprob: -1.330406904220581
    3. '       ' → logprob: -4.08040714263916
    4. '   ' → logprob: -9.33040714263916
    5. '```' → logprob: -12.58040714263916
    6. '
' → logprob: -12.95540714263916
    7. '	if' → logprob: -13.33040714263916
    8. '    ' → logprob: -14.08040714263916
    9. '           ' → logprob: -15.08040714263916
    10. '        ' → logprob: -15.20540714263916

Token 272: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.4757809638977051
    2. 'pos' → logprob: -0.9757809638977051
    3. ' self' → logprob: -6.850780963897705
    4. 'self' → logprob: -7.350780963897705
    5. '	pos' → logprob: -14.475780487060547
    6. ' Schedule' → logprob: -14.725780487060547
    7. '(pos' → logprob: -15.100780487060547
    8. 'Schedule' → logprob: -15.350780487060547
    9. '0' → logprob: -15.600780487060547
    10. '   ' → logprob: -16.850780487060547

Token 273: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.47407954931259155
    2. ' <' → logprob: -0.9740795493125916
    3. ' ' → logprob: -14.224079132080078
    4. '<class' → logprob: -14.724079132080078
    5. '<S' → logprob: -15.599079132080078
    6. '<T' → logprob: -15.724079132080078
    7. ')<' → logprob: -16.599079132080078
    8. ' <
' → logprob: -16.724079132080078
    9. '<Table' → logprob: -16.724079132080078
    10. '<System' → logprob: -16.724079132080078

Token 274: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0036180049646645784
    2. ' self' → logprob: -5.628618240356445
    3. 'Schedule' → logprob: -11.128618240356445
    4. '=self' → logprob: -14.128618240356445
    5. '   ' → logprob: -14.378618240356445
    6. 'Self' → logprob: -14.378618240356445
    7. '864' → logprob: -15.128618240356445
    8. '	self' → logprob: -15.628618240356445
    9. '(self' → logprob: -15.753618240356445
    10. '       ' → logprob: -15.753618240356445

Token 275: '.DAY' (ID: 111703)
  Prédit: '.DAY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.DAY' → logprob: -0.0003049570368602872
    2. 'DAY' → logprob: -8.50030517578125
    3. '.' → logprob: -9.25030517578125
    4. '.D' → logprob: -13.12530517578125
    5. ' .' → logprob: -13.37530517578125
    6. ' DAY' → logprob: -14.00030517578125
    7. '_DAY' → logprob: -15.12530517578125
    8. '._' → logprob: -15.75030517578125
    9. '.Day' → logprob: -15.75030517578125
    10. '.day' → logprob: -16.12530517578125

Token 276: '_DURATION' (ID: 119913)
  Prédit: '_DURATION'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_DURATION' → logprob: -3.128163257315464e-07
    2. 'Duration' → logprob: -16.5
    3. 'D' → logprob: -17.0
    4. 'URATION' → logprob: -17.75
    5. '_INTERVAL' → logprob: -18.875
    6. '	duration' → logprob: -18.875
    7. '_D' → logprob: -19.125
    8. '_DAY' → logprob: -19.375
    9. '_duration' → logprob: -19.5
    10. 'duration' → logprob: -19.75

Token 277: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5247034430503845
    2. ':
' → logprob: -0.8997034430503845
    3. ' :
' → logprob: -6.649703502655029
    4. ' :' → logprob: -8.649703025817871
    5. '       ' → logprob: -10.399703025817871
    6. '):
' → logprob: -10.774703025817871
    7. ':
' → logprob: -10.899703025817871
    8. ',' → logprob: -11.024703025817871
    9. '   ' → logprob: -12.024703025817871
    10. ':

' → logprob: -12.399703025817871

Token 278: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013865175656974316
    2. ' yield' → logprob: -4.888864994049072
    3. 'yield' → logprob: -5.138864994049072
    4. '       ' → logprob: -8.01386547088623
    5. '	yield' → logprob: -11.13886547088623
    6. '
' → logprob: -12.51386547088623
    7. '               ' → logprob: -12.51386547088623
    8. '        ' → logprob: -12.63886547088623
    9. 'Yield' → logprob: -12.63886547088623
    10. '```' → logprob: -12.76386547088623

Token 279: ' #' (ID: 1069)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.21460311114788055
    2. ' yield' → logprob: -1.714603066444397
    3. '           ' → logprob: -4.339602947235107
    4. '       ' → logprob: -10.214603424072266
    5. '	yield' → logprob: -10.839603424072266
    6. '   ' → logprob: -13.339603424072266
    7. 'Yield' → logprob: -13.964603424072266
    8. '               ' → logprob: -14.214603424072266
    9. '
' → logprob: -14.214603424072266
    10. '          ' → logprob: -15.339603424072266

Token 280: ' Tail' (ID: 64498)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.3133560121059418
    2. ' yield' → logprob: -1.3133560419082642
    3. '           ' → logprob: -9.313356399536133
    4. '	yield' → logprob: -12.938356399536133
    5. 'Yield' → logprob: -14.188356399536133
    6. '       ' → logprob: -14.688356399536133
    7. '   ' → logprob: -15.063356399536133
    8. '            ' → logprob: -16.813356399536133
    9. ' ' → logprob: -16.938356399536133
    10. '#' → logprob: -16.938356399536133

Token 281: ' idle' (ID: 54644)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.20761486887931824
    2. ' (' → logprob: -2.5826148986816406
    3. 'interval' → logprob: -2.7076148986816406
    4. ',' → logprob: -3.7076148986816406
    5. '(' → logprob: -4.707614898681641
    6. ' ,' → logprob: -5.707614898681641
    7. '_interval' → logprob: -5.832614898681641
    8. '(interval' → logprob: -5.832614898681641
    9. '(pos' → logprob: -6.707614898681641
    10. 'pos' → logprob: -7.957614898681641

Token 282: ' interval' (ID: 17116)
  Prédit: ' interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.2524116337299347
    2. 'interval' → logprob: -1.5024116039276123
    3. ',' → logprob: -8.002411842346191
    4. '_interval' → logprob: -9.377411842346191
    5. '(interval' → logprob: -10.377411842346191
    6. ' (' → logprob: -11.252411842346191
    7. '(' → logprob: -11.502411842346191
    8. ' ,' → logprob: -12.627411842346191
    9. ' intervals' → logprob: -13.627411842346191
    10. ' period' → logprob: -13.752411842346191

Token 283: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16508011519908905
    2. ' yield' → logprob: -2.4150800704956055
    3. 'yield' → logprob: -2.7900800704956055
    4. ',' → logprob: -6.6650800704956055
    5. '       ' → logprob: -9.540080070495605
    6. 'Yield' → logprob: -10.790080070495605
    7. '	yield' → logprob: -11.040080070495605
    8. '               ' → logprob: -12.415080070495605
    9. '          ' → logprob: -12.790080070495605
    10. '   ' → logprob: -13.165080070495605

Token 284: '           ' (ID: 352)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' → logprob: -1.0235422849655151
    2. '           ' → logprob: -1.1485422849655151
    3. ' yield' → logprob: -1.1485422849655151
    4. '       ' → logprob: -5.148542404174805
    5. ',' → logprob: -7.523542404174805
    6. '	yield' → logprob: -9.523542404174805
    7. '   ' → logprob: -10.023542404174805
    8. '               ' → logprob: -12.398542404174805
    9. '          ' → logprob: -12.523542404174805
    10. 'Yield' → logprob: -13.648542404174805

Token 285: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.006790562998503447
    2. ' yield' → logprob: -5.006790637969971
    3. '           ' → logprob: -9.506790161132812
    4. '	yield' → logprob: -14.506790161132812
    5. '       ' → logprob: -15.381790161132812
    6. 'Yield' → logprob: -16.256790161132812
    7. '   ' → logprob: -16.756790161132812
    8. 'y' → logprob: -17.256790161132812
    9. ' ' → logprob: -18.506790161132812
    10. '          ' → logprob: -18.506790161132812

Token 286: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07954682409763336
    2. '(pos' → logprob: -2.5795469284057617
    3. '(' → logprob: -7.329546928405762
    4. ' ' → logprob: -14.329546928405762
    5. '(Pos' → logprob: -15.829546928405762
    6. ' pos' → logprob: -16.829545974731445
    7. ' (
' → logprob: -16.954545974731445
    8. '[pos' → logprob: -17.954545974731445
    9. '(post' → logprob: -18.329545974731445
    10. ' ' → logprob: -18.329545974731445

Token 287: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.6240566083070007e-06
    2. ' pos' → logprob: -13.375001907348633
    3. '	pos' → logprob: -19.750001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '[pos' → logprob: -21.500001907348633
    6. '_pos' → logprob: -21.625001907348633
    7. '.pos' → logprob: -21.875001907348633
    8. '(pos' → logprob: -22.250001907348633
    9. '           ' → logprob: -22.625001907348633
    10. 'pose' → logprob: -22.750001907348633

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.162282367469743e-05
    2. ' ,' → logprob: -9.375091552734375
    3. ',
' → logprob: -12.875091552734375
    4. 'self' → logprob: -13.125091552734375
    5. ',self' → logprob: -13.125091552734375
    6. ' self' → logprob: -16.625091552734375
    7. '           ' → logprob: -16.625091552734375
    8. '
' → logprob: -17.875091552734375
    9. ',

' → logprob: -17.875091552734375
    10. '),' → logprob: -17.875091552734375

Token 289: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.157039049663581e-05
    2. ' self' → logprob: -9.875051498413086
    3. '864' → logprob: -18.250051498413086
    4. '   ' → logprob: -19.000051498413086
    5. 'Self' → logprob: -19.500051498413086
    6. '	self' → logprob: -19.875051498413086
    7. '(self' → logprob: -20.000051498413086
    8. 'Schedule' → logprob: -20.500051498413086
    9. '
' → logprob: -20.875051498413086
    10. ')' → logprob: -21.125051498413086

Token 290: '.DAY' (ID: 111703)
  Prédit: '.DAY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.DAY' → logprob: -0.00024156268045771867
    2. 'DAY' → logprob: -8.37524127960205
    3. '.' → logprob: -12.12524127960205
    4. '.D' → logprob: -12.62524127960205
    5. '_DAY' → logprob: -14.12524127960205
    6. ' DAY' → logprob: -14.62524127960205
    7. '.Day' → logprob: -15.25024127960205
    8. '.YEAR' → logprob: -15.87524127960205
    9. ' .' → logprob: -16.000242233276367
    10. '._' → logprob: -16.250242233276367

Token 291: '_DURATION' (ID: 119913)
  Prédit: '_DURATION'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_DURATION' → logprob: -4.723352049040841e-06
    2. 'D' → logprob: -12.375004768371582
    3. 'Duration' → logprob: -15.250004768371582
    4. 'URATION' → logprob: -17.250003814697266
    5. '.Duration' → logprob: -17.625003814697266
    6. '	duration' → logprob: -17.625003814697266
    7. '\' → logprob: -18.500003814697266
    8. '   ' → logprob: -18.500003814697266
    9. '_INTERVAL' → logprob: -18.625003814697266
    10. 'duration' → logprob: -18.625003814697266

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ' ,' → logprob: -10.750021934509277
    3. '           ' → logprob: -15.625021934509277
    4. '       ' → logprob: -15.875021934509277
    5. ')' → logprob: -16.000022888183594
    6. '),' → logprob: -16.250022888183594
    7. '   ' → logprob: -16.750022888183594
    8. '```' → logprob: -17.500022888183594
    9. ',
' → logprob: -17.625022888183594
    10. ' ' → logprob: -18.000022888183594

Token 293: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.25002670288086
    4. ')' → logprob: -18.56252670288086
    5. '۰' → logprob: -18.75002670288086
    6. '           ' → logprob: -20.12502670288086
    7. '```' → logprob: -20.43752670288086
    8. ' ' → logprob: -20.50002670288086
    9. '  ' → logprob: -20.50002670288086
    10. '00' → logprob: -20.62502670288086

Token 294: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. ')' → logprob: -18.875
    4. '   ' → logprob: -20.0
    5. '۰' → logprob: -20.0
    6. '```' → logprob: -21.4375
    7. '	' → logprob: -22.3125
    8. '00' → logprob: -22.4375
    9. ')
' → logprob: -22.5625
    10. ' ' → logprob: -22.5625

Token 295: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.32392441527918e-05
    2. ')
' → logprob: -9.875053405761719
    3. ' )' → logprob: -14.000053405761719
    4. '<|end|>' → logprob: -14.500053405761719
    5. '   ' → logprob: -15.500053405761719
    6. ')

' → logprob: -16.50005340576172
    7. ')
' → logprob: -17.25005340576172
    8. '       ' → logprob: -17.25005340576172
    9. ')return' → logprob: -17.50005340576172
    10. ')}' → logprob: -18.00005340576172

Token 296: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43797218799591064
    2. '<|end|>' → logprob: -1.1879721879959106
    3. '   ' → logprob: -3.187972068786621
    4. 'def' → logprob: -5.562972068786621
    5. '<|end|>' → logprob: -6.687972068786621
    6. '    
' → logprob: -7.187972068786621
    7. ' ' → logprob: -7.312972068786621
    8. '\n' → logprob: -7.937972068786621
    9. '```' → logprob: -7.937972068786621
    10. '

' → logprob: -8.437972068786621

Token 297: ' Consumption' (ID: 161895)
  Prédit: ' Schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Schedule' → logprob: -0.8664511442184448
    2. ' Water' → logprob: -0.9914511442184448
    3. ' Tank' → logprob: -2.6164512634277344
    4. 'Schedule' → logprob: -3.1164512634277344
    5. 'Water' → logprob: -3.6164512634277344
    6. ' Scheduler' → logprob: -4.241451263427734
    7. 'Tank' → logprob: -4.741451263427734
    8. ' Demand' → logprob: -4.866451263427734
    9. ' Reservoir' → logprob: -4.991451263427734
    10. ' Solution' → logprob: -5.241451263427734

Token 298: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -1.4573757648468018
    2. 'Calculator' → logprob: -1.9573757648468018
    3. 'Optimizer' → logprob: -1.9573757648468018
    4. 'Estimator' → logprob: -2.7073757648468018
    5. 'Schedule' → logprob: -2.8323757648468018
    6. 'Simulator' → logprob: -2.8323757648468018
    7. 'Tracker' → logprob: -2.9573757648468018
    8. 'Analyzer' → logprob: -3.0823757648468018
    9. 'Pattern' → logprob: -3.5823757648468018
    10. 'Profile' → logprob: -3.7073757648468018

Token 299: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.023293538717553e-05
    2. ' (' → logprob: -11.250030517578125
    3. '(Abstract' → logprob: -11.625030517578125
    4. ':' → logprob: -11.750030517578125
    5. '(S' → logprob: -15.625030517578125
    6. '(s' → logprob: -17.250030517578125
    7. ' ' → logprob: -17.250030517578125
    8. '   ' → logprob: -17.625030517578125
    9. '(
' → logprob: -17.875030517578125
    10. '(Blueprint' → logprob: -18.125030517578125

Token 300: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0015058133285492659
    2. ' ABC' → logprob: -6.5015058517456055
    3. 'AB' → logprob: -12.876505851745605
    4. 'abc' → logprob: -15.126505851745605
    5. '(' → logprob: -15.376505851745605
    6. ' ' → logprob: -16.25150489807129
    7. 'ABCDE' → logprob: -16.25150489807129
    8. ',' → logprob: -16.62650489807129
    9. 'A' → logprob: -16.87650489807129
    10. '):
' → logprob: -17.00150489807129

Token 301: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008628651266917586
    2. '):
' → logprob: -7.125863075256348
    3. ')' → logprob: -10.375863075256348
    4. ' ):' → logprob: -11.000863075256348
    5. '):
' → logprob: -12.000863075256348
    6. '):

' → logprob: -12.875863075256348
    7. ':' → logprob: -13.500863075256348
    8. ',' → logprob: -15.375863075256348
    9. '[' → logprob: -15.875863075256348
    10. '):

' → logprob: -17.00086212158203

Token 302: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1507515013217926
    2. '   ' → logprob: -2.4007515907287598
    3. '):' → logprob: -3.7757515907287598
    4. '):
' → logprob: -4.65075159072876
    5. ' :' → logprob: -4.65075159072876
    6. ':
' → logprob: -5.27575159072876
    7. ' :
' → logprob: -7.52575159072876
    8. ')' → logprob: -7.65075159072876
    9. '<|end|>' → logprob: -8.025751113891602
    10. '():' → logprob: -8.900751113891602

Token 303: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07528333365917206
    2. '
' → logprob: -2.8252832889556885
    3. '    
' → logprob: -4.700283527374268
    4. ' 
' → logprob: -6.075283527374268
    5. ' @' → logprob: -6.825283527374268
    6. '@' (adapté à ' @') → logprob: -7.950283527374268
    7. '    ' → logprob: -9.20028305053711
    8. ' def' → logprob: -9.32528305053711
    9. '     
' → logprob: -9.57528305053711
    10. '	
' → logprob: -10.95028305053711

Token 304: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.0003365350130479783
    2. 'property' → logprob: -8.000336647033691
    3. ' abstract' → logprob: -14.375336647033691
    4. 'staticmethod' → logprob: -14.875336647033691
    5. 'abc' → logprob: -16.500335693359375
    6. 'abs' → logprob: -17.625335693359375
    7. 'classmethod' → logprob: -17.750335693359375
    8. 'ab' → logprob: -19.625335693359375
    9. '.abstract' → logprob: -21.125335693359375
    10. ' property' → logprob: -22.625335693359375

Token 305: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0007105246186256409
    2. '_method' → logprob: -7.250710487365723
    3. 'classmethod' → logprob: -15.000710487365723
    4. 'meth' → logprob: -15.875710487365723
    5. 'property' → logprob: -17.00071144104004
    6. 'def' → logprob: -17.25071144104004
    7. 'staticmethod' → logprob: -17.25071144104004
    8. 'abstract' → logprob: -17.75071144104004
    9. '_' → logprob: -17.75071144104004
    10. ' method' → logprob: -17.87571144104004

Token 306: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07498001307249069
    2. ' def' → logprob: -3.1999800205230713
    3. '
' → logprob: -3.6999800205230713
    4. 'method' → logprob: -5.324979782104492
    5. '    
' → logprob: -7.199979782104492
    6. '   ' → logprob: -7.199979782104492
    7. '_method' → logprob: -9.324979782104492
    8. ' ' → logprob: -9.574979782104492
    9. '	def' → logprob: -10.199979782104492
    10. '(' → logprob: -10.199979782104492

Token 307: '   ' (ID: 271)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.6183558106422424
    2. 'def' → logprob: -0.9933558106422424
    3. '_method' → logprob: -2.8683557510375977
    4. '
' → logprob: -3.8683557510375977
    5. ' def' → logprob: -5.118355751037598
    6. '    
' → logprob: -5.993355751037598
    7. 'classmethod' → logprob: -6.493355751037598
    8. '   ' → logprob: -6.743355751037598
    9. '(' → logprob: -7.743355751037598
    10. ' method' → logprob: -8.743355751037598

Token 308: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08696994185447693
    2. '
' → logprob: -2.7119698524475098
    3. 'method' → logprob: -4.21196985244751
    4. 'property' → logprob: -6.83696985244751
    5. 'classmethod' → logprob: -7.71196985244751
    6. 'staticmethod' → logprob: -8.211970329284668
    7. ' def' → logprob: -8.336970329284668
    8. '   ' → logprob: -10.836970329284668
    9. '    
' → logprob: -12.461970329284668
    10. 'class' → logprob: -12.711970329284668

Token 309: ' minimal' (ID: 19957)
  Prédit: ' simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' simulate' → logprob: -0.6277899146080017
    2. 'simulate' → logprob: -1.7527899742126465
    3. ' compute' → logprob: -2.6277899742126465
    4. ' calculate' → logprob: -3.2527899742126465
    5. ' predict' → logprob: -3.3777899742126465
    6. 'consume' → logprob: -3.5027899742126465
    7. 'compute' → logprob: -4.0027899742126465
    8. ' get' → logprob: -4.1277899742126465
    9. ' def' → logprob: -4.3777899742126465
    10. ' consume' → logprob: -4.5027899742126465

Token 310: '_p' (ID: 1359)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.9965750575065613
    2. '_storage' → logprob: -1.246575117111206
    3. '_water' → logprob: -2.371575117111206
    4. '_buffer' → logprob: -2.621575117111206
    5. '_capacity' → logprob: -3.121575117111206
    6. '_level' → logprob: -3.121575117111206
    7. '_required' → logprob: -3.746575117111206
    8. '_res' → logprob: -4.371574878692627
    9. '_fill' → logprob: -5.121574878692627
    10. '_remaining' → logprob: -5.371574878692627

Token 311: 'ump' (ID: 2643)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.3383761942386627
    2. 'ump' → logprob: -2.58837628364563
    3. 'ro' → logprob: -3.33837628364563
    4. 'ool' → logprob: -3.58837628364563
    5. 'oss' → logprob: -3.58837628364563
    6. 'roof' → logprob: -4.338376045227051
    7. 'e' → logprob: -4.463376045227051
    8. 'roduction' → logprob: -4.463376045227051
    9. 'rec' → logprob: -4.838376045227051
    10. 'red' → logprob: -5.338376045227051

Token 312: '_rate' (ID: 20477)
  Prédit: '_capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.3993534445762634
    2. '_power' → logprob: -1.7743535041809082
    3. '_on' → logprob: -3.649353504180908
    4. '_rate' → logprob: -3.774353504180908
    5. '_schedule' → logprob: -3.899353504180908
    6. '_flow' → logprob: -4.149353504180908
    7. 'ing' → logprob: -4.399353504180908
    8. '_pressure' → logprob: -4.524353504180908
    9. '_level' → logprob: -4.899353504180908
    10. '_time' → logprob: -5.649353504180908

Token 313: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008989581256173551
    2. ' (' → logprob: -7.250898838043213
    3. '(' → logprob: -8.625899314880371
    4. '(s' → logprob: -12.375899314880371
    5. 'self' → logprob: -13.000899314880371
    6. '   ' → logprob: -14.250899314880371
    7. 's' → logprob: -14.375899314880371
    8. '()' → logprob: -14.375899314880371
    9. ' ' → logprob: -15.125899314880371
    10. '(
' → logprob: -15.375899314880371

Token 314: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034980308264493942
    2. 'self' → logprob: -6.128498077392578
    3. ',' → logprob: -7.003498077392578
    4. ' )' → logprob: -8.628498077392578
    5. '(self' → logprob: -8.753498077392578
    6. '):' → logprob: -10.378498077392578
    7. ')->' → logprob: -11.003498077392578
    8. '   ' → logprob: -12.003498077392578
    9. '):
' → logprob: -12.628498077392578
    10. ' self' → logprob: -12.878498077392578

Token 315: ' schedule' (ID: 12262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5723055601119995
    2. 'self' → logprob: -0.9473055601119995
    3. ' self' → logprob: -3.697305679321289
    4. 'tank' → logprob: -4.322305679321289
    5. ' tank' → logprob: -6.697305679321289
    6. ' )' → logprob: -7.197305679321289
    7. 'max' → logprob: -7.322305679321289
    8. '   ' → logprob: -7.322305679321289
    9. 'daily' → logprob: -7.322305679321289
    10. 'schedule' → logprob: -7.447305679321289

Token 316: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.4827319085597992
    2. ':' → logprob: -1.2327319383621216
    3. 'table' → logprob: -3.107731819152832
    4. 's' → logprob: -3.107731819152832
    5. ')' → logprob: -6.982731819152832
    6. 'Table' → logprob: -7.357731819152832
    7. '   ' → logprob: -8.857731819152832
    8. ' table' → logprob: -9.357731819152832
    9. '):' → logprob: -10.232731819152832
    10. '_:' → logprob: -10.357731819152832

Token 317: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08980240672826767
    2. ':' → logprob: -2.4648025035858154
    3. ' )' → logprob: -7.464802265167236
    4. '):' → logprob: -8.214802742004395
    5. ' :' → logprob: -12.339802742004395
    6. ' ' → logprob: -12.589802742004395
    7. '   ' → logprob: -12.839802742004395
    8. ',' → logprob: -13.089802742004395
    9. '  ' → logprob: -13.214802742004395
    10. ' ):' → logprob: -13.464802742004395

Token 318: ' Schedule' (ID: 36691)
  Prédit: ' Schedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Schedule' → logprob: -0.11288779973983765
    2. 'Schedule' → logprob: -2.2378878593444824
    3. ')' → logprob: -9.737887382507324
    4. ' schedule' → logprob: -12.862887382507324
    5. ' )' → logprob: -14.112887382507324
    6. 'Scheduler' → logprob: -14.362887382507324
    7. ' ' → logprob: -14.487887382507324
    8. ' Scheduler' → logprob: -14.862887382507324
    9. '_schedule' → logprob: -14.862887382507324
    10. 'schedule' → logprob: -15.612887382507324

Token 319: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -0.0002986392646562308
    2. ')' → logprob: -8.125298500061035
    3. '):' → logprob: -13.750298500061035
    4. '[' → logprob: -14.125298500061035
    5. '   ' → logprob: -14.875298500061035
    6. '<Table' → logprob: -16.75029945373535
    7. ' Table' → logprob: -16.87529945373535
    8. ' )' → logprob: -17.25029945373535
    9. '):
' → logprob: -17.37529945373535
    10. ')->' → logprob: -17.50029945373535

Token 320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020795092859771103
    2. ' )' → logprob: -8.625207901000977
    3. ',' → logprob: -10.500207901000977
    4. ',)' → logprob: -14.625207901000977
    5. '   ' → logprob: -15.125207901000977
    6. ' ,' → logprob: -17.125207901000977
    7. '`)' → logprob: -17.125207901000977
    8. ' ' → logprob: -18.250207901000977
    9. '")' → logprob: -18.500207901000977
    10. ')->' → logprob: -19.250207901000977

Token 321: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.485887348651886
    2. ' ->' → logprob: -1.3608872890472412
    3. ')' → logprob: -2.110887289047241
    4. ')->' → logprob: -4.98588752746582
    5. ':' → logprob: -8.73588752746582
    6. '   ' → logprob: -8.86088752746582
    7. ',' → logprob: -10.11088752746582
    8. ' )->' → logprob: -10.36088752746582
    9. '()->' → logprob: -10.86088752746582
    10. ' ' → logprob: -11.36088752746582

Token 322: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014310170896351337
    2. ' int' → logprob: -4.264310359954834
    3. 'float' → logprob: -8.889309883117676
    4. ' float' → logprob: -12.014309883117676
    5. ' ' → logprob: -13.764309883117676
    6. '   ' → logprob: -14.264309883117676
    7. '[int' → logprob: -14.639309883117676
    8. '	int' → logprob: -15.889309883117676
    9. '  ' → logprob: -16.139310836791992
    10. 'None' → logprob: -16.264310836791992

Token 323: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015795262530446053
    2. '<|end|>' → logprob: -4.2657952308654785
    3. '   ' → logprob: -7.1407952308654785
    4. ':
' → logprob: -8.515795707702637
    5. ' ' → logprob: -9.015795707702637
    6. ':return' → logprob: -9.140795707702637
    7. ' :' → logprob: -9.265795707702637
    8. ';' → logprob: -9.640795707702637
    9. '<|end|>' → logprob: -9.890795707702637
    10. '  ' → logprob: -10.140795707702637

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004086828324943781
    2. '<|end|>' → logprob: -6.254086971282959
    3. ' pass' → logprob: -6.379086971282959
    4. '...' → logprob: -8.5040864944458
    5. 'pass' → logprob: -9.6290864944458
    6. ' ' → logprob: -9.7540864944458
    7. '   ' → logprob: -10.0040864944458
    8. ' ...' → logprob: -10.2540864944458
    9. '    ' → logprob: -10.6290864944458
    10. '        ' → logprob: -12.2540864944458

Token 325: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6113678812980652
    2. 'pass' → logprob: -1.36136794090271
    3. ' pass' → logprob: -1.86136794090271
    4. '...' → logprob: -3.11136794090271
    5. '"""' (adapté à ' """') → logprob: -6.986367702484131
    6. ' ...' → logprob: -8.986368179321289
    7. '	pass' → logprob: -11.986368179321289
    8. '        ' → logprob: -12.111368179321289
    9. '   ' → logprob: -12.236368179321289
    10. '```' → logprob: -12.736368179321289

Token 326: 'Calcul' (ID: 66787)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.04741434380412102
    2. '"""' → logprob: -3.5474143028259277
    3. 'Compute' → logprob: -4.797414302825928
    4. 'Determine' → logprob: -5.047414302825928
    5. 'Pass' → logprob: -6.547414302825928
    6. 'Calcul' → logprob: -6.922414302825928
    7. 'Given' → logprob: -8.797414779663086
    8. 'pass' → logprob: -9.672414779663086
    9. '"""
' → logprob: -9.922414779663086
    10. 'Determ' → logprob: -10.297414779663086

Token 327: 'ates' (ID: 1381)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.18080179393291473
    2. 'ate' → logprob: -1.8058017492294312
    3. 'late' → logprob: -7.180801868438721
    4. 't' → logprob: -9.680801391601562
    5. 'ates' → logprob: -9.805801391601562
    6. '   ' → logprob: -10.305801391601562
    7. 'tes' → logprob: -10.430801391601562
    8. '#' → logprob: -10.555801391601562
    9. 'date' → logprob: -10.805801391601562
    10. 'rate' → logprob: -11.555801391601562

Token 328: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.07064937055110931
    2. 'the' → logprob: -2.8206493854522705
    3. ' minimal' → logprob: -4.945649147033691
    4. 'minimal' → logprob: -6.570649147033691
    5. 'minimum' → logprob: -9.445649147033691
    6. ' minimum' → logprob: -10.070649147033691
    7. ' an' → logprob: -12.570649147033691
    8. ' a' → logprob: -13.945649147033691
    9. 'min' → logprob: -14.445649147033691
    10. 'optimal' → logprob: -14.945649147033691

Token 329: ' pump' (ID: 17128)
  Prédit: ' pump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pump' → logprob: -0.007249157410115004
    2. 'pump' → logprob: -5.757249355316162
    3. ' required' → logprob: -6.632249355316162
    4. ' pumping' → logprob: -7.382249355316162
    5. ' tank' → logprob: -7.507249355316162
    6. ' water' → logprob: -7.757249355316162
    7. ' the' → logprob: -8.257248878479004
    8. ' continuous' → logprob: -8.507248878479004
    9. ' necessary' → logprob: -8.757248878479004
    10. '_p' → logprob: -9.257248878479004

Token 330: ' flow' (ID: 7845)
  Prédit: '_rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.10313325375318527
    2. ' rate' → logprob: -2.353133201599121
    3. 'rate' → logprob: -5.853133201599121
    4. ' capacity' → logprob: -10.603133201599121
    5. '_capacity' → logprob: -11.353133201599121
    6. '_' → logprob: -12.603133201599121
    7. '_rates' → logprob: -12.728133201599121
    8. ' flow' → logprob: -13.103133201599121
    9. 'Rate' → logprob: -13.478133201599121
    10. '_required' → logprob: -13.603133201599121

Token 331: ' needed' (ID: 6118)
  Prédit: ' rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rate' → logprob: -0.06211142987012863
    2. 'rate' → logprob: -3.0621113777160645
    3. '_rate' → logprob: -4.3121113777160645
    4. '   ' → logprob: -11.187111854553223
    5. ' ' → logprob: -12.187111854553223
    6. ' rates' → logprob: -13.062111854553223
    7. ' capacity' → logprob: -13.187111854553223
    8. '       ' → logprob: -13.437111854553223
    9. '_' → logprob: -13.437111854553223
    10. ' to' → logprob: -15.187111854553223

Token 332: '."""
' (ID: 33044)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0013774950057268143
    2. 'to' → logprob: -6.626377582550049
    3. '   ' → logprob: -10.50137710571289
    4. ' for' → logprob: -11.75137710571289
    5. ' """' → logprob: -12.12637710571289
    6. '"""' → logprob: -12.87637710571289
    7. ' ' → logprob: -13.50137710571289
    8. '       ' → logprob: -13.75137710571289
    9. ')' → logprob: -14.12637710571289
    10. '.' → logprob: -14.25137710571289

Token 333: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.008412327617406845
    2. '       ' → logprob: -5.5084123611450195
    3. ' pass' → logprob: -5.5084123611450195
    4. '...' → logprob: -8.25841236114502
    5. '   ' → logprob: -12.25841236114502
    6. 'raise' → logprob: -12.38341236114502
    7. '	pass' → logprob: -12.75841236114502
    8. '"""' → logprob: -14.63341236114502
    9. 'pas' → logprob: -15.75841236114502
    10. ' ...' → logprob: -15.75841236114502

Token 335: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045342691242694855
    2. '<|end|>' → logprob: -3.1703426837921143
    3. 'class' → logprob: -6.920342922210693
    4. '

' → logprob: -7.295342922210693
    5. '   ' → logprob: -7.420342922210693
    6. '<|end|>' → logprob: -10.545342445373535
    7. '    
' → logprob: -11.045342445373535
    8. '  
' → logprob: -11.920342445373535
    9. '\n' → logprob: -12.045342445373535
    10. ' 
' → logprob: -12.295342445373535

Token 337: ' Tank' (ID: 46198)
  Prédit: 'Tank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tank' → logprob: -0.7322736978530884
    2. 'Simple' → logprob: -2.232273578643799
    3. 'Constant' → logprob: -2.232273578643799
    4. 'Water' → logprob: -2.857273578643799
    5. ' Tank' → logprob: -3.232273578643799
    6. ' Simple' → logprob: -3.482273578643799
    7. 'Pump' → logprob: -3.982273578643799
    8. ' Constant' → logprob: -4.107273578643799
    9. 'Consumption' → logprob: -4.107273578643799
    10. 'Linear' → logprob: -4.107273578643799

Token 338: 'Consumption' (ID: 128207)
  Prédit: 'Model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -0.5192359685897827
    2. 'Capacity' → logprob: -1.5192359685897827
    3. 'Level' → logprob: -2.6442360877990723
    4. 'Simulator' → logprob: -2.8942360877990723
    5. 'Consumption' → logprob: -3.8942360877990723
    6. 'Storage' → logprob: -4.894236087799072
    7. 'System' → logprob: -5.269236087799072
    8. 'Pump' → logprob: -5.269236087799072
    9. 'Optimizer' → logprob: -5.644236087799072
    10. 'Manager' → logprob: -6.019236087799072

Token 339: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -0.006946129258722067
    2. '(' → logprob: -5.006946086883545
    3. 'Consumption' → logprob: -8.631946563720703
    4. '(Model' → logprob: -10.756946563720703
    5. 'Mode' → logprob: -12.006946563720703
    6. 'Consumer' → logprob: -12.506946563720703
    7. 'Calculator' → logprob: -12.631946563720703
    8. 'model' → logprob: -12.881946563720703
    9. 'Strategy' → logprob: -13.381946563720703
    10. 'Manager' → logprob: -13.506946563720703

Token 340: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002278542669955641
    2. '(T' → logprob: -9.000227928161621
    3. '(S' → logprob: -9.625227928161621
    4. '(Abstract' → logprob: -11.125227928161621
    5. ' (' → logprob: -11.625227928161621
    6. ':' → logprob: -12.000227928161621
    7. '(cons' → logprob: -12.250227928161621
    8. '(C' → logprob: -13.625227928161621
    9. '(Container' → logprob: -15.125227928161621
    10. '(Storage' → logprob: -15.125227928161621

Token 341: 'Consumption' (ID: 128207)
  Prédit: 'Consumption'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Consumption' → logprob: -0.0003930192324332893
    2. ' Consumption' → logprob: -7.875392913818359
    3. 'Consum' → logprob: -12.37539291381836
    4. ')' → logprob: -12.62539291381836
    5. ' consumption' → logprob: -12.75039291381836
    6. 'ABC' → logprob: -13.62539291381836
    7. 'Consume' → logprob: -14.62539291381836
    8. 'Consumer' → logprob: -15.12539291381836
    9. 'Consumes' → logprob: -16.25039291381836
    10. 'Cons' → logprob: -16.50039291381836

Token 342: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -5.438573680294212e-06
    2. '	Model' → logprob: -13.375005722045898
    3. 'Consumption' → logprob: -13.750005722045898
    4. ' Model' → logprob: -14.000005722045898
    5. ')' → logprob: -14.125005722045898
    6. '<Model' → logprob: -16.0000057220459
    7. '
' → logprob: -16.0000057220459
    8. 'Mode' → logprob: -16.0000057220459
    9. 'model' → logprob: -16.1250057220459
    10. 'Mod' → logprob: -16.1250057220459

Token 343: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00248338864184916
    2. '):
' → logprob: -6.002483367919922
    3. ')' → logprob: -12.377483367919922
    4. ':' → logprob: -13.377483367919922
    5. '):

' → logprob: -13.877483367919922
    6. '):
' → logprob: -14.377483367919922
    7. ' ):' → logprob: -14.627483367919922
    8. '   ' → logprob: -18.127483367919922
    9. '():' → logprob: -18.252483367919922
    10. ']:' → logprob: -18.627483367919922

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01242535375058651
    2. ' def' → logprob: -4.637425422668457
    3. '
' → logprob: -6.512425422668457
    4. 'def' → logprob: -6.887425422668457
    5. '    
' → logprob: -8.887425422668457
    6. ' ind' → logprob: -12.137425422668457
    7. ' indentation' → logprob: -12.512425422668457
    8. ' 
' → logprob: -13.012425422668457
    9. '	def' → logprob: -13.137425422668457
    10. ')' → logprob: -13.137425422668457

Token 345: ' """' (ID: 9280)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.07946964353322983
    2. 'def' → logprob: -2.579469680786133
    3. '   ' → logprob: -7.454469680786133
    4. 'class' → logprob: -15.454469680786133
    5. '
' → logprob: -15.579469680786133
    6. '    ' → logprob: -15.704469680786133
    7. '	def' → logprob: -15.829469680786133
    8. ' ' → logprob: -16.454469680786133
    9. ' """' → logprob: -16.829469680786133
    10. '  ' → logprob: -17.579469680786133

Token 346: 'Sim' (ID: 13280)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7131015658378601
    2. 'Calcul' → logprob: -1.5881016254425049
    3. 'class' → logprob: -1.8381016254425049
    4. '"""' → logprob: -2.838101625442505
    5. '   ' → logprob: -3.338101625442505
    6. ' def' → logprob: -3.838101625442505
    7. 'Im' → logprob: -4.463101387023926
    8. '"""
' → logprob: -5.338101387023926
    9. '
' → logprob: -5.838101387023926
    10. 'Rep' → logprob: -6.213101387023926

Token 347: 'ulate' (ID: 10111)
  Prédit: 'ple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ple' → logprob: -0.08361425250768661
    2. 'pl' → logprob: -2.8336143493652344
    3. 'plements' → logprob: -4.708614349365234
    4. 'ulates' → logprob: -4.833614349365234
    5. 'plement' → logprob: -6.083614349365234
    6. '"""' → logprob: -7.333614349365234
    7. 'ples' → logprob: -7.833614349365234
    8. 'ply' → logprob: -8.083614349365234
    9. 'plies' → logprob: -8.833614349365234
    10. 'p' → logprob: -8.833614349365234

Token 348: ' the' (ID: 290)
  Prédit: ' water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' water' → logprob: -0.7018293142318726
    2. ' tank' → logprob: -1.5768293142318726
    3. ' a' → logprob: -1.9518293142318726
    4. ' daily' → logprob: -3.326829433441162
    5. 'tank' → logprob: -3.326829433441162
    6. ' the' → logprob: -3.576829433441162
    7. 's' → logprob: -3.576829433441162
    8. 'a' → logprob: -4.826829433441162
    9. 'water' → logprob: -5.451829433441162
    10. ' consumption' → logprob: -5.451829433441162

Token 349: ' tank' (ID: 16109)
  Prédit: 'tank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tank' → logprob: -0.6099964380264282
    2. 'water' → logprob: -1.2349964380264282
    3. ' water' → logprob: -3.1099963188171387
    4. ' tank' → logprob: -3.6099963188171387
    5. ' behavior' → logprob: -4.234996318817139
    6. 'pump' → logprob: -4.359996318817139
    7. 'behavior' → logprob: -4.484996318817139
    8. ' consumption' → logprob: -4.984996318817139
    9. 'operation' → logprob: -4.984996318817139
    10. 'cons' → logprob: -5.109996318817139

Token 350: ' water' (ID: 3411)
  Prédit: ' water'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' water' → logprob: -0.31350675225257874
    2. ' level' → logprob: -2.313506841659546
    3. ' consumption' → logprob: -2.688506841659546
    4. ' filling' → logprob: -4.063506603240967
    5. '-based' → logprob: -4.188506603240967
    6. ' with' → logprob: -4.813506603240967
    7. ''s' → logprob: -4.813506603240967
    8. ' system' → logprob: -4.938506603240967
    9. ' usage' → logprob: -5.438506603240967
    10. ' and' → logprob: -5.688506603240967

Token 351: ' level' (ID: 3211)
  Prédit: ' level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' level' → logprob: -0.5088569521903992
    2. 'level' → logprob: -1.133857011795044
    3. ' usage' → logprob: -3.258857011795044
    4. ' consumption' → logprob: -3.508857011795044
    5. 'usage' → logprob: -6.008856773376465
    6. ' levels' → logprob: -6.758856773376465
    7. 'levels' → logprob: -6.883856773376465
    8. 'cons' → logprob: -7.008856773376465
    9. ' storage' → logprob: -7.133856773376465
    10. ' capacity' → logprob: -8.133856773376465

Token 352: ' evolution' (ID: 26416)
  Prédit: ' over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.43040573596954346
    2. ' dynamics' → logprob: -1.1804057359695435
    3. ' behavior' → logprob: -4.180405616760254
    4. ' considering' → logprob: -4.805405616760254
    5. ' changes' → logprob: -5.180405616760254
    6. ' based' → logprob: -5.930405616760254
    7. 'over' → logprob: -6.180405616760254
    8. ' to' → logprob: -6.430405616760254
    9. 'd' → logprob: -7.055405616760254
    10. ' with' → logprob: -7.430405616760254

Token 353: ' to' (ID: 316)
  Prédit: ' over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.7703321576118469
    2. ' based' → logprob: -1.6453320980072021
    3. ' to' → logprob: -2.145332098007202
    4. ' and' → logprob: -2.645332098007202
    5. ' during' → logprob: -3.145332098007202
    6. '   ' → logprob: -3.395332098007202
    7. ' given' → logprob: -3.770332098007202
    8. ' with' → logprob: -4.145332336425781
    9. ' throughout' → logprob: -4.520332336425781
    10. ' using' → logprob: -5.270332336425781

Token 354: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.26157236099243164
    2. ' determine' → logprob: -1.7615723609924316
    3. ' ensure' → logprob: -3.3865723609924316
    4. 'find' → logprob: -4.386572360992432
    5. 'ensure' → logprob: -5.511572360992432
    6. ' compute' → logprob: -5.886572360992432
    7. ' check' → logprob: -6.636572360992432
    8. 'compute' → logprob: -6.886572360992432
    9. ' meet' → logprob: -7.636572360992432
    10. ' calculate' → logprob: -7.761572360992432

Token 355: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.02759658358991146
    2. ' minimal' → logprob: -4.027596473693848
    3. 'the' → logprob: -4.777596473693848
    4. 'minimal' → logprob: -7.027596473693848
    5. ' minimum' → logprob: -9.652596473693848
    6. 'minimum' → logprob: -10.777596473693848
    7. ' required' → logprob: -12.527596473693848
    8. ' a' → logprob: -12.902596473693848
    9. ' necessary' → logprob: -13.277596473693848
    10. ' its' → logprob: -13.652596473693848

Token 356: ' pump' (ID: 17128)
  Prédit: ' pump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pump' → logprob: -0.020028365775942802
    2. 'pump' → logprob: -4.520028591156006
    3. '_' → logprob: -5.270028591156006
    4. '_p' → logprob: -6.770028591156006
    5. ' continuous' → logprob: -7.270028591156006
    6. ' rate' → logprob: -8.145028114318848
    7. ' constant' → logprob: -8.145028114318848
    8. ' required' → logprob: -8.645028114318848
    9. ' possible' → logprob: -8.770028114318848
    10. ' _' → logprob: -8.895028114318848

Token 357: ' speed' (ID: 7733)
  Prédit: ' rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rate' → logprob: -0.39977729320526123
    2. '_rate' → logprob: -1.2747772932052612
    3. ' flow' → logprob: -3.024777412414551
    4. 'rate' → logprob: -6.899777412414551
    5. '_flow' → logprob: -8.39977741241455
    6. ' pump' → logprob: -9.64977741241455
    7. '_' → logprob: -9.77477741241455
    8. 'flow' → logprob: -10.77477741241455
    9. ' capacity' → logprob: -10.89977741241455
    10. ' rates' → logprob: -11.39977741241455

Token 358: '."""

' (ID: 68934)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.992320716381073
    2. '   ' → logprob: -1.2423207759857178
    3. ' that' → logprob: -1.4923207759857178
    4. ' required' → logprob: -3.1173207759857178
    5. ' for' → logprob: -3.7423207759857178
    6. ' needed' → logprob: -4.742320537567139
    7. ' necessary' → logprob: -5.117320537567139
    8. '."""
' → logprob: -5.242320537567139
    9. '"""
' → logprob: -5.367320537567139
    10. '.' → logprob: -5.367320537567139

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009372343309223652
    2. ' def' → logprob: -4.759372234344482
    3. '    ' → logprob: -7.634372234344482
    4. '    
' → logprob: -8.63437271118164
    5. 'def' → logprob: -10.00937271118164
    6. ' 
' → logprob: -10.88437271118164
    7. '
' → logprob: -11.50937271118164
    8. ' indentation' → logprob: -11.88437271118164
    9. ' class' → logprob: -13.13437271118164
    10. ' ind' → logprob: -13.25937271118164

Token 360: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.029753385111689568
    2. ' def' → logprob: -3.5297534465789795
    3. '   ' → logprob: -12.904753684997559
    4. 'import' → logprob: -15.404753684997559
    5. 'class' → logprob: -15.904753684997559
    6. 'from' → logprob: -16.904752731323242
    7. 'MIN' → logprob: -17.029752731323242
    8. 'de' → logprob: -18.404752731323242
    9. 'MAX' → logprob: -18.529752731323242
    10. '@' → logprob: -18.904752731323242

Token 361: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.008652745746076107
    2. 'minimal' → logprob: -4.758652687072754
    3. ' def' → logprob: -10.383652687072754
    4. 'def' → logprob: -11.883652687072754
    5. 'Minimal' → logprob: -15.258652687072754
    6. 'min' → logprob: -16.50865364074707
    7. ' minimum' → logprob: -17.00865364074707
    8. '_min' → logprob: -17.13365364074707
    9. ' min' → logprob: -17.63365364074707
    10. '_' → logprob: -18.50865364074707

Token 362: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.250001907348633
    3. '```' → logprob: -18.625001907348633
    4. '_t' → logprob: -18.875001907348633
    5. 'pump' → logprob: -19.000001907348633
    6. ' _' → logprob: -19.250001907348633
    7. ' pump' → logprob: -19.875001907348633
    8. '_rate' → logprob: -20.250001907348633
    9. '_
' → logprob: -20.625001907348633
    10. 'Pump' → logprob: -20.625001907348633

Token 363: 'ump' (ID: 2643)
  Prédit: 'ump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ump' → logprob: -4.7755875129951164e-05
    2. 'pump' → logprob: -10.00004768371582
    3. 'um' → logprob: -14.50004768371582
    4. 'u' → logprob: -14.50004768371582
    5. 'omp' → logprob: -15.12504768371582
    6. '_' → logprob: -15.12504768371582
    7. 'mp' → logprob: -15.62504768371582
    8. 'p' → logprob: -15.87504768371582
    9. '__' → logprob: -15.87504768371582
    10. 'umping' → logprob: -16.75004768371582

Token 364: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. '_r' → logprob: -17.625
    4. '_speed' → logprob: -17.75
    5. 'rate' → logprob: -17.875
    6. '_rates' → logprob: -17.875
    7. '_RATE' → logprob: -18.875
    8. '_ratio' → logprob: -18.875
    9. '_rating' → logprob: -19.625
    10. '   ' → logprob: -20.5

Token 365: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. ' (' → logprob: -15.750003814697266
    4. '   ' → logprob: -17.750003814697266
    5. '(s' → logprob: -19.000003814697266
    6. '(
' → logprob: -19.500003814697266
    7. 'self' → logprob: -20.125003814697266
    8. '(Self' → logprob: -20.125003814697266
    9. '(sel' → logprob: -20.750003814697266
    10. '       ' → logprob: -21.500003814697266

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.504040356958285e-05
    2. ' ,' → logprob: -10.000064849853516
    3. 'self' → logprob: -11.750064849853516
    4. ',s' → logprob: -12.000064849853516
    5. ',self' → logprob: -12.750064849853516
    6. '(self' → logprob: -14.125064849853516
    7. ',
' → logprob: -14.250064849853516
    8. ')' → logprob: -14.375064849853516
    9. '       ' → logprob: -15.750064849853516
    10. 's' → logprob: -15.875064849853516

Token 367: ' schedule' (ID: 12262)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031813981477171183
    2. ' self' → logprob: -5.753181457519531
    3. '   ' → logprob: -13.628181457519531
    4. 'schedule' → logprob: -13.878181457519531
    5. 's' → logprob: -14.253181457519531
    6. '       ' → logprob: -14.878181457519531
    7. '(self' → logprob: -15.503181457519531
    8. ')' → logprob: -15.878181457519531
    9. '
' → logprob: -16.62818145751953
    10. ' ' → logprob: -16.87818145751953

Token 368: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -4.008129963040119e-06
    2. 'Table' → logprob: -12.625003814697266
    3. 'table' → logprob: -15.000003814697266
    4. '_TABLE' → logprob: -16.000003814697266
    5. '   ' → logprob: -16.375003814697266
    6. '       ' → logprob: -17.250003814697266
    7. '_Table' → logprob: -17.375003814697266
    8. '_' → logprob: -18.875003814697266
    9. ':' → logprob: -19.000003814697266
    10. '@Table' → logprob: -19.125003814697266

Token 369: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05395178869366646
    2. ')' → logprob: -3.1789517402648926
    3. '):' → logprob: -4.803951740264893
    4. ' :' → logprob: -7.303951740264893
    5. ',' → logprob: -7.553951740264893
    6. '       ' → logprob: -7.803951740264893
    7. '   ' → logprob: -7.928951740264893
    8. ' )' → logprob: -8.42895221710205
    9. ' ):' → logprob: -8.42895221710205
    10. '):
' → logprob: -8.80395221710205

Token 370: ' Schedule' (ID: 36691)
  Prédit: 'Schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Schedule' → logprob: -0.1604016274213791
    2. ' Schedule' → logprob: -1.9104015827178955
    3. ' schedule' → logprob: -9.285401344299316
    4. 'schedule' → logprob: -9.910401344299316
    5. '_schedule' → logprob: -11.035401344299316
    6. ')' → logprob: -11.160401344299316
    7. 'self' → logprob: -13.410401344299316
    8. '.Schedule' → logprob: -13.785401344299316
    9. 'Schedules' → logprob: -13.910401344299316
    10. ' ' → logprob: -15.160401344299316

Token 371: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -5.080963092041202e-06
    2. '   ' → logprob: -12.875004768371582
    3. '       ' → logprob: -14.125004768371582
    4. ')' → logprob: -15.125004768371582
    5. '<Table' → logprob: -15.375004768371582
    6. '	Table' → logprob: -15.375004768371582
    7. '):
' → logprob: -15.625004768371582
    8. ':' → logprob: -16.1250057220459
    9. 'table' → logprob: -16.1250057220459
    10. '           ' → logprob: -16.2500057220459

Token 372: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.431207682704553e-05
    2. ' )' → logprob: -10.500054359436035
    3. ',' → logprob: -11.375054359436035
    4. '   ' → logprob: -12.125054359436035
    5. ':' → logprob: -12.250054359436035
    6. '):' → logprob: -12.625054359436035
    7. 'self' → logprob: -13.750054359436035
    8. '       ' → logprob: -14.500054359436035
    9. '(self' → logprob: -16.00005340576172
    10. ',)' → logprob: -16.75005340576172

Token 373: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.14235468208789825
    2. ')' → logprob: -2.767354726791382
    3. '->' → logprob: -2.767354726791382
    4. ':' → logprob: -5.267354488372803
    5. '   ' → logprob: -6.392354488372803
    6. ')->' → logprob: -9.267354965209961
    7. '       ' → logprob: -10.017354965209961
    8. '(' → logprob: -11.017354965209961
    9. '(self' → logprob: -11.267354965209961
    10. ' ' → logprob: -11.517354965209961

Token 374: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4740865230560303
    2. ' float' → logprob: -0.9740865230560303
    3. 'int' → logprob: -12.47408676147461
    4. ' int' → logprob: -13.34908676147461
    5. ' ' → logprob: -13.72408676147461
    6. '   ' → logprob: -14.34908676147461
    7. '	float' → logprob: -14.34908676147461
    8. '(float' → logprob: -14.72408676147461
    9. 'Schedule' → logprob: -15.09908676147461
    10. '=float' → logprob: -15.22408676147461

Token 375: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002060330705717206
    2. ':
' → logprob: -6.377060413360596
    3. '       ' → logprob: -9.002059936523438
    4. '   ' → logprob: -9.377059936523438
    5. '():' → logprob: -9.627059936523438
    6. '):' → logprob: -10.002059936523438
    7. '(self' → logprob: -11.127059936523438
    8. ',' → logprob: -11.752059936523438
    9. '(' → logprob: -12.127059936523438
    10. '):
' → logprob: -12.877059936523438

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.7697225252486533e-06
    2. '        
' → logprob: -13.500003814697266
    3. '
' → logprob: -13.875003814697266
    4. ' start' → logprob: -15.000003814697266
    5. ',' → logprob: -15.625003814697266
    6. '   ' → logprob: -16.375003814697266
    7. ' slow' → logprob: -16.375003814697266
    8. '      ' → logprob: -16.500003814697266
    9. '        ' → logprob: -16.625003814697266
    10. '    ' → logprob: -16.875003814697266

Token 377: ' L' (ID: 451)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03599688038229942
    2. ' low' → logprob: -4.160996913909912
    3. 'low' → logprob: -5.285996913909912
    4. ' left' → logprob: -5.660996913909912
    5. ' pump' → logprob: -6.160996913909912
    6. '0' → logprob: -6.535996913909912
    7. ' min' → logprob: -6.535996913909912
    8. 'pump' → logprob: -7.035996913909912
    9. 'left' → logprob: -7.160996913909912
    10. ' max' → logprob: -7.410996913909912

Token 378: ' =' (ID: 314)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -1.1578865051269531
    2. 'eft' → logprob: -1.2828865051269531
    3. ',' → logprob: -1.5328865051269531
    4. ' =' → logprob: -1.9078865051269531
    5. 'ower' → logprob: -4.032886505126953
    6. '=' → logprob: -4.282886505126953
    7. '       ' → logprob: -4.782886505126953
    8. 'OWER' → logprob: -6.657886505126953
    9. 'OW' → logprob: -7.157886505126953
    10. 'e' → logprob: -7.407886505126953

Token 379: ' schedule' (ID: 12262)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4115345776081085
    2. '0' → logprob: -1.1615345478057861
    3. 'max' → logprob: -4.161534786224365
    4. ' max' → logprob: -4.911534786224365
    5. '1' → logprob: -7.536534786224365
    6. 'schedule' → logprob: -8.411534309387207
    7. 'min' → logprob: -8.911534309387207
    8. ' schedule' → logprob: -9.286534309387207
    9. ' min' → logprob: -9.536534309387207
    10. 'sum' → logprob: -9.724034309387207

Token 380: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -4.56102097814437e-05
    2. 'Table' → logprob: -10.125045776367188
    3. 'table' → logprob: -12.375045776367188
    4. '_TABLE' → logprob: -14.750045776367188
    5. 't' → logprob: -15.875045776367188
    6. '   ' → logprob: -15.875045776367188
    7. '._' → logprob: -16.125045776367188
    8. '.Table' → logprob: -16.625045776367188
    9. '       ' → logprob: -16.750045776367188
    10. '.table' → logprob: -16.875045776367188

Token 381: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -2.2842308680992573e-05
    2. '.' → logprob: -11.125022888183594
    3. '.DAY' → logprob: -12.750022888183594
    4. '.day' → logprob: -13.125022888183594
    5. '.s' → logprob: -13.500022888183594
    6. ' .' → logprob: -13.875022888183594
    7. '.T' → logprob: -15.500022888183594
    8. 'DAY' → logprob: -15.875022888183594
    9. '   ' → logprob: -16.250022888183594
    10. '.days' → logprob: -16.875022888183594

Token 382: 'ank' (ID: 1104)
  Prédit: 'ank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ank' → logprob: -0.003641884308308363
    2. 'tank' → logprob: -5.6286420822143555
    3. 'a' → logprob: -11.628642082214355
    4. 'Tank' → logprob: -12.753642082214355
    5. '   ' → logprob: -13.003642082214355
    6. '```' → logprob: -13.128642082214355
    7. 'ask' → logprob: -13.378642082214355
    8. '#' → logprob: -13.378642082214355
    9. 'ankt' → logprob: -13.378642082214355
    10. 'anks' → logprob: -13.566142082214355

Token 383: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -4.127333340875339e-06
    2. 'capacity' → logprob: -12.500003814697266
    3. '_cap' → logprob: -16.250003814697266
    4. '_' → logprob: -16.750003814697266
    5. ' capacity' → logprob: -17.000003814697266
    6. 'Capacity' → logprob: -17.625003814697266
    7. 't' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.000003814697266
    9. '_
' → logprob: -18.750003814697266
    10. '.capacity' → logprob: -18.750003814697266

Token 384: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13176076114177704
    2. '+' → logprob: -2.756760835647583
    3. ' +' → logprob: -3.506760835647583
    4. '       ' → logprob: -4.256760597229004
    5. '        
' → logprob: -5.631760597229004
    6. ' *' → logprob: -6.256760597229004
    7. '<|end|>' → logprob: -6.256760597229004
    8. ' 
' → logprob: -6.381760597229004
    9. '
' → logprob: -6.631760597229004
    10. '*' → logprob: -6.756760597229004

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04338599368929863
    2. '
' → logprob: -3.2933859825134277
    3. '        
' → logprob: -6.418385982513428
    4. ',' → logprob: -6.543385982513428
    5. ' current' → logprob: -7.293385982513428
    6. ' rate' → logprob: -7.793385982513428
    7. '   ' → logprob: -8.543386459350586
    8. ' ' → logprob: -9.043386459350586
    9. '  
' → logprob: -9.293386459350586
    10. ' 
' → logprob: -9.543386459350586

Token 386: ' intervals' (ID: 49900)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.043400030583143234
    2. 'left' → logprob: -3.4184000492095947
    3. ' low' → logprob: -5.668399810791016
    4. 'lo' → logprob: -5.793399810791016
    5. 'pump' → logprob: -6.793399810791016
    6. 'rate' → logprob: -7.543399810791016
    7. ' left' → logprob: -7.918399810791016
    8. 'lower' → logprob: -8.543399810791016
    9. 'l' → logprob: -8.793399810791016
    10. 'min' → logprob: -8.918399810791016

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08273613452911377
    2. '=' → logprob: -2.582736015319824
    3. ':' → logprob: -5.707736015319824
    4. ',' → logprob: -8.707736015319824
    5. 'for' → logprob: -9.207736015319824
    6. '   ' → logprob: -9.832736015319824
    7. '_iter' → logprob: -10.082736015319824
    8. '       ' → logprob: -10.457736015319824
    9. '_' → logprob: -10.707736015319824
    10. '=[]' → logprob: -11.207736015319824

Token 388: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0006902746972627938
    2. ' list' → logprob: -7.375690460205078
    3. 'schedule' → logprob: -9.750690460205078
    4. '(list' → logprob: -13.375690460205078
    5. '[list' → logprob: -13.750690460205078
    6. '   ' → logprob: -14.250690460205078
    7. ' schedule' → logprob: -14.250690460205078
    8. '	list' → logprob: -15.000690460205078
    9. '[(' → logprob: -15.000690460205078
    10. 'tuple' → logprob: -15.250690460205078

Token 389: '(schedule' (ID: 175256)
  Prédit: '(schedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(schedule' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. 'schedule' → logprob: -16.875
    4. '(
' → logprob: -18.5
    5. '(self' → logprob: -19.875
    6. '(s' → logprob: -19.875
    7. '(schema' → logprob: -20.75
    8. '((' → logprob: -20.75
    9. ' (' → logprob: -21.25
    10. '(

' → logprob: -21.375

Token 390: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.0007794885314069688
    2. 'table' → logprob: -7.250779628753662
    3. 'Table' → logprob: -10.125779151916504
    4. 'interval' → logprob: -12.000779151916504
    5. '_.' → logprob: -12.125779151916504
    6. '.table' → logprob: -12.500779151916504
    7. '._' → logprob: -13.000779151916504
    8. '_inter' → logprob: -13.000779151916504
    9. '.inter' → logprob: -13.250779151916504
    10. '.schedule' → logprob: -13.250779151916504

Token 391: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.00011403311509639025
    2. '.' → logprob: -9.250114440917969
    3. '.interval' → logprob: -11.375114440917969
    4. ' .' → logprob: -12.125114440917969
    5. ').' → logprob: -14.625114440917969
    6. '.period' → logprob: -15.750114440917969
    7. '.iter' → logprob: -15.875114440917969
    8. 'interval' → logprob: -16.87511444091797
    9. '
' → logprob: -17.50011444091797
    10. '.items' → logprob: -18.00011444091797

Token 392: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0011371198343113065
    2. 'als' → logprob: -7.2511372566223145
    3. 'val' → logprob: -8.001136779785156
    4. '```' → logprob: -10.376136779785156
    5. 'erv' → logprob: -11.251136779785156
    6. 'interval' → logprob: -11.876136779785156
    7. 'r' → logprob: -11.876136779785156
    8. 'n' → logprob: -12.251136779785156
    9. '__' → logprob: -12.626136779785156
    10. 's' → logprob: -12.876136779785156

Token 393: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00014585316239390522
    2. '()' → logprob: -9.12514591217041
    3. ')' → logprob: -10.37514591217041
    4. '())
' → logprob: -12.50014591217041
    5. ' ())' → logprob: -13.75014591217041
    6. '()))' → logprob: -14.62514591217041
    7. '();)' → logprob: -15.62514591217041
    8. '(' → logprob: -16.625144958496094
    9. '());' → logprob: -17.375144958496094
    10. '())

' → logprob: -17.500144958496094

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.141693577170372
    2. ' low' → logprob: -2.141693592071533
    3. ' pump' → logprob: -5.141693592071533
    4. 'low' → logprob: -5.641693592071533
    5. ' lo' → logprob: -6.266693592071533
    6. ' left' → logprob: -7.266693592071533
    7. '
' → logprob: -7.391693592071533
    8. '   ' → logprob: -7.766693592071533
    9. '```' → logprob: -8.266693115234375
    10. 'pump' → logprob: -8.266693115234375

Token 395: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.11975545436143875
    2. 'left' → logprob: -2.244755506515503
    3. 'def' → logprob: -5.869755268096924
    4. 'pump' → logprob: -6.244755268096924
    5. 'lo' → logprob: -6.369755268096924
    6. '       ' → logprob: -9.244755744934082
    7. 'l' → logprob: -9.494755744934082
    8. 'lower' → logprob: -9.619755744934082
    9. 'min' → logprob: -9.744755744934082
    10. ' low' → logprob: -9.994755744934082

Token 396: ' Lower' (ID: 42961)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.13527914881706238
    2. 'left' → logprob: -2.1352791786193848
    3. 'def' → logprob: -6.010279178619385
    4. 'lo' → logprob: -6.260279178619385
    5. 'pump' → logprob: -6.385279178619385
    6. ' low' → logprob: -7.135279178619385
    7. '#' → logprob: -7.635279178619385
    8. 'lower' → logprob: -8.010278701782227
    9. ' left' → logprob: -8.260278701782227
    10. 'min' → logprob: -9.010278701782227

Token 397: ' and' (ID: 326)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.08951710164546967
    2. ' =' → logprob: -2.589517116546631
    3. ',' → logprob: -5.089517116546631
    4. 'bound' → logprob: -6.089517116546631
    5. '=' → logprob: -6.964517116546631
    6. ' bound' → logprob: -6.964517116546631
    7. 'Bound' → logprob: -8.839516639709473
    8. '_rate' → logprob: -9.464516639709473
    9. '_limit' → logprob: -11.839516639709473
    10. '_bounds' → logprob: -11.964516639709473

Token 398: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.20179443061351776
    2. 'upper' → logprob: -1.7017943859100342
    3. '_upper' → logprob: -8.201794624328613
    4. 'Upper' → logprob: -9.576794624328613
    5. ' higher' → logprob: -10.826794624328613
    6. 'higher' → logprob: -11.951794624328613
    7. ' Upper' → logprob: -12.451794624328613
    8. '       ' → logprob: -12.701794624328613
    9. '.upper' → logprob: -13.201794624328613
    10. '-upper' → logprob: -14.076794624328613

Token 399: ' bounds' (ID: 30227)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.30667996406555176
    2. ' =' → logprob: -1.5566799640655518
    3. '_' → logprob: -3.5566799640655518
    4. '=' → logprob: -4.806679725646973
    5. '_bounds' → logprob: -5.056679725646973
    6. 'bound' → logprob: -5.431679725646973
    7. ' bound' → logprob: -5.556679725646973
    8. ' bounds' → logprob: -6.681679725646973
    9. 'Bound' → logprob: -8.431679725646973
    10. ' _' → logprob: -9.181679725646973

Token 400: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008952771313488483
    2. '=' → logprob: -5.258952617645264
    3. ',' → logprob: -5.758952617645264
    4. '       ' → logprob: -8.133953094482422
    5. ':' → logprob: -9.008953094482422
    6. ' pump' → logprob: -9.633953094482422
    7. ' for' → logprob: -10.883953094482422
    8. 'pump' → logprob: -11.633953094482422
    9. 'rate' → logprob: -11.633953094482422
    10. 'p' → logprob: -11.758953094482422

Token 401: ' binary' (ID: 15600)
  Prédit: ' pump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pump' → logprob: -0.6421555280685425
    2. 'pump' → logprob: -0.7671555280685425
    3. 'rate' → logprob: -5.392155647277832
    4. ' rate' → logprob: -6.267155647277832
    5. 'p' → logprob: -6.767155647277832
    6. ' pumping' → logprob: -7.267155647277832
    7. ' p' → logprob: -8.267155647277832
    8. 'r' → logprob: -8.892155647277832
    9. 'flow' → logprob: -9.142155647277832
    10. 'left' → logprob: -9.267155647277832

Token 402: ' search' (ID: 3684)
  Prédit: '_search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.6548611521720886
    2. ' search' → logprob: -0.9048611521720886
    3. 'search' → logprob: -3.1548612117767334
    4. '_' → logprob: -3.4048612117767334
    5. ' searches' → logprob: -11.904861450195312
    6. ' _' → logprob: -12.029861450195312
    7. '   ' → logprob: -12.279861450195312
    8. ' ' → logprob: -12.404861450195312
    9. '	search' → logprob: -13.529861450195312
    10. ' searching' → logprob: -13.779861450195312

Token 403: ' of' (ID: 328)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.7632931470870972
    2. 'low' → logprob: -1.0132931470870972
    3. '       ' → logprob: -2.2632932662963867
    4. ' pump' → logprob: -3.1382932662963867
    5. 'pump' → logprob: -5.263293266296387
    6. ' left' → logprob: -5.763293266296387
    7. ',' → logprob: -6.138293266296387
    8. '
' → logprob: -6.263293266296387
    9. 'left' → logprob: -6.388293266296387
    10. 'lower' → logprob: -6.763293266296387

Token 404: ' pump' (ID: 17128)
  Prédit: ' pump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pump' → logprob: -0.18172623217105865
    2. 'pump' → logprob: -2.1817262172698975
    3. ' the' → logprob: -3.0567262172698975
    4. 'the' → logprob: -5.306726455688477
    5. ' rate' → logprob: -8.306726455688477
    6. 'p' → logprob: -8.306726455688477
    7. ' flow' → logprob: -8.806726455688477
    8. 'rate' → logprob: -8.806726455688477
    9. ' minimal' → logprob: -8.931726455688477
    10. ' pumping' → logprob: -9.431726455688477

Token 405: ' speed' (ID: 7733)
  Prédit: '_rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.01847837120294571
    2. ' rate' → logprob: -4.0184783935546875
    3. '_speed' → logprob: -8.893478393554688
    4. 'rate' → logprob: -9.518478393554688
    5. '_' → logprob: -10.268478393554688
    6. ' _' → logprob: -10.643478393554688
    7. ' flow' → logprob: -11.393478393554688
    8. ' speed' → logprob: -11.643478393554688
    9. '_flow' → logprob: -11.768478393554688
    10. ' ' → logprob: -12.018478393554688

Token 406: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6768364906311035
    2. ' pump' → logprob: -1.5518364906311035
    3. '0' → logprob: -1.9268364906311035
    4. 'pump' → logprob: -3.8018364906311035
    5. ':' → logprob: -3.9268364906311035
    6. ' low' → logprob: -4.1768364906311035
    7. 'low' → logprob: -4.4268364906311035
    8. ' lower' → logprob: -4.6768364906311035
    9. ',' → logprob: -4.6768364906311035
    10. 'lower' → logprob: -4.9268364906311035

Token 407: '       ' (ID: 309)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.5609104037284851
    2. ' low' → logprob: -1.3109104633331299
    3. ' left' → logprob: -2.56091046333313
    4. 'left' → logprob: -3.31091046333313
    5. '       ' → logprob: -3.56091046333313
    6. 'lower' → logprob: -5.435910224914551
    7. ' lo' → logprob: -5.560910224914551
    8. 'lo' → logprob: -6.310910224914551
    9. ' lb' → logprob: -6.435910224914551
    10. ' pump' → logprob: -6.560910224914551

Token 408: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.29903504252433777
    2. ' low' → logprob: -2.54903507232666
    3. '0' → logprob: -2.79903507232666
    4. 'left' → logprob: -2.79903507232666
    5. ' left' → logprob: -3.92403507232666
    6. '       ' → logprob: -4.67403507232666
    7. ' lo' → logprob: -4.92403507232666
    8. 'lo' → logprob: -5.29903507232666
    9. 'l' → logprob: -5.42403507232666
    10. ' pump' → logprob: -5.79903507232666

Token 409: ' Lower' (ID: 42961)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.11229865252971649
    2. 'left' → logprob: -3.1122987270355225
    3. '0' → logprob: -3.4872987270355225
    4. 'lower' → logprob: -4.487298488616943
    5. 'lo' → logprob: -4.862298488616943
    6. 'pump' → logprob: -5.112298488616943
    7. 'max' → logprob: -5.487298488616943
    8. 'min' → logprob: -7.362298488616943
    9. '       ' → logprob: -7.987298488616943
    10. ' low' → logprob: -8.112298965454102

Token 410: ' bound' (ID: 11608)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06036294996738434
    2. '_bound' → logprob: -3.4353630542755127
    3. '_rate' → logprob: -4.060362815856934
    4. '=' → logprob: -5.310362815856934
    5. ',' → logprob: -5.685362815856934
    6. ' bound' → logprob: -8.185362815856934
    7. 'bound' → logprob: -8.435362815856934
    8. ':' → logprob: -9.185362815856934
    9. '_' → logprob: -9.560362815856934
    10. '_p' → logprob: -10.560362815856934

Token 411: ' cannot' (ID: 6284)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48040708899497986
    2. '=' → logprob: -0.9804071187973022
    3. ',' → logprob: -5.105407238006592
    4. '0' → logprob: -8.980406761169434
    5. ':' → logprob: -9.480406761169434
    6. ' ' → logprob: -10.855406761169434
    7. '       ' → logprob: -11.980406761169434
    8. ' ,' → logprob: -12.730406761169434
    9. ')' → logprob: -13.105406761169434
    10. ' is' → logprob: -13.355406761169434

Token 412: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.001760148094035685
    2. 'be' → logprob: -6.376760005950928
    3. ' exceed' → logprob: -10.876760482788086
    4. '<|end|>' → logprob: -11.626760482788086
    5. '	be' → logprob: -11.876760482788086
    6. '0' → logprob: -11.876760482788086
    7. ' go' → logprob: -12.376760482788086
    8. '_be' → logprob: -12.751760482788086
    9. ' ' → logprob: -13.126760482788086
    10. '=' → logprob: -13.376760482788086

Token 413: ' less' (ID: 3760)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0382513664662838
    2. 'less' → logprob: -3.6632513999938965
    3. 'min' → logprob: -5.6632513999938965
    4. 'negative' → logprob: -6.0382513999938965
    5. ' less' → logprob: -6.4132513999938965
    6. ' ' → logprob: -6.4132513999938965
    7. 'max' → logprob: -6.5382513999938965
    8. 'lower' → logprob: -7.1632513999938965
    9. ' min' → logprob: -8.663250923156738
    10. ' negative' → logprob: -9.163250923156738

Token 414: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.01827613078057766
    2. 'than' → logprob: -4.143276214599609
    3. '0' → logprob: -6.393276214599609
    4. '       ' → logprob: -8.01827621459961
    5. '=' → logprob: -9.26827621459961
    6. '_than' → logprob: -10.39327621459961
    7. '        ' → logprob: -10.39327621459961
    8. ' or' → logprob: -10.39327621459961
    9. ',' → logprob: -11.14327621459961
    10. 'er' → logprob: -11.51827621459961

Token 415: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05177288129925728
    2. 'max' → logprob: -3.3017728328704834
    3. ' ' → logprob: -4.4267730712890625
    4. ' max' → logprob: -6.6767730712890625
    5. 'min' → logprob: -7.9267730712890625
    6. '1' → logprob: -10.426773071289062
    7. ' min' → logprob: -11.051773071289062
    8. 'maximum' → logprob: -12.301773071289062
    9. '   ' → logprob: -12.551773071289062
    10. 'minimum' → logprob: -13.176773071289062

Token 416: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07139185816049576
    2. 'max' → logprob: -2.6963918209075928
    3. 'min' → logprob: -6.946392059326172
    4. ' ' → logprob: -7.946392059326172
    5. ' max' → logprob: -8.946392059326172
    6. ' min' → logprob: -13.071392059326172
    7. 'maximum' → logprob: -13.321392059326172
    8. '1' → logprob: -13.696392059326172
    9. 'minimum' → logprob: -14.196392059326172
    10. '```' → logprob: -14.696392059326172

Token 417: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3318989276885986
    2. '.' → logprob: -1.4568989276885986
    3. '       ' → logprob: -1.7068989276885986
    4. '
' → logprob: -1.8318989276885986
    5. ',' → logprob: -2.0818989276885986
    6. ',
' → logprob: -4.2068986892700195
    7. '        
' → logprob: -4.4568986892700195
    8. ' 
' → logprob: -5.0818986892700195
    9. '.
' → logprob: -6.7068986892700195
    10. '        ' → logprob: -7.3318986892700195

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017563045024871826
    2. ',' → logprob: -4.3925628662109375
    3. '0' → logprob: -6.1425628662109375
    4. '        
' → logprob: -6.8925628662109375
    5. ' 
' → logprob: -8.267562866210938
    6. '
' → logprob: -8.517562866210938
    7. ' ,' → logprob: -8.642562866210938
    8. ',
' → logprob: -8.642562866210938
    9. '        ' → logprob: -8.892562866210938
    10. '.' → logprob: -9.142562866210938

Token 419: ' #' (ID: 1069)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.8131053447723389
    2. '0' → logprob: -1.3131053447723389
    3. 'low' → logprob: -1.5631053447723389
    4. '       ' → logprob: -3.813105344772339
    5. ' left' → logprob: -4.313105583190918
    6. ' pump' → logprob: -4.688105583190918
    7. ' lo' → logprob: -4.688105583190918
    8. ' lb' → logprob: -4.688105583190918
    9. ' lower' → logprob: -5.563105583190918
    10. 'lower' → logprob: -6.188105583190918

Token 420: ' Upper' (ID: 45714)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.47175002098083496
    2. 'low' → logprob: -1.221750020980835
    3. ' lo' → logprob: -3.721750020980835
    4. '       ' → logprob: -3.846750020980835
    5. ' left' → logprob: -4.471750259399414
    6. 'lower' → logprob: -5.221750259399414
    7. ' lower' → logprob: -5.346750259399414
    8. 'lo' → logprob: -5.721750259399414
    9. '0' → logprob: -5.721750259399414
    10. 'left' → logprob: -5.846750259399414

Token 421: ' bound' (ID: 11608)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07001978904008865
    2. '=' → logprob: -2.8200197219848633
    3. '_bound' → logprob: -5.070019721984863
    4. ' bound' → logprob: -6.570019721984863
    5. 'bound' → logprob: -8.945019721984863
    6. '_rate' → logprob: -9.820019721984863
    7. ':' → logprob: -9.945019721984863
    8. '       ' → logprob: -10.695019721984863
    9. '    ' → logprob: -11.195019721984863
    10. '_' → logprob: -11.195019721984863

Token 422: ' could' (ID: 2023)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033680856227874756
    2. '=' → logprob: -3.4086809158325195
    3. ' is' → logprob: -11.15868091583252
    4. '       ' → logprob: -12.03368091583252
    5. ':' → logprob: -12.15868091583252
    6. '=float' → logprob: -12.90868091583252
    7. ' ' → logprob: -13.40868091583252
    8. '    ' → logprob: -13.78368091583252
    9. ',' → logprob: -13.78368091583252
    10. '        ' → logprob: -13.78368091583252

Token 423: ' be' (ID: 413)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8116475939750671
    2. '=' → logprob: -0.9366475939750671
    3. ' be' → logprob: -1.811647653579712
    4. 'be' → logprob: -8.186647415161133
    5. '<|end|>' → logprob: -9.186647415161133
    6. ' ' → logprob: -10.186647415161133
    7. ',' → logprob: -10.561647415161133
    8. '=max' → logprob: -10.811647415161133
    9. '=None' → logprob: -11.186647415161133
    10. '    ' → logprob: -11.186647415161133

Token 424: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4749390184879303
    2. ' max' → logprob: -0.9749389886856079
    3. 'sum' → logprob: -7.474938869476318
    4. ' sum' → logprob: -8.224939346313477
    5. '=max' → logprob: -11.599939346313477
    6. '	max' → logprob: -12.099939346313477
    7. '(max' → logprob: -13.099939346313477
    8. ' ' → logprob: -13.224939346313477
    9. '1' → logprob: -13.474939346313477
    10. 'float' → logprob: -13.724939346313477

Token 425: ' usage' (ID: 16622)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.5736871361732483
    2. '_rate' → logprob: -0.9486871361732483
    3. '(s' → logprob: -3.8236870765686035
    4. '(' → logprob: -4.4486870765686035
    5. '(max' → logprob: -5.8236870765686035
    6. 'usage' → logprob: -6.1986870765686035
    7. '([' → logprob: -6.1986870765686035
    8. '(interval' → logprob: -6.6986870765686035
    9. 'rate' → logprob: -6.8236870765686035
    10. '(
' → logprob: -7.0736870765686035

Token 426: ' rate' (ID: 6251)
  Prédit: '_rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.012682577595114708
    2. '_' → logprob: -4.7626824378967285
    3. ' rate' → logprob: -6.3876824378967285
    4. ' _' → logprob: -6.7626824378967285
    5. '   ' → logprob: -7.7626824378967285
    6. 'rate' → logprob: -8.012682914733887
    7. ' +' → logprob: -9.387682914733887
    8. '+' → logprob: -10.012682914733887
    9. ',' → logprob: -10.012682914733887
    10. ')' → logprob: -10.262682914733887

Token 427: ' in' (ID: 306)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7641788125038147
    2. ' =' → logprob: -1.63917875289917
    3. '+' → logprob: -2.26417875289917
    4. '=max' → logprob: -3.01417875289917
    5. '=' → logprob: -3.38917875289917
    6. ')' → logprob: -3.76417875289917
    7. ':' → logprob: -4.01417875289917
    8. ' or' → logprob: -4.01417875289917
    9. '       ' → logprob: -4.26417875289917
    10. ',' → logprob: -4.76417875289917

Token 428: ' the' (ID: 290)
  Prédit: 'schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'schedule' → logprob: -1.21882963180542
    2. ' intervals' → logprob: -1.84382963180542
    3. 'interval' → logprob: -1.84382963180542
    4. ' schedule' → logprob: -1.96882963180542
    5. '[s' → logprob: -2.71882963180542
    6. 'max' → logprob: -3.34382963180542
    7. ' max' → logprob: -3.34382963180542
    8. '(schedule' → logprob: -3.34382963180542
    9. '[max' → logprob: -3.59382963180542
    10. '[' → logprob: -3.84382963180542

Token 429: ' schedules' (ID: 50216)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.24740882217884064
    2. ' schedules' → logprob: -1.9974088668823242
    3. 'interval' → logprob: -3.247408866882324
    4. 's' → logprob: -4.247408866882324
    5. 'schedule' → logprob: -4.497408866882324
    6. ' schedule' → logprob: -4.497408866882324
    7. 'sched' → logprob: -6.372408866882324
    8. '[s' → logprob: -7.122408866882324
    9. 'chedules' → logprob: -7.122408866882324
    10. ' [' → logprob: -7.122408866882324

Token 430: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8872666358947754
    2. '=' → logprob: -1.5122666358947754
    3. ' =' → logprob: -1.5122666358947754
    4. ',' → logprob: -3.7622666358947754
    5. ' or' → logprob: -3.7622666358947754
    6. '=max' → logprob: -3.8872666358947754
    7. 'max' → logprob: -4.137266635894775
    8. ')' → logprob: -4.637266635894775
    9. ' max' → logprob: -4.762266635894775
    10. ':' → logprob: -4.762266635894775

Token 431: ' more' (ID: 945)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.18716463446617126
    2. 'max' → logprob: -2.437164545059204
    3. ' sum' → logprob: -2.812164545059204
    4. 'sum' → logprob: -4.562164783477783
    5. ' schedule' → logprob: -5.562164783477783
    6. '1' → logprob: -5.937164783477783
    7. 'schedule' → logprob: -6.437164783477783
    8. ' ' → logprob: -6.437164783477783
    9. ' L' → logprob: -7.312164783477783
    10. ' the' → logprob: -7.437164783477783

Token 432: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5657771229743958
    2. ',' → logprob: -1.440777063369751
    3. '=' → logprob: -2.690777063369751
    4. 'max' → logprob: -2.940777063369751
    5. ' max' → logprob: -3.315777063369751
    6. ' =' → logprob: -4.31577730178833
    7. '=max' → logprob: -4.44077730178833
    8. ':' → logprob: -5.19077730178833
    9. '.' → logprob: -6.81577730178833
    10. '(max' → logprob: -7.06577730178833

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036017242819070816
    2. ' max' → logprob: -4.161017417907715
    3. 'max' → logprob: -4.286017417907715
    4. '        
' → logprob: -6.161017417907715
    5. ',' → logprob: -6.911017417907715
    6. '
' → logprob: -7.536017417907715
    7. 'upper' → logprob: -7.536017417907715
    8. ' upper' → logprob: -7.786017417907715
    9. ' 
' → logprob: -8.286017417907715
    10. '0' → logprob: -8.286017417907715

Token 434: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.12823449075222015
    2. ' max' → logprob: -3.003234386444092
    3. 'low' → logprob: -3.378234386444092
    4. '       ' → logprob: -3.878234386444092
    5. 'upper' → logprob: -4.628234386444092
    6. 'high' → logprob: -6.378234386444092
    7. ' low' → logprob: -6.628234386444092
    8. 'lower' → logprob: -7.253234386444092
    9. 'left' → logprob: -7.753234386444092
    10. 'pump' → logprob: -8.25323486328125

Token 435: '_usage' (ID: 77753)
  Prédit: '_rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.12694543600082397
    2. '_usage' → logprob: -2.1269454956054688
    3. '_use' → logprob: -11.376945495605469
    4. '_speed' → logprob: -13.626945495605469
    5. '_' → logprob: -13.751945495605469
    6. 'rate' → logprob: -13.876945495605469
    7. 'usage' → logprob: -14.001945495605469
    8. '_used' → logprob: -14.876945495605469
    9. '_schedule' → logprob: -15.251945495605469
    10. '(' → logprob: -15.751945495605469

Token 436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42473575472831726
    2. '_rate' → logprob: -1.1747357845306396
    3. '=' → logprob: -3.2997357845306396
    4. '=max' → logprob: -9.174736022949219
    5. '   ' → logprob: -9.424736022949219
    6. 'rate' → logprob: -9.924736022949219
    7. '=_' → logprob: -11.549736022949219
    8. '  ' → logprob: -11.549736022949219
    9. ' ' → logprob: -12.924736022949219
    10. '_rates' → logprob: -13.424736022949219

Token 437: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.04872452840209007
    2. 'max' → logprob: -3.048724412918091
    3. '0' → logprob: -8.923724174499512
    4. ' ' → logprob: -12.798724174499512
    5. '	max' → logprob: -14.548724174499512
    6. '(max' → logprob: -14.673724174499512
    7. '   ' → logprob: -16.548725128173828
    8. '=max' → logprob: -16.923725128173828
    9. ' maximum' → logprob: -17.548725128173828
    10. '_max' → logprob: -17.673725128173828

Token 438: '((' (ID: 2054)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07156123220920563
    2. '((' → logprob: -2.696561336517334
    3. '([' → logprob: -6.946561336517334
    4. '(interval' → logprob: -7.821561336517334
    5. '(' → logprob: -9.321560859680176
    6. '(
' → logprob: -9.446560859680176
    7. '(schedule' → logprob: -9.571560859680176
    8. '(max' → logprob: -12.196560859680176
    9. '([(' → logprob: -12.696560859680176
    10. '(abs' → logprob: -12.696560859680176

Token 439: 'interval' (ID: 37558)
  Prédit: 'sched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sched' → logprob: -0.41483166813850403
    2. 'interval' → logprob: -1.2898316383361816
    3. 's' → logprob: -2.9148316383361816
    4. '(s' → logprob: -6.289831638336182
    5. '(interval' → logprob: -6.289831638336182
    6. 'int' → logprob: -6.539831638336182
    7. 'max' → logprob: -6.664831638336182
    8. 'i' → logprob: -7.039831638336182
    9. ' sched' → logprob: -7.664831638336182
    10. 'schedule' → logprob: -7.789831638336182

Token 440: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024409317411482334
    2. '.' → logprob: -6.127440929412842
    3. '_interval' → logprob: -9.75244140625
    4. 'interval' → logprob: -9.87744140625
    5. '.end' → logprob: -10.12744140625
    6. 'usage' → logprob: -10.87744140625
    7. '.interval' → logprob: -11.12744140625
    8. '_rate' → logprob: -11.25244140625
    9. ' for' → logprob: -11.25244140625
    10. 'for' → logprob: -11.87744140625

Token 441: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001637300301808864
    2. '[' → logprob: -9.375164031982422
    3. '1' → logprob: -10.000164031982422
    4. ' ' → logprob: -11.125164031982422
    5. '```' → logprob: -12.562664031982422
    6. '   ' → logprob: -12.687664031982422
    7. '][' → logprob: -13.500164031982422
    8. '3' → logprob: -13.750164031982422
    9. '=' → logprob: -13.937664031982422
    10. '(' → logprob: -14.187664031982422

Token 442: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0031364820897579193
    2. 'for' → logprob: -5.87813663482666
    3. ' ' → logprob: -8.12813663482666
    4. ' if' → logprob: -10.37813663482666
    5. ')' → logprob: -12.87813663482666
    6. '   ' → logprob: -14.12813663482666
    7. 'if' → logprob: -14.37813663482666
    8. '  ' → logprob: -14.50313663482666
    9. '	for' → logprob: -14.75313663482666
    10. '    ' → logprob: -15.75313663482666

Token 443: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01675732433795929
    2. 'for' → logprob: -4.141757488250732
    3. ' if' → logprob: -7.891757488250732
    4. ' ' → logprob: -8.766757011413574
    5. ' or' → logprob: -9.391757011413574
    6. ')' → logprob: -9.391757011413574
    7. 'if' → logprob: -11.266757011413574
    8. '   ' → logprob: -12.516757011413574
    9. ' )' → logprob: -12.766757011413574
    10. ',' → logprob: -13.141757011413574

Token 444: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.28196534514427185
    2. ' interval' → logprob: -1.4069653749465942
    3. ' intervals' → logprob: -7.281965255737305
    4. '(interval' → logprob: -9.281965255737305
    5. ' schedule' → logprob: -10.906965255737305
    6. ' intervalo' → logprob: -12.406965255737305
    7. ' ' → logprob: -12.531965255737305
    8. 'schedule' → logprob: -13.281965255737305
    9. 'inter' → logprob: -13.406965255737305
    10. ' interv' → logprob: -13.656965255737305

Token 445: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004101315978914499
    2. 'in' → logprob: -5.504101276397705
    3. ' ' → logprob: -11.629101753234863
    4. ')' → logprob: -12.379101753234863
    5. 'interval' → logprob: -12.504101753234863
    6. '),' → logprob: -13.504101753234863
    7. '<|end|>' → logprob: -13.504101753234863
    8. 's' → logprob: -13.879101753234863
    9. ',' → logprob: -14.629101753234863
    10. '	in' → logprob: -14.879101753234863

Token 446: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2519509494304657
    2. ' intervals' → logprob: -1.501950979232788
    3. ' interval' → logprob: -11.876951217651367
    4. 'schedule' → logprob: -12.126951217651367
    5. '(interval' → logprob: -12.751951217651367
    6. ' schedule' → logprob: -13.126951217651367
    7. 's' → logprob: -13.251951217651367
    8. ' schedules' → logprob: -14.376951217651367
    9. ' ' → logprob: -14.376951217651367
    10. ')' → logprob: -14.626951217651367

Token 447: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.07473877817392349
    2. ' if' → logprob: -3.0747387409210205
    3. ' ),' → logprob: -3.9497387409210205
    4. ',' → logprob: -5.1997389793396
    5. ')' → logprob: -7.4497389793396
    6. ' ,' → logprob: -8.574738502502441
    7. ' or' → logprob: -8.699738502502441
    8. 'if' → logprob: -10.324738502502441
    9. ' )' → logprob: -10.449738502502441
    10. '       ' → logprob: -11.324738502502441

Token 448: ' default' (ID: 2787)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.014175265096127987
    2. ' default' → logprob: -4.2641754150390625
    3. 'key' → logprob: -12.514175415039062
    4. '0' → logprob: -13.264175415039062
    5. ' key' → logprob: -13.389175415039062
    6. 'initial' → logprob: -13.514175415039062
    7. '   ' → logprob: -13.764175415039062
    8. 'def' → logprob: -14.139175415039062
    9. ' ' → logprob: -14.639175415039062
    10. '(default' → logprob: -14.639175415039062

Token 449: '=' (ID: 28)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015134313143789768
    2. ' ' → logprob: -6.751513481140137
    3. ')' → logprob: -8.501513481140137
    4. '=' → logprob: -9.376513481140137
    5. ',' → logprob: -9.876513481140137
    6. '),' → logprob: -13.501513481140137
    7. '   ' → logprob: -13.876513481140137
    8. '  ' → logprob: -15.126513481140137
    9. '(' → logprob: -15.251513481140137
    10. '1' → logprob: -15.251513481140137

Token 450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '1' → logprob: -16.5000057220459
    4. ')' → logprob: -18.2500057220459
    5. '   ' → logprob: -18.6250057220459
    6. '```' → logprob: -19.2500057220459
    7. 'sys' → logprob: -19.5000057220459
    8. '۰' → logprob: -19.7500057220459
    9. '  ' → logprob: -20.6250057220459
    10. '
' → logprob: -20.6250057220459

Token 451: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03854653611779213
    2. ' )' → logprob: -3.413546562194824
    3. ',' → logprob: -5.663546562194824
    4. ')+' → logprob: -6.913546562194824
    5. ')
' → logprob: -9.038546562194824
    6. ' ,' → logprob: -9.163546562194824
    7. ' +' → logprob: -9.913546562194824
    8. '+' → logprob: -10.038546562194824
    9. ' )
' → logprob: -10.413546562194824
    10. ' if' → logprob: -10.788546562194824

Token 452: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9067258834838867
    2. '       ' → logprob: -1.7817258834838867
    3. ' +' → logprob: -1.7817258834838867
    4. ' 
' → logprob: -2.4067258834838867
    5. ' if' → logprob: -3.0317258834838867
    6. '+' → logprob: -3.2817258834838867
    7. ' or' → logprob: -3.4067258834838867
    8. '0' → logprob: -4.156725883483887
    9. ' *' → logprob: -4.406725883483887
    10. '        
' → logprob: -4.656725883483887

Token 453: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.3407761752605438
    2. 'left' → logprob: -1.3407762050628662
    3. 'right' → logprob: -4.590775966644287
    4. 'high' → logprob: -5.090775966644287
    5. 'lo' → logprob: -5.465775966644287
    6. ' low' → logprob: -5.840775966644287
    7. ' left' → logprob: -5.965775966644287
    8. ' lo' → logprob: -8.090776443481445
    9. '       ' → logprob: -8.340776443481445
    10. 'lower' → logprob: -8.590776443481445

Token 454: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42454662919044495
    2. '=' → logprob: -1.1745465993881226
    3. ',' → logprob: -3.299546718597412
    4. ' ,' → logprob: -9.674546241760254
    5. ' ' → logprob: -11.799546241760254
    6. ':' → logprob: -12.674546241760254
    7. '0' → logprob: -14.299546241760254
    8. '.' → logprob: -15.674546241760254
    9. ' ' → logprob: -15.799546241760254
    10. '  ' → logprob: -16.04954719543457

Token 455: ' high' (ID: 1932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6731216311454773
    2. ' max' → logprob: -1.048121690750122
    3. 'high' → logprob: -2.548121690750122
    4. ' high' → logprob: -2.798121690750122
    5. '=max' → logprob: -9.423121452331543
    6. '=' → logprob: -11.298121452331543
    7. ' ' → logprob: -11.548121452331543
    8. 'sum' → logprob: -11.923121452331543
    9. '(max' → logprob: -12.423121452331543
    10. ' =' → logprob: -12.548121452331543

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197384372353554
    2. '=' → logprob: -2.811973810195923
    3. ',' → logprob: -12.061973571777344
    4. ' ' → logprob: -14.936973571777344
    5. ' ,' → logprob: -17.061973571777344
    6. ' ' → logprob: -17.936973571777344
    7. '=int' → logprob: -17.936973571777344
    8. ':' → logprob: -18.811973571777344
    9. '＝' → logprob: -19.186973571777344
    10. '0' → logprob: -19.311973571777344

Token 457: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21497046947479248
    2. 'max' → logprob: -1.8399704694747925
    3. ' max' → logprob: -3.714970588684082
    4. ' ' → logprob: -4.589970588684082
    5. 'float' → logprob: -9.589970588684082
    6. '(max' → logprob: -11.777470588684082
    7. ' float' → logprob: -11.964970588684082
    8. 'min' → logprob: -12.339970588684082
    9. '	max' → logprob: -12.964970588684082
    10. '   ' → logprob: -13.027470588684082

Token 458: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25295108556747437
    2. '0' → logprob: -1.5029511451721191
    3. 'float' → logprob: -7.252951145172119
    4. ' max' → logprob: -8.252950668334961
    5. ' ' → logprob: -10.627950668334961
    6. '(max' → logprob: -11.502950668334961
    7. 'min' → logprob: -11.877950668334961
    8. 'low' → logprob: -13.252950668334961
    9. '[max' → logprob: -13.377950668334961
    10. '1' → logprob: -13.502950668334961

Token 459: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04342811554670334
    2. '.' → logprob: -3.1684281826019287
    3. ' ,' → logprob: -8.043428421020508
    4. ',max' → logprob: -10.293428421020508
    5. 'max' → logprob: -10.543428421020508
    6. 'if' → logprob: -10.668428421020508
    7. '.,' → logprob: -12.168428421020508
    8. 'float' → logprob: -12.293428421020508
    9. ' if' → logprob: -12.418428421020508
    10. ',float' → logprob: -12.918428421020508

Token 460: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39458340406417847
    2. '1' → logprob: -1.3945834636688232
    3. 'max' → logprob: -2.8945834636688232
    4. 'double' → logprob: -4.644583225250244
    5. '5' → logprob: -5.269583225250244
    6. 'float' → logprob: -5.394583225250244
    7. '
' → logprob: -7.144583225250244
    8. '000' → logprob: -7.644583225250244
    9. '01' → logprob: -7.644583225250244
    10. ' max' → logprob: -8.144583702087402

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010450744302943349
    2. ' ,' → logprob: -7.126045227050781
    3. ',max' → logprob: -8.876045227050781
    4. 'max' → logprob: -9.626045227050781
    5. ' max' → logprob: -11.626045227050781
    6. 'if' → logprob: -12.001045227050781
    7. '
' → logprob: -12.251045227050781
    8. ' if' → logprob: -12.501045227050781
    9. ' or' → logprob: -12.751045227050781
    10. 'or' → logprob: -12.876045227050781

Token 462: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008959622122347355
    2. 'float' → logprob: -4.758959770202637
    3. ' max' → logprob: -8.258959770202637
    4. 'high' → logprob: -9.633959770202637
    5. '1' → logprob: -11.633959770202637
    6. 'sum' → logprob: -12.383959770202637
    7. '(max' → logprob: -12.758959770202637
    8. ' float' → logprob: -13.383959770202637
    9. '10' → logprob: -13.883959770202637
    10. '2' → logprob: -13.883959770202637

Token 463: '_usage' (ID: 77753)
  Prédit: '_usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.0005084725562483072
    2. '(max' → logprob: -7.8755083084106445
    3. '(' → logprob: -9.000508308410645
    4. 'usage' → logprob: -13.500508308410645
    5. 'Usage' → logprob: -14.375508308410645
    6. '((' → logprob: -14.500508308410645
    7. '(_' → logprob: -14.750508308410645
    8. '(
' → logprob: -14.750508308410645
    9. '_USAGE' → logprob: -14.875508308410645
    10. '_use' → logprob: -15.000508308410645

Token 464: '

' (ID: 279)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2363787442445755
    2. ' +' → logprob: -2.7363786697387695
    3. '*' → logprob: -2.9863786697387695
    4. '+' → logprob: -3.2363786697387695
    5. ' or' → logprob: -3.2363786697387695
    6. 'if' → logprob: -4.8613786697387695
    7. ' *' → logprob: -4.8613786697387695
    8. 'or' → logprob: -6.9863786697387695
    9. ' ' → logprob: -8.48637866973877
    10. 'max' → logprob: -11.98637866973877

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9094753265380859
    2. ' if' → logprob: -1.159475326538086
    3. '
' → logprob: -2.409475326538086
    4. 'if' → logprob: -2.659475326538086
    5. 'while' → logprob: -3.159475326538086
    6. ' while' → logprob: -3.409475326538086
    7. '+' → logprob: -3.784475326538086
    8. ' +' → logprob: -3.909475326538086
    9. '   ' → logprob: -6.034475326538086
    10. '        
' → logprob: -6.909475326538086

Token 466: ' def' (ID: 1056)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48730581998825073
    2. 'while' → logprob: -1.1123058795928955
    3. '       ' → logprob: -3.1123058795928955
    4. ' if' → logprob: -5.237305641174316
    5. ' while' → logprob: -6.112305641174316
    6. '
' → logprob: -6.487305641174316
    7. 'epsilon' → logprob: -6.737305641174316
    8. 'for' → logprob: -7.237305641174316
    9. 'eps' → logprob: -7.612305641174316
    10. '#' → logprob: -7.737305641174316

Token 467: ' check' (ID: 2371)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.5876205563545227
    2. ' feasible' → logprob: -1.087620496749878
    3. 'can' → logprob: -2.462620496749878
    4. ' is' → logprob: -5.337620735168457
    5. 'fe' → logprob: -5.462620735168457
    6. ' check' → logprob: -6.087620735168457
    7. ' sufficient' → logprob: -6.337620735168457
    8. ' possible' → logprob: -6.587620735168457
    9. ' enough' → logprob: -6.712620735168457
    10. 'check' → logprob: -6.712620735168457

Token 468: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.39661720395088196
    2. '(rate' → logprob: -1.1466171741485596
    3. '(mid' → logprob: -5.146617412567139
    4. '(speed' → logprob: -5.771617412567139
    5. '(' → logprob: -7.896617412567139
    6. '(flow' → logprob: -8.52161693572998
    7. '(r' → logprob: -9.39661693572998
    8. '(limit' → logprob: -10.77161693572998
    9. '(m' → logprob: -11.27161693572998
    10. '(candidate' → logprob: -12.02161693572998

Token 469: 'ump' (ID: 2643)
  Prédit: 'ump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ump' → logprob: -0.004366032779216766
    2. '):' → logprob: -6.004365921020508
    3. '):
' → logprob: -7.504365921020508
    4. ')' → logprob: -7.629365921020508
    5. '):

' → logprob: -7.879365921020508
    6. ':' → logprob: -8.879365921020508
    7. 'rate' → logprob: -9.629365921020508
    8. '_rate' → logprob: -10.129365921020508
    9. 'umps' → logprob: -10.254365921020508
    10. 'mp' → logprob: -10.254365921020508

Token 470: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.2812952995300293
    2. '):' → logprob: -1.7812952995300293
    3. '_speed' → logprob: -2.9062952995300293
    4. ':' → logprob: -3.9062952995300293
    5. '):
' → logprob: -6.281295299530029
    6. ')' → logprob: -10.906295776367188
    7. ' ):' → logprob: -11.031295776367188
    8. 'speed' → logprob: -11.406295776367188
    9. '_' → logprob: -11.531295776367188
    10. '):

' → logprob: -11.906295776367188

Token 471: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3917260766029358
    2. ':' → logprob: -1.266726016998291
    3. ')' → logprob: -3.266726016998291
    4. '):
' → logprob: -6.016726016998291
    5. ' ):' → logprob: -6.516726016998291
    6. ' )' → logprob: -8.89172649383545
    7. '):
' → logprob: -9.26672649383545
    8. '):

' → logprob: -11.01672649383545
    9. ' :' → logprob: -11.26672649383545
    10. ' ):
' → logprob: -11.64172649383545

Token 472: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0067526670172810555
    2. ' float' → logprob: -5.0067524909973145
    3. ')' → logprob: -10.256752967834473
    4. 'flo' → logprob: -14.131752967834473
    5. '	float' → logprob: -14.381752967834473
    6. '=float' → logprob: -15.756752967834473
    7. 'loat' → logprob: -16.006752014160156
    8. ',float' → logprob: -16.131752014160156
    9. '   ' → logprob: -16.256752014160156
    10. '(float' → logprob: -16.381752014160156

Token 473: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009864849271252751
    2. '):' → logprob: -7.000986576080322
    3. ' )' → logprob: -10.000986099243164
    4. '):
' → logprob: -10.750986099243164
    5. '):
' → logprob: -12.750986099243164
    6. '   ' → logprob: -12.875986099243164
    7. ')->' → logprob: -13.375986099243164
    8. '):

' → logprob: -15.125986099243164
    9. ' ):' → logprob: -15.625986099243164
    10. ':' → logprob: -15.875986099243164

Token 474: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012900899164378643
    2. ')' → logprob: -4.7629008293151855
    3. '->' → logprob: -6.7629008293151855
    4. ' ->' → logprob: -6.7629008293151855
    5. ':
' → logprob: -7.1379008293151855
    6. '):' → logprob: -7.5129008293151855
    7. '():' → logprob: -8.262901306152344
    8. ')->' → logprob: -9.137901306152344
    9. '()' → logprob: -9.637901306152344
    10. '():
' → logprob: -9.637901306152344

Token 475: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0003408263437449932
    2. ' bool' → logprob: -8.000340461730957
    3. 'float' → logprob: -12.250340461730957
    4. '	bool' → logprob: -15.000340461730957
    5. ' ' → logprob: -16.500341415405273
    6. '   ' → logprob: -16.750341415405273
    7. '<bool' → logprob: -17.375341415405273
    8. 'None' → logprob: -17.875341415405273
    9. 'int' → logprob: -18.000341415405273
    10. 'True' → logprob: -18.250341415405273

Token 476: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004815292079001665
    2. ':
' → logprob: -5.379815101623535
    3. '       ' → logprob: -9.754815101623535
    4. '<|end|>' → logprob: -10.129815101623535
    5. '):' → logprob: -10.254815101623535
    6. ',' → logprob: -10.379815101623535
    7. ' :' → logprob: -11.629815101623535
    8. '):
' → logprob: -12.129815101623535
    9. ')' → logprob: -12.504815101623535
    10. ':

' → logprob: -13.004815101623535

Token 477: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017883480759337544
    2. '           ' → logprob: -7.251788139343262
    3. '        
' → logprob: -7.876788139343262
    4. '        ' → logprob: -8.376788139343262
    5. '   ' → logprob: -8.501788139343262
    6. ' ' → logprob: -9.376788139343262
    7. '    ' → logprob: -10.751788139343262
    8. '\' → logprob: -10.751788139343262
    9. '<|end|>' → logprob: -10.751788139343262
    10. '\n' → logprob: -11.001788139343262

Token 478: ' #' (ID: 1069)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.8427770733833313
    2. ' level' → logprob: -1.2177770137786865
    3. 'water' → logprob: -1.9677770137786865
    4. ' water' → logprob: -2.5927770137786865
    5. 'tank' → logprob: -3.5927770137786865
    6. ' tank' → logprob: -4.342777252197266
    7. ' current' → logprob: -5.217777252197266
    8. '           ' → logprob: -5.342777252197266
    9. 'current' → logprob: -5.467777252197266
    10. '   ' → logprob: -6.967777252197266

Token 479: ' Returns' (ID: 9609)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.5382264852523804
    2. 'water' → logprob: -1.4132264852523804
    3. 'tank' → logprob: -2.41322660446167
    4. ' level' → logprob: -3.53822660446167
    5. ' water' → logprob: -3.91322660446167
    6. 'current' → logprob: -4.16322660446167
    7. ' tank' → logprob: -4.53822660446167
    8. ' current' → logprob: -6.16322660446167
    9. '           ' → logprob: -6.53822660446167
    10. 'volume' → logprob: -6.66322660446167

Token 480: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07889540493488312
    2. ' True' → logprob: -2.578895330429077
    3. '(True' → logprob: -13.078895568847656
    4. 'current' → logprob: -13.328895568847656
    5. '   ' → logprob: -14.328895568847656
    6. 'False' → logprob: -14.453895568847656
    7. 'true' → logprob: -15.203895568847656
    8. '=True' → logprob: -15.453895568847656
    9. 'whether' → logprob: -16.703895568847656
    10. ' whether' → logprob: -16.953895568847656

Token 481: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02044203318655491
    2. ' True' → logprob: -4.395442008972168
    3. 'if' → logprob: -5.520442008972168
    4. 'True' → logprob: -6.270442008972168
    5. '           ' → logprob: -6.395442008972168
    6. ' water' → logprob: -9.520442008972168
    7. ' for' → logprob: -10.020442008972168
    8. ' ' → logprob: -10.270442008972168
    9. '               ' → logprob: -10.770442008972168
    10. ' iff' → logprob: -10.770442008972168

Token 482: ' pump' (ID: 17128)
  Prédit: 'tank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tank' → logprob: -0.5605334639549255
    2. ' the' → logprob: -1.9355335235595703
    3. 'pump' → logprob: -2.4355335235595703
    4. 'the' → logprob: -2.4355335235595703
    5. ' tank' → logprob: -2.8105335235595703
    6. ' pump' → logprob: -3.8105335235595703
    7. 'water' → logprob: -5.06053352355957
    8. ' for' → logprob: -5.31053352355957
    9. ' we' → logprob: -5.81053352355957
    10. ' water' → logprob: -5.93553352355957

Token 483: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.004270834848284721
    2. ' can' → logprob: -6.004271030426025
    3. ' rate' → logprob: -7.254271030426025
    4. 'rate' → logprob: -7.379271030426025
    5. 'can' → logprob: -8.379270553588867
    6. '_speed' → logprob: -9.129270553588867
    7. '_flow' → logprob: -11.004270553588867
    8. '_level' → logprob: -11.004270553588867
    9. ' ' → logprob: -11.379270553588867
    10. '_can' → logprob: -11.629270553588867

Token 484: ' keeps' (ID: 18295)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6020811796188354
    2. ' can' → logprob: -1.1020811796188354
    3. 'can' → logprob: -2.977081298828125
    4. 'is' → logprob: -3.352081298828125
    5. ' suff' → logprob: -4.102081298828125
    6. ' keeps' → logprob: -4.852081298828125
    7. 's' → logprob: -5.727081298828125
    8. '>=' → logprob: -6.102081298828125
    9. ' ensures' → logprob: -6.852081298828125
    10. 'maint' → logprob: -7.352081298828125

Token 485: ' tank' (ID: 16109)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6560764312744141
    2. 'tank' → logprob: -1.156076431274414
    3. 'water' → logprob: -2.281076431274414
    4. ' the' → logprob: -3.156076431274414
    5. ' water' → logprob: -4.406076431274414
    6. ' tank' → logprob: -4.906076431274414
    7. 'level' → logprob: -6.406076431274414
    8. 'levels' → logprob: -9.781076431274414
    9. ' level' → logprob: -9.906076431274414
    10. 't' → logprob: -10.031076431274414

Token 486: ' never' (ID: 3779)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.3086264729499817
    2. ' level' → logprob: -1.558626413345337
    3. 'water' → logprob: -4.308626651763916
    4. 'from' → logprob: -4.808626651763916
    5. ' water' → logprob: -5.058626651763916
    6. ' above' → logprob: -5.183626651763916
    7. ' from' → logprob: -5.433626651763916
    8. '_level' → logprob: -5.933626651763916
    9. 'above' → logprob: -5.933626651763916
    10. ' non' → logprob: -6.058626651763916

Token 487: ' empty' (ID: 8213)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.48750412464141846
    2. 'empty' → logprob: -1.4875041246414185
    3. 'below' → logprob: -1.9875041246414185
    4. ' below' → logprob: -4.862504005432129
    5. '<' → logprob: -5.362504005432129
    6. 'under' → logprob: -5.737504005432129
    7. ' negative' → logprob: -5.862504005432129
    8. ' empty' → logprob: -6.112504005432129
    9. '-negative' → logprob: -8.237504005432129
    10. 'de' → logprob: -8.237504005432129

Token 488: ' during' (ID: 3354)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19699062407016754
    2. '.' → logprob: -2.696990728378296
    3. ' or' → logprob: -3.071990728378296
    4. ',' → logprob: -3.196990728378296
    5. ' and' → logprob: -4.446990489959717
    6. ' during' → logprob: -5.696990489959717
    7. '               ' → logprob: -6.196990489959717
    8. '       ' → logprob: -6.821990489959717
    9. ' (' → logprob: -6.946990489959717
    10. ')' → logprob: -7.446990489959717

Token 489: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1983126699924469
    2. 'all' → logprob: -2.698312759399414
    3. ' the' → logprob: -3.073312759399414
    4. 'simulation' → logprob: -3.823312759399414
    5. 'interval' → logprob: -4.198312759399414
    6. ' all' → logprob: -4.198312759399414
    7. ' simulation' → logprob: -5.573312759399414
    8. ' intervals' → logprob: -5.698312759399414
    9. 'day' → logprob: -6.948312759399414
    10. 's' → logprob: -7.073312759399414

Token 490: ' day' (ID: 2163)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.5684079527854919
    2. ' day' → logprob: -1.3184080123901367
    3. 'interval' → logprob: -2.5684080123901367
    4. 'simulation' → logprob: -3.9434080123901367
    5. ' intervals' → logprob: -4.318408012390137
    6. ' simulation' → logprob: -4.693408012390137
    7. 'schedule' → logprob: -4.818408012390137
    8. 'daily' → logprob: -4.943408012390137
    9. 'ent' → logprob: -5.318408012390137
    10. ' entire' → logprob: -5.693408012390137

Token 491: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5227087736129761
    2. ',' → logprob: -1.147708773612976
    3. '.' → logprob: -3.1477088928222656
    4. '       ' → logprob: -3.7727088928222656
    5. '<|end|>' → logprob: -5.022708892822266
    6. ':' → logprob: -5.147708892822266
    7. ')' → logprob: -6.147708892822266
    8. ' and' → logprob: -6.772708892822266
    9. ' at' → logprob: -7.147708892822266
    10. '        ' → logprob: -7.522708892822266

Token 492: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07858183234930038
    2. ',' → logprob: -2.8285818099975586
    3. '       ' → logprob: -4.453581809997559
    4. '<|end|>' → logprob: -6.328581809997559
    5. ')' → logprob: -7.453581809997559
    6. '.' → logprob: -7.828581809997559
    7. '   ' → logprob: -8.078581809997559
    8. '               ' → logprob: -8.203581809997559
    9. ' at' → logprob: -8.578581809997559
    10. '          ' → logprob: -8.828581809997559

Token 493: ' tank' (ID: 16109)
  Prédit: ' level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' level' → logprob: -0.8447955846786499
    2. ' water' → logprob: -1.34479558467865
    3. 'level' → logprob: -1.84479558467865
    4. 'water' → logprob: -2.8447957038879395
    5. ' tank' → logprob: -3.4697957038879395
    6. ' current' → logprob: -3.5947957038879395
    7. '           ' → logprob: -4.3447957038879395
    8. 'tank' (adapté à ' tank') → logprob: -4.5947957038879395
    9. 'current' → logprob: -5.3447957038879395
    10. '   ' → logprob: -6.0947957038879395

Token 494: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.01521390862762928
    2. ' =' → logprob: -4.390213966369629
    3. '=' → logprob: -6.015213966369629
    4. 'level' → logprob: -9.140213966369629
    5. '_lvl' → logprob: -10.515213966369629
    6. '_water' → logprob: -10.765213966369629
    7. '   ' → logprob: -11.015213966369629
    8. 'Level' → logprob: -11.015213966369629
    9. '_' → logprob: -11.390213966369629
    10. '_levels' → logprob: -11.890213966369629

Token 495: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759687423706055
    2. ' =' → logprob: -0.8259687423706055
    3. ',' → logprob: -10.575968742370605
    4. ' ' → logprob: -13.325968742370605
    5. '=float' → logprob: -14.325968742370605
    6. ')' → logprob: -14.575968742370605
    7. ':' → logprob: -14.825968742370605
    8. '       ' → logprob: -16.075969696044922
    9. '<|end|>' → logprob: -16.075969696044922
    10. '   ' → logprob: -16.450969696044922

Token 496: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.01739787869155407
    2. ' L' → logprob: -4.392397880554199
    3. 'float' → logprob: -5.767397880554199
    4. '0' → logprob: -6.517397880554199
    5. ' float' → logprob: -8.6423978805542
    6. 'pump' → logprob: -9.7673978805542
    7. ' ' → logprob: -11.0173978805542
    8. 'high' → logprob: -12.2673978805542
    9. '	L' → logprob: -13.0173978805542
    10. 'self' → logprob: -13.2673978805542

Token 497: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04607956111431122
    2. '
' → logprob: -3.546079635620117
    3. '<|end|>' → logprob: -5.421079635620117
    4. '            
' → logprob: -6.046079635620117
    5. '       ' → logprob: -6.421079635620117
    6. '\n' → logprob: -6.546079635620117
    7. ',' → logprob: -7.046079635620117
    8. '  
' → logprob: -7.046079635620117
    9. '   ' → logprob: -7.171079635620117
    10. ' 
' → logprob: -7.296079635620117

Token 499: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010216512717306614
    2. ' for' → logprob: -4.63521671295166
    3. '           ' → logprob: -8.38521671295166
    4. 'current' → logprob: -8.63521671295166
    5. 'time' → logprob: -10.26021671295166
    6. 'prev' → logprob: -12.26021671295166
    7. 'curr' → logprob: -12.63521671295166
    8. 'last' → logprob: -12.63521671295166
    9. 'tank' → logprob: -13.38521671295166
    10. 'start' → logprob: -13.63521671295166

Token 500: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.10016007721424103
    2. ' start' → logprob: -2.8501601219177246
    3. '(start' → logprob: -3.4751601219177246
    4. ' (' → logprob: -5.350160121917725
    5. 'interval' → logprob: -6.475160121917725
    6. '(interval' → logprob: -10.100159645080566
    7. ' interval' → logprob: -10.225159645080566
    8. '   ' → logprob: -10.350159645080566
    9. '_start' → logprob: -10.725159645080566
    10. '(_,' → logprob: -11.225159645080566

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010306637705070898
    2. '<|end|>' → logprob: -9.875102996826172
    3. ' ,' → logprob: -10.375102996826172
    4. ',end' → logprob: -11.375102996826172
    5. '<|end|>' → logprob: -13.125102996826172
    6. '_,' → logprob: -13.500102996826172
    7. ',int' → logprob: -13.750102996826172
    8. ',start' → logprob: -14.000102996826172
    9. ',next' → logprob: -14.000102996826172
    10. ',length' → logprob: -14.875102996826172

Token 502: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.16022492945194244
    2. ' end' → logprob: -1.9102249145507812
    3. ',end' → logprob: -14.660224914550781
    4. '_end' → logprob: -15.785224914550781
    5. '	end' → logprob: -15.910224914550781
    6. ',' → logprob: -16.41022491455078
    7. '=end' → logprob: -16.91022491455078
    8. ' ' → logprob: -17.41022491455078
    9. '(end' → logprob: -17.66022491455078
    10. '   ' → logprob: -18.03522491455078

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8074162653647363e-05
    2. ' ,' → logprob: -11.000018119812012
    3. '<|end|>' → logprob: -15.000018119812012
    4. ',user' → logprob: -15.125018119812012
    5. ',int' → logprob: -16.375017166137695
    6. ',end' → logprob: -16.500017166137695
    7. ' in' → logprob: -16.500017166137695
    8. '_,' → logprob: -17.125017166137695
    9. '<|end|>' → logprob: -17.125017166137695
    10. '‌,' → logprob: -17.250017166137695

Token 504: ' rate' (ID: 6251)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rate' → logprob: -0.8748911023139954
    2. 'usage' → logprob: -1.2498910427093506
    3. ' usage' → logprob: -1.8748910427093506
    4. ' rate' → logprob: -2.3748910427093506
    5. ' net' → logprob: -3.1248910427093506
    6. 'net' → logprob: -5.12489128112793
    7. 'interval' → logprob: -9.62489128112793
    8. ' ' → logprob: -10.62489128112793
    9. 'use' → logprob: -10.62489128112793
    10. 'ur' → logprob: -10.99989128112793

Token 505: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007614439819008112
    2. 'in' → logprob: -4.882614612579346
    3. ' ' → logprob: -12.382614135742188
    4. '	in' → logprob: -13.382614135742188
    5. ')' → logprob: -14.757614135742188
    6. '  ' → logprob: -15.382614135742188
    7. 'inthe' → logprob: -15.507614135742188
    8. 's' → logprob: -15.757614135742188
    9. '_in' → logprob: -15.757614135742188
    10. '   ' → logprob: -15.882614135742188

Token 506: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.002475777640938759
    2. ' intervals' → logprob: -6.002475738525391
    3. '(interval' → logprob: -15.62747573852539
    4. '   ' → logprob: -18.62747573852539
    5. 'Intervals' → logprob: -19.12747573852539
    6. ' ' → logprob: -19.50247573852539
    7. ' interval' → logprob: -19.50247573852539
    8. '           ' → logprob: -20.12747573852539
    9. 'int' → logprob: -20.37747573852539
    10. 'iterations' → logprob: -20.75247573852539

Token 507: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04438653960824013
    2. ':
' → logprob: -3.169386625289917
    3. '               ' → logprob: -6.919386386871338
    4. ',' → logprob: -8.294386863708496
    5. '           ' → logprob: -9.544386863708496
    6. '):
' → logprob: -10.169386863708496
    7. '<|end|>' → logprob: -11.669386863708496
    8. ':
' → logprob: -11.919386863708496
    9. '):' → logprob: -12.044386863708496
    10. ':

' → logprob: -12.669386863708496

Token 508: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027771906927227974
    2. '           ' → logprob: -4.277771949768066
    3. '<|end|>' → logprob: -5.777771949768066
    4. '                
' → logprob: -5.902771949768066
    5. ':' → logprob: -6.027771949768066
    6. '            
' → logprob: -6.527771949768066
    7. '                ' → logprob: -7.277771949768066
    8. ',' → logprob: -7.277771949768066
    9. ' 
' → logprob: -7.902771949768066
    10. '\n' → logprob: -8.402771949768066

Token 509: ' length' (ID: 5517)
  Prédit: 'duration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duration' → logprob: -0.49713918566703796
    2. ' duration' → logprob: -1.2471392154693604
    3. 'delta' → logprob: -3.4971392154693604
    4. '               ' → logprob: -3.6221392154693604
    5. ' delta' → logprob: -3.7471392154693604
    6. 'time' → logprob: -4.747138977050781
    7. 'dt' → logprob: -5.122138977050781
    8. ' time' → logprob: -5.372138977050781
    9. ' dt' → logprob: -5.747138977050781
    10. 'interval' → logprob: -7.122138977050781

Token 510: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141859352588654
    2. '=' → logprob: -1.7014186382293701
    3. ' ' → logprob: -12.57641887664795
    4. '=end' → logprob: -13.82641887664795
    5. '	' → logprob: -15.45141887664795
    6. '=int' → logprob: -15.82641887664795
    7. '  ' → logprob: -16.076417922973633
    8. '   ' → logprob: -16.451417922973633
    9. 's' → logprob: -16.826417922973633
    10. ')' → logprob: -17.201417922973633

Token 511: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.3132782578468323
    2. 'end' → logprob: -1.3132781982421875
    3. '(end' → logprob: -11.188278198242188
    4. ' (' → logprob: -13.438278198242188
    5. '               ' → logprob: -15.313278198242188
    6. ' ' → logprob: -15.313278198242188
    7. '	end' → logprob: -15.688278198242188
    8. '=end' → logprob: -15.938278198242188
    9. ''end' → logprob: -16.313278198242188
    10. '                   ' → logprob: -16.563278198242188

Token 512: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014171031303703785
    2. '-' → logprob: -4.264171123504639
    3. '-start' → logprob: -12.38917064666748
    4. ' ' → logprob: -13.13917064666748
    5. ' –' → logprob: -14.51417064666748
    6. ' ' → logprob: -14.63917064666748
    7. '–' → logprob: -16.389171600341797
    8. '   ' → logprob: -16.514171600341797
    9. '               ' → logprob: -17.139171600341797
    10. '-end' → logprob: -17.264171600341797

Token 513: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00861468818038702
    2. ' start' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.508615493774414
    4. '   ' → logprob: -18.008615493774414
    5. '               ' → logprob: -18.633615493774414
    6. '	start' → logprob: -19.008615493774414
    7. '[start' → logprob: -19.133615493774414
    8. 'star' → logprob: -19.258615493774414
    9. '           ' → logprob: -19.633615493774414
    10. '  ' → logprob: -19.758615493774414

Token 514: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18913842737674713
    2. '
' → logprob: -1.814138412475586
    3. '           ' → logprob: -6.189138412475586
    4. '<|end|>' → logprob: -6.189138412475586
    5. ',' → logprob: -6.439138412475586
    6. '                
' → logprob: -6.814138412475586
    7. '  
' → logprob: -7.189138412475586
    8. ' 
' → logprob: -8.189138412475586
    9. '            
' → logprob: -8.564138412475586
    10. ',
' → logprob: -8.564138412475586

Token 515: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001987044233828783
    2. '                
' → logprob: -7.001986980438232
    3. ' water' → logprob: -7.876986980438232
    4. '           ' → logprob: -8.62698745727539
    5. ' tank' → logprob: -8.87698745727539
    6. '
' → logprob: -9.00198745727539
    7. ',' → logprob: -9.87698745727539
    8. ' total' → logprob: -10.50198745727539
    9. ' net' → logprob: -10.75198745727539
    10. ' usage' → logprob: -10.75198745727539

Token 516: ' net' (ID: 2776)
  Prédit: 'net'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'net' (adapté à ' net') → logprob: -0.08547651767730713
    2. ' net' → logprob: -3.2104763984680176
    3. 'delta' → logprob: -3.7104763984680176
    4. '               ' → logprob: -4.710476398468018
    5. 'change' → logprob: -5.460476398468018
    6. 'tank' → logprob: -7.210476398468018
    7. 'in' → logprob: -7.460476398468018
    8. ' delta' → logprob: -7.460476398468018
    9. 'water' → logprob: -7.710476398468018
    10. 'cons' → logprob: -8.210476875305176

Token 517: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.9185036420822144
    2. ' =' → logprob: -1.1685036420822144
    3. '_usage' → logprob: -1.6685036420822144
    4. '=' → logprob: -2.918503761291504
    5. '_flow' → logprob: -3.918503761291504
    6. '_change' → logprob: -4.668503761291504
    7. 'rate' → logprob: -4.793503761291504
    8. '_consum' → logprob: -6.043503761291504
    9. '_d' → logprob: -6.543503761291504
    10. '_use' → logprob: -7.043503761291504

Token 518: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6338852643966675
    2. '=' → logprob: -0.7588852643966675
    3. '<|end|>' → logprob: -6.883885383605957
    4. ')' → logprob: -8.758885383605957
    5. ':' → logprob: -10.633885383605957
    6. ' ' → logprob: -10.883885383605957
    7. '<|end|>' → logprob: -11.383885383605957
    8. '+' → logprob: -11.508885383605957
    9. ',' → logprob: -11.758885383605957
    10. ' +=' → logprob: -12.133885383605957

Token 519: ' pump' (ID: 17128)
  Prédit: 'pump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pump' → logprob: -0.03283391147851944
    2. ' pump' → logprob: -3.6578338146209717
    3. 'p' → logprob: -5.157834053039551
    4. 'rate' → logprob: -7.657834053039551
    5. ' pum' → logprob: -9.03283405303955
    6. '(p' → logprob: -10.53283405303955
    7. '-p' → logprob: -11.15783405303955
    8. 'Pump' → logprob: -11.28283405303955
    9. ' p' → logprob: -11.40783405303955
    10. '-' → logprob: -11.40783405303955

Token 520: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -6.869017852295656e-06
    2. 'rate' → logprob: -12.125006675720215
    3. '_RATE' → logprob: -14.625006675720215
    4. 'r' → logprob: -15.750006675720215
    5. '_r' → logprob: -15.750006675720215
    6. 'Rate' → logprob: -15.750006675720215
    7. '_' → logprob: -16.12500762939453
    8. '-rate' → logprob: -17.12500762939453
    9. '_ratio' → logprob: -17.25000762939453
    10. ' rate' → logprob: -17.50000762939453

Token 521: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20156116783618927
    2. '-' → logprob: -1.7015612125396729
    3. '-rate' → logprob: -8.826560974121094
    4. ' ' → logprob: -14.826560974121094
    5. '-r' → logprob: -15.451560974121094
    6. '-risk' → logprob: -16.826560974121094
    7. ' ' → logprob: -17.076560974121094
    8. ')' → logprob: -17.201560974121094
    9. '<|end|>' → logprob: -17.451560974121094
    10. '-import' → logprob: -17.451560974121094

Token 522: ' rate' (ID: 6251)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rate' → logprob: -0.00033558503491804004
    2. ' rate' → logprob: -8.000335693359375
    3. ' ' → logprob: -16.875335693359375
    4. '   ' → logprob: -17.125335693359375
    5. '(rate' → logprob: -17.625335693359375
    6. 'rating' → logprob: -19.750335693359375
    7. 'rat' → logprob: -20.125335693359375
    8. 'float' → logprob: -20.250335693359375
    9. '    ' → logprob: -20.375335693359375
    10. '  ' → logprob: -20.500335693359375

Token 523: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22710534930229187
    2. '
' → logprob: -1.8521053791046143
    3. '<|end|>' → logprob: -3.4771053791046143
    4. '                
' → logprob: -4.977105140686035
    5. '  
' → logprob: -6.352105140686035
    6. ' 
' → logprob: -6.477105140686035
    7. '*' → logprob: -6.977105140686035
    8. ',' → logprob: -7.352105140686035
    9. ')' → logprob: -7.477105140686035
    10. '<|end|>' → logprob: -7.727105140686035

Token 524: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5309082865715027
    2. '               ' → logprob: -1.0309083461761475
    3. '\n' → logprob: -3.4059083461761475
    4. '           ' → logprob: -4.530908107757568
    5. '                
' → logprob: -5.405908107757568
    6. '<|end|>' → logprob: -6.155908107757568
    7. '            
' → logprob: -6.655908107757568
    8. '  
' → logprob: -6.780908107757568
    9. ' if' → logprob: -8.030908584594727
    10. '```' → logprob: -8.280908584594727

Token 525: ' tank' (ID: 16109)
  Prédit: 'tank'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tank' (adapté à ' tank') → logprob: -0.0836510956287384
    2. '               ' → logprob: -3.208651065826416
    3. 'change' → logprob: -3.708651065826416
    4. 'delta' → logprob: -4.583651065826416
    5. ' tank' → logprob: -6.458651065826416
    6. 'level' → logprob: -6.583651065826416
    7. '           ' → logprob: -7.083651065826416
    8. 'water' → logprob: -7.833651065826416
    9. 'dr' → logprob: -8.458651542663574
    10. 't' → logprob: -8.583651542663574

Token 526: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -9.281485836254433e-05
    2. 'level' → logprob: -10.250092506408691
    3. '_change' → logprob: -10.625092506408691
    4. 'Level' → logprob: -11.250092506408691
    5. '           ' → logprob: -11.500092506408691
    6. '_levels' → logprob: -13.250092506408691
    7. '_' → logprob: -13.625092506408691
    8. '	level' → logprob: -14.250092506408691
    9. '		' → logprob: -14.375092506408691
    10. 'change' → logprob: -14.500092506408691

Token 527: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5760399699211121
    2. '+=' → logprob: -0.8260399699211121
    3. '=' → logprob: -9.451040267944336
    4. ' -=' → logprob: -11.826040267944336
    5. '+' → logprob: -12.201040267944336
    6. '-=' → logprob: -12.576040267944336
    7. '	' → logprob: -12.701040267944336
    8. ' =' → logprob: -13.576040267944336
    9. '+=(' → logprob: -14.451040267944336
    10. ' +' → logprob: -15.451040267944336

Token 528: ' net' (ID: 2776)
  Prédit: 'net'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'net' → logprob: -0.6391192674636841
    2. ' net' → logprob: -0.7641192674636841
    3. 'length' → logprob: -5.2641191482543945
    4. ' length' → logprob: -6.6391191482543945
    5. '(net' → logprob: -11.889119148254395
    6. '	net' → logprob: -11.889119148254395
    7. ' ' → logprob: -13.889119148254395
    8. '"net' → logprob: -14.889119148254395
    9. 'len' → logprob: -15.014119148254395
    10. '_net' → logprob: -15.264119148254395

Token 529: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -2.45848218582978e-06
    2. 'rate' → logprob: -13.37500286102295
    3. '_' → logprob: -15.00000286102295
    4. '_rat' → logprob: -15.87500286102295
    5. '_ratio' → logprob: -16.250001907348633
    6. '_r' → logprob: -16.250001907348633
    7. '_RATE' → logprob: -16.625001907348633
    8. 't' → logprob: -17.875001907348633
    9. 'trate' → logprob: -17.875001907348633
    10. 'Rate' → logprob: -18.250001907348633

Token 530: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029751067981123924
    2. '*' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.15475082397461
    4. '*object' → logprob: -16.52975082397461
    5. ' ' → logprob: -16.65475082397461
    6. 'length' → logprob: -17.27975082397461
    7. '	' → logprob: -17.40475082397461
    8. '   ' → logprob: -17.90475082397461
    9. '_length' → logprob: -18.40475082397461
    10. '           ' → logprob: -18.40475082397461

Token 531: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0005530327325686812
    2. ' length' → logprob: -7.500553131103516
    3. '(length' → logprob: -19.750553131103516
    4. 'leng' → logprob: -20.875553131103516
    5. '	length' → logprob: -22.000553131103516
    6. 'ength' → logprob: -22.125553131103516
    7. '[length' → logprob: -22.250553131103516
    8. 'len' → logprob: -22.625553131103516
    9. '_length' → logprob: -23.250553131103516
    10. ' ' → logprob: -23.250553131103516

Token 532: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06310709565877914
    2. '
' → logprob: -3.0631070137023926
    3. '<|end|>' → logprob: -4.813107013702393
    4. '           ' → logprob: -5.188107013702393
    5. '
' → logprob: -8.56310749053955
    6. '<|end|>' → logprob: -8.68810749053955
    7. '	           ' → logprob: -9.56310749053955
    8. '                ' → logprob: -10.18810749053955
    9. '			' → logprob: -10.81310749053955
    10. '  
' → logprob: -10.81310749053955

Token 533: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030902596190571785
    2. '           ' → logprob: -3.530902624130249
    3. '
' → logprob: -7.28090238571167
    4. '<|end|>' → logprob: -8.530902862548828
    5. ',' → logprob: -9.905902862548828
    6. ' if' → logprob: -10.155902862548828
    7. '	           ' → logprob: -10.905902862548828
    8. '<|end|>' → logprob: -11.030902862548828
    9. '			' → logprob: -11.155902862548828
    10. ' ' → logprob: -11.155902862548828

Token 534: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.062450818717479706
    2. '               ' → logprob: -3.062450885772705
    3. ' if' → logprob: -4.312450885772705
    4. '           ' → logprob: -7.937450885772705
    5. '	if' → logprob: -11.937450408935547
    6. 'If' → logprob: -13.062450408935547
    7. '   ' → logprob: -14.937450408935547
    8. '	           ' → logprob: -15.062450408935547
    9. ' ' → logprob: -15.187450408935547
    10. '                   ' → logprob: -15.937450408935547

Token 535: ' tank' (ID: 16109)
  Prédit: ' tank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tank' → logprob: -0.38687947392463684
    2. 'tank' → logprob: -1.1368794441223145
    3. 't' → logprob: -11.761879920959473
    4. '   ' → logprob: -15.136879920959473
    5. '	t' → logprob: -16.011878967285156
    6. ' ' → logprob: -16.136878967285156
    7. 'Tank' → logprob: -16.511878967285156
    8. '(t' → logprob: -17.136878967285156
    9. '  ' → logprob: -17.886878967285156
    10. ' ' → logprob: -18.011878967285156

Token 536: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -1.8624639324116288e-06
    2. 'level' → logprob: -13.375001907348633
    3. '_' → logprob: -15.750001907348633
    4. '_LEVEL' → logprob: -17.125001907348633
    5. 'Level' → logprob: -17.500001907348633
    6. '-level' → logprob: -17.750001907348633
    7. '```' → logprob: -18.125001907348633
    8. '_Level' → logprob: -18.500001907348633
    9. '_le' → logprob: -18.750001907348633
    10. '<' → logprob: -18.750001907348633

Token 537: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.28124070167541504
    2. ' <' → logprob: -1.406240701675415
    3. '<=' → logprob: -10.406240463256836
    4. ' ' → logprob: -10.531240463256836
    5. '<m' → logprob: -12.281240463256836
    6. ' <=' → logprob: -12.781240463256836
    7. '<E' → logprob: -12.906240463256836
    8. '<int' → logprob: -12.906240463256836
    9. '<n' → logprob: -13.281240463256836
    10. '<s' → logprob: -13.281240463256836

Token 538: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020542705431580544
    2. ' ' → logprob: -3.895542621612549
    3. '=' → logprob: -15.520543098449707
    4. ' -' → logprob: -15.645543098449707
    5. '-' → logprob: -15.770543098449707
    6. '<|end|>' → logprob: -16.95804214477539
    7. '۰' → logprob: -17.27054214477539
    8. '```' → logprob: -17.33304214477539
    9. ')' → logprob: -17.52054214477539
    10. ' ' → logprob: -17.52054214477539

Token 539: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.875024795532227
    3. '-' → logprob: -12.125024795532227
    4. ' -' → logprob: -15.875024795532227
    5. '1' → logprob: -16.500024795532227
    6. '=' → logprob: -17.000024795532227
    7. '```' → logprob: -17.875024795532227
    8. '000' → logprob: -18.250024795532227
    9. '۰' → logprob: -18.375024795532227
    10. '.' → logprob: -19.250024795532227

Token 540: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011667072772979736
    2. '           ' → logprob: -5.511667251586914
    3. '               ' → logprob: -5.511667251586914
    4. ':
' → logprob: -5.761667251586914
    5. ':return' → logprob: -9.261667251586914
    6. '                   ' → logprob: -9.511667251586914
    7. '.' → logprob: -9.636667251586914
    8. ',' → logprob: -9.886667251586914
    9. ':
' → logprob: -10.636667251586914
    10. ' or' → logprob: -11.386667251586914

Token 541: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00903606228530407
    2. '               ' → logprob: -4.884036064147949
    3. 'return' → logprob: -7.259036064147949
    4. ' return' → logprob: -7.884036064147949
    5. '                       ' → logprob: -8.25903606414795
    6. '           ' → logprob: -9.75903606414795
    7. '                  ' → logprob: -11.50903606414795
    8. '                ' → logprob: -12.25903606414795
    9. '   ' → logprob: -12.50903606414795
    10. '                 ' → logprob: -12.88403606414795

Token 542: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0010008938843384385
    2. ' return' → logprob: -7.251000881195068
    3. '                   ' → logprob: -8.251001358032227
    4. '               ' → logprob: -10.501001358032227
    5. '                       ' → logprob: -13.001001358032227
    6. '	return' → logprob: -16.501001358032227
    7. '   ' → logprob: -17.251001358032227
    8. '
' → logprob: -17.501001358032227
    9. '           ' → logprob: -18.126001358032227
    10. '                           ' → logprob: -18.626001358032227

Token 543: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.128163257315464e-07
    2. ' False' → logprob: -15.5
    3. 'True' → logprob: -21.75
    4. '(False' → logprob: -23.75
    5. 'false' → logprob: -24.375
    6. '=False' → logprob: -25.0
    7. 'F' → logprob: -26.75
    8. '   ' → logprob: -27.0
    9. 'FALSE' → logprob: -27.75
    10. '_false' → logprob: -27.875

Token 544: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20287586748600006
    2. '               ' → logprob: -1.7028758525848389
    3. ',' → logprob: -7.577876091003418
    4. '
' → logprob: -7.952876091003418
    5. '            
' → logprob: -8.827876091003418
    6. ' return' → logprob: -8.952876091003418
    7. '.' → logprob: -9.327876091003418
    8. '       ' → logprob: -9.452876091003418
    9. '                
' → logprob: -9.952876091003418
    10. 'return' → logprob: -10.577876091003418

Token 545: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048606324940919876
    2. '               ' → logprob: -3.0486063957214355
    3. 'return' → logprob: -11.923605918884277
    4. ' return' → logprob: -12.298605918884277
    5. '
' → logprob: -12.548605918884277
    6. '       ' → logprob: -13.173605918884277
    7. '            
' → logprob: -14.673605918884277
    8. ',' → logprob: -15.048605918884277
    9. '          ' → logprob: -15.173605918884277
    10. '                   ' → logprob: -15.298605918884277

Token 546: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006555859465152025
    2. '               ' → logprob: -5.131556034088135
    3. 'return' → logprob: -7.381556034088135
    4. ' return' → logprob: -13.631555557250977
    5. '       ' → logprob: -14.006555557250977
    6. 'if' → logprob: -14.131555557250977
    7. '#' (adapté à ' #') → logprob: -14.881555557250977
    8. 'import' → logprob: -15.256555557250977
    9. '   ' → logprob: -15.381555557250977
    10. '                   ' → logprob: -15.506555557250977

Token 547: ' Cap' (ID: 9701)
  Prédit: 'tank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tank' → logprob: -0.7519891858100891
    2. '           ' → logprob: -1.3769891262054443
    3. '               ' → logprob: -2.0019891262054443
    4. 'if' → logprob: -2.2519891262054443
    5. 'return' → logprob: -3.3769891262054443
    6. '       ' → logprob: -7.376989364624023
    7. ' if' → logprob: -7.626989364624023
    8. ' tank' → logprob: -8.501989364624023
    9. '```' → logprob: -9.376989364624023
    10. '#' → logprob: -9.376989364624023

Token 548: ' water' (ID: 3411)
  Prédit: 'tank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tank' → logprob: -0.8238022923469543
    2. ' tank' → logprob: -1.0738022327423096
    3. ' at' → logprob: -1.5738022327423096
    4. '               ' → logprob: -4.948802471160889
    5. '           ' → logprob: -5.573802471160889
    6. '=' → logprob: -7.198802471160889
    7. ' =' → logprob: -8.94880199432373
    8. ' to' → logprob: -9.19880199432373
    9. ' the' → logprob: -9.32380199432373
    10. '                   ' → logprob: -9.57380199432373

Token 549: ' to' (ID: 316)
  Prédit: '_level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.17917785048484802
    2. 'level' → logprob: -2.054177761077881
    3. 'tank' → logprob: -3.804177761077881
    4. '           ' → logprob: -4.929177761077881
    5. ' level' → logprob: -6.054177761077881
    6. ' tank' → logprob: -6.554177761077881
    7. '               ' → logprob: -6.554177761077881
    8. '=' → logprob: -8.179178237915039
    9. ' =' → logprob: -8.429178237915039
    10. '_levels' → logprob: -9.179178237915039

Token 550: ' max' (ID: 2999)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.018725385889410973
    2. ' L' → logprob: -4.018725395202637
    3. 'min' → logprob: -8.393725395202637
    4. ' min' → logprob: -8.643725395202637
    5. 'tank' → logprob: -9.268725395202637
    6. 'max' → logprob: -10.518725395202637
    7. 'schedule' → logprob: -10.893725395202637
    8. ' tank' → logprob: -11.643725395202637
    9. ' max' → logprob: -12.768725395202637
    10. 'self' → logprob: -12.768725395202637

Token 551: ' tank' (ID: 16109)
  Prédit: ' tank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tank' → logprob: -1.1355948448181152
    2. '_capacity' → logprob: -1.2605948448181152
    3. ' capacity' → logprob: -1.8855948448181152
    4. 'tank' → logprob: -2.2605948448181152
    5. ' L' → logprob: -2.3855948448181152
    6. '               ' → logprob: -4.510594844818115
    7. '_level' → logprob: -4.635594844818115
    8. 'L' → logprob: -5.135594844818115
    9. '           ' → logprob: -5.260594844818115
    10. 'capacity' → logprob: -5.510594844818115

Token 552: ' capacity' (ID: 12241)
  Prédit: '_capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.00016539888747502118
    2. 'capacity' → logprob: -9.625164985656738
    3. '_level' → logprob: -9.875164985656738
    4. ' capacity' → logprob: -10.750164985656738
    5. '   ' → logprob: -12.125164985656738
    6. '_' → logprob: -12.375164985656738
    7. '_cap' → logprob: -12.875164985656738
    8. '_length' → logprob: -13.000164985656738
    9. 'Capacity' → logprob: -13.125164985656738
    10. '_size' → logprob: -13.250164985656738

Token 553: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47425806522369385
    2. '           ' → logprob: -0.9742580652236938
    3. ' if' → logprob: -8.849258422851562
    4. ',' → logprob: -10.974258422851562
    5. 'if' → logprob: -12.224258422851562
    6. '                   ' → logprob: -12.224258422851562
    7. '            ' → logprob: -13.474258422851562
    8. '<|end|>' → logprob: -13.474258422851562
    9. '```' → logprob: -13.974258422851562
    10. ' and' → logprob: -14.099258422851562

Token 554: 'overflow' (ID: 47116)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7287357449531555
    2. ')' → logprob: -0.9787357449531555
    3. '               ' → logprob: -2.9787356853485107
    4. 'if' → logprob: -3.8537356853485107
    5. 'min' → logprob: -4.22873592376709
    6. 'tank' → logprob: -4.35373592376709
    7. ' L' → logprob: -4.47873592376709
    8. ' if' → logprob: -4.97873592376709
    9. ')
' → logprob: -4.97873592376709
    10. '=' → logprob: -5.10373592376709

Token 555: ' ignored' (ID: 25203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010085523128509521
    2. '               ' → logprob: -5.260085582733154
    3. ' is' → logprob: -6.385085582733154
    4. '           ' → logprob: -7.135085582733154
    5. ')
' → logprob: -7.510085582733154
    6. ' not' → logprob: -8.135085105895996
    7. ' if' → logprob: -8.135085105895996
    8. ' )' → logprob: -8.760085105895996
    9. '),' → logprob: -9.010085105895996
    10. ').' → logprob: -9.010085105895996

Token 556: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010472302325069904
    2. '               ' → logprob: -5.010472297668457
    3. ')
' → logprob: -6.260472297668457
    4. '           ' → logprob: -6.635472297668457
    5. ' )' → logprob: -8.010472297668457
    6. ' if' → logprob: -9.885472297668457
    7. ',' → logprob: -10.010472297668457
    8. ' for' → logprob: -10.510472297668457
    9. ' at' → logprob: -11.010472297668457
    10. ').' → logprob: -11.135472297668457

Token 557: ' but' (ID: 889)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0389189720153809
    2. ')' → logprob: -2.288918972015381
    3. '           ' → logprob: -2.288918972015381
    4. ' so' → logprob: -2.288918972015381
    5. 'tank' → logprob: -2.663918972015381
    6. 'but' → logprob: -2.913918972015381
    7. ' but' → logprob: -3.038918972015381
    8. 'if' → logprob: -3.163918972015381
    9. 'since' → logprob: -4.038918972015381
    10. ' as' → logprob: -4.163918972015381

Token 558: ' no' (ID: 860)
  Prédit: 'tank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tank' → logprob: -0.8396795988082886
    2. 'not' → logprob: -1.8396795988082886
    3. ' not' → logprob: -2.089679718017578
    4. ' no' → logprob: -2.339679718017578
    5. 'no' → logprob: -3.089679718017578
    6. ' tank' → logprob: -3.214679718017578
    7. 'c' → logprob: -3.839679718017578
    8. 'cannot' → logprob: -4.214679718017578
    9. ' should' → logprob: -4.839679718017578
    10. 'water' → logprob: -4.839679718017578

Token 559: ' point' (ID: 2438)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.6433437466621399
    2. ' negative' → logprob: -0.8933437466621399
    3. ' under' → logprob: -3.268343687057495
    4. 'under' → logprob: -4.393343925476074
    5. 'tank' → logprob: -6.393343925476074
    6. ' more' → logprob: -6.768343925476074
    7. ' decrease' → logprob: -7.018343925476074
    8. 'more' → logprob: -7.143343925476074
    9. ' overflow' → logprob: -7.143343925476074
    10. 'overflow' → logprob: -7.268343925476074

Token 560: ' going' (ID: 2966)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7764055132865906
    2. ' in' → logprob: -0.9014055132865906
    3. '               ' → logprob: -2.9014055728912354
    4. ' to' → logprob: -3.5264055728912354
    5. 'to' → logprob: -3.5264055728912354
    6. '           ' → logprob: -5.401405334472656
    7. 's' → logprob: -5.651405334472656
    8. ' of' → logprob: -6.026405334472656
    9. '                   ' → logprob: -6.526405334472656
    10. ')' → logprob: -6.651405334472656

Token 561: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.6852332353591919
    2. 'b' → logprob: -1.060233235359192
    3. ' above' → logprob: -2.1852331161499023
    4. 'over' → logprob: -3.6852331161499023
    5. ' over' → logprob: -5.310233116149902
    6. ' beyond' → logprob: -5.435233116149902
    7. '               ' → logprob: -6.310233116149902
    8. '           ' → logprob: -7.435233116149902
    9. '       ' → logprob: -9.310233116149902
    10. '   ' → logprob: -9.560233116149902

Token 562: ')
' (ID: 446)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.1131565272808075
    2. ' L' → logprob: -2.23815655708313
    3. 'tank' → logprob: -8.23815631866455
    4. ' tank' → logprob: -9.98815631866455
    5. 'self' → logprob: -11.86315631866455
    6. '               ' → logprob: -12.23815631866455
    7. ')' → logprob: -12.73815631866455
    8. '```' → logprob: -13.48815631866455
    9. '+' → logprob: -13.73815631866455
    10. ' ' → logprob: -13.86315631866455

Token 563: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06999412924051285
    2. '           ' → logprob: -2.6949942111968994
    3. '                   ' → logprob: -10.81999397277832
    4. 'return' → logprob: -11.44499397277832
    5. ' if' → logprob: -11.44499397277832
    6. 'if' → logprob: -11.69499397277832
    7. '```' → logprob: -12.94499397277832
    8. 'tank' → logprob: -13.31999397277832
    9. '       ' → logprob: -13.69499397277832
    10. 'import' → logprob: -14.06999397277832

Token 564: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.815392792224884
    2. ' if' → logprob: -1.4403927326202393
    3. '               ' → logprob: -1.9403927326202393
    4. ' tank' → logprob: -2.5653927326202393
    5. 'tank' → logprob: -2.6903927326202393
    6. 'if' (adapté à ' if') → logprob: -3.4403927326202393
    7. '                   ' → logprob: -9.31539249420166
    8. 't' → logprob: -10.44039249420166
    9. '       ' → logprob: -10.44039249420166
    10. ' tanker' → logprob: -10.69039249420166

Token 565: ' tank' (ID: 16109)
  Prédit: 'tank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tank' → logprob: -0.12702669203281403
    2. ' tank' → logprob: -2.1270267963409424
    3. 't' → logprob: -9.377026557922363
    4. '   ' → logprob: -12.252026557922363
    5. '               ' → logprob: -12.502026557922363
    6. '	t' → logprob: -13.752026557922363
    7. '                   ' → logprob: -13.877026557922363
    8. ' ' → logprob: -14.252026557922363
    9. ' ' → logprob: -14.502026557922363
    10. '           ' → logprob: -14.627026557922363

Token 566: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -1.7432603272027336e-06
    2. 'level' → logprob: -14.625001907348633
    3. '           ' → logprob: -15.250001907348633
    4. '   ' → logprob: -15.500001907348633
    5. '_levels' → logprob: -16.000001907348633
    6. '                   ' → logprob: -16.250001907348633
    7. '_rate' → logprob: -16.375001907348633
    8. 'Level' → logprob: -16.500001907348633
    9. '_LEVEL' → logprob: -16.625001907348633
    10. '  ' → logprob: -17.000001907348633

Token 567: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4740893542766571
    2. '>' → logprob: -0.9740893840789795
    3. ' ' → logprob: -11.599089622497559
    4. '   ' → logprob: -14.474089622497559
    5. ' ' → logprob: -14.724089622497559
    6. '<|end|>' → logprob: -14.724089622497559
    7. '">' → logprob: -15.224089622497559
    8. '()>' → logprob: -15.349089622497559
    9. ')' → logprob: -15.474089622497559
    10. '  ' → logprob: -15.724089622497559

Token 568: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.03804539144039154
    2. ' L' → logprob: -3.2880454063415527
    3. 'tank' → logprob: -14.038044929504395
    4. '   ' → logprob: -14.413044929504395
    5. '               ' → logprob: -14.788044929504395
    6. ' ' → logprob: -14.913044929504395
    7. ' tank' → logprob: -14.913044929504395
    8. '	L' → logprob: -14.913044929504395
    9. '                   ' → logprob: -15.038044929504395
    10. '           ' → logprob: -15.038044929504395

Token 569: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02108982391655445
    2. ':
' → logprob: -3.896089792251587
    3. '               ' → logprob: -8.021089553833008
    4. '           ' → logprob: -8.896089553833008
    5. '):' → logprob: -10.396089553833008
    6. '):
' → logprob: -10.771089553833008
    7. '                   ' → logprob: -11.646089553833008
    8. ')' → logprob: -11.771089553833008
    9. '                       ' → logprob: -12.771089553833008
    10. ',' → logprob: -12.896089553833008

Token 570: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5569015145301819
    2. ' tank' → logprob: -1.181901454925537
    3. 'tank' → logprob: -2.556901454925537
    4. '               ' → logprob: -3.181901454925537
    5. ' =' → logprob: -7.556901454925537
    6. '=' → logprob: -7.556901454925537
    7. '           ' → logprob: -8.931901931762695
    8. '                       ' → logprob: -9.931901931762695
    9. ',' → logprob: -10.806901931762695
    10. 't' → logprob: -11.931901931762695

Token 571: ' tank' (ID: 16109)
  Prédit: 'tank'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tank' (adapté à ' tank') → logprob: -0.03673994168639183
    2. ' tank' → logprob: -3.4117398262023926
    3. '                   ' → logprob: -6.161739826202393
    4. 'L' → logprob: -7.286739826202393
    5. 't' → logprob: -8.53674030303955
    6. '               ' → logprob: -9.91174030303955
    7. '           ' → logprob: -11.16174030303955
    8. '   ' → logprob: -11.53674030303955
    9. ' L' → logprob: -11.78674030303955
    10. 'Tank' → logprob: -12.28674030303955

Token 572: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -1.3856492842023727e-06
    2. 'level' → logprob: -14.375000953674316
    3. 'Level' → logprob: -15.500000953674316
    4. '_capacity' → logprob: -15.875000953674316
    5. '           ' → logprob: -16.000001907348633
    6. '_LEVEL' → logprob: -16.250001907348633
    7. '                   ' → logprob: -17.375001907348633
    8. '_levels' → logprob: -17.375001907348633
    9. '   ' → logprob: -17.500001907348633
    10. '=' → logprob: -18.125001907348633

Token 573: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. '＝' → logprob: -19.523244857788086
    4. '.=' → logprob: -20.148244857788086
    5. '=}' → logprob: -20.398244857788086
    6. '=cut' → logprob: -20.648244857788086
    7. '<|end|>' → logprob: -20.773244857788086
    8. '=
' → logprob: -21.273244857788086
    9. ' ' → logprob: -21.273244857788086
    10. '   ' → logprob: -22.148244857788086

Token 574: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0019286326132714748
    2. ' L' → logprob: -6.251928806304932
    3. '>L' → logprob: -18.501928329467773
    4. '	L' → logprob: -19.376928329467773
    5. '<|end|>' → logprob: -20.001928329467773
    6. 'float' → logprob: -20.876928329467773
    7. ' ' → logprob: -21.251928329467773
    8. 'l' → logprob: -21.501928329467773
    9. '   ' → logprob: -22.126928329467773
    10. '=L' → logprob: -22.501928329467773

Token 575: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01325775682926178
    2. '               ' → logprob: -5.51325798034668
    3. '<|end|>' → logprob: -5.51325798034668
    4. 'return' → logprob: -6.51325798034668
    5. ' return' → logprob: -7.13825798034668
    6. '
' → logprob: -7.13825798034668
    7. ',' → logprob: -7.26325798034668
    8. '.' → logprob: -7.76325798034668
    9. '       ' → logprob: -8.38825798034668
    10. '            
' → logprob: -8.51325798034668

Token 576: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007320985663682222
    2. 'return' → logprob: -5.257320880889893
    3. ' return' → logprob: -6.882320880889893
    4. '       ' → logprob: -7.132320880889893
    5. '		' → logprob: -9.38232135772705
    6. '
' → logprob: -9.88232135772705
    7. '	return' → logprob: -10.00732135772705
    8. '	       ' → logprob: -10.13232135772705
    9. '               ' → logprob: -11.50732135772705
    10. '            
' → logprob: -11.88232135772705

Token 577: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.36094042658805847
    2. '           ' → logprob: -1.6109404563903809
    3. '       ' → logprob: -2.360940456390381
    4. ' return' → logprob: -4.735940456390381
    5. '	return' → logprob: -9.485939979553223
    6. '   ' → logprob: -10.610939979553223
    7. '
' → logprob: -10.985939979553223
    8. '<|end|>' → logprob: -11.110939979553223
    9. '               ' → logprob: -11.360939979553223
    10. 'eturn' → logprob: -11.610939979553223

Token 578: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0005648265941999853
    2. ' True' → logprob: -7.500565052032471
    3. 'tank' → logprob: -11.375564575195312
    4. 'true' → logprob: -15.375564575195312
    5. '(True' → logprob: -16.750564575195312
    6. 'False' → logprob: -17.000564575195312
    7. '   ' → logprob: -17.125564575195312
    8. 'Tr' → logprob: -18.375564575195312
    9. ' tank' → logprob: -18.500564575195312
    10. 't' → logprob: -18.875564575195312

Token 579: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3411978483200073
    2. '
' → logprob: -1.3411978483200073
    3. '        
' → logprob: -4.341197967529297
    4. '<|end|>' → logprob: -4.341197967529297
    5. '

' → logprob: -7.716197967529297
    6. '<|end|>' → logprob: -8.091197967529297
    7. '  
' → logprob: -8.341197967529297
    8. '
' → logprob: -8.466197967529297
    9. '    
' → logprob: -10.091197967529297
    10. '        

' → logprob: -10.091197967529297

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005061313975602388
    2. ' while' → logprob: -5.880061149597168
    3. 'while' → logprob: -6.130061149597168
    4. '        
' → logprob: -10.380061149597168
    5. '```' → logprob: -11.130061149597168
    6. '<|end|>' → logprob: -11.255061149597168
    7. '   ' → logprob: -11.880061149597168
    8. '	while' → logprob: -12.755061149597168
    9. ',' → logprob: -13.380061149597168
    10. '
' → logprob: -13.755061149597168

Token 581: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08077187091112137
    2. '       ' → logprob: -2.5807719230651855
    3. ' while' → logprob: -6.3307719230651855
    4. 'for' → logprob: -9.455771446228027
    5. '        
' → logprob: -11.580771446228027
    6. '   ' → logprob: -12.580771446228027
    7. '
' → logprob: -13.705771446228027
    8. '	while' → logprob: -13.705771446228027
    9. 'eps' → logprob: -13.830771446228027
    10. '```' → logprob: -13.830771446228027

Token 582: ' We' (ID: 1416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0927964374423027
    2. 'for' → logprob: -2.5927963256835938
    3. '       ' → logprob: -4.342796325683594
    4. 'import' → logprob: -7.217796325683594
    5. 'if' → logprob: -11.092796325683594
    6. ' while' → logprob: -11.092796325683594
    7. 'EPS' → logprob: -11.467796325683594
    8. 'from' → logprob: -11.592796325683594
    9. 'While' → logprob: -11.717796325683594
    10. 'epsilon' → logprob: -11.842796325683594

Token 583: ' want' (ID: 1682)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7814435958862305
    2. ' while' → logprob: -0.9064435958862305
    3. 'while' → logprob: -2.1564435958862305
    4. '        ' → logprob: -4.1564435958862305
    5. '   ' → logprob: -6.0314435958862305
    6. '    ' → logprob: -6.4064435958862305
    7. '        
' → logprob: -7.7814435958862305
    8. ' for' → logprob: -8.15644359588623
    9. '           ' → logprob: -8.28144359588623
    10. ' ' → logprob: -8.28144359588623

Token 584: ' minimal' (ID: 19957)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6205148100852966
    2. '       ' → logprob: -1.3705148696899414
    3. 'while' → logprob: -2.4955148696899414
    4. ' while' → logprob: -2.7455148696899414
    5. ' low' → logprob: -3.2455148696899414
    6. ' high' → logprob: -4.370514869689941
    7. 'to' → logprob: -5.745514869689941
    8. ' a' → logprob: -6.245514869689941
    9. 'low' → logprob: -6.745514869689941
    10. '   ' → logprob: -7.370514869689941

Token 585: ' pump' (ID: 17128)
  Prédit: ' pump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pump' → logprob: -0.8655169606208801
    2. 'pump' → logprob: -1.2405169010162354
    3. ' low' → logprob: -2.6155169010162354
    4. '_' → logprob: -2.7405169010162354
    5. '_rate' → logprob: -3.1155169010162354
    6. '_p' → logprob: -3.8655169010162354
    7. 'while' → logprob: -4.3655171394348145
    8. ' while' → logprob: -4.3655171394348145
    9. '       ' → logprob: -4.3655171394348145
    10. ',' → logprob: -4.8655171394348145

Token 586: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.00045200303429737687
    2. '_' → logprob: -8.750452041625977
    3. '_speed' → logprob: -8.875452041625977
    4. ' _' → logprob: -8.875452041625977
    5. '_r' → logprob: -12.500452041625977
    6. '       ' → logprob: -12.750452041625977
    7. ' rate' → logprob: -13.250452041625977
    8. '   ' → logprob: -13.500452041625977
    9. '_ratio' → logprob: -14.375452041625977
    10. 'rate' → logprob: -14.500452041625977

Token 587: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4754219353199005
    2. ' while' → logprob: -1.4754219055175781
    3. ' 
' → logprob: -3.350421905517578
    4. ',' → logprob: -3.600421905517578
    5. 'while' → logprob: -3.850421905517578
    6. '        
' → logprob: -4.100421905517578
    7. ' ' → logprob: -4.100421905517578
    8. '
' → logprob: -4.850421905517578
    9. '        ' → logprob: -5.475421905517578
    10. ' ,' → logprob: -5.975421905517578

Token 588: ' error' (ID: 2915)
  Prédit: ' high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.5669227838516235
    2. 'high' → logprob: -1.5669227838516235
    3. ' precision' → logprob: -1.9419227838516235
    4. 'precision' → logprob: -3.316922664642334
    5. 'in' → logprob: -3.566922664642334
    6. ' absolute' → logprob: -5.441922664642334
    7. ' check' → logprob: -5.691922664642334
    8. 'absolute' → logprob: -6.191922664642334
    9. 'check' → logprob: -6.566922664642334
    10. 'abs' → logprob: -7.441922664642334

Token 589: ' tolerance' (ID: 46581)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16659219563007355
    2. ' <=' → logprob: -2.1665921211242676
    3. '<' → logprob: -3.4165921211242676
    4. '<=' → logprob: -5.791592121124268
    5. ' ' → logprob: -6.791592121124268
    6. ' >' → logprob: -7.041592121124268
    7. '=' → logprob: -7.791592121124268
    8. ' less' → logprob: -8.541592597961426
    9. '   ' → logprob: -9.291592597961426
    10. '>' → logprob: -10.041592597961426

Token 590: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5518772602081299
    2. ' =' → logprob: -1.6768772602081299
    3. ' of' → logprob: -2.05187726020813
    4. ' ' → logprob: -3.05187726020813
    5. '       ' → logprob: -3.80187726020813
    6. ' <=' → logprob: -4.176877021789551
    7. ' <' → logprob: -5.176877021789551
    8. ':' → logprob: -5.301877021789551
    9. ' for' → logprob: -5.926877021789551
    10. '        ' → logprob: -5.926877021789551

Token 591: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04860009253025055
    2. ' ' → logprob: -3.048600196838379
    3. '0' → logprob: -11.298600196838379
    4. '   ' → logprob: -15.798600196838379
    5. '10' → logprob: -16.048599243164062
    6. 'e' → logprob: -17.048599243164062
    7. '5' → logprob: -17.548599243164062
    8. '7' → logprob: -17.673599243164062
    9. '```' → logprob: -17.798599243164062
    10. '=' → logprob: -17.798599243164062

Token 592: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.113290095934644e-05
    2. '0' → logprob: -9.500081062316895
    3. ' ' → logprob: -12.375081062316895
    4. '10' → logprob: -13.250081062316895
    5. '   ' → logprob: -16.37508201599121
    6. '=' → logprob: -17.50008201599121
    7. '(' → logprob: -17.62508201599121
    8. 'e' → logprob: -17.75008201599121
    9. '```' → logprob: -18.00008201599121
    10. '-' → logprob: -18.25008201599121

Token 593: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.259079363080673e-05
    2. 'E' → logprob: -12.125012397766113
    3. '-' → logprob: -13.125012397766113
    4. '.' → logprob: -13.375012397766113
    5. '.e' → logprob: -13.500012397766113
    6. '
' → logprob: -14.250012397766113
    7. '0' → logprob: -14.750012397766113
    8. ' ' → logprob: -14.875012397766113
    9. ' e' → logprob: -15.500012397766113
    10. '```' → logprob: -16.00001335144043

Token 594: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.127333340875339e-06
    2. ' -' → logprob: -13.750003814697266
    3. '6' → logprob: -14.125003814697266
    4. '```' → logprob: -14.375003814697266
    5. '   ' → logprob: -14.875003814697266
    6. '−' → logprob: -15.750003814697266
    7. '3' → logprob: -15.875003814697266
    8. '       ' → logprob: -16.125003814697266
    9. '7' → logprob: -16.125003814697266
    10. '0' → logprob: -16.125003814697266

Token 595: '7' (ID: 22)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.1014233827590942
    2. '5' → logprob: -1.2264233827590942
    3. '3' → logprob: -1.6014233827590942
    4. '4' → logprob: -1.8514233827590942
    5. '7' → logprob: -4.351423263549805
    6. '06' → logprob: -7.101423263549805
    7. '05' → logprob: -7.226423263549805
    8. '2' → logprob: -8.101423263549805
    9. '8' → logprob: -8.351423263549805
    10. '-' → logprob: -8.351423263549805

Token 596: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.758247971534729
    2. '
' → logprob: -1.133247971534729
    3. ' while' → logprob: -1.883247971534729
    4. 'while' → logprob: -3.8832478523254395
    5. ' 
' → logprob: -4.2582478523254395
    6. '        
' → logprob: -4.5082478523254395
    7. ',' → logprob: -5.2582478523254395
    8. ',
' → logprob: -6.2582478523254395
    9. '\n' → logprob: -6.7582478523254395
    10. '  
' → logprob: -6.8832478523254395

Token 597: ' ensure' (ID: 6757)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4069206714630127
    2. ' ' → logprob: -2.0319206714630127
    3. '7' → logprob: -3.0319206714630127
    4. ' ensure' → logprob: -3.2819206714630127
    5. '6' → logprob: -3.5319206714630127
    6. '0' → logprob: -4.281920433044434
    7. '10' → logprob: -4.281920433044434
    8. ' achieve' → logprob: -4.406920433044434
    9. 'e' → logprob: -4.906920433044434
    10. 'ensure' → logprob: -5.031920433044434

Token 598: ' output' (ID: 4733)
  Prédit: ' precision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' precision' → logprob: -1.1714186668395996
    2. ' convergence' → logprob: -1.9214186668395996
    3. 'precision' → logprob: -1.9214186668395996
    4. ' correctness' → logprob: -2.0464186668395996
    5. ' accuracy' → logprob: -2.2964186668395996
    6. ' correct' → logprob: -3.0464186668395996
    7. 'accuracy' → logprob: -3.7964186668395996
    8. ' the' → logprob: -3.9214186668395996
    9. ' high' → logprob: -4.0464186668396
    10. 'con' → logprob: -4.2964186668396

Token 599: ' precision' (ID: 27303)
  Prédit: ' precision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' precision' → logprob: -0.9991592168807983
    2. ' accuracy' → logprob: -1.6241592168807983
    3. 'precision' → logprob: -1.9991592168807983
    4. '       ' → logprob: -2.374159336090088
    5. '.' → logprob: -3.124159336090088
    6. '_precision' → logprob: -3.249159336090088
    7. ':' → logprob: -3.874159336090088
    8. '0' → logprob: -3.999159336090088
    9. 'accuracy' → logprob: -3.999159336090088
    10. ' within' → logprob: -4.624159336090088

Token 600: ' better' (ID: 3432)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051534801721572876
    2. ' while' → logprob: -3.55153489112854
    3. '
' → logprob: -4.301534652709961
    4. '        
' → logprob: -5.426534652709961
    5. 'while' → logprob: -5.926534652709961
    6. ' 
' → logprob: -7.801534652709961
    7. ',' → logprob: -9.176534652709961
    8. '  
' → logprob: -9.176534652709961
    9. '   ' → logprob: -10.176534652709961
    10. '.' → logprob: -10.426534652709961

Token 601: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.023740483447909355
    2. 'than' → logprob: -3.898740530014038
    3. '=' → logprob: -6.023740291595459
    4. '0' → logprob: -7.773740291595459
    5. '1' → logprob: -8.648740768432617
    6. '   ' → logprob: -10.648740768432617
    7. '<' → logprob: -10.648740768432617
    8. ' ' → logprob: -10.898740768432617
    9. ' <' → logprob: -11.148740768432617
    10. '_than' → logprob: -11.273740768432617

Token 602: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004656306933611631
    2. ' ' → logprob: -5.3796563148498535
    3. '0' → logprob: -11.379655838012695
    4. '   ' → logprob: -11.879655838012695
    5. '`' → logprob: -12.379655838012695
    6. '10' → logprob: -12.379655838012695
    7. '9' → logprob: -13.379655838012695
    8. '7' → logprob: -13.504655838012695
    9. '       ' → logprob: -13.879655838012695
    10. '```' → logprob: -14.254655838012695

Token 603: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018613664724398404
    2. ' ' → logprob: -9.2501859664917
    3. '10' → logprob: -10.0001859664917
    4. '0' → logprob: -10.8751859664917
    5. '   ' → logprob: -11.6251859664917
    6. '`' → logprob: -13.0001859664917
    7. '7' → logprob: -13.5626859664917
    8. 'e' → logprob: -13.6251859664917
    9. '```' → logprob: -13.6876859664917
    10. '9' → logprob: -13.9376859664917

Token 604: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4741049110889435
    2. '-' → logprob: -0.9741048812866211
    3. ' -' → logprob: -11.724104881286621
    4. '.' → logprob: -11.974104881286621
    5. '0' → logprob: -12.099104881286621
    6. '-e' → logprob: -12.349104881286621
    7. '1' → logprob: -14.349104881286621
    8. '^-' → logprob: -14.349104881286621
    9. '7' → logprob: -14.974104881286621
    10. '-.' → logprob: -15.349104881286621

Token 605: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.4849443838757e-06
    2. '7' → logprob: -12.500004768371582
    3. ' -' → logprob: -15.000004768371582
    4. '```' → logprob: -16.375003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '8' → logprob: -16.875003814697266
    7. '0' → logprob: -16.875003814697266
    8. 'e' → logprob: -16.875003814697266
    9. '−' → logprob: -17.750003814697266
    10. '9' → logprob: -17.937503814697266

Token 606: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.5630060434341431
    2. '8' → logprob: -0.9380060434341431
    3. '6' → logprob: -3.3130059242248535
    4. '5' → logprob: -7.0630059242248535
    5. '9' → logprob: -7.1880059242248535
    6. '07' → logprob: -7.8130059242248535
    7. '08' → logprob: -8.188006401062012
    8. '10' → logprob: -8.813006401062012
    9. '4' → logprob: -9.438006401062012
    10. '06' → logprob: -9.938006401062012

Token 607: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4146105945110321
    2. '
' → logprob: -1.4146106243133545
    3. ' while' → logprob: -2.7896106243133545
    4. 'while' → logprob: -3.6646106243133545
    5. '        
' → logprob: -5.789610385894775
    6. ',' → logprob: -6.289610385894775
    7. ' 
' → logprob: -6.789610385894775
    8. '\n' → logprob: -7.289610385894775
    9. '  
' → logprob: -7.414610385894775
    10. ',
' → logprob: -7.914610385894775

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05722441524267197
    2. '
' → logprob: -3.4322245121002197
    3. ' while' → logprob: -4.057224273681641
    4. 'while' → logprob: -5.307224273681641
    5. '        
' → logprob: -7.182224273681641
    6. ' 
' → logprob: -9.43222427368164
    7. ',' → logprob: -9.80722427368164
    8. '  
' → logprob: -10.18222427368164
    9. '```' → logprob: -10.93222427368164
    10. '   ' → logprob: -11.18222427368164

Token 609: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01239909790456295
    2. '       ' → logprob: -4.512399196624756
    3. ' while' → logprob: -7.137399196624756
    4. 'for' (adapté à ' for') → logprob: -7.512399196624756
    5. '
' → logprob: -13.012398719787598
    6. '        
' → logprob: -13.512398719787598
    7. '	while' → logprob: -13.637398719787598
    8. ' for' → logprob: -14.137398719787598
    9. 'epsilon' → logprob: -14.262398719787598
    10. 'import' → logprob: -14.387398719787598

Token 610: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.026547132059931755
    2. '_' → logprob: -3.6515471935272217
    3. ' i' → logprob: -9.0265474319458
    4. '_step' → logprob: -9.9015474319458
    5. '_iteration' → logprob: -10.1515474319458
    6. '_iter' → logprob: -11.0265474319458
    7. '_i' → logprob: -11.9015474319458
    8. '_mid' → logprob: -12.1515474319458
    9. ' iteration' → logprob: -13.1515474319458
    10. ' step' → logprob: -13.2765474319458

Token 611: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0002593130338937044
    2. 'in' → logprob: -8.750259399414062
    3. ' ' → logprob: -9.375259399414062
    4. '  ' → logprob: -11.625259399414062
    5. ' _' → logprob: -12.375259399414062
    6. '_' → logprob: -13.625259399414062
    7. ' i' → logprob: -14.625259399414062
    8. 'range' → logprob: -14.750259399414062
    9. '_in' → logprob: -15.250259399414062
    10. ' ,' → logprob: -16.125259399414062

Token 612: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048289015889168
    2. ' range' → logprob: -4.511048316955566
    3. '   ' → logprob: -14.761048316955566
    4. ' ' → logprob: -16.76104736328125
    5. '	range' → logprob: -17.01104736328125
    6. '```' → logprob: -17.76104736328125
    7. '(range' → logprob: -18.01104736328125
    8. '  ' → logprob: -18.51104736328125
    9. '    ' → logprob: -19.13604736328125
    10. '_range' → logprob: -20.01104736328125

Token 613: '(' (ID: 7)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3791494369506836
    2. '60' → logprob: -2.0041494369506836
    3. ' ' → logprob: -2.5041494369506836
    4. '(' → logprob: -3.0041494369506836
    5. '50' → logprob: -3.1291494369506836
    6. '70' → logprob: -5.879149436950684
    7. '80' → logprob: -6.379149436950684
    8. '   ' → logprob: -8.129149436950684
    9. '40' → logprob: -8.754149436950684
    10. '90' → logprob: -9.004149436950684

Token 614: '60' (ID: 1910)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03723118454217911
    2. '60' → logprob: -3.537231206893921
    3. '50' → logprob: -5.287230968475342
    4. '70' → logprob: -6.787230968475342
    5. '80' → logprob: -7.162230968475342
    6. '200' → logprob: -8.4122314453125
    7. '64' → logprob: -9.5372314453125
    8. ' ' → logprob: -9.7872314453125
    9. '75' → logprob: -10.1622314453125
    10. '150' → logprob: -10.2872314453125

Token 615: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25252610445022583
    2. '):' → logprob: -1.502526044845581
    3. '):
' → logprob: -8.00252628326416
    4. '   ' → logprob: -8.75252628326416
    5. ':' → logprob: -10.12752628326416
    6. '       ' → logprob: -10.62752628326416
    7. ' ):
' → logprob: -11.50252628326416
    8. '           ' → logprob: -11.62752628326416
    9. ' ):' → logprob: -12.25252628326416
    10. '):

' → logprob: -12.25252628326416

Token 616: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02829178236424923
    2. ' mid' → logprob: -3.903291702270508
    3. '
' → logprob: -5.528291702270508
    4. 'mid' → logprob: -5.778291702270508
    5. '            
' → logprob: -8.903291702270508
    6. ' 
' → logprob: -9.278291702270508
    7. ' midpoint' → logprob: -9.278291702270508
    8. '    
' → logprob: -9.903291702270508
    9. '_mid' → logprob: -10.028291702270508
    10. '   ' → logprob: -10.028291702270508

Token 617: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5312677621841431
    2. 'mid' → logprob: -1.031267762184143
    3. ' mid' → logprob: -2.9062676429748535
    4. 'm' → logprob: -7.9062676429748535
    5. '   ' → logprob: -8.406268119812012
    6. '       ' → logprob: -9.531268119812012
    7. '_mid' → logprob: -9.906268119812012
    8. ' midpoint' → logprob: -9.906268119812012
    9. '
' → logprob: -10.531268119812012
    10. 'middle' → logprob: -11.031268119812012

Token 618: ' about' (ID: 1078)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05696353316307068
    2. 'mid' → logprob: -3.5569634437561035
    3. ' mid' → logprob: -4.0569634437561035
    4. ' if' → logprob: -5.8069634437561035
    5. '   ' → logprob: -5.9319634437561035
    6. 'if' → logprob: -7.1819634437561035
    7. '
' → logprob: -7.1819634437561035
    8. '       ' → logprob: -7.3069634437561035
    9. ' low' → logprob: -7.5569634437561035
    10. 'while' → logprob: -8.681963920593262

Token 619: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42046865820884705
    2. '60' → logprob: -1.1704686880111694
    3. ' binary' → logprob: -4.545468807220459
    4. 'binary' → logprob: -5.045468807220459
    5. '     ' → logprob: -5.795468807220459
    6. '6' → logprob: -6.045468807220459
    7. '40' → logprob: -6.170468807220459
    8. '   ' → logprob: -6.420468807220459
    9. '50' → logprob: -6.795468807220459
    10. '7' → logprob: -6.920468807220459

Token 620: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0014881966635584831
    2. 'binary' → logprob: -6.626488208770752
    3. ' ' → logprob: -10.251487731933594
    4. 'log' → logprob: -10.376487731933594
    5. '6' → logprob: -10.376487731933594
    6. '40' → logprob: -11.126487731933594
    7. '59' → logprob: -11.626487731933594
    8. '50' → logprob: -11.751487731933594
    9. 'double' → logprob: -12.126487731933594
    10. 'max' → logprob: -12.376487731933594

Token 621: ' iterations' (ID: 59147)
  Prédit: ' iterations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iterations' → logprob: -0.25092005729675293
    2. '       ' → logprob: -3.000920057296753
    3. 'iterations' → logprob: -3.250920057296753
    4. '<|end|>' → logprob: -3.250920057296753
    5. '    ' → logprob: -3.625920057296753
    6. '   ' → logprob: -3.750920057296753
    7. ':' → logprob: -4.125920295715332
    8. ' times' → logprob: -5.125920295715332
    9. '_iterations' → logprob: -5.875920295715332
    10. ' ' → logprob: -6.000920295715332

Token 622: ' good' (ID: 1899)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11994389444589615
    2. ':
' → logprob: -2.619943857192993
    3. '           ' → logprob: -3.244943857192993
    4. '       ' → logprob: -7.994944095611572
    5. '   ' → logprob: -8.119943618774414
    6. ',' → logprob: -8.119943618774414
    7. '<|end|>' → logprob: -8.994943618774414
    8. '):
' → logprob: -9.869943618774414
    9. '               ' → logprob: -10.494943618774414
    10. '=' → logprob: -10.869943618774414

Token 623: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6309276819229126
    2. 'for' → logprob: -1.7559276819229126
    3. ' enough' → logprob: -2.255927562713623
    4. '   ' → logprob: -2.380927562713623
    5. '       ' → logprob: -2.755927562713623
    6. ':' → logprob: -3.630927562713623
    7. ' to' → logprob: -6.380927562713623
    8. 'en' → logprob: -6.630927562713623
    9. 'to' → logprob: -7.005927562713623
    10. '```' → logprob: -7.505927562713623

Token 624: ' double' (ID: 3503)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -1.0443458557128906
    2. ' binary' → logprob: -1.4193458557128906
    3. 'precision' → logprob: -1.4193458557128906
    4. ' precision' → logprob: -2.4193458557128906
    5. '60' → logprob: -3.2943458557128906
    6. ' ' → logprob: -4.669345855712891
    7. ' convergence' → logprob: -4.919345855712891
    8. 'double' → logprob: -5.044345855712891
    9. ' double' → logprob: -5.794345855712891
    10. 'float' → logprob: -6.419345855712891

Token 625: ' precision' (ID: 27303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20332714915275574
    2. '_precision' → logprob: -2.578327178955078
    3. ' precision' → logprob: -3.453327178955078
    4. '   ' → logprob: -3.453327178955078
    5. '    ' → logprob: -4.078327178955078
    6. 'precision' → logprob: -4.703327178955078
    7. '  ' → logprob: -5.453327178955078
    8. ' _' → logprob: -5.703327178955078
    9. ' ' → logprob: -5.953327178955078
    10. '-' → logprob: -6.328327178955078

Token 626: ' binary' (ID: 15600)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8385280966758728
    2. ':' → logprob: -0.9635280966758728
    3. ':
' → logprob: -1.8385281562805176
    4. '       ' → logprob: -3.8385281562805176
    5. ',' → logprob: -5.713528156280518
    6. '   ' → logprob: -6.838528156280518
    7. '):
' → logprob: -8.08852767944336
    8. '=' → logprob: -8.96352767944336
    9. '[' → logprob: -9.33852767944336
    10. '
' → logprob: -9.46352767944336

Token 627: ' search' (ID: 3684)
  Prédit: '_search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.621631383895874
    2. 'search' → logprob: -0.871631383895874
    3. '_' → logprob: -3.496631383895874
    4. ' search' → logprob: -4.246631622314453
    5. ' _' → logprob: -11.246631622314453
    6. '   ' → logprob: -11.496631622314453
    7. ' ' → logprob: -11.621631622314453
    8. '<|end|>' → logprob: -12.496631622314453
    9. '_
' → logprob: -12.996631622314453
    10. '_SEARCH' → logprob: -13.371631622314453

Token 628: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7362879514694214
    2. ':' → logprob: -1.2362879514694214
    3. '           ' → logprob: -1.4862879514694214
    4. '):
' → logprob: -6.361288070678711
    5. '       ' → logprob: -6.986288070678711
    6. '
' → logprob: -7.611288070678711
    7. ',' → logprob: -7.986288070678711
    8. '   ' → logprob: -8.486288070678711
    9. '            
' → logprob: -8.736288070678711
    10. '<|end|>' → logprob: -8.861288070678711

Token 629: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08021509647369385
    2. '
' → logprob: -2.9552149772644043
    3. '       ' → logprob: -3.9552149772644043
    4. ':
' → logprob: -5.455214977264404
    5. ',' → logprob: -7.830214977264404
    6. ':' → logprob: -8.330215454101562
    7. '            
' → logprob: -8.580215454101562
    8. '        
' → logprob: -8.830215454101562
    9. '):
' → logprob: -8.955215454101562
    10. '<|end|>' → logprob: -9.205215454101562

Token 630: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.38710442185401917
    2. ' mid' → logprob: -1.1371043920516968
    3. '           ' → logprob: -9.262104034423828
    4. 'm' → logprob: -9.512104034423828
    5. 'middle' → logprob: -10.387104034423828
    6. ' midpoint' → logprob: -11.012104034423828
    7. ' middle' → logprob: -11.387104034423828
    8. '_mid' → logprob: -13.012104034423828
    9. 'midd' → logprob: -14.512104034423828
    10. ' m' → logprob: -14.512104034423828

Token 631: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38694632053375244
    2. '=' → logprob: -1.1369463205337524
    3. '<|end|>' → logprob: -11.011946678161621
    4. '_' → logprob: -11.261946678161621
    5. ',' → logprob: -11.386946678161621
    6. '_rate' → logprob: -11.761946678161621
    7. ')' → logprob: -11.886946678161621
    8. '=(' → logprob: -12.761946678161621
    9. '           ' → logprob: -13.511946678161621
    10. '=float' → logprob: -13.761946678161621

Token 632: ' (' (ID: 350)
  Prédit: '(low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.1603759378194809
    2. ' (' → logprob: -1.910375952720642
    3. '(high' → logprob: -9.160375595092773
    4. ' low' → logprob: -10.285375595092773
    5. 'low' → logprob: -12.285375595092773
    6. '           ' → logprob: -12.660375595092773
    7. '(lower' → logprob: -13.410375595092773
    8. ' ' → logprob: -13.785375595092773
    9. '(left' → logprob: -14.285375595092773
    10. '   ' → logprob: -15.035375595092773

Token 633: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0001234428636962548
    2. ' low' → logprob: -9.000123023986816
    3. '(low' → logprob: -18.000123977661133
    4. 'high' → logprob: -18.125123977661133
    5. '.low' → logprob: -18.625123977661133
    6. '_low' → logprob: -18.875123977661133
    7. 'Low' → logprob: -20.000123977661133
    8. 'lo' → logprob: -20.500123977661133
    9. '低' → logprob: -21.125123977661133
    10. ' ' → logprob: -21.250123977661133

Token 634: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931471824645996
    2. ' +' → logprob: -0.6931471824645996
    3. ' ' → logprob: -19.193147659301758
    4. ' +
' → logprob: -19.443147659301758
    5. '+
' → logprob: -19.443147659301758
    6. '＋' → logprob: -19.568147659301758
    7. ' plus' → logprob: -20.193147659301758
    8. '```' → logprob: -20.943147659301758
    9. ' ' → logprob: -21.193147659301758
    10. '	' → logprob: -21.318147659301758

Token 635: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.03804229199886322
    2. ' high' → logprob: -3.2880423069000244
    3. '   ' → logprob: -14.413042068481445
    4. ' ' → logprob: -15.663042068481445
    5. '_high' → logprob: -17.663042068481445
    6. '.high' → logprob: -17.788042068481445
    7. '(high' → logprob: -18.163042068481445
    8. 'High' → logprob: -18.288042068481445
    9. '高' → logprob: -18.288042068481445
    10. '           ' → logprob: -18.413042068481445

Token 636: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.980854959692806e-05
    2. ')/' → logprob: -10.000069618225098
    3. ' )' → logprob: -10.625069618225098
    4. '   ' → logprob: -18.000070571899414
    5. '）' → logprob: -19.625070571899414
    6. ' ' → logprob: -20.000070571899414
    7. ' ' → logprob: -20.250070571899414
    8. ')*' → logprob: -20.250070571899414
    9. ']' → logprob: -20.750070571899414
    10. ')
' → logprob: -21.500070571899414

Token 637: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4742696285247803
    2. '/' → logprob: -0.9742696285247803
    3. ' *' → logprob: -8.84926986694336
    4. '*' → logprob: -10.34926986694336
    5. '   ' → logprob: -11.59926986694336
    6. ' ' → logprob: -12.34926986694336
    7. ' ' → logprob: -13.09926986694336
    8. '0' → logprob: -14.47426986694336
    9. '```' → logprob: -15.09926986694336
    10. '	' → logprob: -15.34926986694336

Token 638: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008048642775975168
    2. ' ' → logprob: -7.125804901123047
    3. '   ' → logprob: -15.125804901123047
    4. '```' → logprob: -17.625804901123047
    5. '  ' → logprob: -17.875804901123047
    6. '=' → logprob: -19.375804901123047
    7. '۲' → logprob: -19.375804901123047
    8. '２' → logprob: -19.875804901123047
    9. '
' → logprob: -20.188304901123047
    10. '     ' → logprob: -20.188304901123047

Token 639: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.750031471252441
    4. '```' → logprob: -18.750030517578125
    5. '  ' → logprob: -18.875030517578125
    6. '۲' → logprob: -19.000030517578125
    7. '２' → logprob: -19.687530517578125
    8. 'two' → logprob: -20.500030517578125
    9. '     ' → logprob: -20.812530517578125
    10. '    ' → logprob: -21.000030517578125

Token 640: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5851919054985046
    2. '<|end|>' → logprob: -0.8351919054985046
    3. '<|end|>' → logprob: -6.33519172668457
    4. ')' → logprob: -6.33519172668457
    5. '
' → logprob: -6.46019172668457
    6. '            
' → logprob: -7.08519172668457
    7. 'if' → logprob: -7.08519172668457
    8. '  
' → logprob: -7.58519172668457
    9. ',' → logprob: -7.83519172668457
    10. ' if' → logprob: -7.96019172668457

Token 641: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38826984167099
    2. '
' → logprob: -1.3882699012756348
    3. '<|end|>' → logprob: -3.3882699012756348
    4. ' if' → logprob: -3.5132699012756348
    5. '       ' → logprob: -5.763269901275635
    6. 'if' → logprob: -6.388269901275635
    7. '            
' → logprob: -6.513269901275635
    8. '<|end|>' → logprob: -7.388269901275635
    9. ' 
' → logprob: -8.138269424438477
    10. '  
' → logprob: -8.263269424438477

Token 642: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0030026622116565704
    2. '           ' → logprob: -6.503002643585205
    3. ' if' → logprob: -6.503002643585205
    4. '	if' → logprob: -16.128002166748047
    5. 'If' → logprob: -16.503002166748047
    6. ';if' → logprob: -17.753002166748047
    7. '		' → logprob: -18.378002166748047
    8. '	       ' → logprob: -18.628002166748047
    9. '
' → logprob: -18.628002166748047
    10. '            
' → logprob: -19.128002166748047

Token 643: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0067154900170862675
    2. ' check' → logprob: -5.006715297698975
    3. '	check' → logprob: -16.506715774536133
    4. 'not' → logprob: -17.506715774536133
    5. '(check' → logprob: -18.256715774536133
    6. ' not' → logprob: -18.381715774536133
    7. ' ' → logprob: -18.756715774536133
    8. '   ' → logprob: -19.506715774536133
    9. ' ' → logprob: -19.631715774536133
    10. '_check' → logprob: -19.756715774536133

Token 644: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -2.9160102712921798e-05
    2. '(' → logprob: -10.500029563903809
    3. ' (' → logprob: -13.375029563903809
    4. '(m' → logprob: -17.250028610229492
    5. '(min' → logprob: -18.750028610229492
    6. '(mi' → logprob: -19.000028610229492
    7. '(low' → logprob: -19.375028610229492
    8. '(max' → logprob: -19.750028610229492
    9. '[mid' → logprob: -19.750028610229492
    10. '(
' → logprob: -20.375028610229492

Token 645: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.049405090510845184
    2. '):
' → logprob: -3.049405097961426
    3. ' ):' → logprob: -7.174405097961426
    4. '):
' → logprob: -10.424405097961426
    5. ' ):
' → logprob: -11.549405097961426
    6. ')' → logprob: -11.924405097961426
    7. ':' → logprob: -12.174405097961426
    8. ' ' → logprob: -16.17440414428711
    9. '):

' → logprob: -16.54940414428711
    10. '}:' → logprob: -17.04940414428711

Token 646: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23593951761722565
    2. ' high' → logprob: -1.7359395027160645
    3. ' low' → logprob: -3.8609395027160645
    4. 'high' → logprob: -4.8609395027160645
    5. 'low' → logprob: -5.8609395027160645
    6. '           ' → logprob: -6.6109395027160645
    7. '
' → logprob: -8.235939979553223
    8. '                
' → logprob: -8.610939979553223
    9. '   ' → logprob: -9.610939979553223
    10. '(high' → logprob: -9.735939979553223

Token 647: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.0005530327325686812
    2. ' high' → logprob: -7.500553131103516
    3. '_high' → logprob: -18.250553131103516
    4. 'High' → logprob: -19.375553131103516
    5. '.high' → logprob: -19.750553131103516
    6. '
' → logprob: -19.750553131103516
    7. '(high' → logprob: -20.125553131103516
    8. '           ' → logprob: -21.000553131103516
    9. 'hi' → logprob: -21.125553131103516
    10. '高' → logprob: -21.125553131103516

Token 648: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602243334054947
    2. '=' → logprob: -1.9102243185043335
    3. ' ' → logprob: -16.16022491455078
    4. '=end' → logprob: -17.16022491455078
    5. '<|end|>' → logprob: -17.66022491455078
    6. ')' → logprob: -18.66022491455078
    7. '＝' → logprob: -18.91022491455078
    8. '=cut' → logprob: -19.03522491455078
    9. ',' → logprob: -19.91022491455078
    10. '=line' → logprob: -20.16022491455078

Token 649: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.01416350994259119
    2. ' mid' → logprob: -4.264163494110107
    3. '[mid' → logprob: -18.264163970947266
    4. '(mid' → logprob: -18.514163970947266
    5. 'm' → logprob: -19.514163970947266
    6. '_mid' → logprob: -20.014163970947266
    7. '
' → logprob: -20.639163970947266
    8. 'middle' → logprob: -21.764163970947266
    9. '.mid' → logprob: -22.139163970947266
    10. 'mi' → logprob: -22.264163970947266

Token 650: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16959428787231445
    2. '
' → logprob: -2.2945942878723145
    3. ' else' → logprob: -2.9195942878723145
    4. '           ' → logprob: -7.2945942878723145
    5. ' 
' → logprob: -7.6695942878723145
    6. '  
' → logprob: -10.419593811035156
    7. '            
' → logprob: -11.169593811035156
    8. '<|end|>' → logprob: -11.419593811035156
    9. '       ' → logprob: -11.794593811035156
    10. '#else' → logprob: -12.294593811035156

Token 651: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03478018939495087
    2. 'else' → logprob: -3.409780263900757
    3. ' else' → logprob: -6.784780025482178
    4. '	       ' → logprob: -13.284780502319336
    5. '		' → logprob: -14.659780502319336
    6. '       ' → logprob: -15.409780502319336
    7. '          ' → logprob: -15.659780502319336
    8. '               ' → logprob: -16.159780502319336
    9. '	else' → logprob: -16.784780502319336
    10. '            ' → logprob: -17.159780502319336

Token 652: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.01969670131802559
    2. ' else' → logprob: -4.0196967124938965
    3. '           ' → logprob: -6.5196967124938965
    4. '       ' → logprob: -9.644696235656738
    5. '	else' → logprob: -12.644696235656738
    6. '	       ' → logprob: -13.144696235656738
    7. '        ' → logprob: -14.769696235656738
    8. '   ' → logprob: -15.144696235656738
    9. '		' → logprob: -15.144696235656738
    10. '_else' → logprob: -16.019697189331055

Token 653: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008006958523765206
    2. ':' → logprob: -8.125801086425781
    3. ':
' → logprob: -9.000801086425781
    4. '	           ' → logprob: -9.000801086425781
    5. '           ' → logprob: -9.500801086425781
    6. ' low' → logprob: -10.625801086425781
    7. 'low' → logprob: -10.625801086425781
    8. '              ' → logprob: -10.750801086425781
    9. '			' → logprob: -10.875801086425781
    10. '		       ' → logprob: -11.000801086425781

Token 654: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14464280009269714
    2. ' low' → logprob: -2.6446428298950195
    3. 'low' → logprob: -2.7696428298950195
    4. '   ' → logprob: -8.14464282989502
    5. '           ' → logprob: -8.39464282989502
    6. '(low' → logprob: -8.64464282989502
    7. '	           ' → logprob: -10.26964282989502
    8. '              ' → logprob: -10.39464282989502
    9. '                ' → logprob: -10.51964282989502
    10. '```' → logprob: -10.76964282989502

Token 655: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.00038300611777231097
    2. ' low' → logprob: -7.875382900238037
    3. '               ' → logprob: -13.000383377075195
    4. '(low' → logprob: -15.125383377075195
    5. '-low' → logprob: -16.625383377075195
    6. '_low' → logprob: -16.750383377075195
    7. 'Low' → logprob: -16.875383377075195
    8. '.low' → logprob: -16.875383377075195
    9. '   ' → logprob: -17.250383377075195
    10. '           ' → logprob: -17.500383377075195

Token 656: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196768581867218
    2. '=' → logprob: -2.811967611312866
    3. ' +=' → logprob: -17.936967849731445
    4. ' ' → logprob: -18.436967849731445
    5. '	' → logprob: -20.311967849731445
    6. ',' → logprob: -20.936967849731445
    7. ' ' → logprob: -21.186967849731445
    8. '＝' → logprob: -21.686967849731445
    9. ')' → logprob: -21.936967849731445
    10. '+=' → logprob: -22.561967849731445

Token 657: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.20141461491584778
    2. 'mid' → logprob: -1.7014145851135254
    3. '(mid' → logprob: -14.326415061950684
    4. '_mid' → logprob: -15.201415061950684
    5. '[mid' → logprob: -15.701415061950684
    6. ' midpoint' → logprob: -16.076414108276367
    7. '.mid' → logprob: -16.826414108276367
    8. ' ' → logprob: -18.076414108276367
    9. ' mids' → logprob: -18.576414108276367
    10. ' middle' → logprob: -19.076414108276367

Token 658: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7951017022132874
    2. ' 
' → logprob: -2.0451016426086426
    3. '           ' → logprob: -2.1701016426086426
    4. ' ' → logprob: -2.6701016426086426
    5. ' else' → logprob: -3.0451016426086426
    6. '_' → logprob: -3.2951016426086426
    7. '        ' → logprob: -3.4201016426086426
    8. '    ' → logprob: -3.6701016426086426
    9. '<|end|>' → logprob: -4.170101642608643
    10. 'return' → logprob: -4.920101642608643

Token 659: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3829893469810486
    2. ' 
' → logprob: -1.7579894065856934
    3. 'return' → logprob: -3.2579894065856934
    4. '        
' → logprob: -3.3829894065856934
    5. ' else' → logprob: -4.632989406585693
    6. ' return' → logprob: -4.632989406585693
    7. '_' → logprob: -4.882989406585693
    8. '   ' → logprob: -5.007989406585693
    9. '    
' → logprob: -5.132989406585693
    10. '           ' → logprob: -5.382989406585693

Token 660: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012178556062281132
    2. '       ' → logprob: -6.751217842102051
    3. ' return' → logprob: -10.00121784210205
    4. '   ' → logprob: -13.00121784210205
    5. '	return' → logprob: -18.126218795776367
    6. '```' → logprob: -18.376218795776367
    7. 'result' → logprob: -19.001218795776367
    8. '
' → logprob: -19.626218795776367
    9. ':return' → logprob: -19.751218795776367
    10. '{return' → logprob: -19.876218795776367

Token 661: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.038413241505622864
    2. ' high' → logprob: -3.5384132862091064
    3. '(high' → logprob: -4.788413047790527
    4. ' (' → logprob: -8.163413047790527
    5. 'low' → logprob: -11.788413047790527
    6. '(low' → logprob: -13.038413047790527
    7. ' low' → logprob: -13.663413047790527
    8. '/high' → logprob: -13.913413047790527
    9. 'hi' → logprob: -14.538413047790527
    10. 'float' → logprob: -14.538413047790527

Token 662: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 663: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 664: ' Input' (ID: 10090)
  Prédit: ' Simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Simple' → logprob: -1.4150922298431396
    2. ' Manual' → logprob: -1.6650922298431396
    3. ' Constant' → logprob: -2.0400922298431396
    4. ' Pump' → logprob: -2.5400922298431396
    5. ' No' → logprob: -2.6650922298431396
    6. ' Direct' → logprob: -2.9150922298431396
    7. ' Tank' → logprob: -3.2900922298431396
    8. ' Water' → logprob: -4.040092468261719
    9. ' Test' → logprob: -4.290092468261719
    10. ' System' → logprob: -4.290092468261719

Token 665: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.16926270723342896
    2. 'Handler' → logprob: -2.419262647628784
    3. 'Parser' → logprob: -2.919262647628784
    4. 'Processor' → logprob: -5.044262886047363
    5. 'Data' → logprob: -5.544262886047363
    6. ':' → logprob: -7.419262886047363
    7. 'Stream' → logprob: -7.669262886047363
    8. 'Output' → logprob: -7.794262886047363
    9. 'Provider' → logprob: -8.419262886047363
    10. 'Buffer' → logprob: -9.419262886047363

Token 666: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021115384995937347
    2. '(' → logprob: -4.521115303039551
    3. ':
' → logprob: -4.646115303039551
    4. '(Abstract' → logprob: -8.64611530303955
    5. '(S' → logprob: -8.64611530303955
    6. '(object' → logprob: -11.02111530303955
    7. ':

' → logprob: -11.02111530303955
    8. '():' → logprob: -12.02111530303955
    9. '(Parser' → logprob: -12.02111530303955
    10. '<|end|>' → logprob: -12.14611530303955

Token 667: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000793185958173126
    2. '    
' → logprob: -8.25079345703125
    3. ' def' → logprob: -8.37579345703125
    4. 'def' → logprob: -8.50079345703125
    5. '    ' → logprob: -10.25079345703125
    6. '<|end|>' → logprob: -10.87579345703125
    7. '  ' → logprob: -11.75079345703125
    8. '```' → logprob: -11.87579345703125
    9. 'class' → logprob: -12.12579345703125
    10. ':' → logprob: -12.12579345703125

Token 668: ' """' (ID: 9280)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4119091331958771
    2. 'def' → logprob: -1.6619091033935547
    3. '   ' → logprob: -1.9119091033935547
    4. '	def' → logprob: -11.161909103393555
    5. 'class' → logprob: -11.661909103393555
    6. '@' → logprob: -11.661909103393555
    7. ' @' → logprob: -11.661909103393555
    8. ' class' → logprob: -14.786909103393555
    9. 'staticmethod' → logprob: -15.661909103393555
    10. '@dat' → logprob: -15.786909103393555

Token 669: 'Par' (ID: 1586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02226080745458603
    2. ' def' → logprob: -4.022260665893555
    3. 'class' → logprob: -5.522260665893555
    4. '   ' → logprob: -9.647260665893555
    5. '"""' → logprob: -11.147260665893555
    6. 'staticmethod' → logprob: -11.147260665893555
    7. '@' → logprob: -11.772260665893555
    8. 'classmethod' → logprob: -13.272260665893555
    9. '	def' → logprob: -13.772260665893555
    10. '```' → logprob: -14.272260665893555

Token 670: 'ses' (ID: 21866)
  Prédit: 'ses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ses' → logprob: -0.5107443928718567
    2. 'ser' → logprob: -1.010744333267212
    3. 'se' → logprob: -3.385744333267212
    4. 't' → logprob: -7.135744571685791
    5. 'ts' → logprob: -7.135744571685791
    6. 'sers' → logprob: -8.510744094848633
    7. 'es' → logprob: -9.135744094848633
    8. 's' → logprob: -9.135744094848633
    9. 'sed' → logprob: -9.760744094848633
    10. '```' → logprob: -10.010744094848633

Token 671: ' multiple' (ID: 7598)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8722688555717468
    2. ' input' → logprob: -0.9972688555717468
    3. '<|end|>' → logprob: -2.2472689151763916
    4. ' lines' → logprob: -3.2472689151763916
    5. ' the' → logprob: -3.2472689151763916
    6. 'the' → logprob: -4.7472686767578125
    7. 'lines' → logprob: -5.4972686767578125
    8. ' inputs' → logprob: -6.1222686767578125
    9. '<|end|>' → logprob: -6.2472686767578125
    10. '```' → logprob: -6.3722686767578125

Token 672: ' datasets' (ID: 57711)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.511639952659607
    2. ' schedules' → logprob: -1.511639952659607
    3. 'lines' → logprob: -1.636639952659607
    4. ' test' → logprob: -1.636639952659607
    5. 'test' → logprob: -2.7616400718688965
    6. 's' → logprob: -2.7616400718688965
    7. 'schedule' → logprob: -4.2616400718688965
    8. 'Schedule' → logprob: -5.1366400718688965
    9. 'line' → logprob: -5.2616400718688965
    10. 'day' → logprob: -5.3866400718688965

Token 673: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5221794843673706
    2. ' from' → logprob: -1.3971794843673706
    3. ':' → logprob: -2.39717960357666
    4. ' and' → logprob: -3.89717960357666
    5. '<|end|>' → logprob: -4.39717960357666
    6. ' for' → logprob: -4.64717960357666
    7. '   ' → logprob: -4.89717960357666
    8. 'and' → logprob: -5.39717960357666
    9. '<|end|>' → logprob: -5.77217960357666
    10. ' to' → logprob: -6.14717960357666

Token 674: ' stdin' (ID: 75143)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.25205323100090027
    2. ' sys' → logprob: -1.5020532608032227
    3. 'stdin' → logprob: -9.752053260803223
    4. 'input' → logprob: -10.002053260803223
    5. ' input' → logprob: -11.627053260803223
    6. 'the' → logprob: -12.252053260803223
    7. ' the' → logprob: -13.252053260803223
    8. 'standard' → logprob: -13.752053260803223
    9. '(sys' → logprob: -14.002053260803223
    10. '=sys' → logprob: -14.127053260803223

Token 675: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0177327394485474
    2. ' and' → logprob: -1.0177327394485474
    3. '"""' → logprob: -2.767732620239258
    4. '.' → logprob: -3.267732620239258
    5. '"""
' → logprob: -3.517732620239258
    6. ':' → logprob: -3.642732620239258
    7. 'and' → logprob: -4.017732620239258
    8. ')' → logprob: -4.267732620239258
    9. '):' → logprob: -4.392732620239258
    10. ':
' → logprob: -4.517732620239258

Token 676: ' Schedule' (ID: 36691)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.42117762565612793
    2. ' the' → logprob: -1.671177625656128
    3. 'water' → logprob: -3.421177625656128
    4. ' water' → logprob: -4.171177864074707
    5. 'a' → logprob: -4.171177864074707
    6. 'each' → logprob: -5.046177864074707
    7. ' testing' → logprob: -5.046177864074707
    8. 'def' → logprob: -5.171177864074707
    9. 'cons' → logprob: -5.171177864074707
    10. ' scheduling' → logprob: -5.421177864074707

Token 677: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -0.003055308014154434
    2. 'Parser' → logprob: -6.128055095672607
    3. 's' → logprob: -8.253055572509766
    4. '   ' → logprob: -8.753055572509766
    5. 'Tables' → logprob: -9.128055572509766
    6. 'Input' → logprob: -9.378055572509766
    7. 'Reader' → logprob: -9.503055572509766
    8. ' and' → logprob: -10.128055572509766
    9. ' ' → logprob: -10.378055572509766
    10. ':' → logprob: -10.628055572509766

Token 678: '(s' (ID: 1858)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6360178589820862
    2. ':' → logprob: -1.1360177993774414
    3. ':
' → logprob: -2.6360177993774414
    4. ' and' → logprob: -2.7610177993774414
    5. '):' → logprob: -5.386017799377441
    6. '.' → logprob: -6.386017799377441
    7. '
' → logprob: -6.386017799377441
    8. '):
' → logprob: -6.511017799377441
    9. ',' → logprob: -6.636017799377441
    10. 'Parser' → logprob: -7.261017799377441

Token 679: ').' (ID: 741)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19368278980255127
    2. ')' → logprob: -1.9436827898025513
    3. '):
' → logprob: -3.4436826705932617
    4. '):

' → logprob: -7.818682670593262
    5. '   ' → logprob: -9.318682670593262
    6. ')
' → logprob: -9.443682670593262
    7. ' and' → logprob: -9.443682670593262
    8. ').' → logprob: -9.943682670593262
    9. ',' → logprob: -9.943682670593262
    10. ')">' → logprob: -10.318682670593262

Token 680: '"""

' (ID: 34508)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12842583656311035
    2. '   ' → logprob: -2.1284258365631104
    3. '    
' → logprob: -7.128425598144531
    4. '```' → logprob: -7.878425598144531
    5. 'class' → logprob: -9.253425598144531
    6. '"""' → logprob: -9.378425598144531
    7. '<|end|>' → logprob: -9.378425598144531
    8. '"""
' → logprob: -11.628425598144531
    9. ')' → logprob: -11.628425598144531
    10. '
' → logprob: -12.003425598144531

Token 681: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.300506591796875
    2. '   ' → logprob: -1.550506591796875
    3. 'def' → logprob: -3.050506591796875
    4. 'class' → logprob: -10.300506591796875
    5. '	def' → logprob: -10.800506591796875
    6. ' class' → logprob: -11.050506591796875
    7. ' indentation' → logprob: -12.175506591796875
    8. '```' → logprob: -12.925506591796875
    9. ' ind' → logprob: -13.550506591796875
    10. 'indent' → logprob: -14.300506591796875

Token 682: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.6934557505883276e-05
    2. '@' (adapté à ' @') → logprob: -10.250057220458984
    3. ' def' → logprob: -10.750057220458984
    4. '   ' → logprob: -17.500057220458984
    5. ' @' → logprob: -19.500057220458984
    6. 'class' → logprob: -19.875057220458984
    7. '	def' → logprob: -20.875057220458984
    8. '@property' → logprob: -21.375057220458984
    9. '__' → logprob: -22.375057220458984
    10. 'de' → logprob: -22.500057220458984

Token 683: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -8.77627644513268e-06
    2. 'classmethod' → logprob: -11.750008583068848
    3. 'static' → logprob: -14.000008583068848
    4. 'property' → logprob: -20.625009536743164
    5. ' static' → logprob: -20.625009536743164
    6. 'dat' → logprob: -21.750009536743164
    7. 'abstract' → logprob: -24.500009536743164
    8. 'typing' → logprob: -26.125009536743164
    9. 'Static' → logprob: -26.375009536743164
    10. 'stat' → logprob: -26.500009536743164

Token 684: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033046200405806303
    2. '
' → logprob: -6.253304481506348
    3. '   ' → logprob: -6.753304481506348
    4. ' def' → logprob: -8.503304481506348
    5. '	def' → logprob: -12.878304481506348
    6. ':def' → logprob: -14.003304481506348
    7. '(def' → logprob: -14.253304481506348
    8. '    
' → logprob: -14.753304481506348
    9. '```' → logprob: -15.753304481506348
    10. '\' → logprob: -15.878304481506348

Token 685: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00012094692647224292
    2. ' def' → logprob: -9.500121116638184
    3. '
' → logprob: -10.375121116638184
    4. '   ' → logprob: -11.125121116638184
    5. '	def' → logprob: -16.500120162963867
    6. '```' → logprob: -18.500120162963867
    7. '  ' → logprob: -19.250120162963867
    8. 'de' → logprob: -19.250120162963867
    9. ':def' → logprob: -19.375120162963867
    10. '    
' → logprob: -19.375120162963867

Token 686: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.1472419600977446e-06
    2. ' def' → logprob: -13.750000953674316
    3. '   ' → logprob: -20.125001907348633
    4. '
' → logprob: -22.375001907348633
    5. '	def' → logprob: -22.375001907348633
    6. '  ' → logprob: -23.750001907348633
    7. 'read' → logprob: -23.875001907348633
    8. 'from' → logprob: -24.375001907348633
    9. ' ' → logprob: -24.500001907348633
    10. '    
' → logprob: -25.250001907348633

Token 687: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.252003937959671
    2. 'read' → logprob: -1.5020039081573486
    3. ' parse' → logprob: -10.25200366973877
    4. 'from' → logprob: -10.50200366973877
    5. ' read' → logprob: -12.37700366973877
    6. 'def' → logprob: -12.50200366973877
    7. '_parse' → logprob: -13.50200366973877
    8. '_read' → logprob: -14.00200366973877
    9. 'next' → logprob: -14.00200366973877
    10. 'input' → logprob: -14.87700366973877

Token 688: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1727285087108612
    2. '_line' → logprob: -2.5477285385131836
    3. '()' → logprob: -3.0477285385131836
    4. '(line' → logprob: -4.422728538513184
    5. '(lines' → logprob: -5.172728538513184
    6. '(stdin' → logprob: -5.172728538513184
    7. '():
' → logprob: -5.797728538513184
    8. '(input' → logprob: -5.922728538513184
    9. '_schedule' → logprob: -6.797728538513184
    10. '_input' → logprob: -6.922728538513184

Token 689: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.009619501419365406
    2. '()' → logprob: -5.50961971282959
    3. '(' → logprob: -5.88461971282959
    4. '():
' → logprob: -7.38461971282959
    5. '(sys' → logprob: -7.50961971282959
    6. '(stdin' → logprob: -7.63461971282959
    7. '(input' → logprob: -8.13461971282959
    8. ':' → logprob: -8.25961971282959
    9. '(lines' → logprob: -9.13461971282959
    10. '(stream' → logprob: -9.25961971282959

Token 690: ' Iterator' (ID: 41994)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0008378617349080741
    2. 'Iterator' → logprob: -7.250837802886963
    3. 'Tuple' → logprob: -9.000838279724121
    4. 'None' → logprob: -13.250838279724121
    5. '[List' → logprob: -13.500838279724121
    6. ' List' → logprob: -13.875838279724121
    7. 'list' → logprob: -15.625838279724121
    8. 'Iterable' → logprob: -15.750838279724121
    9. 'Schedule' → logprob: -15.875838279724121
    10. 'int' → logprob: -16.625837326049805

Token 691: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0036349925212562084
    2. '[List' → logprob: -5.628634929656982
    3. '[
' → logprob: -10.75363540649414
    4. '[int' → logprob: -12.62863540649414
    5. ':' → logprob: -12.75363540649414
    6. '[[' → logprob: -13.25363540649414
    7. ':
' → logprob: -13.37863540649414
    8. '[(' → logprob: -13.62863540649414
    9. '[s' → logprob: -14.00363540649414
    10. '[:' → logprob: -15.00363540649414

Token 692: 'Schedule' (ID: 25891)
  Prédit: 'Schedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Schedule' → logprob: -0.00011772842844948173
    2. 'Tuple' → logprob: -9.125117301940918
    3. 'List' → logprob: -11.750117301940918
    4. ' Schedule' → logprob: -14.125117301940918
    5. 'str' → logprob: -17.250118255615234
    6. ''S' → logprob: -17.875118255615234
    7. '[' → logprob: -18.000118255615234
    8. 'schedule' → logprob: -18.000118255615234
    9. '   ' → logprob: -18.375118255615234
    10. ''' → logprob: -18.375118255615234

Token 693: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -0.26075834035873413
    2. ']:' → logprob: -2.135758399963379
    3. ']:
' → logprob: -2.385758399963379
    4. '[' → logprob: -4.135758399963379
    5. '[List' → logprob: -7.010758399963379
    6. '[int' → logprob: -7.135758399963379
    7. '[]' → logprob: -7.510758399963379
    8. 'List' → logprob: -8.385758399963379
    9. ':' → logprob: -8.760758399963379
    10. ']' → logprob: -8.885758399963379

Token 694: ']:
' (ID: 22152)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5284152626991272
    2. '():
' → logprob: -1.2784152030944824
    3. ']:' → logprob: -2.6534152030944824
    4. ':' → logprob: -3.4034152030944824
    5. ']:
' → logprob: -4.278415203094482
    6. '[' → logprob: -4.778415203094482
    7. ':
' → logprob: -5.278415203094482
    8. '[int' → logprob: -8.02841567993164
    9. '):' → logprob: -8.65341567993164
    10. '():
' → logprob: -8.65341567993164

Token 695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003757924772799015
    2. '   ' → logprob: -6.503757953643799
    3. '```' → logprob: -6.878757953643799
    4. 'while' → logprob: -7.128757953643799
    5. ' while' → logprob: -8.12875747680664
    6. 'import' → logprob: -10.12875747680664
    7. 'line' → logprob: -11.12875747680664
    8. ':' → logprob: -11.25375747680664
    9. ' lines' → logprob: -11.25375747680664
    10. 'input' → logprob: -11.50375747680664

Token 696: ' lines' (ID: 8698)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05664154514670372
    2. 'for' → logprob: -3.3066415786743164
    3. ' while' → logprob: -4.056641578674316
    4. ' for' → logprob: -7.681641578674316
    5. 'line' → logprob: -8.181641578674316
    6. 'lines' (adapté à ' lines') → logprob: -8.681641578674316
    7. '       ' → logprob: -9.056641578674316
    8. ' lines' → logprob: -9.931641578674316
    9. '   ' → logprob: -10.556641578674316
    10. '```' → logprob: -11.681641578674316

Token 697: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16095173358917236
    2. ' =' → logprob: -1.9109517335891724
    3. '=sys' → logprob: -7.660951614379883
    4. '   ' → logprob: -9.160951614379883
    5. '=[]' → logprob: -9.910951614379883
    6. '=line' → logprob: -10.910951614379883
    7. '.' → logprob: -11.160951614379883
    8. '()' → logprob: -11.285951614379883
    9. '=input' → logprob: -11.785951614379883
    10. ' ' → logprob: -11.910951614379883

Token 698: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3187958300113678
    2. '(sys' → logprob: -1.3187958002090454
    3. 'iter' → logprob: -5.693795680999756
    4. ' sys' → logprob: -6.818795680999756
    5. '(iter' → logprob: -6.943795680999756
    6. ' iter' → logprob: -9.943796157836914
    7. '[' → logprob: -11.318796157836914
    8. ' (' → logprob: -11.443796157836914
    9. 'map' → logprob: -11.693796157836914
    10. '(map' → logprob: -12.443796157836914

Token 699: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.7120533811976202e-05
    2. '.' → logprob: -11.375017166137695
    3. 'stdin' → logprob: -12.375017166137695
    4. '.stdout' → logprob: -13.875017166137695
    5. '.std' → logprob: -15.625017166137695
    6. '(stdin' → logprob: -16.625017166137695
    7. ' stdin' → logprob: -17.125017166137695
    8. '.argv' → logprob: -17.500017166137695
    9. '.readline' → logprob: -18.125017166137695
    10. '.__' → logprob: -18.125017166137695

Token 700: '
' (ID: 198)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004287096206098795
    2. '.readlines' → logprob: -5.504287242889404
    3. '.' → logprob: -8.504286766052246
    4. '.read' → logprob: -12.754286766052246
    5. '
' → logprob: -14.004286766052246
    6. ' readline' → logprob: -14.254286766052246
    7. '   ' → logprob: -14.504286766052246
    8. 'read' → logprob: -14.879286766052246
    9. '.stdin' → logprob: -15.504286766052246
    10. '.buffer' → logprob: -16.129287719726562

Token 701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025969420094043016
    2. ' for' → logprob: -6.127596855163574
    3. 'for' → logprob: -8.627596855163574
    4. '        
' → logprob: -9.252596855163574
    5. ' while' → logprob: -9.627596855163574
    6. 'while' → logprob: -10.877596855163574
    7. '   ' → logprob: -10.877596855163574
    8. '<|end|>' → logprob: -12.252596855163574
    9. ' ' → logprob: -12.502596855163574
    10. ',' → logprob: -12.752596855163574

Token 702: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10369285196065903
    2. 'while' (adapté à ' while') → logprob: -2.3536927700042725
    3. 'line' → logprob: -6.353693008422852
    4. '       ' → logprob: -6.978693008422852
    5. ' for' → logprob: -7.478693008422852
    6. 'next' → logprob: -9.353693008422852
    7. ' while' → logprob: -9.478693008422852
    8. '   ' → logprob: -10.603693008422852
    9. 'first' → logprob: -10.603693008422852
    10. 'lines' → logprob: -11.603693008422852

Token 703: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.038162559270858765
    2. ' True' → logprob: -3.2881624698638916
    3. '(True' → logprob: -9.038162231445312
    4. '
' → logprob: -13.538162231445312
    5. '   ' → logprob: -14.788162231445312
    6. 'true' → logprob: -15.163162231445312
    7. '=True' → logprob: -15.413162231445312
    8. ' ' → logprob: -16.163162231445312
    9. 'TRUE' → logprob: -18.413162231445312
    10. 'Tr' → logprob: -18.538162231445312

Token 704: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9378563165664673
    2. '           ' → logprob: -0.9378563165664673
    3. '       ' → logprob: -1.8128563165664673
    4. '.readline' → logprob: -3.4378561973571777
    5. ':
' → logprob: -4.437856197357178
    6. ' line' → logprob: -6.062856197357178
    7. ',' → logprob: -6.562856197357178
    8. 'line' → logprob: -7.062856197357178
    9. '<|end|>' → logprob: -7.562856197357178
    10. ' readline' → logprob: -7.812856197357178

Token 705: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28359025716781616
    2. '       ' → logprob: -1.658590316772461
    3. ' line' → logprob: -3.033590316772461
    4. 'line' → logprob: -5.033590316772461
    5. '   ' → logprob: -7.283590316772461
    6. ' try' → logprob: -7.908590316772461
    7. 'try' → logprob: -7.908590316772461
    8. '	line' → logprob: -9.283590316772461
    9. '(line' → logprob: -9.908590316772461
    10. '_line' → logprob: -10.408590316772461

Token 706: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0014931997284293175
    2. 'header' → logprob: -6.751492977142334
    3. 'try' → logprob: -8.751493453979492
    4. '           ' → logprob: -9.376493453979492
    5. ' line' → logprob: -9.626493453979492
    6. 'raw' → logprob: -11.751493453979492
    7. 'n' → logprob: -12.876493453979492
    8. 'count' → logprob: -13.001493453979492
    9. 'length' → logprob: -14.876493453979492
    10. 'first' → logprob: -15.251493453979492

Token 707: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014702558517456
    2. '=' → logprob: -1.7014702558517456
    3. '=line' → logprob: -9.826470375061035
    4. 's' → logprob: -13.576470375061035
    5. 'line' → logprob: -13.951470375061035
    6. '.' → logprob: -15.951470375061035
    7. 'strip' → logprob: -16.32646942138672
    8. '.readline' → logprob: -16.45146942138672
    9. '.=' → logprob: -16.57646942138672
    10. '=
' → logprob: -16.57646942138672

Token 708: ' ''
' (ID: 25366)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.051125649362802505
    2. 'next' → logprob: -3.0511257648468018
    3. ' lines' → logprob: -6.176125526428223
    4. ' next' → logprob: -7.801125526428223
    5. 'line' → logprob: -10.801125526428223
    6. '(lines' → logprob: -10.926125526428223
    7. 'sys' → logprob: -11.926125526428223
    8. '(next' → logprob: -13.301125526428223
    9. '	lines' → logprob: -15.551125526428223
    10. '-lines' → logprob: -16.42612648010254

Token 709: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7876207232475281
    2. ' =' → logprob: -0.7876207232475281
    3. '           ' → logprob: -2.912620782852173
    4. '=line' → logprob: -3.537620782852173
    5. 'line' → logprob: -5.287620544433594
    6. ' line' → logprob: -6.662620544433594
    7. '.readline' → logprob: -9.037620544433594
    8. '(line' → logprob: -9.412620544433594
    9. '               ' → logprob: -10.037620544433594
    10. 'while' → logprob: -10.662620544433594

Token 710: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.15338343381881714
    2. 'while' (adapté à ' while') → logprob: -3.028383493423462
    3. 'try' → logprob: -3.278383493423462
    4. ' line' → logprob: -3.403383493423462
    5. '           ' → logprob: -3.903383493423462
    6. ' while' → logprob: -6.653383255004883
    7. '
' → logprob: -7.528383255004883
    8. 'for' → logprob: -7.778383255004883
    9. ' try' → logprob: -8.153383255004883
    10. '            
' → logprob: -10.028383255004883

Token 711: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.011722448281943798
    2. 'not' → logprob: -5.011722564697266
    3. ' line' → logprob: -5.511722564697266
    4. ' not' → logprob: -7.136722564697266
    5. '(line' → logprob: -9.511722564697266
    6. 'len' → logprob: -9.636722564697266
    7. 'True' → logprob: -11.761722564697266
    8. '(not' → logprob: -12.011722564697266
    9. ' True' → logprob: -13.011722564697266
    10. '#line' → logprob: -13.386722564697266

Token 712: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.569697380065918
    2. '==' → logprob: -0.944697380065918
    3. '.' → logprob: -3.444697380065918
    4. ':=' → logprob: -4.819697380065918
    5. '=' → logprob: -5.569697380065918
    6. 'strip' → logprob: -7.194697380065918
    7. ' ==' → logprob: -7.194697380065918
    8. '().' → logprob: -8.944697380065918
    9. '()==' → logprob: -11.319697380065918
    10. ' :=' → logprob: -11.819697380065918

Token 713: '()' (ID: 416)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9396341443061829
    2. '()' → logprob: -1.189634084701538
    3. '()==' → logprob: -1.189634084701538
    4. ' ==' → logprob: -7.689634323120117
    5. '=' → logprob: -9.314634323120117
    6. '===' → logprob: -11.439634323120117
    7. ')==' → logprob: -13.689634323120117
    8. ']==' → logprob: -13.814634323120117
    9. '()=="' → logprob: -13.939634323120117
    10. '====' → logprob: -14.814634323120117

Token 714: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00021474185632541776
    2. '()==' → logprob: -8.500214576721191
    3. ' ==' → logprob: -11.875214576721191
    4. '()' → logprob: -12.875214576721191
    5. '===' → logprob: -13.625214576721191
    6. '=' → logprob: -14.750214576721191
    7. '==
' → logprob: -16.750215530395508
    8. 'is' → logprob: -16.875215530395508
    9. ']==' → logprob: -17.500215530395508
    10. ')==' → logprob: -17.750215530395508

Token 715: ' '':
' (ID: 125614)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10020904988050461
    2. '''' → logprob: -2.3502089977264404
    3. '"":' → logprob: -13.85020923614502
    4. '''
' → logprob: -14.35020923614502
    5. ''',' → logprob: -15.10020923614502
    6. ''''' → logprob: -15.85020923614502
    7. '""' → logprob: -16.100208282470703
    8. '''.' → logprob: -16.350208282470703
    9. '"' → logprob: -17.225208282470703
    10. ' '':
' → logprob: -17.600208282470703

Token 716: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08788548409938812
    2. ' line' → logprob: -3.4628853797912598
    3. ':' → logprob: -3.8378853797912598
    4. ' and' → logprob: -4.46288537979126
    5. 'line' → logprob: -5.08788537979126
    6. '   ' → logprob: -5.71288537979126
    7. 'and' → logprob: -6.21288537979126
    8. '=line' → logprob: -6.21288537979126
    9. ' or' → logprob: -6.33788537979126
    10. '           ' → logprob: -6.46288537979126

Token 717: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.000924561289139092
    2. ' line' → logprob: -7.000924587249756
    3. '           ' → logprob: -12.000924110412598
    4. 'try' → logprob: -12.375924110412598
    5. '               ' → logprob: -13.875924110412598
    6. '#line' → logprob: -14.500924110412598
    7. '(line' → logprob: -14.750924110412598
    8. '_line' → logprob: -15.625924110412598
    9. '=line' → logprob: -15.625924110412598
    10. '[line' → logprob: -16.000925064086914

Token 718: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1275603175163269
    2. ' =' → logprob: -2.1275603771209717
    3. '=line' → logprob: -7.377560138702393
    4. 'line' → logprob: -12.25256061553955
    5. '.readline' → logprob: -14.75256061553955
    6. '==' → logprob: -15.12756061553955
    7. ':=' → logprob: -15.37756061553955
    8. '_line' → logprob: -15.50256061553955
    9. '.=' → logprob: -15.62756061553955
    10. '=
' → logprob: -15.87756061553955

Token 719: ' next' (ID: 2613)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3065629303455353
    2. 'sys' → logprob: -2.056562900543213
    3. ' lines' → logprob: -2.306562900543213
    4. 'next' → logprob: -3.681562900543213
    5. ' sys' → logprob: -4.681562900543213
    6. ' next' → logprob: -6.181562900543213
    7. 'line' → logprob: -11.681563377380371
    8. '(lines' → logprob: -12.181563377380371
    9. '               ' → logprob: -14.181563377380371
    10. '           ' → logprob: -14.681563377380371

Token 720: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.07890399545431137
    2. 'lines' → logprob: -2.578903913497925
    3. '(sys' → logprob: -11.578904151916504
    4. 'sys' → logprob: -12.953904151916504
    5. ' lines' → logprob: -13.078904151916504
    6. '	lines' → logprob: -14.953904151916504
    7. 'line' → logprob: -16.203903198242188
    8. '(line' → logprob: -17.578903198242188
    9. '(
' → logprob: -18.703903198242188
    10. '_lines' → logprob: -18.828903198242188

Token 721: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03970298916101456
    2. ').' → logprob: -3.414702892303467
    3. ',' → logprob: -5.164702892303467
    4. ')
' → logprob: -8.289703369140625
    5. '           ' → logprob: -10.164703369140625
    6. '               ' → logprob: -11.164703369140625
    7. ',None' → logprob: -12.414703369140625
    8. '),' → logprob: -12.789703369140625
    9. '())' → logprob: -12.789703369140625
    10. '')' → logprob: -13.289703369140625

Token 722: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00043138445471413434
    2. 'rstrip' → logprob: -7.750431537628174
    3. ' strip' → logprob: -14.125431060791016
    4. '_strip' → logprob: -17.875431060791016
    5. 'split' → logprob: -18.625431060791016
    6. '.strip' → logprob: -18.750431060791016
    7. '(strip' → logprob: -20.125431060791016
    8. '-strip' → logprob: -20.625431060791016
    9. 'Strip' → logprob: -21.625431060791016
    10. 'raise' → logprob: -21.625431060791016

Token 723: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002004410926019773
    2. '()
' → logprob: -9.125200271606445
    3. '())' → logprob: -9.750200271606445
    4. ')' → logprob: -12.000200271606445
    5. '()\' → logprob: -12.250200271606445
    6. '           ' → logprob: -12.500200271606445
    7. '<|end|>' → logprob: -12.625200271606445
    8. '()]' → logprob: -13.125200271606445
    9. '(),' → logprob: -13.125200271606445
    10. '().' → logprob: -13.250200271606445

Token 724: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008304747752845287
    2. '               ' → logprob: -7.12583065032959
    3. '<|end|>' → logprob: -11.12583065032959
    4. '       ' → logprob: -12.75083065032959
    5. ',' → logprob: -13.12583065032959
    6. ' if' → logprob: -13.37583065032959
    7. '<|end|>' → logprob: -14.00083065032959
    8. '          ' → logprob: -14.00083065032959
    9. '            ' → logprob: -14.37583065032959
    10. '```' → logprob: -14.62583065032959

Token 725: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.609614372253418
    2. '           ' → logprob: -1.109614372253418
    3. 'parts' → logprob: -2.984614372253418
    4. 'n' → logprob: -3.234614372253418
    5. 'try' → logprob: -3.984614372253418
    6. 'num' → logprob: -4.484614372253418
    7. ' if' → logprob: -5.734614372253418
    8. 'count' → logprob: -6.484614372253418
    9. ' n' → logprob: -6.859614372253418
    10. ' parts' → logprob: -7.734614372253418

Token 726: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0017474116757512093
    2. ' line' → logprob: -6.3767476081848145
    3. 'not' → logprob: -10.376747131347656
    4. ' not' → logprob: -11.376747131347656
    5. '   ' → logprob: -14.376747131347656
    6. 'len' → logprob: -14.501747131347656
    7. ' ' → logprob: -14.501747131347656
    8. '	line' → logprob: -15.251747131347656
    9. '(line' → logprob: -15.501747131347656
    10. '#line' → logprob: -15.876747131347656

Token 727: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07901658117771149
    2. ' ==' → logprob: -2.57901668548584
    3. '=='' → logprob: -9.57901668548584
    4. '[' → logprob: -10.57901668548584
    5. '=="' → logprob: -11.32901668548584
    6. '=' → logprob: -11.70401668548584
    7. '.startswith' → logprob: -12.20401668548584
    8. '()==' → logprob: -12.95401668548584
    9. '==
' → logprob: -13.57901668548584
    10. '===' → logprob: -13.70401668548584

Token 728: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11318260431289673
    2. '"' → logprob: -2.238182544708252
    3. '0' → logprob: -8.48818302154541
    4. '''' → logprob: -9.61318302154541
    5. ' '' → logprob: -9.98818302154541
    6. ''end' → logprob: -11.23818302154541
    7. ''-' → logprob: -11.73818302154541
    8. ''#' → logprob: -12.36318302154541
    9. '""' → logprob: -12.48818302154541
    10. ' ' → logprob: -13.36318302154541

Token 729: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009052484296262264
    2. ''' → logprob: -4.759052276611328
    3. '"' → logprob: -8.009052276611328
    4. ' ' → logprob: -10.384052276611328
    5. 'END' → logprob: -10.384052276611328
    6. 'EOF' → logprob: -11.009052276611328
    7. 'end' → logprob: -12.509052276611328
    8. '#' → logprob: -12.634052276611328
    9. '''' → logprob: -12.884052276611328
    10. '':' → logprob: -12.884052276611328

Token 730: ' ' (ID: 220)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.1439298540353775
    2. '':
' → logprob: -2.518929958343506
    3. '0' → logprob: -3.268929958343506
    4. ''' → logprob: -4.518929958343506
    5. ' ' → logprob: -5.768929958343506
    6. '':
' → logprob: -6.643929958343506
    7. ' '' → logprob: -10.393929481506348
    8. ''):
' → logprob: -11.018929481506348
    9. '<|end|>' → logprob: -11.143929481506348
    10. ''>' → logprob: -11.643929481506348

Token 731: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015979631280060858
    2. ' ' → logprob: -8.750160217285156
    3. '<|end|>' → logprob: -15.562660217285156
    4. ''>' → logprob: -15.625160217285156
    5. ''' → logprob: -15.812660217285156
    6. '')' → logprob: -16.250160217285156
    7. '```' → logprob: -16.375160217285156
    8. '<|end|>' → logprob: -16.375160217285156
    9. '00' → logprob: -16.437660217285156
    10. '">' → logprob: -16.750160217285156

Token 732: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.5885573029518127
    2. '':' → logprob: -0.8385573029518127
    3. '0' → logprob: -5.213557243347168
    4. '':
' → logprob: -5.588557243347168
    5. ''' → logprob: -5.838557243347168
    6. ' ' → logprob: -8.588557243347168
    7. '\n' → logprob: -9.213557243347168
    8. '':

' → logprob: -9.838557243347168
    9. ''):
' → logprob: -10.088557243347168
    10. ''
' → logprob: -11.588557243347168

Token 733: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.860340752406046e-05
    2. ':' → logprob: -10.3750581741333
    3. '           ' → logprob: -10.8750581741333
    4. ':
' → logprob: -12.2500581741333
    5. '                   ' → logprob: -13.5000581741333
    6. '              ' → logprob: -14.0000581741333
    7. ',' → logprob: -14.6250581741333
    8. '                ' → logprob: -15.3750581741333
    9. '	           ' → logprob: -15.8750581741333
    10. ' break' → logprob: -16.000059127807617

Token 734: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20327548682689667
    2. 'break' (adapté à ' break') → logprob: -1.703275442123413
    3. ' break' → logprob: -6.953275680541992
    4. 'return' → logprob: -7.203275680541992
    5. '                   ' → logprob: -8.953275680541992
    6. '	break' → logprob: -11.203275680541992
    7. '           ' → logprob: -11.328275680541992
    8. '_break' → logprob: -13.328275680541992
    9. ' return' → logprob: -13.578275680541992
    10. '                       ' → logprob: -14.078275680541992

Token 735: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010466240346431732
    2. '<|end|>' → logprob: -8.001046180725098
    3. '            
' → logprob: -8.126046180725098
    4. '
' → logprob: -8.751046180725098
    5. '       ' → logprob: -9.126046180725098
    6. ',' → logprob: -9.751046180725098
    7. '<|end|>' → logprob: -10.626046180725098
    8. '          ' → logprob: -11.376046180725098
    9. 'import' → logprob: -11.751046180725098
    10. 'tokens' → logprob: -11.876046180725098

Token 736: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002072109840810299
    2. '       ' → logprob: -6.252072334289551
    3. '```' → logprob: -9.87707233428955
    4. 'tokens' → logprob: -10.37707233428955
    5. '            
' → logprob: -11.25207233428955
    6. 'num' → logprob: -11.50207233428955
    7. '<|end|>' → logprob: -12.37707233428955
    8. '          ' → logprob: -12.50207233428955
    9. '	       ' → logprob: -12.62707233428955
    10. '               ' → logprob: -12.75207233428955

Token 737: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19821684062480927
    2. 'parts' → logprob: -2.6982169151306152
    3. 'num' → logprob: -3.1982169151306152
    4. ' n' → logprob: -3.3232169151306152
    5. 'N' (adapté à ' N') → logprob: -3.9482169151306152
    6. 'tank' → logprob: -5.573216915130615
    7. ' parts' → logprob: -5.698216915130615
    8. 'tokens' → logprob: -6.198216915130615
    9. '           ' → logprob: -6.448216915130615
    10. 'k' → logprob: -6.448216915130615

Token 738: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009383779251947999
    2. '=' → logprob: -7.500938415527344
    3. ' =' → logprob: -8.250938415527344
    4. ' ,' → logprob: -9.750938415527344
    5. ',N' → logprob: -11.125938415527344
    6. 'tokens' → logprob: -11.250938415527344
    7. '_tokens' → logprob: -11.500938415527344
    8. '<|end|>' → logprob: -12.250938415527344
    9. ',n' → logprob: -12.375938415527344
    10. '<|end|>' → logprob: -12.875938415527344

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13490182161331177
    2. '=' → logprob: -2.134901762008667
    3. ' =' → logprob: -4.884902000427246
    4. ' ,' → logprob: -8.634902000427246
    5. ',N' → logprob: -9.259902000427246
    6. ',n' → logprob: -9.759902000427246
    7. ',line' → logprob: -11.009902000427246
    8. '=line' → logprob: -11.759902000427246
    9. ',num' → logprob: -12.009902000427246
    10. '    ' → logprob: -12.884902000427246

Token 740: ' L' (ID: 451)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3877284824848175
    2. 'K' → logprob: -1.6377284526824951
    3. 'C' → logprob: -2.637728452682495
    4. 'L' → logprob: -4.137728691101074
    5. 'Q' → logprob: -4.262728691101074
    6. 'T' → logprob: -4.512728691101074
    7. 'tank' → logprob: -5.762728691101074
    8. 'D' → logprob: -5.887728691101074
    9. 'R' → logprob: -6.637728691101074
    10. 'H' → logprob: -6.637728691101074

Token 741: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0797087699174881
    2. '=' → logprob: -3.0797088146209717
    3. ' =' → logprob: -3.9547088146209717
    4. 'str' → logprob: -4.579708576202393
    5. '_' → logprob: -6.829708576202393
    6. ',' → logprob: -10.20470905303955
    7. 's' → logprob: -10.32970905303955
    8. '_s' → logprob: -11.32970905303955
    9. 'Str' → logprob: -11.57970905303955
    10. ' ' → logprob: -11.70470905303955

Token 742: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931495666503906
    2. ' =' → logprob: -0.6931495666503906
    3. '=line' → logprob: -13.69314956665039
    4. ',' → logprob: -13.94314956665039
    5. ' ' → logprob: -15.81814956665039
    6. '            ' → logprob: -16.31814956665039
    7. '           ' → logprob: -16.69314956665039
    8. '＝' → logprob: -17.56814956665039
    9. '    ' → logprob: -18.06814956665039
    10. 'tokens' → logprob: -18.19314956665039

Token 743: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04858794063329697
    2. ' line' → logprob: -3.0485880374908447
    3. '=line' → logprob: -14.923587799072266
    4. '(line' → logprob: -16.423587799072266
    5. '	line' → logprob: -16.423587799072266
    6. '#line' → logprob: -17.048587799072266
    7. '[line' → logprob: -17.673587799072266
    8. 'Line' → logprob: -18.798587799072266
    9. '_line' → logprob: -19.048587799072266
    10. 'token' → logprob: -20.048587799072266

Token 744: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015023599844425917
    2. ' =' → logprob: -6.501502513885498
    3. '=line' → logprob: -17.251502990722656
    4. '＝' → logprob: -18.501502990722656
    5. '.split' → logprob: -18.626502990722656
    6. 'split' → logprob: -19.001502990722656
    7. '=
' → logprob: -19.626502990722656
    8. '.=' → logprob: -20.376502990722656
    9. ')=' → logprob: -20.501502990722656
    10. ',' → logprob: -20.751502990722656

Token 745: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0032228680793195963
    2. '('' → logprob: -5.753222942352295
    3. '(' → logprob: -10.503222465515137
    4. '()
' → logprob: -11.628222465515137
    5. '();' → logprob: -13.253222465515137
    6. ''' → logprob: -13.503222465515137
    7. '(None' → logprob: -13.503222465515137
    8. '("' → logprob: -14.253222465515137
    9. '()]' → logprob: -14.378222465515137
    10. '())' → logprob: -14.378222465515137

Token 746: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11027197539806366
    2. 'N' → logprob: -2.48527193069458
    3. ' N' → logprob: -3.86027193069458
    4. ',' → logprob: -11.735272407531738
    5. 'n' → logprob: -11.985272407531738
    6. '       ' → logprob: -12.360272407531738
    7. '	N' → logprob: -12.360272407531738
    8. '		' → logprob: -12.485272407531738
    9. ',N' → logprob: -12.860272407531738
    10. '```' → logprob: -12.860272407531738

Token 747: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0010374527191743255
    2. ' N' → logprob: -7.25103759765625
    3. 'n' → logprob: -8.25103759765625
    4. '           ' → logprob: -9.62603759765625
    5. ' n' → logprob: -15.50103759765625
    6. 'num' → logprob: -16.12603759765625
    7. '               ' → logprob: -16.87603759765625
    8. '   ' → logprob: -17.25103759765625
    9. 'try' → logprob: -18.37603759765625
    10. '       ' → logprob: -18.37603759765625

Token 748: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43832603096961975
    2. '=' → logprob: -1.0633260011672974
    3. ',' → logprob: -4.688325881958008
    4. '=int' → logprob: -8.188325881958008
    5. '<|end|>' → logprob: -10.063325881958008
    6. 'int' → logprob: -11.313325881958008
    7. '           ' → logprob: -11.563325881958008
    8. ')' → logprob: -11.938325881958008
    9. '<|end|>' → logprob: -12.438325881958008
    10. ' ' → logprob: -12.688325881958008

Token 749: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2829095721244812
    2. ' L' → logprob: -1.407909631729126
    3. 'int' → logprob: -6.532909393310547
    4. ' int' → logprob: -8.157909393310547
    5. ' =' → logprob: -12.032909393310547
    6. '           ' → logprob: -12.907909393310547
    7. ' ' → logprob: -13.032909393310547
    8. '=' → logprob: -13.282909393310547
    9. '=int' → logprob: -13.282909393310547
    10. '            ' → logprob: -15.157909393310547

Token 750: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889209687709808
    2. ' =' → logprob: -2.5788919925689697
    3. '=int' → logprob: -13.07889175415039
    4. '   ' → logprob: -16.45389175415039
    5. 'int' → logprob: -16.45389175415039
    6. ',' → logprob: -17.07889175415039
    7. ' ' → logprob: -17.57889175415039
    8. '＝' → logprob: -17.95389175415039
    9. '    ' → logprob: -18.70389175415039
    10. '=}' → logprob: -18.95389175415039

Token 751: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. '[int' → logprob: -20.500335693359375
    4. '(int' → logprob: -22.000335693359375
    5. '=int' → logprob: -22.875335693359375
    6. '	int' → logprob: -23.250335693359375
    7. '   ' → logprob: -23.625335693359375
    8. ' ' → logprob: -24.375335693359375
    9. '  ' → logprob: -24.625335693359375
    10. ':int' → logprob: -24.750335693359375

Token 752: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.005233882926404476
    2. 'N' → logprob: -5.2552337646484375
    3. '(' → logprob: -17.255233764648438
    4. '[N' → logprob: -17.505233764648438
    5. '	N' → logprob: -17.505233764648438
    6. '(
' → logprob: -18.880233764648438
    7. '{' → logprob: -19.005233764648438
    8. 'L' → logprob: -19.255233764648438
    9. ' N' → logprob: -19.255233764648438
    10. '
' → logprob: -19.380233764648438

Token 753: '_str' (ID: 6182)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4883214235305786
    2. '),' → logprob: -0.9883214235305786
    3. '(N' → logprob: -4.363321304321289
    4. 'L' → logprob: -7.738321304321289
    5. ')' → logprob: -7.863321304321289
    6. ' N' → logprob: -8.238321304321289
    7. '_str' → logprob: -8.988321304321289
    8. '[N' → logprob: -9.113321304321289
    9. ',' → logprob: -10.363321304321289
    10. '_N' → logprob: -10.863321304321289

Token 754: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0003123439964838326
    2. ',' → logprob: -8.125312805175781
    3. ')' → logprob: -11.500312805175781
    4. ' ),' → logprob: -12.750312805175781
    5. ',),' → logprob: -13.750312805175781
    6. '           ' → logprob: -14.375312805175781
    7. '},' → logprob: -14.875312805175781
    8. '),(' → logprob: -15.250312805175781
    9. '<|end|>' → logprob: -15.625312805175781
    10. '```' → logprob: -16.00031280517578

Token 755: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001584850688232109
    2. ' int' → logprob: -8.750158309936523
    3. '[int' → logprob: -20.625158309936523
    4. '(int' → logprob: -21.875158309936523
    5. '=int' → logprob: -22.000158309936523
    6. '	int' → logprob: -22.250158309936523
    7. '   ' → logprob: -22.500158309936523
    8. '
' → logprob: -22.500158309936523
    9. '           ' → logprob: -22.750158309936523
    10. '<int' → logprob: -23.000158309936523

Token 756: '(L' (ID: 11075)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -2.2200749754119897e-06
    2. ' L' → logprob: -13.250001907348633
    3. '(L' → logprob: -14.750001907348633
    4. '	L' → logprob: -19.625001907348633
    5. '   ' → logprob: -19.750001907348633
    6. 'int' → logprob: -20.125001907348633
    7. '           ' → logprob: -20.375001907348633
    8. ' ' → logprob: -21.000001907348633
    9. ')L' → logprob: -21.250001907348633
    10. '_L' → logprob: -21.500001907348633

Token 757: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.008605001494288445
    2. 'Str' → logprob: -5.508605003356934
    3. 'str' → logprob: -6.133605003356934
    4. 'L' → logprob: -6.383605003356934
    5. ')' → logprob: -7.383605003356934
    6. '(L' → logprob: -11.508605003356934
    7. ')L' → logprob: -11.633605003356934
    8. ')
' → logprob: -12.508605003356934
    9. '_STR' → logprob: -12.633605003356934
    10. 'S' → logprob: -13.258605003356934

Token 758: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031043673516251147
    2. ')
' → logprob: -8.125310897827148
    3. '<|end|>' → logprob: -11.375310897827148
    4. '<|end|>' → logprob: -14.125310897827148
    5. '           ' → logprob: -14.875310897827148
    6. ')

' → logprob: -15.000310897827148
    7. '),' → logprob: -15.000310897827148
    8. ' )' → logprob: -15.125310897827148
    9. ')
' → logprob: -15.250310897827148
    10. '   ' → logprob: -16.37531089782715

Token 759: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002051885472610593
    2. '       ' → logprob: -6.627051830291748
    3. ' schedules' → logprob: -7.752051830291748
    4. 's' → logprob: -9.377052307128906
    5. '```' → logprob: -9.627052307128906
    6. '            
' → logprob: -10.502052307128906
    7. ' for' → logprob: -10.877052307128906
    8. 'for' → logprob: -10.877052307128906
    9. '
' → logprob: -11.252052307128906
    10. '	       ' → logprob: -11.377052307128906

Token 760: ' schedules' (ID: 50216)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017428892897441983
    2. '           ' → logprob: -6.751742839813232
    3. ' schedules' → logprob: -7.501742839813232
    4. 'sched' → logprob: -11.12674331665039
    5. 'Schedules' → logprob: -13.87674331665039
    6. 'schedule' → logprob: -13.87674331665039
    7. 'sche' → logprob: -14.00174331665039
    8. 'chedules' → logprob: -14.50174331665039
    9. '	s' → logprob: -15.00174331665039
    10. 'scheduled' → logprob: -15.12674331665039

Token 761: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20169106125831604
    2. '=' → logprob: -1.7016910314559937
    3. '=[]' → logprob: -8.826690673828125
    4. ':' → logprob: -8.951690673828125
    5. '=[]
' → logprob: -13.826690673828125
    6. '   ' → logprob: -16.076690673828125
    7. '           ' → logprob: -16.826690673828125
    8. '=[]
' → logprob: -16.826690673828125
    9. 's' → logprob: -17.201690673828125
    10. '    ' → logprob: -17.201690673828125

Token 762: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.38687849044799805
    2. '[]' → logprob: -1.136878490447998
    3. ' []
' → logprob: -12.386878967285156
    4. ' []' → logprob: -13.636878967285156
    5. '[' → logprob: -13.636878967285156
    6. '[]

' → logprob: -14.011878967285156
    7. '[])
' → logprob: -16.761878967285156
    8. '[
' → logprob: -17.011878967285156
    9. '[]"' → logprob: -18.511878967285156
    10. '[],' → logprob: -18.511878967285156

Token 763: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.084818996489048
    2. 'for' → logprob: -2.5848190784454346
    3. ' for' → logprob: -5.2098188400268555
    4. '       ' → logprob: -7.9598188400268555
    5. '		' → logprob: -9.959818840026855
    6. '	       ' → logprob: -10.709818840026855
    7. '	for' → logprob: -11.709818840026855
    8. '
' → logprob: -12.084818840026855
    9. '	   ' → logprob: -12.084818840026855
    10. '   ' → logprob: -12.459818840026855

Token 764: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001342254807241261
    2. ' for' → logprob: -7.001342296600342
    3. '           ' → logprob: -7.751342296600342
    4. '       ' → logprob: -15.626341819763184
    5. '	for' → logprob: -15.751341819763184
    6. 'while' → logprob: -16.2513427734375
    7. '   ' → logprob: -16.6263427734375
    8. '            
' → logprob: -18.5013427734375
    9. '```' → logprob: -18.7513427734375
    10. '
' → logprob: -19.2513427734375

Token 765: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.8206473871250637e-05
    2. ' _' → logprob: -10.500028610229492
    3. '_i' → logprob: -14.875028610229492
    4. '_range' → logprob: -16.625028610229492
    5. '_=' → logprob: -16.875028610229492
    6. '_in' → logprob: -17.375028610229492
    7. '_
' → logprob: -17.750028610229492
    8. '_

' → logprob: -18.375028610229492
    9. '_
' → logprob: -19.125028610229492
    10. ' in' → logprob: -20.000028610229492

Token 766: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012576404958963394
    2. ' in' → logprob: -4.762576580047607
    3. ' range' → logprob: -6.012576580047607
    4. 'in' → logprob: -6.512576580047607
    5. '_' → logprob: -10.88757610321045
    6. ' ' → logprob: -13.38757610321045
    7. '
' → logprob: -14.38757610321045
    8. '  ' → logprob: -15.26257610321045
    9. '0' → logprob: -16.137577056884766
    10. '[' → logprob: -16.387577056884766

Token 767: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026169343618676066
    2. ' range' → logprob: -8.250261306762695
    3. '_range' → logprob: -15.125261306762695
    4. '	range' → logprob: -18.000261306762695
    5. '(range' → logprob: -18.250261306762695
    6. '_' → logprob: -18.500261306762695
    7. '   ' → logprob: -19.500261306762695
    8. 'Range' → logprob: -20.000261306762695
    9. '0' → logprob: -20.625261306762695
    10. 'rang' → logprob: -20.750261306762695

Token 768: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009278989746235311
    2. ' N' → logprob: -7.000927925109863
    3. '(N' → logprob: -11.125927925109863
    4. 'range' → logprob: -14.375927925109863
    5. '   ' → logprob: -14.750927925109863
    6. '	N' → logprob: -15.250927925109863
    7. ' ' → logprob: -15.500927925109863
    8. '_N' → logprob: -15.875927925109863
    9. ' range' → logprob: -16.125926971435547
    10. '  ' → logprob: -17.875926971435547

Token 769: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03647181764245033
    2. '):' → logprob: -3.6614718437194824
    3. ':
' → logprob: -5.536471843719482
    4. '           ' → logprob: -5.661471843719482
    5. ':' → logprob: -6.661471843719482
    6. '               ' → logprob: -7.161471843719482
    7. '       ' → logprob: -8.411471366882324
    8. ',' → logprob: -8.786471366882324
    9. '):
' → logprob: -8.786471366882324
    10. '   ' → logprob: -10.161471366882324

Token 770: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005507780238986015
    2. ' line' → logprob: -6.005507946014404
    3. '           ' → logprob: -6.380507946014404
    4. '	           ' → logprob: -7.880507946014404
    5. 'line' → logprob: -8.130507469177246
    6. '#line' → logprob: -8.255507469177246
    7. '       ' → logprob: -8.880507469177246
    8. '   ' → logprob: -10.130507469177246
    9. '<|end|>' → logprob: -10.130507469177246
    10. '```' → logprob: -10.630507469177246

Token 771: ' s' (ID: 265)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6405500769615173
    2. 'start' → logprob: -1.515550136566162
    3. 'sched' → logprob: -2.640550136566162
    4. 'time' → logprob: -3.640550136566162
    5. ' line' → logprob: -3.890550136566162
    6. 'parts' → logprob: -3.890550136566162
    7. '               ' → logprob: -3.890550136566162
    8. 's' (adapté à ' s') → logprob: -3.890550136566162
    9. '           ' → logprob: -4.140550136566162
    10. 'interval' → logprob: -4.390550136566162

Token 772: ',' (ID: 11)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.9387238025665283
    2. 'tr' → logprob: -1.4387238025665283
    3. 't' → logprob: -1.6887238025665283
    4. ',' → logprob: -2.6887238025665283
    5. 'line' → logprob: -3.1887238025665283
    6. '_str' → logprob: -3.1887238025665283
    7. ' =' → logprob: -3.6887238025665283
    8. '_start' → logprob: -5.563723564147949
    9. 'start' → logprob: -6.063723564147949
    10. 'chedule' → logprob: -7.063723564147949

Token 773: ' t' (ID: 260)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.002555688377469778
    2. 't' → logprob: -6.627555847167969
    3. 'f' → logprob: -7.252555847167969
    4. 'd' → logprob: -7.627555847167969
    5. ' e' → logprob: -11.252555847167969
    6. 'end' → logprob: -12.877555847167969
    7. 'a' → logprob: -13.002555847167969
    8. '```' → logprob: -13.252555847167969
    9. 'c' → logprob: -13.752555847167969
    10. '   ' → logprob: -14.002555847167969

Token 774: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.32392441527918e-05
    2. ' ,' → logprob: -10.500053405761719
    3. 's' → logprob: -11.750053405761719
    4. 'u' → logprob: -12.500053405761719
    5. '_,' → logprob: -12.500053405761719
    6. '_str' → logprob: -12.500053405761719
    7. ',u' → logprob: -12.875053405761719
    8. ',r' → logprob: -14.750053405761719
    9. 'p' → logprob: -14.875053405761719
    10. 'str' → logprob: -15.375053405761719

Token 775: ' u' (ID: 337)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.32888099551200867
    2. 'p' → logprob: -2.453881025314331
    3. 'v' → logprob: -2.828881025314331
    4. 'u' → logprob: -2.953881025314331
    5. 'w' → logprob: -3.203881025314331
    6. 'd' → logprob: -3.953881025314331
    7. 'x' → logprob: -5.078880786895752
    8. 'm' → logprob: -5.578880786895752
    9. 'q' → logprob: -5.578880786895752
    10. 'c' → logprob: -5.828880786895752

Token 776: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231454372406006
    2. ' =' → logprob: -0.8981454372406006
    3. ',' → logprob: -11.77314567565918
    4. '=line' → logprob: -12.64814567565918
    5. '_str' → logprob: -13.02314567565918
    6. ')' → logprob: -13.39814567565918
    7. ' ' → logprob: -13.39814567565918
    8. 'okens' → logprob: -14.02314567565918
    9. '=str' → logprob: -14.14814567565918
    10. '<|end|>' → logprob: -14.39814567565918

Token 777: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.002385045401751995
    2. 'next' → logprob: -6.502385139465332
    3. ' map' → logprob: -7.127385139465332
    4. '(map' → logprob: -10.377385139465332
    5. '(next' → logprob: -10.627385139465332
    6. '[next' → logprob: -11.002385139465332
    7. 'list' → logprob: -12.752385139465332
    8. '[' → logprob: -13.127385139465332
    9. ' next' → logprob: -13.502385139465332
    10. 'line' → logprob: -14.252385139465332

Token 778: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07889000326395035
    2. '(int' → logprob: -2.578890085220337
    3. '[int' → logprob: -15.953889846801758
    4. '=int' → logprob: -16.578889846801758
    5. ' int' → logprob: -16.828889846801758
    6. '```' → logprob: -16.828889846801758
    7. '	int' → logprob: -18.078889846801758
    8. '<int' → logprob: -18.203889846801758
    9. '   ' → logprob: -18.578889846801758
    10. ',int' → logprob: -19.078889846801758

Token 779: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35250842571258545
    2. '(next' → logprob: -1.9775084257125854
    3. 'next' → logprob: -2.477508544921875
    4. ',next' → logprob: -2.602508544921875
    5. '(' → logprob: -8.477508544921875
    6. 'input' → logprob: -8.727508544921875
    7. ',input' → logprob: -9.977508544921875
    8. 'sys' → logprob: -10.102508544921875
    9. ',line' → logprob: -10.227508544921875
    10. ')' → logprob: -10.352508544921875

Token 780: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.1398757123970427e-05
    2. ' next' → logprob: -11.500011444091797
    3. 'lines' → logprob: -14.250011444091797
    4. '(next' → logprob: -14.500011444091797
    5. 'sys' → logprob: -16.250011444091797
    6. 'line' → logprob: -16.875011444091797
    7. '   ' → logprob: -18.750011444091797
    8. ')' → logprob: -19.750011444091797
    9. '           ' → logprob: -19.750011444091797
    10. '
' → logprob: -19.750011444091797

Token 781: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0007125511183403432
    2. 'lines' → logprob: -7.2507123947143555
    3. '(sys' → logprob: -13.250712394714355
    4. ' lines' → logprob: -14.625712394714355
    5. '	lines' → logprob: -15.250712394714355
    6. 'sys' → logprob: -16.125713348388672
    7. '.lines' → logprob: -19.000713348388672
    8. ')' → logprob: -19.125713348388672
    9. '```' → logprob: -19.125713348388672
    10. '(line' → logprob: -19.375713348388672

Token 782: ').' (ID: 741)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.796184723294573e-06
    2. '()' → logprob: -12.375005722045898
    3. ').' → logprob: -14.375005722045898
    4. ' ().' → logprob: -14.750005722045898
    5. '(' → logprob: -15.500005722045898
    6. ')' → logprob: -15.875005722045898
    7. '.strip' → logprob: -16.2500057220459
    8. '.readline' → logprob: -17.6250057220459
    9. '()).' → logprob: -18.3750057220459
    10. '))' → logprob: -18.5000057220459

Token 783: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0009122979827225208
    2. 'split' → logprob: -7.000912189483643
    3. ' strip' → logprob: -15.0009126663208
    4. '(strip' → logprob: -15.7509126663208
    5. '.strip' → logprob: -16.125911712646484
    6. 'rstrip' → logprob: -16.625911712646484
    7. '().' → logprob: -16.750911712646484
    8. '_strip' → logprob: -19.250911712646484
    9. 'str' → logprob: -19.625911712646484
    10. 'read' → logprob: -20.000911712646484

Token 784: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7120533811976202e-05
    2. '()' → logprob: -11.000017166137695
    3. ' ().' → logprob: -15.125017166137695
    4. '(' → logprob: -16.625017166137695
    5. '   ' → logprob: -18.500017166137695
    6. '()
' → logprob: -18.625017166137695
    7. ')' → logprob: -19.750017166137695
    8. '().__' → logprob: -20.000017166137695
    9. '.split' → logprob: -20.000017166137695
    10. '.' → logprob: -20.000017166137695

Token 785: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -14.500000953674316
    3. '.split' → logprob: -17.625
    4. '(split' → logprob: -18.25
    5. 'strip' → logprob: -21.5
    6. 'spl' → logprob: -21.875
    7. '_split' → logprob: -22.0
    8. '().' → logprob: -23.75
    9. 'rstrip' → logprob: -24.625
    10. 'Split' → logprob: -25.125

Token 786: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004155210684984922
    2. '()' → logprob: -6.129155158996582
    3. ')' → logprob: -6.254155158996582
    4. '())
' → logprob: -10.379155158996582
    5. '(' → logprob: -11.879155158996582
    6. ' ())' → logprob: -12.629155158996582
    7. '()))' → logprob: -13.129155158996582
    8. '())
' → logprob: -14.129155158996582
    9. '();)' → logprob: -15.004155158996582
    10. '());' → logprob: -15.129155158996582

Token 787: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015824666479602456
    2. '           ' → logprob: -9.375158309936523
    3. 's' → logprob: -10.875158309936523
    4. '
' → logprob: -10.875158309936523
    5. '<|end|>' → logprob: -11.125158309936523
    6. '                   ' → logprob: -12.000158309936523
    7. '                
' → logprob: -13.000158309936523
    8. ',' → logprob: -13.000158309936523
    9. ')' → logprob: -13.375158309936523
    10. '              ' → logprob: -13.500158309936523

Token 788: ' schedules' (ID: 50216)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01749463938176632
    2. ' schedules' → logprob: -4.1424946784973145
    3. '               ' → logprob: -6.6424946784973145
    4. 'sched' → logprob: -9.517494201660156
    5. 'schedule' → logprob: -10.517494201660156
    6. '           ' → logprob: -10.642494201660156
    7. '                   ' → logprob: -11.017494201660156
    8. '                       ' → logprob: -12.767494201660156
    9. 'Schedules' → logprob: -13.142494201660156
    10. 'sche' → logprob: -13.142494201660156

Token 789: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.664371848164592e-05
    2. '.' → logprob: -11.125016212463379
    3. ' .' → logprob: -13.750016212463379
    4. ').' → logprob: -15.750016212463379
    5. '.ap' → logprob: -15.875016212463379
    6. '.app' → logprob: -16.125017166137695
    7. 'append' → logprob: -16.125017166137695
    8. '           ' → logprob: -16.375017166137695
    9. '.s' → logprob: -16.625017166137695
    10. '.extend' → logprob: -17.875017166137695

Token 790: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.500004768371582
    3. 'Schedule' → logprob: -13.875004768371582
    4. '(
' → logprob: -17.000003814697266
    5. ' Schedule' → logprob: -17.125003814697266
    6. '(schedule' → logprob: -17.500003814697266
    7. '.Schedule' → logprob: -19.750003814697266
    8. ' (' → logprob: -19.875003814697266
    9. '	S' → logprob: -19.875003814697266
    10. '((' → logprob: -20.125003814697266

Token 791: 'chedule' (ID: 11973)
  Prédit: 'chedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chedule' → logprob: -6.511406809295295e-06
    2. '(S' → logprob: -12.750006675720215
    3. '[' → logprob: -13.875006675720215
    4. '(' → logprob: -14.125006675720215
    5. 'Schedule' → logprob: -14.125006675720215
    6. 't' → logprob: -15.125006675720215
    7. '(t' → logprob: -15.500006675720215
    8. '   ' → logprob: -15.750006675720215
    9. '{' → logprob: -16.8750057220459
    10. 'he' → logprob: -17.5000057220459

Token 792: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -10.875021934509277
    3. 's' → logprob: -12.875021934509277
    4. ' (' → logprob: -16.37502098083496
    5. ')' → logprob: -16.50002098083496
    6. '(
' → logprob: -16.62502098083496
    7. ')(' → logprob: -17.12502098083496
    8. '(start' → logprob: -19.25002098083496
    9. '((' → logprob: -19.37502098083496
    10. ')s' → logprob: -19.50002098083496

Token 793: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.865583706414327e-05
    2. ',t' → logprob: -10.12509822845459
    3. ' ,' → logprob: -10.37509822845459
    4. ',s' → logprob: -10.75009822845459
    5. ',
' → logprob: -13.12509822845459
    6. 's' → logprob: -13.37509822845459
    7. 't' → logprob: -14.37509822845459
    8. ',int' → logprob: -15.00009822845459
    9. '<|end|>' → logprob: -15.50009822845459
    10. '=' → logprob: -15.62509822845459

Token 794: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005577972042374313
    2. ' t' → logprob: -7.500557899475098
    3. '               ' → logprob: -14.000557899475098
    4. '   ' → logprob: -14.125557899475098
    5. '                   ' → logprob: -15.000557899475098
    6. '                               ' → logprob: -15.000557899475098
    7. '	t' → logprob: -15.500557899475098
    8. '
' → logprob: -15.625557899475098
    9. '(t' → logprob: -16.00055694580078
    10. ' ' → logprob: -16.00055694580078

Token 795: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006371428607963026
    2. ',u' → logprob: -7.375637054443359
    3. ' ,' → logprob: -11.75063705444336
    4. 'u' → logprob: -13.87563705444336
    5. ',
' → logprob: -14.00063705444336
    6. '),' → logprob: -15.37563705444336
    7. '<|end|>' → logprob: -15.37563705444336
    8. '```' → logprob: -16.50063705444336
    9. '               ' → logprob: -16.62563705444336
    10. ',user' → logprob: -16.75063705444336

Token 796: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0004886920796707273
    2. ' u' → logprob: -7.625488758087158
    3. '	u' → logprob: -15.50048828125
    4. '   ' → logprob: -15.75048828125
    5. '
' → logprob: -16.50048828125
    6. '       ' → logprob: -16.87548828125
    7. '           ' → logprob: -17.50048828125
    8. ' ' → logprob: -17.50048828125
    9. '               ' → logprob: -17.62548828125
    10. ')' → logprob: -17.62548828125

Token 797: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007606726721860468
    2. ')' → logprob: -7.500760555267334
    3. '))
' → logprob: -8.500761032104492
    4. ' ))' → logprob: -12.875761032104492
    5. '       ' → logprob: -14.375761032104492
    6. '           ' → logprob: -15.000761032104492
    7. ')))' → logprob: -15.250761032104492
    8. ')
' → logprob: -15.250761032104492
    9. '   ' → logprob: -15.625761032104492
    10. '))

' → logprob: -15.875761032104492

Token 798: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001325837685726583
    2. '
' → logprob: -6.876325607299805
    3. 'yield' → logprob: -9.001325607299805
    4. 'return' → logprob: -9.626325607299805
    5. ' yield' → logprob: -10.626325607299805
    6. '       ' → logprob: -10.751325607299805
    7. '            
' → logprob: -10.876325607299805
    8. ' return' → logprob: -11.126325607299805
    9. '<|end|>' → logprob: -11.126325607299805
    10. '```' → logprob: -12.251325607299805

Token 799: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.06677868962287903
    2. '           ' → logprob: -3.3167786598205566
    3. ' yield' → logprob: -3.5667786598205566
    4. '	yield' → logprob: -9.566779136657715
    5. '
' → logprob: -11.816779136657715
    6. 'y' → logprob: -13.066779136657715
    7. 'Yield' → logprob: -13.816779136657715
    8. '       ' → logprob: -14.566779136657715
    9. '```' → logprob: -15.316779136657715
    10. '            
' → logprob: -16.4417781829834

Token 800: ' Schedule' (ID: 36691)
  Prédit: 'Schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Schedule' → logprob: -3.7697225252486533e-06
    2. ' Schedule' → logprob: -12.500003814697266
    3. 'Scheduler' → logprob: -23.250003814697266
    4. '   ' → logprob: -23.500003814697266
    5. 'schedule' → logprob: -24.375003814697266
    6. 'Scheduling' → logprob: -24.375003814697266
    7. 'Schedules' → logprob: -24.875003814697266
    8. 'Scheduled' → logprob: -25.125003814697266
    9. '_schedule' → logprob: -25.125003814697266
    10. '           ' → logprob: -25.500003814697266

Token 801: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -1.9361264946837764e-07
    2. 'Schedule' → logprob: -16.0
    3. '(Table' → logprob: -19.25
    4. '           ' → logprob: -19.375
    5. '	Table' → logprob: -20.0
    6. '(S' → logprob: -20.375
    7. 'table' → logprob: -21.125
    8. 'Tab' → logprob: -21.25
    9. '<Table' → logprob: -21.25
    10. 'TABLE' → logprob: -21.625

Token 802: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.4121114822482923e-06
    2. 's' → logprob: -13.500003814697266
    3. '(' → logprob: -13.625003814697266
    4. '(
' → logprob: -15.000003814697266
    5. ' schedules' → logprob: -15.500003814697266
    6. ' (' → logprob: -15.750003814697266
    7. '(schedule' → logprob: -15.875003814697266
    8. '(scores' → logprob: -18.375003814697266
    9. '((' → logprob: -18.500003814697266
    10. '   ' → logprob: -18.875003814697266

Token 803: 'chedules' (ID: 112594)
  Prédit: 'chedules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chedules' → logprob: -0.009581250138580799
    2. 's' → logprob: -5.259581089019775
    3. 'ed' → logprob: -6.259581089019775
    4. 'hed' → logprob: -6.259581089019775
    5. 'd' → logprob: -8.884581565856934
    6. 'he' → logprob: -9.509581565856934
    7. 'edu' → logprob: -9.759581565856934
    8. 'ules' → logprob: -10.009581565856934
    9. '   ' → logprob: -10.384581565856934
    10. '[' → logprob: -10.759581565856934

Token 804: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ' ,' → logprob: -13.000003814697266
    3. ',L' → logprob: -13.750003814697266
    4. ',
' → logprob: -15.750003814697266
    5. '=' → logprob: -18.250003814697266
    6. ')' → logprob: -20.125003814697266
    7. ',T' → logprob: -20.125003814697266
    8. ',int' → logprob: -20.375003814697266
    9. ',N' → logprob: -20.500003814697266
    10. '   ' → logprob: -20.500003814697266

Token 805: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0005530327325686812
    2. ' L' → logprob: -7.500553131103516
    3. '           ' → logprob: -19.875553131103516
    4. '   ' → logprob: -20.750553131103516
    5. 'l' → logprob: -21.875553131103516
    6. ')L' → logprob: -22.000553131103516
    7. '       ' → logprob: -22.125553131103516
    8. ' ' → logprob: -22.250553131103516
    9. '	L' → logprob: -22.250553131103516
    10. ' ' → logprob: -22.625553131103516

Token 806: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -13.625000953674316
    3. ' )' → logprob: -16.125001907348633
    4. '))' → logprob: -18.375001907348633
    5. '<|end|>' → logprob: -18.500001907348633
    6. ')

' → logprob: -18.625001907348633
    7. ')return' → logprob: -18.750001907348633
    8. '),' → logprob: -19.250001907348633
    9. ').' → logprob: -19.500001907348633
    10. '())' → logprob: -20.250001907348633

Token 807: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.212214469909668
    2. 'if' → logprob: -1.337214469909668
    3. 'class' → logprob: -1.587214469909668
    4. '```' → logprob: -1.712214469909668
    5. 'import' → logprob: -3.087214469909668
    6. '<|end|>' → logprob: -4.837214469909668
    7. '#' → logprob: -6.962214469909668
    8. 'from' → logprob: -8.837214469909668
    9. ' if' → logprob: -9.212214469909668
    10. '#!/' → logprob: -9.837214469909668

Token 808: ' Output' (ID: 18315)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.9194960594177246
    2. 'Main' → logprob: -1.6694960594177246
    3. 'Solver' → logprob: -1.9194960594177246
    4. 'Output' → logprob: -1.9194960594177246
    5. 'Runner' → logprob: -2.9194960594177246
    6. 'Scheduler' → logprob: -3.9194960594177246
    7. 'Tank' → logprob: -4.044496059417725
    8. 'Water' → logprob: -4.794496059417725
    9. 'Consumption' → logprob: -4.794496059417725
    10. 'main' → logprob: -6.419496059417725

Token 809: 'Formatter' (ID: 22956)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.021051304414868355
    2. 'Handler' → logprob: -4.021051406860352
    3. 'ter' → logprob: -7.146051406860352
    4. 'Printer' → logprob: -7.146051406860352
    5. ':' → logprob: -7.271051406860352
    6. 'Formatter' → logprob: -8.271051406860352
    7. 'Generator' → logprob: -8.521051406860352
    8. 'Manager' → logprob: -9.271051406860352
    9. 'Processor' → logprob: -10.646051406860352
    10. 'er' → logprob: -11.021051406860352

Token 810: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00027432903880253434
    2. ':
' → logprob: -8.250274658203125
    3. ':

' → logprob: -12.375274658203125
    4. ':def' → logprob: -12.500274658203125
    5. '):' → logprob: -13.500274658203125
    6. '<|end|>' → logprob: -13.750274658203125
    7. '():' → logprob: -14.500274658203125
    8. '(object' → logprob: -15.125274658203125
    9. ' :' → logprob: -15.250274658203125
    10. '‍:' → logprob: -15.750274658203125

Token 811: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006913475226610899
    2. 'class' → logprob: -7.8756914138793945
    3. '```' → logprob: -8.375691413879395
    4. 'staticmethod' → logprob: -10.750691413879395
    5. 'def' → logprob: -11.125691413879395
    6. '
' → logprob: -11.250691413879395
    7. '    
' → logprob: -11.875691413879395
    8. 'classmethod' → logprob: -11.875691413879395
    9. '<|end|>' → logprob: -12.750691413879395
    10. '  ' → logprob: -13.250691413879395

Token 812: ' """' (ID: 9280)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6696518063545227
    2. '@' → logprob: -0.9196518063545227
    3. '   ' → logprob: -2.419651746749878
    4. '```' → logprob: -8.294651985168457
    5. ' @' → logprob: -8.794651985168457
    6. ' class' → logprob: -9.919651985168457
    7. 'staticmethod' → logprob: -10.544651985168457
    8. 'def' → logprob: -10.919651985168457
    9. '"""' (adapté à ' """') → logprob: -12.669651985168457
    10. '
' → logprob: -13.044651985168457

Token 813: 'Formats' (ID: 71042)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0007394690765067935
    2. 'class' → logprob: -7.875739574432373
    3. '   ' → logprob: -9.000739097595215
    4. ' @' → logprob: -9.375739097595215
    5. 'staticmethod' → logprob: -9.500739097595215
    6. 'def' → logprob: -9.625739097595215
    7. '"""' → logprob: -12.000739097595215
    8. 'static' → logprob: -13.000739097595215
    9. 'Static' → logprob: -13.625739097595215
    10. 'STATIC' → logprob: -15.625739097595215

Token 814: ' output' (ID: 4733)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5596339106559753
    2. ' the' → logprob: -1.8096339702606201
    3. 'and' → logprob: -2.43463397026062
    4. 'results' → logprob: -2.80963397026062
    5. 'output' → logprob: -2.80963397026062
    6. 'outputs' → logprob: -4.434633731842041
    7. ' output' → logprob: -4.684633731842041
    8. ' schedules' → logprob: -4.934633731842041
    9. '<|end|>' → logprob: -5.059633731842041
    10. ' and' → logprob: -5.434633731842041

Token 815: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5291786193847656
    2. ':' → logprob: -1.0291786193847656
    3. ':
' → logprob: -3.2791786193847656
    4. 'class' → logprob: -4.529178619384766
    5. '
' → logprob: -7.154178619384766
    6. '):' → logprob: -7.654178619384766
    7. '.' → logprob: -7.779178619384766
    8. ' and' → logprob: -7.779178619384766
    9. '<|end|>' → logprob: -7.904178619384766
    10. 'and' → logprob: -7.904178619384766

Token 816: ' required' (ID: 3759)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.011269220151007175
    2. 'sys' → logprob: -5.6362690925598145
    3. 'standard' → logprob: -5.8862690925598145
    4. 'print' → logprob: -6.1362690925598145
    5. 'six' → logprob: -6.5112690925598145
    6. '6' → logprob: -7.8862690925598145
    7. 'std' → logprob: -8.011269569396973
    8. 'match' → logprob: -8.136269569396973
    9. '```' → logprob: -10.261269569396973
    10. 'stand' → logprob: -10.386269569396973

Token 817: ' precision' (ID: 27303)
  Prédit: 'precision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'precision' → logprob: -0.0022730084601789713
    2. 'spec' → logprob: -7.127273082733154
    3. 'decimal' → logprob: -7.377273082733154
    4. 'float' → logprob: -7.877273082733154
    5. ' precision' → logprob: -8.877272605895996
    6. 'stdout' → logprob: -9.252272605895996
    7. 'standard' → logprob: -9.377272605895996
    8. 'format' → logprob: -10.627272605895996
    9. 'string' → logprob: -10.752272605895996
    10. 'floating' → logprob: -10.877272605895996

Token 818: '."""

' (ID: 68934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.289400577545166
    2. ':' → logprob: -1.789400577545166
    3. 'and' → logprob: -3.414400577545166
    4. ' and' → logprob: -4.039400577545166
    5. ':
' → logprob: -4.039400577545166
    6. 'class' → logprob: -4.914400577545166
    7. '.' → logprob: -5.539400577545166
    8. '):' → logprob: -6.914400577545166
    9. ':

' → logprob: -6.914400577545166
    10. ')' → logprob: -7.164400577545166

Token 819: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6940088272094727
    2. 'class' → logprob: -0.6940088272094727
    3. '@' → logprob: -7.569008827209473
    4. 'def' → logprob: -8.319008827209473
    5. '```' → logprob: -9.569008827209473
    6. ' class' → logprob: -10.569008827209473
    7. '
' → logprob: -13.194008827209473
    8. '@dat' → logprob: -13.569008827209473
    9. 'indent' → logprob: -14.069008827209473
    10. 'import' → logprob: -14.569008827209473

Token 820: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -2.0219828002154827e-05
    2. ' @' → logprob: -11.000020027160645
    3. '   ' → logprob: -12.625020027160645
    4. 'staticmethod' → logprob: -16.50002098083496
    5. 'def' → logprob: -16.75002098083496
    6. '
' → logprob: -18.50002098083496
    7. '```' → logprob: -19.62502098083496
    8. '@
' → logprob: -20.37502098083496
    9. '@@' → logprob: -20.75002098083496
    10. '@param' → logprob: -21.12502098083496

Token 821: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: 0.0
    2. 'classmethod' → logprob: -21.25
    3. 'static' → logprob: -22.5
    4. 'property' → logprob: -28.75
    5. ' static' → logprob: -28.75
    6. 'dat' → logprob: -30.5
    7. '_static' → logprob: -31.875
    8. '@' → logprob: -32.25
    9. 'stat' → logprob: -32.375
    10. 'abstract' → logprob: -32.625

Token 822: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10783318430185318
    2. '   ' → logprob: -2.35783314704895
    3. ' def' → logprob: -5.357833385467529
    4. '
' → logprob: -5.857833385467529
    5. '	def' → logprob: -11.732832908630371
    6. '  ' → logprob: -12.357832908630371
    7. ' ' → logprob: -12.357832908630371
    8. '(' → logprob: -12.482832908630371
    9. '```' → logprob: -12.732832908630371
    10. '(def' → logprob: -12.982832908630371

Token 823: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02528725191950798
    2. '   ' → logprob: -4.02528715133667
    3. '
' → logprob: -5.02528715133667
    4. ' def' → logprob: -7.52528715133667
    5. '	def' → logprob: -13.400287628173828
    6. '```' → logprob: -14.025287628173828
    7. '
' → logprob: -15.775287628173828
    8. '  ' → logprob: -16.150287628173828
    9. ' ' → logprob: -16.650287628173828
    10. '_def' → logprob: -16.775287628173828

Token 824: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.3856492842023727e-06
    2. ' def' → logprob: -13.750000953674316
    3. '
' → logprob: -15.250000953674316
    4. '   ' → logprob: -19.125001907348633
    5. 'print' → logprob: -21.625001907348633
    6. '```' → logprob: -22.375001907348633
    7. '	def' → logprob: -22.500001907348633
    8. 'format' → logprob: -22.500001907348633
    9. 'from' → logprob: -22.500001907348633
    10. 'f' → logprob: -23.000001907348633

Token 825: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.00015979631280060858
    2. 'print' → logprob: -8.750160217285156
    3. ' format' → logprob: -14.500160217285156
    4. 'float' → logprob: -14.500160217285156
    5. 'write' → logprob: -16.625160217285156
    6. 'formatted' → logprob: -16.625160217285156
    7. 'minimal' → logprob: -18.625160217285156
    8. 'output' → logprob: -19.000160217285156
    9. 'render' → logprob: -20.250160217285156
    10. 'fmt' → logprob: -20.250160217285156

Token 826: '_p' (ID: 1359)
  Prédit: '(rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rate' → logprob: -0.4567294716835022
    2. '(value' → logprob: -1.7067294120788574
    3. '(p' → logprob: -2.0817294120788574
    4. '_rate' → logprob: -3.2067294120788574
    5. '(min' → logprob: -4.706729412078857
    6. '(' → logprob: -5.331729412078857
    7. '(amount' → logprob: -6.831729412078857
    8. '(result' → logprob: -7.081729412078857
    9. '(f' → logprob: -7.331729412078857
    10. '(r' → logprob: -7.456729412078857

Token 827: 'ump' (ID: 2643)
  Prédit: 'ump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ump' → logprob: -0.00022523177904076874
    2. 'umped' → logprob: -9.000225067138672
    3. 'r' → logprob: -10.000225067138672
    4. 'umping' → logprob: -10.875225067138672
    5. 'rec' → logprob: -11.375225067138672
    6. 'rate' → logprob: -11.500225067138672
    7. 'ow' → logprob: -12.125225067138672
    8. 'UMP' → logprob: -13.375225067138672
    9. 'umps' → logprob: -13.875225067138672
    10. 'umpe' → logprob: -13.875225067138672

Token 828: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -2.927930654550437e-05
    2. 'rate' → logprob: -10.625029563903809
    3. '_speed' → logprob: -12.875029563903809
    4. 'Rate' → logprob: -13.625029563903809
    5. '_output' → logprob: -15.250029563903809
    6. '_flow' → logprob: -15.625029563903809
    7. '_rates' → logprob: -15.875029563903809
    8. '(' → logprob: -16.625028610229492
    9. '   ' → logprob: -16.625028610229492
    10. '_RATE' → logprob: -16.750028610229492

Token 829: '(rate' (ID: 163194)
  Prédit: '(rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rate' → logprob: -0.10094133019447327
    2. '(p' → logprob: -2.3509414196014404
    3. '(value' → logprob: -7.600941181182861
    4. '(r' → logprob: -8.85094165802002
    5. '(' → logprob: -9.35094165802002
    6. '(speed' → logprob: -13.47594165802002
    7. '(amount' → logprob: -14.35094165802002
    8. ' (' → logprob: -14.35094165802002
    9. '(level' → logprob: -14.72594165802002
    10. '(power' → logprob: -14.85094165802002

Token 830: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025739530101418495
    2. '(rate' → logprob: -4.150739669799805
    3. ')' → logprob: -4.650739669799805
    4. '   ' → logprob: -10.275739669799805
    5. 'rate' → logprob: -11.025739669799805
    6. '(r' → logprob: -11.150739669799805
    7. '):' → logprob: -11.150739669799805
    8. ' :' → logprob: -11.775739669799805
    9. '(' → logprob: -12.650739669799805
    10. ' )' → logprob: -13.025739669799805

Token 831: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0007248217007145286
    2. ' float' → logprob: -7.250724792480469
    3. ')' → logprob: -11.375724792480469
    4. 'f' → logprob: -13.375724792480469
    5. '=float' → logprob: -14.125724792480469
    6. '.float' → logprob: -15.125724792480469
    7. ',float' → logprob: -15.125724792480469
    8. '```' → logprob: -15.750724792480469
    9. '(float' → logprob: -15.875724792480469
    10. 'loat' → logprob: -16.75072479248047

Token 832: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.87500286102295
    4. ',)' → logprob: -16.375003814697266
    5. ')->' → logprob: -16.500003814697266
    6. '()' → logprob: -17.625003814697266
    7. '):' → logprob: -18.250003814697266
    8. '')' → logprob: -18.625003814697266
    9. ',' → logprob: -18.625003814697266
    10. '")' → logprob: -18.875003814697266

Token 833: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.031130028888583183
    2. ' ->' → logprob: -3.656130075454712
    3. ':' → logprob: -5.781129837036133
    4. ')' → logprob: -7.406129837036133
    5. '()->' → logprob: -7.531129837036133
    6. ')->' → logprob: -8.156129837036133
    7. ':return' → logprob: -8.281129837036133
    8. '   ' → logprob: -10.656129837036133
    9. '()' → logprob: -11.906129837036133
    10. '->{' → logprob: -12.156129837036133

Token 834: ' str' (ID: 989)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.008736773394048214
    2. 'str' → logprob: -5.008736610412598
    3. '"{' → logprob: -6.758736610412598
    4. 'return' → logprob: -7.133736610412598
    5. ' f' → logprob: -10.508736610412598
    6. 'format' → logprob: -11.383736610412598
    7. 'print' → logprob: -11.758736610412598
    8. ''{' → logprob: -12.258736610412598
    9. 'lambda' → logprob: -12.883736610412598
    10. '   ' → logprob: -13.258736610412598

Token 835: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0836440771818161
    2. ':
' → logprob: -3.083644151687622
    3. ':return' → logprob: -4.208643913269043
    4. '       ' → logprob: -5.208643913269043
    5. '   ' → logprob: -5.458643913269043
    6. '(' → logprob: -6.083643913269043
    7. '():' → logprob: -6.208643913269043
    8. '->' → logprob: -6.208643913269043
    9. '():
' → logprob: -6.583643913269043
    10. 'return' → logprob: -7.583643913269043

Token 836: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003363431431353092
    2. 'return' → logprob: -5.753363609313965
    3. ' return' → logprob: -8.628363609313965
    4. '{return' → logprob: -12.753363609313965
    5. '   ' → logprob: -13.253363609313965
    6. 'f' → logprob: -14.003363609313965
    7. '```' → logprob: -14.878363609313965
    8. '{' → logprob: -15.253363609313965
    9. '
' → logprob: -15.628363609313965
    10. ' f' → logprob: -15.753363609313965

Token 837: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.590104698669165e-05
    2. 'f' → logprob: -10.250085830688477
    3. '       ' → logprob: -10.250085830688477
    4. ' return' → logprob: -11.250085830688477
    5. '   ' → logprob: -13.125085830688477
    6. '           ' → logprob: -16.750085830688477
    7. '{return' → logprob: -16.875085830688477
    8. '	return' → logprob: -18.125085830688477
    9. '```' → logprob: -18.875085830688477
    10. ' f' → logprob: -19.500085830688477

Token 838: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.9054008084349334e-05
    2. ' f' → logprob: -10.750039100646973
    3. '"{' → logprob: -11.000039100646973
    4. 'format' → logprob: -14.000039100646973
    5. '{' → logprob: -17.750038146972656
    6. ''{' → logprob: -17.750038146972656
    7. '"' → logprob: -18.875038146972656
    8. '(f' → logprob: -19.375038146972656
    9. '	f' → logprob: -19.500038146972656
    10. '   ' → logprob: -20.250038146972656

Token 839: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -4.961759259458631e-06
    2. ''{' → logprob: -12.750004768371582
    3. '{' → logprob: -13.250004768371582
    4. 'f' → logprob: -15.125004768371582
    5. '"' → logprob: -19.5000057220459
    6. '("{' → logprob: -19.5000057220459
    7. '{"' → logprob: -21.5000057220459
    8. ' f' → logprob: -21.7500057220459
    9. ' "{' → logprob: -22.2500057220459
    10. '(f' → logprob: -23.0000057220459

Token 840: 'rate' (ID: 18514)
  Prédit: 'rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rate' → logprob: -1.9361264946837764e-07
    2. 'round' → logprob: -17.125
    3. ' rate' → logprob: -17.125
    4. '(rate' → logprob: -17.125
    5. '0' → logprob: -18.625
    6. 'ratio' → logprob: -19.375
    7. '.rate' → logprob: -19.625
    8. 'format' → logprob: -19.625
    9. '   ' → logprob: -20.0
    10. 'float' → logprob: -20.0

Token 841: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -6.034592388459714e-06
    2. '.' → logprob: -12.125005722045898
    3. ' :.' → logprob: -14.625005722045898
    4. ':' → logprob: -16.1250057220459
    5. ' .' → logprob: -18.6250057220459
    6. '}' → logprob: -19.7500057220459
    7. '{' → logprob: -19.7500057220459
    8. '0' → logprob: -19.8750057220459
    9. '}.' → logprob: -20.6250057220459
    10. '   ' → logprob: -20.7500057220459

Token 842: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.17041736841201782
    2. '7' → logprob: -2.045417308807373
    3. '9' → logprob: -3.795417308807373
    4. '8' → logprob: -5.795417308807373
    5. '10' → logprob: -6.795417308807373
    6. '06' → logprob: -7.420417308807373
    7. '07' → logprob: -9.420417785644531
    8. '12' → logprob: -11.045417785644531
    9. '09' → logprob: -11.420417785644531
    10. '08' → logprob: -11.795417785644531

Token 843: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'g' → logprob: -19.0
    3. 'e' → logprob: -20.5
    4. 'lf' → logprob: -21.5
    5. '"' → logprob: -22.875
    6. '6' → logprob: -23.75
    7. ''f' → logprob: -23.875
    8. 'fi' → logprob: -23.875
    9. '```' → logprob: -23.875
    10. 'F' → logprob: -24.0

Token 844: '}"

' (ID: 103433)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}"' → logprob: -4.127333340875339e-06
    2. '}' → logprob: -12.750003814697266
    3. '}"
' → logprob: -14.625003814697266
    4. '"' → logprob: -14.625003814697266
    5. '"}' → logprob: -16.250003814697266
    6. '}".' → logprob: -16.625003814697266
    7. '}}"' → logprob: -16.750003814697266
    8. ')"' → logprob: -17.625003814697266
    9. ' }' → logprob: -17.875003814697266
    10. '}")' → logprob: -17.875003814697266

Token 845: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6052349805831909
    2. 'def' → logprob: -0.8552349805831909
    3. 'import' → logprob: -3.8552350997924805
    4. '```' → logprob: -5.6052350997924805
    5. '#' → logprob: -6.1052350997924805
    6. '<|end|>' → logprob: -6.6052350997924805
    7. 'from' → logprob: -8.60523509979248
    8. 'for' → logprob: -9.10523509979248
    9. ' if' → logprob: -9.73023509979248
    10. '#!/' → logprob: -9.73023509979248

Token 846: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00020389800192788243
    2. ' main' → logprob: -8.500204086303711
    3. 'process' → logprob: -15.375204086303711
    4. 'run' → logprob: -16.62520408630371
    5. '_main' → logprob: -17.25020408630371
    6. 'solve' → logprob: -17.25020408630371
    7. '	main' → logprob: -18.87520408630371
    8. 'read' → logprob: -19.00020408630371
    9. 'parse' → logprob: -20.75020408630371
    10. '```' → logprob: -21.37520408630371

Token 847: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.4656579120783135e-05
    2. '():
' → logprob: -10.125044822692871
    3. ' ():' → logprob: -12.625044822692871
    4. '()' → logprob: -13.625044822692871
    5. '():
' → logprob: -17.000043869018555
    6. '():

' → logprob: -18.750043869018555
    7. '_' → logprob: -19.000043869018555
    8. '(' → logprob: -19.000043869018555
    9. '().' → logprob: -19.750043869018555
    10. '()->' → logprob: -20.125043869018555

Token 848: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005013632588088512
    2. 'for' → logprob: -5.505013465881348
    3. 'parser' → logprob: -7.130013465881348
    4. 'input' → logprob: -10.130013465881348
    5. ' for' → logprob: -10.130013465881348
    6. 'lines' → logprob: -10.630013465881348
    7. 'import' → logprob: -11.505013465881348
    8. ' parser' → logprob: -11.630013465881348
    9. ' lines' → logprob: -12.255013465881348
    10. 'inputs' → logprob: -13.380013465881348

Token 849: ' parser' (ID: 14216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0634429007768631
    2. 'parser' (adapté à ' parser') → logprob: -2.8134429454803467
    3. 'input' → logprob: -6.938442707061768
    4. 'tables' → logprob: -8.688443183898926
    5. 'import' → logprob: -9.313443183898926
    6. '   ' → logprob: -9.313443183898926
    7. 'schedule' → logprob: -9.438443183898926
    8. ' for' → logprob: -10.063443183898926
    9. 'inputs' → logprob: -11.563443183898926
    10. 's' → logprob: -11.938443183898926

Token 850: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760778784751892
    2. '=' → logprob: -0.8260778784751892
    3. '_parser' → logprob: -9.326077461242676
    4. '   ' → logprob: -10.451077461242676
    5. 'parser' → logprob: -11.951077461242676
    6. '()' → logprob: -12.951077461242676
    7. '.' → logprob: -13.076077461242676
    8. ' ' → logprob: -13.326077461242676
    9. '=parse' → logprob: -13.451077461242676
    10. '_iter' → logprob: -13.451077461242676

Token 851: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -3.128163257315464e-07
    2. ' Input' → logprob: -15.5
    3. 'input' → logprob: -21.125
    4. 'Output' → logprob: -22.25
    5. '	Input' → logprob: -23.5
    6. '_input' → logprob: -25.5
    7. '<Input' → logprob: -25.5
    8. '\Input' → logprob: -26.0
    9. 'INPUT' → logprob: -26.25
    10. '_Input' → logprob: -26.5

Token 852: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'parser' → logprob: -16.75
    3. 'Handler' → logprob: -19.625
    4. 'Formatter' → logprob: -19.875
    5. 'Processor' → logprob: -20.0
    6. '_parser' → logprob: -21.75
    7. '=' → logprob: -22.125
    8. 'Parse' → logprob: -22.625
    9. '(Parser' → logprob: -22.625
    10. '.Parser' → logprob: -22.75

Token 853: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08092030137777328
    2. '.parse' → logprob: -2.5809202194213867
    3. '()
' → logprob: -6.330920219421387
    4. '().' → logprob: -9.205920219421387
    5. 'parse' → logprob: -9.205920219421387
    6. '.' → logprob: -11.455920219421387
    7. '()

' → logprob: -11.705920219421387
    8. '   ' → logprob: -11.955920219421387
    9. 'Parser' → logprob: -12.580920219421387
    10. '.py' → logprob: -12.830920219421387

Token 854: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029938392341136932
    2. 'for' → logprob: -3.5299384593963623
    3. 'model' → logprob: -9.279938697814941
    4. 'output' → logprob: -10.404938697814941
    5. '```' → logprob: -11.154938697814941
    6. ' for' → logprob: -11.404938697814941
    7. 'schedule' → logprob: -11.654938697814941
    8. 'formatter' → logprob: -11.654938697814941
    9. 'consumer' → logprob: -12.279938697814941
    10. 'models' → logprob: -12.404938697814941

Token 855: ' model' (ID: 2359)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2028614729642868
    2. 'model' (adapté à ' model') → logprob: -1.7028614282608032
    3. 'models' → logprob: -7.577861309051514
    4. 'tank' → logprob: -8.077861785888672
    5. 'formatter' → logprob: -9.077861785888672
    6. 'cons' → logprob: -9.077861785888672
    7. 'solver' → logprob: -9.327861785888672
    8. 'consumer' → logprob: -9.327861785888672
    9. 'pump' → logprob: -9.452861785888672
    10. 'calculator' → logprob: -10.077861785888672

Token 856: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02978196181356907
    2. '=' → logprob: -3.5297820568084717
    3. '   ' → logprob: -10.65478229522705
    4. '=model' → logprob: -12.02978229522705
    5. '  ' → logprob: -13.65478229522705
    6. ' ' → logprob: -15.15478229522705
    7. '.' → logprob: -15.77978229522705
    8. '    ' → logprob: -16.029781341552734
    9. '	' → logprob: -16.529781341552734
    10. ':' → logprob: -16.904781341552734

Token 857: ' Tank' (ID: 46198)
  Prédit: 'Tank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tank' → logprob: -0.01416350994259119
    2. ' Tank' → logprob: -4.264163494110107
    3. ' tank' → logprob: -20.889163970947266
    4. 'tank' → logprob: -22.889163970947266
    5. 'T' → logprob: -23.264163970947266
    6. 'Task' → logprob: -23.389163970947266
    7. '	T' → logprob: -23.639163970947266
    8. ' ' → logprob: -23.764163970947266
    9. '   ' → logprob: -24.139163970947266
    10. 'Token' → logprob: -24.389163970947266

Token 858: 'Consumption' (ID: 128207)
  Prédit: 'Consumption'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Consumption' → logprob: 0.0
    2. ' Consumption' → logprob: -17.25
    3. 'Consumer' → logprob: -19.375
    4. 'cons' → logprob: -20.375
    5. 'Consum' → logprob: -20.375
    6. 'Tank' → logprob: -20.5
    7. '_consum' → logprob: -20.5
    8. 'Completion' → logprob: -20.625
    9. ' consumption' → logprob: -21.125
    10. 'Competition' → logprob: -21.625

Token 859: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: 0.0
    2. '	Model' → logprob: -19.625
    3. 'odel' → logprob: -19.75
    4. 'model' → logprob: -20.125
    5. ' Model' → logprob: -20.125
    6. '_Model' → logprob: -21.375
    7. 'Mode' → logprob: -21.625
    8. 'Models' → logprob: -21.875
    9. '_model' → logprob: -22.0
    10. '.Model' → logprob: -22.75

Token 860: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03850145637989044
    2. 'for' → logprob: -3.288501501083374
    3. '
' → logprob: -8.038501739501953
    4. ' for' → logprob: -9.288501739501953
    5. '    
' → logprob: -10.038501739501953
    6. '```' → logprob: -14.788501739501953
    7. 'try' → logprob: -15.163501739501953
    8. '	for' → logprob: -16.038501739501953
    9. '
' → logprob: -16.663501739501953
    10. '  
' → logprob: -17.288501739501953

Token 861: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3869452178478241
    2. 'for' → logprob: -1.1369452476501465
    3. ' for' → logprob: -9.761944770812988
    4. '
' → logprob: -11.511944770812988
    5. '    
' → logprob: -12.261944770812988
    6. '```' → logprob: -13.511944770812988
    7. 'try' → logprob: -15.011944770812988
    8. '	for' → logprob: -16.511945724487305
    9. '       ' → logprob: -17.386945724487305
    10. 'with' → logprob: -17.636945724487305

Token 862: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.4121114822482923e-06
    2. 'import' → logprob: -12.750003814697266
    3. 'try' → logprob: -15.000003814697266
    4. '   ' → logprob: -16.250003814697266
    5. ' for' → logprob: -16.500003814697266
    6. '    
' → logprob: -19.000003814697266
    7. 'from' → logprob: -19.125003814697266
    8. 'output' → logprob: -21.875003814697266
    9. '	for' → logprob: -22.250003814697266
    10. '
' → logprob: -22.375003814697266

Token 863: ' schedule' (ID: 12262)
  Prédit: 'schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'schedule' → logprob: -0.04306416213512421
    2. ' schedule' → logprob: -3.1680641174316406
    3. 'sched' → logprob: -10.16806411743164
    4. '   ' → logprob: -12.16806411743164
    5. 's' → logprob: -12.41806411743164
    6. 'table' → logprob: -12.54306411743164
    7. ' ' → logprob: -12.91806411743164
    8. 'st' → logprob: -13.04306411743164
    9. '(schedule' → logprob: -13.04306411743164
    10. 'sche' → logprob: -13.41806411743164

Token 864: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.0002790935104712844
    2. 'table' → logprob: -8.250279426574707
    3. 'Table' → logprob: -11.250279426574707
    4. ' in' → logprob: -12.375279426574707
    5. 's' → logprob: -15.750279426574707
    6. '_' → logprob: -15.750279426574707
    7. '_TABLE' → logprob: -16.25027847290039
    8. '_tables' → logprob: -16.50027847290039
    9. 'in' → logprob: -17.37527847290039
    10. '   ' → logprob: -17.62527847290039

Token 865: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012512002140283585
    2. 'in' → logprob: -4.38751220703125
    3. 's' → logprob: -14.01251220703125
    4. '	in' → logprob: -14.51251220703125
    5. '   ' → logprob: -14.88751220703125
    6. '_in' → logprob: -15.76251220703125
    7. 'import' → logprob: -15.76251220703125
    8. ' ' → logprob: -16.13751220703125
    9. ' ' → logprob: -16.38751220703125
    10. 'In' → logprob: -16.88751220703125

Token 866: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.014164687134325504
    2. ' parser' → logprob: -4.264164924621582
    3. '(parser' → logprob: -14.014164924621582
    4. '	parser' → logprob: -15.764164924621582
    5. '   ' → logprob: -16.389163970947266
    6. 'Input' → logprob: -16.889163970947266
    7. '.parser' → logprob: -17.889163970947266
    8. 'Parser' → logprob: -18.264163970947266
    9. 'parse' → logprob: -18.889163970947266
    10. ' Input' → logprob: -19.014163970947266

Token 867: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -3.607391408877447e-05
    2. '.' → logprob: -10.500036239624023
    3. '   ' → logprob: -11.875036239624023
    4. 'parse' → logprob: -14.250036239624023
    5. ' .' → logprob: -15.250036239624023
    6. ':' → logprob: -15.625036239624023
    7. '().' → logprob: -15.875036239624023
    8. '	parse' → logprob: -16.375036239624023
    9. '=parse' → logprob: -17.000036239624023
    10. '_parse' → logprob: -17.000036239624023

Token 868: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.228561349213123e-05
    2. '():
' → logprob: -10.125052452087402
    3. ' ():' → logprob: -11.625052452087402
    4. '(schedule' → logprob: -13.000052452087402
    5. '()' → logprob: -14.375052452087402
    6. '():
' → logprob: -16.375051498413086
    7. '(s' → logprob: -16.750051498413086
    8. '(' → logprob: -16.875051498413086
    9. '().' → logprob: -17.250051498413086
    10. ':' → logprob: -17.750051498413086

Token 869: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027206414961256087
    2. ' rate' → logprob: -8.875271797180176
    3. 'rate' → logprob: -9.250271797180176
    4. '   ' → logprob: -10.625271797180176
    5. ' pump' → logprob: -13.250271797180176
    6. 'result' → logprob: -13.375271797180176
    7. '```' → logprob: -13.375271797180176
    8. 'print' → logprob: -13.625271797180176
    9. 'pump' → logprob: -13.625271797180176
    10. '        
' → logprob: -13.625271797180176

Token 870: ' answer' (ID: 6052)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rate' → logprob: -0.30532175302505493
    2. 'pump' → logprob: -1.6803216934204102
    3. '       ' → logprob: -3.43032169342041
    4. 'minimal' → logprob: -3.80532169342041
    5. 'result' → logprob: -4.68032169342041
    6. 'min' → logprob: -5.55532169342041
    7. ' rate' → logprob: -6.05532169342041
    8. ' pump' → logprob: -6.05532169342041
    9. 'res' → logprob: -6.18032169342041
    10. ' minimal' → logprob: -6.68032169342041

Token 871: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000646433443762362
    2. '=' → logprob: -7.500646591186523
    3. '_rate' → logprob: -9.375646591186523
    4. '   ' → logprob: -11.875646591186523
    5. '    ' → logprob: -14.125646591186523
    6. '_' → logprob: -14.625646591186523
    7. ':' → logprob: -15.750646591186523
    8. '       ' → logprob: -16.125646591186523
    9. ' ' → logprob: -16.500646591186523
    10. '```' → logprob: -17.125646591186523

Token 872: ' model' (ID: 2359)
  Prédit: ' model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' model' → logprob: -0.4740773141384125
    2. 'model' → logprob: -0.9740773439407349
    3. '	model' → logprob: -15.724077224731445
    4. '(model' → logprob: -16.974077224731445
    5. 'mode' → logprob: -17.224077224731445
    6. '   ' → logprob: -17.349077224731445
    7. '=model' → logprob: -17.474077224731445
    8. '$model' → logprob: -17.849077224731445
    9. ':model' → logprob: -19.224077224731445
    10. ' mode' → logprob: -19.724077224731445

Token 873: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -3.6312321753939614e-05
    2. 'minimal' → logprob: -10.250036239624023
    3. '.' → logprob: -14.500036239624023
    4. '.minimum' → logprob: -15.375036239624023
    5. ' minimal' → logprob: -16.625036239624023
    6. ' .' → logprob: -17.500036239624023
    7. 'min' → logprob: -18.750036239624023
    8. '	min' → logprob: -18.875036239624023
    9. '   ' → logprob: -19.000036239624023
    10. ':min' → logprob: -19.125036239624023

Token 874: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -5.512236498361744e-07
    2. '_p' → logprob: -15.375000953674316
    3. '_' → logprob: -16.0
    4. 'inal' → logprob: -16.625
    5. 'iminal' → logprob: -18.25
    6. 'imum' → logprob: -18.75
    7. 'IMAL' → logprob: -18.75
    8. 'imals' → logprob: -19.125
    9. 'mal' → logprob: -20.625
    10. 'imized' → logprob: -21.0

Token 875: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.625001907348633
    3. 'pump' → logprob: -14.250001907348633
    4. ' _' → logprob: -15.125001907348633
    5. 'Pump' → logprob: -17.000001907348633
    6. ' pump' → logprob: -17.000001907348633
    7. '\' → logprob: -17.750001907348633
    8. '```' → logprob: -18.375001907348633
    9. '_
' → logprob: -19.375001907348633
    10. '

' → logprob: -19.750001907348633

Token 876: 'ump' (ID: 2643)
  Prédit: 'ump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ump' → logprob: -0.009065833874046803
    2. 'pump' → logprob: -4.759065628051758
    3. 'mp' → logprob: -8.759065628051758
    4. 'p' → logprob: -8.884065628051758
    5. '_p' → logprob: -8.884065628051758
    6. 'omp' → logprob: -12.259065628051758
    7. ' pump' → logprob: -12.509065628051758
    8. 'um' → logprob: -13.384065628051758
    9. '_rate' → logprob: -13.759065628051758
    10. 'amp' → logprob: -13.884065628051758

Token 877: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -1.0683535037969705e-05
    2. 'rate' → logprob: -12.37501049041748
    3. 'ate' → logprob: -12.87501049041748
    4. 'p' → logprob: -13.37501049041748
    5. 'or' → logprob: -13.87501049041748
    6. 'pump' → logprob: -15.37501049041748
    7. 'o' → logprob: -15.62501049041748
    8. 'Rate' → logprob: -15.75001049041748
    9. 'er' → logprob: -16.000011444091797
    10. 'ing' → logprob: -16.500011444091797

Token 878: '(schedule' (ID: 175256)
  Prédit: '(schedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(schedule' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -14.75
    3. '(' → logprob: -17.875
    4. 'schedule' → logprob: -18.125
    5. '(
' → logprob: -18.75
    6. '(schema' → logprob: -20.375
    7. '(score' → logprob: -20.75
    8. '(sheet' → logprob: -21.0
    9. '(sensor' → logprob: -21.125
    10. '(scroll' → logprob: -21.25

Token 879: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -3.070975071750581e-05
    2. 'table' → logprob: -10.500030517578125
    3. 'Table' → logprob: -14.250030517578125
    4. ')' → logprob: -14.750030517578125
    5. '_TABLE' → logprob: -14.875030517578125
    6. '_rate' → logprob: -15.375030517578125
    7. '_t' → logprob: -15.625030517578125
    8. '   ' → logprob: -15.625030517578125
    9. ')_' → logprob: -15.625030517578125
    10. ')table' → logprob: -16.000030517578125

Token 880: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6488668918609619
    2. '       ' → logprob: -1.023866891860962
    3. ')' → logprob: -2.398866891860962
    4. '
' → logprob: -3.648866891860962
    5. '        
' → logprob: -7.023866653442383
    6. '<|end|>' → logprob: -8.648866653442383
    7. ')
' → logprob: -10.273866653442383
    8. '  
' → logprob: -10.398866653442383
    9. '):
' → logprob: -10.523866653442383
    10. '
' → logprob: -10.648866653442383

Token 881: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.5822400857578032e-05
    2. 'print' → logprob: -10.875025749206543
    3. '   ' → logprob: -12.250025749206543
    4. '
' → logprob: -14.125025749206543
    5. '        
' → logprob: -14.875025749206543
    6. '```' → logprob: -15.125025749206543
    7. '<|end|>' → logprob: -15.375025749206543
    8. ' print' → logprob: -15.375025749206543
    9. '           ' → logprob: -16.62502670288086
    10. '	' → logprob: -17.25002670288086

Token 882: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00041982904076576233
    2. ' print' → logprob: -8.250419616699219
    3. '       ' → logprob: -8.750419616699219
    4. '
' → logprob: -17.00041961669922
    5. '   ' → logprob: -17.75041961669922
    6. '	print' → logprob: -18.37541961669922
    7. 'output' → logprob: -20.25041961669922
    8. '.print' → logprob: -21.00041961669922
    9. '```' → logprob: -21.12541961669922
    10. '_print' → logprob: -21.75041961669922

Token 883: '(Output' (ID: 132866)
  Prédit: '(Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Output' → logprob: -6.630610641877865e-06
    2. '(f' → logprob: -12.000006675720215
    3. '(' → logprob: -15.375006675720215
    4. 'Output' → logprob: -16.1250057220459
    5. '(Input' → logprob: -16.5000057220459
    6. '(output' → logprob: -18.8750057220459
    7. '	Output' → logprob: -20.5000057220459
    8. '(Error' → logprob: -20.6250057220459
    9. 'f' → logprob: -20.6250057220459
    10. '((' → logprob: -20.7500057220459

Token 884: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: 0.0
    2. 'formatter' → logprob: -17.75
    3. '_formatter' → logprob: -18.5
    4. 'Format' → logprob: -18.625
    5. 'Formatted' → logprob: -19.0
    6. ' Formatter' → logprob: -19.25
    7. 'Formatting' → logprob: -21.625
    8. '   ' → logprob: -21.875
    9. 'Calculator' → logprob: -22.25
    10. 'Printer' → logprob: -22.375

Token 885: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -1.3425219549390022e-05
    2. ').' → logprob: -11.50001335144043
    3. '.' → logprob: -12.87501335144043
    4. '.print' → logprob: -15.50001335144043
    5. 'format' → logprob: -15.62501335144043
    6. ' .' → logprob: -16.25001335144043
    7. '(format' → logprob: -16.50001335144043
    8. ')' → logprob: -17.12501335144043
    9. '.output' → logprob: -17.25001335144043
    10. '".' → logprob: -18.12501335144043

Token 886: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.0445127372804563e-05
    2. 'rate' → logprob: -12.37501049041748
    3. '(answer' → logprob: -12.87501049041748
    4. 'answer' → logprob: -13.25001049041748
    5. 'pump' → logprob: -13.37501049041748
    6. '(rate' → logprob: -15.75001049041748
    7. 'p' → logprob: -16.375009536743164
    8. ' pump' → logprob: -17.250009536743164
    9. '```' → logprob: -17.250009536743164
    10. 's' → logprob: -17.875009536743164

Token 887: 'ump' (ID: 2643)
  Prédit: 'ump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ump' → logprob: -3.03521392197581e-05
    2. 'pump' → logprob: -10.750030517578125
    3. '_rate' → logprob: -12.625030517578125
    4. 'rate' → logprob: -12.750030517578125
    5. 'um' → logprob: -14.000030517578125
    6. 'umping' → logprob: -14.875030517578125
    7. 'mp' → logprob: -15.000030517578125
    8. 'r' → logprob: -15.500030517578125
    9. 'u' → logprob: -15.625030517578125
    10. 'p' → logprob: -15.625030517578125

Token 888: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -1.0683535037969705e-05
    2. 'ate' → logprob: -12.50001049041748
    3. 'trate' → logprob: -12.87501049041748
    4. 'rate' → logprob: -13.25001049041748
    5. 't' → logprob: -14.12501049041748
    6. 'e' → logprob: -14.25001049041748
    7. 'r' → logprob: -14.75001049041748
    8. '_ratio' → logprob: -15.62501049041748
    9. '_RATE' → logprob: -16.000011444091797
    10. '_rates' → logprob: -16.125011444091797

Token 889: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -8.895480277715251e-06
    2. '(' → logprob: -11.750008583068848
    3. '(ans' → logprob: -14.875008583068848
    4. ')' → logprob: -14.875008583068848
    5. 'answer' → logprob: -16.250009536743164
    6. '(rate' → logprob: -16.750009536743164
    7. '(angle' → logprob: -17.375009536743164
    8. ' (' → logprob: -18.000009536743164
    9. '(argument' → logprob: -18.875009536743164
    10. '(address' → logprob: -18.875009536743164

Token 890: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5865020751953125
    2. '())' → logprob: -0.8365020751953125
    3. '))' → logprob: -4.5865020751953125
    4. '()))' → logprob: -8.336502075195312
    5. '()' → logprob: -9.711502075195312
    6. '())
' → logprob: -11.961502075195312
    7. '   ' → logprob: -12.336502075195312
    8. ')))' → logprob: -12.836502075195312
    9. '       ' → logprob: -13.961502075195312
    10. ')")' → logprob: -14.086502075195312

Token 891: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8312570318812504e-05
    2. '```' → logprob: -11.125018119812012
    3. ' if' → logprob: -12.875018119812012
    4. '<|end|>' → logprob: -14.750018119812012
    5. '
' → logprob: -14.875018119812012
    6. '#' → logprob: -15.625018119812012
    7. '``' → logprob: -18.125019073486328
    8. '    
' → logprob: -18.250019073486328
    9. '\' → logprob: -18.375019073486328
    10. '__' → logprob: -18.625019073486328

Token 892: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3872278928756714
    2. ' __' → logprob: -1.1372278928756714
    3. 'name' → logprob: -8.012228012084961
    4. '___' → logprob: -11.512228012084961
    5. '_name' → logprob: -11.637228012084961
    6. ''' → logprob: -13.262228012084961
    7. '____' → logprob: -14.012228012084961
    8. ' "__' → logprob: -14.137228012084961
    9. 'Name' → logprob: -14.512228012084961
    10. ' ' → logprob: -14.512228012084961

Token 893: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06510676443576813
    2. '==' → logprob: -2.9401068687438965
    3. ' ==' → logprob: -4.6901068687438965
    4. '=="' → logprob: -7.6901068687438965
    5. '__.__' → logprob: -8.690106391906738
    6. 'name' → logprob: -9.065106391906738
    7. '.__' → logprob: -9.440106391906738
    8. '=='' → logprob: -9.815106391906738
    9. ' __' → logprob: -10.565106391906738
    10. '[' → logprob: -10.815106391906738

Token 894: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.961759259458631e-06
    2. '__.__' → logprob: -12.375004768371582
    3. '==' → logprob: -14.625004768371582
    4. '__.' → logprob: -16.2500057220459
    5. '____' → logprob: -16.5000057220459
    6. '___' → logprob: -16.7500057220459
    7. '__('' → logprob: -17.2500057220459
    8. '=="' → logprob: -17.8750057220459
    9. ' ==' → logprob: -18.5000057220459
    10. '__
' → logprob: -18.6250057220459

Token 895: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012594294734299183
    2. '==' → logprob: -4.387594223022461
    3. ' ==' → logprob: -9.762594223022461
    4. '__.__' → logprob: -11.262594223022461
    5. '=="' → logprob: -11.512594223022461
    6. '=='' → logprob: -13.387594223022461
    7. '.__' → logprob: -14.262594223022461
    8. '=' → logprob: -14.512594223022461
    9. '_' → logprob: -14.762594223022461
    10. '===' → logprob: -15.012594223022461

Token 896: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3868856430053711
    2. ''' → logprob: -1.136885643005371
    3. '__' → logprob: -11.511885643005371
    4. ' "__' → logprob: -12.636885643005371
    5. ' '__' → logprob: -14.136885643005371
    6. ''"' → logprob: -15.886885643005371
    7. '"name' → logprob: -16.261886596679688
    8. '"user' → logprob: -16.636886596679688
    9. ''name' → logprob: -16.761886596679688
    10. '   ' → logprob: -17.136886596679688

Token 897: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12787578999996185
    2. '__' → logprob: -2.127875804901123
    3. '"' → logprob: -7.002875804901123
    4. 'name' → logprob: -11.002875328063965
    5. ''' → logprob: -11.252875328063965
    6. ' main' → logprob: -13.252875328063965
    7. '_main' → logprob: -13.377875328063965
    8. 'python' → logprob: -13.877875328063965
    9. '==' → logprob: -14.377875328063965
    10. '__":
' → logprob: -14.377875328063965

Token 898: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1614556908607483
    2. '__' → logprob: -1.9114556312561035
    3. '__.' → logprob: -7.5364556312561035
    4. '__':
' → logprob: -7.9114556312561035
    5. '__.__' → logprob: -8.536456108093262
    6. '__
' → logprob: -9.286456108093262
    7. '__["' → logprob: -10.411456108093262
    8. '__
' → logprob: -11.911456108093262
    9. '__("' → logprob: -13.911456108093262
    10. '__",' → logprob: -14.161456108093262

Token 899: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4626433551311493
    2. '   ' → logprob: -1.8376433849334717
    3. '__' → logprob: -1.8376433849334717
    4. '"' → logprob: -3.4626433849334717
    5. ' main' → logprob: -4.587643146514893
    6. ''' → logprob: -5.212643146514893
    7. '	main' → logprob: -5.837643146514893
    8. '	' → logprob: -7.962643146514893
    9. '('__' → logprob: -8.08764362335205
    10. '____' → logprob: -8.46264362335205

Token 900: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.5332478142227046e-05
    2. ' main' → logprob: -11.250015258789062
    3. '	main' → logprob: -13.250015258789062
    4. '   ' → logprob: -14.500015258789062
    5. 'import' → logprob: -17.250015258789062
    6. '_main' → logprob: -18.750015258789062
    7. '(main' → logprob: -19.875015258789062
    8. '.main' → logprob: -20.000015258789062
    9. 'Main' → logprob: -23.000015258789062
    10. ' ' → logprob: -23.875015258789062

Token 901: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 899
Tokens correctement prédits (1ère position, stricte): 369
Tokens correctement prédits (1ère position, avec adaptation): 410
Tokens correctement prédits (top 10): 750
Précision stricte (1ère position): 41.05%
Précision adaptée (1ère position): 45.61%
Précision (top 10): 83.43%
================================================================================
