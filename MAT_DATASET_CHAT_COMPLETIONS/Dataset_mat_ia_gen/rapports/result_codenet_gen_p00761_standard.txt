================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    a0, L = input().split()
    if a0 == '0' and L == '0':
        break
    L = int(L)
    seq = []
    a = a0.zfill(L)
    while a not in seq:
        seq.append(a)
        digits = list(a)
        big = int(''.join(sorted(digits, reverse=True)))
        small = int(''.join(sorted(digits)))
        a = str(big - small).zfill(L)
    i = len(seq)
    j = seq.index(a)
    print(j, int(a), i - j)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6314842700958252
    2. '    ' → logprob: -2.131484270095825
    3. '    
' → logprob: -2.631484270095825
    4. '\' → logprob: -2.881484270095825
    5. '\n' → logprob: -2.881484270095825
    6. ' ' → logprob: -3.256484270095825
    7. '```' → logprob: -3.256484270095825
    8. ' 
' → logprob: -3.631484270095825
    9. '  
' → logprob: -4.131484031677246
    10. '     
' → logprob: -4.256484031677246

Token 4: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5678659677505493
    2. '```' → logprob: -1.6928659677505493
    3. '    ' → logprob: -2.0678658485412598
    4. ' ' → logprob: -2.4428658485412598
    5. '    
' → logprob: -4.81786584854126
    6. '`' → logprob: -5.69286584854126
    7. ' ```' → logprob: -5.69286584854126
    8. '  ' → logprob: -5.94286584854126
    9. '\' → logprob: -6.19286584854126
    10. '       ' → logprob: -6.44286584854126

Token 5: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4310882091522217
    2. '=' → logprob: -1.8060882091522217
    3. ' =' → logprob: -3.6810882091522217
    4. 'd' → logprob: -3.6810882091522217
    5. '   ' → logprob: -3.6810882091522217
    6. ' +=' → logprob: -4.056088447570801
    7. '+' → logprob: -4.181088447570801
    8. '[' → logprob: -4.431088447570801
    9. 'r' → logprob: -4.431088447570801
    10. 'a' → logprob: -4.431088447570801

Token 6: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.27233704924583435
    2. '[' → logprob: -2.147336959838867
    3. '.' → logprob: -3.022336959838867
    4. '=' → logprob: -3.522336959838867
    5. ' ' → logprob: -4.147336959838867
    6. 'a' → logprob: -4.772336959838867
    7. ')' → logprob: -5.397336959838867
    8. '_' → logprob: -5.772336959838867
    9. 'd' → logprob: -6.147336959838867
    10. ',' → logprob: -6.397336959838867

Token 7: ' L' (ID: 451)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11998300999403
    2. ' a' → logprob: -2.244982957839966
    3. 'b' → logprob: -5.494983196258545
    4. ' b' → logprob: -6.244983196258545
    5. ' ' → logprob: -7.369983196258545
    6. '=' → logprob: -8.244982719421387
    7. ' =' → logprob: -9.744982719421387
    8. '_a' → logprob: -10.494982719421387
    9. '    ' → logprob: -11.119982719421387
    10. 'space' → logprob: -11.619982719421387

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24448975920677185
    2. ',' → logprob: -2.2444896697998047
    3. ' =' → logprob: -2.3694896697998047
    4. '[' → logprob: -4.869489669799805
    5. '_' → logprob: -5.744489669799805
    6. 'i' → logprob: -6.369489669799805
    7. 'a' → logprob: -6.619489669799805
    8. '[i' → logprob: -7.744489669799805
    9. 'e' → logprob: -7.869489669799805
    10. '0' → logprob: -7.994489669799805

Token 9: ' input' (ID: 3422)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.9318945407867432
    2. ' map' → logprob: -1.1818945407867432
    3. 'input' → logprob: -1.4318945407867432
    4. ' input' → logprob: -3.056894540786743
    5. 'a' → logprob: -5.931894302368164
    6. '0' → logprob: -6.806894302368164
    7. ' a' → logprob: -6.931894302368164
    8. 'div' → logprob: -7.056894302368164
    9. 'int' → logprob: -7.056894302368164
    10. 'yield' → logprob: -7.181894302368164

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002085308311507106
    2. '()' → logprob: -7.377085208892822
    3. '('' → logprob: -7.877085208892822
    4. ''' → logprob: -8.12708568572998
    5. '"' → logprob: -8.25208568572998
    6. '(
' → logprob: -8.50208568572998
    7. '("("' → logprob: -9.25208568572998
    8. ' (' → logprob: -10.25208568572998
    9. '(

' → logprob: -10.50208568572998
    10. ')' → logprob: -10.87708568572998

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007157695363275707
    2. 'strip' → logprob: -7.250715732574463
    3. 'rs' → logprob: -12.625716209411621
    4. 'rstrip' → logprob: -13.375716209411621
    5. ' split' → logprob: -14.250716209411621
    6. 'spl' → logprob: -15.500716209411621
    7. 'replace' → logprob: -16.375715255737305
    8. 'sp' → logprob: -17.375715255737305
    9. 's' → logprob: -18.500715255737305
    10. '.split' → logprob: -18.750715255737305

Token 12: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013773107901215553
    2. '()' → logprob: -4.513772964477539
    3. '('' → logprob: -6.388772964477539
    4. '("("' → logprob: -7.763772964477539
    5. '`' → logprob: -9.138772964477539
    6. '```' → logprob: -9.388772964477539
    7. '(()' → logprob: -9.763772964477539
    8. '((' → logprob: -9.763772964477539
    9. '(

' → logprob: -9.888772964477539
    10. '(
' → logprob: -10.013772964477539

Token 13: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8113870024681091
    2. '   ' → logprob: -2.311387062072754
    3. ')' → logprob: -2.436387062072754
    4. '<|end|>' → logprob: -2.686387062072754
    5. '[' → logprob: -2.936387062072754
    6. ' ' → logprob: -3.186387062072754
    7. ',' → logprob: -3.436387062072754
    8. '\' → logprob: -3.561387062072754
    9. '    
' → logprob: -3.811387062072754
    10. 'if' → logprob: -3.811387062072754

Token 14: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6043902635574341
    2. 'if' (adapté à ' if') → logprob: -1.854390263557434
    3. ',' → logprob: -2.9793901443481445
    4. '[' → logprob: -2.9793901443481445
    5. ' ' → logprob: -3.1043901443481445
    6. ')' → logprob: -3.2293901443481445
    7. '   ' → logprob: -3.6043901443481445
    8. '<|end|>' → logprob: -3.9793901443481445
    9. '\n' → logprob: -4.6043901443481445
    10. '.' → logprob: -4.8543901443481445

Token 15: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2699631452560425
    2. ' not' → logprob: -1.5199631452560425
    3. 'a' → logprob: -4.269963264465332
    4. ' ' → logprob: -5.644963264465332
    5. 'not' → logprob: -8.144963264465332
    6. ' L' → logprob: -10.269963264465332
    7. '  ' → logprob: -11.394963264465332
    8. ' ' → logprob: -12.019963264465332
    9. ' '' → logprob: -13.144963264465332
    10. ' (' → logprob: -13.519963264465332

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004574780818074942
    2. ' ' → logprob: -6.504574775695801
    3. '[' → logprob: -6.754574775695801
    4. ' ==' → logprob: -6.879574775695801
    5. '==' → logprob: -7.879574775695801
    6. '_' → logprob: -7.879574775695801
    7. ' _' → logprob: -10.5045747756958
    8. '  ' → logprob: -11.0045747756958
    9. '   ' → logprob: -11.5045747756958
    10. '=' → logprob: -11.6295747756958

Token 17: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.017711792141199112
    2. '==' → logprob: -4.267711639404297
    3. ' !=' → logprob: -6.517711639404297
    4. ' ' → logprob: -6.642711639404297
    5. ' =' → logprob: -9.017711639404297
    6. '=' → logprob: -9.517711639404297
    7. ')' → logprob: -9.642711639404297
    8. '[' → logprob: -9.892711639404297
    9. ' =='' → logprob: -9.892711639404297
    10. '<|end|>' → logprob: -9.892711639404297

Token 18: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4532623589038849
    2. ''ex' → logprob: -1.4532623291015625
    3. '"' → logprob: -2.3282623291015625
    4. ''end' → logprob: -4.3282623291015625
    5. ''q' → logprob: -5.5782623291015625
    6. ''"' → logprob: -5.8282623291015625
    7. ''d' → logprob: -6.0782623291015625
    8. ''x' → logprob: -6.2032623291015625
    9. ''s' → logprob: -6.5782623291015625
    10. ''t' → logprob: -6.7032623291015625

Token 19: '0' (ID: 15)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7651912569999695
    2. ''' → logprob: -1.5151913166046143
    3. '0' → logprob: -1.5151913166046143
    4. 'e' → logprob: -4.015191078186035
    5. 'Q' → logprob: -4.390191078186035
    6. '"' → logprob: -4.515191078186035
    7. 'y' → logprob: -5.140191078186035
    8. 'x' → logprob: -5.265191078186035
    9. 'exit' → logprob: -5.390191078186035
    10. 'E' → logprob: -5.515191078186035

Token 20: ''' (ID: 6)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.1810348629951477
    2. ''' → logprob: -1.806034803390503
    3. ' ':' → logprob: -7.431035041809082
    4. ':' → logprob: -7.806035041809082
    5. ' and' → logprob: -9.431035041809082
    6. ' '' → logprob: -9.431035041809082
    7. '0' → logprob: -9.431035041809082
    8. 'and' → logprob: -11.681035041809082
    9. '':
' → logprob: -11.806035041809082
    10. '':
' → logprob: -11.931035041809082

Token 21: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03553035110235214
    2. ' and' → logprob: -3.4105303287506104
    3. 'and' → logprob: -6.6605305671691895
    4. ' :' → logprob: -7.6605305671691895
    5. ' or' → logprob: -9.535530090332031
    6. ':
' → logprob: -10.660530090332031
    7. ' ' → logprob: -11.285530090332031
    8. ':return' → logprob: -11.535530090332031
    9. ' a' → logprob: -12.910530090332031
    10. '<|end|>' → logprob: -13.035530090332031

Token 22: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.009188571944832802
    2. 'L' → logprob: -4.884188652038574
    3. ' ' → logprob: -6.509188652038574
    4. ' a' → logprob: -9.884188652038574
    5. ' ' → logprob: -11.259188652038574
    6. 'a' → logprob: -12.009188652038574
    7. '  ' → logprob: -12.259188652038574
    8. '<|end|>' → logprob: -12.384188652038574
    9. '    ' → logprob: -12.509188652038574
    10. '0' → logprob: -13.134188652038574

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03698547184467316
    2. '==' → logprob: -3.411985397338867
    3. ' ' → logprob: -5.911985397338867
    4. ' <=' → logprob: -8.911985397338867
    5. ' <' → logprob: -9.036985397338867
    6. ' !=' → logprob: -9.161985397338867
    7. ' =='' → logprob: -9.661985397338867
    8. '[' → logprob: -9.911985397338867
    9. '  ' → logprob: -10.161985397338867
    10. ''' → logprob: -10.911985397338867

Token 24: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0036205046344548464
    2. ' '' → logprob: -6.253620624542236
    3. '0' → logprob: -6.503620624542236
    4. ' ' → logprob: -9.128620147705078
    5. '"' → logprob: -10.503620147705078
    6. '   ' → logprob: -10.753620147705078
    7. '`' → logprob: -11.003620147705078
    8. '  ' → logprob: -12.128620147705078
    9. ' ' → logprob: -12.878620147705078
    10. 'space' → logprob: -13.253620147705078

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018916261615231633
    2. ' ' → logprob: -6.626891613006592
    3. ''' → logprob: -7.501891613006592
    4. '"' → logprob: -12.25189208984375
    5. ' '' → logprob: -12.87689208984375
    6. '1' → logprob: -13.93939208984375
    7. '')' → logprob: -14.37689208984375
    8. '  ' → logprob: -14.43939208984375
    9. '#' → logprob: -15.12689208984375
    10. ''''' → logprob: -15.50189208984375

Token 26: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0017829985590651631
    2. ':' → logprob: -6.5017828941345215
    3. '':
' → logprob: -8.87678337097168
    4. ''' → logprob: -9.87678337097168
    5. '":' → logprob: -10.25178337097168
    6. '':
' → logprob: -10.50178337097168
    7. '):' → logprob: -11.87678337097168
    8. ''):' → logprob: -12.12678337097168
    9. ' ':' → logprob: -12.75178337097168
    10. '   ' → logprob: -12.87678337097168

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008750165579840541
    2. ':' → logprob: -7.250874996185303
    3. '\n' → logprob: -9.875875473022461
    4. '   ' → logprob: -9.875875473022461
    5. ' break' → logprob: -11.125875473022461
    6. '	break' → logprob: -11.500875473022461
    7. '	' → logprob: -12.250875473022461
    8. '     ' → logprob: -12.625875473022461
    9. '        
' → logprob: -12.625875473022461
    10. '<|end|>' → logprob: -12.625875473022461

Token 28: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.024189159274101257
    2. '       ' → logprob: -3.8991892337799072
    3. 'break' (adapté à ' break') → logprob: -6.399188995361328
    4. '\n' → logprob: -6.649188995361328
    5. '   ' → logprob: -8.024188995361328
    6. '	break' → logprob: -8.274188995361328
    7. '           ' → logprob: -10.524188995361328
    8. '```' → logprob: -11.149188995361328
    9. '_break' → logprob: -11.524188995361328
    10. '\t' → logprob: -11.774188995361328

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07106748968362808
    2. '\n' → logprob: -3.4460675716400146
    3. '    
' → logprob: -3.8210675716400146
    4. '
' → logprob: -4.8210673332214355
    5. '  
' → logprob: -6.6960673332214355
    6. ')' → logprob: -6.9460673332214355
    7. '\' → logprob: -6.9460673332214355
    8. '<|end|>' → logprob: -7.0710673332214355
    9. ' ' → logprob: -7.8210673332214355
    10. '  ' → logprob: -8.196067810058594

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02092207595705986
    2. '    
' → logprob: -4.0209221839904785
    3. '\n' → logprob: -6.8959221839904785
    4. '```' → logprob: -8.39592170715332
    5. 'print' → logprob: -8.52092170715332
    6. '
' → logprob: -9.02092170715332
    7. '       ' → logprob: -9.02092170715332
    8. '  
' → logprob: -9.14592170715332
    9. 'n' → logprob: -9.52092170715332
    10. ',' → logprob: -9.52092170715332

Token 31: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05788907781243324
    2. 'n' → logprob: -3.807888984680176
    3. ' ' → logprob: -5.307888984680176
    4. ',' → logprob: -5.307888984680176
    5. '    ' → logprob: -5.557888984680176
    6. '    
' → logprob: -5.557888984680176
    7. '\n' → logprob: -6.432888984680176
    8. ' 
' → logprob: -6.432888984680176
    9. ' n' → logprob: -6.557888984680176
    10. ' if' → logprob: -6.807888984680176

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23479610681533813
    2. '=' → logprob: -1.8597960472106934
    3. '<|end|>' → logprob: -3.4847960472106934
    4. '=int' → logprob: -4.234796047210693
    5. ' ' → logprob: -5.359796047210693
    6. '<|end|>' → logprob: -6.734796047210693
    7. ')' → logprob: -6.859796047210693
    8. ',' → logprob: -7.734796047210693
    9. '    ' → logprob: -8.609796524047852
    10. '.' → logprob: -8.859796524047852

Token 33: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0889490619301796
    2. 'int' → logprob: -2.463948965072632
    3. '[int' → logprob: -12.963949203491211
    4. '(int' → logprob: -13.588949203491211
    5. ' in' → logprob: -13.713949203491211
    6. ' float' → logprob: -14.088949203491211
    7. '   ' → logprob: -14.213949203491211
    8. '    ' → logprob: -14.213949203491211
    9. '=int' → logprob: -14.213949203491211
    10. ' ' → logprob: -14.838949203491211

Token 34: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.029761141166090965
    2. '(' → logprob: -3.5297610759735107
    3. '()' → logprob: -11.90476131439209
    4. '(

' → logprob: -14.15476131439209
    5. '(
' → logprob: -14.40476131439209
    6. ' (' → logprob: -14.52976131439209
    7. 'L' → logprob: -14.52976131439209
    8. ')' → logprob: -14.52976131439209
    9. '('' → logprob: -15.02976131439209
    10. '(I' → logprob: -15.65476131439209

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.656383680412546e-05
    2. ')
' → logprob: -10.375046730041504
    3. ' )' → logprob: -11.625046730041504
    4. '<|end|>' → logprob: -13.750046730041504
    5. '   ' → logprob: -13.875046730041504
    6. '+' → logprob: -14.125046730041504
    7. '')' → logprob: -14.875046730041504
    8. '`)' → logprob: -14.875046730041504
    9. '```' → logprob: -15.000046730041504
    10. '*' → logprob: -15.000046730041504

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22125248610973358
    2. '<|end|>' → logprob: -1.84625244140625
    3. '
' → logprob: -4.72125244140625
    4. '    
' → logprob: -4.84625244140625
    5. ' if' → logprob: -5.34625244140625
    6. ' ' → logprob: -5.59625244140625
    7. '<|end|>' → logprob: -6.22125244140625
    8. '\n' → logprob: -6.72125244140625
    9. ',' → logprob: -6.84625244140625
    10. '    ' → logprob: -6.84625244140625

Token 37: ' seq' (ID: 26775)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1527665853500366
    2. 'a' → logprob: -1.7777665853500366
    3. 'i' → logprob: -2.777766704559326
    4. 'n' → logprob: -2.777766704559326
    5. ' if' → logprob: -2.777766704559326
    6. 's' → logprob: -2.902766704559326
    7. 'if' → logprob: -3.152766704559326
    8. ' ' → logprob: -3.652766704559326
    9. ' a' → logprob: -3.777766704559326
    10. ' i' → logprob: -4.152766704559326

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0313272587954998
    2. '=' → logprob: -3.656327247619629
    3. 's' → logprob: -5.906327247619629
    4. 'u' → logprob: -7.406327247619629
    5. '[' → logprob: -7.406327247619629
    6. ' ' → logprob: -8.281327247619629
    7. '_len' → logprob: -8.656327247619629
    8. '_' → logprob: -8.781327247619629
    9. 'ence' → logprob: -9.156327247619629
    10. ',' → logprob: -9.656327247619629

Token 39: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6681088209152222
    2. ' []' → logprob: -1.2931088209152222
    3. 'list' → logprob: -2.6681089401245117
    4. ' [' → logprob: -3.2931089401245117
    5. ' list' → logprob: -3.2931089401245117
    6. '[' → logprob: -3.6681089401245117
    7. '[input' → logprob: -3.6681089401245117
    8. '[int' → logprob: -5.043108940124512
    9. '[list' → logprob: -5.293108940124512
    10. 'input' → logprob: -5.543108940124512

Token 40: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7521438598632812
    2. 'for' → logprob: -0.8771438598632812
    3. 'a' (adapté à ' a') → logprob: -3.7521438598632812
    4. '   ' → logprob: -3.7521438598632812
    5. 'while' → logprob: -4.627143859863281
    6. ' while' → logprob: -4.752143859863281
    7. '[' → logprob: -4.877143859863281
    8. ' ' → logprob: -5.127143859863281
    9. 'n' → logprob: -5.377143859863281
    10. 'i' → logprob: -5.877143859863281

Token 42: ' =' (ID: 314)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013656463474035263
    2. ' =' → logprob: -5.1386566162109375
    3. '=' → logprob: -5.3886566162109375
    4. '_' → logprob: -7.5136566162109375
    5. '1' → logprob: -7.7636566162109375
    6. 'seq' → logprob: -8.138656616210938
    7. 'n' → logprob: -8.388656616210938
    8. 'i' → logprob: -8.513656616210938
    9. 's' → logprob: -8.513656616210938
    10. ' ' → logprob: -8.638656616210938

Token 43: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6838042736053467
    2. 'int' → logprob: -1.6838042736053467
    3. '[int' → logprob: -2.4338042736053467
    4. ' int' → logprob: -2.6838042736053467
    5. ' [' → logprob: -3.0588042736053467
    6. 'a' → logprob: -3.6838042736053467
    7. ' ' → logprob: -3.6838042736053467
    8. '1' → logprob: -3.8088042736053467
    9. '[' → logprob: -4.433804512023926
    10. '[]' → logprob: -5.058804512023926

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004705914470832795
    2. '[' → logprob: -8.000470161437988
    3. '[int' → logprob: -10.250470161437988
    4. 'a' → logprob: -10.500470161437988
    5. ' ' → logprob: -10.500470161437988
    6. 'int' → logprob: -11.750470161437988
    7. '1' → logprob: -12.000470161437988
    8. '-' → logprob: -12.125470161437988
    9. '[-' → logprob: -12.750470161437988
    10. '_' → logprob: -12.875470161437988

Token 45: '.z' (ID: 9161)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.006836260668933392
    2. 'f' → logprob: -5.631836414337158
    3. 'l' → logprob: -6.756836414337158
    4. 'e' → logprob: -7.256836414337158
    5. 'p' → logprob: -8.1318359375
    6. 'i' → logprob: -8.1318359375
    7. 'fi' → logprob: -8.2568359375
    8. 'a' → logprob: -9.7568359375
    9. 'fil' → logprob: -9.7568359375
    10. 'pad' → logprob: -9.8818359375

Token 47: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.5760683417320251
    2. '(' → logprob: -0.8260683417320251
    3. '((' → logprob: -9.076067924499512
    4. '(l' → logprob: -12.201067924499512
    5. '(n' → logprob: -13.201067924499512
    6. '(
' → logprob: -13.326067924499512
    7. ' (' → logprob: -13.826067924499512
    8. '(len' → logprob: -13.951067924499512
    9. '(length' → logprob: -14.201067924499512
    10. '(int' → logprob: -14.701067924499512

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007630494073964655
    2. '-' → logprob: -8.500762939453125
    3. ')
' → logprob: -8.500762939453125
    4. '+' → logprob: -8.625762939453125
    5. '))' → logprob: -10.000762939453125
    6. ' )' → logprob: -10.250762939453125
    7. '*' → logprob: -11.125762939453125
    8. ' -' → logprob: -11.250762939453125
    9. '[' → logprob: -11.375762939453125
    10. '')' → logprob: -11.750762939453125

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26695582270622253
    2. '<|end|>' → logprob: -2.016955852508545
    3. '
' → logprob: -3.016955852508545
    4. '\n' → logprob: -4.391955852508545
    5. '    
' → logprob: -4.641955852508545
    6. '+' → logprob: -5.266955852508545
    7. ' ' → logprob: -5.516955852508545
    8. '  
' → logprob: -5.641955852508545
    9. '[' → logprob: -5.766955852508545
    10. ' 
' → logprob: -6.016955852508545

Token 50: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1047295331954956
    2. 'for' → logprob: -1.6047295331954956
    3. '\n' → logprob: -2.854729652404785
    4. '[' → logprob: -2.979729652404785
    5. ' for' → logprob: -2.979729652404785
    6. '\' → logprob: -3.354729652404785
    7. 'seq' → logprob: -3.354729652404785
    8. 'n' → logprob: -3.729729652404785
    9. ' ' → logprob: -3.729729652404785
    10. '<|end|>' → logprob: -3.854729652404785

Token 51: ' a' (ID: 261)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.4565296769142151
    2. ' a' → logprob: -2.2065296173095703
    3. ' True' → logprob: -2.2065296173095703
    4. 'len' → logprob: -2.5815296173095703
    5. 'a' → logprob: -3.5815296173095703
    6. ' L' → logprob: -3.8315296173095703
    7. 'True' → logprob: -4.83152961730957
    8. 'L' → logprob: -5.58152961730957
    9. ' ' → logprob: -5.70652961730957
    10. ' int' → logprob: -6.20652961730957

Token 52: ' not' (ID: 625)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0034270286560059
    2. ' !=' → logprob: -1.7534270286560059
    3. '>' → logprob: -2.503427028656006
    4. '!=' → logprob: -2.628427028656006
    5. '.startswith' → logprob: -2.753427028656006
    6. '[-' → logprob: -3.628427028656006
    7. ' <' → logprob: -3.753427028656006
    8. '.endswith' → logprob: -3.753427028656006
    9. '<' → logprob: -3.878427028656006
    10. ' >' → logprob: -3.878427028656006

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20203544199466705
    2. 'in' → logprob: -1.7020354270935059
    3. '<|end|>' → logprob: -7.702035427093506
    4. '<|end|>' → logprob: -9.077035903930664
    5. '	in' → logprob: -11.452035903930664
    6. ' ' → logprob: -11.827035903930664
    7. ')' → logprob: -12.889535903930664
    8. '_in' → logprob: -13.014535903930664
    9. '=' → logprob: -13.139535903930664
    10. '   ' → logprob: -13.202035903930664

Token 54: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.022058742120862007
    2. ' seq' → logprob: -3.8970587253570557
    3. '   ' → logprob: -6.522058963775635
    4. 'sequence' → logprob: -11.147058486938477
    5. '(seq' → logprob: -11.522058486938477
    6. ' ' → logprob: -11.897058486938477
    7. '  ' → logprob: -12.397058486938477
    8. 'se' → logprob: -12.772058486938477
    9. ' sequence' → logprob: -13.522058486938477
    10. 'set' → logprob: -13.647058486938477

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015364045975729823
    2. ':
' → logprob: -6.5015363693237305
    3. ' :' → logprob: -11.37653636932373
    4. ' and' → logprob: -12.12653636932373
    5. '):' → logprob: -12.12653636932373
    6. ':

' → logprob: -12.87653636932373
    7. '<|end|>' → logprob: -13.12653636932373
    8. ',' → logprob: -13.37653636932373
    9. '):
' → logprob: -13.62653636932373
    10. '>:' → logprob: -14.37653636932373

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1797075718641281
    2. '   ' → logprob: -2.3047075271606445
    3. '
' → logprob: -2.9297075271606445
    4. ':' → logprob: -6.0547075271606445
    5. '<|end|>' → logprob: -6.0547075271606445
    6. '[' → logprob: -6.5547075271606445
    7. '    
' → logprob: -6.5547075271606445
    8. '        
' → logprob: -7.4297075271606445
    9. '\n' → logprob: -7.5547075271606445
    10. '```' → logprob: -7.9297075271606445

Token 57: ' seq' (ID: 26775)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22818957269191742
    2. '   ' → logprob: -1.8531895875930786
    3. '
' → logprob: -3.728189468383789
    4. ' seq' → logprob: -4.603189468383789
    5. '    
' → logprob: -5.603189468383789
    6. 'seq' (adapté à ' seq') → logprob: -5.728189468383789
    7. '\n' → logprob: -5.853189468383789
    8. '        
' → logprob: -6.853189468383789
    9. ' 
' → logprob: -7.478189468383789
    10. '<|end|>' → logprob: -8.478189468383789

Token 58: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.048602476716041565
    2. '.' → logprob: -3.04860258102417
    3. '.app' → logprob: -11.798602104187012
    4. '.ap' → logprob: -12.923602104187012
    5. '.add' → logprob: -13.423602104187012
    6. 'append' → logprob: -13.548602104187012
    7. '.insert' → logprob: -14.673602104187012
    8. '.Append' → logprob: -15.173602104187012
    9. ' .' → logprob: -15.298602104187012
    10. '.extend' → logprob: -15.298602104187012

Token 59: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.008617527782917023
    2. '(' → logprob: -4.758617401123047
    3. '((' → logprob: -13.508617401123047
    4. '(
' → logprob: -13.883617401123047
    5. '(A' → logprob: -16.008617401123047
    6. '(ai' → logprob: -16.008617401123047
    7. '(an' → logprob: -16.133617401123047
    8. '(n' → logprob: -16.758617401123047
    9. '('' → logprob: -17.008617401123047
    10. '(u' → logprob: -17.758617401123047

Token 60: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16188181936740875
    2. ')' → logprob: -1.9118818044662476
    3. ')
' → logprob: -6.911881923675537
    4. '   ' → logprob: -7.661881923675537
    5. '       ' → logprob: -9.536881446838379
    6. 'a' → logprob: -9.911881446838379
    7. ' )
' → logprob: -10.661881446838379
    8. ')

' → logprob: -11.286881446838379
    9. ')a' → logprob: -11.786881446838379
    10. ')`
' → logprob: -12.286881446838379

Token 61: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035489752888679504
    2. 'a' → logprob: -3.535489797592163
    3. ' a' → logprob: -5.535489559173584
    4. 'n' → logprob: -7.910489559173584
    5. ',' → logprob: -8.410490036010742
    6. 's' → logprob: -8.785490036010742
    7. 'd' → logprob: -9.035490036010742
    8. '    
' → logprob: -9.035490036010742
    9. '    ' → logprob: -9.160490036010742
    10. '       ' → logprob: -9.785490036010742

Token 62: ' digits' (ID: 37806)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1461084932088852
    2. 'str' → logprob: -2.521108388900757
    3. 'int' → logprob: -3.396108388900757
    4. 'sum' → logprob: -4.896108627319336
    5. 's' → logprob: -5.271108627319336
    6. 'next' → logprob: -5.646108627319336
    7. 'print' → logprob: -6.771108627319336
    8. 'new' → logprob: -7.146108627319336
    9. 'tmp' → logprob: -7.396108627319336
    10. 'temp' → logprob: -7.646108627319336

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1827847808599472
    2. ' =' → logprob: -1.8077847957611084
    3. '_sorted' → logprob: -6.307784557342529
    4. '_sum' → logprob: -7.932784557342529
    5. '_list' → logprob: -8.682785034179688
    6. 'sorted' → logprob: -8.807785034179688
    7. '.sort' → logprob: -9.182785034179688
    8. 'sum' → logprob: -9.432785034179688
    9. '_' → logprob: -9.432785034179688
    10. '=int' → logprob: -10.182785034179688

Token 64: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9066668152809143
    2. '[a' → logprob: -1.4066667556762695
    3. '[int' → logprob: -1.7816667556762695
    4. ' [' → logprob: -2.6566667556762695
    5. '[len' → logprob: -3.0316667556762695
    6. '[list' → logprob: -3.1566667556762695
    7. '[str' → logprob: -4.5316667556762695
    8. 'list' → logprob: -5.1566667556762695
    9. 'sorted' → logprob: -6.5316667556762695
    10. 'a' → logprob: -7.1566667556762695

Token 65: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3898765444755554
    2. '(map' → logprob: -1.1398766040802002
    3. '(' → logprob: -6.139876365661621
    4. '(str' → logprob: -7.764876365661621
    5. '(int' → logprob: -8.514876365661621
    6. 'a' → logprob: -9.139876365661621
    7. 'map' → logprob: -10.139876365661621
    8. '(sorted' → logprob: -10.889876365661621
    9. '(re' → logprob: -11.264876365661621
    10. '(d' → logprob: -11.889876365661621

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004300153348594904
    2. '[::-' → logprob: -6.004300117492676
    3. '))' → logprob: -6.754300117492676
    4. '[' → logprob: -8.504300117492676
    5. ')
' → logprob: -9.004300117492676
    6. 'a' → logprob: -9.879300117492676
    7. ' )' → logprob: -10.504300117492676
    8. ')))' → logprob: -10.629300117492676
    9. '[:-' → logprob: -10.629300117492676
    10. '[-' → logprob: -10.754300117492676

Token 67: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24635553359985352
    2. '.sort' → logprob: -1.7463555335998535
    3. '       ' → logprob: -3.9963555335998535
    4. ' =' → logprob: -4.9963555335998535
    5. '[::-' → logprob: -5.7463555335998535
    6. '=' → logprob: -5.8713555335998535
    7. 'sorted' → logprob: -6.1213555335998535
    8. '.reverse' → logprob: -6.2463555335998535
    9. 'digits' → logprob: -6.3713555335998535
    10. 'sort' → logprob: -6.3713555335998535

Token 68: ' big' (ID: 3464)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.14195913076400757
    2. 'd' → logprob: -2.1419591903686523
    3. 's' → logprob: -4.766959190368652
    4. '       ' → logprob: -6.266959190368652
    5. 'sorted' → logprob: -6.516959190368652
    6. ' digits' → logprob: -7.266959190368652
    7. '   ' → logprob: -7.891959190368652
    8. 'sort' → logprob: -8.016959190368652
    9. '-' → logprob: -8.016959190368652
    10. '_digits' → logprob: -8.516959190368652

Token 69: ' =' (ID: 314)
  Prédit: 'gest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gest' → logprob: -0.8140444159507751
    2. ' =' → logprob: -1.18904447555542
    3. '=' → logprob: -1.68904447555542
    4. 'sorted' → logprob: -3.68904447555542
    5. 's' → logprob: -4.18904447555542
    6. 'r' → logprob: -4.56404447555542
    7. '_digits' → logprob: -5.93904447555542
    8. 'ger' → logprob: -6.56404447555542
    9. 'sort' → logprob: -6.56404447555542
    10. '_sorted' → logprob: -6.56404447555542

Token 70: ' int' (ID: 677)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4419090151786804
    2. ' sorted' → logprob: -1.0669090747833252
    3. ' ''.' → logprob: -5.066908836364746
    4. 'int' → logprob: -5.941908836364746
    5. '''.' → logprob: -6.191908836364746
    6. ' int' → logprob: -6.691908836364746
    7. 'digits' → logprob: -8.816908836364746
    8. ' ' → logprob: -9.191908836364746
    9. '  ' → logprob: -9.191908836364746
    10. 'str' → logprob: -9.441908836364746

Token 71: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.02948581613600254
    2. '(' → logprob: -4.404485702514648
    3. '("' → logprob: -4.654485702514648
    4. '(max' → logprob: -5.154485702514648
    5. '''.' → logprob: -7.279485702514648
    6. '(sorted' → logprob: -7.654485702514648
    7. 'max' → logprob: -8.904485702514648
    8. '(a' → logprob: -9.529485702514648
    9. 'sorted' → logprob: -9.904485702514648
    10. 'a' → logprob: -10.279485702514648

Token 72: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0011787971016019583
    2. ''.' → logprob: -6.876178741455078
    3. ''' → logprob: -9.376178741455078
    4. '''' → logprob: -10.501178741455078
    5. ' ''.' → logprob: -11.001178741455078
    6. '"' → logprob: -11.501178741455078
    7. '('' → logprob: -12.501178741455078
    8. 'sorted' → logprob: -14.376178741455078
    9. ''s' → logprob: -14.751178741455078
    10. '```' → logprob: -14.876178741455078

Token 73: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.28258997201919556
    2. '''.' → logprob: -1.4075899124145508
    3. '.' → logprob: -7.407589912414551
    4. 'sorted' → logprob: -8.28258991241455
    5. '.join' → logprob: -8.53258991241455
    6. '```' → logprob: -9.40758991241455
    7. ''.' → logprob: -9.53258991241455
    8. ' ''.' → logprob: -10.15758991241455
    9. 'sort' → logprob: -10.28258991241455
    10. '   ' → logprob: -10.28258991241455

Token 74: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.2520969808101654
    2. 'sorted' → logprob: -1.5020970106124878
    3. ' sorted' → logprob: -9.127097129821777
    4. ')' → logprob: -10.252097129821777
    5. '(' → logprob: -10.877097129821777
    6. '>' → logprob: -13.752097129821777
    7. '(s' → logprob: -14.252097129821777
    8. 'sort' → logprob: -14.502097129821777
    9. '(sort' → logprob: -14.752097129821777
    10. '.sorted' → logprob: -15.002097129821777

Token 75: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.011253892444074154
    2. '(' → logprob: -4.511253833770752
    3. 'digits' → logprob: -8.63625431060791
    4. ' digits' → logprob: -10.63625431060791
    5. '(
' → logprob: -13.51125431060791
    6. ' (' → logprob: -14.38625431060791
    7. '(reverse' → logprob: -14.38625431060791
    8. ')' → logprob: -14.38625431060791
    9. ')(' → logprob: -15.13625431060791
    10. '(s' → logprob: -15.51125431060791

Token 76: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.00018387178715784103
    2. 'igts' → logprob: -9.250184059143066
    3. 'its' → logprob: -9.500184059143066
    4. 'digits' → logprob: -11.375184059143066
    5. 'ig' → logprob: -14.250184059143066
    6. '_digits' → logprob: -15.375184059143066
    7. ' digits' → logprob: -16.00018310546875
    8. 'g' → logprob: -16.25018310546875
    9. 'igs' → logprob: -16.37518310546875
    10. 'i' → logprob: -16.75018310546875

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013681636191904545
    2. '(reverse' → logprob: -4.513681411743164
    3. 'reverse' → logprob: -6.263681411743164
    4. ' ,' → logprob: -8.138681411743164
    5. ' reverse' → logprob: -8.888681411743164
    6. '(),' → logprob: -9.138681411743164
    7. ',key' → logprob: -10.013681411743164
    8. '[::-' → logprob: -10.138681411743164
    9. '.reverse' → logprob: -10.638681411743164
    10. ',d' → logprob: -10.638681411743164

Token 78: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.16038213670253754
    2. ' reverse' → logprob: -1.9103821516036987
    3. '(reverse' → logprob: -8.785382270812988
    4. '.reverse' → logprob: -12.910382270812988
    5. ' ' → logprob: -13.660382270812988
    6. '_reverse' → logprob: -14.035382270812988
    7. '   ' → logprob: -15.660382270812988
    8. 'Reverse' → logprob: -16.660381317138672
    9. '  ' → logprob: -16.660381317138672
    10. ',' → logprob: -16.660381317138672

Token 79: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -9.491498531133402e-06
    2. '=' → logprob: -11.750009536743164
    3. 'True' → logprob: -14.500009536743164
    4. '(True' → logprob: -14.500009536743164
    5. ' =' → logprob: -15.750009536743164
    6. '=False' → logprob: -15.875009536743164
    7. 'a' → logprob: -15.875009536743164
    8. '=
' → logprob: -17.500009536743164
    9. ')' → logprob: -18.000009536743164
    10. '))' → logprob: -18.125009536743164

Token 80: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.08456400781869888
    2. ')))
' → logprob: -2.709563970565796
    3. '))' → logprob: -4.334564208984375
    4. ')' → logprob: -7.459564208984375
    5. ')))

' → logprob: -8.084564208984375
    6. ' ' → logprob: -8.334564208984375
    7. ')))
' → logprob: -9.209564208984375
    8. '))
' → logprob: -9.834564208984375
    9. '')))' → logprob: -9.959564208984375
    10. '       ' → logprob: -10.959564208984375

Token 81: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' small' (ID: 3291)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931656002998352
    2. ' =' → logprob: -0.6931656002998352
    3. '=int' → logprob: -10.94316577911377
    4. ' ' → logprob: -15.31816577911377
    5. 'int' → logprob: -15.69316577911377
    6. '=

' → logprob: -16.693164825439453
    7. '<|end|>' → logprob: -16.943164825439453
    8. '＝' → logprob: -16.943164825439453
    9. '   ' → logprob: -17.443164825439453
    10. ',' → logprob: -17.818164825439453

Token 84: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20141927897930145
    2. ' int' → logprob: -1.7014192342758179
    3. '(int' → logprob: -12.32641887664795
    4. '<int' → logprob: -14.57641887664795
    5. '=int' → logprob: -14.70141887664795
    6. '[int' → logprob: -15.07641887664795
    7. '	int' → logprob: -15.45141887664795
    8. ' ' → logprob: -16.076419830322266
    9. ':int' → logprob: -17.451419830322266
    10. '   ' → logprob: -17.951419830322266

Token 85: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0013273799559101462
    2. '(' → logprob: -6.6263275146484375
    3. '(('' → logprob: -14.876327514648438
    4. '('').' → logprob: -14.876327514648438
    5. '(
' → logprob: -15.376327514648438
    6. ' (' → logprob: -15.501327514648438
    7. '("' → logprob: -16.001327514648438
    8. ''' → logprob: -16.876327514648438
    9. '(','' → logprob: -17.751327514648438
    10. '('',' → logprob: -18.001327514648438

Token 86: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.3073263466358185
    2. '('' → logprob: -1.557326316833496
    3. ''' → logprob: -2.932326316833496
    4. '''' → logprob: -7.932326316833496
    5. ' ''.' → logprob: -9.182326316833496
    6. ''s' → logprob: -9.682326316833496
    7. '(' → logprob: -10.807326316833496
    8. '"' → logprob: -11.057326316833496
    9. '('').' → logprob: -11.307326316833496
    10. ''.' → logprob: -11.807326316833496

Token 87: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.4391956685576588e-05
    2. ''' → logprob: -11.500024795532227
    3. '(join' → logprob: -11.625024795532227
    4. '.join' → logprob: -13.500024795532227
    5. '''.' → logprob: -13.750024795532227
    6. '```' → logprob: -14.250024795532227
    7. '('' → logprob: -14.375024795532227
    8. 'sorted' → logprob: -14.875024795532227
    9. '')' → logprob: -15.375024795532227
    10. ' join' → logprob: -15.375024795532227

Token 88: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -2.3199920178740285e-05
    2. 'sorted' → logprob: -11.250022888183594
    3. '(' → logprob: -11.625022888183594
    4. '(s' → logprob: -14.000022888183594
    5. '(d' → logprob: -14.875022888183594
    6. ' sorted' → logprob: -18.625022888183594
    7. ' (' → logprob: -18.875022888183594
    8. ')' → logprob: -18.875022888183594
    9. '(sort' → logprob: -18.875022888183594
    10. '((' → logprob: -19.500022888183594

Token 89: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0009265877306461334
    2. '(' → logprob: -7.000926494598389
    3. 'digits' → logprob: -11.500926971435547
    4. ' (' → logprob: -12.500926971435547
    5. ')' → logprob: -14.375926971435547
    6. ' digits' → logprob: -14.500926971435547
    7. 'd' → logprob: -16.625926971435547
    8. ' ' → logprob: -17.250926971435547
    9. ')d' → logprob: -18.125926971435547
    10. '(s' → logprob: -18.125926971435547

Token 90: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -2.8921695047756657e-05
    2. 'igts' → logprob: -11.000028610229492
    3. 'digits' → logprob: -11.500028610229492
    4. 'ig' → logprob: -13.625028610229492
    5. 'its' → logprob: -15.250028610229492
    6. 'igit' → logprob: -15.375028610229492
    7. 'i' → logprob: -15.875028610229492
    8. '_digits' → logprob: -16.750028610229492
    9. 'ights' → logprob: -16.875028610229492
    10. '```' → logprob: -17.250028610229492

Token 91: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1927451342344284
    2. ')))' → logprob: -2.0677452087402344
    3. '()))' → logprob: -3.3177452087402344
    4. '(d' → logprob: -4.942745208740234
    5. '()' → logprob: -6.192745208740234
    6. '(' → logprob: -6.442745208740234
    7. '())))' → logprob: -7.692745208740234
    8. ')' → logprob: -7.817745208740234
    9. 'd' → logprob: -8.067745208740234
    10. '))
' → logprob: -8.567745208740234

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38091060519218445
    2. '
' → logprob: -1.8809106349945068
    3. ')' → logprob: -3.255910634994507
    4. '   ' → logprob: -3.505910634994507
    5. ')
' → logprob: -3.630910634994507
    6. '<|end|>' → logprob: -3.630910634994507
    7. '=' → logprob: -4.380910396575928
    8. '        
' → logprob: -4.630910396575928
    9. 'a' → logprob: -5.005910396575928
    10. 'n' → logprob: -5.630910396575928

Token 93: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.7228673100471497
    2. 'n' → logprob: -1.4728672504425049
    3. 'num' → logprob: -3.222867250442505
    4. 'next' → logprob: -3.347867250442505
    5. '0' → logprob: -3.472867250442505
    6. '       ' → logprob: -3.597867250442505
    7. '=' → logprob: -3.597867250442505
    8. 'x' → logprob: -4.222867488861084
    9. 'val' → logprob: -4.597867488861084
    10. 'd' → logprob: -4.597867488861084

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3135141432285309
    2. '=' → logprob: -1.3135141134262085
    3. '"' → logprob: -9.56351375579834
    4. 's' → logprob: -10.06351375579834
    5. ''' → logprob: -10.81351375579834
    6. 'str' → logprob: -11.06351375579834
    7. ' ' → logprob: -11.18851375579834
    8. '_' → logprob: -11.43851375579834
    9. '_=' → logprob: -11.68851375579834
    10. 'f' → logprob: -12.18851375579834

Token 95: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00028088156250305474
    2. ' str' → logprob: -8.25028133392334
    3. 'f' → logprob: -11.37528133392334
    4. '   ' → logprob: -12.12528133392334
    5. '(str' → logprob: -13.25028133392334
    6. '	str' → logprob: -15.50028133392334
    7. 'st' → logprob: -15.62528133392334
    8. ' ' → logprob: -15.75028133392334
    9. '  ' → logprob: -15.87528133392334
    10. 's' → logprob: -16.250280380249023

Token 96: '(big' (ID: 140437)
  Prédit: '(big'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(big' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.50000286102295
    3. '(abs' → logprob: -14.62500286102295
    4. '(b' → logprob: -14.87500286102295
    5. '(int' → logprob: -15.62500286102295
    6. '(Big' → logprob: -16.375001907348633
    7. '(bin' → logprob: -17.000001907348633
    8. '((' → logprob: -17.250001907348633
    9. 'big' → logprob: -17.375001907348633
    10. '(max' → logprob: -17.500001907348633

Token 97: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5760775804519653
    2. '-' → logprob: -0.8260775804519653
    3. '-small' → logprob: -9.076077461242676
    4. '   ' → logprob: -11.201077461242676
    5. '-sm' → logprob: -11.951077461242676
    6. ' ' → logprob: -13.576077461242676
    7. ')' → logprob: -14.201077461242676
    8. '-min' → logprob: -14.576077461242676
    9. '  ' → logprob: -15.451077461242676
    10. '-s' → logprob: -15.826077461242676

Token 98: ' small' (ID: 3291)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.008616226725280285
    2. ' small' → logprob: -4.7586164474487305
    3. ' ' → logprob: -14.50861644744873
    4. 'sm' → logprob: -15.25861644744873
    5. '.small' → logprob: -15.25861644744873
    6. '-small' → logprob: -15.63361644744873
    7. 's' → logprob: -15.88361644744873
    8. '_small' → logprob: -16.008615493774414
    9. '   ' → logprob: -16.758615493774414
    10. ')' → logprob: -16.883615493774414

Token 99: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -1.259079363080673e-05
    2. ')' → logprob: -12.000012397766113
    3. ' ).' → logprob: -12.125012397766113
    4. '0' → logprob: -15.750012397766113
    5. '   ' → logprob: -15.875012397766113
    6. '.' → logprob: -16.00001335144043
    7. '.z' → logprob: -16.00001335144043
    8. '').' → logprob: -16.25001335144043
    9. 'z' → logprob: -16.37501335144043
    10. 'a' → logprob: -16.50001335144043

Token 100: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -7.822646693966817e-06
    2. 'r' → logprob: -12.000007629394531
    3. '.z' → logprob: -13.875007629394531
    4. ' z' → logprob: -14.250007629394531
    5. ''z' → logprob: -18.87500762939453
    6. '	z' → logprob: -20.12500762939453
    7. '```' → logprob: -21.87500762939453
    8. ',z' → logprob: -22.25000762939453
    9. 'zr' → logprob: -22.25000762939453
    10. ':z' → logprob: -22.62500762939453

Token 101: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -9.968312951968983e-06
    2. 'f' → logprob: -11.875009536743164
    3. '```' → logprob: -14.000009536743164
    4. 'fil' → logprob: -14.375009536743164
    5. 'fi' → logprob: -14.500009536743164
    6. 'l' → logprob: -15.125009536743164
    7. '`' → logprob: -16.000009536743164
    8. '.fill' → logprob: -16.250009536743164
    9. '   ' → logprob: -16.375009536743164
    10. 'file' → logprob: -16.625009536743164

Token 102: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0019299437990412116
    2. '(' → logprob: -6.251929759979248
    3. '(len' → logprob: -14.001930236816406
    4. '(l' → logprob: -15.626930236816406
    5. '(`' → logprob: -16.376930236816406
    6. '(length' → logprob: -16.376930236816406
    7. '('' → logprob: -16.626930236816406
    8. '()' → logprob: -17.126930236816406
    9. 'L' → logprob: -17.751930236816406
    10. '((' → logprob: -17.876930236816406

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.706686690449715e-05
    2. ')
' → logprob: -9.625066757202148
    3. ')

' → logprob: -14.750066757202148
    4. ' )' → logprob: -15.000066757202148
    5. '   ' → logprob: -16.62506675720215
    6. '<|end|>' → logprob: -16.75006675720215
    7. '))' → logprob: -17.12506675720215
    8. '),' → logprob: -17.37506675720215
    9. ')`' → logprob: -17.37506675720215
    10. '')' → logprob: -17.62506675720215

Token 104: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00039706481038592756
    2. '   ' → logprob: -8.125396728515625
    3. ' print' → logprob: -9.250396728515625
    4. '<|end|>' → logprob: -13.750396728515625
    5. 'for' → logprob: -13.875396728515625
    6. '```' → logprob: -14.375396728515625
    7. '(print' → logprob: -14.500396728515625
    8. ')' → logprob: -14.625396728515625
    9. '#print' → logprob: -15.375396728515625
    10. '	print' → logprob: -15.500396728515625

Token 105: ' i' (ID: 575)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.208653162000701e-05
    2. '   ' → logprob: -9.750082015991211
    3. ' print' → logprob: -11.125082015991211
    4. 'for' → logprob: -12.125082015991211
    5. '```' → logprob: -13.750082015991211
    6. ')' → logprob: -13.875082015991211
    7. '
' → logprob: -14.625082015991211
    8. '<|end|>' → logprob: -14.750082015991211
    9. '#print' → logprob: -15.125082015991211
    10. '(print' → logprob: -15.875082015991211

Token 106: ' =' (ID: 314)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.06237410381436348
    2. 'f' → logprob: -3.5623741149902344
    3. 'n' → logprob: -3.9373741149902344
    4. 'm' → logprob: -5.187374114990234
    5. '=' → logprob: -6.062374114990234
    6. 'nt' → logprob: -6.562374114990234
    7. 'ndice' → logprob: -6.687374114990234
    8. 'ndef' → logprob: -7.937374114990234
    9. ' =' → logprob: -8.312374114990234
    10. 'dx' → logprob: -8.437374114990234

Token 107: ' len' (ID: 4631)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.10998173803091049
    2. 'len' → logprob: -2.9849817752838135
    3. ' seq' → logprob: -3.1099817752838135
    4. ' len' → logprob: -4.734981536865234
    5. '0' → logprob: -9.234981536865234
    6. '   ' → logprob: -9.609981536865234
    7. ' ' → logprob: -10.609981536865234
    8. '  ' → logprob: -11.609981536865234
    9. '(seq' → logprob: -11.609981536865234
    10. 'se' → logprob: -11.984981536865234

Token 108: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -5.1928003813372925e-05
    2. '(' → logprob: -9.875051498413086
    3. 'seq' → logprob: -16.000051498413086
    4. '(sequence' → logprob: -16.125051498413086
    5. '(se' → logprob: -16.250051498413086
    6. '(a' → logprob: -17.750051498413086
    7. '(s' → logprob: -18.375051498413086
    8. '(
' → logprob: -18.375051498413086
    9. '(ans' → logprob: -18.625051498413086
    10. '(i' → logprob: -18.875051498413086

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004838787950575352
    2. '-' → logprob: -5.754838943481445
    3. ' -' → logprob: -6.754838943481445
    4. '(' → logprob: -8.379838943481445
    5. ')-' → logprob: -9.004838943481445
    6. '   ' → logprob: -10.254838943481445
    7. ' )' → logprob: -10.879838943481445
    8. '[' → logprob: -11.004838943481445
    9. ' ' → logprob: -11.129838943481445
    10. '<|end|>' → logprob: -11.254838943481445

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028840452432632446
    2. 'print' → logprob: -6.1278839111328125
    3. ' print' → logprob: -8.127883911132812
    4. '<|end|>' → logprob: -9.252883911132812
    5. '
' → logprob: -9.502883911132812
    6. '    
' → logprob: -10.127883911132812
    7. '.' → logprob: -10.127883911132812
    8. '#' → logprob: -10.502883911132812
    9. ',' → logprob: -10.877883911132812
    10. '    ' → logprob: -11.002883911132812

Token 111: ' j' (ID: 441)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21062839031219482
    2. 'print' → logprob: -1.7106283903121948
    3. ' print' → logprob: -4.835628509521484
    4. '-' → logprob: -7.710628509521484
    5. '
' → logprob: -8.585628509521484
    6. ',' → logprob: -8.835628509521484
    7. '<|end|>' → logprob: -9.210628509521484
    8. '.' → logprob: -9.960628509521484
    9. '	print' → logprob: -9.960628509521484
    10. 'while' → logprob: -10.585628509521484

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22568070888519287
    2. '=' → logprob: -1.6006807088851929
    3. ',' → logprob: -9.350680351257324
    4. '-' → logprob: -9.600680351257324
    5. ' ' → logprob: -9.850680351257324
    6. ' -=' → logprob: -11.225680351257324
    7. '   ' → logprob: -11.725680351257324
    8. ' -' → logprob: -11.850680351257324
    9. ' =
' → logprob: -12.225680351257324
    10. '-=' → logprob: -12.600680351257324

Token 113: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.03254639729857445
    2. ' seq' → logprob: -3.532546281814575
    3. '0' → logprob: -6.407546520233154
    4. 'len' → logprob: -7.407546520233154
    5. ' len' → logprob: -9.032546043395996
    6. ' ' → logprob: -9.032546043395996
    7. 'i' → logprob: -9.157546043395996
    8. '   ' → logprob: -9.282546043395996
    9. '[' → logprob: -10.407546043395996
    10. '(seq' → logprob: -11.157546043395996

Token 114: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -4.179569077678025e-05
    2. 'index' → logprob: -10.625041961669922
    3. '.' → logprob: -12.000041961669922
    4. '[::-' → logprob: -12.500041961669922
    5. '.count' → logprob: -12.875041961669922
    6. '.i' → logprob: -12.875041961669922
    7. '.r' → logprob: -14.250041961669922
    8. '.find' → logprob: -14.625041961669922
    9. '.reverse' → logprob: -15.125041961669922
    10. '.Index' → logprob: -15.625041961669922

Token 115: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.750009536743164
    3. '('' → logprob: -14.750009536743164
    4. '(i' → logprob: -15.125009536743164
    5. 'a' → logprob: -15.500009536743164
    6. '(str' → logprob: -16.500009536743164
    7. '(s' → logprob: -17.000009536743164
    8. ' (' → logprob: -17.500009536743164
    9. '   ' → logprob: -17.875009536743164
    10. '(an' → logprob: -18.125009536743164

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029637437546625733
    2. ')
' → logprob: -9.250296592712402
    3. '())' → logprob: -9.500296592712402
    4. '()' → logprob: -9.875296592712402
    5. ')+' → logprob: -9.875296592712402
    6. '))' → logprob: -11.875296592712402
    7. ' )' → logprob: -12.000296592712402
    8. '(' → logprob: -12.625296592712402
    9. '   ' → logprob: -13.875296592712402
    10. ')i' → logprob: -13.875296592712402

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7706483602523804
    2. '
' → logprob: -1.2706483602523804
    3. 'print' → logprob: -1.6456483602523804
    4. ' print' → logprob: -3.02064847946167
    5. ' 
' → logprob: -5.27064847946167
    6. '    
' → logprob: -5.39564847946167
    7. '<|end|>' → logprob: -6.27064847946167
    8. '	print' → logprob: -7.27064847946167
    9. '#print' → logprob: -7.89564847946167
    10. '  
' → logprob: -8.395648002624512

Token 118: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006939699524082243
    2. ' print' → logprob: -7.3756937980651855
    3. '   ' → logprob: -9.875694274902344
    4. '```' → logprob: -11.750694274902344
    5. 'for' → logprob: -13.375694274902344
    6. '
' → logprob: -13.625694274902344
    7. 'i' → logprob: -14.250694274902344
    8. 'pr' → logprob: -14.375694274902344
    9. 'result' → logprob: -14.750694274902344
    10. ' 
' → logprob: -15.000694274902344

Token 119: '(j' (ID: 4997)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0015236717881634831
    2. '(' → logprob: -6.501523494720459
    3. ' (' → logprob: -11.626523971557617
    4. '(j' → logprob: -11.751523971557617
    5. '((' → logprob: -13.126523971557617
    6. 'i' → logprob: -14.626523971557617
    7. '(len' → logprob: -14.751523971557617
    8. '(abs' → logprob: -14.876523971557617
    9. '(a' → logprob: -15.001523971557617
    10. '(f' → logprob: -15.376523971557617

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14988106489181519
    2. ' ,' → logprob: -2.64988112449646
    3. ')' → logprob: -2.89988112449646
    4. ' )' → logprob: -5.024880886077881
    5. ',i' → logprob: -5.274880886077881
    6. '+' → logprob: -7.399880886077881
    7. ',)' → logprob: -7.774880886077881
    8. ',end' → logprob: -8.649881362915039
    9. ' ' → logprob: -8.774881362915039
    10. ',
' → logprob: -9.274881362915039

Token 121: ' int' (ID: 677)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00222721416503191
    2. ' i' → logprob: -6.127227306365967
    3. ' ' → logprob: -11.127226829528809
    4. '(i' → logprob: -11.502226829528809
    5. '   ' → logprob: -12.877226829528809
    6. ',' → logprob: -13.002226829528809
    7. ''i' → logprob: -13.127226829528809
    8. 'len' → logprob: -13.252226829528809
    9. '  ' → logprob: -13.502226829528809
    10. ',i' → logprob: -14.002226829528809

Token 122: '(a' (ID: 6271)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0066537922248244286
    2. '(' → logprob: -5.131653785705566
    3. ')' → logprob: -7.756653785705566
    4. 'i' → logprob: -8.756653785705566
    5. '(
' → logprob: -10.881653785705566
    6. '((' → logprob: -11.006653785705566
    7. ' (' → logprob: -11.256653785705566
    8. ')i' → logprob: -11.256653785705566
    9. 'a' → logprob: -11.506653785705566
    10. '(a' → logprob: -11.631653785705566

Token 123: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13798901438713074
    2. ',' → logprob: -2.262989044189453
    3. '))' → logprob: -4.262989044189453
    4. ',)' → logprob: -5.637989044189453
    5. ' )' → logprob: -6.137989044189453
    6. '')' → logprob: -6.512989044189453
    7. ',i' → logprob: -6.887989044189453
    8. ' ,' → logprob: -7.387989044189453
    9. '+' → logprob: -8.137989044189453
    10. '`)' → logprob: -8.262989044189453

Token 124: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0014939149841666222
    2. ' i' → logprob: -6.62649393081665
    3. 'len' → logprob: -10.001493453979492
    4. ')' → logprob: -10.626493453979492
    5. 'L' → logprob: -10.626493453979492
    6. ' ' → logprob: -11.501493453979492
    7. ',' → logprob: -11.626493453979492
    8. 'sep' → logprob: -11.626493453979492
    9. 'end' → logprob: -11.751493453979492
    10. 'j' → logprob: -11.751493453979492

Token 125: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024733974132686853
    2. '-' → logprob: -6.1274733543396
    3. '-j' → logprob: -8.627473831176758
    4. '-)' → logprob: -10.377473831176758
    5. ' -' → logprob: -10.627473831176758
    6. ' )' → logprob: -10.627473831176758
    7. ',' → logprob: -10.877473831176758
    8. '-i' → logprob: -13.252473831176758
    9. ',)' → logprob: -13.377473831176758
    10. ',j' → logprob: -13.377473831176758

Token 126: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.505351095460355e-05
    2. ' j' → logprob: -9.500075340270996
    3. '1' → logprob: -16.25007438659668
    4. '	j' → logprob: -18.75007438659668
    5. '_j' → logprob: -19.62507438659668
    6. ' ' → logprob: -19.87507438659668
    7. ' ' → logprob: -20.75007438659668
    8. '$j' → logprob: -20.75007438659668
    9. '   ' → logprob: -21.87507438659668
    10. '​' → logprob: -22.12507438659668

Token 127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. '))' → logprob: -12.62501049041748
    3. ' )' → logprob: -13.00001049041748
    4. ')`' → logprob: -13.25001049041748
    5. '')' → logprob: -14.12501049041748
    6. ')")' → logprob: -14.12501049041748
    7. ')
' → logprob: -14.37501049041748
    8. '`)' → logprob: -15.25001049041748
    9. ',' → logprob: -15.25001049041748
    10. '),' → logprob: -16.000011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 125
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 100
Précision stricte (1ère position): 44.00%
Précision adaptée (1ère position): 45.60%
Précision (top 10): 80.00%
================================================================================
