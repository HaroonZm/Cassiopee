================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n,m,a=map(int,input().split())
    if n==0 and m==0 and a==0:
        break
    lines=[]
    for _ in range(m):
        h,p,q=map(int,input().split())
        lines.append((h,p,q))
    lines.sort(reverse=True)
    pos=a
    for _,p,q in lines:
        if pos==p:
            pos=q
        elif pos==q:
            pos=p
    print(pos)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ',m' (ID: 26648)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7437536716461182
    2. 'u' → logprob: -1.4937536716461182
    3. '=' → logprob: -2.243753671646118
    4. 'o' → logprob: -2.618753671646118
    5. '   ' → logprob: -2.993753671646118
    6. ' =' → logprob: -4.493753433227539
    7. 'e' → logprob: -4.743753433227539
    8. '+' → logprob: -4.868753433227539
    9. '_' → logprob: -4.993753433227539
    10. '  ' → logprob: -5.243753433227539

Token 6: ',a' (ID: 26776)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7581874132156372
    2. ' ' → logprob: -1.6331874132156372
    3. ' =' → logprob: -2.1331872940063477
    4. ')' → logprob: -2.2581872940063477
    5. ',' → logprob: -3.0081872940063477
    6. ' ,' → logprob: -3.8831872940063477
    7. '  ' → logprob: -4.508187294006348
    8. '[' → logprob: -4.758187294006348
    9. ' ==' → logprob: -5.008187294006348
    10. ' )' → logprob: -5.383187294006348

Token 7: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09131396561861038
    2. ' =' → logprob: -2.4663140773773193
    3. ',' → logprob: -6.84131383895874
    4. ' ' → logprob: -7.59131383895874
    5. ')' → logprob: -7.96631383895874
    6. '[' → logprob: -8.966314315795898
    7. '.' → logprob: -10.341314315795898
    8. '   ' → logprob: -10.341314315795898
    9. '>' → logprob: -10.341314315795898
    10. ''' → logprob: -10.591314315795898

Token 8: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.7008463740348816
    2. ' map' → logprob: -0.8258463740348816
    3. 'input' → logprob: -2.9508464336395264
    4. ' input' → logprob: -4.325846195220947
    5. 'list' → logprob: -8.950846672058105
    6. 'int' → logprob: -9.200846672058105
    7. '0' → logprob: -9.575846672058105
    8. ' ' → logprob: -9.825846672058105
    9. ' list' → logprob: -9.825846672058105
    10. ' int' → logprob: -11.325846672058105

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0956539660692215
    2. '(int' → logprob: -2.970654010772705
    3. '(lambda' → logprob: -3.470654010772705
    4. '(str' → logprob: -5.845654010772705
    5. '<|end|>' → logprob: -6.345654010772705
    6. '(
' → logprob: -7.095654010772705
    7. '```' → logprob: -7.220654010772705
    8. 'int' → logprob: -7.345654010772705
    9. '[int' → logprob: -7.720654010772705
    10. '<int' → logprob: -8.095653533935547

Token 10: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0737270936369896
    2. 'input' → logprob: -2.6987271308898926
    3. ')' → logprob: -6.573727130889893
    4. ' input' → logprob: -6.823727130889893
    5. ',input' → logprob: -7.323727130889893
    6. '(' → logprob: -7.448727130889893
    7. '=input' → logprob: -10.198726654052734
    8. ' (' → logprob: -12.698726654052734
    9. '<input' → logprob: -12.823726654052734
    10. ',' → logprob: -12.948726654052734

Token 11: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.36615100502967834
    2. '().' → logprob: -1.366150975227356
    3. '()' → logprob: -2.9911510944366455
    4. '()))' → logprob: -7.616150856018066
    5. '());' → logprob: -8.241150856018066
    6. ')' → logprob: -8.741150856018066
    7. '()>' → logprob: -8.991150856018066
    8. '();)' → logprob: -9.741150856018066
    9. '()));' → logprob: -10.866150856018066
    10. '()-' → logprob: -10.991150856018066

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.229872087715194e-05
    2. 'strip' → logprob: -9.750061988830566
    3. 'rstrip' → logprob: -12.500061988830566
    4. '(split' → logprob: -16.125062942504883
    5. ' split' → logprob: -16.250062942504883
    6. 'spl' → logprob: -18.750062942504883
    7. ')' → logprob: -19.250062942504883
    8. 'replace' → logprob: -19.500062942504883
    9. 'read' → logprob: -19.625062942504883
    10. 's' → logprob: -20.375062942504883

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3685237765312195
    2. ')' → logprob: -1.2435238361358643
    3. '()' → logprob: -4.868523597717285
    4. '))' → logprob: -4.993523597717285
    5. '()))' → logprob: -5.243523597717285
    6. '(' → logprob: -9.868523597717285
    7. ' ())' → logprob: -10.743523597717285
    8. '`)' → logprob: -11.618523597717285
    9. '('' → logprob: -11.993523597717285
    10. ')))' → logprob: -12.118523597717285

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8436235189437866
    2. '<|end|>' → logprob: -1.5936235189437866
    3. ' if' → logprob: -1.8436235189437866
    4. ')' → logprob: -2.843623638153076
    5. ':' → logprob: -2.968623638153076
    6. ' ' → logprob: -3.718623638153076
    7. '\n' → logprob: -3.718623638153076
    8. '       ' → logprob: -4.218623638153076
    9. '    ' → logprob: -4.843623638153076
    10. ',' → logprob: -5.343623638153076

Token 15: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8919395804405212
    2. '   ' → logprob: -1.516939640045166
    3. ' ' → logprob: -2.016939640045166
    4. '    ' → logprob: -2.516939640045166
    5. 'if' (adapté à ' if') → logprob: -3.141939640045166
    6. 'i' → logprob: -3.266939640045166
    7. '       ' → logprob: -3.516939640045166
    8. ' i' → logprob: -4.516939640045166
    9. '```' → logprob: -5.141939640045166
    10. '`' → logprob: -5.516939640045166

Token 16: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.016555674374103546
    2. 'n' → logprob: -4.3915557861328125
    3. ' not' → logprob: -5.8915557861328125
    4. ' m' → logprob: -6.7665557861328125
    5. 'm' → logprob: -9.391555786132812
    6. 'not' → logprob: -10.891555786132812
    7. ' ' → logprob: -10.891555786132812
    8. '	n' → logprob: -14.516555786132812
    9. ' a' → logprob: -14.641555786132812
    10. '(n' → logprob: -14.891555786132812

Token 17: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1644386053085327
    2. '<' → logprob: -1.4144386053085327
    3. ' ==' → logprob: -1.7894386053085327
    4. ' <' → logprob: -2.4144387245178223
    5. ' <=' → logprob: -2.5394387245178223
    6. '<=' → logprob: -2.6644387245178223
    7. '>' → logprob: -4.664438724517822
    8. '=' → logprob: -4.664438724517822
    9. '%' → logprob: -5.289438724517822
    10. ')' → logprob: -5.789438724517822

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01473888661712408
    2. ' ' → logprob: -4.389739036560059
    3. 'm' → logprob: -6.139739036560059
    4. ' m' → logprob: -9.639739036560059
    5. '1' → logprob: -13.514739036560059
    6. '```' → logprob: -14.077239036560059
    7. '-' → logprob: -14.139739036560059
    8. '   ' → logprob: -14.264739036560059
    9. '  ' → logprob: -14.827239036560059
    10. 'a' → logprob: -15.264739036560059

Token 19: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02276829443871975
    2. 'and' → logprob: -3.897768259048462
    3. ' or' → logprob: -6.647768497467041
    4. ':' → logprob: -7.647768497467041
    5. ' ' → logprob: -7.772768497467041
    6. '   ' → logprob: -11.272768020629883
    7. ' :' → logprob: -12.522768020629883
    8. '	and' → logprob: -12.522768020629883
    9. '  ' → logprob: -12.897768020629883
    10. '    ' → logprob: -13.522768020629883

Token 20: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.08894220739603043
    2. 'm' → logprob: -2.463942289352417
    3. ' ' → logprob: -13.088942527770996
    4. '	m' → logprob: -15.088942527770996
    5. ' ' → logprob: -15.963942527770996
    6. '   ' → logprob: -16.58894157409668
    7. '    ' → logprob: -17.08894157409668
    8. 'and' → logprob: -17.08894157409668
    9. '&m' → logprob: -17.71394157409668
    10. ' and' → logprob: -18.02644157409668

Token 21: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.15780064463615417
    2. ' ==' → logprob: -2.0328006744384766
    3. '=' → logprob: -4.407800674438477
    4. '<|end|>' → logprob: -6.282800674438477
    5. ' and' → logprob: -8.282800674438477
    6. '<|end|>' → logprob: -9.032800674438477
    7. ' ' → logprob: -9.157800674438477
    8. ' =' → logprob: -9.657800674438477
    9. ')==' → logprob: -9.782800674438477
    10. '===' → logprob: -10.032800674438477

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004624868277460337
    2. ' ' → logprob: -5.379624843597412
    3. '   ' → logprob: -13.75462532043457
    4. '  ' → logprob: -14.00462532043457
    5. 'and' → logprob: -14.19212532043457
    6. ' and' → logprob: -14.37962532043457
    7. '1' → logprob: -15.25462532043457
    8. '```' → logprob: -15.62962532043457
    9. '۰' → logprob: -15.62962532043457
    10. 'a' → logprob: -16.19212532043457

Token 23: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002471016952767968
    2. ' and' → logprob: -6.627470970153809
    3. '   ' → logprob: -7.252470970153809
    4. ':
' → logprob: -8.377470970153809
    5. ' :' → logprob: -9.377470970153809
    6. '       ' → logprob: -9.627470970153809
    7. ':return' → logprob: -11.127470970153809
    8. '    ' → logprob: -11.377470970153809
    9. 'and' → logprob: -11.877470970153809
    10. ' ' → logprob: -12.627470970153809

Token 24: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08894786238670349
    2. ' a' → logprob: -2.4639477729797363
    3. '0' → logprob: -12.338948249816895
    4. ' ' → logprob: -12.963948249816895
    5. '	a' → logprob: -14.213948249816895
    6. '   ' → logprob: -15.213948249816895
    7. ' and' → logprob: -15.338948249816895
    8. '>a' → logprob: -15.838948249816895
    9. '&a' → logprob: -16.088947296142578
    10. 'and' → logprob: -16.088947296142578

Token 25: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00468240724876523
    2. ' ==' → logprob: -5.504682540893555
    3. '=' → logprob: -7.504682540893555
    4. '<|end|>' → logprob: -11.379682540893555
    5. ']==' → logprob: -12.004682540893555
    6. '<=' → logprob: -12.254682540893555
    7. '===' → logprob: -12.254682540893555
    8. '()==' → logprob: -12.379682540893555
    9. '==-' → logprob: -12.629682540893555
    10. ')==' → logprob: -12.629682540893555

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020473242329899222
    2. ' ' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.250205039978027
    4. '  ' → logprob: -15.500205039978027
    5. '```' → logprob: -16.37520408630371
    6. '-' → logprob: -16.62520408630371
    7. '۰' → logprob: -16.68770408630371
    8. ')' → logprob: -17.06270408630371
    9. '০' → logprob: -17.31270408630371
    10. '०' → logprob: -17.43770408630371

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012844942102674395
    2. '       ' → logprob: -9.750128746032715
    3. ':
' → logprob: -9.750128746032715
    4. '   ' → logprob: -11.875128746032715
    5. ' :' → logprob: -12.875128746032715
    6. ':return' → logprob: -13.750128746032715
    7. '):' → logprob: -14.375128746032715
    8. '    ' → logprob: -16.0001277923584
    9. '      ' → logprob: -16.7501277923584
    10. '：' → logprob: -16.7501277923584

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019710339256562293
    2. '   ' → logprob: -8.750197410583496
    3. '\n' → logprob: -12.000197410583496
    4. '	break' → logprob: -12.500197410583496
    5. ' break' → logprob: -12.500197410583496
    6. ' ' → logprob: -12.750197410583496
    7. ' ' → logprob: -12.875197410583496
    8. '    ' → logprob: -12.875197410583496
    9. '     ' → logprob: -13.000197410583496
    10. '	' → logprob: -13.250197410583496

Token 29: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3314993977546692
    2. ' break' → logprob: -1.5814993381500244
    3. 'break' (adapté à ' break') → logprob: -2.5814993381500244
    4. '   ' → logprob: -7.7064995765686035
    5. '	break' → logprob: -8.206499099731445
    6. '           ' → logprob: -9.456499099731445
    7. '```' → logprob: -11.456499099731445
    8. '_break' → logprob: -12.456499099731445
    9. '-break' → logprob: -13.206499099731445
    10. '        
' → logprob: -13.331499099731445

Token 30: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8957173824310303
    2. '\n' → logprob: -0.8957173824310303
    3. ':' → logprob: -2.8957173824310303
    4. '<|end|>' → logprob: -3.6457173824310303
    5. '
' → logprob: -3.8957173824310303
    6. '    
' → logprob: -4.020717620849609
    7. 'n' → logprob: -4.520717620849609
    8. ' ' → logprob: -5.020717620849609
    9. '\r' → logprob: -5.020717620849609
    10. '\' → logprob: -5.020717620849609

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06013152748346329
    2. '    
' → logprob: -3.310131549835205
    3. '\n' → logprob: -4.935131549835205
    4. '<|end|>' → logprob: -5.435131549835205
    5. '       ' → logprob: -6.185131549835205
    6. '```' → logprob: -6.810131549835205
    7. '  
' → logprob: -6.935131549835205
    8. 'n' → logprob: -7.060131549835205
    9. ')' → logprob: -7.185131549835205
    10. ' ' → logprob: -7.435131549835205

Token 32: ' lines' (ID: 8698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3459041118621826
    2. ' if' → logprob: -2.7209041118621826
    3. ' area' → logprob: -3.2209041118621826
    4. ' result' → logprob: -3.7209041118621826
    5. 'area' → logprob: -4.220904350280762
    6. ' tiles' → logprob: -4.345904350280762
    7. 's' → logprob: -4.470904350280762
    8. '    ' → logprob: -4.845904350280762
    9. 'result' → logprob: -4.845904350280762
    10. ' ans' → logprob: -4.970904350280762

Token 33: '=[]
' (ID: 63466)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03704072907567024
    2. '<|end|>' → logprob: -4.162040710449219
    3. ' ' → logprob: -5.412040710449219
    4. '[' → logprob: -5.537040710449219
    5. '#' → logprob: -6.287040710449219
    6. ':' → logprob: -6.662040710449219
    7. '```' → logprob: -6.662040710449219
    8. '       ' → logprob: -6.912040710449219
    9. 'print' → logprob: -7.037040710449219
    10. 'n' → logprob: -7.037040710449219

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1677592247724533
    2. '<|end|>' → logprob: -1.9177591800689697
    3. ' for' → logprob: -6.417759418487549
    4. '<|end|>' → logprob: -6.542759418487549
    5. ' ' → logprob: -7.042759418487549
    6. 'for' → logprob: -7.042759418487549
    7. '    ' → logprob: -7.292759418487549
    8. '    
' → logprob: -7.667759418487549
    9. '\' → logprob: -8.04275894165039
    10. '  ' → logprob: -8.16775894165039

Token 35: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.28076961636543274
    2. ' for' → logprob: -2.1557695865631104
    3. '   ' → logprob: -2.2807695865631104
    4. ' ' → logprob: -5.0307698249816895
    5. 'lines' → logprob: -5.4057698249816895
    6. ' lines' → logprob: -5.5307698249816895
    7. '<|end|>' → logprob: -6.1557698249816895
    8. 'n' → logprob: -6.2807698249816895
    9. '[' → logprob: -6.5307698249816895
    10. '    ' → logprob: -6.7807698249816895

Token 36: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2675841748714447
    2. ' _' → logprob: -1.767584204673767
    3. ' i' → logprob: -2.7675840854644775
    4. 'i' → logprob: -6.767584323883057
    5. '_i' → logprob: -10.017583847045898
    6. ' ' → logprob: -11.017583847045898
    7. ' ' → logprob: -13.642583847045898
    8. ' in' → logprob: -13.642583847045898
    9. ' ‌' → logprob: -14.767583847045898
    10. ' range' → logprob: -15.267583847045898

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01618768274784088
    2. 'in' → logprob: -4.14118766784668
    3. ' ' → logprob: -9.51618766784668
    4. 'n' → logprob: -10.39118766784668
    5. '<|end|>' → logprob: -10.89118766784668
    6. '  ' → logprob: -11.76618766784668
    7. '	in' → logprob: -11.76618766784668
    8. 'i' → logprob: -12.76618766784668
    9. '```' → logprob: -13.26618766784668
    10. '_' → logprob: -13.39118766784668

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015061709564179182
    2. ' range' → logprob: -6.501506328582764
    3. ' ' → logprob: -14.376505851745605
    4. 'lines' → logprob: -14.501505851745605
    5. '_' → logprob: -15.001505851745605
    6. '	range' → logprob: -15.001505851745605
    7. '  ' → logprob: -15.251505851745605
    8. '   ' → logprob: -15.376505851745605
    9. '(range' → logprob: -15.626505851745605
    10. 'ange' → logprob: -15.751505851745605

Token 39: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6408125162124634
    2. '(' → logprob: -1.3908125162124634
    3. '(m' → logprob: -1.6408125162124634
    4. ' (' → logprob: -3.765812397003174
    5. '(a' → logprob: -5.765812397003174
    6. ' n' → logprob: -6.390812397003174
    7. ' m' → logprob: -6.390812397003174
    8. '(lines' → logprob: -8.765812873840332
    9. '(s' → logprob: -8.890812873840332
    10. ' a' → logprob: -9.265812873840332

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021371904760599136
    2. ')' → logprob: -3.896371841430664
    3. ' ):' → logprob: -7.896371841430664
    4. '):
' → logprob: -8.396371841430664
    5. ':' → logprob: -8.896371841430664
    6. '   ' → logprob: -10.146371841430664
    7. '+' → logprob: -11.146371841430664
    8. ' )' → logprob: -11.396371841430664
    9. '-' → logprob: -11.771371841430664
    10. ',' → logprob: -13.021371841430664

Token 41: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0723333358764648
    2. '       ' → logprob: -1.0723333358764648
    3. ' lines' → logprob: -1.5723333358764648
    4. '<|end|>' → logprob: -3.322333335876465
    5. '    ' → logprob: -3.572333335876465
    6. ' ' → logprob: -3.697333335876465
    7. '	lines' → logprob: -4.947333335876465
    8. '(lines' → logprob: -6.322333335876465
    9. ' 
' → logprob: -6.697333335876465
    10. ' s' → logprob: -6.947333335876465

Token 42: ' h' (ID: 312)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0830610990524292
    2. ',w' → logprob: -1.2080610990524292
    3. ',i' → logprob: -2.7080612182617188
    4. ',a' → logprob: -2.8330612182617188
    5. ',e' → logprob: -3.2080612182617188
    6. 'a' → logprob: -3.7080612182617188
    7. '1' → logprob: -3.7080612182617188
    8. 'e' → logprob: -3.8330612182617188
    9. ',x' → logprob: -3.9580612182617188
    10. ',t' → logprob: -4.333061218261719

Token 44: ',q' (ID: 86188)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2516810894012451
    2. ',l' → logprob: -2.501681089401245
    3. ' =' → logprob: -3.001681089401245
    4. ',' → logprob: -3.376681089401245
    5. ',q' → logprob: -4.626681327819824
    6. ',p' → logprob: -4.751681327819824
    7. ',a' → logprob: -5.251681327819824
    8. ',r' → logprob: -5.751681327819824
    9. ',w' → logprob: -6.001681327819824
    10. ',e' → logprob: -6.001681327819824

Token 45: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010149452136829495
    2. ' =' → logprob: -7.251014709472656
    3. '=input' → logprob: -9.501014709472656
    4. ',' → logprob: -10.001014709472656
    5. '=line' → logprob: -10.126014709472656
    6. '=int' → logprob: -10.251014709472656
    7. ',r' → logprob: -10.376014709472656
    8. ',l' → logprob: -10.876014709472656
    9. ' ' → logprob: -11.751014709472656
    10. ',p' → logprob: -12.001014709472656

Token 46: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.023264462128281593
    2. ' map' → logprob: -3.7732644081115723
    3. '	map' → logprob: -11.27326488494873
    4. ' ' → logprob: -13.14826488494873
    5. 'list' → logprob: -13.52326488494873
    6. 'input' → logprob: -13.77326488494873
    7. '(map' → logprob: -14.52326488494873
    8. '   ' → logprob: -14.52326488494873
    9. '  ' → logprob: -14.77326488494873
    10. '.map' → logprob: -16.273263931274414

Token 47: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.505351095460355e-05
    2. '(' → logprob: -9.625075340270996
    3. '<int' → logprob: -12.250075340270996
    4. '[int' → logprob: -13.625075340270996
    5. ' (' → logprob: -13.875075340270996
    6. '(str' → logprob: -14.250075340270996
    7. '=int' → logprob: -14.625075340270996
    8. '<|end|>' → logprob: -15.375075340270996
    9. ',int' → logprob: -15.625075340270996
    10. 'int' → logprob: -15.750075340270996

Token 48: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.013127634301781654
    2. ',' → logprob: -4.76312780380249
    3. ',int' → logprob: -5.63812780380249
    4. '(input' → logprob: -7.26312780380249
    5. '(' → logprob: -9.388127326965332
    6. '(),' → logprob: -10.513127326965332
    7. '<|end|>' → logprob: -10.638127326965332
    8. ')' → logprob: -10.763127326965332
    9. '=input' → logprob: -10.888127326965332
    10. 'input' → logprob: -11.263127326965332

Token 49: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011689399980241433
    2. '.' → logprob: -9.125117301940918
    3. ').' → logprob: -12.875117301940918
    4. '.split' → logprob: -13.250117301940918
    5. '()' → logprob: -13.500117301940918
    6. ')' → logprob: -14.500117301940918
    7. '('').' → logprob: -14.750117301940918
    8. ' .' → logprob: -14.875117301940918
    9. ' ().' → logprob: -15.250117301940918
    10. '(' → logprob: -15.375117301940918

Token 50: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.339278580620885e-06
    2. ' split' → logprob: -13.375001907348633
    3. 's' → logprob: -15.625001907348633
    4. '(split' → logprob: -15.625001907348633
    5. 'spl' → logprob: -15.625001907348633
    6. 'strip' → logprob: -16.375001907348633
    7. 'rstrip' → logprob: -17.125001907348633
    8. ')' → logprob: -17.625001907348633
    9. '.split' → logprob: -17.625001907348633
    10. '```' → logprob: -18.000001907348633

Token 51: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008759701740927994
    2. '()' → logprob: -7.625875949859619
    3. '())' → logprob: -8.000876426696777
    4. ')
' → logprob: -10.250876426696777
    5. ' )' → logprob: -12.125876426696777
    6. '`)' → logprob: -12.625876426696777
    7. '))' → logprob: -13.125876426696777
    8. '   ' → logprob: -13.250876426696777
    9. ')`' → logprob: -13.875876426696777
    10. '(' → logprob: -14.000876426696777

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036828186362981796
    2. '<|end|>' → logprob: -3.7868282794952393
    3. '   ' → logprob: -4.91182804107666
    4. ')' → logprob: -5.91182804107666
    5. '
' → logprob: -6.91182804107666
    6. '<|end|>' → logprob: -7.41182804107666
    7. ',' → logprob: -7.78682804107666
    8. '        
' → logprob: -7.91182804107666
    9. ' lines' → logprob: -8.53682804107666
    10. '    
' → logprob: -8.78682804107666

Token 53: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.3698226511478424
    2. '       ' → logprob: -1.36982262134552
    3. '   ' → logprob: -3.3698227405548096
    4. 'lines' (adapté à ' lines') → logprob: -4.1198225021362305
    5. ' if' → logprob: -6.4948225021362305
    6. '	lines' → logprob: -7.1198225021362305
    7. 'if' → logprob: -8.24482250213623
    8. '    ' → logprob: -8.49482250213623
    9. ')' → logprob: -8.86982250213623
    10. '
' → logprob: -8.99482250213623

Token 54: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024902839213609695
    2. '.' → logprob: -6.002490520477295
    3. '.extend' → logprob: -12.252490043640137
    4. '.app' → logprob: -12.502490043640137
    5. ' .' → logprob: -12.502490043640137
    6. '.ap' → logprob: -13.752490043640137
    7. '.setdefault' → logprob: -15.002490043640137
    8. '.pop' → logprob: -15.627490043640137
    9. '.push' → logprob: -15.627490043640137
    10. '.insert' → logprob: -15.877490043640137

Token 55: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004352740943431854
    2. '(h' → logprob: -5.879352569580078
    3. '(' → logprob: -6.504352569580078
    4. '([' → logprob: -10.004352569580078
    5. '(([' → logprob: -13.254352569580078
    6. ' ((' → logprob: -13.879352569580078
    7. '(((' → logprob: -14.754352569580078
    8. '(p' → logprob: -14.879352569580078
    9. '(
' → logprob: -15.879352569580078
    10. ' (' → logprob: -16.004352569580078

Token 56: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00714890705421567
    2. ' h' → logprob: -5.007148742675781
    3. 'p' → logprob: -8.007148742675781
    4. 'n' → logprob: -10.257148742675781
    5. ' p' → logprob: -11.007148742675781
    6. '   ' → logprob: -11.132148742675781
    7. '(h' → logprob: -11.257148742675781
    8. ' ' → logprob: -11.882148742675781
    9. '    ' → logprob: -13.257148742675781
    10. ' n' → logprob: -13.257148742675781

Token 57: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4317018985748291
    2. ',p' → logprob: -1.056701898574829
    3. ' ,' → logprob: -5.93170166015625
    4. '-' → logprob: -9.05670166015625
    5. ',q' → logprob: -9.18170166015625
    6. ',n' → logprob: -10.43170166015625
    7. ' ' → logprob: -11.05670166015625
    8. ',m' → logprob: -11.18170166015625
    9. ' -' → logprob: -12.55670166015625
    10. ',,' → logprob: -12.55670166015625

Token 58: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.043338969349861145
    2. ',' → logprob: -3.1683390140533447
    3. ' ,' → logprob: -8.543338775634766
    4. '-' → logprob: -9.293338775634766
    5. ')' → logprob: -11.543338775634766
    6. ' ' → logprob: -12.168338775634766
    7. 'q' → logprob: -12.293338775634766
    8. '))' → logprob: -12.793338775634766
    9. ',
' → logprob: -12.918338775634766
    10. ',)' → logprob: -13.105838775634766

Token 59: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.026442527770996094
    2. ')' → logprob: -3.651442527770996
    3. '))
' → logprob: -9.151442527770996
    4. ' ))' → logprob: -11.026442527770996
    5. ')))' → logprob: -11.401442527770996
    6. ')
' → logprob: -12.901442527770996
    7. '),' → logprob: -13.151442527770996
    8. '   ' → logprob: -13.526442527770996
    9. ' )' → logprob: -14.401442527770996
    10. '))

' → logprob: -14.651442527770996

Token 60: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6799522042274475
    2. '   ' → logprob: -1.0549521446228027
    3. '<|end|>' → logprob: -2.8049521446228027
    4. '    
' → logprob: -4.054952144622803
    5. ' lines' → logprob: -4.429952144622803
    6. 'for' → logprob: -4.554952144622803
    7. '\n' → logprob: -4.804952144622803
    8. ')' → logprob: -4.929952144622803
    9. ' for' → logprob: -5.304952144622803
    10. 'lines' → logprob: -5.679952144622803

Token 61: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -0.14987757802009583
    2. ' lines' → logprob: -2.6498775482177734
    3. '   ' → logprob: -3.1498775482177734
    4. 'for' → logprob: -5.649877548217773
    5. 'dp' → logprob: -6.149877548217773
    6. '```' → logprob: -6.274877548217773
    7. '    
' → logprob: -6.399877548217773
    8. 'max' → logprob: -6.774877548217773
    9. ' for' → logprob: -6.774877548217773
    10. 'sorted' → logprob: -6.774877548217773

Token 62: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6972493529319763
    2. '(key' → logprob: -0.6972493529319763
    3. '(' → logprob: -5.822249412536621
    4. '(reverse' → logprob: -6.822249412536621
    5. 'key' → logprob: -11.822249412536621
    6. '(lambda' → logprob: -12.072249412536621
    7. '()
' → logprob: -12.072249412536621
    8. '()(' → logprob: -12.197249412536621
    9. '```' → logprob: -12.822249412536621
    10. ' ()' → logprob: -12.947249412536621

Token 64: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0024913568049669266
    2. '=' → logprob: -6.002491474151611
    3. ')' → logprob: -11.377490997314453
    4. '(True' → logprob: -13.752490997314453
    5. ')=' → logprob: -13.752490997314453
    6. ',' → logprob: -14.502490997314453
    7. '())' → logprob: -14.877490997314453
    8. '()' → logprob: -14.877490997314453
    9. '(' → logprob: -15.752490997314453
    10. '=False' → logprob: -15.752490997314453

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004056474717799574
    2. ')
' → logprob: -8.000405311584473
    3. ' )' → logprob: -10.250405311584473
    4. ',' → logprob: -10.625405311584473
    5. '   ' → logprob: -13.000405311584473
    6. ')

' → logprob: -13.250405311584473
    7. '<|end|>' → logprob: -13.375405311584473
    8. '))' → logprob: -14.000405311584473
    9. ' ' → logprob: -14.375405311584473
    10. ')#' → logprob: -14.625405311584473

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7392463684082031
    2. ')' → logprob: -1.8642463684082031
    3. '
' → logprob: -2.364246368408203
    4. ':' → logprob: -2.364246368408203
    5. '<|end|>' → logprob: -2.364246368408203
    6. ',' → logprob: -3.364246368408203
    7. 'for' → logprob: -4.239246368408203
    8. ' for' → logprob: -4.739246368408203
    9. ' ' → logprob: -5.614246368408203
    10. ',
' → logprob: -5.739246368408203

Token 67: ' pos' (ID: 1253)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3750609159469604
    2. '   ' → logprob: -1.5000609159469604
    3. 'n' → logprob: -2.37506103515625
    4. '<|end|>' → logprob: -2.50006103515625
    5. 'for' → logprob: -2.75006103515625
    6. 'max' → logprob: -2.87506103515625
    7. ')' → logprob: -3.00006103515625
    8. ' for' → logprob: -3.12506103515625
    9. ' if' → logprob: -4.50006103515625
    10. 'total' → logprob: -4.62506103515625

Token 68: '=a' (ID: 53088)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21126271784305573
    2. ' =' → logprob: -1.9612627029418945
    3. 's' → logprob: -3.8362627029418945
    4. 'ition' → logprob: -4.4612627029418945
    5. 'itions' → logprob: -5.2112627029418945
    6. 'sible' → logprob: -5.3362627029418945
    7. '=[]' → logprob: -6.3362627029418945
    8. 'itional' → logprob: -6.5862627029418945
    9. 'essions' → logprob: -7.4612627029418945
    10. '_' → logprob: -7.7112627029418945

Token 69: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1679348945617676
    2. ':' → logprob: -1.5429348945617676
    3. '=' → logprob: -1.9179348945617676
    4. '-' → logprob: -2.5429348945617676
    5. ')' → logprob: -3.4179348945617676
    6. 'for' → logprob: -3.4179348945617676
    7. '0' → logprob: -3.5429348945617676
    8. '%' → logprob: -3.5429348945617676
    9. ' for' → logprob: -4.042934894561768
    10. '<|end|>' → logprob: -4.167934894561768

Token 71: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09914655238389969
    2. 'count' → logprob: -3.974146604537964
    3. 'ans' → logprob: -4.349146366119385
    4. ' for' → logprob: -4.724146366119385
    5. 'steps' → logprob: -4.974146366119385
    6. 'valid' → logprob: -5.724146366119385
    7. 'result' → logprob: -5.724146366119385
    8. 'pos' → logprob: -5.849146366119385
    9. '=' → logprob: -5.974146366119385
    10. '0' → logprob: -5.974146366119385

Token 72: ' _,' (ID: 18042)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.09985104203224182
    2. 'h' → logprob: -2.474851131439209
    3. ' i' → logprob: -5.349851131439209
    4. ' _' → logprob: -6.599851131439209
    5. ' ' → logprob: -7.224851131439209
    6. '_,' → logprob: -7.224851131439209
    7. ' _,' → logprob: -7.349851131439209
    8. 'i' → logprob: -7.474851131439209
    9. ' line' → logprob: -7.724851131439209
    10. ' p' → logprob: -8.09985065460205

Token 73: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003170226002112031
    2. ' p' → logprob: -5.878170013427734
    3. 'h' → logprob: -8.503170013427734
    4. '_,' → logprob: -9.128170013427734
    5. '_p' → logprob: -11.503170013427734
    6. 'q' → logprob: -11.753170013427734
    7. 'l' → logprob: -12.128170013427734
    8. ' ' → logprob: -12.128170013427734
    9. 'start' → logprob: -12.628170013427734
    10. 'x' → logprob: -13.128170013427734

Token 74: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.0015731871826574206
    2. ',' → logprob: -7.501573085784912
    3. ',p' → logprob: -8.87657356262207
    4. ',d' → logprob: -9.00157356262207
    5. ',x' → logprob: -9.12657356262207
    6. ',v' → logprob: -9.37657356262207
    7. ' ,' → logprob: -9.37657356262207
    8. ',_' → logprob: -9.37657356262207
    9. ',pos' → logprob: -9.50157356262207
    10. ',j' → logprob: -9.87657356262207

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02706056833267212
    2. 'in' → logprob: -3.6520605087280273
    3. ',' → logprob: -7.277060508728027
    4. ',in' → logprob: -10.777060508728027
    5. '   ' → logprob: -11.902060508728027
    6. ' ' → logprob: -11.902060508728027
    7. ' ,' → logprob: -12.152060508728027
    8. ',p' → logprob: -12.152060508728027
    9. ',pos' → logprob: -12.402060508728027
    10. '```' → logprob: -13.152060508728027

Token 76: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5231534838676453
    2. ' lines' → logprob: -0.8981534838676453
    3. '(lines' → logprob: -11.273153305053711
    4. ' ' → logprob: -11.773153305053711
    5. '	lines' → logprob: -12.398153305053711
    6. 'line' → logprob: -13.273153305053711
    7. '_lines' → logprob: -13.898153305053711
    8. '   ' → logprob: -14.273153305053711
    9. '.lines' → logprob: -15.023153305053711
    10. '[' → logprob: -15.148153305053711

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006767706945538521
    2. ':
' → logprob: -5.006767749786377
    3. ',' → logprob: -11.256767272949219
    4. ':

' → logprob: -11.506767272949219
    5. '<|end|>' → logprob: -11.756767272949219
    6. '):' → logprob: -12.506767272949219
    7. '[::-' → logprob: -12.756767272949219
    8. ':**' → logprob: -12.881767272949219
    9. '):
' → logprob: -13.131767272949219
    10. '   ' → logprob: -13.256767272949219

Token 78: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4335100054740906
    2. '       ' → logprob: -1.5585100650787354
    3. ':' → logprob: -2.6835100650787354
    4. '<|end|>' → logprob: -3.3085100650787354
    5. ' if' → logprob: -4.683509826660156
    6. ':
' → logprob: -4.683509826660156
    7. '```' → logprob: -5.183509826660156
    8. ' ' → logprob: -5.683509826660156
    9. '    ' → logprob: -6.308509826660156
    10. '  ' → logprob: -6.558509826660156

Token 79: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4810202419757843
    2. 'if' (adapté à ' if') → logprob: -1.231020212173462
    3. '       ' → logprob: -3.106020212173462
    4. '   ' → logprob: -3.731020212173462
    5. '<|end|>' → logprob: -4.481020450592041
    6. '    ' → logprob: -5.856020450592041
    7. ' ' → logprob: -5.856020450592041
    8. '```' → logprob: -5.981020450592041
    9. '<|end|>' → logprob: -8.356019973754883
    10. ' 
' → logprob: -8.481019973754883

Token 80: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.8173414468765259
    2. ' p' → logprob: -1.1923414468765259
    3. 'pos' → logprob: -1.9423414468765259
    4. 'p' → logprob: -2.3173413276672363
    5. ' q' → logprob: -5.192341327667236
    6. 'q' → logprob: -6.442341327667236
    7. ' (' → logprob: -6.692341327667236
    8. '(pos' → logprob: -6.817341327667236
    9. ' abs' → logprob: -6.942341327667236
    10. '(' → logprob: -7.317341327667236

Token 81: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5351049304008484
    2. '>=' → logprob: -0.9101049304008484
    3. '<=' → logprob: -5.785104751586914
    4. ' >=' → logprob: -5.785104751586914
    5. ' ==' → logprob: -5.785104751586914
    6. '>' → logprob: -6.160104751586914
    7. '<' → logprob: -8.660104751586914
    8. ' in' → logprob: -9.160104751586914
    9. '=' → logprob: -9.660104751586914
    10. 'in' → logprob: -9.785104751586914

Token 82: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0055307806469500065
    2. 'q' → logprob: -5.255530834197998
    3. ' p' → logprob: -8.25553035736084
    4. '1' → logprob: -11.00553035736084
    5. '0' → logprob: -11.75553035736084
    6. ' ' → logprob: -12.13053035736084
    7. '   ' → logprob: -13.38053035736084
    8. ' q' → logprob: -13.50553035736084
    9. '2' → logprob: -14.00553035736084
    10. '_p' → logprob: -14.25553035736084

Token 83: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2111746072769165
    2. ':' → logprob: -1.7111746072769165
    3. 'or' → logprob: -4.711174488067627
    4. ':
' → logprob: -8.086174964904785
    5. ' and' → logprob: -8.586174964904785
    6. 'and' → logprob: -8.961174964904785
    7. ' :' → logprob: -10.211174964904785
    8. ':return' → logprob: -11.086174964904785
    9. ':

' → logprob: -11.461174964904785
    10. ' ' → logprob: -11.961174964904785

Token 84: '           ' (ID: 352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0004665385349653661
    2. '           ' → logprob: -8.750466346740723
    3. ' pos' → logprob: -9.000466346740723
    4. ',pos' → logprob: -9.250466346740723
    5. '[pos' → logprob: -11.375466346740723
    6. 'p' → logprob: -11.375466346740723
    7. '	pos' → logprob: -11.500466346740723
    8. '<|end|>' → logprob: -11.625466346740723
    9. '=' → logprob: -11.750466346740723
    10. '               ' → logprob: -12.000466346740723

Token 86: '=q' (ID: 151306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932209730148315
    2. '=q' → logprob: -0.6932209730148315
    3. '=p' → logprob: -10.818221092224121
    4. ' =' → logprob: -11.443221092224121
    5. '=s' → logprob: -12.193221092224121
    6. '=

' → logprob: -12.568221092224121
    7. '=j' → logprob: -12.818221092224121
    8. '=query' → logprob: -12.818221092224121
    9. '+=' → logprob: -13.068221092224121
    10. '=y' → logprob: -13.193221092224121

Token 87: '
' (ID: 198)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.2627653479576111
    2. '       ' → logprob: -2.387765407562256
    3. 'elif' → logprob: -2.512765407562256
    4. '<|end|>' → logprob: -3.137765407562256
    5. ' else' → logprob: -5.137765407562256
    6. ' or' → logprob: -5.637765407562256
    7. '	elif' → logprob: -6.262765407562256
    8. '<|end|>' → logprob: -7.137765407562256
    9. ' ' → logprob: -7.262765407562256
    10. 'else' → logprob: -7.637765407562256

Token 88: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.29493290185928345
    2. 'elif' (adapté à ' elif') → logprob: -1.5449328422546387
    3. ' else' → logprob: -4.294932842254639
    4. '<|end|>' → logprob: -4.294932842254639
    5. '       ' → logprob: -5.169932842254639
    6. 'else' → logprob: -5.419932842254639
    7. '	elif' → logprob: -5.919932842254639
    8. ' or' → logprob: -6.919932842254639
    9. '   ' → logprob: -7.544932842254639
    10. '<|end|>' → logprob: -8.544933319091797

Token 90: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.008649553172290325
    2. 'pos' → logprob: -4.7586493492126465
    3. ' q' → logprob: -10.508649826049805
    4. ' p' → logprob: -12.758649826049805
    5. ' ' → logprob: -13.883649826049805
    6. '    ' → logprob: -14.383649826049805
    7. '(pos' → logprob: -14.383649826049805
    8. ' ' → logprob: -14.508649826049805
    9. 'q' → logprob: -14.633649826049805
    10. '[pos' → logprob: -14.633649826049805

Token 91: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05506360903382301
    2. ' ==' → logprob: -2.9300637245178223
    3. '=' → logprob: -8.680063247680664
    4. '<|end|>' → logprob: -12.305063247680664
    5. ' ' → logprob: -13.305063247680664
    6. '===' → logprob: -13.430063247680664
    7. ']==' → logprob: -14.180063247680664
    8. '==
' → logprob: -14.430063247680664
    9. ')==' → logprob: -14.430063247680664
    10. ' is' → logprob: -14.930063247680664

Token 92: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.596781946020201e-05
    2. ' q' → logprob: -10.000045776367188
    3. '	q' → logprob: -15.375045776367188
    4. '   ' → logprob: -16.125045776367188
    5. ' ' → logprob: -16.250045776367188
    6. '       ' → logprob: -17.250045776367188
    7. '```' → logprob: -18.000045776367188
    8. '  ' → logprob: -18.250045776367188
    9. '<|end|>' → logprob: -18.375045776367188
    10. 'p' → logprob: -18.625045776367188

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008055794751271605
    2. ':
' → logprob: -7.125805377960205
    3. '):' → logprob: -15.125805854797363
    4. ' :' → logprob: -15.375805854797363
    5. ':

' → logprob: -15.500805854797363
    6. ':
' → logprob: -16.250804901123047
    7. ' and' → logprob: -16.500804901123047
    8. '           ' → logprob: -16.875804901123047
    9. ' or' → logprob: -16.875804901123047
    10. ',' → logprob: -16.875804901123047

Token 94: '           ' (ID: 352)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.815280696377158e-05
    2. ' p' → logprob: -9.500078201293945
    3. 'pos' → logprob: -13.000078201293945
    4. '=' → logprob: -13.875078201293945
    5. '```' → logprob: -18.000078201293945
    6. '-p' → logprob: -18.375078201293945
    7. ',p' → logprob: -18.750078201293945
    8. '<p' → logprob: -19.000078201293945
    9. ' ' → logprob: -19.000078201293945
    10. 'п' → logprob: -19.125078201293945

Token 95: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.4744648039340973
    2. 'p' → logprob: -0.9744647741317749
    3. ' pos' → logprob: -8.349464416503906
    4. ' p' → logprob: -8.849464416503906
    5. '```' → logprob: -12.599464416503906
    6. '           ' → logprob: -13.349464416503906
    7. '       ' → logprob: -14.724464416503906
    8. 'po' → logprob: -14.849464416503906
    9. 'python' → logprob: -15.099464416503906
    10. ' ' → logprob: -15.349464416503906

Token 96: '=p' (ID: 48137)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16026657819747925
    2. '=p' → logprob: -1.910266637802124
    3. ' =' → logprob: -10.160266876220703
    4. '=q' → logprob: -12.910266876220703
    5. '=

' → logprob: -14.785266876220703
    6. '=n' → logprob: -15.535266876220703
    7. '=
' → logprob: -15.660266876220703
    8. '=s' → logprob: -16.285266876220703
    9. '=pd' → logprob: -16.535266876220703
    10. '=user' → logprob: -17.285266876220703

Token 97: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04510946571826935
    2. '
' → logprob: -3.795109510421753
    3. '   ' → logprob: -4.545109272003174
    4. ' print' → logprob: -4.920109272003174
    5. '\n' → logprob: -6.045109272003174
    6. '<|end|>' → logprob: -7.170109272003174
    7. '```' → logprob: -8.920109748840332
    8. ')' → logprob: -9.295109748840332
    9. '(print' → logprob: -9.420109748840332
    10. '	print' → logprob: -10.170109748840332

Token 98: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004680749494582415
    2. '   ' → logprob: -5.754680633544922
    3. ' print' → logprob: -6.504680633544922
    4. '
' → logprob: -13.004680633544922
    5. '```' → logprob: -13.379680633544922
    6. '(print' → logprob: -14.379680633544922
    7. '	print' → logprob: -14.629680633544922
    8. ' ' → logprob: -15.629680633544922
    9. ')' → logprob: -16.254680633544922
    10. '.print' → logprob: -16.254680633544922

Token 99: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000825825787615031
    2. ' print' → logprob: -7.250825881958008
    3. '   ' → logprob: -9.125825881958008
    4. '
' → logprob: -12.000825881958008
    5. '```' → logprob: -14.250825881958008
    6. '    
' → logprob: -15.750825881958008
    7. ' ' → logprob: -17.750825881958008
    8. '#print' → logprob: -18.000825881958008
    9. '	print' → logprob: -18.125825881958008
    10. '(print' → logprob: -18.125825881958008

Token 100: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.000157293034135364
    2. '(' → logprob: -9.000157356262207
    3. 'pos' → logprob: -11.000157356262207
    4. ' (' → logprob: -11.375157356262207
    5. '('' → logprob: -13.125157356262207
    6. ' pos' → logprob: -13.750157356262207
    7. '(f' → logprob: -14.125157356262207
    8. '("' → logprob: -15.000157356262207
    9. '(len' → logprob: -15.250157356262207
    10. '()' → logprob: -15.375157356262207

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -15.875000953674316
    4. '))' → logprob: -17.0
    5. ')`' → logprob: -17.0
    6. '`)' → logprob: -19.0
    7. ')}' → logprob: -19.5
    8. ')#' → logprob: -20.125
    9. '）' → logprob: -20.5
    10. '')' → logprob: -20.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 99
Tokens correctement prédits (1ère position, stricte): 46
Tokens correctement prédits (1ère position, avec adaptation): 52
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 46.46%
Précision adaptée (1ère position): 52.53%
Précision (top 10): 81.82%
================================================================================
