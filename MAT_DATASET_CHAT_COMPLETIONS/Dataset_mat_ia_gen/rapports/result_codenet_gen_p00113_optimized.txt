================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:01:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    if not line.strip():
        continue
    p, q = map(int, line.split())
    p = p % q
    decimal_digits = []
    remainder_pos = {}
    idx = 0
    while True:
        if p == 0:
            # 有限小数
            print(''.join(decimal_digits))
            break
        if p in remainder_pos:
            # 循環小数
            start = remainder_pos[p]
            non_repeating = ''.join(decimal_digits[:start])
            repeating = ''.join(decimal_digits[start:])
            print(non_repeating + repeating)
            print(' ' * len(non_repeating) + '^' * len(repeating))
            break
        remainder_pos[p] = idx
        p *= 10
        decimal_digits.append(str(p // q))
        p %= q
        idx += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0005637573776766658
    2. '  ' → logprob: -7.750563621520996
    3. ' i' → logprob: -9.000563621520996
    4. '_' → logprob: -13.750563621520996
    5. ' space' → logprob: -13.875563621520996
    6. ' ```' → logprob: -14.000563621520996
    7. ' ‌' → logprob: -14.125563621520996
    8. ' )' → logprob: -14.250563621520996
    9. ' ' → logprob: -14.500563621520996
    10. ' a' → logprob: -14.750563621520996

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1365940123796463
    2. 'in' → logprob: -2.13659405708313
    3. '[' → logprob: -5.261593818664551
    4. ':' → logprob: -6.136593818664551
    5. ' ' → logprob: -7.886593818664551
    6. ' :' → logprob: -8.13659381866455
    7. '[:' → logprob: -8.38659381866455
    8. '[:]' → logprob: -8.51159381866455
    9. '.' → logprob: -8.63659381866455
    10. '[]' → logprob: -9.01159381866455

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.01129148993641138
    2. 'sys' → logprob: -4.51129150390625
    3. ' ' → logprob: -9.38629150390625
    4. '=sys' → logprob: -9.51129150390625
    5. '	sys' → logprob: -10.51129150390625
    6. '(sys' → logprob: -10.76129150390625
    7. ' iter' → logprob: -11.13629150390625
    8. '```' → logprob: -12.26129150390625
    9. ' file' → logprob: -12.38629150390625
    10. ' open' → logprob: -12.51129150390625

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004592707380652428
    2. '.readline' → logprob: -5.5045928955078125
    3. '.stdin' → logprob: -8.129592895507812
    4. ' .' → logprob: -9.754592895507812
    5. '.argv' → logprob: -10.254592895507812
    6. '.stdout' → logprob: -10.254592895507812
    7. '.readlines' → logprob: -10.879592895507812
    8. 'import' → logprob: -11.129592895507812
    9. '.`' → logprob: -11.754592895507812
    10. ':' → logprob: -12.129592895507812

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.550411151489243e-05
    2. ' :' → logprob: -11.000055313110352
    3. ':
' → logprob: -11.250055313110352
    4. '>:' → logprob: -11.750055313110352
    5. '():' → logprob: -12.375055313110352
    6. '[:]' → logprob: -12.625055313110352
    7. ':**' → logprob: -12.875055313110352
    8. '):' → logprob: -13.250055313110352
    9. '':' → logprob: -13.750055313110352
    10. '`:' → logprob: -14.125055313110352

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016936269821599126
    2. '    
' → logprob: -6.8766937255859375
    3. ' print' → logprob: -7.8766937255859375
    4. 'print' → logprob: -8.626693725585938
    5. '    ' → logprob: -10.251693725585938
    6. '```' → logprob: -11.376693725585938
    7. '   ' → logprob: -11.751693725585938
    8. ' if' → logprob: -12.126693725585938
    9. ' ' → logprob: -12.626693725585938
    10. '`' → logprob: -12.626693725585938

Token 10: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1665678769350052
    2. '   ' → logprob: -2.041567802429199
    3. ' print' → logprob: -3.916567802429199
    4. '    ' → logprob: -6.916567802429199
    5. 'pass' → logprob: -6.916567802429199
    6. ' line' → logprob: -7.041567802429199
    7. 'line' → logprob: -7.791567802429199
    8. ' pass' → logprob: -8.5415678024292
    9. ' if' → logprob: -9.9165678024292
    10. 'strip' → logprob: -10.0415678024292

Token 11: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.053970761597156525
    2. ' not' → logprob: -3.0539708137512207
    3. ' ' → logprob: -5.553970813751221
    4. 'line' → logprob: -6.928970813751221
    5. ''' → logprob: -8.428970336914062
    6. '"' → logprob: -9.553970336914062
    7. ' len' → logprob: -9.803970336914062
    8. 'not' → logprob: -9.928970336914062
    9. ' '' → logprob: -10.053970336914062
    10. '  ' → logprob: -11.053970336914062

Token 12: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.006724960170686245
    2. 'line' → logprob: -5.006724834442139
    3. ' ' → logprob: -12.131725311279297
    4. '	line' → logprob: -13.381725311279297
    5. '(line' → logprob: -14.131725311279297
    6. '=line' → logprob: -14.381725311279297
    7. '[line' → logprob: -14.881725311279297
    8. '#line' → logprob: -15.256725311279297
    9. '   ' → logprob: -15.756725311279297
    10. '    ' → logprob: -15.756725311279297

Token 13: '.strip' (ID: 40613)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3522897958755493
    2. '.strip' → logprob: -1.2272897958755493
    3. '.rstrip' → logprob: -6.10228967666626
    4. '.startswith' → logprob: -6.47728967666626
    5. ' .' → logprob: -10.227290153503418
    6. '.endswith' → logprob: -11.477290153503418
    7. '.readline' → logprob: -12.352290153503418
    8. 'strip' → logprob: -12.852290153503418
    9. 'rstrip' → logprob: -12.977290153503418
    10. '.split' → logprob: -13.477290153503418

Token 14: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006037878338247538
    2. ':' → logprob: -7.625603675842285
    3. '():
' → logprob: -9.625603675842285
    4. ' ():' → logprob: -10.375603675842285
    5. '()' → logprob: -11.250603675842285
    6. '().' → logprob: -13.375603675842285
    7. '():
' → logprob: -14.000603675842285
    8. '(':' → logprob: -14.500603675842285
    9. '()==' → logprob: -14.625603675842285
    10. ' :' → logprob: -14.875603675842285

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009887357242405415
    2. '   ' → logprob: -4.884887218475342
    3. ' continue' → logprob: -6.259887218475342
    4. 'continue' → logprob: -8.0098876953125
    5. '```' → logprob: -11.5098876953125
    6. ' break' → logprob: -12.0098876953125
    7. '   ' → logprob: -12.2598876953125
    8. ' continues' → logprob: -12.7598876953125
    9. '	continue' → logprob: -12.8848876953125
    10. '_continue' → logprob: -13.5098876953125

Token 16: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2576638162136078
    2. 'break' → logprob: -1.5076638460159302
    3. '   ' → logprob: -5.632663726806641
    4. '       ' → logprob: -6.382663726806641
    5. 'continue' (adapté à ' continue') → logprob: -8.50766372680664
    6. ' continue' → logprob: -8.88266372680664
    7. '	break' → logprob: -9.63266372680664
    8. '    ' → logprob: -10.63266372680664
    9. '_break' → logprob: -12.63266372680664
    10. '           ' → logprob: -12.75766372680664

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01926436647772789
    2. '    
' → logprob: -4.019264221191406
    3. '        
' → logprob: -7.769264221191406
    4. '
' → logprob: -8.144264221191406
    5. '    ' → logprob: -9.394264221191406
    6. '```' → logprob: -9.769264221191406
    7. '\n' → logprob: -9.894264221191406
    8. '       ' → logprob: -10.019264221191406
    9. 'print' → logprob: -10.144264221191406
    10. '     
' → logprob: -10.519264221191406

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001793457195162773
    2. 'print' → logprob: -9.000179290771484
    3. '    
' → logprob: -10.375179290771484
    4. '       ' → logprob: -11.750179290771484
    5. '```' → logprob: -11.875179290771484
    6. ' print' → logprob: -12.500179290771484
    7. '   ' → logprob: -13.375179290771484
    8. '    ' → logprob: -13.625179290771484
    9. '        
' → logprob: -14.125179290771484
    10. '
' → logprob: -14.375179290771484

Token 19: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1287253350019455
    2. 'print' → logprob: -2.128725290298462
    3. ' print' → logprob: -6.878725528717041
    4. 'data' → logprob: -8.753725051879883
    5. 'tokens' → logprob: -8.753725051879883
    6. 'try' → logprob: -9.503725051879883
    7. 'import' → logprob: -9.753725051879883
    8. 'result' → logprob: -9.878725051879883
    9. '       ' → logprob: -10.628725051879883
    10. 'process' → logprob: -10.628725051879883

Token 20: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.337155355140567e-05
    2. 'rocess' → logprob: -10.875062942504883
    3. ' r' → logprob: -11.375062942504883
    4. 'ass' → logprob: -11.625062942504883
    5. 'arse' → logprob: -12.125062942504883
    6. 'rin' → logprob: -12.125062942504883
    7. '   ' → logprob: -13.000062942504883
    8. 'print' → logprob: -13.375062942504883
    9. 'ri' → logprob: -13.625062942504883
    10. '=r' → logprob: -13.750062942504883

Token 21: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2713513970375061
    2. ' q' → logprob: -2.1463513374328613
    3. 'w' → logprob: -2.7713513374328613
    4. 'v' → logprob: -4.021351337432861
    5. 's' → logprob: -4.146351337432861
    6. ' w' → logprob: -5.521351337432861
    7. 'n' → logprob: -5.646351337432861
    8. 'line' → logprob: -5.771351337432861
    9. 't' → logprob: -6.771351337432861
    10. ' v' → logprob: -6.896351337432861

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520059049129486
    2. '=' → logprob: -1.502005934715271
    3. ',' → logprob: -9.502005577087402
    4. ' ' → logprob: -14.127005577087402
    5. ')' → logprob: -14.252005577087402
    6. '=line' → logprob: -15.502005577087402
    7. ' ,' → logprob: -15.752005577087402
    8. '   ' → logprob: -16.25200653076172
    9. ' =
' → logprob: -16.87700653076172
    10. ' =)' → logprob: -17.00200653076172

Token 23: ' map' (ID: 4014)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.33986443281173706
    2. 'line' → logprob: -1.4648644924163818
    3. ' map' → logprob: -3.214864492416382
    4. 'map' → logprob: -4.089864253997803
    5. ' ' → logprob: -10.714864730834961
    6. '[line' → logprob: -10.714864730834961
    7. '[' → logprob: -10.964864730834961
    8. ' [' → logprob: -10.964864730834961
    9. '   ' → logprob: -11.714864730834961
    10. ' p' → logprob: -11.714864730834961

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01830551214516163
    2. '(str' → logprob: -4.39330530166626
    3. '(' → logprob: -5.26830530166626
    4. '(lambda' → logprob: -7.39330530166626
    5. 'int' → logprob: -12.643305778503418
    6. '[int' → logprob: -12.893305778503418
    7. '(eval' → logprob: -13.518305778503418
    8. '<int' → logprob: -13.893305778503418
    9. '(float' → logprob: -14.143305778503418
    10. '(line' → logprob: -14.643305778503418

Token 25: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.05846840515732765
    2. ',' → logprob: -3.0584683418273926
    3. ',line' → logprob: -5.308468341827393
    4. ')' → logprob: -5.433468341827393
    5. '(' → logprob: -8.30846881866455
    6. ' line' → logprob: -9.55846881866455
    7. ' ,' → logprob: -9.80846881866455
    8. 'line' → logprob: -9.93346881866455
    9. '[line' → logprob: -10.30846881866455
    10. '#line' → logprob: -11.18346881866455

Token 26: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.10022241622209549
    2. 'line' → logprob: -2.35022234916687
    3. ')' → logprob: -12.10022258758545
    4. '(line' → logprob: -12.47522258758545
    5. '   ' → logprob: -13.47522258758545
    6. '	line' → logprob: -13.47522258758545
    7. '[line' → logprob: -13.85022258758545
    8. ' p' → logprob: -14.22522258758545
    9. ' ' → logprob: -14.35022258758545
    10. '=line' → logprob: -14.72522258758545

Token 27: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.062089912593364716
    2. '.split' → logprob: -2.8120899200439453
    3. '.rstrip' → logprob: -9.687089920043945
    4. '.' → logprob: -9.812089920043945
    5. ' .' → logprob: -12.812089920043945
    6. '.readline' → logprob: -13.687089920043945
    7. '().' → logprob: -14.437089920043945
    8. 'strip' → logprob: -14.562089920043945
    9. ').' → logprob: -15.187089920043945
    10. ')' → logprob: -16.187089920043945

Token 28: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.02863486297428608
    2. '())' → logprob: -3.653634786605835
    3. '()' → logprob: -6.528635025024414
    4. '(' → logprob: -8.028635025024414
    5. '(','' → logprob: -8.278635025024414
    6. ')' → logprob: -8.903635025024414
    7. '("' → logprob: -9.153635025024414
    8. '("("' → logprob: -10.903635025024414
    9. '')' → logprob: -11.528635025024414
    10. '(',' → logprob: -11.653635025024414

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.520911455154419
    2. '<|end|>' → logprob: -1.145911455154419
    3. '
' → logprob: -3.145911455154419
    4. ':' → logprob: -4.02091121673584
    5. ',' → logprob: -5.14591121673584
    6. '    
' → logprob: -5.52091121673584
    7. '\n' → logprob: -5.64591121673584
    8. ')' → logprob: -5.77091121673584
    9. '<|end|>' → logprob: -6.14591121673584
    10. '  ' → logprob: -6.27091121673584

Token 30: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07535530626773834
    2. '    
' → logprob: -3.950355291366577
    3. '
' → logprob: -4.450355529785156
    4. '    ' → logprob: -4.450355529785156
    5. ' if' → logprob: -5.075355529785156
    6. 'print' → logprob: -5.200355529785156
    7. ',' → logprob: -5.575355529785156
    8. ' ' → logprob: -6.200355529785156
    9. 'if' → logprob: -6.325355529785156
    10. '\n' → logprob: -6.575355529785156

Token 31: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5745168328285217
    2. ' +' → logprob: -1.699516773223877
    3. ' %' → logprob: -2.074516773223877
    4. '%' → logprob: -2.949516773223877
    5. ' *' → logprob: -3.824516773223877
    6. ',' → logprob: -4.574516773223877
    7. '*' → logprob: -4.824516773223877
    8. ' >' → logprob: -5.074516773223877
    9. ' **' → logprob: -5.074516773223877
    10. '>' → logprob: -5.199516773223877

Token 32: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6772333979606628
    2. ' p' → logprob: -1.4272334575653076
    3. 'q' → logprob: -1.9272334575653076
    4. ' q' → logprob: -2.9272334575653076
    5. ' (' → logprob: -3.8022334575653076
    6. '(p' → logprob: -5.0522332191467285
    7. 'max' → logprob: -5.8022332191467285
    8. ' max' → logprob: -5.8022332191467285
    9. ' ' → logprob: -6.0522332191467285
    10. '1' → logprob: -6.0522332191467285

Token 33: ' %' (ID: 1851)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6697284579277039
    2. '*' → logprob: -1.7947285175323486
    3. ' +' → logprob: -2.0447285175323486
    4. ' *' → logprob: -2.6697285175323486
    5. '**' → logprob: -2.7947285175323486
    6. '%' → logprob: -3.5447285175323486
    7. ' **' → logprob: -4.5447282791137695
    8. '-' → logprob: -4.7947282791137695
    9. ' %' → logprob: -4.7947282791137695
    10. '*q' → logprob: -6.4197282791137695

Token 34: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.02875545062124729
    2. '100' → logprob: -4.5287556648254395
    3. '10' → logprob: -4.9037556648254395
    4. '7' → logprob: -6.4037556648254395
    5. '2' → logprob: -6.5287556648254395
    6. '360' → logprob: -6.9037556648254395
    7. '4' → logprob: -7.1537556648254395
    8. '3' → logprob: -7.2787556648254395
    9. '5' → logprob: -7.4037556648254395
    10. '60' → logprob: -7.6537556648254395

Token 35: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4413204789161682
    2. '
' → logprob: -2.1913204193115234
    3. '<|end|>' → logprob: -2.4413204193115234
    4. '%' → logprob: -2.6913204193115234
    5. '*' → logprob: -3.4413204193115234
    6. '\n' → logprob: -3.6913204193115234
    7. '**' → logprob: -4.566320419311523
    8. '   ' → logprob: -5.066320419311523
    9. ' ' → logprob: -5.941320419311523
    10. ' +' → logprob: -6.066320419311523

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06365098059177399
    2. '\n' → logprob: -3.3136510848999023
    3. '+' → logprob: -4.938651084899902
    4. '    
' → logprob: -5.063651084899902
    5. '
' → logprob: -5.188651084899902
    6. '<|end|>' → logprob: -6.313651084899902
    7. '```' → logprob: -6.938651084899902
    8. ' ' → logprob: -7.688651084899902
    9. '*' → logprob: -7.813651084899902
    10. '+
' → logprob: -7.938651084899902

Token 37: ' decimal' (ID: 26964)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37354743480682373
    2. '   ' → logprob: -2.1235475540161133
    3. '*' → logprob: -2.8735475540161133
    4. 'if' → logprob: -3.3735475540161133
    5. 'print' → logprob: -3.8735475540161133
    6. '
' → logprob: -3.9985475540161133
    7. ' if' → logprob: -4.498547554016113
    8. '\n' → logprob: -4.998547554016113
    9. ':' → logprob: -5.123547554016113
    10. '-' → logprob: -5.248547554016113

Token 38: '_digits' (ID: 108638)
  Prédit: '_places'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_places' → logprob: -1.075505018234253
    2. '_' → logprob: -1.450505018234253
    3. '_parts' → logprob: -1.575505018234253
    4. '_point' → logprob: -2.325505018234253
    5. '_points' → logprob: -3.325505018234253
    6. '_place' → logprob: -3.575505018234253
    7. '_part' → logprob: -3.575505018234253
    8. '_digits' → logprob: -4.575505256652832
    9. '_pos' → logprob: -4.825505256652832
    10. '_rep' → logprob: -6.200505256652832

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0337785929441452
    2. '=' → logprob: -3.408778667449951
    3. '=[]' → logprob: -9.783778190612793
    4. ' ' → logprob: -10.408778190612793
    5. '_' → logprob: -11.408778190612793
    6. ',' → logprob: -11.658778190612793
    7. '_count' → logprob: -11.908778190612793
    8. 's' → logprob: -12.033778190612793
    9. '[:]' → logprob: -13.408778190612793
    10. '[' → logprob: -13.533778190612793

Token 40: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6616902947425842
    2. ' []' → logprob: -0.7866902947425842
    3. '[' → logprob: -4.1616902351379395
    4. '[p' → logprob: -5.2866902351379395
    5. ' [' → logprob: -5.4116902351379395
    6. '[q' → logprob: -6.6616902351379395
    7. '[]
' → logprob: -7.6616902351379395
    8. '0' → logprob: -8.036690711975098
    9. '"' → logprob: -8.286690711975098
    10. '1' → logprob: -8.536690711975098

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8934838175773621
    2. ' while' → logprob: -1.0184838771820068
    3. 'while' → logprob: -1.8934838771820068
    4. '.' → logprob: -2.893483877182007
    5. ' for' → logprob: -4.518483638763428
    6. 'for' → logprob: -5.393483638763428
    7. ' if' → logprob: -5.893483638763428
    8. '```' → logprob: -6.893483638763428
    9. 'if' → logprob: -7.143483638763428
    10. ' ' → logprob: -7.393483638763428

Token 42: ' remainder' (ID: 47056)
  Prédit: 'rema'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rema' → logprob: -0.5543660521507263
    2. 're' → logprob: -1.429366111755371
    3. 'while' → logprob: -2.429366111755371
    4. 'seen' → logprob: -2.929366111755371
    5. 'rem' → logprob: -4.304366111755371
    6. 'visited' → logprob: -4.554366111755371
    7. ' remainder' → logprob: -5.429366111755371
    8. ' re' → logprob: -5.929366111755371
    9. ' while' → logprob: -6.179366111755371
    10. 'for' → logprob: -6.554366111755371

Token 43: '_pos' (ID: 14692)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10098012536764145
    2. '=' → logprob: -2.975980043411255
    3. 's' → logprob: -3.100980043411255
    4. ' s' → logprob: -11.100979804992676
    5. ' ' → logprob: -12.350979804992676
    6. '_set' → logprob: -12.350979804992676
    7. '=set' → logprob: -12.600979804992676
    8. '=s' → logprob: -12.725979804992676
    9. '_seen' → logprob: -12.725979804992676
    10. '_map' → logprob: -12.850979804992676

Token 44: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6618419885635376
    2. '=' → logprob: -0.9118419885635376
    3. ' =' → logprob: -2.536841869354248
    4. '={}' → logprob: -6.911841869354248
    5. 'it' → logprob: -7.161841869354248
    6. 'i' → logprob: -7.411841869354248
    7. '   ' → logprob: -8.786842346191406
    8. '={' → logprob: -8.786842346191406
    9. '={}
' → logprob: -9.286842346191406
    10. ']' → logprob: -9.786842346191406

Token 45: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -7.97024549683556e-05
    2. ' {}' → logprob: -9.625080108642578
    3. '{' → logprob: -11.375080108642578
    4. 'dict' → logprob: -13.500080108642578
    5. '{}
' → logprob: -14.625080108642578
    6. '{}

' → logprob: -16.500080108642578
    7. '{}\' → logprob: -16.875080108642578
    8. '{})' → logprob: -17.125080108642578
    9. '{},' → logprob: -17.125080108642578
    10. ' dict' → logprob: -17.625080108642578

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009728224948048592
    2. '    ' → logprob: -5.88472843170166
    3. ' remainder' → logprob: -6.38472843170166
    4. '    
' → logprob: -6.75972843170166
    5. ' while' → logprob: -7.38472843170166
    6. ' i' → logprob: -7.50972843170166
    7. ' pos' → logprob: -7.63472843170166
    8. ' for' → logprob: -8.25972843170166
    9. 'pos' → logprob: -8.25972843170166
    10. 'i' → logprob: -8.38472843170166

Token 47: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2923871874809265
    2. 'pos' → logprob: -2.4173872470855713
    3. 'i' → logprob: -3.4173872470855713
    4. 'while' → logprob: -3.4173872470855713
    5. ' while' → logprob: -4.167387008666992
    6. 're' → logprob: -4.167387008666992
    7. 'idx' (adapté à ' idx') → logprob: -4.667387008666992
    8. ' remainder' → logprob: -4.667387008666992
    9. 'position' → logprob: -4.792387008666992
    10. ' pos' → logprob: -4.792387008666992

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283327639102936
    2. '=' → logprob: -2.237833261489868
    3. ' ' → logprob: -12.862833023071289
    4. 's' → logprob: -13.237833023071289
    5. 'x' → logprob: -13.737833023071289
    6. '<|end|>' → logprob: -13.862833023071289
    7. '```' → logprob: -14.362833023071289
    8. 'ex' → logprob: -14.362833023071289
    9. ')' → logprob: -14.862833023071289
    10. '   ' → logprob: -15.237833023071289

Token 49: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015030752401798964
    2. ' ' → logprob: -6.501502990722656
    3. '1' → logprob: -15.376502990722656
    4. '   ' → logprob: -16.001502990722656
    5. 'len' → logprob: -16.126502990722656
    6. '۰' → logprob: -16.314002990722656
    7. '  ' → logprob: -17.376502990722656
    8. '<|end|>' → logprob: -17.876502990722656
    9. ' len' → logprob: -18.564002990722656
    10. '=' → logprob: -18.626502990722656

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.953082341467962e-05
    2. ' ' → logprob: -10.250039100646973
    3. '1' → logprob: -12.625039100646973
    4. 'len' → logprob: -15.250039100646973
    5. '2' → logprob: -15.750039100646973
    6. '-' → logprob: -15.937539100646973
    7. '۰' → logprob: -16.93754005432129
    8. '```' → logprob: -17.00004005432129
    9. '   ' → logprob: -17.25004005432129
    10. 'O' → logprob: -18.00004005432129

Token 51: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39029860496520996
    2. '<|end|>' → logprob: -1.26529860496521
    3. ' while' → logprob: -4.515298843383789
    4. '<|end|>' → logprob: -4.515298843383789
    5. ' ' → logprob: -5.390298843383789
    6. '    
' → logprob: -5.765298843383789
    7. ' 
' → logprob: -6.390298843383789
    8. 'while' → logprob: -6.390298843383789
    9. '  
' → logprob: -6.640298843383789
    10. ':' → logprob: -6.765298843383789

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032052990049123764
    2. '<|end|>' → logprob: -3.782052993774414
    3. ' while' → logprob: -5.032052993774414
    4. '    
' → logprob: -7.032052993774414
    5. 'while' → logprob: -7.657052993774414
    6. '<|end|>' → logprob: -8.532052993774414
    7. ' ' → logprob: -8.657052993774414
    8. '	while' → logprob: -9.157052993774414
    9. '    ' → logprob: -9.407052993774414
    10. '```' → logprob: -9.532052993774414

Token 53: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5332613587379456
    2. ' while' → logprob: -1.0332612991333008
    3. '   ' → logprob: -2.908261299133301
    4. 're' → logprob: -6.908261299133301
    5. '```' → logprob: -7.283261299133301
    6. ' remainder' → logprob: -8.5332612991333
    7. '<|end|>' → logprob: -8.9082612991333
    8. ' ' → logprob: -9.0332612991333
    9. '	while' → logprob: -9.0332612991333
    10. '.' → logprob: -9.1582612991333

Token 54: ' True' (ID: 6432)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.42947033047676086
    2. 'p' → logprob: -1.0544703006744385
    3. '   ' → logprob: -7.679470539093018
    4. '(p' → logprob: -9.92947006225586
    5. ' remainder' → logprob: -9.92947006225586
    6. 'q' → logprob: -10.17947006225586
    7. ' True' → logprob: -10.55447006225586
    8. ' ' → logprob: -10.55447006225586
    9. ' q' → logprob: -10.67947006225586
    10. ' (' → logprob: -10.67947006225586

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007095762062817812
    2. '       ' → logprob: -6.132095813751221
    3. '<|end|>' → logprob: -6.132095813751221
    4. '   ' → logprob: -6.257095813751221
    5. '<|end|>' → logprob: -8.632095336914062
    6. ',' → logprob: -8.882095336914062
    7. ' :' → logprob: -8.882095336914062
    8. ' and' → logprob: -9.132095336914062
    9. ':
' → logprob: -9.257095336914062
    10. '):' → logprob: -9.507095336914062

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2669212222099304
    2. '<|end|>' → logprob: -1.8919212818145752
    3. ' ' → logprob: -3.266921281814575
    4. '    ' → logprob: -3.891921281814575
    5. '   ' → logprob: -3.891921281814575
    6. '<|end|>' → logprob: -6.516921043395996
    7. ' if' → logprob: -6.891921043395996
    8. '  ' → logprob: -7.516921043395996
    9. '        ' → logprob: -7.891921043395996
    10. 'if' → logprob: -8.766921043395996

Token 57: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7035529017448425
    2. ' p' → logprob: -1.5785529613494873
    3. '       ' → logprob: -2.5785529613494873
    4. ' remainder' → logprob: -2.7035529613494873
    5. 're' → logprob: -3.0785529613494873
    6. '   ' → logprob: -3.3285529613494873
    7. ' r' → logprob: -3.5785529613494873
    8. 'if' (adapté à ' if') → logprob: -3.9535529613494873
    9. 'r' → logprob: -4.453552722930908
    10. 'p' → logprob: -5.203552722930908

Token 58: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0699833407998085
    2. ' p' → logprob: -2.6949832439422607
    3. '   ' → logprob: -10.94498348236084
    4. '(p' → logprob: -10.94498348236084
    5. 'q' → logprob: -12.44498348236084
    6. ' (' → logprob: -12.44498348236084
    7. '	p' → logprob: -13.69498348236084
    8. ' ' → logprob: -14.06998348236084
    9. ' q' → logprob: -14.81998348236084
    10. ' not' → logprob: -14.88248348236084

Token 59: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06358621269464493
    2. ' ==' → logprob: -2.8135862350463867
    3. ' in' → logprob: -6.813586235046387
    4. 'in' → logprob: -8.188586235046387
    5. '=' → logprob: -9.063586235046387
    6. ' ' → logprob: -9.688586235046387
    7. ']==' → logprob: -11.063586235046387
    8. '*' → logprob: -11.438586235046387
    9. ' not' → logprob: -11.813586235046387
    10. ')==' → logprob: -11.813586235046387

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '۰' → logprob: -17.750431060791016
    4. '   ' → logprob: -18.375431060791016
    5. '000' → logprob: -19.250431060791016
    6. '00' → logprob: -20.000431060791016
    7. '```' → logprob: -20.125431060791016
    8. '<|end|>' → logprob: -20.125431060791016
    9. '  ' → logprob: -20.437931060791016
    10. '০' → logprob: -20.500431060791016

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '۰' → logprob: -15.750040054321289
    4. '000' → logprob: -17.37504005432129
    5. '<|end|>' → logprob: -17.50004005432129
    6. '০' → logprob: -18.12504005432129
    7. '   ' → logprob: -18.25004005432129
    8. '०' → logprob: -18.75004005432129
    9. '０' → logprob: -18.87504005432129
    10. '00' → logprob: -18.93754005432129

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006081664469093084
    2. ':
' → logprob: -5.631081581115723
    3. '           ' → logprob: -6.131081581115723
    4. '       ' → logprob: -8.631081581115723
    5. ' or' → logprob: -9.256081581115723
    6. '<|end|>' → logprob: -11.756081581115723
    7. '.' → logprob: -12.381081581115723
    8. ':return' → logprob: -12.631081581115723
    9. '):' → logprob: -12.756081581115723
    10. '<|end|>' → logprob: -13.006081581115723

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16789115965366364
    2. ':' → logprob: -1.9178911447525024
    3. '       ' → logprob: -5.042891025543213
    4. ':
' → logprob: -6.917891025543213
    5. '<|end|>' → logprob: -10.042891502380371
    6. '   ' → logprob: -10.542891502380371
    7. ' or' → logprob: -10.917891502380371
    8. '.' → logprob: -10.917891502380371
    9. ',' → logprob: -11.042891502380371
    10. '<|end|>' → logprob: -11.417891502380371

Token 64: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2752210795879364
    2. '       ' → logprob: -1.6502211093902588
    3. ' break' → logprob: -3.400221109390259
    4. '   ' → logprob: -4.65022087097168
    5. 'break' → logprob: -5.77522087097168
    6. '        
' → logprob: -8.02522087097168
    7. '    
' → logprob: -8.15022087097168
    8. '	break' → logprob: -8.52522087097168
    9. '            
' → logprob: -8.52522087097168
    10. '```' → logprob: -8.65022087097168

Token 65: ' 有' (ID: 33316)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2153315395116806
    2. ' decimal' → logprob: -2.340331554412842
    3. 'decimal' → logprob: -3.465331554412842
    4. '       ' → logprob: -3.590331554412842
    5. 'break' → logprob: -3.840331554412842
    6. '           ' → logprob: -4.715331554412842
    7. '   ' → logprob: -4.965331554412842
    8. '    ' → logprob: -8.215331077575684
    9. '        ' → logprob: -8.590331077575684
    10. ' ' → logprob: -9.090331077575684

Token 66: '限' (ID: 15306)
  Prédit: '限'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '限' → logprob: -0.0004727371269837022
    2. '理' → logprob: -9.500473022460938
    3. '终' → logprob: -9.625473022460938
    4. '\xe7\xa9' → logprob: -10.000473022460938
    5. '效' → logprob: -10.000473022460938
    6. 'limit' → logprob: -10.125473022460938
    7. '止' → logprob: -10.875473022460938
    8. '   ' → logprob: -11.125473022460938
    9. 'り' → logprob: -11.125473022460938
    10. '
' → logprob: -11.250473022460938

Token 67: '小' (ID: 5820)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.3250313103199005
    2. ' decimal' → logprob: -1.3250312805175781
    3. ' ' → logprob: -6.075031280517578
    4. '(decimal' → logprob: -6.075031280517578
    5. '   ' → logprob: -6.200031280517578
    6. '_decimal' → logprob: -6.200031280517578
    7. ' decimals' → logprob: -7.825031280517578
    8. '的' → logprob: -8.325031280517578
    9. '<|end|>' → logprob: -8.325031280517578
    10. '.' → logprob: -8.575031280517578

Token 68: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -1.7954958821064793e-05
    2. '數' → logprob: -11.000018119812012
    3. '수' → logprob: -14.125018119812012
    4. '数字' → logprob: -15.000018119812012
    5. '```' → logprob: -18.125017166137695
    6. '수를' → logprob: -18.500017166137695
    7. '수가' → logprob: -18.750017166137695
    8. '\xec\x88' → logprob: -19.000017166137695
    9. ' 数' → logprob: -19.125017166137695
    10. '数学' → logprob: -19.250017166137695

Token 69: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005225697997957468
    2. '       ' → logprob: -5.380225658416748
    3. '<|end|>' → logprob: -8.630226135253906
    4. '<|end|>' → logprob: -8.880226135253906
    5. ',' → logprob: -9.380226135253906
    6. '               ' → logprob: -10.005226135253906
    7. ':' → logprob: -10.380226135253906
    8. '\n' → logprob: -10.880226135253906
    9. ' break' → logprob: -11.005226135253906
    10. '   ' → logprob: -11.380226135253906

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006883674650453031
    2. '       ' → logprob: -7.375688552856445
    3. ' break' → logprob: -10.375688552856445
    4. '               ' → logprob: -11.625688552856445
    5. '          ' → logprob: -11.875688552856445
    6. '   ' → logprob: -13.000688552856445
    7. ',' → logprob: -13.125688552856445
    8. '            ' → logprob: -13.500688552856445
    9. '         ' → logprob: -13.625688552856445
    10. '            
' → logprob: -13.625688552856445

Token 71: ' print' (ID: 2123)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.08929897844791412
    2. '       ' → logprob: -3.214298963546753
    3. 'break' → logprob: -3.339298963546753
    4. ' decimal' → logprob: -5.839299201965332
    5. '   ' → logprob: -6.089299201965332
    6. '           ' → logprob: -6.464299201965332
    7. 'decimal' → logprob: -6.714299201965332
    8. ' print' → logprob: -6.839299201965332
    9. 'print' (adapté à ' print') → logprob: -7.464299201965332
    10. '	break' → logprob: -9.964299201965332

Token 72: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.720709502696991
    2. '("' → logprob: -1.2207095623016357
    3. '('' → logprob: -1.8457095623016357
    4. '(len' → logprob: -3.0957095623016357
    5. '("."' → logprob: -5.595709323883057
    6. '()' → logprob: -5.970709323883057
    7. '(sum' → logprob: -6.470709323883057
    8. '(p' → logprob: -6.470709323883057
    9. '(decimal' → logprob: -7.095709323883057
    10. '(f' → logprob: -7.095709323883057

Token 73: ''.' (ID: 6120)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2818290889263153
    2. 'p' → logprob: -2.6568291187286377
    3. 'len' → logprob: -2.9068291187286377
    4. ''' → logprob: -3.4068291187286377
    5. 'decimal' → logprob: -3.7818291187286377
    6. ''.' → logprob: -4.156828880310059
    7. '{' → logprob: -4.281828880310059
    8. '1' → logprob: -5.156828880310059
    9. '''.' → logprob: -5.281828880310059
    10. '(' → logprob: -5.656828880310059

Token 74: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.002218295820057392
    2. 'rstrip' → logprob: -7.377218246459961
    3. ''.' → logprob: -8.002218246459961
    4. 'str' → logprob: -8.377218246459961
    5. 'format' → logprob: -8.502218246459961
    6. 'print' → logprob: -8.752218246459961
    7. 'j' → logprob: -9.127218246459961
    8. 'strip' → logprob: -9.252218246459961
    9. ''' → logprob: -9.502218246459961
    10. '0' → logprob: -9.627218246459961

Token 75: '(decimal' (ID: 171225)
  Prédit: '(decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(decimal' → logprob: -0.0011353354202583432
    2. 'decimal' → logprob: -7.126135349273682
    3. '(['' → logprob: -9.001134872436523
    4. '(map' → logprob: -9.001134872436523
    5. '(' → logprob: -10.251134872436523
    6. '([' → logprob: -10.876134872436523
    7. '(str' → logprob: -10.876134872436523
    8. ')' → logprob: -12.251134872436523
    9. '('' → logprob: -13.376134872436523
    10. 'map' → logprob: -14.126134872436523

Token 76: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -3.893480243277736e-05
    2. 'digits' → logprob: -10.375039100646973
    3. 'Digits' → logprob: -13.000039100646973
    4. '```' → logprob: -13.125039100646973
    5. '[' → logprob: -13.750039100646973
    6. ')' → logprob: -14.875039100646973
    7. '_' → logprob: -15.000039100646973
    8. '_chars' → logprob: -15.000039100646973
    9. '[]' → logprob: -15.875039100646973
    10. '_tokens' → logprob: -16.000038146972656

Token 77: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.26102712750434875
    2. '))' → logprob: -1.5110270977020264
    3. ')' → logprob: -5.2610273361206055
    4. ')
' → logprob: -6.6360273361206055
    5. '           ' → logprob: -7.0110273361206055
    6. '))
' → logprob: -7.1360273361206055
    7. ' ))
' → logprob: -8.011027336120605
    8. '       ' → logprob: -8.511027336120605
    9. '),' → logprob: -8.886027336120605
    10. ' ))' → logprob: -10.261027336120605

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08907055109739304
    2. '       ' → logprob: -2.4640705585479736
    3. '   ' → logprob: -10.089070320129395
    4. ')' → logprob: -10.714070320129395
    5. '               ' → logprob: -10.839070320129395
    6. '<|end|>' → logprob: -10.964070320129395
    7. '            ' → logprob: -12.464070320129395
    8. ',' → logprob: -12.464070320129395
    9. '        ' → logprob: -12.714070320129395
    10. '<|end|>' → logprob: -12.839070320129395

Token 79: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005570133216679096
    2. '       ' → logprob: -5.630569934844971
    3. 'break' (adapté à ' break') → logprob: -6.755569934844971
    4. ' break' → logprob: -7.255569934844971
    5. '   ' → logprob: -9.755570411682129
    6. '	break' → logprob: -11.505570411682129
    7. '               ' → logprob: -11.505570411682129
    8. '            
' → logprob: -12.755570411682129
    9. '    
' → logprob: -12.755570411682129
    10. '
' → logprob: -13.130570411682129

Token 80: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004459077958017588
    2. '<|end|>' → logprob: -6.129458904266357
    3. '        
' → logprob: -6.254458904266357
    4. '   ' → logprob: -9.379459381103516
    5. '
' → logprob: -9.629459381103516
    6. '        ' → logprob: -10.504459381103516
    7. '<|end|>' → logprob: -10.504459381103516
    8. '    
' → logprob: -10.754459381103516
    9. '  
' → logprob: -11.129459381103516
    10. '```' → logprob: -11.129459381103516

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001554620685055852
    2. '<|end|>' → logprob: -6.751554489135742
    3. '        
' → logprob: -8.876554489135742
    4. '   ' → logprob: -9.126554489135742
    5. '```' → logprob: -9.626554489135742
    6. '<|end|>' → logprob: -11.251554489135742
    7. '    
' → logprob: -11.626554489135742
    8. 'n' → logprob: -12.126554489135742
    9. '  
' → logprob: -12.251554489135742
    10. ')' → logprob: -12.501554489135742

Token 82: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0274041835218668
    2. ' if' → logprob: -4.152404308319092
    3. '   ' → logprob: -4.777404308319092
    4. 'if' (adapté à ' if') → logprob: -5.902404308319092
    5. '    ' → logprob: -9.652403831481934
    6. ' ' → logprob: -10.402403831481934
    7. '        
' → logprob: -11.152403831481934
    8. '<|end|>' → logprob: -11.652403831481934
    9. '	if' → logprob: -12.152403831481934
    10. '      ' → logprob: -12.277403831481934

Token 83: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3134264051914215
    2. ' p' → logprob: -1.3134263753890991
    3. '(p' → logprob: -9.06342601776123
    4. ' (' → logprob: -10.43842601776123
    5. '(' → logprob: -11.18842601776123
    6. '_p' → logprob: -13.31342601776123
    7. '	p' → logprob: -13.56342601776123
    8. '<p' → logprob: -13.81342601776123
    9. ' ' → logprob: -15.12592601776123
    10. '   ' → logprob: -15.31342601776123

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01827343739569187
    2. 'in' → logprob: -4.01827335357666
    3. ' ' → logprob: -9.01827335357666
    4. ' в' → logprob: -14.64327335357666
    5. ' i' → logprob: -14.64327335357666
    6. ')' → logprob: -15.26827335357666
    7. '  ' → logprob: -15.51827335357666
    8. 'n' → logprob: -15.64327335357666
    9. '	in' → logprob: -15.64327335357666
    10. 'i' → logprob: -16.018274307250977

Token 85: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.47408682107925415
    2. ' remainder' → logprob: -0.9740868210792542
    3. '	re' → logprob: -12.97408676147461
    4. ' ' → logprob: -13.09908676147461
    5. ' re' → logprob: -13.34908676147461
    6. 'rema' → logprob: -13.84908676147461
    7. '   ' → logprob: -13.97408676147461
    8. 'rest' → logprob: -14.09908676147461
    9. 'rem' → logprob: -14.72408676147461
    10. '  ' → logprob: -14.84908676147461

Token 86: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.9361264946837764e-07
    2. 'pos' → logprob: -16.125
    3. '_positions' → logprob: -18.75
    4. 's' → logprob: -19.625
    5. '-pos' → logprob: -19.75
    6. '_p' → logprob: -20.25
    7. 'Pos' → logprob: -20.75
    8. '_POS' → logprob: -21.25
    9. '_' → logprob: -21.625
    10. '_post' → logprob: -22.25

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003811025235336274
    2. '):' → logprob: -8.625381469726562
    3. ' :' → logprob: -8.875381469726562
    4. ':
' → logprob: -9.875381469726562
    5. '>:' → logprob: -12.875381469726562
    6. '}:' → logprob: -13.500381469726562
    7. ']:' → logprob: -13.875381469726562
    8. '：' → logprob: -13.875381469726562
    9. ':**' → logprob: -14.000381469726562
    10. '       ' → logprob: -14.250381469726562

Token 88: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04606988653540611
    2. '       ' → logprob: -3.546069860458374
    3. '           ' → logprob: -4.421070098876953
    4. ':
' → logprob: -6.296070098876953
    5. ' :' → logprob: -6.546070098876953
    6. '):' → logprob: -7.921070098876953
    7. '<|end|>' → logprob: -8.546070098876953
    8. '   ' → logprob: -9.796070098876953
    9. ')' → logprob: -9.921070098876953
    10. '        ' → logprob: -10.171070098876953

Token 89: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22688645124435425
    2. '       ' → logprob: -1.851886510848999
    3. ' (' → logprob: -4.60188627243042
    4. '(' → logprob: -4.72688627243042
    5. '        ' → logprob: -4.72688627243042
    6. ')' → logprob: -5.47688627243042
    7. '   ' → logprob: -5.85188627243042
    8. ' ' → logprob: -6.35188627243042
    9. ' start' → logprob: -6.72688627243042
    10. '()' → logprob: -6.97688627243042

Token 90: ' �' (ID: 11829)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6331292390823364
    2. '循环' → logprob: -1.7581292390823364
    3. ' repeat' → logprob: -2.008129119873047
    4. ' start' → logprob: -2.133129119873047
    5. 'repeat' → logprob: -2.508129119873047
    6. ' #' → logprob: -2.633129119873047
    7. 're' → logprob: -2.883129119873047
    8. ' cycle' → logprob: -3.758129119873047
    9. ' repeating' → logprob: -4.133129119873047
    10. 'start' → logprob: -4.133129119873047

Token 91: '�' (ID: 103)
  Prédit: '循环'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '循环' → logprob: -0.6073878407478333
    2. '循' → logprob: -1.7323877811431885
    3. 'repeat' → logprob: -2.7323877811431885
    4. 're' → logprob: -2.9823877811431885
    5. 'print' → logprob: -3.2323877811431885
    6. '括' → logprob: -3.4823877811431885
    7. '#' → logprob: -4.107388019561768
    8. '\xe7\xb9' → logprob: -4.107388019561768
    9. '(
' → logprob: -4.357388019561768
    10. '('' → logprob: -5.357388019561768

Token 92: '環' (ID: 113135)
  Prédit: '循环'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '循环' → logprob: -0.40785545110702515
    2. 'repeat' → logprob: -1.78285551071167
    3. '循' → logprob: -2.90785551071167
    4. 're' → logprob: -3.15785551071167
    5. 'start' → logprob: -4.28285551071167
    6. '#' → logprob: -4.28285551071167
    7. 'loop' → logprob: -4.65785551071167
    8. '重复' → logprob: -4.78285551071167
    9. '\xe7\xb9' → logprob: -5.28285551071167
    10. '(' → logprob: -5.90785551071167

Token 93: '小' (ID: 5820)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.44536554813385
    2. '('' → logprob: -1.44536554813385
    3. '#' → logprob: -1.94536554813385
    4. '状' → logprob: -2.0703654289245605
    5. '（' → logprob: -3.1953654289245605
    6. '境' → logprob: -3.5703654289245605
    7. '[' → logprob: -3.8203654289245605
    8. '()' → logprob: -4.3203654289245605
    9. '圈' → logprob: -4.4453654289245605
    10. 'print' → logprob: -4.6953654289245605

Token 94: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.006724602542817593
    2. '分' → logprob: -5.131724834442139
    3. '素' → logprob: -8.13172435760498
    4. 's' → logprob: -9.25672435760498
    5. '節' → logprob: -9.63172435760498
    6. '數' → logprob: -9.75672435760498
    7. 'decimal' → logprob: -10.00672435760498
    8. '期' → logprob: -10.38172435760498
    9. '循' → logprob: -10.63172435760498
    10. 'Decimal' → logprob: -10.75672435760498

Token 95: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3487565517425537
    2. '           ' → logprob: -1.8487565517425537
    3. ')' → logprob: -2.9737565517425537
    4. '#' → logprob: -3.7237565517425537
    5. '）' → logprob: -4.098756790161133
    6. ':' → logprob: -5.348756790161133
    7. '(' → logprob: -5.473756790161133
    8. ':
' → logprob: -5.723756790161133
    9. 'print' → logprob: -5.848756790161133
    10. '(
' → logprob: -6.098756790161133

Token 96: '           ' (ID: 352)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.7859559655189514
    2. '           ' → logprob: -1.1609559059143066
    3. 'start' → logprob: -1.7859559059143066
    4. '       ' → logprob: -3.2859559059143066
    5. 'print' → logprob: -5.160955905914307
    6. ' print' → logprob: -5.285955905914307
    7. '#' → logprob: -6.035955905914307
    8. ' (' → logprob: -6.160955905914307
    9. '   ' → logprob: -6.285955905914307
    10. '(' → logprob: -6.660955905914307

Token 97: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.3957687318325043
    2. ' start' → logprob: -1.1457687616348267
    3. 'repeat' → logprob: -6.020768642425537
    4. 'print' → logprob: -6.520768642425537
    5. '           ' → logprob: -6.645768642425537
    6. 'pos' → logprob: -7.020768642425537
    7. 'loop' → logprob: -7.395768642425537
    8. ' loop' → logprob: -8.020769119262695
    9. 'cycle' → logprob: -8.395769119262695
    10. ' cycle' → logprob: -8.395769119262695

Token 98: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08287408202886581
    2. ' =' → logprob: -2.582874059677124
    3. '_pos' → logprob: -5.957874298095703
    4. '_idx' → logprob: -6.832874298095703
    5. '_index' → logprob: -8.457874298095703
    6. 'pos' → logprob: -10.082874298095703
    7. '=index' → logprob: -10.832874298095703
    8. '＝' → logprob: -11.582874298095703
    9. '_' → logprob: -11.707874298095703
    10. '=int' → logprob: -12.207874298095703

Token 99: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.5759507417678833
    2. 're' → logprob: -0.8259507417678833
    3. '	re' → logprob: -12.575950622558594
    4. ' ' → logprob: -12.575950622558594
    5. ' re' → logprob: -12.950950622558594
    6. '   ' → logprob: -14.325950622558594
    7. 'rem' → logprob: -14.825950622558594
    8. 'r' → logprob: -15.075950622558594
    9. '  ' → logprob: -15.200950622558594
    10. 'rema' → logprob: -16.075950622558594

Token 100: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.7848862373502925e-05
    2. 'pos' → logprob: -10.500027656555176
    3. 'Pos' → logprob: -15.875027656555176
    4. 's' → logprob: -16.250028610229492
    5. '_p' → logprob: -17.000028610229492
    6. '_positions' → logprob: -18.250028610229492
    7. 'p' → logprob: -18.750028610229492
    8. '[pos' → logprob: -19.375028610229492
    9. '-pos' → logprob: -19.500028610229492
    10. 'npos' → logprob: -20.125028610229492

Token 101: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.5690089639974758e-05
    2. 'p' → logprob: -11.125015258789062
    3. '[' → logprob: -14.125015258789062
    4. '_p' → logprob: -17.625015258789062
    5. '<p' → logprob: -17.625015258789062
    6. '(p' → logprob: -17.750015258789062
    7. '	p' → logprob: -18.250015258789062
    8. ' p' → logprob: -18.250015258789062
    9. '=p' → logprob: -18.750015258789062
    10. 's' → logprob: -18.875015258789062

Token 102: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007160750217735767
    2. ']
' → logprob: -5.007160663604736
    3. ')' → logprob: -8.507161140441895
    4. ')]' → logprob: -10.007161140441895
    5. ']
' → logprob: -10.007161140441895
    6. ' ]' → logprob: -10.382161140441895
    7. '       ' → logprob: -10.382161140441895
    8. '<|end|>' → logprob: -10.507161140441895
    9. '<|end|>' → logprob: -11.007161140441895
    10. ']

' → logprob: -11.007161140441895

Token 103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03161408007144928
    2. '       ' → logprob: -3.906614065170288
    3. ')' → logprob: -5.781614303588867
    4. '(' → logprob: -5.906614303588867
    5. '   ' → logprob: -6.156614303588867
    6. 'print' → logprob: -6.906614303588867
    7. ' (' → logprob: -7.906614303588867
    8. '          ' → logprob: -8.281614303588867
    9. ' print' → logprob: -8.406614303588867
    10. '<|end|>' → logprob: -8.531614303588867

Token 104: ' non' (ID: 2893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6252480745315552
    2. '           ' → logprob: -2.0002479553222656
    3. 'decimal' → logprob: -2.0002479553222656
    4. ' print' → logprob: -2.3752479553222656
    5. '       ' → logprob: -3.3752479553222656
    6. '   ' → logprob: -3.7502479553222656
    7. ' decimal' → logprob: -4.125247955322266
    8. 'repeat' → logprob: -4.875247955322266
    9. 'result' → logprob: -5.250247955322266
    10. ' for' → logprob: -6.375247955322266

Token 105: '_re' (ID: 3067)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.8991671800613403
    2. '_repeat' → logprob: -1.0241671800613403
    3. 're' → logprob: -1.7741671800613403
    4. '_re' → logprob: -3.024167060852051
    5. 'rec' → logprob: -4.899167060852051
    6. 'rep' → logprob: -5.274167060852051
    7. ' repeating' → logprob: -6.524167060852051
    8. '_' → logprob: -8.27416706085205
    9. '       ' → logprob: -8.39916706085205
    10. '_rec' → logprob: -8.39916706085205

Token 106: 'peating' (ID: 189297)
  Prédit: 'peating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peating' → logprob: -0.22199897468090057
    2. 'peat' → logprob: -1.846998929977417
    3. 'p' → logprob: -3.596998929977417
    4. 'cur' → logprob: -5.096999168395996
    5. 'c' → logprob: -5.096999168395996
    6. 'peated' → logprob: -6.971999168395996
    7. 'pet' → logprob: -8.221999168395996
    8. 'current' → logprob: -8.596999168395996
    9. 'pt' → logprob: -8.596999168395996
    10. 'pe' → logprob: -9.846999168395996

Token 107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6509293913841248
    2. ' =' → logprob: -0.9009293913841248
    3. '_part' → logprob: -2.6509294509887695
    4. '_decimal' → logprob: -7.1509294509887695
    5. 'part' → logprob: -7.7759294509887695
    6. '_digits' → logprob: -8.27592945098877
    7. 'decimal' → logprob: -9.90092945098877
    8. '  ' → logprob: -10.52592945098877
    9. '=int' → logprob: -10.90092945098877
    10. ' ' → logprob: -10.90092945098877

Token 108: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.22574511170387268
    2. ' ''.' → logprob: -1.6007450819015503
    3. 'decimal' → logprob: -8.72574520111084
    4. ' ' → logprob: -9.85074520111084
    5. ' decimal' → logprob: -10.22574520111084
    6. '   ' → logprob: -10.22574520111084
    7. '''' → logprob: -10.97574520111084
    8. '"' → logprob: -11.60074520111084
    9. ' "".' → logprob: -11.97574520111084
    10. '  ' → logprob: -12.97574520111084

Token 109: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00012916464766021818
    2. '''.' → logprob: -9.125128746032715
    3. ''.' → logprob: -12.000128746032715
    4. ' join' → logprob: -12.000128746032715
    5. '.join' → logprob: -12.875128746032715
    6. 'decimal' → logprob: -13.000128746032715
    7. '(join' → logprob: -13.875128746032715
    8. ' ''.' → logprob: -14.250128746032715
    9. '.' → logprob: -15.250128746032715
    10. '```' → logprob: -15.375128746032715

Token 110: '(decimal' (ID: 171225)
  Prédit: '(decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(decimal' → logprob: -0.006717974785715342
    2. 'decimal' → logprob: -5.006718158721924
    3. ' decimal' → logprob: -13.006717681884766
    4. 'Decimal' → logprob: -15.631717681884766
    5. '(' → logprob: -15.881717681884766
    6. '_decimal' → logprob: -16.506717681884766
    7. ')' → logprob: -18.506717681884766
    8. ' (' → logprob: -19.131717681884766
    9. '(decoded' → logprob: -19.131717681884766
    10. '(dec' → logprob: -19.631717681884766

Token 111: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -7.791440293658525e-05
    2. 'digits' → logprob: -9.625078201293945
    3. '_decimal' → logprob: -11.875078201293945
    4. 'decimal' → logprob: -13.125078201293945
    5. 'igits' → logprob: -13.375078201293945
    6. 'Digits' → logprob: -14.125078201293945
    7. ' digits' → logprob: -16.375078201293945
    8. '_' → logprob: -16.625078201293945
    9. '_chars' → logprob: -16.625078201293945
    10. '[' → logprob: -16.750078201293945

Token 112: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0005674490821547806
    2. '[start' → logprob: -7.500567436218262
    3. '           ' → logprob: -11.750567436218262
    4. '[' → logprob: -12.250567436218262
    5. ':start' → logprob: -13.500567436218262
    6. '          ' → logprob: -16.125568389892578
    7. '][:' → logprob: -16.625568389892578
    8. '         ' → logprob: -16.875568389892578
    9. '               ' → logprob: -17.000568389892578
    10. '       ' → logprob: -17.250568389892578

Token 113: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -6.2729995988775045e-06
    2. ' start' → logprob: -12.000006675720215
    3. '[start' → logprob: -20.7500057220459
    4. ' ' → logprob: -21.3750057220459
    5. '	start' → logprob: -22.1250057220459
    6. '(start' → logprob: -22.2500057220459
    7. '   ' → logprob: -22.5000057220459
    8. ':start' → logprob: -23.2500057220459
    9. 'Start' → logprob: -23.5000057220459
    10. '_start' → logprob: -23.8750057220459

Token 114: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.04886553809046745
    2. '])' → logprob: -3.048865556716919
    3. ')
' → logprob: -8.42386531829834
    4. '])
' → logprob: -10.67386531829834
    5. '           ' → logprob: -11.17386531829834
    6. ')' → logprob: -11.92386531829834
    7. '       ' → logprob: -11.92386531829834
    8. '])

' → logprob: -12.92386531829834
    9. ']
' → logprob: -13.04886531829834
    10. ']' → logprob: -13.17386531829834

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17036479711532593
    2. 're' → logprob: -2.1703648567199707
    3. '       ' → logprob: -3.4203648567199707
    4. ' repeating' → logprob: -4.795364856719971
    5. '   ' → logprob: -6.795364856719971
    6. 'repeat' → logprob: -9.670364379882812
    7. '[' → logprob: -10.045364379882812
    8. ',' → logprob: -10.045364379882812
    9. '          ' → logprob: -10.295364379882812
    10. '         ' → logprob: -10.295364379882812

Token 116: ' repeating' (ID: 74481)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.002192256273701787
    2. ' repeating' → logprob: -6.37719202041626
    3. '       ' → logprob: -8.502192497253418
    4. 'repeat' → logprob: -8.627192497253418
    5. '           ' → logprob: -9.377192497253418
    6. '   ' → logprob: -11.252192497253418
    7. 'rep' → logprob: -12.877192497253418
    8. '               ' → logprob: -14.002192497253418
    9. 'print' → logprob: -14.002192497253418
    10. 'Repe' → logprob: -14.252192497253418

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020925104618073
    2. ' =' → logprob: -2.3502092361450195
    3. '＝' → logprob: -13.85020923614502
    4. ' ' → logprob: -15.10020923614502
    5. '='' → logprob: -15.22520923614502
    6. '=

' → logprob: -15.22520923614502
    7. '_part' → logprob: -15.60020923614502
    8. '=''' → logprob: -15.97520923614502
    9. '=('' → logprob: -16.100210189819336
    10. ')' → logprob: -16.600210189819336

Token 118: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.023278558626770973
    2. ' ''.' → logprob: -3.7732784748077393
    3. '''' → logprob: -10.89827823638916
    4. '   ' → logprob: -12.14827823638916
    5. ''' → logprob: -13.52327823638916
    6. '       ' → logprob: -13.64827823638916
    7. '         ' → logprob: -13.64827823638916
    8. ' ' → logprob: -13.77327823638916
    9. 'decimal' → logprob: -14.14827823638916
    10. '  ' → logprob: -14.14827823638916

Token 119: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.558399319241289e-05
    2. '''.' → logprob: -11.250025749206543
    3. 'decimal' → logprob: -11.375025749206543
    4. '.join' → logprob: -14.750025749206543
    5. ' join' → logprob: -15.375025749206543
    6. '(join' → logprob: -16.000024795532227
    7. 'joins' → logprob: -16.625024795532227
    8. ''.' → logprob: -16.625024795532227
    9. 'decode' → logprob: -16.750024795532227
    10. '```' → logprob: -17.000024795532227

Token 120: '(decimal' (ID: 171225)
  Prédit: '(decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(decimal' → logprob: -0.00012356207298580557
    2. 'decimal' → logprob: -9.000123977661133
    3. ' decimal' → logprob: -17.125123977661133
    4. '(decoded' → logprob: -20.000123977661133
    5. '(dec' → logprob: -20.125123977661133
    6. '(' → logprob: -20.625123977661133
    7. '_decimal' → logprob: -21.125123977661133
    8. 'Decimal' → logprob: -21.875123977661133
    9. ' (' → logprob: -22.000123977661133
    10. ' ' → logprob: -25.875123977661133

Token 121: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0001005630983854644
    2. 'digits' → logprob: -9.250100135803223
    3. 'Digits' → logprob: -12.875100135803223
    4. 'decimal' → logprob: -14.125100135803223
    5. '_decimal' → logprob: -14.625100135803223
    6. 'igits' → logprob: -15.500100135803223
    7. ' digits' → logprob: -16.12510108947754
    8. '[' → logprob: -16.37510108947754
    9. '```' → logprob: -16.50010108947754
    10. '_chars' → logprob: -17.12510108947754

Token 122: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. 'start' → logprob: -18.0
    4. ')' → logprob: -18.875
    5. ')[' → logprob: -18.875
    6. '(start' → logprob: -19.5
    7. '[from' → logprob: -19.75
    8. ' [' → logprob: -20.625
    9. '   ' → logprob: -20.875
    10. '```' → logprob: -21.25

Token 123: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008348815608769655
    2. ':])
' → logprob: -7.250834941864014
    3. ':start' → logprob: -9.375834465026855
    4. '])' → logprob: -10.500834465026855
    5. '+' → logprob: -11.750834465026855
    6. ':end' → logprob: -13.250834465026855
    7. ':)' → logprob: -14.500834465026855
    8. ':],' → logprob: -14.500834465026855
    9. 'start' → logprob: -14.875834465026855
    10. ':]' → logprob: -15.375834465026855

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13366253674030304
    2. ')' → logprob: -2.633662462234497
    3. ')
' → logprob: -3.883662462234497
    4. '       ' → logprob: -4.133662700653076
    5. 'print' → logprob: -5.008662700653076
    6. '   ' → logprob: -5.383662700653076
    7. '
' → logprob: -6.383662700653076
    8. '            
' → logprob: -6.883662700653076
    9. ' print' → logprob: -7.133662700653076
    10. '```' → logprob: -7.383662700653076

Token 125: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.467629611492157
    2. '           ' → logprob: -1.5926296710968018
    3. ' print' → logprob: -2.5926296710968018
    4. '       ' → logprob: -2.5926296710968018
    5. '   ' → logprob: -3.9676296710968018
    6. '
' → logprob: -7.342629432678223
    7. ')' → logprob: -7.592629432678223
    8. '```' → logprob: -8.717629432678223
    9. ')
' → logprob: -9.092629432678223
    10. '            
' → logprob: -10.592629432678223

Token 126: '(non' (ID: 69032)
  Prédit: '(non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(non' → logprob: -0.46665605902671814
    2. '(f' → logprob: -1.0916560888290405
    3. '('' → logprob: -3.591655969619751
    4. '(' → logprob: -4.71665620803833
    5. '("("' → logprob: -8.091655731201172
    6. '(n' → logprob: -8.841655731201172
    7. 'f' → logprob: -9.466655731201172
    8. 'non' → logprob: -9.966655731201172
    9. '('(' → logprob: -10.091655731201172
    10. '('{}' → logprob: -10.091655731201172

Token 127: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -6.32523515378125e-05
    2. 're' → logprob: -10.500062942504883
    3. '_' → logprob: -10.875062942504883
    4. '_repeat' → logprob: -11.875062942504883
    5. '-re' → logprob: -12.125062942504883
    6. '_non' → logprob: -12.750062942504883
    7. '-' → logprob: -14.500062942504883
    8. '   ' → logprob: -15.500062942504883
    9. '_RE' → logprob: -15.750062942504883
    10. 'non' → logprob: -16.750062942504883

Token 128: 'peating' (ID: 189297)
  Prédit: 'peating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peating' → logprob: -0.0008469101157970726
    2. 'pe' → logprob: -7.875846862792969
    3. '_re' → logprob: -8.500846862792969
    4. 'peat' → logprob: -8.625846862792969
    5. 'peated' → logprob: -10.500846862792969
    6. '_pe' → logprob: -10.750846862792969
    7. '_non' → logprob: -12.125846862792969
    8. 're' → logprob: -12.500846862792969
    9. ' repeating' → logprob: -12.500846862792969
    10. 'p' → logprob: -12.500846862792969

Token 129: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.582090437412262
    2. '+' → logprob: -0.832090437412262
    3. ',' → logprob: -5.207090377807617
    4. ')' → logprob: -8.332090377807617
    5. '+'' → logprob: -8.332090377807617
    6. ' ,' → logprob: -8.957090377807617
    7. '+"' → logprob: -11.457090377807617
    8. '+')' → logprob: -12.207090377807617
    9. ')
' → logprob: -12.457090377807617
    10. ' +'' → logprob: -12.707090377807617

Token 130: ' repeating' (ID: 74481)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003792946692556143
    2. '"' → logprob: -5.628792762756348
    3. ' '('' → logprob: -8.628792762756348
    4. ''(' → logprob: -12.128792762756348
    5. '(' → logprob: -12.378792762756348
    6. '('' → logprob: -13.753792762756348
    7. 'f' → logprob: -14.003792762756348
    8. ' "("' → logprob: -14.003792762756348
    9. '`' → logprob: -14.628792762756348
    10. '("("' → logprob: -14.628792762756348

Token 131: ')
' (ID: 446)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5387538075447083
    2. '+' → logprob: -0.9137538075447083
    3. '*' → logprob: -4.788753986358643
    4. ')' → logprob: -5.038753986358643
    5. '(' → logprob: -8.413753509521484
    6. '+')' → logprob: -8.663753509521484
    7. '+'' → logprob: -9.038753509521484
    8. ' *' → logprob: -9.663753509521484
    9. '[' → logprob: -10.538753509521484
    10. ',' → logprob: -11.163753509521484

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00803314708173275
    2. '       ' → logprob: -5.258033275604248
    3. ')' → logprob: -7.133033275604248
    4. '(
' → logprob: -7.383033275604248
    5. ')
' → logprob: -7.383033275604248
    6. '   ' → logprob: -8.50803279876709
    7. '(' → logprob: -8.75803279876709
    8. '^' → logprob: -9.63303279876709
    9. '          ' → logprob: -10.00803279876709
    10. '            
' → logprob: -10.00803279876709

Token 133: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020369848236441612
    2. ' break' → logprob: -4.270370006561279
    3. 'break' → logprob: -5.520370006561279
    4. '       ' → logprob: -6.520370006561279
    5. ')' → logprob: -8.145369529724121
    6. '   ' → logprob: -8.395369529724121
    7. '               ' → logprob: -9.770369529724121
    8. ')
' → logprob: -10.145369529724121
    9. '	break' → logprob: -10.770369529724121
    10. '          ' → logprob: -11.145369529724121

Token 134: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027436664327979088
    2. '('' → logprob: -3.9024367332458496
    3. '(' → logprob: -5.65243673324585
    4. '(len' → logprob: -6.52743673324585
    5. '("("' → logprob: -7.27743673324585
    6. '("")' → logprob: -7.90243673324585
    7. '(f' → logprob: -8.652436256408691
    8. '()
' → logprob: -8.652436256408691
    9. 'f' → logprob: -8.902436256408691
    10. '(end' → logprob: -9.652436256408691

Token 135: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18263839185237885
    2. '('' → logprob: -1.93263840675354
    3. '')' → logprob: -4.932638168334961
    4. '"' → logprob: -5.182638168334961
    5. '()' → logprob: -6.432638168334961
    6. '("("' → logprob: -6.432638168334961
    7. '(' → logprob: -6.682638168334961
    8. '(re' → logprob: -6.807638168334961
    9. '(f' → logprob: -6.807638168334961
    10. ' '('' → logprob: -7.307638168334961

Token 136: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01903199404478073
    2. ' *' → logprob: -5.144032001495361
    3. '       ' → logprob: -5.394032001495361
    4. ''' → logprob: -5.644032001495361
    5. '   ' → logprob: -6.019032001495361
    6. '           ' → logprob: -7.394032001495361
    7. ' ' → logprob: -8.019031524658203
    8. '    ' → logprob: -8.144031524658203
    9. '        ' → logprob: -8.144031524658203
    10. '+' → logprob: -8.769031524658203

Token 137: ' len' (ID: 4631)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.007825584150850773
    2. '(start' → logprob: -5.3828253746032715
    3. 'len' → logprob: -6.0078253746032715
    4. ' start' → logprob: -7.3828253746032715
    5. '(len' → logprob: -9.50782585144043
    6. '(' → logprob: -10.75782585144043
    7. ' (' → logprob: -11.50782585144043
    8. ' len' → logprob: -12.63282585144043
    9. '           ' → logprob: -12.75782585144043
    10. 'idx' → logprob: -13.75782585144043

Token 138: '(non' (ID: 69032)
  Prédit: '(non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(non' → logprob: -0.28124818205833435
    2. 'non' → logprob: -1.4062482118606567
    3. ' non' → logprob: -10.281248092651367
    4. '(n' → logprob: -10.406248092651367
    5. ' (' → logprob: -11.156248092651367
    6. '(' → logprob: -12.281248092651367
    7. '非' → logprob: -12.906248092651367
    8. 'n' → logprob: -13.031248092651367
    9. '_non' → logprob: -13.781248092651367
    10. '   ' → logprob: -13.906248092651367

Token 139: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.011236322112381458
    2. 're' → logprob: -4.511236190795898
    3. 'non' → logprob: -8.761236190795898
    4. '_non' → logprob: -12.011236190795898
    5. '(re' → logprob: -12.386236190795898
    6. '_digits' → logprob: -12.511236190795898
    7. 'repeat' → logprob: -12.636236190795898
    8. 'digits' → logprob: -12.761236190795898
    9. 'Repe' → logprob: -13.511236190795898
    10. '(non' → logprob: -13.761236190795898

Token 140: 'peating' (ID: 189297)
  Prédit: 'peating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peating' → logprob: -0.05517992377281189
    2. 'ating' → logprob: -3.4301798343658447
    3. 'p' → logprob: -4.680180072784424
    4. 'pe' → logprob: -4.930180072784424
    5. 'peat' → logprob: -6.680180072784424
    6. 'e' → logprob: -7.305180072784424
    7. 'atting' → logprob: -8.055179595947266
    8. 'at' → logprob: -8.180179595947266
    9. 'peated' → logprob: -8.805179595947266
    10. '_digits' → logprob: -8.805179595947266

Token 141: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16230909526348114
    2. ' +' → logprob: -1.9123090505599976
    3. ')' → logprob: -6.537309169769287
    4. '   ' → logprob: -9.162308692932129
    5. '    ' → logprob: -9.787308692932129
    6. '        ' → logprob: -9.912308692932129
    7. ' ' → logprob: -10.037308692932129
    8. '       ' → logprob: -10.037308692932129
    9. '+'' → logprob: -10.037308692932129
    10. '          ' → logprob: -10.162308692932129

Token 142: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05454877018928528
    2. '^' → logprob: -3.929548740386963
    3. ' +' → logprob: -3.929548740386963
    4. ')' → logprob: -4.429548740386963
    5. '+')' → logprob: -7.679548740386963
    6. '+'' → logprob: -7.804548740386963
    7. '*' → logprob: -8.179549217224121
    8. '+)' → logprob: -8.679549217224121
    9. ',' → logprob: -8.929549217224121
    10. '   ' → logprob: -10.304549217224121

Token 143: ' '^' (ID: 117788)
  Prédit: ''^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''^' → logprob: -0.1271965503692627
    2. ''' → logprob: -2.1271965503692627
    3. ''(' → logprob: -9.377196311950684
    4. '"' → logprob: -10.002196311950684
    5. ' '('' → logprob: -10.002196311950684
    6. ' '^' → logprob: -10.252196311950684
    7. '')' → logprob: -11.377196311950684
    8. ''-' → logprob: -11.752196311950684
    9. ''*' → logprob: -12.002196311950684
    10. ''+' → logprob: -12.252196311950684

Token 144: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27160945534706116
    2. '')' → logprob: -1.5216094255447388
    3. ''' → logprob: -5.146609306335449
    4. '"' → logprob: -5.646609306335449
    5. '")' → logprob: -6.896609306335449
    6. ' )' → logprob: -7.021609306335449
    7. '  ' → logprob: -7.146609306335449
    8. '+' → logprob: -7.271609306335449
    9. ')
' → logprob: -7.271609306335449
    10. '~~~' → logprob: -7.271609306335449

Token 145: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0411384254693985
    2. '+' → logprob: -3.9161384105682373
    3. '*' → logprob: -4.666138648986816
    4. ')
' → logprob: -5.291138648986816
    5. '           ' → logprob: -6.416138648986816
    6. '          ' → logprob: -6.541138648986816
    7. '       ' → logprob: -6.916138648986816
    8. '         ' → logprob: -8.166138648986816
    9. ' )' → logprob: -8.791138648986816
    10. '             ' → logprob: -8.791138648986816

Token 146: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5762900114059448
    2. '(len' → logprob: -0.8262900114059448
    3. ' len' → logprob: -8.076290130615234
    4. ' (' → logprob: -10.701290130615234
    5. '(' → logprob: -11.076290130615234
    6. '   ' → logprob: -14.576290130615234
    7. '[len' → logprob: -15.201290130615234
    8. '	len' → logprob: -15.201290130615234
    9. '           ' → logprob: -15.451290130615234
    10. ' ' → logprob: -15.451290130615234

Token 147: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.0017249188385903835
    2. 're' → logprob: -6.376724720001221
    3. ' (' → logprob: -11.251725196838379
    4. '(' → logprob: -12.501725196838379
    5. 'repeat' → logprob: -13.001725196838379
    6. ' repeating' → logprob: -13.001725196838379
    7. '	re' → logprob: -14.751725196838379
    8. '   ' → logprob: -16.126724243164062
    9. 'Repe' → logprob: -16.251724243164062
    10. ' repe' → logprob: -16.314224243164062

Token 148: 'peating' (ID: 189297)
  Prédit: 'peating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peating' → logprob: -0.00012594614236149937
    2. 'p' → logprob: -9.750125885009766
    3. 'pe' → logprob: -9.750125885009766
    4. 'ating' → logprob: -12.125125885009766
    5. 'peat' → logprob: -12.750125885009766
    6. 'e' → logprob: -14.750125885009766
    7. 'peated' → logprob: -15.500125885009766
    8. 'pt' → logprob: -16.250125885009766
    9. ' repeating' → logprob: -16.875125885009766
    10. '
' → logprob: -17.250125885009766

Token 149: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0054101962596178055
    2. ')' → logprob: -5.255410194396973
    3. '           ' → logprob: -9.505410194396973
    4. '       ' → logprob: -9.755410194396973
    5. '')
' → logprob: -11.005410194396973
    6. ')
' → logprob: -11.130410194396973
    7. ' )
' → logprob: -12.130410194396973
    8. ')')
' → logprob: -13.255410194396973
    9. ')

' → logprob: -13.380410194396973
    10. '   ' → logprob: -14.005410194396973

Token 150: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38715484738349915
    2. '           ' → logprob: -1.1371548175811768
    3. '	       ' → logprob: -9.387154579162598
    4. '	   ' → logprob: -9.637154579162598
    5. '	' → logprob: -10.137154579162598
    6. '   ' → logprob: -10.262154579162598
    7. '		' → logprob: -11.012154579162598
    8. '```' → logprob: -12.012154579162598
    9. '
' → logprob: -12.637154579162598
    10. ' ' → logprob: -12.637154579162598

Token 151: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029136461671441793
    2. '       ' → logprob: -6.002913475036621
    3. 'break' (adapté à ' break') → logprob: -8.252913475036621
    4. ' break' → logprob: -8.877913475036621
    5. '   ' → logprob: -10.627913475036621
    6. '               ' → logprob: -11.752913475036621
    7. ' ' → logprob: -13.377913475036621
    8. '          ' → logprob: -13.502913475036621
    9. '
' → logprob: -13.877913475036621
    10. '         ' → logprob: -14.752913475036621

Token 152: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014584509190171957
    2. '   ' → logprob: -6.626458644866943
    3. '	   ' → logprob: -10.251458168029785
    4. '        
' → logprob: -10.376458168029785
    5. ' p' → logprob: -10.751458168029785
    6. '	' → logprob: -11.376458168029785
    7. 'p' → logprob: -11.501458168029785
    8. '​' → logprob: -12.751458168029785
    9. '    
' → logprob: -13.126458168029785
    10. '           ' → logprob: -13.126458168029785

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014276175061240792
    2. '   ' → logprob: -7.00142765045166
    3. 're' → logprob: -8.12642765045166
    4. ' remainder' → logprob: -8.75142765045166
    5. 'p' → logprob: -10.75142765045166
    6. '        
' → logprob: -11.75142765045166
    7. '```' → logprob: -12.00142765045166
    8. 'rest' → logprob: -12.12642765045166
    9. ' p' → logprob: -13.00142765045166
    10. '	re' → logprob: -13.12642765045166

Token 154: ' remainder' (ID: 47056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5255811810493469
    2. 're' → logprob: -1.4005811214447021
    3. '   ' → logprob: -1.9005811214447021
    4. ' remainder' → logprob: -4.400581359863281
    5. '	re' → logprob: -8.525581359863281
    6. ' ' → logprob: -9.150581359863281
    7. '    ' → logprob: -9.275581359863281
    8. '  ' → logprob: -10.025581359863281
    9. 'rest' → logprob: -10.275581359863281
    10. '     ' → logprob: -10.650581359863281

Token 155: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.3425219549390022e-05
    2. '_positions' → logprob: -12.12501335144043
    3. 'pos' → logprob: -12.50001335144043
    4. '_' → logprob: -13.37501335144043
    5. '=' → logprob: -13.87501335144043
    6. '[pos' → logprob: -14.62501335144043
    7. 'Pos' → logprob: -15.12501335144043
    8. '_p' → logprob: -15.75001335144043
    9. '=_' → logprob: -15.87501335144043
    10. '```' → logprob: -16.25001335144043

Token 156: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00018125296628568321
    2. '[' → logprob: -8.625181198120117
    3. ' [' → logprob: -14.000181198120117
    4. 'p' → logprob: -15.250181198120117
    5. '=' → logprob: -16.250181198120117
    6. '```' → logprob: -16.375181198120117
    7. '[q' → logprob: -16.875181198120117
    8. '\[' → logprob: -17.000181198120117
    9. '[
' → logprob: -17.375181198120117
    10. '[...]' → logprob: -17.875181198120117

Token 157: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08276093751192093
    2. ' =' → logprob: -2.58276104927063
    3. ']' → logprob: -5.582760810852051
    4. ']=' → logprob: -9.33276081085205
    5. ')' → logprob: -11.45776081085205
    6. ')=' → logprob: -13.33276081085205
    7. '=p' → logprob: -15.20776081085205
    8. '＝' → logprob: -15.95776081085205
    9. '=len' → logprob: -15.95776081085205
    10. '=index' → logprob: -16.457761764526367

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '＝' → logprob: -17.255233764648438
    4. '=index' → logprob: -17.380233764648438
    5. '=

' → logprob: -19.130233764648438
    6. '=len' → logprob: -19.255233764648438
    7. '=int' → logprob: -19.255233764648438
    8. '=
' → logprob: -19.380233764648438
    9. ')=' → logprob: -19.630233764648438
    10. '=p' → logprob: -20.005233764648438

Token 159: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00015860427811276168
    2. ' idx' → logprob: -8.750158309936523
    3. 'index' → logprob: -16.875158309936523
    4. 'len' → logprob: -16.875158309936523
    5. '	idx' → logprob: -16.875158309936523
    6. '[idx' → logprob: -19.250158309936523
    7. '(idx' → logprob: -19.375158309936523
    8. '   ' → logprob: -19.500158309936523
    9. '_idx' → logprob: -19.625158309936523
    10. ' ' → logprob: -20.500158309936523

Token 160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18565894663333893
    2. '   ' → logprob: -1.8106589317321777
    3. 'p' → logprob: -6.560658931732178
    4. '
' → logprob: -6.935658931732178
    5. ' p' → logprob: -7.185658931732178
    6. '        
' → logprob: -7.185658931732178
    7. '    
' → logprob: -7.685658931732178
    8. '<|end|>' → logprob: -7.935658931732178
    9. ' ' → logprob: -8.310659408569336
    10. '  
' → logprob: -8.685659408569336

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6584237813949585
    2. 'p' → logprob: -1.2834237813949585
    3. '   ' → logprob: -1.6584237813949585
    4. ' p' → logprob: -4.283423900604248
    5. '```' → logprob: -7.908423900604248
    6. '	p' → logprob: -8.90842342376709
    7. ' ' → logprob: -9.03342342376709
    8. '  ' → logprob: -9.40842342376709
    9. '    ' → logprob: -9.90842342376709
    10. 'space' → logprob: -10.28342342376709

Token 162: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -1.843177233240567e-05
    2. ' p' → logprob: -11.000018119812012
    3. '   ' → logprob: -13.500018119812012
    4. '       ' → logprob: -15.500018119812012
    5. '           ' → logprob: -16.875019073486328
    6. '
' → logprob: -19.750019073486328
    7. '	p' → logprob: -19.750019073486328
    8. '```' → logprob: -20.000019073486328
    9. '  ' → logprob: -20.250019073486328
    10. ' ' → logprob: -20.500019073486328

Token 163: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.0501156784594059
    2. ' *=' → logprob: -3.0501155853271484
    3. '=' → logprob: -6.800115585327148
    4. '*' → logprob: -7.925115585327148
    5. '   ' → logprob: -10.925115585327148
    6. '```' → logprob: -11.675115585327148
    7. ' <<=' → logprob: -11.925115585327148
    8. ' ' → logprob: -11.925115585327148
    9. ' =' → logprob: -12.050115585327148
    10. '*p' → logprob: -13.425115585327148

Token 164: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -19.125
    4. '1' → logprob: -19.25
    5. '１０' → logprob: -19.375
    6. '2' → logprob: -20.125
    7. '   ' → logprob: -20.5
    8. '
' → logprob: -21.5
    9. '100' → logprob: -21.625
    10. '۱۰' → logprob: -21.75

Token 165: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -18.625
    4. '１０' → logprob: -19.5
    5. '2' → logprob: -19.625
    6. '
' → logprob: -19.75
    7. '1' → logprob: -20.125
    8. '   ' → logprob: -20.25
    9. '100' → logprob: -20.75
    10. '

' → logprob: -21.25

Token 166: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24426595866680145
    2. '   ' → logprob: -1.9942659139633179
    3. '<|end|>' → logprob: -3.1192660331726074
    4. '        
' → logprob: -4.744266033172607
    5. '    
' → logprob: -4.744266033172607
    6. '  
' → logprob: -5.369266033172607
    7. ' ' → logprob: -5.869266033172607
    8. '
' → logprob: -6.119266033172607
    9. ',' → logprob: -6.244266033172607
    10. ' 
' → logprob: -6.619266033172607

Token 167: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.080558642745018
    2. '       ' → logprob: -2.7055585384368896
    3. 'decimal' → logprob: -5.205558776855469
    4. ' decimal' → logprob: -6.830558776855469
    5. 'digit' → logprob: -6.955558776855469
    6. 'd' → logprob: -7.830558776855469
    7. ' ' → logprob: -8.080558776855469
    8. '```' → logprob: -8.080558776855469
    9. ',' → logprob: -8.330558776855469
    10. '    
' → logprob: -8.455558776855469

Token 168: ' decimal' (ID: 26964)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8570553660392761
    2. 'decimal' (adapté à ' decimal') → logprob: -0.9820553660392761
    3. 'digit' → logprob: -2.357055425643921
    4. '   ' → logprob: -2.982055425643921
    5. 'q' → logprob: -3.732055425643921
    6. 'd' → logprob: -3.982055425643921
    7. ' decimal' → logprob: -4.607055187225342
    8. ' digit' → logprob: -6.607055187225342
    9. 'quot' → logprob: -7.607055187225342
    10. 'r' → logprob: -8.2320556640625

Token 169: '_digits' (ID: 108638)
  Prédit: '_digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.4177258312702179
    2. '_digits' → logprob: -1.1677258014678955
    3. 'digit' → logprob: -3.6677258014678955
    4. 'digits' → logprob: -6.542726039886475
    5. '_part' → logprob: -6.792726039886475
    6. ' =' → logprob: -7.292726039886475
    7. '=' → logprob: -7.417726039886475
    8. '_place' → logprob: -8.292725563049316
    9. '_' → logprob: -8.542725563049316
    10. '_value' → logprob: -9.542725563049316

Token 170: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005258303135633469
    2. '.' → logprob: -5.255258083343506
    3. 'append' → logprob: -11.255258560180664
    4. '.app' → logprob: -12.255258560180664
    5. '.Append' → logprob: -12.505258560180664
    6. '.ap' → logprob: -13.755258560180664
    7. ' .' → logprob: -14.130258560180664
    8. '_append' → logprob: -14.130258560180664
    9. 'Append' → logprob: -15.130258560180664
    10. ' append' → logprob: -16.505258560180664

Token 171: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.1602376252412796
    2. 'str' → logprob: -1.9102376699447632
    3. '(' → logprob: -11.660237312316895
    4. ' str' → logprob: -12.535237312316895
    5. '	str' → logprob: -14.910237312316895
    6. '(p' → logprob: -14.910237312316895
    7. '=str' → logprob: -15.285237312316895
    8. '(chr' → logprob: -15.285237312316895
    9. ':str' → logprob: -16.78523826599121
    10. '('' → logprob: -16.91023826599121

Token 172: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.4034345187828876e-05
    2. '(' → logprob: -10.87502384185791
    3. 'p' → logprob: -12.37502384185791
    4. '((' → logprob: -14.25002384185791
    5. ' (' → logprob: -15.75002384185791
    6. ' p' → logprob: -17.750024795532227
    7. '(
' → logprob: -17.875024795532227
    8. ')' → logprob: -18.000024795532227
    9. ')p' → logprob: -18.125024795532227
    10. '<p' → logprob: -19.625024795532227

Token 173: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6931565403938293
    2. ' //' → logprob: -0.6931565403938293
    3. ' ' → logprob: -12.318156242370605
    4. ' ' → logprob: -12.818156242370605
    5. '   ' → logprob: -13.818156242370605
    6. '//
' → logprob: -15.193156242370605
    7. ')' → logprob: -15.443156242370605
    8. ' //
' → logprob: -15.693156242370605
    9. '  ' → logprob: -16.443157196044922
    10. ')//' → logprob: -16.443157196044922

Token 174: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1472419600977446e-06
    2. ' q' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.000001907348633
    4. '$q' → logprob: -20.625001907348633
    5. '	q' → logprob: -21.125001907348633
    6. '
' → logprob: -22.125001907348633
    7. '_q' → logprob: -22.750001907348633
    8. '           ' → logprob: -22.875001907348633
    9. ''q' → logprob: -23.000001907348633
    10. '       ' → logprob: -23.000001907348633

Token 175: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5948432683944702
    2. ')' → logprob: -0.8448432683944702
    3. '))
' → logprob: -4.34484338760376
    4. '))' → logprob: -5.21984338760376
    5. '       ' → logprob: -8.094842910766602
    6. ')
' → logprob: -10.719842910766602
    7. '   ' → logprob: -12.469842910766602
    8. ')`
' → logprob: -12.719842910766602
    9. ')p' → logprob: -12.969842910766602
    10. ')

' → logprob: -13.094842910766602

Token 176: '       ' (ID: 309)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.27337658405303955
    2. ' p' → logprob: -1.5233765840530396
    3. '   ' → logprob: -4.64837646484375
    4. '       ' → logprob: -4.77337646484375
    5. ' ' → logprob: -6.52337646484375
    6. ' 
' → logprob: -7.27337646484375
    7. '```' → logprob: -7.89837646484375
    8. '        
' → logprob: -9.02337646484375
    9. '<|end|>' → logprob: -9.27337646484375
    10. ',' → logprob: -9.52337646484375

Token 177: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.004079589620232582
    2. ' p' → logprob: -5.504079818725586
    3. '   ' → logprob: -13.879079818725586
    4. '       ' → logprob: -15.379079818725586
    5. ' ' → logprob: -16.879079818725586
    6. '```' → logprob: -17.504079818725586
    7. '
' → logprob: -18.504079818725586
    8. '    ' → logprob: -18.629079818725586
    9. '  ' → logprob: -19.004079818725586
    10. '        
' → logprob: -19.504079818725586

Token 178: ' %=' (ID: 117035)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019245771691203117
    2. '%=' → logprob: -4.019245624542236
    3. ' %=' → logprob: -7.394245624542236
    4. ' =' → logprob: -7.644245624542236
    5. '=p' → logprob: -13.769246101379395
    6. '＝' → logprob: -14.769246101379395
    7. '%' → logprob: -15.394246101379395
    8. '=
' → logprob: -17.394245147705078
    9. '=

' → logprob: -17.769245147705078
    10. '.=' → logprob: -17.894245147705078

Token 179: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007099286303855479
    2. ' q' → logprob: -7.2507100105285645
    3. '	q' → logprob: -19.500709533691406
    4. '   ' → logprob: -21.500709533691406
    5. '$q' → logprob: -21.625709533691406
    6. '*q' → logprob: -22.000709533691406
    7. ' ' → logprob: -22.000709533691406
    8. '[q' → logprob: -22.625709533691406
    9. ''q' → logprob: -23.000709533691406
    10. ',q' → logprob: -23.375709533691406

Token 180: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04771329089999199
    2. '   ' → logprob: -3.297713279724121
    3. '<|end|>' → logprob: -4.922713279724121
    4. 'idx' → logprob: -7.297713279724121
    5. '<|end|>' → logprob: -7.797713279724121
    6. '	' → logprob: -8.422713279724121
    7. '
' → logprob: -8.422713279724121
    8. '           ' → logprob: -8.672713279724121
    9. '    ' → logprob: -9.172713279724121
    10. '	   ' → logprob: -9.422713279724121

Token 182: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.06434794515371323
    2. ' idx' → logprob: -2.814347982406616
    3. '1' → logprob: -6.064347743988037
    4. '   ' → logprob: -10.689348220825195
    5. '
' → logprob: -11.189348220825195
    6. ' 
' → logprob: -12.564348220825195
    7. '    
' → logprob: -12.814348220825195
    8. '(idx' → logprob: -12.939348220825195
    9. '	idx' → logprob: -13.064348220825195
    10. '[idx' → logprob: -13.439348220825195

Token 183: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004519365727901459
    2. ' +=' → logprob: -5.879519462585449
    3. '+' → logprob: -6.379519462585449
    4. '=' → logprob: -11.12951946258545
    5. '++' → logprob: -13.37951946258545
    6. '+='' → logprob: -15.00451946258545
    7. '<|end|>' → logprob: -15.50451946258545
    8. '+="' → logprob: -15.62951946258545
    9. '+++' → logprob: -16.504518508911133
    10. ']+=' → logprob: -16.504518508911133

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -20.875
    4. '１' → logprob: -22.0
    5. '```' → logprob: -22.625
    6. '۱' → logprob: -24.375
    7. '  ' → logprob: -26.25
    8. '१' → logprob: -26.25
    9. '১' → logprob: -26.375
    10. '       ' → logprob: -26.375

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.375
    4. '```' → logprob: -19.875
    5. '１' → logprob: -20.0
    6. '۱' → logprob: -21.625
    7. '  ' → logprob: -22.625
    8. '१' → logprob: -22.6875
    9. '১' → logprob: -22.8125
    10. '       ' → logprob: -23.0625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 183
Tokens correctement prédits (1ère position, stricte): 70
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 151
Précision stricte (1ère position): 38.25%
Précision adaptée (1ère position): 41.53%
Précision (top 10): 82.51%
================================================================================
