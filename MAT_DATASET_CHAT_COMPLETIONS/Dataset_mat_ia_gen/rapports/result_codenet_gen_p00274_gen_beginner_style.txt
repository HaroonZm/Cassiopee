================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    N = input()
    if N == '0':
        break
    N = int(N)
    prizes = list(map(int, input().split()))
    can_get_two = False
    max_k = 0
    for k in prizes:
        if k >= 2:
            can_get_two = True
        if k > max_k:
            max_k = k
    if not can_get_two:
        print("NA")
    else:
        # minimum challenges = total prizes - max_k + 2
        total = sum(prizes)
        print(total - max_k + 2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9207866191864014
    2. 'o' → logprob: -1.5457866191864014
    3. '=' → logprob: -2.1707866191864014
    4. ' ' → logprob: -2.2957866191864014
    5. '  ' → logprob: -3.6707866191864014
    6. 'u' → logprob: -3.7957866191864014
    7. '>' → logprob: -4.0457868576049805
    8. '-' → logprob: -4.0457868576049805
    9. ' =' → logprob: -4.2957868576049805
    10. '%' → logprob: -4.4207868576049805

Token 6: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10457094758749008
    2. ' input' → logprob: -2.7295708656311035
    3. 'int' → logprob: -3.7295708656311035
    4. 'input' → logprob: -4.6045708656311035
    5. ' ' → logprob: -11.479571342468262
    6. '1' → logprob: -12.729571342468262
    7. ' eval' → logprob: -12.979571342468262
    8. ' randint' → logprob: -13.479571342468262
    9. 'eval' → logprob: -13.604571342468262
    10. '10' → logprob: -13.604571342468262

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003874166286550462
    2. '(
' → logprob: -8.750387191772461
    3. '('' → logprob: -9.125387191772461
    4. ''' → logprob: -10.500387191772461
    5. '()' → logprob: -10.625387191772461
    6. '("("' → logprob: -10.750387191772461
    7. '(

' → logprob: -11.250387191772461
    8. '"' → logprob: -11.750387191772461
    9. ' (' → logprob: -12.000387191772461
    10. '```' → logprob: -12.500387191772461

Token 8: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6108735203742981
    2. ' ' → logprob: -1.9858734607696533
    3. '   ' → logprob: -2.3608734607696533
    4. '\n' → logprob: -2.9858734607696533
    5. '<|end|>' → logprob: -3.6108734607696533
    6. 'if' → logprob: -3.7358734607696533
    7. '```' → logprob: -3.7358734607696533
    8. '.' → logprob: -4.235873699188232
    9. ')' → logprob: -4.485873699188232
    10. ' ==' → logprob: -4.860873699188232

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3099830746650696
    2. 'if' (adapté à ' if') → logprob: -2.559983015060425
    3. '.' → logprob: -2.809983015060425
    4. ' ' → logprob: -2.809983015060425
    5. ' ==' → logprob: -4.059983253479004
    6. '\n' → logprob: -4.434983253479004
    7. '   ' → logprob: -4.934983253479004
    8. '==' → logprob: -4.934983253479004
    9. '.strip' → logprob: -5.059983253479004
    10. ')' → logprob: -6.184983253479004

Token 10: ' N' (ID: 478)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1900080144405365
    2. ' ' → logprob: -1.9400080442428589
    3. ' N' → logprob: -3.5650079250335693
    4. '  ' → logprob: -7.440008163452148
    5. 'not' → logprob: -7.815008163452148
    6. 'N' → logprob: -10.690008163452148
    7. ' len' → logprob: -11.565008163452148
    8. ' ' → logprob: -12.190008163452148
    9. '<|end|>' → logprob: -12.690008163452148
    10. ''' → logprob: -13.315008163452148

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01006711833178997
    2. '==' → logprob: -4.885066986083984
    3. '.' → logprob: -6.885066986083984
    4. ' .' → logprob: -7.885066986083984
    5. ' !=' → logprob: -8.260066986083984
    6. ' ' → logprob: -8.760066986083984
    7. '.strip' → logprob: -8.760066986083984
    8. '.is' → logprob: -9.010066986083984
    9. ' ===' → logprob: -9.385066986083984
    10. ' =' → logprob: -9.385066986083984

Token 12: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5260494947433472
    2. '"' → logprob: -0.9010494947433472
    3. ' '' → logprob: -6.776049613952637
    4. '''' → logprob: -7.151049613952637
    5. ' "' → logprob: -7.276049613952637
    6. '""' → logprob: -8.776049613952637
    7. ' ' → logprob: -9.151049613952637
    8. ' ''' → logprob: -11.026049613952637
    9. ' ""' → logprob: -12.151049613952637
    10. '`' → logprob: -12.776049613952637

Token 13: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.55462247133255
    2. '0' → logprob: -1.9296224117279053
    3. ''ex' → logprob: -2.3046224117279053
    4. '"' → logprob: -2.4296224117279053
    5. '\n' → logprob: -3.1796224117279053
    6. 'exit' → logprob: -3.9296224117279053
    7. ''\' → logprob: -4.179622650146484
    8. 'q' → logprob: -4.554622650146484
    9. 'quit' → logprob: -6.304622650146484
    10. '':' → logprob: -6.804622650146484

Token 14: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.06823649257421494
    2. ''' → logprob: -2.8182365894317627
    3. '\n' → logprob: -5.693236351013184
    4. ':' → logprob: -6.193236351013184
    5. '':
' → logprob: -7.318236351013184
    6. ' ':' → logprob: -9.943236351013184
    7. '":' → logprob: -10.568236351013184
    8. '':
' → logprob: -10.568236351013184
    9. '"' → logprob: -11.068236351013184
    10. ''or' → logprob: -11.193236351013184

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020995871163904667
    2. ' break' → logprob: -6.752099514007568
    3. '   ' → logprob: -7.127099514007568
    4. '	break' → logprob: -10.502099990844727
    5. '    ' → logprob: -10.877099990844727
    6. '      ' → logprob: -11.002099990844727
    7. '     ' → logprob: -11.127099990844727
    8. '\n' → logprob: -11.502099990844727
    9. ' ' → logprob: -11.877099990844727
    10. ' ' → logprob: -12.002099990844727

Token 16: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.18398301303386688
    2. '       ' → logprob: -1.8089829683303833
    3. '\n' → logprob: -5.933982849121094
    4. 'break' (adapté à ' break') → logprob: -7.058982849121094
    5. '   ' → logprob: -7.933982849121094
    6. '	break' → logprob: -8.308982849121094
    7. '```' → logprob: -10.933982849121094
    8. '           ' → logprob: -11.058982849121094
    9. '_break' → logprob: -11.308982849121094
    10. '\t' → logprob: -11.308982849121094

Token 17: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6346686482429504
    2. ':' → logprob: -2.1346685886383057
    3. '   ' → logprob: -2.3846685886383057
    4. '
' → logprob: -2.6346685886383057
    5. '<|end|>' → logprob: -3.0096685886383057
    6. '\' → logprob: -3.3846685886383057
    7. ')' → logprob: -3.6346685886383057
    8. '    
' → logprob: -3.7596685886383057
    9. '#' → logprob: -4.134668827056885
    10. '  
' → logprob: -4.884668827056885

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24470816552639008
    2. '    
' → logprob: -2.1197080612182617
    3. '  
' → logprob: -3.7447080612182617
    4. '\n' → logprob: -3.8697080612182617
    5. '
' → logprob: -4.494708061218262
    6. 'n' → logprob: -4.619708061218262
    7. '<|end|>' → logprob: -4.994708061218262
    8. ' 
' → logprob: -5.244708061218262
    9. '   
' → logprob: -5.619708061218262
    10. '```' → logprob: -5.869708061218262

Token 19: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48053860664367676
    2. '<|end|>' → logprob: -2.3555386066436768
    3. ':' → logprob: -2.8555386066436768
    4. ',' → logprob: -3.2305386066436768
    5. '\n' → logprob: -3.3555386066436768
    6. 'n' → logprob: -3.8555386066436768
    7. 'print' → logprob: -4.230538368225098
    8. '    ' → logprob: -4.230538368225098
    9. '    
' → logprob: -4.355538368225098
    10. '\' → logprob: -4.605538368225098

Token 20: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1861883401870728
    2. '<|end|>' → logprob: -1.1861883401870728
    3. '+' → logprob: -2.186188220977783
    4. '[' → logprob: -2.436188220977783
    5. ')' → logprob: -3.311188220977783
    6. ' ' → logprob: -3.561188220977783
    7. '.strip' → logprob: -3.686188220977783
    8. '#' → logprob: -3.811188220977783
    9. '=' → logprob: -3.936188220977783
    10. '<|end|>' → logprob: -4.436188220977783

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02284170873463154
    2. 'int' → logprob: -4.022841930389404
    3. ' list' → logprob: -5.647841930389404
    4. ' N' → logprob: -7.147841930389404
    5. ' ' → logprob: -9.272841453552246
    6. 'list' → logprob: -9.772841453552246
    7. ' [' → logprob: -10.022841453552246
    8. ' float' → logprob: -10.397841453552246
    9. ' len' → logprob: -10.647841453552246
    10. '[int' → logprob: -10.647841453552246

Token 22: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5760489702224731
    2. '(' → logprob: -0.8260489702224731
    3. ' (' → logprob: -9.951048851013184
    4. '()' → logprob: -10.326048851013184
    5. '(
' → logprob: -12.576048851013184
    6. '('' → logprob: -12.826048851013184
    7. ' ' → logprob: -12.826048851013184
    8. '(n' → logprob: -12.826048851013184
    9. '(`' → logprob: -12.951048851013184
    10. '(input' → logprob: -13.201048851013184

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.2166411478538066e-05
    2. ' )' → logprob: -10.625052452087402
    3. ')
' → logprob: -11.875052452087402
    4. '+' → logprob: -12.375052452087402
    5. '))' → logprob: -12.750052452087402
    6. '   ' → logprob: -12.750052452087402
    7. '`)' → logprob: -13.000052452087402
    8. '**' → logprob: -13.000052452087402
    9. '()' → logprob: -14.000052452087402
    10. ')**' → logprob: -14.000052452087402

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.178868368268013
    2. ' ' → logprob: -2.553868293762207
    3. '<|end|>' → logprob: -3.803868293762207
    4. '    ' → logprob: -4.053868293762207
    5. ' 
' → logprob: -4.553868293762207
    6. '    
' → logprob: -4.928868293762207
    7. '\n' → logprob: -5.053868293762207
    8. ')' → logprob: -5.678868293762207
    9. '
' → logprob: -5.928868293762207
    10. '\' → logprob: -6.053868293762207

Token 25: ' prizes' (ID: 44917)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35565289855003357
    2. '   ' → logprob: -1.605652928352356
    3. '    ' → logprob: -3.2306528091430664
    4. ' 
' → logprob: -3.8556528091430664
    5. '<|end|>' → logprob: -5.105652809143066
    6. 'n' → logprob: -5.355652809143066
    7. ' if' → logprob: -5.605652809143066
    8. '    
' → logprob: -5.605652809143066
    9. '  ' → logprob: -5.730652809143066
    10. 's' → logprob: -6.105652809143066

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014589221216738224
    2. '=' → logprob: -4.639589309692383
    3. '[' → logprob: -5.639589309692383
    4. '_' → logprob: -8.389589309692383
    5. '_count' → logprob: -8.514589309692383
    6. '.' → logprob: -8.764589309692383
    7. '.append' → logprob: -9.014589309692383
    8. '[:]' → logprob: -9.639589309692383
    9. ',' → logprob: -9.764589309692383
    10. '_counts' → logprob: -9.889589309692383

Token 27: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.33320847153663635
    2. ' [' → logprob: -1.333208441734314
    3. ' list' → logprob: -4.5832085609436035
    4. '[]' → logprob: -5.0832085609436035
    5. '[' → logprob: -6.5832085609436035
    6. ' ' → logprob: -7.0832085609436035
    7. 'list' → logprob: -7.3332085609436035
    8. ' ['' → logprob: -8.958208084106445
    9. ' []
' → logprob: -9.958208084106445
    10. ' set' → logprob: -10.083208084106445

Token 28: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033951565623283386
    2. '(range' → logprob: -3.6589515209198
    3. '()' → logprob: -5.033951759338379
    4. '(map' → logprob: -7.283951759338379
    5. '(int' → logprob: -9.158951759338379
    6. '(input' → logprob: -9.408951759338379
    7. '(N' → logprob: -9.658951759338379
    8. '(filter' → logprob: -10.158951759338379
    9. '(pr' → logprob: -10.908951759338379
    10. '(`' → logprob: -11.033951759338379

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007997791282832623
    2. '(' → logprob: -4.882997989654541
    3. '(lambda' → logprob: -8.257997512817383
    4. 'int' → logprob: -9.257997512817383
    5. '(str' → logprob: -11.507997512817383
    6. ')' → logprob: -11.507997512817383
    7. '<int' → logprob: -11.882997512817383
    8. '```' → logprob: -13.257997512817383
    9. ' int' → logprob: -13.382997512817383
    10. '(
' → logprob: -13.632997512817383

Token 30: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6864321827888489
    2. ',input' → logprob: -0.9364321827888489
    3. ',' → logprob: -2.561432123184204
    4. '(' → logprob: -3.686432123184204
    5. 'input' → logprob: -6.436432361602783
    6. ' ,' → logprob: -8.061431884765625
    7. ' input' → logprob: -8.561431884765625
    8. ')' → logprob: -9.186431884765625
    9. ' (' → logprob: -10.186431884765625
    10. '(),' → logprob: -10.686431884765625

Token 31: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759860277175903
    2. 'input' → logprob: -0.8259860277175903
    3. ',input' → logprob: -10.7009859085083
    4. '(input' → logprob: -11.5759859085083
    5. ')' → logprob: -12.3259859085083
    6. '	input' → logprob: -12.7009859085083
    7. '=input' → logprob: -13.7009859085083
    8. '   ' → logprob: -13.9509859085083
    9. '[input' → logprob: -13.9509859085083
    10. ' ' → logprob: -13.9509859085083

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011534435179783031
    2. '()' → logprob: -9.125115394592285
    3. '(' → logprob: -12.750115394592285
    4. ' ().' → logprob: -13.500115394592285
    5. '()))' → logprob: -13.875115394592285
    6. '())' → logprob: -14.875115394592285
    7. '()
' → logprob: -15.875115394592285
    8. ')' → logprob: -16.00011444091797
    9. '()));' → logprob: -16.00011444091797
    10. '())))' → logprob: -16.25011444091797

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002350791823118925
    2. 'strip' → logprob: -6.127350807189941
    3. ' split' → logprob: -9.002350807189941
    4. '(split' → logprob: -10.752350807189941
    5. 'rstrip' → logprob: -10.877350807189941
    6. ')' → logprob: -13.627350807189941
    7. ' strip' → logprob: -14.627350807189941
    8. 'spl' → logprob: -14.752350807189941
    9. 's' → logprob: -16.252349853515625
    10. '.split' → logprob: -16.752349853515625

Token 34: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08392363786697388
    2. '())' → logprob: -3.208923578262329
    3. '))' → logprob: -4.208923816680908
    4. '(' → logprob: -4.458923816680908
    5. '()' → logprob: -4.458923816680908
    6. '('' → logprob: -6.833923816680908
    7. ')' → logprob: -7.333923816680908
    8. '(','' → logprob: -9.45892333984375
    9. ''))' → logprob: -9.58392333984375
    10. '()))
' → logprob: -9.70892333984375

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.166027307510376
    2. ')' → logprob: -1.666027307510376
    3. ' ' → logprob: -1.666027307510376
    4. '
' → logprob: -2.916027307510376
    5. ' 
' → logprob: -3.041027307510376
    6. '    
' → logprob: -3.166027307510376
    7. '<|end|>' → logprob: -3.541027307510376
    8. '[' → logprob: -3.916027307510376
    9. ' if' → logprob: -4.041027069091797
    10. '    ' → logprob: -4.291027069091797

Token 36: ' can' (ID: 665)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -1.361397385597229
    2. '   ' → logprob: -1.736397385597229
    3. ' if' → logprob: -1.986397385597229
    4. 'sum' → logprob: -2.1113972663879395
    5. ' prizes' → logprob: -3.3613972663879395
    6. 'total' → logprob: -3.3613972663879395
    7. ' sum' → logprob: -3.6113972663879395
    8. 'if' → logprob: -3.6113972663879395
    9. 'count' → logprob: -3.7363972663879395
    10. ' total' → logprob: -3.7363972663879395

Token 37: '_get' (ID: 6533)
  Prédit: '_win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -0.43620190024375916
    2. '_buy' → logprob: -1.4362019300460815
    3. '_w' → logprob: -3.561201810836792
    4. '_' → logprob: -4.186202049255371
    5. '_get' → logprob: -4.186202049255371
    6. '_purchase' → logprob: -4.686202049255371
    7. '_use' → logprob: -5.186202049255371
    8. '_claim' → logprob: -5.311202049255371
    9. '_take' → logprob: -5.811202049255371
    10. 'win' → logprob: -5.811202049255371

Token 38: '_two' (ID: 54305)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0154352188110352
    2. '_' → logprob: -1.1404352188110352
    3. '_pr' → logprob: -1.2654352188110352
    4. '=' → logprob: -4.015435218811035
    5. '_it' → logprob: -4.890435218811035
    6. 'pr' → logprob: -6.515435218811035
    7. '_aw' → logprob: -6.765435218811035
    8. 'ted' → logprob: -6.890435218811035
    9. '_s' → logprob: -7.390435218811035
    10. 'ten' → logprob: -7.515435218811035

Token 39: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12441061437129974
    2. ' =' → logprob: -2.749410629272461
    3. '=' → logprob: -3.624410629272461
    4. '_two' → logprob: -4.874410629272461
    5. '_tokens' → logprob: -5.499410629272461
    6. '_for' → logprob: -6.249410629272461
    7. ' ' → logprob: -6.624410629272461
    8. '_more' → logprob: -6.749410629272461
    9. '_pr' → logprob: -6.999410629272461
    10. '_=' → logprob: -7.249410629272461

Token 40: ' False' (ID: 7983)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.207600712776184
    2. ' False' → logprob: -1.457600712776184
    3. 'False' → logprob: -1.832600712776184
    4. '[' → logprob: -2.4576005935668945
    5. ' []' → logprob: -2.5826005935668945
    6. ' any' → logprob: -2.9576005935668945
    7. ' set' → logprob: -3.5826005935668945
    8. '[]' → logprob: -3.5826005935668945
    9. 'set' → logprob: -4.2076005935668945
    10. 'any' → logprob: -4.8326005935668945

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.321477472782135
    2. '<|end|>' → logprob: -2.1964774131774902
    3. '   ' → logprob: -2.5714774131774902
    4. ' ' → logprob: -2.8214774131774902
    5. ' :' → logprob: -4.94647741317749
    6. '    ' → logprob: -5.19647741317749
    7. ':
' → logprob: -5.69647741317749
    8. ',' → logprob: -5.94647741317749
    9. '
' → logprob: -6.82147741317749
    10. '<|end|>' → logprob: -6.94647741317749

Token 43: ' max' (ID: 2999)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7661839127540588
    2. ' ' → logprob: -1.266183853149414
    3. 'for' → logprob: -1.766183853149414
    4. ' 
' → logprob: -3.641183853149414
    5. '   ' → logprob: -3.891183853149414
    6. '<|end|>' → logprob: -4.391183853149414
    7. '  ' → logprob: -5.766183853149414
    8. '\n' → logprob: -5.766183853149414
    9. '    
' → logprob: -5.891183853149414
    10. '    ' → logprob: -5.891183853149414

Token 44: '_k' (ID: 11637)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4832199513912201
    2. '_pr' → logprob: -1.3582199811935425
    3. '_sum' → logprob: -3.233219861984253
    4. '_value' → logprob: -3.233219861984253
    5. '_val' → logprob: -4.233220100402832
    6. '_diff' → logprob: -5.233220100402832
    7. '_idx' → logprob: -5.358220100402832
    8. '_score' → logprob: -5.358220100402832
    9. '_index' → logprob: -5.483220100402832
    10. '_num' → logprob: -5.983220100402832

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01640406809747219
    2. '=' → logprob: -4.141404151916504
    3. 'ey' → logprob: -9.266404151916504
    4. ' ' → logprob: -10.141404151916504
    5. '_idx' → logprob: -10.141404151916504
    6. ' +=' → logprob: -10.766404151916504
    7. '_index' → logprob: -10.891404151916504
    8. '_' → logprob: -11.016404151916504
    9. 'ind' → logprob: -11.266404151916504
    10. '```' → logprob: -11.516404151916504

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22034169733524323
    2. '0' → logprob: -1.720341682434082
    3. ' N' → logprob: -4.720341682434082
    4. ' -' → logprob: -5.345341682434082
    5. ' max' → logprob: -6.345341682434082
    6. ' prizes' → logprob: -6.720341682434082
    7. '-' → logprob: -7.345341682434082
    8. 'pr' → logprob: -7.845341682434082
    9. 'N' → logprob: -8.220341682434082
    10. 'max' → logprob: -8.470341682434082

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1004999428987503
    2. 'N' → logprob: -3.1004998683929443
    3. ' ' → logprob: -3.4754998683929443
    4. '-' → logprob: -4.475500106811523
    5. ' N' → logprob: -5.850500106811523
    6. '1' → logprob: -6.225500106811523
    7. 'pr' → logprob: -6.850500106811523
    8. 'max' → logprob: -6.975500106811523
    9. 'len' → logprob: -8.100500106811523
    10. ' -' → logprob: -8.225500106811523

Token 48: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24021698534488678
    2. '<|end|>' → logprob: -1.9902169704437256
    3. ' for' → logprob: -3.8652169704437256
    4. ' ' → logprob: -4.115217208862305
    5. '
' → logprob: -4.740217208862305
    6. '    
' → logprob: -5.115217208862305
    7. 'for' → logprob: -5.240217208862305
    8. '  ' → logprob: -5.490217208862305
    9. '\n' → logprob: -5.615217208862305
    10. '<|end|>' → logprob: -5.865217208862305

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37967321276664734
    2. '<|end|>' → logprob: -1.5046732425689697
    3. ' for' → logprob: -3.2546732425689697
    4. ' 
' → logprob: -3.8796732425689697
    5. '
' → logprob: -4.129673004150391
    6. ' ' → logprob: -5.004673004150391
    7. 'for' → logprob: -6.129673004150391
    8. '    
' → logprob: -6.254673004150391
    9. '<|end|>' → logprob: -6.379673004150391
    10. '\n' → logprob: -6.379673004150391

Token 50: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25886890292167664
    2. ' for' → logprob: -1.508868932723999
    3. ' ' → logprob: -6.38386869430542
    4. ' 
' → logprob: -6.75886869430542
    5. '<|end|>' → logprob: -6.75886869430542
    6. '   ' → logprob: -6.88386869430542
    7. '
' → logprob: -6.88386869430542
    8. '\n' → logprob: -8.008869171142578
    9. 'n' → logprob: -9.508869171142578
    10. '    
' → logprob: -9.633869171142578

Token 51: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.04681718721985817
    2. ' i' → logprob: -3.4218173027038574
    3. 'k' → logprob: -4.421817302703857
    4. ' ' → logprob: -7.421817302703857
    5. 'i' → logprob: -8.5468168258667
    6. ' prize' → logprob: -9.7968168258667
    7. ' j' → logprob: -10.5468168258667
    8. ' K' → logprob: -10.6718168258667
    9. '_' → logprob: -10.9843168258667
    10. ' length' → logprob: -11.0468168258667

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005362179130315781
    2. ' ' → logprob: -5.380362033843994
    3. 'in' → logprob: -7.255362033843994
    4. ' k' → logprob: -11.630362510681152
    5. '	in' → logprob: -11.880362510681152
    6. ',' → logprob: -12.130362510681152
    7. '  ' → logprob: -12.505362510681152
    8. '<|end|>' → logprob: -12.880362510681152
    9. ' i' → logprob: -13.005362510681152
    10. 'k' → logprob: -13.630362510681152

Token 53: ' prizes' (ID: 44917)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026412105187773705
    2. 'range' → logprob: -3.651412010192871
    3. ' ' → logprob: -9.401412010192871
    4. '  ' → logprob: -11.401412010192871
    5. '	range' → logprob: -12.026412010192871
    6. '   ' → logprob: -12.776412010192871
    7. 'pr' → logprob: -12.901412010192871
    8. ' xrange' → logprob: -13.151412010192871
    9. '(range' → logprob: -14.151412010192871
    10. ' pr' → logprob: -14.151412010192871

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016613778425380588
    2. '[:' → logprob: -7.37666130065918
    3. ' :' → logprob: -8.25166130065918
    4. '[' → logprob: -8.25166130065918
    5. '[:-' → logprob: -9.12666130065918
    6. '   ' → logprob: -9.25166130065918
    7. ':
' → logprob: -9.50166130065918
    8. '[::-' → logprob: -9.62666130065918
    9. ',' → logprob: -10.87666130065918
    10. '[:]' → logprob: -11.12666130065918

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6037365794181824
    2. '<|end|>' → logprob: -0.9787365794181824
    3. ':' → logprob: -2.853736639022827
    4. '   ' → logprob: -4.853736400604248
    5. ' ' → logprob: -5.478736400604248
    6. '<|end|>' → logprob: -5.603736400604248
    7. ' if' → logprob: -6.228736400604248
    8. '    ' → logprob: -7.228736400604248
    9. ' 
' → logprob: -8.353736877441406
    10. ',' → logprob: -8.728736877441406

Token 56: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4749613404273987
    2. '<|end|>' → logprob: -1.099961280822754
    3. ' if' → logprob: -3.974961280822754
    4. '    ' → logprob: -4.349961280822754
    5. ' 
' → logprob: -5.224961280822754
    6. '<|end|>' → logprob: -5.474961280822754
    7. '       ' → logprob: -6.224961280822754
    8. '   ' → logprob: -6.724961280822754
    9. 'if' (adapté à ' if') → logprob: -8.849961280822754
    10. '        ' → logprob: -8.974961280822754

Token 57: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.09196452796459198
    2. ' prizes' → logprob: -2.5919644832611084
    3. 'k' → logprob: -5.4669647216796875
    4. ' ' → logprob: -5.5919647216796875
    5. ' max' → logprob: -6.4669647216796875
    6. ' can' → logprob: -6.9669647216796875
    7. ' N' → logprob: -7.0919647216796875
    8. 'pr' → logprob: -7.9669647216796875
    9. ' not' → logprob: -8.091964721679688
    10. ' pr' → logprob: -8.091964721679688

Token 58: ' >=' (ID: 5064)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.3938190937042236
    2. ' <=' → logprob: -1.6438190937042236
    3. ' >=' → logprob: -1.6438190937042236
    4. ' ' → logprob: -2.3938190937042236
    5. ' *' → logprob: -2.6438190937042236
    6. ' >' → logprob: -2.7688190937042236
    7. ' ==' → logprob: -2.8938190937042236
    8. '*' → logprob: -3.2688190937042236
    9. '%' → logprob: -3.6438190937042236
    10. '>' → logprob: -5.2688188552856445

Token 59: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7207932472229004
    2. '2' → logprob: -1.5957932472229004
    3. ' N' → logprob: -2.0957932472229004
    4. 'N' → logprob: -2.7207932472229004
    5. ' max' → logprob: -3.5957932472229004
    6. '10' → logprob: -3.8457932472229004
    7. '0' → logprob: -4.3457932472229
    8. '100' → logprob: -4.4707932472229
    9. 'max' → logprob: -4.7207932472229
    10. '3' → logprob: -4.9707932472229

Token 60: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7166129946708679
    2. '2' → logprob: -1.3416130542755127
    3. '100' → logprob: -3.5916130542755127
    4. '0' → logprob: -3.5916130542755127
    5. '10' → logprob: -3.5916130542755127
    6. 'max' → logprob: -3.7166130542755127
    7. '3' → logprob: -3.8416130542755127
    8. '(' → logprob: -3.8416130542755127
    9. ' ' → logprob: -4.091612815856934
    10. '1' → logprob: -4.216612815856934

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10574308037757874
    2. ' and' → logprob: -2.480743169784546
    3. ':
' → logprob: -4.855742931365967
    4. ' :' → logprob: -5.230742931365967
    5. '0' → logprob: -5.855742931365967
    6. 'and' → logprob: -7.980742931365967
    7. ' :
' → logprob: -9.105743408203125
    8. ' ' → logprob: -9.730743408203125
    9. '       ' → logprob: -10.605743408203125
    10. '4' → logprob: -10.605743408203125

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12254896759986877
    2. '       ' → logprob: -2.497549057006836
    3. ':' → logprob: -3.622549057006836
    4. '0' → logprob: -6.747549057006836
    5. '<|end|>' → logprob: -6.997549057006836
    6. '               ' → logprob: -7.372549057006836
    7. ' and' → logprob: -7.622549057006836
    8. ' ' → logprob: -7.622549057006836
    9. '   ' → logprob: -7.872549057006836
    10. ':
' → logprob: -8.622549057006836

Token 63: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.2467910349369049
    2. '       ' → logprob: -2.121791124343872
    3. 'can' (adapté à ' can') → logprob: -3.121791124343872
    4. '           ' → logprob: -3.621791124343872
    5. ' max' → logprob: -4.871790885925293
    6. '               ' → logprob: -5.121790885925293
    7. ' ' → logprob: -5.121790885925293
    8. ' ' → logprob: -6.246790885925293
    9. '   ' → logprob: -6.621790885925293
    10. '	can' → logprob: -7.246790885925293

Token 64: '_get' (ID: 6533)
  Prédit: '_get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_get' → logprob: -1.0087516784551553e-05
    2. ' _' → logprob: -11.87501049041748
    3. '_' → logprob: -13.12501049041748
    4. '_have' → logprob: -15.87501049041748
    5. '_ge' → logprob: -15.87501049041748
    6. ' get' → logprob: -16.250009536743164
    7. ' ' → logprob: -16.375009536743164
    8. '_g' → logprob: -16.500009536743164
    9. '_put' → logprob: -16.500009536743164
    10. '_Get' → logprob: -16.875009536743164

Token 65: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -4.36574100604048e-06
    2. '_tw' → logprob: -13.375004768371582
    3. '_' → logprob: -13.625004768371582
    4. 'two' → logprob: -14.375004768371582
    5. '_t' → logprob: -14.875004768371582
    6. ' two' → logprob: -15.625004768371582
    7. '_TWO' → logprob: -16.500003814697266
    8. ' _' → logprob: -16.500003814697266
    9. '_one' → logprob: -16.625003814697266
    10. '_three' → logprob: -17.000003814697266

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269749402999878
    2. '=' → logprob: -2.1269750595092773
    3. '=True' → logprob: -10.126975059509277
    4. ' ' → logprob: -12.126975059509277
    5. '=False' → logprob: -15.251975059509277
    6. ' |=' → logprob: -15.626975059509277
    7. ' True' → logprob: -15.751975059509277
    8. '<|end|>' → logprob: -15.876975059509277
    9. 'True' → logprob: -16.00197410583496
    10. '   ' → logprob: -16.12697410583496

Token 67: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.47407835721969604
    2. ' True' → logprob: -0.974078357219696
    3. '=True' → logprob: -14.099078178405762
    4. '(True' → logprob: -15.099078178405762
    5. 'False' → logprob: -16.099079132080078
    6. '   ' → logprob: -16.099079132080078
    7. '.True' → logprob: -17.474079132080078
    8. 'true' → logprob: -18.599079132080078
    9. ' ' → logprob: -18.724079132080078
    10. 'k' → logprob: -18.849079132080078

Token 68: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20232264697551727
    2. '       ' → logprob: -2.7023227214813232
    3. '
' → logprob: -2.8273227214813232
    4. '<|end|>' → logprob: -3.4523227214813232
    5. '   ' → logprob: -4.077322483062744
    6. ' and' → logprob: -6.702322483062744
    7. '    
' → logprob: -6.827322483062744
    8. '               ' → logprob: -6.952322483062744
    9. ' 
' → logprob: -7.202322483062744
    10. ' ' → logprob: -7.202322483062744

Token 69: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8286945819854736
    2. '<|end|>' → logprob: -0.8286945819854736
    3. '
' → logprob: -2.7036945819854736
    4. '       ' → logprob: -3.3286945819854736
    5. '   ' → logprob: -5.0786943435668945
    6. '<|end|>' → logprob: -5.5786943435668945
    7. '#' → logprob: -5.7036943435668945
    8. '    
' → logprob: -6.0786943435668945
    9. ' 
' → logprob: -7.0786943435668945
    10. '```' → logprob: -7.2036943435668945

Token 70: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2170785516500473
    2. '   ' → logprob: -2.217078447341919
    3. 'if' (adapté à ' if') → logprob: -3.592078447341919
    4. ' ' → logprob: -4.467078685760498
    5. ' max' → logprob: -4.467078685760498
    6. '       ' → logprob: -4.717078685760498
    7. '    ' → logprob: -4.717078685760498
    8. 'max' → logprob: -5.592078685760498
    9. '<|end|>' → logprob: -5.592078685760498
    10. ' else' → logprob: -6.092078685760498

Token 71: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.011519079096615314
    2. ' max' → logprob: -4.636518955230713
    3. 'k' → logprob: -6.511518955230713
    4. 'max' → logprob: -8.761519432067871
    5. ' ' → logprob: -9.636519432067871
    6. ' prizes' → logprob: -11.886519432067871
    7. ' N' → logprob: -12.136519432067871
    8. '   ' → logprob: -12.261519432067871
    9. '    ' → logprob: -12.636519432067871
    10. '>' → logprob: -13.011519432067871

Token 72: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.024913141503930092
    2. '>' → logprob: -3.7749130725860596
    3. ' >=' → logprob: -7.399913311004639
    4. ' ' → logprob: -7.774913311004639
    5. ' %' → logprob: -8.27491283416748
    6. '%' → logprob: -8.64991283416748
    7. ' ==' → logprob: -9.39991283416748
    8. '>=' → logprob: -10.27491283416748
    9. '==' → logprob: -10.52491283416748
    10. ' <' → logprob: -10.77491283416748

Token 73: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.029836570844054222
    2. 'max' → logprob: -3.529836654663086
    3. ' ' → logprob: -10.029836654663086
    4. '0' → logprob: -10.904836654663086
    5. '	max' → logprob: -11.779836654663086
    6. '1' → logprob: -12.904836654663086
    7. '   ' → logprob: -13.029836654663086
    8. '>' → logprob: -13.029836654663086
    9. '=max' → logprob: -13.154836654663086
    10. '2' → logprob: -13.654836654663086

Token 74: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.500000953674316
    3. '_max' → logprob: -14.625000953674316
    4. '_j' → logprob: -17.625001907348633
    5. '_i' → logprob: -18.125001907348633
    6. 'max' → logprob: -18.500001907348633
    7. '_n' → logprob: -18.625001907348633
    8. ' ' → logprob: -18.625001907348633
    9. '_K' → logprob: -18.625001907348633
    10. 'k' → logprob: -18.875001907348633

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02166370488703251
    2. ':
' → logprob: -3.8966636657714844
    3. '=' → logprob: -7.771663665771484
    4. ' :' → logprob: -8.646663665771484
    5. ':max' → logprob: -8.646663665771484
    6. '=max' → logprob: -9.521663665771484
    7. 'max' → logprob: -9.771663665771484
    8. ' =' → logprob: -9.771663665771484
    9. '   ' → logprob: -9.896663665771484
    10. ' max' → logprob: -10.771663665771484

Token 76: '           ' (ID: 352)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.20032018423080444
    2. '           ' → logprob: -2.075320243835449
    3. 'max' → logprob: -3.825320243835449
    4. '   ' → logprob: -3.950320243835449
    5. '       ' → logprob: -4.450320243835449
    6. '=' → logprob: -6.825320243835449
    7. '
' → logprob: -7.825320243835449
    8. ' k' → logprob: -7.950320243835449
    9. ' =' → logprob: -8.45032024383545
    10. '=max' → logprob: -8.45032024383545

Token 77: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.004670426249504089
    2. 'max' (adapté à ' max') → logprob: -5.3796706199646
    3. ' k' → logprob: -10.004670143127441
    4. 'k' → logprob: -12.254670143127441
    5. ' ' → logprob: -16.004671096801758
    6. '=max' → logprob: -17.129671096801758
    7. '_max' → logprob: -17.379671096801758
    8. '	max' → logprob: -17.379671096801758
    9. ' ' → logprob: -18.254671096801758
    10. '(max' → logprob: -18.629671096801758

Token 78: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.5048530030981055e-06
    2. 'k' → logprob: -14.250001907348633
    3. '_' → logprob: -14.500001907348633
    4. '```' → logprob: -15.875001907348633
    5. '_i' → logprob: -16.500001907348633
    6. '_j' → logprob: -16.875001907348633
    7. ' _' → logprob: -17.500001907348633
    8. '_q' → logprob: -17.750001907348633
    9. '=' → logprob: -18.625001907348633
    10. '_x' → logprob: -18.750001907348633

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2016022950410843
    2. '=' → logprob: -1.7016023397445679
    3. '=k' → logprob: -8.5766019821167
    4. ' ' → logprob: -14.5766019821167
    5. '＝' → logprob: -17.076602935791016
    6. ' k' → logprob: -17.826602935791016
    7. 'k' → logprob: -18.201602935791016
    8. ' =
' → logprob: -18.326602935791016
    9. '=int' → logprob: -18.326602935791016
    10. '=

' → logprob: -18.326602935791016

Token 80: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4740773141384125
    2. 'k' → logprob: -0.9740773439407349
    3. ' ' → logprob: -15.599077224731445
    4. '	k' → logprob: -16.099077224731445
    5. ' ' → logprob: -16.974077224731445
    6. ' к' → logprob: -17.474077224731445
    7. '=k' → logprob: -18.599077224731445
    8. '_k' → logprob: -18.849077224731445
    9. '{k' → logprob: -19.286577224731445
    10. 'int' → logprob: -19.286577224731445

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006083084270358086
    2. '<|end|>' → logprob: -5.881083011627197
    3. '    
' → logprob: -7.131083011627197
    4. '   ' → logprob: -7.256083011627197
    5. '  
' → logprob: -7.881083011627197
    6. '
' → logprob: -8.506083488464355
    7. '\n' → logprob: -8.506083488464355
    8. ' if' → logprob: -8.756083488464355
    9. ' 
' → logprob: -9.131083488464355
    10. '```' → logprob: -9.256083488464355

Token 82: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7125813961029053
    2. '   ' → logprob: -0.8375813961029053
    3. '<|end|>' → logprob: -2.7125813961029053
    4. '    
' → logprob: -5.337581634521484
    5. ' if' → logprob: -6.087581634521484
    6. '```' → logprob: -7.087581634521484
    7. '<|end|>' → logprob: -7.337581634521484
    8. '
' → logprob: -8.462581634521484
    9. 'if' → logprob: -8.712581634521484
    10. '  
' → logprob: -8.837581634521484

Token 83: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7657899260520935
    2. 'if' (adapté à ' if') → logprob: -1.2657899856567383
    3. '   ' → logprob: -2.7657899856567383
    4. '
' → logprob: -3.0157899856567383
    5. ' for' → logprob: -3.0157899856567383
    6. 'for' → logprob: -3.8907899856567383
    7. 'print' → logprob: -4.265789985656738
    8. 'i' → logprob: -4.640789985656738
    9. ' i' → logprob: -5.015789985656738
    10. 'n' → logprob: -5.265789985656738

Token 84: ' not' (ID: 625)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.0635092481970787
    2. ' not' → logprob: -3.438509225845337
    3. ' max' → logprob: -3.938509225845337
    4. 'can' → logprob: -4.813509464263916
    5. ' ' → logprob: -7.063509464263916
    6. 'max' → logprob: -7.688509464263916
    7. ' N' → logprob: -9.188508987426758
    8. ' len' → logprob: -9.188508987426758
    9. 'not' → logprob: -9.313508987426758
    10. '   ' → logprob: -9.813508987426758

Token 85: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.0007232757634483278
    2. 'can' → logprob: -7.250723361968994
    3. ' ' → logprob: -12.000722885131836
    4. ' ' → logprob: -12.875722885131836
    5. '	can' → logprob: -13.625722885131836
    6. ' has' → logprob: -14.375722885131836
    7. ' space' → logprob: -14.750722885131836
    8. '(can' → logprob: -14.750722885131836
    9. '_can' → logprob: -15.125722885131836
    10. ' is' → logprob: -15.125722885131836

Token 86: '_get' (ID: 6533)
  Prédit: '_get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_get' → logprob: -1.7432603272027336e-06
    2. ' _' → logprob: -14.875001907348633
    3. '_' → logprob: -15.000001907348633
    4. 'get' → logprob: -15.375001907348633
    5. '_can' → logprob: -16.000001907348633
    6. '_GET' → logprob: -16.000001907348633
    7. '_put' → logprob: -16.500001907348633
    8. '_Get' → logprob: -16.500001907348633
    9. 'Get' → logprob: -16.750001907348633
    10. '_have' → logprob: -16.750001907348633

Token 87: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.00020747410599142313
    2. 'two' → logprob: -8.500207901000977
    3. '_get' → logprob: -13.500207901000977
    4. ' two' → logprob: -14.000207901000977
    5. '_tw' → logprob: -14.500207901000977
    6. '_t' → logprob: -14.750207901000977
    7. '_true' → logprob: -15.000207901000977
    8. 'Two' → logprob: -15.250207901000977
    9. '_TWO' → logprob: -15.625207901000977
    10. 'get' → logprob: -17.375207901000977

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09004167467355728
    2. ':
' → logprob: -2.4650416374206543
    3. ' or' → logprob: -7.840041637420654
    4. '       ' → logprob: -7.965041637420654
    5. '   ' → logprob: -8.715042114257812
    6. ' and' → logprob: -8.840042114257812
    7. ' continue' → logprob: -11.715042114257812
    8. 'continue' → logprob: -11.965042114257812
    9. ' :' → logprob: -12.090042114257812
    10. ' :
' → logprob: -12.340042114257812

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41246718168258667
    2. '   ' → logprob: -1.1624672412872314
    3. 'print' → logprob: -4.412467002868652
    4. ' print' → logprob: -4.912467002868652
    5. '```' → logprob: -5.662467002868652
    6. '    
' → logprob: -7.787467002868652
    7. ':' → logprob: -7.912467002868652
    8. 'continue' → logprob: -8.287467002868652
    9. ' continue' → logprob: -8.662467002868652
    10. '           ' → logprob: -8.912467002868652

Token 90: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2543729245662689
    2. 'print' (adapté à ' print') → logprob: -1.7543729543685913
    3. '   ' → logprob: -3.2543728351593018
    4. ' max' → logprob: -5.129373073577881
    5. ' continue' → logprob: -5.629373073577881
    6. 'max' → logprob: -6.754373073577881
    7. ' break' → logprob: -7.129373073577881
    8. 'continue' → logprob: -7.629373073577881
    9. 'pr' → logprob: -8.254372596740723
    10. ' for' → logprob: -8.379372596740723

Token 91: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10584989190101624
    2. '(max' → logprob: -2.8558499813079834
    3. '('' → logprob: -3.8558499813079834
    4. '("' → logprob: -4.230849742889404
    5. '(-' → logprob: -5.230849742889404
    6. '()' → logprob: -6.855849742889404
    7. ' (' → logprob: -8.480850219726562
    8. '((' → logprob: -9.230850219726562
    9. '(N' → logprob: -9.730850219726562
    10. 'max' → logprob: -9.730850219726562

Token 92: 'NA' (ID: 9555)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5100074410438538
    2. '-' → logprob: -1.135007381439209
    3. '1' → logprob: -3.260007381439209
    4. 'im' → logprob: -5.135007381439209
    5. 'None' → logprob: -5.385007381439209
    6. 'No' → logprob: -5.385007381439209
    7. 'none' → logprob: -5.510007381439209
    8. 'max' → logprob: -6.010007381439209
    9. 'N' → logprob: -6.260007381439209
    10. ' ' → logprob: -6.260007381439209

Token 93: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.210846409201622
    2. 'N' → logprob: -2.960846424102783
    3. 'M' → logprob: -3.210846424102783
    4. ')' → logprob: -3.460846424102783
    5. 'L' → logprob: -4.210846424102783
    6. 'I' → logprob: -4.835846424102783
    7. 'W' → logprob: -4.960846424102783
    8. 'K' → logprob: -5.335846424102783
    9. 'T' → logprob: -6.085846424102783
    10. '"' → logprob: -6.210846424102783

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010216157883405685
    2. ' else' → logprob: -5.510216236114502
    3. '<|end|>' → logprob: -5.760216236114502
    4. 'else' → logprob: -6.510216236114502
    5. '       ' → logprob: -6.885216236114502
    6. '```' → logprob: -9.010215759277344
    7. '    
' → logprob: -9.885215759277344
    8. ' ' → logprob: -10.010215759277344
    9. ')' → logprob: -10.510215759277344
    10. 'elif' → logprob: -10.635215759277344

Token 95: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022800812497735023
    2. 'else' (adapté à ' else') → logprob: -4.397800922393799
    3. ' else' → logprob: -4.647800922393799
    4. '<|end|>' → logprob: -8.64780044555664
    5. 'elif' → logprob: -9.27280044555664
    6. '	else' → logprob: -9.52280044555664
    7. '```' → logprob: -9.52280044555664
    8. ' ' → logprob: -9.64780044555664
    9. '       ' → logprob: -9.77280044555664
    10. ' elif' → logprob: -10.14780044555664

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01480935700237751
    2. '       ' → logprob: -4.8898091316223145
    3. ':
' → logprob: -5.0148091316223145
    4. '   ' → logprob: -8.139809608459473
    5. '    ' → logprob: -9.014809608459473
    6. ' :' → logprob: -10.764809608459473
    7. ',' → logprob: -10.764809608459473
    8. ' print' → logprob: -11.139809608459473
    9. '        ' → logprob: -11.389809608459473
    10. '<|end|>' → logprob: -11.639809608459473

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13043612241744995
    2. '   ' → logprob: -2.3804361820220947
    3. '    ' → logprob: -3.7554361820220947
    4. ' ' → logprob: -6.380435943603516
    5. '<|end|>' → logprob: -6.755435943603516
    6. '    
' → logprob: -7.380435943603516
    7. ' 
' → logprob: -8.130435943603516
    8. '     ' → logprob: -8.255435943603516
    9. ' "' → logprob: -8.505435943603516
    10. '        
' → logprob: -8.630435943603516

Token 98: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4868076741695404
    2. 'print' → logprob: -1.3618077039718628
    3. ' max' → logprob: -2.3618075847625732
    4. ' for' → logprob: -4.861807823181152
    5. 'max' → logprob: -4.986807823181152
    6. 'count' → logprob: -5.611807823181152
    7. ' sum' → logprob: -5.861807823181152
    8. '    ' → logprob: -6.486807823181152
    9. ' count' → logprob: -6.486807823181152
    10. '   ' → logprob: -6.611807823181152

Token 99: ' minimum' (ID: 11085)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6947163939476013
    2. ' for' → logprob: -1.444716453552246
    3. 'max' → logprob: -2.694716453552246
    4. 'for' → logprob: -3.944716453552246
    5. ' ans' → logprob: -3.944716453552246
    6. ' print' → logprob: -3.944716453552246
    7. 'pr' → logprob: -4.069716453552246
    8. 'print' → logprob: -4.819716453552246
    9. ' count' → logprob: -4.819716453552246
    10. ' sum' → logprob: -4.819716453552246

Token 100: ' challenges' (ID: 13525)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5591382384300232
    2. 'k' → logprob: -1.184138298034668
    3. 'pr' → logprob: -3.559138298034668
    4. ' =' → logprob: -4.184138298034668
    5. 'possible' → logprob: -4.434138298034668
    6. '_' → logprob: -4.559138298034668
    7. ' possible' → logprob: -5.059138298034668
    8. ' x' → logprob: -5.184138298034668
    9. '=' → logprob: -5.559138298034668
    10. ' number' → logprob: -5.684138298034668

Token 101: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3702951669692993
    2. '_' → logprob: -1.6202951669692993
    3. ' =' → logprob: -1.6202951669692993
    4. '    ' → logprob: -1.9952951669692993
    5. '   ' → logprob: -2.1202950477600098
    6. '       ' → logprob: -3.7452950477600098
    7. '=' → logprob: -3.8702950477600098
    8. ' _' → logprob: -4.99529504776001
    9. '_needed' → logprob: -5.24529504776001
    10. ':' → logprob: -5.49529504776001

Token 102: ' total' (ID: 3609)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3959179222583771
    2. 'max' → logprob: -1.5209178924560547
    3. '(max' → logprob: -2.7709178924560547
    4. ' (' → logprob: -3.7709178924560547
    5. ' ' → logprob: -4.645917892456055
    6. '1' → logprob: -4.770917892456055
    7. '2' → logprob: -5.895917892456055
    8. '(' → logprob: -7.770917892456055
    9. ' min' → logprob: -7.770917892456055
    10. 'min' → logprob: -8.395917892456055

Token 103: ' prizes' (ID: 44917)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.12938791513442993
    2. ' -' → logprob: -3.004387855529785
    3. 'sum' → logprob: -3.004387855529785
    4. '-' → logprob: -5.129387855529785
    5. ' //' → logprob: -5.129387855529785
    6. '_pr' → logprob: -5.504387855529785
    7. '_sum' → logprob: -7.004387855529785
    8. '(sum' → logprob: -7.004387855529785
    9. '//' → logprob: -7.129387855529785
    10. ' sum' → logprob: -7.504387855529785

Token 104: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3467169404029846
    2. ' //' → logprob: -2.47171688079834
    3. '-' → logprob: -2.72171688079834
    4. 'sum' → logprob: -3.59671688079834
    5. '    ' → logprob: -3.84671688079834
    6. '   ' → logprob: -4.09671688079834
    7. '//' → logprob: -4.34671688079834
    8. ' ' → logprob: -4.47171688079834
    9. '+' → logprob: -4.72171688079834
    10. ' +' → logprob: -4.84671688079834

Token 105: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3249996304512024
    2. 'max' → logprob: -1.3249995708465576
    3. ' ' → logprob: -5.074999809265137
    4. '2' → logprob: -5.449999809265137
    5. '1' → logprob: -7.324999809265137
    6. '(max' → logprob: -8.574999809265137
    7. ' (' → logprob: -9.324999809265137
    8. ' sum' → logprob: -10.074999809265137
    9. '(' → logprob: -10.324999809265137
    10. 'pr' → logprob: -10.449999809265137

Token 106: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.2741880714893341
    2. '(' → logprob: -2.2741880416870117
    3. '_' → logprob: -2.5241880416870117
    4. '(pr' → logprob: -3.1491880416870117
    5. '(max' → logprob: -5.149188041687012
    6. '_pr' → logprob: -5.524188041687012
    7. 'pr' → logprob: -6.774188041687012
    8. ' _' → logprob: -7.399188041687012
    9. '_p' → logprob: -7.774188041687012
    10. '(k' → logprob: -7.899188041687012

Token 107: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5162293314933777
    2. '
' → logprob: -1.3912293910980225
    3. '   ' → logprob: -2.7662293910980225
    4. '<|end|>' → logprob: -3.2662293910980225
    5. '+' → logprob: -3.8912293910980225
    6. ' +' → logprob: -4.266229152679443
    7. ')' → logprob: -5.016229152679443
    8. 'print' → logprob: -6.141229152679443
    9. ' ' → logprob: -6.266229152679443
    10. '<|end|>' → logprob: -6.766229152679443

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10679815709590912
    2. '2' → logprob: -2.3567981719970703
    3. ' ' → logprob: -5.10679817199707
    4. 'max' → logprob: -8.35679817199707
    5. ' max' → logprob: -9.60679817199707
    6. '(' → logprob: -9.98179817199707
    7. 'k' → logprob: -10.23179817199707
    8. ' (' → logprob: -10.60679817199707
    9. '(max' → logprob: -10.85679817199707
    10. 'min' → logprob: -11.10679817199707

Token 109: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06254980713129044
    2. '2' → logprob: -2.8125498294830322
    3. '(' → logprob: -8.687549591064453
    4. ' ' → logprob: -8.812549591064453
    5. 'max' → logprob: -9.687549591064453
    6. '(max' → logprob: -10.562549591064453
    7. 'k' → logprob: -10.687549591064453
    8. '(N' → logprob: -10.687549591064453
    9. '(pr' → logprob: -10.812549591064453
    10. 'pr' → logprob: -10.937549591064453

Token 110: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8034651279449463
    2. '<|end|>' → logprob: -1.3034651279449463
    3. '\n' → logprob: -2.3034651279449463
    4. '
' → logprob: -2.6784651279449463
    5. ')' → logprob: -2.9284651279449463
    6. '   ' → logprob: -3.9284651279449463
    7. ' ' → logprob: -4.678464889526367
    8. '+' → logprob: -5.553464889526367
    9. '```' → logprob: -5.803464889526367
    10. ' 
' → logprob: -6.178464889526367

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.699822187423706
    2. '   ' → logprob: -0.824822187423706
    3. '
' → logprob: -3.574822187423706
    4. '\n' → logprob: -4.324822425842285
    5. ' 
' → logprob: -5.324822425842285
    6. ')' → logprob: -5.574822425842285
    7. ' ' → logprob: -5.824822425842285
    8. '    
' → logprob: -5.824822425842285
    9. 'print' → logprob: -6.449822425842285
    10. '        
' → logprob: -6.449822425842285

Token 112: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02704513445496559
    2. 'total' (adapté à ' total') → logprob: -4.027045249938965
    3. ' print' → logprob: -5.277045249938965
    4. '   ' → logprob: -5.902045249938965
    5. ' total' → logprob: -7.777045249938965
    6. '       ' → logprob: -7.777045249938965
    7. 'min' → logprob: -9.152045249938965
    8. 'pr' → logprob: -10.777045249938965
    9. 'n' → logprob: -11.777045249938965
    10. 'count' → logprob: -11.902045249938965

Token 113: ' =' (ID: 314)
  Prédit: '_pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.08263736218214035
    2. '_' → logprob: -2.957637310028076
    3. 'pr' → logprob: -4.332637310028076
    4. ' =' → logprob: -4.707637310028076
    5. '=' → logprob: -5.332637310028076
    6. '_ch' → logprob: -9.082637786865234
    7. '_points' → logprob: -9.582637786865234
    8. ' _' → logprob: -9.707637786865234
    9. '_p' → logprob: -10.582637786865234
    10. '_tokens' → logprob: -10.832637786865234

Token 114: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.12695057690143585
    2. 'sum' → logprob: -2.12695050239563
    3. ' len' → logprob: -11.50195026397705
    4. 'len' → logprob: -11.87695026397705
    5. '(sum' → logprob: -13.00195026397705
    6. ' ' → logprob: -13.62695026397705
    7. '   ' → logprob: -14.12695026397705
    8. '	sum' → logprob: -14.75195026397705
    9. '    ' → logprob: -15.12695026397705
    10. '=sum' → logprob: -16.001951217651367

Token 115: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.001710401731543243
    2. '(' → logprob: -6.376710414886475
    3. 'pr' → logprob: -12.001709938049316
    4. '(pl' → logprob: -14.376709938049316
    5. '	pr' → logprob: -14.501709938049316
    6. '(
' → logprob: -15.001709938049316
    7. ' (' → logprob: -15.376709938049316
    8. ')' → logprob: -15.751709938049316
    9. '(p' → logprob: -16.876710891723633
    10. '()' → logprob: -17.501710891723633

Token 116: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -0.0007983117830008268
    2. 'pr' → logprob: -7.500798225402832
    3. 'IZES' → logprob: -9.125798225402832
    4. '(pr' → logprob: -9.500798225402832
    5. '[' → logprob: -10.875798225402832
    6. 'iz' → logprob: -11.000798225402832
    7. 'zes' → logprob: -12.000798225402832
    8. '```' → logprob: -12.250798225402832
    9. ' prizes' → logprob: -12.875798225402832
    10. 'ize' → logprob: -12.875798225402832

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003190905088558793
    2. ' -' → logprob: -6.628190994262695
    3. ' )' → logprob: -7.003190994262695
    4. ')
' → logprob: -7.378190994262695
    5. '<|end|>' → logprob: -8.628190994262695
    6. ')-' → logprob: -9.628190994262695
    7. '-' → logprob: -10.753190994262695
    8. '<|end|>' → logprob: -10.878190994262695
    9. '   ' → logprob: -11.253190994262695
    10. '       ' → logprob: -11.878190994262695

Token 118: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08982408791780472
    2. '       ' → logprob: -2.5898241996765137
    3. '<|end|>' → logprob: -5.964824199676514
    4. ' 
' → logprob: -6.089824199676514
    5. '        
' → logprob: -6.714824199676514
    6. '   ' → logprob: -6.839824199676514
    7. 'print' → logprob: -7.089824199676514
    8. '
' → logprob: -7.214824199676514
    9. '  
' → logprob: -7.964824199676514
    10. '+' → logprob: -7.964824199676514

Token 119: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04397948086261749
    2. ' print' → logprob: -3.1689794063568115
    3. 'min' → logprob: -7.918979644775391
    4. '       ' → logprob: -8.04397964477539
    5. 'result' → logprob: -9.16897964477539
    6. '
' → logprob: -9.79397964477539
    7. 'minimum' → logprob: -9.91897964477539
    8. ' min' → logprob: -10.79397964477539
    9. '   ' → logprob: -11.04397964477539
    10. '```' → logprob: -11.16897964477539

Token 120: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3925923705101013
    2. '(total' → logprob: -1.142592430114746
    3. '("' → logprob: -5.267592430114746
    4. ' (' → logprob: -8.767592430114746
    5. '('' → logprob: -8.892592430114746
    6. '(f' → logprob: -9.017592430114746
    7. '("("' → logprob: -10.142592430114746
    8. 'total' → logprob: -10.267592430114746
    9. '((' → logprob: -10.267592430114746
    10. '()' → logprob: -11.517592430114746

Token 121: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2873065173625946
    2. '-' → logprob: -1.412306547164917
    3. ')' → logprob: -5.162306308746338
    4. ',' → logprob: -8.787306785583496
    5. ' )' → logprob: -9.662306785583496
    6. ' ' → logprob: -9.787306785583496
    7. ' ,' → logprob: -10.287306785583496
    8. '-end' → logprob: -10.287306785583496
    9. '+' → logprob: -10.537306785583496
    10. '))' → logprob: -11.662306785583496

Token 122: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0067156096920371056
    2. ' max' → logprob: -5.006715774536133
    3. '(max' → logprob: -15.131715774536133
    4. '[max' → logprob: -19.506715774536133
    5. '	max' → logprob: -19.506715774536133
    6. '_max' → logprob: -20.131715774536133
    7. ' ' → logprob: -20.506715774536133
    8. ',max' → logprob: -21.006715774536133
    9. '=max' → logprob: -21.256715774536133
    10. 'maxlength' → logprob: -21.881715774536133

Token 123: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -2.339278580620885e-06
    2. 'k' → logprob: -13.500001907348633
    3. '_max' → logprob: -14.750001907348633
    4. 'max' → logprob: -15.750001907348633
    5. '_q' → logprob: -16.500001907348633
    6. '_tokens' → logprob: -17.125001907348633
    7. '_j' → logprob: -17.250001907348633
    8. '```' → logprob: -17.750001907348633
    9. '_' → logprob: -17.875001907348633
    10. ''_' → logprob: -18.000001907348633

Token 124: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740929901599884
    2. '+' → logprob: -0.974092960357666
    3. ')' → logprob: -11.849093437194824
    4. ' ' → logprob: -12.224093437194824
    5. '   ' → logprob: -13.474093437194824
    6. '+
' → logprob: -14.849093437194824
    7. '       ' → logprob: -15.099093437194824
    8. '    ' → logprob: -15.224093437194824
    9. ' +
' → logprob: -15.224093437194824
    10. ' plus' → logprob: -15.349093437194824

Token 125: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028115289751440287
    2. ' ' → logprob: -5.877811431884766
    3. '1' → logprob: -12.252811431884766
    4. '```' → logprob: -13.752811431884766
    5. '"' → logprob: -14.502811431884766
    6. '`' → logprob: -15.877811431884766
    7. ''' → logprob: -15.877811431884766
    8. '3' → logprob: -16.502811431884766
    9. ' ' → logprob: -17.002811431884766
    10. '   ' → logprob: -17.502811431884766

Token 126: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -16.750009536743164
    4. '"' → logprob: -17.375009536743164
    5. '   ' → logprob: -17.625009536743164
    6. '1' → logprob: -18.000009536743164
    7. ''' → logprob: -18.500009536743164
    8. '`' → logprob: -18.625009536743164
    9. '  ' → logprob: -20.000009536743164
    10. '２' → logprob: -20.875009536743164

Token 127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. '))' → logprob: -12.375007629394531
    3. ' )' → logprob: -13.375007629394531
    4. '`)' → logprob: -14.125007629394531
    5. ')
' → logprob: -14.500007629394531
    6. ')`' → logprob: -14.750007629394531
    7. '')' → logprob: -16.00000762939453
    8. ')")' → logprob: -16.50000762939453
    9. '")' → logprob: -17.00000762939453
    10. '   ' → logprob: -17.12500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 125
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 107
Précision stricte (1ère position): 47.20%
Précision adaptée (1ère position): 48.80%
Précision (top 10): 85.60%
================================================================================
