================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Set, Dict, Tuple

class Cell:
    def __init__(self, name: str, value: int):
        self.name = name
        self.value = value  # -1 if unknown, else digit 1..9
        self.possible_values: Set[int] = set() if value == -1 else {value}

    def is_assigned(self) -> bool:
        return self.value != -1

    def assign(self, val: int):
        self.value = val
        self.possible_values = {val}

    def unassign(self):
        self.value = -1
        self.possible_values = set()

class ArithmeticPuzzle:
    def __init__(self, values: List[int]):
        # Map from cell name to Cell instance
        self.cells: Dict[str, Cell] = {}
        # Cells in order A to I
        names = ['A','B','C','D','E','F','G','H','I']
        for i, name in enumerate(names):
            self.cells[name] = Cell(name, values[i])
        # Set of used digits (from assigned cells)
        self.used_digits: Set[int] = set()
        for cell in self.cells.values():
            if cell.is_assigned():
                self.used_digits.add(cell.value)
        # Will set possible values for unassigned cells
        self.update_possibilities()
        self.solutions_count = 0

    def update_possibilities(self):
        available_digits = set(range(1,10)) - self.used_digits
        for cell in self.cells.values():
            if not cell.is_assigned():
                cell.possible_values = available_digits.copy()

    def check_unique_digits(self) -> bool:
        # Check that assigned digits are unique and in 1..9
        digits = [c.value for c in self.cells.values() if c.is_assigned()]
        return len(set(digits)) == len(digits) and all(1 <= d <= 9 for d in digits)

    def arithmetic_constraints_valid(self) -> bool:
        c = self.cells
        # Columns:
        # units digit: I == (C + F) mod 10
        # tens digit: H == (B + E + carry1) mod 10
        # hundreds digit: G == (A + D + carry2)
        # carry1 = ((C + F) // 10)
        # carry2 = ((B + E + carry1) // 10)
        # Since all inputs and digits are 1..9 or -1, we check consistency only if values assigned
        def val(x):
            return c[x].value if c[x].is_assigned() else None
        C, F, I = val('C'), val('F'), val('I')
        B, E, H = val('B'), val('E'), val('H')
        A, D, G = val('A'), val('D'), val('G')

        # If any digit in sum is missing, can't fully verify, but do partial checks
        # We'll check all possible partial consistencies to prune search space

        # Units place
        if all(v is not None for v in (C,F,I)):
            s = C + F
            if s % 10 != I:
                return False
            carry1 = s // 10
        elif None not in (C,F) and I is not None:
            # I is assigned but sum incomplete? Try all possible carry1
            s = C + F
            if s % 10 != I:
                return False
            carry1 = s // 10
        else:
            carry1 = None

        # Tens place
        if all(v is not None for v in (B,E,H)) and carry1 is not None:
            s = B + E + carry1
            if s % 10 != H:
                return False
            carry2 = s // 10
        elif None not in (B,E,H) and carry1 is not None:
            s = B + E + carry1
            if s % 10 != H:
                return False
            carry2 = s // 10
        else:
            carry2 = None

        # Hundreds place
        if all(v is not None for v in (A,D,G)) and carry2 is not None:
            if A + D + carry2 != G:
                return False
        elif None not in (A,D,G) and carry2 is not None:
            if A + D + carry2 != G:
                return False

        return True

    def is_valid_assignment(self) -> bool:
        if not self.check_unique_digits():
            return False
        if not self.arithmetic_constraints_valid():
            return False
        return True

    def get_unassigned_cell_with_fewest_possibilities(self) -> Cell:
        # Heuristic: choose unassigned cell with least candidates -> reduce branching
        candidates = [c for c in self.cells.values() if not c.is_assigned()]
        candidates.sort(key=lambda c: len(c.possible_values))
        return candidates[0] if candidates else None

    def assign_and_update(self, cell: Cell, value: int) -> bool:
        cell.assign(value)
        self.used_digits.add(value)
        # Update possible digits for others:
        self.update_possibilities()
        return True

    def unassign_cell(self, cell: Cell):
        self.used_digits.discard(cell.value)
        cell.unassign()
        self.update_possibilities()

    def solve(self) -> int:
        # Backtracking search counting number of valid solutions
        if not self.is_valid_assignment():
            return 0
        unassigned_cell = self.get_unassigned_cell_with_fewest_possibilities()
        if unassigned_cell is None:
            # All assigned and valid -> one solution
            return 1
        count = 0
        for val in sorted(unassigned_cell.possible_values):
            # Try assigning val
            self.assign_and_update(unassigned_cell, val)
            if self.arithmetic_constraints_valid():
                count += self.solve()
            self.unassign_cell(unassigned_cell)
        return count

def main():
    import sys
    values = list(map(int, sys.stdin.read().strip().split()))
    puzzle = ArithmeticPuzzle(values)
    print(puzzle.solve())

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.014572078362107277
    2. ' Any' → logprob: -5.0145721435546875
    3. 'List' → logprob: -5.2645721435546875
    4. ' Optional' → logprob: -6.5145721435546875
    5. ' Union' → logprob: -7.6395721435546875
    6. 'Any' → logprob: -7.7645721435546875
    7. ' Generator' → logprob: -8.889572143554688
    8. 'Optional' → logprob: -10.389572143554688
    9. ' Iterable' → logprob: -10.514572143554688
    10. ' ' → logprob: -10.889572143554688

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.38013091683387756
    2. 'def' → logprob: -2.0051310062408447
    3. '\n' → logprob: -3.3801310062408447
    4. '<|end|>' → logprob: -3.5051310062408447
    5. '[' → logprob: -4.005130767822266
    6. '
' → logprob: -4.005130767822266
    7. '\' → logprob: -4.130130767822266
    8. ',' → logprob: -4.130130767822266
    9. 'import' → logprob: -4.255130767822266
    10. '<|end|>' → logprob: -5.380130767822266

Token 5: ' Set' (ID: 3957)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.40772536396980286
    2. 'Optional' → logprob: -1.1577253341674805
    3. ' Dict' → logprob: -4.7827253341674805
    4. 'Dict' → logprob: -4.9077253341674805
    5. 'Tuple' → logprob: -5.7827253341674805
    6. ' Tuple' → logprob: -7.0327253341674805
    7. ' Union' → logprob: -7.4077253341674805
    8. 'Union' → logprob: -9.28272533416748
    9. 'Iterable' → logprob: -10.03272533416748
    10. 'Any' → logprob: -10.53272533416748

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46336260437965393
    2. '```' → logprob: -1.5883625745773315
    3. '[' → logprob: -2.088362693786621
    4. 'def' → logprob: -3.713362693786621
    5. '(' → logprob: -5.838362693786621
    6. ':' → logprob: -5.963362693786621
    7. 'import' → logprob: -6.213362693786621
    8. '`' → logprob: -6.213362693786621
    9. '\' → logprob: -6.213362693786621
    10. '\[' → logprob: -6.338362693786621

Token 7: ' Dict' (ID: 55179)
  Prédit: ' Dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.006153219845145941
    2. 'Dict' → logprob: -5.506153106689453
    3. ' Tuple' → logprob: -6.256153106689453
    4. 'Tuple' → logprob: -9.506153106689453
    5. ' ' → logprob: -10.756153106689453
    6. ' Optional' → logprob: -10.881153106689453
    7. ' defaultdict' → logprob: -11.256153106689453
    8. ' Union' → logprob: -11.631153106689453
    9. ' Callable' → logprob: -12.131153106689453
    10. ' dict' → logprob: -12.756153106689453

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09400080889463425
    2. 'def' → logprob: -3.594000816345215
    3. '[' → logprob: -3.719000816345215
    4. ':' → logprob: -4.594000816345215
    5. '```' → logprob: -4.594000816345215
    6. 'import' → logprob: -5.094000816345215
    7. '(' → logprob: -5.969000816345215
    8. 'a' → logprob: -6.219000816345215
    9. '.' → logprob: -6.344000816345215
    10. '<|end|>' → logprob: -6.844000816345215

Token 9: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.034637290984392166
    2. 'Any' → logprob: -4.284637451171875
    3. 'Optional' → logprob: -5.034637451171875
    4. 'Union' → logprob: -5.034637451171875
    5. ' Tuple' → logprob: -5.534637451171875
    6. 'Iterable' → logprob: -6.034637451171875
    7. 'Default' → logprob: -7.909637451171875
    8. 'Callable' → logprob: -8.784637451171875
    9. ' Union' → logprob: -8.909637451171875
    10. ' Optional' → logprob: -9.909637451171875

Token 10: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2984713315963745
    2. 'def' → logprob: -2.798471450805664
    3. 'import' → logprob: -2.923471450805664
    4. ':' → logprob: -3.173471450805664
    5. '```' → logprob: -3.298471450805664
    6. '(' → logprob: -4.048471450805664
    7. '[' → logprob: -4.423471450805664
    8. 'a' → logprob: -4.423471450805664
    9. '<|end|>' → logprob: -4.923471450805664
    10. '.' → logprob: -5.423471450805664

Token 11: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18763837218284607
    2. 'd' → logprob: -2.437638282775879
    3. 'import' → logprob: -4.062638282775879
    4. 'from' → logprob: -4.187638282775879
    5. ',' → logprob: -4.562638282775879
    6. '[' → logprob: -4.562638282775879
    7. '```' → logprob: -4.812638282775879
    8. ':' → logprob: -5.437638282775879
    9. '#' → logprob: -5.687638282775879
    10. 'D' → logprob: -5.687638282775879

Token 12: ' Cell' (ID: 23050)
  Prédit: ' My'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' My' → logprob: -0.09595682471990585
    2. ' ' → logprob: -2.595956802368164
    3. ' Data' → logprob: -4.845956802368164
    4. ' User' → logprob: -5.845956802368164
    5. ' Space' → logprob: -7.095956802368164
    6. ' A' → logprob: -7.595956802368164
    7. ' Sample' → logprob: -7.595956802368164
    8. ' Example' → logprob: -7.720956802368164
    9. ' Parser' → logprob: -7.720956802368164
    10. ' Vector' → logprob: -7.845956802368164

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004133372567594051
    2. '(' → logprob: -5.504133224487305
    3. ' :' → logprob: -11.004133224487305
    4. '```' → logprob: -11.879133224487305
    5. '(Cell' → logprob: -12.004133224487305
    6. '):' → logprob: -12.379133224487305
    7. '(:' → logprob: -13.129133224487305
    8. '():' → logprob: -13.129133224487305
    9. '<Cell' → logprob: -13.129133224487305
    10. ',' → logprob: -13.254133224487305

Token 14: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09096583724021912
    2. '   ' → logprob: -2.465965747833252
    3. '(' → logprob: -6.840965747833252
    4. '```' → logprob: -7.465965747833252
    5. ':
' → logprob: -8.84096622467041
    6. 'def' → logprob: -10.09096622467041
    7. '():' → logprob: -10.46596622467041
    8. '  ' → logprob: -10.59096622467041
    9. '    ' → logprob: -10.84096622467041
    10. '<|end|>' → logprob: -10.96596622467041

Token 15: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5901896953582764
    2. '   ' → logprob: -1.0901896953582764
    3. 'def' (adapté à ' def') → logprob: -2.2151896953582764
    4. '    ' → logprob: -8.715189933776855
    5. '```' → logprob: -9.215189933776855
    6. 'class' → logprob: -9.340189933776855
    7. ' pass' → logprob: -9.590189933776855
    8. '__' → logprob: -11.340189933776855
    9. '    
' → logprob: -11.590189933776855
    10. '_' → logprob: -11.715189933776855

Token 16: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0023509073071181774
    2. ' _' → logprob: -6.502350807189941
    3. ' init' → logprob: -8.252350807189941
    4. ' ' → logprob: -8.627350807189941
    5. '_init' → logprob: -9.002350807189941
    6. '_' → logprob: -9.502350807189941
    7. '__' → logprob: -9.752350807189941
    8. 'inition' → logprob: -9.752350807189941
    9. 'itialize' → logprob: -10.252350807189941
    10. 'init' → logprob: -11.752350807189941

Token 17: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.5
    3. 'ini' → logprob: -18.0
    4. '_init' → logprob: -18.5
    5. 'inite' → logprob: -19.25
    6. '	init' → logprob: -20.875
    7. 'int' → logprob: -20.875
    8. 'innit' → logprob: -21.25
    9. 'in' → logprob: -21.375
    10. '-init' → logprob: -21.75

Token 18: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.24086891114711761
    2. '(' → logprob: -2.1158688068389893
    3. '(self' → logprob: -3.1158688068389893
    4. ' (' → logprob: -3.8658688068389893
    5. '__' → logprob: -4.490869045257568
    6. '<|end|>' → logprob: -4.990869045257568
    7. '__(
' → logprob: -5.365869045257568
    8. '_(' → logprob: -6.740869045257568
    9. '__((' → logprob: -7.240869045257568
    10. '_' → logprob: -7.240869045257568

Token 19: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001177608733996749
    2. ' self' → logprob: -6.751177787780762
    3. ')' → logprob: -11.876177787780762
    4. '(self' → logprob: -16.001176834106445
    5. 'cell' → logprob: -16.126176834106445
    6. ' ' → logprob: -16.376176834106445
    7. '   ' → logprob: -17.126176834106445
    8. '0' → logprob: -17.501176834106445
    9. 'value' → logprob: -17.501176834106445
    10. ' )' → logprob: -17.751176834106445

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08876015245914459
    2. ' ,' → logprob: -2.5887601375579834
    3. 'self' → logprob: -5.0887603759765625
    4. ')' → logprob: -6.0887603759765625
    5. ' self' → logprob: -7.4637603759765625
    6. ' )' → logprob: -8.338760375976562
    7. ',self' → logprob: -8.713760375976562
    8. '<|end|>' → logprob: -8.713760375976562
    9. '_self' → logprob: -9.838760375976562
    10. '_,' → logprob: -9.838760375976562

Token 21: ' name' (ID: 1308)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.7600889801979065
    2. ' self' → logprob: -1.0100889205932617
    3. ' row' → logprob: -2.3850889205932617
    4. 'self' → logprob: -3.6350889205932617
    5. ' x' → logprob: -4.010088920593262
    6. 'value' → logprob: -4.385088920593262
    7. ' state' → logprob: -5.010088920593262
    8. ' )' → logprob: -5.635088920593262
    9. 'row' → logprob: -6.135088920593262
    10. ' content' → logprob: -6.260088920593262

Token 22: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.769960880279541
    2. ':' → logprob: -0.894960880279541
    3. ',' → logprob: -2.144960880279541
    4. ')' → logprob: -4.519960880279541
    5. ' ,' → logprob: -9.394960403442383
    6. '_name' → logprob: -9.769960403442383
    7. ' :' → logprob: -9.769960403442383
    8. '):
' → logprob: -10.019960403442383
    9. ' ):' → logprob: -10.144960403442383
    10. '<|end|>' → logprob: -10.644960403442383

Token 23: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.018168320879340172
    2. 'str' → logprob: -4.0181684494018555
    3. ')' → logprob: -11.143168449401855
    4. '[str' → logprob: -13.518168449401855
    5. ' )' → logprob: -14.018168449401855
    6. ':str' → logprob: -14.518168449401855
    7. 'Str' → logprob: -15.268168449401855
    8. '	str' → logprob: -15.268168449401855
    9. ' ' → logprob: -15.768168449401855
    10. ' List' → logprob: -16.01816749572754

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34174609184265137
    2. '):' → logprob: -1.4667460918426514
    3. ')' → logprob: -2.8417460918426514
    4. ' ,' → logprob: -8.34174633026123
    5. ':' → logprob: -9.59174633026123
    6. '<|end|>' → logprob: -10.09174633026123
    7. '):
' → logprob: -10.21674633026123
    8. ' ):' → logprob: -11.09174633026123
    9. ')->' → logprob: -11.21674633026123
    10. '   ' → logprob: -11.21674633026123

Token 25: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.0226200632750988
    2. ' position' → logprob: -4.89762020111084
    3. 'value' → logprob: -6.39762020111084
    4. ' coordinates' → logprob: -6.64762020111084
    5. ' row' → logprob: -6.89762020111084
    6. ' ' → logprob: -6.89762020111084
    7. ' neighbors' → logprob: -6.89762020111084
    8. ' values' → logprob: -7.02262020111084
    9. ' type' → logprob: -7.02262020111084
    10. ' data' → logprob: -7.02262020111084

Token 26: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015691181644797325
    2. '):' → logprob: -4.26569128036499
    3. ')' → logprob: -7.51569128036499
    4. '=' → logprob: -7.64069128036499
    5. '=None' → logprob: -7.76569128036499
    6. ' ):' → logprob: -9.890690803527832
    7. ' :' → logprob: -11.265690803527832
    8. ' =' → logprob: -12.390690803527832
    9. ' )' → logprob: -12.390690803527832
    10. ',' → logprob: -12.890690803527832

Token 27: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.056743815541267395
    2. 'int' → logprob: -2.931743860244751
    3. ' str' → logprob: -6.806743621826172
    4. ' any' → logprob: -8.431743621826172
    5. ' None' → logprob: -8.931743621826172
    6. ' ' → logprob: -9.306743621826172
    7. ' object' → logprob: -9.431743621826172
    8. ')' → logprob: -9.931743621826172
    9. 'str' → logprob: -10.056743621826172
    10. ' float' → logprob: -10.431743621826172

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043282683938741684
    2. ')' → logprob: -3.1682827472686768
    3. ',' → logprob: -8.293282508850098
    4. ':' → logprob: -11.418282508850098
    5. '   ' → logprob: -11.668282508850098
    6. '):
' → logprob: -11.918282508850098
    7. '=' → logprob: -13.043282508850098
    8. ' ):' → logprob: -13.168282508850098
    9. ' ' → logprob: -14.543282508850098
    10. '=None' → logprob: -14.668282508850098

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011297856457531452
    2. '):' → logprob: -5.386297702789307
    3. ':' → logprob: -5.761297702789307
    4. ')' → logprob: -5.886297702789307
    5. 'self' → logprob: -7.761297702789307
    6. '   ' → logprob: -9.261298179626465
    7. '):
' → logprob: -9.511298179626465
    8. ',' → logprob: -10.761298179626465
    9. '```' → logprob: -11.011298179626465
    10. ' self' → logprob: -11.261298179626465

Token 30: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.45132455229759216
    2. ' self' → logprob: -1.3263245820999146
    3. '       ' → logprob: -2.326324462890625
    4. ' ' → logprob: -9.951324462890625
    5. '   ' → logprob: -10.826324462890625
    6. '_self' → logprob: -11.326324462890625
    7. '	self' → logprob: -12.076324462890625
    8. ' ' → logprob: -12.576324462890625
    9. '<|end|>' → logprob: -12.826324462890625
    10. '```' → logprob: -13.076324462890625

Token 31: '.name' (ID: 4834)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6934317350387573
    2. '.name' → logprob: -0.6934317350387573
    3. ' .' → logprob: -8.693431854248047
    4. '.value' → logprob: -9.943431854248047
    5. 'name' → logprob: -10.943431854248047
    6. '.Name' → logprob: -11.068431854248047
    7. '.n' → logprob: -11.568431854248047
    8. '.user' → logprob: -12.693431854248047
    9. '._' → logprob: -12.693431854248047
    10. '<|end|>' → logprob: -12.818431854248047

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44464990496635437
    2. '=' → logprob: -1.3196499347686768
    3. '<|end|>' → logprob: -2.8196499347686768
    4. ' ' → logprob: -3.5696499347686768
    5. ')' → logprob: -6.444649696350098
    6. '<|end|>' → logprob: -6.694649696350098
    7. ' )' → logprob: -8.319649696350098
    8. ' =)' → logprob: -8.819649696350098
    9. '.' → logprob: -8.944649696350098
    10. ',' → logprob: -8.944649696350098

Token 33: ' name' (ID: 1308)
  Prédit: ' name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.25193437933921814
    2. 'name' → logprob: -1.5019344091415405
    3. ' ' → logprob: -13.001934051513672
    4. 'value' → logprob: -13.626934051513672
    5. ' value' → logprob: -14.251934051513672
    6. '	name' → logprob: -14.376934051513672
    7. ' ' → logprob: -15.126934051513672
    8. ''name' → logprob: -16.626934051513672
    9. '    ' → logprob: -16.751934051513672
    10. '"name' → logprob: -16.751934051513672

Token 34: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.799632728099823
    2. '
' → logprob: -0.924632728099823
    3. '<|end|>' → logprob: -1.9246327877044678
    4. ' 
' → logprob: -5.549632549285889
    5. '        
' → logprob: -6.549632549285889
    6. '        ' → logprob: -7.174632549285889
    7. ' ' → logprob: -7.674632549285889
    8. '  
' → logprob: -7.674632549285889
    9. '<|end|>' → logprob: -8.049633026123047
    10. '    
' → logprob: -8.799633026123047

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001167960581369698
    2. '        ' → logprob: -7.1261677742004395
    3. '
' → logprob: -9.251168251037598
    4. ' ' → logprob: -9.626168251037598
    5. '        
' → logprob: -10.001168251037598
    6. '   ' → logprob: -10.876168251037598
    7. '    ' → logprob: -10.876168251037598
    8. '      ' → logprob: -11.001168251037598
    9. '<|end|>' → logprob: -11.001168251037598
    10. ')' → logprob: -11.626168251037598

Token 36: ' self' (ID: 1051)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.4741740822792053
    2. ' value' → logprob: -0.9741740822792053
    3. '       ' → logprob: -10.349174499511719
    4. ' ' → logprob: -11.349174499511719
    5. '"value' → logprob: -11.474174499511719
    6. ' =' → logprob: -11.599174499511719
    7. '=value' → logprob: -11.724174499511719
    8. '
' → logprob: -11.849174499511719
    9. '=' → logprob: -12.224174499511719
    10. '.value' → logprob: -12.849174499511719

Token 37: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.20532846450805664
    2. '.' → logprob: -1.7053284645080566
    3. 'value' → logprob: -5.830328464508057
    4. ' value' → logprob: -8.580327987670898
    5. ' .' → logprob: -8.580327987670898
    6. '=' → logprob: -8.705327987670898
    7. ' =' → logprob: -8.955327987670898
    8. '.name' → logprob: -9.205327987670898
    9. '_value' → logprob: -9.580327987670898
    10. ' ' → logprob: -10.205327987670898

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602613925933838
    2. '=' → logprob: -1.9102613925933838
    3. ' ' → logprob: -10.285261154174805
    4. ' =
' → logprob: -13.910261154174805
    5. '<|end|>' → logprob: -14.285261154174805
    6. ')' → logprob: -14.785261154174805
    7. ' =)' → logprob: -15.035261154174805
    8. '=value' → logprob: -15.785261154174805
    9. '_' → logprob: -15.910261154174805
    10. '   ' → logprob: -16.160261154174805

Token 39: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.07889639586210251
    2. 'value' → logprob: -2.5788962841033936
    3. ' ' → logprob: -12.328896522521973
    4. '0' → logprob: -13.703896522521973
    5. '(value' → logprob: -14.828896522521973
    6. ')value' → logprob: -15.578896522521973
    7. '"value' → logprob: -15.703896522521973
    8. '$value' → logprob: -15.953896522521973
    9. ' ' → logprob: -16.828895568847656
    10. '	value' → logprob: -16.953895568847656

Token 40: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029969971626996994
    2. '<|end|>' → logprob: -3.6549699306488037
    3. '   ' → logprob: -6.654970169067383
    4. '\n' → logprob: -7.279970169067383
    5. '<|end|>' → logprob: -7.779970169067383
    6. '    
' → logprob: -7.904970169067383
    7. 'def' → logprob: -9.154970169067383
    8. ',' → logprob: -9.154970169067383
    9. '

' → logprob: -9.404970169067383
    10. '.' → logprob: -9.529970169067383

Token 41: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002512639155611396
    2. '<|end|>' → logprob: -6.752512454986572
    3. '   ' → logprob: -6.877512454986572
    4. '    
' → logprob: -9.25251293182373
    5. '

' → logprob: -9.37751293182373
    6. '\n' → logprob: -10.00251293182373
    7. '<|end|>' → logprob: -11.00251293182373
    8. 'def' → logprob: -11.00251293182373
    9. ' 
' → logprob: -11.50251293182373
    10. '' → logprob: -11.75251293182373

Token 42: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8937408924102783
    2. ' int' → logprob: -1.1437408924102783
    3. 'int' → logprob: -2.1437408924102783
    4. ' value' → logprob: -2.8937408924102783
    5. 'value' → logprob: -4.018740653991699
    6. ' The' → logprob: -4.518740653991699
    7. 'The' → logprob: -4.768740653991699
    8. ' #' → logprob: -5.018740653991699
    9. ' integer' → logprob: -5.643740653991699
    10. '<|end|>' → logprob: -5.768740653991699

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12846137583255768
    2. ' ' → logprob: -3.5034613609313965
    3. '10' → logprob: -3.7534613609313965
    4. 'int' → logprob: -4.2534613609313965
    5. '100' → logprob: -4.3784613609313965
    6. 'value' → logprob: -4.8784613609313965
    7. ' int' → logprob: -5.6284613609313965
    8. ' value' → logprob: -5.6284613609313965
    9. '2' → logprob: -5.7534613609313965
    10. '5' → logprob: -6.2534613609313965

Token 44: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' unknown' (ID: 17927)
  Prédit: ' unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unknown' → logprob: -0.0843321830034256
    2. ' empty' → logprob: -3.584332227706909
    3. ' not' → logprob: -3.834332227706909
    4. ' un' → logprob: -4.45933198928833
    5. 'unknown' → logprob: -4.45933198928833
    6. 'empty' → logprob: -6.45933198928833
    7. ' undefined' → logprob: -6.58433198928833
    8. 'un' → logprob: -6.83433198928833
    9. ' unexpl' → logprob: -7.20933198928833
    10. ' the' → logprob: -7.33433198928833

Token 46: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17474745213985443
    2. '<|end|>' → logprob: -1.9247474670410156
    3. '   ' → logprob: -4.799747467041016
    4. '<|end|>' → logprob: -5.674747467041016
    5. '    
' → logprob: -6.424747467041016
    6. '\n' → logprob: -8.424747467041016
    7. ' 
' → logprob: -8.424747467041016
    8. '```' → logprob: -8.924747467041016
    9. '       ' → logprob: -9.549747467041016
    10. '  
' → logprob: -9.549747467041016

Token 47: ' else' (ID: 1203)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3676036596298218
    2. ' or' → logprob: -1.3676036596298218
    3. '       ' → logprob: -1.4926036596298218
    4. ' None' → logprob: -2.3676037788391113
    5. ' and' → logprob: -2.7426037788391113
    6. ' not' → logprob: -3.6176037788391113
    7. '        ' → logprob: -3.8676037788391113
    8. ' known' → logprob: -4.742603778839111
    9. ' else' → logprob: -4.742603778839111
    10. 'None' → logprob: -5.117603778839111

Token 48: ' digit' (ID: 19181)
  Prédit: ' known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' known' → logprob: -0.6815491318702698
    2. ' the' → logprob: -1.056549072265625
    3. ' a' → logprob: -2.181549072265625
    4. 'known' → logprob: -4.181549072265625
    5. 'the' → logprob: -4.931549072265625
    6. 'a' → logprob: -5.556549072265625
    7. ' given' → logprob: -6.181549072265625
    8. ' actual' → logprob: -6.931549072265625
    9. ' an' → logprob: -7.056549072265625
    10. ' any' → logprob: -7.681549072265625

Token 49: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40354976058006287
    2. '
' → logprob: -1.5285497903823853
    3. '    
' → logprob: -3.0285496711730957
    4. '<|end|>' → logprob: -3.6535496711730957
    5. '\n' → logprob: -4.653549671173096
    6. '       ' → logprob: -4.653549671173096
    7. '\' → logprob: -5.153549671173096
    8. '' → logprob: -5.903549671173096
    9. '```' → logprob: -6.403549671173096
    10. '<|end|>' → logprob: -6.528549671173096

Token 50: '1' (ID: 16)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: '..' (ID: 485)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.021526150405406952
    2. ' to' → logprob: -4.271526336669922
    3. '0' → logprob: -6.146526336669922
    4. ' through' → logprob: -6.146526336669922
    5. 'to' → logprob: -6.771526336669922
    6. '..' → logprob: -7.271526336669922
    7. '2' → logprob: -7.521526336669922
    8. '9' → logprob: -8.146526336669922
    9. 'through' → logprob: -9.396526336669922
    10. '...' → logprob: -9.646526336669922

Token 52: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.3151332139968872
    2. '0' → logprob: -1.3151332139968872
    3. ' ' → logprob: -6.315133094787598
    4. '```' → logprob: -11.065133094787598
    5. '1' → logprob: -11.440133094787598
    6. '2' → logprob: -11.815133094787598
    7. '5' → logprob: -11.815133094787598
    8. '10' → logprob: -12.440133094787598
    9. '6' → logprob: -12.565133094787598
    10. '-' → logprob: -13.002633094787598

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1679779291152954
    2. '   ' → logprob: -2.042977809906006
    3. '<|end|>' → logprob: -4.667977809906006
    4. '    
' → logprob: -5.042977809906006
    5. '\n' → logprob: -5.667977809906006
    6. '```' → logprob: -6.667977809906006
    7. '       ' → logprob: -7.042977809906006
    8. '' → logprob: -7.292977809906006
    9. '

' → logprob: -7.417977809906006
    10. '\' → logprob: -7.667977809906006

Token 54: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0711720660328865
    2. '   ' → logprob: -2.946171998977661
    3. '<|end|>' → logprob: -5.07117223739624
    4. '    
' → logprob: -5.19617223739624
    5. '' → logprob: -7.07117223739624
    6. '\n' → logprob: -7.57117223739624
    7. '```' → logprob: -7.57117223739624
    8. '

' → logprob: -7.69617223739624
    9. ':' → logprob: -7.69617223739624
    10. ' ' → logprob: -8.196171760559082

Token 55: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01725318282842636
    2. '<|end|>' → logprob: -4.767253398895264
    3. '   ' → logprob: -5.642253398895264
    4. '       ' → logprob: -6.017253398895264
    5. '    
' → logprob: -6.642253398895264
    6. '\n' → logprob: -8.267252922058105
    7. '

' → logprob: -8.642252922058105
    8. 'def' → logprob: -8.767252922058105
    9. '        
' → logprob: -8.767252922058105
    10. '<|end|>' → logprob: -9.392252922058105

Token 56: '.pos' (ID: 25321)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04005958512425423
    2. '.dependencies' → logprob: -4.040059566497803
    3. ' .' → logprob: -4.915059566497803
    4. '.is' → logprob: -6.165059566497803
    5. '._' → logprob: -6.415059566497803
    6. 'dependencies' → logprob: -6.665059566497803
    7. '.cells' → logprob: -6.915059566497803
    8. '_neighbors' → logprob: -7.415059566497803
    9. '_candidates' → logprob: -7.415059566497803
    10. '.constraints' → logprob: -7.415059566497803

Token 57: 'sible' (ID: 15301)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2814379334449768
    2. 'sible' → logprob: -1.406437873840332
    3. 'ss' → logprob: -8.906437873840332
    4. 'ibilities' → logprob: -9.656437873840332
    5. '```' → logprob: -10.656437873840332
    6. '   ' → logprob: -11.281437873840332
    7. '_' → logprob: -11.906437873840332
    8. '``' → logprob: -11.906437873840332
    9. 'itions' → logprob: -12.406437873840332
    10. 'ible' → logprob: -12.531437873840332

Token 58: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.07924919575452805
    2. 's' → logprob: -3.329249143600464
    3. ':' → logprob: -3.954249143600464
    4. ' =' → logprob: -4.204249382019043
    5. '_numbers' → logprob: -6.579249382019043
    6. ' ' → logprob: -6.829249382019043
    7. '=' → logprob: -7.204249382019043
    8. '_possible' → logprob: -7.829249382019043
    9. '_' → logprob: -8.079249382019043
    10. '<|end|>' → logprob: -8.329249382019043

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03505554795265198
    2. ' =' → logprob: -3.410055637359619
    3. '=' → logprob: -6.660055637359619
    4. ' :' → logprob: -9.035055160522461
    5. ' ' → logprob: -11.910055160522461
    6. ':Set' → logprob: -14.160055160522461
    7. 's' → logprob: -15.535055160522461
    8. '=set' → logprob: -15.535055160522461
    9. '=None' → logprob: -15.785055160522461
    10. '[:]' → logprob: -15.910055160522461

Token 60: ' Set' (ID: 3957)
  Prédit: ' Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Set' → logprob: -0.5760090947151184
    2. 'Set' → logprob: -0.8260090947151184
    3. ' set' → logprob: -10.951008796691895
    4. 'List' → logprob: -11.076008796691895
    5. '	Set' → logprob: -11.326008796691895
    6. 'set' → logprob: -11.576008796691895
    7. ' List' → logprob: -11.826008796691895
    8. ' ' → logprob: -12.576008796691895
    9. '   ' → logprob: -13.201008796691895
    10. '_Set' → logprob: -13.576008796691895

Token 61: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.2664456789934775e-06
    2. '<int' → logprob: -14.500000953674316
    3. '[' → logprob: -14.875000953674316
    4. 'int' → logprob: -15.375000953674316
    5. '[Int' → logprob: -16.375001907348633
    6. '[in' → logprob: -18.500001907348633
    7. '=int' → logprob: -18.500001907348633
    8. '```' → logprob: -18.875001907348633
    9. '(int' → logprob: -19.125001907348633
    10. '	int' → logprob: -19.250001907348633

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.031157969729975e-05
    2. ']=' → logprob: -9.875090599060059
    3. '>' → logprob: -11.000090599060059
    4. ' ]' → logprob: -11.250090599060059
    5. ']>' → logprob: -12.250090599060059
    6. '>]' → logprob: -12.875090599060059
    7. '])' → logprob: -14.625090599060059
    8. ')' → logprob: -14.875090599060059
    9. '`]' → logprob: -15.500090599060059
    10. ')]' → logprob: -15.500090599060059

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00672211404889822
    2. '=' → logprob: -5.0067219734191895
    3. ' ' → logprob: -12.381722450256348
    4. '<|end|>' → logprob: -13.631722450256348
    5. ' =
' → logprob: -14.131722450256348
    6. ')' → logprob: -14.631722450256348
    7. '   ' → logprob: -16.63172149658203
    8. '=None' → logprob: -17.38172149658203
    9. '=set' → logprob: -17.50672149658203
    10. ']' → logprob: -17.50672149658203

Token 64: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.44282811880111694
    2. ' set' → logprob: -1.3178281784057617
    3. '{' → logprob: -2.5678281784057617
    4. ' {' → logprob: -4.317828178405762
    5. '(set' → logprob: -11.192828178405762
    6. '{}' → logprob: -12.192828178405762
    7. ' ' → logprob: -12.317828178405762
    8. '	set' → logprob: -12.442828178405762
    9. '=set' → logprob: -12.442828178405762
    10. ' ' → logprob: -13.692828178405762

Token 65: '()' (ID: 416)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.3561398684978485
    2. '()' → logprob: -1.231139898300171
    3. '([' → logprob: -5.606139659881592
    4. '(' → logprob: -5.981139659881592
    5. '({' → logprob: -6.731139659881592
    6. '{' → logprob: -8.98114013671875
    7. 'range' → logprob: -9.60614013671875
    8. '()
' → logprob: -10.85614013671875
    9. '(){' → logprob: -11.60614013671875
    10. '((' → logprob: -11.85614013671875

Token 66: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.03184804320335388
    2. ' self' → logprob: -3.7818479537963867
    3. 'value' → logprob: -4.906847953796387
    4. 'self' → logprob: -6.781847953796387
    5. '	value' → logprob: -11.656847953796387
    6. ' ' → logprob: -11.781847953796387
    7. '(value' → logprob: -12.031847953796387
    8. ' not' → logprob: -12.156847953796387
    9. '"value' → logprob: -13.531847953796387
    10. ')value' → logprob: -13.781847953796387

Token 68: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5740422010421753
    2. ' !=' → logprob: -0.9490422010421753
    3. '==' → logprob: -3.449042320251465
    4. '!=' → logprob: -4.449042320251465
    5. ' else' → logprob: -5.699042320251465
    6. ' ' → logprob: -7.324042320251465
    7. '!=-' → logprob: -7.324042320251465
    8. '==-' → logprob: -7.574042320251465
    9. ' >=' → logprob: -8.199042320251465
    10. 'else' → logprob: -8.699042320251465

Token 69: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04889516159892082
    2. ' -' → logprob: -3.0488951206207275
    3. ' ' → logprob: -8.298894882202148
    4. '1' → logprob: -9.923894882202148
    5. '0' → logprob: -11.798894882202148
    6. '  ' → logprob: -14.298894882202148
    7. '9' → logprob: -14.673894882202148
    8. '7' → logprob: -16.04889488220215
    9. '```' → logprob: -16.04889488220215
    10. '6' → logprob: -16.17389488220215

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.288163083605468e-05
    2. ' ' → logprob: -9.875052452087402
    3. '<|end|>' → logprob: -14.250052452087402
    4. '   ' → logprob: -15.875052452087402
    5. '  ' → logprob: -16.25005340576172
    6. '<|end|>' → logprob: -16.81255340576172
    7. '۱' → logprob: -17.00005340576172
    8. '```' → logprob: -17.12505340576172
    9. ')' → logprob: -17.18755340576172
    10. '...' → logprob: -17.25005340576172

Token 71: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.026390748098492622
    2. 'else' → logprob: -3.651390790939331
    3. ' ' → logprob: -9.77639102935791
    4. ' or' → logprob: -11.90139102935791
    5. '       ' → logprob: -12.15139102935791
    6. '        ' → logprob: -12.27639102935791
    7. '    ' → logprob: -12.77639102935791
    8. '   ' → logprob: -12.77639102935791
    9. '           ' → logprob: -13.40139102935791
    10. '         ' → logprob: -13.40139102935791

Token 72: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.048607006669044495
    2. ' {' → logprob: -3.048607110977173
    3. 'set' → logprob: -12.048606872558594
    4. ' ' → logprob: -12.923606872558594
    5. ' ' → logprob: -13.048606872558594
    6. '{name' → logprob: -13.423606872558594
    7. '{i' → logprob: -13.548606872558594
    8. '{s' → logprob: -13.673606872558594
    9. '{}' → logprob: -13.798606872558594
    10. '   ' → logprob: -13.798606872558594

Token 73: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0004315036640036851
    2. ' value' → logprob: -7.750431537628174
    3. 'self' → logprob: -14.875431060791016
    4. '   ' → logprob: -15.500431060791016
    5. '"value' → logprob: -16.000431060791016
    6. '       ' → logprob: -16.750431060791016
    7. '           ' → logprob: -16.750431060791016
    8. ')value' → logprob: -17.250431060791016
    9. '	value' → logprob: -17.500431060791016
    10. ''value' → logprob: -17.875431060791016

Token 74: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00014168102643452585
    2. ' }' → logprob: -8.875142097473145
    3. '}
' → logprob: -13.625142097473145
    4. ')' → logprob: -16.125141143798828
    5. '})' → logprob: -16.375141143798828
    6. '   ' → logprob: -16.625141143798828
    7. '       ' → logprob: -17.000141143798828
    8. '1' → logprob: -17.000141143798828
    9. '7' → logprob: -17.125141143798828
    10. '}}' → logprob: -17.375141143798828

Token 75: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05927065387368202
    2. '   ' → logprob: -3.1842706203460693
    3. '<|end|>' → logprob: -4.684270858764648
    4. '    
' → logprob: -5.184270858764648
    5. '<|end|>' → logprob: -8.184270858764648
    6. ' 
' → logprob: -8.559270858764648
    7. '

' → logprob: -8.934270858764648
    8. '       ' → logprob: -9.434270858764648
    9. ',' → logprob: -9.434270858764648
    10. '  
' → logprob: -9.559270858764648

Token 76: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1357978731393814
    2. '   ' → logprob: -2.7607979774475098
    3. ' def' → logprob: -2.7607979774475098
    4. '       ' → logprob: -8.635797500610352
    5. '    ' → logprob: -9.510797500610352
    6. ' ' → logprob: -9.510797500610352
    7. '    
' → logprob: -9.635797500610352
    8. '	def' → logprob: -9.760797500610352
    9. '        
' → logprob: -11.385797500610352
    10. '  ' → logprob: -11.510797500610352

Token 77: ' is' (ID: 382)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.5713131427764893
    2. ' add' → logprob: -1.1963131427764893
    3. ' def' → logprob: -2.1963131427764893
    4. ' set' → logprob: -5.44631290435791
    5. ' possible' → logprob: -5.44631290435791
    6. ' is' → logprob: -6.07131290435791
    7. ' has' → logprob: -6.07131290435791
    8. 'update' → logprob: -6.19631290435791
    9. ' get' → logprob: -6.82131290435791
    10. ' reset' → logprob: -7.19631290435791

Token 78: '_ass' (ID: 29140)
  Prédit: '_known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_known' → logprob: -0.19411447644233704
    2. '_valid' → logprob: -2.6941144466400146
    3. '_unknown' → logprob: -2.9441144466400146
    4. '_possible' → logprob: -3.9441144466400146
    5. '_s' → logprob: -4.319114685058594
    6. '_empty' → logprob: -4.569114685058594
    7. '_' → logprob: -5.069114685058594
    8. '_complete' → logprob: -5.694114685058594
    9. ' _' → logprob: -6.944114685058594
    10. '_completed' → logprob: -7.444114685058594

Token 79: 'igned' (ID: 3626)
  Prédit: 'igned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igned' → logprob: -0.02332817018032074
    2. 'ign' → logprob: -4.0233283042907715
    3. 'ert' → logprob: -5.2733283042907715
    4. 'ured' → logprob: -11.648327827453613
    5. 'ociated' → logprob: -11.648327827453613
    6. 'ignment' → logprob: -12.148327827453613
    7. 'essed' → logprob: -12.273327827453613
    8. 'umed' → logprob: -12.648327827453613
    9. 'Ign' → logprob: -13.523327827453613
    10. 'emb' → logprob: -13.898327827453613

Token 80: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6133104562759399
    2. '(' → logprob: -0.8633104562759399
    3. '()' → logprob: -3.3633103370666504
    4. 'self' → logprob: -6.73831033706665
    5. '(
' → logprob: -8.113310813903809
    6. ' ' → logprob: -8.363310813903809
    7. ' (' → logprob: -9.363310813903809
    8. '   ' → logprob: -9.738310813903809
    9. ')' → logprob: -9.988310813903809
    10. '(

' → logprob: -10.488310813903809

Token 81: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10110576450824738
    2. ')' → logprob: -2.3511056900024414
    3. ' ):' → logprob: -7.351105690002441
    4. '):
' → logprob: -8.726105690002441
    5. ' )' → logprob: -9.476105690002441
    6. '():' → logprob: -12.101105690002441
    7. '()' → logprob: -12.226105690002441
    8. ':' → logprob: -13.226105690002441
    9. '):

' → logprob: -13.601105690002441
    10. ',' → logprob: -13.601105690002441

Token 82: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0428636409342289
    2. '(' → logprob: -3.292863607406616
    3. 'self' → logprob: -6.292863845825195
    4. '():' → logprob: -6.667863845825195
    5. '()' → logprob: -6.917863845825195
    6. ':' → logprob: -7.917863845825195
    7. ' ->' → logprob: -8.792863845825195
    8. '->' → logprob: -9.667863845825195
    9. '(
' → logprob: -10.542863845825195
    10. ' self' → logprob: -11.042863845825195

Token 83: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.038046084344387054
    2. 'bool' → logprob: -3.28804612159729
    3. ' ' → logprob: -12.413045883178711
    4. '  ' → logprob: -15.788045883178711
    5. ' ' → logprob: -15.913045883178711
    6. '	bool' → logprob: -15.913045883178711
    7. '<bool' → logprob: -16.16304588317871
    8. ' True' → logprob: -17.28804588317871
    9. '   ' → logprob: -17.78804588317871
    10. 'Bool' → logprob: -18.28804588317871

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003856489434838295
    2. '():' → logprob: -5.628856658935547
    3. '):' → logprob: -8.378856658935547
    4. ':
' → logprob: -11.628856658935547
    5. ':return' → logprob: -11.878856658935547
    6. ':**' → logprob: -12.253856658935547
    7. '<|end|>' → logprob: -13.253856658935547
    8. ' :' → logprob: -13.253856658935547
    9. ')' → logprob: -14.628856658935547
    10. '>:' → logprob: -14.628856658935547

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007141007808968425
    2. ' return' → logprob: -7.500714302062988
    3. '<|end|>' → logprob: -9.000714302062988
    4. '   ' → logprob: -10.500714302062988
    5. 'return' → logprob: -12.125714302062988
    6. ' 
' → logprob: -14.000714302062988
    7. '        
' → logprob: -14.125714302062988
    8. '    ' → logprob: -14.750714302062988
    9. '      ' → logprob: -14.750714302062988
    10. '    
' → logprob: -14.875714302062988

Token 86: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06251464784145355
    2. ' return' → logprob: -2.812514543533325
    3. '       ' → logprob: -7.562514781951904
    4. '   ' → logprob: -10.562514305114746
    5. 'self' → logprob: -13.937514305114746
    6. '	return' → logprob: -15.312514305114746
    7. '{return' → logprob: -16.187515258789062
    8. ' ' → logprob: -16.437515258789062
    9. ':return' → logprob: -16.812515258789062
    10. '    ' → logprob: -17.312515258789062

Token 87: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061993569135665894
    2. ' self' → logprob: -2.8119935989379883
    3. 'len' → logprob: -10.936993598937988
    4. ' len' → logprob: -11.936993598937988
    5. '   ' → logprob: -13.811993598937988
    6. '(self' → logprob: -15.686993598937988
    7. ' ' → logprob: -16.186992645263672
    8. '	self' → logprob: -17.311992645263672
    9. '[self' → logprob: -17.436992645263672
    10. '       ' → logprob: -17.686992645263672

Token 88: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.12781789898872375
    2. '.' → logprob: -2.1278178691864014
    3. '.name' → logprob: -7.3778181076049805
    4. '.is' → logprob: -9.12781810760498
    5. '.val' → logprob: -9.75281810760498
    6. '.status' → logprob: -10.50281810760498
    7. ' .' → logprob: -10.75281810760498
    8. '.user' → logprob: -11.00281810760498
    9. '.code' → logprob: -12.25281810760498
    10. '.pos' → logprob: -12.87781810760498

Token 89: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1740661859512329
    2. ' !=' → logprob: -1.924066185951233
    3. '!=-' → logprob: -4.299066066741943
    4. '>' → logprob: -8.799066543579102
    5. '>=' → logprob: -12.424066543579102
    6. ' ' → logprob: -12.799066543579102
    7. '()!=' → logprob: -13.174066543579102
    8. ')!=' → logprob: -13.299066543579102
    9. '   ' → logprob: -13.549066543579102
    10. ' ' → logprob: -14.549066543579102

Token 90: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015023599844425917
    2. ' -' → logprob: -6.501502513885498
    3. ' ' → logprob: -19.626502990722656
    4. '   ' → logprob: -19.876502990722656
    5. '  ' → logprob: -22.251502990722656
    6. '−' → logprob: -22.626502990722656
    7. '	' → logprob: -22.751502990722656
    8. '```' → logprob: -22.876502990722656
    9. '1' → logprob: -23.126502990722656
    10. '-int' → logprob: -23.876502990722656

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '<|end|>' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '```' → logprob: -18.25
    5. '१' → logprob: -18.3125
    6. '<|end|>' → logprob: -18.375
    7. '۱' → logprob: -18.375
    8. '১' → logprob: -18.875
    9. '{' → logprob: -19.5
    10. '１' → logprob: -19.5625

Token 92: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7963661551475525
    2. '<|end|>' → logprob: -1.1713662147521973
    3. '   ' → logprob: -1.5463662147521973
    4. '<|end|>' → logprob: -4.671366214752197
    5. '    
' → logprob: -4.796366214752197
    6. '

' → logprob: -5.671366214752197
    7. 'def' → logprob: -6.796366214752197
    8. '' → logprob: -7.046366214752197
    9. '```' → logprob: -7.171366214752197
    10. ' 
' → logprob: -8.546365737915039

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2912701368331909
    2. '
' → logprob: -1.541270136833191
    3. '<|end|>' → logprob: -3.5412702560424805
    4. '    
' → logprob: -5.4162702560424805
    5. '<|end|>' → logprob: -6.5412702560424805
    6. 'def' → logprob: -6.5412702560424805
    7. '

' → logprob: -6.9162702560424805
    8. '```' → logprob: -7.4162702560424805
    9. ' ' → logprob: -9.16627025604248
    10. '        
' → logprob: -9.54127025604248

Token 94: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1437513530254364
    2. 'def' (adapté à ' def') → logprob: -2.018751382827759
    3. ' def' → logprob: -7.39375114440918
    4. '    
' → logprob: -8.14375114440918
    5. '
' → logprob: -9.51875114440918
    6. 'class' → logprob: -9.89375114440918
    7. '	def' → logprob: -11.01875114440918
    8. '```' → logprob: -11.89375114440918
    9. '<|end|>' → logprob: -12.39375114440918
    10. '        
' → logprob: -12.39375114440918

Token 95: ' assign' (ID: 14975)
  Prédit: ' eliminate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eliminate' → logprob: -1.0302475690841675
    2. ' update' → logprob: -1.2802475690841675
    3. ' def' → logprob: -1.6552475690841675
    4. ' __' → logprob: -3.030247688293457
    5. ' remove' → logprob: -3.280247688293457
    6. ' possible' → logprob: -3.905247688293457
    7. '__' → logprob: -4.530247688293457
    8. 'update' → logprob: -4.530247688293457
    9. ' assign' → logprob: -4.655247688293457
    10. 'def' → logprob: -4.780247688293457

Token 96: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1617690622806549
    2. '(self' → logprob: -1.9117690324783325
    3. ' (' → logprob: -6.786768913269043
    4. '(
' → logprob: -7.911768913269043
    5. '(value' → logprob: -10.536768913269043
    6. 'self' → logprob: -11.786768913269043
    7. '(

' → logprob: -12.286768913269043
    8. ' ' → logprob: -12.536768913269043
    9. '(s' → logprob: -13.161768913269043
    10. '_value' → logprob: -14.536768913269043

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013409581733867526
    2. ' ,' → logprob: -6.751340866088867
    3. ',value' → logprob: -8.876340866088867
    4. 'value' → logprob: -11.126340866088867
    5. 'self' → logprob: -11.751340866088867
    6. ')' → logprob: -12.001340866088867
    7. ',new' → logprob: -14.751340866088867
    8. ' value' → logprob: -14.876340866088867
    9. ',self' → logprob: -15.001340866088867
    10. ',int' → logprob: -15.251340866088867

Token 98: ' val' (ID: 1459)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.32861393690109253
    2. ' value' → logprob: -1.8286139965057373
    3. ' val' → logprob: -2.5786139965057373
    4. 'val' → logprob: -3.5786139965057373
    5. ' new' → logprob: -4.453613758087158
    6. 'new' → logprob: -5.578613758087158
    7. 'v' → logprob: -9.078614234924316
    8. ' v' → logprob: -9.203614234924316
    9. '   ' → logprob: -11.453614234924316
    10. 'self' → logprob: -12.203614234924316

Token 99: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38658973574638367
    2. 'ue' → logprob: -1.636589765548706
    3. '):' → logprob: -2.886589765548706
    4. 'alue' → logprob: -3.261589765548706
    5. ' ' → logprob: -4.761589527130127
    6. ')' → logprob: -4.761589527130127
    7. '   ' → logprob: -5.261589527130127
    8. 'value' → logprob: -5.636589527130127
    9. ':int' → logprob: -7.136589527130127
    10. '  ' → logprob: -7.386589527130127

Token 100: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.251930832862854
    2. ' int' → logprob: -1.501930832862854
    3. ')' → logprob: -13.876931190490723
    4. ':int' → logprob: -14.751931190490723
    5. '(int' → logprob: -15.876931190490723
    6. ' ' → logprob: -16.501930236816406
    7. '<int' → logprob: -16.626930236816406
    8. ' )' → logprob: -16.751930236816406
    9. '[int' → logprob: -16.751930236816406
    10. '=int' → logprob: -17.126930236816406

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3224577009677887
    2. ')' → logprob: -1.3224576711654663
    3. '):
' → logprob: -4.697457790374756
    4. '):
' → logprob: -10.947457313537598
    5. ':' → logprob: -12.322457313537598
    6. ' ):' → logprob: -12.572457313537598
    7. ')->' → logprob: -12.697457313537598
    8. ' )' → logprob: -12.947457313537598
    9. '   ' → logprob: -13.072457313537598
    10. '):

' → logprob: -13.322457313537598

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005616117268800735
    2. '
' → logprob: -8.250561714172363
    3. 'self' → logprob: -8.375561714172363
    4. ' self' → logprob: -9.875561714172363
    5. '```' → logprob: -11.625561714172363
    6. '   ' → logprob: -12.125561714172363
    7. '	self' → logprob: -14.625561714172363
    8. '        
' → logprob: -14.750561714172363
    9. '    
' → logprob: -15.375561714172363
    10. '(self' → logprob: -15.500561714172363

Token 103: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2747916877269745
    2. ' self' → logprob: -1.7747917175292969
    3. 'self' (adapté à ' self') → logprob: -2.649791717529297
    4. '   ' → logprob: -9.774791717529297
    5. '	self' → logprob: -10.899791717529297
    6. '```' → logprob: -12.399791717529297
    7. ' ' → logprob: -13.399791717529297
    8. '(self' → logprob: -14.149791717529297
    9. ' ' → logprob: -14.274791717529297
    10. '           ' → logprob: -14.649791717529297

Token 104: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.023268774151802063
    2. '.' → logprob: -3.773268699645996
    3. '.name' → logprob: -10.898268699645996
    4. 'value' → logprob: -12.648268699645996
    5. ' .' → logprob: -14.648268699645996
    6. '.user' → logprob: -14.898268699645996
    7. '.val' → logprob: -15.648268699645996
    8. '.code' → logprob: -16.273269653320312
    9. '`.' → logprob: -16.398269653320312
    10. ').' → logprob: -16.648269653320312

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575939416885376
    2. ' =' → logprob: -0.825939416885376
    3. ' ' → logprob: -17.450939178466797
    4. '=}' → logprob: -18.825939178466797
    5. ' =
' → logprob: -19.200939178466797
    6. '＝' → logprob: -19.200939178466797
    7. '=

' → logprob: -19.200939178466797
    8. ')' → logprob: -19.700939178466797
    9. '=
' → logprob: -19.950939178466797
    10. '=int' → logprob: -20.075939178466797

Token 106: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.47407710552215576
    2. ' val' → logprob: -0.9740771055221558
    3. '	val' → logprob: -16.099077224731445
    4. '(val' → logprob: -18.599077224731445
    5. '_val' → logprob: -18.974077224731445
    6. '[val' → logprob: -19.599077224731445
    7. 'v' → logprob: -19.724077224731445
    8. '.val' → logprob: -20.099077224731445
    9. 'Val' → logprob: -20.474077224731445
    10. ' ' → logprob: -20.849077224731445

Token 107: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03731399029493332
    2. '<|end|>' → logprob: -3.537313938140869
    3. '
' → logprob: -4.912313938140869
    4. '<|end|>' → logprob: -9.162314414978027
    5. 'self' → logprob: -10.787314414978027
    6. '	' → logprob: -11.162314414978027
    7. '   ' → logprob: -11.787314414978027
    8. ',' → logprob: -12.037314414978027
    9. '```' → logprob: -12.287314414978027
    10. '\n' → logprob: -13.037314414978027

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00032485672272741795
    2. '<|end|>' → logprob: -8.500325202941895
    3. '
' → logprob: -10.000325202941895
    4. 'self' → logprob: -10.250325202941895
    5. '	' → logprob: -11.250325202941895
    6. '   ' → logprob: -11.500325202941895
    7. ',' → logprob: -12.375325202941895
    8. ' self' → logprob: -12.750325202941895
    9. '<|end|>' → logprob: -13.250325202941895
    10. '```' → logprob: -13.375325202941895

Token 109: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.684157026233152e-05
    2. '       ' → logprob: -9.500077247619629
    3. ' self' → logprob: -13.250077247619629
    4. '   ' → logprob: -16.500076293945312
    5. '	self' → logprob: -17.625076293945312
    6. 'this' → logprob: -20.625076293945312
    7. ' ' → logprob: -21.125076293945312
    8. '           ' → logprob: -21.750076293945312
    9. '#' → logprob: -21.875076293945312
    10. 's' → logprob: -22.000076293945312

Token 110: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.00037013579276390374
    2. '.' → logprob: -8.000370025634766
    3. 'possible' → logprob: -10.625370025634766
    4. '.value' → logprob: -12.625370025634766
    5. ' .' → logprob: -13.500370025634766
    6. 'Possible' → logprob: -13.625370025634766
    7. '`.' → logprob: -13.875370025634766
    8. '.p' → logprob: -14.375370025634766
    9. ').' → logprob: -14.750370025634766
    10. '   ' → logprob: -14.875370025634766

Token 111: 'sible' (ID: 15301)
  Prédit: 'sible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -0.0031828247010707855
    2. 'ible' → logprob: -5.753182888031006
    3. 'isible' → logprob: -12.503182411193848
    4. '_possible' → logprob: -14.878182411193848
    5. '```' → logprob: -15.253182411193848
    6. '_' → logprob: -15.878182411193848
    7. 'possible' → logprob: -15.878182411193848
    8. 'ibble' → logprob: -16.128183364868164
    9. 's' → logprob: -16.128183364868164
    10. 'Possible' → logprob: -16.378183364868164

Token 112: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.12500286102295
    3. ' _' → logprob: -15.25000286102295
    4. '_value' → logprob: -16.250001907348633
    5. '_VALUES' → logprob: -17.250001907348633
    6. '_val' → logprob: -17.750001907348633
    7. '_vals' → logprob: -17.750001907348633
    8. '_possible' → logprob: -18.000001907348633
    9. 'values' → logprob: -18.875001907348633
    10. '_results' → logprob: -19.500001907348633

Token 113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005581164266914129
    2. ' =' → logprob: -5.505581378936768
    3. '.clear' → logprob: -6.505581378936768
    4. '.=' → logprob: -12.00558090209961
    5. '.' → logprob: -15.25558090209961
    6. '.update' → logprob: -16.88058090209961
    7. '=set' → logprob: -18.25558090209961
    8. '=}' → logprob: -18.50558090209961
    9. '＝' → logprob: -18.88058090209961
    10. '.dis' → logprob: -18.88058090209961

Token 114: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.008614808320999146
    2. ' {' → logprob: -4.758615016937256
    3. '{s' → logprob: -16.258615493774414
    4. '{name' → logprob: -17.008615493774414
    5. '{text' → logprob: -17.758615493774414
    6. '{x' → logprob: -17.883615493774414
    7. '{return' → logprob: -18.008615493774414
    8. '[val' → logprob: -18.133615493774414
    9. '   ' → logprob: -18.133615493774414
    10. '{lng' → logprob: -18.133615493774414

Token 115: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -6.704273118884885e-07
    2. ' val' → logprob: -14.250000953674316
    3. '   ' → logprob: -20.0
    4. '	val' → logprob: -20.125
    5. 'value' → logprob: -21.0
    6. '           ' → logprob: -22.75
    7. '(val' → logprob: -23.5
    8. '       ' → logprob: -23.625
    9. '_val' → logprob: -24.125
    10. '```' → logprob: -24.625

Token 116: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00020509003661572933
    2. '}
' → logprob: -8.500205039978027
    3. ' }' → logprob: -13.625205039978027
    4. '}

' → logprob: -15.625205039978027
    5. '<|end|>' → logprob: -16.000205993652344
    6. ')' → logprob: -16.750205993652344
    7. '}
' → logprob: -17.125205993652344
    8. '   ' → logprob: -17.625205993652344
    9. '}\' → logprob: -17.875205993652344
    10. '       ' → logprob: -18.500205993652344

Token 117: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2382718026638031
    2. '<|end|>' → logprob: -1.9882718324661255
    3. '   ' → logprob: -2.863271713256836
    4. '<|end|>' → logprob: -5.363271713256836
    5. '    
' → logprob: -5.488271713256836
    6. ' 
' → logprob: -5.863271713256836
    7. 'class' → logprob: -6.238271713256836
    8. ' ' → logprob: -6.613271713256836
    9. '```' → logprob: -7.488271713256836
    10. '\n' → logprob: -7.613271713256836

Token 118: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7302877902984619
    2. '<|end|>' → logprob: -0.8552877902984619
    3. 'class' → logprob: -2.980287790298462
    4. '
' → logprob: -3.355287790298462
    5. 'def' (adapté à ' def') → logprob: -5.480287551879883
    6. '<|end|>' → logprob: -6.480287551879883
    7. '    
' → logprob: -6.855287551879883
    8. '    ' → logprob: -9.105287551879883
    9. ' ' → logprob: -9.355287551879883
    10. '```' → logprob: -9.605287551879883

Token 119: ' un' (ID: 537)
  Prédit: ' eliminate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' eliminate' → logprob: -0.26107513904571533
    2. ' remove' → logprob: -1.7610751390457153
    3. 'remove' → logprob: -3.261075019836426
    4. 'el' → logprob: -5.136075019836426
    5. ' def' → logprob: -5.261075019836426
    6. ' __' → logprob: -6.261075019836426
    7. ' update' → logprob: -6.261075019836426
    8. '__' → logprob: -6.261075019836426
    9. 'def' → logprob: -7.511075019836426
    10. ' reset' → logprob: -7.886075019836426

Token 120: 'assign' (ID: 14297)
  Prédit: 'assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.00038574778591282666
    2. 'def' → logprob: -7.875385761260986
    3. 'assigned' → logprob: -13.125385284423828
    4. '	assign' → logprob: -14.000385284423828
    5. ' assign' → logprob: -14.250385284423828
    6. '_assign' → logprob: -14.500385284423828
    7. '(assign' → logprob: -14.750385284423828
    8. 'define' → logprob: -15.250385284423828
    9. '   ' → logprob: -15.250385284423828
    10. 'ass' → logprob: -16.000385284423828

Token 121: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008854112587869167
    2. '(' → logprob: -4.883853912353516
    3. 'self' → logprob: -7.133853912353516
    4. '()' → logprob: -7.758853912353516
    5. ' (' → logprob: -11.258853912353516
    6. ' ' → logprob: -13.008853912353516
    7. '(
' → logprob: -13.258853912353516
    8. '   ' → logprob: -13.883853912353516
    9. ' self' → logprob: -13.883853912353516
    10. '(sel' → logprob: -14.133853912353516

Token 122: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4463118016719818
    2. ')' → logprob: -1.4463118314743042
    3. '):' → logprob: -2.5713117122650146
    4. '):
' → logprob: -3.0713117122650146
    5. '(self' → logprob: -6.696311950683594
    6. ',' → logprob: -8.821311950683594
    7. ' ' → logprob: -9.321311950683594
    8. ' self' → logprob: -9.571311950683594
    9. '):
' → logprob: -9.696311950683594
    10. '):

' → logprob: -9.946311950683594

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2632468044757843
    2. 'self' → logprob: -1.513246774673462
    3. '   ' → logprob: -5.013247013092041
    4. ' self' → logprob: -5.388247013092041
    5. '	self' → logprob: -10.638246536254883
    6. ' ' → logprob: -12.263246536254883
    7. '```' → logprob: -13.013246536254883
    8. '	' → logprob: -13.638246536254883
    9. '(self' → logprob: -14.013246536254883
    10. ' ' → logprob: -15.013246536254883

Token 124: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.9875325708417222e-05
    2. ' self' → logprob: -11.000029563903809
    3. '       ' → logprob: -11.250029563903809
    4. '   ' → logprob: -15.875029563903809
    5. '	self' → logprob: -18.125030517578125
    6. ' ' → logprob: -19.875030517578125
    7. '```' → logprob: -20.250030517578125
    8. '  ' → logprob: -20.750030517578125
    9. '[self' → logprob: -21.625030517578125
    10. '(self' → logprob: -22.125030517578125

Token 125: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00022451656695920974
    2. '.' → logprob: -8.500224113464355
    3. 'value' → logprob: -10.875224113464355
    4. ' .' → logprob: -13.875224113464355
    5. '.name' → logprob: -14.125224113464355
    6. '.user' → logprob: -16.000225067138672
    7. '.status' → logprob: -16.625225067138672
    8. '.is' → logprob: -17.125225067138672
    9. '   ' → logprob: -17.375225067138672
    10. '.pos' → logprob: -17.625225067138672

Token 126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.376930236816406
    4. '   ' → logprob: -16.751930236816406
    5. '=-' → logprob: -17.501930236816406
    6. '=
' → logprob: -18.876930236816406
    7. '＝' → logprob: -19.376930236816406
    8. '       ' → logprob: -19.376930236816406
    9. '  ' → logprob: -19.751930236816406
    10. '==' → logprob: -20.126930236816406

Token 127: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00317783304490149
    2. ' -' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.878177642822266
    4. '-int' → logprob: -18.628177642822266
    5. ' ' → logprob: -18.878177642822266
    6. '	' → logprob: -19.128177642822266
    7. '  ' → logprob: -19.628177642822266
    8. '−' → logprob: -20.753177642822266
    9. '```' → logprob: -21.003177642822266
    10. '       ' → logprob: -21.003177642822266

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '<|end|>' → logprob: -16.12500762939453
    4. '```' → logprob: -17.37500762939453
    5. '2' → logprob: -17.56250762939453
    6. '   ' → logprob: -18.00000762939453
    7. '۱' → logprob: -18.43750762939453
    8. '-' → logprob: -18.50000762939453
    9. '১' → logprob: -18.56250762939453
    10. '१' → logprob: -18.75000762939453

Token 129: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039170795935206115
    2. 'self' → logprob: -8.500391960144043
    3. '
' → logprob: -9.125391960144043
    4. '<|end|>' → logprob: -10.250391960144043
    5. ',' → logprob: -11.000391960144043
    6. ' self' → logprob: -11.750391960144043
    7. '   ' → logprob: -11.750391960144043
    8. '```' → logprob: -12.750391960144043
    9. '	' → logprob: -13.125391960144043
    10. '<|end|>' → logprob: -14.000391960144043

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022921599447727203
    2. 'self' → logprob: -6.377292156219482
    3. '   ' → logprob: -7.627292156219482
    4. ' self' → logprob: -9.25229263305664
    5. '	self' → logprob: -13.00229263305664
    6. '	' → logprob: -13.62729263305664
    7. '<|end|>' → logprob: -14.12729263305664
    8. '           ' → logprob: -14.12729263305664
    9. ' ' → logprob: -14.25229263305664
    10. '	   ' → logprob: -15.00229263305664

Token 131: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00011713240382960066
    2. ' self' → logprob: -9.750117301940918
    3. '       ' → logprob: -9.750117301940918
    4. '   ' → logprob: -15.500117301940918
    5. '#' → logprob: -16.2501163482666
    6. '	self' → logprob: -16.5001163482666
    7. '           ' → logprob: -16.7501163482666
    8. ' ' → logprob: -17.8751163482666
    9. '  ' → logprob: -18.5001163482666
    10. 'if' → logprob: -18.7501163482666

Token 132: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -2.7252845029579476e-05
    2. '.' → logprob: -10.625027656555176
    3. ' .' → logprob: -14.000027656555176
    4. 'possible' → logprob: -14.375027656555176
    5. '.p' → logprob: -15.000027656555176
    6. '.value' → logprob: -15.375027656555176
    7. 'Possible' → logprob: -15.750027656555176
    8. '`.' → logprob: -16.12502670288086
    9. '[pos' → logprob: -16.37502670288086
    10. '   ' → logprob: -16.50002670288086

Token 133: 'sible' (ID: 15301)
  Prédit: 'sible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -0.005235648714005947
    2. 'ible' → logprob: -5.25523567199707
    3. 'isible' → logprob: -14.13023567199707
    4. 's' → logprob: -14.50523567199707
    5. '_' → logprob: -15.38023567199707
    6. '```' → logprob: -16.00523567199707
    7. 'si' → logprob: -16.13023567199707
    8. '_possible' → logprob: -17.00523567199707
    9. '   ' → logprob: -17.63023567199707
    10. 'sib' → logprob: -17.75523567199707

Token 134: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0003361774142831564
    2. 'values' → logprob: -8.000336647033691
    3. 's' → logprob: -15.250336647033691
    4. 'Values' → logprob: -15.500336647033691
    5. '_VALUES' → logprob: -15.875336647033691
    6. '_' → logprob: -16.125335693359375
    7. ' values' → logprob: -17.375335693359375
    8. 'value' → logprob: -17.625335693359375
    9. '_possible' → logprob: -17.625335693359375
    10. '_value' → logprob: -17.875335693359375

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15664823353290558
    2. '.clear' → logprob: -2.1566481590270996
    3. ' =' → logprob: -3.5316481590270996
    4. 'clear' → logprob: -11.406648635864258
    5. '.=' → logprob: -12.031648635864258
    6. '=set' → logprob: -12.656648635864258
    7. '.' → logprob: -12.781648635864258
    8. '.add' → logprob: -13.406648635864258
    9. '.update' → logprob: -14.281648635864258
    10. ':' → logprob: -15.156648635864258

Token 136: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.004515327513217926
    2. '{' → logprob: -5.504515171051025
    3. ' set' → logprob: -7.754515171051025
    4. '(set' → logprob: -12.754515647888184
    5. ' {' → logprob: -12.879515647888184
    6. '{}' → logprob: -14.254515647888184
    7. '=set' → logprob: -14.379515647888184
    8. '	set' → logprob: -14.754515647888184
    9. '```' → logprob: -15.254515647888184
    10. ')set' → logprob: -15.879515647888184

Token 137: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002584339352324605
    2. '(range' → logprob: -6.002584457397461
    3. '()
' → logprob: -10.252584457397461
    4. '(' → logprob: -10.502584457397461
    5. '([' → logprob: -11.877584457397461
    6. '()<' → logprob: -12.002584457397461
    7. '()\' → logprob: -12.127584457397461
    8. '()}' → logprob: -12.877584457397461
    9. '()]' → logprob: -13.002584457397461
    10. '()>' → logprob: -13.002584457397461

Token 138: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23425064980983734
    2. 'class' → logprob: -2.359250545501709
    3. '<|end|>' → logprob: -2.359250545501709
    4. '   ' → logprob: -4.609250545501709
    5. '\n' → logprob: -5.984250545501709
    6. '

' → logprob: -6.484250545501709
    7. '<|end|>' → logprob: -6.609250545501709
    8. 'def' → logprob: -6.859250545501709
    9. ' ' → logprob: -7.484250545501709
    10. ' class' → logprob: -7.859250545501709

Token 139: ' Arithmetic' (ID: 179942)
  Prédit: ' Sudoku'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Sudoku' → logprob: -0.16235865652561188
    2. ' Board' → logprob: -3.2873587608337402
    3. ' Ken' → logprob: -3.4123587608337402
    4. ' Grid' → logprob: -3.6623587608337402
    5. 'Sud' → logprob: -4.16235876083374
    6. 'Grid' → logprob: -4.16235876083374
    7. 'Board' → logprob: -4.66235876083374
    8. ' Cage' → logprob: -5.66235876083374
    9. 'Ken' → logprob: -6.16235876083374
    10. ' Solver' → logprob: -6.91235876083374

Token 140: 'Puzzle' (ID: 127876)
  Prédit: 'Puzzle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Puzzle' → logprob: -0.5473669767379761
    2. 'Constraint' → logprob: -2.0473670959472656
    3. 'Cell' → logprob: -2.4223670959472656
    4. 'Solver' → logprob: -2.5473670959472656
    5. 'Expression' → logprob: -2.5473670959472656
    6. 'Problem' → logprob: -4.547367095947266
    7. 'Square' → logprob: -5.047367095947266
    8. 'Grid' → logprob: -5.297367095947266
    9. 'Sequence' → logprob: -5.422367095947266
    10. 'Progress' → logprob: -5.797367095947266

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023917861108202487
    2. ':
' → logprob: -8.750239372253418
    3. '(' → logprob: -10.500239372253418
    4. '():' → logprob: -11.000239372253418
    5. '):' → logprob: -11.125239372253418
    6. '<|end|>' → logprob: -12.125239372253418
    7. ':**' → logprob: -12.250239372253418
    8. '>:' → logprob: -13.250239372253418
    9. ' :' → logprob: -13.500239372253418
    10. '(object' → logprob: -13.625239372253418

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00036299455678090453
    2. ' def' → logprob: -8.50036334991455
    3. 'def' → logprob: -8.75036334991455
    4. '   ' → logprob: -15.00036334991455
    5. '    
' → logprob: -15.25036334991455
    6. ',' → logprob: -15.87536334991455
    7. '	def' → logprob: -16.250362396240234
    8. '4' → logprob: -16.625362396240234
    9. ')' → logprob: -16.750362396240234
    10. '<|end|>' → logprob: -17.125362396240234

Token 143: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6987037658691406
    2. 'def' (adapté à ' def') → logprob: -0.6987037658691406
    3. '   ' → logprob: -5.198703765869141
    4. 'from' → logprob: -11.19870376586914
    5. ' ' → logprob: -13.69870376586914
    6. '	def' → logprob: -14.44870376586914
    7. 'import' → logprob: -15.07370376586914
    8. 'class' → logprob: -15.19870376586914
    9. '  ' → logprob: -15.32370376586914
    10. '    ' → logprob: -15.44870376586914

Token 144: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02743504010140896
    2. '__' → logprob: -4.027434825897217
    3. 'init' → logprob: -5.277434825897217
    4. ' def' → logprob: -6.527434825897217
    5. ' init' → logprob: -6.652434825897217
    6. '_init' → logprob: -6.777434825897217
    7. '```' → logprob: -9.152435302734375
    8. 'def' → logprob: -10.152435302734375
    9. ' ' → logprob: -10.277435302734375
    10. 'class' → logprob: -10.902435302734375

Token 145: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.875
    3. '```' → logprob: -17.5
    4. ' init' → logprob: -17.75
    5. 'ini' → logprob: -18.125
    6. 'in' → logprob: -18.25
    7. 'int' → logprob: -18.375
    8. '
' → logprob: -19.0
    9. 'i' → logprob: -19.25
    10. '   ' → logprob: -19.75

Token 146: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0026932477485388517
    2. '(self' → logprob: -6.127693176269531
    3. '__' → logprob: -8.002693176269531
    4. '__(
' → logprob: -8.752693176269531
    5. 'self' → logprob: -11.377693176269531
    6. '_(' → logprob: -13.502693176269531
    7. '(' → logprob: -13.627693176269531
    8. ' (' → logprob: -14.877693176269531
    9. '__((' → logprob: -14.877693176269531
    10. '<>(' → logprob: -15.627693176269531

Token 147: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016063073417171836
    2. ' self' → logprob: -9.125160217285156
    3. '
' → logprob: -10.000160217285156
    4. ')' → logprob: -12.250160217285156
    5. '):
' → logprob: -14.375160217285156
    6. '   ' → logprob: -14.625160217285156
    7. '(self' → logprob: -16.125160217285156
    8. ' ' → logprob: -17.125160217285156
    9. '       ' → logprob: -17.125160217285156
    10. ')
' → logprob: -17.375160217285156

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16301017999649048
    2. 'self' → logprob: -1.9130101203918457
    3. ' self' → logprob: -6.913010120391846
    4. '(self' → logprob: -7.038010120391846
    5. ' ,' → logprob: -8.038010597229004
    6. '   ' → logprob: -8.538010597229004
    7. ',self' → logprob: -9.413010597229004
    8. ',
' → logprob: -9.538010597229004
    9. ')' → logprob: -9.663010597229004
    10. ' (' → logprob: -10.038010597229004

Token 149: ' values' (ID: 4824)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.1142989993095398
    2. ' cells' → logprob: -2.6142990589141846
    3. 'self' → logprob: -4.1142988204956055
    4. 'rows' → logprob: -4.8642988204956055
    5. 'grid' → logprob: -5.3642988204956055
    6. ' grid' → logprob: -6.4892988204956055
    7. ' self' → logprob: -7.1142988204956055
    8. 'letters' → logprob: -7.6142988204956055
    9. 'cell' → logprob: -7.7392988204956055
    10. 'words' → logprob: -8.114298820495605

Token 150: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001544141792692244
    2. 'self' → logprob: -7.001543998718262
    3. '):' → logprob: -8.251543998718262
    4. ',' → logprob: -8.376543998718262
    5. ' :' → logprob: -10.501543998718262
    6. '_:' → logprob: -10.501543998718262
    7. '   ' → logprob: -10.751543998718262
    8. ')' → logprob: -10.876543998718262
    9. '```' → logprob: -11.751543998718262
    10. '=' → logprob: -12.001543998718262

Token 151: ' List' (ID: 2655)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.22586534917354584
    2. 'List' → logprob: -1.600865364074707
    3. ' Dict' → logprob: -8.975865364074707
    4. ')' → logprob: -9.225865364074707
    5. ' List' → logprob: -9.475865364074707
    6. '[List' → logprob: -9.725865364074707
    7. 'str' → logprob: -10.725865364074707
    8. '[' → logprob: -11.225865364074707
    9. 'dict' → logprob: -11.475865364074707
    10. 'Set' → logprob: -11.600865364074707

Token 152: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21069519221782684
    2. '[int' → logprob: -1.7106951475143433
    3. '[str' → logprob: -5.210695266723633
    4. '[List' → logprob: -5.585695266723633
    5. 'Cell' → logprob: -11.460695266723633
    6. '[Int' → logprob: -12.585695266723633
    7. 'int' → logprob: -12.585695266723633
    8. '['' → logprob: -12.960695266723633
    9. '[cell' → logprob: -13.085695266723633
    10. '<Cell' → logprob: -13.210695266723633

Token 153: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.5224165320396423
    2. ']):
' → logprob: -1.397416591644287
    3. '],' → logprob: -2.022416591644287
    4. ']' → logprob: -4.272416591644287
    5. ',' → logprob: -4.772416591644287
    6. '])' → logprob: -5.772416591644287
    7. '[' → logprob: -7.397416591644287
    8. '):' → logprob: -7.772416591644287
    9. ' ]' → logprob: -8.647416114807129
    10. ')' → logprob: -9.272416114807129

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009789824252948165
    2. '   ' → logprob: -7.750978946685791
    3. 'self' → logprob: -8.87597942352295
    4. ':' → logprob: -8.87597942352295
    5. ')' → logprob: -9.87597942352295
    6. '<|end|>' → logprob: -9.87597942352295
    7. ',' → logprob: -10.00097942352295
    8. ' self' → logprob: -10.50097942352295
    9. '):' → logprob: -10.75097942352295
    10. '#' → logprob: -10.87597942352295

Token 155: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00042923877481371164
    2. '       ' → logprob: -8.125429153442383
    3. ' self' → logprob: -9.000429153442383
    4. '#' (adapté à ' #') → logprob: -12.000429153442383
    5. 'super' → logprob: -13.125429153442383
    6. 'cells' → logprob: -14.000429153442383
    7. 'from' → logprob: -14.875429153442383
    8. '   ' → logprob: -16.000429153442383
    9. 'pass' → logprob: -16.125429153442383
    10. 'assert' → logprob: -16.125429153442383

Token 156: ' Map' (ID: 7343)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011665337951853871
    2. '#' → logprob: -7.126166343688965
    3. 'pass' → logprob: -8.501166343688965
    4. 'cells' → logprob: -9.376166343688965
    5. 'assert' → logprob: -10.001166343688965
    6. ' self' → logprob: -12.251166343688965
    7. 'raise' → logprob: -12.376166343688965
    8. 'names' → logprob: -12.876166343688965
    9. 'cell' → logprob: -13.126166343688965
    10. 'Ass' → logprob: -13.126166343688965

Token 157: ' from' (ID: 591)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.46035853028297424
    2. ' self' → logprob: -1.0853585004806519
    3. '       ' → logprob: -3.9603586196899414
    4. 'from' → logprob: -5.085358619689941
    5. 'name' → logprob: -6.460358619689941
    6. ' from' → logprob: -6.460358619689941
    7. ' cells' → logprob: -7.835358619689941
    8. '[self' → logprob: -7.835358619689941
    9. ' cell' → logprob: -8.210358619689941
    10. 'values' → logprob: -8.335358619689941

Token 158: ' cell' (ID: 4206)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.44539931416511536
    2. 'name' → logprob: -1.570399284362793
    3. 'cell' → logprob: -1.945399284362793
    4. ' cell' → logprob: -5.820399284362793
    5. ' str' → logprob: -6.445399284362793
    6. ' name' → logprob: -6.570399284362793
    7. 'names' → logprob: -7.320399284362793
    8. 'Cell' → logprob: -7.695399284362793
    9. '[str' → logprob: -7.820399284362793
    10. 'cells' → logprob: -7.820399284362793

Token 159: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.07202088832855225
    2. ' name' → logprob: -3.447021007537842
    3. '_name' → logprob: -3.447021007537842
    4. 'names' → logprob: -5.697021007537842
    5. ' names' → logprob: -7.322021007537842
    6. '_names' → logprob: -7.447021007537842
    7. 's' → logprob: -7.697021007537842
    8. 'self' → logprob: -7.822021007537842
    9. ' to' → logprob: -8.947020530700684
    10. 'Name' → logprob: -9.447020530700684

Token 160: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.08971512317657471
    2. 'to' → logprob: -2.464715003967285
    3. ':' → logprob: -8.214715003967285
    4. '       ' → logprob: -8.339715003967285
    5. '<|end|>' → logprob: -9.214715003967285
    6. ')' → logprob: -10.089715003967285
    7. 's' → logprob: -10.714715003967285
    8. ',' → logprob: -10.839715003967285
    9. ' :' → logprob: -11.339715003967285
    10. ' ' → logprob: -11.339715003967285

Token 161: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.005159870255738497
    2. ' Cell' → logprob: -5.630159854888916
    3. 'self' → logprob: -6.505159854888916
    4. 'cell' → logprob: -10.630160331726074
    5. ' self' → logprob: -11.130160331726074
    6. 'Dict' → logprob: -11.505160331726074
    7. 'List' → logprob: -12.380160331726074
    8. 'Cells' → logprob: -13.130160331726074
    9. '_Cell' → logprob: -13.255160331726074
    10. ' cell' → logprob: -13.630160331726074

Token 162: ' instance' (ID: 4934)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6099032759666443
    2. '
' → logprob: -1.484903335571289
    3. '       ' → logprob: -2.234903335571289
    4. ':' → logprob: -3.359903335571289
    5. ' =' → logprob: -3.484903335571289
    6. ' self' → logprob: -4.484903335571289
    7. 's' → logprob: -4.609903335571289
    8. ':
' → logprob: -4.859903335571289
    9. '(self' → logprob: -4.984903335571289
    10. '[self' → logprob: -5.484903335571289

Token 163: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.495476096868515
    2. 'self' → logprob: -0.9954761266708374
    3. ' self' → logprob: -3.870476007461548
    4. '
' → logprob: -8.745475769042969
    5. '(self' → logprob: -10.495475769042969
    6. ',' → logprob: -10.495475769042969
    7. '<|end|>' → logprob: -10.745475769042969
    8. '   ' → logprob: -10.870475769042969
    9. '{' → logprob: -10.870475769042969
    10. '	self' → logprob: -11.745475769042969

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01138719730079174
    2. 'self' → logprob: -4.511387348175049
    3. ' self' → logprob: -8.01138687133789
    4. '	self' → logprob: -13.13638687133789
    5. '
' → logprob: -13.88638687133789
    6. '(self' → logprob: -14.01138687133789
    7. '<|end|>' → logprob: -14.13638687133789
    8. '      ' → logprob: -14.26138687133789
    9. '        
' → logprob: -14.63638687133789
    10. '```' → logprob: -14.63638687133789

Token 165: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012124951463192701
    2. '       ' → logprob: -6.8762125968933105
    3. ' self' → logprob: -8.626212120056152
    4. '	self' → logprob: -15.251212120056152
    5. '   ' → logprob: -16.87621307373047
    6. 'from' → logprob: -17.75121307373047
    7. '(self' → logprob: -18.00121307373047
    8. 'super' → logprob: -18.37621307373047
    9. 's' → logprob: -18.62621307373047
    10. '	' → logprob: -18.62621307373047

Token 166: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.0004803624760825187
    2. 'cells' → logprob: -7.7504801750183105
    3. '.' → logprob: -10.750480651855469
    4. '.values' → logprob: -11.750480651855469
    5. '.cell' → logprob: -12.250480651855469
    6. '._' → logprob: -12.375480651855469
    7. ' .' → logprob: -12.625480651855469
    8. '_cells' → logprob: -12.625480651855469
    9. ' cells' → logprob: -13.125480651855469
    10. '.Cells' → logprob: -13.875480651855469

Token 167: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8114636540412903
    2. ':' → logprob: -1.0614635944366455
    3. ' =' → logprob: -1.5614635944366455
    4. ' :' → logprob: -11.436463356018066
    5. '   ' → logprob: -13.311463356018066
    6. ' ' → logprob: -13.811463356018066
    7. '={' → logprob: -15.561463356018066
    8. '={}' → logprob: -15.561463356018066
    9. '=dict' → logprob: -15.686463356018066
    10. '[' → logprob: -15.936463356018066

Token 168: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -5.836499985889532e-05
    2. ' Dict' → logprob: -9.7500581741333
    3. 'dict' → logprob: -18.125059127807617
    4. '   ' → logprob: -19.125059127807617
    5. '.Dict' → logprob: -19.250059127807617
    6. 'List' → logprob: -20.375059127807617
    7. '_dict' → logprob: -21.125059127807617
    8. '[' → logprob: -21.250059127807617
    9. 'Dic' → logprob: -21.625059127807617
    10. 'Dictionary' → logprob: -22.500059127807617

Token 169: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.125001907348633
    3. 'str' → logprob: -14.125001907348633
    4. ' [' → logprob: -16.125001907348633
    5. '[int' → logprob: -16.500001907348633
    6. '[
' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.125001907348633
    8. '```' → logprob: -17.250001907348633
    9. 'Str' → logprob: -17.375001907348633
    10. '       ' → logprob: -17.500001907348633

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022642381372861564
    2. ' ,' → logprob: -8.875226020812988
    3. '[' → logprob: -9.875226020812988
    4. ']' → logprob: -10.750226020812988
    5. 'Cell' → logprob: -12.000226020812988
    6. '[str' → logprob: -12.375226020812988
    7. '   ' → logprob: -13.875226020812988
    8. '[int' → logprob: -15.125226020812988
    9. '```' → logprob: -15.125226020812988
    10. ',List' → logprob: -15.375226020812988

Token 171: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.005234002135694027
    2. ' Cell' → logprob: -5.2552337646484375
    3. '_Cell' → logprob: -15.880233764648438
    4. 'cell' → logprob: -16.380233764648438
    5. '<Cell' → logprob: -17.130233764648438
    6. ' ' → logprob: -18.005233764648438
    7. '_cell' → logprob: -18.130233764648438
    8. ' cell' → logprob: -18.255233764648438
    9. 'Cel' → logprob: -18.380233764648438
    10. 'Cells' → logprob: -18.880233764648438

Token 172: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.2723104848410003e-05
    2. ']=' → logprob: -10.875022888183594
    3. ' ]' → logprob: -12.750022888183594
    4. '>' → logprob: -14.625022888183594
    5. '   ' → logprob: -16.625022888183594
    6. ']>' → logprob: -16.875022888183594
    7. ']
' → logprob: -17.125022888183594
    8. '']' → logprob: -17.250022888183594
    9. '       ' → logprob: -17.375022888183594
    10. '"]' → logprob: -17.875022888183594

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326910853385925
    2. ' =' → logprob: -1.3132691383361816
    3. '={}' → logprob: -12.313268661499023
    4. '={}
' → logprob: -14.313268661499023
    5. ' ' → logprob: -14.563268661499023
    6. '       ' → logprob: -14.938268661499023
    7. ')' → logprob: -15.188268661499023
    8. ' =
' → logprob: -15.188268661499023
    9. '={' → logprob: -15.563268661499023
    10. ' ={' → logprob: -15.688268661499023

Token 174: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.16896888613700867
    2. '{' → logprob: -1.918968915939331
    3. ' {}' → logprob: -5.418968677520752
    4. ' {' → logprob: -6.293968677520752
    5. '{}
' → logprob: -6.918968677520752
    6. '{
' → logprob: -6.918968677520752
    7. '{"' → logprob: -8.91896915435791
    8. '{name' → logprob: -9.16896915435791
    9. '{x' → logprob: -9.66896915435791
    10. 'dict' → logprob: -9.79396915435791

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006450204644352198
    2. '<|end|>' → logprob: -5.506450176239014
    3. ' for' → logprob: -6.131450176239014
    4. '   ' → logprob: -9.756450653076172
    5. ' ' → logprob: -10.131450653076172
    6. 'for' → logprob: -10.131450653076172
    7. '	' → logprob: -11.881450653076172
    8. '      ' → logprob: -12.006450653076172
    9. '	for' → logprob: -12.006450653076172
    10. ')' → logprob: -12.131450653076172

Token 176: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16233018040657043
    2. ' for' → logprob: -2.412330150604248
    3. '       ' → logprob: -2.912330150604248
    4. 'names' → logprob: -5.537330150604248
    5. 'self' → logprob: -7.412330150604248
    6. 'letters' → logprob: -7.787330150604248
    7. ' names' → logprob: -8.162330627441406
    8. 'cell' → logprob: -8.912330627441406
    9. ' cell' → logprob: -9.537330627441406
    10. ' letters' → logprob: -9.537330627441406

Token 177: ' Cells' (ID: 117066)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061747826635837555
    2. 'self' → logprob: -3.6867477893829346
    3. '#' → logprob: -3.9367477893829346
    4. 'rows' → logprob: -4.561748027801514
    5. 'names' → logprob: -6.811748027801514
    6. 'digits' → logprob: -7.311748027801514
    7. 'row' → logprob: -7.561748027801514
    8. 'cell' → logprob: -7.936748027801514
    9. ' for' → logprob: -8.186747550964355
    10. 'letters' → logprob: -8.311747550964355

Token 178: ' in' (ID: 306)
  Prédit: '_names'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_names' → logprob: -0.6169077157974243
    2. 'names' → logprob: -1.4919077157974243
    3. ' =' → logprob: -1.8669077157974243
    4. '_order' → logprob: -3.9919075965881348
    5. ' that' → logprob: -4.366907596588135
    6. ' to' → logprob: -4.491907596588135
    7. 'order' → logprob: -4.741907596588135
    8. 'to' → logprob: -5.741907596588135
    9. ' in' → logprob: -5.866907596588135
    10. ' names' → logprob: -6.241907596588135

Token 179: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.0087065696716309
    2. '['' → logprob: -1.3837065696716309
    3. '[]' → logprob: -1.5087065696716309
    4. 'self' → logprob: -2.758706569671631
    5. '["' → logprob: -3.883706569671631
    6. 'values' → logprob: -3.883706569671631
    7. ' order' → logprob: -4.008706569671631
    8. 'the' → logprob: -4.008706569671631
    9. ' ['' → logprob: -5.008706569671631
    10. 'row' → logprob: -6.008706569671631

Token 180: ' A' (ID: 355)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5023495554924011
    2. ' =' → logprob: -1.002349615097046
    3. 'self' → logprob: -4.252349376678467
    4. '<|end|>' → logprob: -5.877349376678467
    5. ' self' → logprob: -6.127349376678467
    6. ':' → logprob: -6.127349376678467
    7. '   ' → logprob: -7.252349376678467
    8. '[]' → logprob: -7.377349376678467
    9. ' for' → logprob: -7.502349376678467
    10. '=' → logprob: -7.627349376678467

Token 181: ' to' (ID: 316)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.995040237903595
    2. ',' → logprob: -1.4950401782989502
    3. 'BC' → logprob: -1.4950401782989502
    4. 'to' → logprob: -2.62004017829895
    5. '1' → logprob: -3.49504017829895
    6. ',B' → logprob: -3.49504017829895
    7. ' to' → logprob: -4.620040416717529
    8. 'Z' → logprob: -4.995040416717529
    9. ' B' → logprob: -5.620040416717529
    10. 'BCD' → logprob: -5.870040416717529

Token 182: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.24256247282028198
    2. 'Z' → logprob: -1.8675625324249268
    3. 'J' → logprob: -3.7425625324249268
    4. 'L' → logprob: -4.242562294006348
    5. ' I' → logprob: -5.242562294006348
    6. 'F' → logprob: -5.617562294006348
    7. 'E' → logprob: -6.492562294006348
    8. 'D' → logprob: -6.492562294006348
    9. 'H' → logprob: -6.742562294006348
    10. ' Z' → logprob: -6.867562294006348

Token 183: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004906277637928724
    2. ' for' → logprob: -5.754906177520752
    3. 'ABCDEFGHI' → logprob: -8.00490665435791
    4. ',' → logprob: -8.25490665435791
    5. ' =' → logprob: -8.50490665435791
    6. '<|end|>' → logprob: -8.75490665435791
    7. '   ' → logprob: -9.12990665435791
    8. 'for' → logprob: -9.12990665435791
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -9.62990665435791
    10. '<|end|>' → logprob: -9.62990665435791

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027428159955888987
    2. ' for' → logprob: -6.377742767333984
    3. 'self' → logprob: -8.002742767333984
    4. ' self' → logprob: -8.502742767333984
    5. '   ' → logprob: -8.752742767333984
    6. 'for' → logprob: -9.377742767333984
    7. ' cells' → logprob: -9.627742767333984
    8. ',' → logprob: -10.377742767333984
    9. 'cells' → logprob: -10.502742767333984
    10. '<|end|>' → logprob: -10.627742767333984

Token 185: ' names' (ID: 8747)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03390074893832207
    2. ' for' → logprob: -3.658900737762451
    3. 'self' → logprob: -5.158900737762451
    4. 'cell' → logprob: -7.158900737762451
    5. 'names' (adapté à ' names') → logprob: -7.283900737762451
    6. '       ' → logprob: -9.03390121459961
    7. 'cells' → logprob: -9.28390121459961
    8. ' self' → logprob: -9.53390121459961
    9. ' cell' → logprob: -11.15890121459961
    10. ' names' → logprob: -11.15890121459961

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022705048322678
    2. '=' → logprob: -2.350227117538452
    3. '=['' → logprob: -11.350227355957031
    4. ':' → logprob: -11.725227355957031
    5. ' ' → logprob: -15.100227355957031
    6. '=["' → logprob: -16.35022735595703
    7. ')' → logprob: -16.97522735595703
    8. ' =[' → logprob: -16.97522735595703
    9. '```' → logprob: -17.10022735595703
    10. '   ' → logprob: -17.47522735595703

Token 187: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.7297757267951965
    2. ' ['' → logprob: -0.9797757267951965
    3. '["' → logprob: -2.1047756671905518
    4. ' ["' → logprob: -4.604775905609131
    5. '"' → logprob: -5.604775905609131
    6. ' "' → logprob: -6.229775905609131
    7. ' list' → logprob: -6.604775905609131
    8. ' [' → logprob: -6.854775905609131
    9. ''' → logprob: -7.104775905609131
    10. '[' → logprob: -7.354775905609131

Token 188: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.4849443838757e-06
    2. 'a' → logprob: -13.375004768371582
    3. ''A' → logprob: -13.500004768371582
    4. 'C' → logprob: -15.750004768371582
    5. ' A' → logprob: -15.750004768371582
    6. ''' → logprob: -16.000003814697266
    7. '']' → logprob: -16.500003814697266
    8. '```' → logprob: -16.500003814697266
    9. '"A' → logprob: -16.500003814697266
    10. 'B' → logprob: -16.625003814697266

Token 189: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.008925831876695156
    2. '','' → logprob: -4.758925914764404
    3. ''' → logprob: -8.258925437927246
    4. 'B' → logprob: -10.383925437927246
    5. '',
' → logprob: -11.133925437927246
    6. ' ',' → logprob: -12.758925437927246
    7. ',' → logprob: -13.883925437927246
    8. '"',' → logprob: -14.133925437927246
    9. '',"' → logprob: -14.633925437927246
    10. '',...
' → logprob: -14.758925437927246

Token 190: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.4855663721391466e-05
    2. ' B' → logprob: -11.250015258789062
    3. 'C' → logprob: -13.625015258789062
    4. ''' → logprob: -15.750015258789062
    5. 'D' → logprob: -16.250015258789062
    6. 'H' → logprob: -16.750015258789062
    7. 'A' → logprob: -17.000015258789062
    8. 'F' → logprob: -17.125015258789062
    9. ' ' → logprob: -17.125015258789062
    10. '   ' → logprob: -17.375015258789062

Token 191: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0069820028729736805
    2. '',' → logprob: -5.13198184967041
    3. 'C' → logprob: -7.13198184967041
    4. ''' → logprob: -8.50698184967041
    5. ''C' → logprob: -10.50698184967041
    6. '',
' → logprob: -11.25698184967041
    7. ',C' → logprob: -12.63198184967041
    8. ' ','' → logprob: -13.25698184967041
    9. '','','' → logprob: -13.38198184967041
    10. '(','' → logprob: -13.63198184967041

Token 192: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -3.054500666621607e-06
    2. ''C' → logprob: -12.87500286102295
    3. ' C' → logprob: -15.50000286102295
    4. 'D' → logprob: -15.50000286102295
    5. ''' → logprob: -16.750003814697266
    6. 'E' → logprob: -18.375003814697266
    7. 'F' → logprob: -18.500003814697266
    8. '
' → logprob: -20.125003814697266
    9. '...' → logprob: -20.125003814697266
    10. 'G' → logprob: -20.250003814697266

Token 193: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.005395849701017141
    2. '',' → logprob: -5.255395889282227
    3. 'D' → logprob: -9.505395889282227
    4. ',D' → logprob: -10.505395889282227
    5. ''' → logprob: -10.755395889282227
    6. ''D' → logprob: -10.755395889282227
    7. '',
' → logprob: -12.130395889282227
    8. '','','' → logprob: -12.630395889282227
    9. ' ','' → logprob: -12.880395889282227
    10. ','' → logprob: -13.255395889282227

Token 194: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -5.512236498361744e-07
    2. ' D' → logprob: -15.500000953674316
    3. ''D' → logprob: -15.500000953674316
    4. 'E' → logprob: -16.25
    5. 'F' → logprob: -17.5
    6. ''' → logprob: -18.25
    7. 'I' → logprob: -18.875
    8. 'H' → logprob: -18.875
    9. 'G' → logprob: -19.25
    10. '','' → logprob: -19.375

Token 195: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.001842609723098576
    2. '',' → logprob: -6.501842498779297
    3. 'E' → logprob: -8.251842498779297
    4. '',
' → logprob: -10.251842498779297
    5. ''E' → logprob: -11.251842498779297
    6. ',E' → logprob: -11.251842498779297
    7. ''' → logprob: -11.376842498779297
    8. ' ','' → logprob: -12.751842498779297
    9. '','','' → logprob: -13.876842498779297
    10. ','' → logprob: -14.501842498779297

Token 196: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -2.5776860184123507e-06
    2. 'F' → logprob: -13.00000286102295
    3. ' E' → logprob: -15.37500286102295
    4. 'G' → logprob: -17.625001907348633
    5. 'H' → logprob: -17.875001907348633
    6. ''E' → logprob: -18.375001907348633
    7. ',E' → logprob: -19.000001907348633
    8. 'I' → logprob: -19.375001907348633
    9. 'C' → logprob: -20.250001907348633
    10. '
' → logprob: -20.250001907348633

Token 197: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0006035494152456522
    2. '',' → logprob: -7.500603675842285
    3. ',F' → logprob: -11.000603675842285
    4. 'F' → logprob: -11.125603675842285
    5. ''' → logprob: -11.250603675842285
    6. '',
' → logprob: -12.625603675842285
    7. ','' → logprob: -14.125603675842285
    8. ' ','' → logprob: -14.125603675842285
    9. ',' → logprob: -14.625603675842285
    10. '',"' → logprob: -14.875603675842285

Token 198: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -7.941850526549388e-06
    2. ''' → logprob: -11.875007629394531
    3. ' F' → logprob: -14.125007629394531
    4. 'E' → logprob: -17.50000762939453
    5. 'I' → logprob: -17.87500762939453
    6. '
' → logprob: -18.00000762939453
    7. '['' → logprob: -18.00000762939453
    8. 'G' → logprob: -18.25000762939453
    9. '```' → logprob: -18.62500762939453
    10. ',F' → logprob: -18.87500762939453

Token 199: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.004223116673529148
    2. '',' → logprob: -5.504223346710205
    3. ''' → logprob: -9.379222869873047
    4. ',G' → logprob: -10.504222869873047
    5. 'G' → logprob: -11.379222869873047
    6. '',
' → logprob: -12.004222869873047
    7. '',"' → logprob: -12.129222869873047
    8. ' ','' → logprob: -12.629222869873047
    9. ','' → logprob: -13.379222869873047
    10. '','','' → logprob: -13.754222869873047

Token 200: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -9.729906196298543e-06
    2. ''' → logprob: -12.125009536743164
    3. ' G' → logprob: -13.000009536743164
    4. 'F' → logprob: -13.250009536743164
    5. '','' → logprob: -17.375009536743164
    6. 'H' → logprob: -17.375009536743164
    7. ',G' → logprob: -17.875009536743164
    8. '
' → logprob: -18.375009536743164
    9. '	G' → logprob: -18.875009536743164
    10. '```' → logprob: -19.125009536743164

Token 201: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.002310599898919463
    2. '',' → logprob: -6.127310752868652
    3. ',H' → logprob: -10.127310752868652
    4. 'H' → logprob: -10.627310752868652
    5. ''' → logprob: -10.627310752868652
    6. ''H' → logprob: -10.877310752868652
    7. '',
' → logprob: -12.252310752868652
    8. ' ','' → logprob: -12.252310752868652
    9. ','' → logprob: -12.752310752868652
    10. ',' → logprob: -13.627310752868652

Token 202: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.558399319241289e-05
    2. ''H' → logprob: -11.000025749206543
    3. ' H' → logprob: -11.750025749206543
    4. 'I' → logprob: -14.625025749206543
    5. ''' → logprob: -14.875025749206543
    6. ',H' → logprob: -16.750024795532227
    7. '','' → logprob: -18.000024795532227
    8. 'A' → logprob: -18.125024795532227
    9. 'F' → logprob: -18.500024795532227
    10. 'HI' → logprob: -18.500024795532227

Token 203: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0025951575953513384
    2. '',' → logprob: -6.002594947814941
    3. 'I' → logprob: -10.002594947814941
    4. ''I' → logprob: -10.002594947814941
    5. ','' → logprob: -11.502594947814941
    6. ''' → logprob: -11.627594947814941
    7. ',I' → logprob: -11.877594947814941
    8. '',
' → logprob: -13.877594947814941
    9. '',"' → logprob: -13.877594947814941
    10. ',' → logprob: -14.627594947814941

Token 204: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -2.641841820150148e-05
    2. ''I' → logprob: -11.25002670288086
    3. ' I' → logprob: -11.37502670288086
    4. ''' → logprob: -13.75002670288086
    5. '
' → logprob: -15.25002670288086
    6. ' ' → logprob: -16.37502670288086
    7. '']' → logprob: -16.50002670288086
    8. '	I' → logprob: -16.75002670288086
    9. '```' → logprob: -16.75002670288086
    10. 'i' → logprob: -16.87502670288086

Token 205: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.008685601875185966
    2. '']
' → logprob: -4.75868558883667
    3. '']
' → logprob: -10.758686065673828
    4. ']' → logprob: -10.883686065673828
    5. '']

' → logprob: -11.133686065673828
    6. ''' → logprob: -11.258686065673828
    7. '"]' → logprob: -13.508686065673828
    8. ' ']' → logprob: -14.133686065673828
    9. '')' → logprob: -14.633686065673828
    10. ')' → logprob: -14.883686065673828

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08546887338161469
    2. ' for' → logprob: -2.8354687690734863
    3. '
' → logprob: -4.335468769073486
    4. '<|end|>' → logprob: -5.210468769073486
    5. 'for' → logprob: -5.710468769073486
    6. '   ' → logprob: -7.835468769073486
    7. '<|end|>' → logprob: -8.710469245910645
    8. '        
' → logprob: -8.835469245910645
    9. ')' → logprob: -9.210469245910645
    10. ',' → logprob: -9.335469245910645

Token 207: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3141202926635742
    2. 'for' (adapté à ' for') → logprob: -1.3141202926635742
    3. '       ' → logprob: -7.064120292663574
    4. '	for' → logprob: -12.939120292663574
    5. '   ' → logprob: -15.814120292663574
    6. '```' → logprob: -15.939120292663574
    7. ' ' → logprob: -16.43912124633789
    8. '#' → logprob: -17.18912124633789
    9. ' ' → logprob: -17.81412124633789
    10. '
' → logprob: -17.93912124633789

Token 208: ' i' (ID: 575)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.5501184463500977
    2. 'i' → logprob: -1.3001184463500977
    3. ' i' → logprob: -2.1751184463500977
    4. ' name' → logprob: -3.3001184463500977
    5. ' idx' → logprob: -9.675118446350098
    6. 'idx' → logprob: -10.175118446350098
    7. 'n' → logprob: -10.425118446350098
    8. '(i' → logprob: -12.800118446350098
    9. 'index' → logprob: -12.800118446350098
    10. ' ' → logprob: -12.925118446350098

Token 209: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06237376853823662
    2. 'in' → logprob: -2.9373738765716553
    3. ',' → logprob: -4.937373638153076
    4. ' ' → logprob: -8.562374114990234
    5. ' ,' → logprob: -9.312374114990234
    6. ',in' → logprob: -13.062374114990234
    7. '  ' → logprob: -13.312374114990234
    8. 'n' → logprob: -13.562374114990234
    9. '	in' → logprob: -14.312374114990234
    10. ',n' → logprob: -14.312374114990234

Token 210: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.0032131264451891184
    2. ' name' → logprob: -5.753212928771973
    3. 'n' → logprob: -10.253212928771973
    4. '	name' → logprob: -17.37821388244629
    5. 'c' → logprob: -17.62821388244629
    6. ' n' → logprob: -17.62821388244629
    7. ' ' → logprob: -17.75321388244629
    8. 'v' → logprob: -18.12821388244629
    9. 'ch' → logprob: -18.37821388244629
    10. '(name' → logprob: -18.62821388244629

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03675832599401474
    2. 'in' → logprob: -3.4117584228515625
    3. ',' → logprob: -5.7867584228515625
    4. ' ,' → logprob: -10.661758422851562
    5. ' ' → logprob: -11.536758422851562
    6. 'import' → logprob: -13.161758422851562
    7. '=' → logprob: -14.036758422851562
    8. ',in' → logprob: -14.161758422851562
    9. ')' → logprob: -14.286758422851562
    10. '	in' → logprob: -14.661758422851562

Token 212: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.12692883610725403
    2. ' enumerate' → logprob: -2.1269288063049316
    3. 'range' → logprob: -14.75192928314209
    4. '```' → logprob: -16.251928329467773
    5. '   ' → logprob: -16.751928329467773
    6. 'enum' → logprob: -16.876928329467773
    7. ' ' → logprob: -17.126928329467773
    8. 'zip' → logprob: -17.251928329467773
    9. '`' → logprob: -18.626928329467773
    10. 'en' → logprob: -18.751928329467773

Token 213: '(names' (ID: 86857)
  Prédit: '(names'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(names' → logprob: -0.180217906832695
    2. '(values' → logprob: -1.9302178621292114
    3. 'names' → logprob: -4.055217742919922
    4. 'values' → logprob: -6.430217742919922
    5. ' names' → logprob: -7.680217742919922
    6. ' (' → logprob: -8.305217742919922
    7. ' values' → logprob: -9.680217742919922
    8. '(' → logprob: -10.180217742919922
    9. '(range' → logprob: -10.805217742919922
    10. ',' → logprob: -11.930217742919922

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016628600656986237
    2. '):
' → logprob: -4.141628742218018
    3. ' ):' → logprob: -7.891628742218018
    4. ',' → logprob: -8.89162826538086
    5. '):
' → logprob: -10.14162826538086
    6. ':' → logprob: -10.26662826538086
    7. ' ):
' → logprob: -12.64162826538086
    8. ')' → logprob: -12.89162826538086
    9. '):

' → logprob: -13.39162826538086
    10. '}:' → logprob: -14.76662826538086

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02360263653099537
    2. 'self' → logprob: -4.398602485656738
    3. ' self' → logprob: -4.523602485656738
    4. '   ' → logprob: -9.023602485656738
    5. '       ' → logprob: -11.398602485656738
    6. ' ' → logprob: -12.148602485656738
    7. '	   ' → logprob: -12.148602485656738
    8. '	       ' → logprob: -12.398602485656738
    9. ' ' → logprob: -12.648602485656738
    10. '            
' → logprob: -12.648602485656738

Token 216: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4883306324481964
    2. ' self' → logprob: -1.363330602645874
    3. ' val' → logprob: -3.488330602645874
    4. 'value' → logprob: -3.613330602645874
    5. 'cell' → logprob: -3.738330602645874
    6. 'val' → logprob: -4.113330841064453
    7. ' cell' → logprob: -4.363330841064453
    8. '           ' → logprob: -4.488330841064453
    9. ' value' → logprob: -4.863330841064453
    10. 'v' → logprob: -7.988330841064453

Token 217: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.000510260637383908
    2. ' .' → logprob: -8.000510215759277
    3. '.' → logprob: -8.750510215759277
    4. 'cells' → logprob: -11.500510215759277
    5. '.values' → logprob: -13.125510215759277
    6. ').' → logprob: -13.750510215759277
    7. '.Cells' → logprob: -14.500510215759277
    8. '].' → logprob: -14.750510215759277
    9. '.value' → logprob: -14.875510215759277
    10. ':' → logprob: -15.000510215759277

Token 218: '[name' (ID: 23001)
  Prédit: '[name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[name' → logprob: -0.0013446388766169548
    2. '[' → logprob: -6.626344680786133
    3. ' [' → logprob: -11.626344680786133
    4. '][' → logprob: -12.376344680786133
    5. 'name' → logprob: -13.251344680786133
    6. '=' → logprob: -14.501344680786133
    7. ')[' → logprob: -14.501344680786133
    8. '[
' → logprob: -14.876344680786133
    9. ']' → logprob: -15.376344680786133
    10. '```' → logprob: -15.376344680786133

Token 219: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011125932214781642
    2. '=' → logprob: -7.751112461090088
    3. ']=' → logprob: -7.751112461090088
    4. ' =' → logprob: -8.501112937927246
    5. ' ]' → logprob: -10.626112937927246
    6. ')' → logprob: -10.751112937927246
    7. '].' → logprob: -13.626112937927246
    8. '.value' → logprob: -15.376112937927246
    9. ',' → logprob: -16.12611198425293
    10. '(Cell' → logprob: -16.25111198425293

Token 220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048054322600365
    2. ' =' → logprob: -4.511047840118408
    3. ']' → logprob: -15.886048316955566
    4. ']=' → logprob: -17.13604736328125
    5. ')' → logprob: -17.26104736328125
    6. ' ' → logprob: -17.76104736328125
    7. '.' → logprob: -17.88604736328125
    8. 'Cell' → logprob: -17.88604736328125
    9. '<Cell' → logprob: -18.01104736328125
    10. '=

' → logprob: -18.88604736328125

Token 221: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.20141586661338806
    2. ' Cell' → logprob: -1.7014158964157104
    3. '   ' → logprob: -13.701416015625
    4. '<Cell' → logprob: -14.951416015625
    5. '_Cell' → logprob: -14.951416015625
    6. '       ' → logprob: -15.201416015625
    7. ' ' → logprob: -15.701416015625
    8. '(Cell' → logprob: -15.701416015625
    9. 'Cel' → logprob: -16.951416015625
    10. 'cell' → logprob: -17.201416015625

Token 222: '(name' (ID: 5587)
  Prédit: '(name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(name' → logprob: -0.0023015551269054413
    2. 'name' → logprob: -6.3773016929626465
    3. '(' → logprob: -7.5023016929626465
    4. '(names' → logprob: -10.752301216125488
    5. ' name' → logprob: -11.627301216125488
    6. ' (' → logprob: -11.627301216125488
    7. '(
' → logprob: -12.002301216125488
    8. '[name' → logprob: -14.002301216125488
    9. ',name' → logprob: -15.127301216125488
    10. '{name' → logprob: -15.127301216125488

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002116462419508025
    2. ' ,' → logprob: -8.750211715698242
    3. ',i' → logprob: -11.125211715698242
    4. ',value' → logprob: -11.375211715698242
    5. ',n' → logprob: -11.500211715698242
    6. ',val' → logprob: -12.125211715698242
    7. 'values' → logprob: -12.750211715698242
    8. '   ' → logprob: -13.500211715698242
    9. ',None' → logprob: -13.750211715698242
    10. '',' → logprob: -14.000211715698242

Token 224: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.033691804856061935
    2. ' values' → logprob: -3.408691883087158
    3. '-' → logprob: -10.78369140625
    4. 'value' → logprob: -11.53369140625
    5. ' -' → logprob: -12.28369140625
    6. '-values' → logprob: -12.40869140625
    7. '   ' → logprob: -12.78369140625
    8. '(values' → logprob: -13.65869140625
    9. '	values' → logprob: -13.78369140625
    10. '.values' → logprob: -14.53369140625

Token 225: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -13.000003814697266
    3. ' [' → logprob: -13.625003814697266
    4. '[I' → logprob: -18.125003814697266
    5. '[
' → logprob: -18.875003814697266
    6. '[index' → logprob: -19.875003814697266
    7. ')' → logprob: -20.250003814697266
    8. 'i' → logprob: -20.500003814697266
    9. '(i' → logprob: -20.500003814697266
    10. ')[' → logprob: -20.875003814697266

Token 226: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017520569963380694
    2. '])' → logprob: -6.376751899719238
    3. ' )' → logprob: -10.376751899719238
    4. '))' → logprob: -11.501751899719238
    5. ' if' → logprob: -13.126751899719238
    6. ')])' → logprob: -13.501751899719238
    7. ')
' → logprob: -13.626751899719238
    8. '})' → logprob: -13.626751899719238
    9. ')]' → logprob: -13.751751899719238
    10. ']' → logprob: -14.001751899719238

Token 227: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: ' Set' (ID: 3957)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14284485578536987
    2. ' self' → logprob: -2.7678449153900146
    3. '#' → logprob: -2.8928449153900146
    4. ' #' → logprob: -6.1428446769714355
    5. '       ' → logprob: -6.2678446769714355
    6. 'from' → logprob: -6.5178446769714355
    7. '   ' → logprob: -6.6428446769714355
    8. 'import' → logprob: -6.7678446769714355
    9. 'Initialize' → logprob: -7.0178446769714355
    10. 'constraints' → logprob: -7.2678446769714355

Token 230: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3010762929916382
    2. 'self' → logprob: -2.3010764122009277
    3. 'of' → logprob: -2.9260764122009277
    4. ' self' → logprob: -3.1760764122009277
    5. '       ' → logprob: -3.4260764122009277
    6. '()' → logprob: -4.551076412200928
    7. 's' → logprob: -5.051076412200928
    8. '<|end|>' → logprob: -5.676076412200928
    9. '(self' → logprob: -6.051076412200928
    10. '   ' → logprob: -6.551076412200928

Token 231: ' used' (ID: 2061)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.4906236529350281
    2. 'all' → logprob: -2.615623712539673
    3. 'self' → logprob: -2.615623712539673
    4. ' cells' → logprob: -2.865623712539673
    5. 'cells' → logprob: -3.490623712539673
    6. 'unknown' → logprob: -3.740623712539673
    7. ' assigned' → logprob: -3.990623712539673
    8. 'used' → logprob: -3.990623712539673
    9. 'constraints' → logprob: -3.990623712539673
    10. ' all' → logprob: -4.240623474121094

Token 232: ' digits' (ID: 37806)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.12465975433588028
    2. '_names' → logprob: -3.749659776687622
    3. '_numbers' → logprob: -3.749659776687622
    4. 'values' → logprob: -3.874659776687622
    5. '_cells' → logprob: -4.124659538269043
    6. '_digits' → logprob: -4.499659538269043
    7. '<|end|>' → logprob: -4.999659538269043
    8. 'digits' → logprob: -5.624659538269043
    9. ' values' → logprob: -5.749659538269043
    10. ' ' → logprob: -6.249659538269043

Token 233: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05890703201293945
    2. '       ' → logprob: -3.0589070320129395
    3. ' self' → logprob: -5.9339070320129395
    4. 'self' → logprob: -5.9339070320129395
    5. '   ' → logprob: -6.4339070320129395
    6. ' ' → logprob: -6.6839070320129395
    7. '=' → logprob: -7.6839070320129395
    8. ':' → logprob: -8.058906555175781
    9. ' used' → logprob: -8.183906555175781
    10. '(self' → logprob: -8.183906555175781

Token 234: 'from' (ID: 2845)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8000718355178833
    2. 'digit' → logprob: -1.6750718355178833
    3. '{' → logprob: -2.3000717163085938
    4. 'val' → logprob: -2.6750717163085938
    5. 'd' → logprob: -2.8000717163085938
    6. 'self' → logprob: -3.1750717163085938
    7. 'v' → logprob: -3.8000717163085938
    8. ' val' → logprob: -4.300071716308594
    9. 'cell' → logprob: -4.550071716308594
    10. 'for' → logprob: -5.300071716308594

Token 235: ' assigned' (ID: 21482)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.9842473268508911
    2. 'c' → logprob: -1.6092473268508911
    3. 'val' → logprob: -1.9842473268508911
    4. 'v' → logprob: -2.4842472076416016
    5. '[val' → logprob: -2.8592472076416016
    6. 'assigned' → logprob: -3.2342472076416016
    7. '[v' → logprob: -3.4842472076416016
    8. ' val' → logprob: -4.109247207641602
    9. '{' → logprob: -4.359247207641602
    10. '[cell' → logprob: -4.734247207641602

Token 236: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.19313044846057892
    2. 'cells' → logprob: -2.3181304931640625
    3. ')' → logprob: -3.0681304931640625
    4. ' values' → logprob: -4.1931304931640625
    5. 'values' → logprob: -4.3181304931640625
    6. ' )' → logprob: -7.1931304931640625
    7. '_cells' → logprob: -7.1931304931640625
    8. ' ' → logprob: -9.568130493164062
    9. '_values' → logprob: -9.818130493164062
    10. ' or' → logprob: -9.943130493164062

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006122060120105743
    2. 'self' → logprob: -6.00612211227417
    3. ')
' → logprob: -6.25612211227417
    4. ' )' → logprob: -6.75612211227417
    5. '):' → logprob: -8.131121635437012
    6. '       ' → logprob: -10.131121635437012
    7. ' =' → logprob: -10.381121635437012
    8. ' for' → logprob: -10.881121635437012
    9. '):
' → logprob: -10.881121635437012
    10. '   ' → logprob: -11.006121635437012

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014791978523135185
    2. 'self' → logprob: -4.764791965484619
    3. ' self' → logprob: -5.139791965484619
    4. '<|end|>' → logprob: -9.139792442321777
    5. ' used' → logprob: -9.389792442321777
    6. '
' → logprob: -10.389792442321777
    7. '   ' → logprob: -10.889792442321777
    8. '        
' → logprob: -11.514792442321777
    9. '	' → logprob: -12.014792442321777
    10. ' ' → logprob: -12.264792442321777

Token 239: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003098689019680023
    2. ' self' → logprob: -6.003098487854004
    3. 'used' → logprob: -7.628098487854004
    4. '       ' → logprob: -9.003098487854004
    5. ' used' → logprob: -12.003098487854004
    6. 'for' → logprob: -12.503098487854004
    7. '   ' → logprob: -13.503098487854004
    8. '	self' → logprob: -14.878098487854004
    9. 'assigned' → logprob: -14.878098487854004
    10. '        
' → logprob: -15.003098487854004

Token 240: '.used' (ID: 158890)
  Prédit: '.used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.used' → logprob: -0.000930163892917335
    2. '.update' → logprob: -7.625930309295654
    3. '.ass' → logprob: -8.125929832458496
    4. 'used' → logprob: -9.375929832458496
    5. '._' → logprob: -10.000929832458496
    6. '.' → logprob: -11.500929832458496
    7. '_used' → logprob: -13.750929832458496
    8. 'Used' → logprob: -14.250929832458496
    9. '.cells' → logprob: -14.375929832458496
    10. '.assign' → logprob: -14.375929832458496

Token 241: '_digits' (ID: 108638)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40192079544067383
    2. '_digits' → logprob: -1.6519207954406738
    3. '=' → logprob: -2.151920795440674
    4. ':' → logprob: -4.526920795440674
    5. 'digits' → logprob: -5.151920795440674
    6. '_values' → logprob: -5.276920795440674
    7. ' ' → logprob: -7.901920795440674
    8. '=set' → logprob: -7.901920795440674
    9. ' digits' → logprob: -8.651920318603516
    10. 's' → logprob: -9.276920318603516

Token 242: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014453292824327946
    2. '=' → logprob: -4.264453411102295
    3. ':' → logprob: -8.264452934265137
    4. ' ' → logprob: -10.514452934265137
    5. ' :' → logprob: -12.389452934265137
    6. '   ' → logprob: -14.889452934265137
    7. '  ' → logprob: -15.514452934265137
    8. '=set' → logprob: -15.889452934265137
    9. ')' → logprob: -16.514453887939453
    10. 's' → logprob: -17.139453887939453

Token 243: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.3876696527004242
    2. ' Set' → logprob: -1.3876696825027466
    3. 'set' → logprob: -2.887669563293457
    4. ' set' → logprob: -4.137669563293457
    5. '{' → logprob: -10.387669563293457
    6. '_set' → logprob: -12.262669563293457
    7. ' ' → logprob: -13.262669563293457
    8. '_Set' → logprob: -13.512669563293457
    9. '=set' → logprob: -14.012669563293457
    10. ' {' → logprob: -14.137669563293457

Token 244: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.217201367020607
    2. ' =' → logprob: -1.7172013521194458
    3. '=' → logprob: -4.217201232910156
    4. '=int' → logprob: -7.092201232910156
    5. ']' → logprob: -10.967201232910156
    6. '<int' → logprob: -11.217201232910156
    7. ')' → logprob: -11.467201232910156
    8. '(int' → logprob: -11.467201232910156
    9. '=set' → logprob: -11.717201232910156
    10. 'int' → logprob: -11.842201232910156

Token 245: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00026288547087460756
    2. ' ]' → logprob: -8.875263214111328
    3. ']=' → logprob: -9.250263214111328
    4. '()]' → logprob: -10.625263214111328
    5. ')' → logprob: -14.000263214111328
    6. '=' → logprob: -14.500263214111328
    7. ']()' → logprob: -14.750263214111328
    8. '()' → logprob: -15.500263214111328
    9. ']
' → logprob: -15.625263214111328
    10. '>' → logprob: -15.750263214111328

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048596348613500595
    2. '=' → logprob: -3.0485963821411133
    3. ' ' → logprob: -11.673596382141113
    4. ' =
' → logprob: -15.423596382141113
    5. '=set' → logprob: -15.673596382141113
    6. ' ={' → logprob: -16.673595428466797
    7. '   ' → logprob: -17.423595428466797
    8. ')' → logprob: -18.048595428466797
    9. '  ' → logprob: -18.173595428466797
    10. '    ' → logprob: -18.673595428466797

Token 247: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3167353570461273
    2. 'set' → logprob: -1.3167353868484497
    3. ' set' → logprob: -6.19173526763916
    4. ' {' → logprob: -6.81673526763916
    5. '{s' → logprob: -8.44173526763916
    6. '{i' → logprob: -9.94173526763916
    7. '{x' → logprob: -10.06673526763916
    8. '{k' → logprob: -11.44173526763916
    9. '{sub' → logprob: -13.19173526763916
    10. '(set' → logprob: -13.81673526763916

Token 248: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05632270872592926
    2. '()
' → logprob: -3.6813228130340576
    3. '(' → logprob: -4.1813225746154785
    4. '([' → logprob: -5.0563225746154785
    5. '(
' → logprob: -5.6813225746154785
    6. '(val' → logprob: -5.9313225746154785
    7. '(c' → logprob: -7.4313225746154785
    8. '()

' → logprob: -7.9313225746154785
    9. '(cell' → logprob: -7.9313225746154785
    10. '(filter' → logprob: -9.056323051452637

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10110405087471008
    2. ' for' → logprob: -2.4761040210723877
    3. '<|end|>' → logprob: -4.976104259490967
    4. 'for' → logprob: -5.476104259490967
    5. '
' → logprob: -7.101104259490967
    6. '<|end|>' → logprob: -9.851103782653809
    7. '   ' → logprob: -10.351103782653809
    8. '        
' → logprob: -10.851103782653809
    9. ',' → logprob: -10.851103782653809
    10. '	for' → logprob: -11.351103782653809

Token 250: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20569954812526703
    2. ' for' → logprob: -2.2056994438171387
    3. '       ' → logprob: -2.5806994438171387
    4. '	for' → logprob: -10.955699920654297
    5. '   ' → logprob: -12.080699920654297
    6. '           ' → logprob: -13.705699920654297
    7. '	' → logprob: -14.080699920654297
    8. '               ' → logprob: -14.330699920654297
    9. ' ' → logprob: -14.455699920654297
    10. '      ' → logprob: -15.080699920654297

Token 251: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.18192420899868011
    2. ' cell' → logprob: -1.9319242238998413
    3. 'c' → logprob: -4.806924343109131
    4. 'name' → logprob: -5.056924343109131
    5. 'i' → logprob: -6.056924343109131
    6. ' c' → logprob: -6.306924343109131
    7. ' name' → logprob: -6.431924343109131
    8. ' i' → logprob: -7.056924343109131
    9. 'val' → logprob: -8.806923866271973
    10. ' val' → logprob: -9.931923866271973

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019978696946054697
    2. 'in' → logprob: -6.251997947692871
    3. 'name' → logprob: -9.751997947692871
    4. ' ' → logprob: -12.501997947692871
    5. '_name' → logprob: -13.126997947692871
    6. 'value' → logprob: -13.251997947692871
    7. 's' → logprob: -14.251997947692871
    8. 'cell' → logprob: -14.501997947692871
    9. 'import' → logprob: -14.876997947692871
    10. 'obj' → logprob: -15.126997947692871

Token 253: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0040785204619169235
    2. ' self' → logprob: -5.504078388214111
    3. '(self' → logprob: -16.879077911376953
    4. '[self' → logprob: -17.629077911376953
    5. '   ' → logprob: -18.004077911376953
    6. ' ' → logprob: -19.004077911376953
    7. '	self' → logprob: -19.129077911376953
    8. 'values' → logprob: -19.879077911376953
    9. '       ' → logprob: -21.004077911376953
    10. '
' → logprob: -21.004077911376953

Token 254: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.009771670214831829
    2. 'cells' → logprob: -4.634771823883057
    3. ' cells' → logprob: -11.634771347045898
    4. ' .' → logprob: -13.009771347045898
    5. '.' → logprob: -13.384771347045898
    6. '_cells' → logprob: -13.759771347045898
    7. ' ' → logprob: -14.884771347045898
    8. 'ells' → logprob: -15.134771347045898
    9. 'cel' → logprob: -15.259771347045898
    10. 'cell' → logprob: -15.884771347045898

Token 255: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.0008497710223309696
    2. 'values' → logprob: -7.125849723815918
    3. '.' → logprob: -10.250849723815918
    4. ' .' → logprob: -12.000849723815918
    5. ' values' → logprob: -13.000849723815918
    6. '().' → logprob: -14.375849723815918
    7. '.value' → logprob: -14.875849723815918
    8. '.Values' → logprob: -14.875849723815918
    9. '   ' → logprob: -15.750849723815918
    10. 'value' → logprob: -16.000850677490234

Token 256: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12720169126987457
    2. '():
' → logprob: -2.127201795578003
    3. ' ():' → logprob: -8.502202033996582
    4. '():
' → logprob: -9.752202033996582
    5. '()' → logprob: -12.002202033996582
    6. ' (' → logprob: -12.627202033996582
    7. '():

' → logprob: -13.002202033996582
    8. ' ()' → logprob: -15.377202033996582
    9. '(' → logprob: -15.627202033996582
    10. ':' → logprob: -15.877202033996582

Token 257: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022971274331212044
    2. 'if' → logprob: -4.147971153259277
    3. ' if' → logprob: -5.022971153259277
    4. '   ' → logprob: -8.397971153259277
    5. '       ' → logprob: -9.272971153259277
    6. '	   ' → logprob: -13.147971153259277
    7. '    	   ' → logprob: -13.272971153259277
    8. '	       ' → logprob: -14.147971153259277
    9. '```' → logprob: -14.272971153259277
    10. '	if' → logprob: -14.522971153259277

Token 258: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04932861030101776
    2. ' if' → logprob: -3.049328565597534
    3. '           ' → logprob: -7.299328804016113
    4. '       ' → logprob: -9.924328804016113
    5. '               ' → logprob: -11.799328804016113
    6. '   ' → logprob: -11.799328804016113
    7. '	if' → logprob: -14.049328804016113
    8. 'If' → logprob: -16.424327850341797
    9. ' ' → logprob: -16.674327850341797
    10. '```' → logprob: -18.049327850341797

Token 259: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.011049113236367702
    2. ' cell' → logprob: -4.511049270629883
    3. '	cell' → logprob: -14.136049270629883
    4. '(cell' → logprob: -15.636049270629883
    5. ' ' → logprob: -15.761049270629883
    6. '   ' → logprob: -16.511049270629883
    7. '           ' → logprob: -17.261049270629883
    8. '.cell' → logprob: -17.386049270629883
    9. '  ' → logprob: -17.386049270629883
    10. '[cell' → logprob: -17.511049270629883

Token 260: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0009298062650486827
    2. '.' → logprob: -7.375929832458496
    3. '.value' → logprob: -8.125929832458496
    4. 'is' → logprob: -12.000929832458496
    5. 'value' → logprob: -14.250929832458496
    6. ' .' → logprob: -14.500929832458496
    7. '   ' → logprob: -16.37592887878418
    8. '.i' → logprob: -17.50092887878418
    9. '.ass' → logprob: -17.87592887878418
    10. '.Is' → logprob: -18.25092887878418

Token 261: '_ass' (ID: 29140)
  Prédit: '_ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ass' → logprob: -1.7835754988482222e-05
    2. 'assigned' → logprob: -11.000018119812012
    3. 'Assigned' → logprob: -14.625018119812012
    4. ' assigned' → logprob: -15.750018119812012
    5. '_assign' → logprob: -16.250017166137695
    6. '   ' → logprob: -16.375017166137695
    7. '_' → logprob: -16.875017166137695
    8. 's' → logprob: -17.250017166137695
    9. ' ' → logprob: -17.250017166137695
    10. '_initialized' → logprob: -17.250017166137695

Token 262: 'igned' (ID: 3626)
  Prédit: 'igned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igned' → logprob: -1.0802738870552275e-05
    2. 'ined' → logprob: -11.87501049041748
    3. 'signed' → logprob: -12.75001049041748
    4. 'IGNED' → logprob: -15.62501049041748
    5. 'Signed' → logprob: -15.62501049041748
    6. 'ing' → logprob: -15.62501049041748
    7. ' ' → logprob: -16.250011444091797
    8. '_signed' → logprob: -16.375011444091797
    9. 'ed' → logprob: -16.750011444091797
    10. 'ign' → logprob: -17.000011444091797

Token 263: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5773082971572876
    2. '():' → logprob: -0.8273082971572876
    3. '()' → logprob: -6.702308177947998
    4. '():
' → logprob: -9.202308654785156
    5. ' ():' → logprob: -11.077308654785156
    6. '():

' → logprob: -11.577308654785156
    7. ':' → logprob: -11.702308654785156
    8. '()):
' → logprob: -13.327308654785156
    9. '(' → logprob: -13.952308654785156
    10. ':
' → logprob: -13.952308654785156

Token 264: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0068749794736504555
    2. ' self' → logprob: -6.006875038146973
    3. '           ' → logprob: -6.381875038146973
    4. ':
' → logprob: -6.381875038146973
    5. 'self' → logprob: -7.506875038146973
    6. ':' → logprob: -8.256875038146973
    7. ',' → logprob: -9.631875038146973
    8. '):
' → logprob: -10.756875038146973
    9. '	           ' → logprob: -10.881875038146973
    10. '(self' → logprob: -11.131875038146973

Token 265: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04873407259583473
    2. ' self' → logprob: -3.048734188079834
    3. '               ' → logprob: -8.923733711242676
    4. '                   ' → logprob: -11.298733711242676
    5. '	self' → logprob: -15.298733711242676
    6. '           ' → logprob: -15.298733711242676
    7. '   ' → logprob: -15.673733711242676
    8. '(self' → logprob: -16.173734664916992
    9. '                       ' → logprob: -16.423734664916992
    10. '
' → logprob: -16.548734664916992

Token 266: '.used' (ID: 158890)
  Prédit: '.used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.used' → logprob: -0.0003806257154792547
    2. 'used' → logprob: -7.875380516052246
    3. '.' → logprob: -15.500380516052246
    4. ' .' → logprob: -16.000381469726562
    5. '.ass' → logprob: -16.375381469726562
    6. ' used' → logprob: -17.375381469726562
    7. '.available' → logprob: -19.000381469726562
    8. '
' → logprob: -19.000381469726562
    9. '.use' → logprob: -19.125381469726562
    10. '.us' → logprob: -19.875381469726562

Token 267: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -1.0564331205387134e-05
    2. 'digits' → logprob: -11.87501049041748
    3. '_' → logprob: -13.25001049041748
    4. '_letters' → logprob: -14.62501049041748
    5. '_digit' → logprob: -15.00001049041748
    6. '```' → logprob: -15.12501049041748
    7. '
' → logprob: -15.87501049041748
    8. ' _' → logprob: -16.000011444091797
    9. 'Digits' → logprob: -16.125011444091797
    10. '_
' → logprob: -16.375011444091797

Token 268: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00043257648940198123
    2. '.' → logprob: -7.75043249130249
    3. ' .' → logprob: -13.875432968139648
    4. '.update' → logprob: -14.250432968139648
    5. 'add' → logprob: -16.50043296813965
    6. '.Add' → logprob: -18.62543296813965
    7. ' |=' → logprob: -18.75043296813965
    8. '.append' → logprob: -18.87543296813965
    9. '.insert' → logprob: -19.12543296813965
    10. '=' → logprob: -19.12543296813965

Token 269: '(cell' (ID: 46188)
  Prédit: '(cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cell' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.625000953674316
    3. 'cell' → logprob: -14.750000953674316
    4. ' cell' → logprob: -17.375
    5. ' (' → logprob: -18.0
    6. '[cell' → logprob: -18.25
    7. '	cell' → logprob: -20.0
    8. '(
' → logprob: -20.125
    9. '(c' → logprob: -20.75
    10. '((' → logprob: -21.5

Token 270: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -2.9875325708417222e-05
    2. '.' → logprob: -10.625029563903809
    3. 'value' → logprob: -12.500029563903809
    4. ' .' → logprob: -13.250029563903809
    5. ').' → logprob: -16.875030517578125
    6. '.val' → logprob: -18.625030517578125
    7. ' value' → logprob: -19.125030517578125
    8. '.Value' → logprob: -19.375030517578125
    9. ' ' → logprob: -19.500030517578125
    10. '"value' → logprob: -19.625030517578125

Token 271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.923874702304602e-05
    2. ' )' → logprob: -9.375089645385742
    3. ')
' → logprob: -13.125089645385742
    4. '<|end|>' → logprob: -13.875089645385742
    5. '())' → logprob: -14.875089645385742
    6. '))' → logprob: -15.500089645385742
    7. '       ' → logprob: -15.750089645385742
    8. ')#' → logprob: -15.875089645385742
    9. ')}' → logprob: -16.000089645385742
    10. ')return' → logprob: -16.375089645385742

Token 272: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31907957792282104
    2. '<|end|>' → logprob: -1.4440796375274658
    3. '
' → logprob: -4.069079399108887
    4. '    
' → logprob: -4.819079399108887
    5. '       ' → logprob: -5.569079399108887
    6. 'def' → logprob: -5.944079399108887
    7. '<|end|>' → logprob: -6.069079399108887
    8. ')' → logprob: -6.819079399108887
    9. '        
' → logprob: -7.694079399108887
    10. '    ' → logprob: -7.944079399108887

Token 273: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: ' Will' (ID: 6835)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0512980222702026
    2. 'self' → logprob: -1.0512980222702026
    3. 'def' → logprob: -1.4262980222702026
    4. ' #' → logprob: -4.176298141479492
    5. ' self' → logprob: -4.551298141479492
    6. 'constraints' → logprob: -4.551298141479492
    7. ' def' → logprob: -6.176298141479492
    8. 'from' → logprob: -6.301298141479492
    9. '   ' → logprob: -6.426298141479492
    10. 'pass' → logprob: -6.676298141479492

Token 275: ' set' (ID: 920)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.41829252243042
    2. 'continue' → logprob: -1.66829252243042
    3. ' continue' → logprob: -2.04329252243042
    4. 'self' → logprob: -2.16829252243042
    5. '<|end|>' → logprob: -2.91829252243042
    6. 'be' → logprob: -3.54329252243042
    7. 'def' → logprob: -3.79329252243042
    8. '_continue' → logprob: -3.91829252243042
    9. 'complete' → logprob: -4.04329252243042
    10. '       ' → logprob: -4.04329252243042

Token 276: ' possible' (ID: 4149)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16891048848628998
    2. ' self' → logprob: -1.9189105033874512
    3. '   ' → logprob: -5.418910503387451
    4. '       ' → logprob: -5.793910503387451
    5. ' up' → logprob: -7.543910503387451
    6. 'up' → logprob: -7.793910503387451
    7. 'def' → logprob: -9.668910026550293
    8. ' the' → logprob: -10.543910026550293
    9. ' ' → logprob: -10.793910026550293
    10. '	self' → logprob: -11.293910026550293

Token 277: ' values' (ID: 4824)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.059595171362161636
    2. 'values' → logprob: -3.3095951080322266
    3. ' values' → logprob: -4.934595108032227
    4. '_digits' → logprob: -4.934595108032227
    5. 'digits' → logprob: -5.934595108032227
    6. '_cells' → logprob: -6.809595108032227
    7. '<|end|>' → logprob: -6.934595108032227
    8. ' digits' → logprob: -7.309595108032227
    9. 's' → logprob: -8.059595108032227
    10. '_numbers' → logprob: -8.184595108032227

Token 278: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3162451386451721
    2. 'for' → logprob: -1.3162450790405273
    3. '<|end|>' → logprob: -6.191245079040527
    4. '       ' → logprob: -8.191245079040527
    5. '<|end|>' → logprob: -9.066245079040527
    6. '   ' → logprob: -9.316245079040527
    7. ' ' → logprob: -9.441245079040527
    8. ' to' → logprob: -9.566245079040527
    9. '_for' → logprob: -9.566245079040527
    10. 'self' → logprob: -10.191245079040527

Token 279: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3675163984298706
    2. 'all' → logprob: -1.7425163984298706
    3. ' all' → logprob: -3.36751651763916
    4. ' un' → logprob: -3.49251651763916
    5. 'each' → logprob: -3.74251651763916
    6. ' cells' → logprob: -4.49251651763916
    7. 'unknown' → logprob: -4.61751651763916
    8. 'cells' → logprob: -4.74251651763916
    9. 'self' → logprob: -4.86751651763916
    10. ' each' → logprob: -5.36751651763916

Token 280: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.000399925687815994
    2. 'known' → logprob: -8.000399589538574
    3. ' assigned' → logprob: -10.000399589538574
    4. 'assign' → logprob: -13.000399589538574
    5. 'used' → logprob: -13.000399589538574
    6. '#' → logprob: -13.125399589538574
    7. '_ass' → logprob: -13.125399589538574
    8. '```' → logprob: -13.375399589538574
    9. '       ' → logprob: -13.625399589538574
    10. '   ' → logprob: -13.625399589538574

Token 281: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.31386858224868774
    2. 'cells' → logprob: -1.313868522644043
    3. '_cells' → logprob: -7.688868522644043
    4. ' ' → logprob: -10.063868522644043
    5. '   ' → logprob: -10.188868522644043
    6. '.cells' → logprob: -10.813868522644043
    7. 'values' → logprob: -12.063868522644043
    8. '  ' → logprob: -12.313868522644043
    9. 'cell' → logprob: -12.563868522644043
    10. 's' → logprob: -12.563868522644043

Token 282: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023193875327706337
    2. '<|end|>' → logprob: -4.023193836212158
    3. '
' → logprob: -6.023193836212158
    4. '   ' → logprob: -7.273193836212158
    5. '<|end|>' → logprob: -7.398193836212158
    6. ' for' → logprob: -7.398193836212158
    7. 'def' → logprob: -8.273194313049316
    8. ',' → logprob: -8.523194313049316
    9. '        
' → logprob: -10.023194313049316
    10. ' and' → logprob: -10.398194313049316

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037196765188127756
    2. ' for' → logprob: -6.003719806671143
    3. '   ' → logprob: -6.878719806671143
    4. ' in' → logprob: -10.253719329833984
    5. ' and' → logprob: -10.253719329833984
    6. ',' → logprob: -10.503719329833984
    7. ' to' → logprob: -10.628719329833984
    8. 'def' → logprob: -10.628719329833984
    9. '<|end|>' → logprob: -10.878719329833984
    10. 'for' → logprob: -11.128719329833984

Token 284: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.29625797271728516
    2. 'for' → logprob: -1.9212579727172852
    3. ' self' → logprob: -2.671257972717285
    4. ' for' → logprob: -3.796257972717285
    5. 'def' → logprob: -4.671257972717285
    6. '       ' → logprob: -4.796257972717285
    7. '   ' → logprob: -7.546257972717285
    8. ' def' → logprob: -8.796257972717285
    9. '
' → logprob: -10.796257972717285
    10. '        
' → logprob: -11.796257972717285

Token 285: '.update' (ID: 8689)
  Prédit: '.initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initialize' → logprob: -0.5402554273605347
    2. '.set' → logprob: -1.4152554273605347
    3. '._' → logprob: -2.665255546569824
    4. '.update' → logprob: -3.165255546569824
    5. '.setup' → logprob: -3.165255546569824
    6. '.' → logprob: -4.540255546569824
    7. '.init' → logprob: -6.040255546569824
    8. 'def' → logprob: -6.665255546569824
    9. '.def' → logprob: -6.915255546569824
    10. '.for' → logprob: -7.290255546569824

Token 286: '_pos' (ID: 14692)
  Prédit: '_possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.0034727321472018957
    2. '_pos' → logprob: -6.128472805023193
    3. '_' → logprob: -6.753472805023193
    4. '_all' → logprob: -10.503472328186035
    5. '_cells' → logprob: -10.503472328186035
    6. '_cell' → logprob: -11.378472328186035
    7. '()' → logprob: -11.378472328186035
    8. '_positions' → logprob: -11.628472328186035
    9. '_p' → logprob: -12.128472328186035
    10. 'possible' → logprob: -12.378472328186035

Token 287: 's' (ID: 82)
  Prédit: 'sible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -0.0005567280459217727
    2. 's' → logprob: -7.500556945800781
    3. 'ible' → logprob: -13.500556945800781
    4. 'possible' → logprob: -14.000556945800781
    5. '_possible' → logprob: -14.125556945800781
    6. '```' → logprob: -15.000556945800781
    7. 'Possible' → logprob: -16.12555694580078
    8. '_' → logprob: -16.37555694580078
    9. '

' → logprob: -16.62555694580078
    10. '``' → logprob: -16.75055694580078

Token 288: 'ibilities' (ID: 25632)
  Prédit: 'ible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -1.1472419600977446e-06
    2. 'ibilities' → logprob: -14.625000953674316
    3. 'sible' → logprob: -14.625000953674316
    4. 'ibile' → logprob: -16.625001907348633
    5. 'ibles' → logprob: -17.375001907348633
    6. 'ib' → logprob: -17.500001907348633
    7. 'ibble' → logprob: -17.500001907348633
    8. 'IBLE' → logprob: -18.250001907348633
    9. 'isible' → logprob: -18.750001907348633
    10. 'iple' → logprob: -19.875001907348633

Token 289: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.9292415749514475e-05
    2. '()
' → logprob: -10.500039100646973
    3. ' ()' → logprob: -12.250039100646973
    4. '()

' → logprob: -13.250039100646973
    5. '(' → logprob: -13.500039100646973
    6. 's' → logprob: -14.000039100646973
    7. '()`' → logprob: -14.000039100646973
    8. '()
' → logprob: -14.875039100646973
    9. '()\' → logprob: -14.875039100646973
    10. '();' → logprob: -15.250039100646973

Token 290: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4609670042991638
    2. 'def' → logprob: -1.7109670639038086
    3. '
' → logprob: -2.4609670639038086
    4. '<|end|>' → logprob: -3.2109670639038086
    5. '()' → logprob: -3.4609670639038086
    6. ' def' → logprob: -4.710967063903809
    7. '()
' → logprob: -4.960967063903809
    8. '(' → logprob: -5.210967063903809
    9. ' ' → logprob: -5.960967063903809
    10. ')' → logprob: -6.210967063903809

Token 291: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7272730469703674
    2. 'def' → logprob: -1.1022729873657227
    3. '
' → logprob: -1.7272729873657227
    4. ' def' → logprob: -5.977272987365723
    5. '    
' → logprob: -5.977272987365723
    6. '<|end|>' → logprob: -7.102272987365723
    7. '```' → logprob: -8.602272987365723
    8. '	def' → logprob: -8.602272987365723
    9. ')' → logprob: -8.852272987365723
    10. ' ' → logprob: -8.977272987365723

Token 292: '.sol' (ID: 42758)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4272569417953491
    2. '.cells' → logprob: -1.4272569417953491
    3. '.ass' → logprob: -1.9272569417953491
    4. '.stack' → logprob: -2.0522570610046387
    5. '.back' → logprob: -3.4272570610046387
    6. '._' → logprob: -3.6772570610046387
    7. '.history' → logprob: -3.8022570610046387
    8. '.un' → logprob: -4.427257061004639
    9. '.solution' → logprob: -4.427257061004639
    10. '.rows' → logprob: -4.552257061004639

Token 293: 'utions' (ID: 5773)
  Prédit: 'utions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utions' → logprob: -0.0006434533279389143
    2. 'ution' → logprob: -8.125643730163574
    3. 'ved' → logprob: -8.625643730163574
    4. 's' → logprob: -10.125643730163574
    5. 'ver' → logprob: -10.500643730163574
    6. 'ut' → logprob: -10.875643730163574
    7. 've' → logprob: -11.000643730163574
    8. 'uctions' → logprob: -11.625643730163574
    9. ' =' → logprob: -11.875643730163574
    10. 'v' → logprob: -12.000643730163574

Token 294: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16186560690402985
    2. '_count' → logprob: -2.786865711212158
    3. '=' → logprob: -2.911865711212158
    4. '_found' → logprob: -3.661865711212158
    5. ':' → logprob: -5.036865711212158
    6. '=[]' → logprob: -6.911865711212158
    7. 'found' → logprob: -10.036865234375
    8. 'Found' → logprob: -10.036865234375
    9. '_counter' → logprob: -10.161865234375
    10. '_' → logprob: -10.536865234375

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022787988185883
    2. '=' → logprob: -1.91022789478302
    3. ' ' → logprob: -13.03522777557373
    4. ':' → logprob: -13.66022777557373
    5. '   ' → logprob: -15.91022777557373
    6. '  ' → logprob: -16.410228729248047
    7. 's' → logprob: -16.660228729248047
    8. ')' → logprob: -17.035228729248047
    9. '()' → logprob: -18.035228729248047
    10. ' ' → logprob: -18.035228729248047

Token 296: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006268949946388602
    2. ' ' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.750626564025879
    4. '  ' → logprob: -18.000627517700195
    5. '[' → logprob: -18.438127517700195
    6. '```' → logprob: -18.438127517700195
    7. '۰' → logprob: -18.750627517700195
    8. ' ' → logprob: -18.813127517700195
    9. '1' → logprob: -18.875627517700195
    10. '000' → logprob: -19.125627517700195

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '[' → logprob: -14.875008583068848
    4. '   ' → logprob: -16.87500762939453
    5. '[]' → logprob: -18.12500762939453
    6. 'int' → logprob: -18.25000762939453
    7. '۰' → logprob: -18.31250762939453
    8. 's' → logprob: -18.62500762939453
    9. 'set' → logprob: -18.87500762939453
    10. '=' → logprob: -19.12500762939453

Token 298: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5041682720184326
    2. '
' → logprob: -1.2541682720184326
    3. 'def' → logprob: -2.7541682720184326
    4. '<|end|>' → logprob: -3.2541682720184326
    5. ' def' → logprob: -5.754168510437012
    6. '<|end|>' → logprob: -6.254168510437012
    7. '    
' → logprob: -6.504168510437012
    8. '

' → logprob: -7.879168510437012
    9. ')' → logprob: -7.879168510437012
    10. '	def' → logprob: -8.379168510437012

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7260214686393738
    2. 'def' → logprob: -1.2260215282440186
    3. '
' → logprob: -1.6010215282440186
    4. ' def' → logprob: -3.9760215282440186
    5. '    
' → logprob: -6.9760212898254395
    6. '	def' → logprob: -7.1010212898254395
    7. '<|end|>' → logprob: -8.601021766662598
    8. '```' → logprob: -8.976021766662598
    9. '<|end|>' → logprob: -9.226021766662598
    10. ' 
' → logprob: -11.101021766662598

Token 300: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.018306095153093338
    2. ' def' → logprob: -4.643306255340576
    3. '   ' → logprob: -4.768306255340576
    4. '	def' → logprob: -11.518305778503418
    5. '    
' → logprob: -12.393305778503418
    6. '
' → logprob: -12.518305778503418
    7. ' ' → logprob: -14.768305778503418
    8. ' 
' → logprob: -15.393305778503418
    9. 'ndef' → logprob: -15.768305778503418
    10. '        
' → logprob: -16.643306732177734

Token 301: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.05490970239043236
    2. ' update' → logprob: -2.9299097061157227
    3. 'solve' → logprob: -11.429909706115723
    4. 'assign' → logprob: -12.679909706115723
    5. 'is' → logprob: -13.054909706115723
    6. 'validate' → logprob: -13.554909706115723
    7. ' is' → logprob: -13.554909706115723
    8. '_update' → logprob: -13.679909706115723
    9. '	update' → logprob: -13.679909706115723
    10. ' solve' → logprob: -14.054909706115723

Token 302: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.696889623621246e-06
    2. '_possible' → logprob: -13.25000286102295
    3. '_' → logprob: -14.12500286102295
    4. '_p' → logprob: -16.750001907348633
    5. '_positions' → logprob: -17.000001907348633
    6. '_prob' → logprob: -17.875001907348633
    7. ' _' → logprob: -18.375001907348633
    8. '_po' → logprob: -19.375001907348633
    9. '_post' → logprob: -20.250001907348633
    10. '_pass' → logprob: -20.375001907348633

Token 303: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.8828707804204896e-05
    2. 'sib' → logprob: -10.250048637390137
    3. 'ibilities' → logprob: -11.375048637390137
    4. 'sible' → logprob: -14.625048637390137
    5. 'sessions' → logprob: -14.625048637390137
    6. '_s' → logprob: -15.000048637390137
    7. 'sil' → logprob: -15.625048637390137
    8. 'sir' → logprob: -16.375049591064453
    9. 'sess' → logprob: -16.625049591064453
    10. '_' → logprob: -16.625049591064453

Token 304: 'ibilities' (ID: 25632)
  Prédit: 'ibilities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibilities' → logprob: -0.0009625543025322258
    2. 'ibil' → logprob: -8.125962257385254
    3. 'ib' → logprob: -8.250962257385254
    4. 's' → logprob: -8.500962257385254
    5. 'ible' → logprob: -9.625962257385254
    6. 'sible' → logprob: -10.250962257385254
    7. 'ss' → logprob: -10.500962257385254
    8. 'ibility' → logprob: -11.125962257385254
    9. '_' → logprob: -11.250962257385254
    10. 'ibl' → logprob: -12.000962257385254

Token 305: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.664371848164592e-05
    2. 'self' → logprob: -11.750016212463379
    3. '(' → logprob: -12.125016212463379
    4. ' (' → logprob: -12.750016212463379
    5. '   ' → logprob: -15.625016212463379
    6. ' ' → logprob: -16.750017166137695
    7. '(s' → logprob: -17.250017166137695
    8. ' self' → logprob: -17.750017166137695
    9. '(Self' → logprob: -18.375017166137695
    10. '       ' → logprob: -18.750017166137695

Token 306: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7368181347846985
    2. 'self' → logprob: -1.1118180751800537
    3. '):' → logprob: -1.8618180751800537
    4. ')' → logprob: -3.9868180751800537
    5. '):
' → logprob: -4.236818313598633
    6. '   ' → logprob: -6.236818313598633
    7. ' self' → logprob: -7.611818313598633
    8. ')(' → logprob: -7.611818313598633
    9. ' ' → logprob: -7.861818313598633
    10. '       ' → logprob: -8.736818313598633

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035645465832203627
    2. ':' → logprob: -6.003564357757568
    3. '   ' → logprob: -8.128564834594727
    4. ':
' → logprob: -8.253564834594727
    5. '        
' → logprob: -8.378564834594727
    6. '
' → logprob: -8.628564834594727
    7. '    
' → logprob: -10.128564834594727
    8. '():' → logprob: -10.753564834594727
    9. '):
' → logprob: -11.253564834594727
    10. '```' → logprob: -11.628564834594727

Token 308: ' available' (ID: 2839)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3949946165084839
    2. 'all' → logprob: -1.7699946165084839
    3. 'for' → logprob: -2.3949947357177734
    4. 'used' → logprob: -3.1449947357177734
    5. 'assigned' → logprob: -4.519994735717773
    6. ' for' → logprob: -5.519994735717773
    7. 'digits' → logprob: -6.269994735717773
    8. ' used' → logprob: -6.644994735717773
    9. 'available' (adapté à ' available') → logprob: -6.894994735717773
    10. ' all' → logprob: -7.269994735717773

Token 309: '_digits' (ID: 108638)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21336770057678223
    2. '_digits' → logprob: -1.8383677005767822
    3. '=' → logprob: -3.5883677005767822
    4. '_values' → logprob: -5.338367462158203
    5. '_' → logprob: -7.713367462158203
    6. '_vals' → logprob: -9.463367462158203
    7. 'digits' → logprob: -10.338367462158203
    8. 's' → logprob: -10.963367462158203
    9. ' ' → logprob: -11.463367462158203
    10. '_numbers' → logprob: -11.963367462158203

Token 310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967913061380386
    2. '=' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.311967849731445
    4. ':' → logprob: -16.936967849731445
    5. '   ' → logprob: -17.686967849731445
    6. '=self' → logprob: -18.436967849731445
    7. '=set' → logprob: -18.436967849731445
    8. ' ' → logprob: -18.686967849731445
    9. ' =
' → logprob: -18.811967849731445
    10. 's' → logprob: -18.936967849731445

Token 311: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.16104143857955933
    2. '{' → logprob: -1.911041498184204
    3. ' set' → logprob: -7.161041259765625
    4. ' {' → logprob: -10.411041259765625
    5. '(set' → logprob: -11.661041259765625
    6. '   ' → logprob: -14.536041259765625
    7. '	set' → logprob: -15.286041259765625
    8. '{
' → logprob: -15.661041259765625
    9. '{i' → logprob: -15.786041259765625
    10. '9' → logprob: -15.786041259765625

Token 312: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -4.537180211627856e-05
    2. '([' → logprob: -10.625045776367188
    3. 'range' → logprob: -11.375045776367188
    4. '(' → logprob: -12.125045776367188
    5. '({' → logprob: -12.625045776367188
    6. '(d' → logprob: -15.000045776367188
    7. '(i' → logprob: -15.500045776367188
    8. '{' → logprob: -16.250045776367188
    9. '(x' → logprob: -16.875045776367188
    10. '()' → logprob: -17.125045776367188

Token 313: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000727921025827527
    2. '1' → logprob: -7.250728130340576
    3. ' (' → logprob: -11.125727653503418
    4. ' ' → logprob: -13.375727653503418
    5. ')' → logprob: -13.875727653503418
    6. '   ' → logprob: -15.625727653503418
    7. ',' → logprob: -15.875727653503418
    8. '```' → logprob: -16.250728607177734
    9. 'from' → logprob: -16.250728607177734
    10. '(
' → logprob: -16.375728607177734

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.310693111619912e-05
    2. ' ' → logprob: -10.250042915344238
    3. '(' → logprob: -12.000042915344238
    4. ')' → logprob: -14.375042915344238
    5. '   ' → logprob: -14.875042915344238
    6. ',' → logprob: -16.125043869018555
    7. '9' → logprob: -16.687543869018555
    8. 'digits' → logprob: -16.687543869018555
    9. '
' → logprob: -16.812543869018555
    10. '```' → logprob: -17.250043869018555

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006389308837242424
    2. ' ,' → logprob: -7.750638961791992
    3. '9' → logprob: -8.500638961791992
    4. ',
' → logprob: -13.250638961791992
    5. '1' → logprob: -13.500638961791992
    6. '10' → logprob: -14.250638961791992
    7. ' ' → logprob: -14.250638961791992
    8. '   ' → logprob: -16.625638961791992
    9. '
' → logprob: -16.875638961791992
    10. 'to' → logprob: -17.438138961791992

Token 316: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. ')' → logprob: -19.250003814697266
    4. '0' → logprob: -20.125003814697266
    5. '```' → logprob: -20.125003814697266
    6. '9' → logprob: -20.250003814697266
    7. '   ' → logprob: -20.500003814697266
    8. '1' → logprob: -20.875003814697266
    9. '100' → logprob: -20.937503814697266
    10. '11' → logprob: -20.937503814697266

Token 317: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -5.9795445849886164e-05
    2. ' ))' → logprob: -9.875060081481934
    3. ')).' → logprob: -11.750060081481934
    4. '))
' → logprob: -15.125060081481934
    5. '   ' → logprob: -17.125059127807617
    6. '))-' → logprob: -17.875059127807617
    7. ')' → logprob: -18.125059127807617
    8. '))

' → logprob: -18.500059127807617
    9. ''))' → logprob: -18.625059127807617
    10. '"))' → logprob: -18.875059127807617

Token 318: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18418598175048828
    2. '-' → logprob: -1.8091859817504883
    3. ')' → logprob: -5.434185981750488
    4. '   ' → logprob: -10.559185981750488
    5. '       ' → logprob: -11.059185981750488
    6. ' ' → logprob: -11.309185981750488
    7. ' )' → logprob: -12.559185981750488
    8. '.' → logprob: -13.059185981750488
    9. ',' → logprob: -13.559185981750488
    10. ')-' → logprob: -13.934185981750488

Token 319: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029755352064967155
    2. ' self' → logprob: -3.5297553539276123
    3. '       ' → logprob: -12.404755592346191
    4. '(self' → logprob: -15.154755592346191
    5. '	self' → logprob: -15.904755592346191
    6. '{' → logprob: -16.154754638671875
    7. '=self' → logprob: -16.529754638671875
    8. '   ' → logprob: -16.904754638671875
    9. 'this' → logprob: -17.029754638671875
    10. '
' → logprob: -17.029754638671875

Token 320: '.used' (ID: 158890)
  Prédit: '.used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.used' → logprob: -9.610702363715973e-06
    2. 'used' → logprob: -11.625009536743164
    3. ' .' → logprob: -14.625009536743164
    4. '.' → logprob: -17.125009536743164
    5. '.us' → logprob: -17.625009536743164
    6. ' used' → logprob: -18.375009536743164
    7. '.user' → logprob: -18.625009536743164
    8. '.use' → logprob: -18.875009536743164
    9. '_used' → logprob: -20.000009536743164
    10. '.users' → logprob: -20.125009536743164

Token 321: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -2.868328920158092e-05
    2. 'digits' → logprob: -10.500028610229492
    3. '_' → logprob: -14.500028610229492
    4. 'Digits' → logprob: -15.250028610229492
    5. ' digits' → logprob: -16.875028610229492
    6. 'igits' → logprob: -17.000028610229492
    7. '```' → logprob: -17.000028610229492
    8. 's' → logprob: -17.375028610229492
    9. '_digit' → logprob: -17.375028610229492
    10. '_DIG' → logprob: -17.625028610229492

Token 322: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2819731533527374
    2. '       ' → logprob: -1.406973123550415
    3. ' for' → logprob: -8.406972885131836
    4. '        
' → logprob: -8.781972885131836
    5. '
' → logprob: -8.906972885131836
    6. ' 
' → logprob: -9.531972885131836
    7. '  
' → logprob: -9.531972885131836
    8. '<|end|>' → logprob: -10.406972885131836
    9. ',' → logprob: -10.531972885131836
    10. 'for' → logprob: -10.531972885131836

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02859627828001976
    2. ' for' → logprob: -3.7785961627960205
    3. '
' → logprob: -5.5285964012146
    4. 'for' → logprob: -7.2785964012146
    5. '   ' → logprob: -7.5285964012146
    6. '        
' → logprob: -9.778595924377441
    7. '  
' → logprob: -10.903595924377441
    8. ',' → logprob: -11.153595924377441
    9. '    
' → logprob: -11.903595924377441
    10. ' ' → logprob: -12.028595924377441

Token 324: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001247016480192542
    2. ' for' → logprob: -7.001246929168701
    3. '       ' → logprob: -8.00124740600586
    4. '   ' → logprob: -15.25124740600586
    5. '	for' → logprob: -15.87624740600586
    6. '
' → logprob: -18.37624740600586
    7. '        
' → logprob: -19.12624740600586
    8. ' ' → logprob: -19.50124740600586
    9. '```' → logprob: -19.87624740600586
    10. '#' → logprob: -20.25124740600586

Token 325: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.3868996500968933
    2. ' cell' → logprob: -1.136899709701538
    3. 'name' → logprob: -11.261899948120117
    4. '	cell' → logprob: -11.636899948120117
    5. '   ' → logprob: -13.261899948120117
    6. 'cel' → logprob: -13.511899948120117
    7. ' name' → logprob: -13.511899948120117
    8. '_cell' → logprob: -14.761899948120117
    9. ' ' → logprob: -15.011899948120117
    10. '.cell' → logprob: -15.136899948120117

Token 326: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00015836587408557534
    2. 'in' → logprob: -8.875158309936523
    3. 'name' → logprob: -12.000158309936523
    4. '_name' → logprob: -12.000158309936523
    5. ' ' → logprob: -12.250158309936523
    6. '   ' → logprob: -14.750158309936523
    7. 'Name' → logprob: -15.375158309936523
    8. '  ' → logprob: -15.375158309936523
    9. 's' → logprob: -15.625158309936523
    10. '	in' → logprob: -15.875158309936523

Token 327: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008630284108221531
    2. ' self' → logprob: -4.758630275726318
    3. '[self' → logprob: -11.758630752563477
    4. '(self' → logprob: -12.133630752563477
    5. '	self' → logprob: -13.883630752563477
    6. ' ' → logprob: -14.758630752563477
    7. 'elf' → logprob: -15.133630752563477
    8. '   ' → logprob: -15.508630752563477
    9. '[' → logprob: -15.508630752563477
    10. ' [' → logprob: -15.883630752563477

Token 328: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -4.274932143744081e-05
    2. 'cells' → logprob: -10.125042915344238
    3. ' .' → logprob: -14.000042915344238
    4. '.values' → logprob: -14.375042915344238
    5. '.' → logprob: -15.000042915344238
    6. ' cells' → logprob: -15.375042915344238
    7. ' ' → logprob: -15.750042915344238
    8. '   ' → logprob: -16.125041961669922
    9. '_cells' → logprob: -16.750041961669922
    10. '.Cells' → logprob: -16.875041961669922

Token 329: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -4.024604277219623e-05
    2. 'values' → logprob: -10.250040054321289
    3. ' .' → logprob: -12.750040054321289
    4. '.' → logprob: -13.375040054321289
    5. ' values' → logprob: -16.12504005432129
    6. '.Values' → logprob: -16.37504005432129
    7. '   ' → logprob: -16.50004005432129
    8. '	values' → logprob: -17.25004005432129
    9. '().' → logprob: -18.37504005432129
    10. '(values' → logprob: -19.00004005432129

Token 330: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.07972946017980576
    2. '():' → logprob: -2.5797295570373535
    3. '():
' → logprob: -7.7047295570373535
    4. '()' → logprob: -8.329729080200195
    5. ':' → logprob: -9.204729080200195
    6. '():

' → logprob: -10.954729080200195
    7. ' ():' → logprob: -11.454729080200195
    8. ':
' → logprob: -12.079729080200195
    9. '           ' → logprob: -12.329729080200195
    10. '       ' → logprob: -12.829729080200195

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034802162554115057
    2. ' if' → logprob: -5.753480434417725
    3. 'if' → logprob: -8.253479957580566
    4. '   ' → logprob: -10.503479957580566
    5. '       ' → logprob: -12.003479957580566
    6. '               ' → logprob: -13.003479957580566
    7. ',' → logprob: -13.128479957580566
    8. '	       ' → logprob: -13.253479957580566
    9. '<|end|>' → logprob: -13.753479957580566
    10. '```' → logprob: -15.628479957580566

Token 332: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5242980718612671
    2. ' if' → logprob: -1.524298071861267
    3. '           ' → logprob: -2.0242981910705566
    4. '               ' → logprob: -2.8992981910705566
    5. '   ' → logprob: -6.149298191070557
    6. '       ' → logprob: -7.024298191070557
    7. '	if' → logprob: -10.649297714233398
    8. '	       ' → logprob: -11.524297714233398
    9. '
' → logprob: -11.899297714233398
    10. ',' → logprob: -12.149297714233398

Token 333: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.15762338042259216
    2. ' not' → logprob: -2.032623291015625
    3. 'cell' → logprob: -4.282623291015625
    4. ' cell' → logprob: -7.032623291015625
    5. '   ' → logprob: -9.157623291015625
    6. '	not' → logprob: -11.782623291015625
    7. ' ' → logprob: -11.907623291015625
    8. '(not' → logprob: -12.220123291015625
    9. '           ' → logprob: -12.532623291015625
    10. '       ' → logprob: -12.907623291015625

Token 334: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.4740775227546692
    2. ' cell' → logprob: -0.9740775227546692
    3. '	cell' → logprob: -14.849077224731445
    4. '(cell' → logprob: -16.599077224731445
    5. 'Cell' → logprob: -16.724077224731445
    6. '.cell' → logprob: -16.849077224731445
    7. '_cell' → logprob: -17.724077224731445
    8. '[cell' → logprob: -18.224077224731445
    9. 'cel' → logprob: -19.224077224731445
    10. ' cellule' → logprob: -19.724077224731445

Token 335: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -7.107425062713446e-06
    2. '.' → logprob: -12.500006675720215
    3. ' .' → logprob: -13.375006675720215
    4. '.ass' → logprob: -13.875006675720215
    5. 'is' → logprob: -14.625006675720215
    6. '.has' → logprob: -14.750006675720215
    7. ').' → logprob: -18.25000762939453
    8. '   ' → logprob: -18.25000762939453
    9. '.assign' → logprob: -18.87500762939453
    10. '.Is' → logprob: -19.25000762939453

Token 336: '_ass' (ID: 29140)
  Prédit: '_ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ass' → logprob: -0.00018101456225849688
    2. 'assigned' → logprob: -8.625181198120117
    3. 'Assigned' → logprob: -14.250181198120117
    4. '   ' → logprob: -15.375181198120117
    5. ' assigned' → logprob: -15.500181198120117
    6. 'ass' → logprob: -15.875181198120117
    7. '_assign' → logprob: -16.125181198120117
    8. 'assing' → logprob: -17.125181198120117
    9. '_assignment' → logprob: -17.375181198120117
    10. 's' → logprob: -17.750181198120117

Token 337: 'igned' (ID: 3626)
  Prédit: 'igned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igned' → logprob: -1.6240566083070007e-06
    2. 'signed' → logprob: -13.625001907348633
    3. 'ined' → logprob: -15.250001907348633
    4. 'IGNED' → logprob: -16.250001907348633
    5. '_signed' → logprob: -16.750001907348633
    6. 'ing' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.625001907348633
    8. '```' → logprob: -19.000001907348633
    9. 'ed' → logprob: -19.250001907348633
    10. 'Signed' → logprob: -19.375001907348633

Token 338: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0790645033121109
    2. '():
' → logprob: -2.5790646076202393
    3. '()' → logprob: -8.82906436920166
    4. '():
' → logprob: -11.20406436920166
    5. ':' → logprob: -11.45406436920166
    6. ' ():' → logprob: -12.70406436920166
    7. '():

' → logprob: -13.95406436920166
    8. '()):
' → logprob: -15.95406436920166
    9. ':
' → logprob: -16.954065322875977
    10. '):' → logprob: -17.454065322875977

Token 339: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024202491622418165
    2. ':
' → logprob: -6.502420425415039
    3. ':' → logprob: -7.377420425415039
    4. '           ' → logprob: -8.752420425415039
    5. ',' → logprob: -9.502420425415039
    6. '):
' → logprob: -10.877420425415039
    7. ' and' → logprob: -11.002420425415039
    8. ' =' → logprob: -12.502420425415039
    9. ' :
' → logprob: -12.752420425415039
    10. 'self' → logprob: -13.377420425415039

Token 340: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' (adapté à ' cell') → logprob: -0.029170595109462738
    2. ' cell' → logprob: -3.779170513153076
    3. '               ' → logprob: -5.154170513153076
    4. '           ' → logprob: -9.779170989990234
    5. '   ' → logprob: -10.404170989990234
    6. '                   ' → logprob: -11.029170989990234
    7. '	cell' → logprob: -11.029170989990234
    8. '.cell' → logprob: -11.654170989990234
    9. '[cell' → logprob: -14.279170989990234
    10. ' ' → logprob: -14.404170989990234

Token 341: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -7.3458322731312364e-06
    2. '.' → logprob: -12.125007629394531
    3. ' .' → logprob: -13.875007629394531
    4. '   ' → logprob: -15.625007629394531
    5. '.available' → logprob: -15.875007629394531
    6. '.p' → logprob: -16.75000762939453
    7. ').' → logprob: -17.12500762939453
    8. '}.' → logprob: -17.12500762939453
    9. '`.' → logprob: -17.25000762939453
    10. 'Possible' → logprob: -17.37500762939453

Token 342: 'sible' (ID: 15301)
  Prédit: 'sible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -0.00015991552209015936
    2. 'ible' → logprob: -8.750160217285156
    3. 'isible' → logprob: -14.250160217285156
    4. 's' → logprob: -15.000160217285156
    5. '_possible' → logprob: -15.625160217285156
    6. 'possible' → logprob: -15.750160217285156
    7. '```' → logprob: -16.875160217285156
    8. '_' → logprob: -17.500160217285156
    9. 'Possible' → logprob: -18.125160217285156
    10. '#' → logprob: -18.750160217285156

Token 343: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -7.896309739408025e-07
    2. '_possible' → logprob: -14.875000953674316
    3. '_' → logprob: -16.375
    4. '```' → logprob: -17.125
    5. '_value' → logprob: -17.25
    6. '_positions' → logprob: -17.25
    7. 's' → logprob: -17.75
    8. 'values' → logprob: -17.75
    9. '_VALUES' → logprob: -17.875
    10. '_tokens' → logprob: -18.125

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4746215045452118
    2. ' =' → logprob: -0.9746215343475342
    3. '.update' → logprob: -7.974621295928955
    4. '.' → logprob: -9.099621772766113
    5. '.=' → logprob: -10.099621772766113
    6. '.clear' → logprob: -10.599621772766113
    7. ' |=' → logprob: -11.099621772766113
    8. '.inter' → logprob: -12.599621772766113
    9. ' ' → logprob: -13.849621772766113
    10. '   ' → logprob: -14.224621772766113

Token 345: ' available' (ID: 2839)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.03822749853134155
    2. ' available' → logprob: -3.2882275581359863
    3. 'set' → logprob: -8.913227081298828
    4. ' set' → logprob: -9.913227081298828
    5. 'self' → logprob: -13.913227081298828
    6. '{' → logprob: -14.663227081298828
    7. ' self' → logprob: -15.788227081298828
    8. 'allowed' → logprob: -16.288227081298828
    9. '.available' → logprob: -16.663227081298828
    10. '   ' → logprob: -16.913227081298828

Token 346: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -1.3663626305060461e-05
    2. 't' → logprob: -12.75001335144043
    3. '_values' → logprob: -13.25001335144043
    4. 'digits' → logprob: -13.50001335144043
    5. '_cells' → logprob: -13.87501335144043
    6. 's' → logprob: -14.00001335144043
    7. '_' → logprob: -14.25001335144043
    8. 'Digits' → logprob: -14.50001335144043
    9. '_letters' → logprob: -14.87501335144043
    10. '_tokens' → logprob: -14.87501335144043

Token 347: '.copy' (ID: 22925)
  Prédit: '.copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.0004976287018507719
    2. '.' → logprob: -8.000497817993164
    3. '<|end|>' → logprob: -9.375497817993164
    4. '.inter' → logprob: -9.625497817993164
    5. ' &' → logprob: -12.000497817993164
    6. ' .' → logprob: -13.500497817993164
    7. 'copy' → logprob: -13.750497817993164
    8. '.deepcopy' → logprob: -14.625497817993164
    9. '.clone' → logprob: -14.875497817993164
    10. '.Copy' → logprob: -14.875497817993164

Token 348: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3034723401069641
    2. '<|end|>' → logprob: -1.6784722805023193
    3. ' def' → logprob: -3.4284722805023193
    4. '   ' → logprob: -3.4284722805023193
    5. '
' → logprob: -4.928472518920898
    6. '<|end|>' → logprob: -6.803472518920898
    7. '    
' → logprob: -7.178472518920898
    8. '	def' → logprob: -7.553472518920898
    9. ' ' → logprob: -8.553472518920898
    10. ' 
' → logprob: -9.803472518920898

Token 351: ' check' (ID: 2371)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.7324491739273071
    2. ' is' → logprob: -0.8574491739273071
    3. ' can' → logprob: -3.6074490547180176
    4. ' validate' → logprob: -4.357449054718018
    5. 'solve' → logprob: -4.357449054718018
    6. ' assign' → logprob: -4.732449054718018
    7. ' back' → logprob: -4.857449054718018
    8. ' check' → logprob: -5.107449054718018
    9. ' all' → logprob: -5.232449054718018
    10. ' find' → logprob: -5.732449054718018

Token 352: '_unique' (ID: 51840)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.5834628343582153
    2. '_constraints' → logprob: -1.7084628343582153
    3. '_result' → logprob: -2.833462715148926
    4. '_expression' → logprob: -3.083462715148926
    5. '(self' → logprob: -3.208462715148926
    6. '_solution' → logprob: -3.333462715148926
    7. '_' → logprob: -4.458462715148926
    8. '_equ' → logprob: -4.583462715148926
    9. '_cell' → logprob: -4.708462715148926
    10. '_constraint' → logprob: -4.833462715148926

Token 353: '_digits' (ID: 108638)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.027865014970302582
    2. '_solution' → logprob: -4.902864933013916
    3. '(' → logprob: -5.027864933013916
    4. '_digits' → logprob: -5.277864933013916
    5. '_assignment' → logprob: -6.402864933013916
    6. '_values' → logprob: -6.652864933013916
    7. '_constraints' → logprob: -6.777864933013916
    8. '_assign' → logprob: -7.402864933013916
    9. '_' → logprob: -7.652864933013916
    10. '_cells' → logprob: -7.652864933013916

Token 354: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00028088156250305474
    2. '(' → logprob: -8.25028133392334
    3. 'self' → logprob: -11.00028133392334
    4. ' (' → logprob: -12.87528133392334
    5. '()' → logprob: -16.250280380249023
    6. '(
' → logprob: -16.250280380249023
    7. '   ' → logprob: -16.375280380249023
    8. ' self' → logprob: -17.250280380249023
    9. ' ' → logprob: -17.750280380249023
    10. '(s' → logprob: -17.875280380249023

Token 355: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0972206592559814
    2. '):' → logprob: -1.4722206592559814
    3. '):
' → logprob: -1.5972206592559814
    4. ',' → logprob: -2.3472206592559814
    5. ')' → logprob: -2.4722206592559814
    6. '(self' → logprob: -2.9722206592559814
    7. '   ' → logprob: -6.597220420837402
    8. ',self' → logprob: -8.222220420837402
    9. ')(' → logprob: -8.347220420837402
    10. '):

' → logprob: -8.347220420837402

Token 356: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003326049481984228
    2. 'self' → logprob: -8.125332832336426
    3. '(' → logprob: -10.500332832336426
    4. '   ' → logprob: -12.875332832336426
    5. 'def' → logprob: -12.875332832336426
    6. ':' → logprob: -13.875332832336426
    7. ' self' → logprob: -14.500332832336426
    8. '       ' → logprob: -14.500332832336426
    9. ' (' → logprob: -14.875332832336426
    10. 's' → logprob: -15.250332832336426

Token 357: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -5.1928003813372925e-05
    2. ' bool' → logprob: -9.875051498413086
    3. 'True' → logprob: -15.750051498413086
    4. '(bool' → logprob: -16.625051498413086
    5. 'Set' → logprob: -16.875051498413086
    6. '	bool' → logprob: -16.875051498413086
    7. '   ' → logprob: -17.500051498413086
    8. 'all' → logprob: -17.625051498413086
    9. ' ' → logprob: -18.000051498413086
    10. 'Bool' → logprob: -18.125051498413086

Token 358: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048947617411613464
    2. ':
' → logprob: -3.04894757270813
    3. '       ' → logprob: -8.67394733428955
    4. '():' → logprob: -9.79894733428955
    5. '   ' → logprob: -10.17394733428955
    6. '():
' → logprob: -10.29894733428955
    7. '):' → logprob: -10.67394733428955
    8. '):
' → logprob: -10.79894733428955
    9. ':return' → logprob: -11.92394733428955
    10. ':def' → logprob: -12.67394733428955

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006688326830044389
    2. ' seen' → logprob: -8.2506685256958
    3. 'seen' → logprob: -8.3756685256958
    4. 'assigned' → logprob: -9.8756685256958
    5. ' assigned' → logprob: -10.2506685256958
    6. ' used' → logprob: -10.5006685256958
    7. 'digits' → logprob: -11.0006685256958
    8. 'visited' → logprob: -11.0006685256958
    9. '```' → logprob: -12.0006685256958
    10. 'used' → logprob: -12.6256685256958

Token 360: ' #' (ID: 1069)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.32727131247520447
    2. 'seen' → logprob: -1.3272713422775269
    3. 'used' → logprob: -4.577271461486816
    4. 'values' → logprob: -6.327271461486816
    5. '       ' → logprob: -7.327271461486816
    6. ' assigned' → logprob: -7.827271461486816
    7. ' seen' → logprob: -7.952271461486816
    8. 'vals' → logprob: -8.452271461486816
    9. '   ' → logprob: -8.952271461486816
    10. 'visited' → logprob: -10.077271461486816

Token 361: ' Check' (ID: 6208)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.28742191195487976
    2. 'seen' → logprob: -1.7874219417572021
    3. 'values' → logprob: -2.662421941757202
    4. 'used' → logprob: -4.912421703338623
    5. 'vals' → logprob: -5.537421703338623
    6. 'digits' → logprob: -7.662421703338623
    7. ' assigned' → logprob: -7.787421703338623
    8. ' seen' → logprob: -8.037422180175781
    9. 'visited' → logprob: -10.037422180175781
    10. ' values' → logprob: -10.287422180175781

Token 362: ' that' (ID: 484)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.600307822227478
    2. ' assigned' → logprob: -1.350307822227478
    3. 'values' → logprob: -1.975307822227478
    4. ' values' → logprob: -3.3503079414367676
    5. 'seen' → logprob: -5.100307941436768
    6. '   ' → logprob: -5.600307941436768
    7. '       ' → logprob: -5.975307941436768
    8. 'vals' → logprob: -6.475307941436768
    9. ' seen' → logprob: -6.725307941436768
    10. 'used' → logprob: -6.850307941436768

Token 363: ' assigned' (ID: 21482)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20130710303783417
    2. 'all' → logprob: -2.3263070583343506
    3. 'values' → logprob: -3.2013070583343506
    4. 'assigned' → logprob: -3.4513070583343506
    5. ' all' → logprob: -5.07630729675293
    6. ' len' → logprob: -5.70130729675293
    7. ' assigned' → logprob: -6.95130729675293
    8. ' values' → logprob: -7.20130729675293
    9. 'the' → logprob: -7.32630729675293
    10. 'vals' → logprob: -8.57630729675293

Token 364: ' digits' (ID: 37806)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.2633471190929413
    2. ' values' → logprob: -1.7633471488952637
    3. 'digits' → logprob: -3.2633471488952637
    4. ' digits' → logprob: -4.138347148895264
    5. '_values' → logprob: -5.263347148895264
    6. 'cells' → logprob: -8.388346672058105
    7. ' cells' → logprob: -8.888346672058105
    8. '_digits' → logprob: -9.013346672058105
    9. '.values' → logprob: -9.513346672058105
    10. 'vals' → logprob: -9.888346672058105

Token 365: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.10589385777711868
    2. ' are' → logprob: -2.480893850326538
    3. '.' → logprob: -5.855894088745117
    4. ' =' → logprob: -6.105894088745117
    5. '()' → logprob: -6.105894088745117
    6. '().' → logprob: -6.480894088745117
    7. '=' → logprob: -6.480894088745117
    8. 's' → logprob: -6.855894088745117
    9. 'do' → logprob: -6.980894088745117
    10. 'so' → logprob: -6.980894088745117

Token 366: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.15982329845428467
    2. 'len' → logprob: -2.409823417663574
    3. 'all' → logprob: -2.909823417663574
    4. ' unique' → logprob: -5.784823417663574
    5. ' all' → logprob: -8.409823417663574
    6. ' len' → logprob: -9.784823417663574
    7. 'of' → logprob: -11.409823417663574
    8. '_unique' → logprob: -11.409823417663574
    9. 'distinct' → logprob: -11.784823417663574
    10. '   ' → logprob: -13.034823417663574

Token 367: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03149464726448059
    2. 'assigned' → logprob: -4.031494617462158
    3. '   ' → logprob: -6.281494617462158
    4. 'digits' → logprob: -6.656494617462158
    5. 'values' → logprob: -6.781494617462158
    6. ':' → logprob: -6.781494617462158
    7. ',' → logprob: -6.781494617462158
    8. 'return' → logprob: -6.906494617462158
    9. 'seen' → logprob: -6.906494617462158
    10. ' assigned' → logprob: -6.906494617462158

Token 368: ' in' (ID: 306)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7114182114601135
    2. 'self' → logprob: -2.0864181518554688
    3. 'all' → logprob: -2.4614181518554688
    4. '1' → logprob: -2.4614181518554688
    5. 'valid' → logprob: -2.4614181518554688
    6. 'no' → logprob: -2.9614181518554688
    7. 'in' → logprob: -3.8364181518554688
    8. 'within' → logprob: -4.211418151855469
    9. ' len' → logprob: -4.836418151855469
    10. 'cell' → logprob: -4.961418151855469

Token 369: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.32230159640312195
    2. '1' → logprob: -1.3223016262054443
    3. ' range' → logprob: -5.197301387786865
    4. ' ' → logprob: -6.822301387786865
    5. 'set' → logprob: -7.197301387786865
    6. '{' → logprob: -7.322301387786865
    7. 'the' → logprob: -7.697301387786865
    8. '[' → logprob: -7.947301387786865
    9. 'self' → logprob: -9.822301864624023
    10. ' the' → logprob: -10.697301864624023

Token 370: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12926211953163147
    2. '1' → logprob: -2.6292622089385986
    3. 'self' → logprob: -3.8792622089385986
    4. '{' → logprob: -4.2542619705200195
    5. 'set' → logprob: -4.3792619705200195
    6. '[' → logprob: -7.0042619705200195
    7. 'the' → logprob: -8.00426197052002
    8. ' range' → logprob: -8.12926197052002
    9. '(' → logprob: -10.00426197052002
    10. 'used' → logprob: -10.12926197052002

Token 371: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -2.3438327843905427e-05
    2. '...' → logprob: -11.25002384185791
    3. ' ..' → logprob: -12.62502384185791
    4. '.' → logprob: -12.87502384185791
    5. '<=' → logprob: -12.87502384185791
    6. '9' → logprob: -13.62502384185791
    7. '-' → logprob: -15.87502384185791
    8. ' <=' → logprob: -16.000022888183594
    9. ',' → logprob: -16.000022888183594
    10. ' ' → logprob: -16.250022888183594

Token 372: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.62501049041748
    3. '=' → logprob: -13.50001049041748
    4. '   ' → logprob: -16.375011444091797
    5. ',' → logprob: -16.750011444091797
    6. '10' → logprob: -16.875011444091797
    7. 'to' → logprob: -17.250011444091797
    8. '```' → logprob: -17.250011444091797
    9. '
' → logprob: -17.937511444091797
    10. 'range' → logprob: -18.062511444091797

Token 373: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014147759415209293
    2. ' for' → logprob: -5.264147758483887
    3. '
' → logprob: -5.639147758483887
    4. 'for' → logprob: -6.014147758483887
    5. ':' → logprob: -7.014147758483887
    6. ',' → logprob: -7.389147758483887
    7. 'assigned' → logprob: -7.639147758483887
    8. '   ' → logprob: -8.389147758483887
    9. ' assigned' → logprob: -8.764147758483887
    10. ' and' → logprob: -9.014147758483887

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017383632948622108
    2. 'for' → logprob: -8.126738548278809
    3. 'assigned' → logprob: -8.126738548278809
    4. ' for' → logprob: -8.251738548278809
    5. '
' → logprob: -8.376738548278809
    6. '<|end|>' → logprob: -9.001738548278809
    7. '   ' → logprob: -9.126738548278809
    8. ' assigned' → logprob: -9.876738548278809
    9. 'return' → logprob: -9.876738548278809
    10. 'tokens' → logprob: -10.001738548278809

Token 375: ' digits' (ID: 37806)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.13691446185112
    2. 'seen' → logprob: -2.1369144916534424
    3. '       ' → logprob: -5.636914253234863
    4. 'used' → logprob: -5.636914253234863
    5. 'digits' (adapté à ' digits') → logprob: -6.136914253234863
    6. '   ' → logprob: -8.011914253234863
    7. ' assigned' → logprob: -8.511914253234863
    8. ' seen' → logprob: -9.511914253234863
    9. 'values' → logprob: -11.011914253234863
    10. 'visited' → logprob: -11.761914253234863

Token 376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.695855438709259
    2. ' =' → logprob: -0.695855438709259
    3. '_seen' → logprob: -6.070855617523193
    4. '=set' → logprob: -8.445855140686035
    5. 'seen' → logprob: -8.945855140686035
    6. '_set' → logprob: -11.195855140686035
    7. '_used' → logprob: -11.945855140686035
    8. '   ' → logprob: -12.070855140686035
    9. '_ass' → logprob: -12.195855140686035
    10. 'used' → logprob: -12.320855140686035

Token 377: ' [' (ID: 723)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.03955678269267082
    2. '[' → logprob: -4.039556980133057
    3. '{' → logprob: -4.789556980133057
    4. '[self' → logprob: -5.039556980133057
    5. '[]
' → logprob: -5.664556980133057
    6. '[]' → logprob: -6.164556980133057
    7. ' set' → logprob: -8.039556503295898
    8. '[i' → logprob: -9.289556503295898
    9. '[s' → logprob: -9.539556503295898
    10. '[x' → logprob: -9.789556503295898

Token 378: 'c' (ID: 66)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.0002124806633219123
    2. 'c' → logprob: -8.500212669372559
    3. ' cell' → logprob: -11.625212669372559
    4. 'cel' → logprob: -16.875211715698242
    5. '(cell' → logprob: -17.625211715698242
    6. 'self' → logprob: -18.750211715698242
    7. ' c' → logprob: -19.000211715698242
    8. '	cell' → logprob: -19.375211715698242
    9. 'cells' → logprob: -19.750211715698242
    10. '[cell' → logprob: -20.000211715698242

Token 379: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -8.2994620242971e-06
    2. 'value' → logprob: -11.750008583068848
    3. '.' → logprob: -15.125008583068848
    4. 'for' → logprob: -15.750008583068848
    5. ' .' → logprob: -18.37500762939453
    6. 'alue' → logprob: -18.50000762939453
    7. ' for' → logprob: -19.00000762939453
    8. '.val' → logprob: -19.12500762939453
    9. '.Value' → logprob: -19.87500762939453
    10. '   ' → logprob: -20.12500762939453

Token 380: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12692853808403015
    2. 'for' → logprob: -2.1269285678863525
    3. '	for' → logprob: -15.376928329467773
    4. ' ' → logprob: -16.126928329467773
    5. '           ' → logprob: -16.626928329467773
    6. '   ' → logprob: -18.376928329467773
    7. '            ' → logprob: -18.626928329467773
    8. '        ' → logprob: -18.751928329467773
    9. '    ' → logprob: -18.876928329467773
    10. '         ' → logprob: -19.251928329467773

Token 381: ' c' (ID: 274)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04044649004936218
    2. ' self' → logprob: -3.2904465198516846
    3. 'c' → logprob: -6.0404462814331055
    4. ' c' → logprob: -11.040446281433105
    5. 'cell' → logprob: -12.290446281433105
    6. ' cell' → logprob: -14.915446281433105
    7. '(self' → logprob: -15.540446281433105
    8. '
' → logprob: -16.040447235107422
    9. '=self' → logprob: -16.165447235107422
    10. 'v' → logprob: -16.415447235107422

Token 382: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04650682583451271
    2. 'in' → logprob: -3.171506881713867
    3. 'self' → logprob: -5.921506881713867
    4. 'c' → logprob: -7.171506881713867
    5. ' self' → logprob: -10.296506881713867
    6. ' c' → logprob: -11.921506881713867
    7. ' ' → logprob: -12.171506881713867
    8. 's' → logprob: -12.421506881713867
    9. '<|end|>' → logprob: -14.421506881713867
    10. 'cel' → logprob: -15.046506881713867

Token 383: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015031944494694471
    2. ' self' → logprob: -6.501502990722656
    3. '(self' → logprob: -15.126502990722656
    4. '
' → logprob: -15.376502990722656
    5. '[self' → logprob: -15.626502990722656
    6. 'cell' → logprob: -16.626502990722656
    7. 'c' → logprob: -17.126502990722656
    8. '=self' → logprob: -17.376502990722656
    9. ' ' → logprob: -17.876502990722656
    10. '	self' → logprob: -17.876502990722656

Token 384: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.5762243270874023
    2. 'cells' → logprob: -0.8262243270874023
    3. 'ells' → logprob: -8.326224327087402
    4. ' cells' → logprob: -10.451224327087402
    5. 'self' → logprob: -11.951224327087402
    6. '_cells' → logprob: -12.326224327087402
    7. 'cell' → logprob: -14.201224327087402
    8. 'cel' → logprob: -14.326224327087402
    9. 'class' → logprob: -14.951224327087402
    10. 'Cells' → logprob: -15.951224327087402

Token 385: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.00016241880075540394
    2. 'values' → logprob: -9.125162124633789
    3. 'if' → logprob: -10.125162124633789
    4. ' if' → logprob: -12.625162124633789
    5. '().' → logprob: -12.625162124633789
    6. '.' → logprob: -12.875162124633789
    7. ' .' → logprob: -12.875162124633789
    8. '.value' → logprob: -14.125162124633789
    9. '.cells' → logprob: -14.500162124633789
    10. 'c' → logprob: -15.375162124633789

Token 386: '()' (ID: 416)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.060460127890110016
    2. 'if' → logprob: -3.310460090637207
    3. '()' → logprob: -3.810460090637207
    4. '   ' → logprob: -10.935460090637207
    5. '()]' → logprob: -11.935460090637207
    6. '    ' → logprob: -13.435460090637207
    7. '	if' → logprob: -13.560460090637207
    8. ']' → logprob: -13.935460090637207
    9. ' ()' → logprob: -13.935460090637207
    10. '       ' → logprob: -14.185460090637207

Token 387: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0380416102707386
    2. 'if' → logprob: -3.288041591644287
    3. '   ' → logprob: -16.788042068481445
    4. '       ' → logprob: -17.038042068481445
    5. '           ' → logprob: -18.413042068481445
    6. ' ' → logprob: -18.663042068481445
    7. '    ' → logprob: -18.663042068481445
    8. '        ' → logprob: -19.288042068481445
    9. '	if' → logprob: -19.663042068481445
    10. '  ' → logprob: -20.288042068481445

Token 388: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00012368128227535635
    2. ' c' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.000123977661133
    4. '
' → logprob: -17.375123977661133
    5. '(c' → logprob: -18.000123977661133
    6. '           ' → logprob: -18.125123977661133
    7. '	c' → logprob: -18.375123977661133
    8. ' ' → logprob: -18.500123977661133
    9. '    ' → logprob: -18.625123977661133
    10. '               ' → logprob: -19.625123977661133

Token 389: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0417742058634758
    2. '.value' → logprob: -3.291774272918701
    3. '.' → logprob: -5.666774272918701
    4. 'is' → logprob: -8.541773796081543
    5. 'value' → logprob: -10.291773796081543
    6. ' .' → logprob: -10.916773796081543
    7. '!=' → logprob: -11.166773796081543
    8. ' !=' → logprob: -12.416773796081543
    9. '.Is' → logprob: -14.791773796081543
    10. '.ass' → logprob: -16.29177474975586

Token 390: '_ass' (ID: 29140)
  Prédit: '_ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ass' → logprob: -0.00014442270912695676
    2. 'assigned' → logprob: -8.875144004821777
    3. 'Assigned' → logprob: -12.750144004821777
    4. ' assigned' → logprob: -14.875144004821777
    5. '_assign' → logprob: -14.875144004821777
    6. 'ass' → logprob: -15.875144004821777
    7. 'assing' → logprob: -16.250144958496094
    8. '_ASS' → logprob: -16.375144958496094
    9. '>' → logprob: -16.750144958496094
    10. '_assignment' → logprob: -17.000144958496094

Token 391: 'igned' (ID: 3626)
  Prédit: 'igned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igned' → logprob: -0.0034759361296892166
    2. 'gn' → logprob: -5.753476142883301
    3. 'signed' → logprob: -8.6284761428833
    4. 'g' → logprob: -9.8784761428833
    5. 'ned' → logprob: -10.1284761428833
    6. 'ed' → logprob: -11.6284761428833
    7. '_signed' → logprob: -12.1284761428833
    8. 'ined' → logprob: -12.8784761428833
    9. 'ged' → logprob: -12.8784761428833
    10. 'ing' → logprob: -13.3784761428833

Token 392: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0015575934667140245
    2. '()' → logprob: -6.75155782699585
    3. ']' → logprob: -7.87655782699585
    4. '()]
' → logprob: -11.876557350158691
    5. ']()' → logprob: -15.126557350158691
    6. '())' → logprob: -15.751557350158691
    7. ' ]' → logprob: -16.001558303833008
    8. ' ()' → logprob: -16.126558303833008
    9. '()][' → logprob: -16.501558303833008
    10. ')]' → logprob: -16.751558303833008

Token 393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007795536890625954
    2. '   ' → logprob: -5.882795333862305
    3. ')' → logprob: -6.632795333862305
    4. ' set' → logprob: -6.757795333862305
    5. ' if' → logprob: -7.382795333862305
    6. '
' → logprob: -7.507795333862305
    7. '        
' → logprob: -8.257795333862305
    8. 'set' → logprob: -8.382795333862305
    9. '_set' → logprob: -8.882795333862305
    10. '<|end|>' → logprob: -9.382795333862305

Token 394: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03316308557987213
    2. '       ' → logprob: -3.533163070678711
    3. '
' → logprob: -6.158163070678711
    4. 'if' → logprob: -7.408163070678711
    5. ' return' → logprob: -7.408163070678711
    6. '   ' → logprob: -10.158163070678711
    7. '        
' → logprob: -11.158163070678711
    8. ' if' → logprob: -12.033163070678711
    9. 'set' → logprob: -12.533163070678711
    10. '```' → logprob: -12.533163070678711

Token 395: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -16.5
    3. '(len' → logprob: -16.75
    4. ' len' → logprob: -16.75
    5. '
' → logprob: -18.875
    6. 'length' → logprob: -19.875
    7. 'sorted' → logprob: -21.75
    8. '	len' → logprob: -22.125
    9. '       ' → logprob: -22.75
    10. '0' → logprob: -22.875

Token 396: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.16022849082946777
    2. '(d' → logprob: -1.9102284908294678
    3. '(' → logprob: -12.535228729248047
    4. 'set' → logprob: -14.785228729248047
    5. ' set' → logprob: -16.535228729248047
    6. '(s' → logprob: -16.785228729248047
    7. 'digits' → logprob: -17.035228729248047
    8. '(D' → logprob: -17.160228729248047
    9. '=set' → logprob: -17.535228729248047
    10. '(dict' → logprob: -17.535228729248047

Token 397: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.62500286102295
    3. 'digits' → logprob: -14.00000286102295
    4. ')' → logprob: -15.62500286102295
    5. ' (' → logprob: -16.625001907348633
    6. '(
' → logprob: -17.875001907348633
    7. 'd' → logprob: -18.375001907348633
    8. ' digits' → logprob: -18.625001907348633
    9. ')d' → logprob: -18.750001907348633
    10. ')(' → logprob: -20.750001907348633

Token 398: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.003645449411123991
    2. 'digits' → logprob: -5.628645420074463
    3. 'igts' → logprob: -10.378645896911621
    4. ')' → logprob: -12.128645896911621
    5. '(d' → logprob: -13.003645896911621
    6. 'ig' → logprob: -13.128645896911621
    7. '_digits' → logprob: -13.253645896911621
    8. ' digits' → logprob: -14.003645896911621
    9. '```' → logprob: -14.753645896911621
    10. 'its' → logprob: -15.128645896911621

Token 399: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040219054790213704
    2. ')==' → logprob: -8.000402450561523
    3. ' )' → logprob: -9.625402450561523
    4. '())' → logprob: -14.500402450561523
    5. '==' → logprob: -16.625402450561523
    6. '))' → logprob: -16.625402450561523
    7. '）' → logprob: -18.250402450561523
    8. ')=' → logprob: -18.250402450561523
    9. '()' → logprob: -18.250402450561523
    10. ']==' → logprob: -18.625402450561523

Token 400: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0060629406943917274
    2. ' ==' → logprob: -5.131062984466553
    3. ')==' → logprob: -9.756062507629395
    4. '>=' → logprob: -10.256062507629395
    5. '()==' → logprob: -11.381062507629395
    6. ')' → logprob: -11.506062507629395
    7. ']==' → logprob: -11.631062507629395
    8. '==
' → logprob: -12.006062507629395
    9. '=' → logprob: -13.006062507629395
    10. '===' → logprob: -13.506062507629395

Token 401: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009115827269852161
    2. ' len' → logprob: -7.000911712646484
    3. '	len' → logprob: -16.750911712646484
    4. '(len' → logprob: -17.375911712646484
    5. '=len' → logprob: -18.000911712646484
    6. '   ' → logprob: -18.750911712646484
    7. '[len' → logprob: -20.000911712646484
    8. ' ' → logprob: -20.875911712646484
    9. '<len' → logprob: -21.375911712646484
    10. ',len' → logprob: -21.625911712646484

Token 402: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.981667537620524e-06
    2. 'digits' → logprob: -13.625001907348633
    3. '(' → logprob: -14.125001907348633
    4. 'd' → logprob: -17.125001907348633
    5. ' (' → logprob: -18.250001907348633
    6. '(
' → logprob: -18.375001907348633
    7. ' digits' → logprob: -19.250001907348633
    8. 'Digits' → logprob: -21.125001907348633
    9. '[d' → logprob: -21.250001907348633
    10. '	d' → logprob: -21.375001907348633

Token 403: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0083953021094203
    2. 'digits' → logprob: -4.883395195007324
    3. '(d' → logprob: -7.758395195007324
    4. 'igts' → logprob: -9.258395195007324
    5. ')' → logprob: -9.383395195007324
    6. 'ig' → logprob: -10.008395195007324
    7. '[' → logprob: -10.758395195007324
    8. 'igs' → logprob: -10.883395195007324
    9. '(c' → logprob: -11.383395195007324
    10. ']' → logprob: -11.508395195007324

Token 404: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011826365254819393
    2. ' and' → logprob: -4.511826515197754
    3. 'and' → logprob: -7.386826515197754
    4. ' )' → logprob: -8.886826515197754
    5. '<|end|>' → logprob: -11.261826515197754
    6. ')
' → logprob: -12.511826515197754
    7. '   ' → logprob: -14.011826515197754
    8. '       ' → logprob: -14.136826515197754
    9. '),' → logprob: -14.511826515197754
    10. ')return' → logprob: -14.636826515197754

Token 405: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00038539018714800477
    2. ' all' → logprob: -7.875385284423828
    3. '1' → logprob: -12.875385284423828
    4. '0' → logprob: -13.625385284423828
    5. '
' → logprob: -13.875385284423828
    6. '   ' → logprob: -15.500385284423828
    7. '

' → logprob: -16.625385284423828
    8. '	all' → logprob: -16.625385284423828
    9. '(all' → logprob: -17.000385284423828
    10. '```' → logprob: -17.625385284423828

Token 407: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -13.625000953674316
    3. '((' → logprob: -17.250001907348633
    4. '(d' → logprob: -17.500001907348633
    5. ' (' → logprob: -18.875001907348633
    6. 'd' → logprob: -19.125001907348633
    7. '(
' → logprob: -19.500001907348633
    8. '([' → logprob: -22.750001907348633
    9. '(is' → logprob: -22.875001907348633
    10. ' ' → logprob: -23.375001907348633

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4740837514400482
    2. '(' → logprob: -0.9740837812423706
    3. 'd' → logprob: -11.97408390045166
    4. '(d' → logprob: -15.34908390045166
    5. ' (' → logprob: -15.84908390045166
    6. ' ' → logprob: -16.099082946777344
    7. '('' → logprob: -17.724082946777344
    8. 'digit' → logprob: -18.349082946777344
    9. '((' → logprob: -18.474082946777344
    10. '(
' → logprob: -18.849082946777344

Token 409: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.014163863845169544
    2. ' <=' → logprob: -4.264163970947266
    3. ')<=' → logprob: -16.014163970947266
    4. ',' → logprob: -16.764163970947266
    5. ' ' → logprob: -16.764163970947266
    6. 'd' → logprob: -16.889163970947266
    7. ']<=' → logprob: -17.014163970947266
    8. '<' → logprob: -17.389163970947266
    9. '
' → logprob: -17.389163970947266
    10. '```' → logprob: -17.764163970947266

Token 410: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.429896944202483e-05
    2. 'digit' → logprob: -10.250043869018555
    3. 'v' → logprob: -11.875043869018555
    4. ' d' → logprob: -13.750043869018555
    5. 'val' → logprob: -14.875043869018555
    6. 'x' → logprob: -14.875043869018555
    7. 'dig' → logprob: -16.125043869018555
    8. 'digits' → logprob: -18.625043869018555
    9. 'c' → logprob: -19.750043869018555
    10. '   ' → logprob: -20.000043869018555

Token 411: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0034810397773981094
    2. ' <=' → logprob: -5.753480911254883
    3. 'd' → logprob: -8.128480911254883
    4. 'and' → logprob: -11.878480911254883
    5. 'for' → logprob: -14.378480911254883
    6. ' d' → logprob: -15.128480911254883
    7. '≤' → logprob: -16.503480911254883
    8. '==' → logprob: -16.878480911254883
    9. ')<=' → logprob: -16.878480911254883
    10. ' for' → logprob: -16.878480911254883

Token 412: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.000001907348633
    4. '９' → logprob: -20.250001907348633
    5. '۹' → logprob: -20.250001907348633
    6. '
' → logprob: -21.125001907348633
    7. '```' → logprob: -21.187501907348633
    8. '  ' → logprob: -21.312501907348633
    9. '=' → logprob: -21.375001907348633
    10. '९' → logprob: -21.750001907348633

Token 413: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.125
    4. '９' → logprob: -19.5
    5. '۹' → logprob: -19.625
    6. '```' → logprob: -20.25
    7. '९' → logprob: -20.875
    8. '  ' → logprob: -21.375
    9. 'nine' → logprob: -21.375
    10. '=' → logprob: -21.6875

Token 414: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012748721987009048
    2. 'for' → logprob: -4.512748718261719
    3. ')' → logprob: -6.387748718261719
    4. '       ' → logprob: -11.262748718261719
    5. '	for' → logprob: -13.137748718261719
    6. '   ' → logprob: -14.137748718261719
    7. ' )' → logprob: -14.387748718261719
    8. '           ' → logprob: -14.637748718261719
    9. ' ' → logprob: -15.012748718261719
    10. ' ' → logprob: -15.887748718261719

Token 415: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004306692280806601
    2. ' d' → logprob: -7.750430583953857
    3. '	d' → logprob: -19.250431060791016
    4. '_d' → logprob: -19.750431060791016
    5. ')d' → logprob: -20.750431060791016
    6. 'digits' → logprob: -20.875431060791016
    7. '
' → logprob: -21.500431060791016
    8. 'c' → logprob: -22.250431060791016
    9. '   ' → logprob: -22.750431060791016
    10. '.d' → logprob: -23.000431060791016

Token 416: ' in' (ID: 306)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2017696052789688
    2. ' d' → logprob: -1.7017695903778076
    3. ' in' → logprob: -7.951769828796387
    4. 'in' → logprob: -13.201769828796387
    5. '_d' → logprob: -14.076769828796387
    6. ')d' → logprob: -14.076769828796387
    7. ')' → logprob: -14.701769828796387
    8. ' ' → logprob: -16.20176887512207
    9. 'digits' → logprob: -16.32676887512207
    10. ',d' → logprob: -16.45176887512207

Token 417: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.3132745027542114
    2. ' digits' → logprob: -1.3132745027542114
    3. 'd' → logprob: -11.313274383544922
    4. 'Digits' → logprob: -15.188274383544922
    5. '_digits' → logprob: -15.563274383544922
    6. '	d' → logprob: -16.813274383544922
    7. '
' → logprob: -17.438274383544922
    8. 'digit' → logprob: -17.938274383544922
    9. 'dig' → logprob: -18.063274383544922
    10. '[' → logprob: -18.938274383544922

Token 418: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ' )' → logprob: -13.000005722045898
    3. ')
' → logprob: -13.375005722045898
    4. '       ' → logprob: -14.250005722045898
    5. '   ' → logprob: -14.750005722045898
    6. ')return' → logprob: -15.500005722045898
    7. ')

' → logprob: -15.625005722045898
    8. '))' → logprob: -17.2500057220459
    9. '())' → logprob: -18.7500057220459
    10. '),' → logprob: -18.8750057220459

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8182471990585327
    2. '<|end|>' → logprob: -0.8182471990585327
    3. 'def' → logprob: -2.5682473182678223
    4. '
' → logprob: -3.3182473182678223
    5. ' def' → logprob: -6.443247318267822
    6. '<|end|>' → logprob: -6.568247318267822
    7. '    
' → logprob: -7.193247318267822
    8. ')' → logprob: -8.068246841430664
    9. ' ' → logprob: -8.693246841430664
    10. '```' → logprob: -8.943246841430664

Token 420: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0020246391650289297
    2. '   ' → logprob: -6.2520246505737305
    3. ' def' → logprob: -9.25202465057373
    4. '	def' → logprob: -16.252023696899414
    5. '
' → logprob: -17.127023696899414
    6. '    
' → logprob: -18.752023696899414
    7. '  ' → logprob: -18.752023696899414
    8. ' ' → logprob: -19.502023696899414
    9. '```' → logprob: -19.877023696899414
    10. ':def' → logprob: -20.377023696899414

Token 421: ' arithmetic' (ID: 81645)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.463038682937622
    2. ' check' → logprob: -1.588038682937622
    3. ' validate' → logprob: -2.088038682937622
    4. ' solve' → logprob: -2.088038682937622
    5. 'is' → logprob: -2.338038682937622
    6. 'solve' → logprob: -2.463038682937622
    7. 'check' → logprob: -2.963038682937622
    8. 'validate' → logprob: -3.088038682937622
    9. 'all' → logprob: -4.838038444519043
    10. ' all' → logprob: -5.088038444519043

Token 422: '_constraints' (ID: 153522)
  Prédit: '_expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.639998197555542
    2. '_constraints' → logprob: -1.514998197555542
    3. '_constraint' → logprob: -2.389998197555542
    4. '_check' → logprob: -3.389998197555542
    5. '_sum' → logprob: -3.514998197555542
    6. '(self' → logprob: -3.639998197555542
    7. '_p' → logprob: -4.139998435974121
    8. '_operation' → logprob: -4.514998435974121
    9. '_e' → logprob: -4.889998435974121
    10. '_result' → logprob: -5.014998435974121

Token 423: '_valid' (ID: 23321)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005840110243298113
    2. '(' → logprob: -7.500584125518799
    3. 'self' → logprob: -11.00058364868164
    4. ' (' → logprob: -11.37558364868164
    5. 'def' → logprob: -14.00058364868164
    6. '_(' → logprob: -14.12558364868164
    7. '(
' → logprob: -15.12558364868164
    8. '_' → logprob: -15.62558364868164
    9. ' self' → logprob: -15.75058364868164
    10. '   ' → logprob: -15.75058364868164

Token 424: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011355629976605996
    2. '(' → logprob: -9.125113487243652
    3. ' (' → logprob: -12.750113487243652
    4. 'self' → logprob: -13.375113487243652
    5. '(
' → logprob: -17.37511444091797
    6. '   ' → logprob: -17.50011444091797
    7. '(s' → logprob: -17.75011444091797
    8. ' ' → logprob: -17.87511444091797
    9. '(sel' → logprob: -18.37511444091797
    10. ' self' → logprob: -18.87511444091797

Token 425: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4857560992240906
    2. '(self' → logprob: -0.9857560992240906
    3. ')' → logprob: -5.110755920410156
    4. '):' → logprob: -5.860755920410156
    5. '):
' → logprob: -6.360755920410156
    6. ')(' → logprob: -7.360755920410156
    7. '(' → logprob: -8.735755920410156
    8. ' self' → logprob: -9.610755920410156
    9. '   ' → logprob: -10.235755920410156
    10. 'def' → logprob: -10.485755920410156

Token 426: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0063238246366381645
    2. '(' → logprob: -6.13132381439209
    3. 'self' → logprob: -6.13132381439209
    4. ' ->' → logprob: -6.88132381439209
    5. '->' → logprob: -7.13132381439209
    6. ' self' → logprob: -10.25632381439209
    7. '(
' → logprob: -10.50632381439209
    8. ':' → logprob: -10.63132381439209
    9. ')' → logprob: -11.25632381439209
    10. '   ' → logprob: -11.50632381439209

Token 427: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -1.306760805164231e-05
    2. ' bool' → logprob: -11.25001335144043
    3. '(bool' → logprob: -18.50001335144043
    4. '	bool' → logprob: -19.37501335144043
    5. '```' → logprob: -19.37501335144043
    6. '   ' → logprob: -19.50001335144043
    7. '<bool' → logprob: -20.37501335144043
    8. ' ' → logprob: -20.87501335144043
    9. 'def' → logprob: -21.00001335144043
    10. '
' → logprob: -21.25001335144043

Token 428: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011259292950853705
    2. '(' → logprob: -7.626125812530518
    3. '       ' → logprob: -8.376126289367676
    4. 'self' → logprob: -9.001126289367676
    5. '(
' → logprob: -9.001126289367676
    6. ':' → logprob: -9.376126289367676
    7. '   ' → logprob: -9.751126289367676
    8. ':
' → logprob: -11.501126289367676
    9. ' self' → logprob: -12.626126289367676
    10. ' (' → logprob: -13.001126289367676

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002387302927672863
    2. 'A' → logprob: -6.252387523651123
    3. 'a' → logprob: -8.627387046813965
    4. '   ' → logprob: -9.502387046813965
    5. 'def' → logprob: -10.252387046813965
    6. 'sum' → logprob: -10.252387046813965
    7. '#' → logprob: -11.002387046813965
    8. 'return' → logprob: -11.127387046813965
    9. 'C' → logprob: -11.252387046813965
    10. 'G' → logprob: -11.502387046813965

Token 430: ' c' (ID: 274)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9135339260101318
    2. 'c' (adapté à ' c') → logprob: -1.2885339260101318
    3. 'cells' → logprob: -1.6635339260101318
    4. '       ' → logprob: -2.913533926010132
    5. 'C' → logprob: -3.663533926010132
    6. '   ' → logprob: -4.788534164428711
    7. ' cells' → logprob: -4.788534164428711
    8. 'a' → logprob: -4.788534164428711
    9. ' A' → logprob: -4.913534164428711
    10. 'cell' → logprob: -5.413534164428711

Token 431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7520096898078918
    2. 'ells' → logprob: -0.8770096898078918
    3. 'ell' → logprob: -2.877009630203247
    4. '   ' → logprob: -3.127009630203247
    5. '       ' → logprob: -5.377009868621826
    6. '=' → logprob: -5.877009868621826
    7. 'A' → logprob: -6.752009868621826
    8. 'e' → logprob: -6.877009868621826
    9. '    ' → logprob: -8.002009391784668
    10. '     ' → logprob: -8.127009391784668

Token 432: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.803360495017841e-05
    2. ' self' → logprob: -9.625078201293945
    3. '(self' → logprob: -11.750078201293945
    4. 'int' → logprob: -12.875078201293945
    5. '[self' → logprob: -14.000078201293945
    6. '   ' → logprob: -16.125078201293945
    7. 'elf' → logprob: -16.500078201293945
    8. 'lambda' → logprob: -16.625078201293945
    9. '{' → logprob: -16.750078201293945
    10. 'sum' → logprob: -16.875078201293945

Token 433: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.0013438044115900993
    2. 'ells' → logprob: -6.626343727111816
    3. 'cells' → logprob: -11.626343727111816
    4. '.' → logprob: -12.876343727111816
    5. ' .' → logprob: -13.501343727111816
    6. ' ' → logprob: -13.876343727111816
    7. '   ' → logprob: -14.126343727111816
    8. 'self' → logprob: -14.251343727111816
    9. '```' → logprob: -14.376343727111816
    10. 'ell' → logprob: -15.001343727111816

Token 434: '
' (ID: 198)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.024967558681964874
    2. '       ' → logprob: -4.274967670440674
    3. '
' → logprob: -4.774967670440674
    4. 'A' → logprob: -7.149967670440674
    5. '["' → logprob: -7.149967670440674
    6. '        
' → logprob: -9.024967193603516
    7. ''A' → logprob: -9.524967193603516
    8. 'def' → logprob: -9.649967193603516
    9. '   ' → logprob: -9.774967193603516
    10. ',' → logprob: -9.899967193603516

Token 435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03852818161249161
    2. '
' → logprob: -3.4135282039642334
    3. '        
' → logprob: -6.288527965545654
    4. ' if' → logprob: -7.038527965545654
    5. 'A' → logprob: -7.413527965545654
    6. '   ' → logprob: -7.788527965545654
    7. 'if' → logprob: -9.163528442382812
    8. ' A' → logprob: -9.163528442382812
    9. ' 
' → logprob: -9.288528442382812
    10. '    
' → logprob: -9.288528442382812

Token 436: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1678030639886856
    2. 'if' → logprob: -3.2928030490875244
    3. 'ABC' → logprob: -3.2928030490875244
    4. 'a' → logprob: -4.2928032875061035
    5. 'sum' → logprob: -4.2928032875061035
    6. '#' (adapté à ' #') → logprob: -4.5428032875061035
    7. 'return' → logprob: -4.6678032875061035
    8. 'AB' → logprob: -4.7928032875061035
    9. 'abc' → logprob: -5.0428032875061035
    10. '       ' → logprob: -5.2928032875061035

Token 437: ' Columns' (ID: 118291)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -1.1374363899230957
    2. 'A' → logprob: -1.2624363899230957
    3. '#' → logprob: -2.3874363899230957
    4. 'abc' → logprob: -2.5124363899230957
    5. 'if' → logprob: -2.6374363899230957
    6. 'sum' → logprob: -2.8874363899230957
    7. 'AB' → logprob: -3.3874363899230957
    8. 'a' → logprob: -3.5124363899230957
    9. 'def' → logprob: -4.762436389923096
    10. 'val' → logprob: -4.762436389923096

Token 438: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47083643078804016
    2. 'A' → logprob: -2.2208364009857178
    3. '[' → logprob: -2.5958364009857178
    4. '
' → logprob: -2.9708364009857178
    5. 'return' → logprob: -3.4708364009857178
    6. 'for' → logprob: -3.7208364009857178
    7. '   ' → logprob: -3.8458364009857178
    8. ' A' → logprob: -4.595836639404297
    9. ':' → logprob: -4.595836639404297
    10. ' return' → logprob: -4.720836639404297

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8482843637466431
    2. 'for' → logprob: -1.598284363746643
    3. 'if' → logprob: -2.0982842445373535
    4. ' if' → logprob: -2.2232842445373535
    5. ' for' → logprob: -2.4732842445373535
    6. 'A' → logprob: -4.4732842445373535
    7. 'return' → logprob: -4.7232842445373535
    8. ' col' → logprob: -4.8482842445373535
    9. ' return' → logprob: -5.2232842445373535
    10. '   ' → logprob: -5.7232842445373535

Token 440: ' #' (ID: 1069)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.3863379955291748
    2. 'A' → logprob: -1.5113379955291748
    3. 'for' → logprob: -2.011337995529175
    4. '#' (adapté à ' #') → logprob: -2.136337995529175
    5. 'if' → logprob: -2.136337995529175
    6. 'sum' → logprob: -3.261337995529175
    7. 'ABC' → logprob: -3.886337995529175
    8. 'a' → logprob: -3.886337995529175
    9. 'AB' → logprob: -4.511338233947754
    10. ' col' → logprob: -4.761338233947754

Token 441: ' units' (ID: 13306)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.90984708070755
    2. '#' → logprob: -2.1598470211029053
    3. ' if' → logprob: -2.2848470211029053
    4. 'A' → logprob: -2.4098470211029053
    5. 'for' → logprob: -2.9098470211029053
    6. 'c' → logprob: -3.1598470211029053
    7. 'return' → logprob: -3.1598470211029053
    8. ' return' → logprob: -3.7848470211029053
    9. ' A' → logprob: -3.9098470211029053
    10. 'C' → logprob: -3.9098470211029053

Token 442: ' digit' (ID: 19181)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7170536518096924
    2. '_sum' → logprob: -1.4670536518096924
    3. 'C' → logprob: -2.2170536518096924
    4. 'A' → logprob: -2.3420536518096924
    5. 'sum' → logprob: -4.092053413391113
    6. '=' → logprob: -4.092053413391113
    7. '   ' → logprob: -5.092053413391113
    8. 'G' → logprob: -5.092053413391113
    9. ':' → logprob: -5.592053413391113
    10. ' ' → logprob: -6.092053413391113

Token 443: ':' (ID: 25)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7444520592689514
    2. 'A' → logprob: -1.6194519996643066
    3. '=' → logprob: -2.4944519996643066
    4. ' =' → logprob: -2.7444519996643066
    5. 'G' → logprob: -2.8694519996643066
    6. 'F' → logprob: -3.9944519996643066
    7. 'E' → logprob: -3.9944519996643066
    8. '       ' → logprob: -4.244451999664307
    9. '   ' → logprob: -4.369451999664307
    10. 'c' → logprob: -4.494451999664307

Token 444: ' I' (ID: 357)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2546910345554352
    2. 'c' → logprob: -2.1296911239624023
    3. 'I' → logprob: -3.8796911239624023
    4. '(I' → logprob: -3.8796911239624023
    5. '(C' → logprob: -4.004691123962402
    6. '(G' → logprob: -4.254691123962402
    7. '(A' → logprob: -4.754691123962402
    8. '((' → logprob: -5.129691123962402
    9. 'C' → logprob: -5.754691123962402
    10. ' (' → logprob: -5.754691123962402

Token 445: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7114549875259399
    2. '==' → logprob: -1.46145498752594
    3. ' =' → logprob: -2.2114548683166504
    4. ')' → logprob: -3.3364548683166504
    5. '=' → logprob: -3.5864548683166504
    6. '+' → logprob: -3.5864548683166504
    7. ' +' → logprob: -3.8364548683166504
    8. '   ' → logprob: -4.21145486831665
    9. ' ' → logprob: -4.83645486831665
    10. ',' → logprob: -5.83645486831665

Token 446: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2875376343727112
    2. '(' → logprob: -1.9125375747680664
    3. 'c' → logprob: -3.1625375747680664
    4. '((' → logprob: -3.9125375747680664
    5. ' (' → logprob: -4.162537574768066
    6. '(C' → logprob: -4.287537574768066
    7. '(A' → logprob: -6.287537574768066
    8. '(E' → logprob: -6.287537574768066
    9. '(B' → logprob: -6.412537574768066
    10. '(F' → logprob: -6.912537574768066

Token 447: 'C' (ID: 34)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.48143845796585083
    2. '(c' → logprob: -1.231438398361206
    3. 'C' → logprob: -3.356438398361206
    4. 'F' → logprob: -4.231438636779785
    5. 'E' → logprob: -4.856438636779785
    6. 'G' → logprob: -5.106438636779785
    7. '(C' → logprob: -5.231438636779785
    8. '(G' → logprob: -5.481438636779785
    9. '(F' → logprob: -5.606438636779785
    10. 'D' → logprob: -5.606438636779785

Token 448: ' +' (ID: 659)
  Prédit: '.value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00502027478069067
    2. ' +' → logprob: -5.6300201416015625
    3. '+' → logprob: -7.2550201416015625
    4. ' .' → logprob: -8.380020141601562
    5. '.' → logprob: -9.005020141601562
    6. 'value' → logprob: -9.130020141601562
    7. ')' → logprob: -9.880020141601562
    8. ' *' → logprob: -10.380020141601562
    9. ' ' → logprob: -10.630020141601562
    10. '*' → logprob: -10.630020141601562

Token 449: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -7.910643762443215e-05
    2. ' F' → logprob: -10.000079154968262
    3. 'I' → logprob: -11.250079154968262
    4. ' ' → logprob: -12.250079154968262
    5. '``' → logprob: -12.875079154968262
    6. 'G' → logprob: -12.875079154968262
    7. '   ' → logprob: -13.000079154968262
    8. '
' → logprob: -13.375079154968262
    9. '

' → logprob: -13.625079154968262
    10. '  ' → logprob: -14.125079154968262

Token 450: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30429574847221375
    2. ' +' → logprob: -1.6792957782745361
    3. '+' → logprob: -2.679295778274536
    4. ')%' → logprob: -5.054295539855957
    5. ' )' → logprob: -7.804295539855957
    6. '[' → logprob: -9.179295539855957
    7. '+B' → logprob: -9.679295539855957
    8. 'I' → logprob: -9.804295539855957
    9. '%' → logprob: -10.429295539855957
    10. '   ' → logprob: -10.929295539855957

Token 451: ' mod' (ID: 1812)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21742582321166992
    2. ' and' → logprob: -2.71742582321167
    3. '%' → logprob: -2.84242582321167
    4. ' %' → logprob: -3.71742582321167
    5. '.value' → logprob: -4.34242582321167
    6. 'and' → logprob: -4.46742582321167
    7. ')%' → logprob: -4.71742582321167
    8. '.' → logprob: -5.84242582321167
    9. ' ' → logprob: -6.46742582321167
    10. '   ' → logprob: -6.59242582321167

Token 452: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012047011114191264
    2. '9' → logprob: -9.500120162963867
    3. ' ' → logprob: -10.000120162963867
    4. '```' → logprob: -17.625120162963867
    5. '(' → logprob: -17.750120162963867
    6. '  ' → logprob: -17.875120162963867
    7. ')' → logprob: -18.000120162963867
    8. '   ' → logprob: -18.000120162963867
    9. '
' → logprob: -18.500120162963867
    10. '1' → logprob: -18.625120162963867

Token 453: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0007119550718925893
    2. '9' → logprob: -7.250711917877197
    3. ' ' → logprob: -13.125712394714355
    4. '1' → logprob: -17.75071144104004
    5. '=' → logprob: -19.12571144104004
    6. '(' → logprob: -19.50071144104004
    7. '{' → logprob: -19.62571144104004
    8. '   ' → logprob: -19.62571144104004
    9. '```' → logprob: -19.75071144104004
    10. '0' → logprob: -19.87571144104004

Token 454: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06794852763414383
    2. ' and' → logprob: -2.942948579788208
    3. '
' → logprob: -4.942948341369629
    4. 'and' → logprob: -6.442948341369629
    5. '   ' → logprob: -7.067948341369629
    6. '()' → logprob: -7.567948341369629
    7. ',' → logprob: -7.567948341369629
    8. ' if' → logprob: -7.692948341369629
    9. '        ' → logprob: -8.692948341369629
    10. '()
' → logprob: -8.692948341369629

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01101269293576479
    2. '   ' → logprob: -5.261012554168701
    3. ' if' → logprob: -6.011012554168701
    4. 'if' → logprob: -7.511012554168701
    5. 'return' → logprob: -7.761012554168701
    6. ' and' → logprob: -7.886012554168701
    7. ',' → logprob: -8.26101303100586
    8. ')' → logprob: -8.26101303100586
    9. ':' → logprob: -8.51101303100586
    10. '()' → logprob: -8.63601303100586

Token 456: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008431361988186836
    2. ' if' → logprob: -6.008431434631348
    3. '   ' → logprob: -6.258431434631348
    4. 'if' → logprob: -7.008431434631348
    5. 'return' → logprob: -7.133431434631348
    6. '=' → logprob: -7.258431434631348
    7. ' return' → logprob: -7.383431434631348
    8. '(' → logprob: -8.883431434631348
    9. ':' → logprob: -8.883431434631348
    10. ')' → logprob: -9.258431434631348

Token 457: ' tens' (ID: 28965)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11158004403114319
    2. '       ' → logprob: -2.9865801334381104
    3. 'I' → logprob: -4.111579895019531
    4. 'return' → logprob: -4.236579895019531
    5. ' if' → logprob: -4.361579895019531
    6. '   ' → logprob: -5.361579895019531
    7. 'i' → logprob: -5.486579895019531
    8. '(I' → logprob: -6.986579895019531
    9. 'c' → logprob: -8.111579895019531
    10. ' return' → logprob: -8.611579895019531

Token 458: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.6145482659339905
    2. ' digit' → logprob: -0.8645482659339905
    3. ':' → logprob: -3.4895482063293457
    4. '_digit' → logprob: -5.114548206329346
    5. ' place' → logprob: -6.989548206329346
    6. ' ' → logprob: -9.114548683166504
    7. 'place' → logprob: -9.239548683166504
    8. ' :' → logprob: -10.114548683166504
    9. 'Digit' → logprob: -10.114548683166504
    10. '   ' → logprob: -10.489548683166504

Token 459: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019413690315559506
    2. ' :' → logprob: -6.251941204071045
    3. 'I' → logprob: -12.626941680908203
    4. ' =' → logprob: -12.751941680908203
    5. '   ' → logprob: -13.751941680908203
    6. ':
' → logprob: -14.126941680908203
    7. ' ' → logprob: -14.251941680908203
    8. ',' → logprob: -14.501941680908203
    9. '=' → logprob: -14.626941680908203
    10. ' I' → logprob: -14.876941680908203

Token 460: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.015662075951695442
    2. ' H' → logprob: -4.26566219329834
    3. '   ' → logprob: -7.14066219329834
    4. 'G' → logprob: -8.39066219329834
    5. 'I' → logprob: -9.01566219329834
    6. '(H' → logprob: -9.39066219329834
    7. '       ' → logprob: -9.64066219329834
    8. ''H' → logprob: -9.89066219329834
    9. 'B' → logprob: -10.26566219329834
    10. ' ' → logprob: -10.76566219329834

Token 461: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008617881685495377
    2. '==' → logprob: -4.758617877960205
    3. ' ' → logprob: -13.008618354797363
    4. '==(' → logprob: -14.633618354797363
    5. '   ' → logprob: -15.758618354797363
    6. ' ==
' → logprob: -16.133617401123047
    7. ' !=' → logprob: -16.258617401123047
    8. ')' → logprob: -16.383617401123047
    9. ')==' → logprob: -16.883617401123047
    10. ' =' → logprob: -17.133617401123047

Token 462: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1573115587234497
    2. '(c' → logprob: -1.5323115587234497
    3. '(A' → logprob: -1.7823115587234497
    4. '(C' → logprob: -1.9073115587234497
    5. '(B' → logprob: -2.03231143951416
    6. '((' → logprob: -4.28231143951416
    7. '(' → logprob: -5.90731143951416
    8. '(D' → logprob: -6.03231143951416
    9. '(G' → logprob: -6.40731143951416
    10. ' ((' → logprob: -7.53231143951416

Token 463: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.645726203918457
    2. '(B' → logprob: -0.770726203918457
    3. '((' → logprob: -5.395726203918457
    4. ' (' → logprob: -5.770726203918457
    5. '(c' → logprob: -6.520726203918457
    6. '(' → logprob: -6.770726203918457
    7. '(A' → logprob: -7.020726203918457
    8. '(C' → logprob: -7.395726203918457
    9. 'c' → logprob: -8.145726203918457
    10. '(D' → logprob: -8.145726203918457

Token 464: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1797652393579483
    2. ' +' → logprob: -1.804765224456787
    3. ' ' → logprob: -11.929765701293945
    4. '*' → logprob: -12.679765701293945
    5. '+D' → logprob: -12.929765701293945
    6. '+c' → logprob: -13.054765701293945
    7. '+
' → logprob: -13.179765701293945
    8. ')' → logprob: -14.054765701293945
    9. '+C' → logprob: -14.429765701293945
    10. '-' → logprob: -14.429765701293945

Token 465: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0005779353086836636
    2. 'C' → logprob: -9.000577926635742
    3. ' E' → logprob: -9.250577926635742
    4. '(' → logprob: -9.375577926635742
    5. 'c' → logprob: -9.625577926635742
    6. '(E' → logprob: -9.750577926635742
    7. 'D' → logprob: -9.875577926635742
    8. '(c' → logprob: -10.250577926635742
    9. '((' → logprob: -10.500577926635742
    10. '
' → logprob: -11.500577926635742

Token 466: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4649542570114136
    2. ' +' → logprob: -1.2149542570114136
    3. ')' → logprob: -2.589954376220703
    4. '   ' → logprob: -10.214954376220703
    5. '+)' → logprob: -11.714954376220703
    6. '*' → logprob: -12.214954376220703
    7. ' )' → logprob: -12.214954376220703
    8. '+C' → logprob: -12.339954376220703
    9. ' plus' → logprob: -12.714954376220703
    10. '1' → logprob: -12.714954376220703

Token 467: ' carry' (ID: 9852)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.7295333743095398
    2. '(G' → logprob: -1.6045334339141846
    3. '1' → logprob: -2.3545334339141846
    4. '(c' → logprob: -2.8545334339141846
    5. '((' → logprob: -3.1045334339141846
    6. ' (' → logprob: -3.1045334339141846
    7. '(' → logprob: -3.1045334339141846
    8. '(I' → logprob: -3.9795334339141846
    9. 'G' → logprob: -5.4795331954956055
    10. '(A' → logprob: -6.3545331954956055

Token 468: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7410942912101746
    2. 'over' → logprob: -0.8660942912101746
    3. '1' → logprob: -2.7410943508148193
    4. '_over' → logprob: -3.7410943508148193
    5. '_in' → logprob: -5.49109411239624
    6. '[' → logprob: -5.74109411239624
    7. '0' → logprob: -6.49109411239624
    8. 'in' → logprob: -6.49109411239624
    9. '_' → logprob: -6.74109411239624
    10. ')>' → logprob: -7.74109411239624

Token 469: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004485069774091244
    2. '1' → logprob: -6.379485130310059
    3. 'over' → logprob: -6.379485130310059
    4. ' )' → logprob: -8.129485130310059
    5. ' +' → logprob: -8.129485130310059
    6. '_over' → logprob: -8.629485130310059
    7. '_in' → logprob: -9.754485130310059
    8. '_' → logprob: -10.129485130310059
    9. '[' → logprob: -10.629485130310059
    10. '_c' → logprob: -11.004485130310059

Token 470: ' mod' (ID: 1812)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18306751549243927
    2. '+' → logprob: -1.8080675601959229
    3. ')' → logprob: -6.433067321777344
    4. '1' → logprob: -7.183067321777344
    5. '       ' → logprob: -8.183067321777344
    6. '10' → logprob: -8.683067321777344
    7. '
' → logprob: -9.558067321777344
    8. ' ' → logprob: -9.933067321777344
    9. '   ' → logprob: -10.183067321777344
    10. '0' → logprob: -10.308067321777344

Token 471: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0011773703154176474
    2. ' ' → logprob: -6.7511773109436035
    3. '   ' → logprob: -12.751177787780762
    4. '(' → logprob: -13.001177787780762
    5. '```' → logprob: -14.626177787780762
    6. '  ' → logprob: -15.376177787780762
    7. '1' → logprob: -15.626177787780762
    8. '
' → logprob: -16.001176834106445
    9. '9' → logprob: -16.063676834106445
    10. ' (' → logprob: -16.126176834106445

Token 472: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -11.000019073486328
    3. '2' → logprob: -14.125019073486328
    4. '100' → logprob: -14.625019073486328
    5. '   ' → logprob: -15.000019073486328
    6. '1' → logprob: -15.000019073486328
    7. '(' → logprob: -15.750019073486328
    8. '9' → logprob: -15.875019073486328
    9. '```' → logprob: -15.875019073486328
    10. 'int' → logprob: -16.375019073486328

Token 473: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02115682139992714
    2. '<|end|>' → logprob: -4.3961567878723145
    3. '
' → logprob: -5.6461567878723145
    4. '<|end|>' → logprob: -6.7711567878723145
    5. '\n' → logprob: -7.2711567878723145
    6. ')' → logprob: -7.5211567878723145
    7. '\' → logprob: -7.5211567878723145
    8. '#' → logprob: -7.6461567878723145
    9. ',' → logprob: -8.021157264709473
    10. '   ' → logprob: -8.271157264709473

Token 474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061131931841373444
    2. '   ' → logprob: -2.9361319541931152
    3. '#' → logprob: -6.311131954193115
    4. 'carry' → logprob: -7.436131954193115
    5. '
' → logprob: -7.811131954193115
    6. '\' → logprob: -7.811131954193115
    7. '	' → logprob: -7.936131954193115
    8. '        
' → logprob: -8.061131477355957
    9. 'def' → logprob: -8.186131477355957
    10. ' ' → logprob: -8.186131477355957

Token 475: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41778698563575745
    2. '   ' → logprob: -1.917786955833435
    3. 'carry' → logprob: -1.917786955833435
    4. ' carry' → logprob: -3.7927870750427246
    5. '#' (adapté à ' #') → logprob: -4.917787075042725
    6. 'c' → logprob: -5.542787075042725
    7. '
' → logprob: -5.542787075042725
    8. '        
' → logprob: -6.417787075042725
    9. '    
' → logprob: -6.792787075042725
    10. ' ' → logprob: -6.917787075042725

Token 476: ' hundreds' (ID: 17839)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.020462000742554665
    2. 'carry' → logprob: -4.0204620361328125
    3. '   ' → logprob: -6.3954620361328125
    4. 'return' → logprob: -8.020462036132812
    5. ' carry' → logprob: -9.770462036132812
    6. '       ' → logprob: -9.895462036132812
    7. ' G' → logprob: -10.395462036132812
    8. 'g' → logprob: -10.645462036132812
    9. '```' → logprob: -10.895462036132812
    10. '#' → logprob: -11.145462036132812

Token 477: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.530648946762085
    2. 'G' → logprob: -1.405648946762085
    3. ' G' → logprob: -2.780648946762085
    4. ' digit' → logprob: -2.905648946762085
    5. ':' → logprob: -3.405648946762085
    6. '_digit' → logprob: -5.155649185180664
    7. 'D' → logprob: -6.030649185180664
    8. ' =' → logprob: -6.405649185180664
    9. ' ' → logprob: -6.530649185180664
    10. '   ' → logprob: -6.655649185180664

Token 478: ':' (ID: 25)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.11147736012935638
    2. ' G' → logprob: -2.6114773750305176
    3. ':' → logprob: -3.8614773750305176
    4. '=' → logprob: -5.861477375030518
    5. '==' → logprob: -5.986477375030518
    6. ' =' → logprob: -5.986477375030518
    7. ' ==' → logprob: -6.236477375030518
    8. 'g' → logprob: -7.236477375030518
    9. '   ' → logprob: -8.61147689819336
    10. ':G' → logprob: -9.73647689819336

Token 479: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.001222370658069849
    2. ' G' → logprob: -6.751222133636475
    3. '   ' → logprob: -10.751222610473633
    4. ' ' → logprob: -11.501222610473633
    5. 'D' → logprob: -11.876222610473633
    6. 'A' → logprob: -12.501222610473633
    7. 'g' → logprob: -12.751222610473633
    8. '  ' → logprob: -13.376222610473633
    9. '
' → logprob: -13.751222610473633
    10. '```' → logprob: -14.376222610473633

Token 480: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004678491968661547
    2. '==' → logprob: -5.379678726196289
    3. ' ' → logprob: -10.629678726196289
    4. ')' → logprob: -11.004678726196289
    5. ')==' → logprob: -12.129678726196289
    6. ' ==
' → logprob: -12.629678726196289
    7. ' =' → logprob: -13.004678726196289
    8. ' ===' → logprob: -13.254678726196289
    9. '=' → logprob: -14.254678726196289
    10. ']==' → logprob: -14.629678726196289

Token 481: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3523891866207123
    2. '(A' → logprob: -1.3523892164230347
    3. '(' → logprob: -3.352389097213745
    4. 'A' → logprob: -6.602389335632324
    5. '(a' → logprob: -7.352389335632324
    6. '((' → logprob: -7.602389335632324
    7. '(c' → logprob: -8.227389335632324
    8. ' A' → logprob: -8.602389335632324
    9. ' ' → logprob: -9.227389335632324
    10. '1' → logprob: -9.852389335632324

Token 482: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006614241749048233
    2. '(A' → logprob: -5.7566142082214355
    3. '(' → logprob: -6.1316142082214355
    4. ' (' → logprob: -7.7566142082214355
    5. ' A' → logprob: -8.131614685058594
    6. '((' → logprob: -9.006614685058594
    7. 'c' → logprob: -9.506614685058594
    8. '   ' → logprob: -9.506614685058594
    9. '1' → logprob: -10.131614685058594
    10. ')' → logprob: -10.256614685058594

Token 483: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2811756432056427
    2. '+' → logprob: -1.4061756134033203
    3. ')' → logprob: -11.40617561340332
    4. ' ' → logprob: -12.28117561340332
    5. ' +
' → logprob: -12.28117561340332
    6. '+
' → logprob: -13.28117561340332
    7. ' +
' → logprob: -15.03117561340332
    8. ' plus' → logprob: -15.03117561340332
    9. ')+' → logprob: -15.15617561340332
    10. '   ' → logprob: -15.40617561340332

Token 484: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.004624272231012583
    2. ' D' → logprob: -5.379624366760254
    3. ' ' → logprob: -12.879624366760254
    4. '  ' → logprob: -14.754624366760254
    5. '   ' → logprob: -15.129624366760254
    6. 'C' → logprob: -15.254624366760254
    7. '1' → logprob: -16.004623413085938
    8. '(D' → logprob: -16.254623413085938
    9. '
' → logprob: -17.004623413085938
    10. '	D' → logprob: -17.004623413085938

Token 485: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14307041466236115
    2. '+' → logprob: -2.0180704593658447
    3. ')' → logprob: -7.893070220947266
    4. ' +
' → logprob: -12.268070220947266
    5. ' )' → logprob: -12.518070220947266
    6. ' plus' → logprob: -12.643070220947266
    7. ' ' → logprob: -12.893070220947266
    8. '+
' → logprob: -14.018070220947266
    9. '+)' → logprob: -14.143070220947266
    10. ')+' → logprob: -14.268070220947266

Token 486: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.06568160653114319
    2. '1' → logprob: -3.3156816959381104
    3. '0' → logprob: -4.315681457519531
    4. ' carry' → logprob: -5.065681457519531
    5. '(' → logprob: -5.815681457519531
    6. ' (' → logprob: -6.315681457519531
    7. '(c' → logprob: -6.690681457519531
    8. '((' → logprob: -7.690681457519531
    9. ' ' → logprob: -7.690681457519531
    10. 'c' → logprob: -7.815681457519531

Token 487: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09174094349145889
    2. '2' → logprob: -2.591740846633911
    3. '0' → logprob: -4.59174108505249
    4. ')' → logprob: -6.34174108505249
    5. 'over' → logprob: -8.091740608215332
    6. 'out' → logprob: -9.591740608215332
    7. 'in' → logprob: -9.591740608215332
    8. '_' → logprob: -9.966740608215332
    9. '```' → logprob: -10.216740608215332
    10. '_over' → logprob: -10.341740608215332

Token 488: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37947991490364075
    2. ' +' → logprob: -1.2544798851013184
    3. '+' → logprob: -3.5044798851013184
    4. ' )' → logprob: -8.754480361938477
    5. '1' → logprob: -9.129480361938477
    6. '2' → logprob: -10.504480361938477
    7. '   ' → logprob: -10.754480361938477
    8. ')
' → logprob: -10.879480361938477
    9. '+)' → logprob: -10.879480361938477
    10. ' +
' → logprob: -11.129480361938477

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022196805104613304
    2. '
' → logprob: -4.7721967697143555
    3. '<|end|>' → logprob: -5.5221967697143555
    4. '   ' → logprob: -6.2721967697143555
    5. 'def' → logprob: -6.3971967697143555
    6. '        
' → logprob: -6.5221967697143555
    7. '()' → logprob: -7.0221967697143555
    8. ',' → logprob: -7.3971967697143555
    9. '()
' → logprob: -7.7721967697143555
    10. ':' → logprob: -8.272196769714355

Token 490: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45534849166870117
    2. 'carry' → logprob: -1.4553484916687012
    3. '
' → logprob: -2.455348491668701
    4. '   ' → logprob: -4.330348491668701
    5. 'def' → logprob: -4.455348491668701
    6. '        
' → logprob: -4.455348491668701
    7. ' carry' → logprob: -5.330348491668701
    8. 'c' → logprob: -6.580348491668701
    9. '#' (adapté à ' #') → logprob: -7.330348491668701
    10. '    
' → logprob: -7.455348491668701

Token 491: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.024493400007486343
    2. 'def' → logprob: -4.524493217468262
    3. '#' → logprob: -5.024493217468262
    4. 'for' → logprob: -6.024493217468262
    5. '       ' → logprob: -6.524493217468262
    6. '   ' → logprob: -6.774493217468262
    7. 'c' → logprob: -7.774493217468262
    8. 'return' → logprob: -7.899493217468262
    9. 'I' → logprob: -7.899493217468262
    10. 'A' → logprob: -8.899493217468262

Token 492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05410188436508179
    2. 's' → logprob: -3.8041019439697266
    3. ' =' → logprob: -4.429101943969727
    4. '_' → logprob: -4.679101943969727
    5. '_in' → logprob: -6.054101943969727
    6. 'over' → logprob: -6.179101943969727
    7. '2' → logprob: -6.179101943969727
    8. '_over' → logprob: -7.054101943969727
    9. '0' → logprob: -7.179101943969727
    10. '=' → logprob: -7.679101943969727

Token 493: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020986521616578102
    2. '=' → logprob: -3.895986557006836
    3. ',' → logprob: -8.645986557006836
    4. 's' → logprob: -8.895986557006836
    5. ':' → logprob: -10.020986557006836
    6. '   ' → logprob: -10.270986557006836
    7. '1' → logprob: -10.895986557006836
    8. '_' → logprob: -11.395986557006836
    9. ' ' → logprob: -11.770986557006836
    10. '  ' → logprob: -12.895986557006836

Token 494: ' ((' (ID: 3536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.542461097240448
    2. '((' → logprob: -1.7924611568450928
    3. '0' → logprob: -2.5424611568450928
    4. '1' → logprob: -2.7924611568450928
    5. '(C' → logprob: -3.0424611568450928
    6. '(c' → logprob: -3.1674611568450928
    7. '(B' → logprob: -5.292460918426514
    8. '(I' → logprob: -5.292460918426514
    9. ' (' → logprob: -5.667460918426514
    10. '(int' → logprob: -6.167460918426514

Token 495: 'C' (ID: 34)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08282063156366348
    2. 'C' → logprob: -2.5828206539154053
    3. 'self' → logprob: -5.707820415496826
    4. '(c' → logprob: -8.207820892333984
    5. '   ' → logprob: -9.207820892333984
    6. '(' → logprob: -9.707820892333984
    7. ' c' → logprob: -10.207820892333984
    8. '(self' → logprob: -10.707820892333984
    9. '(C' → logprob: -10.707820892333984
    10. 'F' → logprob: -10.832820892333984

Token 496: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25267696380615234
    2. '+' → logprob: -1.5026769638061523
    3. '.value' → logprob: -7.252676963806152
    4. 'value' → logprob: -11.252676963806152
    5. ' ' → logprob: -11.627676963806152
    6. ')' → logprob: -12.377676963806152
    7. ' +
' → logprob: -12.627676963806152
    8. ' plus' → logprob: -13.252676963806152
    9. ' value' → logprob: -13.377676963806152
    10. '   ' → logprob: -13.752676963806152

Token 497: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.001337624154984951
    2. ' F' → logprob: -6.62633752822876
    3. ')' → logprob: -13.001338005065918
    4. ' ' → logprob: -13.376338005065918
    5. '   ' → logprob: -13.376338005065918
    6. 'self' → logprob: -13.501338005065918
    7. '       ' → logprob: -13.876338005065918
    8. '  ' → logprob: -14.376338005065918
    9. 'f' → logprob: -14.376338005065918
    10. '```' → logprob: -15.001338005065918

Token 498: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0225741863250732
    2. '+' → logprob: -1.0225741863250732
    3. ' +' → logprob: -1.2725741863250732
    4. ')+' → logprob: -8.022574424743652
    5. ' )' → logprob: -9.772574424743652
    6. '   ' → logprob: -10.397574424743652
    7. '+)' → logprob: -10.897574424743652
    8. ')//' → logprob: -11.022574424743652
    9. '+
' → logprob: -11.147574424743652
    10. '+C' → logprob: -11.272574424743652

Token 499: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32479459047317505
    2. '+' → logprob: -1.8247945308685303
    3. ' +' → logprob: -2.1997945308685303
    4. ' )' → logprob: -5.449794769287109
    5. ')//' → logprob: -8.19979476928711
    6. ' //' → logprob: -8.44979476928711
    7. ' ' → logprob: -9.07479476928711
    8. '//' → logprob: -9.57479476928711
    9. '+)' → logprob: -9.69979476928711
    10. '   ' → logprob: -10.44979476928711

Token 500: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003003081073984504
    2. ' ' → logprob: -8.125300407409668
    3. '   ' → logprob: -13.250300407409668
    4. '9' → logprob: -14.000300407409668
    5. '  ' → logprob: -14.875300407409668
    6. ')' → logprob: -15.000300407409668
    7. '```' → logprob: -15.250300407409668
    8. '1' → logprob: -15.375300407409668
    9. '
' → logprob: -16.06279945373535
    10. '    ' → logprob: -16.62529945373535

Token 501: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -15.625004768371582
    4. ')' → logprob: -15.875004768371582
    5. '1' → logprob: -16.3750057220459
    6. '   ' → logprob: -16.6250057220459
    7. '9' → logprob: -16.7500057220459
    8. '
' → logprob: -16.7500057220459
    9. '  ' → logprob: -18.1875057220459
    10. 'I' → logprob: -18.6875057220459

Token 502: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2927502989768982
    2. ' +' → logprob: -1.417750358581543
    3. '+' → logprob: -4.792750358581543
    4. ' )' → logprob: -6.792750358581543
    5. '       ' → logprob: -7.417750358581543
    6. ')
' → logprob: -7.417750358581543
    7. ' +
' → logprob: -7.917750358581543
    8. ')+' → logprob: -8.667750358581543
    9. '))' → logprob: -8.917750358581543
    10. '+)' → logprob: -10.042750358581543

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058748457580804825
    2. '   ' → logprob: -2.933748483657837
    3. 'def' → logprob: -6.683748245239258
    4. '
' → logprob: -7.433748245239258
    5. 'carry' → logprob: -7.808748245239258
    6. ',' → logprob: -8.683748245239258
    7. '<|end|>' → logprob: -8.683748245239258
    8. ' carry' → logprob: -8.808748245239258
    9. '        
' → logprob: -8.933748245239258
    10. '           ' → logprob: -9.308748245239258

Token 504: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2582204341888428
    2. '   ' → logprob: -1.6332204341888428
    3. 'carry' → logprob: -4.133220672607422
    4. 'def' → logprob: -5.008220672607422
    5. ' carry' → logprob: -5.508220672607422
    6. ' def' → logprob: -6.133220672607422
    7. '#' (adapté à ' #') → logprob: -7.133220672607422
    8. '    ' → logprob: -7.633220672607422
    9. ' ' → logprob: -7.633220672607422
    10. '  ' → logprob: -8.633220672607422

Token 505: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.05176178738474846
    2. '       ' → logprob: -3.1767618656158447
    3. ' carry' → logprob: -5.301761627197266
    4. '   ' → logprob: -6.301761627197266
    5. '#' → logprob: -6.926761627197266
    6. 'def' → logprob: -7.926761627197266
    7. 'c' → logprob: -9.051761627197266
    8. ' ' → logprob: -9.676761627197266
    9. '
' → logprob: -9.926761627197266
    10. 'car' → logprob: -10.364261627197266

Token 506: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018184827640652657
    2. '1' → logprob: -4.018184661865234
    3. '_' → logprob: -10.518184661865234
    4. ' =' → logprob: -12.893184661865234
    5. ' ' → logprob: -13.268184661865234
    6. '=' → logprob: -14.518184661865234
    7. '₂' → logprob: -14.705684661865234
    8. '
' → logprob: -14.830684661865234
    9. '```' → logprob: -15.018184661865234
    10. 'carry' → logprob: -15.455684661865234

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012518009170889854
    2. '=' → logprob: -4.387517929077148
    3. ' ' → logprob: -11.762517929077148
    4. ' ==' → logprob: -15.387517929077148
    5. '   ' → logprob: -16.13751792907715
    6. ',' → logprob: -16.51251792907715
    7. ')' → logprob: -17.26251792907715
    8. ' =(' → logprob: -17.26251792907715
    9. ' ' → logprob: -17.76251792907715
    10. ':' → logprob: -17.76251792907715

Token 508: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.08163007348775864
    2. ' ((' → logprob: -2.831629991531372
    3. ' (' → logprob: -4.581630229949951
    4. '(B' → logprob: -5.706630229949951
    5. '(c' → logprob: -5.956630229949951
    6. '(' → logprob: -6.706630229949951
    7. '(((' → logprob: -7.831630229949951
    8. '(H' → logprob: -7.831630229949951
    9. '1' → logprob: -7.956630229949951
    10. '   ' → logprob: -8.331629753112793

Token 509: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.013956867158412933
    2. 'A' → logprob: -4.3889570236206055
    3. '(B' → logprob: -7.8889570236206055
    4. 'c' → logprob: -8.013957023620605
    5. 'C' → logprob: -8.138957023620605
    6. ' B' → logprob: -8.888957023620605
    7. '   ' → logprob: -9.013957023620605
    8. 'I' → logprob: -9.763957023620605
    9. '(A' → logprob: -10.388957023620605
    10. 'H' → logprob: -11.013957023620605

Token 510: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.026303550228476524
    2. '+' → logprob: -3.65130352973938
    3. ' +
' → logprob: -13.5263032913208
    4. ' ' → logprob: -14.2763032913208
    5. 'import' → logprob: -15.1513032913208
    6. '<|end|>' → logprob: -15.6513032913208
    7. ')' → logprob: -16.026304244995117
    8. ' ' → logprob: -16.026304244995117
    9. '+
' → logprob: -16.026304244995117
    10. '+B' → logprob: -16.276304244995117

Token 511: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.2522594630718231
    2. ' E' → logprob: -1.5022594928741455
    3. ' ' → logprob: -8.377259254455566
    4. '   ' → logprob: -10.627259254455566
    5. '  ' → logprob: -11.002259254455566
    6. '    ' → logprob: -11.127259254455566
    7. '       ' → logprob: -11.502259254455566
    8. '     ' → logprob: -12.377259254455566
    9. '      ' → logprob: -12.814759254455566
    10. '+' → logprob: -13.064759254455566

Token 512: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017249085009098053
    2. ' +' → logprob: -4.39224910736084
    3. '+' → logprob: -5.39224910736084
    4. ' )' → logprob: -9.26724910736084
    5. ')//' → logprob: -10.01724910736084
    6. '   ' → logprob: -11.01724910736084
    7. '#' → logprob: -12.14224910736084
    8. ' ' → logprob: -12.89224910736084
    9. '))' → logprob: -13.14224910736084
    10. '//' → logprob: -13.39224910736084

Token 513: ' carry' (ID: 9852)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.45210620760917664
    2. '(c' → logprob: -1.327106237411499
    3. 'carry' → logprob: -3.202106237411499
    4. ' (' → logprob: -3.827106237411499
    5. ' ((' → logprob: -4.57710599899292
    6. 'c' → logprob: -5.20210599899292
    7. '(H' → logprob: -5.32710599899292
    8. '(((' → logprob: -5.70210599899292
    9. '(self' → logprob: -5.82710599899292
    10. '(' → logprob: -5.95210599899292

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008836386725306511
    2. '2' → logprob: -4.758836269378662
    3. ' ' → logprob: -9.50883674621582
    4. '   ' → logprob: -10.00883674621582
    5. ')' → logprob: -10.13383674621582
    6. '
' → logprob: -11.63383674621582
    7. '#' → logprob: -11.75883674621582
    8. '0' → logprob: -11.88383674621582
    9. '_' → logprob: -11.94633674621582
    10. '3' → logprob: -12.25883674621582

Token 515: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013680962147191167
    2. ' +' → logprob: -7.501368045806885
    3. '+' → logprob: -7.876368045806885
    4. ' )' → logprob: -8.626368522644043
    5. ')//' → logprob: -9.376368522644043
    6. '))' → logprob: -10.001368522644043
    7. '())' → logprob: -10.126368522644043
    8. '   ' → logprob: -10.376368522644043
    9. '#' → logprob: -11.251368522644043
    10. '//' → logprob: -11.751368522644043

Token 516: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006507889833301306
    2. ' )' → logprob: -6.131507873535156
    3. ' +' → logprob: -6.256507873535156
    4. '+' → logprob: -7.006507873535156
    5. ')//' → logprob: -7.381507873535156
    6. ' //' → logprob: -7.881507873535156
    7. '//' → logprob: -8.381507873535156
    8. '   ' → logprob: -9.256507873535156
    9. '#' → logprob: -9.631507873535156
    10. '       ' → logprob: -10.756507873535156

Token 517: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0006364276050589979
    2. ' ' → logprob: -7.375636577606201
    3. '   ' → logprob: -12.000636100769043
    4. ')' → logprob: -14.375636100769043
    5. '```' → logprob: -14.688136100769043
    6. '    ' → logprob: -14.875636100769043
    7. '
' → logprob: -15.125636100769043
    8. '  ' → logprob: -15.125636100769043
    9. '100' → logprob: -15.563136100769043
    10. '1' → logprob: -15.625636100769043

Token 518: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -16.12500762939453
    4. 'carry' → logprob: -16.75000762939453
    5. '```' → logprob: -16.75000762939453
    6. '
' → logprob: -17.25000762939453
    7. ')' → logprob: -17.87500762939453
    8. '1' → logprob: -18.06250762939453
    9. '100' → logprob: -18.68750762939453
    10. '0' → logprob: -18.75000762939453

Token 519: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13225413858890533
    2. '       ' → logprob: -2.382254123687744
    3. ')
' → logprob: -3.507254123687744
    4. '   ' → logprob: -7.507254123687744
    5. ' )' → logprob: -8.382254600524902
    6. ')
' → logprob: -8.757254600524902
    7. 'def' → logprob: -9.132254600524902
    8. ')

' → logprob: -9.132254600524902
    9. '+' → logprob: -9.507254600524902
    10. '))' → logprob: -10.132254600524902

Token 520: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1543428897857666
    2. 'def' → logprob: -2.6543428897857666
    3. '       ' → logprob: -2.7793428897857666
    4. ')' → logprob: -5.2793426513671875
    5. ':' → logprob: -5.9043426513671875
    6. ' def' → logprob: -7.5293426513671875
    7. '<|end|>' → logprob: -7.5293426513671875
    8. '
' → logprob: -7.6543426513671875
    9. '    
' → logprob: -8.279342651367188
    10. ',' → logprob: -8.904342651367188

Token 521: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1525103747844696
    2. '   ' → logprob: -2.527510404586792
    3. 'def' → logprob: -3.402510404586792
    4. 'if' → logprob: -4.402510166168213
    5. 'carry' → logprob: -4.902510166168213
    6. ' if' → logprob: -5.902510166168213
    7. 'c' → logprob: -6.527510166168213
    8. ' def' → logprob: -7.152510166168213
    9. 'C' → logprob: -7.152510166168213
    10. 'for' → logprob: -8.152510643005371

Token 522: ' Since' (ID: 12265)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.7421337962150574
    2. 'c' → logprob: -1.9921338558197021
    3. 'if' → logprob: -1.9921338558197021
    4. 'C' → logprob: -2.242133855819702
    5. 'def' → logprob: -2.492133855819702
    6. 'cf' → logprob: -3.742133855819702
    7. 'sum' → logprob: -4.117133617401123
    8. '   ' → logprob: -4.867133617401123
    9. '       ' → logprob: -5.367133617401123
    10. 'CF' → logprob: -5.367133617401123

Token 523: ' all' (ID: 722)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5814100503921509
    2. 'carry' → logprob: -1.9564100503921509
    3. 'some' → logprob: -2.3314099311828613
    4. 'c' → logprob: -2.8314099311828613
    5. 'any' → logprob: -2.9564099311828613
    6. ' not' → logprob: -3.8314099311828613
    7. 'I' → logprob: -3.9564099311828613
    8. 'self' → logprob: -4.206409931182861
    9. 'the' → logprob: -4.831409931182861
    10. 'G' → logprob: -4.956409931182861

Token 524: ' inputs' (ID: 21963)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.07592946290969849
    2. 'assigned' → logprob: -3.5759294033050537
    3. 'digits' → logprob: -3.8259294033050537
    4. 'values' → logprob: -4.575929641723633
    5. ' cells' → logprob: -5.700929641723633
    6. 'c' → logprob: -5.825929641723633
    7. 'carry' → logprob: -5.950929641723633
    8. 'attributes' → logprob: -6.950929641723633
    9. 'are' → logprob: -7.700929641723633
    10. 'codes' → logprob: -7.700929641723633

Token 525: ' and' (ID: 326)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.27113527059555054
    2. ' are' → logprob: -2.2711353302001953
    3. 'may' → logprob: -2.6461353302001953
    4. ' may' → logprob: -3.3961353302001953
    5. 'assigned' → logprob: -5.146135330200195
    6. 'can' → logprob: -5.521135330200195
    7. 'might' → logprob: -5.771135330200195
    8. ' might' → logprob: -6.146135330200195
    9. ' can' → logprob: -6.146135330200195
    10. 'known' → logprob: -6.271135330200195

Token 526: ' digits' (ID: 37806)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5737048983573914
    2. 'outputs' → logprob: -1.1987049579620361
    3. 'carry' → logprob: -3.323704957962036
    4. 'calcul' → logprob: -3.573704957962036
    5. 'inter' → logprob: -3.698704957962036
    6. 'operations' → logprob: -4.448704719543457
    7. 'results' → logprob: -5.073704719543457
    8. 'comput' → logprob: -5.073704719543457
    9. ' carries' → logprob: -5.573704719543457
    10. 'output' → logprob: -6.323704719543457

Token 527: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6881282329559326
    2. 'are' → logprob: -0.8131282329559326
    3. ' may' → logprob: -4.438128471374512
    4. ' must' → logprob: -4.813128471374512
    5. 'may' → logprob: -4.938128471374512
    6. 'must' → logprob: -5.063128471374512
    7. ' can' → logprob: -5.188128471374512
    8. ' should' → logprob: -6.188128471374512
    9. 'should' → logprob: -6.313128471374512
    10. '   ' → logprob: -6.563128471374512

Token 528: ' ' (ID: 220)
  Prédit: 'known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'known' → logprob: -0.7884433269500732
    2. 'either' → logprob: -1.7884433269500732
    3. 'assigned' → logprob: -2.1634433269500732
    4. 'int' → logprob: -2.1634433269500732
    5. 'in' → logprob: -3.4134433269500732
    6. '-' → logprob: -4.163443565368652
    7. 'unknown' → logprob: -4.413443565368652
    8. '1' → logprob: -4.538443565368652
    9. 'inte' → logprob: -4.538443565368652
    10. 'ints' → logprob: -4.538443565368652

Token 529: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3184432983398438
    2. 'known' → logprob: -1.3184432983398438
    3. 'int' → logprob: -1.5684432983398438
    4. 'either' → logprob: -2.5684432983398438
    5. 'assigned' → logprob: -2.6934432983398438
    6. 'in' → logprob: -3.1934432983398438
    7. '1' → logprob: -3.6934432983398438
    8. 'ints' → logprob: -4.068443298339844
    9. 'inte' → logprob: -4.943443298339844
    10. 'unknown' → logprob: -5.068443298339844

Token 530: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.7532644867897034
    2. ' to' → logprob: -1.8782644271850586
    3. '...' → logprob: -2.1282644271850586
    4. '<=' → logprob: -2.2532644271850586
    5. ' <=' → logprob: -2.3782644271850586
    6. 'to' → logprob: -3.5032644271850586
    7. ' through' → logprob: -5.628264427185059
    8. '9' → logprob: -5.753264427185059
    9. '-' → logprob: -6.003264427185059
    10. ')' → logprob: -6.003264427185059

Token 531: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0003449984942562878
    2. ' ' → logprob: -8.375345230102539
    3. '10' → logprob: -9.750345230102539
    4. '0' → logprob: -10.750345230102539
    5. ',' → logprob: -11.625345230102539
    6. ' or' → logprob: -12.687845230102539
    7. '=' → logprob: -13.000345230102539
    8. '
' → logprob: -13.000345230102539
    9. '```' → logprob: -13.437845230102539
    10. 'and' → logprob: -13.687845230102539

Token 532: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21016760170459747
    2. ',' → logprob: -2.335167646408081
    3. '   ' → logprob: -3.335167646408081
    4. '<|end|>' → logprob: -3.960167646408081
    5. ' ,' → logprob: -4.960167407989502
    6. ' if' → logprob: -5.210167407989502
    7. ' and' → logprob: -5.210167407989502
    8. '
' → logprob: -5.460167407989502
    9. 'def' → logprob: -5.710167407989502
    10. '        
' → logprob: -6.085167407989502

Token 533: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0018702136585488915
    2. 'unknown' → logprob: -6.501870155334473
    3. ' -' → logprob: -8.126870155334473
    4. 'assigned' → logprob: -11.376870155334473
    5. ' unknown' → logprob: -11.376870155334473
    6. 'carry' → logprob: -11.376870155334473
    7. 'un' → logprob: -11.501870155334473
    8. '-un' → logprob: -12.251870155334473
    9. '-c' → logprob: -12.376870155334473
    10. '0' → logprob: -12.501870155334473

Token 534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.875000953674316
    3. '-' → logprob: -15.625000953674316
    4. '...' → logprob: -16.625
    5. '```' → logprob: -16.625
    6. '<|end|>' → logprob: -17.5
    7. '<|end|>' → logprob: -17.5
    8. '   ' → logprob: -17.625
    9. ' -' → logprob: -17.875
    10. '       ' → logprob: -18.25

Token 535: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18359586596488953
    2. ',' → logprob: -1.933595895767212
    3. '   ' → logprob: -5.058595657348633
    4. '
' → logprob: -5.183595657348633
    5. 'def' → logprob: -5.558595657348633
    6. ' if' → logprob: -5.683595657348633
    7. ' ,' → logprob: -6.558595657348633
    8. ' (' → logprob: -7.683595657348633
    9. ' def' → logprob: -7.933595657348633
    10. ',
' → logprob: -8.308595657348633

Token 536: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9046952128410339
    2. '#' → logprob: -2.1546952724456787
    3. 'carry' → logprob: -2.2796952724456787
    4. ' if' → logprob: -2.6546952724456787
    5. ' return' → logprob: -2.7796952724456787
    6. 'return' → logprob: -2.7796952724456787
    7. ' carry' → logprob: -3.1546952724456787
    8. 'def' → logprob: -3.2796952724456787
    9. 'if' → logprob: -3.4046952724456787
    10. '   ' → logprob: -3.5296952724456787

Token 537: ' check' (ID: 2371)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.9188712239265442
    2. ' need' → logprob: -1.2938711643218994
    3. ' cannot' → logprob: -2.2938711643218994
    4. '   ' → logprob: -2.6688711643218994
    5. 'def' → logprob: -3.1688711643218994
    6. 'need' → logprob: -4.4188714027404785
    7. '       ' → logprob: -4.5438714027404785
    8. ' should' → logprob: -4.5438714027404785
    9. 'can' → logprob: -4.5438714027404785
    10. ' return' → logprob: -4.5438714027404785

Token 538: ' consistency' (ID: 45250)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7813864350318909
    2. 'for' → logprob: -1.281386375427246
    3. '   ' → logprob: -2.156386375427246
    4. 'assigned' → logprob: -3.156386375427246
    5. ' if' → logprob: -3.281386375427246
    6. '       ' → logprob: -3.531386375427246
    7. ' for' → logprob: -4.406386375427246
    8. 'all' → logprob: -4.656386375427246
    9. 'cells' → logprob: -6.156386375427246
    10. 'c' → logprob: -6.281386375427246

Token 539: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054578911513090134
    2. '   ' → logprob: -3.304579019546509
    3. 'def' → logprob: -5.42957878112793
    4. ':' → logprob: -5.55457878112793
    5. ',' → logprob: -6.05457878112793
    6. ' and' → logprob: -6.55457878112793
    7. '
' → logprob: -6.67957878112793
    8. ' if' → logprob: -7.17957878112793
    9. '        
' → logprob: -8.05457878112793
    10. ' for' → logprob: -8.17957878112793

Token 540: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019248253665864468
    2. ',' → logprob: -7.251924991607666
    3. ' if' → logprob: -8.126924514770508
    4. ' for' → logprob: -8.376924514770508
    5. '   ' → logprob: -8.626924514770508
    6. 'def' → logprob: -8.751924514770508
    7. ' and' → logprob: -10.001924514770508
    8. '.' → logprob: -10.001924514770508
    9. ' at' → logprob: -10.251924514770508
    10. '
' → logprob: -10.501924514770508

Token 541: ' values' (ID: 4824)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.11307060718536377
    2. 'c' → logprob: -2.863070487976074
    3. ' all' → logprob: -3.363070487976074
    4. 'self' → logprob: -4.363070487976074
    5. 'cell' → logprob: -6.863070487976074
    6. ' c' → logprob: -7.488070487976074
    7. ' self' → logprob: -7.988070487976074
    8. 'I' → logprob: -8.488070487976074
    9. 'not' → logprob: -9.738070487976074
    10. '   ' → logprob: -10.238070487976074

Token 542: ' assigned' (ID: 21482)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.4437180161476135
    2. 'are' → logprob: -1.4437179565429688
    3. ' all' → logprob: -3.1937179565429688
    4. ' !=' → logprob: -3.8187179565429688
    5. '[' → logprob: -4.568717956542969
    6. 'all' → logprob: -4.693717956542969
    7. ' for' → logprob: -4.818717956542969
    8. '_are' → logprob: -4.943717956542969
    9. '!=' → logprob: -5.068717956542969
    10. '.' → logprob: -5.068717956542969

Token 543: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056311096996068954
    2. '   ' → logprob: -3.4313111305236816
    3. ':' → logprob: -5.056311130523682
    4. ':
' → logprob: -5.056311130523682
    5. ' and' → logprob: -5.806311130523682
    6. '
' → logprob: -6.181311130523682
    7. ' if' → logprob: -6.431311130523682
    8. 'def' → logprob: -7.306311130523682
    9. ',' → logprob: -7.431311130523682
    10. '        
' → logprob: -7.806311130523682

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07094001770019531
    2. '   ' → logprob: -2.6959400177001953
    3. 'def' → logprob: -7.695940017700195
    4. '        
' → logprob: -8.820940017700195
    5. '
' → logprob: -9.320940017700195
    6. ':' → logprob: -9.695940017700195
    7. '    
' → logprob: -9.945940017700195
    8. ')' → logprob: -10.320940017700195
    9. '           ' → logprob: -10.320940017700195
    10. ',' → logprob: -10.820940017700195

Token 545: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023084156215190887
    2. '   ' → logprob: -3.8980841636657715
    3. 'def' (adapté à ' def') → logprob: -6.1480841636657715
    4. 'if' → logprob: -8.773083686828613
    5. ' if' → logprob: -9.023083686828613
    6. '        
' → logprob: -10.398083686828613
    7. ' def' → logprob: -11.023083686828613
    8. '           ' → logprob: -11.773083686828613
    9. '    
' → logprob: -11.773083686828613
    10. '
' → logprob: -11.898083686828613

Token 546: ' val' (ID: 1459)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.650468647480011
    2. 'get' → logprob: -1.1504685878753662
    3. 'carry' → logprob: -3.775468587875366
    4. ' partial' → logprob: -3.900468587875366
    5. ' possible' → logprob: -4.025468826293945
    6. 'partial' → logprob: -4.025468826293945
    7. 'possible' → logprob: -4.400468826293945
    8. 'all' → logprob: -4.775468826293945
    9. ' all' → logprob: -5.025468826293945
    10. ' assigned' → logprob: -5.275468826293945

Token 547: '(x' (ID: 4061)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.03014800325036049
    2. 'ued' → logprob: -4.780148029327393
    3. 'ues' → logprob: -5.155148029327393
    4. 'id' → logprob: -5.655148029327393
    5. ' =' → logprob: -6.155148029327393
    6. '(id' → logprob: -6.530148029327393
    7. 'u' → logprob: -6.780148029327393
    8. '(cell' → logprob: -7.030148029327393
    9. '(' → logprob: -7.155148029327393
    10. '(val' → logprob: -7.405148029327393

Token 548: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4315785765647888
    2. '):
' → logprob: -1.0565786361694336
    3. ')' → logprob: -6.806578636169434
    4. ':' → logprob: -7.681578636169434
    5. ' ):' → logprob: -7.681578636169434
    6. '   ' → logprob: -7.931578636169434
    7. ' ):
' → logprob: -8.431578636169434
    8. '):
' → logprob: -9.431578636169434
    9. '       ' → logprob: -10.306578636169434
    10. '):

' → logprob: -10.306578636169434

Token 549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7443768382072449
    2. 'return' → logprob: -0.7443768382072449
    3. ' return' → logprob: -3.7443768978118896
    4. '       ' → logprob: -3.8693768978118896
    5. '   ' → logprob: -5.9943766593933105
    6. ':' → logprob: -6.3693766593933105
    7. '               ' → logprob: -7.8693766593933105
    8. 'if' → logprob: -8.119377136230469
    9. ':return' → logprob: -8.619377136230469
    10. ' if' → logprob: -9.244377136230469

Token 550: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.020735973492264748
    2. 'self' → logprob: -4.645735740661621
    3. 'c' → logprob: -5.520735740661621
    4. ' return' → logprob: -5.645735740661621
    5. '           ' → logprob: -6.145735740661621
    6. 'if' → logprob: -7.145735740661621
    7. '               ' → logprob: -8.895735740661621
    8. '       ' → logprob: -9.270735740661621
    9. 'cell' → logprob: -9.270735740661621
    10. '   ' → logprob: -9.770735740661621

Token 551: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05891973525285721
    2. 'self' → logprob: -3.183919668197632
    3. 'x' → logprob: -4.808919906616211
    4. '-' → logprob: -4.933919906616211
    5. 'None' → logprob: -8.308919906616211
    6. 'cell' → logprob: -9.558919906616211
    7. ' c' → logprob: -10.058919906616211
    8. ' self' → logprob: -10.183919906616211
    9. '-self' → logprob: -11.058919906616211
    10. 'cells' → logprob: -12.058919906616211

Token 552: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.659005157416686e-05
    2. 'x' → logprob: -9.625066757202148
    3. '[c' → logprob: -15.875066757202148
    4. '
' → logprob: -16.25006675720215
    5. '.get' → logprob: -17.00006675720215
    6. '```' → logprob: -17.50006675720215
    7. '[' → logprob: -18.00006675720215
    8. '.' → logprob: -18.00006675720215
    9. '[name' → logprob: -18.25006675720215
    10. '   ' → logprob: -18.25006675720215

Token 553: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0001882823125924915
    2. '.value' → logprob: -8.625187873840332
    3. '.' → logprob: -12.750187873840332
    4. '}.' → logprob: -13.375187873840332
    5. ').' → logprob: -13.500187873840332
    6. ']' → logprob: -13.500187873840332
    7. ' ].' → logprob: -14.000187873840332
    8. '.name' → logprob: -15.625187873840332
    9. 'value' → logprob: -16.00018882751465
    10. ''].' → logprob: -16.25018882751465

Token 554: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.9623810658231378e-05
    2. 'is' → logprob: -11.250020027160645
    3. ' value' → logprob: -12.750020027160645
    4. '   ' → logprob: -14.500020027160645
    5. '"value' → logprob: -14.500020027160645
    6. '
' → logprob: -15.000020027160645
    7. 'val' → logprob: -15.250020027160645
    8. 'assign' → logprob: -15.250020027160645
    9. '.value' → logprob: -15.500020027160645
    10. '`' → logprob: -15.500020027160645

Token 555: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5463067889213562
    2. ' if' → logprob: -0.9213067889213562
    3. '
' → logprob: -4.296306610107422
    4. 'if' → logprob: -5.171306610107422
    5. '   ' → logprob: -7.296306610107422
    6. '<|end|>' → logprob: -7.296306610107422
    7. '<|end|>' → logprob: -7.546306610107422
    8. ' ==' → logprob: -7.671306610107422
    9. ')' → logprob: -7.921306610107422
    10. ' !=' → logprob: -8.546306610107422

Token 556: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0022180574014782906
    2. 'x' → logprob: -6.127218246459961
    3. ' c' → logprob: -10.752218246459961
    4. '   ' → logprob: -12.877218246459961
    5. '(x' → logprob: -13.002218246459961
    6. '           ' → logprob: -13.252218246459961
    7. 'not' → logprob: -14.002218246459961
    8. '	c' → logprob: -14.877218246459961
    9. '[x' → logprob: -14.939718246459961
    10. '0' → logprob: -15.189718246459961

Token 557: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.16063037514686584
    2. 'x' → logprob: -2.035630464553833
    3. '.is' → logprob: -5.535630226135254
    4. '(x' → logprob: -5.660630226135254
    5. 'c' → logprob: -6.035630226135254
    6. '.' → logprob: -6.160630226135254
    7. '{x' → logprob: -6.410630226135254
    8. '.x' → logprob: -7.160630226135254
    9. 'is' → logprob: -7.160630226135254
    10. '.value' → logprob: -7.285630226135254

Token 558: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.727491021156311
    2. '.value' → logprob: -0.977491021156311
    3. '].' → logprob: -1.977491021156311
    4. '.' → logprob: -6.8524909019470215
    5. 'value' → logprob: -7.9774909019470215
    6. 'is' → logprob: -8.10249137878418
    7. ' .' → logprob: -8.97749137878418
    8. ').' → logprob: -9.35249137878418
    9. '}.' → logprob: -9.72749137878418
    10. ']' → logprob: -10.22749137878418

Token 559: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0009050302323885262
    2. 'assigned' → logprob: -7.3759050369262695
    3. '!=' → logprob: -8.62590503692627
    4. 'value' → logprob: -10.00090503692627
    5. 'assign' → logprob: -10.50090503692627
    6. ' !=' → logprob: -11.37590503692627
    7. '```' → logprob: -12.25090503692627
    8. ' is' → logprob: -12.75090503692627
    9. '!=-' → logprob: -13.00090503692627
    10. ')' → logprob: -14.25090503692627

Token 560: '_ass' (ID: 29140)
  Prédit: '_ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ass' → logprob: -0.000816773681435734
    2. 'assigned' → logprob: -7.125816822052002
    3. 'Assigned' → logprob: -11.625816345214844
    4. 'ass' → logprob: -13.250816345214844
    5. 'assing' → logprob: -14.625816345214844
    6. 's' → logprob: -14.875816345214844
    7. ' assigned' → logprob: -15.375816345214844
    8. '   ' → logprob: -15.875816345214844
    9. '```' → logprob: -16.625816345214844
    10. '_assign' → logprob: -17.375816345214844

Token 561: 'igned' (ID: 3626)
  Prédit: 'igned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igned' → logprob: -1.700132997939363e-05
    2. 'signed' → logprob: -11.625017166137695
    3. 'ined' → logprob: -12.000017166137695
    4. 'ed' → logprob: -14.500017166137695
    5. 'ign' → logprob: -14.500017166137695
    6. 'ing' → logprob: -15.125017166137695
    7. 'IGNED' → logprob: -15.625017166137695
    8. 'Signed' → logprob: -16.375017166137695
    9. ' ' → logprob: -16.625017166137695
    10. 'gn' → logprob: -17.250017166137695

Token 562: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.41193804144859314
    2. 'else' → logprob: -1.6619380712509155
    3. ' else' → logprob: -1.9119380712509155
    4. '       ' → logprob: -10.036937713623047
    5. '        ' → logprob: -11.536937713623047
    6. ' ()' → logprob: -12.411937713623047
    7. '           ' → logprob: -12.661937713623047
    8. '   ' → logprob: -12.911937713623047
    9. ')' → logprob: -13.161937713623047
    10. '())' → logprob: -13.661937713623047

Token 563: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.14272435009479523
    2. 'else' → logprob: -2.0177242755889893
    3. '()' → logprob: -10.51772403717041
    4. '       ' → logprob: -11.39272403717041
    5. '        ' → logprob: -12.39272403717041
    6. ')' → logprob: -13.26772403717041
    7. '	else' → logprob: -13.51772403717041
    8. ' ' → logprob: -14.26772403717041
    9. '   ' → logprob: -14.64272403717041
    10. ' and' → logprob: -14.76772403717041

Token 564: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12697020173072815
    2. 'None' → logprob: -2.1269702911376953
    3. ' None' → logprob: -10.751970291137695
    4. ' -' → logprob: -11.501970291137695
    5. '   ' → logprob: -11.626970291137695
    6. '0' → logprob: -14.126970291137695
    7. ' ' → logprob: -15.501970291137695
    8. '  ' → logprob: -15.626970291137695
    9. '(None' → logprob: -16.001970291137695
    10. '-none' → logprob: -16.376970291137695

Token 565: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.206414133310318
    2. '
' → logprob: -1.9564141035079956
    3. '<|end|>' → logprob: -3.331414222717285
    4. '        
' → logprob: -5.331414222717285
    5. 'return' → logprob: -6.956414222717285
    6. '<|end|>' → logprob: -7.331414222717285
    7. ')' → logprob: -7.456414222717285
    8. ',' → logprob: -7.831414222717285
    9. '
' → logprob: -8.581414222717285
    10. '\n' → logprob: -8.581414222717285

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2383333146572113
    2. '
' → logprob: -1.7383333444595337
    3. '        
' → logprob: -4.113333225250244
    4. '<|end|>' → logprob: -4.613333225250244
    5. '\n' → logprob: -5.613333225250244
    6. '\
' → logprob: -6.863333225250244
    7. '  
' → logprob: -6.988333225250244
    8. ',' → logprob: -6.988333225250244
    9. '    
' → logprob: -7.363333225250244
    10. ')' → logprob: -7.863333225250244

Token 567: ' C' (ID: 363)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02221999131143093
    2. 'carry' → logprob: -4.022220134735107
    3. ' carry' → logprob: -6.897220134735107
    4. '
' → logprob: -7.147220134735107
    5. 'c' → logprob: -7.272220134735107
    6. '   ' → logprob: -7.272220134735107
    7. '        
' → logprob: -8.39721965789795
    8. 'if' → logprob: -8.77221965789795
    9. ' if' → logprob: -9.39721965789795
    10. 'return' → logprob: -10.02221965789795

Token 568: ',' (ID: 11)
  Prédit: '.value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.07121314853429794
    2. 'value' → logprob: -3.8212132453918457
    3. '_val' → logprob: -3.9462132453918457
    4. '_value' → logprob: -4.821213245391846
    5. 'val' → logprob: -5.196213245391846
    6. ',' → logprob: -5.446213245391846
    7. ' =' → logprob: -5.821213245391846
    8. '.' → logprob: -5.821213245391846
    9. '=' → logprob: -6.696213245391846
    10. '.val' → logprob: -7.571213245391846

Token 569: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.25257408618927
    2. ' F' → logprob: -1.50257408618927
    3. ' ' → logprob: -7.7525739669799805
    4. ' =' → logprob: -9.50257396697998
    5. ' 
' → logprob: -10.87757396697998
    6. 'space' → logprob: -11.00257396697998
    7. ' ' → logprob: -11.12757396697998
    8. '=' → logprob: -11.50257396697998
    9. ' '' → logprob: -11.62757396697998
    10. 'I' → logprob: -11.75257396697998

Token 570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2219148576259613
    2. ' =' → logprob: -1.7219148874282837
    3. '=' → logprob: -3.971914768218994
    4. '_val' → logprob: -7.221914768218994
    5. 'val' → logprob: -8.096915245056152
    6. ',val' → logprob: -8.596915245056152
    7. ' ,' → logprob: -8.846915245056152
    8. ',C' → logprob: -10.471915245056152
    9. ' ' → logprob: -11.471915245056152
    10. 'v' → logprob: -11.721915245056152

Token 571: ' I' (ID: 357)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5749925374984741
    2. 'B' → logprob: -0.9499925374984741
    3. 'H' → logprob: -3.9499926567077637
    4. ' H' → logprob: -4.074992656707764
    5. 'I' → logprob: -5.074992656707764
    6. ' I' → logprob: -5.824992656707764
    7. ' =' → logprob: -6.074992656707764
    8. ' ' → logprob: -6.699992656707764
    9. ' G' → logprob: -8.074992179870605
    10. 'G' → logprob: -8.324992179870605

Token 572: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22809268534183502
    2. '=' → logprob: -1.9780926704406738
    3. ',' → logprob: -2.728092670440674
    4. 'val' → logprob: -9.853093147277832
    5. '_val' → logprob: -10.103093147277832
    6. ',C' → logprob: -10.228093147277832
    7. ',val' → logprob: -10.353093147277832
    8. '=C' → logprob: -10.478093147277832
    9. 'C' → logprob: -10.978093147277832
    10. ' ,' → logprob: -11.103093147277832

Token 573: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0003594184236135334
    2. ' val' → logprob: -8.875359535217285
    3. '(val' → logprob: -9.000359535217285
    4. 'c' → logprob: -9.500359535217285
    5. '(c' → logprob: -11.625359535217285
    6. '[val' → logprob: -12.375359535217285
    7. '(' → logprob: -12.750359535217285
    8. '   ' → logprob: -13.500359535217285
    9. '[' → logprob: -14.125359535217285
    10. '[c' → logprob: -14.250359535217285

Token 574: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.7146746763028204e-05
    2. '("' → logprob: -10.87503719329834
    3. ''C' → logprob: -11.37503719329834
    4. ''' → logprob: -12.00003719329834
    5. ''A' → logprob: -16.250036239624023
    6. '(' → logprob: -16.500036239624023
    7. ' ('' → logprob: -16.750036239624023
    8. '(('' → logprob: -17.000036239624023
    9. '"' → logprob: -17.375036239624023
    10. '(C' → logprob: -17.500036239624023

Token 575: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0019606323912739754
    2. ''C' → logprob: -6.251960754394531
    3. ''' → logprob: -10.626960754394531
    4. '')' → logprob: -12.751960754394531
    5. '"C' → logprob: -12.751960754394531
    6. ' C' → logprob: -14.626960754394531
    7. 'c' → logprob: -14.876960754394531
    8. ''),' → logprob: -15.001960754394531
    9. 'I' → logprob: -15.126960754394531
    10. '('' → logprob: -16.50196075439453

Token 576: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -4.274932143744081e-05
    2. '')' → logprob: -10.125042915344238
    3. ''),'' → logprob: -13.750042915344238
    4. ''' → logprob: -14.625042915344238
    5. '"),' → logprob: -14.875042915344238
    6. '),' → logprob: -15.375042915344238
    7. ' '' → logprob: -15.750042915344238
    8. ')'),' → logprob: -16.000041961669922
    9. 'C' → logprob: -16.500041961669922
    10. ''),
' → logprob: -17.125041961669922

Token 577: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0013372665271162987
    2. ' val' → logprob: -6.626337051391602
    3. '   ' → logprob: -12.251337051391602
    4. 'F' → logprob: -12.876337051391602
    5. ' ' → logprob: -14.126337051391602
    6. '  ' → logprob: -14.251337051391602
    7. '    ' → logprob: -14.626337051391602
    8. '	val' → logprob: -14.626337051391602
    9. '       ' → logprob: -14.751337051391602
    10. '     ' → logprob: -14.751337051391602

Token 578: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.747814349073451e-05
    2. '(' → logprob: -11.500017166137695
    3. ''' → logprob: -12.000017166137695
    4. ''C' → logprob: -15.250017166137695
    5. ' ('' → logprob: -15.750017166137695
    6. ''s' → logprob: -16.125017166137695
    7. '("' → logprob: -16.250017166137695
    8. ''S' → logprob: -16.500017166137695
    9. ' '' → logprob: -16.625017166137695
    10. '(
' → logprob: -16.750017166137695

Token 579: 'F' (ID: 37)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21301883459091187
    2. 'F' → logprob: -2.0880188941955566
    3. ''I' → logprob: -2.7130188941955566
    4. 'I' → logprob: -6.588018894195557
    5. ''f' → logprob: -9.838018417358398
    6. ' '' → logprob: -10.088018417358398
    7. '`' → logprob: -10.213018417358398
    8. '   ' → logprob: -10.838018417358398
    9. '')' → logprob: -10.963018417358398
    10. '('' → logprob: -11.463018417358398

Token 580: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.00046451209345832467
    2. '),' → logprob: -8.12546443939209
    3. '')' → logprob: -8.87546443939209
    4. ')' → logprob: -12.25046443939209
    5. ',' → logprob: -12.37546443939209
    6. ''' → logprob: -12.62546443939209
    7. ' '' → logprob: -12.62546443939209
    8. ''),'' → logprob: -12.75046443939209
    9. 'I' → logprob: -12.87546443939209
    10. '"),' → logprob: -13.25046443939209

Token 581: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.001502717612311244
    2. ' val' → logprob: -6.501502513885498
    3. '   ' → logprob: -14.876502990722656
    4. '  ' → logprob: -17.126502990722656
    5. ' ' → logprob: -17.751502990722656
    6. '	val' → logprob: -17.751502990722656
    7. '    ' → logprob: -18.126502990722656
    8. '       ' → logprob: -18.126502990722656
    9. '     ' → logprob: -19.001502990722656
    10. '           ' → logprob: -19.001502990722656

Token 582: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -8.756989700486884e-05
    2. ''I' → logprob: -9.37508773803711
    3. 'I' → logprob: -13.62508773803711
    4. ''' → logprob: -14.25008773803711
    5. '(' → logprob: -15.50008773803711
    6. '['' → logprob: -15.50008773803711
    7. ''s' → logprob: -16.25008773803711
    8. ''S' → logprob: -16.50008773803711
    9. '(I' → logprob: -17.50008773803711
    10. '   ' → logprob: -17.50008773803711

Token 583: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0005025160498917103
    2. ''I' → logprob: -7.625502586364746
    3. '')' → logprob: -12.500502586364746
    4. ''' → logprob: -13.000502586364746
    5. ' I' → logprob: -13.250502586364746
    6. '"I' → logprob: -13.625502586364746
    7. '['' → logprob: -14.125502586364746
    8. ''),' → logprob: -14.250502586364746
    9. ')' → logprob: -14.375502586364746
    10. 'i' → logprob: -14.625502586364746

Token 584: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.13950058817863464
    2. ')' → logprob: -2.639500617980957
    3. '')
' → logprob: -2.889500617980957
    4. ''),' → logprob: -6.639500617980957
    5. ')
' → logprob: -7.014500617980957
    6. '       ' → logprob: -7.889500617980957
    7. '   ' → logprob: -8.389500617980957
    8. '')
' → logprob: -9.139500617980957
    9. ',' → logprob: -9.264500617980957
    10. '),' → logprob: -10.014500617980957

Token 585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10942379385232925
    2. ',' → logprob: -3.109423875808716
    3. ' if' → logprob: -3.984423875808716
    4. ' carry' → logprob: -4.484423637390137
    5. ' H' → logprob: -4.859423637390137
    6. ' 
' → logprob: -5.484423637390137
    7. '
' → logprob: -5.984423637390137
    8. '        
' → logprob: -6.109423637390137
    9. '\' → logprob: -6.234423637390137
    10. 'carry' → logprob: -6.359423637390137

Token 586: ' B' (ID: 418)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46586987376213074
    2. 'B' (adapté à ' B') → logprob: -1.3408699035644531
    3. 'carry' → logprob: -2.340869903564453
    4. '   ' → logprob: -4.840869903564453
    5. '       ' → logprob: -6.215869903564453
    6. ' if' → logprob: -6.465869903564453
    7. 'H' → logprob: -6.590869903564453
    8. 'import' → logprob: -7.090869903564453
    9. 'from' → logprob: -8.215869903564453
    10. 'c' → logprob: -9.215869903564453

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014776058960705996
    2. '=' → logprob: -6.8764777183532715
    3. ' =' → logprob: -8.501477241516113
    4. ' ,' → logprob: -8.501477241516113
    5. ',F' → logprob: -11.251477241516113
    6. ',B' → logprob: -11.376477241516113
    7. ',val' → logprob: -12.001477241516113
    8. ',E' → logprob: -12.626477241516113
    9. ')' → logprob: -13.751477241516113
    10. ',I' → logprob: -14.376477241516113

Token 588: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.05491511523723602
    2. ' E' → logprob: -2.929915189743042
    3. 'val' → logprob: -10.554915428161621
    4. ' val' → logprob: -13.179915428161621
    5. ' ' → logprob: -13.554915428161621
    6. '   ' → logprob: -14.054915428161621
    7. '       ' → logprob: -14.429915428161621
    8. '  ' → logprob: -15.179915428161621
    9. 'D' → logprob: -15.179915428161621
    10. '_E' → logprob: -15.429915428161621

Token 589: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11972309648990631
    2. '=' → logprob: -2.244723081588745
    3. ' =' → logprob: -4.994723320007324
    4. ' ,' → logprob: -9.994723320007324
    5. ',val' → logprob: -10.619723320007324
    6. ',E' → logprob: -10.994723320007324
    7. ')' → logprob: -12.244723320007324
    8. 'E' → logprob: -12.744723320007324
    9. ',F' → logprob: -13.369723320007324
    10. '=None' → logprob: -14.244723320007324

Token 590: ' H' (ID: 487)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0006405997555702925
    2. ' val' → logprob: -7.375640392303467
    3. 'c' → logprob: -11.625640869140625
    4. '   ' → logprob: -13.625640869140625
    5. '  ' → logprob: -14.375640869140625
    6. 'H' → logprob: -14.500640869140625
    7. 'v' → logprob: -14.875640869140625
    8. 'I' → logprob: -15.125640869140625
    9. '       ' → logprob: -15.500640869140625
    10. ' ' → logprob: -15.625640869140625

Token 591: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04970288276672363
    2. ' =' → logprob: -3.5497028827667236
    3. ',' → logprob: -3.9247028827667236
    4. ',val' → logprob: -12.674702644348145
    5. ')' → logprob: -13.299702644348145
    6. ' ,' → logprob: -13.924702644348145
    7. ')=' → logprob: -15.049702644348145
    8. ' ' → logprob: -15.424702644348145
    9. '   ' → logprob: -16.29970359802246
    10. '),' → logprob: -16.42470359802246

Token 592: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.000206401280593127
    2. ' val' → logprob: -8.500205993652344
    3. 'c' → logprob: -12.750205993652344
    4. ' c' → logprob: -19.000205993652344
    5. '	val' → logprob: -19.125205993652344
    6. '   ' → logprob: -19.875205993652344
    7. '(val' → logprob: -20.250205993652344
    8. ' ' → logprob: -21.250205993652344
    9. '  ' → logprob: -21.250205993652344
    10. 'v' → logprob: -21.375205993652344

Token 593: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.5
    3. ''' → logprob: -16.875
    4. ' ('' → logprob: -18.875
    5. ''b' → logprob: -19.125
    6. ''s' → logprob: -19.25
    7. '(B' → logprob: -19.75
    8. ''S' → logprob: -19.875
    9. '("' → logprob: -20.0
    10. ' ' → logprob: -21.125

Token 594: 'B' (ID: 33)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38688042759895325
    2. 'B' → logprob: -1.1368803977966309
    3. '"B' → logprob: -12.136880874633789
    4. ''b' → logprob: -13.511880874633789
    5. '('' → logprob: -14.261880874633789
    6. ' B' → logprob: -14.636880874633789
    7. '['' → logprob: -15.011880874633789
    8. ''E' → logprob: -15.261880874633789
    9. ' '' → logprob: -15.511880874633789
    10. '')' → logprob: -15.636880874633789

Token 595: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -4.723352049040841e-06
    2. '),' → logprob: -13.125004768371582
    3. '')' → logprob: -13.625004768371582
    4. ''),'' → logprob: -13.875004768371582
    5. ''' → logprob: -15.375004768371582
    6. ''),
' → logprob: -16.250003814697266
    7. '"),' → logprob: -16.500003814697266
    8. ')'),' → logprob: -17.000003814697266
    9. ' '' → logprob: -17.625003814697266
    10. '',' → logprob: -17.875003814697266

Token 596: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0015023599844425917
    2. ' val' → logprob: -6.501502513885498
    3. '(val' → logprob: -19.626502990722656
    4. '	val' → logprob: -20.251502990722656
    5. '   ' → logprob: -20.376502990722656
    6. ' ' → logprob: -20.751502990722656
    7. 'Val' → logprob: -21.751502990722656
    8. '           ' → logprob: -21.876502990722656
    9. '  ' → logprob: -22.001502990722656
    10. '.val' → logprob: -22.001502990722656

Token 597: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.47440797090530396
    2. ''E' → logprob: -0.974407970905304
    3. 'val' → logprob: -8.599408149719238
    4. '['' → logprob: -9.349408149719238
    5. ''e' → logprob: -11.224408149719238
    6. 'E' → logprob: -11.349408149719238
    7. ''' → logprob: -11.849408149719238
    8. ''S' → logprob: -11.974408149719238
    9. '’E' → logprob: -11.974408149719238
    10. ''É' → logprob: -12.349408149719238

Token 598: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0789230540394783
    2. ''E' → logprob: -2.578922986984253
    3. '’E' → logprob: -11.828923225402832
    4. ''' → logprob: -12.328923225402832
    5. ''e' → logprob: -12.703923225402832
    6. '"E' → logprob: -12.703923225402832
    7. '('' → logprob: -12.828923225402832
    8. '')' → logprob: -13.078923225402832
    9. ' E' → logprob: -13.328923225402832
    10. '['' → logprob: -13.453923225402832

Token 599: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.00011737081513274461
    2. '),' → logprob: -9.125117301940918
    3. '')' → logprob: -12.500117301940918
    4. ''),'' → logprob: -12.875117301940918
    5. ''),
' → logprob: -14.875117301940918
    6. '"),' → logprob: -14.875117301940918
    7. ''' → logprob: -15.000117301940918
    8. 'I' → logprob: -15.625117301940918
    9. ')'),' → logprob: -15.750117301940918
    10. ' '' → logprob: -15.750117301940918

Token 600: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.001170225441455841
    2. ' val' → logprob: -6.7511701583862305
    3. '(val' → logprob: -18.876171112060547
    4. '   ' → logprob: -19.001171112060547
    5. ' ' → logprob: -20.251171112060547
    6. '	val' → logprob: -20.626171112060547
    7. '  ' → logprob: -21.126171112060547
    8. '    ' → logprob: -21.251171112060547
    9. '           ' → logprob: -21.626171112060547
    10. '       ' → logprob: -21.626171112060547

Token 601: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01822521537542343
    2. ''H' → logprob: -4.018225193023682
    3. ''' → logprob: -10.51822566986084
    4. '['' → logprob: -11.01822566986084
    5. ''I' → logprob: -11.39322566986084
    6. ''S' → logprob: -12.26822566986084
    7. 'H' → logprob: -12.39322566986084
    8. ''h' → logprob: -13.01822566986084
    9. ')' → logprob: -13.01822566986084
    10. 'val' → logprob: -13.51822566986084

Token 602: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.002806417876854539
    2. ''H' → logprob: -5.877806186676025
    3. ' H' → logprob: -14.627806663513184
    4. ''h' → logprob: -15.627806663513184
    5. '"H' → logprob: -15.627806663513184
    6. ''' → logprob: -15.752806663513184
    7. '’H' → logprob: -16.002805709838867
    8. '`' → logprob: -16.127805709838867
    9. '')' → logprob: -16.127805709838867
    10. '('' → logprob: -16.377805709838867

Token 603: '')
' (ID: 2515)
  Prédit: ''),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.3713519275188446
    2. '')' → logprob: -1.496351957321167
    3. '')
' → logprob: -2.621351957321167
    4. ')' → logprob: -4.871351718902588
    5. '),' → logprob: -5.996351718902588
    6. '       ' → logprob: -6.121351718902588
    7. '')
' → logprob: -7.621351718902588
    8. ')
' → logprob: -8.496352195739746
    9. ',' → logprob: -8.746352195739746
    10. '   ' → logprob: -9.246352195739746

Token 604: '       ' (ID: 309)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011254951357841492
    2. '       ' → logprob: -4.761254787445068
    3. ' A' → logprob: -6.136254787445068
    4. ',' → logprob: -7.886254787445068
    5. '   ' → logprob: -9.761255264282227
    6. ',A' → logprob: -11.011255264282227
    7. ' ' → logprob: -12.761255264282227
    8. 'G' → logprob: -12.886255264282227
    9. '           ' → logprob: -13.011255264282227
    10. '	A' → logprob: -13.136255264282227

Token 605: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.00029637437546625733
    2. 'carry' → logprob: -8.750296592712402
    3. ' A' → logprob: -9.125296592712402
    4. '   ' → logprob: -11.625296592712402
    5. 'if' → logprob: -11.625296592712402
    6. 'G' → logprob: -12.750296592712402
    7. 'return' → logprob: -13.125296592712402
    8. '       ' → logprob: -14.125296592712402
    9. 'import' → logprob: -14.250296592712402
    10. 'from' → logprob: -14.500296592712402

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003163969377055764
    2. '=' → logprob: -8.625316619873047
    3. ' ,' → logprob: -9.250316619873047
    4. ' =' → logprob: -10.500316619873047
    5. ',D' → logprob: -11.750316619873047
    6. ',val' → logprob: -12.750316619873047
    7. ',E' → logprob: -14.500316619873047
    8. ',G' → logprob: -15.375316619873047
    9. ',I' → logprob: -15.375316619873047
    10. '<|end|>' → logprob: -15.500316619873047

Token 607: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.008434077724814415
    2. ' D' → logprob: -4.883434295654297
    3. 'val' → logprob: -7.133434295654297
    4. ' val' → logprob: -10.883434295654297
    5. ' ' → logprob: -13.008434295654297
    6. '       ' → logprob: -13.258434295654297
    7. 'd' → logprob: -13.883434295654297
    8. '        ' → logprob: -14.008434295654297
    9. '  ' → logprob: -14.133434295654297
    10. '    ' → logprob: -14.258434295654297

Token 608: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26388663053512573
    2. '=' → logprob: -1.5138866901397705
    3. ' =' → logprob: -4.513886451721191
    4. ' ,' → logprob: -7.138886451721191
    5. ',val' → logprob: -9.138886451721191
    6. ')' → logprob: -11.763886451721191
    7. ' ' → logprob: -12.138886451721191
    8. '   ' → logprob: -13.013886451721191
    9. ',c' → logprob: -13.138886451721191
    10. 'val' → logprob: -13.638886451721191

Token 609: ' G' (ID: 499)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0004897649050690234
    2. ' val' → logprob: -7.625489711761475
    3. '	val' → logprob: -14.625490188598633
    4. 'Val' → logprob: -15.500490188598633
    5. '   ' → logprob: -15.625490188598633
    6. '       ' → logprob: -15.875490188598633
    7. '[val' → logprob: -16.125490188598633
    8. 'G' → logprob: -16.125490188598633
    9. '_val' → logprob: -16.250490188598633
    10. '  ' → logprob: -16.375490188598633

Token 610: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06380488723516464
    2. ' =' → logprob: -2.813804864883423
    3. ',' → logprob: -6.313805103302002
    4. ')' → logprob: -10.938804626464844
    5. '   ' → logprob: -13.563804626464844
    6. ' ' → logprob: -13.563804626464844
    7. ')=' → logprob: -13.813804626464844
    8. ',val' → logprob: -13.938804626464844
    9. '    ' → logprob: -14.438804626464844
    10. '       ' → logprob: -14.688804626464844

Token 611: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0006267757853493094
    2. ' val' → logprob: -7.375626564025879
    3. '(val' → logprob: -16.375627517700195
    4. '   ' → logprob: -17.125627517700195
    5. 'v' → logprob: -17.625627517700195
    6. '	val' → logprob: -17.750627517700195
    7. '           ' → logprob: -18.375627517700195
    8. '       ' → logprob: -18.625627517700195
    9. ' ' → logprob: -18.625627517700195
    10. '  ' → logprob: -18.625627517700195

Token 612: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -9.088346359931165e-07
    2. ''A' → logprob: -14.500000953674316
    3. '(' → logprob: -16.375
    4. 'val' → logprob: -16.5
    5. ''' → logprob: -17.25
    6. 'A' → logprob: -17.625
    7. ''s' → logprob: -17.75
    8. ' ('' → logprob: -17.875
    9. ''a' → logprob: -18.125
    10. '(
' → logprob: -18.25

Token 613: 'A' (ID: 32)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.5759648084640503
    2. 'A' → logprob: -0.8259648084640503
    3. ''' → logprob: -11.45096492767334
    4. '['' → logprob: -12.57596492767334
    5. '('' → logprob: -12.95096492767334
    6. '’A' → logprob: -13.32596492767334
    7. '"A' → logprob: -13.32596492767334
    8. ''a' → logprob: -13.70096492767334
    9. '   ' → logprob: -14.20096492767334
    10. ' A' → logprob: -14.45096492767334

Token 614: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -1.6166903151315637e-05
    2. '),' → logprob: -11.375016212463379
    3. '')' → logprob: -12.875016212463379
    4. ''' → logprob: -14.250016212463379
    5. ''),'' → logprob: -15.000016212463379
    6. ')'),' → logprob: -15.375016212463379
    7. ''),
' → logprob: -15.500016212463379
    8. '"),' → logprob: -15.750016212463379
    9. '   ' → logprob: -16.625015258789062
    10. ' '' → logprob: -16.750015258789062

Token 615: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.01416398212313652
    2. ' val' → logprob: -4.264163970947266
    3. '        ' → logprob: -16.014163970947266
    4. '    ' → logprob: -16.139163970947266
    5. '       ' → logprob: -16.264163970947266
    6. '           ' → logprob: -16.389163970947266
    7. '   ' → logprob: -17.014163970947266
    8. '	val' → logprob: -17.514163970947266
    9. '  ' → logprob: -17.639163970947266
    10. ' ' → logprob: -18.014163970947266

Token 616: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.004571103490889072
    2. ''D' → logprob: -5.504570960998535
    3. ''' → logprob: -8.004570960998535
    4. ''A' → logprob: -10.379570960998535
    5. '['' → logprob: -10.379570960998535
    6. ''d' → logprob: -10.379570960998535
    7. 'val' → logprob: -10.879570960998535
    8. 'assigned' → logprob: -11.879570960998535
    9. ''C' → logprob: -12.254570960998535
    10. ''S' → logprob: -12.254570960998535

Token 617: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0014218994183465838
    2. ''D' → logprob: -6.626421928405762
    3. 'G' → logprob: -10.126421928405762
    4. ''' → logprob: -10.501421928405762
    5. ' D' → logprob: -11.376421928405762
    6. '')' → logprob: -13.001421928405762
    7. '   ' → logprob: -13.376421928405762
    8. ''''' → logprob: -13.751421928405762
    9. '  ' → logprob: -13.876421928405762
    10. '       ' → logprob: -14.001421928405762

Token 618: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -7.350386295001954e-05
    2. '),' → logprob: -9.625073432922363
    3. '')' → logprob: -12.750073432922363
    4. ''' → logprob: -13.875073432922363
    5. ''),
' → logprob: -13.875073432922363
    6. ''),'' → logprob: -13.875073432922363
    7. ' '' → logprob: -14.375073432922363
    8. '"),' → logprob: -15.250073432922363
    9. '',' → logprob: -15.500073432922363
    10. ''),

' → logprob: -16.37507438659668

Token 619: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.004078997299075127
    2. ' val' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.254079818725586
    4. ' ' → logprob: -16.379079818725586
    5. '  ' → logprob: -16.379079818725586
    6. '    ' → logprob: -16.879079818725586
    7. '       ' → logprob: -17.379079818725586
    8. '	val' → logprob: -17.379079818725586
    9. '        ' → logprob: -17.629079818725586
    10. '           ' → logprob: -17.754079818725586

Token 620: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.6087021473795176e-05
    2. '['' → logprob: -10.125045776367188
    3. ''' → logprob: -12.250045776367188
    4. 'G' → logprob: -14.875045776367188
    5. ')' → logprob: -15.750045776367188
    6. ''s' → logprob: -16.125045776367188
    7. '(
' → logprob: -16.500045776367188
    8. '(G' → logprob: -16.500045776367188
    9. '(' → logprob: -16.625045776367188
    10. '("' → logprob: -17.125045776367188

Token 621: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.00023035754566080868
    2. ''' → logprob: -8.50023078918457
    3. '')' → logprob: -11.87523078918457
    4. ' G' → logprob: -12.00023078918457
    5. ')' → logprob: -13.37523078918457
    6. '''' → logprob: -13.37523078918457
    7. '"G' → logprob: -13.37523078918457
    8. 'I' → logprob: -14.25023078918457
    9. '['' → logprob: -14.43773078918457
    10. '
' → logprob: -14.43773078918457

Token 622: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.08455382287502289
    2. ')' → logprob: -3.0845537185668945
    3. ''),' → logprob: -4.0845537185668945
    4. '')
' → logprob: -4.0845537185668945
    5. '),' → logprob: -7.7095537185668945
    6. ')
' → logprob: -8.209553718566895
    7. '')
' → logprob: -8.209553718566895
    8. '       ' → logprob: -8.459553718566895
    9. '')

' → logprob: -9.334553718566895
    10. '   ' → logprob: -9.834553718566895

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007041312754154205
    2. ' if' → logprob: -6.2570414543151855
    3. '   ' → logprob: -6.7570414543151855
    4. '
' → logprob: -6.8820414543151855
    5. 'if' → logprob: -6.8820414543151855
    6. '        
' → logprob: -6.8820414543151855
    7. '<|end|>' → logprob: -7.5070414543151855
    8. '    
' → logprob: -9.882040977478027
    9. ')' → logprob: -10.132040977478027
    10. '  
' → logprob: -10.382040977478027

Token 624: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0255763977766037
    2. '       ' → logprob: -4.400576591491699
    3. 'carry' → logprob: -4.525576591491699
    4. ' if' → logprob: -7.025576591491699
    5. '#' (adapté à ' #') → logprob: -7.150576591491699
    6. 'for' → logprob: -8.1505765914917
    7. '        
' → logprob: -9.7755765914917
    8. '
' → logprob: -10.1505765914917
    9. '   ' → logprob: -10.1505765914917
    10. 'c' → logprob: -11.2755765914917

Token 625: ' If' (ID: 1843)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.32337096333503723
    2. 'if' → logprob: -1.3233709335327148
    3. '#' → logprob: -5.573370933532715
    4. ' if' → logprob: -6.198370933532715
    5. '       ' → logprob: -6.448370933532715
    6. ' carry' → logprob: -6.573370933532715
    7. 'c' → logprob: -7.573370933532715
    8. 'for' → logprob: -7.948370933532715
    9. '   ' → logprob: -8.573370933532715
    10. 'def' → logprob: -9.698370933532715

Token 626: ' any' (ID: 1062)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3669814169406891
    2. ' C' → logprob: -2.3669815063476562
    3. 'I' → logprob: -2.4919815063476562
    4. 'None' → logprob: -2.4919815063476562
    5. ' None' → logprob: -3.6169815063476562
    6. 'A' → logprob: -4.616981506347656
    7. ' I' → logprob: -5.491981506347656
    8. ' A' → logprob: -6.116981506347656
    9. ' any' → logprob: -6.991981506347656
    10. '(C' → logprob: -6.991981506347656

Token 627: ' digit' (ID: 19181)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4572778046131134
    2. 'x' → logprob: -2.332277774810791
    3. '(v' → logprob: -2.332277774810791
    4. '(x' → logprob: -2.457277774810791
    5. 'of' → logprob: -3.332277774810791
    6. 'digit' → logprob: -4.707277774810791
    7. 'None' → logprob: -4.832277774810791
    8. '(C' → logprob: -5.207277774810791
    9. ' of' → logprob: -5.332277774810791
    10. 'assigned' → logprob: -5.582277774810791

Token 628: ' in' (ID: 306)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20155425369739532
    2. 'is' → logprob: -1.701554298400879
    3. '==' → logprob: -9.451554298400879
    4. 'in' → logprob: -10.576554298400879
    5. ' in' → logprob: -11.201554298400879
    6. ')' → logprob: -11.451554298400879
    7. 'None' → logprob: -12.326554298400879
    8. ' ' → logprob: -13.451554298400879
    9. ' ==' → logprob: -13.451554298400879
    10. '   ' → logprob: -13.826554298400879

Token 629: ' sum' (ID: 4215)
  Prédit: '[C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.024868251755833626
    2. '[I' → logprob: -4.024868488311768
    3. '(C' → logprob: -5.149868488311768
    4. '[A' → logprob: -7.774868488311768
    5. '(I' → logprob: -8.64986801147461
    6. 'I' → logprob: -9.39986801147461
    7. '[c' → logprob: -9.89986801147461
    8. '[' → logprob: -10.27486801147461
    9. '[B' → logprob: -10.27486801147461
    10. 'C' → logprob: -10.52486801147461

Token 630: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.24678285419940948
    2. 'is' → logprob: -1.621782898902893
    3. '   ' → logprob: -4.3717827796936035
    4. 'None' → logprob: -5.8717827796936035
    5. ' ' → logprob: -6.6217827796936035
    6. 'C' → logprob: -7.2467827796936035
    7. '==' → logprob: -7.4967827796936035
    8. 'or' → logprob: -7.9967827796936035
    9. ' None' → logprob: -7.9967827796936035
    10. '  ' → logprob: -8.121783256530762

Token 631: ' missing' (ID: 12486)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -8.816591434879228e-05
    2. ' None' → logprob: -9.50008773803711
    3. '   ' → logprob: -12.25008773803711
    4. '-' → logprob: -12.37508773803711
    5. 'not' → logprob: -12.62508773803711
    6. 'none' → logprob: -15.62508773803711
    7. '  ' → logprob: -15.75008773803711
    8. 'assigned' → logprob: -15.75008773803711
    9. '_None' → logprob: -15.87508773803711
    10. 'missing' → logprob: -16.37508773803711

Token 632: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0312321186065674
    2. '       ' → logprob: -1.0312321186065674
    3. ',' → logprob: -1.5312321186065674
    4. 'and' → logprob: -3.7812321186065674
    5. ' or' → logprob: -3.7812321186065674
    6. ' and' → logprob: -4.281231880187988
    7. 'or' → logprob: -5.906231880187988
    8. '           ' → logprob: -6.156231880187988
    9. '   ' → logprob: -6.531231880187988
    10. ':
' → logprob: -6.531231880187988

Token 633: ' can't' (ID: 8535)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5046219825744629
    2. 'return' → logprob: -1.004621982574463
    3. ' return' → logprob: -3.504621982574463
    4. '   ' → logprob: -11.754621505737305
    5. '       ' → logprob: -11.879621505737305
    6. ' ' → logprob: -12.879621505737305
    7. '          ' → logprob: -13.504621505737305
    8. '		' → logprob: -13.629621505737305
    9. '	return' → logprob: -14.129621505737305
    10. 'continue' → logprob: -14.379621505737305

Token 634: ' fully' (ID: 9637)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3736201822757721
    2. 'check' → logprob: -1.3736201524734497
    3. 'validate' → logprob: -3.1236202716827393
    4. 'verify' → logprob: -5.62362003326416
    5. ' return' → logprob: -5.87362003326416
    6. 'evaluate' → logprob: -6.12362003326416
    7. ' check' → logprob: -6.49862003326416
    8. 'confirm' → logprob: -6.62362003326416
    9. 'det' → logprob: -6.74862003326416
    10. 'assert' → logprob: -7.24862003326416

Token 635: ' verify' (ID: 14866)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.16011036932468414
    2. 'validate' → logprob: -2.4101104736328125
    3. 'evaluate' → logprob: -2.9101104736328125
    4. 'verify' → logprob: -5.7851104736328125
    5. 'det' → logprob: -8.535110473632812
    6. 'compute' → logprob: -8.910110473632812
    7. 'judge' → logprob: -9.285110473632812
    8. 'return' → logprob: -9.785110473632812
    9. 'confirm' → logprob: -10.035110473632812
    10. ' check' → logprob: -10.410110473632812

Token 636: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8998175859451294
    2. ',' → logprob: -1.8998175859451294
    3. '.' → logprob: -2.02481746673584
    4. '       ' → logprob: -2.14981746673584
    5. ':' → logprob: -2.64981746673584
    6. '   ' → logprob: -2.77481746673584
    7. '\t' → logprob: -4.14981746673584
    8. ' yet' → logprob: -4.64981746673584
    9. '
' → logprob: -5.14981746673584
    10. '\' → logprob: -5.14981746673584

Token 637: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39458993077278137
    2. 'return' → logprob: -1.269589900970459
    3. ' return' → logprob: -3.269589900970459
    4. '           ' → logprob: -5.019589900970459
    5. '   ' → logprob: -8.269590377807617
    6. ' ' → logprob: -9.394590377807617
    7. '               ' → logprob: -10.394590377807617
    8. '	return' → logprob: -10.894590377807617
    9. '        ' → logprob: -11.019590377807617
    10. 'if' → logprob: -11.519590377807617

Token 638: ' do' (ID: 621)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23697137832641602
    2. 'if' → logprob: -1.861971378326416
    3. '#' → logprob: -2.986971378326416
    4. 'we' → logprob: -5.986971378326416
    5. ' return' → logprob: -7.361971378326416
    6. '       ' → logprob: -7.486971378326416
    7. 'check' → logprob: -7.611971378326416
    8. 'can' → logprob: -8.361970901489258
    9. '   ' → logprob: -8.486970901489258
    10. ' if' → logprob: -8.986970901489258

Token 639: ' partial' (ID: 13664)
  Prédit: ' partial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.9021308422088623
    2. 'partial' → logprob: -1.4021308422088623
    3. 'not' → logprob: -1.9021308422088623
    4. 'if' → logprob: -2.1521308422088623
    5. ' not' → logprob: -2.7771308422088623
    6. ' if' → logprob: -5.527131080627441
    7. ' checks' → logprob: -6.027131080627441
    8. '   ' → logprob: -6.152131080627441
    9. 'some' → logprob: -6.402131080627441
    10. '       ' → logprob: -6.527131080627441

Token 640: ' checks' (ID: 22097)
  Prédit: 'checks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checks' → logprob: -0.8599289655685425
    2. 'if' → logprob: -0.9849289655685425
    3. ' checks' → logprob: -2.109929084777832
    4. 'check' → logprob: -3.109929084777832
    5. '_checks' → logprob: -4.484929084777832
    6. 'return' → logprob: -4.609929084777832
    7. ' if' → logprob: -4.734929084777832
    8. '_check' → logprob: -5.484929084777832
    9. ' check' → logprob: -6.734929084777832
    10. 'for' → logprob: -6.984929084777832

Token 641: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006091965362429619
    2. '<|end|>' → logprob: -5.756092071533203
    3. '        
' → logprob: -6.256092071533203
    4. ',' → logprob: -8.381092071533203
    5. '
' → logprob: -8.381092071533203
    6. '<|end|>' → logprob: -8.506092071533203
    7. '.' → logprob: -8.756092071533203
    8. ':' → logprob: -9.631092071533203
    9. ' if' → logprob: -10.631092071533203
    10. '        

' → logprob: -11.756092071533203

Token 642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013274075172375888
    2. '        
' → logprob: -9.37513256072998
    3. '<|end|>' → logprob: -10.62513256072998
    4. '
' → logprob: -11.25013256072998
    5. ' if' → logprob: -12.87513256072998
    6. ',' → logprob: -13.12513256072998
    7. '```' → logprob: -13.37513256072998
    8. '<|end|>' → logprob: -13.75013256072998
    9. '   ' → logprob: -14.75013256072998
    10. '           ' → logprob: -14.87513256072998

Token 643: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0342543125152588
    2. '       ' → logprob: -1.1592543125152588
    3. ' if' → logprob: -1.5342543125152588
    4. 'carry' → logprob: -2.284254312515259
    5. ' carry' → logprob: -4.53425407409668
    6. '   ' → logprob: -7.15925407409668
    7. '
' → logprob: -7.90925407409668
    8. '        
' → logprob: -7.90925407409668
    9. 'c' → logprob: -8.40925407409668
    10. '#' (adapté à ' #') → logprob: -8.53425407409668

Token 644: ' We'll' (ID: 46830)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3216570019721985
    2. '       ' → logprob: -1.8216569423675537
    3. 'carry' → logprob: -2.4466569423675537
    4. ' if' → logprob: -3.6966569423675537
    5. ' carry' → logprob: -7.446657180786133
    6. '#' → logprob: -7.696657180786133
    7. '        
' → logprob: -8.446657180786133
    8. '   ' → logprob: -8.571657180786133
    9. 'c' → logprob: -9.446657180786133
    10. '```' → logprob: -9.571657180786133

Token 645: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.8542434573173523
    2. 'return' → logprob: -1.104243516921997
    3. 'continue' → logprob: -1.854243516921997
    4. ' check' → logprob: -3.604243516921997
    5. 'if' → logprob: -3.729243516921997
    6. '...' → logprob: -5.104243278503418
    7. 'implement' → logprob: -5.354243278503418
    8. 'stop' → logprob: -5.479243278503418
    9. ' continue' → logprob: -5.854243278503418
    10. 'add' → logprob: -5.979243278503418

Token 646: ' all' (ID: 722)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14343135058879852
    2. 'carry' → logprob: -2.5184314250946045
    3. ' if' → logprob: -3.3934314250946045
    4. '   ' → logprob: -5.268431186676025
    5. ' carry' → logprob: -5.643431186676025
    6. '       ' → logprob: -6.518431186676025
    7. 'possible' → logprob: -6.518431186676025
    8. ' partial' → logprob: -6.643431186676025
    9. 'partial' → logprob: -6.643431186676025
    10. 'for' → logprob: -7.518431186676025

Token 647: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19716447591781616
    2. 'if' → logprob: -2.322164535522461
    3. ' if' → logprob: -2.572164535522461
    4. ' conditions' → logprob: -6.447164535522461
    5. ' for' → logprob: -7.447164535522461
    6. 'conditions' → logprob: -7.572164535522461
    7. ' checks' → logprob: -7.697164535522461
    8. 'for' → logprob: -7.697164535522461
    9. '#' → logprob: -9.072164535522461
    10. 'def' → logprob: -9.197164535522461

Token 648: ' partial' (ID: 13664)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.4913479685783386
    2. ' combinations' → logprob: -2.1163480281829834
    3. ' carry' → logprob: -2.3663480281829834
    4. 'com' → logprob: -2.4913480281829834
    5. 'assign' → logprob: -3.3663480281829834
    6. ' assignments' → logprob: -4.241347789764404
    7. ' carries' → logprob: -4.616347789764404
    8. 'values' → logprob: -5.116347789764404
    9. ' sums' → logprob: -5.241347789764404
    10. ' values' → logprob: -5.991347789764404

Token 649: ' consist' (ID: 8897)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.662030041217804
    2. ' if' → logprob: -1.0370299816131592
    3. ' checks' → logprob: -3.537029981613159
    4. '       ' → logprob: -3.912029981613159
    5. 'return' → logprob: -4.412030220031738
    6. 's' → logprob: -4.787030220031738
    7. '_checks' → logprob: -4.787030220031738
    8. '_' → logprob: -4.912030220031738
    9. ' sums' → logprob: -5.162030220031738
    10. 'sum' → logprob: -5.412030220031738

Token 650: 'encies' (ID: 8459)
  Prédit: 'ency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.6674456596374512
    2. 'ent' → logprob: -1.1674456596374512
    3. 'encies' → logprob: -1.7924456596374512
    4. '   ' → logprob: -6.167445659637451
    5. '```' → logprob: -6.917445659637451
    6. 'en' → logprob: -7.042445659637451
    7. 'e' → logprob: -7.167445659637451
    8. '
' → logprob: -7.292445659637451
    9. ')' → logprob: -7.792445659637451
    10. '}' → logprob: -8.04244613647461

Token 651: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14456874132156372
    2. '
' → logprob: -2.144568681716919
    3. '        
' → logprob: -4.394568920135498
    4. '<|end|>' → logprob: -5.769568920135498
    5. ',' → logprob: -7.519568920135498
    6. ' if' → logprob: -8.39456844329834
    7. '  
' → logprob: -8.64456844329834
    8. ':' → logprob: -9.01956844329834
    9. '<|end|>' → logprob: -9.26956844329834
    10. '.' → logprob: -9.39456844329834

Token 652: ' prune' (ID: 140388)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1848846673965454
    2. 'avoid' → logprob: -2.684884548187256
    3. 'early' → logprob: -3.309884548187256
    4. 'reduce' → logprob: -3.434884548187256
    5. 'continue' → logprob: -4.934884548187256
    6. 'allow' → logprob: -4.934884548187256
    7. 'pr' → logprob: -5.184884548187256
    8. 'prevent' → logprob: -5.559884548187256
    9. 'help' → logprob: -6.059884548187256
    10. 'pass' → logprob: -6.809884548187256

Token 653: ' search' (ID: 3684)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03552667051553726
    2. ' if' → logprob: -3.660526752471924
    3. '        
' → logprob: -5.535526752471924
    4. 'if' → logprob: -6.160526752471924
    5. '<|end|>' → logprob: -7.035526752471924
    6. '        ' → logprob: -7.285526752471924
    7. '
' → logprob: -7.535526752471924
    8. ',' → logprob: -8.660526275634766
    9. ' 
' → logprob: -9.285526275634766
    10. '.' → logprob: -9.535526275634766

Token 654: ' space' (ID: 4918)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013049405068159103
    2. '
' → logprob: -5.013049602508545
    3. '        
' → logprob: -5.388049602508545
    4. '<|end|>' → logprob: -6.763049602508545
    5. 'if' → logprob: -9.013049125671387
    6. '<|end|>' → logprob: -9.138049125671387
    7. ' if' → logprob: -9.263049125671387
    8. ',' → logprob: -9.513049125671387
    9. '   ' → logprob: -10.763049125671387
    10. '  
' → logprob: -10.763049125671387

Token 655: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022798361256718636
    2. '
' → logprob: -4.272798538208008
    3. '<|end|>' → logprob: -5.272798538208008
    4. '        
' → logprob: -6.022798538208008
    5. '<|end|>' → logprob: -7.147798538208008
    6. ',' → logprob: -9.522798538208008
    7. ' if' → logprob: -10.147798538208008
    8. 'if' → logprob: -10.647798538208008
    9. '.' → logprob: -11.022798538208008
    10. '#' → logprob: -11.397798538208008

Token 656: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003967147320508957
    2. '        
' → logprob: -5.87896728515625
    3. '
' → logprob: -7.00396728515625
    4. 'if' → logprob: -9.25396728515625
    5. '   ' → logprob: -10.62896728515625
    6. '    
' → logprob: -10.75396728515625
    7. ' if' → logprob: -10.87896728515625
    8. 'carry' → logprob: -10.87896728515625
    9. '  
' → logprob: -11.00396728515625
    10. '       
' → logprob: -11.50396728515625

Token 657: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6414150595664978
    2. 'carry' → logprob: -1.1414151191711426
    3. 'if' → logprob: -2.1414151191711426
    4. '#' (adapté à ' #') → logprob: -4.016415119171143
    5. ' if' → logprob: -4.891415119171143
    6. ' carry' → logprob: -5.016415119171143
    7. '
' → logprob: -6.391415119171143
    8. 'sum' → logprob: -7.266415119171143
    9. '   ' → logprob: -7.641415119171143
    10. ' #' → logprob: -7.766415119171143

Token 658: ' Units' (ID: 59915)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.2910017669200897
    2. 'if' → logprob: -1.541001796722412
    3. '       ' → logprob: -3.916001796722412
    4. '#' → logprob: -4.291001796722412
    5. ' if' → logprob: -5.916001796722412
    6. ' carry' → logprob: -6.791001796722412
    7. '   ' → logprob: -7.666001796722412
    8. 'c' → logprob: -9.041001319885254
    9. ' #' → logprob: -9.416001319885254
    10. 'for' → logprob: -9.916001319885254

Token 659: ' place' (ID: 2475)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.4369000494480133
    2. ' if' → logprob: -1.811900019645691
    3. 'if' → logprob: -2.6869001388549805
    4. 'sum' → logprob: -2.8119001388549805
    5. ':' → logprob: -3.3119001388549805
    6. '       ' → logprob: -4.6869001388549805
    7. ' =' → logprob: -5.1869001388549805
    8. '_digit' → logprob: -5.6869001388549805
    9. ' sum' → logprob: -5.8119001388549805
    10. '   ' → logprob: -6.9369001388549805

Token 660: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05729961395263672
    2. 'if' → logprob: -3.0572996139526367
    3. ' if' → logprob: -4.807299613952637
    4. ':' → logprob: -8.432299613952637
    5. '        
' → logprob: -9.182299613952637
    6. 'If' → logprob: -10.307299613952637
    7. 'I' → logprob: -10.307299613952637
    8. ',' → logprob: -10.807299613952637
    9. '
' → logprob: -10.932299613952637
    10. '           ' → logprob: -11.307299613952637

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07555903494358063
    2. 'if' → logprob: -2.700559139251709
    3. ' if' → logprob: -5.200559139251709
    4. '        
' → logprob: -10.32555866241455
    5. '   ' → logprob: -11.70055866241455
    6. ',' → logprob: -11.95055866241455
    7. '
' → logprob: -11.95055866241455
    8. ':' → logprob: -11.95055866241455
    9. '           ' → logprob: -12.20055866241455
    10. '      ' → logprob: -12.32555866241455

Token 662: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009303489699959755
    2. '       ' → logprob: -4.884303569793701
    3. ' if' → logprob: -6.384303569793701
    4. 'u' → logprob: -13.009303092956543
    5. 'If' → logprob: -13.134303092956543
    6. 'i' → logprob: -13.384303092956543
    7. '        
' → logprob: -14.259303092956543
    8. '   ' → logprob: -15.134303092956543
    9. 'carry' → logprob: -15.259303092956543
    10. '	if' → logprob: -15.759303092956543

Token 663: ' all' (ID: 722)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.16180111467838287
    2. 'C' → logprob: -1.9118010997772217
    3. 'None' → logprob: -6.661801338195801
    4. ' I' → logprob: -8.9118013381958
    5. ' C' → logprob: -9.9118013381958
    6. '   ' → logprob: -10.5368013381958
    7. 'all' → logprob: -10.5368013381958
    8. '(I' → logprob: -10.9118013381958
    9. ' ' → logprob: -11.1618013381958
    10. '  ' → logprob: -11.6618013381958

Token 664: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.1472058892250061
    2. '(x' → logprob: -2.3972058296203613
    3. '(d' → logprob: -3.1472058296203613
    4. '([' → logprob: -5.897205829620361
    5. '(val' → logprob: -9.89720630645752
    6. '(cell' → logprob: -10.14720630645752
    7. '(i' → logprob: -11.02220630645752
    8. '(' → logprob: -11.39720630645752
    9. '(c' → logprob: -11.39720630645752
    10. 'd' → logprob: -11.64720630645752

Token 665: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07157287746667862
    2. 'is' → logprob: -2.696572780609131
    3. 'd' → logprob: -7.446572780609131
    4. 'i' → logprob: -7.821572780609131
    5. 'v' → logprob: -8.821573257446289
    6. '(v' → logprob: -8.946573257446289
    7. '(i' → logprob: -9.696573257446289
    8. ')' → logprob: -10.071573257446289
    9. '[i' → logprob: -10.196573257446289
    10. ' ' → logprob: -10.321573257446289

Token 666: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0028349461499601603
    2. ' not' → logprob: -5.877834796905518
    3. '```' → logprob: -11.877835273742676
    4. '       ' → logprob: -12.127835273742676
    5. '           ' → logprob: -12.252835273742676
    6. '   ' → logprob: -13.002835273742676
    7. 'n' → logprob: -13.502835273742676
    8. '``' → logprob: -13.752835273742676
    9. '               ' → logprob: -13.877835273742676
    10. '
' → logprob: -14.252835273742676

Token 667: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.625
    3. 'none' → logprob: -16.5
    4. ' None' → logprob: -16.625
    5. '   ' → logprob: -17.5
    6. '(None' → logprob: -17.5
    7. '_None' → logprob: -17.5
    8. '```' → logprob: -18.5
    9. '=None' → logprob: -19.125
    10. '_none' → logprob: -19.25

Token 668: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10277514159679413
    2. 'for' → logprob: -2.3527750968933105
    3. '           ' → logprob: -7.1027750968933105
    4. ')' → logprob: -7.3527750968933105
    5. ' and' → logprob: -7.8527750968933105
    6. '       ' → logprob: -7.9777750968933105
    7. 'and' → logprob: -8.977775573730469
    8. '):
' → logprob: -9.602775573730469
    9. '   ' → logprob: -10.102775573730469
    10. '               ' → logprob: -10.227775573730469

Token 669: ' v' (ID: 323)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.08879724144935608
    2. '(v' → logprob: -2.5887973308563232
    3. 'v' → logprob: -4.963797092437744
    4. ' [' → logprob: -6.713797092437744
    5. ' (' → logprob: -6.963797092437744
    6. '[' → logprob: -7.463797092437744
    7. '[x' → logprob: -10.088797569274902
    8. ' v' → logprob: -10.088797569274902
    9. '(x' → logprob: -11.338797569274902
    10. '[C' → logprob: -12.088797569274902

Token 670: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.40743547677993774
    2. ' in' → logprob: -1.157435417175293
    3. 'v' → logprob: -3.907435417175293
    4. ' v' → logprob: -9.282435417175293
    5. ',v' → logprob: -9.907435417175293
    6. '[v' → logprob: -9.907435417175293
    7. ' ' → logprob: -10.157435417175293
    8. '[' → logprob: -12.032435417175293
    9. ' [' → logprob: -12.157435417175293
    10. '(v' → logprob: -12.407435417175293

Token 671: ' (' (ID: 350)
  Prédit: '[C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.27108800411224365
    2. '(C' → logprob: -1.5210880041122437
    3. '[I' → logprob: -4.396088123321533
    4. '(I' → logprob: -5.271088123321533
    5. '('' → logprob: -7.396088123321533
    6. '['' → logprob: -7.771088123321533
    7. ''C' → logprob: -8.771087646484375
    8. 'C' → logprob: -8.896087646484375
    9. ' (' → logprob: -10.146087646484375
    10. 'I' → logprob: -10.271087646484375

Token 672: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -3.0590548703912646e-05
    2. ''C' → logprob: -10.750030517578125
    3. ' C' → logprob: -12.000030517578125
    4. '   ' → logprob: -13.500030517578125
    5. ')' → logprob: -15.000030517578125
    6. 'I' → logprob: -15.250030517578125
    7. 'c' → logprob: -15.625030517578125
    8. ' ' → logprob: -15.625030517578125
    9. '"C' → logprob: -15.750030517578125
    10. ''' → logprob: -15.750030517578125

Token 673: ',F' (ID: 66678)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02463170327246189
    2. ',F' → logprob: -3.8996317386627197
    3. ' ,' → logprob: -5.524631500244141
    4. ',
' → logprob: -10.89963150024414
    5. 'F' → logprob: -10.89963150024414
    6. ',C' → logprob: -11.52463150024414
    7. ',f' → logprob: -11.77463150024414
    8. '+' → logprob: -12.27463150024414
    9. ',v' → logprob: -12.39963150024414
    10. '       ' → logprob: -13.14963150024414

Token 674: ',I' (ID: 75570)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6948877573013306
    2. ',I' → logprob: -0.6948877573013306
    3. ' ,' → logprob: -6.694887638092041
    4. 'I' → logprob: -7.819887638092041
    5. '))' → logprob: -10.6948881149292
    6. ',
' → logprob: -11.1948881149292
    7. ')):
' → logprob: -11.6948881149292
    8. ',i' → logprob: -12.1948881149292
    9. ' I' → logprob: -12.1948881149292
    10. ',C' → logprob: -12.4448881149292

Token 675: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.016884276643395424
    2. ')):' → logprob: -4.2668843269348145
    3. '))' → logprob: -6.0168843269348145
    4. ')):
' → logprob: -8.641883850097656
    5. '       ' → logprob: -10.641883850097656
    6. '):
' → logprob: -10.641883850097656
    7. ' ' → logprob: -11.016883850097656
    8. ')' → logprob: -11.766883850097656
    9. '           ' → logprob: -12.016883850097656
    10. '')):
' → logprob: -12.016883850097656

Token 676: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007994594983756542
    2. '       ' → logprob: -5.257994651794434
    3. ':' → logprob: -6.507994651794434
    4. ' if' → logprob: -7.382994651794434
    5. 'if' → logprob: -8.007994651794434
    6. ':
' → logprob: -9.007994651794434
    7. ' and' → logprob: -9.507994651794434
    8. '):
' → logprob: -11.132994651794434
    9. ',' → logprob: -11.757994651794434
    10. '   ' → logprob: -11.757994651794434

Token 677: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14926107227802277
    2. ' if' → logprob: -2.024260997772217
    3. '           ' → logprob: -5.149260997772217
    4. '       ' → logprob: -7.274260997772217
    5. '   ' → logprob: -10.149261474609375
    6. ' ' → logprob: -11.149261474609375
    7. '
' → logprob: -13.274261474609375
    8. '	if' → logprob: -13.274261474609375
    9. 'If' → logprob: -13.774261474609375
    10. '  ' → logprob: -13.774261474609375

Token 678: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.03140685707330704
    2. ' =' → logprob: -3.656406879425049
    3. '=' → logprob: -6.031406879425049
    4. '=C' → logprob: -6.406406879425049
    5. 'u' → logprob: -7.656406879425049
    6. '=(' → logprob: -8.78140640258789
    7. '_sum' → logprob: -8.78140640258789
    8. '_' → logprob: -9.65640640258789
    9. '=c' → logprob: -10.15640640258789
    10. '=sum' → logprob: -10.28140640258789

Token 679: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008663260377943516
    2. '(C' → logprob: -4.758663177490234
    3. ' C' → logprob: -10.633663177490234
    4. '(' → logprob: -11.258663177490234
    5. 'c' → logprob: -12.383663177490234
    6. ' (' → logprob: -12.508663177490234
    7. '(c' → logprob: -13.258663177490234
    8. '_C' → logprob: -14.258663177490234
    9. '	C' → logprob: -14.883663177490234
    10. '   ' → logprob: -15.133663177490234

Token 680: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141547918319702
    2. '+' → logprob: -1.7014155387878418
    3. 'F' → logprob: -13.951415061950684
    4. '+C' → logprob: -14.326415061950684
    5. ' F' → logprob: -15.201415061950684
    6. ' ' → logprob: -16.451416015625
    7. ' +
' → logprob: -16.451416015625
    8. '＋' → logprob: -16.951416015625
    9. ')' → logprob: -17.326416015625
    10. ')+' → logprob: -17.451416015625

Token 681: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0002439467643853277
    2. ' F' → logprob: -8.375244140625
    3. '<|end|>' → logprob: -11.250244140625
    4. '<|end|>' → logprob: -16.000244140625
    5. ' ' → logprob: -16.125244140625
    6. '(F' → logprob: -16.875244140625
    7. '	F' → logprob: -17.000244140625
    8. 'f' → logprob: -18.250244140625
    9. '[' → logprob: -19.125244140625
    10. '<F' → logprob: -19.500244140625

Token 682: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6719270944595337
    2. '           ' → logprob: -1.6719270944595337
    3. ' if' → logprob: -2.296926975250244
    4. ')' → logprob: -2.921926975250244
    5. '<|end|>' → logprob: -3.171926975250244
    6. '%' → logprob: -3.671926975250244
    7. '       ' → logprob: -3.796926975250244
    8. 'if' → logprob: -3.921926975250244
    9. ' %' → logprob: -4.796926975250244
    10. ' 
' → logprob: -5.046926975250244

Token 683: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032921400852501392
    2. '
' → logprob: -5.753292083740234
    3. ',' → logprob: -10.253292083740234
    4. ' if' → logprob: -10.378292083740234
    5. '            
' → logprob: -11.128292083740234
    6. ';' → logprob: -11.628292083740234
    7. 'if' → logprob: -12.128292083740234
    8. '       ' → logprob: -12.753292083740234
    9. '               ' → logprob: -12.878292083740234
    10. '
' → logprob: -13.253292083740234

Token 684: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002580178203061223
    2. ' if' → logprob: -6.252580165863037
    3. '           ' → logprob: -7.502580165863037
    4. 'carry' → logprob: -9.502580642700195
    5. 'expected' → logprob: -11.627580642700195
    6. '       ' → logprob: -12.627580642700195
    7. 'mod' → logprob: -12.752580642700195
    8. 'i' → logprob: -13.002580642700195
    9. 'c' → logprob: -13.127580642700195
    10. '10' → logprob: -13.502580642700195

Token 685: ' s' (ID: 265)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.017195183783769608
    2. 's' → logprob: -4.267195224761963
    3. ' I' → logprob: -6.017195224761963
    4. '(I' → logprob: -8.142194747924805
    5. '(s' → logprob: -9.017194747924805
    6. ' s' → logprob: -9.142194747924805
    7. 'i' → logprob: -10.267194747924805
    8. '           ' → logprob: -11.267194747924805
    9. ' (' → logprob: -11.892194747924805
    10. '   ' → logprob: -12.017194747924805

Token 686: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47411277890205383
    2. '%' → logprob: -0.9741127490997314
    3. 'I' → logprob: -10.599112510681152
    4. ' ' → logprob: -12.349112510681152
    5. ' I' → logprob: -12.849112510681152
    6. ')' → logprob: -13.724112510681152
    7. '   ' → logprob: -14.224112510681152
    8. 's' → logprob: -14.349112510681152
    9. '10' → logprob: -14.474112510681152
    10. ')%' → logprob: -15.974112510681152

Token 687: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -15.87500286102295
    4. '   ' → logprob: -17.750001907348633
    5. '``' → logprob: -18.875001907348633
    6. 'I' → logprob: -19.125001907348633
    7. '
' → logprob: -19.125001907348633
    8. '۱۰' → logprob: -19.250001907348633
    9. '`' → logprob: -19.562501907348633
    10. '=' → logprob: -19.750001907348633

Token 688: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۱۰' → logprob: -18.750001907348633
    4. '```' → logprob: -20.125001907348633
    5. '１０' → logprob: -20.500001907348633
    6. '१०' → logprob: -21.125001907348633
    7. '১০' → logprob: -21.375001907348633
    8. '
' → logprob: -22.000001907348633
    9. '   ' → logprob: -22.500001907348633
    10. '1' → logprob: -22.562501907348633

Token 689: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2519620656967163
    2. ' !=' → logprob: -1.5019620656967163
    3. ')!=' → logprob: -10.626961708068848
    4. '()!=' → logprob: -12.001961708068848
    5. '!==' → logprob: -13.751961708068848
    6. ']!=' → logprob: -15.001961708068848
    7. '!=(' → logprob: -15.001961708068848
    8. ')' → logprob: -15.126961708068848
    9. '           ' → logprob: -15.126961708068848
    10. '!='' → logprob: -16.001962661743164

Token 690: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.002805110299959779
    2. ' I' → logprob: -5.877805233001709
    3. '	I' → logprob: -15.62780475616455
    4. ' ' → logprob: -15.75280475616455
    5. '   ' → logprob: -17.252805709838867
    6. ' ' → logprob: -17.627805709838867
    7. 'i' → logprob: -18.002805709838867
    8. '
' → logprob: -18.627805709838867
    9. '(I' → logprob: -18.627805709838867
    10. '_I' → logprob: -18.627805709838867

Token 691: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3400287926197052
    2. ':' → logprob: -1.3400287628173828
    3. '):
' → logprob: -4.715028762817383
    4. '               ' → logprob: -4.840028762817383
    5. '           ' → logprob: -5.215028762817383
    6. ':return' → logprob: -6.090028762817383
    7. '):' → logprob: -6.465028762817383
    8. ' or' → logprob: -9.090028762817383
    9. 'return' → logprob: -9.465028762817383
    10. ')' → logprob: -9.840028762817383

Token 692: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026574626099318266
    2. '           ' → logprob: -6.377657413482666
    3. 'return' → logprob: -8.002657890319824
    4. ':return' → logprob: -8.377657890319824
    5. ' return' → logprob: -8.502657890319824
    6. ':
' → logprob: -9.502657890319824
    7. '                   ' → logprob: -10.252657890319824
    8. ':' → logprob: -10.377657890319824
    9. '\n' → logprob: -11.627657890319824
    10. '              ' → logprob: -12.002657890319824

Token 693: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012959542218595743
    2. ' return' → logprob: -6.751296043395996
    3. '               ' → logprob: -9.251296043395996
    4. '           ' → logprob: -10.751296043395996
    5. '                   ' → logprob: -11.751296043395996
    6. 'False' → logprob: -15.251296043395996
    7. '
' → logprob: -15.626296043395996
    8. '                       ' → logprob: -16.62629508972168
    9. '   ' → logprob: -16.62629508972168
    10. '       ' → logprob: -18.75129508972168

Token 694: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. '(False' → logprob: -21.62500762939453
    4. 'false' → logprob: -22.25000762939453
    5. '   ' → logprob: -23.00000762939453
    6. '=False' → logprob: -24.37500762939453
    7. 'FALSE' → logprob: -25.62500762939453
    8. '       ' → logprob: -26.12500762939453
    9. 'True' → logprob: -26.50000762939453
    10. '_false' → logprob: -27.25000762939453

Token 695: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14411471784114838
    2. '<|end|>' → logprob: -2.0191147327423096
    3. '
' → logprob: -7.6441144943237305
    4. '        
' → logprob: -8.51911449432373
    5. '<|end|>' → logprob: -8.51911449432373
    6. '```' → logprob: -8.89411449432373
    7. '.' → logprob: -9.14411449432373
    8. ')' → logprob: -9.39411449432373
    9. '[' → logprob: -9.89411449432373
    10. ',' → logprob: -10.51911449432373

Token 696: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0063170744106173515
    2. '<|end|>' → logprob: -5.131317138671875
    3. '        
' → logprob: -8.756317138671875
    4. '
' → logprob: -9.256317138671875
    5. '```' → logprob: -10.381317138671875
    6. ')' → logprob: -10.506317138671875
    7. '<|end|>' → logprob: -11.006317138671875
    8. ',' → logprob: -11.381317138671875
    9. '.' → logprob: -11.631317138671875
    10. '+' → logprob: -12.256317138671875

Token 697: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' (adapté à ' carry') → logprob: -0.5322133898735046
    2. '       ' → logprob: -1.6572134494781494
    3. ' carry' → logprob: -1.6572134494781494
    4. '
' → logprob: -3.7822134494781494
    5. '           ' → logprob: -5.40721321105957
    6. 'c' → logprob: -7.03221321105957
    7. 'car' → logprob: -7.03221321105957
    8. '   ' → logprob: -7.53221321105957
    9. '1' → logprob: -8.46971321105957
    10. '        
' → logprob: -8.59471321105957

Token 698: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003654978354461491
    2. '_' → logprob: -8.250365257263184
    3. ' =' → logprob: -9.750365257263184
    4. '=' → logprob: -10.000365257263184
    5. 's' → logprob: -15.375365257263184
    6. ' ' → logprob: -16.2503662109375
    7. '_=' → logprob: -17.3753662109375
    8. '' → logprob: -17.5003662109375
    9. '`' → logprob: -17.7503662109375
    10. '\xe2\x82' → logprob: -17.8753662109375

Token 699: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407716512680054
    2. ' =' → logprob: -0.9740771651268005
    3. ' ' → logprob: -15.974077224731445
    4. '   ' → logprob: -17.974077224731445
    5. 's' → logprob: -18.474077224731445
    6. '=int' → logprob: -18.724077224731445
    7. '=(' → logprob: -19.599077224731445
    8. ':' → logprob: -19.849077224731445
    9. '＝' → logprob: -19.849077224731445
    10. '=s' → logprob: -20.099077224731445

Token 700: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.062150634825229645
    2. ' s' → logprob: -2.812150716781616
    3. '1' → logprob: -8.812150955200195
    4. '(s' → logprob: -10.437150955200195
    5. ' ' → logprob: -13.062150955200195
    6. '   ' → logprob: -13.687150955200195
    7. ' (' → logprob: -14.312150955200195
    8. '_s' → logprob: -14.687150955200195
    9. '	s' → logprob: -15.812150955200195
    10. '0' → logprob: -16.187150955200195

Token 701: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0028213970363140106
    2. ' //' → logprob: -5.877821445465088
    3. '   ' → logprob: -12.12782096862793
    4. '//=' → logprob: -12.75282096862793
    5. ' ' → logprob: -13.37782096862793
    6. '       ' → logprob: -13.50282096862793
    7. '           ' → logprob: -13.50282096862793
    8. '#' → logprob: -14.12782096862793
    9. '=' → logprob: -14.12782096862793
    10. '```' → logprob: -14.75282096862793

Token 702: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -18.25
    4. '1' → logprob: -19.5
    5. '=' → logprob: -19.75
    6. '۱۰' → logprob: -20.375
    7. '>' → logprob: -21.0
    8. '   ' → logprob: -21.5
    9. '१०' → logprob: -21.875
    10. '１０' → logprob: -22.0

Token 703: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '۱۰' → logprob: -21.75
    4. '1' → logprob: -22.625
    5. '１０' → logprob: -23.375
    6. '१०' → logprob: -23.5
    7. '```' → logprob: -23.625
    8. '১০' → logprob: -24.125
    9. '   ' → logprob: -24.875
    10. '100' → logprob: -25.125

Token 704: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025449818931519985
    2. 'else' → logprob: -6.37754487991333
    3. '<|end|>' → logprob: -7.75254487991333
    4. ')' → logprob: -8.752545356750488
    5. ' else' → logprob: -8.752545356750488
    6. '.' → logprob: -10.502545356750488
    7. '
' → logprob: -11.252545356750488
    8. '           ' → logprob: -11.252545356750488
    9. '#else' → logprob: -12.002545356750488
    10. 'elif' → logprob: -12.127545356750488

Token 705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016841089818626642
    2. '<|end|>' → logprob: -6.751684188842773
    3. 'else' → logprob: -8.126684188842773
    4. '        
' → logprob: -9.751684188842773
    5. '.' → logprob: -9.876684188842773
    6. '           ' → logprob: -10.751684188842773
    7. 'elif' → logprob: -10.876684188842773
    8. ')' → logprob: -11.001684188842773
    9. ' else' → logprob: -11.376684188842773
    10. '<|end|>' → logprob: -11.376684188842773

Token 706: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0780196562409401
    2. ' else' → logprob: -2.703019618988037
    3. '       ' → logprob: -4.828019618988037
    4. '	else' → logprob: -10.078020095825195
    5. '   ' → logprob: -12.578020095825195
    6. 'elif' (adapté à ' elif') → logprob: -13.453020095825195
    7. '           ' → logprob: -14.953020095825195
    8. '_else' → logprob: -15.203020095825195
    9. '	' → logprob: -15.703020095825195
    10. '​' → logprob: -15.953020095825195

Token 707: ' None' (ID: 4662)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.22168511152267456
    2. 'I' → logprob: -2.4716851711273193
    3. '(any' → logprob: -3.4716851711273193
    4. ' any' → logprob: -3.5966851711273193
    5. 'C' → logprob: -3.8466851711273193
    6. 'all' → logprob: -4.47168493270874
    7. '(C' → logprob: -4.97168493270874
    8. 'None' → logprob: -5.34668493270874
    9. '(I' → logprob: -5.84668493270874
    10. 'not' → logprob: -6.34668493270874

Token 708: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.43182992935180664
    2. 'in' → logprob: -1.6818299293518066
    3. ' not' → logprob: -1.9318299293518066
    4. 'not' → logprob: -3.9318299293518066
    5. ' ' → logprob: -10.681829452514648
    6. ')' → logprob: -10.681829452514648
    7. ' is' → logprob: -11.119329452514648
    8. 'is' → logprob: -11.181829452514648
    9. '==' → logprob: -11.744329452514648
    10. '[' → logprob: -11.806829452514648

Token 709: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.006725549232214689
    2. ' in' → logprob: -5.006725311279297
    3. '...' → logprob: -12.756725311279297
    4. 'for' → logprob: -13.506725311279297
    5. 'not' → logprob: -13.881725311279297
    6. ')' → logprob: -14.006725311279297
    7. 'C' → logprob: -14.006725311279297
    8. '
' → logprob: -14.881725311279297
    9. '   ' → logprob: -15.006725311279297
    10. ' ' → logprob: -15.131725311279297

Token 710: ' (' (ID: 350)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.03432150185108185
    2. '[C' → logprob: -3.4093215465545654
    3. ' (' → logprob: -7.659321308135986
    4. '{' → logprob: -9.784321784973145
    5. '([' → logprob: -10.159321784973145
    6. '[' → logprob: -10.534321784973145
    7. '(c' → logprob: -10.784321784973145
    8. '((' → logprob: -11.284321784973145
    9. '(I' → logprob: -11.409321784973145
    10. '(' → logprob: -11.909321784973145

Token 711: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.03889608755707741
    2. '[C' → logprob: -3.413896083831787
    3. '(C' → logprob: -5.413896083831787
    4. 'I' → logprob: -8.288896560668945
    5. '   ' → logprob: -9.163896560668945
    6. ' C' → logprob: -9.288896560668945
    7. '{' → logprob: -9.663896560668945
    8. ')' → logprob: -10.038896560668945
    9. ' (' → logprob: -10.288896560668945
    10. '	C' → logprob: -10.788896560668945

Token 712: ',F' (ID: 66678)
  Prédit: ',F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',F' → logprob: -0.008921930566430092
    2. ',' → logprob: -4.758922100067139
    3. ',None' → logprob: -9.00892162322998
    4. ' ,' → logprob: -9.50892162322998
    5. 'F' → logprob: -11.00892162322998
    6. ',E' → logprob: -11.38392162322998
    7. ',I' → logprob: -11.63392162322998
    8. ',C' → logprob: -11.88392162322998
    9. ',N' → logprob: -12.00892162322998
    10. ',H' → logprob: -12.38392162322998

Token 713: ')' (ID: 8)
  Prédit: ',I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',I' → logprob: -0.6264953017234802
    2. '):
' → logprob: -1.751495361328125
    3. '):' → logprob: -1.751495361328125
    4. ',' → logprob: -2.501495361328125
    5. ')' → logprob: -4.501495361328125
    6. '),' → logprob: -4.876495361328125
    7. ',H' → logprob: -5.251495361328125
    8. 'I' → logprob: -5.376495361328125
    9. ',F' → logprob: -6.001495361328125
    10. '):

' → logprob: -6.251495361328125

Token 714: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19606304168701172
    2. ':
' → logprob: -1.9460630416870117
    3. ' and' → logprob: -3.4460630416870117
    4. ' or' → logprob: -7.071063041687012
    5. '       ' → logprob: -7.196063041687012
    6. '           ' → logprob: -7.446063041687012
    7. 'and' → logprob: -7.696063041687012
    8. '):
' → logprob: -8.696063041687012
    9. ' :' → logprob: -9.071063041687012
    10. '   ' → logprob: -9.321063041687012

Token 715: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.005257833749055862
    2. ' I' → logprob: -5.380257606506348
    3. '   ' → logprob: -8.255257606506348
    4. 'None' → logprob: -8.755257606506348
    5. '(I' → logprob: -9.630257606506348
    6. 'i' → logprob: -10.505257606506348
    7. '       ' → logprob: -11.005257606506348
    8. ' ' → logprob: -11.005257606506348
    9. 'v' → logprob: -11.255257606506348
    10. '           ' → logprob: -11.380257606506348

Token 716: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2521224617958069
    2. 'is' → logprob: -1.502122402191162
    3. '==' → logprob: -9.25212287902832
    4. ')' → logprob: -10.25212287902832
    5. '!=' → logprob: -10.75212287902832
    6. ' ' → logprob: -11.50212287902832
    7. '	is' → logprob: -12.25212287902832
    8. ':' → logprob: -12.50212287902832
    9. ' ==' → logprob: -12.87712287902832
    10. ' !=' → logprob: -13.00212287902832

Token 717: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3569699227809906
    2. 'None' → logprob: -1.231969952583313
    3. ' not' → logprob: -5.106969833374023
    4. ' None' → logprob: -6.231969833374023
    5. 'Not' → logprob: -8.481969833374023
    6. 'none' → logprob: -8.981969833374023
    7. '   ' → logprob: -10.231969833374023
    8. 'False' → logprob: -11.169469833374023
    9. '	not' → logprob: -11.231969833374023
    10. '(None' → logprob: -11.606969833374023

Token 718: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.1424973713001236e-05
    2. ' None' → logprob: -10.750031471252441
    3. '-' → logprob: -11.875031471252441
    4. '   ' → logprob: -13.625031471252441
    5. '(None' → logprob: -14.750031471252441
    6. 'not' → logprob: -15.375031471252441
    7. '_None' → logprob: -15.500031471252441
    8. '  ' → logprob: -16.125030517578125
    9. '       ' → logprob: -16.250030517578125
    10. '           ' → logprob: -16.375030517578125

Token 719: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33414193987846375
    2. ':
' → logprob: -1.3341419696807861
    3. '           ' → logprob: -4.459141731262207
    4. ' and' → logprob: -4.834141731262207
    5. '       ' → logprob: -7.209141731262207
    6. 'and' → logprob: -9.209141731262207
    7. ':

' → logprob: -9.959141731262207
    8. ',' → logprob: -10.209141731262207
    9. ' :
' → logprob: -10.209141731262207
    10. ':
' → logprob: -10.584141731262207

Token 720: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005967585020698607
    2. '               ' → logprob: -8.37559700012207
    3. ' return' → logprob: -9.00059700012207
    4. '	       ' → logprob: -9.50059700012207
    5. ' if' → logprob: -10.00059700012207
    6. '		' → logprob: -10.50059700012207
    7. '       ' → logprob: -10.75059700012207
    8. 'return' → logprob: -11.12559700012207
    9. '{
' → logprob: -11.87559700012207
    10. '   ' → logprob: -12.00059700012207

Token 721: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0170025825500488
    2. ' s' → logprob: -1.3920025825500488
    3. ' if' → logprob: -1.7670025825500488
    4. '           ' → logprob: -2.267002582550049
    5. 'if' → logprob: -2.767002582550049
    6. ' return' → logprob: -4.392002582550049
    7. '       ' → logprob: -4.392002582550049
    8. 'carry' → logprob: -4.642002582550049
    9. 'return' → logprob: -4.767002582550049
    10. ' carry' → logprob: -5.017002582550049

Token 722: ' I' (ID: 357)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2270147204399109
    2. ' s' → logprob: -1.9770147800445557
    3. 'carry' → logprob: -3.4770147800445557
    4. ' carry' → logprob: -4.477014541625977
    5. '           ' → logprob: -4.977014541625977
    6. 'return' → logprob: -5.602014541625977
    7. ' return' → logprob: -5.977014541625977
    8. '   ' → logprob: -6.102014541625977
    9. '       ' → logprob: -6.352014541625977
    10. 'c' → logprob: -6.852014541625977

Token 723: ' is' (ID: 382)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.35932594537734985
    2. ' !=' → logprob: -1.484325885772705
    3. '==' → logprob: -2.734325885772705
    4. ' ==' → logprob: -5.609325885772705
    5. ')' → logprob: -6.359325885772705
    6. ' is' → logprob: -6.984325885772705
    7. '=' → logprob: -7.109325885772705
    8. ' in' → logprob: -7.234325885772705
    9. ')!=' → logprob: -7.609325885772705
    10. '<|end|>' → logprob: -8.359326362609863

Token 724: ' assigned' (ID: 21482)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.08926026523113251
    2. 'not' → logprob: -2.8392603397369385
    3. ' None' → logprob: -4.089260101318359
    4. '-' → logprob: -4.964260101318359
    5. 'unknown' → logprob: -6.589260101318359
    6. ' not' → logprob: -6.964260101318359
    7. 'possible' → logprob: -8.71426010131836
    8. 'un' → logprob: -9.33926010131836
    9. 'C' → logprob: -9.71426010131836
    10. 'set' → logprob: -9.83926010131836

Token 725: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03674936294555664
    2. ' and' → logprob: -4.036749362945557
    3. ':' → logprob: -4.661749362945557
    4. ',' → logprob: -6.161749362945557
    5. 'and' → logprob: -6.286749362945557
    6. ' if' → logprob: -6.536749362945557
    7. ':
' → logprob: -6.661749362945557
    8. '=' → logprob: -7.411749362945557
    9. '       ' → logprob: -8.036748886108398
    10. '               ' → logprob: -8.536748886108398

Token 726: ' sum' (ID: 4215)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.1751251518726349
    2. '(c' → logprob: -3.6751251220703125
    3. 'not' → logprob: -3.9251251220703125
    4. '((' → logprob: -4.1751251220703125
    5. 'I' → logprob: -4.3001251220703125
    6. '(s' → logprob: -4.4251251220703125
    7. 'C' → logprob: -4.5501251220703125
    8. '(I' → logprob: -4.5501251220703125
    9. 'carry' → logprob: -4.6751251220703125
    10. ' not' → logprob: -4.8001251220703125

Token 727: ' incomplete' (ID: 60592)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6561811566352844
    2. ' %' → logprob: -1.4061810970306396
    3. '(C' → logprob: -2.7811810970306396
    4. 's' → logprob: -3.4061810970306396
    5. ' C' → logprob: -3.4061810970306396
    6. ' not' → logprob: -3.5311810970306396
    7. ' is' → logprob: -3.9061810970306396
    8. ' does' → logprob: -4.656181335449219
    9. 'not' → logprob: -4.906181335449219
    10. ' s' → logprob: -5.406181335449219

Token 728: '?' (ID: 30)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4701750576496124
    2. ':' → logprob: -1.97017502784729
    3. ':
' → logprob: -2.22017502784729
    4. '           ' → logprob: -2.34517502784729
    5. ' and' → logprob: -4.220175266265869
    6. ',' → logprob: -5.470175266265869
    7. ':return' → logprob: -5.970175266265869
    8. '       ' → logprob: -6.470175266265869
    9. 'and' → logprob: -6.970175266265869
    10. '	       ' → logprob: -7.595175266265869

Token 729: ' Try' (ID: 14720)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6268042325973511
    2. '           ' → logprob: -0.8768042325973511
    3. 'return' → logprob: -3.8768043518066406
    4. ' if' → logprob: -4.251804351806641
    5. '               ' → logprob: -4.626804351806641
    6. '       ' → logprob: -6.001804351806641
    7. ' pass' → logprob: -7.626804351806641
    8. '   ' → logprob: -7.751804351806641
    9. '	return' → logprob: -8.00180435180664
    10. ' ' → logprob: -8.50180435180664

Token 730: ' all' (ID: 722)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.1819216012954712
    2. 'return' → logprob: -1.3069216012954712
    3. 'to' → logprob: -2.3069214820861816
    4. ' return' → logprob: -2.4319214820861816
    5. ':' → logprob: -2.6819214820861816
    6. '           ' → logprob: -2.6819214820861816
    7. '   ' → logprob: -3.6819214820861816
    8. '       ' → logprob: -4.306921482086182
    9. ':
' → logprob: -4.306921482086182
    10. '               ' → logprob: -4.681921482086182

Token 731: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.29146718978881836
    2. ' possible' → logprob: -1.6664671897888184
    3. 'carry' → logprob: -3.2914671897888184
    4. 'poss' → logprob: -4.166467189788818
    5. 'values' → logprob: -5.291467189788818
    6. ' carry' → logprob: -6.166467189788818
    7. ' values' → logprob: -6.791467189788818
    8. ' possibilities' → logprob: -7.041467189788818
    9. '   ' → logprob: -8.041467666625977
    10. 'c' → logprob: -8.041467666625977

Token 732: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.3254013657569885
    2. 'values' → logprob: -2.0754013061523438
    3. 'c' → logprob: -2.3254013061523438
    4. ' values' → logprob: -3.8254013061523438
    5. ' carry' → logprob: -4.325401306152344
    6. 'possible' → logprob: -5.075401306152344
    7. ' carries' → logprob: -5.700401306152344
    8. 's' → logprob: -6.200401306152344
    9. 'poss' → logprob: -6.325401306152344
    10. ' possible' → logprob: -7.075401306152344

Token 733: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19998137652873993
    2. 's' → logprob: -2.449981451034546
    3. 'over' → logprob: -2.699981451034546
    4. '_' → logprob: -5.449981212615967
    5. ' s' → logprob: -5.449981212615967
    6. 'overs' → logprob: -5.824981212615967
    7. ' values' → logprob: -5.949981212615967
    8. ' _' → logprob: -6.324981212615967
    9. 'values' → logprob: -6.449981212615967
    10. '   ' → logprob: -6.449981212615967

Token 734: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16426365077495575
    2. '           ' → logprob: -2.7892637252807617
    3. '=' → logprob: -4.039263725280762
    4. ':
' → logprob: -4.164263725280762
    5. '1' → logprob: -4.914263725280762
    6. 's' → logprob: -4.914263725280762
    7. '       ' → logprob: -4.914263725280762
    8. '<|end|>' → logprob: -5.539263725280762
    9. ',' → logprob: -5.664263725280762
    10. '               ' → logprob: -5.789263725280762

Token 735: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41976770758628845
    2. '               ' → logprob: -1.2947677373886108
    3. ':' → logprob: -3.0447676181793213
    4. ':
' → logprob: -4.0447678565979
    5. '       ' → logprob: -6.4197678565979
    6. ',' → logprob: -7.1697678565979
    7. ':return' → logprob: -8.294767379760742
    8. '.' → logprob: -9.294767379760742
    9. ' return' → logprob: -9.419767379760742
    10. ' or' → logprob: -9.544767379760742

Token 736: ' s' (ID: 265)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9198620915412903
    2. '           ' → logprob: -1.0448620319366455
    3. ' return' → logprob: -1.5448620319366455
    4. ' if' → logprob: -4.794862270355225
    5. 'carry' → logprob: -4.919862270355225
    6. ' for' → logprob: -5.169862270355225
    7. 'for' → logprob: -5.794862270355225
    8. 'if' → logprob: -5.794862270355225
    9. ' pass' → logprob: -6.294862270355225
    10. '       ' → logprob: -6.419862270355225

Token 737: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04398587718605995
    2. '=' → logprob: -3.6689858436584473
    3. '<|end|>' → logprob: -4.418985843658447
    4. ' ' → logprob: -5.918985843658447
    5. '<|end|>' → logprob: -6.668985843658447
    6. 's' → logprob: -8.043986320495605
    7. ')' → logprob: -8.418986320495605
    8. 'token' → logprob: -8.918986320495605
    9. 'tokens' → logprob: -9.543986320495605
    10. '_tokens' → logprob: -9.543986320495605

Token 738: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0017489612801000476
    2. ' C' → logprob: -6.376749038696289
    3. 'None' → logprob: -11.001749038696289
    4. '(C' → logprob: -11.001749038696289
    5. '   ' → logprob: -12.001749038696289
    6. ' ' → logprob: -13.376749038696289
    7. '	C' → logprob: -13.501749038696289
    8. '[C' → logprob: -14.001749038696289
    9. 'c' → logprob: -14.376749038696289
    10. '  ' → logprob: -14.751749038696289

Token 739: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.42870649695396423
    2. '+' → logprob: -1.0537065267562866
    3. '+C' → logprob: -13.053706169128418
    4. ' +
' → logprob: -14.178706169128418
    5. ' ' → logprob: -14.553706169128418
    6. ' ' → logprob: -14.553706169128418
    7. '+
' → logprob: -14.928706169128418
    8. ' plus' → logprob: -15.428706169128418
    9. '[' → logprob: -15.553706169128418
    10. ' +
' → logprob: -15.553706169128418

Token 740: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.001929228543303907
    2. ' F' → logprob: -6.25192928314209
    3. '<|end|>' → logprob: -14.75192928314209
    4. ' ' → logprob: -16.126928329467773
    5. '	F' → logprob: -17.376928329467773
    6. 'C' → logprob: -17.876928329467773
    7. '(F' → logprob: -17.876928329467773
    8. ' ' → logprob: -18.126928329467773
    9. '   ' → logprob: -18.126928329467773
    10. '[' → logprob: -18.501928329467773

Token 741: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05271773785352707
    2. '
' → logprob: -3.052717685699463
    3. '       ' → logprob: -6.552717685699463
    4. ' 
' → logprob: -7.802717685699463
    5. '+' → logprob: -7.927717685699463
    6. ')' → logprob: -8.177718162536621
    7. '            
' → logprob: -8.177718162536621
    8. '<|end|>' → logprob: -8.177718162536621
    9. ' ' → logprob: -8.927718162536621
    10. '               ' → logprob: -9.177718162536621

Token 742: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005222928593866527
    2. ',' → logprob: -8.37552261352539
    3. '       ' → logprob: -8.87552261352539
    4. '<|end|>' → logprob: -10.75052261352539
    5. '
' → logprob: -10.87552261352539
    6. '=' → logprob: -11.12552261352539
    7. '               ' → logprob: -11.12552261352539
    8. ';' → logprob: -11.62552261352539
    9. '	       ' → logprob: -11.87552261352539
    10. ' =' → logprob: -12.00052261352539

Token 743: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5314611792564392
    2. 'if' (adapté à ' if') → logprob: -1.156461238861084
    3. '           ' → logprob: -2.906461238861084
    4. 'carry' → logprob: -3.531461238861084
    5. ' carry' → logprob: -4.781461238861084
    6. 'return' → logprob: -6.156461238861084
    7. ' return' → logprob: -6.406461238861084
    8. ' for' → logprob: -8.031460762023926
    9. 'for' → logprob: -8.281460762023926
    10. ' s' → logprob: -8.406460762023926

Token 744: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31723570823669434
    2. '(s' → logprob: -1.4422357082366943
    3. '(I' → logprob: -3.6922357082366943
    4. 'I' → logprob: -4.817235946655273
    5. ' (' → logprob: -6.942235946655273
    6. ' s' → logprob: -7.067235946655273
    7. '(' → logprob: -8.817235946655273
    8. '(i' → logprob: -9.067235946655273
    9. '   ' → logprob: -9.442235946655273
    10. '((' → logprob: -9.879735946655273

Token 745: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1130228117108345
    2. '%' → logprob: -2.238022804260254
    3. ' ' → logprob: -8.863022804260254
    4. '   ' → logprob: -11.488022804260254
    5. ' <' → logprob: -11.738022804260254
    6. '           ' → logprob: -11.863022804260254
    7. ' >' → logprob: -11.988022804260254
    8. '>' → logprob: -12.238022804260254
    9. '       ' → logprob: -12.863022804260254
    10. ' >=' → logprob: -13.363022804260254

Token 746: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0036014977376908064
    2. ' ' → logprob: -5.628601551055908
    3. '```' → logprob: -14.62860107421875
    4. '=' → logprob: -15.50360107421875
    5. 'd' → logprob: -16.69110107421875
    6. '۱۰' → logprob: -16.75360107421875
    7. ' ' → logprob: -16.87860107421875
    8. '1' → logprob: -17.06610107421875
    9. '   ' → logprob: -17.12860107421875
    10. '``' → logprob: -17.50360107421875

Token 747: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -17.250015258789062
    4. 'I' → logprob: -17.375015258789062
    5. '1' → logprob: -17.500015258789062
    6. 's' → logprob: -17.875015258789062
    7. '100' → logprob: -17.937515258789062
    8. '=' → logprob: -18.187515258789062
    9. '۱۰' → logprob: -18.437515258789062
    10. 'not' → logprob: -18.875015258789062

Token 748: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10022219270467758
    2. '!=' → logprob: -2.350222110748291
    3. '()!=' → logprob: -11.97522258758545
    4. ' not' → logprob: -12.72522258758545
    5. ')!=' → logprob: -12.85022258758545
    6. ' ' → logprob: -13.72522258758545
    7. ' ==' → logprob: -14.60022258758545
    8. '==' → logprob: -14.72522258758545
    9. '           ' → logprob: -14.97522258758545
    10. ']!=' → logprob: -15.60022258758545

Token 749: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.12693145871162415
    2. ' I' → logprob: -2.1269314289093018
    3. ' ' → logprob: -13.001931190490723
    4. '	I' → logprob: -14.501931190490723
    5. ' ' → logprob: -15.876931190490723
    6. '   ' → logprob: -16.00193214416504
    7. '_I' → logprob: -16.37693214416504
    8. '`' → logprob: -16.87693214416504
    9. '(I' → logprob: -17.12693214416504
    10. '"I' → logprob: -17.12693214416504

Token 750: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.757556676864624
    2. ':
' → logprob: -0.882556676864624
    3. '           ' → logprob: -2.632556676864624
    4. ':' → logprob: -3.132556676864624
    5. ' or' → logprob: -6.757556915283203
    6. ':return' → logprob: -8.007556915283203
    7. '):
' → logprob: -8.882556915283203
    8. ')' → logprob: -9.382556915283203
    9. '              ' → logprob: -9.632556915283203
    10. '       ' → logprob: -10.007556915283203

Token 751: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001394161517964676
    2. ':return' → logprob: -10.500139236450195
    3. ':' → logprob: -10.625139236450195
    4. ' return' → logprob: -10.625139236450195
    5. 'return' → logprob: -10.625139236450195
    6. '           ' → logprob: -10.750139236450195
    7. '              ' → logprob: -12.125139236450195
    8. ':
' → logprob: -12.250139236450195
    9. '                   ' → logprob: -13.625139236450195
    10. ',' → logprob: -13.875139236450195

Token 752: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00034774013329297304
    2. ' return' → logprob: -8.000348091125488
    3. '               ' → logprob: -11.500348091125488
    4. '           ' → logprob: -14.125348091125488
    5. 'False' → logprob: -14.125348091125488
    6. '                   ' → logprob: -14.625348091125488
    7. '
' → logprob: -15.750348091125488
    8. '	return' → logprob: -17.500347137451172
    9. '   ' → logprob: -18.250347137451172
    10. '{return' → logprob: -19.000347137451172

Token 753: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.088346359931165e-07
    2. ' False' → logprob: -14.000000953674316
    3. 'True' → logprob: -20.625
    4. 'false' → logprob: -21.125
    5. '(False' → logprob: -22.625
    6. '=False' → logprob: -24.375
    7. 'F' → logprob: -25.625
    8. '_false' → logprob: -25.625
    9. 'FALSE' → logprob: -26.125
    10. '   ' → logprob: -26.75

Token 754: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11654529720544815
    2. '           ' → logprob: -2.2415452003479004
    3. '
' → logprob: -5.8665452003479
    4. '        
' → logprob: -8.491545677185059
    5. '<|end|>' → logprob: -8.741545677185059
    6. 'else' → logprob: -9.116545677185059
    7. '               ' → logprob: -9.866545677185059
    8. ',' → logprob: -9.866545677185059
    9. ')' → logprob: -10.366545677185059
    10. 'return' → logprob: -10.491545677185059

Token 755: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3138042986392975
    2. '       ' → logprob: -1.313804268836975
    3. 'else' → logprob: -9.438804626464844
    4. ' else' → logprob: -9.688804626464844
    5. '+' → logprob: -9.813804626464844
    6. '               ' → logprob: -9.938804626464844
    7. '
' → logprob: -10.313804626464844
    8. 'carry' → logprob: -10.313804626464844
    9. '<|end|>' → logprob: -10.438804626464844
    10. ')' → logprob: -10.438804626464844

Token 756: ' carry' (ID: 9852)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8342673778533936
    2. ' carry' → logprob: -1.5842673778533936
    3. '       ' → logprob: -1.7092673778533936
    4. 'carry' (adapté à ' carry') → logprob: -1.8342673778533936
    5. '
' → logprob: -5.709267616271973
    6. '	' → logprob: -6.084267616271973
    7. 'return' → logprob: -6.084267616271973
    8. ' return' → logprob: -6.209267616271973
    9. '	c' → logprob: -6.334267616271973
    10. '   ' → logprob: -6.584267616271973

Token 757: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '=' → logprob: -13.250004768371582
    3. ' ' → logprob: -13.250004768371582
    4. ' =' → logprob: -14.875004768371582
    5. '<|end|>' → logprob: -15.000004768371582
    6. '_' → logprob: -15.125004768371582
    7. '2' → logprob: -15.500004768371582
    8. '<|end|>' → logprob: -15.750004768371582
    9. 's' → logprob: -17.5000057220459
    10. '' → logprob: -17.5000057220459

Token 758: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061968132853507996
    2. ' =' → logprob: -2.8119680881500244
    3. '=s' → logprob: -14.936967849731445
    4. '=

' → logprob: -16.436967849731445
    5. '=None' → logprob: -17.936967849731445
    6. 's' → logprob: -18.061967849731445
    7. '=
' → logprob: -18.186967849731445
    8. '=int' → logprob: -18.186967849731445
    9. '＝' → logprob: -18.561967849731445
    10. '=c' → logprob: -18.686967849731445

Token 759: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04832206293940544
    2. ' s' → logprob: -3.2983219623565674
    3. '0' → logprob: -4.6733222007751465
    4. '(s' → logprob: -7.4233222007751465
    5. '1' → logprob: -8.798321723937988
    6. ' ' → logprob: -9.048321723937988
    7. ' (' → logprob: -11.298321723937988
    8. '(' → logprob: -13.048321723937988
    9. '   ' → logprob: -13.423321723937988
    10. '_s' → logprob: -13.423321723937988

Token 760: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.04859020933508873
    2. ' //' → logprob: -3.0485901832580566
    3. ' ' → logprob: -14.048590660095215
    4. '   ' → logprob: -14.798590660095215
    5. '//=' → logprob: -14.798590660095215
    6. ' ' → logprob: -14.923590660095215
    7. '#' → logprob: -15.048590660095215
    8. '           ' → logprob: -15.673590660095215
    9. '       ' → logprob: -15.798590660095215
    10. '/' → logprob: -16.0485897064209

Token 761: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -18.125015258789062
    4. '1' → logprob: -19.000015258789062
    5. '۱۰' → logprob: -19.375015258789062
    6. '   ' → logprob: -19.625015258789062
    7. '
' → logprob: -20.000015258789062
    8. '[' → logprob: -20.562515258789062
    9. '=' → logprob: -20.937515258789062
    10. '１０' → logprob: -21.125015258789062

Token 762: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '1' → logprob: -17.5
    4. '```' → logprob: -19.875
    5. '۱۰' → logprob: -20.75
    6. '
' → logprob: -21.0
    7. '   ' → logprob: -21.75
    8. 'int' → logprob: -22.125
    9. '' → logprob: -22.5
    10. '[' → logprob: -22.5

Token 763: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039413790218532085
    2. 'else' → logprob: -5.628941535949707
    3. ' else' → logprob: -8.378941535949707
    4. '<|end|>' → logprob: -9.628941535949707
    5. '           ' → logprob: -11.503941535949707
    6. 'elif' → logprob: -11.503941535949707
    7. '.' → logprob: -12.253941535949707
    8. ')' → logprob: -13.128941535949707
    9. '        
' → logprob: -13.128941535949707
    10. '```' → logprob: -13.128941535949707

Token 764: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030932648107409477
    2. 'else' → logprob: -3.780932664871216
    3. ' else' → logprob: -5.780932426452637
    4. '
' → logprob: -6.155932426452637
    5. '\n' → logprob: -7.280932426452637
    6. '	' → logprob: -7.655932426452637
    7. '<|end|>' → logprob: -7.905932426452637
    8. 'elif' → logprob: -8.280932426452637
    9. '        
' → logprob: -8.905932426452637
    10. '           ' → logprob: -9.280932426452637

Token 765: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6653342843055725
    2. '       ' → logprob: -1.4153342247009277
    3. 'else' (adapté à ' else') → logprob: -1.4153342247009277
    4. 'elif' → logprob: -8.915334701538086
    5. ' elif' → logprob: -9.790334701538086
    6. '           ' → logprob: -11.540334701538086
    7. '   ' → logprob: -12.665334701538086
    8. '	else' → logprob: -13.040334701538086
    9. '<|end|>' → logprob: -14.165334701538086
    10. '```' → logprob: -14.290334701538086

Token 766: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1399615854024887
    2. ':' → logprob: -2.3899614810943604
    3. ':
' → logprob: -3.6399614810943604
    4. ' if' → logprob: -5.0149617195129395
    5. '       ' → logprob: -6.1399617195129395
    6. ' return' → logprob: -6.5149617195129395
    7. ':return' → logprob: -6.8899617195129395
    8. '        ' → logprob: -8.139961242675781
    9. 'return' → logprob: -8.764961242675781
    10. '            ' → logprob: -9.014961242675781

Token 767: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003993984777480364
    2. 'carry' → logprob: -6.128993988037109
    3. ' carry' → logprob: -7.128993988037109
    4. 'return' → logprob: -7.503993988037109
    5. ' return' → logprob: -8.37899398803711
    6. '       ' → logprob: -9.12899398803711
    7. '   ' → logprob: -9.25399398803711
    8. '               ' → logprob: -12.12899398803711
    9. '		' → logprob: -12.87899398803711
    10. '	       ' → logprob: -13.37899398803711

Token 768: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' (adapté à ' carry') → logprob: -0.09340118616819382
    2. 'return' → logprob: -2.4684011936187744
    3. '   ' → logprob: -6.718400955200195
    4. '       ' → logprob: -6.718400955200195
    5. ' carry' → logprob: -7.343400955200195
    6. 'pass' → logprob: -7.593400955200195
    7. '           ' → logprob: -7.843400955200195
    8. 'car' → logprob: -7.968400955200195
    9. ' return' → logprob: -9.093400955200195
    10. '#' → logprob: -11.843400955200195

Token 769: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016516048344783485
    2. '_' → logprob: -9.875164985656738
    3. 'carry' → logprob: -10.000164985656738
    4. '<|end|>' → logprob: -10.500164985656738
    5. '<|end|>' → logprob: -10.750164985656738
    6. '.' → logprob: -12.750164985656738
    7. ' ' → logprob: -13.500164985656738
    8. '   ' → logprob: -13.625164985656738
    9. '=' → logprob: -14.000164985656738
    10. 'continue' → logprob: -14.000164985656738

Token 770: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04861064255237579
    2. ' =' → logprob: -3.0486106872558594
    3. '=None' → logprob: -10.67361068725586
    4. ':' → logprob: -16.04861068725586
    5. '=
' → logprob: -18.67361068725586
    6. 'None' → logprob: -18.67361068725586
    7. ' None' → logprob: -18.79861068725586
    8. '   ' → logprob: -19.04861068725586
    9. '=}' → logprob: -19.04861068725586
    10. ' ' → logprob: -19.17361068725586

Token 771: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.20261366665363312
    2. '0' → logprob: -1.7026137113571167
    3. ' None' → logprob: -7.452613830566406
    4. '-' → logprob: -7.827613830566406
    5. 'set' → logprob: -9.702613830566406
    6. '(None' → logprob: -9.827613830566406
    7. ' ' → logprob: -10.077613830566406
    8. 'c' → logprob: -11.327613830566406
    9. '(' → logprob: -11.452613830566406
    10. '   ' → logprob: -12.202613830566406

Token 772: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001126763760112226
    2. '
' → logprob: -7.376126766204834
    3. '        
' → logprob: -8.001126289367676
    4. '<|end|>' → logprob: -9.001126289367676
    5. '#' → logprob: -11.126126289367676
    6. '   ' → logprob: -11.876126289367676
    7. '```' → logprob: -12.251126289367676
    8. '           ' → logprob: -12.376126289367676
    9. 'if' → logprob: -13.376126289367676
    10. ',' → logprob: -13.751126289367676

Token 773: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.458980300929397e-05
    2. '<|end|>' → logprob: -10.00008487701416
    3. '        
' → logprob: -11.50008487701416
    4. ' if' → logprob: -11.62508487701416
    5. '   ' → logprob: -11.87508487701416
    6. '#' → logprob: -12.50008487701416
    7. '```' → logprob: -13.12508487701416
    8. '           ' → logprob: -13.62508487701416
    9. ',' → logprob: -14.00008487701416
    10. ' ' → logprob: -14.37508487701416

Token 774: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4776945412158966
    2. '       ' → logprob: -0.9776945114135742
    3. 'if' → logprob: -5.852694511413574
    4. '   ' → logprob: -8.477694511413574
    5. 'H' → logprob: -8.602694511413574
    6. ' #' → logprob: -8.977694511413574
    7. ' if' → logprob: -9.727694511413574
    8. 'B' → logprob: -9.977694511413574
    9. ' ' → logprob: -10.727694511413574
    10. '```' → logprob: -10.977694511413574

Token 775: ' Tens' (ID: 167282)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5624439716339111
    2. 'T' → logprob: -1.0624439716339111
    3. 't' → logprob: -2.937443971633911
    4. '#' → logprob: -4.187443733215332
    5. '       ' → logprob: -4.312443733215332
    6. ' if' → logprob: -6.062443733215332
    7. '   ' → logprob: -8.062443733215332
    8. ' tens' → logprob: -8.687443733215332
    9. 'If' → logprob: -9.562443733215332
    10. ' #' → logprob: -10.812443733215332

Token 776: ' place' (ID: 2475)
  Prédit: ' place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.38470321893692017
    2. 'place' → logprob: -1.6347031593322754
    3. ' if' → logprob: -3.0097031593322754
    4. 'if' → logprob: -3.7597031593322754
    5. '       ' → logprob: -3.8847031593322754
    6. 'digit' → logprob: -4.509703159332275
    7. '_place' → logprob: -5.009703159332275
    8. ' digit' → logprob: -5.009703159332275
    9. '   ' → logprob: -5.759703159332275
    10. '1' → logprob: -5.884703159332275

Token 777: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0420028418302536
    2. 'if' → logprob: -3.6670029163360596
    3. ' if' → logprob: -4.1670026779174805
    4. '   ' → logprob: -10.54200267791748
    5. '        
' → logprob: -11.29200267791748
    6. 'carry' → logprob: -12.16700267791748
    7. '```' → logprob: -12.41700267791748
    8. '#' → logprob: -12.54200267791748
    9. 'If' → logprob: -12.54200267791748
    10. ',' → logprob: -12.66700267791748

Token 778: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017760515213012695
    2. 'if' → logprob: -4.142760276794434
    3. ' if' → logprob: -6.392760276794434
    4. '#' → logprob: -11.142760276794434
    5. '   ' → logprob: -11.142760276794434
    6. '```' → logprob: -12.142760276794434
    7. '        
' → logprob: -12.767760276794434
    8. ',' → logprob: -12.767760276794434
    9. '
' → logprob: -13.017760276794434
    10. '+' → logprob: -13.767760276794434

Token 779: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05582927167415619
    2. '       ' → logprob: -2.9308292865753174
    3. ' if' → logprob: -7.180829048156738
    4. 'carry' → logprob: -8.930829048156738
    5. '   ' → logprob: -10.430829048156738
    6. 'sum' → logprob: -11.430829048156738
    7. 's' → logprob: -12.930829048156738
    8. '#' → logprob: -13.555829048156738
    9. 'possible' → logprob: -13.805829048156738
    10. 'prev' → logprob: -13.930829048156738

Token 780: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0012124951463192701
    2. ' all' → logprob: -7.6262125968933105
    3. 'None' → logprob: -7.7512125968933105
    4. 'H' → logprob: -8.376212120056152
    5. 'B' → logprob: -9.876212120056152
    6. 'All' → logprob: -12.751212120056152
    7. '   ' → logprob: -12.876212120056152
    8. 'carry' → logprob: -13.126212120056152
    9. ' ' → logprob: -13.626212120056152
    10. '  ' → logprob: -14.126212120056152

Token 781: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.165027217415627e-05
    2. 'v' → logprob: -11.250021934509277
    3. 'None' → logprob: -13.125021934509277
    4. '(' → logprob: -13.375021934509277
    5. '   ' → logprob: -14.125021934509277
    6. ' (' → logprob: -14.250021934509277
    7. '(x' → logprob: -14.375021934509277
    8. '(
' → logprob: -14.625021934509277
    9. '((' → logprob: -14.625021934509277
    10. 'is' → logprob: -15.125021934509277

Token 782: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3869342505931854
    2. ' is' → logprob: -1.1369342803955078
    3. 'not' → logprob: -9.761934280395508
    4. ' not' → logprob: -12.261934280395508
    5. ')' → logprob: -15.136934280395508
    6. 'None' → logprob: -16.011934280395508
    7. '   ' → logprob: -16.636934280395508
    8. 'for' → logprob: -16.761934280395508
    9. 'v' → logprob: -17.011934280395508
    10. ' ' → logprob: -17.136934280395508

Token 783: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0011835616314783692
    2. ' not' → logprob: -6.75118350982666
    3. 'None' → logprob: -12.25118350982666
    4. 'C' → logprob: -13.25118350982666
    5. '...' → logprob: -13.25118350982666
    6. '   ' → logprob: -13.50118350982666
    7. '1' → logprob: -14.50118350982666
    8. 'Not' → logprob: -15.00118350982666
    9. '    ' → logprob: -15.12618350982666
    10. '     ' → logprob: -15.25118350982666

Token 784: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.054500666621607e-06
    2. ' None' → logprob: -13.50000286102295
    3. '(None' → logprob: -13.87500286102295
    4. 'none' → logprob: -14.75000286102295
    5. 'not' → logprob: -15.87500286102295
    6. '   ' → logprob: -17.000003814697266
    7. '_None' → logprob: -17.125003814697266
    8. '```' → logprob: -17.500003814697266
    9. '=None' → logprob: -18.125003814697266
    10. '...' → logprob: -18.500003814697266

Token 785: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759463310241699
    2. ' for' → logprob: -0.8259463310241699
    3. '       ' → logprob: -13.200946807861328
    4. ')' → logprob: -13.325946807861328
    5. ' in' → logprob: -13.575946807861328
    6. 'in' → logprob: -14.325946807861328
    7. ' (' → logprob: -15.200946807861328
    8. '           ' → logprob: -15.450946807861328
    9. '   ' → logprob: -15.575946807861328
    10. '	for' → logprob: -15.575946807861328

Token 786: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.019059475511312485
    2. ' (' → logprob: -4.269059658050537
    3. 'v' → logprob: -5.644059658050537
    4. ' v' → logprob: -7.394059658050537
    5. ' in' → logprob: -7.519059658050537
    6. 'in' → logprob: -9.394059181213379
    7. '[v' → logprob: -9.894059181213379
    8. '       ' → logprob: -11.144059181213379
    9. '           ' → logprob: -11.644059181213379
    10. ' ' → logprob: -11.894059181213379

Token 787: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6934705972671509
    2. ' in' → logprob: -0.6934705972671509
    3. 'for' → logprob: -8.44347095489502
    4. ' (' → logprob: -10.19347095489502
    5. '(B' → logprob: -10.69347095489502
    6. '(v' → logprob: -11.31847095489502
    7. '       ' → logprob: -11.69347095489502
    8. '(C' → logprob: -11.81847095489502
    9. '           ' → logprob: -12.31847095489502
    10. ' for' → logprob: -12.94347095489502

Token 788: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.00017922651022672653
    2. ' (' → logprob: -9.125179290771484
    3. '[B' → logprob: -9.875179290771484
    4. '   ' → logprob: -12.750179290771484
    5. '(C' → logprob: -12.750179290771484
    6. '(H' → logprob: -12.875179290771484
    7. '(' → logprob: -13.000179290771484
    8. '([' → logprob: -13.125179290771484
    9. '('' → logprob: -13.500179290771484
    10. ' ' → logprob: -14.250179290771484

Token 789: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.723352049040841e-06
    2. ' B' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.250004768371582
    4. 'b' → logprob: -16.625003814697266
    5. '(B' → logprob: -16.750003814697266
    6. '"B' → logprob: -17.625003814697266
    7. '  ' → logprob: -18.625003814697266
    8. ' ' → logprob: -18.875003814697266
    9. '`' → logprob: -18.875003814697266
    10. '	B' → logprob: -19.000003814697266

Token 790: ',E' (ID: 101576)
  Prédit: ',E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',E' → logprob: -0.020625974982976913
    2. ',' → logprob: -3.8956260681152344
    3. 'E' → logprob: -9.645626068115234
    4. ' ,' → logprob: -11.270626068115234
    5. ',
' → logprob: -13.770626068115234
    6. ',e' → logprob: -13.895626068115234
    7. ',F' → logprob: -14.020626068115234
    8. ',B' → logprob: -14.270626068115234
    9. '   ' → logprob: -15.145626068115234
    10. ' E' → logprob: -15.583126068115234

Token 791: ',H' (ID: 94400)
  Prédit: ',H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',H' → logprob: -0.007637627888470888
    2. ',' → logprob: -4.8826375007629395
    3. 'H' → logprob: -10.882637977600098
    4. ' ,' → logprob: -12.507637977600098
    5. ',
' → logprob: -13.132637977600098
    6. ',h' → logprob: -13.757637977600098
    7. ',F' → logprob: -14.382637977600098
    8. ',I' → logprob: -14.507637977600098
    9. '))' → logprob: -14.632637977600098
    10. 'carry' → logprob: -14.757637977600098

Token 792: '))' (ID: 915)
  Prédit: ')):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.1786121428012848
    2. ',' → logprob: -2.553612232208252
    3. ')):' → logprob: -2.553612232208252
    4. '))' → logprob: -5.928612232208252
    5. ')):
' → logprob: -6.178612232208252
    6. ',H' → logprob: -6.303612232208252
    7. ',I' → logprob: -7.178612232208252
    8. ' ,' → logprob: -9.428611755371094
    9. ',c' → logprob: -9.803611755371094
    10. ',C' → logprob: -10.053611755371094

Token 793: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6065137982368469
    2. ':' → logprob: -0.9815137982368469
    3. '           ' → logprob: -3.231513738632202
    4. ' and' → logprob: -3.481513738632202
    5. 'and' → logprob: -5.106513977050781
    6. '       ' → logprob: -6.356513977050781
    7. '):
' → logprob: -7.231513977050781
    8. ',' → logprob: -7.606513977050781
    9. ' or' → logprob: -8.231513977050781
    10. ':

' → logprob: -9.481513977050781

Token 794: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.0009319446398876607
    2. ' carry' → logprob: -7.000931739807129
    3. '   ' → logprob: -11.750931739807129
    4. '(c' → logprob: -12.375931739807129
    5. 'car' → logprob: -13.125931739807129
    6. 'None' → logprob: -13.625931739807129
    7. 'c' → logprob: -13.750931739807129
    8. ' ' → logprob: -14.375931739807129
    9. '     ' → logprob: -14.500931739807129
    10. '  ' → logprob: -14.500931739807129

Token 795: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' is' → logprob: -15.625000953674316
    3. ' ' → logprob: -16.0625
    4. '_' → logprob: -17.0625
    5. '```' → logprob: -17.375
    6. '
' → logprob: -17.75
    7. '   ' → logprob: -17.875
    8. 'is' → logprob: -18.0625
    9. '১' → logprob: -18.75
    10. ' in' → logprob: -18.8125

Token 796: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.386874258518219
    2. ' is' → logprob: -1.1368741989135742
    3. '       ' → logprob: -13.761874198913574
    4. '           ' → logprob: -14.011874198913574
    5. 'not' → logprob: -14.511874198913574
    6. '        ' → logprob: -15.886874198913574
    7. 'in' → logprob: -16.01187515258789
    8. ' ' → logprob: -16.13687515258789
    9. '   ' → logprob: -16.26187515258789
    10. '==' → logprob: -16.38687515258789

Token 797: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.062105268239974976
    2. ' not' → logprob: -2.812105178833008
    3. '       ' → logprob: -10.187105178833008
    4. '           ' → logprob: -10.562105178833008
    5. 'Not' → logprob: -11.687105178833008
    6. 'n' → logprob: -11.812105178833008
    7. '	not' → logprob: -11.937105178833008
    8. '   ' → logprob: -12.312105178833008
    9. '1' → logprob: -12.437105178833008
    10. 'n't' → logprob: -12.437105178833008

Token 798: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.88418151892256e-05
    2. ' None' → logprob: -9.750059127807617
    3. 'none' → logprob: -15.750059127807617
    4. '   ' → logprob: -16.250059127807617
    5. '       ' → logprob: -16.375059127807617
    6. '           ' → logprob: -17.125059127807617
    7. '(None' → logprob: -17.250059127807617
    8. '0' → logprob: -17.750059127807617
    9. '_None' → logprob: -17.750059127807617
    10. '         ' → logprob: -17.875059127807617

Token 799: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15169966220855713
    2. ':' → logprob: -2.0266995429992676
    3. '           ' → logprob: -5.026699542999268
    4. ' and' → logprob: -6.526699542999268
    5. '       ' → logprob: -7.526699542999268
    6. 'and' → logprob: -8.651700019836426
    7. '):
' → logprob: -9.151700019836426
    8. ':

' → logprob: -10.151700019836426
    9. ' :
' → logprob: -10.276700019836426
    10. ',' → logprob: -11.026700019836426

Token 800: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18566498160362244
    2. '       ' → logprob: -2.3106648921966553
    3. 's' → logprob: -2.8106648921966553
    4. ':' → logprob: -5.060665130615234
    5. ' s' → logprob: -6.685665130615234
    6. ':
' → logprob: -6.810665130615234
    7. 'if' → logprob: -7.185665130615234
    8. '   ' → logprob: -8.310665130615234
    9. ' if' → logprob: -9.310665130615234
    10. '```' → logprob: -9.310665130615234

Token 801: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.004636249504983425
    2. ' s' → logprob: -6.379636287689209
    3. '   ' → logprob: -6.504636287689209
    4. '       ' → logprob: -7.129636287689209
    5. 'if' → logprob: -7.879636287689209
    6. '           ' → logprob: -9.12963581085205
    7. 'sum' → logprob: -9.12963581085205
    8. 'total' → logprob: -11.00463581085205
    9. 't' → logprob: -12.25463581085205
    10. ' if' → logprob: -12.75463581085205

Token 802: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759610533714294
    2. '=' → logprob: -0.8259610533714294
    3. '=B' → logprob: -10.825961112976074
    4. '           ' → logprob: -14.075961112976074
    5. '   ' → logprob: -15.075961112976074
    6. ' ' → logprob: -15.575961112976074
    7. '       ' → logprob: -15.825961112976074
    8. 's' → logprob: -16.075960159301758
    9. '    ' → logprob: -16.950960159301758
    10. ',' → logprob: -17.200960159301758

Token 803: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0009124171338044107
    2. ' B' → logprob: -7.000912189483643
    3. '   ' → logprob: -15.0009126663208
    4. '(B' → logprob: -15.1259126663208
    5. ' ' → logprob: -16.125911712646484
    6. '	B' → logprob: -16.125911712646484
    7. 'b' → logprob: -16.500911712646484
    8. ' ' → logprob: -18.000911712646484
    9. '=B' → logprob: -18.375911712646484
    10. '  ' → logprob: -18.563411712646484

Token 804: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740796685218811
    2. ' +' → logprob: -0.9740796685218811
    3. '   ' → logprob: -14.099080085754395
    4. '+B' → logprob: -14.724080085754395
    5. ' ' → logprob: -14.849080085754395
    6. '```' → logprob: -15.849080085754395
    7. '+
' → logprob: -15.974080085754395
    8. 'E' → logprob: -16.224079132080078
    9. '       ' → logprob: -16.349079132080078
    10. '
' → logprob: -16.474079132080078

Token 805: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -8.494741632603109e-05
    2. ' E' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.125085830688477
    4. ' ' → logprob: -17.250085830688477
    5. '>E' → logprob: -17.750085830688477
    6. '+' → logprob: -18.312585830688477
    7. '	E' → logprob: -18.375085830688477
    8. 'e' → logprob: -18.375085830688477
    9. '```' → logprob: -18.937585830688477
    10. '       ' → logprob: -19.000085830688477

Token 806: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759949088096619
    2. ' +' → logprob: -0.8259949088096619
    3. '+c' → logprob: -9.825994491577148
    4. 'carry' → logprob: -14.200994491577148
    5. '+
' → logprob: -14.950994491577148
    6. ' +
' → logprob: -16.57599449157715
    7. ' plus' → logprob: -16.70099449157715
    8. '+++' → logprob: -17.32599449157715
    9. '+C' → logprob: -17.32599449157715
    10. '+=' → logprob: -17.45099449157715

Token 807: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -2.15310683415737e-05
    2. ' carry' → logprob: -10.750021934509277
    3. 'car' → logprob: -17.50002098083496
    4. 'c' → logprob: -20.50002098083496
    5. '   ' → logprob: -21.62502098083496
    6. 'care' → logprob: -21.75002098083496
    7. ' ' → logprob: -23.50002098083496
    8. 'Carry' → logprob: -23.87502098083496
    9. 'carrier' → logprob: -24.00002098083496
    10. 'caret' → logprob: -24.75002098083496

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'carry' → logprob: -14.75
    3. ' ' → logprob: -19.75
    4. '```' → logprob: -20.25
    5. '_' → logprob: -21.0
    6. '[' → logprob: -21.25
    7. 's' → logprob: -21.375
    8. ' carry' → logprob: -21.875
    9. 'Carry' → logprob: -21.875
    10. '(' → logprob: -22.0

Token 809: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013285996101330966
    2. '       ' → logprob: -9.50013256072998
    3. '
' → logprob: -10.62513256072998
    4. '   ' → logprob: -11.50013256072998
    5. '               ' → logprob: -11.87513256072998
    6. '          ' → logprob: -11.87513256072998
    7. '         ' → logprob: -13.50013256072998
    8. '
' → logprob: -13.62513256072998
    9. '            ' → logprob: -13.75013256072998
    10. '=' → logprob: -14.25013256072998

Token 810: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002610974188428372
    2. 'if' → logprob: -9.000261306762695
    3. '       ' → logprob: -9.250261306762695
    4. ' if' → logprob: -10.750261306762695
    5. '   ' → logprob: -11.500261306762695
    6. '
' → logprob: -12.000261306762695
    7. '               ' → logprob: -13.125261306762695
    8. ' ' → logprob: -14.625261306762695
    9. '```' → logprob: -15.125261306762695
    10. '          ' → logprob: -15.250261306762695

Token 811: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003403495065867901
    2. ' if' → logprob: -8.625340461730957
    3. '           ' → logprob: -8.750340461730957
    4. '       ' → logprob: -13.250340461730957
    5. '   ' → logprob: -15.000340461730957
    6. 'return' → logprob: -16.25033950805664
    7. '	if' → logprob: -16.75033950805664
    8. 'If' → logprob: -17.00033950805664
    9. ' ' → logprob: -17.37533950805664
    10. '               ' → logprob: -17.50033950805664

Token 812: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008773969602771103
    2. ' s' → logprob: -7.250877380371094
    3. 'H' → logprob: -9.375877380371094
    4. '(s' → logprob: -9.625877380371094
    5. '(H' → logprob: -12.000877380371094
    6. '   ' → logprob: -12.250877380371094
    7. '(' → logprob: -13.375877380371094
    8. ' (' → logprob: -13.375877380371094
    9. 'h' → logprob: -14.500877380371094
    10. '           ' → logprob: -14.625877380371094

Token 813: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07889220863580704
    2. ' %' → logprob: -2.578892230987549
    3. ' ' → logprob: -13.95389175415039
    4. '   ' → logprob: -14.07889175415039
    5. '10' → logprob: -15.82889175415039
    6. '[' → logprob: -16.20389175415039
    7. ' ' → logprob: -16.20389175415039
    8. '```' → logprob: -16.45389175415039
    9. '           ' → logprob: -17.26639175415039
    10. '`' → logprob: -17.64139175415039

Token 814: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00018089536752086133
    2. ' ' → logprob: -8.625181198120117
    3. '```' → logprob: -14.250181198120117
    4. '۱۰' → logprob: -16.437681198120117
    5. '[' → logprob: -16.812681198120117
    6. '   ' → logprob: -16.875181198120117
    7. 'd' → logprob: -17.250181198120117
    8. '1' → logprob: -17.312681198120117
    9. '=' → logprob: -17.375181198120117
    10. '`' → logprob: -17.437681198120117

Token 815: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '0' → logprob: -18.500011444091797
    4. '```' → logprob: -19.000011444091797
    5. '۱۰' → logprob: -19.000011444091797
    6. '1' → logprob: -19.500011444091797
    7. '100' → logprob: -20.000011444091797
    8. '１０' → logprob: -20.375011444091797
    9. '``' → logprob: -20.437511444091797
    10. '   ' → logprob: -20.687511444091797

Token 816: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.023250021040439606
    2. ' !=' → logprob: -3.773250102996826
    3. '()!=' → logprob: -13.023249626159668
    4. ')!=' → logprob: -13.648249626159668
    5. '!==' → logprob: -14.898249626159668
    6. '```' → logprob: -15.023249626159668
    7. '           ' → logprob: -16.148250579833984
    8. '               ' → logprob: -16.773250579833984
    9. '!='' → logprob: -16.773250579833984
    10. '   ' → logprob: -16.898250579833984

Token 817: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00043138445471413434
    2. ' H' → logprob: -7.750431537628174
    3. '   ' → logprob: -15.125431060791016
    4. '	H' → logprob: -15.500431060791016
    5. ' ' → logprob: -16.125431060791016
    6. '(H' → logprob: -17.500431060791016
    7. '_H' → logprob: -17.625431060791016
    8. '`' → logprob: -17.750431060791016
    9. '  ' → logprob: -17.750431060791016
    10. '       ' → logprob: -17.875431060791016

Token 818: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7026655077934265
    2. '               ' → logprob: -0.9526655077934265
    3. ':' → logprob: -2.2026655673980713
    4. ':return' → logprob: -4.952665328979492
    5. '           ' → logprob: -7.452665328979492
    6. '):
' → logprob: -8.077665328979492
    7. 'return' → logprob: -8.702665328979492
    8. ' or' → logprob: -8.952665328979492
    9. '              ' → logprob: -9.577665328979492
    10. ')' → logprob: -9.577665328979492

Token 819: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01640406809747219
    2. ':return' → logprob: -4.766404151916504
    3. 'return' → logprob: -5.766404151916504
    4. ':
' → logprob: -5.891404151916504
    5. ' return' → logprob: -6.891404151916504
    6. ':' → logprob: -7.391404151916504
    7. '           ' → logprob: -8.766404151916504
    8. ' or' → logprob: -10.266404151916504
    9. '              ' → logprob: -11.141404151916504
    10. '                ' → logprob: -12.266404151916504

Token 820: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05682244151830673
    2. ' return' → logprob: -3.0568225383758545
    3. 'False' → logprob: -4.806822299957275
    4. ' False' → logprob: -10.806822776794434
    5. 'eturn' → logprob: -13.056822776794434
    6. '           ' → logprob: -13.681822776794434
    7. '0' → logprob: -13.931822776794434
    8. '               ' → logprob: -13.931822776794434
    9. 'false' → logprob: -13.931822776794434
    10. '
' → logprob: -14.431822776794434

Token 821: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.512236498361744e-07
    2. ' False' → logprob: -14.500000953674316
    3. 'True' → logprob: -21.875
    4. 'false' → logprob: -22.125
    5. '(False' → logprob: -22.625
    6. 'F' → logprob: -24.625
    7. '_false' → logprob: -24.625
    8. '=False' → logprob: -25.375
    9. 'FALSE' → logprob: -26.875
    10. 'None' → logprob: -27.25

Token 822: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012334455968812108
    2. '<|end|>' → logprob: -7.1262335777282715
    3. '		' → logprob: -8.626233100891113
    4. '       ' → logprob: -9.376233100891113
    5. 'carry' → logprob: -10.626233100891113
    6. '<|end|>' → logprob: -10.751233100891113
    7. '   ' → logprob: -10.751233100891113
    8. ',' → logprob: -11.001233100891113
    9. '               ' → logprob: -11.501233100891113
    10. '	       ' → logprob: -11.626233100891113

Token 823: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0271893497556448
    2. 'carry' → logprob: -3.652189254760742
    3. '       ' → logprob: -7.902189254760742
    4. '   ' → logprob: -8.152189254760742
    5. ' carry' → logprob: -9.402189254760742
    6. '
' → logprob: -10.402189254760742
    7. '          ' → logprob: -10.777189254760742
    8. '		' → logprob: -10.777189254760742
    9. '               ' → logprob: -11.527189254760742
    10. 'car' → logprob: -11.777189254760742

Token 824: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' (adapté à ' carry') → logprob: -0.0008658452425152063
    2. ' carry' → logprob: -7.375865936279297
    3. '           ' → logprob: -8.500865936279297
    4. 'car' → logprob: -11.625865936279297
    5. '       ' → logprob: -11.625865936279297
    6. '   ' → logprob: -11.875865936279297
    7. 'c' → logprob: -12.250865936279297
    8. '               ' → logprob: -13.875865936279297
    9. '```' → logprob: -13.875865936279297
    10. 'return' → logprob: -14.000865936279297

Token 825: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5760995149612427
    2. '2' → logprob: -0.8260995149612427
    3. 'carry' → logprob: -8.826099395751953
    4. '_' → logprob: -12.576099395751953
    5. 'out' → logprob: -12.576099395751953
    6. 'over' → logprob: -13.451099395751953
    7. '```' → logprob: -14.201099395751953
    8. '=' → logprob: -14.326099395751953
    9. ' ' → logprob: -14.326099395751953
    10. '   ' → logprob: -14.951099395751953

Token 826: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759403705596924
    2. ' =' → logprob: -0.8259403705596924
    3. '=s' → logprob: -13.950940132141113
    4. 's' → logprob: -18.07594108581543
    5. ' ' → logprob: -18.95094108581543
    6. '＝' → logprob: -18.95094108581543
    7. '=int' → logprob: -19.70094108581543
    8. ' s' → logprob: -20.07594108581543
    9. '=

' → logprob: -20.20094108581543
    10. ',' → logprob: -20.32594108581543

Token 827: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20142795145511627
    2. ' s' → logprob: -1.701427936553955
    3. '(s' → logprob: -11.326428413391113
    4. '   ' → logprob: -13.701428413391113
    5. ' ' → logprob: -14.076428413391113
    6. '_s' → logprob: -16.076427459716797
    7. '	s' → logprob: -16.201427459716797
    8. '  ' → logprob: -16.576427459716797
    9. ' ' → logprob: -17.076427459716797
    10. '
' → logprob: -17.201427459716797

Token 828: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.47408798336982727
    2. ' //' → logprob: -0.9740879535675049
    3. ' ' → logprob: -11.849087715148926
    4. ' ' → logprob: -13.349087715148926
    5. '//=' → logprob: -14.349087715148926
    6. '   ' → logprob: -14.349087715148926
    7. '	' → logprob: -15.349087715148926
    8. '
' → logprob: -15.599087715148926
    9. '```' → logprob: -15.724087715148926
    10. '=' → logprob: -15.974087715148926

Token 829: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '100' → logprob: -17.500001907348633
    4. '```' → logprob: -17.625001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '1' → logprob: -18.500001907348633
    7. '[' → logprob: -18.875001907348633
    8. 's' → logprob: -19.375001907348633
    9. '
' → logprob: -19.937501907348633
    10. '۱۰' → logprob: -19.937501907348633

Token 830: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '100' → logprob: -16.875
    4. '1' → logprob: -18.75
    5. '```' → logprob: -19.125
    6. '0' → logprob: -20.25
    7. '۱۰' → logprob: -20.75
    8. '   ' → logprob: -20.75
    9. '１０' → logprob: -20.875
    10. '
' → logprob: -21.125

Token 831: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2997649312019348
    2. 'else' → logprob: -1.79976487159729
    3. '<|end|>' → logprob: -2.42476487159729
    4. ' else' → logprob: -5.799765110015869
    5. 'elif' → logprob: -7.674765110015869
    6. '<|end|>' → logprob: -7.799765110015869
    7. '           ' → logprob: -7.924765110015869
    8. ')' → logprob: -8.174764633178711
    9. '#else' → logprob: -8.799764633178711
    10. '```' → logprob: -8.799764633178711

Token 832: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03151855990290642
    2. 'else' → logprob: -3.5315184593200684
    3. '<|end|>' → logprob: -6.906518459320068
    4. ' else' → logprob: -8.156518936157227
    5. 'elif' → logprob: -8.156518936157227
    6. '           ' → logprob: -8.906518936157227
    7. '```' → logprob: -11.031518936157227
    8. '.' → logprob: -11.656518936157227
    9. '<|end|>' → logprob: -12.156518936157227
    10. ')' → logprob: -12.156518936157227

Token 833: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.027267539873719215
    2. '       ' → logprob: -3.7772674560546875
    3. 'else' → logprob: -5.5272674560546875
    4. ' elif' → logprob: -10.277267456054688
    5. '   ' → logprob: -14.152267456054688
    6. ' else' → logprob: -14.277267456054688
    7. '	elif' → logprob: -14.277267456054688
    8. 'elseif' → logprob: -15.027267456054688
    9. 'el' → logprob: -15.652267456054688
    10. '#elif' → logprob: -16.277267456054688

Token 834: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06082283705472946
    2. ' None' → logprob: -3.5608227252960205
    3. 'all' → logprob: -4.1858229637146
    4. 'any' → logprob: -4.9358229637146
    5. ' all' → logprob: -5.8108229637146
    6. '(None' → logprob: -6.4358229637146
    7. ' any' → logprob: -6.5608229637146
    8. ' (' → logprob: -6.6858229637146
    9. '(' → logprob: -7.8108229637146
    10. '(all' → logprob: -8.810822486877441

Token 835: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2028118371963501
    2. 'not' → logprob: -1.70281183719635
    3. ' in' → logprob: -6.8278117179870605
    4. 'in' → logprob: -8.077812194824219
    5. '	not' → logprob: -13.327812194824219
    6. ' is' → logprob: -13.827812194824219
    7. 'is' → logprob: -14.202812194824219
    8. ')' → logprob: -15.452812194824219
    9. ' ' → logprob: -15.577812194824219
    10. '(not' → logprob: -17.07781219482422

Token 836: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08894176781177521
    2. ' in' → logprob: -2.463941812515259
    3. 'In' → logprob: -14.58894157409668
    4. 'None' → logprob: -14.83894157409668
    5. '...' → logprob: -14.83894157409668
    6. '[' → logprob: -15.46394157409668
    7. ' (' → logprob: -15.46394157409668
    8. ' ' → logprob: -16.08894157409668
    9. 'not' → logprob: -16.33894157409668
    10. 'for' → logprob: -16.71394157409668

Token 837: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.03234698250889778
    2. '(C' → logprob: -3.7823469638824463
    3. ' (' → logprob: -4.782347202301025
    4. '([' → logprob: -8.282346725463867
    5. '(v' → logprob: -8.407346725463867
    6. '(' → logprob: -9.657346725463867
    7. '(None' → logprob: -10.407346725463867
    8. '[B' → logprob: -10.407346725463867
    9. '(F' → logprob: -10.907346725463867
    10. '(V' → logprob: -11.032346725463867

Token 838: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6894717216491699
    2. '(B' → logprob: -0.8144717216491699
    3. '[B' → logprob: -2.93947172164917
    4. ' (' → logprob: -6.93947172164917
    5. '{' → logprob: -7.31447172164917
    6. ' B' → logprob: -8.314472198486328
    7. 'v' → logprob: -9.439472198486328
    8. '[' → logprob: -9.689472198486328
    9. ' [' → logprob: -9.939472198486328
    10. '(v' → logprob: -10.564472198486328

Token 839: ',E' (ID: 101576)
  Prédit: ',E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',E' → logprob: -0.5554823279380798
    2. ',F' → logprob: -1.4304823875427246
    3. ',' → logprob: -1.6804823875427246
    4. ',None' → logprob: -8.055481910705566
    5. ' ,' → logprob: -8.555481910705566
    6. ',H' → logprob: -10.680481910705566
    7. ')' → logprob: -10.930481910705566
    8. ',
' → logprob: -10.930481910705566
    9. ',e' → logprob: -11.180481910705566
    10. ' or' → logprob: -11.180481910705566

Token 840: ',H' (ID: 94400)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0705157220363617
    2. ',H' → logprob: -3.1955156326293945
    3. ',' → logprob: -3.6955156326293945
    4. 'and' → logprob: -6.5705156326293945
    5. '):
' → logprob: -8.445515632629395
    6. ' and' → logprob: -9.070515632629395
    7. ',)' → logprob: -9.320515632629395
    8. ' )' → logprob: -9.445515632629395
    9. '):' → logprob: -9.445515632629395
    10. ',None' → logprob: -10.070515632629395

Token 841: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015185609459877014
    2. 'and' → logprob: -5.015185832977295
    3. ' and' → logprob: -5.265185832977295
    4. ' )' → logprob: -6.515185832977295
    5. ',' → logprob: -6.890185832977295
    6. '):
' → logprob: -7.765185832977295
    7. '):' → logprob: -8.765185356140137
    8. ',)' → logprob: -9.640185356140137
    9. ' ,' → logprob: -11.015185356140137
    10. 'None' → logprob: -11.140185356140137

Token 842: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20565800368785858
    2. 'and' → logprob: -1.830657958984375
    3. ':' → logprob: -3.830657958984375
    4. '           ' → logprob: -6.580657958984375
    5. '==' → logprob: -7.205657958984375
    6. ' is' → logprob: -7.455657958984375
    7. ' or' → logprob: -8.330657958984375
    8. ':
' → logprob: -8.580657958984375
    9. ' but' → logprob: -8.830657958984375
    10. ')' → logprob: -8.955657958984375

Token 843: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.42887720465660095
    2. ' carry' → logprob: -1.0538772344589233
    3. 'H' → logprob: -9.678876876831055
    4. 'None' → logprob: -10.428876876831055
    5. ' not' → logprob: -10.803876876831055
    6. ' None' → logprob: -11.303876876831055
    7. ' H' → logprob: -11.928876876831055
    8. ' (' → logprob: -11.928876876831055
    9. ' ' → logprob: -12.053876876831055
    10. '   ' → logprob: -12.303876876831055

Token 844: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008622493594884872
    2. '2' → logprob: -4.758622646331787
    3. '_' → logprob: -13.508622169494629
    4. '```' → logprob: -13.571122169494629
    5. 'not' → logprob: -14.321122169494629
    6. '...' → logprob: -14.696122169494629
    7. '`' → logprob: -14.883622169494629
    8. 's' → logprob: -14.883622169494629
    9. 'user' → logprob: -15.258622169494629
    10. '   ' → logprob: -15.696122169494629

Token 845: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25193437933921814
    2. 'is' → logprob: -1.5019344091415405
    3. ' not' → logprob: -13.001934051513672
    4. 'not' → logprob: -13.126934051513672
    5. '!=' → logprob: -15.126934051513672
    6. '==' → logprob: -15.626934051513672
    7. '	is' → logprob: -16.001934051513672
    8. 'in' → logprob: -16.126934051513672
    9. ' ' → logprob: -16.251934051513672
    10. ')' → logprob: -16.876934051513672

Token 846: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03580298647284508
    2. ' not' → logprob: -3.4108030796051025
    3. 'None' → logprob: -6.160802841186523
    4. ' None' → logprob: -11.160802841186523
    5. '   ' → logprob: -11.785802841186523
    6. 'Not' → logprob: -11.785802841186523
    7. '0' → logprob: -13.035802841186523
    8. 'none' → logprob: -13.410802841186523
    9. '1' → logprob: -13.598302841186523
    10. '	not' → logprob: -13.973302841186523

Token 847: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00151831132825464
    2. ' None' → logprob: -6.501518249511719
    3. 'I' → logprob: -12.001518249511719
    4. '1' → logprob: -12.626518249511719
    5. '_None' → logprob: -13.251518249511719
    6. '(None' → logprob: -13.751518249511719
    7. 'True' → logprob: -14.001518249511719
    8. 'not' → logprob: -14.251518249511719
    9. '_none' → logprob: -14.251518249511719
    10. '-' → logprob: -14.751518249511719

Token 848: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2107967883348465
    2. ':
' → logprob: -1.96079683303833
    3. '           ' → logprob: -3.08579683303833
    4. ' and' → logprob: -6.08579683303833
    5. '       ' → logprob: -7.08579683303833
    6. 'and' → logprob: -8.710796356201172
    7. ',' → logprob: -9.710796356201172
    8. '   ' → logprob: -10.210796356201172
    9. '		' → logprob: -10.210796356201172
    10. '               ' → logprob: -10.585796356201172

Token 849: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16948261857032776
    2. ':' → logprob: -2.169482707977295
    3. ':
' → logprob: -3.419482707977295
    4. '       ' → logprob: -5.294482707977295
    5. ' and' → logprob: -5.919482707977295
    6. 'and' → logprob: -7.669482707977295
    7. '{
' → logprob: -7.919482707977295
    8. '{' → logprob: -9.669482231140137
    9. '   ' → logprob: -10.044482231140137
    10. '               ' → logprob: -10.294482231140137

Token 850: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3043447434902191
    2. '           ' → logprob: -1.5543447732925415
    3. 's' (adapté à ' s') → logprob: -3.304344654083252
    4. ' ' → logprob: -5.554344654083252
    5. '       ' → logprob: -5.804344654083252
    6. ' ' → logprob: -6.054344654083252
    7. ' if' → logprob: -6.554344654083252
    8. '   ' → logprob: -6.554344654083252
    9. '	s' → logprob: -8.30434513092041
    10. ' carry' → logprob: -8.55434513092041

Token 851: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408807277679443
    2. ' =' → logprob: -0.9740880727767944
    3. 's' → logprob: -11.974087715148926
    4. ' ' → logprob: -13.224087715148926
    5. '   ' → logprob: -14.974087715148926
    6. '	' → logprob: -15.099087715148926
    7. '<|end|>' → logprob: -15.099087715148926
    8. '=None' → logprob: -15.474087715148926
    9. ',' → logprob: -15.599087715148926
    10. '=B' → logprob: -15.724087715148926

Token 852: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11579122394323349
    2. ' B' → logprob: -2.2407913208007812
    3. '(B' → logprob: -6.240791320800781
    4. ' (' → logprob: -6.990791320800781
    5. 'None' → logprob: -10.115791320800781
    6. ' None' → logprob: -10.865791320800781
    7. '(' → logprob: -12.115791320800781
    8. 'b' → logprob: -12.115791320800781
    9. ' ' → logprob: -12.115791320800781
    10. '	B' → logprob: -12.615791320800781

Token 853: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931504011154175
    2. ' +' → logprob: -0.6931504011154175
    3. '+B' → logprob: -13.568150520324707
    4. ' ' → logprob: -13.943150520324707
    5. ' plus' → logprob: -15.693150520324707
    6. ' ' → logprob: -15.943150520324707
    7. '[' → logprob: -15.943150520324707
    8. ' +
' → logprob: -16.56814956665039
    9. '+
' → logprob: -16.69314956665039
    10. '＋' → logprob: -16.69314956665039

Token 854: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.02055882103741169
    2. ' E' → logprob: -3.8955588340759277
    3. '(E' → logprob: -12.27055835723877
    4. ' ' → logprob: -13.08305835723877
    5. '_E' → logprob: -13.14555835723877
    6. '   ' → logprob: -13.39555835723877
    7. '	E' → logprob: -14.64555835723877
    8. '(' → logprob: -14.70805835723877
    9. '  ' → logprob: -14.95805835723877
    10. ' (' → logprob: -14.95805835723877

Token 855: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132937550544739
    2. '+' → logprob: -1.313293695449829
    3. '+c' → logprob: -10.93829345703125
    4. '           ' → logprob: -11.68829345703125
    5. '+
' → logprob: -13.18829345703125
    6. 'carry' → logprob: -13.81329345703125
    7. '
' → logprob: -14.06329345703125
    8. ' +
' → logprob: -14.31329345703125
    9. ' plus' → logprob: -14.93829345703125
    10. '<|end|>' → logprob: -15.06329345703125

Token 856: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.0009117019944824278
    2. ' carry' → logprob: -7.000911712646484
    3. 'car' → logprob: -15.750911712646484
    4. 'care' → logprob: -17.250911712646484
    5. 'c' → logprob: -18.375911712646484
    6. '0' → logprob: -18.875911712646484
    7. '   ' → logprob: -19.125911712646484
    8. '1' → logprob: -19.250911712646484
    9. ' ' → logprob: -19.375911712646484
    10. '(c' → logprob: -20.000911712646484

Token 857: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.11996734328568e-05
    2. 'carry' → logprob: -10.125041007995605
    3. ' ' → logprob: -15.375041007995605
    4. 's' → logprob: -16.000041961669922
    5. ' carry' → logprob: -16.125041961669922
    6. '```' → logprob: -16.187541961669922
    7. '
' → logprob: -16.250041961669922
    8. '2' → logprob: -16.812541961669922
    9. '<|end|>' → logprob: -17.000041961669922
    10. '   ' → logprob: -17.187541961669922

Token 858: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012982209213078022
    2. '
' → logprob: -4.637982368469238
    3. ' if' → logprob: -6.387982368469238
    4. 'if' → logprob: -7.512982368469238
    5. '%' → logprob: -8.137982368469238
    6. '       ' → logprob: -8.637982368469238
    7. ' %' → logprob: -8.887982368469238
    8. '               ' → logprob: -9.137982368469238
    9. '   ' → logprob: -9.637982368469238
    10. '
' → logprob: -10.012982368469238

Token 859: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000768413650803268
    2. ' if' → logprob: -7.375768184661865
    3. 'if' → logprob: -9.500768661499023
    4. '               ' → logprob: -10.875768661499023
    5. '       ' → logprob: -11.375768661499023
    6. '          ' → logprob: -12.000768661499023
    7. '
' → logprob: -12.125768661499023
    8. '   ' → logprob: -12.500768661499023
    9. '=' → logprob: -13.000768661499023
    10. '		' → logprob: -13.000768661499023

Token 860: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47769495844841003
    2. ' if' → logprob: -1.6026949882507324
    3. '           ' → logprob: -1.7276949882507324
    4. '=' → logprob: -9.227694511413574
    5. '       ' → logprob: -9.227694511413574
    6. '
' → logprob: -9.227694511413574
    7. '%' → logprob: -9.602694511413574
    8. ' ' → logprob: -9.852694511413574
    9. '#' → logprob: -9.852694511413574
    10. '==' → logprob: -10.227694511413574

Token 861: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005190232302993536
    2. ' s' → logprob: -6.130190372467041
    3. '(s' → logprob: -6.130190372467041
    4. 'H' → logprob: -7.880190372467041
    5. '(H' → logprob: -8.505189895629883
    6. 'not' → logprob: -10.380189895629883
    7. ' (' → logprob: -10.380189895629883
    8. 'None' → logprob: -10.630189895629883
    9. 'c' → logprob: -10.880189895629883
    10. '   ' → logprob: -11.005189895629883

Token 862: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08898341655731201
    2. '%' → logprob: -2.4639835357666016
    3. ' ' → logprob: -10.213983535766602
    4. ' is' → logprob: -12.963983535766602
    5. '[' → logprob: -13.963983535766602
    6. ' ' → logprob: -14.088983535766602
    7. 'None' → logprob: -14.838983535766602
    8. ' None' → logprob: -14.963983535766602
    9. '   ' → logprob: -15.088983535766602
    10. 's' → logprob: -15.151483535766602

Token 863: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00016039233014453202
    2. ' ' → logprob: -8.875160217285156
    3. 'None' → logprob: -12.125160217285156
    4. 'not' → logprob: -12.500160217285156
    5. '0' → logprob: -13.125160217285156
    6. '1' → logprob: -13.687660217285156
    7. '9' → logprob: -13.687660217285156
    8. '```' → logprob: -13.937660217285156
    9. '[' → logprob: -15.125160217285156
    10. '         ' → logprob: -15.125160217285156

Token 864: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012928384239785373
    2. 'H' → logprob: -9.375129699707031
    3. ' ' → logprob: -10.500129699707031
    4. '(H' → logprob: -12.625129699707031
    5. '9' → logprob: -12.750129699707031
    6. '0' → logprob: -13.250129699707031
    7. 'I' → logprob: -13.500129699707031
    8. '5' → logprob: -13.500129699707031
    9. '1' → logprob: -14.000129699707031
    10. '  ' → logprob: -14.562629699707031

Token 865: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.47408178448677063
    2. '!=' → logprob: -0.9740817546844482
    3. '()!=' → logprob: -12.724081993103027
    4. ')!=' → logprob: -13.849081993103027
    5. '==' → logprob: -15.224081993103027
    6. ' not' → logprob: -15.974081993103027
    7. ' ' → logprob: -16.09908103942871
    8. '!' → logprob: -16.47408103942871
    9. '!='' → logprob: -16.59908103942871
    10. ']!=' → logprob: -16.84908103942871

Token 866: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.005929393693804741
    2. ' H' → logprob: -5.130929470062256
    3. ' ' → logprob: -15.255928993225098
    4. 'h' → logprob: -16.505929946899414
    5. '	H' → logprob: -16.505929946899414
    6. 'I' → logprob: -16.755929946899414
    7. ' ' → logprob: -17.005929946899414
    8. '   ' → logprob: -17.130929946899414
    9. 'None' → logprob: -17.255929946899414
    10. '_H' → logprob: -17.380929946899414

Token 867: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07133714854717255
    2. ':
' → logprob: -2.9463372230529785
    3. ':' → logprob: -4.9463372230529785
    4. '           ' → logprob: -5.0713372230529785
    5. ' and' → logprob: -6.8213372230529785
    6. ':return' → logprob: -7.4463372230529785
    7. '):
' → logprob: -8.44633674621582
    8. '==' → logprob: -8.69633674621582
    9. 'return' → logprob: -8.82133674621582
    10. 'and' → logprob: -8.82133674621582

Token 868: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001878543058410287
    2. ':' → logprob: -7.12687873840332
    3. ':
' → logprob: -7.75187873840332
    4. '           ' → logprob: -8.12687873840332
    5. ':return' → logprob: -9.12687873840332
    6. ' return' → logprob: -9.37687873840332
    7. '==' → logprob: -10.25187873840332
    8. 'return' → logprob: -10.25187873840332
    9. ' not' → logprob: -11.50187873840332
    10. '=False' → logprob: -11.50187873840332

Token 869: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.029872212558984756
    2. ' False' → logprob: -3.529872179031372
    3. 'return' (adapté à ' return') → logprob: -9.404871940612793
    4. ' return' → logprob: -10.654871940612793
    5. 'True' → logprob: -11.529871940612793
    6. '               ' → logprob: -12.404871940612793
    7. '0' → logprob: -14.029871940612793
    8. ' True' → logprob: -14.529871940612793
    9. 'None' → logprob: -15.654871940612793
    10. 'false' → logprob: -15.904871940612793

Token 870: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004319804720580578
    2. ' False' → logprob: -7.750432014465332
    3. 'True' → logprob: -13.625432014465332
    4. 'F' → logprob: -16.625431060791016
    5. '(False' → logprob: -17.750431060791016
    6. '0' → logprob: -18.375431060791016
    7. '_false' → logprob: -18.625431060791016
    8. 'false' → logprob: -19.000431060791016
    9. '=False' → logprob: -19.375431060791016
    10. '2' → logprob: -19.625431060791016

Token 871: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017839411739259958
    2. '               ' → logprob: -6.376783847808838
    3. '       ' → logprob: -10.376784324645996
    4. 'carry' → logprob: -11.376784324645996
    5. 'return' → logprob: -12.126784324645996
    6. '   ' → logprob: -12.126784324645996
    7. '            ' → logprob: -12.501784324645996
    8. ',' → logprob: -12.501784324645996
    9. '<|end|>' → logprob: -12.626784324645996
    10. ' carry' → logprob: -12.751784324645996

Token 872: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009853598661720753
    2. '               ' → logprob: -4.759853363037109
    3. 'else' → logprob: -7.759853363037109
    4. '       ' → logprob: -8.00985336303711
    5. ' else' → logprob: -8.00985336303711
    6. '   ' → logprob: -10.50985336303711
    7. '<|end|>' → logprob: -10.50985336303711
    8. 'None' → logprob: -11.88485336303711
    9. '            
' → logprob: -12.00985336303711
    10. '	       ' → logprob: -12.00985336303711

Token 873: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' (adapté à ' carry') → logprob: -0.05675981566309929
    2. ' carry' → logprob: -2.931759834289551
    3. '           ' → logprob: -6.931759834289551
    4. 'return' → logprob: -7.306759834289551
    5. '               ' → logprob: -8.93175983428955
    6. ' return' → logprob: -9.43175983428955
    7. 'car' → logprob: -12.05675983428955
    8. '   ' → logprob: -12.80675983428955
    9. '```' → logprob: -13.43175983428955
    10. '                   ' → logprob: -13.93175983428955

Token 874: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.703443770878948e-06
    2. '1' → logprob: -12.000007629394531
    3. '_' → logprob: -14.875007629394531
    4. '```' → logprob: -15.000007629394531
    5. '   ' → logprob: -15.125007629394531
    6. ' ' → logprob: -16.37500762939453
    7. '۲' → logprob: -16.87500762939453
    8. '₂' → logprob: -16.87500762939453
    9. '  ' → logprob: -17.87500762939453
    10. '
' → logprob: -17.93750762939453

Token 875: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868711292743683
    2. ' =' → logprob: -1.136871099472046
    3. '=
' → logprob: -17.261871337890625
    4. '   ' → logprob: -18.011871337890625
    5. '=s' → logprob: -18.136871337890625
    6. '=

' → logprob: -18.386871337890625
    7. '=c' → logprob: -18.636871337890625
    8. '=None' → logprob: -18.761871337890625
    9. '=True' → logprob: -19.011871337890625
    10. '＝' → logprob: -19.261871337890625

Token 876: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3484555184841156
    2. ' s' → logprob: -1.223455548286438
    3. '0' → logprob: -12.098455429077148
    4. '(s' → logprob: -12.473455429077148
    5. ' ' → logprob: -14.348455429077148
    6. ' ' → logprob: -15.473455429077148
    7. '1' → logprob: -15.973455429077148
    8. '_s' → logprob: -16.22345542907715
    9. '{s' → logprob: -16.22345542907715
    10. '   ' → logprob: -16.34845542907715

Token 877: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.7064252495765686
    2. ' //' → logprob: -0.7064252495765686
    3. 's' → logprob: -4.456425189971924
    4. ' s' → logprob: -6.581425189971924
    5. '(s' → logprob: -9.456425666809082
    6. ' ' → logprob: -10.081425666809082
    7. '2' → logprob: -10.706425666809082
    8. ' /' → logprob: -10.831425666809082
    9. '0' → logprob: -11.456425666809082
    10. '/' → logprob: -11.581425666809082

Token 878: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.000001907348633
    3. 's' → logprob: -14.500001907348633
    4. '1' → logprob: -16.375001907348633
    5. '2' → logprob: -17.500001907348633
    6. '0' → logprob: -18.750001907348633
    7. '(' → logprob: -19.000001907348633
    8. '(s' → logprob: -19.500001907348633
    9. '```' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.875001907348633

Token 879: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.375
    3. '2' → logprob: -16.25
    4. ' ' → logprob: -16.875
    5. '0' → logprob: -18.0
    6. 'int' → logprob: -18.5
    7. 's' → logprob: -18.625
    8. '```' → logprob: -19.875
    9. '100' → logprob: -20.25
    10. '(' → logprob: -20.625

Token 880: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36651960015296936
    2. 'else' → logprob: -1.366519570350647
    3. ' else' → logprob: -2.9915196895599365
    4. '<|end|>' → logprob: -7.491519451141357
    5. '           ' → logprob: -7.616519451141357
    6. 'None' → logprob: -8.116519927978516
    7. 'elif' → logprob: -8.991519927978516
    8. '               ' → logprob: -10.116519927978516
    9. '	else' → logprob: -10.366519927978516
    10. ' None' → logprob: -11.366519927978516

Token 881: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049075763672590256
    2. 'else' → logprob: -3.0490758419036865
    3. ' else' → logprob: -7.674075603485107
    4. 'elif' → logprob: -11.049076080322266
    5. '           ' → logprob: -12.799076080322266
    6. '<|end|>' → logprob: -13.424076080322266
    7. '	else' → logprob: -14.424076080322266
    8. '	' → logprob: -14.549076080322266
    9. ',' → logprob: -14.799076080322266
    10. '```' → logprob: -15.049076080322266

Token 882: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03812503069639206
    2. '       ' → logprob: -3.5381250381469727
    3. ' else' → logprob: -4.788125038146973
    4. 'elif' → logprob: -11.413125038146973
    5. '	else' → logprob: -15.538125038146973
    6. '   ' → logprob: -16.038124084472656
    7. '```' → logprob: -16.163124084472656
    8. '_else' → logprob: -17.038124084472656
    9. '           ' → logprob: -17.413124084472656
    10. ' elif' → logprob: -17.663124084472656

Token 883: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1970846951007843
    2. '           ' → logprob: -2.072084665298462
    3. ':
' → logprob: -2.947084665298462
    4. '       ' → logprob: -7.947084903717041
    5. '   ' → logprob: -10.322084426879883
    6. '=' → logprob: -10.447084426879883
    7. '          ' → logprob: -11.447084426879883
    8. ' =' → logprob: -11.947084426879883
    9. ' :' → logprob: -12.197084426879883
    10. '               ' → logprob: -12.572084426879883

Token 884: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5779816508293152
    2. 'carry' → logprob: -0.8279816508293152
    3. ' carry' → logprob: -6.202981472015381
    4. 'car' → logprob: -11.952981948852539
    5. '   ' → logprob: -12.452981948852539
    6. '               ' → logprob: -12.702981948852539
    7. '       ' → logprob: -13.077981948852539
    8. '          ' → logprob: -14.827981948852539
    9. 'c' → logprob: -15.577981948852539
    10. '            ' → logprob: -15.952981948852539

Token 885: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' (adapté à ' carry') → logprob: -0.001392496284097433
    2. 'None' → logprob: -6.626392364501953
    3. '           ' → logprob: -10.126392364501953
    4. ' carry' → logprob: -11.251392364501953
    5. ' None' → logprob: -11.751392364501953
    6. 'car' → logprob: -12.376392364501953
    7. '   ' → logprob: -14.251392364501953
    8. '       ' → logprob: -14.876392364501953
    9. '               ' → logprob: -14.876392364501953
    10. 'c' → logprob: -17.251392364501953

Token 886: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.250000953674316
    3. '=' → logprob: -15.500000953674316
    4. '=None' → logprob: -15.750000953674316
    5. '_' → logprob: -16.750001907348633
    6. 'None' → logprob: -18.125001907348633
    7. ' ' → logprob: -18.250001907348633
    8. '₂' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '<|end|>' → logprob: -18.500001907348633

Token 887: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015024791937321424
    2. ' =' → logprob: -6.501502513885498
    3. '=None' → logprob: -15.62650203704834
    4. '=
' → logprob: -21.501502990722656
    5. '=

' → logprob: -21.626502990722656
    6. '=}' → logprob: -22.126502990722656
    7. 'None' → logprob: -23.126502990722656
    8. '＝' → logprob: -23.251502990722656
    9. ' None' → logprob: -24.126502990722656
    10. ':' → logprob: -24.501502990722656

Token 888: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.512236498361744e-07
    2. ' None' → logprob: -14.500000953674316
    3. '0' → logprob: -19.5
    4. '_None' → logprob: -20.125
    5. '   ' → logprob: -20.625
    6. '=None' → logprob: -21.25
    7. '(None' → logprob: -21.375
    8. ' ' → logprob: -23.0
    9. 'none' → logprob: -23.125
    10. '  ' → logprob: -23.875

Token 889: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008189192740246654
    2. 'if' → logprob: -7.500818729400635
    3. '<|end|>' → logprob: -9.375819206237793
    4. '#' → logprob: -9.875819206237793
    5. ' if' → logprob: -10.125819206237793
    6. '```' → logprob: -10.250819206237793
    7. '        
' → logprob: -10.375819206237793
    8. '   ' → logprob: -11.625819206237793
    9. '
' → logprob: -11.625819206237793
    10. '...' → logprob: -13.875819206237793

Token 890: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011183866299688816
    2. '#' → logprob: -4.511183738708496
    3. 'if' → logprob: -9.261183738708496
    4. '   ' → logprob: -10.261183738708496
    5. '```' → logprob: -12.136183738708496
    6. ' #' → logprob: -15.261183738708496
    7. '        
' → logprob: -16.011184692382812
    8. '           ' → logprob: -16.011184692382812
    9. ' if' → logprob: -16.261184692382812
    10. '
' → logprob: -16.386184692382812

Token 891: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6952220797538757
    2. 'if' → logprob: -0.6952220797538757
    3. '       ' → logprob: -6.195221900939941
    4. ' if' → logprob: -10.695221900939941
    5. 'G' → logprob: -12.695221900939941
    6. ' #' → logprob: -12.945221900939941
    7. '   ' → logprob: -13.320221900939941
    8. 'If' → logprob: -13.695221900939941
    9. '
' → logprob: -13.945221900939941
    10. '```' → logprob: -14.070221900939941

Token 892: ' Hundreds' (ID: 141553)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003863438032567501
    2. '#' → logprob: -8.500386238098145
    3. 'G' → logprob: -8.750386238098145
    4. 'If' → logprob: -10.875386238098145
    5. ' if' → logprob: -12.250386238098145
    6. '       ' → logprob: -14.750386238098145
    7. '   ' → logprob: -15.875386238098145
    8. 'return' → logprob: -16.12538719177246
    9. 'I' → logprob: -16.62538719177246
    10. '```' → logprob: -17.00038719177246

Token 893: ' place' (ID: 2475)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2092320919036865
    2. 'if' → logprob: -1.3342320919036865
    3. '       ' → logprob: -1.5842320919036865
    4. 'place' → logprob: -1.7092320919036865
    5. ' place' → logprob: -2.9592320919036865
    6. '_place' → logprob: -9.334232330322266
    7. '   ' → logprob: -10.459232330322266
    8. '.place' → logprob: -10.709232330322266
    9. '(place' → logprob: -10.709232330322266
    10. '        ' → logprob: -11.584232330322266

Token 894: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09056228399276733
    2. '       ' → logprob: -2.465562343597412
    3. ' if' → logprob: -6.465562343597412
    4. 'If' → logprob: -10.590561866760254
    5. 'G' → logprob: -11.590561866760254
    6. '```' → logprob: -12.090561866760254
    7. 's' → logprob: -12.965561866760254
    8. '#' → logprob: -12.965561866760254
    9. '   ' → logprob: -12.965561866760254
    10. ',' → logprob: -12.965561866760254

Token 895: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030126599594950676
    2. '       ' → logprob: -3.5301265716552734
    3. ' if' → logprob: -7.905126571655273
    4. '   ' → logprob: -12.030126571655273
    5. '```' → logprob: -14.280126571655273
    6. 'If' → logprob: -15.405126571655273
    7. '	if' → logprob: -16.530126571655273
    8. '
' → logprob: -16.655126571655273
    9. '        
' → logprob: -16.780126571655273
    10. '#' → logprob: -17.030126571655273

Token 896: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0032467509154230356
    2. '       ' → logprob: -5.753246784210205
    3. ' if' → logprob: -9.628246307373047
    4. '   ' → logprob: -12.878246307373047
    5. '```' → logprob: -14.753246307373047
    6. 'If' → logprob: -16.003246307373047
    7. '#' → logprob: -17.003246307373047
    8. '``' → logprob: -17.128246307373047
    9. '	if' → logprob: -17.253246307373047
    10. '
' → logprob: -17.628246307373047

Token 897: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.15048037469387054
    2. 'None' → logprob: -2.775480270385742
    3. 'G' → logprob: -3.025480270385742
    4. 'A' → logprob: -3.650480270385742
    5. ' all' → logprob: -6.525480270385742
    6. 'All' → logprob: -6.775480270385742
    7. ' None' → logprob: -8.900480270385742
    8. ' G' → logprob: -10.025480270385742
    9. 'none' → logprob: -10.400480270385742
    10. ' A' → logprob: -10.525480270385742

Token 898: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00013405199570115656
    2. 'v' → logprob: -9.000134468078613
    3. '(x' → logprob: -12.000134468078613
    4. '(' → logprob: -14.000134468078613
    5. '([' → logprob: -14.000134468078613
    6. '[v' → logprob: -14.500134468078613
    7. '(
' → logprob: -14.625134468078613
    8. '```' → logprob: -14.750134468078613
    9. '((' → logprob: -14.875134468078613
    10. 'x' → logprob: -15.750134468078613

Token 899: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03365814685821533
    2. 'is' → logprob: -3.408658027648926
    3. 'for' → logprob: -12.283658027648926
    4. '(x' → logprob: -13.408658027648926
    5. 'v' → logprob: -13.783658027648926
    6. 'not' → logprob: -13.783658027648926
    7. 'in' → logprob: -14.158658027648926
    8. ' in' → logprob: -14.658658027648926
    9. '(is' → logprob: -14.783658027648926
    10. 'x' → logprob: -15.158658027648926

Token 900: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0003285520360805094
    2. ' not' → logprob: -8.12532901763916
    3. 'None' → logprob: -11.50032901763916
    4. 'Not' → logprob: -12.25032901763916
    5. '...' → logprob: -12.37532901763916
    6. '   ' → logprob: -13.00032901763916
    7. '```' → logprob: -13.50032901763916
    8. '[' → logprob: -13.62532901763916
    9. 'x' → logprob: -13.75032901763916
    10. 'none' → logprob: -14.12532901763916

Token 901: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6933246850967407
    2. 'None' → logprob: -0.6933246850967407
    3. 'none' → logprob: -9.31832504272461
    4. '(None' → logprob: -9.81832504272461
    5. 'Not' → logprob: -11.81832504272461
    6. ' None' → logprob: -12.19332504272461
    7. ' not' → logprob: -12.44332504272461
    8. '_None' → logprob: -12.81832504272461
    9. '...' → logprob: -13.44332504272461
    10. '```' → logprob: -13.44332504272461

Token 902: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759397745132446
    2. ' for' → logprob: -0.8259397745132446
    3. ' in' → logprob: -16.575939178466797
    4. ')' → logprob: -16.575939178466797
    5. '       ' → logprob: -16.950939178466797
    6. ' ' → logprob: -17.700939178466797
    7. '(for' → logprob: -17.825939178466797
    8. '           ' → logprob: -17.825939178466797
    9. '   ' → logprob: -17.950939178466797
    10. 'and' → logprob: -17.950939178466797

Token 903: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2835738956928253
    2. '(v' → logprob: -1.408573865890503
    3. 'in' → logprob: -6.658574104309082
    4. ' v' → logprob: -7.283574104309082
    5. '(x' → logprob: -8.283574104309082
    6. ' in' → logprob: -8.908574104309082
    7. 'x' → logprob: -11.033574104309082
    8. '[v' → logprob: -11.908574104309082
    9. '	v' → logprob: -12.283574104309082
    10. '(' → logprob: -12.408574104309082

Token 904: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3937511444091797
    2. ' in' → logprob: -1.1437511444091797
    3. '(A' → logprob: -5.01875114440918
    4. 'v' → logprob: -9.14375114440918
    5. '(G' → logprob: -9.76875114440918
    6. ' (' → logprob: -10.01875114440918
    7. '(' → logprob: -11.76875114440918
    8. ' ' → logprob: -12.51875114440918
    9. '(v' → logprob: -12.51875114440918
    10. '(B' → logprob: -12.51875114440918

Token 905: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00012558852904476225
    2. '(G' → logprob: -9.750125885009766
    3. '('' → logprob: -10.000125885009766
    4. '[A' → logprob: -11.250125885009766
    5. ' (' → logprob: -12.125125885009766
    6. '(' → logprob: -13.875125885009766
    7. '   ' → logprob: -14.500125885009766
    8. '([' → logprob: -14.875125885009766
    9. '['' → logprob: -15.125125885009766
    10. '(B' → logprob: -15.625125885009766

Token 906: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00015217094914987683
    2. ''A' → logprob: -9.250152587890625
    3. '['' → logprob: -10.250152587890625
    4. '('' → logprob: -11.750152587890625
    5. ' A' → logprob: -12.000152587890625
    6. '[A' → logprob: -12.625152587890625
    7. '(A' → logprob: -13.875152587890625
    8. '   ' → logprob: -14.375152587890625
    9. 'a' → logprob: -15.125152587890625
    10. '"A' → logprob: -15.375152587890625

Token 907: ',D' (ID: 61507)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7253594398498535
    2. ',G' → logprob: -0.9753594398498535
    3. ',D' → logprob: -1.9753594398498535
    4. ' ,' → logprob: -10.100358963012695
    5. ',
' → logprob: -11.850358963012695
    6. 'G' → logprob: -11.975358963012695
    7. ',d' → logprob: -12.225358963012695
    8. 'D' → logprob: -12.225358963012695
    9. '_,' → logprob: -12.975358963012695
    10. ',g' → logprob: -13.537858963012695

Token 908: ',G' (ID: 66991)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.576126217842102
    2. ',G' → logprob: -0.826126217842102
    3. ' ,' → logprob: -8.701126098632812
    4. ',
' → logprob: -11.701126098632812
    5. '),' → logprob: -12.576126098632812
    6. 'G' → logprob: -13.326126098632812
    7. '_,' → logprob: -13.951126098632812
    8. ',g' → logprob: -14.638626098632812
    9. ')' → logprob: -14.826126098632812
    10. '
' → logprob: -15.013626098632812

Token 909: '))' (ID: 915)
  Prédit: ')):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.24198997020721436
    2. '))' → logprob: -1.7419899702072144
    3. ')):' → logprob: -3.241990089416504
    4. ')):
' → logprob: -7.741990089416504
    5. '       ' → logprob: -9.616990089416504
    6. ' ' → logprob: -10.241990089416504
    7. ' ))' → logprob: -10.241990089416504
    8. ')' → logprob: -10.366990089416504
    9. '):
' → logprob: -11.366990089416504
    10. '')):
' → logprob: -11.366990089416504

Token 910: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5894312262535095
    2. ':' → logprob: -0.8394312262535095
    3. ' and' → logprob: -5.089431285858154
    4. '       ' → logprob: -5.589431285858154
    5. '           ' → logprob: -6.464431285858154
    6. 'and' → logprob: -6.589431285858154
    7. '):
' → logprob: -7.964431285858154
    8. '=' → logprob: -9.339430809020996
    9. ':

' → logprob: -10.464430809020996
    10. ',' → logprob: -10.589430809020996

Token 911: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.001655898173339665
    2. ' carry' → logprob: -6.5016560554504395
    3. 'c' → logprob: -10.126655578613281
    4. 'val' → logprob: -10.251655578613281
    5. 'G' → logprob: -10.751655578613281
    6. '(c' → logprob: -10.876655578613281
    7. '(G' → logprob: -12.001655578613281
    8. 'A' → logprob: -12.126655578613281
    9. '(' → logprob: -12.251655578613281
    10. 'v' → logprob: -12.251655578613281

Token 912: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -14.125001907348633
    3. '_' → logprob: -14.875001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '₂' → logprob: -16.875001907348633
    6. 's' → logprob: -17.000001907348633
    7. '
' → logprob: -17.000001907348633
    8. ' ' → logprob: -17.125001907348633
    9. ')' → logprob: -17.875001907348633
    10. '1' → logprob: -18.000001907348633

Token 913: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.12692873179912567
    2. 'is' → logprob: -2.1269288063049316
    3. '==' → logprob: -15.501928329467773
    4. 'not' → logprob: -16.501928329467773
    5. ')' → logprob: -16.626928329467773
    6. ' ' → logprob: -16.751928329467773
    7. '	is' → logprob: -16.751928329467773
    8. ' not' → logprob: -17.126928329467773
    9. '           ' → logprob: -17.126928329467773
    10. ' ' → logprob: -17.376928329467773

Token 914: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.38700437545776367
    2. ' not' → logprob: -1.1370043754577637
    3. 'Not' → logprob: -10.512004852294922
    4. 'n' → logprob: -10.762004852294922
    5. '1' → logprob: -11.137004852294922
    6. '0' → logprob: -11.262004852294922
    7. 'None' → logprob: -11.887004852294922
    8. '2' → logprob: -12.324504852294922
    9. '   ' → logprob: -12.574504852294922
    10. 's' → logprob: -12.637004852294922

Token 915: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0011943945428356528
    2. ' None' → logprob: -6.751194477081299
    3. '0' → logprob: -11.00119400024414
    4. 'not' → logprob: -13.00119400024414
    5. '=None' → logprob: -13.62619400024414
    6. '_None' → logprob: -13.62619400024414
    7. 'none' → logprob: -13.75119400024414
    8. '(None' → logprob: -14.25119400024414
    9. '   ' → logprob: -14.50119400024414
    10. '10' → logprob: -15.25119400024414

Token 916: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1471627652645111
    2. ':' → logprob: -2.022162675857544
    3. '           ' → logprob: -5.522162914276123
    4. '       ' → logprob: -8.647162437438965
    5. ' and' → logprob: -8.772162437438965
    6. '):
' → logprob: -9.647162437438965
    7. '=' → logprob: -10.647162437438965
    8. 'and' → logprob: -11.022162437438965
    9. ':

' → logprob: -11.147162437438965
    10. ':
' → logprob: -11.647162437438965

Token 917: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019601311534643173
    2. '       ' → logprob: -4.019601345062256
    3. 'if' → logprob: -6.894601345062256
    4. ' if' → logprob: -7.894601345062256
    5. '   ' → logprob: -11.019600868225098
    6. ':' → logprob: -11.394600868225098
    7. ':
' → logprob: -11.769600868225098
    8. 'return' → logprob: -11.894600868225098
    9. '{
' → logprob: -12.019600868225098
    10. '
' → logprob: -12.144600868225098

Token 918: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13413593173027039
    2. '           ' → logprob: -2.8841359615325928
    3. ' if' → logprob: -3.0091359615325928
    4. 's' → logprob: -4.634135723114014
    5. '       ' → logprob: -5.009135723114014
    6. ' s' → logprob: -6.009135723114014
    7. 'return' → logprob: -6.884135723114014
    8. '   ' → logprob: -8.134136199951172
    9. ' return' → logprob: -9.384136199951172
    10. ' ' → logprob: -11.759136199951172

Token 919: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.007575750816613436
    2. 'G' → logprob: -5.132575988769531
    3. '(A' → logprob: -6.632575988769531
    4. ' A' → logprob: -8.757575988769531
    5. '(' → logprob: -9.257575988769531
    6. '(G' → logprob: -10.007575988769531
    7. ' (' → logprob: -10.757575988769531
    8. '   ' → logprob: -12.257575988769531
    9. 'a' → logprob: -13.382575988769531
    10. ' G' → logprob: -14.007575988769531

Token 920: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5760907530784607
    2. '+' → logprob: -0.8260907530784607
    3. '+D' → logprob: -8.951090812683105
    4. ' plus' → logprob: -11.076090812683105
    5. '+A' → logprob: -13.451090812683105
    6. 'plus' → logprob: -13.701090812683105
    7. ' ' → logprob: -13.951090812683105
    8. '+B' → logprob: -14.451090812683105
    9. '   ' → logprob: -15.076090812683105
    10. '+
' → logprob: -15.201090812683105

Token 921: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0011711753904819489
    2. ' D' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.501171112060547
    4. '       ' → logprob: -16.001171112060547
    5. ' ' → logprob: -16.626171112060547
    6. '           ' → logprob: -16.751171112060547
    7. '  ' → logprob: -17.376171112060547
    8. '    ' → logprob: -17.751171112060547
    9. '```' → logprob: -17.876171112060547
    10. '	D' → logprob: -18.251171112060547

Token 922: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931473612785339
    2. ' +' → logprob: -0.6931473612785339
    3. '!=' → logprob: -16.443147659301758
    4. '           ' → logprob: -16.943147659301758
    5. ' !=' → logprob: -17.943147659301758
    6. '   ' → logprob: -18.318147659301758
    7. ' ' → logprob: -18.568147659301758
    8. '               ' → logprob: -18.943147659301758
    9. '```' → logprob: -18.943147659301758
    10. '>' → logprob: -19.068147659301758

Token 923: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -7.493430894101039e-05
    2. ' carry' → logprob: -9.500075340270996
    3. 'car' → logprob: -18.37507438659668
    4. '   ' → logprob: -20.37507438659668
    5. 'c' → logprob: -21.12507438659668
    6. 'care' → logprob: -21.25007438659668
    7. ' ' → logprob: -21.75007438659668
    8. 'Carry' → logprob: -22.62507438659668
    9. 'count' → logprob: -23.62507438659668
    10. '  ' → logprob: -23.87507438659668

Token 924: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '_' → logprob: -17.25
    4. 'return' → logprob: -17.625
    5. '```' → logprob: -17.75
    6. '=' → logprob: -18.375
    7. '   ' → logprob: -18.5
    8. '₂' → logprob: -19.0
    9. '۲' → logprob: -19.375
    10. 'carry' → logprob: -20.1875

Token 925: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.029757894575595856
    2. ' !=' → logprob: -3.5297579765319824
    3. ')!=' → logprob: -12.279757499694824
    4. '()!=' → logprob: -13.904757499694824
    5. '>' → logprob: -14.779757499694824
    6. ')' → logprob: -15.279757499694824
    7. ' ' → logprob: -15.404757499694824
    8. '!==' → logprob: -15.404757499694824
    9. '           ' → logprob: -15.779757499694824
    10. '   ' → logprob: -16.02975845336914

Token 926: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.4855663721391466e-05
    2. ' G' → logprob: -11.125015258789062
    3. '	G' → logprob: -19.250015258789062
    4. 'c' → logprob: -19.750015258789062
    5. ' ' → logprob: -20.500015258789062
    6. '   ' → logprob: -20.500015258789062
    7. 'Ｇ' → logprob: -20.750015258789062
    8. 'g' → logprob: -21.250015258789062
    9. '[G' → logprob: -21.500015258789062
    10. '=' → logprob: -22.125015258789062

Token 927: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.013799446634948254
    2. ':' → logprob: -4.763799667358398
    3. '               ' → logprob: -5.388799667358398
    4. '           ' → logprob: -8.263799667358398
    5. ':return' → logprob: -8.388799667358398
    6. '):
' → logprob: -9.513799667358398
    7. ':
' → logprob: -10.888799667358398
    8. 'return' → logprob: -11.638799667358398
    9. ')' → logprob: -12.388799667358398
    10. ' return' → logprob: -12.888799667358398

Token 928: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011709021404385567
    2. '           ' → logprob: -5.261709213256836
    3. ':
' → logprob: -5.636709213256836
    4. 'return' → logprob: -6.761709213256836
    5. ' return' → logprob: -7.261709213256836
    6. ':return' → logprob: -7.261709213256836
    7. ':' → logprob: -8.136709213256836
    8. '):
' → logprob: -12.011709213256836
    9. '              ' → logprob: -12.386709213256836
    10. 'False' → logprob: -12.386709213256836

Token 929: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05221537873148918
    2. ' return' → logprob: -3.052215337753296
    3. 'False' → logprob: -5.802215576171875
    4. '               ' → logprob: -7.552215576171875
    5. ' False' → logprob: -10.302215576171875
    6. '                   ' → logprob: -10.677215576171875
    7. '           ' → logprob: -11.052215576171875
    8. '
' → logprob: -13.427215576171875
    9. '   ' → logprob: -14.677215576171875
    10. '	return' → logprob: -15.052215576171875

Token 930: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.320199877838604e-07
    2. ' False' → logprob: -15.0
    3. 'True' → logprob: -17.625
    4. '(False' → logprob: -21.125
    5. 'false' → logprob: -22.875
    6. '=False' → logprob: -23.0
    7. 'F' → logprob: -23.375
    8. '_false' → logprob: -24.125
    9. '0' → logprob: -24.75
    10. 'FALSE' → logprob: -25.25

Token 931: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007544778054580092
    2. 'return' → logprob: -7.375754356384277
    3. '           ' → logprob: -9.750754356384277
    4. '        
' → logprob: -10.625754356384277
    5. '
' → logprob: -11.000754356384277
    6. ' return' → logprob: -11.250754356384277
    7. '<|end|>' → logprob: -11.875754356384277
    8. '   ' → logprob: -13.000754356384277
    9. '    
' → logprob: -13.875754356384277
    10. '\
' → logprob: -13.875754356384277

Token 932: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03839029744267464
    2. 'return' → logprob: -3.2883903980255127
    3. '
' → logprob: -8.038390159606934
    4. ' return' → logprob: -11.413390159606934
    5. '           ' → logprob: -11.913390159606934
    6. '   ' → logprob: -12.538390159606934
    7. '        
' → logprob: -13.163390159606934
    8. 'else' → logprob: -14.163390159606934
    9. '```' → logprob: -14.163390159606934
    10. '
' → logprob: -15.663390159606934

Token 933: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06210078299045563
    2. 'return' → logprob: -2.812100887298584
    3. ' return' → logprob: -9.687100410461426
    4. '
' → logprob: -10.937100410461426
    5. '        
' → logprob: -10.937100410461426
    6. '   ' → logprob: -11.562100410461426
    7. 'else' → logprob: -11.562100410461426
    8. '<|end|>' → logprob: -11.812100410461426
    9. '	return' → logprob: -13.187100410461426
    10. '```' → logprob: -13.562100410461426

Token 934: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.17403502762317657
    2. 'all' → logprob: -2.79903507232666
    3. 'any' → logprob: -3.04903507232666
    4. ' None' → logprob: -3.92403507232666
    5. 'A' → logprob: -4.79903507232666
    6. ' any' → logprob: -5.04903507232666
    7. ' all' → logprob: -5.17403507232666
    8. 'carry' → logprob: -5.67403507232666
    9. '(None' → logprob: -6.29903507232666
    10. 'G' → logprob: -6.54903507232666

Token 935: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.32751956582069397
    2. 'not' → logprob: -1.5775195360183716
    3. ' in' → logprob: -2.827519655227661
    4. 'in' → logprob: -4.327519416809082
    5. ' is' → logprob: -8.077519416809082
    6. 'is' → logprob: -8.952519416809082
    7. '	not' → logprob: -12.952519416809082
    8. '==' → logprob: -13.702519416809082
    9. ')' → logprob: -14.952519416809082
    10. ' ' → logprob: -15.202519416809082

Token 936: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.009763998910784721
    2. ' in' → logprob: -4.634764194488525
    3. '
' → logprob: -12.509763717651367
    4. 'n' → logprob: -14.634763717651367
    5. '   ' → logprob: -14.759763717651367
    6. 'In' → logprob: -15.009763717651367
    7. ' ' → logprob: -15.009763717651367
    8. '        ' → logprob: -15.259763717651367
    9. 'for' → logprob: -15.259763717651367
    10. '       ' → logprob: -15.509763717651367

Token 937: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0046083685010671616
    2. '(C' → logprob: -5.879608154296875
    3. ' (' → logprob: -7.379608154296875
    4. '(B' → logprob: -7.629608154296875
    5. '(' → logprob: -8.129608154296875
    6. '(None' → logprob: -8.129608154296875
    7. '(G' → logprob: -10.629608154296875
    8. '(I' → logprob: -11.254608154296875
    9. '(a' → logprob: -11.504608154296875
    10. 'all' → logprob: -11.754608154296875

Token 938: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.6776029699249193e-05
    2. '(A' → logprob: -11.50002670288086
    3. ' A' → logprob: -12.00002670288086
    4. '[A' → logprob: -12.12502670288086
    5. 'G' → logprob: -13.50002670288086
    6. '(' → logprob: -13.75002670288086
    7. '[' → logprob: -14.37502670288086
    8. ')' → logprob: -14.62502670288086
    9. ''A' → logprob: -15.25002670288086
    10. 'val' → logprob: -15.25002670288086

Token 939: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.04926053062081337
    2. ',' → logprob: -3.0492606163024902
    3. ' ,' → logprob: -7.54926061630249
    4. 'D' → logprob: -9.549260139465332
    5. ',A' → logprob: -9.924260139465332
    6. ',G' → logprob: -11.924260139465332
    7. ',None' → logprob: -11.924260139465332
    8. ',d' → logprob: -13.174260139465332
    9. '_,' → logprob: -13.549260139465332
    10. ',
' → logprob: -14.049260139465332

Token 940: ',G' (ID: 66991)
  Prédit: ',G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',G' → logprob: -0.0006920627201907337
    2. ',' → logprob: -7.375691890716553
    3. 'G' → logprob: -10.500692367553711
    4. ')' → logprob: -11.000692367553711
    5. ' ,' → logprob: -11.625692367553711
    6. ',H' → logprob: -11.875692367553711
    7. 'and' → logprob: -13.250692367553711
    8. ',None' → logprob: -14.250692367553711
    9. ',g' → logprob: -14.625692367553711
    10. '),' → logprob: -15.125692367553711

Token 941: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005718595930375159
    2. ' )' → logprob: -8.125572204589844
    3. '):
' → logprob: -8.375572204589844
    4. '):' → logprob: -11.000572204589844
    5. 'and' → logprob: -11.625572204589844
    6. ',)' → logprob: -11.625572204589844
    7. ' and' → logprob: -12.625572204589844
    8. '):

' → logprob: -13.125572204589844
    9. '')' → logprob: -13.500572204589844
    10. ',' → logprob: -14.000572204589844

Token 942: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12729784846305847
    2. 'and' → logprob: -2.127297878265381
    3. '           ' → logprob: -8.377297401428223
    4. ':' → logprob: -9.877297401428223
    5. '       ' → logprob: -10.502297401428223
    6. ':
' → logprob: -10.752297401428223
    7. '          ' → logprob: -11.252297401428223
    8. '        ' → logprob: -12.127297401428223
    9. ' ' → logprob: -12.502297401428223
    10. '==' → logprob: -12.877297401428223

Token 943: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.28122225403785706
    2. ' carry' → logprob: -1.4062222242355347
    3. 'None' → logprob: -10.406222343444824
    4. 'G' → logprob: -11.406222343444824
    5. ' None' → logprob: -12.156222343444824
    6. ' ' → logprob: -12.406222343444824
    7. 'A' → logprob: -13.031222343444824
    8. ' (' → logprob: -13.031222343444824
    9. 'c' → logprob: -13.156222343444824
    10. ' all' → logprob: -13.156222343444824

Token 944: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3319124011322856e-05
    2. '1' → logprob: -10.750022888183594
    3. '```' → logprob: -15.000022888183594
    4. '   ' → logprob: -15.250022888183594
    5. ' is' → logprob: -15.875022888183594
    6. 'not' → logprob: -15.937522888183594
    7. 'is' → logprob: -16.312522888183594
    8. '!=' → logprob: -16.312522888183594
    9. ' ' → logprob: -16.687522888183594
    10. '_' → logprob: -16.812522888183594

Token 945: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3485317528247833
    2. 'is' → logprob: -1.223531723022461
    3. ' not' → logprob: -9.973531723022461
    4. 'not' → logprob: -10.348531723022461
    5. '==' → logprob: -12.723531723022461
    6. '!=' → logprob: -13.223531723022461
    7. ' !=' → logprob: -13.473531723022461
    8. ' ' → logprob: -13.973531723022461
    9. '	is' → logprob: -15.348531723022461
    10. '```' → logprob: -15.848531723022461

Token 946: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.14496202766895294
    2. ' not' → logprob: -2.6449620723724365
    3. 'None' → logprob: -2.7699620723724365
    4. ' None' → logprob: -6.769961833953857
    5. 'Not' → logprob: -9.894962310791016
    6. '   ' → logprob: -10.769962310791016
    7. 'none' → logprob: -11.019962310791016
    8. ' ' → logprob: -12.332462310791016
    9. '	not' → logprob: -12.394962310791016
    10. '0' → logprob: -12.957462310791016

Token 947: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5005173683166504
    2. 'None' → logprob: -1.0005173683166504
    3. ' not' → logprob: -3.7505173683166504
    4. ' None' → logprob: -6.00051736831665
    5. 'Not' → logprob: -10.500516891479492
    6. '   ' → logprob: -10.625516891479492
    7. '_None' → logprob: -10.875516891479492
    8. 'none' → logprob: -11.125516891479492
    9. '_not' → logprob: -11.625516891479492
    10. '_none' → logprob: -12.750516891479492

Token 948: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37968698143959045
    2. ':
' → logprob: -1.254686951637268
    3. '           ' → logprob: -3.7546870708465576
    4. ' and' → logprob: -5.1296868324279785
    5. '       ' → logprob: -6.8796868324279785
    6. 'and' → logprob: -8.379687309265137
    7. ',' → logprob: -9.754687309265137
    8. '):
' → logprob: -10.504687309265137
    9. ':

' → logprob: -11.254687309265137
    10. '          ' → logprob: -11.504687309265137

Token 949: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.384836888173595e-05
    2. '       ' → logprob: -9.8750638961792
    3. ' if' → logprob: -12.6250638961792
    4. '               ' → logprob: -13.2500638961792
    5. ':' → logprob: -13.5000638961792
    6. '	       ' → logprob: -13.8750638961792
    7. 'if' → logprob: -14.0000638961792
    8. '          ' → logprob: -14.0000638961792
    9. '   ' → logprob: -14.1250638961792
    10. '{
' → logprob: -14.6250638961792

Token 950: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40004217624664307
    2. 'if' (adapté à ' if') → logprob: -1.275042176246643
    3. ' if' → logprob: -3.2750420570373535
    4. '       ' → logprob: -4.4000420570373535
    5. '   ' → logprob: -9.650042533874512
    6. 'return' → logprob: -10.150042533874512
    7. '	if' → logprob: -10.775042533874512
    8. '               ' → logprob: -11.400042533874512
    9. ' ' → logprob: -11.900042533874512
    10. '```' → logprob: -11.900042533874512

Token 951: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.685814380645752
    2. 'None' → logprob: -1.810814380645752
    3. 'any' → logprob: -1.935814380645752
    4. 'G' → logprob: -3.060814380645752
    5. 'all' → logprob: -3.185814380645752
    6. '(A' → logprob: -3.310814380645752
    7. ' any' → logprob: -4.060814380645752
    8. ' A' → logprob: -4.560814380645752
    9. ' (' → logprob: -4.935814380645752
    10. 'val' → logprob: -5.435814380645752

Token 952: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5521037578582764
    2. ' is' → logprob: -1.3021037578582764
    3. 'is' → logprob: -1.9271037578582764
    4. ' +' → logprob: -5.5521039962768555
    5. '==' → logprob: -6.0521039962768555
    6. ' ' → logprob: -8.552103996276855
    7. 'or' → logprob: -9.552103996276855
    8. 'not' → logprob: -9.552103996276855
    9. '!=' → logprob: -9.927103996276855
    10. 'if' → logprob: -10.552103996276855

Token 953: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.038042180240154266
    2. ' D' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.663042068481445
    4. '   ' → logprob: -16.163042068481445
    5. '  ' → logprob: -17.163042068481445
    6. 'd' → logprob: -17.413042068481445
    7. '	D' → logprob: -17.413042068481445
    8. '
' → logprob: -17.788042068481445
    9. ' ' → logprob: -18.163042068481445
    10. '<|end|>' → logprob: -18.288042068481445

Token 954: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.523137629032135
    2. ' +' → logprob: -0.898137629032135
    3. '+c' → logprob: -12.523138046264648
    4. ' ' → logprob: -12.523138046264648
    5. ' is' → logprob: -13.523138046264648
    6. '   ' → logprob: -14.523138046264648
    7. '<|end|>' → logprob: -14.648138046264648
    8. '           ' → logprob: -14.773138046264648
    9. '+++' → logprob: -15.023138046264648
    10. '==' → logprob: -15.148138046264648

Token 955: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.0015024791937321424
    2. ' carry' → logprob: -6.501502513885498
    3. 'car' → logprob: -16.126502990722656
    4. 'Carry' → logprob: -18.501502990722656
    5. ' ' → logprob: -18.751502990722656
    6. 'c' → logprob: -19.001502990722656
    7. '1' → logprob: -19.251502990722656
    8. '   ' → logprob: -19.501502990722656
    9. 'None' → logprob: -20.001502990722656
    10. '0' → logprob: -20.501502990722656

Token 956: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. '1' → logprob: -13.50000286102295
    3. 'carry' → logprob: -14.12500286102295
    4. ' ' → logprob: -15.00000286102295
    5. '   ' → logprob: -15.12500286102295
    6. '```' → logprob: -16.375003814697266
    7. '_' → logprob: -16.500003814697266
    8. '
' → logprob: -17.750003814697266
    9. '       ' → logprob: -17.937503814697266
    10. '               ' → logprob: -18.000003814697266

Token 957: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0276867151260376
    2. '!=' → logprob: -1.0276867151260376
    3. ' !=' → logprob: -1.7776867151260376
    4. ' >' → logprob: -2.277686595916748
    5. ' not' → logprob: -5.402686595916748
    6. '<' → logprob: -5.777686595916748
    7. ' is' → logprob: -5.902686595916748
    8. ' <' → logprob: -6.277686595916748
    9. 'not' → logprob: -8.027687072753906
    10. ' ' → logprob: -9.402687072753906

Token 958: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0031777136027812958
    2. ' G' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.503177642822266
    4. '	G' → logprob: -18.253177642822266
    5. ' ' → logprob: -18.753177642822266
    6. '   ' → logprob: -18.878177642822266
    7. '_G' → logprob: -20.128177642822266
    8. 'Ｇ' → logprob: -20.253177642822266
    9. 'None' → logprob: -20.378177642822266
    10. '  ' → logprob: -20.378177642822266

Token 959: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1295596808195114
    2. '               ' → logprob: -2.2545597553253174
    3. ':' → logprob: -4.629559516906738
    4. '           ' → logprob: -5.129559516906738
    5. ':return' → logprob: -7.754559516906738
    6. '):
' → logprob: -8.629559516906738
    7. 'return' → logprob: -9.379559516906738
    8. ' and' → logprob: -10.379559516906738
    9. ' is' → logprob: -10.379559516906738
    10. '=False' → logprob: -10.629559516906738

Token 960: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001507405104348436
    2. 'return' → logprob: -9.875150680541992
    3. ' return' → logprob: -10.250150680541992
    4. '           ' → logprob: -10.250150680541992
    5. ':return' → logprob: -11.250150680541992
    6. 'False' → logprob: -11.500150680541992
    7. ' False' → logprob: -13.250150680541992
    8. ':' → logprob: -13.500150680541992
    9. '              ' → logprob: -14.000150680541992
    10. ':
' → logprob: -14.250150680541992

Token 961: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004649422597140074
    2. ' False' → logprob: -5.504649639129639
    3. 'return' (adapté à ' return') → logprob: -7.504649639129639
    4. ' return' → logprob: -11.37964916229248
    5. 'True' → logprob: -11.87964916229248
    6. '               ' → logprob: -14.12964916229248
    7. '           ' → logprob: -14.50464916229248
    8. 'false' → logprob: -16.379650115966797
    9. '=False' → logprob: -16.504650115966797
    10. '0' → logprob: -16.629650115966797

Token 962: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -8.73314929776825e-05
    2. ' False' → logprob: -9.37508773803711
    3. 'True' → logprob: -13.12508773803711
    4. '0' → logprob: -15.37508773803711
    5. 'None' → logprob: -15.75008773803711
    6. 'F' → logprob: -16.37508773803711
    7. 'val' → logprob: -17.50008773803711
    8. 'Val' → logprob: -19.37508773803711
    9. ' ' → logprob: -19.50008773803711
    10. 'false' → logprob: -19.62508773803711

Token 963: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016480287013109773
    2. 'return' → logprob: -9.250164985656738
    3. '
' → logprob: -10.125164985656738
    4. '           ' → logprob: -11.125164985656738
    5. ' return' → logprob: -12.250164985656738
    6. '   ' → logprob: -12.500164985656738
    7. '        
' → logprob: -13.125164985656738
    8. '<|end|>' → logprob: -13.125164985656738
    9. '               ' → logprob: -15.625164985656738
    10. '      ' → logprob: -15.625164985656738

Token 964: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004931025905534625
    2. '
' → logprob: -8.250493049621582
    3. 'return' → logprob: -8.875493049621582
    4. '        
' → logprob: -10.250493049621582
    5. '<|end|>' → logprob: -10.875493049621582
    6. '   ' → logprob: -11.000493049621582
    7. '    
' → logprob: -12.250493049621582
    8. '	' → logprob: -12.500493049621582
    9. ' return' → logprob: -12.750493049621582
    10. '\
' → logprob: -13.000493049621582

Token 965: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16085916757583618
    2. '       ' → logprob: -1.9108591079711914
    3. '
' → logprob: -7.660859107971191
    4. ' return' → logprob: -8.910859107971191
    5. '   ' → logprob: -10.535859107971191
    6. '	return' → logprob: -14.160859107971191
    7. '        
' → logprob: -14.285859107971191
    8. '{return' → logprob: -14.285859107971191
    9. '```' → logprob: -16.160860061645508
    10. '    
' → logprob: -16.410860061645508

Token 966: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00861456897109747
    2. ' True' → logprob: -4.758614540100098
    3. '(True' → logprob: -18.758615493774414
    4. 'False' → logprob: -20.508615493774414
    5. 'true' → logprob: -20.633615493774414
    6. 'None' → logprob: -21.508615493774414
    7. '   ' → logprob: -21.758615493774414
    8. ' ' → logprob: -22.508615493774414
    9. '  ' → logprob: -23.008615493774414
    10. ' ' → logprob: -24.508615493774414

Token 967: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6508641839027405
    2. '<|end|>' → logprob: -0.7758641839027405
    3. 'def' → logprob: -4.650864124298096
    4. '```' → logprob: -5.650864124298096
    5. '<|end|>' → logprob: -5.650864124298096
    6. '
' → logprob: -7.400864124298096
    7. '    
' → logprob: -7.525864124298096
    8. ' def' → logprob: -9.650864601135254
    9. '	def' → logprob: -10.150864601135254
    10. '.' → logprob: -10.275864601135254

Token 968: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08251915127038956
    2. '   ' → logprob: -2.707519054412842
    3. ' def' → logprob: -4.457519054412842
    4. '```' → logprob: -7.207519054412842
    5. '	def' → logprob: -8.95751953125
    6. '<|end|>' → logprob: -10.83251953125
    7. ':def' → logprob: -11.70751953125
    8. '    
' → logprob: -12.95751953125
    9. ' ' → logprob: -13.08251953125
    10. 'import' → logprob: -13.70751953125

Token 969: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0010466240346431732
    2. '   ' → logprob: -7.251046657562256
    3. ' def' → logprob: -8.001046180725098
    4. '	def' → logprob: -13.751046180725098
    5. '
' → logprob: -15.251046180725098
    6. '```' → logprob: -15.251046180725098
    7. '    
' → logprob: -17.251047134399414
    8. '  ' → logprob: -19.001047134399414
    9. ' ' → logprob: -19.251047134399414
    10. ':def' → logprob: -19.501047134399414

Token 970: ' is' (ID: 382)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0268180463463068
    2. ' solve' → logprob: -4.27681827545166
    3. 'back' → logprob: -5.15181827545166
    4. ' back' → logprob: -5.77681827545166
    5. 'search' → logprob: -5.77681827545166
    6. ' search' → logprob: -9.27681827545166
    7. 'def' → logprob: -9.40181827545166
    8. 'dfs' → logprob: -9.40181827545166
    9. 'is' → logprob: -9.52681827545166
    10. 'assign' → logprob: -9.77681827545166

Token 971: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.10309551656246185
    2. '_s' → logprob: -2.478095531463623
    3. '_complete' → logprob: -4.478095531463623
    4. '_cons' → logprob: -6.728095531463623
    5. '_ass' → logprob: -7.728095531463623
    6. '_f' → logprob: -7.853095531463623
    7. '_solution' → logprob: -8.228095054626465
    8. '_assignment' → logprob: -9.228095054626465
    9. '_possible' → logprob: -9.603095054626465
    10. '_safe' → logprob: -9.978095054626465

Token 972: '_assignment' (ID: 129834)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005288900341838598
    2. '(' → logprob: -5.255289077758789
    3. 'self' → logprob: -10.005289077758789
    4. '_cell' → logprob: -12.255289077758789
    5. '   ' → logprob: -13.255289077758789
    6. ' (' → logprob: -13.630289077758789
    7. '_' → logprob: -14.505289077758789
    8. '_(' → logprob: -14.505289077758789
    9. '_self' → logprob: -15.005289077758789
    10. ' ' → logprob: -15.130289077758789

Token 973: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011076593771576881
    2. '(' → logprob: -4.5110764503479
    3. ' (' → logprob: -10.886076927185059
    4. 'self' → logprob: -11.636076927185059
    5. '   ' → logprob: -14.636076927185059
    6. '(
' → logprob: -14.761076927185059
    7. ' ' → logprob: -15.511076927185059
    8. '       ' → logprob: -16.511075973510742
    9. ' self' → logprob: -17.386075973510742
    10. '(sel' → logprob: -17.386075973510742

Token 974: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023355303332209587
    2. 'self' → logprob: -3.77335524559021
    3. '):' → logprob: -10.023355484008789
    4. ' ,' → logprob: -10.898355484008789
    5. '   ' → logprob: -11.023355484008789
    6. ',self' → logprob: -11.273355484008789
    7. '(self' → logprob: -11.523355484008789
    8. ')' → logprob: -12.898355484008789
    9. '       ' → logprob: -13.273355484008789
    10. ',
' → logprob: -14.398355484008789

Token 975: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008403576212003827
    2. 'self' → logprob: -7.625840187072754
    3. '(' → logprob: -8.125840187072754
    4. '       ' → logprob: -10.250840187072754
    5. '   ' → logprob: -11.250840187072754
    6. ' self' → logprob: -12.625840187072754
    7. ':' → logprob: -13.750840187072754
    8. ' (' → logprob: -14.000840187072754
    9. '(
' → logprob: -14.375840187072754
    10. '	self' → logprob: -14.500840187072754

Token 976: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.001503790495917201
    2. ' bool' → logprob: -6.501503944396973
    3. '   ' → logprob: -13.626503944396973
    4. ' ' → logprob: -15.626503944396973
    5. '	bool' → logprob: -16.751502990722656
    6. '  ' → logprob: -17.751502990722656
    7. '<bool' → logprob: -18.001502990722656
    8. '(bool' → logprob: -18.501502990722656
    9. '    ' → logprob: -18.751502990722656
    10. ')' → logprob: -19.126502990722656

Token 977: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09884639084339142
    2. ':
' → logprob: -2.973846435546875
    3. '       ' → logprob: -3.223846435546875
    4. '(self' → logprob: -6.348846435546875
    5. '   ' → logprob: -7.098846435546875
    6. '):
' → logprob: -8.723846435546875
    7. '):' → logprob: -9.098846435546875
    8. '(' → logprob: -9.098846435546875
    9. '():
' → logprob: -9.723846435546875
    10. '():' → logprob: -10.223846435546875

Token 978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.484132169745862e-05
    2. '
' → logprob: -10.125094413757324
    3. '        
' → logprob: -10.250094413757324
    4. ' return' → logprob: -11.875094413757324
    5. '```' → logprob: -12.625094413757324
    6. 'return' → logprob: -12.750094413757324
    7. '    
' → logprob: -13.125094413757324
    8. '   ' → logprob: -13.500094413757324
    9. ' 
' → logprob: -14.000094413757324
    10. '<|end|>' → logprob: -14.500094413757324

Token 979: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4571388363838196
    2. '       ' → logprob: -1.7071387767791748
    3. 'if' (adapté à ' if') → logprob: -1.7071387767791748
    4. ' if' → logprob: -5.832139015197754
    5. ' return' → logprob: -6.832139015197754
    6. 'self' → logprob: -9.082139015197754
    7. '#' → logprob: -11.457139015197754
    8. '   ' → logprob: -13.332139015197754
    9. 'for' → logprob: -13.457139015197754
    10. '
' → logprob: -14.832139015197754

Token 980: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10024140775203705
    2. ' not' → logprob: -2.3502414226531982
    3. '   ' → logprob: -10.350241661071777
    4. '(not' → logprob: -13.475241661071777
    5. '	not' → logprob: -14.225241661071777
    6. ' ' → logprob: -15.350241661071777
    7. '       ' → logprob: -15.850241661071777
    8. '    ' → logprob: -15.975241661071777
    9. '  ' → logprob: -16.85024070739746
    10. '     ' → logprob: -17.47524070739746

Token 981: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.7697225252486533e-06
    2. '(self' → logprob: -12.875003814697266
    3. ' self' → logprob: -13.750003814697266
    4. '
' → logprob: -18.375003814697266
    5. '(' → logprob: -19.500003814697266
    6. 'all' → logprob: -20.500003814697266
    7. '	self' → logprob: -20.875003814697266
    8. '   ' → logprob: -21.250003814697266
    9. ' (' → logprob: -22.500003814697266
    10. '[self' → logprob: -22.750003814697266

Token 982: '.check' (ID: 12631)
  Prédit: '.check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.check' → logprob: -0.029786361381411552
    2. 'check' → logprob: -3.5297863483428955
    3. '.' → logprob: -10.404786109924316
    4. '   ' → logprob: -12.654786109924316
    5. ').' → logprob: -14.029786109924316
    6. '.update' → logprob: -14.529786109924316
    7. ' .' → logprob: -14.904786109924316
    8. ' check' → logprob: -15.029786109924316
    9. '	check' → logprob: -16.404787063598633
    10. '       ' → logprob: -16.529787063598633

Token 983: '_unique' (ID: 51840)
  Prédit: '_unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unique' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -13.625000953674316
    3. '_uni' → logprob: -17.250001907348633
    4. ' _' → logprob: -19.250001907348633
    5. '_valid' → logprob: -20.875001907348633
    6. 'unique' → logprob: -20.875001907348633
    7. ' unique' → logprob: -21.125001907348633
    8. '__' → logprob: -21.125001907348633
    9. 'Unique' → logprob: -21.375001907348633
    10. '_uniform' → logprob: -21.625001907348633

Token 984: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -9.13388703338569e-06
    2. 'digits' → logprob: -12.250009536743164
    3. '_chars' → logprob: -13.125009536743164
    4. '_' → logprob: -13.250009536743164
    5. 'Digits' → logprob: -15.250009536743164
    6. '```' → logprob: -15.875009536743164
    7. ' digits' → logprob: -17.125009536743164
    8. ' _' → logprob: -17.250009536743164
    9. 's' → logprob: -17.625009536743164
    10. '_tokens' → logprob: -17.750009536743164

Token 985: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04891560226678848
    2. '():
' → logprob: -3.0489156246185303
    3. '()' → logprob: -8.04891586303711
    4. '():
' → logprob: -11.67391586303711
    5. ' ():' → logprob: -15.54891586303711
    6. '():

' → logprob: -16.67391586303711
    7. '()
' → logprob: -17.54891586303711
    8. '(' → logprob: -19.17391586303711
    9. '().' → logprob: -19.42391586303711
    10. '()`' → logprob: -19.42391586303711

Token 986: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006459324155002832
    2. '       ' → logprob: -5.1314592361450195
    3. ' return' → logprob: -8.38145923614502
    4. ' or' → logprob: -9.13145923614502
    5. 'return' → logprob: -9.25645923614502
    6. ':return' → logprob: -10.25645923614502
    7. ':
' → logprob: -10.88145923614502
    8. ':' → logprob: -11.25645923614502
    9. '   ' → logprob: -11.75645923614502
    10. '               ' → logprob: -12.00645923614502

Token 987: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4071817696094513
    2. '           ' → logprob: -1.157181739807129
    3. ' return' → logprob: -3.907181739807129
    4. '
' → logprob: -11.907181739807129
    5. '   ' → logprob: -14.032181739807129
    6. '	return' → logprob: -14.907181739807129
    7. '               ' → logprob: -15.032181739807129
    8. '{return' → logprob: -15.532181739807129
    9. '       ' → logprob: -15.907181739807129
    10. ':return' → logprob: -16.032182693481445

Token 988: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.7697225252486533e-06
    2. ' False' → logprob: -12.500003814697266
    3. '(False' → logprob: -19.375003814697266
    4. 'false' → logprob: -20.375003814697266
    5. '_false' → logprob: -22.250003814697266
    6. '=False' → logprob: -22.625003814697266
    7. 'True' → logprob: -23.500003814697266
    8. '
' → logprob: -24.000003814697266
    9. 'FALSE' → logprob: -24.750003814697266
    10. '.False' → logprob: -25.125003814697266

Token 989: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2113979209971149e-05
    2. '<|end|>' → logprob: -12.625012397766113
    3. '
' → logprob: -12.750012397766113
    4. 'if' → logprob: -13.000012397766113
    5. 'return' → logprob: -14.000012397766113
    6. ',' → logprob: -14.125012397766113
    7. ' if' → logprob: -14.625012397766113
    8. '```' → logprob: -14.625012397766113
    9. '   ' → logprob: -14.875012397766113
    10. '           ' → logprob: -15.250012397766113

Token 990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.1008713702030946e-06
    2. 'if' → logprob: -14.250001907348633
    3. 'return' → logprob: -14.875001907348633
    4. '
' → logprob: -15.000001907348633
    5. '   ' → logprob: -15.000001907348633
    6. '           ' → logprob: -15.750001907348633
    7. ' if' → logprob: -16.375001907348633
    8. '<|end|>' → logprob: -16.625001907348633
    9. '        
' → logprob: -16.875001907348633
    10. '```' → logprob: -17.375001907348633

Token 991: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5939228534698486
    2. 'if' (adapté à ' if') → logprob: -0.8439228534698486
    3. ' if' → logprob: -4.3439226150512695
    4. 'return' → logprob: -5.3439226150512695
    5. ' return' → logprob: -10.21892261505127
    6. '   ' → logprob: -10.71892261505127
    7. '
' → logprob: -14.09392261505127
    8. '      ' → logprob: -15.71892261505127
    9. '        
' → logprob: -16.218923568725586
    10. ' ' → logprob: -16.468923568725586

Token 992: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5759905576705933
    2. 'not' → logprob: -0.8259905576705933
    3. '       ' → logprob: -10.575990676879883
    4. '   ' → logprob: -10.950990676879883
    5. '           ' → logprob: -12.325990676879883
    6. '(not' → logprob: -13.825990676879883
    7. '
' → logprob: -14.200990676879883
    8. 'self' → logprob: -14.200990676879883
    9. '	not' → logprob: -14.325990676879883
    10. ' ' → logprob: -15.450990676879883

Token 993: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018151231110095978
    2. ' self' → logprob: -4.01815128326416
    3. '(self' → logprob: -14.14315128326416
    4. '       ' → logprob: -15.01815128326416
    5. '
' → logprob: -16.018150329589844
    6. '   ' → logprob: -17.018150329589844
    7. ' ' → logprob: -17.143150329589844
    8. '[self' → logprob: -17.643150329589844
    9. ' ' → logprob: -17.643150329589844
    10. '	self' → logprob: -18.268150329589844

Token 994: '.ar' (ID: 30683)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.6933465003967285
    2. '.ar' → logprob: -0.6933465003967285
    3. 'arith' → logprob: -8.69334602355957
    4. '_ar' → logprob: -11.81834602355957
    5. '	ar' → logprob: -11.94334602355957
    6. '.arch' → logprob: -12.56834602355957
    7. '$ar' → logprob: -12.69334602355957
    8. ' .' → logprob: -12.81834602355957
    9. ' arithmetic' → logprob: -12.81834602355957
    10. ' ar' → logprob: -13.56834602355957

Token 995: 'ithmetic' (ID: 51073)
  Prédit: 'ithmetic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ithmetic' → logprob: -1.4855663721391466e-05
    2. 'ith' → logprob: -11.125015258789062
    3. 'it' → logprob: -17.625015258789062
    4. 'th' → logprob: -18.750015258789062
    5. '```' → logprob: -19.250015258789062
    6. 'Arithmetic' → logprob: -19.250015258789062
    7. '   ' → logprob: -19.375015258789062
    8. '_' → logprob: -19.375015258789062
    9. 'ithe' → logprob: -19.500015258789062
    10. 'bitrary' → logprob: -19.625015258789062

Token 996: '_constraints' (ID: 153522)
  Prédit: '_constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_constraints' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.500000953674316
    3. 'constraints' → logprob: -16.0
    4. '_conditions' → logprob: -16.375
    5. '_constraint' → logprob: -17.25
    6. '\' → logprob: -17.75
    7. 'Constraints' → logprob: -17.75
    8. '
' → logprob: -18.0
    9. '_const' → logprob: -18.125
    10. '_cons' → logprob: -18.125

Token 997: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -5.228561349213123e-05
    2. 'valid' → logprob: -9.875052452087402
    3. 'Valid' → logprob: -14.125052452087402
    4. '```' → logprob: -17.625051498413086
    5. '   ' → logprob: -18.750051498413086
    6. 's' → logprob: -19.000051498413086
    7. '
' → logprob: -19.125051498413086
    8. '	valid' → logprob: -19.125051498413086
    9. '.valid' → logprob: -19.500051498413086
    10. ' valid' → logprob: -19.625051498413086

Token 998: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10127393901348114
    2. '():
' → logprob: -2.351274013519287
    3. '()' → logprob: -6.851274013519287
    4. '():
' → logprob: -12.101273536682129
    5. ' ():' → logprob: -13.101273536682129
    6. '()):
' → logprob: -14.851273536682129
    7. '()
' → logprob: -15.226273536682129
    8. '():

' → logprob: -15.726273536682129
    9. '()`' → logprob: -16.476274490356445
    10. '(' → logprob: -16.851274490356445

Token 999: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008086714660748839
    2. 'return' → logprob: -7.8758087158203125
    3. ' return' → logprob: -8.500808715820312
    4. '       ' → logprob: -8.625808715820312
    5. ':return' → logprob: -11.500808715820312
    6. ':
' → logprob: -11.750808715820312
    7. ':' → logprob: -11.875808715820312
    8. '
' → logprob: -12.625808715820312
    9. '   ' → logprob: -12.875808715820312
    10. 'True' → logprob: -13.250808715820312

Token 1000: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47765570878982544
    2. '           ' → logprob: -0.9776557087898254
    3. '
' → logprob: -6.22765588760376
    4. ' return' → logprob: -6.47765588760376
    5. '       ' → logprob: -10.977655410766602
    6. '   ' → logprob: -11.102655410766602
    7. '               ' → logprob: -11.477655410766602
    8. 'False' → logprob: -11.477655410766602
    9. 'True' → logprob: -12.477655410766602
    10. '	return' → logprob: -13.852655410766602

Token 1001: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.339278580620885e-06
    2. ' False' → logprob: -13.000001907348633
    3. 'True' → logprob: -19.500001907348633
    4. '(False' → logprob: -21.750001907348633
    5. 'false' → logprob: -23.875001907348633
    6. '=False' → logprob: -24.375001907348633
    7. '   ' → logprob: -24.750001907348633
    8. '_false' → logprob: -24.875001907348633
    9. '
' → logprob: -26.375001907348633
    10. 'F' → logprob: -27.125001907348633

Token 1002: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008725132793188095
    2. '
' → logprob: -7.125872611999512
    3. '<|end|>' → logprob: -10.875872611999512
    4. 'return' → logprob: -11.250872611999512
    5. '        
' → logprob: -11.375872611999512
    6. '	' → logprob: -11.500872611999512
    7. '   ' → logprob: -12.125872611999512
    8. '  
' → logprob: -13.250872611999512
    9. ' return' → logprob: -13.500872611999512
    10. '    
' → logprob: -13.500872611999512

Token 1003: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020747410599142313
    2. '
' → logprob: -9.000207901000977
    3. '   ' → logprob: -9.750207901000977
    4. 'return' → logprob: -10.625207901000977
    5. '        
' → logprob: -14.500207901000977
    6. '           ' → logprob: -15.000207901000977
    7. ' return' → logprob: -15.125207901000977
    8. '    
' → logprob: -15.250207901000977
    9. '	' → logprob: -18.250207901000977
    10. '  
' → logprob: -18.375207901000977

Token 1004: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38701027631759644
    2. '       ' → logprob: -1.1370103359222412
    3. ' return' → logprob: -9.01201057434082
    4. '   ' → logprob: -11.38701057434082
    5. '
' → logprob: -12.13701057434082
    6. '	return' → logprob: -14.63701057434082
    7. '        
' → logprob: -16.63701057434082
    8. '           ' → logprob: -17.13701057434082
    9. '{return' → logprob: -17.51201057434082
    10. 'Return' → logprob: -17.76201057434082

Token 1005: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. '   ' → logprob: -20.501928329467773
    4. 'self' → logprob: -21.501928329467773
    5. '       ' → logprob: -21.501928329467773
    6. '(True' → logprob: -21.751928329467773
    7. 'true' → logprob: -22.126928329467773
    8. 'False' → logprob: -24.376928329467773
    9. '=True' → logprob: -25.501928329467773
    10. '           ' → logprob: -27.001928329467773

Token 1006: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1228593960404396
    2. '
' → logprob: -2.372859477996826
    3. '<|end|>' → logprob: -4.747859477996826
    4. ' def' → logprob: -5.122859477996826
    5. 'def' → logprob: -5.622859477996826
    6. '    
' → logprob: -6.122859477996826
    7. '```' → logprob: -6.622859477996826
    8. '<|end|>' → logprob: -7.872859477996826
    9. '  
' → logprob: -9.497859001159668
    10. ' 
' → logprob: -9.747859001159668

Token 1007: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055925652384757996
    2. ' def' → logprob: -3.3059256076812744
    3. 'def' → logprob: -4.0559258460998535
    4. '```' → logprob: -8.305925369262695
    5. '	def' → logprob: -9.430925369262695
    6. '<|end|>' → logprob: -9.930925369262695
    7. '    
' → logprob: -11.430925369262695
    8. '
' → logprob: -12.430925369262695
    9. '<|end|>' → logprob: -13.180925369262695
    10. ',' → logprob: -13.305925369262695

Token 1008: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0012690435396507382
    2. ' def' → logprob: -7.0012688636779785
    3. '   ' → logprob: -8.001269340515137
    4. '
' → logprob: -11.001269340515137
    5. '```' → logprob: -12.626269340515137
    6. '	def' → logprob: -13.001269340515137
    7. 'from' → logprob: -17.00126838684082
    8. '    
' → logprob: -17.12626838684082
    9. 'import' → logprob: -17.87626838684082
    10. '  ' → logprob: -18.00126838684082

Token 1009: ' get' (ID: 717)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.03918992727994919
    2. 'back' → logprob: -4.03918981552124
    3. ' solve' → logprob: -4.66418981552124
    4. 'search' → logprob: -4.78918981552124
    5. ' back' → logprob: -6.16418981552124
    6. 'assign' → logprob: -8.039190292358398
    7. 'find' → logprob: -8.914190292358398
    8. '_back' → logprob: -9.164190292358398
    9. 'possible' → logprob: -9.414190292358398
    10. ' search' → logprob: -9.789190292358398

Token 1010: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -0.04985203221440315
    2. '_next' → logprob: -3.049852132797241
    3. ' un' → logprob: -7.049851894378662
    4. 'un' → logprob: -8.42485237121582
    5. '_uns' → logprob: -9.17485237121582
    6. 'next' → logprob: -10.79985237121582
    7. '_cells' → logprob: -10.92485237121582
    8. '_empty' → logprob: -11.17485237121582
    9. ' next' → logprob: -12.04985237121582
    10. '_possible' → logprob: -12.54985237121582

Token 1011: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -1.9361264946837764e-07
    2. ' assigned' → logprob: -17.125
    3. 'assign' → logprob: -17.75
    4. '```' → logprob: -17.875
    5. 'Assigned' → logprob: -18.25
    6. 'used' → logprob: -19.125
    7. 'finished' → logprob: -19.5
    8. 'filled' → logprob: -19.5
    9. '_' → logprob: -19.5
    10. 'resolved' → logprob: -19.625

Token 1012: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.313273549079895
    2. '_cells' → logprob: -1.313273549079895
    3. 'cell' → logprob: -12.063273429870605
    4. '_name' → logprob: -13.438273429870605
    5. '_Cell' → logprob: -13.813273429870605
    6. ' cell' → logprob: -14.188273429870605
    7. 'cells' → logprob: -14.438273429870605
    8. '_' → logprob: -14.563273429870605
    9. '<Cell' → logprob: -14.938273429870605
    10. '_CELL' → logprob: -15.063273429870605

Token 1013: '_with' (ID: 14161)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04026811569929123
    2. 's' → logprob: -4.0402679443359375
    3. '()' → logprob: -4.1652679443359375
    4. '_name' → logprob: -5.2902679443359375
    5. '_names' → logprob: -7.0402679443359375
    6. 'self' → logprob: -8.290267944335938
    7. 'name' → logprob: -9.665267944335938
    8. '(' → logprob: -9.790267944335938
    9. 'names' → logprob: -10.915267944335938
    10. 'Name' → logprob: -11.665267944335938

Token 1014: '_f' (ID: 1337)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.4955826699733734
    2. '_possible' → logprob: -1.3705826997756958
    3. 'least' → logprob: -2.3705825805664062
    4. 'few' → logprob: -3.6205825805664062
    5. 'lowest' → logprob: -5.245582580566406
    6. '_min' → logprob: -6.370582580566406
    7. 'minimal' → logprob: -6.495582580566406
    8. 'small' → logprob: -6.745582580566406
    9. '```' → logprob: -6.745582580566406
    10. 'minimum' → logprob: -6.745582580566406

Token 1015: 'ew' (ID: 937)
  Prédit: 'ew'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -6.229872087715194e-05
    2. 'ewer' → logprob: -10.000061988830566
    3. 'e' → logprob: -11.250061988830566
    4. ' ew' → logprob: -13.250061988830566
    5. 'ews' → logprob: -13.750061988830566
    6. 'EW' → logprob: -15.125061988830566
    7. 'least' → logprob: -15.125061988830566
    8. 'irst' → logprob: -16.125062942504883
    9. 'east' → logprob: -16.125062942504883
    10. 'or' → logprob: -16.375062942504883

Token 1016: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.006646806839853525
    2. '_possible' → logprob: -5.256646633148193
    3. 'possible' → logprob: -6.881646633148193
    4. 'er' → logprob: -7.881646633148193
    5. 'Possible' → logprob: -12.381647109985352
    6. ' possible' → logprob: -13.381647109985352
    7. 'e' → logprob: -14.881647109985352
    8. 'set' → logprob: -15.006647109985352
    9. '_tokens' → logprob: -15.006647109985352
    10. '_est' → logprob: -15.006647109985352

Token 1017: '_pos' (ID: 14692)
  Prédit: '_possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.0006210576975718141
    2. 'possible' → logprob: -8.12562084197998
    3. '_values' → logprob: -8.62562084197998
    4. '_pos' → logprob: -9.00062084197998
    5. '_candidates' → logprob: -11.62562084197998
    6. '```' → logprob: -12.25062084197998
    7. 'pos' → logprob: -12.50062084197998
    8. 'Possible' → logprob: -13.75062084197998
    9. '_options' → logprob: -14.12562084197998
    10. '_value' → logprob: -14.75062084197998

Token 1018: 's' (ID: 82)
  Prédit: 'sible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -0.005234594456851482
    2. 's' → logprob: -5.255234718322754
    3. 'sib' → logprob: -14.755234718322754
    4. 'ibilities' → logprob: -15.630234718322754
    5. 'ible' → logprob: -17.005233764648438
    6. '```' → logprob: -17.380233764648438
    7. 'possible' → logprob: -17.505233764648438
    8. '_values' → logprob: -17.505233764648438
    9. 'values' → logprob: -17.755233764648438
    10. 'ss' → logprob: -18.255233764648438

Token 1019: 'ibilities' (ID: 25632)
  Prédit: 'ible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.029785210266709328
    2. 'ibilities' → logprob: -3.52978515625
    3. 'ibles' → logprob: -11.15478515625
    4. 'ibile' → logprob: -11.65478515625
    5. 'sible' → logprob: -12.52978515625
    6. 'ibility' → logprob: -13.15478515625
    7. 'ib' → logprob: -13.40478515625
    8. 'ibil' → logprob: -13.40478515625
    9. '_values' → logprob: -13.90478515625
    10. 'ibl' → logprob: -14.27978515625

Token 1020: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007267289329320192
    2. '(' → logprob: -7.375726699829102
    3. 'self' → logprob: -9.250726699829102
    4. ' (' → logprob: -13.750726699829102
    5. 's' → logprob: -14.125726699829102
    6. '(
' → logprob: -14.250726699829102
    7. '   ' → logprob: -14.625726699829102
    8. 'def' → logprob: -14.875726699829102
    9. ' self' → logprob: -15.375726699829102
    10. '	self' → logprob: -16.0007266998291

Token 1021: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48911622166633606
    2. ')' → logprob: -1.1141161918640137
    3. '):
' → logprob: -2.9891161918640137
    4. '():' → logprob: -5.489116191864014
    5. '()' → logprob: -6.739116191864014
    6. '():
' → logprob: -7.239116191864014
    7. 'self' → logprob: -7.739116191864014
    8. '(self' → logprob: -7.739116191864014
    9. ' ):' → logprob: -8.489116668701172
    10. ').' → logprob: -8.864116668701172

Token 1022: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012190054985694587
    2. '(' → logprob: -9.3751220703125
    3. 'self' → logprob: -10.3751220703125
    4. ' (' → logprob: -13.2501220703125
    5. ' self' → logprob: -14.1251220703125
    6. '	self' → logprob: -14.2501220703125
    7. '   ' → logprob: -14.5001220703125
    8. '(
' → logprob: -14.6251220703125
    9. '(Self' → logprob: -14.8751220703125
    10. '       ' → logprob: -15.3751220703125

Token 1023: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.6030586957931519
    2. 'None' → logprob: -1.2280586957931519
    3. 'Optional' → logprob: -2.1030588150024414
    4. 'Tuple' → logprob: -3.7280588150024414
    5. 'cell' → logprob: -5.228058815002441
    6. 'List' → logprob: -5.978058815002441
    7. 'def' → logprob: -6.103058815002441
    8. 'Set' → logprob: -6.728058815002441
    9. 'Union' → logprob: -6.978058815002441
    10. 'Option' → logprob: -7.978058815002441

Token 1024: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0051062689162790775
    2. '       ' → logprob: -6.255106449127197
    3. '(
' → logprob: -6.630106449127197
    4. ':
' → logprob: -7.380106449127197
    5. '(' → logprob: -7.755106449127197
    6. ':' → logprob: -8.130105972290039
    7. '   ' → logprob: -8.255105972290039
    8. 'self' → logprob: -8.505105972290039
    9. ' (' → logprob: -11.255105972290039
    10. ' self' → logprob: -12.005105972290039

Token 1025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005791273433715105
    2. ' cells' → logprob: -8.500578880310059
    3. ' for' → logprob: -8.625578880310059
    4. '
' → logprob: -9.500578880310059
    5. 'cells' → logprob: -9.750578880310059
    6. ' candidates' → logprob: -11.000578880310059
    7. '```' → logprob: -11.500578880310059
    8. 'for' → logprob: -12.125578880310059
    9. '   ' → logprob: -12.125578880310059
    10. 'min' → logprob: -12.500578880310059

Token 1026: ' #' (ID: 1069)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5657474994659424
    2. 'min' → logprob: -1.0657474994659424
    3. 'best' → logprob: -3.0657474994659424
    4. '       ' → logprob: -4.315747261047363
    5. ' min' → logprob: -4.690747261047363
    6. 'cells' → logprob: -5.440747261047363
    7. '   ' → logprob: -5.690747261047363
    8. 'cell' → logprob: -5.690747261047363
    9. ' best' → logprob: -6.315747261047363
    10. ' un' → logprob: -6.440747261047363

Token 1027: ' He' (ID: 1679)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.1732454150915146
    2. 'c' → logprob: -2.673245429992676
    3. 'cells' → logprob: -2.798245429992676
    4. 'best' → logprob: -4.048245429992676
    5. 'min' → logprob: -4.923245429992676
    6. 'filtered' → logprob: -7.173245429992676
    7. '   ' → logprob: -7.423245429992676
    8. '       ' → logprob: -7.423245429992676
    9. 'assigned' → logprob: -7.923245429992676
    10. 'return' → logprob: -8.423245429992676

Token 1028: 'uristic' (ID: 92961)
  Prédit: 'lp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lp' → logprob: -0.23415067791938782
    2. 'ap' → logprob: -2.8591506481170654
    3. 'def' → logprob: -3.1091506481170654
    4. 'ad' → logprob: -3.1091506481170654
    5. 'l' → logprob: -3.9841506481170654
    6. 'ur' → logprob: -4.6091508865356445
    7. 'uristic' → logprob: -4.7341508865356445
    8. 'app' → logprob: -4.9841508865356445
    9. 'ight' → logprob: -5.1091508865356445
    10. 'return' → logprob: -5.4841508865356445

Token 1029: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21643011271953583
    2. ' cell' → logprob: -3.091430187225342
    3. 'cell' → logprob: -3.466430187225342
    4. 'un' → logprob: -3.466430187225342
    5. 'min' → logprob: -3.966430187225342
    6. ' un' → logprob: -4.216430187225342
    7. 'best' → logprob: -4.591430187225342
    8. ' min' → logprob: -4.591430187225342
    9. 'return' → logprob: -4.716430187225342
    10. 'cells' → logprob: -4.841430187225342

Token 1030: ' choose' (ID: 5655)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5311176180839539
    2. 'un' → logprob: -1.4061176776885986
    3. 'best' → logprob: -2.9061176776885986
    4. ' min' → logprob: -2.9061176776885986
    5. '       ' → logprob: -4.1561174392700195
    6. 'c' → logprob: -4.5311174392700195
    7. ' best' → logprob: -4.6561174392700195
    8. 'cells' → logprob: -4.6561174392700195
    9. 'return' → logprob: -5.2811174392700195
    10. ' un' → logprob: -5.9061174392700195

Token 1031: ' un' (ID: 537)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.3552126884460449
    2. ' cell' → logprob: -1.855212688446045
    3. 'min' → logprob: -2.230212688446045
    4. ' min' → logprob: -3.980212688446045
    5. '   ' → logprob: -4.980212688446045
    6. 'c' → logprob: -5.605212688446045
    7. 'next' → logprob: -6.605212688446045
    8. '       ' → logprob: -6.730212688446045
    9. ' next' → logprob: -7.105212688446045
    10. 'un' → logprob: -7.355212688446045

Token 1032: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -6.670925358776003e-05
    2. '   ' → logprob: -10.375066757202148
    3. ' assigned' → logprob: -10.750066757202148
    4. '_ass' → logprob: -12.000066757202148
    5. '       ' → logprob: -12.375066757202148
    6. '_' → logprob: -13.000066757202148
    7. '```' → logprob: -14.625066757202148
    8. 'assign' → logprob: -15.125066757202148
    9. '           ' → logprob: -15.250066757202148
    10. 'ass' → logprob: -16.37506675720215

Token 1033: ' cell' (ID: 4206)
  Prédit: ' cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.6988584399223328
    2. 'cell' → logprob: -0.6988584399223328
    3. '_cell' → logprob: -5.323858261108398
    4. '   ' → logprob: -8.073858261108398
    5. '       ' → logprob: -8.698858261108398
    6. ' cells' → logprob: -9.948858261108398
    7. '	cell' → logprob: -10.073858261108398
    8. '_cells' → logprob: -10.073858261108398
    9. 'c' → logprob: -10.198858261108398
    10. ' =' → logprob: -10.198858261108398

Token 1034: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.05403401330113411
    2. 'with' → logprob: -3.5540339946746826
    3. '       ' → logprob: -5.429034233093262
    4. ' for' → logprob: -5.679034233093262
    5. '_with' → logprob: -5.929034233093262
    6. ' if' → logprob: -6.054034233093262
    7. ' that' → logprob: -6.429034233093262
    8. ' in' → logprob: -6.679034233093262
    9. '   ' → logprob: -6.679034233093262
    10. ' =' → logprob: -7.054034233093262

Token 1035: ' least' (ID: 5153)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8473987579345703
    2. ' minimal' → logprob: -1.4723987579345703
    3. ' smallest' → logprob: -2.2223987579345703
    4. ' possible' → logprob: -2.5973987579345703
    5. 'minimal' → logprob: -3.2223987579345703
    6. ' the' → logprob: -3.4723987579345703
    7. ' minimum' → logprob: -3.9723987579345703
    8. 'minimum' → logprob: -3.9723987579345703
    9. 'min' → logprob: -4.09739875793457
    10. 'least' → logprob: -4.84739875793457

Token 1036: ' candidates' (ID: 18116)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.4562937319278717
    2. '_possible' → logprob: -1.3312937021255493
    3. 'possible' → logprob: -2.331293821334839
    4. ' number' → logprob: -5.95629358291626
    5. ' _' → logprob: -7.33129358291626
    6. ' space' → logprob: -7.58129358291626
    7. '_' → logprob: -7.58129358291626
    8. '   ' → logprob: -8.956294059753418
    9. 'space' → logprob: -8.956294059753418
    10. '_pos' → logprob: -9.581294059753418

Token 1037: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8833798170089722
    2. '()' → logprob: -1.1333798170089722
    3. '()
' → logprob: -1.6333798170089722
    4. 'cell' → logprob: -4.383379936218262
    5. '():' → logprob: -4.508379936218262
    6. 'return' → logprob: -4.758379936218262
    7. '   ' → logprob: -5.133379936218262
    8. '(' → logprob: -5.508379936218262
    9. '():
' → logprob: -5.633379936218262
    10. '(self' → logprob: -5.883379936218262

Token 1038: ' reduce' (ID: 10389)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03460424020886421
    2. 'cell' → logprob: -3.78460431098938
    3. ' min' → logprob: -5.034604072570801
    4. '
' → logprob: -6.659604072570801
    5. '   ' → logprob: -6.659604072570801
    6. ' cell' → logprob: -7.659604072570801
    7. 'return' → logprob: -7.784604072570801
    8. 'possible' → logprob: -8.1596040725708
    9. '```' → logprob: -8.4096040725708
    10. 'sorted' → logprob: -8.6596040725708

Token 1039: ' branching' (ID: 173776)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.9601535201072693
    2. ' search' → logprob: -1.210153579711914
    3. ' branching' → logprob: -2.210153579711914
    4. ' back' → logprob: -2.710153579711914
    5. 'back' → logprob: -3.210153579711914
    6. '   ' → logprob: -3.210153579711914
    7. 'branch' → logprob: -3.585153579711914
    8. ' branches' → logprob: -4.335153579711914
    9. 'branches' → logprob: -5.335153579711914
    10. ' code' → logprob: -5.835153579711914

Token 1040: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06961992383003235
    2. '()
' → logprob: -3.31961989402771
    3. 'cell' → logprob: -4.819620132446289
    4. '   ' → logprob: -5.069620132446289
    5. '
' → logprob: -5.069620132446289
    6. '        
' → logprob: -5.819620132446289
    7. 'def' → logprob: -6.694620132446289
    8. '(' → logprob: -6.944620132446289
    9. 'for' → logprob: -7.444620132446289
    10. '(self' → logprob: -7.444620132446289

Token 1041: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009582077153027058
    2. '
' → logprob: -5.134582042694092
    3. '        
' → logprob: -6.884582042694092
    4. '   ' → logprob: -7.259582042694092
    5. '```' → logprob: -7.884582042694092
    6. 'cells' → logprob: -8.50958251953125
    7. 'for' → logprob: -8.63458251953125
    8. 'min' → logprob: -9.00958251953125
    9. '    
' → logprob: -9.25958251953125
    10. ' for' → logprob: -9.25958251953125

Token 1042: ' candidates' (ID: 18116)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.0862958431243896
    2. '       ' → logprob: -1.2112958431243896
    3. 'cells' → logprob: -1.8362958431243896
    4. 'min' → logprob: -2.5862958431243896
    5. ' un' → logprob: -3.3362958431243896
    6. ' cells' → logprob: -3.8362958431243896
    7. 'c' → logprob: -4.086296081542969
    8. ' min' → logprob: -4.211296081542969
    9. 'best' → logprob: -4.211296081542969
    10. 'return' → logprob: -4.711296081542969

Token 1043: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029763570055365562
    2. '=' → logprob: -3.5297634601593018
    3. '=[]' → logprob: -12.654763221740723
    4. '   ' → logprob: -12.654763221740723
    5. ':' → logprob: -12.779763221740723
    6. ' =[' → logprob: -14.029763221740723
    7. '=[' → logprob: -14.529763221740723
    8. '[' → logprob: -14.779763221740723
    9. '       ' → logprob: -15.029763221740723
    10. ',' → logprob: -15.654763221740723

Token 1044: ' [' (ID: 723)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.014781410805881023
    2. '[cell' → logprob: -4.764781475067139
    3. '[' → logprob: -5.264781475067139
    4. '[
' → logprob: -8.26478099822998
    5. '[name' → logprob: -8.51478099822998
    6. '[self' → logprob: -9.01478099822998
    7. '[e' → logprob: -9.63978099822998
    8. '[min' → logprob: -9.76478099822998
    9. '[key' → logprob: -10.13978099822998
    10. '[k' → logprob: -10.13978099822998

Token 1045: 'c' (ID: 66)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.16028891503810883
    2. 'c' → logprob: -1.91028892993927
    3. '(cell' → logprob: -10.03528881072998
    4. ' cell' → logprob: -11.53528881072998
    5. '(c' → logprob: -11.91028881072998
    6. 'self' → logprob: -13.66028881072998
    7. ' c' → logprob: -13.66028881072998
    8. '[cell' → logprob: -14.53528881072998
    9. '[c' → logprob: -14.66028881072998
    10. 'cel' → logprob: -14.78528881072998

Token 1046: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20141859352588654
    2. 'for' → logprob: -1.7014186382293701
    3. ' ' → logprob: -13.57641887664795
    4. '
' → logprob: -13.70141887664795
    5. '	for' → logprob: -14.07641887664795
    6. '   ' → logprob: -14.45141887664795
    7. '           ' → logprob: -14.70141887664795
    8. ' 
' → logprob: -15.20141887664795
    9. 'or' → logprob: -15.32641887664795
    10. '       ' → logprob: -16.326417922973633

Token 1047: ' c' (ID: 274)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030471699312329292
    2. 'c' → logprob: -4.0304718017578125
    3. ' self' → logprob: -4.4054718017578125
    4. ' c' → logprob: -10.405471801757812
    5. 'cell' → logprob: -12.530471801757812
    6. '(self' → logprob: -13.780471801757812
    7. '	self' → logprob: -15.030471801757812
    8. '=self' → logprob: -15.905471801757812
    9. '[self' → logprob: -16.530471801757812
    10. 'cel' → logprob: -16.780471801757812

Token 1048: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.053736362606287
    2. 'in' → logprob: -3.303736448287964
    3. 'c' → logprob: -4.178736209869385
    4. ' c' → logprob: -8.678736686706543
    5. 'self' → logprob: -9.428736686706543
    6. ' self' → logprob: -14.178736686706543
    7. ' ' → logprob: -14.428736686706543
    8. 's' → logprob: -14.553736686706543
    9. '=c' → logprob: -14.678736686706543
    10. 'cel' → logprob: -15.178736686706543

Token 1049: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.688212614681106e-05
    2. ' self' → logprob: -11.000017166137695
    3. '(self' → logprob: -16.750017166137695
    4. '[self' → logprob: -18.000017166137695
    5. '   ' → logprob: -18.625017166137695
    6. '=self' → logprob: -18.875017166137695
    7. '	self' → logprob: -19.000017166137695
    8. '
' → logprob: -19.000017166137695
    9. ' ' → logprob: -20.375017166137695
    10. '       ' → logprob: -20.875017166137695

Token 1050: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.14425961673259735
    2. 'cells' → logprob: -2.0192596912384033
    3. 'self' → logprob: -6.519259452819824
    4. ' cells' → logprob: -10.269259452819824
    5. '_cells' → logprob: -10.644259452819824
    6. 'cell' → logprob: -11.269259452819824
    7. 'cel' → logprob: -11.394259452819824
    8. '.values' → logprob: -12.019259452819824
    9. 'ells' → logprob: -12.269259452819824
    10. '   ' → logprob: -13.894259452819824

Token 1051: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.0031866247300058603
    2. 'values' → logprob: -5.7531867027282715
    3. ' values' → logprob: -12.003186225891113
    4. '.' → logprob: -13.628186225891113
    5. ' .' → logprob: -14.753186225891113
    6. '   ' → logprob: -15.378186225891113
    7. '	values' → logprob: -15.378186225891113
    8. 'if' → logprob: -15.378186225891113
    9. '(values' → logprob: -15.878186225891113
    10. '_values' → logprob: -16.37818717956543

Token 1052: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3236452043056488
    2. ' if' → logprob: -1.3236452341079712
    3. 'if' → logprob: -4.573645114898682
    4. '   ' → logprob: -12.44864559173584
    5. ' ()' → logprob: -13.19864559173584
    6. '           ' → logprob: -13.32364559173584
    7. '	if' → logprob: -13.82364559173584
    8. '       ' → logprob: -14.57364559173584
    9. '          ' → logprob: -15.69864559173584
    10. '    ' → logprob: -15.94864559173584

Token 1053: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2014138251543045
    2. 'if' → logprob: -1.701413869857788
    3. '	if' → logprob: -14.951414108276367
    4. '   ' → logprob: -16.076414108276367
    5. '()' → logprob: -16.826414108276367
    6. '           ' → logprob: -16.951414108276367
    7. '       ' → logprob: -17.951414108276367
    8. ' ' → logprob: -18.826414108276367
    9. '          ' → logprob: -19.701414108276367
    10. '    ' → logprob: -19.951414108276367

Token 1054: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0012313035549595952
    2. ' not' → logprob: -6.7512311935424805
    3. 'c' → logprob: -9.75123119354248
    4. '(not' → logprob: -13.12623119354248
    5. '   ' → logprob: -14.75123119354248
    6. '	not' → logprob: -15.75123119354248
    7. '!' → logprob: -15.87623119354248
    8. ' c' → logprob: -17.126232147216797
    9. '.not' → logprob: -18.126232147216797
    10. '
' → logprob: -18.126232147216797

Token 1055: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.130576806142926e-05
    2. ' c' → logprob: -10.375031471252441
    3. ')c' → logprob: -16.750030517578125
    4. 'cell' → logprob: -18.625030517578125
    5. '	c' → logprob: -19.500030517578125
    6. 'cation' → logprob: -20.000030517578125
    7. '   ' → logprob: -20.125030517578125
    8. ')' → logprob: -20.375030517578125
    9. '(c' → logprob: -20.500030517578125
    10. '```' → logprob: -20.937530517578125

Token 1056: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -9.491498531133402e-06
    2. 'is' → logprob: -11.625009536743164
    3. '.' → logprob: -15.125009536743164
    4. '.ass' → logprob: -15.375009536743164
    5. '.has' → logprob: -17.875009536743164
    6. '   ' → logprob: -18.250009536743164
    7. '.are' → logprob: -18.625009536743164
    8. ').' → logprob: -18.875009536743164
    9. ' .' → logprob: -18.875009536743164
    10. '(is' → logprob: -19.000009536743164

Token 1057: '_ass' (ID: 29140)
  Prédit: '_ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ass' → logprob: -0.003606959478929639
    2. 'assigned' → logprob: -5.628606796264648
    3. 'ass' → logprob: -12.628606796264648
    4. 'assing' → logprob: -13.378606796264648
    5. 'Assigned' → logprob: -13.753606796264648
    6. 'c' → logprob: -15.128606796264648
    7. '.ass' → logprob: -15.378606796264648
    8. 's' → logprob: -16.00360679626465
    9. ' assigned' → logprob: -16.87860679626465
    10. '_ASS' → logprob: -17.00360679626465

Token 1058: 'igned' (ID: 3626)
  Prédit: 'igned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igned' → logprob: -6.659005157416686e-05
    2. 'signed' → logprob: -9.750066757202148
    3. '_signed' → logprob: -11.875066757202148
    4. 'IGNED' → logprob: -14.875066757202148
    5. 'Signed' → logprob: -15.875066757202148
    6. '```' → logprob: -16.12506675720215
    7. 'assigned' → logprob: -16.25006675720215
    8. 'ing' → logprob: -16.37506675720215
    9. 'gn' → logprob: -16.37506675720215
    10. '{' → logprob: -16.62506675720215

Token 1059: '()]
' (ID: 67155)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5971514582633972
    2. '()]
' → logprob: -0.8471514582633972
    3. '()]' → logprob: -4.097151279449463
    4. 'and' → logprob: -5.597151279449463
    5. ' and' → logprob: -7.597151279449463
    6. ']
' → logprob: -9.097151756286621
    7. ']' → logprob: -10.222151756286621
    8. '()
' → logprob: -12.222151756286621
    9. '()][' → logprob: -13.222151756286621
    10. '   ' → logprob: -13.722151756286621

Token 1060: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013906441628932953
    2. ' if' → logprob: -5.763906478881836
    3. '
' → logprob: -5.888906478881836
    4. 'sorted' → logprob: -6.138906478881836
    5. 'sort' → logprob: -6.388906478881836
    6. '.sort' → logprob: -6.888906478881836
    7. '```' → logprob: -7.638906478881836
    8. 'if' → logprob: -7.638906478881836
    9. 'min' → logprob: -8.263906478881836
    10. '_sorted' → logprob: -8.388906478881836

Token 1061: ' candidates' (ID: 18116)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16890695691108704
    2. ' if' → logprob: -2.0439069271087646
    3. 'return' → logprob: -3.9189069271087646
    4. '       ' → logprob: -5.793907165527344
    5. 'c' → logprob: -6.793907165527344
    6. 'min' → logprob: -6.918907165527344
    7. '
' → logprob: -7.543907165527344
    8. ' return' → logprob: -8.918907165527344
    9. '   ' → logprob: -9.043907165527344
    10. ' candidates' → logprob: -10.293907165527344

Token 1062: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.005641147494316101
    2. '=' → logprob: -5.755640983581543
    3. 'sort' → logprob: -6.380640983581543
    4. 'sorted' → logprob: -7.505640983581543
    5. ' =' → logprob: -9.130640983581543
    6. '_sorted' → logprob: -9.880640983581543
    7. '.' → logprob: -11.130640983581543
    8. '=min' → logprob: -11.255640983581543
    9. 'min' → logprob: -11.630640983581543
    10. ':' → logprob: -12.130640983581543

Token 1063: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -1.2664456789934775e-06
    2. 'key' → logprob: -14.500000953674316
    3. '(reverse' → logprob: -15.000000953674316
    4. '(
' → logprob: -15.250000953674316
    5. '()' → logprob: -16.125001907348633
    6. '(' → logprob: -17.125001907348633
    7. '```' → logprob: -19.750001907348633
    8. '	key' → logprob: -20.000001907348633
    9. '[key' → logprob: -20.000001907348633
    10. ',key' → logprob: -20.125001907348633

Token 1064: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.001945533906109631
    2. '=' → logprob: -6.251945495605469
    3. 'lambda' → logprob: -11.126945495605469
    4. '(lambda' → logprob: -13.501945495605469
    5. ' lambda' → logprob: -14.251945495605469
    6. '=len' → logprob: -15.251945495605469
    7. '=
' → logprob: -17.62694549560547
    8. '_lambda' → logprob: -18.25194549560547
    9. 'ambda' → logprob: -20.62694549560547
    10. 'Lambda' → logprob: -21.75194549560547

Token 1065: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17480303347110748
    2. ' c' → logprob: -1.9248030185699463
    3. 'lambda' → logprob: -4.549803256988525
    4. ' lambda' → logprob: -5.549803256988525
    5. 'len' → logprob: -11.924802780151367
    6. 'x' → logprob: -12.424802780151367
    7. '=lambda' → logprob: -13.424802780151367
    8. 'cell' → logprob: -13.799802780151367
    9. '(lambda' → logprob: -14.424802780151367
    10. ':' → logprob: -14.674802780151367

Token 1066: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05595564469695091
    2. 'len' → logprob: -3.305955648422241
    3. ' c' → logprob: -4.680955410003662
    4. ' len' → logprob: -4.930955410003662
    5. 'c' → logprob: -7.305955410003662
    6. ' :' → logprob: -7.680955410003662
    7. ':c' → logprob: -10.18095588684082
    8. 'lambda' → logprob: -10.30595588684082
    9. '(len' → logprob: -10.68095588684082
    10. '=len' → logprob: -11.43095588684082

Token 1067: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00034380643046461046
    2. 'lambda' → logprob: -8.000344276428223
    3. ' len' → logprob: -11.750344276428223
    4. '(len' → logprob: -14.500344276428223
    5. ' lambda' → logprob: -17.250343322753906
    6. '(lambda' → logprob: -18.875343322753906
    7. 'min' → logprob: -20.375343322753906
    8. '   ' → logprob: -20.875343322753906
    9. 'c' → logprob: -22.625343322753906
    10. '(' → logprob: -23.250343322753906

Token 1068: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00012749579036608338
    2. '(' → logprob: -9.000127792358398
    3. 'c' → logprob: -12.500127792358398
    4. '(
' → logprob: -15.375127792358398
    5. ' (' → logprob: -15.875127792358398
    6. ' c' → logprob: -18.5001277923584
    7. '(cell' → logprob: -19.0001277923584
    8. ')c' → logprob: -19.2501277923584
    9. '©' → logprob: -20.2501277923584
    10. '(

' → logprob: -20.3751277923584

Token 1069: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.5781397819519043
    2. '.c' → logprob: -0.8281397819519043
    3. '(c' → logprob: -6.203139781951904
    4. '.cell' → logprob: -9.078140258789062
    5. ' .' → logprob: -10.703140258789062
    6. '.' → logprob: -11.078140258789062
    7. '(' → logprob: -11.703140258789062
    8. '(.' → logprob: -12.078140258789062
    9. 'possible' → logprob: -13.203140258789062
    10. '(pos' → logprob: -13.578140258789062

Token 1070: 'sible' (ID: 15301)
  Prédit: 'sible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -2.534558552724775e-05
    2. 'possible' → logprob: -10.750025749206543
    3. '_possible' → logprob: -13.625025749206543
    4. 's' → logprob: -13.750025749206543
    5. 'ible' → logprob: -13.875025749206543
    6. 'isible' → logprob: -14.625025749206543
    7. 'c' → logprob: -16.000024795532227
    8. '```' → logprob: -17.625024795532227
    9. 'asible' → logprob: -18.375024795532227
    10. 'sib' → logprob: -19.250024795532227

Token 1071: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.0280383548888494e-06
    2. 'values' → logprob: -14.875000953674316
    3. '_' → logprob: -15.125000953674316
    4. '_VALUES' → logprob: -15.750000953674316
    5. '(c' → logprob: -16.500001907348633
    6. 'Values' → logprob: -17.875001907348633
    7. '_tokens' → logprob: -18.125001907348633
    8. ')' → logprob: -18.250001907348633
    9. '_cells' → logprob: -18.625001907348633
    10. 's' → logprob: -18.625001907348633

Token 1072: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47411835193634033
    2. ')' → logprob: -0.9741183519363403
    3. ')
' → logprob: -11.09911823272705
    4. '))
' → logprob: -11.34911823272705
    5. ')c' → logprob: -12.22411823272705
    6. '()))' → logprob: -13.47411823272705
    7. ')))' → logprob: -13.59911823272705
    8. ' ))' → logprob: -13.59911823272705
    9. ' )' → logprob: -13.72411823272705
    10. '())' → logprob: -14.09911823272705

Token 1073: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01708386279642582
    2. 'return' → logprob: -4.142083644866943
    3. ' return' → logprob: -7.892083644866943
    4. '   ' → logprob: -8.142084121704102
    5. 'if' → logprob: -8.517084121704102
    6. ' if' → logprob: -8.642084121704102
    7. '           ' → logprob: -12.892084121704102
    8. '
' → logprob: -13.392084121704102
    9. '```' → logprob: -13.642084121704102
    10. '	return' → logprob: -14.892084121704102

Token 1074: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020013193134218454
    2. 'if' → logprob: -6.2520012855529785
    3. ' return' → logprob: -10.002001762390137
    4. '       ' → logprob: -10.752001762390137
    5. '```' → logprob: -12.752001762390137
    6. '   ' → logprob: -13.377001762390137
    7. '
' → logprob: -13.752001762390137
    8. ' if' → logprob: -14.752001762390137
    9. '	return' → logprob: -17.00200080871582
    10. '        
' → logprob: -17.62700080871582

Token 1075: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006735976319760084
    2. ' candidates' → logprob: -5.006735801696777
    3. 'None' → logprob: -10.881735801696777
    4. ' None' → logprob: -13.381735801696777
    5. ' c' → logprob: -16.006736755371094
    6. 'cells' → logprob: -16.756736755371094
    7. '	c' → logprob: -17.006736755371094
    8. '(c' → logprob: -17.506736755371094
    9. ' candidats' → logprob: -18.131736755371094
    10. 'cand' → logprob: -18.756736755371094

Token 1076: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2723104848410003e-05
    2. '0' → logprob: -10.750022888183594
    3. 'and' → logprob: -15.000022888183594
    4. '[
' → logprob: -15.000022888183594
    5. '[-' → logprob: -15.250022888183594
    6. ' [' → logprob: -15.750022888183594
    7. '```' → logprob: -16.375022888183594
    8. '
' → logprob: -17.000022888183594
    9. 's' → logprob: -17.125022888183594
    10. ' and' → logprob: -17.250022888183594

Token 1077: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.875001907348633
    3. '[' → logprob: -15.000001907348633
    4. '-' → logprob: -15.500001907348633
    5. ':' → logprob: -19.000001907348633
    6. '```' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.875001907348633
    8. '
' → logprob: -20.000001907348633
    9. ' -' → logprob: -20.375001907348633
    10. '(' → logprob: -20.812501907348633

Token 1078: ']' (ID: 60)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1079: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1080: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.107425062713446e-06
    2. ' candidates' → logprob: -12.250006675720215
    3. 'len' → logprob: -13.000006675720215
    4. 'candidate' → logprob: -19.75000762939453
    5. 'cand' → logprob: -20.25000762939453
    6. '_candidates' → logprob: -21.25000762939453
    7. ' len' → logprob: -21.75000762939453
    8. '	c' → logprob: -22.12500762939453
    9. '   ' → logprob: -23.00000762939453
    10. ')c' → logprob: -23.25000762939453

Token 1081: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5534096360206604
    2. 'else' → logprob: -0.9284096360206604
    3. '<|end|>' → logprob: -3.5534095764160156
    4. ')' → logprob: -7.428409576416016
    5. '<|end|>' → logprob: -8.678409576416016
    6. ']' → logprob: -9.428409576416016
    7. '[' → logprob: -10.053409576416016
    8. '<len' → logprob: -10.178409576416016
    9. '	else' → logprob: -10.428409576416016
    10. '.' → logprob: -10.678409576416016

Token 1082: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.320199877838604e-07
    2. ' None' → logprob: -15.0
    3. '(None' → logprob: -19.75
    4. 'none' → logprob: -20.5
    5. '=None' → logprob: -21.25
    6. 'False' → logprob: -21.875
    7. '_None' → logprob: -22.25
    8. '   ' → logprob: -22.625
    9. 'null' → logprob: -23.125
    10. ',None' → logprob: -23.875

Token 1083: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04600761458277702
    2. '<|end|>' → logprob: -3.2960076332092285
    3. 'def' → logprob: -5.7960076332092285
    4. '<|end|>' → logprob: -5.9210076332092285
    5. '    
' → logprob: -7.5460076332092285
    6. '```' → logprob: -7.6710076332092285
    7. ' def' → logprob: -7.9210076332092285
    8. ':' → logprob: -8.42100715637207
    9. '	def' → logprob: -9.17100715637207
    10. '  
' → logprob: -9.54600715637207

Token 1084: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38778382539749146
    2. 'def' → logprob: -1.1377837657928467
    3. ' def' → logprob: -7.137784004211426
    4. '```' → logprob: -9.262784004211426
    5. '    
' → logprob: -11.637784004211426
    6. '
' → logprob: -12.262784004211426
    7. '	def' → logprob: -12.637784004211426
    8. '<|end|>' → logprob: -13.012784004211426
    9. '  ' → logprob: -13.637784004211426
    10. ' ' → logprob: -14.637784004211426

Token 1085: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.2948405128554441e-05
    2. ' def' → logprob: -11.75001335144043
    3. '   ' → logprob: -12.25001335144043
    4. '```' → logprob: -15.75001335144043
    5. '	def' → logprob: -16.25001335144043
    6. 'Def' → logprob: -21.87501335144043
    7. '
' → logprob: -22.12501335144043
    8. '    
' → logprob: -22.62501335144043
    9. ':def' → logprob: -22.62501335144043
    10. '  ' → logprob: -22.75001335144043

Token 1086: ' assign' (ID: 14975)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.00736844539642334
    2. ' solve' → logprob: -5.257368564605713
    3. 'back' → logprob: -6.632368564605713
    4. 'search' → logprob: -7.257368564605713
    5. ' back' → logprob: -9.257368087768555
    6. 'dfs' → logprob: -12.382368087768555
    7. 'solver' → logprob: -12.507368087768555
    8. ' search' → logprob: -13.007368087768555
    9. 'recursive' → logprob: -13.507368087768555
    10. 'def' → logprob: -14.257368087768555

Token 1087: '_and' (ID: 18645)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08665736019611359
    2. '(' → logprob: -2.8366572856903076
    3. '<|end|>' → logprob: -5.086657524108887
    4. '_cell' → logprob: -5.336657524108887
    5. 'self' → logprob: -5.586657524108887
    6. '_next' → logprob: -5.836657524108887
    7. '_self' → logprob: -6.336657524108887
    8. '(cell' → logprob: -6.961657524108887
    9. '_' → logprob: -6.961657524108887
    10. '_cells' → logprob: -7.836657524108887

Token 1088: '_update' (ID: 19528)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.46269914507865906
    2. '_continue' → logprob: -1.9626991748809814
    3. '_pro' → logprob: -2.2126991748809814
    4. '_search' → logprob: -2.4626991748809814
    5. 'search' → logprob: -4.587698936462402
    6. 're' → logprob: -4.837698936462402
    7. '_try' → logprob: -5.212698936462402
    8. 'continue' → logprob: -5.337698936462402
    9. '_back' → logprob: -5.837698936462402
    10. 'back' → logprob: -6.837698936462402

Token 1089: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004156568902544677
    2. '(' → logprob: -8.000415802001953
    3. '_cell' → logprob: -9.625415802001953
    4. '(cell' → logprob: -11.625415802001953
    5. 'self' → logprob: -12.875415802001953
    6. ' (' → logprob: -14.000415802001953
    7. '_cells' → logprob: -14.125415802001953
    8. '(sel' → logprob: -15.250415802001953
    9. '(
' → logprob: -16.125415802001953
    10. '_value' → logprob: -16.125415802001953

Token 1090: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.87501335144043
    3. 'self' → logprob: -12.75001335144043
    4. '(cell' → logprob: -12.87501335144043
    5. ' (' → logprob: -14.75001335144043
    6. '_cell' → logprob: -15.75001335144043
    7. '(
' → logprob: -16.00001335144043
    8. '   ' → logprob: -16.12501335144043
    9. 'cell' → logprob: -16.75001335144043
    10. '(sel' → logprob: -17.37501335144043

Token 1091: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.008626751601696014
    2. ' cell' → logprob: -4.758626937866211
    3. 'self' → logprob: -11.508626937866211
    4. 'name' → logprob: -14.008626937866211
    5. ')' → logprob: -14.258626937866211
    6. '   ' → logprob: -15.133626937866211
    7. '```' → logprob: -16.00862693786621
    8. '	cell' → logprob: -16.38362693786621
    9. 'Cell' → logprob: -16.63362693786621
    10. 'cells' → logprob: -17.25862693786621

Token 1092: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0579715371131897
    2. '(self' → logprob: -3.057971477508545
    3. '(cell' → logprob: -5.057971477508545
    4. 'self' → logprob: -6.807971477508545
    5. ' (' → logprob: -7.432971477508545
    6. ' ,' → logprob: -7.932971477508545
    7. '       ' → logprob: -8.057971954345703
    8. '   ' → logprob: -8.432971954345703
    9. ',self' → logprob: -9.307971954345703
    10. '(' → logprob: -9.557971954345703

Token 1093: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.33027076721191406
    2. 'cell' → logprob: -1.705270767211914
    3. ' cell' → logprob: -2.705270767211914
    4. ' Cell' → logprob: -3.455270767211914
    5. 'self' → logprob: -7.205270767211914
    6. 'c' → logprob: -9.080270767211914
    7. '_cell' → logprob: -10.205270767211914
    8. ' self' → logprob: -10.330270767211914
    9. '   ' → logprob: -10.330270767211914
    10. 'str' → logprob: -11.080270767211914

Token 1094: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7610454708337784e-05
    2. ' ,' → logprob: -10.875027656555176
    3. ',val' → logprob: -12.625027656555176
    4. ',value' → logprob: -13.000027656555176
    5. '   ' → logprob: -14.000027656555176
    6. 'self' → logprob: -14.500027656555176
    7. '):' → logprob: -14.500027656555176
    8. '       ' → logprob: -14.750027656555176
    9. ',
' → logprob: -15.875027656555176
    10. 'def' → logprob: -16.50002670288086

Token 1095: ' value' (ID: 1432)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.05176880210638046
    2. ' val' → logprob: -3.0517687797546387
    3. 'value' → logprob: -5.801768779754639
    4. ' value' → logprob: -9.426769256591797
    5. 'digit' → logprob: -9.551769256591797
    6. ' digit' → logprob: -12.926769256591797
    7. '_val' → logprob: -17.051769256591797
    8. '	val' → logprob: -17.176769256591797
    9. 'candidate' → logprob: -17.801769256591797
    10. '[val' → logprob: -18.051769256591797

Token 1096: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05376235395669937
    2. ':' → logprob: -3.553762435913086
    3. '):
' → logprob: -3.803762435913086
    4. ')' → logprob: -7.553762435913086
    5. '   ' → logprob: -8.178762435913086
    6. ' ):' → logprob: -8.428762435913086
    7. ',' → logprob: -8.553762435913086
    8. ':int' → logprob: -9.803762435913086
    9. '(value' → logprob: -9.928762435913086
    10. '=' → logprob: -10.553762435913086

Token 1097: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018296843394637108
    2. ' int' → logprob: -4.018296718597412
    3. ')' → logprob: -8.89329719543457
    4. 'value' → logprob: -12.39329719543457
    5. ' )' → logprob: -13.14329719543457
    6. '):
' → logprob: -14.26829719543457
    7. ':int' → logprob: -14.39329719543457
    8. '   ' → logprob: -14.51829719543457
    9. ' ' → logprob: -14.89329719543457
    10. '(int' → logprob: -15.14329719543457

Token 1098: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12721167504787445
    2. '):
' → logprob: -2.127211570739746
    3. ')' → logprob: -8.252211570739746
    4. '):
' → logprob: -11.127211570739746
    5. '   ' → logprob: -12.252211570739746
    6. ':' → logprob: -12.877211570739746
    7. ' ):' → logprob: -15.002211570739746
    8. '):

' → logprob: -15.252211570739746
    9. '       ' → logprob: -15.752211570739746
    10. ' ):
' → logprob: -16.502212524414062

Token 1099: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14720062911510468
    2. ':
' → logprob: -2.022200584411621
    3. '       ' → logprob: -5.772200584411621
    4. '   ' → logprob: -7.397200584411621
    5. '):
' → logprob: -7.772200584411621
    6. '):' → logprob: -8.272200584411621
    7. '():
' → logprob: -9.647200584411621
    8. '(self' → logprob: -10.897200584411621
    9. '():' → logprob: -12.147200584411621
    10. ')' → logprob: -12.397200584411621

Token 1100: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.006242080125957727
    2. ' bool' → logprob: -5.256242275238037
    3. 'None' → logprob: -7.006242275238037
    4. ''' → logprob: -10.006241798400879
    5. ' None' → logprob: -10.381241798400879
    6. 'List' → logprob: -11.131241798400879
    7. 'Tuple' → logprob: -11.756241798400879
    8. '"' → logprob: -13.631241798400879
    9. ' '' → logprob: -14.131241798400879
    10. 'Set' → logprob: -15.381241798400879

Token 1101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003711242461577058
    2. ':
' → logprob: -5.753711223602295
    3. '):' → logprob: -8.378711700439453
    4. '       ' → logprob: -9.003711700439453
    5. '():' → logprob: -9.378711700439453
    6. '<|end|>' → logprob: -9.878711700439453
    7. '   ' → logprob: -11.253711700439453
    8. '):
' → logprob: -11.378711700439453
    9. '():
' → logprob: -11.503711700439453
    10. ':def' → logprob: -13.003711700439453

Token 1102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007829957641661167
    2. '
' → logprob: -4.8828301429748535
    3. '```' → logprob: -9.507829666137695
    4. '        
' → logprob: -9.632829666137695
    5. '<|end|>' → logprob: -10.632829666137695
    6. '   ' → logprob: -10.757829666137695
    7. '    
' → logprob: -11.757829666137695
    8. ' 
' → logprob: -12.132829666137695
    9. ' cell' → logprob: -12.632829666137695
    10. '#' → logprob: -13.132829666137695

Token 1103: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' (adapté à ' cell') → logprob: -0.2013229876756668
    2. 'self' → logprob: -1.9513230323791504
    3. '       ' → logprob: -4.20132303237915
    4. ' cell' → logprob: -4.57632303237915
    5. 'if' → logprob: -4.95132303237915
    6. '#' → logprob: -5.45132303237915
    7. ' self' → logprob: -6.20132303237915
    8. ' if' → logprob: -6.95132303237915
    9. '   ' → logprob: -8.201322555541992
    10. ' #' → logprob: -8.326322555541992

Token 1104: '.assign' (ID: 36282)
  Prédit: '.assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.assign' → logprob: -0.003699604654684663
    2. '.' → logprob: -5.628699779510498
    3. '.ass' → logprob: -9.25369930267334
    4. 'assign' → logprob: -13.00369930267334
    5. ' .' → logprob: -14.37869930267334
    6. ').' → logprob: -15.00369930267334
    7. '.attach' → logprob: -16.628700256347656
    8. '```' → logprob: -17.003700256347656
    9. '.allocate' → logprob: -17.003700256347656
    10. '   ' → logprob: -17.128700256347656

Token 1105: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -8.566264295950532e-05
    2. '(' → logprob: -9.625085830688477
    3. 'value' → logprob: -10.875085830688477
    4. ' (' → logprob: -14.375085830688477
    5. '(
' → logprob: -17.875085830688477
    6. ',value' → logprob: -18.250085830688477
    7. ')value' → logprob: -18.625085830688477
    8. ' value' → logprob: -18.750085830688477
    9. '```' → logprob: -18.875085830688477
    10. '=value' → logprob: -19.250085830688477

Token 1106: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011052536778151989
    2. ')' → logprob: -4.51105260848999
    3. ')
' → logprob: -12.511052131652832
    4. ')

' → logprob: -14.636052131652832
    5. '       ' → logprob: -14.761052131652832
    6. ')return' → logprob: -16.76105308532715
    7. ' )
' → logprob: -16.76105308532715
    8. ')set' → logprob: -17.76105308532715
    9. ');
' → logprob: -18.26105308532715
    10. ')add' → logprob: -18.51105308532715

Token 1107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005429040757007897
    2. 'self' → logprob: -8.000542640686035
    3. '   ' → logprob: -8.875542640686035
    4. ' self' → logprob: -9.875542640686035
    5. '
' → logprob: -11.250542640686035
    6. '           ' → logprob: -13.375542640686035
    7. ' ' → logprob: -14.875542640686035
    8. '	self' → logprob: -14.875542640686035
    9. '	' → logprob: -15.125542640686035
    10. '	   ' → logprob: -15.875542640686035

Token 1108: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001544737839139998
    2. 'if' → logprob: -6.501544952392578
    3. '       ' → logprob: -10.126544952392578
    4. ' self' → logprob: -13.251544952392578
    5. '   ' → logprob: -14.876544952392578
    6. 'new' → logprob: -16.501544952392578
    7. 'return' → logprob: -16.876544952392578
    8. 'original' → logprob: -16.876544952392578
    9. 'old' → logprob: -17.001544952392578
    10. '#' → logprob: -17.001544952392578

Token 1109: '.used' (ID: 158890)
  Prédit: '.used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.used' → logprob: -5.860340752406046e-05
    2. 'used' → logprob: -9.7500581741333
    3. '.updated' → logprob: -15.8750581741333
    4. 'self' → logprob: -17.000059127807617
    5. '       ' → logprob: -17.500059127807617
    6. '   ' → logprob: -17.625059127807617
    7. '.update' → logprob: -17.625059127807617
    8. ' used' → logprob: -18.125059127807617
    9. '.self' → logprob: -18.250059127807617
    10. ' .' → logprob: -19.625059127807617

Token 1110: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -6.968934758333489e-05
    2. '_' → logprob: -10.000069618225098
    3. '```' → logprob: -11.750069618225098
    4. '_tokens' → logprob: -11.875069618225098
    5. '_chars' → logprob: -12.000069618225098
    6. ' _' → logprob: -14.000069618225098
    7. 'digits' → logprob: -14.250069618225098
    8. 'Digits' → logprob: -15.375069618225098
    9. ')_' → logprob: -15.625069618225098
    10. '._' → logprob: -15.750069618225098

Token 1111: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.7697225252486533e-06
    2. '.' → logprob: -12.625003814697266
    3. 'add' → logprob: -15.125003814697266
    4. ' .' → logprob: -16.000003814697266
    5. '.Add' → logprob: -18.625003814697266
    6. ')add' → logprob: -19.000003814697266
    7. '_add' → logprob: -19.500003814697266
    8. ' add' → logprob: -20.000003814697266
    9. '.ad' → logprob: -20.000003814697266
    10. '.append' → logprob: -20.125003814697266

Token 1112: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.00033546582562848926
    2. 'value' → logprob: -8.000335693359375
    3. '(' → logprob: -18.625335693359375
    4. ' value' → logprob: -19.375335693359375
    5. ')value' → logprob: -20.625335693359375
    6. '(
' → logprob: -20.875335693359375
    7. '$value' → logprob: -21.625335693359375
    8. '[value' → logprob: -22.125335693359375
    9. '=value' → logprob: -22.125335693359375
    10. '	value' → logprob: -22.250335693359375

Token 1113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008581006550230086
    2. ')
' → logprob: -7.125858306884766
    3. ' )' → logprob: -10.625858306884766
    4. '       ' → logprob: -10.875858306884766
    5. ')return' → logprob: -11.750858306884766
    6. '<|end|>' → logprob: -13.750858306884766
    7. '   ' → logprob: -15.250858306884766
    8. ')

' → logprob: -15.375858306884766
    9. '
' → logprob: -15.750858306884766
    10. ' )
' → logprob: -16.000858306884766

Token 1114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017904938431456685
    2. '
' → logprob: -6.626790523529053
    3. 'self' → logprob: -7.751790523529053
    4. ' self' → logprob: -11.001790046691895
    5. '        
' → logprob: -11.876790046691895
    6. '   ' → logprob: -12.751790046691895
    7. '<|end|>' → logprob: -12.876790046691895
    8. '```' → logprob: -14.001790046691895
    9. '  
' → logprob: -14.126790046691895
    10. '	self' → logprob: -14.376790046691895

Token 1115: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00030614540446549654
    2. '       ' → logprob: -8.250306129455566
    3. 'try' → logprob: -10.375306129455566
    4. 'return' → logprob: -11.750306129455566
    5. ' self' → logprob: -12.125306129455566
    6. 'if' → logprob: -15.750306129455566
    7. 'for' → logprob: -16.375307083129883
    8. '        
' → logprob: -16.500307083129883
    9. '```' → logprob: -17.500307083129883
    10. 'success' → logprob: -17.625307083129883

Token 1116: ' Update' (ID: 9152)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00037323508877307177
    2. 'if' → logprob: -8.875372886657715
    3. 'try' → logprob: -9.125372886657715
    4. 'for' → logprob: -9.625372886657715
    5. 'return' → logprob: -10.750372886657715
    6. '#' → logprob: -11.125372886657715
    7. 'success' → logprob: -11.250372886657715
    8. '       ' → logprob: -12.750372886657715
    9. ' self' → logprob: -13.125372886657715
    10. 'valid' → logprob: -14.125372886657715

Token 1117: ' possible' (ID: 4149)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014266107231378555
    2. ' self' → logprob: -4.264266014099121
    3. '       ' → logprob: -9.514266014099121
    4. 'possible' → logprob: -11.514266014099121
    5. 'available' → logprob: -12.264266014099121
    6. '   ' → logprob: -12.639266014099121
    7. 'for' → logprob: -13.139266014099121
    8. 'cell' → logprob: -13.264266014099121
    9. 'poss' → logprob: -13.389266014099121
    10. '_self' → logprob: -13.639266014099121

Token 1118: ' digits' (ID: 37806)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -7.457669562427327e-05
    2. 'values' → logprob: -9.87507438659668
    3. '_' → logprob: -11.00007438659668
    4. ' values' → logprob: -12.62507438659668
    5. '_VALUES' → logprob: -14.00007438659668
    6. '_cells' → logprob: -14.62507438659668
    7. '```' → logprob: -14.75007438659668
    8. 's' → logprob: -15.25007438659668
    9. '   ' → logprob: -15.50007438659668
    10. '_tokens' → logprob: -16.00007438659668

Token 1119: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007641890551894903
    2. 'self' → logprob: -5.507641792297363
    3. ' for' → logprob: -6.007641792297363
    4. 'for' → logprob: -7.132641792297363
    5. ' and' → logprob: -9.632641792297363
    6. '   ' → logprob: -9.632641792297363
    7. ',' → logprob: -9.757641792297363
    8. ' self' → logprob: -10.382641792297363
    9. ' to' → logprob: -10.882641792297363
    10. '<|end|>' → logprob: -11.507641792297363

Token 1120: ' others' (ID: 5036)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.4446965157985687
    2. 'other' → logprob: -1.6946965456008911
    3. 'self' → logprob: -2.3196964263916016
    4. ' un' → logprob: -3.5696964263916016
    5. 'all' → logprob: -4.319696426391602
    6. 'cell' → logprob: -4.944696426391602
    7. 'remaining' → logprob: -4.944696426391602
    8. 'c' → logprob: -5.069696426391602
    9. ' other' → logprob: -5.444696426391602
    10. ' all' → logprob: -5.944696426391602

Token 1121: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08849625289440155
    2. 'self' → logprob: -2.588496208190918
    3. ' for' → logprob: -5.213496208190918
    4. ' self' → logprob: -6.213496208190918
    5. 'for' → logprob: -6.588496208190918
    6. '   ' → logprob: -7.713496208190918
    7. '
' → logprob: -8.463496208190918
    8. '        
' → logprob: -10.838496208190918
    9. ',' → logprob: -11.088496208190918
    10. 'available' → logprob: -11.338496208190918

Token 1122: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13288579881191254
    2. '       ' → logprob: -2.132885694503784
    3. ' self' → logprob: -5.132885932922363
    4. 'for' → logprob: -11.007885932922363
    5. '   ' → logprob: -11.132885932922363
    6. '```' → logprob: -12.507885932922363
    7. ' for' → logprob: -13.132885932922363
    8. 'return' → logprob: -13.632885932922363
    9. 'try' → logprob: -14.257885932922363
    10. ' ' → logprob: -14.507885932922363

Token 1123: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015899618156254292
    2. 'available' → logprob: -7.501589775085449
    3. 'for' → logprob: -7.501589775085449
    4. '       ' → logprob: -8.37658977508545
    5. ' self' → logprob: -8.37658977508545
    6. 'return' → logprob: -11.25158977508545
    7. '   ' → logprob: -12.00158977508545
    8. '        
' → logprob: -14.00158977508545
    9. ' for' → logprob: -14.12658977508545
    10. ' available' → logprob: -14.62658977508545

Token 1124: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.0001431114797014743
    2. 'update' → logprob: -9.125143051147461
    3. '.' → logprob: -10.375143051147461
    4. '   ' → logprob: -13.750143051147461
    5. '.used' → logprob: -14.125143051147461
    6. ' .' → logprob: -14.625143051147461
    7. '.updated' → logprob: -14.875143051147461
    8. '.remove' → logprob: -16.75014305114746
    9. ':update' → logprob: -16.87514305114746
    10. '       ' → logprob: -16.87514305114746

Token 1125: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.5048530030981055e-06
    2. 'pos' → logprob: -14.250001907348633
    3. 'poss' → logprob: -14.625001907348633
    4. '_possible' → logprob: -15.250001907348633
    5. '_positions' → logprob: -16.125001907348633
    6. '_p' → logprob: -18.250001907348633
    7. '```' → logprob: -18.875001907348633
    8. '_' → logprob: -19.125001907348633
    9. '_prob' → logprob: -19.750001907348633
    10. '\' → logprob: -19.875001907348633

Token 1126: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.047134305234067e-05
    2. 'ss' → logprob: -10.750030517578125
    3. 'sib' → logprob: -12.125030517578125
    4. 'ibilities' → logprob: -13.250030517578125
    5. 'sessions' → logprob: -14.875030517578125
    6. '_s' → logprob: -15.000030517578125
    7. 'sible' → logprob: -15.125030517578125
    8. 'sil' → logprob: -16.125030517578125
    9. ' possibilities' → logprob: -16.375030517578125
    10. ' s' → logprob: -16.500030517578125

Token 1127: 'ibilities' (ID: 25632)
  Prédit: 'ibilities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibilities' → logprob: -0.016046568751335144
    2. 's' → logprob: -4.141046524047852
    3. 'ibil' → logprob: -12.516046524047852
    4. 'ib' → logprob: -13.766046524047852
    5. 'sible' → logprob: -13.891046524047852
    6. 'ibl' → logprob: -14.016046524047852
    7. ' possibilities' → logprob: -14.141046524047852
    8. 'sib' → logprob: -14.266046524047852
    9. 'abilities' → logprob: -14.516046524047852
    10. 'ss' → logprob: -14.516046524047852

Token 1128: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005393126513808966
    2. '
' → logprob: -6.005393028259277
    3. '<|end|>' → logprob: -6.005393028259277
    4. 'return' → logprob: -8.255393028259277
    5. '   ' → logprob: -9.880393028259277
    6. ' return' → logprob: -10.130393028259277
    7. '<|end|>' → logprob: -10.505393028259277
    8. ',' → logprob: -10.755393028259277
    9. '        
' → logprob: -11.755393028259277
    10. '  
' → logprob: -12.130393028259277

Token 1129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005061076022684574
    2. '<|end|>' → logprob: -5.380061149597168
    3. '   ' → logprob: -8.130061149597168
    4. '	' → logprob: -10.130061149597168
    5. 'return' → logprob: -10.255061149597168
    6. '
' → logprob: -10.630061149597168
    7. '<|end|>' → logprob: -11.130061149597168
    8. '	return' → logprob: -11.255061149597168
    9. ' return' → logprob: -12.755061149597168
    10. '```' → logprob: -12.755061149597168

Token 1130: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16553501784801483
    2. 'return' (adapté à ' return') → logprob: -1.9155349731445312
    3. 'if' → logprob: -5.415534973144531
    4. ' return' → logprob: -7.665534973144531
    5. ' if' → logprob: -7.915534973144531
    6. '   ' → logprob: -11.540534973144531
    7. 'for' → logprob: -13.165534973144531
    8. '	return' → logprob: -14.290534973144531
    9. 'self' → logprob: -14.540534973144531
    10. '{return' → logprob: -14.540534973144531

Token 1131: ' True' (ID: 6432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.389285147190094
    2. 'True' → logprob: -1.1392850875854492
    3. ' True' → logprob: -6.389285087585449
    4. ' self' → logprob: -7.389285087585449
    5. 'cell' → logprob: -9.26428508758545
    6. '   ' → logprob: -12.38928508758545
    7. '(True' → logprob: -12.51428508758545
    8. 'true' → logprob: -12.63928508758545
    9. 'False' → logprob: -12.76428508758545
    10. 'None' → logprob: -13.76428508758545

Token 1132: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.436736136674881
    2. 'def' → logprob: -1.1867361068725586
    3. ' def' → logprob: -3.0617361068725586
    4. '<|end|>' → logprob: -6.561736106872559
    5. '	def' → logprob: -8.436736106872559
    6. '<|end|>' → logprob: -9.936736106872559
    7. '    
' → logprob: -10.186736106872559
    8. '```' → logprob: -10.436736106872559
    9. '       ' → logprob: -10.686736106872559
    10. '
' → logprob: -10.811736106872559

Token 1134: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0013044030638411641
    2. '   ' → logprob: -7.001304626464844
    3. ' def' → logprob: -7.876304626464844
    4. '	def' → logprob: -11.251304626464844
    5. '```' → logprob: -15.501304626464844
    6. '    
' → logprob: -17.376304626464844
    7. 'de' → logprob: -17.501304626464844
    8. '
' → logprob: -17.501304626464844
    9. '_def' → logprob: -18.251304626464844
    10. '       ' → logprob: -18.251304626464844

Token 1135: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.02867111563682556
    2. 'back' → logprob: -4.1536712646484375
    3. 'solve' → logprob: -4.6536712646484375
    4. ' un' → logprob: -6.1536712646484375
    5. 'def' → logprob: -7.7786712646484375
    6. ' back' → logprob: -8.778671264648438
    7. 'search' → logprob: -9.153671264648438
    8. ' solve' → logprob: -9.403671264648438
    9. '_un' → logprob: -10.028671264648438
    10. 'undo' → logprob: -10.403671264648438

Token 1136: 'assign' (ID: 14297)
  Prédit: 'assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -1.9361264946837764e-07
    2. '(assign' → logprob: -16.625
    3. '	assign' → logprob: -17.375
    4. '_assign' → logprob: -17.5
    5. 'ass' → logprob: -18.0
    6. '.assign' → logprob: -18.5
    7. '   ' → logprob: -18.75
    8. ' assign' → logprob: -19.0
    9. 'assigned' → logprob: -19.125
    10. 'a' → logprob: -20.125

Token 1137: '_cell' (ID: 39197)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017436044290661812
    2. '(' → logprob: -6.376743793487549
    3. 'self' → logprob: -10.87674331665039
    4. '(cell' → logprob: -11.00174331665039
    5. ' (' → logprob: -12.75174331665039
    6. '(
' → logprob: -13.75174331665039
    7. '_cell' → logprob: -14.25174331665039
    8. '   ' → logprob: -14.87674331665039
    9. '_(' → logprob: -14.87674331665039
    10. ' self' → logprob: -16.12674331665039

Token 1138: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005014431662857533
    2. '(' → logprob: -7.62550163269043
    3. '(cell' → logprob: -11.75050163269043
    4. ' (' → logprob: -12.37550163269043
    5. '(
' → logprob: -14.37550163269043
    6. 'self' → logprob: -14.62550163269043
    7. '(sel' → logprob: -16.12550163269043
    8. '(s' → logprob: -16.62550163269043
    9. '(Cell' → logprob: -18.00050163269043
    10. '   ' → logprob: -18.12550163269043

Token 1139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026188939809799194
    2. '(self' → logprob: -4.026188850402832
    3. 'self' → logprob: -5.026188850402832
    4. ',self' → logprob: -7.401188850402832
    5. '       ' → logprob: -8.276188850402832
    6. '   ' → logprob: -8.401188850402832
    7. ' ,' → logprob: -9.401188850402832
    8. ' self' → logprob: -9.401188850402832
    9. '(cell' → logprob: -9.776188850402832
    10. ')' → logprob: -9.776188850402832

Token 1140: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.003196727717295289
    2. ' cell' → logprob: -5.753196716308594
    3. 'self' → logprob: -10.878196716308594
    4. '(cell' → logprob: -17.128196716308594
    5. '	cell' → logprob: -17.128196716308594
    6. ' self' → logprob: -17.378196716308594
    7. 'Cell' → logprob: -18.378196716308594
    8. '.cell' → logprob: -19.753196716308594
    9. 'セル' → logprob: -19.753196716308594
    10. 'cel' → logprob: -19.753196716308594

Token 1141: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015523942187428474
    2. ')' → logprob: -5.640523910522461
    3. '       ' → logprob: -5.765523910522461
    4. '(cell' → logprob: -5.890523910522461
    5. '   ' → logprob: -6.140523910522461
    6. '(' → logprob: -6.765523910522461
    7. '):
' → logprob: -7.265523910522461
    8. '):' → logprob: -7.390523910522461
    9. ')(' → logprob: -7.515523910522461
    10. ' (' → logprob: -8.140523910522461

Token 1142: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.33331814408302307
    2. 'cell' → logprob: -1.5833181142807007
    3. ' cell' → logprob: -2.8333182334899902
    4. ' Cell' → logprob: -3.9583182334899902
    5. '   ' → logprob: -8.958317756652832
    6. ')' → logprob: -10.083317756652832
    7. '(cell' → logprob: -10.583317756652832
    8. '       ' → logprob: -10.958317756652832
    9. '_cell' → logprob: -12.083317756652832
    10. '	cell' → logprob: -12.333317756652832

Token 1143: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12810654938220978
    2. '):' → logprob: -2.1281065940856934
    3. ')' → logprob: -7.378106594085693
    4. ',' → logprob: -8.128106117248535
    5. '       ' → logprob: -9.503106117248535
    6. '):
' → logprob: -9.503106117248535
    7. '   ' → logprob: -9.753106117248535
    8. '):

' → logprob: -10.003106117248535
    9. ' ):
' → logprob: -13.378106117248535
    10. ' ' → logprob: -13.378106117248535

Token 1144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029397865291684866
    2. '   ' → logprob: -6.377939701080322
    3. '
' → logprob: -6.752939701080322
    4. '	cell' → logprob: -10.37794017791748
    5. ' cell' → logprob: -11.37794017791748
    6. '```' → logprob: -11.62794017791748
    7. '    
' → logprob: -12.12794017791748
    8. '        
' → logprob: -12.62794017791748
    9. '	   ' → logprob: -12.75294017791748
    10. 'cell' → logprob: -13.12794017791748

Token 1145: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06779313832521439
    2. 'cell' → logprob: -2.817793130874634
    3. '       ' → logprob: -5.692793369293213
    4. 'value' → logprob: -6.817793369293213
    5. ' self' → logprob: -7.067793369293213
    6. 'if' → logprob: -8.192792892456055
    7. '   ' → logprob: -9.192792892456055
    8. ' cell' → logprob: -9.317792892456055
    9. '```' → logprob: -11.817792892456055
    10. ' value' → logprob: -12.567792892456055

Token 1146: '.used' (ID: 158890)
  Prédit: '.used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.used' → logprob: -0.2019837200641632
    2. '.un' → logprob: -1.7019836902618408
    3. '.' → logprob: -8.201983451843262
    4. 'used' → logprob: -8.451983451843262
    5. ' .' → logprob: -10.576983451843262
    6. '.cells' → logprob: -10.951983451843262
    7. 'un' → logprob: -11.326983451843262
    8. '.ass' → logprob: -11.701983451843262
    9. '   ' → logprob: -12.076983451843262
    10. '.cell' → logprob: -12.201983451843262

Token 1147: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -1.5094070477061905e-05
    2. 'digits' → logprob: -11.625015258789062
    3. 'Digits' → logprob: -12.750015258789062
    4. '_' → logprob: -13.750015258789062
    5. '_cells' → logprob: -14.375015258789062
    6. '```' → logprob: -14.750015258789062
    7. '_chars' → logprob: -15.250015258789062
    8. '
' → logprob: -16.125015258789062
    9. '_tokens' → logprob: -16.125015258789062
    10. '_letters' → logprob: -16.375015258789062

Token 1148: '.dis' (ID: 8454)
  Prédit: '.remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.015070773661136627
    2. '.dis' → logprob: -4.265070915222168
    3. '.' → logprob: -7.015070915222168
    4. 'remove' → logprob: -11.890070915222168
    5. ' .' → logprob: -13.765070915222168
    6. 'discard' → logprob: -15.140070915222168
    7. '.Remove' → logprob: -16.26506996154785
    8. '.clear' → logprob: -16.89006996154785
    9. '	remove' → logprob: -17.01506996154785
    10. ' remove' → logprob: -17.14006996154785

Token 1149: 'card' (ID: 7687)
  Prédit: 'card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.005387668497860432
    2. 'ard' → logprob: -5.255387783050537
    3. 'add' → logprob: -9.755387306213379
    4. 'discard' → logprob: -10.255387306213379
    5. 'car' → logprob: -10.880387306213379
    6. 'remove' → logprob: -11.255387306213379
    7. 'ards' → logprob: -11.505387306213379
    8. 'cart' → logprob: -12.380387306213379
    9. 'guard' → logprob: -13.005387306213379
    10. 'ove' → logprob: -13.130387306213379

Token 1150: '(cell' (ID: 46188)
  Prédit: '(cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cell' → logprob: -0.00015872348740231246
    2. 'cell' → logprob: -8.750158309936523
    3. '[cell' → logprob: -15.875158309936523
    4. ' cell' → logprob: -16.375158309936523
    5. '(' → logprob: -18.375158309936523
    6. '	cell' → logprob: -19.000158309936523
    7. ' (' → logprob: -19.375158309936523
    8. '(card' → logprob: -22.000158309936523
    9. '(
' → logprob: -22.000158309936523
    10. 'Cell' → logprob: -22.500158309936523

Token 1151: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -3.0590548703912646e-05
    2. '.' → logprob: -10.875030517578125
    3. 'value' → logprob: -11.500030517578125
    4. ' .' → logprob: -13.750030517578125
    5. '.cell' → logprob: -15.250030517578125
    6. '(value' → logprob: -15.625030517578125
    7. ').' → logprob: -17.000030517578125
    8. '```' → logprob: -17.375030517578125
    9. '.name' → logprob: -18.750030517578125
    10. '().' → logprob: -18.875030517578125

Token 1152: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.032885707914829254
    2. ')' → logprob: -3.532885789871216
    3. '       ' → logprob: -5.782885551452637
    4. ' )
' → logprob: -10.157885551452637
    5. '())
' → logprob: -11.782885551452637
    6. ')
' → logprob: -13.782885551452637
    7. ' )' → logprob: -14.032885551452637
    8. ')

' → logprob: -14.282885551452637
    9. '   ' → logprob: -14.657885551452637
    10. '()
' → logprob: -15.032885551452637

Token 1153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10115424543619156
    2. '   ' → logprob: -2.351154327392578
    3. 'cell' → logprob: -7.601154327392578
    4. '
' → logprob: -7.976154327392578
    5. '	cell' → logprob: -10.101154327392578
    6. ' cell' → logprob: -10.226154327392578
    7. '```' → logprob: -11.226154327392578
    8. ' ' → logprob: -12.726154327392578
    9. '[cell' → logprob: -12.726154327392578
    10. '        
' → logprob: -12.851154327392578

Token 1154: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' (adapté à ' cell') → logprob: -0.0024829115718603134
    2. '       ' → logprob: -6.252482891082764
    3. ' cell' → logprob: -7.502482891082764
    4. '	cell' → logprob: -13.752483367919922
    5. '```' → logprob: -14.002483367919922
    6. 'self' → logprob: -15.502483367919922
    7. '   ' → logprob: -15.627483367919922
    8. '[cell' → logprob: -16.627483367919922
    9. '(cell' → logprob: -17.002483367919922
    10. '
' → logprob: -17.377483367919922

Token 1155: '.un' (ID: 11508)
  Prédit: '.un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.un' → logprob: -3.4285862057004124e-05
    2. '.' → logprob: -10.37503433227539
    3. ' .' → logprob: -13.75003433227539
    4. 'un' → logprob: -14.00003433227539
    5. '.uns' → logprob: -15.12503433227539
    6. '.unmodifiable' → logprob: -15.37503433227539
    7. '.unshift' → logprob: -16.25003433227539
    8. '.unregister' → logprob: -16.37503433227539
    9. '```' → logprob: -16.37503433227539
    10. '   ' → logprob: -16.50003433227539

Token 1156: 'assign' (ID: 14297)
  Prédit: 'assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -9.729906196298543e-06
    2. '   ' → logprob: -12.000009536743164
    3. '       ' → logprob: -13.500009536743164
    4. 'ass' → logprob: -13.875009536743164
    5. 'assigned' → logprob: -14.375009536743164
    6. '```' → logprob: -15.000009536743164
    7. '.assign' → logprob: -16.125009536743164
    8. '	assign' → logprob: -16.500009536743164
    9. '(assign' → logprob: -17.000009536743164
    10. 'assing' → logprob: -17.125009536743164

Token 1157: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.546478935983032e-05
    2. '()
' → logprob: -10.750025749206543
    3. '()\' → logprob: -13.250025749206543
    4. '()`' → logprob: -14.625025749206543
    5. ' ()' → logprob: -14.750025749206543
    6. '()

' → logprob: -15.000025749206543
    7. '()<' → logprob: -15.375025749206543
    8. '())' → logprob: -15.750025749206543
    9. '()"' → logprob: -16.000024795532227
    10. '(' → logprob: -16.250024795532227

Token 1158: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1159: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003440415021032095
    2. '       ' → logprob: -5.7534403800964355
    3. ' self' → logprob: -8.253440856933594
    4. '   ' → logprob: -13.628440856933594
    5. '
' → logprob: -14.628440856933594
    6. '#' → logprob: -15.378440856933594
    7. '	self' → logprob: -15.503440856933594
    8. '```' → logprob: -16.753440856933594
    9. 'def' → logprob: -17.128440856933594
    10. '(self' → logprob: -17.128440856933594

Token 1160: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.00010247035970678553
    2. '.' → logprob: -9.500102043151855
    3. 'update' → logprob: -10.625102043151855
    4. '.used' → logprob: -13.250102043151855
    5. ' .' → logprob: -14.000102043151855
    6. '.updated' → logprob: -14.625102043151855
    7. '   ' → logprob: -16.625102996826172
    8. ' update' → logprob: -17.375102996826172
    9. '`.' → logprob: -17.375102996826172
    10. '```' → logprob: -18.750102996826172

Token 1161: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.292907877039397e-06
    2. 'poss' → logprob: -13.25000286102295
    3. 'pos' → logprob: -13.50000286102295
    4. '_possible' → logprob: -16.875003814697266
    5. '_positions' → logprob: -18.625003814697266
    6. '_prob' → logprob: -21.000003814697266
    7. '_p' → logprob: -21.250003814697266
    8. ' possibilities' → logprob: -21.375003814697266
    9. 'possible' → logprob: -22.750003814697266
    10. '	pos' → logprob: -22.750003814697266

Token 1162: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09098424017429352
    2. 'oss' → logprob: -2.465984344482422
    3. 'ss' → logprob: -7.215984344482422
    4. 'os' → logprob: -7.465984344482422
    5. 'poss' → logprob: -7.465984344482422
    6. ' possibilities' → logprob: -9.965984344482422
    7. 'ibilities' → logprob: -10.090984344482422
    8. '_possible' → logprob: -11.090984344482422
    9. 'p' → logprob: -11.840984344482422
    10. 'possible' → logprob: -11.965984344482422

Token 1163: 'ibilities' (ID: 25632)
  Prédit: 'ibilities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibilities' → logprob: -0.16029612720012665
    2. 's' → logprob: -1.910296082496643
    3. 'ibil' → logprob: -10.535296440124512
    4. 'sible' → logprob: -10.785296440124512
    5. 'sib' → logprob: -12.160296440124512
    6. 'abilities' → logprob: -12.285296440124512
    7. 'si' → logprob: -12.785296440124512
    8. 'sil' → logprob: -13.035296440124512
    9. 'ibl' → logprob: -13.160296440124512
    10. 'ibility' → logprob: -13.285296440124512

Token 1164: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5163860321044922
    2. '<|end|>' → logprob: -1.3913860321044922
    3. '
' → logprob: -2.141386032104492
    4. '```' → logprob: -3.766386032104492
    5. '    
' → logprob: -4.891386032104492
    6. '<|end|>' → logprob: -5.141386032104492
    7. '  
' → logprob: -8.891386032104492
    8. '        
' → logprob: -9.016386032104492
    9. 'def' → logprob: -9.766386032104492
    10. '``' → logprob: -10.141386032104492

Token 1165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09090489149093628
    2. 'def' → logprob: -2.465904951095581
    3. '```' → logprob: -6.465904712677002
    4. ' def' → logprob: -7.840904712677002
    5. '<|end|>' → logprob: -12.71590518951416
    6. '	def' → logprob: -13.21590518951416
    7. '    
' → logprob: -13.21590518951416
    8. '
' → logprob: -13.21590518951416
    9. '`' → logprob: -13.59090518951416
    10. '  ' → logprob: -13.59090518951416

Token 1166: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008975457400083542
    2. '   ' → logprob: -4.758975505828857
    3. ' def' → logprob: -8.0089750289917
    4. '```' → logprob: -10.6339750289917
    5. '	def' → logprob: -12.5089750289917
    6. '  ' → logprob: -15.8839750289917
    7. '
' → logprob: -16.008975982666016
    8. '    
' → logprob: -16.133975982666016
    9. 'Def' → logprob: -17.008975982666016
    10. '_def' → logprob: -17.133975982666016

Token 1167: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.05498914048075676
    2. 'search' → logprob: -3.8049890995025635
    3. 'back' → logprob: -4.054989337921143
    4. ' solve' → logprob: -4.554989337921143
    5. ' back' → logprob: -6.304989337921143
    6. 'dfs' → logprob: -6.929989337921143
    7. ' search' → logprob: -8.179988861083984
    8. 'def' → logprob: -8.429988861083984
    9. ' dfs' → logprob: -10.304988861083984
    10. 'solver' → logprob: -10.554988861083984

Token 1168: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001037815964082256
    2. '(' → logprob: -9.250103950500488
    3. '_recursive' → logprob: -12.750103950500488
    4. '_(' → logprob: -13.375103950500488
    5. 'self' → logprob: -13.500103950500488
    6. '_cell' → logprob: -14.500103950500488
    7. ' (' → logprob: -14.750103950500488
    8. '_self' → logprob: -15.625103950500488
    9. '   ' → logprob: -15.750103950500488
    10. '():' → logprob: -16.125102996826172

Token 1169: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18575526773929596
    2. 'self' → logprob: -1.9357552528381348
    3. '):
' → logprob: -4.185755252838135
    4. ',' → logprob: -5.560755252838135
    5. '(self' → logprob: -6.185755252838135
    6. '   ' → logprob: -6.435755252838135
    7. ')' → logprob: -6.935755252838135
    8. '_self' → logprob: -7.060755252838135
    9. '_recursive' → logprob: -7.935755252838135
    10. '       ' → logprob: -9.060755729675293

Token 1170: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08175245672464371
    2. '       ' → logprob: -3.2067525386810303
    3. '   ' → logprob: -3.7067525386810303
    4. 'self' → logprob: -5.331752300262451
    5. ':
' → logprob: -5.831752300262451
    6. ':' → logprob: -6.456752300262451
    7. '```' → logprob: -7.206752300262451
    8. '(' → logprob: -7.331752300262451
    9. 'def' → logprob: -7.331752300262451
    10. '(
' → logprob: -7.456752300262451

Token 1171: ' int' (ID: 677)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0291818268597126
    2. 'int' → logprob: -4.029181957244873
    3. 'bool' → logprob: -4.529181957244873
    4. ' None' → logprob: -9.529181480407715
    5. 'void' → logprob: -9.654181480407715
    6. 'self' → logprob: -10.404181480407715
    7. 'def' → logprob: -12.029181480407715
    8. '   ' → logprob: -12.779181480407715
    9. 'List' → logprob: -12.904181480407715
    10. '(None' → logprob: -13.779181480407715

Token 1172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45667219161987305
    2. ':
' → logprob: -1.331672191619873
    3. '       ' → logprob: -2.706672191619873
    4. '   ' → logprob: -3.456672191619873
    5. '(self' → logprob: -5.581672191619873
    6. '):
' → logprob: -9.206672668457031
    7. 'def' → logprob: -9.581672668457031
    8. 'self' → logprob: -9.831672668457031
    9. '():
' → logprob: -9.831672668457031
    10. '(
' → logprob: -10.331672668457031

Token 1173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002028923248872161
    2. '   ' → logprob: -6.252028942108154
    3. ' if' → logprob: -10.127028465270996
    4. 'if' → logprob: -10.252028465270996
    5. '```' → logprob: -11.127028465270996
    6. '    
' → logprob: -13.252028465270996
    7. '
' → logprob: -13.377028465270996
    8. 'def' → logprob: -13.752028465270996
    9. '    ' → logprob: -13.752028465270996
    10. '        
' → logprob: -14.002028465270996

Token 1174: ' #' (ID: 1069)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.06371686607599258
    2. 'if' → logprob: -3.3137168884277344
    3. '       ' → logprob: -3.8137168884277344
    4. 'un' → logprob: -6.063716888427734
    5. ' cell' → logprob: -7.563716888427734
    6. '   ' → logprob: -8.188716888427734
    7. ' if' → logprob: -8.938716888427734
    8. '#' (adapté à ' #') → logprob: -10.938716888427734
    9. 'next' → logprob: -11.938716888427734
    10. 'def' → logprob: -13.188716888427734

Token 1175: ' Back' (ID: 9793)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7045612931251526
    2. 'cell' → logprob: -0.7045612931251526
    3. 'un' → logprob: -4.829561233520508
    4. 'def' → logprob: -5.954561233520508
    5. '#' → logprob: -7.954561233520508
    6. 'next' → logprob: -8.704561233520508
    7. ' if' → logprob: -9.079561233520508
    8. '   ' → logprob: -9.454561233520508
    9. ' cell' → logprob: -10.454561233520508
    10. '       ' → logprob: -11.954561233520508

Token 1176: 'tracking' (ID: 83383)
  Prédit: 'tracking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -0.08738194406032562
    2. '       ' → logprob: -2.5873818397521973
    3. '   ' → logprob: -5.587381839752197
    4. 'def' → logprob: -6.087381839752197
    5. 'track' → logprob: -6.087381839752197
    6. '_tracking' → logprob: -9.962382316589355
    7. '```' → logprob: -10.462382316589355
    8. 'ward' → logprob: -11.212382316589355
    9. '    ' → logprob: -11.337382316589355
    10. '           ' → logprob: -11.462382316589355

Token 1177: ' search' (ID: 3684)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03602839261293411
    2. 'cell' → logprob: -4.4110283851623535
    3. ' cell' → logprob: -4.4110283851623535
    4. '
' → logprob: -5.0360283851623535
    5. '   ' → logprob: -5.5360283851623535
    6. '        
' → logprob: -7.9110283851623535
    7. '    
' → logprob: -9.911028861999512
    8. ' if' → logprob: -10.161028861999512
    9. '```' → logprob: -10.286028861999512
    10. ':' → logprob: -10.536028861999512

Token 1178: ' counting' (ID: 43276)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007036144379526377
    2. '
' → logprob: -8.125703811645508
    3. '   ' → logprob: -8.250703811645508
    4. '        
' → logprob: -9.125703811645508
    5. '```' → logprob: -10.875703811645508
    6. '    
' → logprob: -11.750703811645508
    7. '  
' → logprob: -13.125703811645508
    8. '      ' → logprob: -13.625703811645508
    9. '<|end|>' → logprob: -13.625703811645508
    10. '           ' → logprob: -13.875703811645508

Token 1179: ' number' (ID: 2086)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.046849608421325684
    2. ' if' → logprob: -3.5468497276306152
    3. '       ' → logprob: -4.171849727630615
    4. 'def' → logprob: -6.921849727630615
    5. '   ' → logprob: -8.296849250793457
    6. 'self' → logprob: -8.296849250793457
    7. '```' → logprob: -11.046849250793457
    8. '        
' → logprob: -11.421849250793457
    9. '
' → logprob: -11.921849250793457
    10. 'result' → logprob: -12.921849250793457

Token 1180: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.19965961575508118
    2. ' of' → logprob: -1.8246595859527588
    3. '   ' → logprob: -5.199659824371338
    4. '       ' → logprob: -5.324659824371338
    5. 'def' → logprob: -5.449659824371338
    6. '_of' → logprob: -6.074659824371338
    7. 'self' → logprob: -7.449659824371338
    8. '=' → logprob: -7.949659824371338
    9. '
' → logprob: -8.07465934753418
    10. '	of' → logprob: -8.32465934753418

Token 1181: ' valid' (ID: 4529)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.10039256513118744
    2. ' solutions' → logprob: -2.3503925800323486
    3. 'possible' → logprob: -9.35039234161377
    4. 'valid' → logprob: -9.72539234161377
    5. ' valid' → logprob: -11.10039234161377
    6. 'all' → logprob: -11.60039234161377
    7. ' possible' → logprob: -11.85039234161377
    8. 'def' → logprob: -12.97539234161377
    9. 's' → logprob: -13.60039234161377
    10. 'solution' → logprob: -13.60039234161377

Token 1182: ' solutions' (ID: 9368)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.20152218639850616
    2. ' solutions' → logprob: -1.7015222311019897
    3. 'assign' → logprob: -9.951521873474121
    4. '   ' → logprob: -10.576521873474121
    5. ' assignments' → logprob: -11.076521873474121
    6. 'def' → logprob: -11.576521873474121
    7. 's' → logprob: -11.951521873474121
    8. 'solution' → logprob: -13.576521873474121
    9. ' solution' → logprob: -13.951521873474121
    10. '       ' → logprob: -14.076521873474121

Token 1183: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038205066230148077
    2. '   ' → logprob: -6.753820419311523
    3. '        
' → logprob: -6.753820419311523
    4. '
' → logprob: -7.253820419311523
    5. '()' → logprob: -8.753820419311523
    6. '<|end|>' → logprob: -9.128820419311523
    7. '```' → logprob: -9.128820419311523
    8. ',' → logprob: -9.253820419311523
    9. ':' → logprob: -9.378820419311523
    10. '    
' → logprob: -10.628820419311523

Token 1184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004748029634356499
    2. '
' → logprob: -5.7547478675842285
    3. '   ' → logprob: -7.0047478675842285
    4. '        
' → logprob: -7.5047478675842285
    5. '    
' → logprob: -10.129748344421387
    6. '```' → logprob: -10.379748344421387
    7. '<|end|>' → logprob: -11.004748344421387
    8. '  
' → logprob: -11.504748344421387
    9. ',' → logprob: -13.629748344421387
    10. '<|end|>' → logprob: -13.754748344421387

Token 1185: ' if' (ID: 538)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.06621182709932327
    2. 'if' (adapté à ' if') → logprob: -2.8162119388580322
    3. 'un' → logprob: -5.566211700439453
    4. '   ' → logprob: -8.691211700439453
    5. '       ' → logprob: -8.691211700439453
    6. ' cell' → logprob: -10.191211700439453
    7. 'next' → logprob: -11.066211700439453
    8. ' if' → logprob: -11.316211700439453
    9. 'def' → logprob: -11.941211700439453
    10. '#' → logprob: -14.691211700439453

Token 1186: ' not' (ID: 625)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.18770428001880646
    2. ' all' → logprob: -2.06270432472229
    3. 'self' → logprob: -3.18770432472229
    4. ' self' → logprob: -5.937704086303711
    5. 'len' → logprob: -9.312704086303711
    6. ' len' → logprob: -11.312704086303711
    7. 'not' → logprob: -11.937704086303711
    8. ' not' → logprob: -12.687704086303711
    9. '   ' → logprob: -13.062704086303711
    10. '	all' → logprob: -13.312704086303711

Token 1187: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014656072482466698
    2. 'any' → logprob: -4.264656066894531
    3. 'all' → logprob: -7.639656066894531
    4. ' self' → logprob: -12.014656066894531
    5. '(self' → logprob: -12.639656066894531
    6. ' any' → logprob: -13.889656066894531
    7. '[self' → logprob: -14.014656066894531
    8. '(any' → logprob: -15.889656066894531
    9. ' all' → logprob: -16.63965606689453
    10. 'Any' → logprob: -17.26465606689453

Token 1188: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.5095429420471191
    2. '.get' → logprob: -1.6345429420471191
    3. '.check' → logprob: -2.509542942047119
    4. 'is' → logprob: -2.634542942047119
    5. 'check' → logprob: -3.634542942047119
    6. 'get' → logprob: -4.259542942047119
    7. 'ar' → logprob: -5.884542942047119
    8. '.has' → logprob: -6.384542942047119
    9. '.ar' → logprob: -6.509542942047119
    10. '.update' → logprob: -6.759542942047119

Token 1189: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.1279553291387856e-05
    2. '_ass' → logprob: -11.500011444091797
    3. 'valid' → logprob: -14.125011444091797
    4. 'Valid' → logprob: -16.000011444091797
    5. '_possible' → logprob: -17.875011444091797
    6. '_defined' → logprob: -18.000011444091797
    7. '_initialized' → logprob: -18.125011444091797
    8. '_self' → logprob: -18.125011444091797
    9. '_' → logprob: -18.250011444091797
    10. '_complete' → logprob: -18.375011444091797

Token 1190: '_assignment' (ID: 129834)
  Prédit: '_assignment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_assignment' → logprob: -0.001787513610906899
    2. '():' → logprob: -6.3767876625061035
    3. '_ass' → logprob: -10.626787185668945
    4. '()' → logprob: -10.876787185668945
    5. 'assignment' → logprob: -10.876787185668945
    6. '_' → logprob: -11.876787185668945
    7. '_assign' → logprob: -12.376787185668945
    8. '():
' → logprob: -12.501787185668945
    9. 'Assignment' → logprob: -12.751787185668945
    10. ':' → logprob: -13.376787185668945

Token 1191: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.062085434794425964
    2. '():
' → logprob: -2.8120853900909424
    3. '()' → logprob: -9.062085151672363
    4. '():
' → logprob: -13.937085151672363
    5. ':' → logprob: -14.562085151672363
    6. ' ():' → logprob: -14.687085151672363
    7. '(' → logprob: -17.68708610534668
    8. '():

' → logprob: -17.81208610534668
    9. '()
' → logprob: -18.56208610534668
    10. '()):
' → logprob: -19.06208610534668

Token 1192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015832463279366493
    2. '       ' → logprob: -4.390832424163818
    3. '
' → logprob: -5.890832424163818
    4. ':' → logprob: -8.265832901000977
    5. ':
' → logprob: -8.765832901000977
    6. '   ' → logprob: -10.140832901000977
    7. 'return' → logprob: -10.390832901000977
    8. ' return' → logprob: -11.640832901000977
    9. '          ' → logprob: -11.765832901000977
    10. '<|end|>' → logprob: -11.765832901000977

Token 1193: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00039492646465077996
    2. '           ' → logprob: -8.000394821166992
    3. ' return' → logprob: -9.750394821166992
    4. '       ' → logprob: -13.750394821166992
    5. '   ' → logprob: -16.500394821166992
    6. ':return' → logprob: -17.125394821166992
    7. '	return' → logprob: -18.000394821166992
    8. '
' → logprob: -18.000394821166992
    9. '{return' → logprob: -18.125394821166992
    10. '```' → logprob: -18.375394821166992

Token 1194: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. 'self' → logprob: -15.875006675720215
    4. '
' → logprob: -17.25000762939453
    5. '        
' → logprob: -19.00000762939453
    6. '۰' → logprob: -19.37500762939453
    7. '       ' → logprob: -19.50000762939453
    8. '   ' → logprob: -19.87500762939453
    9. '  ' → logprob: -19.87500762939453
    10. 'None' → logprob: -20.37500762939453

Token 1195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. 'self' → logprob: -15.125
    3. ' ' → logprob: -16.75
    4. '   ' → logprob: -20.125
    5. '       ' → logprob: -21.125
    6. '۰' → logprob: -21.125
    7. '    ' → logprob: -21.5
    8. 'False' → logprob: -22.0
    9. '     ' → logprob: -22.125
    10. '           ' → logprob: -22.125

Token 1196: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035087261348962784
    2. '        
' → logprob: -6.253508567810059
    3. '
' → logprob: -6.753508567810059
    4. '   ' → logprob: -8.753508567810059
    5. 'cell' → logprob: -9.253508567810059
    6. '    
' → logprob: -9.878508567810059
    7. 'un' → logprob: -10.378508567810059
    8. 'next' → logprob: -11.378508567810059
    9. '```' → logprob: -11.503508567810059
    10. '      ' → logprob: -11.628508567810059

Token 1197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001669485354796052
    2. '        
' → logprob: -9.875166893005371
    3. '```' → logprob: -10.125166893005371
    4. '
' → logprob: -10.375166893005371
    5. '   ' → logprob: -10.875166893005371
    6. 'next' → logprob: -12.250166893005371
    7. 'cell' → logprob: -12.625166893005371
    8. 'token' → logprob: -12.750166893005371
    9. '<|end|>' → logprob: -12.875166893005371
    10. 'if' → logprob: -13.750166893005371

Token 1198: ' un' (ID: 537)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.050802893936634064
    2. '       ' → logprob: -3.5508029460906982
    3. 'un' (adapté à ' un') → logprob: -4.050802707672119
    4. 'next' → logprob: -5.800802707672119
    5. ' cell' → logprob: -8.175803184509277
    6. 'if' → logprob: -9.175803184509277
    7. '   ' → logprob: -12.175803184509277
    8. '```' → logprob: -12.925803184509277
    9. '        
' → logprob: -13.425803184509277
    10. ' un' → logprob: -13.550803184509277

Token 1199: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.00027325618430040777
    2. '_ass' → logprob: -8.500273704528809
    3. 'ass' → logprob: -9.750273704528809
    4. '   ' → logprob: -11.750273704528809
    5. ' assigned' → logprob: -13.500273704528809
    6. '_' → logprob: -14.125273704528809
    7. 'assed' → logprob: -14.750273704528809
    8. '       ' → logprob: -15.125273704528809
    9. 'assign' → logprob: -15.625273704528809
    10. 'as' → logprob: -16.125272750854492

Token 1200: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.00015419373812619597
    2. '_cells' → logprob: -9.000154495239258
    3. ' =' → logprob: -10.625154495239258
    4. '_' → logprob: -12.625154495239258
    5. 'cell' → logprob: -12.875154495239258
    6. '=' → logprob: -15.250154495239258
    7. 'Cell' → logprob: -15.250154495239258
    8. '_Cell' → logprob: -16.750154495239258
    9. ' cell' → logprob: -17.250154495239258
    10. '_CELL' → logprob: -17.875154495239258

Token 1201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00033558503491804004
    2. '=' → logprob: -8.000335693359375
    3. ' ' → logprob: -16.250335693359375
    4. 's' → logprob: -16.875335693359375
    5. ')' → logprob: -17.875335693359375
    6. '<|end|>' → logprob: -18.250335693359375
    7. ' is' → logprob: -19.500335693359375
    8. ':' → logprob: -19.625335693359375
    9. ' ' → logprob: -19.875335693359375
    10. '=get' → logprob: -20.000335693359375

Token 1202: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001584850688232109
    2. ' self' → logprob: -8.750158309936523
    3. '(self' → logprob: -19.125158309936523
    4. '[self' → logprob: -20.625158309936523
    5. '=self' → logprob: -21.125158309936523
    6. '       ' → logprob: -22.000158309936523
    7. '	self' → logprob: -22.250158309936523
    8. 's' → logprob: -23.000158309936523
    9. 'Self' → logprob: -23.500158309936523
    10. 'next' → logprob: -24.250158309936523

Token 1203: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.1041145626222715e-05
    2. 'get' → logprob: -11.625011444091797
    3. '.' → logprob: -13.125011444091797
    4. ' .' → logprob: -17.750011444091797
    5. '.
' → logprob: -18.500011444091797
    6. '.ge' → logprob: -18.625011444091797
    7. '
' → logprob: -19.125011444091797
    8. '```' → logprob: -19.375011444091797
    9. '.g' → logprob: -19.500011444091797
    10. '=get' → logprob: -19.500011444091797

Token 1204: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -2.8325677703833207e-05
    2. 'un' → logprob: -10.500028610229492
    3. 'Un' → logprob: -15.125028610229492
    4. '_ass' → logprob: -15.625028610229492
    5. '_uns' → logprob: -15.875028610229492
    6. '_UN' → logprob: -17.875028610229492
    7. '_cell' → logprob: -18.125028610229492
    8. '	un' → logprob: -18.125028610229492
    9. '.un' → logprob: -18.375028610229492
    10. '```' → logprob: -18.625028610229492

Token 1205: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -7.896309739408025e-07
    2. ' assigned' → logprob: -14.500000953674316
    3. 'ass' → logprob: -16.375
    4. '```' → logprob: -17.125
    5. 'assing' → logprob: -17.625
    6. 'assign' → logprob: -17.875
    7. 'assed' → logprob: -18.0
    8. 'as' → logprob: -18.5
    9. 'selected' → logprob: -18.875
    10. '_ass' → logprob: -19.0

Token 1206: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.00026419671485200524
    2. 'cell' → logprob: -8.250264167785645
    3. 'Cell' → logprob: -13.625264167785645
    4. '_cells' → logprob: -13.625264167785645
    5. '_Cell' → logprob: -15.875264167785645
    6. '_CELL' → logprob: -16.50026512145996
    7. ' cell' → logprob: -16.62526512145996
    8. '```' → logprob: -16.87526512145996
    9. '_' → logprob: -17.37526512145996
    10. '-cell' → logprob: -17.50026512145996

Token 1207: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0004527182609308511
    2. 'with' → logprob: -7.750452518463135
    3. '()' → logprob: -11.125452995300293
    4. 'With' → logprob: -12.750452995300293
    5. 's' → logprob: -13.500452995300293
    6. '_' → logprob: -14.000452995300293
    7. '()
' → logprob: -14.375452995300293
    8. '_WITH' → logprob: -14.625452995300293
    9. ' with' → logprob: -14.750452995300293
    10. '(with' → logprob: -15.500452995300293

Token 1208: '_f' (ID: 1337)
  Prédit: 'few'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'few' → logprob: -3.953082341467962e-05
    2. '_f' → logprob: -10.875039100646973
    3. 'f' → logprob: -11.000039100646973
    4. ' few' → logprob: -12.750039100646973
    5. 'Few' → logprob: -14.000039100646973
    6. 'least' → logprob: -17.12504005432129
    7. '
' → logprob: -17.25004005432129
    8. '```' → logprob: -18.87504005432129
    9. '=' → logprob: -19.00004005432129
    10. 'most' → logprob: -19.12504005432129

Token 1209: 'ew' (ID: 937)
  Prédit: 'ew'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -7.93448489275761e-05
    2. 'ews' → logprob: -9.625079154968262
    3. 'e' → logprob: -12.250079154968262
    4. ' ew' → logprob: -12.750079154968262
    5. 'iew' → logprob: -13.125079154968262
    6. 'ewer' → logprob: -13.750079154968262
    7. 'or' → logprob: -13.875079154968262
    8. 'irst' → logprob: -14.250079154968262
    9. 'few' → logprob: -15.500079154968262
    10. 'w' → logprob: -16.000080108642578

Token 1210: 'est' (ID: 376)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.00010437761375214905
    2. '   ' → logprob: -9.375103950500488
    3. '```' → logprob: -12.000103950500488
    4. '_cell' → logprob: -12.875103950500488
    5. ' assigned' → logprob: -13.125103950500488
    6. '       ' → logprob: -13.250103950500488
    7. '           ' → logprob: -13.875103950500488
    8. '
' → logprob: -14.125103950500488
    9. 'ass' → logprob: -14.375103950500488
    10. '_ass' → logprob: -14.375103950500488

Token 1211: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00013643606507685035
    2. 'poss' → logprob: -9.000136375427246
    3. 'pos' → logprob: -11.375136375427246
    4. '_possible' → logprob: -14.500136375427246
    5. 'possible' → logprob: -14.750136375427246
    6. ' possibilities' → logprob: -15.375136375427246
    7. '_prob' → logprob: -16.000137329101562
    8. '```' → logprob: -16.875137329101562
    9. '_cells' → logprob: -17.125137329101562
    10. '
' → logprob: -17.250137329101562

Token 1212: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4812735319137573
    2. 'ibilities' → logprob: -0.9812735319137573
    3. 'sible' → logprob: -4.981273651123047
    4. 'sib' → logprob: -8.731273651123047
    5. 'abilities' → logprob: -10.106273651123047
    6. 'ss' → logprob: -10.481273651123047
    7. '```' → logprob: -11.231273651123047
    8. '_values' → logprob: -11.231273651123047
    9. 'values' → logprob: -11.731273651123047
    10. 'sil' → logprob: -12.231273651123047

Token 1213: 'ibilities' (ID: 25632)
  Prédit: 'ibilities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibilities' → logprob: -1.7954958821064793e-05
    2. 'ibil' → logprob: -11.375018119812012
    3. 'ible' → logprob: -13.250018119812012
    4. 's' → logprob: -13.250018119812012
    5. 'ib' → logprob: -14.000018119812012
    6. 'ibility' → logprob: -14.250018119812012
    7. 'ibl' → logprob: -14.250018119812012
    8. 'ilities' → logprob: -15.875018119812012
    9. 'ibili' → logprob: -16.125017166137695
    10. 'ibles' → logprob: -16.250017166137695

Token 1214: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012500821612775326
    2. ' if' → logprob: -4.887500762939453
    3. 'if' → logprob: -6.137500762939453
    4. ':' → logprob: -7.137500762939453
    5. '
' → logprob: -7.262500762939453
    6. ':
' → logprob: -7.387500762939453
    7. '        
' → logprob: -9.137500762939453
    8. ',' → logprob: -9.887500762939453
    9. '()
' → logprob: -9.887500762939453
    10. '   ' → logprob: -10.012500762939453

Token 1215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07302091270685196
    2. 'if' → logprob: -3.0730209350585938
    3. ' if' → logprob: -4.073020935058594
    4. '   ' → logprob: -5.073020935058594
    5. ':' → logprob: -7.448020935058594
    6. 'If' → logprob: -9.823020935058594
    7. '        
' → logprob: -10.198020935058594
    8. '	if' → logprob: -10.323020935058594
    9. '```' → logprob: -10.573020935058594
    10. '\' → logprob: -10.823020935058594

Token 1216: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000983862322755158
    2. ' if' → logprob: -7.500983715057373
    3. '       ' → logprob: -7.750983715057373
    4. '   ' → logprob: -15.500984191894531
    5. 'If' → logprob: -15.875984191894531
    6. '```' → logprob: -16.00098419189453
    7. '	if' → logprob: -17.25098419189453
    8. '           ' → logprob: -17.75098419189453
    9. '        
' → logprob: -18.87598419189453
    10. 'return' → logprob: -19.25098419189453

Token 1217: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.00010986098641296849
    2. ' un' → logprob: -9.125109672546387
    3. '       ' → logprob: -14.750109672546387
    4. '   ' → logprob: -14.875109672546387
    5. '	un' → logprob: -15.625109672546387
    6. 'not' → logprob: -17.000110626220703
    7. ' not' → logprob: -17.375110626220703
    8. 'None' → logprob: -18.125110626220703
    9. 'uns' → logprob: -18.750110626220703
    10. ' ' → logprob: -18.875110626220703

Token 1218: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -4.739826181321405e-05
    2. 'un' → logprob: -10.00004768371582
    3. 'None' → logprob: -14.37504768371582
    4. '```' → logprob: -14.37504768371582
    5. 'ass' → logprob: -14.87504768371582
    6. ' assigned' → logprob: -16.25004768371582
    7. '   ' → logprob: -16.62504768371582
    8. 'assed' → logprob: -16.62504768371582
    9. 'assign' → logprob: -17.25004768371582
    10. 'not' → logprob: -17.37504768371582

Token 1219: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -4.084206375409849e-05
    2. 'cell' → logprob: -10.125041007995605
    3. '_' → logprob: -16.12504005432129
    4. 'Cell' → logprob: -16.37504005432129
    5. '_CELL' → logprob: -16.62504005432129
    6. '_cells' → logprob: -16.75004005432129
    7. 'is' → logprob: -17.00004005432129
    8. '_Cell' → logprob: -17.12504005432129
    9. '<Cell' → logprob: -17.50004005432129
    10. 'ed' → logprob: -18.12504005432129

Token 1220: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.003600782947614789
    2. 'is' → logprob: -5.628600597381592
    3. '	is' → logprob: -14.87860107421875
    4. '==' → logprob: -15.75360107421875
    5. ' ' → logprob: -16.00360107421875
    6. ')' → logprob: -16.50360107421875
    7. '   ' → logprob: -17.25360107421875
    8. ' ==' → logprob: -17.25360107421875
    9. ' None' → logprob: -18.12860107421875
    10. '=' → logprob: -18.50360107421875

Token 1221: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0052342405542731285
    2. ' None' → logprob: -5.255234241485596
    3. '_None' → logprob: -15.130233764648438
    4. '=None' → logprob: -16.380233764648438
    5. 'none' → logprob: -17.880233764648438
    6. '(None' → logprob: -18.755233764648438
    7. '_none' → logprob: -18.755233764648438
    8. '   ' → logprob: -19.755233764648438
    9. ',None' → logprob: -21.005233764648438
    10. 'not' → logprob: -21.130233764648438

Token 1222: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.049338821321725845
    2. ':' → logprob: -3.0493388175964355
    3. '       ' → logprob: -7.5493388175964355
    4. ':return' → logprob: -8.924339294433594
    5. '           ' → logprob: -9.549339294433594
    6. ':
' → logprob: -12.299339294433594
    7. '   ' → logprob: -12.299339294433594
    8. 'return' → logprob: -12.674339294433594
    9. '):
' → logprob: -12.924339294433594
    10. '
' → logprob: -12.924339294433594

Token 1223: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04097573086619377
    2. '           ' → logprob: -3.29097580909729
    3. 'return' → logprob: -6.040975570678711
    4. '   ' → logprob: -8.040975570678711
    5. ' return' → logprob: -9.165975570678711
    6. ':' → logprob: -10.165975570678711
    7. ':
' → logprob: -10.790975570678711
    8. ':return' → logprob: -11.290975570678711
    9. '
' → logprob: -11.540975570678711
    10. '	   ' → logprob: -11.540975570678711

Token 1224: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14562158286571503
    2. 'return' → logprob: -2.1456215381622314
    3. '       ' → logprob: -4.1456217765808105
    4. '           ' → logprob: -6.1456217765808105
    5. ' self' → logprob: -8.145621299743652
    6. '   ' → logprob: -8.770621299743652
    7. ' return' → logprob: -10.270621299743652
    8. '
' → logprob: -10.270621299743652
    9. '```' → logprob: -10.770621299743652
    10. '#' (adapté à ' #') → logprob: -12.770621299743652

Token 1225: ' All' (ID: 2545)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04940486326813698
    2. '#' → logprob: -3.0494048595428467
    3. '       ' → logprob: -7.299405097961426
    4. ' self' → logprob: -9.174405097961426
    5. '           ' → logprob: -11.299405097961426
    6. 'return' → logprob: -11.549405097961426
    7. 'if' → logprob: -11.924405097961426
    8. ' #' → logprob: -12.049405097961426
    9. '   ' → logprob: -12.924405097961426
    10. '	self' → logprob: -16.17440414428711

Token 1226: ' assigned' (ID: 21482)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.05592126026749611
    2. ' cells' → logprob: -3.3059213161468506
    3. 'assigned' → logprob: -4.0559210777282715
    4. '_cells' → logprob: -8.30592155456543
    5. ' assigned' → logprob: -8.80592155456543
    6. 'values' → logprob: -13.18092155456543
    7. '.cells' → logprob: -13.80592155456543
    8. 'digits' → logprob: -14.05592155456543
    9. '9' → logprob: -15.18092155456543
    10. 'assign' → logprob: -15.18092155456543

Token 1227: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6163099408149719
    2. '           ' → logprob: -1.1163098812103271
    3. '
' → logprob: -2.616309881210327
    4. 'return' → logprob: -3.241309881210327
    5. ' and' → logprob: -4.866310119628906
    6. ' return' → logprob: -5.241310119628906
    7. ',' → logprob: -5.366310119628906
    8. ':return' → logprob: -6.991310119628906
    9. 'and' → logprob: -7.866310119628906
    10. ':' → logprob: -7.991310119628906

Token 1228: ' valid' (ID: 4529)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004621661268174648
    2. ' self' → logprob: -5.379621505737305
    3. ' all' → logprob: -14.629621505737305
    4. '(self' → logprob: -15.129621505737305
    5. 'all' → logprob: -15.504621505737305
    6. ' ' → logprob: -15.504621505737305
    7. '
' → logprob: -15.629621505737305
    8. ' ' → logprob: -17.129621505737305
    9. 's' → logprob: -17.254621505737305
    10. '	self' → logprob: -17.254621505737305

Token 1229: ' ->' (ID: 2747)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019622938707470894
    2. '
' → logprob: -4.894622802734375
    3. 'self' → logprob: -4.894622802734375
    4. '       ' → logprob: -5.769622802734375
    5. 'return' → logprob: -7.269622802734375
    6. ':
' → logprob: -7.894622802734375
    7. '   ' → logprob: -9.269622802734375
    8. ' self' → logprob: -9.769622802734375
    9. ' return' → logprob: -10.644622802734375
    10. ':return' → logprob: -10.894622802734375

Token 1230: ' one' (ID: 1001)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005486433394253254
    2. ' self' → logprob: -5.255486488342285
    3. '           ' → logprob: -8.630486488342285
    4. '
' → logprob: -10.005486488342285
    5. '       ' → logprob: -11.130486488342285
    6. 'return' → logprob: -11.880486488342285
    7. '   ' → logprob: -12.005486488342285
    8. '```' → logprob: -15.380486488342285
    9. ' ' → logprob: -15.505486488342285
    10. '	self' → logprob: -15.630486488342285

Token 1231: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.19673500955104828
    2. ' solution' → logprob: -2.44673490524292
    3. 'return' → logprob: -2.57173490524292
    4. 'self' → logprob: -5.07173490524292
    5. '           ' → logprob: -6.07173490524292
    6. '
' → logprob: -6.19673490524292
    7. '   ' → logprob: -6.32173490524292
    8. ' return' → logprob: -6.69673490524292
    9. '       ' → logprob: -7.19673490524292
    10. 'increment' → logprob: -8.321735382080078

Token 1232: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5253940224647522
    2. '       ' → logprob: -0.9003940224647522
    3. '
' → logprob: -6.650393962860107
    4. '   ' → logprob: -8.275394439697266
    5. 'return' → logprob: -8.275394439697266
    6. '               ' → logprob: -9.025394439697266
    7. ' return' → logprob: -9.400394439697266
    8. '```' → logprob: -9.525394439697266
    9. ':
' → logprob: -10.150394439697266
    10. '	       ' → logprob: -10.650394439697266

Token 1233: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16134825348854065
    2. '           ' → logprob: -1.9113482236862183
    3. '
' → logprob: -7.411348342895508
    4. '```' → logprob: -8.036348342895508
    5. 'return' → logprob: -9.036348342895508
    6. '   ' → logprob: -10.161348342895508
    7. 'self' → logprob: -11.411348342895508
    8. '               ' → logprob: -11.661348342895508
    9. ' return' → logprob: -11.911348342895508
    10. '\' → logprob: -13.536348342895508

Token 1234: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011340647004544735
    2. 'return' (adapté à ' return') → logprob: -4.511340618133545
    3. '       ' → logprob: -8.261341094970703
    4. '           ' → logprob: -10.886341094970703
    5. ' self' → logprob: -11.136341094970703
    6. '```' → logprob: -14.511341094970703
    7. '   ' → logprob: -15.011341094970703
    8. ' return' → logprob: -15.011341094970703
    9. '``' → logprob: -17.886341094970703
    10. '               ' → logprob: -17.886341094970703

Token 1235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'self' → logprob: -15.37500286102295
    4. '   ' → logprob: -18.625001907348633
    5. ' self' → logprob: -21.000001907348633
    6. '       ' → logprob: -21.875001907348633
    7. '
' → logprob: -22.500001907348633
    8. '           ' → logprob: -22.625001907348633
    9. '  ' → logprob: -23.500001907348633
    10. '     ' → logprob: -23.875001907348633

Token 1236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. 'self' → logprob: -14.250000953674316
    3. ' ' → logprob: -16.125
    4. '   ' → logprob: -20.375
    5. 'int' → logprob: -20.75
    6. '۱' → logprob: -21.125
    7. '１' → logprob: -21.625
    8. '+' → logprob: -22.1875
    9. '(' → logprob: -22.1875
    10. 'a' → logprob: -22.625

Token 1237: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1261759251356125
    2. '
' → logprob: -2.251175880432129
    3. '        
' → logprob: -4.751175880432129
    4. '   ' → logprob: -6.251175880432129
    5. '    
' → logprob: -6.751175880432129
    6. '  
' → logprob: -6.876175880432129
    7. '<|end|>' → logprob: -8.626175880432129
    8. '
' → logprob: -10.001175880432129
    9. '       
' → logprob: -10.126175880432129
    10. '		
' → logprob: -10.251175880432129

Token 1238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011698059737682343
    2. '   ' → logprob: -5.011698246002197
    3. '
' → logprob: -5.386698246002197
    4. '        
' → logprob: -8.511697769165039
    5. '    
' → logprob: -9.386697769165039
    6. '  
' → logprob: -10.886697769165039
    7. 'count' → logprob: -11.261697769165039
    8. 'for' → logprob: -11.261697769165039
    9. 'total' → logprob: -11.636697769165039
    10. 'result' → logprob: -12.386697769165039

Token 1239: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.26294150948524475
    2. 'total' → logprob: -2.012941598892212
    3. 'result' → logprob: -2.512941598892212
    4. 'for' → logprob: -4.762941360473633
    5. 'solutions' → logprob: -5.262941360473633
    6. 'res' → logprob: -6.137941360473633
    7. '       ' → logprob: -8.387941360473633
    8. 'solution' → logprob: -8.637941360473633
    9. ' count' → logprob: -9.387941360473633
    10. 'results' → logprob: -9.887941360473633

Token 1240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2019159197807312
    2. '=' → logprob: -1.701915979385376
    3. ' +=' → logprob: -7.701915740966797
    4. ' ' → logprob: -10.701915740966797
    5. ')' → logprob: -12.451915740966797
    6. '_' → logprob: -12.576915740966797
    7. '+=' → logprob: -13.201915740966797
    8. '  ' → logprob: -13.326915740966797
    9. '   ' → logprob: -13.326915740966797
    10. 's' → logprob: -13.451915740966797

Token 1241: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.125001907348633
    4. '۰' → logprob: -21.500001907348633
    5. '=' → logprob: -22.125001907348633
    6. ' ' → logprob: -23.500001907348633
    7. '       ' → logprob: -23.875001907348633
    8. '０' → logprob: -24.125001907348633
    9. '```' → logprob: -24.250001907348633
    10. '000' → logprob: -24.875001907348633

Token 1242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -22.125
    4. '```' → logprob: -23.375
    5. '۰' → logprob: -23.625
    6. 'sum' → logprob: -24.875
    7. '０' → logprob: -25.25
    8. '000' → logprob: -25.5
    9. '=' → logprob: -25.625
    10. 'count' → logprob: -25.75

Token 1243: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008577104657888412
    2. ' for' → logprob: -5.0085768699646
    3. 'for' → logprob: -6.8835768699646
    4. '
' → logprob: -7.1335768699646
    5. '        
' → logprob: -11.258577346801758
    6. '   ' → logprob: -12.133577346801758
    7. '	' → logprob: -12.383577346801758
    8. '	for' → logprob: -12.633577346801758
    9. '<|end|>' → logprob: -12.758577346801758
    10. ',' → logprob: -13.008577346801758

Token 1244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19274434447288513
    2. 'for' → logprob: -1.9427443742752075
    3. ' for' → logprob: -3.442744255065918
    4. '	for' → logprob: -11.317744255065918
    5. '   ' → logprob: -12.317744255065918
    6. '```' → logprob: -13.692744255065918
    7. '	' → logprob: -14.067744255065918
    8. '           ' → logprob: -14.317744255065918
    9. '
' → logprob: -14.692744255065918
    10. '               ' → logprob: -15.817744255065918

Token 1245: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07890994846820831
    2. ' for' → logprob: -2.5789098739624023
    3. '       ' → logprob: -10.828909873962402
    4. '```' → logprob: -15.703909873962402
    5. '	for' → logprob: -16.32891082763672
    6. 'value' → logprob: -16.95391082763672
    7. '
' → logprob: -19.20391082763672
    8. '``' → logprob: -19.32891082763672
    9. 'possible' → logprob: -19.32891082763672
    10. '   ' → logprob: -19.45391082763672

Token 1246: ' val' (ID: 1459)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.08249170333147049
    2. 'val' → logprob: -2.582491636276245
    3. ' val' → logprob: -6.332491874694824
    4. ' value' → logprob: -6.332491874694824
    5. 'candidate' → logprob: -10.457491874694824
    6. 'v' → logprob: -11.957491874694824
    7. 'possible' → logprob: -12.957491874694824
    8. 'poss' → logprob: -13.707491874694824
    9. 'digit' → logprob: -14.082491874694824
    10. ' candidate' → logprob: -14.957491874694824

Token 1247: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012521425262093544
    2. 'in' → logprob: -4.387521266937256
    3. ' ' → logprob: -11.887521743774414
    4. '	in' → logprob: -12.887521743774414
    5. 'space' → logprob: -14.137521743774414
    6. 's' → logprob: -14.262521743774414
    7. ' ' → logprob: -15.387521743774414
    8. '_in' → logprob: -15.887521743774414
    9. 'n' → logprob: -16.512521743774414
    10. 'i' → logprob: -16.825021743774414

Token 1248: ' sorted' (ID: 20099)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.1621066778898239
    2. 'sorted' → logprob: -1.9121066331863403
    3. 'list' → logprob: -6.537106513977051
    4. ' sorted' → logprob: -8.28710651397705
    5. ' un' → logprob: -8.78710651397705
    6. ' list' → logprob: -10.66210651397705
    7. 'uns' → logprob: -13.91210651397705
    8. '(sorted' → logprob: -13.91210651397705
    9. '	un' → logprob: -14.66210651397705
    10. 'range' → logprob: -14.78710651397705

Token 1249: '(un' (ID: 33694)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.0009217040496878326
    2. '(un' → logprob: -7.000921726226807
    3. ' un' → logprob: -11.500921249389648
    4. '	un' → logprob: -16.25092124938965
    5. '   ' → logprob: -17.75092124938965
    6. 'list' → logprob: -18.62592124938965
    7. '(' → logprob: -19.25092124938965
    8. 'uns' → logprob: -20.50092124938965
    9. '_un' → logprob: -20.87592124938965
    10. '(list' → logprob: -21.50092124938965

Token 1250: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -2.2127087504486553e-05
    2. 'un' → logprob: -11.500021934509277
    3. 'ass' → logprob: -11.625021934509277
    4. 'assing' → logprob: -13.875021934509277
    5. '```' → logprob: -14.250021934509277
    6. '.ass' → logprob: -14.375021934509277
    7. ' assigned' → logprob: -15.625021934509277
    8. '   ' → logprob: -16.250022888183594
    9. '_ass' → logprob: -16.500022888183594
    10. ')' → logprob: -16.500022888183594

Token 1251: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -6.76628842484206e-05
    2. 'cell' → logprob: -9.750067710876465
    3. '.cell' → logprob: -13.250067710876465
    4. '_cells' → logprob: -13.250067710876465
    5. '._' → logprob: -13.500067710876465
    6. '(cell' → logprob: -14.500067710876465
    7. 'Cell' → logprob: -14.750067710876465
    8. '_CELL' → logprob: -14.750067710876465
    9. '_Cell' → logprob: -15.375067710876465
    10. '-cell' → logprob: -15.500067710876465

Token 1252: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -13.00000286102295
    3. ' .' → logprob: -14.37500286102295
    4. '[pos' → logprob: -18.125003814697266
    5. ').' → logprob: -19.125003814697266
    6. '.value' → logprob: -20.000003814697266
    7. '.p' → logprob: -20.250003814697266
    8. '\.' → logprob: -20.375003814697266
    9. ' ' → logprob: -20.500003814697266
    10. '   ' → logprob: -20.500003814697266

Token 1253: 'sible' (ID: 15301)
  Prédit: 'sible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -8.160971628967673e-05
    2. 's' → logprob: -9.625082015991211
    3. 'possible' → logprob: -11.125082015991211
    4. 'isible' → logprob: -14.875082015991211
    5. '```' → logprob: -15.750082015991211
    6. '.' → logprob: -17.25008201599121
    7. '_possible' → logprob: -17.37508201599121
    8. 'sib' → logprob: -17.37508201599121
    9. '``' → logprob: -17.50008201599121
    10. 'ible' → logprob: -17.62508201599121

Token 1254: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -4.320199877838604e-07
    2. 'values' → logprob: -15.0
    3. '_' → logprob: -17.125
    4. '_VALUES' → logprob: -19.375
    5. '_value' → logprob: -20.75
    6. '.values' → logprob: -21.125
    7. '```' → logprob: -21.125
    8. 's' → logprob: -21.25
    9. '_vals' → logprob: -21.625
    10. 'Values' → logprob: -21.75

Token 1255: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2017097771167755
    2. '):
' → logprob: -1.7017097473144531
    3. '():
' → logprob: -9.451709747314453
    4. '():' → logprob: -9.826709747314453
    5. '       ' → logprob: -9.951709747314453
    6. ':' → logprob: -10.326709747314453
    7. '()):
' → logprob: -10.701709747314453
    8. '):
' → logprob: -10.826709747314453
    9. '   ' → logprob: -10.951709747314453
    10. ')' → logprob: -11.951709747314453

Token 1256: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007379194721579552
    2. ':
' → logprob: -8.125738143920898
    3. '       ' → logprob: -8.750738143920898
    4. ':' → logprob: -9.000738143920898
    5. ' if' → logprob: -10.375738143920898
    6. '   ' → logprob: -10.500738143920898
    7. '          ' → logprob: -10.625738143920898
    8. '```' → logprob: -11.000738143920898
    9. 'if' → logprob: -11.375738143920898
    10. '):
' → logprob: -11.875738143920898

Token 1257: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6657755374908447
    2. 'self' → logprob: -1.2907755374908447
    3. 'if' → logprob: -1.9157755374908447
    4. ' if' → logprob: -2.9157755374908447
    5. ' self' → logprob: -4.665775299072266
    6. '               ' → logprob: -9.415775299072266
    7. 'cell' → logprob: -9.790775299072266
    8. '       ' → logprob: -10.165775299072266
    9. '
' → logprob: -10.665775299072266
    10. '   ' → logprob: -11.040775299072266

Token 1258: ' Try' (ID: 14720)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03440869227051735
    2. 'if' → logprob: -3.4094088077545166
    3. ' self' → logprob: -7.2844085693359375
    4. ' if' → logprob: -10.159408569335938
    5. '           ' → logprob: -10.784408569335938
    6. 'cell' → logprob: -12.159408569335938
    7. 'un' → logprob: -12.659408569335938
    8. 'import' → logprob: -12.909408569335938
    9. '       ' → logprob: -12.909408569335938
    10. '   ' → logprob: -13.034408569335938

Token 1259: ' assigning' (ID: 123177)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28398215770721436
    2. ':
' → logprob: -1.6589821577072144
    3. '(self' → logprob: -4.033982276916504
    4. '           ' → logprob: -4.533982276916504
    5. 'val' → logprob: -4.658982276916504
    6. 'un' → logprob: -5.533982276916504
    7. ':' → logprob: -5.908982276916504
    8. '(
' → logprob: -6.033982276916504
    9. '   ' → logprob: -6.283982276916504
    10. ' self' → logprob: -6.533982276916504

Token 1260: ' val' (ID: 1459)
  Prédit: '(un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(un' → logprob: -0.21166245639324188
    2. 'un' → logprob: -2.211662530899048
    3. 'val' → logprob: -3.586662530899048
    4. '(' → logprob: -3.586662530899048
    5. '(val' → logprob: -4.461662292480469
    6. ' (' → logprob: -4.586662292480469
    7. ' un' → logprob: -6.086662292480469
    8. '(
' → logprob: -7.336662292480469
    9. ' val' → logprob: -7.336662292480469
    10. '           ' → logprob: -7.961662292480469

Token 1261: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004841153509914875
    2. '
' → logprob: -5.754841327667236
    3. ':
' → logprob: -7.629841327667236
    4. ':' → logprob: -7.879841327667236
    5. ',' → logprob: -8.004840850830078
    6. '            
' → logprob: -8.504840850830078
    7. ')' → logprob: -10.004840850830078
    8. '):
' → logprob: -10.254840850830078
    9. '               ' → logprob: -10.254840850830078
    10. '       ' → logprob: -10.629840850830078

Token 1262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021093101531732827
    2. '            
' → logprob: -9.500210762023926
    3. ',' → logprob: -10.125210762023926
    4. '
' → logprob: -10.375210762023926
    5. '       ' → logprob: -10.625210762023926
    6. '               ' → logprob: -11.375210762023926
    7. '   ' → logprob: -11.875210762023926
    8. '          ' → logprob: -12.000210762023926
    9. 'self' → logprob: -12.500210762023926
    10. '           
' → logprob: -13.500210762023926

Token 1263: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3889894187450409
    2. 'if' → logprob: -1.1389894485473633
    3. ' if' → logprob: -7.263989448547363
    4. '           ' → logprob: -7.263989448547363
    5. ' self' → logprob: -7.263989448547363
    6. '   ' → logprob: -12.388989448547363
    7. 'success' → logprob: -12.513989448547363
    8. 'cell' → logprob: -13.138989448547363
    9. '       ' → logprob: -13.388989448547363
    10. '               ' → logprob: -13.513989448547363

Token 1264: '.assign' (ID: 36282)
  Prédit: '.assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.assign' → logprob: -0.04323166236281395
    2. 'assign' → logprob: -3.168231725692749
    3. '.' → logprob: -9.043231964111328
    4. '       ' → logprob: -10.168231964111328
    5. ' .' → logprob: -10.418231964111328
    6. '   ' → logprob: -11.043231964111328
    7. '           ' → logprob: -11.418231964111328
    8. ' assign' → logprob: -11.918231964111328
    9. '(assign' → logprob: -12.918231964111328
    10. '.ass' → logprob: -13.043231964111328

Token 1265: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.01428244635462761
    2. '(un' → logprob: -4.2642822265625
    3. 'and' → logprob: -9.8892822265625
    4. '(' → logprob: -10.5142822265625
    5. '_un' → logprob: -11.3892822265625
    6. 'And' → logprob: -11.6392822265625
    7. '_' → logprob: -12.1392822265625
    8. '(_' → logprob: -12.2642822265625
    9. '_(' → logprob: -12.3892822265625
    10. '```' → logprob: -13.0142822265625

Token 1266: '_update' (ID: 19528)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.0031794982496649027
    2. '_update' → logprob: -5.753179550170898
    3. ' update' → logprob: -13.253179550170898
    4. '   ' → logprob: -17.8781795501709
    5. 'updated' → logprob: -17.8781795501709
    6. 'un' → logprob: -18.3781795501709
    7. '(update' → logprob: -18.8781795501709
    8. ' ' → logprob: -18.8781795501709
    9. 'up' → logprob: -19.1281795501709
    10. 'Update' → logprob: -19.5031795501709

Token 1267: '(un' (ID: 33694)
  Prédit: '(un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(un' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.750000953674316
    3. ' (' → logprob: -16.25
    4. 'un' → logprob: -18.875
    5. '(up' → logprob: -18.875
    6. '(Un' → logprob: -19.5
    7. '(
' → logprob: -20.875
    8. '(ob' → logprob: -21.5
    9. '(u' → logprob: -21.875
    10. '	un' → logprob: -21.875

Token 1268: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -5.512236498361744e-07
    2. 'ass' → logprob: -15.375000953674316
    3. ' assigned' → logprob: -16.375
    4. '```' → logprob: -16.5
    5. 'assign' → logprob: -17.0
    6. 'assing' → logprob: -18.0
    7. 'un' → logprob: -18.125
    8. '(' → logprob: -18.25
    9. '
' → logprob: -18.375
    10. '[' → logprob: -19.25

Token 1269: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.0016841089818626642
    2. 'ed' → logprob: -7.501684188842773
    3. 'assigned' → logprob: -7.501684188842773
    4. 'cell' → logprob: -7.626684188842773
    5. 'val' → logprob: -10.876684188842773
    6. 'al' → logprob: -11.626684188842773
    7. 'cel' → logprob: -11.876684188842773
    8. 'ized' → logprob: -12.001684188842773
    9. 'anced' → logprob: -12.501684188842773
    10. 'ated' → logprob: -12.626684188842773

Token 1270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031091354321688414
    2. ',val' → logprob: -8.125310897827148
    3. ' ,' → logprob: -11.125310897827148
    4. 'val' → logprob: -16.12531089782715
    5. ',value' → logprob: -17.75031089782715
    6. ',
' → logprob: -17.87531089782715
    7. '_,' → logprob: -18.00031089782715
    8. 'cell' → logprob: -18.00031089782715
    9. ',c' → logprob: -18.12531089782715
    10. '(cell' → logprob: -19.25031089782715

Token 1271: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0024756586644798517
    2. ' val' → logprob: -6.002475738525391
    3. '	val' → logprob: -19.12747573852539
    4. '(val' → logprob: -20.00247573852539
    5. '
' → logprob: -20.12747573852539
    6. '           ' → logprob: -20.50247573852539
    7. '   ' → logprob: -21.25247573852539
    8. '[val' → logprob: -21.37747573852539
    9. '_val' → logprob: -22.12747573852539
    10. '```' → logprob: -22.62747573852539

Token 1272: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2525654733181
    2. ')' → logprob: -1.7525655031204224
    3. ')
' → logprob: -3.252565383911133
    4. '
' → logprob: -4.627565383911133
    5. '            
' → logprob: -7.502565383911133
    6. '       ' → logprob: -8.002565383911133
    7. '):
' → logprob: -9.127565383911133
    8. '               ' → logprob: -9.252565383911133
    9. '<|end|>' → logprob: -9.252565383911133
    10. '          ' → logprob: -10.002565383911133

Token 1273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00039504567394033074
    2. '       ' → logprob: -8.000394821166992
    3. '
' → logprob: -11.125394821166992
    4. '```' → logprob: -11.250394821166992
    5. '               ' → logprob: -11.375394821166992
    6. '            
' → logprob: -11.750394821166992
    7. '          ' → logprob: -12.500394821166992
    8. '   ' → logprob: -12.750394821166992
    9. '<|end|>' → logprob: -13.500394821166992
    10. '         ' → logprob: -14.125394821166992

Token 1274: ' if' (ID: 538)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0001589618914294988
    2. '           ' → logprob: -8.75015926361084
    3. ' count' → logprob: -15.37515926361084
    4. 'if' (adapté à ' if') → logprob: -16.000158309936523
    5. '       ' → logprob: -17.125158309936523
    6. '               ' → logprob: -17.375158309936523
    7. 'counts' → logprob: -18.125158309936523
    8. '
' → logprob: -18.500158309936523
    9. 'result' → logprob: -18.875158309936523
    10. '	count' → logprob: -19.125158309936523

Token 1275: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018172772601246834
    2. ' self' → logprob: -4.018172740936279
    3. 'True' → logprob: -11.268173217773438
    4. 'not' → logprob: -12.393173217773438
    5. ' True' → logprob: -13.268173217773438
    6. '(self' → logprob: -13.643173217773438
    7. ' not' → logprob: -13.768173217773438
    8. '   ' → logprob: -14.268173217773438
    9. '
' → logprob: -14.768173217773438
    10. '	self' → logprob: -15.018173217773438

Token 1276: '.ar' (ID: 30683)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.008159440942108631
    2. 'is' → logprob: -5.258159637451172
    3. '.solve' → logprob: -6.133159637451172
    4. 'solve' → logprob: -7.258159637451172
    5. '_is' → logprob: -11.633159637451172
    6. 's' → logprob: -12.633159637451172
    7. ' is' → logprob: -12.633159637451172
    8. '.validate' → logprob: -12.758159637451172
    9. '>' → logprob: -12.883159637451172
    10. '   ' → logprob: -13.383159637451172

Token 1277: 'ithmetic' (ID: 51073)
  Prédit: 'ithmetic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ithmetic' → logprob: -0.0009881501318886876
    2. 'ith' → logprob: -7.000988006591797
    3. '   ' → logprob: -11.250988006591797
    4. '```' → logprob: -11.750988006591797
    5. '``' → logprob: -11.875988006591797
    6. 'th' → logprob: -12.125988006591797
    7. 'it' → logprob: -12.125988006591797
    8. 'is' → logprob: -12.375988006591797
    9. 'self' → logprob: -12.375988006591797
    10. '       ' → logprob: -12.500988006591797

Token 1278: '_constraints' (ID: 153522)
  Prédit: '_constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_constraints' → logprob: -1.1637164789135568e-05
    2. 'constraints' → logprob: -11.500011444091797
    3. 'Constraints' → logprob: -14.875011444091797
    4. '_conditions' → logprob: -14.875011444091797
    5. '_cons' → logprob: -15.875011444091797
    6. '_constraint' → logprob: -16.125011444091797
    7. '_constants' → logprob: -16.625011444091797
    8. 'const' → logprob: -16.625011444091797
    9. '_const' → logprob: -16.625011444091797
    10. '
' → logprob: -16.750011444091797

Token 1279: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -9.782141569303349e-05
    2. 'valid' → logprob: -9.25009822845459
    3. 'Valid' → logprob: -13.37509822845459
    4. '_invalid' → logprob: -17.375097274780273
    5. '	valid' → logprob: -18.000097274780273
    6. '-valid' → logprob: -18.375097274780273
    7. '.valid' → logprob: -18.500097274780273
    8. ' valid' → logprob: -18.750097274780273
    9. '(valid' → logprob: -19.000097274780273
    10. '_VALID' → logprob: -19.000097274780273

Token 1280: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.7292167184641585e-05
    2. ' ():' → logprob: -10.750057220458984
    3. '():
' → logprob: -10.875057220458984
    4. '()' → logprob: -11.000057220458984
    5. '(' → logprob: -16.250057220458984
    6. ':' → logprob: -17.000057220458984
    7. '():
' → logprob: -18.250057220458984
    8. '()==' → logprob: -18.625057220458984
    9. '()>' → logprob: -18.750057220458984
    10. '():

' → logprob: -19.125057220458984

Token 1281: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2833305895328522
    2. '           ' → logprob: -1.4083305597305298
    3. '
' → logprob: -6.28333044052124
    4. 'count' → logprob: -9.158330917358398
    5. '            
' → logprob: -9.783330917358398
    6. '                
' → logprob: -10.408330917358398
    7. '<|end|>' → logprob: -10.408330917358398
    8. '                   ' → logprob: -11.033330917358398
    9. '```' → logprob: -11.033330917358398
    10. '              ' → logprob: -11.533330917358398

Token 1282: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0012055885745212436
    2. '               ' → logprob: -7.5012054443359375
    3. '           ' → logprob: -7.8762054443359375
    4. ' count' → logprob: -8.251205444335938
    5. '                   ' → logprob: -12.251205444335938
    6. '
' → logprob: -12.376205444335938
    7. ',count' → logprob: -13.751205444335938
    8. '	count' → logprob: -14.751205444335938
    9. '(count' → logprob: -15.001205444335938
    10. '[count' → logprob: -15.876205444335938

Token 1283: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931559443473816
    2. '+=' → logprob: -0.6931559443473816
    3. '=' → logprob: -12.193156242370605
    4. '+' → logprob: -13.443156242370605
    5. ']+=' → logprob: -14.193156242370605
    6. ' =' → logprob: -14.443156242370605
    7. '   ' → logprob: -15.068156242370605
    8. '           ' → logprob: -15.568156242370605
    9. '       ' → logprob: -16.19315528869629
    10. ' +' → logprob: -16.69315528869629

Token 1284: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306760805164231e-05
    2. ' self' → logprob: -11.25001335144043
    3. '           ' → logprob: -18.12501335144043
    4. '(self' → logprob: -20.25001335144043
    5. '               ' → logprob: -21.12501335144043
    6. '       ' → logprob: -21.62501335144043
    7. '                   ' → logprob: -23.12501335144043
    8. '	self' → logprob: -23.12501335144043
    9. '
' → logprob: -23.37501335144043
    10. '=self' → logprob: -23.75001335144043

Token 1285: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.0007121934904716909
    2. 'solve' → logprob: -7.2507123947143555
    3. '.' → logprob: -13.500712394714355
    4. '.assign' → logprob: -15.250712394714355
    5. '.sol' → logprob: -15.375712394714355
    6. ' solve' → logprob: -15.875712394714355
    7. ' .' → logprob: -15.875712394714355
    8. 'olve' → logprob: -16.75071144104004
    9. '.save' → logprob: -17.37571144104004
    10. '.resolve' → logprob: -17.87571144104004

Token 1286: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1278705596923828
    2. '()
' → logprob: -2.127870559692383
    3. '(' → logprob: -7.752870559692383
    4. '()\' → logprob: -8.627870559692383
    5. '())' → logprob: -9.877870559692383
    6. '(
' → logprob: -10.002870559692383
    7. '()

' → logprob: -10.127870559692383
    8. '();' → logprob: -10.252870559692383
    9. '       ' → logprob: -10.377870559692383
    10. '           ' → logprob: -10.627870559692383

Token 1287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.029847231227905e-05
    2. 'self' → logprob: -9.500080108642578
    3. ' self' → logprob: -12.750080108642578
    4. '       ' → logprob: -13.750080108642578
    5. '               ' → logprob: -14.250080108642578
    6. '
' → logprob: -15.500080108642578
    7. '```' → logprob: -15.625080108642578
    8. '[self' → logprob: -15.875080108642578
    9. '		' → logprob: -16.250080108642578
    10. '          ' → logprob: -16.625080108642578

Token 1288: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048722829669713974
    2. 'self' (adapté à ' self') → logprob: -3.048722743988037
    3. ' self' → logprob: -8.923723220825195
    4. '       ' → logprob: -13.798723220825195
    5. '               ' → logprob: -14.298723220825195
    6. '   ' → logprob: -14.423723220825195
    7. '                   ' → logprob: -17.173723220825195
    8. '          ' → logprob: -17.298723220825195
    9. '[self' → logprob: -17.923723220825195
    10. '(self' → logprob: -18.048723220825195

Token 1289: '.un' (ID: 11508)
  Prédit: '.un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.un' → logprob: -1.3856492842023727e-06
    2. 'un' → logprob: -14.000000953674316
    3. '.' → logprob: -15.000000953674316
    4. ' .' → logprob: -16.250001907348633
    5. '.uns' → logprob: -18.250001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '\.' → logprob: -19.750001907348633
    8. '	un' → logprob: -19.750001907348633
    9. '.
' → logprob: -20.375001907348633
    10. '.Un' → logprob: -20.500001907348633

Token 1290: 'assign' (ID: 14297)
  Prédit: 'assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -4.723352049040841e-06
    2. 'assigned' → logprob: -12.375004768371582
    3. 'ass' → logprob: -14.875004768371582
    4. '_assign' → logprob: -16.875003814697266
    5. '(assign' → logprob: -17.625003814697266
    6. '.assign' → logprob: -18.250003814697266
    7. 'assing' → logprob: -18.250003814697266
    8. '	assign' → logprob: -18.375003814697266
    9. 'assi' → logprob: -19.500003814697266
    10. 'assert' → logprob: -19.625003814697266

Token 1291: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -9.968312951968983e-06
    2. 'cell' → logprob: -11.625009536743164
    3. 'Cell' → logprob: -14.625009536743164
    4. '_cells' → logprob: -14.750009536743164
    5. '_Cell' → logprob: -15.875009536743164
    6. '_CELL' → logprob: -18.250009536743164
    7. '```' → logprob: -18.625009536743164
    8. '(cell' → logprob: -18.750009536743164
    9. '<Cell' → logprob: -18.750009536743164
    10. ' cell' → logprob: -18.875009536743164

Token 1292: '(un' (ID: 33694)
  Prédit: '(un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(un' → logprob: -0.00020568605395965278
    2. '(' → logprob: -8.500205993652344
    3. ' (' → logprob: -13.875205993652344
    4. 'un' → logprob: -14.375205993652344
    5. '(up' → logprob: -14.875205993652344
    6. '(
' → logprob: -15.750205993652344
    7. '(Un' → logprob: -17.250205993652344
    8. '(ob' → logprob: -17.500205993652344
    9. '(open' → logprob: -17.500205993652344
    10. '(in' → logprob: -17.750205993652344

Token 1293: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -6.2729995988775045e-06
    2. 'un' → logprob: -12.250006675720215
    3. 'ass' → logprob: -13.750006675720215
    4. ' assigned' → logprob: -16.3750057220459
    5. '_ass' → logprob: -16.6250057220459
    6. 'assed' → logprob: -16.6250057220459
    7. 'assing' → logprob: -17.0000057220459
    8. 'igned' → logprob: -17.7500057220459
    9. 'assign' → logprob: -18.1250057220459
    10. '```' → logprob: -18.6250057220459

Token 1294: '_cell' (ID: 39197)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.048784252256155014
    2. '_cell' → logprob: -3.0487842559814453
    3. '_un' → logprob: -9.423784255981445
    4. 'cell' → logprob: -9.548784255981445
    5. 'assigned' → logprob: -11.423784255981445
    6. '_cells' → logprob: -11.673784255981445
    7. '(un' → logprob: -12.173784255981445
    8. ' un' → logprob: -12.548784255981445
    9. 'unc' → logprob: -12.673784255981445
    10. 'uns' → logprob: -13.173784255981445

Token 1295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009551709517836571
    2. '<|end|>' → logprob: -7.000955104827881
    3. ')return' → logprob: -11.750955581665039
    4. ' )' → logprob: -11.875955581665039
    5. ')
' → logprob: -12.125955581665039
    6. '       ' → logprob: -12.375955581665039
    7. ')}' → logprob: -12.625955581665039
    8. '<|end|>' → logprob: -12.625955581665039
    9. '())' → logprob: -12.875955581665039
    10. ')#' → logprob: -13.625955581665039

Token 1296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028368495404720306
    2. '```' → logprob: -6.62783670425415
    3. '<|end|>' → logprob: -6.87783670425415
    4. 'return' → logprob: -8.502837181091309
    5. '   ' → logprob: -9.502837181091309
    6. ' return' → logprob: -9.877837181091309
    7. '        
' → logprob: -10.002837181091309
    8. '           ' → logprob: -10.752837181091309
    9. '``' → logprob: -11.627837181091309
    10. '
' → logprob: -11.627837181091309

Token 1297: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3884488642215729
    2. '       ' → logprob: -1.1384488344192505
    3. ' return' → logprob: -6.638448715209961
    4. '   ' → logprob: -8.513448715209961
    5. '	return' → logprob: -10.263448715209961
    6. ':return' → logprob: -11.888448715209961
    7. '```' → logprob: -12.388448715209961
    8. '{return' → logprob: -12.513448715209961
    9. '        
' → logprob: -12.638448715209961
    10. ' ' → logprob: -12.888448715209961

Token 1298: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.547789674485102e-05
    2. ' count' → logprob: -10.250035285949707
    3. '	count' → logprob: -21.625036239624023
    4. '(count' → logprob: -23.500036239624023
    5. 'counts' → logprob: -23.625036239624023
    6. '[count' → logprob: -23.750036239624023
    7. '$count' → logprob: -24.750036239624023
    8. '_count' → logprob: -25.250036239624023
    9. '<count' → logprob: -25.500036239624023
    10. '=count' → logprob: -26.125036239624023

Token 1299: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1300: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1301: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4154205620288849
    2. ' count' → logprob: -1.5404205322265625
    3. ' solve' → logprob: -2.1654205322265625
    4. ' arithmetic' → logprob: -5.0404205322265625
    5. ' find' → logprob: -6.2904205322265625
    6. ' run' → logprob: -6.6654205322265625
    7. ' parse' → logprob: -7.6654205322265625
    8. ' solution' → logprob: -8.790420532226562
    9. 'count' → logprob: -9.040420532226562
    10. ' test' → logprob: -9.165420532226562

Token 1302: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.018205896019935608
    2. '():
' → logprob: -4.0182061195373535
    3. ' ():' → logprob: -10.518205642700195
    4. '()' → logprob: -10.768205642700195
    5. '():
' → logprob: -12.268205642700195
    6. '():

' → logprob: -13.393205642700195
    7. '()>' → logprob: -13.768205642700195
    8. '()->' → logprob: -16.768205642700195
    9. '().' → logprob: -16.893205642700195
    10. ':' → logprob: -16.893205642700195

Token 1303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.531747579574585
    2. ' import' → logprob: -1.406747579574585
    3. 'import' → logprob: -2.031747579574585
    4. 'values' → logprob: -4.031747817993164
    5. ' values' → logprob: -5.156747817993164
    6. '```' → logprob: -5.281747817993164
    7. '	import' → logprob: -5.406747817993164
    8. '	values' → logprob: -6.531747817993164
    9. ' input' → logprob: -7.156747817993164
    10. 'input' → logprob: -8.281747817993164

Token 1304: ' import' (ID: 1588)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.47677192091941833
    2. 'import' (adapté à ' import') → logprob: -1.3517719507217407
    3. ' values' → logprob: -2.851771831512451
    4. ' import' → logprob: -3.101771831512451
    5. 'input' → logprob: -5.226771831512451
    6. 'initial' → logprob: -5.226771831512451
    7. ' initial' → logprob: -5.726771831512451
    8. ' input' → logprob: -6.601771831512451
    9. 'inputs' → logprob: -6.726771831512451
    10. '   ' → logprob: -7.226771831512451

Token 1305: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -5.836499985889532e-05
    2. ' sys' → logprob: -9.7500581741333
    3. '=sys' → logprob: -17.375059127807617
    4. 'json' → logprob: -18.250059127807617
    5. '(sys' → logprob: -19.375059127807617
    6. '	sys' → logprob: -20.500059127807617
    7. '_sys' → logprob: -20.875059127807617
    8. 'copy' → logprob: -21.125059127807617
    9. 'random' → logprob: -22.000059127807617
    10. 'math' → logprob: -22.125059127807617

Token 1306: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2561902105808258
    2. '
' → logprob: -2.256190299987793
    3. 'values' → logprob: -2.381190299987793
    4. ' values' → logprob: -4.131190299987793
    5. '    
' → logprob: -5.256190299987793
    6. 'input' → logprob: -6.006190299987793
    7. '	values' → logprob: -6.381190299987793
    8. ' input' → logprob: -7.381190299987793
    9. 'inputs' → logprob: -7.506190299987793
    10. ' lines' → logprob: -7.506190299987793

Token 1307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1802540421485901
    2. 'values' → logprob: -2.0552539825439453
    3. 'input' → logprob: -3.6802539825439453
    4. 'inputs' → logprob: -5.805253982543945
    5. ' values' → logprob: -5.930253982543945
    6. 'data' → logprob: -6.180253982543945
    7. ' input' → logprob: -6.555253982543945
    8. ' lines' → logprob: -6.930253982543945
    9. '```' → logprob: -7.930253982543945
    10. 'lines' → logprob: -8.180253982543945

Token 1308: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.16066662967205048
    2. 'input' → logprob: -2.4106667041778564
    3. '   ' → logprob: -3.1606667041778564
    4. 'inputs' → logprob: -4.910666465759277
    5. 'data' → logprob: -5.785666465759277
    6. 'lines' → logprob: -5.910666465759277
    7. ' values' → logprob: -6.660666465759277
    8. 'args' → logprob: -7.160666465759277
    9. ' input' → logprob: -7.785666465759277
    10. 'line' → logprob: -8.285666465759277

Token 1309: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22543193399906158
    2. ' =' → logprob: -1.6004319190979004
    3. '   ' → logprob: -11.725432395935059
    4. '=[]' → logprob: -12.475432395935059
    5. '_' → logprob: -13.350432395935059
    6. '[]' → logprob: -14.350432395935059
    7. '	' → logprob: -14.475432395935059
    8. '[:]' → logprob: -14.475432395935059
    9. ' =[' → logprob: -14.600432395935059
    10. '=line' → logprob: -14.600432395935059

Token 1310: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11348425596952438
    2. '[' → logprob: -3.1134841442108154
    3. '[list' → logprob: -3.3634841442108154
    4. ' list' → logprob: -3.6134841442108154
    5. '[]' → logprob: -7.6134843826293945
    6. ' [' → logprob: -7.7384843826293945
    7. '[-' → logprob: -8.238484382629395
    8. '[len' → logprob: -10.363484382629395
    9. '[]
' → logprob: -10.613484382629395
    10. '(list' → logprob: -12.738484382629395

Token 1311: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.625005722045898
    3. '(int' → logprob: -13.250005722045898
    4. '(sys' → logprob: -16.0000057220459
    5. '()' → logprob: -16.6250057220459
    6. 'map' → logprob: -17.1250057220459
    7. '(range' → logprob: -18.0000057220459
    8. '(
' → logprob: -18.5000057220459
    9. '(eval' → logprob: -18.5000057220459
    10. '(m' → logprob: -19.1250057220459

Token 1312: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.5690089639974758e-05
    2. '(' → logprob: -11.625015258789062
    3. 'int' → logprob: -12.000015258789062
    4. '(str' → logprob: -15.000015258789062
    5. '   ' → logprob: -16.500015258789062
    6. ' int' → logprob: -17.000015258789062
    7. '```' → logprob: -17.500015258789062
    8. '=int' → logprob: -17.750015258789062
    9. '(
' → logprob: -17.875015258789062
    10. ' (' → logprob: -18.000015258789062

Token 1313: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00441112881526351
    2. ',' → logprob: -5.504411220550537
    3. 'sys' → logprob: -8.504410743713379
    4. '(' → logprob: -10.129410743713379
    5. ' (' → logprob: -10.129410743713379
    6. '=sys' → logprob: -10.504410743713379
    7. ' sys' → logprob: -11.629410743713379
    8. '   ' → logprob: -12.129410743713379
    9. ' ,' → logprob: -12.754410743713379
    10. '	sys' → logprob: -13.254410743713379

Token 1314: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -5.860340752406046e-05
    2. ' sys' → logprob: -9.7500581741333
    3. '(sys' → logprob: -15.2500581741333
    4. '   ' → logprob: -16.875059127807617
    5. '=sys' → logprob: -18.500059127807617
    6. '	sys' → logprob: -18.875059127807617
    7. 'input' → logprob: -21.000059127807617
    8. '```' → logprob: -22.125059127807617
    9. 'stdin' → logprob: -22.250059127807617
    10. '_sys' → logprob: -23.625059127807617

Token 1315: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.04859089106321335
    2. '.argv' → logprob: -3.048590898513794
    3. '.' → logprob: -13.173590660095215
    4. '.stdout' → logprob: -14.798590660095215
    5. 'stdin' → logprob: -15.298590660095215
    6. '.readline' → logprob: -15.298590660095215
    7. '.std' → logprob: -15.673590660095215
    8. ' .' → logprob: -15.798590660095215
    9. '(stdin' → logprob: -15.798590660095215
    10. 'argv' → logprob: -16.17359161376953

Token 1316: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0016919655026867986
    2. '.stdin' → logprob: -7.001691818237305
    3. '.read' → logprob: -7.251691818237305
    4. '.readlines' → logprob: -9.876691818237305
    5. '().' → logprob: -11.626691818237305
    6. '.argv' → logprob: -12.126691818237305
    7. '.' → logprob: -12.501691818237305
    8. 'read' → logprob: -15.001691818237305
    9. ' .' → logprob: -15.251691818237305
    10. ' readline' → logprob: -15.626691818237305

Token 1317: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.60414821645827e-06
    2. '()' → logprob: -12.375004768371582
    3. '(' → logprob: -16.250003814697266
    4. ' ().' → logprob: -16.250003814697266
    5. 'split' → logprob: -17.750003814697266
    6. '()[' → logprob: -19.000003814697266
    7. '.split' → logprob: -19.375003814697266
    8. '())' → logprob: -20.000003814697266
    9. '()))' → logprob: -20.250003814697266
    10. '().'' → logprob: -20.375003814697266

Token 1318: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03374863043427467
    2. 'strip' → logprob: -3.5337486267089844
    3. 'read' → logprob: -5.533748626708984
    4. 'decode' → logprob: -10.533748626708984
    5. 'rstrip' → logprob: -11.658748626708984
    6. '().' → logprob: -13.408748626708984
    7. 'replace' → logprob: -13.783748626708984
    8. '(split' → logprob: -13.908748626708984
    9. ' split' → logprob: -15.033748626708984
    10. '.split' → logprob: -17.658748626708984

Token 1319: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -14.500000953674316
    3. ' ().' → logprob: -17.75
    4. '.split' → logprob: -20.75
    5. 'split' → logprob: -21.875
    6. '()[' → logprob: -22.125
    7. '(' → logprob: -22.5
    8. '().'' → logprob: -22.5
    9. '()
' → logprob: -22.625
    10. '   ' → logprob: -22.75

Token 1320: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. '(split' → logprob: -16.0
    3. ' split' → logprob: -16.625
    4. '.split' → logprob: -21.125
    5. 'spl' → logprob: -21.125
    6. 'rstrip' → logprob: -22.625
    7. 'replace' → logprob: -23.125
    8. 'strip' → logprob: -23.375
    9. 'plit' → logprob: -23.875
    10. 'sp' → logprob: -23.875

Token 1321: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0068660941906273365
    2. '()' → logprob: -5.006865978240967
    3. '('' → logprob: -9.631866455078125
    4. '()))
' → logprob: -9.881866455078125
    5. '(' → logprob: -11.256866455078125
    6. '(','' → logprob: -11.506866455078125
    7. '))' → logprob: -12.256866455078125
    8. '()));' → logprob: -13.256866455078125
    9. '())' → logprob: -13.381866455078125
    10. '())))' → logprob: -14.381866455078125

Token 1322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032521041575819254
    2. '
' → logprob: -5.878252029418945
    3. '    
' → logprob: -8.753252029418945
    4. 'p' → logprob: -9.128252029418945
    5. 'result' → logprob: -10.003252029418945
    6. '```' → logprob: -10.628252029418945
    7. 'for' → logprob: -11.003252029418945
    8. 'if' → logprob: -11.128252029418945
    9. 'solver' → logprob: -11.128252029418945
    10. 'solutions' → logprob: -11.753252029418945

Token 1323: ' puzzle' (ID: 37488)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0017064863350242376
    2. 'ap' → logprob: -6.501706600189209
    3. '   ' → logprob: -9.25170612335205
    4. 'solver' → logprob: -9.37670612335205
    5. ' puzzle' → logprob: -10.87670612335205
    6. 'if' → logprob: -13.37670612335205
    7. '
' → logprob: -14.00170612335205
    8. '```' → logprob: -15.25170612335205
    9. 'solution' → logprob: -15.50170612335205
    10. 'Puzzle' → logprob: -15.50170612335205

Token 1324: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141734182834625
    2. ' =' → logprob: -1.701417326927185
    3. 'p' → logprob: -12.826416969299316
    4. '=p' → logprob: -13.826416969299316
    5. '=
' → logprob: -15.326416969299316
    6. '＝' → logprob: -17.076417922973633
    7. '   ' → logprob: -17.076417922973633
    8. ' =
' → logprob: -17.951417922973633
    9. '```' → logprob: -18.076417922973633
    10. '<|end|>' → logprob: -18.076417922973633

Token 1325: ' Arithmetic' (ID: 179942)
  Prédit: 'Arithmetic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arithmetic' → logprob: -2.935296834039036e-06
    2. ' Arithmetic' → logprob: -12.75000286102295
    3. 'Ar' → logprob: -21.750003814697266
    4. '   ' → logprob: -24.875003814697266
    5. 'Arduino' → logprob: -26.500003814697266
    6. ' arithmetic' → logprob: -26.625003814697266
    7. 'AR' → logprob: -27.375003814697266
    8. ' ' → logprob: -27.500003814697266
    9. 'ar' → logprob: -28.250003814697266
    10. '```' → logprob: -28.625003814697266

Token 1326: 'Puzzle' (ID: 127876)
  Prédit: 'Puzzle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Puzzle' → logprob: -2.5776860184123507e-06
    2. 'p' → logprob: -13.12500286102295
    3. 'Arithmetic' → logprob: -15.25000286102295
    4. 'Sud' → logprob: -16.375001907348633
    5. 'uzzle' → logprob: -17.000001907348633
    6. ' Puzzle' → logprob: -17.125001907348633
    7. '
' → logprob: -17.375001907348633
    8. '_p' → logprob: -18.625001907348633
    9. ' puzzle' → logprob: -18.625001907348633
    10. 'P' → logprob: -19.125001907348633

Token 1327: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.5759604573249817
    2. 'values' → logprob: -0.8259604573249817
    3. ' values' → logprob: -10.950960159301758
    4. '([' → logprob: -13.200960159301758
    5. '.values' → logprob: -13.700960159301758
    6. '[' → logprob: -15.450960159301758
    7. '	values' → logprob: -16.075960159301758
    8. 'Values' → logprob: -16.950960159301758
    9. '([]' → logprob: -17.200960159301758
    10. '(' → logprob: -17.575960159301758

Token 1328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5769176483154297
    2. ')
' → logprob: -0.8269176483154297
    3. '   ' → logprob: -6.95191764831543
    4. ')
' → logprob: -11.95191764831543
    5. ')p' → logprob: -12.57691764831543
    6. '())
' → logprob: -12.95191764831543
    7. '(p' → logprob: -13.07691764831543
    8. ').' → logprob: -13.45191764831543
    9. '())' → logprob: -14.07691764831543
    10. '()
' → logprob: -14.32691764831543

Token 1329: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10618291795253754
    2. '   ' → logprob: -2.606182813644409
    3. 'count' → logprob: -4.231183052062988
    4. 'result' → logprob: -4.481183052062988
    5. '```' → logprob: -7.356183052062988
    6. 'solutions' → logprob: -7.981183052062988
    7. ' print' → logprob: -10.356183052062988
    8. 'results' → logprob: -10.731183052062988
    9. 'solution' → logprob: -11.606183052062988
    10. '``' → logprob: -12.481183052062988

Token 1330: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00011558275582501665
    2. 'count' → logprob: -9.500115394592285
    3. 'result' → logprob: -10.250115394592285
    4. '   ' → logprob: -12.875115394592285
    5. 'solutions' → logprob: -13.375115394592285
    6. ' print' → logprob: -13.875115394592285
    7. '```' → logprob: -16.0001163482666
    8. 'res' → logprob: -16.6251163482666
    9. 'results' → logprob: -16.8751163482666
    10. 'prints' → logprob: -17.0001163482666

Token 1331: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -8.2994620242971e-06
    2. 'p' → logprob: -11.750008583068848
    3. '(' → logprob: -15.000008583068848
    4. '(
' → logprob: -21.12500762939453
    5. ' (' → logprob: -21.50000762939453
    6. '((' → logprob: -22.37500762939453
    7. '```' → logprob: -23.12500762939453
    8. '	p' → logprob: -23.50000762939453
    9. '(f' → logprob: -23.50000762939453
    10. '   ' → logprob: -23.50000762939453

Token 1332: 'uzzle' (ID: 38271)
  Prédit: 'uzzle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uzzle' → logprob: -1.3856492842023727e-06
    2. 'uz' → logprob: -13.875000953674316
    3. '#' → logprob: -16.500001907348633
    4. 'uzz' → logprob: -16.625001907348633
    5. 'zzle' → logprob: -16.625001907348633
    6. 'uzzles' → logprob: -17.000001907348633
    7. '[' → logprob: -17.500001907348633
    8. 'p' → logprob: -18.125001907348633
    9. '(' → logprob: -18.250001907348633
    10. '`' → logprob: -18.625001907348633

Token 1333: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -1.0921942703134846e-05
    2. '.sol' → logprob: -11.87501049041748
    3. ').' → logprob: -13.25001049041748
    4. '.' → logprob: -13.37501049041748
    5. ' .' → logprob: -14.50001049041748
    6. 'solve' → logprob: -17.500011444091797
    7. '.run' → logprob: -18.125011444091797
    8. '`.' → logprob: -18.625011444091797
    9. '>.' → logprob: -18.625011444091797
    10. ')' → logprob: -18.875011444091797

Token 1334: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0002690840628929436
    2. '()' → logprob: -8.250268936157227
    3. '())
' → logprob: -11.875268936157227
    4. ')' → logprob: -14.625268936157227
    5. ' ())' → logprob: -15.375268936157227
    6. '()
' → logprob: -16.375268936157227
    7. '())

' → logprob: -17.625268936157227
    8. '(' → logprob: -17.625268936157227
    9. '();)' → logprob: -18.625268936157227
    10. '()]' → logprob: -19.000268936157227

Token 1335: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004265015944838524
    2. '```' → logprob: -6.004264831542969
    3. ' if' → logprob: -7.004264831542969
    4. '#' → logprob: -7.629264831542969
    5. '<|end|>' → logprob: -7.879264831542969
    6. '<|end|>' → logprob: -12.754264831542969
    7. 'If' → logprob: -12.754264831542969
    8. '[' → logprob: -12.879264831542969
    9. '__' → logprob: -14.004264831542969
    10. '\' → logprob: -14.254264831542969

Token 1336: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12707573175430298
    2. ' __' → logprob: -2.127075672149658
    3. 'name' → logprob: -9.002076148986816
    4. '_name' → logprob: -11.377076148986816
    5. 'if' → logprob: -12.752076148986816
    6. '___' → logprob: -13.252076148986816
    7. ''' → logprob: -13.627076148986816
    8. ' "__' → logprob: -13.627076148986816
    9. '.__' → logprob: -13.877076148986816
    10. '```' → logprob: -13.877076148986816

Token 1337: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19280245900154114
    2. '==' → logprob: -2.0678024291992188
    3. ' ==' → logprob: -3.3178024291992188
    4. '=="' → logprob: -4.817802429199219
    5. '=='' → logprob: -5.442802429199219
    6. 'name' → logprob: -9.067802429199219
    7. '```' → logprob: -10.442802429199219
    8. 'main' → logprob: -10.692802429199219
    9. ' __' → logprob: -10.817802429199219
    10. 'if' → logprob: -11.192802429199219

Token 1338: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003065030323341489
    2. '==' → logprob: -8.375306129455566
    3. '__.__' → logprob: -9.750306129455566
    4. '=="' → logprob: -11.875306129455566
    5. '=='' → logprob: -12.750306129455566
    6. '__('' → logprob: -13.125306129455566
    7. '```' → logprob: -13.625306129455566
    8. '__
' → logprob: -13.875306129455566
    9. '__["' → logprob: -14.000306129455566
    10. '__[' → logprob: -14.250306129455566

Token 1339: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2556316554546356
    2. '__' → logprob: -2.005631685256958
    3. ' ==' → logprob: -2.755631685256958
    4. '=='' → logprob: -3.880631685256958
    5. '=="' → logprob: -5.005631446838379
    6. '===' → logprob: -11.130631446838379
    7. '==
' → logprob: -11.255631446838379
    8. '['' → logprob: -11.255631446838379
    9. '[' → logprob: -11.505631446838379
    10. '==='' → logprob: -11.630631446838379

Token 1340: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4740811586380005
    2. ''' → logprob: -0.9740811586380005
    3. '__' → logprob: -12.974081039428711
    4. ' "__' → logprob: -13.724081039428711
    5. ' '__' → logprob: -15.224081039428711
    6. ''"' → logprob: -16.22408103942871
    7. '('__' → logprob: -16.47408103942871
    8. '"user' → logprob: -17.09908103942871
    9. '"'' → logprob: -17.22408103942871
    10. ''name' → logprob: -17.22408103942871

Token 1341: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0010370950913056731
    2. '__' → logprob: -6.876037120819092
    3. 'name' → logprob: -12.501036643981934
    4. 'built' → logprob: -15.626036643981934
    5. 'python' → logprob: -15.751036643981934
    6. '__':
' → logprob: -16.50103759765625
    7. ' main' → logprob: -16.75103759765625
    8. '_main' → logprob: -17.50103759765625
    9. 'ma' → logprob: -17.62603759765625
    10. 'm' → logprob: -18.00103759765625

Token 1342: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.038301508873701096
    2. '__' → logprob: -3.288301467895508
    3. '__":
' → logprob: -8.288301467895508
    4. '__
' → logprob: -13.038301467895508
    5. '__.__' → logprob: -13.663301467895508
    6. '__:' → logprob: -13.788301467895508
    7. '__.' → logprob: -14.038301467895508
    8. '('__' → logprob: -14.038301467895508
    9. '_' → logprob: -14.288301467895508
    10. '__('' → logprob: -15.038301467895508

Token 1343: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001395592000335455
    2. '__' → logprob: -7.5013957023620605
    3. ' main' → logprob: -7.5013957023620605
    4. '   ' → logprob: -8.376395225524902
    5. '	main' → logprob: -10.751395225524902
    6. '_main' → logprob: -11.626395225524902
    7. '(main' → logprob: -12.251395225524902
    8. 'python' → logprob: -12.626395225524902
    9. '__':
' → logprob: -12.626395225524902
    10. '    
' → logprob: -12.876395225524902

Token 1344: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.5
    3. '	main' → logprob: -20.25
    4. '   ' → logprob: -23.375
    5. '.main' → logprob: -24.875
    6. '_main' → logprob: -24.875
    7. '(main' → logprob: -25.75
    8. '
' → logprob: -27.375
    9. 'mainwindow' → logprob: -27.625
    10. '```' → logprob: -27.875

Token 1345: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1343
Tokens correctement prédits (1ère position, stricte): 551
Tokens correctement prédits (1ère position, avec adaptation): 620
Tokens correctement prédits (top 10): 1140
Précision stricte (1ère position): 41.03%
Précision adaptée (1ère position): 46.17%
Précision (top 10): 84.88%
================================================================================
