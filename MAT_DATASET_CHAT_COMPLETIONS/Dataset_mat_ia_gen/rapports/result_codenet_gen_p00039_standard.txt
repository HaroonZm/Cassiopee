================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
values = {'I':1,'V':5,'X':10,'L':50,'C':100,'D':500,'M':1000}
import sys
for line in sys.stdin:
    s=line.strip()
    if not s:
        continue
    total=0
    for i in range(len(s)):
        val=values[s[i]]
        if i+1<len(s) and values[s[i+1]]>val:
            total-=val
        else:
            total+=val
    print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'values' (ID: 7222)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' {'' (ID: 11881)
  → Token d'amorce (pas de prédiction)

Token 3: 'I' (ID: 40)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.314786434173584
    2. 'key' → logprob: -1.814786434173584
    3. 'user' → logprob: -3.064786434173584
    4. 'name' → logprob: -4.064786434173584
    5. 'u' → logprob: -4.564786434173584
    6. ''a' → logprob: -5.064786434173584
    7. '}' → logprob: -5.064786434173584
    8. ''' → logprob: -5.189786434173584
    9. 'username' → logprob: -5.189786434173584
    10. ''name' → logprob: -6.314786434173584

Token 4: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5782354474067688
    2. ''' → logprob: -1.203235387802124
    3. ''m' → logprob: -2.578235387802124
    4. 'n' → logprob: -4.328235626220703
    5. ''}' → logprob: -4.328235626220703
    6. '':'' → logprob: -4.703235626220703
    7. ''d' → logprob: -5.328235626220703
    8. ''am' → logprob: -5.453235626220703
    9. 't' → logprob: -5.828235626220703
    10. ''n' → logprob: -5.953235626220703

Token 5: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3495466113090515
    2. '1' → logprob: -1.2245466709136963
    3. ''' → logprob: -7.849546432495117
    4. ' '' → logprob: -9.162046432495117
    5. '100' → logprob: -9.412046432495117
    6. '4' → logprob: -9.974546432495117
    7. '```' → logprob: -9.974546432495117
    8. '0' → logprob: -10.162046432495117
    9. ''s' → logprob: -10.287046432495117
    10. ' ' → logprob: -10.349546432495117

Token 6: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005712636047974229
    2. '}' → logprob: -7.500571250915527
    3. ',
' → logprob: -11.750571250915527
    4. ' ,' → logprob: -12.250571250915527
    5. ','' → logprob: -13.250571250915527
    6. ',

' → logprob: -13.375571250915527
    7. ''}' → logprob: -14.750571250915527
    8. ' }' → logprob: -15.125571250915527
    9. ',
' → logprob: -15.250571250915527
    10. ' ' → logprob: -15.375571250915527

Token 7: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.010438804514706135
    2. ' V' → logprob: -4.635438919067383
    3. ''' → logprob: -8.260438919067383
    4. ' ' → logprob: -8.760438919067383
    5. 'v' → logprob: -9.635438919067383
    6. 'II' → logprob: -10.010438919067383
    7. 'IV' → logprob: -10.385438919067383
    8. 'l' → logprob: -11.010438919067383
    9. '  ' → logprob: -11.135438919067383
    10. 'I' → logprob: -11.572938919067383

Token 8: '':' (ID: 2337)
  Prédit: '':''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.08078868687152863
    2. '':' → logprob: -2.5807886123657227
    3. ''' → logprob: -7.830788612365723
    4. ':' → logprob: -7.830788612365723
    5. '','' → logprob: -7.955788612365723
    6. ''}' → logprob: -8.205788612365723
    7. ':'' → logprob: -8.830788612365723
    8. '```' → logprob: -9.330788612365723
    9. 'I' → logprob: -9.955788612365723
    10. '':''' → logprob: -9.955788612365723

Token 9: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.12400347739458084
    2. ' ' → logprob: -2.6240034103393555
    3. ''' → logprob: -3.1240034103393555
    4. ' '' → logprob: -8.999003410339355
    5. '50' → logprob: -12.499003410339355
    6. ''value' → logprob: -14.374003410339355
    7. '```' → logprob: -14.749003410339355
    8. ' ' → logprob: -15.124003410339355
    9. '"' → logprob: -15.249003410339355
    10. ''S' → logprob: -15.374003410339355

Token 10: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0277707539498806
    2. '}' → logprob: -4.027770519256592
    3. ','' → logprob: -4.652770519256592
    4. ''}' → logprob: -10.90277099609375
    5. '','' → logprob: -12.02777099609375
    6. '',' → logprob: -12.52777099609375
    7. ' ,' → logprob: -12.52777099609375
    8. ',
' → logprob: -13.65277099609375
    9. ' }' → logprob: -13.77777099609375
    10. ',

' → logprob: -13.90277099609375

Token 11: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.10629547387361526
    2. ''' → logprob: -2.356295585632324
    3. ' X' → logprob: -5.356295585632324
    4. ' '' → logprob: -7.106295585632324
    5. 'I' → logprob: -8.856295585632324
    6. '`' → logprob: -9.981295585632324
    7. ''s' → logprob: -9.981295585632324
    8. ''x' → logprob: -10.231295585632324
    9. '```' → logprob: -10.356295585632324
    10. ''S' → logprob: -10.606295585632324

Token 12: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.10116825252771378
    2. '':'' → logprob: -2.351168155670166
    3. ''' → logprob: -7.476168155670166
    4. ''}' → logprob: -9.101168632507324
    5. '```' → logprob: -9.351168632507324
    6. ':' → logprob: -9.476168632507324
    7. ':'' → logprob: -10.226168632507324
    8. '':''' → logprob: -10.976168632507324
    9. '',' → logprob: -11.226168632507324
    10. '','' → logprob: -11.351168632507324

Token 13: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.026559090241789818
    2. ''' → logprob: -3.6515591144561768
    3. ' ' → logprob: -8.526558876037598
    4. '`' → logprob: -11.026558876037598
    5. '```' → logprob: -11.026558876037598
    6. '{'' → logprob: -11.776558876037598
    7. '1' → logprob: -12.401558876037598
    8. '"' → logprob: -12.651558876037598
    9. '{' → logprob: -13.276558876037598
    10. '	' → logprob: -13.401558876037598

Token 14: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08528661727905273
    2. ','' → logprob: -2.7102866172790527
    3. '}' → logprob: -4.210286617279053
    4. ''}' → logprob: -8.585287094116211
    5. '','' → logprob: -8.710287094116211
    6. '',' → logprob: -11.210287094116211
    7. ' ,' → logprob: -12.085287094116211
    8. ',"' → logprob: -12.335287094116211
    9. ',
' → logprob: -12.335287094116211
    10. ',''' → logprob: -13.460287094116211

Token 15: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00038991993642412126
    2. ''L' → logprob: -8.25039005279541
    3. ' L' → logprob: -9.00039005279541
    4. 'C' → logprob: -12.87539005279541
    5. ''' → logprob: -13.87539005279541
    6. 'I' → logprob: -14.62539005279541
    7. '"L' → logprob: -14.75039005279541
    8. '	L' → logprob: -14.87539005279541
    9. '50' → logprob: -16.000389099121094
    10. '```' → logprob: -16.250389099121094

Token 16: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.4389874339103699
    2. '':'' → logprob: -1.0639874935150146
    3. ':' → logprob: -4.8139872550964355
    4. ':'' → logprob: -6.5639872550964355
    5. ''' → logprob: -7.4389872550964355
    6. '':''' → logprob: -10.188987731933594
    7. '```' → logprob: -10.563987731933594
    8. ''>' → logprob: -11.188987731933594
    9. '','' → logprob: -11.438987731933594
    10. '')' → logprob: -12.313987731933594

Token 17: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.00171278219204396
    2. ' ' → logprob: -6.376712799072266
    3. ''' → logprob: -11.501712799072266
    4. '500' → logprob: -16.251712799072266
    5. '   ' → logprob: -16.626712799072266
    6. '5' → logprob: -16.751712799072266
    7. '{' → logprob: -16.876712799072266
    8. '```' → logprob: -17.564212799072266
    9. '  ' → logprob: -17.689212799072266
    10. '{'' → logprob: -17.689212799072266

Token 18: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5816823244094849
    2. ','' → logprob: -0.8316823244094849
    3. '}' → logprob: -5.331682205200195
    4. '','' → logprob: -7.206682205200195
    5. ''}' → logprob: -9.331682205200195
    6. '',' → logprob: -10.956682205200195
    7. ',"' → logprob: -11.081682205200195
    8. ',’' → logprob: -11.706682205200195
    9. ',''' → logprob: -11.956682205200195
    10. ' ,' → logprob: -12.706682205200195

Token 19: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.11291228234767914
    2. ''C' → logprob: -2.237912178039551
    3. ''' → logprob: -9.86291217803955
    4. ' C' → logprob: -11.36291217803955
    5. '"C' → logprob: -11.61291217803955
    6. '```' → logprob: -12.73791217803955
    7. '`' → logprob: -12.86291217803955
    8. '100' → logprob: -13.11291217803955
    9. '')' → logprob: -13.86291217803955
    10. '{'' → logprob: -13.98791217803955

Token 20: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.01638295128941536
    2. ':' → logprob: -4.516383171081543
    3. '':'' → logprob: -5.391383171081543
    4. ''' → logprob: -7.641383171081543
    5. ':'' → logprob: -8.891383171081543
    6. '```' → logprob: -9.891383171081543
    7. '',' → logprob: -10.016383171081543
    8. ':',' → logprob: -11.516383171081543
    9. '100' → logprob: -11.641383171081543
    10. '','' → logprob: -12.266383171081543

Token 21: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.62501049041748
    3. ''' → logprob: -13.75001049041748
    4. '```' → logprob: -16.500009536743164
    5. '50' → logprob: -17.625009536743164
    6. ' hundred' → logprob: -17.625009536743164
    7. '"' → logprob: -18.125009536743164
    8. '1' → logprob: -18.500009536743164
    9. '１００' → logprob: -18.875009536743164
    10. '10' → logprob: -18.875009536743164

Token 22: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.2831103205680847
    2. ',' → logprob: -1.4081103801727295
    3. '','' → logprob: -6.78311014175415
    4. '}' → logprob: -7.28311014175415
    5. ''}' → logprob: -9.783110618591309
    6. '',' → logprob: -10.283110618591309
    7. ',"' → logprob: -10.658110618591309
    8. ',’' → logprob: -11.908110618591309
    9. ',''' → logprob: -12.533110618591309
    10. ' ,'' → logprob: -12.783110618591309

Token 23: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.020655520260334015
    2. ''D' → logprob: -3.895655632019043
    3. ''' → logprob: -9.645655632019043
    4. '"D' → logprob: -10.645655632019043
    5. ' D' → logprob: -11.520655632019043
    6. ''d' → logprob: -12.395655632019043
    7. '`' → logprob: -12.895655632019043
    8. '```' → logprob: -13.645655632019043
    9. '_D' → logprob: -13.895655632019043
    10. '>D' → logprob: -13.895655632019043

Token 24: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5269696712493896
    2. '':' → logprob: -0.9019696712493896
    3. ',' → logprob: -6.151969909667969
    4. '<|end|>' → logprob: -6.901969909667969
    5. '```' → logprob: -8.651969909667969
    6. '',' → logprob: -8.651969909667969
    7. ''' → logprob: -8.901969909667969
    8. ' :' → logprob: -10.401969909667969
    9. '":' → logprob: -10.776969909667969
    10. '’:' → logprob: -11.026969909667969

Token 25: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.00020818933262489736
    2. ' ' → logprob: -8.500207901000977
    3. ''' → logprob: -12.375207901000977
    4. '{'' → logprob: -15.875207901000977
    5. '50' → logprob: -16.250207901000977
    6. '{' → logprob: -16.750207901000977
    7. '```' → logprob: -17.125207901000977
    8. '}' → logprob: -17.125207901000977
    9. '   ' → logprob: -17.500207901000977
    10. '400' → logprob: -17.500207901000977

Token 26: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.07935205101966858
    2. ',' → logprob: -2.5793521404266357
    3. '}' → logprob: -7.954351902008057
    4. '','' → logprob: -9.454352378845215
    5. ',"' → logprob: -11.579352378845215
    6. ',’' → logprob: -11.829352378845215
    7. ''}' → logprob: -12.079352378845215
    8. ',''' → logprob: -12.829352378845215
    9. '',' → logprob: -13.079352378845215
    10. ' ,'' → logprob: -13.454352378845215

Token 27: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.0921942703134846e-05
    2. ''M' → logprob: -11.62501049041748
    3. ' M' → logprob: -13.25001049041748
    4. ''' → logprob: -15.62501049041748
    5. '"M' → logprob: -17.500011444091797
    6. '```' → logprob: -19.125011444091797
    7. 'CM' → logprob: -19.250011444091797
    8. '500' → logprob: -19.625011444091797
    9. 'Ｍ' → logprob: -19.750011444091797
    10. '`' → logprob: -19.750011444091797

Token 28: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -9.078839502763003e-05
    2. ':' → logprob: -10.125090599060059
    3. ''' → logprob: -10.250090599060059
    4. '```' → logprob: -12.000090599060059
    5. ' ':' → logprob: -12.125090599060059
    6. ''}' → logprob: -13.250090599060059
    7. '':'' → logprob: -14.625090599060059
    8. '":' → logprob: -15.000090599060059
    9. '’:' → logprob: -15.500090599060059
    10. ''>' → logprob: -15.875090599060059

Token 29: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -9.875052452087402
    3. '   ' → logprob: -15.375052452087402
    4. '1' → logprob: -15.750052452087402
    5. '}' → logprob: -16.625051498413086
    6. '```' → logprob: -16.750051498413086
    7. '900' → logprob: -17.125051498413086
    8. ''' → logprob: -17.500051498413086
    9. '	' → logprob: -18.125051498413086
    10. '  ' → logprob: -18.250051498413086

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001242772996192798
    2. '}' → logprob: -9.000123977661133
    3. ' ' → logprob: -15.250123977661133
    4. '۰' → logprob: -15.250123977661133
    5. ''}' → logprob: -15.375123977661133
    6. '٠' → logprob: -16.750123977661133
    7. ''' → logprob: -17.500123977661133
    8. '०' → logprob: -17.625123977661133
    9. '```' → logprob: -17.750123977661133
    10. '０' → logprob: -17.875123977661133

Token 31: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -4.842555426876061e-06
    2. ''}' → logprob: -13.250004768371582
    3. ' }' → logprob: -13.500004768371582
    4. ',' → logprob: -13.875004768371582
    5. '`}' → logprob: -14.375004768371582
    6. '}
' → logprob: -17.0000057220459
    7. '```' → logprob: -17.1250057220459
    8. '},' → logprob: -17.3750057220459
    9. '"}' → logprob: -17.6250057220459
    10. '}}' → logprob: -18.1250057220459

Token 32: 'import' (ID: 561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.571078896522522
    2. 'r' → logprob: -1.696078896522522
    3. '[' → logprob: -2.8210787773132324
    4. 'def' → logprob: -2.8210787773132324
    5. ' ' → logprob: -3.1960787773132324
    6. ''' → logprob: -3.5710787773132324
    7. ')' → logprob: -4.321078777313232
    8. '}' → logprob: -4.946078777313232
    9. ':' → logprob: -5.071078777313232
    10. '```' → logprob: -5.196078777313232

Token 33: ' sys' (ID: 12228)
  Prédit: ' re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.4889666438102722
    2. ' collections' → logprob: -1.613966703414917
    3. ' sys' → logprob: -2.113966703414917
    4. ' math' → logprob: -3.238966703414917
    5. ' ' → logprob: -4.363966464996338
    6. ' itertools' → logprob: -5.488966464996338
    7. ' json' → logprob: -5.613966464996338
    8. ' functools' → logprob: -5.738966464996338
    9. 'collections' → logprob: -6.363966464996338
    10. ' datetime' → logprob: -7.738966464996338

Token 34: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7941680550575256
    2. '
' → logprob: -1.2941679954528809
    3. 'for' → logprob: -2.169167995452881
    4. 'def' → logprob: -2.294167995452881
    5. 'num' → logprob: -3.294167995452881
    6. ' for' → logprob: -5.544167995452881
    7. 'n' → logprob: -5.544167995452881
    8. 'newline' → logprob: -6.044167995452881
    9. 'print' → logprob: -6.294167995452881
    10. 'input' → logprob: -6.419167995452881

Token 35: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45690909028053284
    2. 'def' → logprob: -1.9569090604782104
    3. 'for' → logprob: -2.0819091796875
    4. '\n' → logprob: -3.4569091796875
    5. 'input' → logprob: -4.0819091796875
    6. 'num' → logprob: -4.0819091796875
    7. 'n' → logprob: -4.4569091796875
    8. 'class' → logprob: -5.0819091796875
    9. '```' → logprob: -5.4569091796875
    10. ' for' → logprob: -5.7069091796875

Token 36: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0010448360117152333
    2. ' i' → logprob: -7.751044750213623
    3. ' line' → logprob: -8.126045227050781
    4. '  ' → logprob: -8.876045227050781
    5. ' token' → logprob: -9.126045227050781
    6. ' item' → logprob: -10.376045227050781
    7. ' c' → logprob: -11.751045227050781
    8. ' value' → logprob: -12.376045227050781
    9. ' s' → logprob: -12.626045227050781
    10. ' element' → logprob: -12.751045227050781

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01297586690634489
    2. 'in' → logprob: -4.387975692749023
    3. ' ' → logprob: -7.887975692749023
    4. '<|end|>' → logprob: -9.762975692749023
    5. 'import' → logprob: -12.262975692749023
    6. '```' → logprob: -12.762975692749023
    7. '  ' → logprob: -13.012975692749023
    8. ' ' → logprob: -13.012975692749023
    9. ',' → logprob: -13.012975692749023
    10. '<|end|>' → logprob: -13.012975692749023

Token 38: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.38687947392463684
    2. 'sys' → logprob: -1.1368794441223145
    3. '=sys' → logprob: -12.261879920959473
    4. '(sys' → logprob: -13.386879920959473
    5. '	sys' → logprob: -13.386879920959473
    6. 's' → logprob: -14.636879920959473
    7. 'stdin' → logprob: -16.511878967285156
    8. ' iter' → logprob: -16.761878967285156
    9. '_sys' → logprob: -17.011878967285156
    10. 'iter' → logprob: -17.386878967285156

Token 39: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0024925414472818375
    2. '.' → logprob: -6.127492427825928
    3. 'stdin' → logprob: -9.127492904663086
    4. '.readline' → logprob: -9.377492904663086
    5. ' .' → logprob: -10.002492904663086
    6. '.argv' → logprob: -10.252492904663086
    7. '.stdout' → logprob: -11.377492904663086
    8. ' stdin' → logprob: -12.002492904663086
    9. '.readlines' → logprob: -12.377492904663086
    10. 'import' → logprob: -12.752492904663086

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.039652809500694275
    2. '.readline' → logprob: -3.2896528244018555
    3. ' :' → logprob: -7.5396528244018555
    4. '.rstrip' → logprob: -8.414652824401855
    5. '.strip' → logprob: -8.414652824401855
    6. '.readlines' → logprob: -8.414652824401855
    7. '.' → logprob: -8.539652824401855
    8. ' in' → logprob: -10.164652824401855
    9. ':
' → logprob: -10.414652824401855
    10. ',' → logprob: -10.914652824401855

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11965011805295944
    2. ' line' → logprob: -2.24465012550354
    3. ' s' → logprob: -6.619649887084961
    4. ' text' → logprob: -6.869649887084961
    5. ' tokens' → logprob: -6.994649887084961
    6. ' readline' → logprob: -7.119649887084961
    7. ' result' → logprob: -7.244649887084961
    8. ' token' → logprob: -8.119649887084961
    9. ' if' → logprob: -8.119649887084961
    10. ' for' → logprob: -8.244649887084961

Token 42: ' s' (ID: 265)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.16932572424411774
    2. 'line' → logprob: -2.919325828552246
    3. ' s' → logprob: -3.169325828552246
    4. '   ' → logprob: -3.419325828552246
    5. ' text' → logprob: -4.544325828552246
    6. 's' (adapté à ' s') → logprob: -5.294325828552246
    7. ' value' → logprob: -5.669325828552246
    8. 'text' → logprob: -5.794325828552246
    9. ' val' → logprob: -6.919325828552246
    10. ' if' → logprob: -7.044325828552246

Token 43: '=line' (ID: 192488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39377814531326294
    2. '=' → logprob: -1.1437780857086182
    3. 'trip' → logprob: -5.518778324127197
    4. ' ' → logprob: -6.268778324127197
    5. '.strip' → logprob: -7.893778324127197
    6. 'tr' → logprob: -9.393777847290039
    7. '   ' → logprob: -9.518777847290039
    8. '.rstrip' → logprob: -9.518777847290039
    9. '.' → logprob: -9.643777847290039
    10. ' trip' → logprob: -9.768777847290039

Token 44: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.005272772628813982
    2. '.rstrip' → logprob: -5.25527286529541
    3. '.' → logprob: -10.25527286529541
    4. 'strip' → logprob: -12.88027286529541
    5. 'rstrip' → logprob: -13.75527286529541
    6. '[:-' → logprob: -16.130271911621094
    7. '.readline' → logprob: -17.005271911621094
    8. '.replace' → logprob: -17.130271911621094
    9. ' .' → logprob: -17.380271911621094
    10. '_strip' → logprob: -17.380271911621094

Token 45: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -8.44706009957008e-05
    2. '(' → logprob: -10.37508487701416
    3. ' ()' → logprob: -11.25008487701416
    4. '()`' → logprob: -12.00008487701416
    5. '()"' → logprob: -12.12508487701416
    6. '()==' → logprob: -12.62508487701416
    7. '())' → logprob: -12.75008487701416
    8. '()]' → logprob: -12.87508487701416
    9. '()<' → logprob: -13.12508487701416
    10. '`()' → logprob: -13.12508487701416

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24045312404632568
    2. ' result' → logprob: -2.4904532432556152
    3. 'result' → logprob: -2.7404532432556152
    4. ' if' → logprob: -3.7404532432556152
    5. ' total' → logprob: -5.115453243255615
    6. '
' → logprob: -5.115453243255615
    7. '    
' → logprob: -5.615453243255615
    8. 'total' → logprob: -5.740453243255615
    9. ' value' → logprob: -5.865453243255615
    10. 'value' → logprob: -5.990453243255615

Token 47: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.33006322383880615
    2. 'total' → logprob: -1.4550632238388062
    3. 'res' → logprob: -3.5800633430480957
    4. 'value' → logprob: -5.080063343048096
    5. 'num' → logprob: -5.205063343048096
    6. 'i' → logprob: -5.955063343048096
    7. ' result' → logprob: -6.330063343048096
    8. 'n' → logprob: -6.830063343048096
    9. ' total' → logprob: -7.080063343048096
    10. 'val' → logprob: -7.205063343048096

Token 48: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06914088875055313
    2. ' s' → logprob: -2.819140911102295
    3. ' ' → logprob: -5.819140911102295
    4. 'not' → logprob: -6.069140911102295
    5. 's' → logprob: -6.319140911102295
    6. ' len' → logprob: -10.694140434265137
    7. ''' → logprob: -11.569140434265137
    8. ' '' → logprob: -11.569140434265137
    9. ' ' → logprob: -12.194140434265137
    10. ''s' → logprob: -12.569140434265137

Token 49: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.003199454629793763
    2. 's' → logprob: -5.753199577331543
    3. ' ' → logprob: -10.753199577331543
    4. '<|end|>' → logprob: -15.753199577331543
    5. ' ' → logprob: -16.253198623657227
    6. '	s' → logprob: -16.753198623657227
    7. '<s' → logprob: -17.378198623657227
    8. ' line' → logprob: -17.628198623657227
    9. '_s' → logprob: -18.128198623657227
    10. '<|end|>' → logprob: -18.503198623657227

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031918513122946024
    2. ' :' → logprob: -5.878191947937012
    3. ':return' → logprob: -8.253191947937012
    4. ':
' → logprob: -9.128191947937012
    5. ' or' → logprob: -11.128191947937012
    6. '.' → logprob: -14.753191947937012
    7. ':s' → logprob: -14.753191947937012
    8. '):' → logprob: -15.128191947937012
    9. '.:' → logprob: -15.253191947937012
    10. '：' → logprob: -15.753191947937012

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009832700015977025
    2. '   ' → logprob: -7.625983238220215
    3. ':' → logprob: -8.000983238220215
    4. ' break' → logprob: -9.125983238220215
    5. ':
' → logprob: -10.875983238220215
    6. 'break' → logprob: -12.000983238220215
    7. '
' → logprob: -12.125983238220215
    8. '	break' → logprob: -12.750983238220215
    9. '    ' → logprob: -13.000983238220215
    10. '      ' → logprob: -13.375983238220215

Token 52: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.04406149685382843
    2. 'break' → logprob: -3.1690614223480225
    3. '   ' → logprob: -7.419061660766602
    4. '       ' → logprob: -7.919061660766602
    5. '	break' → logprob: -9.794061660766602
    6. ' continue' → logprob: -10.544061660766602
    7. 'continue' (adapté à ' continue') → logprob: -12.169061660766602
    8. '```' → logprob: -12.169061660766602
    9. '    ' → logprob: -13.169061660766602
    10. '
' → logprob: -14.044061660766602

Token 53: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.228321835398674
    2. '    
' → logprob: -1.9783217906951904
    3. '
' → logprob: -2.8533217906951904
    4. '    ' → logprob: -6.1033220291137695
    5. '   
' → logprob: -6.3533220291137695
    6. '     
' → logprob: -7.3533220291137695
    7. ' 
' → logprob: -7.4783220291137695
    8. ':' → logprob: -7.7283220291137695
    9. '  
' → logprob: -7.7283220291137695
    10. '<|end|>' → logprob: -7.8533220291137695

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011154753156006336
    2. '    
' → logprob: -4.886154651641846
    3. '
' → logprob: -5.886154651641846
    4. '    ' → logprob: -8.636155128479004
    5. '   
' → logprob: -8.761155128479004
    6. '  ' → logprob: -9.386155128479004
    7. 'n' → logprob: -9.761155128479004
    8. '<|end|>' → logprob: -9.886155128479004
    9. 'result' → logprob: -10.511155128479004
    10. '  
' → logprob: -11.011155128479004

Token 55: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5676838159561157
    2. 'total' (adapté à ' total') → logprob: -1.6926838159561157
    3. '   ' → logprob: -2.442683696746826
    4. 'value' → logprob: -3.067683696746826
    5. ' result' → logprob: -3.192683696746826
    6. ' total' → logprob: -3.692683696746826
    7. 'num' → logprob: -4.067683696746826
    8. 'val' → logprob: -4.692683696746826
    9. 'res' → logprob: -4.817683696746826
    10. 'n' → logprob: -5.192683696746826

Token 56: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13459886610507965
    2. '=' → logprob: -2.134598970413208
    3. ' +=' → logprob: -4.884598731994629
    4. '+=' → logprob: -10.134598731994629
    5. ' ' → logprob: -10.634598731994629
    6. ' =)' → logprob: -12.509598731994629
    7. '_' → logprob: -13.259598731994629
    8. '=int' → logprob: -13.259598731994629
    9. ' =
' → logprob: -13.509598731994629
    10. ' |=' → logprob: -14.134598731994629

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.8828707804204896e-05
    2. ' ' → logprob: -10.000048637390137
    3. 'values' → logprob: -12.875048637390137
    4. '   ' → logprob: -15.375048637390137
    5. 's' → logprob: -15.500048637390137
    6. 'len' → logprob: -16.625049591064453
    7. '```' → logprob: -16.625049591064453
    8. 'value' → logprob: -16.750049591064453
    9. 'val' → logprob: -17.000049591064453
    10. 'sum' → logprob: -17.312549591064453

Token 58: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8063955903053284
    2. '   ' → logprob: -1.5563955307006836
    3. ' for' → logprob: -1.6813955307006836
    4. ' i' → logprob: -2.8063955307006836
    5. 'for' → logprob: -2.9313955307006836
    6. 'i' → logprob: -4.056395530700684
    7. 'prev' → logprob: -4.556395530700684
    8. ' prev' → logprob: -5.681395530700684
    9. ' 
' → logprob: -5.806395530700684
    10. '    
' → logprob: -6.431395530700684

Token 60: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038204092532396317
    2. 'i' → logprob: -3.6632041931152344
    3. 'prev' → logprob: -4.538204193115234
    4. ' for' → logprob: -6.913204193115234
    5. ' i' → logprob: -9.788204193115234
    6. 'n' → logprob: -9.913204193115234
    7. 'previous' → logprob: -10.788204193115234
    8. ' prev' → logprob: -12.038204193115234
    9. 'length' → logprob: -12.163204193115234
    10. 'last' → logprob: -13.038204193115234

Token 61: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3133566081523895
    2. 'i' → logprob: -1.313356637954712
    3. ' range' → logprob: -10.188356399536133
    4. 'range' → logprob: -10.813356399536133
    5. ' ' → logprob: -11.188356399536133
    6. '_' → logprob: -11.938356399536133
    7. ' idx' → logprob: -12.063356399536133
    8. 'index' → logprob: -12.938356399536133
    9. ' _' → logprob: -13.063356399536133
    10. '_i' → logprob: -13.063356399536133

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01248222216963768
    2. ' ' → logprob: -4.762482166290283
    3. 'in' → logprob: -6.137482166290283
    4. ' i' → logprob: -7.387482166290283
    5. '  ' → logprob: -7.887482166290283
    6. '+' → logprob: -8.262482643127441
    7. '<|end|>' → logprob: -8.512482643127441
    8. ' range' → logprob: -9.762482643127441
    9. ' +=' → logprob: -10.387482643127441
    10. '   ' → logprob: -10.887482643127441

Token 63: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0052360063418745995
    2. 'range' → logprob: -5.2552361488342285
    3. ' xrange' → logprob: -13.38023567199707
    4. '	range' → logprob: -14.63023567199707
    5. ' ' → logprob: -15.63023567199707
    6. '(range' → logprob: -16.63023567199707
    7. ' ' → logprob: -17.63023567199707
    8. '_range' → logprob: -19.63023567199707
    9. ' rang' → logprob: -20.38023567199707
    10. '  ' → logprob: -20.50523567199707

Token 64: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.2519853413105011
    2. '(' → logprob: -1.5019853115081787
    3. ' (' → logprob: -9.876985549926758
    4. ' len' → logprob: -13.501985549926758
    5. '(length' → logprob: -13.626985549926758
    6. 'len' → logprob: -13.626985549926758
    7. '<len' → logprob: -15.251985549926758
    8. '[len' → logprob: -15.751985549926758
    9. ' ' → logprob: -16.001985549926758
    10. '<|end|>' → logprob: -16.251985549926758

Token 65: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009122979827225208
    2. '(' → logprob: -7.000912189483643
    3. 's' → logprob: -14.1259126663208
    4. ')' → logprob: -16.875911712646484
    5. ' (' → logprob: -17.875911712646484
    6. '(
' → logprob: -18.750911712646484
    7. '(i' → logprob: -18.875911712646484
    8. '(S' → logprob: -19.125911712646484
    9. '(string' → logprob: -19.375911712646484
    10. '('' → logprob: -19.500911712646484

Token 66: ')):
' (ID: 22530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5299598574638367
    2. ' )' → logprob: -1.9049599170684814
    3. '-' → logprob: -2.2799599170684814
    4. ' -' → logprob: -2.9049599170684814
    5. '))' → logprob: -3.0299599170684814
    6. ')-' → logprob: -4.154959678649902
    7. '):' → logprob: -4.154959678649902
    8. ' ))' → logprob: -4.154959678649902
    9. ' ):' → logprob: -5.404959678649902
    10. ')):' → logprob: -5.654959678649902

Token 67: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5949159860610962
    2. '   ' → logprob: -1.3449159860610962
    3. '    ' → logprob: -2.0949158668518066
    4. '       ' → logprob: -3.9699158668518066
    5. ' if' → logprob: -4.469915866851807
    6. '_' → logprob: -4.969915866851807
    7. '[' → logprob: -5.344915866851807
    8. '+' → logprob: -5.719915866851807
    9. ' :' → logprob: -5.969915866851807
    10. '  ' → logprob: -6.094915866851807

Token 68: ' val' (ID: 1459)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06566543132066727
    2. ' if' → logprob: -3.0656654834747314
    3. ' i' → logprob: -5.815665245056152
    4. 'if' → logprob: -5.815665245056152
    5. '    ' → logprob: -5.940665245056152
    6. '   ' → logprob: -5.940665245056152
    7. 'i' → logprob: -6.565665245056152
    8. '  ' → logprob: -7.315665245056152
    9. '-' → logprob: -7.815665245056152
    10. '_' → logprob: -7.940665245056152

Token 69: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0047763800248503685
    2. ' =' → logprob: -5.504776477813721
    3. 's' → logprob: -7.879776477813721
    4. 'ues' → logprob: -8.254776000976562
    5. '=s' → logprob: -10.504776000976562
    6. 'ue' → logprob: -10.879776000976562
    7. '=value' → logprob: -12.754776000976562
    8. '=u' → logprob: -13.004776000976562
    9. 'u' → logprob: -13.004776000976562
    10. '=

' → logprob: -14.004776000976562

Token 70: 'values' (ID: 7222)
  Prédit: 'values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.0009125363430939615
    2. ' values' → logprob: -7.000912666320801
    3. '	values' → logprob: -14.0009126663208
    4. 'value' → logprob: -16.000911712646484
    5. '(values' → logprob: -16.125911712646484
    6. 'val' → logprob: -17.000911712646484
    7. '.values' → logprob: -17.875911712646484
    8. '   ' → logprob: -18.000911712646484
    9. 'valu' → logprob: -18.125911712646484
    10. ' ' → logprob: -18.875911712646484

Token 71: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00018339496455155313
    2. '[' → logprob: -8.62518310546875
    3. '(s' → logprob: -13.37518310546875
    4. 's' → logprob: -14.00018310546875
    5. '[
' → logprob: -14.87518310546875
    6. ' [' → logprob: -15.37518310546875
    7. '[S' → logprob: -15.50018310546875
    8. '[get' → logprob: -15.62518310546875
    9. '```' → logprob: -15.87518310546875
    10. '\[' → logprob: -16.75018310546875

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -13.000003814697266
    3. '[I' → logprob: -14.500003814697266
    4. '[s' → logprob: -14.625003814697266
    5. ']' → logprob: -15.500003814697266
    6. '[
' → logprob: -18.250003814697266
    7. '```' → logprob: -18.250003814697266
    8. '(i' → logprob: -19.875003814697266
    9. 'i' → logprob: -20.250003814697266
    10. '][' → logprob: -20.500003814697266

Token 73: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.05146742984652519
    2. '']]' → logprob: -3.3014674186706543
    3. ']' → logprob: -4.551467418670654
    4. '"]]' → logprob: -6.426467418670654
    5. ' ]]' → logprob: -7.551467418670654
    6. ')]' → logprob: -8.426467895507812
    7. '')]' → logprob: -9.301467895507812
    8. '])]' → logprob: -9.301467895507812
    9. ']]
' → logprob: -9.926467895507812
    10. '']' → logprob: -10.051467895507812

Token 74: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6384528875350952
    2. ' if' → logprob: -0.7634528875350952
    3. ' ' → logprob: -5.763453006744385
    4. '        ' → logprob: -6.888453006744385
    5. '       ' → logprob: -7.138453006744385
    6. '    ' → logprob: -7.513453006744385
    7. '   ' → logprob: -8.888452529907227
    8. '_' → logprob: -10.013452529907227
    9. '+' → logprob: -10.513452529907227
    10. ')' → logprob: -10.638452529907227

Token 76: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20146197080612183
    2. 'i' → logprob: -1.7014620304107666
    3. '(i' → logprob: -10.451461791992188
    4. ' (' → logprob: -11.701461791992188
    5. '(' → logprob: -11.951461791992188
    6. ' ' → logprob: -12.826461791992188
    7. '	i' → logprob: -13.201461791992188
    8. ' ' → logprob: -15.451461791992188
    9. '[i' → logprob: -16.451461791992188
    10. '  ' → logprob: -16.826461791992188

Token 77: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03692791610956192
    2. '<len' → logprob: -3.6619279384613037
    3. ' +' → logprob: -4.786927700042725
    4. ' <' → logprob: -6.411927700042725
    5. '>' → logprob: -8.286928176879883
    6. ' ' → logprob: -9.036928176879883
    7. ' >' → logprob: -9.161928176879883
    8. '<' → logprob: -9.536928176879883
    9. ' and' → logprob: -11.661928176879883
    10. 'and' → logprob: -11.661928176879883

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0054009538143873215
    2. ' ' → logprob: -5.255401134490967
    3. '<|end|>' → logprob: -8.755400657653809
    4. '<len' → logprob: -12.505400657653809
    5. ' <' → logprob: -12.755400657653809
    6. '<' → logprob: -13.880400657653809
    7. '```' → logprob: -14.630400657653809
    8. 'len' → logprob: -15.005400657653809
    9. '<|end|>' → logprob: -15.380400657653809
    10. '  ' → logprob: -15.380400657653809

Token 79: '<len' (ID: 141365)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1646602898836136
    2. '<' → logprob: -1.9146603345870972
    3. '<len' → logprob: -5.664660453796387
    4. '<|end|>' → logprob: -7.164660453796387
    5. ' ' → logprob: -9.039660453796387
    6. '<size' → logprob: -11.414660453796387
    7. '<int' → logprob: -12.164660453796387
    8. ')<' → logprob: -12.289660453796387
    9. 'and' → logprob: -12.414660453796387
    10. '<n' → logprob: -12.664660453796387

Token 80: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.50000286102295
    3. 's' → logprob: -13.75000286102295
    4. ')' → logprob: -17.375001907348633
    5. ')s' → logprob: -18.875001907348633
    6. ' (' → logprob: -19.000001907348633
    7. '<|end|>' → logprob: -19.375001907348633
    8. '(
' → logprob: -19.500001907348633
    9. '(ss' → logprob: -20.000001907348633
    10. ''s' → logprob: -20.000001907348633

Token 81: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006222528405487537
    2. ' and' → logprob: -5.506222724914551
    3. ' )' → logprob: -6.631222724914551
    4. 'and' → logprob: -7.256222724914551
    5. '):' → logprob: -9.75622272491455
    6. '）' → logprob: -10.75622272491455
    7. '')' → logprob: -11.38122272491455
    8. '])' → logprob: -12.25622272491455
    9. '):
' → logprob: -12.25622272491455
    10. '`)' → logprob: -12.88122272491455

Token 82: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11296765506267548
    2. 'and' → logprob: -2.2379677295684814
    3. ' ' → logprob: -8.862967491149902
    4. ')' → logprob: -13.362967491149902
    5. '	and' → logprob: -14.112967491149902
    6. ' ' → logprob: -15.112967491149902
    7. '   ' → logprob: -15.487967491149902
    8. '  ' → logprob: -15.612967491149902
    9. '>' → logprob: -15.737967491149902
    10. 'a' → logprob: -16.36296844482422

Token 83: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.12701073288917542
    2. ' values' → logprob: -2.1270108222961426
    3. '	values' → logprob: -9.877010345458984
    4. 'val' → logprob: -10.502010345458984
    5. '(values' → logprob: -13.377010345458984
    6. ' val' → logprob: -13.877010345458984
    7. '.values' → logprob: -14.627010345458984
    8. 'valu' → logprob: -15.502010345458984
    9. '   ' → logprob: -15.627010345458984
    10. ' ' → logprob: -16.127010345458984

Token 84: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -4.68022444692906e-05
    2. '[' → logprob: -10.000046730041504
    3. 's' → logprob: -14.625046730041504
    4. ' [' → logprob: -15.375046730041504
    5. '(s' → logprob: -15.750046730041504
    6. '[
' → logprob: -16.00004768371582
    7. '[i' → logprob: -16.62504768371582
    8. '<s' → logprob: -16.87504768371582
    9. '[S' → logprob: -17.12504768371582
    10. ']' → logprob: -17.12504768371582

Token 85: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.39505407214164734
    2. '[s' → logprob: -1.1450541019439697
    3. '[' → logprob: -4.895053863525391
    4. 's' → logprob: -8.02005386352539
    5. ']' → logprob: -8.52005386352539
    6. '[I' → logprob: -10.77005386352539
    7. '[line' → logprob: -10.89505386352539
    8. '][' → logprob: -11.27005386352539
    9. '[
' → logprob: -11.27005386352539
    10. '[next' → logprob: -11.77005386352539

Token 86: '+' (ID: 10)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0413656122982502
    2. ']' → logprob: -3.666365623474121
    3. '']]' → logprob: -4.416365623474121
    4. ']<' → logprob: -6.916365623474121
    5. ']>' → logprob: -7.791365623474121
    6. '+' → logprob: -7.916365623474121
    7. ' ]]' → logprob: -8.166365623474121
    8. ')]' → logprob: -8.166365623474121
    9. '"]]' → logprob: -8.416365623474121
    10. '[' → logprob: -9.916365623474121

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11709216237068176
    2. '+' → logprob: -2.2420921325683594
    3. '']]' → logprob: -6.242092132568359
    4. '']' → logprob: -6.367092132568359
    5. '```' → logprob: -9.49209213256836
    6. '`]' → logprob: -9.74209213256836
    7. ''s' → logprob: -9.99209213256836
    8. ' ' → logprob: -10.11709213256836
    9. ''+' → logprob: -10.11709213256836
    10. 'I' → logprob: -10.24209213256836

Token 88: ']]' (ID: 8928)
  Prédit: ']>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.18360409140586853
    2. ']' → logprob: -2.1836040019989014
    3. '']' → logprob: -2.9336040019989014
    4. '>]' → logprob: -6.8086042404174805
    5. '']]' → logprob: -8.18360424041748
    6. ''>' → logprob: -9.18360424041748
    7. '`]' → logprob: -9.18360424041748
    8. ' ]' → logprob: -9.43360424041748
    9. ']]' → logprob: -9.43360424041748
    10. ')]' → logprob: -9.93360424041748

Token 89: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04861881211400032
    2. '>' → logprob: -3.048618793487549
    3. ' ' → logprob: -11.173619270324707
    4. ' <=' → logprob: -12.048619270324707
    5. '">' → logprob: -12.548619270324707
    6. ' >

' → logprob: -13.548619270324707
    7. '```' → logprob: -13.798619270324707
    8. '()>' → logprob: -14.048619270324707
    9. '<|end|>' → logprob: -14.298619270324707
    10. ' ' → logprob: -14.298619270324707

Token 90: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.002508716657757759
    2. ' val' → logprob: -6.002508640289307
    3. 'values' → logprob: -10.502509117126465
    4. '	val' → logprob: -12.377509117126465
    5. '```' → logprob: -15.002509117126465
    6. ' values' → logprob: -15.127509117126465
    7. 'vals' → logprob: -15.627509117126465
    8. 'vall' → logprob: -16.00250816345215
    9. 'valu' → logprob: -16.12750816345215
    10. 'value' → logprob: -16.50250816345215

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009982750052586198
    2. ':
' → logprob: -7.375998497009277
    3. '):' → logprob: -8.125998497009277
    4. '-' → logprob: -9.875998497009277
    5. '):
' → logprob: -11.625998497009277
    6. ')' → logprob: -12.125998497009277
    7. ' :' → logprob: -12.625998497009277
    8. ' -' → logprob: -13.500998497009277
    9. ':**' → logprob: -14.125998497009277
    10. '=' → logprob: -14.500998497009277

Token 92: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03966173902153969
    2. 'total' → logprob: -3.5396616458892822
    3. '-' → logprob: -4.914661884307861
    4. ' total' → logprob: -6.539661884307861
    5. ':' → logprob: -8.039661407470703
    6. '       ' → logprob: -8.664661407470703
    7. '   ' → logprob: -8.789661407470703
    8. ' -' → logprob: -9.289661407470703
    9. 'val' → logprob: -9.789661407470703
    10. ':
' → logprob: -10.039661407470703

Token 93: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.002886425703763962
    2. '-' → logprob: -6.1278862953186035
    3. ' total' → logprob: -8.002886772155762
    4. '-total' → logprob: -8.502886772155762
    5. '           ' → logprob: -9.752886772155762
    6. '<|end|>' → logprob: -10.002886772155762
    7. '	total' → logprob: -11.252886772155762
    8. '(total' → logprob: -11.752886772155762
    9. 'otal' → logprob: -11.752886772155762
    10. 'val' → logprob: -11.877886772155762

Token 94: '-=' (ID: 77519)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.7703026533126831
    2. '-=' → logprob: -1.020302653312683
    3. '-' → logprob: -1.770302653312683
    4. ' -' → logprob: -5.145302772521973
    5. '<|end|>' → logprob: -7.645302772521973
    6. '	' → logprob: -12.020302772521973
    7. '<|end|>' → logprob: -12.020302772521973
    8. '=' → logprob: -12.020302772521973
    9. '+=' → logprob: -12.395302772521973
    10. '.' → logprob: -12.520302772521973

Token 95: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.306760805164231e-05
    2. ' val' → logprob: -11.25001335144043
    3. '	val' → logprob: -17.62501335144043
    4. '[val' → logprob: -21.87501335144043
    5. '```' → logprob: -22.00001335144043
    6. 'value' → logprob: -22.00001335144043
    7. '_val' → logprob: -22.37501335144043
    8. 'vall' → logprob: -22.50001335144043
    9. '(val' → logprob: -22.62501335144043
    10. '<|end|>' → logprob: -22.75001335144043

Token 96: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3077676296234131
    2. 'else' → logprob: -1.557767629623413
    3. ' else' → logprob: -2.932767629623413
    4. '
' → logprob: -7.932767868041992
    5. '<|end|>' → logprob: -7.932767868041992
    6. '	else' → logprob: -8.432767868041992
    7. '   ' → logprob: -10.432767868041992
    8. '```' → logprob: -10.557767868041992
    9. ')' → logprob: -11.057767868041992
    10. '#else' → logprob: -11.432767868041992

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20820029079914093
    2. 'else' → logprob: -1.8332003355026245
    3. ' else' → logprob: -3.583200216293335
    4. '<|end|>' → logprob: -8.833200454711914
    5. '   ' → logprob: -10.083200454711914
    6. '```' → logprob: -10.458200454711914
    7. '	else' → logprob: -10.958200454711914
    8. ')' → logprob: -11.458200454711914
    9. '
' → logprob: -12.458200454711914
    10. '}else' → logprob: -12.583200454711914

Token 98: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6042138934135437
    2. 'else' (adapté à ' else') → logprob: -1.1042139530181885
    3. ' else' → logprob: -2.1042139530181885
    4. '	else' → logprob: -9.72921371459961
    5. '   ' → logprob: -11.10421371459961
    6. '	' → logprob: -12.60421371459961
    7. '```' → logprob: -13.72921371459961
    8. '​' → logprob: -14.22921371459961
    9. '      ' → logprob: -14.22921371459961
    10. '_else' → logprob: -14.35421371459961

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004301695618778467
    2. ':
' → logprob: -6.00430154800415
    3. '           ' → logprob: -6.50430154800415
    4. '       ' → logprob: -8.129302024841309
    5. '        ' → logprob: -11.754302024841309
    6. '   ' → logprob: -11.754302024841309
    7. ' total' → logprob: -12.629302024841309
    8. '          ' → logprob: -13.129302024841309
    9. '<|end|>' → logprob: -13.129302024841309
    10. ' :' → logprob: -13.379302024841309

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23982445895671844
    2. 'total' → logprob: -2.2398245334625244
    3. ' total' → logprob: -2.2398245334625244
    4. '       ' → logprob: -8.364824295043945
    5. '   ' → logprob: -10.864824295043945
    6. '	total' → logprob: -11.114824295043945
    7. ',total' → logprob: -12.989824295043945
    8. '(total' → logprob: -12.989824295043945
    9. '               ' → logprob: -13.114824295043945
    10. '		' → logprob: -13.864824295043945

Token 101: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.011191526427865028
    2. ' total' → logprob: -4.511191368103027
    3. '           ' → logprob: -9.011191368103027
    4. '   ' → logprob: -11.386191368103027
    5. '       ' → logprob: -11.886191368103027
    6. '	total' → logprob: -12.761191368103027
    7. ' ' → logprob: -15.136191368103027
    8. ',total' → logprob: -16.511192321777344
    9. '               ' → logprob: -16.886192321777344
    10. '(total' → logprob: -17.511192321777344

Token 102: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00029637437546625733
    2. ' +=' → logprob: -8.250296592712402
    3. ']+=' → logprob: -10.500296592712402
    4. '+' → logprob: -13.000296592712402
    5. '+='' → logprob: -13.000296592712402
    6. '+=(' → logprob: -13.625296592712402
    7. '+="' → logprob: -13.625296592712402
    8. '=' → logprob: -14.250296592712402
    9. '<|end|>' → logprob: -17.750295639038086
    10. '-=' → logprob: -18.500295639038086

Token 103: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -2.339278580620885e-06
    2. ' val' → logprob: -13.000001907348633
    3. '	val' → logprob: -18.750001907348633
    4. '(val' → logprob: -20.375001907348633
    5. '[val' → logprob: -20.500001907348633
    6. 'vall' → logprob: -21.250001907348633
    7. '```' → logprob: -21.250001907348633
    8. 'var' → logprob: -21.750001907348633
    9. '_val' → logprob: -22.000001907348633
    10. 'valg' → logprob: -22.125001907348633

Token 104: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16190868616104126
    2. '   ' → logprob: -1.9119086265563965
    3. ' print' → logprob: -6.7869086265563965
    4. '
' → logprob: -7.9119086265563965
    5. '    
' → logprob: -9.536909103393555
    6. '```' → logprob: -9.786909103393555
    7. 'return' → logprob: -11.161909103393555
    8. ')' → logprob: -11.661909103393555
    9. '<|end|>' → logprob: -11.661909103393555
    10. '\n' → logprob: -12.411909103393555

Token 105: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0635840892791748
    2. '   ' → logprob: -2.813584089279175
    3. ' print' → logprob: -6.438584327697754
    4. '```' → logprob: -11.188584327697754
    5. '	print' → logprob: -14.688584327697754
    6. '    
' → logprob: -14.813584327697754
    7. '(print' → logprob: -15.063584327697754
    8. '
' → logprob: -15.063584327697754
    9. ')' → logprob: -15.188584327697754
    10. '.print' → logprob: -15.563584327697754

Token 106: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010747690976131707
    2. ' print' → logprob: -9.250107765197754
    3. '   ' → logprob: -11.500107765197754
    4. '```' → logprob: -13.750107765197754
    5. '
' → logprob: -17.000106811523438
    6. '	print' → logprob: -18.375106811523438
    7. '#print' → logprob: -20.500106811523438
    8. '    
' → logprob: -20.500106811523438
    9. '``' → logprob: -20.625106811523438
    10. '(print' → logprob: -21.000106811523438

Token 107: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.12694008648395538
    2. '(' → logprob: -2.1269400119781494
    3. 'total' → logprob: -11.75193977355957
    4. '('' → logprob: -13.37693977355957
    5. '(f' → logprob: -14.00193977355957
    6. '()' → logprob: -14.37693977355957
    7. ' (' → logprob: -15.00193977355957
    8. '("("' → logprob: -15.25193977355957
    9. '(t' → logprob: -15.37693977355957
    10. '(
' → logprob: -16.25193977355957

Token 108: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.25
    3. ')
' → logprob: -17.5
    4. ')`' → logprob: -18.625
    5. '`)' → logprob: -18.875
    6. '')' → logprob: -18.875
    7. '))' → logprob: -19.375
    8. '）' → logprob: -20.375
    9. '}' → logprob: -20.5
    10. '")' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 106
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 97
Précision stricte (1ère position): 54.72%
Précision adaptée (1ère position): 59.43%
Précision (top 10): 91.51%
================================================================================
