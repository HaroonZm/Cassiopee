================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

class UnionFind:
    def __init__(self,n):
        self.parent = list(range(n))
        self.rank = [0]*n
    def find(self,x):
        while self.parent[x]!=x:
            self.parent[x]=self.parent[self.parent[x]]
            x=self.parent[x]
        return x
    def unite(self,x,y):
        x=self.find(x)
        y=self.find(y)
        if x==y: return False
        if self.rank[x]<self.rank[y]:
            self.parent[x]=y
        else:
            self.parent[y]=x
            if self.rank[x]==self.rank[y]:
                self.rank[x]+=1
        return True
    def same(self,x,y):
        return self.find(x)==self.find(y)

N,M=map(int,input().split())
edges=[]
for i in range(M):
    s,d,c=map(int,input().split())
    edges.append((c,s-1,d-1,i))
edges.sort(key=lambda x:x[0])

uf=UnionFind(N)
res=[False]*M
i=0
while i<M:
    w=edges[i][0]
    group=[]
    while i<M and edges[i][0]==w:
        group.append(edges[i])
        i+=1
    compid={}
    compcount=0
    for e in group:
        a=uf.find(e[1])
        b=uf.find(e[2])
        if a!=b:
            if a not in compid:
                compid[a]=compcount
                compcount+=1
            if b not in compid:
                compid[b]=compcount
                compcount+=1
    if compcount==0:
        continue
    g=[[] for _ in range(compcount)]
    for e in group:
        a=uf.find(e[1])
        b=uf.find(e[2])
        if a!=b:
            u=compid[a]
            v=compid[b]
            g[u].append((v,e[3]))
            g[v].append((u,e[3]))
    # find bridges in this graph
    used=[False]*compcount
    ord=[-1]*compcount
    low=[-1]*compcount
    time=0
    ans_set=set()
    def dfs(v,p):
        nonlocal time
        used[v]=True
        ord[v]=low[v]=time
        time+=1
        for to,eid in g[v]:
            if eid not in ans_set:
                pass
            if not used[to]:
                dfs(to,v)
                low[v]=min(low[v],low[to])
                if low[to]>ord[v]:
                    ans_set.add(eid)
            elif to!=p:
                low[v]=min(low[v],ord[to])
    for v in range(compcount):
        if not used[v]:
            dfs(v,-1)
    # mark edges which are bridges
    for e in group:
        a=uf.find(e[1])
        b=uf.find(e[2])
        if a!=b and e[3] in ans_set:
            res[e[3]]=True
    # unite all edges in group
    for e in group:
        uf.unite(e[1],e[2])

count=0
cost=0
for i,(c,s,d,idx) in enumerate(edges):
    if res[idx]:
        count+=1
        cost+=c
print(count,cost)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5789116024971008
    2. '.' → logprob: -0.9539116024971008
    3. 'import' → logprob: -3.953911542892456
    4. '\' → logprob: -4.828911781311035
    5. 'newline' → logprob: -4.953911781311035
    6. '
' → logprob: -5.203911781311035
    7. '<|end|>' → logprob: -5.328911781311035
    8. '```' → logprob: -5.578911781311035
    9. '' → logprob: -6.703911781311035
    10. '<|end|>' → logprob: -6.953911781311035

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.1689596148207784e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003742952598258853
    2. 'ursive' → logprob: -6.3787431716918945
    3. 'limit' → logprob: -7.0037431716918945
    4. 'ur' → logprob: -7.5037431716918945
    5. 'urse' → logprob: -9.253743171691895
    6. '_limit' → logprob: -9.628743171691895
    7. 'urs' → logprob: -9.628743171691895
    8. 'ut' → logprob: -9.753743171691895
    9. 'u' → logprob: -10.003743171691895
    10. 't' → logprob: -10.128743171691895

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.2565893828868866
    2. '_limit' → logprob: -1.631589412689209
    3. '_depth' → logprob: -3.756589412689209
    4. 'depth' → logprob: -5.006589412689209
    5. 'error' → logprob: -9.50658893585205
    6. '('_' → logprob: -9.50658893585205
    7. '_' → logprob: -9.63158893585205
    8. ' limit' → logprob: -9.75658893585205
    9. '(' → logprob: -9.88158893585205
    10. '_stack' → logprob: -10.25658893585205

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.778209353797138e-05
    2. '(
' → logprob: -10.500067710876465
    3. ' (' → logprob: -11.375067710876465
    4. '40' → logprob: -11.875067710876465
    5. '(

' → logprob: -12.375067710876465
    6. '((' → logprob: -12.750067710876465
    7. '```' → logprob: -12.750067710876465
    8. '(.' → logprob: -13.000067710876465
    9. '('' → logprob: -13.000067710876465
    10. '("("' → logprob: -13.250067710876465

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18263719975948334
    2. '000' → logprob: -2.1826372146606445
    3. '00' → logprob: -2.9326372146606445
    4. '4' → logprob: -7.3076372146606445
    5. '6' → logprob: -8.807637214660645
    6. '**' → logprob: -9.807637214660645
    7. '2' → logprob: -11.182637214660645
    8. '5' → logprob: -11.557637214660645
    9. '```' → logprob: -11.807637214660645
    10. '3' → logprob: -11.932637214660645

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004293391946703196
    2. '9' → logprob: -6.004293441772461
    3. '6' → logprob: -7.004293441772461
    4. '8' → logprob: -7.004293441772461
    5. '```' → logprob: -16.50429344177246
    6. ' ' → logprob: -18.00429344177246
    7. '``' → logprob: -19.75429344177246
    8. '**' → logprob: -20.25429344177246
    9. ')' → logprob: -20.25429344177246
    10. '10' → logprob: -20.75429344177246

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: 'input' (ID: 2586)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2869690954685211
    2. ')' → logprob: -2.9119691848754883
    3. '\n' → logprob: -3.0369691848754883
    4. 'def' → logprob: -3.5369691848754883
    5. '
' → logprob: -3.7869691848754883
    6. '(' → logprob: -4.036969184875488
    7. '
' → logprob: -4.161969184875488
    8. '' → logprob: -4.536969184875488
    9. 'sys' → logprob: -4.536969184875488
    10. '#' → logprob: -4.911969184875488

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5421595573425293
    2. '()' → logprob: -0.9171595573425293
    3. '```' → logprob: -5.167159557342529
    4. '_data' → logprob: -5.292159557342529
    5. '40' → logprob: -6.167159557342529
    6. '().' → logprob: -7.042159557342529
    7. '=' → logprob: -7.417159557342529
    8. 'data' → logprob: -7.417159557342529
    9. '('' → logprob: -7.542159557342529
    10. '_str' → logprob: -7.792159557342529

Token 15: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6753389835357666
    2. ' input' → logprob: -0.8003389835357666
    3. ' sys' → logprob: -3.4253389835357666
    4. 'sys' → logprob: -4.8003387451171875
    5. ' lambda' → logprob: -7.5503387451171875
    6. 'lambda' → logprob: -8.425338745117188
    7. '```' → logprob: -9.175338745117188
    8. ' ' → logprob: -9.925338745117188
    9. '=input' → logprob: -10.050338745117188
    10. ' open' → logprob: -10.050338745117188

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005953280488029122
    2. '.readline' → logprob: -8.000595092773438
    3. ' .' → logprob: -8.750595092773438
    4. '.stdin' → logprob: -10.000595092773438
    5. '.)' → logprob: -11.875595092773438
    6. '.
' → logprob: -12.250595092773438
    7. '.​' → logprob: -12.375595092773438
    8. '[' → logprob: -12.625595092773438
    9. '.

' → logprob: -12.625595092773438
    10. '.`' → logprob: -12.750595092773438

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00881617795675993
    2. '.read' → logprob: -4.883816242218018
    3. '.' → logprob: -6.758816242218018
    4. '.buffer' → logprob: -10.25881576538086
    5. '.readlines' → logprob: -11.50881576538086
    6. '.Read' → logprob: -13.38381576538086
    7. 'read' → logprob: -14.00881576538086
    8. '.stdin' → logprob: -14.88381576538086
    9. ' .' → logprob: -15.38381576538086
    10. ').' → logprob: -16.00881576538086

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06368431448936462
    2. '()
' → logprob: -3.5636842250823975
    3. '()

' → logprob: -4.063684463500977
    4. '(' → logprob: -4.438684463500977
    5. 'def' → logprob: -6.688684463500977
    6. '()\' → logprob: -6.688684463500977
    7. '(
' → logprob: -7.313684463500977
    8. '
' → logprob: -8.563684463500977
    9. 'for' → logprob: -8.688684463500977
    10. 'while' → logprob: -9.188684463500977

Token 19: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038200199604034424
    2. 'n' → logprob: -3.2882001399993896
    3. 'class' → logprob: -9.538200378417969
    4. 'N' → logprob: -10.663200378417969
    5. '```' → logprob: -10.913200378417969
    6. '\' → logprob: -11.038200378417969
    7. 'd' → logprob: -11.538200378417969
    8. 'for' → logprob: -11.663200378417969
    9. '\n' → logprob: -13.163200378417969
    10. 'from' → logprob: -13.163200378417969

Token 20: ' Union' (ID: 14746)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.6276494264602661
    2. ' Node' → logprob: -1.6276494264602661
    3. ' Trie' → logprob: -2.1276493072509766
    4. ' Tree' → logprob: -3.1276493072509766
    5. ' Segment' → logprob: -3.2526493072509766
    6. ' Binary' → logprob: -3.6276493072509766
    7. ' DFS' → logprob: -4.377649307250977
    8. ' ' → logprob: -4.377649307250977
    9. ' Union' → logprob: -5.627649307250977
    10. ' Factor' → logprob: -6.002649307250977

Token 21: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.004045394714921713
    2. '[' → logprob: -5.754045486450195
    3. '-F' → logprob: -7.629045486450195
    4. '[int' → logprob: -8.254045486450195
    5. ' Find' → logprob: -10.129045486450195
    6. '[str' → logprob: -10.379045486450195
    7. '[F' → logprob: -11.754045486450195
    8. '```' → logprob: -11.879045486450195
    9. '_Find' → logprob: -12.004045486450195
    10. '[]' → logprob: -12.004045486450195

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015298664569854736
    2. '(' → logprob: -4.390298843383789
    3. '():' → logprob: -6.015298843383789
    4. ' :' → logprob: -8.765298843383789
    5. '(object' → logprob: -9.515298843383789
    6. '):' → logprob: -10.015298843383789
    7. '(:' → logprob: -10.890298843383789
    8. '[' → logprob: -12.140298843383789
    9. '```' → logprob: -12.140298843383789
    10. ':**' → logprob: -12.515298843383789

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017122887074947357
    2. ' def' → logprob: -5.017122745513916
    3. 'def' → logprob: -6.142122745513916
    4. '    ' → logprob: -6.142122745513916
    5. '    
' → logprob: -6.517122745513916
    6. ' ' → logprob: -6.892122745513916
    7. '(object' → logprob: -7.017122745513916
    8. '<|end|>' → logprob: -7.392122745513916
    9. ':' → logprob: -7.642122745513916
    10. ' 
' → logprob: -7.892122745513916

Token 24: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10045122355222702
    2. 'def' (adapté à ' def') → logprob: -2.3504512310028076
    3. '   ' → logprob: -8.350451469421387
    4. '	def' → logprob: -11.975451469421387
    5. 'class' → logprob: -13.600451469421387
    6. '    ' → logprob: -14.975451469421387
    7. ' ' → logprob: -15.475451469421387
    8. ' class' → logprob: -15.975451469421387
    9. ' __' → logprob: -17.22545051574707
    10. '_def' → logprob: -17.72545051574707

Token 25: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03035767562687397
    2. '__' → logprob: -3.530357599258423
    3. ' init' → logprob: -8.030357360839844
    4. 'init' → logprob: -8.280357360839844
    5. '_init' → logprob: -10.530357360839844
    6. ' ' → logprob: -14.530357360839844
    7. ' def' → logprob: -14.655357360839844
    8. ' ' → logprob: -16.030357360839844
    9. '___' → logprob: -16.530357360839844
    10. '__(' → logprob: -16.530357360839844

Token 26: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.875
    3. 'ini' → logprob: -19.0
    4. 'int' → logprob: -20.625
    5. 'innit' → logprob: -20.875
    6. 'in' → logprob: -21.25
    7. 'inite' → logprob: -21.625
    8. '	init' → logprob: -22.0
    9. '_init' → logprob: -22.125
    10. '(init' → logprob: -22.5

Token 27: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005986624397337437
    2. '__' → logprob: -5.13098669052124
    3. '(self' → logprob: -10.630986213684082
    4. '__(
' → logprob: -10.755986213684082
    5. '__('' → logprob: -12.505986213684082
    6. '__((' → logprob: -12.505986213684082
    7. '```' → logprob: -13.130986213684082
    8. '__(*' → logprob: -13.880986213684082
    9. '(' → logprob: -14.005986213684082
    10. '_(' → logprob: -14.255986213684082

Token 28: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.771655115589965e-05
    2. ' self' → logprob: -11.000018119812012
    3. ',self' → logprob: -14.500018119812012
    4. '	self' → logprob: -15.375018119812012
    5. '(self' → logprob: -15.875018119812012
    6. ' ' → logprob: -16.500017166137695
    7. 's' → logprob: -17.375017166137695
    8. ',' → logprob: -17.750017166137695
    9. ')' → logprob: -17.875017166137695
    10. '   ' → logprob: -18.250017166137695

Token 29: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10227969288825989
    2. ' ,' → logprob: -2.3522796630859375
    3. 'self' → logprob: -6.8522796630859375
    4. ',self' → logprob: -6.9772796630859375
    5. ' ' → logprob: -9.852279663085938
    6. ' self' → logprob: -11.227279663085938
    7. ',parent' → logprob: -12.852279663085938
    8. ')' → logprob: -12.977279663085938
    9. '(self' → logprob: -12.977279663085938
    10. ',n' → logprob: -13.977279663085938

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012572518549859524
    2. ')' → logprob: -4.387572288513184
    3. ' ):' → logprob: -10.512572288513184
    4. ',' → logprob: -11.137572288513184
    5. ')：' → logprob: -12.012572288513184
    6. '   ' → logprob: -12.137572288513184
    7. '):
' → logprob: -12.637572288513184
    8. '）：' → logprob: -13.512572288513184
    9. ')n' → logprob: -14.012572288513184
    10. ':' → logprob: -14.387572288513184

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008021225803531706
    2. 'self' → logprob: -7.500802040100098
    3. ' self' → logprob: -9.125802040100098
    4. '   ' → logprob: -10.000802040100098
    5. 'n' → logprob: -10.375802040100098
    6. '    ' → logprob: -11.125802040100098
    7. '      ' → logprob: -11.125802040100098
    8. '     ' → logprob: -11.875802040100098
    9. '        ' → logprob: -12.250802040100098
    10. 's' → logprob: -12.625802040100098

Token 32: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10393963009119034
    2. ' self' → logprob: -2.3539395332336426
    3. '       ' → logprob: -5.603939533233643
    4. '   ' → logprob: -10.4789400100708
    5. '	self' → logprob: -11.2289400100708
    6. '_self' → logprob: -15.3539400100708
    7. ' ' → logprob: -15.7289400100708
    8. '           ' → logprob: -15.8539400100708
    9. '(self' → logprob: -16.228939056396484
    10. '0' → logprob: -16.228939056396484

Token 33: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0055259158834815025
    2. '.n' → logprob: -5.630526065826416
    3. '.' → logprob: -7.255526065826416
    4. '.parents' → logprob: -7.505526065826416
    5. '._' → logprob: -8.380525588989258
    6. '.size' → logprob: -9.005525588989258
    7. '.rank' → logprob: -9.005525588989258
    8. 'parent' → logprob: -9.380525588989258
    9. ' .' → logprob: -10.630525588989258
    10. '.par' → logprob: -10.755525588989258

Token 34: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22628438472747803
    2. ' =' → logprob: -1.601284384727478
    3. '[' → logprob: -7.726284503936768
    4. 's' → logprob: -8.72628402709961
    5. '=[]' → logprob: -8.97628402709961
    6. '=[' → logprob: -9.47628402709961
    7. '[:]' → logprob: -10.35128402709961
    8. ' =[' → logprob: -11.60128402709961
    9. '＝' → logprob: -12.22628402709961
    10. '   ' → logprob: -13.22628402709961

Token 35: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6090831160545349
    2. '[list' → logprob: -0.8590831160545349
    3. '[-' → logprob: -3.6090831756591797
    4. ' list' → logprob: -5.60908317565918
    5. '[' → logprob: -6.73408317565918
    6. ' [' → logprob: -7.73408317565918
    7. '[node' → logprob: -9.35908317565918
    8. ' [-' → logprob: -10.35908317565918
    9. '[parent' → logprob: -10.35908317565918
    10. '[n' → logprob: -10.48408317565918

Token 36: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0001246348983841017
    2. '(' → logprob: -9.00012493133545
    3. 'range' → logprob: -14.50012493133545
    4. '([' → logprob: -14.87512493133545
    5. '	range' → logprob: -16.500123977661133
    6. '(

' → logprob: -17.125123977661133
    7. '[' → logprob: -17.750123977661133
    8. '(
' → logprob: -17.875123977661133
    9. ' range' → logprob: -17.875123977661133
    10. '(map' → logprob: -18.750123977661133

Token 37: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.098748053773306e-05
    2. '(' → logprob: -9.75006103515625
    3. ')n' → logprob: -13.00006103515625
    4. 'n' → logprob: -15.12506103515625
    5. ')(' → logprob: -16.87506103515625
    6. ')' → logprob: -17.12506103515625
    7. '	n' → logprob: -18.25006103515625
    8. '(
' → logprob: -18.62506103515625
    9. ',n' → logprob: -19.50006103515625
    10. '(len' → logprob: -19.50006103515625

Token 38: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00014489953173324466
    2. '))
' → logprob: -9.250144958496094
    3. ')' → logprob: -10.125144958496094
    4. ' ))' → logprob: -12.000144958496094
    5. ')))' → logprob: -13.750144958496094
    6. '       ' → logprob: -14.375144958496094
    7. '   ' → logprob: -15.875144958496094
    8. '))

' → logprob: -16.000144958496094
    9. ')),' → logprob: -16.375144958496094
    10. '),' → logprob: -16.500144958496094

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029671108350157738
    2. '   ' → logprob: -4.0296711921691895
    3. '<|end|>' → logprob: -5.0296711921691895
    4. ')' → logprob: -5.7796711921691895
    5. ' ' → logprob: -7.2796711921691895
    6. 'self' → logprob: -7.6546711921691895
    7. '  ' → logprob: -9.654670715332031
    8. '        
' → logprob: -9.779670715332031
    9. '	' → logprob: -9.904670715332031
    10. '[' → logprob: -10.029670715332031

Token 40: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47537001967430115
    2. 'self' (adapté à ' self') → logprob: -0.9753700494766235
    3. '   ' → logprob: -7.475369930267334
    4. ' self' → logprob: -7.725369930267334
    5. ')' → logprob: -8.975370407104492
    6. '	self' → logprob: -9.975370407104492
    7. ' ' → logprob: -10.850370407104492
    8. '[' → logprob: -10.850370407104492
    9. '0' → logprob: -11.100370407104492
    10. '           ' → logprob: -11.725370407104492

Token 41: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.12724106013774872
    2. '.size' → logprob: -2.1272411346435547
    3. '.parent' → logprob: -8.252241134643555
    4. 'size' → logprob: -10.752241134643555
    5. '.sz' → logprob: -11.252241134643555
    6. 'rank' → logprob: -12.002241134643555
    7. '.' → logprob: -12.752241134643555
    8. '.s' → logprob: -13.127241134643555
    9. '.r' → logprob: -13.877241134643555
    10. ' .' → logprob: -14.002241134643555

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021148123778402805
    2. '=' → logprob: -6.252114772796631
    3. 's' → logprob: -8.752115249633789
    4. '[' → logprob: -11.252115249633789
    5. '  ' → logprob: -12.502115249633789
    6. ' ' → logprob: -12.502115249633789
    7. '[:]' → logprob: -13.002115249633789
    8. ' =[' → logprob: -13.252115249633789
    9. '<|end|>' → logprob: -13.877115249633789
    10. '=[]' → logprob: -14.002115249633789

Token 43: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004102623555809259
    2. ' [' → logprob: -5.50410270690918
    3. '[n' → logprob: -10.62910270690918
    4. ' ' → logprob: -18.62910270690918
    5. '[num' → logprob: -18.75410270690918
    6. '[list' → logprob: -19.00410270690918
    7. 'n' → logprob: -19.12910270690918
    8. '[len' → logprob: -19.37910270690918
    9. '[self' → logprob: -19.37910270690918
    10. '[int' → logprob: -19.62910270690918

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. '1' → logprob: -13.250001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '０' → logprob: -19.875001907348633
    5. '۰' → logprob: -20.500001907348633
    6. '०' → logprob: -22.500001907348633
    7. ')' → logprob: -22.750001907348633
    8. '```' → logprob: -23.000001907348633
    9. '০' → logprob: -23.375001907348633
    10. '٠' → logprob: -23.750001907348633

Token 45: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028940051794052124
    2. ']*' → logprob: -3.778939962387085
    3. ' ]' → logprob: -6.028940200805664
    4. ',' → logprob: -6.028940200805664
    5. ')' → logprob: -8.028940200805664
    6. ']*(' → logprob: -8.278940200805664
    7. ' for' → logprob: -9.153940200805664
    8. '   ' → logprob: -9.903940200805664
    9. '])' → logprob: -10.278940200805664
    10. ')]' → logprob: -10.653940200805664

Token 46: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.3458322731312364e-06
    2. ' n' → logprob: -11.875007629394531
    3. '(n' → logprob: -15.125007629394531
    4. '	n' → logprob: -17.75000762939453
    5. ')n' → logprob: -19.37500762939453
    6. '(' → logprob: -21.00000762939453
    7. '_n' → logprob: -21.62500762939453
    8. ',n' → logprob: -22.37500762939453
    9. ' н' → logprob: -23.12500762939453
    10. ' (' → logprob: -23.50000762939453

Token 47: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.13788287341594696
    2. '   ' → logprob: -2.387882947921753
    3. ' def' → logprob: -3.637882947921753
    4. '
' → logprob: -5.762882709503174
    5. '<|end|>' → logprob: -6.012882709503174
    6. '	def' → logprob: -6.262882709503174
    7. '    
' → logprob: -6.762882709503174
    8. '```' → logprob: -7.762882709503174
    9. '<|end|>' → logprob: -8.137883186340332
    10. '\n' → logprob: -8.387883186340332

Token 50: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.016152257099747658
    2. 'find' → logprob: -4.141152381896973
    3. ' union' → logprob: -9.391152381896973
    4. ' ' → logprob: -11.516152381896973
    5. ' root' → logprob: -12.016152381896973
    6. 'union' → logprob: -12.266152381896973
    7. ' unite' → logprob: -12.266152381896973
    8. '_find' → logprob: -12.516152381896973
    9. '	find' → logprob: -12.766152381896973
    10. ')find' → logprob: -15.016152381896973

Token 51: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2523074448108673
    2. '(self' → logprob: -1.502307415008545
    3. ' (' → logprob: -8.877307891845703
    4. 'self' → logprob: -9.627307891845703
    5. '<|end|>' → logprob: -9.752307891845703
    6. '(node' → logprob: -10.877307891845703
    7. '(x' → logprob: -10.877307891845703
    8. '(user' → logprob: -11.502307891845703
    9. '(
' → logprob: -11.627307891845703
    10. ')' → logprob: -11.752307891845703

Token 52: ',x' (ID: 29748)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0505937337875366
    2. '(self' → logprob: -1.6755937337875366
    3. '(x' → logprob: -1.9255937337875366
    4. ')' → logprob: -2.175593852996826
    5. '(node' → logprob: -2.425593852996826
    6. ',' → logprob: -2.550593852996826
    7. 'self' → logprob: -4.550593852996826
    8. ',node' → logprob: -4.925593852996826
    9. '(parent' → logprob: -5.550593852996826
    10. ',parent' → logprob: -5.925593852996826

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001242772996192798
    2. ')' → logprob: -9.625123977661133
    3. ':' → logprob: -10.375123977661133
    4. ' ):' → logprob: -11.125123977661133
    5. '):
' → logprob: -11.375123977661133
    6. '():' → logprob: -14.875123977661133
    7. '   ' → logprob: -15.750123977661133
    8. '):
' → logprob: -16.250123977661133
    9. '}:' → logprob: -17.375123977661133
    10. ')：' → logprob: -17.750123977661133

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006261039059609175
    2. '
' → logprob: -6.381260871887207
    3. ' if' → logprob: -6.506260871887207
    4. ' while' → logprob: -6.756260871887207
    5. 'if' → logprob: -7.631260871887207
    6. '<|end|>' → logprob: -7.881260871887207
    7. 'while' → logprob: -8.631260871887207
    8. '        ' → logprob: -9.131260871887207
    9. '```' → logprob: -9.131260871887207
    10. ':' → logprob: -9.131260871887207

Token 55: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06335876882076263
    2. ' if' → logprob: -2.813358783721924
    3. '       ' → logprob: -6.813358783721924
    4. 'while' (adapté à ' while') → logprob: -8.438358306884766
    5. ' while' → logprob: -9.563358306884766
    6. '   ' → logprob: -13.188358306884766
    7. '        ' → logprob: -14.313358306884766
    8. 'return' → logprob: -14.438358306884766
    9. '```' → logprob: -14.438358306884766
    10. '	if' → logprob: -14.688358306884766

Token 56: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004130288027226925
    2. ' self' → logprob: -5.5041303634643555
    3. 'x' → logprob: -9.879130363464355
    4. '(self' → logprob: -15.004130363464355
    5. ' x' → logprob: -15.254130363464355
    6. '	self' → logprob: -17.50412940979004
    7. ' ' → logprob: -18.12912940979004
    8. '   ' → logprob: -20.12912940979004
    9. '[self' → logprob: -20.37912940979004
    10. 'True' → logprob: -20.50412940979004

Token 57: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.3601716458797455
    2. ' !=' → logprob: -1.3601716756820679
    3. '!=' → logprob: -3.6101715564727783
    4. 'parent' → logprob: -4.360171794891357
    5. '[parent' → logprob: -5.235171794891357
    6. ',parent' → logprob: -8.7351713180542
    7. ' parent' → logprob: -8.8601713180542
    8. '.' → logprob: -9.4851713180542
    9. 'self' → logprob: -9.4851713180542
    10. '_parent' → logprob: -9.7351713180542

Token 58: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: 0.0
    2. '[self' → logprob: -16.75
    3. 'x' → logprob: -17.0
    4. '[' → logprob: -18.375
    5. '```' → logprob: -18.375
    6. ' [' → logprob: -20.625
    7. '<x' → logprob: -20.75
    8. '[parent' → logprob: -21.0
    9. '[
' → logprob: -21.375
    10. '(x' → logprob: -21.375

Token 59: ']!=' (ID: 85780)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.08589013665914536
    2. ']!=' → logprob: -2.585890054702759
    3. ' !=' → logprob: -5.335890293121338
    4. ']' → logprob: -6.335890293121338
    5. ')!=' → logprob: -8.71088981628418
    6. '()!=' → logprob: -8.71088981628418
    7. 'x' → logprob: -10.58588981628418
    8. '!==' → logprob: -11.08588981628418
    9. '```' → logprob: -12.46088981628418
    10. '!=(' → logprob: -12.58588981628418

Token 60: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.2729995988775045e-06
    2. ' x' → logprob: -12.000006675720215
    3. '	x' → logprob: -18.0000057220459
    4. ')x' → logprob: -20.8750057220459
    5. '<x' → logprob: -23.1250057220459
    6. 'self' → logprob: -23.3750057220459
    7. ',x' → logprob: -23.5000057220459
    8. '=x' → logprob: -23.5000057220459
    9. '{x' → logprob: -23.6250057220459
    10. '>x' → logprob: -23.8750057220459

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008023609989322722
    2. ':
' → logprob: -7.250802516937256
    3. 'x' → logprob: -10.125802040100098
    4. ':x' → logprob: -10.125802040100098
    5. ' :' → logprob: -11.750802040100098
    6. '):' → logprob: -13.625802040100098
    7. ',' → logprob: -14.000802040100098
    8. ' x' → logprob: -14.500802040100098
    9. ':return' → logprob: -15.375802040100098
    10. '   ' → logprob: -15.500802040100098

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027036897838115692
    2. ' x' → logprob: -4.402036666870117
    3. ':' → logprob: -5.152036666870117
    4. '       ' → logprob: -5.402036666870117
    5. 'x' → logprob: -6.652036666870117
    6. ':
' → logprob: -6.777036666870117
    7. '               ' → logprob: -7.902036666870117
    8. '   ' → logprob: -8.527036666870117
    9. ',' → logprob: -8.777036666870117
    10. '<|end|>' → logprob: -8.777036666870117

Token 63: ' self' (ID: 1051)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6682921648025513
    2. '           ' → logprob: -1.0432921648025513
    3. 'x' → logprob: -2.2932920455932617
    4. '               ' → logprob: -3.6682920455932617
    5. 'self' (adapté à ' self') → logprob: -5.668292045593262
    6. ' self' → logprob: -6.293292045593262
    7. '   ' → logprob: -6.543292045593262
    8. 'parent' → logprob: -7.793292045593262
    9. '```' → logprob: -8.043292045593262
    10. '
' → logprob: -8.418292045593262

Token 64: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00025192240718752146
    2. '.' → logprob: -8.625251770019531
    3. 'parent' → logprob: -9.625251770019531
    4. '.x' → logprob: -12.875251770019531
    5. ' .' → logprob: -13.375251770019531
    6. '].' → logprob: -14.625251770019531
    7. '	parent' → logprob: -14.875251770019531
    8. '_parent' → logprob: -15.000251770019531
    9. '[parent' → logprob: -15.125251770019531
    10. '.user' → logprob: -16.12525177001953

Token 65: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0004915529862046242
    2. '[' → logprob: -7.625491619110107
    3. 'x' → logprob: -12.62549114227295
    4. ' [' → logprob: -17.000492095947266
    5. '```' → logprob: -17.250492095947266
    6. '=' → logprob: -17.375492095947266
    7. ']' → logprob: -18.000492095947266
    8. ' =' → logprob: -18.000492095947266
    9. '[parent' → logprob: -18.250492095947266
    10. '[
' → logprob: -18.375492095947266

Token 66: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05736918747425079
    2. ' =' → logprob: -3.3073692321777344
    3. ']' → logprob: -4.182369232177734
    4. ']=' → logprob: -5.557369232177734
    5. ')' → logprob: -12.057369232177734
    6. ' ]' → logprob: -12.682369232177734
    7. '=x' → logprob: -12.807369232177734
    8. '[' → logprob: -13.182369232177734
    9. ')=' → logprob: -13.182369232177734
    10. 'x' → logprob: -13.432369232177734

Token 67: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020354038861114532
    2. ' self' → logprob: -8.500203132629395
    3. '(self' → logprob: -19.00020408630371
    4. '	self' → logprob: -19.00020408630371
    5. '[self' → logprob: -19.50020408630371
    6. 'elf' → logprob: -20.25020408630371
    7. '=self' → logprob: -21.37520408630371
    8. ' ' → logprob: -21.87520408630371
    9. '_self' → logprob: -21.87520408630371
    10. '$self' → logprob: -22.12520408630371

Token 68: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -5.2524021157296374e-05
    2. 'parent' → logprob: -9.875052452087402
    3. '[parent' → logprob: -14.500052452087402
    4. ' .' → logprob: -16.25005340576172
    5. '	parent' → logprob: -16.37505340576172
    6. ',parent' → logprob: -16.50005340576172
    7. '.' → logprob: -16.75005340576172
    8. ' parent' → logprob: -17.00005340576172
    9. 'self' → logprob: -17.62505340576172
    10. '_parent' → logprob: -17.75005340576172

Token 69: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.001535812160000205
    2. '[' → logprob: -6.501535892486572
    3. 'self' → logprob: -10.501535415649414
    4. '[parent' → logprob: -12.501535415649414
    5. '[
' → logprob: -13.251535415649414
    6. '[s' → logprob: -15.751535415649414
    7. '[x' → logprob: -16.001535415649414
    8. '(self' → logprob: -16.876535415649414
    9. ' self' → logprob: -17.001535415649414
    10. '[this' → logprob: -17.751535415649414

Token 70: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -5.5861724831629544e-05
    2. 'parent' → logprob: -9.875056266784668
    3. '[x' → logprob: -12.875056266784668
    4. '.x' → logprob: -14.375056266784668
    5. '[parent' → logprob: -14.500056266784668
    6. '.' → logprob: -14.625056266784668
    7. ' parent' → logprob: -16.87505531311035
    8. ' .' → logprob: -17.00005531311035
    9. '	parent' → logprob: -17.00005531311035
    10. '_parent' → logprob: -17.87505531311035

Token 71: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0010360259329900146
    2. 'x' → logprob: -6.876036167144775
    3. '[' → logprob: -13.126035690307617
    4. ']' → logprob: -14.751035690307617
    5. ' x' → logprob: -15.501035690307617
    6. '][' → logprob: -15.626035690307617
    7. '(x' → logprob: -16.376035690307617
    8. '```' → logprob: -16.376035690307617
    9. '[
' → logprob: -16.501035690307617
    10. '{x' → logprob: -16.751035690307617

Token 72: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001664717128733173
    2. ']
' → logprob: -8.750166893005371
    3. '[x' → logprob: -12.250166893005371
    4. '       ' → logprob: -13.875166893005371
    5. ']
' → logprob: -13.875166893005371
    6. ' ]' → logprob: -14.750166893005371
    7. '           ' → logprob: -14.875166893005371
    8. ')' → logprob: -16.000165939331055
    9. ']

' → logprob: -16.250165939331055
    10. '   ' → logprob: -16.375165939331055

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022990626748651266
    2. 'x' → logprob: -6.252298831939697
    3. ' x' → logprob: -8.252299308776855
    4. 'return' → logprob: -10.002299308776855
    5. '       ' → logprob: -10.377299308776855
    6. '   ' → logprob: -11.127299308776855
    7. ',' → logprob: -12.752299308776855
    8. '               ' → logprob: -12.752299308776855
    9. '(x' → logprob: -13.127299308776855
    10. ',x' → logprob: -13.252299308776855

Token 74: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00047142591211013496
    2. ' x' → logprob: -7.750471591949463
    3. '           ' → logprob: -10.125471115112305
    4. '   ' → logprob: -14.750471115112305
    5. '       ' → logprob: -15.375471115112305
    6. '	x' → logprob: -16.000471115112305
    7. '               ' → logprob: -18.875471115112305
    8. '```' → logprob: -19.000471115112305
    9. ')x' → logprob: -19.000471115112305
    10. ' ' → logprob: -19.625471115112305

Token 75: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715967319905758
    2. ' =' → logprob: -5.006715774536133
    3. '.=' → logprob: -15.381715774536133
    4. '=}' → logprob: -15.631715774536133
    5. '+=' → logprob: -16.381715774536133
    6. '＝' → logprob: -16.506715774536133
    7. ' +=' → logprob: -17.631715774536133
    8. ' ' → logprob: -17.756715774536133
    9. '=

' → logprob: -18.131715774536133
    10. '=x' → logprob: -18.381715774536133

Token 76: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.3544423381972592e-05
    2. 'parent' → logprob: -11.50001335144043
    3. '.' → logprob: -12.87501335144043
    4. ' .' → logprob: -14.87501335144043
    5. '[parent' → logprob: -14.87501335144043
    6. ' parent' → logprob: -17.87501335144043
    7. ',parent' → logprob: -17.87501335144043
    8. '	parent' → logprob: -18.00001335144043
    9. '.Parent' → logprob: -18.12501335144043
    10. '_parent' → logprob: -18.87501335144043

Token 77: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0002509687910787761
    2. 'x' → logprob: -8.500250816345215
    3. '[' → logprob: -10.000250816345215
    4. '```' → logprob: -13.875250816345215
    5. '[
' → logprob: -14.875250816345215
    6. '[parent' → logprob: -14.875250816345215
    7. '(x' → logprob: -15.125250816345215
    8. ' x' → logprob: -16.87525177001953
    9. ' [' → logprob: -17.12525177001953
    10. '[self' → logprob: -17.75025177001953

Token 78: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004936986370012164
    2. '       ' → logprob: -8.125494003295898
    3. ')
' → logprob: -9.500494003295898
    4. '<|end|>' → logprob: -10.000494003295898
    5. ')return' → logprob: -10.250494003295898
    6. ']' → logprob: -11.375494003295898
    7. '<|end|>' → logprob: -11.625494003295898
    8. ')x' → logprob: -12.000494003295898
    9. ' )' → logprob: -12.750494003295898
    10. '}' → logprob: -12.750494003295898

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020941111724823713
    2. 'return' → logprob: -6.252094268798828
    3. ' return' → logprob: -9.127094268798828
    4. '<|end|>' → logprob: -11.252094268798828
    5. '   ' → logprob: -11.377094268798828
    6. '           ' → logprob: -12.002094268798828
    7. ':return' → logprob: -12.002094268798828
    8. ')' → logprob: -12.252094268798828
    9. ',' → logprob: -12.502094268798828
    10. '      ' → logprob: -13.002094268798828

Token 80: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39320147037506104
    2. 'return' (adapté à ' return') → logprob: -1.143201470375061
    3. ' return' → logprob: -5.2682013511657715
    4. '   ' → logprob: -6.8932013511657715
    5. ':return' → logprob: -9.89320182800293
    6. '	return' → logprob: -10.51820182800293
    7. '    ' → logprob: -10.64320182800293
    8. '        ' → logprob: -11.64320182800293
    9. '      ' → logprob: -12.01820182800293
    10. '```' → logprob: -12.51820182800293

Token 81: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031777136027812958
    2. ' x' → logprob: -5.753177642822266
    3. '(x' → logprob: -18.128177642822266
    4. '	x' → logprob: -21.628177642822266
    5. ')x' → logprob: -23.003177642822266
    6. '$x' → logprob: -23.753177642822266
    7. '[x' → logprob: -24.128177642822266
    8. '{x' → logprob: -24.503177642822266
    9. ',x' → logprob: -24.753177642822266
    10. '"x' → logprob: -24.878177642822266

Token 82: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0741337239742279
    2. '<|end|>' → logprob: -2.8241336345672607
    3. '    
' → logprob: -5.07413387298584
    4. '<|end|>' → logprob: -6.44913387298584
    5. '
' → logprob: -7.07413387298584
    6. '```' → logprob: -7.19913387298584
    7. 'def' → logprob: -7.69913387298584
    8. ' 
' → logprob: -7.82413387298584
    9. '  ' → logprob: -7.82413387298584
    10. '  
' → logprob: -7.82413387298584

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010799680603668094
    2. ' def' → logprob: -7.37608003616333
    3. 'def' → logprob: -8.126079559326172
    4. '    
' → logprob: -9.376079559326172
    5. '<|end|>' → logprob: -10.376079559326172
    6. '```' → logprob: -10.751079559326172
    7. '        
' → logprob: -12.626079559326172
    8. '<|end|>' → logprob: -12.751079559326172
    9. '	def' → logprob: -13.001079559326172
    10. '    ' → logprob: -13.001079559326172

Token 84: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032470703125
    2. 'def' (adapté à ' def') → logprob: -3.782470703125
    3. ' def' → logprob: -5.032470703125
    4. '    
' → logprob: -6.782470703125
    5. '<|end|>' → logprob: -7.282470703125
    6. '```' → logprob: -8.282470703125
    7. '  ' → logprob: -8.657470703125
    8. '
' → logprob: -9.282470703125
    9. '	def' → logprob: -9.532470703125
    10. '<|end|>' → logprob: -9.907470703125

Token 85: ' unite' (ID: 96146)
  Prédit: ' union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.3637370765209198
    2. 'union' → logprob: -1.3637371063232422
    3. ' unite' → logprob: -3.113737106323242
    4. 'un' → logprob: -5.363737106323242
    5. ' un' → logprob: -9.988737106323242
    6. ' unify' → logprob: -10.738737106323242
    7. '.union' → logprob: -11.238737106323242
    8. '_union' → logprob: -11.363737106323242
    9. ' merge' → logprob: -12.488737106323242
    10. ' united' → logprob: -12.738737106323242

Token 86: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1270190328359604
    2. '(' → logprob: -2.127018928527832
    3. ' (' → logprob: -9.752018928527832
    4. '(s' → logprob: -11.252018928527832
    5. 'self' → logprob: -11.502018928527832
    6. '(x' → logprob: -12.377018928527832
    7. '(a' → logprob: -13.252018928527832
    8. '(
' → logprob: -13.377018928527832
    9. ' ' → logprob: -15.252018928527832
    10. ' self' → logprob: -15.377018928527832

Token 87: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48520612716674805
    2. ',x' → logprob: -0.985206127166748
    3. ',self' → logprob: -4.735206127166748
    4. ' ,' → logprob: -7.485206127166748
    5. ',(' → logprob: -8.110206604003906
    6. ',a' → logprob: -8.110206604003906
    7. '(x' → logprob: -8.110206604003906
    8. ',y' → logprob: -8.360206604003906
    9. ',u' → logprob: -9.110206604003906
    10. ',int' → logprob: -9.610206604003906

Token 88: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06200846657156944
    2. ',y' → logprob: -2.8120083808898926
    3. ' ,' → logprob: -10.18700885772705
    4. ',x' → logprob: -12.93700885772705
    5. ',Y' → logprob: -15.18700885772705
    6. ',int' → logprob: -15.56200885772705
    7. ',u' → logprob: -16.437007904052734
    8. 'y' → logprob: -17.062007904052734
    9. '‌,' → logprob: -17.187007904052734
    10. ',

' → logprob: -17.312007904052734

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.052377623040229e-05
    2. ':' → logprob: -10.000070571899414
    3. ',' → logprob: -11.250070571899414
    4. '):
' → logprob: -11.625070571899414
    5. ' ):' → logprob: -13.375070571899414
    6. ')' → logprob: -13.875070571899414
    7. '():' → logprob: -16.125070571899414
    8. '}:' → logprob: -16.375070571899414
    9. ')：' → logprob: -16.625070571899414
    10. '):
' → logprob: -16.750070571899414

Token 90: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05670575425028801
    2. '       ' → logprob: -3.8067057132720947
    3. ' x' → logprob: -5.056705951690674
    4. '   ' → logprob: -5.306705951690674
    5. ':
' → logprob: -5.681705951690674
    6. '```' → logprob: -5.806705951690674
    7. 'root' → logprob: -6.056705951690674
    8. ':' → logprob: -6.181705951690674
    9. ',' → logprob: -6.181705951690674
    10. '<|end|>' → logprob: -6.431705951690674

Token 91: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0012576145818457007
    2. ' x' → logprob: -6.876257419586182
    3. '```' → logprob: -9.50125789642334
    4. '   ' → logprob: -10.50125789642334
    5. ')' → logprob: -10.87625789642334
    6. ' ' → logprob: -11.25125789642334
    7. '(x' → logprob: -11.25125789642334
    8. 'root' → logprob: -11.62625789642334
    9. '        ' → logprob: -11.75125789642334
    10. '    ' → logprob: -11.75125789642334

Token 92: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1492413580417633
    2. ',' → logprob: -2.7742414474487305
    3. ' =' → logprob: -2.7742414474487305
    4. ')' → logprob: -4.7742414474487305
    5. '_parent' → logprob: -5.8992414474487305
    6. '_' → logprob: -7.5242414474487305
    7. ')=' → logprob: -7.6492414474487305
    8. '_root' → logprob: -7.6492414474487305
    9. ',parent' → logprob: -8.27424144744873
    10. ' ' → logprob: -8.52424144744873

Token 93: '.find' (ID: 4231)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.5886306166648865
    2. 'parent' → logprob: -1.5886306762695312
    3. '.' → logprob: -1.8386306762695312
    4. ')' → logprob: -3.5886306762695312
    5. '.find' → logprob: -3.5886306762695312
    6. '_parent' → logprob: -6.213630676269531
    7. '[parent' → logprob: -6.213630676269531
    8. '[' → logprob: -6.338630676269531
    9. ',parent' → logprob: -6.338630676269531
    10. 'find' → logprob: -6.338630676269531

Token 94: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006099550519138575
    2. '(' → logprob: -5.631099700927734
    3. '(y' → logprob: -6.006099700927734
    4. ')' → logprob: -10.756099700927734
    5. 'x' → logprob: -12.006099700927734
    6. ',' → logprob: -13.131099700927734
    7. '(
' → logprob: -13.756099700927734
    8. ' (' → logprob: -13.881099700927734
    9. ',y' → logprob: -14.756099700927734
    10. ',x' → logprob: -15.131099700927734

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012568994425237179
    2. ')
' → logprob: -7.376256942749023
    3. ')y' → logprob: -7.501256942749023
    4. ' )' → logprob: -9.626256942749023
    5. ',y' → logprob: -12.126256942749023
    6. ')x' → logprob: -12.626256942749023
    7. 'y' → logprob: -13.751256942749023
    8. ' )
' → logprob: -14.626256942749023
    9. ' y' → logprob: -14.626256942749023
    10. ',' → logprob: -14.876256942749023

Token 96: '       ' (ID: 309)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.40567299723625183
    2. '<|end|>' → logprob: -1.4056730270385742
    3. '       ' → logprob: -3.030673027038574
    4. ',y' → logprob: -4.030673027038574
    5. ' y' → logprob: -5.280673027038574
    6. ',' → logprob: -5.905673027038574
    7. ')' → logprob: -6.030673027038574
    8. ';y' → logprob: -6.530673027038574
    9. ' if' → logprob: -6.655673027038574
    10. '<|end|>' → logprob: -6.655673027038574

Token 97: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -3.128163257315464e-07
    2. ' y' → logprob: -15.125
    3. '       ' → logprob: -18.875
    4. '	y' → logprob: -20.0
    5. '   ' → logprob: -21.875
    6. 'x' → logprob: -22.375
    7. '    ' → logprob: -23.125
    8. ''y' → logprob: -23.125
    9. 'y's' → logprob: -23.375
    10. '(y' → logprob: -23.5

Token 98: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006526368670165539
    2. ' =' → logprob: -5.506526470184326
    3. '=self' → logprob: -7.006526470184326
    4. ')' → logprob: -7.631526470184326
    5. '=x' → logprob: -7.881526470184326
    6. '<|end|>' → logprob: -8.006525993347168
    7. ')=' → logprob: -9.131525993347168
    8. '=find' → logprob: -9.756525993347168
    9. '=y' → logprob: -10.006525993347168
    10. '=
' → logprob: -10.381525993347168

Token 99: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -2.7372048862162046e-05
    2. 'find' → logprob: -10.625027656555176
    3. '.findall' → logprob: -13.125027656555176
    4. '.' → logprob: -13.875027656555176
    5. ' .' → logprob: -17.00002670288086
    6. '	find' → logprob: -17.75002670288086
    7. '=find' → logprob: -18.37502670288086
    8. ').' → logprob: -18.87502670288086
    9. '(find' → logprob: -19.00002670288086
    10. ')find' → logprob: -19.50002670288086

Token 100: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.003960855305194855
    2. '(x' → logprob: -5.753961086273193
    3. '(' → logprob: -7.253961086273193
    4. 'y' → logprob: -9.628960609436035
    5. '<|end|>' → logprob: -11.753960609436035
    6. ')' → logprob: -13.878960609436035
    7. 'x' → logprob: -15.628960609436035
    8. '(
' → logprob: -15.878960609436035
    9. ' y' → logprob: -16.12896156311035
    10. ' (' → logprob: -16.25396156311035

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015314090996980667
    2. ')
' → logprob: -6.501531600952148
    3. '<|end|>' → logprob: -12.126531600952148
    4. ' )' → logprob: -12.251531600952148
    5. 'if' → logprob: -12.376531600952148
    6. ')return' → logprob: -12.626531600952148
    7. '       ' → logprob: -12.751531600952148
    8. ')x' → logprob: -13.126531600952148
    9. '):
' → logprob: -14.376531600952148
    10. ' if' → logprob: -14.876531600952148

Token 102: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.121638223528862
    2. '       ' → logprob: -2.496638298034668
    3. ' if' → logprob: -3.496638298034668
    4. '   ' → logprob: -6.371638298034668
    5. '	if' → logprob: -9.746638298034668
    6. ';if' → logprob: -10.121638298034668
    7. '<|end|>' → logprob: -10.496638298034668
    8. 'If' → logprob: -11.871638298034668
    9. ')' → logprob: -12.121638298034668
    10. '```' → logprob: -12.121638298034668

Token 103: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -6.265633419388905e-05
    2. ' if' → logprob: -9.750062942504883
    3. '   ' → logprob: -13.375062942504883
    4. '       ' → logprob: -13.750062942504883
    5. 'return' → logprob: -13.875062942504883
    6. '
' → logprob: -15.250062942504883
    7. '```' → logprob: -15.375062942504883
    8. 'i' → logprob: -15.750062942504883
    9. '    
' → logprob: -17.000062942504883
    10. 'If' → logprob: -17.125062942504883

Token 104: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3132617771625519
    2. ' x' → logprob: -1.3132617473602295
    3. '	x' → logprob: -16.063261032104492
    4. ' ' → logprob: -17.813261032104492
    5. '(x' → logprob: -17.938261032104492
    6. ')x' → logprob: -19.438261032104492
    7. '   ' → logprob: -20.188261032104492
    8. '_x' → logprob: -20.438261032104492
    9. '"x' → logprob: -20.563261032104492
    10. '  ' → logprob: -20.688261032104492

Token 105: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005353532265871763
    2. '!=' → logprob: -5.2553534507751465
    3. ' ==' → logprob: -9.130353927612305
    4. '=' → logprob: -12.505353927612305
    5. ']==' → logprob: -12.505353927612305
    6. '==
' → logprob: -13.505353927612305
    7. '===' → logprob: -13.880353927612305
    8. ' !=' → logprob: -14.255353927612305
    9. '```' → logprob: -15.380353927612305
    10. '()==' → logprob: -15.505353927612305

Token 106: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0280383548888494e-06
    2. ' y' → logprob: -13.875000953674316
    3. '	y' → logprob: -19.750001907348633
    4. ''y' → logprob: -21.125001907348633
    5. '‘y' → logprob: -22.750001907348633
    6. '   ' → logprob: -23.125001907348633
    7. ')y' → logprob: -23.375001907348633
    8. 'y's' → logprob: -23.375001907348633
    9. ' ' → logprob: -24.000001907348633
    10. 'x' → logprob: -24.375001907348633

Token 107: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.693668007850647
    2. ':return' → logprob: -0.693668007850647
    3. ':
' → logprob: -8.318668365478516
    4. 'return' → logprob: -8.318668365478516
    5. ' return' → logprob: -11.193668365478516
    6. ')return' → logprob: -11.818668365478516
    7. '{return' → logprob: -12.818668365478516
    8. '           ' → logprob: -13.068668365478516
    9. ')' → logprob: -13.068668365478516
    10. ' :' → logprob: -13.443668365478516

Token 108: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3367270827293396
    2. '           ' → logprob: -1.8367271423339844
    3. ' return' → logprob: -2.0867271423339844
    4. ':return' → logprob: -6.711727142333984
    5. '	return' → logprob: -7.586727142333984
    6. '   ' → logprob: -7.836727142333984
    7. '       ' → logprob: -8.211727142333984
    8. '
' → logprob: -9.836727142333984
    9. '{return' → logprob: -11.711727142333984
    10. '```' → logprob: -12.961727142333984

Token 109: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5528255105018616
    2. '
' → logprob: -1.9278254508972168
    3. ' False' → logprob: -1.9278254508972168
    4. '       ' → logprob: -3.302825450897217
    5. 'True' → logprob: -3.427825450897217
    6. ' True' → logprob: -4.052825450897217
    7. 'None' → logprob: -4.302825450897217
    8. 'if' → logprob: -4.302825450897217
    9. ' None' → logprob: -5.177825450897217
    10. '        
' → logprob: -5.677825450897217

Token 110: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41555604338645935
    2. '<|end|>' → logprob: -1.2905560731887817
    3. '       ' → logprob: -2.915555953979492
    4. '  
' → logprob: -5.540555953979492
    5. '        
' → logprob: -6.165555953979492
    6. '<|end|>' → logprob: -6.665555953979492
    7. ' 
' → logprob: -6.790555953979492
    8. '
' → logprob: -7.915555953979492
    9. '    
' → logprob: -8.040555953979492
    10. '	' → logprob: -8.165555953979492

Token 112: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000822495436295867
    2. ' if' → logprob: -7.5008225440979
    3. '       ' → logprob: -8.375822067260742
    4. '   ' → logprob: -10.625822067260742
    5. '	if' → logprob: -12.250822067260742
    6. '<|end|>' → logprob: -12.375822067260742
    7. '```' → logprob: -12.750822067260742
    8. '    ' → logprob: -14.000822067260742
    9. ' ' → logprob: -14.250822067260742
    10. 'If' → logprob: -14.750822067260742

Token 113: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02324850670993328
    2. ' self' → logprob: -3.7732484340667725
    3. '(self' → logprob: -13.148248672485352
    4. 'rank' → logprob: -14.523248672485352
    5. '	self' → logprob: -15.023248672485352
    6. '[self' → logprob: -15.773248672485352
    7. ' ' → logprob: -17.14824867248535
    8. 's' → logprob: -17.77324867248535
    9. ':self' → logprob: -18.02324867248535
    10. '   ' → logprob: -18.02324867248535

Token 114: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -4.320199877838604e-07
    2. 'rank' → logprob: -14.875
    3. '.' → logprob: -18.0
    4. 'ank' → logprob: -18.375
    5. '_rank' → logprob: -19.875
    6. '.r' → logprob: -20.0
    7. ' rank' → logprob: -20.5
    8. '.parent' → logprob: -20.5
    9. '(rank' → logprob: -21.125
    10. ' .' → logprob: -21.75

Token 115: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -11.750009536743164
    3. 'x' → logprob: -13.875009536743164
    4. '[
' → logprob: -15.000009536743164
    5. ' [' → logprob: -16.000009536743164
    6. '<x' → logprob: -17.000009536743164
    7. '[int' → logprob: -17.500009536743164
    8. ' x' → logprob: -17.875009536743164
    9. '```' → logprob: -18.375009536743164
    10. '[a' → logprob: -18.625009536743164

Token 116: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00873216800391674
    2. ' <' → logprob: -4.758732318878174
    3. '<x' → logprob: -9.508731842041016
    4. ')<' → logprob: -11.008731842041016
    5. ']<' → logprob: -11.133731842041016
    6. '()<' → logprob: -13.383731842041016
    7. '}<' → logprob: -13.633731842041016
    8. ' ' → logprob: -13.883731842041016
    9. '<size' → logprob: -13.883731842041016
    10. '<a' → logprob: -14.258731842041016

Token 117: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002485765377059579
    2. ' self' → logprob: -6.002485752105713
    3. '[self' → logprob: -12.752486228942871
    4. 'y' → logprob: -13.252486228942871
    5. '<|end|>' → logprob: -13.502486228942871
    6. '	self' → logprob: -14.002486228942871
    7. '
' → logprob: -14.252486228942871
    8. '=self' → logprob: -14.377486228942871
    9. '(self' → logprob: -14.627486228942871
    10. 'rank' → logprob: -14.627486228942871

Token 118: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -6.869017852295656e-06
    2. 'rank' → logprob: -12.125006675720215
    3. '.parent' → logprob: -14.125006675720215
    4. '.' → logprob: -14.750006675720215
    5. ' .' → logprob: -15.625006675720215
    6. ' rank' → logprob: -16.12500762939453
    7. 'ank' → logprob: -17.62500762939453
    8. '_rank' → logprob: -19.00000762939453
    9. 'Rank' → logprob: -20.12500762939453
    10. '.
' → logprob: -20.37500762939453

Token 119: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0007696056272834539
    2. '[x' → logprob: -7.25076961517334
    3. '[' → logprob: -9.87576961517334
    4. 'y' → logprob: -11.87576961517334
    5. '[
' → logprob: -14.75076961517334
    6. '```' → logprob: -15.25076961517334
    7. ' [' → logprob: -16.375768661499023
    8. ':y' → logprob: -16.625768661499023
    9. '[q' → logprob: -16.875768661499023
    10. ' y' → logprob: -17.000768661499023

Token 120: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007378002628684044
    2. '):' → logprob: -7.87573766708374
    3. ' :' → logprob: -8.125738143920898
    4. ']:' → logprob: -10.125738143920898
    5. ':x' → logprob: -11.625738143920898
    6. ':
' → logprob: -12.000738143920898
    7. '>:' → logprob: -13.000738143920898
    8. ':return' → logprob: -14.000738143920898
    9. ' ):' → logprob: -14.250738143920898
    10. '}:' → logprob: -14.375738143920898

Token 121: '           ' (ID: 352)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9966569542884827
    2. ' x' → logprob: -1.621656894683838
    3. '           ' → logprob: -2.121656894683838
    4. 'self' → logprob: -2.121656894683838
    5. 'x' → logprob: -2.371656894683838
    6. ',x' → logprob: -3.246656894683838
    7. ',' → logprob: -3.746656894683838
    8. '<|end|>' → logprob: -4.246656894683838
    9. '	self' → logprob: -5.246656894683838
    10. '       ' → logprob: -5.996656894683838

Token 122: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08587886393070221
    2. 'x' → logprob: -2.960878849029541
    3. ' self' → logprob: -3.710878849029541
    4. ' x' → logprob: -5.335878849029541
    5. '           ' → logprob: -6.710878849029541
    6. ',x' → logprob: -11.2108793258667
    7. '   ' → logprob: -12.3358793258667
    8. '	self' → logprob: -12.5858793258667
    9. '       ' → logprob: -13.3358793258667
    10. '(x' → logprob: -13.4608793258667

Token 123: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0003171121352352202
    2. 'parent' → logprob: -8.125317573547363
    3. '.' → logprob: -11.750317573547363
    4. '[parent' → logprob: -12.000317573547363
    5. '_parent' → logprob: -12.250317573547363
    6. '	parent' → logprob: -14.125317573547363
    7. ',parent' → logprob: -14.750317573547363
    8. '.Parent' → logprob: -15.125317573547363
    9. '.user' → logprob: -15.125317573547363
    10. 'Parent' → logprob: -15.500317573547363

Token 124: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.6047699318733066e-05
    2. '[' → logprob: -11.125016212463379
    3. '[y' → logprob: -13.750016212463379
    4. 'x' → logprob: -15.750016212463379
    5. ' [' → logprob: -17.125015258789062
    6. '```' → logprob: -17.875015258789062
    7. '[
' → logprob: -19.125015258789062
    8. '[int' → logprob: -19.375015258789062
    9. '[class' → logprob: -19.750015258789062
    10. '][' → logprob: -20.125015258789062

Token 125: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.3134085237979889
    2. ']' → logprob: -1.3134084939956665
    3. '=' → logprob: -9.563408851623535
    4. '=y' → logprob: -9.563408851623535
    5. ' ]' → logprob: -13.063408851623535
    6. ']+=' → logprob: -13.563408851623535
    7. ' =' → logprob: -14.313408851623535
    8. '']=' → logprob: -14.813408851623535
    9. ')=' → logprob: -14.938408851623535
    10. '[y' → logprob: -15.063408851623535

Token 126: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.088346359931165e-07
    2. ' y' → logprob: -14.000000953674316
    3. '	y' → logprob: -19.0
    4. ')y' → logprob: -22.375
    5. '[y' → logprob: -23.25
    6. ''y' → logprob: -23.375
    7. '‘y' → logprob: -23.75
    8. ',y' → logprob: -24.125
    9. '   ' → logprob: -24.125
    10. '<|end|>' → logprob: -24.375

Token 127: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.14318354427814484
    2. '       ' → logprob: -2.518183469772339
    3. ' else' → logprob: -3.018183469772339
    4. '
' → logprob: -6.268183708190918
    5. '<|end|>' → logprob: -7.143183708190918
    6. 'return' → logprob: -8.143183708190918
    7. 'y' → logprob: -8.268183708190918
    8. 'x' → logprob: -8.518183708190918
    9. '	else' → logprob: -8.643183708190918
    10. 'elif' → logprob: -9.393183708190918

Token 128: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2439834624528885
    2. '       ' → logprob: -1.868983507156372
    3. ' else' → logprob: -2.868983507156372
    4. '<|end|>' → logprob: -5.618983268737793
    5. '	else' → logprob: -6.993983268737793
    6. '   ' → logprob: -8.743983268737793
    7. ')' → logprob: -8.868983268737793
    8. 'return' → logprob: -8.993983268737793
    9. '#else' → logprob: -9.618983268737793
    10. 'y' → logprob: -9.618983268737793

Token 129: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0070125446654856205
    2. ' else' → logprob: -5.007012367248535
    3. '       ' → logprob: -8.132012367248535
    4. '	else' → logprob: -13.132012367248535
    5. '   ' → logprob: -13.882012367248535
    6. 'elif' → logprob: -16.25701332092285
    7. '_else' → logprob: -16.38201332092285
    8. '           ' → logprob: -17.25701332092285
    9. 'self' → logprob: -17.38201332092285
    10. '#else' → logprob: -17.38201332092285

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5265265703201294
    2. ':
' → logprob: -0.9015265703201294
    3. '           ' → logprob: -5.90152645111084
    4. '       ' → logprob: -8.15152645111084
    5. '{
' → logprob: -8.40152645111084
    6. '{' → logprob: -9.40152645111084
    7. '   ' → logprob: -10.90152645111084
    8. '):
' → logprob: -11.90152645111084
    9. '          ' → logprob: -12.02652645111084
    10. ':self' → logprob: -12.27652645111084

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027803927659988403
    2. ':' → logprob: -7.127780437469482
    3. ':
' → logprob: -7.127780437469482
    4. '{
' → logprob: -8.002779960632324
    5. 'self' → logprob: -8.127779960632324
    6. '       ' → logprob: -8.752779960632324
    7. '               ' → logprob: -9.377779960632324
    8. '{' → logprob: -9.502779960632324
    9. '```' → logprob: -9.502779960632324
    10. '   ' → logprob: -9.752779960632324

Token 132: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010728373192250729
    2. '           ' → logprob: -4.635728359222412
    3. ' self' → logprob: -7.010728359222412
    4. '	self' → logprob: -10.88572883605957
    5. '   ' → logprob: -11.38572883605957
    6. '       ' → logprob: -11.38572883605957
    7. '               ' → logprob: -11.88572883605957
    8. '[self' → logprob: -12.01072883605957
    9. '```' → logprob: -12.13572883605957
    10. ' ' → logprob: -12.63572883605957

Token 133: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.001930301426909864
    2. 'parent' → logprob: -6.251930236816406
    3. '[parent' → logprob: -14.251930236816406
    4. '_parent' → logprob: -14.626930236816406
    5. '	parent' → logprob: -15.001930236816406
    6. '.rank' → logprob: -15.751930236816406
    7. ' parent' → logprob: -16.001930236816406
    8. '.' → logprob: -16.751930236816406
    9. ',parent' → logprob: -17.501930236816406
    10. 'Parent' → logprob: -17.501930236816406

Token 134: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.250000953674316
    3. 'y' → logprob: -16.375
    4. '       ' → logprob: -17.0
    5. '   ' → logprob: -17.5
    6. '```' → logprob: -17.75
    7. '[x' → logprob: -18.375
    8. '	y' → logprob: -19.25
    9. '           ' → logprob: -19.625
    10. '[u' → logprob: -19.75

Token 135: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.2697654664516449
    2. '=' → logprob: -2.0197653770446777
    3. '=x' → logprob: -2.2697653770446777
    4. ')=' → logprob: -8.769765853881836
    5. ']' → logprob: -8.769765853881836
    6. ' =' → logprob: -9.644765853881836
    7. '}=' → logprob: -10.769765853881836
    8. '=y' → logprob: -11.519765853881836
    9. '']=' → logprob: -11.894765853881836
    10. '"]=' → logprob: -12.769765853881836

Token 136: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.25
    3. '	x' → logprob: -22.625
    4. ')x' → logprob: -23.625
    5. '"x' → logprob: -23.875
    6. '{x' → logprob: -24.375
    7. '$x' → logprob: -24.75
    8. '[x' → logprob: -24.75
    9. ''x' → logprob: -24.75
    10. ',x' → logprob: -26.0

Token 137: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08765248209238052
    2. '       ' → logprob: -3.2126524448394775
    3. ' if' → logprob: -3.4626524448394775
    4. '           ' → logprob: -4.462652683258057
    5. '   ' → logprob: -7.337652683258057
    6. '```' → logprob: -9.587652206420898
    7. '	if' → logprob: -10.962652206420898
    8. ' ' → logprob: -11.587652206420898
    9. ';if' → logprob: -11.587652206420898
    10. '<|end|>' → logprob: -11.587652206420898

Token 138: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16755357384681702
    2. '       ' → logprob: -2.292553663253784
    3. '           ' → logprob: -3.417553663253784
    4. ' if' → logprob: -4.292553424835205
    5. '   ' → logprob: -5.542553424835205
    6. '```' → logprob: -5.917553424835205
    7. '<|end|>' → logprob: -10.292553901672363
    8. ' ' → logprob: -10.417553901672363
    9. '	if' → logprob: -10.542553901672363
    10. ';if' → logprob: -10.667553901672363

Token 139: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011621268931776285
    2. '           ' → logprob: -6.876162052154541
    3. ' if' → logprob: -9.0011625289917
    4. '            
' → logprob: -13.3761625289917
    5. 'If' → logprob: -13.3761625289917
    6. '               ' → logprob: -13.8761625289917
    7. '	if' → logprob: -14.8761625289917
    8. ';if' → logprob: -14.8761625289917
    9. '```' → logprob: -14.8761625289917
    10. '       ' → logprob: -15.0011625289917

Token 140: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.493430894101039e-05
    2. ' self' → logprob: -9.500075340270996
    3. '(self' → logprob: -17.37507438659668
    4. '[self' → logprob: -18.37507438659668
    5. '	self' → logprob: -18.37507438659668
    6. '
' → logprob: -19.00007438659668
    7. 'rank' → logprob: -19.25007438659668
    8. ':self' → logprob: -21.12507438659668
    9. '$self' → logprob: -21.87507438659668
    10. '   ' → logprob: -22.25007438659668

Token 141: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -6.704273118884885e-07
    2. 'rank' → logprob: -14.375000953674316
    3. '_rank' → logprob: -17.25
    4. '.' → logprob: -18.125
    5. '.parent' → logprob: -18.625
    6. 'Rank' → logprob: -18.875
    7. ' rank' → logprob: -20.25
    8. ' .' → logprob: -20.625
    9. '
' → logprob: -21.125
    10. '(rank' → logprob: -21.375

Token 142: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.1008713702030946e-06
    2. 'x' → logprob: -13.125001907348633
    3. '[' → logprob: -16.750001907348633
    4. '[self' → logprob: -17.125001907348633
    5. '[s' → logprob: -19.375001907348633
    6. '[
' → logprob: -20.125001907348633
    7. '[a' → logprob: -20.375001907348633
    8. ' [' → logprob: -21.000001907348633
    9. '[user' → logprob: -21.000001907348633
    10. '```' → logprob: -21.125001907348633

Token 143: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0018472475931048393
    2. ']==' → logprob: -6.376847267150879
    3. '==
' → logprob: -9.376847267150879
    4. '===' → logprob: -11.126847267150879
    5. ' ==' → logprob: -11.376847267150879
    6. '[' → logprob: -11.376847267150879
    7. ')==' → logprob: -11.501847267150879
    8. '()==' → logprob: -12.501847267150879
    9. '=' → logprob: -12.626847267150879
    10. '']==' → logprob: -13.001847267150879

Token 144: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013369438238441944
    2. ' self' → logprob: -9.375133514404297
    3. 'y' → logprob: -10.375133514404297
    4. '[self' → logprob: -11.625133514404297
    5. 'rank' → logprob: -12.000133514404297
    6. '	self' → logprob: -14.000133514404297
    7. 'x' → logprob: -14.750133514404297
    8. '
' → logprob: -15.125133514404297
    9. '(self' → logprob: -15.250133514404297
    10. '<|end|>' → logprob: -16.000133514404297

Token 145: '.rank' (ID: 96793)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.12390521913766861
    2. '.rank' → logprob: -2.9989051818847656
    3. '[y' → logprob: -2.9989051818847656
    4. '_rank' → logprob: -4.373905181884766
    5. 'Rank' → logprob: -6.248905181884766
    6. ' rank' → logprob: -6.873905181884766
    7. 'ank' → logprob: -7.123905181884766
    8. '[x' → logprob: -8.248905181884766
    9. 'y' → logprob: -8.623905181884766
    10. '[' → logprob: -10.998905181884766

Token 146: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.03892819210886955
    2. '[x' → logprob: -3.288928270339966
    3. 'y' → logprob: -7.163928031921387
    4. 'x' → logprob: -9.788928031921387
    5. '[' → logprob: -9.913928031921387
    6. ' y' → logprob: -12.538928031921387
    7. '[
' → logprob: -13.913928031921387
    8. '```' → logprob: -14.038928031921387
    9. '	y' → logprob: -14.913928031921387
    10. '(y' → logprob: -15.163928031921387

Token 147: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015085970517247915
    2. ':
' → logprob: -9.000150680541992
    3. ']:' → logprob: -11.875150680541992
    4. '+:' → logprob: -12.500150680541992
    5. '):' → logprob: -12.625150680541992
    6. ':return' → logprob: -12.750150680541992
    7. '>:' → logprob: -13.000150680541992
    8. ' :' → logprob: -13.125150680541992
    9. ':add' → logprob: -13.500150680541992
    10. ':first' → logprob: -14.500150680541992

Token 148: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001118903630413115
    2. '           ' → logprob: -8.001118659973145
    3. ' self' → logprob: -8.001118659973145
    4. 'self' → logprob: -8.251118659973145
    5. '   ' → logprob: -9.001118659973145
    6. '                   ' → logprob: -10.751118659973145
    7. ' ' → logprob: -11.126118659973145
    8. '  ' → logprob: -12.126118659973145
    9. '1' → logprob: -12.876118659973145
    10. '              ' → logprob: -12.876118659973145

Token 149: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002146812155842781
    2. ' self' → logprob: -6.2521467208862305
    3. '                   ' → logprob: -8.75214672088623
    4. '               ' → logprob: -9.75214672088623
    5. '   ' → logprob: -14.25214672088623
    6. '           ' → logprob: -14.50214672088623
    7. '	self' → logprob: -15.12714672088623
    8. '[self' → logprob: -15.75214672088623
    9. '                       ' → logprob: -16.502147674560547
    10. '
' → logprob: -17.252147674560547

Token 150: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -3.4881879400927573e-05
    2. 'rank' → logprob: -10.750035285949707
    3. '[x' → logprob: -11.625035285949707
    4. '_rank' → logprob: -12.625035285949707
    5. ' rank' → logprob: -14.500035285949707
    6. 'ank' → logprob: -14.875035285949707
    7. 'Rank' → logprob: -15.500035285949707
    8. ' .' → logprob: -18.37503433227539
    9. 'anks' → logprob: -18.50003433227539
    10. '.' → logprob: -18.50003433227539

Token 151: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.3856492842023727e-06
    2. 'x' → logprob: -13.625000953674316
    3. '```' → logprob: -17.000001907348633
    4. ' [' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '[' → logprob: -18.500001907348633
    7. '	x' → logprob: -18.875001907348633
    8. '[int' → logprob: -19.750001907348633
    9. '[
' → logprob: -19.750001907348633
    10. '{x' → logprob: -20.000001907348633

Token 152: ']+=' (ID: 123635)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0010522229131311178
    2. ']+=' → logprob: -7.001052379608154
    3. ' +=' → logprob: -8.876051902770996
    4. '+' → logprob: -14.376051902770996
    5. '+='' → logprob: -15.251051902770996
    6. '+="' → logprob: -16.251052856445312
    7. '+=(' → logprob: -16.251052856445312
    8. '   ' → logprob: -17.251052856445312
    9. '```' → logprob: -17.626052856445312
    10. '[' → logprob: -18.126052856445312

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -20.125
    4. '１' → logprob: -21.0
    5. '
' → logprob: -21.5
    6. '```' → logprob: -22.0
    7. '  ' → logprob: -22.625
    8. '۱' → logprob: -23.5
    9. '<|end|>' → logprob: -23.875
    10. '+' → logprob: -24.0

Token 154: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5405380129814148
    2. '
' → logprob: -1.4155380725860596
    3. 'return' → logprob: -2.2905380725860596
    4. '	return' → logprob: -3.4155380725860596
    5. ' return' → logprob: -3.7905380725860596
    6. '<|end|>' → logprob: -4.6655378341674805
    7. '   ' → logprob: -5.4155378341674805
    8. '	' → logprob: -7.4155378341674805
    9. ':return' → logprob: -7.5405378341674805
    10. '  
' → logprob: -7.9155378341674805

Token 155: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3978697955608368
    2. '       ' → logprob: -1.3978698253631592
    3. ' return' → logprob: -2.772869825363159
    4. '   ' → logprob: -4.64786958694458
    5. '
' → logprob: -5.27286958694458
    6. '	return' → logprob: -5.64786958694458
    7. ':return' → logprob: -9.147870063781738
    8. 'True' → logprob: -9.897870063781738
    9. ' True' → logprob: -10.022870063781738
    10. 'true' → logprob: -10.147870063781738

Token 156: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004109273198992014
    2. ' return' → logprob: -5.5041093826293945
    3. '       ' → logprob: -10.504109382629395
    4. 'True' → logprob: -12.879109382629395
    5. '
' → logprob: -15.254109382629395
    6. '   ' → logprob: -15.879109382629395
    7. ':return' → logprob: -15.879109382629395
    8. 'true' → logprob: -16.004108428955078
    9. '	return' → logprob: -16.004108428955078
    10. 'Return' → logprob: -17.129108428955078

Token 157: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. '(True' → logprob: -19.00020408630371
    4. 'Tr' → logprob: -21.00020408630371
    5. '=True' → logprob: -22.00020408630371
    6. 'None' → logprob: -22.12520408630371
    7. 'False' → logprob: -22.50020408630371
    8. 'true' → logprob: -23.12520408630371
    9. 'Truth' → logprob: -23.37520408630371
    10. 'TRUE' → logprob: -23.37520408630371

Token 158: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4212445914745331
    2. '
' → logprob: -1.9212446212768555
    3. '<|end|>' → logprob: -1.9212446212768555
    4. '   ' → logprob: -4.0462446212768555
    5. 'n' → logprob: -4.6712446212768555
    6. '#' → logprob: -4.7962446212768555
    7. '    
' → logprob: -5.9212446212768555
    8. '<|end|>' → logprob: -6.0462446212768555
    9. '```' → logprob: -6.1712446212768555
    10. 'u' → logprob: -6.6712446212768555

Token 160: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0010805641068145633
    2. 'n' → logprob: -7.626080513000488
    3. '   ' → logprob: -7.876080513000488
    4. ' def' → logprob: -9.001080513000488
    5. '#' → logprob: -9.751080513000488
    6. 'class' → logprob: -12.251080513000488
    7. '```' → logprob: -12.251080513000488
    8. 'd' → logprob: -12.501080513000488
    9. '    
' → logprob: -12.876080513000488
    10. ' ' → logprob: -13.126080513000488

Token 161: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.09286531060934067
    2. ' same' → logprob: -2.717865228652954
    3. ' iss' → logprob: -4.967865467071533
    4. 'is' → logprob: -4.967865467071533
    5. 'iss' → logprob: -5.217865467071533
    6. ' is' → logprob: -6.467865467071533
    7. 'size' → logprob: -6.967865467071533
    8. ' size' → logprob: -8.092864990234375
    9. 'connected' → logprob: -8.592864990234375
    10. '   ' → logprob: -9.092864990234375

Token 162: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.043258365243673325
    2. '(self' → logprob: -3.2932584285736084
    3. '(x' → logprob: -5.293258190155029
    4. '(a' → logprob: -10.043258666992188
    5. ' (' → logprob: -10.168258666992188
    6. '(`' → logprob: -11.043258666992188
    7. '("("' → logprob: -11.668258666992188
    8. '('' → logprob: -11.918258666992188
    9. '(_' → logprob: -12.043258666992188
    10. '()' → logprob: -12.043258666992188

Token 163: ',x' (ID: 29748)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6874538064002991
    2. '(x' → logprob: -0.8124538064002991
    3. ')' → logprob: -3.0624537467956543
    4. ' (' → logprob: -5.312453746795654
    5. ')(' → logprob: -7.187453746795654
    6. '(self' → logprob: -7.437453746795654
    7. ' )' → logprob: -8.812454223632812
    8. ',' → logprob: -9.812454223632812
    9. '   ' → logprob: -11.187454223632812
    10. ' ' → logprob: -11.187454223632812

Token 164: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.18188446760177612
    2. ',x' → logprob: -2.181884527206421
    3. ',' → logprob: -2.931884527206421
    4. ' ,' → logprob: -8.681884765625
    5. ',self' → logprob: -12.431884765625
    6. ',int' → logprob: -13.806884765625
    7. ',w' → logprob: -14.931884765625
    8. ',
' → logprob: -15.181884765625
    9. ',s' → logprob: -15.556884765625
    10. ',p' → logprob: -15.681884765625

Token 165: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11349009722471237
    2. ',' → logprob: -2.488490104675293
    3. '(self' → logprob: -4.738490104675293
    4. ',self' → logprob: -4.988490104675293
    5. 'self' → logprob: -5.488490104675293
    6. ',x' → logprob: -5.988490104675293
    7. '):
' → logprob: -6.863490104675293
    8. ')' → logprob: -7.488490104675293
    9. ',s' → logprob: -9.113490104675293
    10. ':' → logprob: -9.238490104675293

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40723374485969543
    2. ' return' → logprob: -1.282233715057373
    3. 'return' → logprob: -3.157233715057373
    4. ':return' → logprob: -4.657233715057373
    5. '	return' → logprob: -5.782233715057373
    6. '   ' → logprob: -6.782233715057373
    7. '	' → logprob: -8.782234191894531
    8. '<|end|>' → logprob: -8.782234191894531
    9. ':' → logprob: -9.282234191894531
    10. ' x' → logprob: -9.282234191894531

Token 167: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010787109844386578
    2. ' return' → logprob: -5.010787010192871
    3. 'self' → logprob: -5.510787010192871
    4. ' self' → logprob: -11.635787010192871
    5. '
' → logprob: -12.260787010192871
    6. '{return' → logprob: -13.385787010192871
    7. ':return' → logprob: -13.510787010192871
    8. '	return' → logprob: -13.510787010192871
    9. '       ' → logprob: -13.760787010192871
    10. '   ' → logprob: -14.260787010192871

Token 168: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602245420217514
    2. ' self' → logprob: -1.9102245569229126
    3. '(self' → logprob: -14.910224914550781
    4. '[self' → logprob: -17.53522491455078
    5. '	self' → logprob: -18.03522491455078
    6. '   ' → logprob: -18.66022491455078
    7. ' ' → logprob: -19.03522491455078
    8. '```' → logprob: -19.28522491455078
    9. ':self' → logprob: -21.03522491455078
    10. 'Self' → logprob: -21.28522491455078

Token 169: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -1.759734732331708e-05
    2. '.' → logprob: -11.250017166137695
    3. '.findall' → logprob: -12.625017166137695
    4. ' .' → logprob: -14.250017166137695
    5. '.parent' → logprob: -15.000017166137695
    6. 'find' → logprob: -16.500017166137695
    7. ').' → logprob: -17.000017166137695
    8. '.get' → logprob: -17.375017166137695
    9. '.Find' → logprob: -17.750017166137695
    10. '.f' → logprob: -18.000017166137695

Token 170: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0019287518225610256
    2. '(' → logprob: -6.251928806304932
    3. '(
' → logprob: -16.501928329467773
    4. ' (' → logprob: -18.751928329467773
    5. '(

' → logprob: -19.001928329467773
    6. '((' → logprob: -19.251928329467773
    7. 'x' → logprob: -19.501928329467773
    8. '()' → logprob: -19.626928329467773
    9. '(y' → logprob: -20.251928329467773
    10. '(s' → logprob: -20.376928329467773

Token 171: ')==' (ID: 35269)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011788194999098778
    2. ')' → logprob: -4.886788368225098
    3. '(' → logprob: -6.011788368225098
    4. ')==' → logprob: -6.386788368225098
    5. '(y' → logprob: -10.761788368225098
    6. '==' → logprob: -11.511788368225098
    7. ']==' → logprob: -12.511788368225098
    8. 'x' → logprob: -13.136788368225098
    9. '(
' → logprob: -13.636788368225098
    10. ' (' → logprob: -14.761788368225098

Token 172: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.138441237155348e-05
    2. ' self' → logprob: -9.375091552734375
    3. '   ' → logprob: -12.500091552734375
    4. 'y' → logprob: -13.000091552734375
    5. '(self' → logprob: -15.000091552734375
    6. '	self' → logprob: -16.625091552734375
    7. '[self' → logprob: -17.375091552734375
    8. '=self' → logprob: -17.500091552734375
    9. 'find' → logprob: -17.625091552734375
    10. '  ' → logprob: -18.125091552734375

Token 173: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0007429223624058068
    2. 'find' → logprob: -7.3757429122924805
    3. '.' → logprob: -9.50074291229248
    4. '(y' → logprob: -10.62574291229248
    5. '.findall' → logprob: -12.50074291229248
    6. ' .' → logprob: -12.62574291229248
    7. '(find' → logprob: -12.75074291229248
    8. '(x' → logprob: -12.87574291229248
    9. ').' → logprob: -13.25074291229248
    10. ')' → logprob: -14.12574291229248

Token 174: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -8.41866585687967e-06
    2. 'y' → logprob: -11.875008583068848
    3. '(' → logprob: -13.500008583068848
    4. '(x' → logprob: -17.25000762939453
    5. ' (' → logprob: -18.50000762939453
    6. '(find' → logprob: -18.62500762939453
    7. ' y' → logprob: -19.50000762939453
    8. '(
' → logprob: -19.75000762939453
    9. '(self' → logprob: -20.87500762939453
    10. 'find' → logprob: -21.00000762939453

Token 175: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -13.875000953674316
    3. ' )' → logprob: -17.625001907348633
    4. '}' → logprob: -18.375001907348633
    5. ')return' → logprob: -18.375001907348633
    6. '）' → logprob: -19.625001907348633
    7. '<|end|>' → logprob: -19.750001907348633
    8. '),' → logprob: -20.000001907348633
    9. ')

' → logprob: -20.250001907348633
    10. ')x' → logprob: -20.500001907348633

Token 176: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15691514313220978
    2. 'def' → logprob: -2.2819151878356934
    3. 'N' → logprob: -3.1569151878356934
    4. 'class' → logprob: -8.906914710998535
    5. 'Q' → logprob: -9.156914710998535
    6. '#' → logprob: -9.156914710998535
    7. '```' → logprob: -10.156914710998535
    8. 'if' → logprob: -10.281914710998535
    9. 'H' → logprob: -10.656914710998535
    10. '(n' → logprob: -11.031914710998535

Token 177: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003825848689302802
    2. ' =' → logprob: -6.753825664520264
    3. ',N' → logprob: -6.878825664520264
    4. ' ,' → logprob: -7.378825664520264
    5. '=' → logprob: -7.628825664520264
    6. ',K' → logprob: -9.128826141357422
    7. ',n' → logprob: -9.253826141357422
    8. ',M' → logprob: -9.503826141357422
    9. ',k' → logprob: -9.878826141357422
    10. ',int' → logprob: -9.878826141357422

Token 178: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5281324982643127
    2. ',' → logprob: -1.528132438659668
    3. ' =' → logprob: -1.653132438659668
    4. ',Q' → logprob: -6.778132438659668
    5. ',M' → logprob: -7.778132438659668
    6. ',K' → logprob: -8.778132438659668
    7. '=int' → logprob: -9.653132438659668
    8. '=input' → logprob: -10.528132438659668
    9. ',N' → logprob: -10.528132438659668
    10. ' ,' → logprob: -11.653132438659668

Token 179: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.03804505243897438
    2. ' map' → logprob: -3.2880451679229736
    3. 'list' → logprob: -13.288044929504395
    4. '	map' → logprob: -14.663044929504395
    5. ' ' → logprob: -14.913044929504395
    6. 'm' → logprob: -14.913044929504395
    7. 'tuple' → logprob: -15.288044929504395
    8. '[' → logprob: -15.288044929504395
    9. 'int' → logprob: -15.663044929504395
    10. '(map' → logprob: -16.78804588317871

Token 180: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000373950315406546
    2. 'int' → logprob: -8.500373840332031
    3. '(' → logprob: -8.750373840332031
    4. '(input' → logprob: -12.750373840332031
    5. '(str' → logprob: -12.875373840332031
    6. '[int' → logprob: -13.625373840332031
    7. '(list' → logprob: -13.750373840332031
    8. ',int' → logprob: -13.875373840332031
    9. 'list' → logprob: -14.250373840332031
    10. '=int' → logprob: -14.500373840332031

Token 181: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.023830929771065712
    2. ',' → logprob: -3.7738308906555176
    3. 'input' → logprob: -7.898830890655518
    4. ',int' → logprob: -9.148831367492676
    5. '(input' → logprob: -9.523831367492676
    6. '(' → logprob: -11.398831367492676
    7. ',map' → logprob: -11.898831367492676
    8. '(sys' → logprob: -12.398831367492676
    9. ' ,' → logprob: -12.773831367492676
    10. 'sys' → logprob: -12.898831367492676

Token 182: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003015001420862973
    2. '()' → logprob: -8.250301361083984
    3. '())' → logprob: -10.125301361083984
    4. '()
' → logprob: -16.875301361083984
    5. ' ().' → logprob: -17.750301361083984
    6. ')' → logprob: -18.125301361083984
    7. '(' → logprob: -18.625301361083984
    8. '()

' → logprob: -18.750301361083984
    9. '()))' → logprob: -19.250301361083984
    10. '()]' → logprob: -19.375301361083984

Token 183: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06237466633319855
    2. 'strip' → logprob: -2.8123745918273926
    3. 'rstrip' → logprob: -7.812374591827393
    4. ')' → logprob: -14.18737506866455
    5. 'read' → logprob: -14.68737506866455
    6. ' split' → logprob: -14.81237506866455
    7. '().' → logprob: -14.93737506866455
    8. '())' → logprob: -15.56237506866455
    9. '(split' → logprob: -15.56237506866455
    10. '()' → logprob: -16.312374114990234

Token 184: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.016253363341093063
    2. '()' → logprob: -4.516253471374512
    3. ')' → logprob: -5.266253471374512
    4. '(' → logprob: -11.391253471374512
    5. '(),' → logprob: -12.391253471374512
    6. '())
' → logprob: -12.516253471374512
    7. '()))' → logprob: -13.016253471374512
    8. '().' → logprob: -13.266253471374512
    9. '('' → logprob: -13.266253471374512
    10. ' ())' → logprob: -13.641253471374512

Token 185: 'edges' (ID: 39127)
  Prédit: 'edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.10854218155145645
    2. 'uf' → logprob: -2.8585422039031982
    3. 'ab' → logprob: -4.233541965484619
    4. 'abc' → logprob: -4.733541965484619
    5. 'AB' → logprob: -4.983541965484619
    6. 'uv' → logprob: -5.858541965484619
    7. 'edge' → logprob: -6.233541965484619
    8. 'roads' → logprob: -6.983541965484619
    9. 'uvw' → logprob: -7.108541965484619
    10. 'E' → logprob: -7.233541965484619

Token 186: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2724819481372833
    2. '=[]' → logprob: -1.522481918334961
    3. ' =' → logprob: -3.897481918334961
    4. '=[' → logprob: -11.397481918334961
    5. '=[],' → logprob: -11.522481918334961
    6. '=[]
' → logprob: -11.647481918334961
    7. '＝' → logprob: -12.022481918334961
    8. '={}' → logprob: -12.147481918334961
    9. '=list' → logprob: -13.022481918334961
    10. '[]' → logprob: -13.022481918334961

Token 187: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.0629870858974755e-05
    2. ' for' → logprob: -9.75006103515625
    3. '<|end|>' → logprob: -13.25006103515625
    4. '[' → logprob: -15.75006103515625
    5. 'edges' → logprob: -16.00006103515625
    6. '	for' → logprob: -16.12506103515625
    7. '[]' → logprob: -17.12506103515625
    8. 'For' → logprob: -17.75006103515625
    9. '[node' → logprob: -18.00006103515625
    10. '```' → logprob: -18.12506103515625

Token 188: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00016659092216286808
    2. '_i' → logprob: -8.750166893005371
    3. ' _' → logprob: -11.750166893005371
    4. ' i' → logprob: -16.000165939331055
    5. 'i' → logprob: -16.250165939331055
    6. '_=' → logprob: -16.875165939331055
    7. '_range' → logprob: -17.750165939331055
    8. '＿' → logprob: -19.625165939331055
    9. '_
' → logprob: -20.000165939331055
    10. '_

' → logprob: -20.000165939331055

Token 189: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2017803192138672
    2. 'in' → logprob: -1.7017803192138672
    3. '_' → logprob: -8.201780319213867
    4. ' ' → logprob: -10.201780319213867
    5. ' _' → logprob: -10.576780319213867
    6. 'n' → logprob: -11.451780319213867
    7. ',' → logprob: -12.201780319213867
    8. '```' → logprob: -12.701780319213867
    9. '	in' → logprob: -12.826780319213867
    10. '_in' → logprob: -12.826780319213867

Token 190: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. 'rang' → logprob: -18.50009536743164
    4. '	range' → logprob: -18.50009536743164
    5. '(range' → logprob: -18.75009536743164
    6. 'r' → logprob: -19.25009536743164
    7. '  ' → logprob: -20.37509536743164
    8. '   ' → logprob: -20.37509536743164
    9. 'ange' → logprob: -20.50009536743164
    10. '0' → logprob: -20.75009536743164

Token 191: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -1.1875571544806007e-05
    2. 'M' → logprob: -12.000011444091797
    3. '(' → logprob: -12.125011444091797
    4. '(N' → logprob: -15.750011444091797
    5. '(m' → logprob: -16.375011444091797
    6. ',M' → logprob: -17.875011444091797
    7. '(
' → logprob: -18.250011444091797
    8. '	M' → logprob: -19.250011444091797
    9. '[M' → logprob: -19.750011444091797
    10. ' (' → logprob: -20.375011444091797

Token 192: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007782964967191219
    2. ':' → logprob: -7.8757781982421875
    3. ' ):' → logprob: -8.375778198242188
    4. '):
' → logprob: -9.000778198242188
    5. ')' → logprob: -10.375778198242188
    6. ',' → logprob: -11.625778198242188
    7. '():' → logprob: -14.000778198242188
    8. ']:' → logprob: -14.500778198242188
    9. '}:' → logprob: -14.750778198242188
    10. ' :' → logprob: -14.875778198242188

Token 193: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2557300627231598
    2. ' u' → logprob: -1.7557300329208374
    3. 'a' → logprob: -3.130730152130127
    4. '   ' → logprob: -5.005730152130127
    5. ' a' → logprob: -6.130730152130127
    6. '	u' → logprob: -8.505729675292969
    7. 'x' → logprob: -9.880729675292969
    8. 'b' → logprob: -11.255729675292969
    9. ',u' → logprob: -11.630729675292969
    10. ' ' → logprob: -12.005729675292969

Token 194: ' s' (ID: 265)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3869320750236511
    2. 'u' → logprob: -1.136932134628296
    3. 'A' → logprob: -10.886932373046875
    4. ' u' → logprob: -11.261932373046875
    5. 'x' → logprob: -11.261932373046875
    6. '   ' → logprob: -11.636932373046875
    7. ' a' → logprob: -12.511932373046875
    8. '```' → logprob: -13.261932373046875
    9. 'f' → logprob: -14.511932373046875
    10. 'U' → logprob: -15.011932373046875

Token 195: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6960610151290894
    2. ',t' → logprob: -1.3210610151290894
    3. ',u' → logprob: -1.6960610151290894
    4. ',a' → logprob: -3.821061134338379
    5. ',v' → logprob: -4.321061134338379
    6. ',p' → logprob: -5.196061134338379
    7. ',e' → logprob: -6.071061134338379
    8. ',f' → logprob: -6.196061134338379
    9. ',d' → logprob: -6.571061134338379
    10. 'u' → logprob: -7.446061134338379

Token 196: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6759613156318665
    2. ',u' → logprob: -1.0509612560272217
    3. ',v' → logprob: -2.9259612560272217
    4. ',t' → logprob: -3.6759612560272217
    5. ',e' → logprob: -4.050961494445801
    6. ',l' → logprob: -4.675961494445801
    7. '=' → logprob: -4.800961494445801
    8. ',a' → logprob: -4.925961494445801
    9. ',w' → logprob: -5.550961494445801
    10. ',c' → logprob: -5.675961494445801

Token 197: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001005419879220426
    2. ' =' → logprob: -7.00100564956665
    3. '=input' → logprob: -9.876005172729492
    4. '=list' → logprob: -10.876005172729492
    5. '=line' → logprob: -12.001005172729492
    6. '=int' → logprob: -12.626005172729492
    7. ',s' → logprob: -13.001005172729492
    8. '=s' → logprob: -13.126005172729492
    9. ',map' → logprob: -13.501005172729492
    10. ',' → logprob: -13.501005172729492

Token 198: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -3.547789674485102e-05
    2. ' map' → logprob: -10.250035285949707
    3. '	map' → logprob: -17.375036239624023
    4. '(map' → logprob: -19.375036239624023
    5. 'list' → logprob: -19.625036239624023
    6. '
' → logprob: -20.375036239624023
    7. 'input' → logprob: -20.750036239624023
    8. ' ' → logprob: -21.125036239624023
    9. '```' → logprob: -21.250036239624023
    10. '.map' → logprob: -22.125036239624023

Token 199: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001076514832675457
    2. 'int' → logprob: -6.876076698303223
    3. '(input' → logprob: -10.376076698303223
    4. '<int' → logprob: -12.376076698303223
    5. '(' → logprob: -12.751076698303223
    6. ',int' → logprob: -13.126076698303223
    7. '[int' → logprob: -13.126076698303223
    8. ']int' → logprob: -14.751076698303223
    9. 'input' → logprob: -15.251076698303223
    10. 'list' → logprob: -15.751076698303223

Token 200: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -7.100059156073257e-05
    2. '(input' → logprob: -10.250070571899414
    3. ',' → logprob: -10.500070571899414
    4. ',int' → logprob: -12.375070571899414
    5. 'input' → logprob: -12.625070571899414
    6. ',(' → logprob: -15.750070571899414
    7. '=input' → logprob: -16.500070571899414
    8. ' ,' → logprob: -16.625070571899414
    9. '(' → logprob: -16.625070571899414
    10. '<input' → logprob: -17.125070571899414

Token 201: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.6166903151315637e-05
    2. '()' → logprob: -11.500016212463379
    3. '())' → logprob: -12.750016212463379
    4. ')' → logprob: -12.750016212463379
    5. '.' → logprob: -17.000015258789062
    6. ' ().' → logprob: -17.125015258789062
    7. '(' → logprob: -17.250015258789062
    8. '();)' → logprob: -18.125015258789062
    9. '.readline' → logprob: -18.500015258789062
    10. '().__' → logprob: -18.750015258789062

Token 202: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'strip' → logprob: -16.125
    3. ' split' → logprob: -18.375
    4. 'spl' → logprob: -19.25
    5. '.split' → logprob: -19.5
    6. '(split' → logprob: -19.75
    7. 'rstrip' → logprob: -20.375
    8. 's' → logprob: -22.25
    9. 'plit' → logprob: -23.0
    10. '().' → logprob: -23.125

Token 203: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004851306148339063
    2. '())' → logprob: -8.00048542022705
    3. '()' → logprob: -8.87548542022705
    4. ')
' → logprob: -11.87548542022705
    5. '))' → logprob: -13.37548542022705
    6. ')`' → logprob: -14.75048542022705
    7. ' )' → logprob: -15.25048542022705
    8. '),' → logprob: -15.62548542022705
    9. ');' → logprob: -15.87548542022705
    10. '`)' → logprob: -16.250484466552734

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013124700635671616
    2. 'edges' → logprob: -4.513124465942383
    3. ' edges' → logprob: -6.263124465942383
    4. ')' → logprob: -9.888124465942383
    5. '(edges' → logprob: -9.888124465942383
    6. '<|end|>' → logprob: -10.138124465942383
    7. '.edges' → logprob: -11.263124465942383
    8. '_edges' → logprob: -12.263124465942383
    9. ',' → logprob: -12.388124465942383
    10. '
' → logprob: -12.638124465942383

Token 205: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.009642988443374634
    2. ' edges' → logprob: -5.384643077850342
    3. '   ' → logprob: -5.384643077850342
    4. 's' → logprob: -8.009642601013184
    5. '
' → logprob: -9.509642601013184
    6. '(edges' → logprob: -12.134642601013184
    7. '.edges' → logprob: -12.509642601013184
    8. ' s' → logprob: -13.259642601013184
    9. '    
' → logprob: -13.509642601013184
    10. '_edges' → logprob: -14.009642601013184

Token 206: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007263714214786887
    2. '.' → logprob: -7.500726222991943
    3. '.ap' → logprob: -9.125726699829102
    4. '.app' → logprob: -10.500726699829102
    5. '.py' → logprob: -11.375726699829102
    6. '.push' → logprob: -12.250726699829102
    7. ').' → logprob: -12.500726699829102
    8. '.extend' → logprob: -12.625726699829102
    9. '.Append' → logprob: -12.750726699829102
    10. '.setdefault' → logprob: -12.875726699829102

Token 207: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003606104583013803
    2. '(s' → logprob: -8.000360488891602
    3. '(' → logprob: -10.625360488891602
    4. '([' → logprob: -14.375360488891602
    5. '(((' → logprob: -15.625360488891602
    6. '(
' → logprob: -18.1253604888916
    7. ' ((' → logprob: -18.1253604888916
    8. '```' → logprob: -18.2503604888916
    9. '(('' → logprob: -18.2503604888916
    10. '(("' → logprob: -18.3753604888916

Token 208: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0022872837726026773
    2. 's' → logprob: -6.1272873878479
    3. '-c' → logprob: -10.002286911010742
    4. ' c' → logprob: -10.377286911010742
    5. ')c' → logprob: -11.502286911010742
    6. 'i' → logprob: -11.752286911010742
    7. '-' → logprob: -13.502286911010742
    8. 'с' → logprob: -13.502286911010742
    9. ',c' → logprob: -14.127286911010742
    10. '   ' → logprob: -14.252286911010742

Token 209: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.06243077665567398
    2. ',' → logprob: -2.8124308586120605
    3. ',i' → logprob: -7.8124308586120605
    4. ' ,' → logprob: -9.812430381774902
    5. 's' → logprob: -14.187430381774902
    6. ',n' → logprob: -14.312430381774902
    7. ',int' → logprob: -14.562430381774902
    8. ',x' → logprob: -15.312430381774902
    9. ',
' → logprob: -15.437430381774902
    10. ',start' → logprob: -15.937430381774902

Token 210: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0808919370174408
    2. ',d' → logprob: -2.7058918476104736
    3. ',' → logprob: -4.955892086029053
    4. ' -' → logprob: -5.580892086029053
    5. ' ,' → logprob: -9.955891609191895
    6. '-,' → logprob: -10.955891609191895
    7. '<|end|>' → logprob: -12.455891609191895
    8. ',s' → logprob: -12.830891609191895
    9. ',
' → logprob: -13.080891609191895
    10. ',c' → logprob: -13.455891609191895

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -14.125001907348633
    4. ')' → logprob: -16.000001907348633
    5. '```' → logprob: -19.625001907348633
    6. '   ' → logprob: -19.875001907348633
    7. ',' → logprob: -19.875001907348633
    8. '-' → logprob: -19.875001907348633
    9. '<|end|>' → logprob: -19.875001907348633
    10. '１' → logprob: -20.125001907348633

Token 212: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.006731592118740082
    2. ',' → logprob: -5.0067315101623535
    3. ' ,' → logprob: -11.131731986999512
    4. 'd' → logprob: -14.631731986999512
    5. ',
' → logprob: -14.756731986999512
    6. ',y' → logprob: -15.631731986999512
    7. ',s' → logprob: -15.881731986999512
    8. ',n' → logprob: -16.006731033325195
    9. ',D' → logprob: -16.881731033325195
    10. ',end' → logprob: -17.381731033325195

Token 213: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5094070477061905e-05
    2. ' -' → logprob: -11.125015258789062
    3. ')-' → logprob: -15.875015258789062
    4. '-)' → logprob: -16.375015258789062
    5. ')' → logprob: -17.125015258789062
    6. '<|end|>' → logprob: -17.500015258789062
    7. '()-' → logprob: -18.250015258789062
    8. '-
' → logprob: -18.875015258789062
    9. '1' → logprob: -19.000015258789062
    10. '−' → logprob: -19.250015258789062

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.875001907348633
    3. '-' → logprob: -15.875001907348633
    4. ')' → logprob: -16.000001907348633
    5. '```' → logprob: -16.250001907348633
    6. '<|end|>' → logprob: -17.062501907348633
    7. '   ' → logprob: -17.875001907348633
    8. '１' → logprob: -17.937501907348633
    9. '<|end|>' → logprob: -18.062501907348633
    10. '))' → logprob: -18.250001907348633

Token 215: ',i' (ID: 25032)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0040818434208631516
    2. ')' → logprob: -5.504081726074219
    3. '))
' → logprob: -13.379081726074219
    4. ')))' → logprob: -14.004081726074219
    5. ' ))' → logprob: -14.379081726074219
    6. '),' → logprob: -15.129081726074219
    7. ',' → logprob: -16.50408172607422
    8. ')
' → logprob: -16.75408172607422
    9. '   ' → logprob: -17.75408172607422
    10. ')}' → logprob: -17.87908172607422

Token 216: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10021723806858063
    2. ')' → logprob: -2.350217342376709
    3. ')))' → logprob: -11.72521686553955
    4. '),' → logprob: -14.22521686553955
    5. '))
' → logprob: -14.97521686553955
    6. ')
' → logprob: -15.10021686553955
    7. ' ))' → logprob: -15.10021686553955
    8. ',' → logprob: -15.35021686553955
    9. ' )' → logprob: -15.85021686553955
    10. ')}' → logprob: -15.97521686553955

Token 217: 'edges' (ID: 39127)
  Prédit: 'edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0006109290407039225
    2. ' edges' → logprob: -7.750610828399658
    3. ')' → logprob: -10.250611305236816
    4. 'sorted' → logprob: -10.500611305236816
    5. 'answers' → logprob: -10.500611305236816
    6. '.edges' → logprob: -11.000611305236816
    7. 'ans' → logprob: -11.250611305236816
    8. '(edges' → logprob: -11.375611305236816
    9. '```' → logprob: -11.375611305236816
    10. '_edges' → logprob: -11.500611305236816

Token 218: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.2041069120168686
    2. '<|end|>' → logprob: -1.7041069269180298
    3. '<|end|>' → logprob: -6.57910680770874
    4. '[' → logprob: -7.82910680770874
    5. ')' → logprob: -8.579107284545898
    6. '_sorted' → logprob: -9.329107284545898
    7. '[::-' → logprob: -9.579107284545898
    8. '.Sort' → logprob: -9.704107284545898
    9. '[]' → logprob: -9.954107284545898
    10. 'sort' → logprob: -9.954107284545898

Token 219: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20539012551307678
    2. '(reverse' → logprob: -1.7053900957107544
    3. '(key' → logprob: -5.580389976501465
    4. 'reverse' → logprob: -8.580389976501465
    5. '()
' → logprob: -12.080389976501465
    6. '(' → logprob: -13.580389976501465
    7. '.reverse' → logprob: -13.705389976501465
    8. 'Reverse' → logprob: -14.830389976501465
    9. ' reverse' → logprob: -15.455389976501465
    10. '())' → logprob: -15.455389976501465

Token 220: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0015024791937321424
    2. '=' → logprob: -6.501502513885498
    3. 'lambda' → logprob: -16.501502990722656
    4. '=
' → logprob: -16.876502990722656
    5. '=len' → logprob: -17.001502990722656
    6. '=item' → logprob: -18.251502990722656
    7. '=_' → logprob: -18.501502990722656
    8. '=str' → logprob: -18.751502990722656
    9. '＝' → logprob: -18.876502990722656
    10. ')=' → logprob: -19.376502990722656

Token 221: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0033475093077868223
    2. ' x' → logprob: -5.753347396850586
    3. 'e' → logprob: -8.878347396850586
    4. 'edge' → logprob: -10.628347396850586
    5. 'lambda' → logprob: -12.753347396850586
    6. 'edges' → logprob: -13.753347396850586
    7. 'a' → logprob: -13.878347396850586
    8. ' e' → logprob: -14.628347396850586
    9. ' edge' → logprob: -14.753347396850586
    10. 'c' → logprob: -14.878347396850586

Token 222: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16155467927455902
    2. ':x' → logprob: -1.9115546941757202
    3. 'x' → logprob: -6.66155481338501
    4. ' :' → logprob: -10.161554336547852
    5. ' x' → logprob: -11.786554336547852
    6. '0' → logprob: -13.286554336547852
    7. '1' → logprob: -14.036554336547852
    8. '	x' → logprob: -14.911554336547852
    9. ' ' → logprob: -15.036554336547852
    10. '   ' → logprob: -15.161554336547852

Token 223: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000329386442899704
    2. '0' → logprob: -8.50032901763916
    3. ':' → logprob: -9.00032901763916
    4. '(' → logprob: -14.00032901763916
    5. ' ' → logprob: -14.75032901763916
    6. ' [' → logprob: -14.87532901763916
    7. ')' → logprob: -15.37532901763916
    8. '[:' → logprob: -15.75032901763916
    9. ')[' → logprob: -15.87532901763916
    10. '1' → logprob: -16.500329971313477

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. '2' → logprob: -15.375001907348633
    4. '
' → logprob: -15.750001907348633
    5. 'c' → logprob: -16.125001907348633
    6. ':' → logprob: -16.500001907348633
    7. '[' → logprob: -16.625001907348633
    8. '```' → logprob: -17.125001907348633
    9. '1' → logprob: -17.250001907348633
    10. '   ' → logprob: -17.812501907348633

Token 225: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.570319702499546e-05
    2. ' )' → logprob: -10.625025749206543
    3. '))' → logprob: -14.625025749206543
    4. ')
' → logprob: -14.875025749206543
    5. ')#' → logprob: -16.125024795532227
    6. ',)' → logprob: -16.375024795532227
    7. ',' → logprob: -16.750024795532227
    8. ')return' → logprob: -17.125024795532227
    9. ')`' → logprob: -17.375024795532227
    10. '),' → logprob: -17.375024795532227

Token 226: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.11953768879175186
    2. 'used' → logprob: -2.994537591934204
    3. 'ans' → logprob: -3.744537591934204
    4. 'answer' → logprob: -3.869537591934204
    5. 'res' → logprob: -4.619537830352783
    6. 'mst' → logprob: -5.369537830352783
    7. 'result' → logprob: -6.119537830352783
    8. 'answers' → logprob: -7.869537830352783
    9. 'selected' → logprob: -8.619537353515625
    10. ' uf' → logprob: -9.244537353515625

Token 227: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08927270025014877
    2. ' =' → logprob: -2.4642727375030518
    3. '.' → logprob: -9.339272499084473
    4. '<|end|>' → logprob: -9.339272499084473
    5. '=N' → logprob: -10.589272499084473
    6. '=None' → logprob: -10.964272499084473
    7. ')' → logprob: -11.214272499084473
    8. '=create' → logprob: -11.589272499084473
    9. '=u' → logprob: -11.714272499084473
    10. '=int' → logprob: -11.714272499084473

Token 228: 'Union' (ID: 39222)
  Prédit: 'Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -2.15310683415737e-05
    2. ' Union' → logprob: -10.750021934509277
    3. '(' → logprob: -18.25002098083496
    4. 'union' → logprob: -18.87502098083496
    5. '_union' → logprob: -19.12502098083496
    6. '   ' → logprob: -20.87502098083496
    7. '[' → logprob: -21.00002098083496
    8. 'Uni' → logprob: -21.50002098083496
    9. ''Union' → logprob: -21.62502098083496
    10. ' union' → logprob: -22.25002098083496

Token 229: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -6.153795766294934e-06
    2. 'F' → logprob: -13.000005722045898
    3. 'Fill' → logprob: -13.375005722045898
    4. 'Fold' → logprob: -13.500005722045898
    5. 'Union' → logprob: -15.875005722045898
    6. '(' → logprob: -16.0000057220459
    7. '(F' → logprob: -16.0000057220459
    8. 'find' → logprob: -16.7500057220459
    9. '[' → logprob: -17.1250057220459
    10. 'Fi' → logprob: -17.2500057220459

Token 230: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.008622966706752777
    2. 'N' → logprob: -4.758623123168945
    3. '(' → logprob: -12.008623123168945
    4. '(
' → logprob: -13.133623123168945
    5. '(M' → logprob: -15.883623123168945
    6. '
' → logprob: -16.133623123168945
    7. '[N' → logprob: -16.258623123168945
    8. '(n' → logprob: -17.133623123168945
    9. 'M' → logprob: -17.508623123168945
    10. '((' → logprob: -18.383623123168945

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. ')
' → logprob: -11.50001049041748
    3. ' )' → logprob: -14.37501049041748
    4. ')
' → logprob: -17.750011444091797
    5. ')

' → logprob: -18.000011444091797
    6. ')`' → logprob: -18.750011444091797
    7. '))' → logprob: -18.875011444091797
    8. '）' → logprob: -19.000011444091797
    9. ')set' → logprob: -19.750011444091797
    10. '),' → logprob: -20.125011444091797

Token 232: 'res' (ID: 430)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7438727617263794
    2. 'res' → logprob: -1.4938727617263794
    3. 'answer' → logprob: -2.11887264251709
    4. 'used' → logprob: -2.49387264251709
    5. 'mst' → logprob: -2.61887264251709
    6. 'result' → logprob: -4.24387264251709
    7. 'total' → logprob: -5.24387264251709
    8. 'selected' → logprob: -6.49387264251709
    9. 'answers' → logprob: -6.74387264251709
    10. 'rem' → logprob: -7.86887264251709

Token 233: '=[' (ID: 13370)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.8904056549072266
    2. '=' → logprob: -1.0154056549072266
    3. '=[' → logprob: -2.0154056549072266
    4. ' =' → logprob: -2.3904056549072266
    5. '={}' → logprob: -6.890405654907227
    6. '=[]
' → logprob: -7.015405654907227
    7. '=set' → logprob: -8.515405654907227
    8. '[]' → logprob: -9.765405654907227
    9. '[' → logprob: -9.890405654907227
    10. '=-' → logprob: -10.265405654907227

Token 234: 'False' (ID: 8168)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2080862671136856
    2. 'False' → logprob: -1.9580862522125244
    3. '0' → logprob: -3.3330862522125244
    4. '-F' → logprob: -4.8330864906311035
    5. '-f' → logprob: -6.0830864906311035
    6. 'None' → logprob: -7.4580864906311035
    7. 'True' → logprob: -9.833086013793945
    8. ' -' → logprob: -9.958086013793945
    9. '-M' → logprob: -10.458086013793945
    10. '-inf' → logprob: -10.583086013793945

Token 235: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20242099463939667
    2. ']*' → logprob: -1.702420949935913
    3. 'for' → logprob: -7.827421188354492
    4. ' for' → logprob: -7.827421188354492
    5. ']*(' → logprob: -8.577421188354492
    6. '```' → logprob: -12.077421188354492
    7. ')' → logprob: -12.077421188354492
    8. ')]' → logprob: -12.702421188354492
    9. ']+' → logprob: -12.702421188354492
    10. ' ]' → logprob: -13.827421188354492

Token 236: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.5048530030981055e-06
    2. ' M' → logprob: -13.750001907348633
    3. '(M' → logprob: -14.750001907348633
    4. '(' → logprob: -17.375001907348633
    5. '   ' → logprob: -18.625001907348633
    6. ' ' → logprob: -19.375001907348633
    7. 'N' → logprob: -19.625001907348633
    8. '	M' → logprob: -19.875001907348633
    9. 'Ｍ' → logprob: -19.875001907348633
    10. 'len' → logprob: -20.125001907348633

Token 237: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42978039383888245
    2. 'count' → logprob: -1.67978036403656
    3. 'total' → logprob: -2.9297804832458496
    4. 'answer' → logprob: -3.4297804832458496
    5. 'used' → logprob: -3.5547804832458496
    6. 'ans' → logprob: -3.9297804832458496
    7. 'cnt' → logprob: -4.67978048324585
    8. 'mst' → logprob: -4.92978048324585
    9. 'rem' → logprob: -5.30478048324585
    10. 'cost' → logprob: -6.55478048324585

Token 238: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.056480664759874344
    2. 'count' → logprob: -3.681480646133423
    3. 'total' → logprob: -4.056480884552002
    4. 'used' → logprob: -5.181480884552002
    5. 'cnt' → logprob: -5.556480884552002
    6. 'mst' → logprob: -6.806480884552002
    7. 'ans' → logprob: -7.931480884552002
    8. 'cost' → logprob: -8.306480407714844
    9. 'answer' → logprob: -8.431480407714844
    10. 'rem' → logprob: -8.556480407714844

Token 239: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016039175912737846
    2. ' =' → logprob: -4.1410393714904785
    3. ',' → logprob: -13.64103889465332
    4. 'n' → logprob: -14.51603889465332
    5. 'nd' → logprob: -14.51603889465332
    6. '0' → logprob: -14.89103889465332
    7. 's' → logprob: -15.01603889465332
    8. ' ' → logprob: -15.14103889465332
    9. 'x' → logprob: -15.39103889465332
    10. '＝' → logprob: -15.51603889465332

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -17.250001907348633
    4. '<|end|>' → logprob: -18.500001907348633
    5. '000' → logprob: -19.750001907348633
    6. '[' → logprob: -19.875001907348633
    7. '=' → logprob: -20.625001907348633
    8. '```' → logprob: -20.750001907348633
    9. '۰' → logprob: -21.000001907348633
    10. '   ' → logprob: -21.125001907348633

Token 241: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00018065694894175977
    2. ' while' → logprob: -9.0001802444458
    3. 'i' → logprob: -11.0001802444458
    4. '<|end|>' → logprob: -11.5001802444458
    5. '
' → logprob: -11.7501802444458
    6. '	while' → logprob: -12.1251802444458
    7. '```' → logprob: -12.1251802444458
    8. 'M' → logprob: -12.6251802444458
    9. 'While' → logprob: -12.8751802444458
    10. 'edges' → logprob: -13.8751802444458

Token 242: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0008023609989322722
    2. ' while' → logprob: -7.375802516937256
    3. '<|end|>' → logprob: -9.625802040100098
    4. '```' → logprob: -10.375802040100098
    5. 'While' → logprob: -11.000802040100098
    6. 'i' → logprob: -11.000802040100098
    7. 'M' → logprob: -11.000802040100098
    8. '	while' → logprob: -11.375802040100098
    9. '
' → logprob: -11.750802040100098
    10. 'from' → logprob: -13.375802040100098

Token 243: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16022808849811554
    2. ' i' → logprob: -1.9102281332015991
    3. '	i' → logprob: -13.66022777557373
    4. ' ' → logprob: -14.03522777557373
    5. 'M' → logprob: -14.03522777557373
    6. ' M' → logprob: -14.41022777557373
    7. '   ' → logprob: -14.91022777557373
    8. ' True' → logprob: -15.91022777557373
    9. 'True' → logprob: -16.785228729248047
    10. '<i' → logprob: -17.160228729248047

Token 244: '<M' (ID: 59431)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.871335506439209
    2. ' <' → logprob: -1.371335506439209
    3. '<M' → logprob: -1.371335506439209
    4. '<len' → logprob: -2.621335506439209
    5. '<m' → logprob: -7.246335506439209
    6. ' ' → logprob: -8.246335983276367
    7. '<size' → logprob: -9.746335983276367
    8. 'M' → logprob: -9.871335983276367
    9. '<N' → logprob: -10.121335983276367
    10. '<
' → logprob: -10.371335983276367

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017437237547710538
    2. ':
' → logprob: -6.376743793487549
    3. '=' → logprob: -10.62674331665039
    4. ',' → logprob: -12.00174331665039
    5. ':=' → logprob: -13.00174331665039
    6. 'and' → logprob: -13.75174331665039
    7. ' :' → logprob: -13.87674331665039
    8. ':i' → logprob: -14.12674331665039
    9. ' and' → logprob: -14.25174331665039
    10. '):' → logprob: -14.37674331665039

Token 246: '   ' (ID: 271)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013664272846654058
    2. '   ' → logprob: -6.62636661529541
    3. ' j' → logprob: -10.87636661529541
    4. '	j' → logprob: -11.62636661529541
    5. ',j' → logprob: -12.25136661529541
    6. '```' → logprob: -13.62636661529541
    7. '=j' → logprob: -14.00136661529541
    8. 'k' → logprob: -14.12636661529541
    9. '    
' → logprob: -14.25136661529541
    10. ')' → logprob: -14.25136661529541

Token 247: ' w' (ID: 286)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0040952586568892
    2. '   ' → logprob: -5.504095077514648
    3. '    
' → logprob: -11.754095077514648
    4. ' j' → logprob: -12.129095077514648
    5. '	j' → logprob: -13.004095077514648
    6. '  ' → logprob: -15.129095077514648
    7. '    

' → logprob: -15.254095077514648
    8. 'e' → logprob: -16.25409507751465
    9. '```' → logprob: -16.37909507751465
    10. 'group' → logprob: -16.50409507751465

Token 248: '=' (ID: 28)
  Prédit: '=j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=j' → logprob: -0.48412665724754333
    2. '=w' → logprob: -1.4841266870498657
    3. '=' → logprob: -1.9841266870498657
    4. 'j' → logprob: -4.609126567840576
    5. ' =' → logprob: -4.859126567840576
    6. '=i' → logprob: -7.609126567840576
    7. '=end' → logprob: -7.859126567840576
    8. '=c' → logprob: -8.109127044677734
    9. '=edge' → logprob: -8.234127044677734
    10. '=W' → logprob: -9.484127044677734

Token 249: 'edges' (ID: 39127)
  Prédit: 'edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -4.842555426876061e-06
    2. ' edges' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.0000057220459
    4. '.edges' → logprob: -17.8750057220459
    5. '(edges' → logprob: -18.2500057220459
    6. '_edges' → logprob: -20.3750057220459
    7. '[' → logprob: -21.7500057220459
    8. '`' → logprob: -21.8750057220459
    9. '```' → logprob: -22.0000057220459
    10. 'edge' → logprob: -22.1250057220459

Token 250: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[w' → logprob: -16.25
    3. '[' → logprob: -16.375
    4. '```' → logprob: -16.875
    5. '[s' → logprob: -17.0
    6. '[
' → logprob: -17.125
    7. 'i' → logprob: -17.625
    8. '[j' → logprob: -17.75
    9. '\[' → logprob: -18.125
    10. '[I' → logprob: -19.125

Token 251: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0017130204942077398
    2. '[' → logprob: -6.376712799072266
    3. '0' → logprob: -12.376712799072266
    4. ']' → logprob: -12.626712799072266
    5. ' ][' → logprob: -13.251712799072266
    6. '   ' → logprob: -14.376712799072266
    7. ')[' → logprob: -15.001712799072266
    8. '
' → logprob: -15.876712799072266
    9. ']
' → logprob: -16.501712799072266
    10. '=' → logprob: -16.501712799072266

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '2' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '
' → logprob: -17.5625
    5. '   ' → logprob: -18.0625
    6. '```' → logprob: -18.125
    7. '۰' → logprob: -18.375
    8. '4' → logprob: -18.375
    9. '1' → logprob: -18.5
    10. '０' → logprob: -18.75

Token 253: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12533389031887054
    2. '   ' → logprob: -2.500333786010742
    3. ')
' → logprob: -4.000333786010742
    4. 'j' → logprob: -4.250333786010742
    5. ']' → logprob: -6.500333786010742
    6. '
' → logprob: -7.125333786010742
    7. ',j' → logprob: -8.125333786010742
    8. ' j' → logprob: -9.125333786010742
    9. ';j' → logprob: -9.125333786010742
    10. '	j' → logprob: -9.250333786010742

Token 254: '   ' (ID: 271)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3881269693374634
    2. '   ' → logprob: -1.1381269693374634
    3. 'tmp' → logprob: -7.763126850128174
    4. 'same' → logprob: -8.013127326965332
    5. '    
' → logprob: -8.388127326965332
    6. ' j' → logprob: -9.513127326965332
    7. 'idx' → logprob: -10.138127326965332
    8. 'group' → logprob: -10.263127326965332
    9. ',j' → logprob: -10.638127326965332
    10. 'js' → logprob: -10.763127326965332

Token 255: ' group' (ID: 3566)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004193794447928667
    2. '   ' → logprob: -5.5041937828063965
    3. '    
' → logprob: -9.504194259643555
    4. 'tmp' → logprob: -10.754194259643555
    5. 'same' → logprob: -11.754194259643555
    6. 'group' (adapté à ' group') → logprob: -12.254194259643555
    7. ' j' → logprob: -13.254194259643555
    8. '	j' → logprob: -14.004194259643555
    9. 'edges' → logprob: -14.504194259643555
    10. 'temp' → logprob: -14.629194259643555

Token 256: '=[]
' (ID: 63466)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.3128260374069214
    2. '=' → logprob: -1.4378260374069214
    3. '=j' → logprob: -4.437826156616211
    4. '=[]
' → logprob: -4.562826156616211
    5. ' =' → logprob: -5.062826156616211
    6. '_indices' → logprob: -7.312826156616211
    7. '=[' → logprob: -7.437826156616211
    8. 'j' → logprob: -8.312826156616211
    9. '_edges' → logprob: -8.312826156616211
    10. '=[]
' → logprob: -8.937826156616211

Token 257: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5006314516067505
    2. 'j' → logprob: -1.2506314516067505
    3. '   ' → logprob: -2.250631332397461
    4. 'i' → logprob: -6.750631332397461
    5. ' while' → logprob: -7.250631332397461
    6. '
' → logprob: -8.625631332397461
    7. '```' → logprob: -9.500631332397461
    8. '    
' → logprob: -10.875631332397461
    9. '	while' → logprob: -11.125631332397461
    10. ' j' → logprob: -11.625631332397461

Token 258: ' while' (ID: 2049)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01664220169186592
    2. 'while' (adapté à ' while') → logprob: -4.516642093658447
    3. 'i' → logprob: -5.766642093658447
    4. '   ' → logprob: -6.016642093658447
    5. ' while' → logprob: -11.766642570495605
    6. ' j' → logprob: -13.516642570495605
    7. '```' → logprob: -14.391642570495605
    8. '    
' → logprob: -14.766642570495605
    9. '
' → logprob: -15.516642570495605
    10. '	while' → logprob: -16.01664161682129

Token 259: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020699729793705046
    2. ' i' → logprob: -8.50020694732666
    3. '   ' → logprob: -12.62520694732666
    4. '(i' → logprob: -16.000207901000977
    5. ' ' → logprob: -17.500207901000977
    6. '	i' → logprob: -18.250207901000977
    7. '  ' → logprob: -19.500207901000977
    8. '{i' → logprob: -21.125207901000977
    9. ' (' → logprob: -21.375207901000977
    10. '_i' → logprob: -21.500207901000977

Token 260: '<M' (ID: 59431)
  Prédit: '<M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<M' → logprob: -0.05518341809511185
    2. '<' → logprob: -3.4301834106445312
    3. ' <' → logprob: -4.180183410644531
    4. '<len' → logprob: -5.180183410644531
    5. 'M' → logprob: -8.180183410644531
    6. '<m' → logprob: -9.680183410644531
    7. '[M' → logprob: -11.930183410644531
    8. '<N' → logprob: -11.930183410644531
    9. '<size' → logprob: -12.180183410644531
    10. '<w' → logprob: -12.180183410644531

Token 261: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.029751067981123924
    2. ' and' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.40475082397461
    4. '   ' → logprob: -15.90475082397461
    5. '>' → logprob: -16.27975082397461
    6. '	and' → logprob: -16.90475082397461
    7. '```' → logprob: -17.02975082397461
    8. ')' → logprob: -17.40475082397461
    9. '&&' → logprob: -17.52975082397461
    10. '
' → logprob: -17.52975082397461

Token 262: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0002613358374219388
    2. ' edges' → logprob: -8.250261306762695
    3. '(edges' → logprob: -17.375261306762695
    4. '   ' → logprob: -17.625261306762695
    5. '.edges' → logprob: -19.375261306762695
    6. 'edge' → logprob: -21.375261306762695
    7. '_edges' → logprob: -21.625261306762695
    8. 'Edges' → logprob: -21.875261306762695
    9. 'errors' → logprob: -23.000261306762695
    10. 'w' → logprob: -23.250261306762695

Token 263: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.5
    3. '```' → logprob: -16.625
    4. '[
' → logprob: -17.875
    5. 'i' → logprob: -18.5
    6. ' [' → logprob: -18.875
    7. ')[' → logprob: -19.25
    8. '[I' → logprob: -20.0
    9. '][' → logprob: -20.375
    10. '[j' → logprob: -21.125

Token 264: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5769852995872498
    2. '[' → logprob: -0.8269852995872498
    3. ')[' → logprob: -6.9519853591918945
    4. '[i' → logprob: -11.201985359191895
    5. '>[' → logprob: -11.201985359191895
    6. 'and' → logprob: -11.451985359191895
    7. ']' → logprob: -11.951985359191895
    8. '0' → logprob: -11.951985359191895
    9. '```' → logprob: -12.076985359191895
    10. ' [' → logprob: -12.701985359191895

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.250006675720215
    3. '[' → logprob: -13.875006675720215
    4. '][' → logprob: -14.625006675720215
    5. '
' → logprob: -14.750006675720215
    6. '   ' → logprob: -16.50000762939453
    7. 'i' → logprob: -18.25000762939453
    8. '```' → logprob: -18.37500762939453
    9. ')' → logprob: -19.50000762939453
    10. ')[' → logprob: -19.50000762939453

Token 266: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004759053234010935
    2. ']==' → logprob: -5.379758834838867
    3. ' ==' → logprob: -9.379758834838867
    4. ')==' → logprob: -10.629758834838867
    5. '==
' → logprob: -11.129758834838867
    6. '=' → logprob: -12.254758834838867
    7. '===' → logprob: -12.879758834838867
    8. '```' → logprob: -13.004758834838867
    9. 'w' → logprob: -13.254758834838867
    10. '']==' → logprob: -13.629758834838867

Token 267: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.339278580620885e-06
    2. ' w' → logprob: -13.000001907348633
    3. '
' → logprob: -20.625001907348633
    4. '	w' → logprob: -20.625001907348633
    5. '   ' → logprob: -22.000001907348633
    6. '```' → logprob: -22.500001907348633
    7. '=w' → logprob: -22.500001907348633
    8. '<w' → logprob: -23.625001907348633
    9. ''w' → logprob: -23.875001907348633
    10. '_w' → logprob: -24.000001907348633

Token 268: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20212699472904205
    2. ':' → logprob: -1.7021269798278809
    3. '):
' → logprob: -7.577126979827881
    4. '   ' → logprob: -8.702127456665039
    5. '):' → logprob: -11.202127456665039
    6. ')' → logprob: -12.202127456665039
    7. ' and' → logprob: -12.577127456665039
    8. '[group' → logprob: -12.952127456665039
    9. 'group' → logprob: -13.077127456665039
    10. '"group' → logprob: -13.202127456665039

Token 269: '       ' (ID: 309)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.8433946371078491
    2. '       ' → logprob: -1.3433946371078491
    3. ' group' → logprob: -1.3433946371078491
    4. '   ' → logprob: -3.0933947563171387
    5. '	group' → logprob: -6.093394756317139
    6. '
' → logprob: -8.96839427947998
    7. '"group' → logprob: -10.71839427947998
    8. '(group' → logprob: -11.09339427947998
    9. '[group' → logprob: -11.09339427947998
    10. '.group' → logprob: -11.21839427947998

Token 270: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' (adapté à ' group') → logprob: -0.018053477630019188
    2. ' group' → logprob: -4.2680535316467285
    3. '       ' → logprob: -6.3930535316467285
    4. '   ' → logprob: -6.5180535316467285
    5. 'edges' → logprob: -8.26805305480957
    6. 's' → logprob: -8.64305305480957
    7. '_,' → logprob: -9.14305305480957
    8. 'c' → logprob: -9.26805305480957
    9. 'd' → logprob: -9.89305305480957
    10. ' edges' → logprob: -10.64305305480957

Token 271: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00031270162435248494
    2. '.' → logprob: -8.125312805175781
    3. ').' → logprob: -11.250312805175781
    4. '].' → logprob: -13.500312805175781
    5. 'append' → logprob: -14.500312805175781
    6. '.app' → logprob: -14.625312805175781
    7. '.group' → logprob: -14.625312805175781
    8. '.push' → logprob: -15.750312805175781
    9. '.ap' → logprob: -15.875312805175781
    10. '.add' → logprob: -15.875312805175781

Token 272: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.00026169343618676066
    2. 'edges' → logprob: -8.250261306762695
    3. ' edges' → logprob: -15.000261306762695
    4. '(' → logprob: -16.750261306762695
    5. '(i' → logprob: -17.250261306762695
    6. '((' → logprob: -18.625261306762695
    7. '(edge' → logprob: -18.625261306762695
    8. '.edges' → logprob: -19.500261306762695
    9. 'Edges' → logprob: -19.625261306762695
    10. ' (' → logprob: -19.875261306762695

Token 273: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '][' → logprob: -14.375001907348633
    3. ')[' → logprob: -14.875001907348633
    4. '```' → logprob: -15.500001907348633
    5. ' [' → logprob: -16.000001907348633
    6. '[' → logprob: -16.000001907348633
    7. '
' → logprob: -16.250001907348633
    8. 'i' → logprob: -16.625001907348633
    9. '[
' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.250001907348633

Token 274: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.014599917456507683
    2. '][' → logprob: -4.264599800109863
    3. ']' → logprob: -8.639599800109863
    4. '])
' → logprob: -8.639599800109863
    5. '])[' → logprob: -10.014599800109863
    6. ')' → logprob: -11.389599800109863
    7. '])]' → logprob: -12.264599800109863
    8. ' ])' → logprob: -12.889599800109863
    9. '[' → logprob: -13.014599800109863
    10. ']])' → logprob: -13.014599800109863

Token 275: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6394563913345337
    2. '   ' → logprob: -1.2644563913345337
    3. ' i' → logprob: -2.389456272125244
    4. '
' → logprob: -2.639456272125244
    5. '	i' → logprob: -5.014456272125244
    6. ',i' → logprob: -5.139456272125244
    7. '       ' → logprob: -5.514456272125244
    8. '[i' → logprob: -5.764456272125244
    9. ')' → logprob: -6.264456272125244
    10. ')i' → logprob: -6.389456272125244

Token 276: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -13.875000953674316
    3. ' i' → logprob: -15.625000953674316
    4. '
' → logprob: -16.875001907348633
    5. '       ' → logprob: -17.625001907348633
    6. '	i' → logprob: -20.000001907348633
    7. '_i' → logprob: -22.000001907348633
    8. ',i' → logprob: -22.500001907348633
    9. '```' → logprob: -22.625001907348633
    10. '    
' → logprob: -22.750001907348633

Token 277: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0019807375501841307
    2. '+' → logprob: -6.251980781555176
    3. ' +=' → logprob: -9.876980781555176
    4. ']+=' → logprob: -15.001980781555176
    5. '1' → logprob: -15.626980781555176
    6. '++' → logprob: -16.62697982788086
    7. '+="' → logprob: -17.00197982788086
    8. '+i' → logprob: -17.12697982788086
    9. '+='' → logprob: -17.12697982788086
    10. '```' → logprob: -17.37697982788086

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -19.125
    4. '１' → logprob: -20.625
    5. '
' → logprob: -21.4375
    6. '۱' → logprob: -21.625
    7. '   ' → logprob: -21.6875
    8. '  ' → logprob: -22.9375
    9. '१' → logprob: -22.9375
    10. '`' → logprob: -22.9375

Token 279: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9633443355560303
    2. 'for' → logprob: -1.4633443355560303
    3. '#' → logprob: -2.2133443355560303
    4. '
' → logprob: -2.2133443355560303
    5. '    
' → logprob: -3.4633443355560303
    6. 'temp' → logprob: -3.4633443355560303
    7. 'u' → logprob: -3.5883443355560303
    8. 'tmp' → logprob: -3.9633443355560303
    9. 'used' → logprob: -4.463344573974609
    10. ' for' → logprob: -4.463344573974609

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41051116585731506
    2. 'for' → logprob: -1.6605111360549927
    3. '#' → logprob: -2.9105112552642822
    4. ' for' → logprob: -3.7855112552642822
    5. 'temp' → logprob: -4.160511016845703
    6. '    
' → logprob: -4.660511016845703
    7. 'tmp' → logprob: -4.785511016845703
    8. 'used' → logprob: -5.035511016845703
    9. 'uf' → logprob: -5.535511016845703
    10. '
' → logprob: -5.535511016845703

Token 281: ' comp' (ID: 1050)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8937376737594604
    2. 'temp' → logprob: -1.3937376737594604
    3. 'tmp' → logprob: -1.7687376737594604
    4. 'used' → logprob: -3.01873779296875
    5. '#' → logprob: -3.76873779296875
    6. 'to' → logprob: -4.01873779296875
    7. 'from' → logprob: -4.51873779296875
    8. 'connect' → logprob: -5.01873779296875
    9. 'need' → logprob: -5.26873779296875
    10. 'nodes' → logprob: -5.26873779296875

Token 282: 'id' (ID: 315)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6977095007896423
    2. '_nodes' → logprob: -1.822709560394287
    3. 's' → logprob: -2.072709560394287
    4. '_map' → logprob: -2.447709560394287
    5. '_pairs' → logprob: -3.572709560394287
    6. '_edges' → logprob: -3.697709560394287
    7. '_ro' → logprob: -4.447709560394287
    8. 'on' → logprob: -4.822709560394287
    9. ' =' → logprob: -4.947709560394287
    10. '_dict' → logprob: -4.947709560394287

Token 283: '={}
' (ID: 146130)
  Prédit: '={}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={}' → logprob: -0.2882765829563141
    2. '=' → logprob: -1.5382765531539917
    3. '=[]' → logprob: -4.038276672363281
    4. '=[' → logprob: -4.788276672363281
    5. '={}
' → logprob: -5.038276672363281
    6. '={' → logprob: -6.788276672363281
    7. ' =' → logprob: -7.413276672363281
    8. 's' → logprob: -8.163276672363281
    9. '_map' → logprob: -8.163276672363281
    10. '=[]
' → logprob: -8.663276672363281

Token 284: '   ' (ID: 271)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.2760085463523865
    2. '   ' → logprob: -2.2760086059570312
    3. 'for' → logprob: -2.7760086059570312
    4. 'cid' → logprob: -3.5260086059570312
    5. 'counter' → logprob: -4.651008605957031
    6. 'id' → logprob: -5.026008605957031
    7. 'idx' → logprob: -5.026008605957031
    8. 'cnt' → logprob: -5.276008605957031
    9. 'count' → logprob: -5.776008605957031
    10. 'cur' → logprob: -6.026008605957031

Token 285: ' comp' (ID: 1050)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9532848000526428
    2. 'comp' (adapté à ' comp') → logprob: -1.078284740447998
    3. 'idx' → logprob: -2.203284740447998
    4. 'id' → logprob: -2.578284740447998
    5. 'cid' → logprob: -3.578284740447998
    6. 'vid' → logprob: -3.828284740447998
    7. 'cnt' → logprob: -4.078284740447998
    8. 'counter' → logprob: -5.078284740447998
    9. 'node' → logprob: -6.078284740447998
    10. 'gid' → logprob: -6.078284740447998

Token 286: 'count' (ID: 5420)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.4200320839881897
    2. '_id' → logprob: -1.545032024383545
    3. 'cnt' → logprob: -3.420032024383545
    4. '=' → logprob: -3.795032024383545
    5. 'count' → logprob: -4.670032024383545
    6. '_idx' → logprob: -4.670032024383545
    7. 'idx' → logprob: -4.795032024383545
    8. '_nodes' → logprob: -5.045032024383545
    9. '_cnt' → logprob: -5.170032024383545
    10. '_count' → logprob: -5.420032024383545

Token 287: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00031651611789129674
    2. ' =' → logprob: -8.375316619873047
    3. '={}' → logprob: -9.375316619873047
    4. '=len' → logprob: -14.250316619873047
    5. '=[]' → logprob: -15.375316619873047
    6. '=int' → logprob: -15.750316619873047
    7. '={' → logprob: -16.750316619873047
    8. '={}
' → logprob: -17.500316619873047
    9. '{}' → logprob: -18.500316619873047
    10. '0' → logprob: -18.500316619873047

Token 288: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8325677703833207e-05
    2. '{}' → logprob: -10.625028610229492
    3. ' ' → logprob: -12.750028610229492
    4. '[' → logprob: -15.125028610229492
    5. 'N' → logprob: -15.250028610229492
    6. '[]' → logprob: -15.375028610229492
    7. '{}
' → logprob: -15.375028610229492
    8. '1' → logprob: -16.625028610229492
    9. 'len' → logprob: -16.750028610229492
    10. '{' → logprob: -17.500028610229492

Token 289: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19965219497680664
    2. ' for' → logprob: -2.0746521949768066
    3. 'for' → logprob: -2.9496521949768066
    4. '    
' → logprob: -7.699652194976807
    5. ' temp' → logprob: -7.824652194976807
    6. ' nodes' → logprob: -7.824652194976807
    7. 'nodes' → logprob: -8.074651718139648
    8. 'temp' → logprob: -8.574651718139648
    9. 'tmp' → logprob: -9.449651718139648
    10. ' edges' → logprob: -9.449651718139648

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6983439326286316
    2. ' for' → logprob: -1.3233439922332764
    3. 'for' → logprob: -1.4483439922332764
    4. '    
' → logprob: -7.323343753814697
    5. 'nodes' → logprob: -8.948344230651855
    6. ' nodes' → logprob: -9.323344230651855
    7. 'connections' → logprob: -10.198344230651855
    8. ')' → logprob: -10.198344230651855
    9. ' edges' → logprob: -10.323344230651855
    10. '  
' → logprob: -10.323344230651855

Token 291: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006678186822682619
    2. '   ' → logprob: -5.631678104400635
    3. ' for' → logprob: -5.881678104400635
    4. 'nodes' → logprob: -8.756678581237793
    5. 'temp' → logprob: -10.131678581237793
    6. 'tmp' → logprob: -10.881678581237793
    7. 'comp' → logprob: -11.631678581237793
    8. '#' → logprob: -12.131678581237793
    9. 'node' → logprob: -12.256678581237793
    10. 'u' → logprob: -12.381678581237793

Token 292: ' e' (ID: 319)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01638377271592617
    2. ' c' → logprob: -5.891383647918701
    3. '(c' → logprob: -5.891383647918701
    4. '_,' → logprob: -5.891383647918701
    5. 'e' → logprob: -6.141383647918701
    6. 'cost' → logprob: -6.391383647918701
    7. '(_,' → logprob: -6.891383647918701
    8. 'w' → logprob: -6.891383647918701
    9. 'u' → logprob: -7.141383647918701
    10. 'edge' → logprob: -7.891383647918701

Token 293: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31909579038619995
    2. 'in' → logprob: -1.3190958499908447
    3. 'd' → logprob: -5.819095611572266
    4. '(c' → logprob: -7.194095611572266
    5. 'e' → logprob: -7.319095611572266
    6. 'c' → logprob: -7.944095611572266
    7. ',c' → logprob: -8.444095611572266
    8. 'x' → logprob: -9.194095611572266
    9. 'n' → logprob: -9.444095611572266
    10. '   ' → logprob: -9.569095611572266

Token 294: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.00012654215970542282
    2. ' group' → logprob: -9.000126838684082
    3. '[group' → logprob: -13.625126838684082
    4. '   ' → logprob: -14.125126838684082
    5. '(group' → logprob: -15.000126838684082
    6. '"group' → logprob: -15.500126838684082
    7. 'edges' → logprob: -15.625126838684082
    8. 'roup' → logprob: -16.250125885009766
    9. ' ' → logprob: -16.500125885009766
    10. '	group' → logprob: -16.625125885009766

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32130080461502075
    2. ':
' → logprob: -1.321300745010376
    3. '   ' → logprob: -5.446300983428955
    4. ',' → logprob: -6.821300983428955
    5. '[' → logprob: -6.946300983428955
    6. 'in' → logprob: -7.321300983428955
    7. 's' → logprob: -7.946300983428955
    8. '       ' → logprob: -8.821300506591797
    9. ':s' → logprob: -9.196300506591797
    10. ',s' → logprob: -9.571300506591797

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12573733925819397
    2. ' if' → logprob: -3.125737428665161
    3. 's' → logprob: -4.125737190246582
    4. ' s' → logprob: -4.250737190246582
    5. '   ' → logprob: -4.375737190246582
    6. 'if' → logprob: -4.750737190246582
    7. 'u' → logprob: -5.000737190246582
    8. ' u' → logprob: -5.375737190246582
    9. ' x' → logprob: -5.750737190246582
    10. ' for' → logprob: -6.125737190246582

Token 297: ' a' (ID: 261)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.43738073110580444
    2. 'c' → logprob: -2.187380790710449
    3. 'if' → logprob: -2.312380790710449
    4. '   ' → logprob: -2.562380790710449
    5. 's' → logprob: -2.937380790710449
    6. 'u' → logprob: -5.562380790710449
    7. ' if' → logprob: -5.812380790710449
    8. 'comp' → logprob: -5.937380790710449
    9. ' _,' → logprob: -6.562380790710449
    10. 'for' → logprob: -7.437380790710449

Token 298: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06969141215085983
    2. '=e' → logprob: -3.0696914196014404
    3. ',e' → logprob: -4.569691181182861
    4. '=a' → logprob: -5.069691181182861
    5. ' =' → logprob: -7.069691181182861
    6. ',b' → logprob: -7.069691181182861
    7. ',' → logprob: -7.194691181182861
    8. ',a' → logprob: -7.319691181182861
    9. ',c' → logprob: -8.44469165802002
    10. '=b' → logprob: -8.69469165802002

Token 299: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.043134041130542755
    2. 'e' → logprob: -3.1681339740753174
    3. ' uf' → logprob: -9.668133735656738
    4. 'ufs' → logprob: -10.668133735656738
    5. 'ef' → logprob: -11.418133735656738
    6. ' e' → logprob: -11.418133735656738
    7. 'u' → logprob: -11.793133735656738
    8. 'uff' → logprob: -12.543133735656738
    9. 'ue' → logprob: -13.168133735656738
    10. 'ufi' → logprob: -13.293133735656738

Token 300: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.03737761825323105
    2. '.un' → logprob: -3.5373775959014893
    3. 'find' → logprob: -5.287377834320068
    4. '.same' → logprob: -6.162377834320068
    5. 'same' → logprob: -8.91237735748291
    6. 'un' → logprob: -8.91237735748291
    7. ').' → logprob: -10.28737735748291
    8. '.' → logprob: -10.28737735748291
    9. '.parent' → logprob: -10.28737735748291
    10. '.union' → logprob: -10.53737735748291

Token 301: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.7835754988482222e-05
    2. 'e' → logprob: -11.000018119812012
    3. '[e' → logprob: -14.750018119812012
    4. ' (' → logprob: -15.625018119812012
    5. '(' → logprob: -15.750018119812012
    6. ',e' → logprob: -15.750018119812012
    7. ')e' → logprob: -16.250017166137695
    8. '(
' → logprob: -16.750017166137695
    9. '((' → logprob: -17.125017166137695
    10. ' e' → logprob: -17.375017166137695

Token 302: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13489192724227905
    2. '1' → logprob: -2.134891986846924
    3. 'e' → logprob: -5.759891986846924
    4. 'a' → logprob: -5.759891986846924
    5. '2' → logprob: -6.509891986846924
    6. '   ' → logprob: -10.134891510009766
    7. '```' → logprob: -10.259891510009766
    8. '(' → logprob: -11.634891510009766
    9. ')' → logprob: -11.759891510009766
    10. ')[' → logprob: -11.884891510009766

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001576506474521011
    2. 's' → logprob: -9.375157356262207
    3. '2' → logprob: -9.750157356262207
    4. '```' → logprob: -12.375157356262207
    5. '[' → logprob: -12.500157356262207
    6. '
' → logprob: -12.625157356262207
    7. '``' → logprob: -14.750157356262207
    8. '   ' → logprob: -14.875157356262207
    9. 'a' → logprob: -15.312657356262207
    10. '

' → logprob: -15.625157356262207

Token 304: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3274516761302948
    2. ')' → logprob: -1.5774517059326172
    3. '])
' → logprob: -3.202451705932617
    4. ')
' → logprob: -3.452451705932617
    5. ')]' → logprob: -7.952451705932617
    6. ')])' → logprob: -10.827451705932617
    7. ']' → logprob: -11.202451705932617
    8. '])

' → logprob: -11.577451705932617
    9. ')

' → logprob: -12.327451705932617
    10. ')]
' → logprob: -13.077451705932617

Token 305: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07974232733249664
    2. 'b' → logprob: -3.079742431640625
    3. ' if' → logprob: -4.079742431640625
    4. '
' → logprob: -5.579742431640625
    5. 'if' → logprob: -5.704742431640625
    6. '    
' → logprob: -6.329742431640625
    7. ')' → logprob: -6.704742431640625
    8. '```' → logprob: -7.204742431640625
    9. ',' → logprob: -7.704742431640625
    10. ' b' → logprob: -7.829742431640625

Token 306: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0007645991281606257
    2. ' b' → logprob: -7.2507643699646
    3. '       ' → logprob: -10.375764846801758
    4. '   ' → logprob: -11.125764846801758
    5. '        
' → logprob: -12.375764846801758
    6. '    
' → logprob: -13.250764846801758
    7. '
' → logprob: -14.375764846801758
    8. '=' → logprob: -14.375764846801758
    9. 'if' → logprob: -14.625764846801758
    10. ')b' → logprob: -15.625764846801758

Token 307: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00011343709047650918
    2. '=e' → logprob: -9.125113487243652
    3. ' =' → logprob: -13.125113487243652
    4. '=f' → logprob: -13.750113487243652
    5. '=
' → logprob: -14.375113487243652
    6. '=b' → logprob: -14.625113487243652
    7. '=edge' → logprob: -16.125112533569336
    8. '=int' → logprob: -16.625112533569336
    9. '=a' → logprob: -16.625112533569336
    10. '=}' → logprob: -17.625112533569336

Token 308: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -1.2664456789934775e-06
    2. ' uf' → logprob: -13.625000953674316
    3. 'ufs' → logprob: -17.750001907348633
    4. 'ug' → logprob: -18.750001907348633
    5. 'uff' → logprob: -19.500001907348633
    6. 'ufi' → logprob: -19.625001907348633
    7. '.uf' → logprob: -20.000001907348633
    8. '
' → logprob: -20.375001907348633
    9. 'u' → logprob: -20.875001907348633
    10. 'ur' → logprob: -21.500001907348633

Token 309: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0019325626781210303
    2. 'find' → logprob: -6.876932621002197
    3. '[e' → logprob: -7.501932621002197
    4. '(e' → logprob: -8.126932144165039
    5. '.' → logprob: -10.001932144165039
    6. '.findall' → logprob: -12.876932144165039
    7. '(find' → logprob: -13.751932144165039
    8. ' find' → logprob: -14.251932144165039
    9. '```' → logprob: -14.251932144165039
    10. '.get' → logprob: -15.501932144165039

Token 310: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.500000953674316
    3. 'e' → logprob: -15.750000953674316
    4. '[e' → logprob: -16.125001907348633
    5. ' (' → logprob: -16.375001907348633
    6. '(a' → logprob: -17.875001907348633
    7. '((' → logprob: -18.000001907348633
    8. ')e' → logprob: -18.000001907348633
    9. '(b' → logprob: -18.125001907348633
    10. '(
' → logprob: -18.250001907348633

Token 311: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018805658910423517
    2. '(' → logprob: -6.376880645751953
    3. '2' → logprob: -9.126880645751953
    4. '(e' → logprob: -10.501880645751953
    5. '[e' → logprob: -10.751880645751953
    6. '][' → logprob: -12.376880645751953
    7. 'e' → logprob: -12.626880645751953
    8. '1' → logprob: -12.626880645751953
    9. '[
' → logprob: -12.626880645751953
    10. ')' → logprob: -13.876880645751953

Token 312: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00036406738217920065
    2. '1' → logprob: -8.250364303588867
    3. 'e' → logprob: -10.125364303588867
    4. ' ' → logprob: -10.625364303588867
    5. '4' → logprob: -11.375364303588867
    6. '3' → logprob: -11.750364303588867
    7. '[' → logprob: -12.250364303588867
    8. '0' → logprob: -12.375364303588867
    9. '   ' → logprob: -12.375364303588867
    10. '```' → logprob: -13.125364303588867

Token 313: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760167241096497
    2. ')
' → logprob: -0.8260167241096497
    3. '])' → logprob: -10.201016426086426
    4. ')

' → logprob: -11.701016426086426
    5. ')]' → logprob: -11.951016426086426
    6. '])
' → logprob: -12.201016426086426
    7. '   ' → logprob: -12.576016426086426
    8. ' )
' → logprob: -12.576016426086426
    9. ' )' → logprob: -12.826016426086426
    10. 'if' → logprob: -13.076016426086426

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033397044986486435
    2. '
' → logprob: -4.158397197723389
    3. '   ' → logprob: -4.283397197723389
    4. ' if' → logprob: -6.158397197723389
    5. '           ' → logprob: -7.658397197723389
    6. 'if' → logprob: -8.53339672088623
    7. '        
' → logprob: -8.65839672088623
    8. '```' → logprob: -8.65839672088623
    9. '    
' → logprob: -9.90839672088623
    10. '  
' → logprob: -9.90839672088623

Token 315: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2858697175979614
    2. '       ' → logprob: -1.9108697175979614
    3. 'if' (adapté à ' if') → logprob: -2.660869598388672
    4. '   ' → logprob: -3.660869598388672
    5. '
' → logprob: -5.535869598388672
    6. ' for' → logprob: -7.785869598388672
    7. '           ' → logprob: -8.035869598388672
    8. 'for' → logprob: -9.285869598388672
    9. '```' → logprob: -9.410869598388672
    10. '    ' → logprob: -9.910869598388672

Token 316: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005471954355016351
    2. '(a' → logprob: -7.875547409057617
    3. ' a' → logprob: -8.875547409057617
    4. 'not' → logprob: -10.875547409057617
    5. '(' → logprob: -12.750547409057617
    6. '(not' → logprob: -13.000547409057617
    7. ' (' → logprob: -13.250547409057617
    8. ' not' → logprob: -13.625547409057617
    9. '   ' → logprob: -16.375547409057617
    10. ' ' → logprob: -16.875547409057617

Token 317: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.008783210068941116
    2. 'not' → logprob: -5.008783340454102
    3. ' not' → logprob: -6.633783340454102
    4. '==' → logprob: -8.133783340454102
    5. ' !=' → logprob: -8.758783340454102
    6. ']!=' → logprob: -8.883783340454102
    7. '!=-' → logprob: -9.258783340454102
    8. ')!=' → logprob: -10.508783340454102
    9. '!==' → logprob: -11.008783340454102
    10. '()!=' → logprob: -11.383783340454102

Token 318: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.5716304410016164e-05
    2. ' b' → logprob: -10.250035285949707
    3. 'a' → logprob: -16.500036239624023
    4. ' ' → logprob: -16.750036239624023
    5. '-' → logprob: -17.000036239624023
    6. '   ' → logprob: -17.125036239624023
    7. ')b' → logprob: -18.750036239624023
    8. 'comp' → logprob: -19.000036239624023
    9. '     ' → logprob: -19.125036239624023
    10. '
' → logprob: -19.125036239624023

Token 319: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25572240352630615
    2. ':
' → logprob: -1.5057224035263062
    3. ' and' → logprob: -5.630722522735596
    4. '       ' → logprob: -9.130722045898438
    5. '):
' → logprob: -10.130722045898438
    6. '           ' → logprob: -11.505722045898438
    7. '):' → logprob: -11.505722045898438
    8. 'and' → logprob: -11.755722045898438
    9. '   ' → logprob: -11.755722045898438
    10. ':

' → logprob: -12.130722045898438

Token 320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07338476181030273
    2. '       ' → logprob: -3.0733847618103027
    3. ' if' → logprob: -3.8233847618103027
    4. ':' → logprob: -6.698384761810303
    5. ' and' → logprob: -8.198385238647461
    6. ',' → logprob: -8.198385238647461
    7. ':
' → logprob: -8.323385238647461
    8. ' comp' → logprob: -8.573385238647461
    9. '               ' → logprob: -9.448385238647461
    10. '          ' → logprob: -9.823385238647461

Token 321: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.485597163438797
    2. ' if' → logprob: -1.3605971336364746
    3. 'comp' → logprob: -2.2355971336364746
    4. ' comp' → logprob: -4.610597133636475
    5. '   ' → logprob: -5.235597133636475
    6. '           ' → logprob: -5.485597133636475
    7. '       ' → logprob: -6.360597133636475
    8. '```' → logprob: -10.360597610473633
    9. '               ' → logprob: -11.485597610473633
    10. '	comp' → logprob: -11.610597610473633

Token 322: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00034893216798081994
    2. ' a' → logprob: -8.000349044799805
    3. 'comp' → logprob: -12.000349044799805
    4. '(a' → logprob: -12.250349044799805
    5. '   ' → logprob: -13.875349044799805
    6. 'not' → logprob: -14.750349044799805
    7. ' comp' → logprob: -15.375349044799805
    8. 'b' → logprob: -15.500349044799805
    9. ')a' → logprob: -16.125349044799805
    10. '	a' → logprob: -16.250349044799805

Token 323: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3869102895259857
    2. 'not' → logprob: -1.136910319328308
    3. ')' → logprob: -11.136910438537598
    4. ']' → logprob: -11.761910438537598
    5. ':not' → logprob: -12.386910438537598
    6. '=' → logprob: -12.636910438537598
    7. '==' → logprob: -12.886910438537598
    8. '	not' → logprob: -13.511910438537598
    9. '!=' → logprob: -14.011910438537598
    10. 'and' → logprob: -14.136910438537598

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14317475259304047
    2. 'in' → logprob: -2.018174648284912
    3. 'comp' → logprob: -7.643174648284912
    4. ' comp' → logprob: -11.01817512512207
    5. '   ' → logprob: -14.39317512512207
    6. '(comp' → logprob: -14.51817512512207
    7. ' not' → logprob: -14.64317512512207
    8. '
' → logprob: -14.89317512512207
    9. '[' → logprob: -14.89317512512207
    10. '```' → logprob: -15.14317512512207

Token 325: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.00015860427811276168
    2. ' comp' → logprob: -8.750158309936523
    3. '	comp' → logprob: -16.375158309936523
    4. '.comp' → logprob: -18.375158309936523
    5. '(comp' → logprob: -18.375158309936523
    6. 'com' → logprob: -18.500158309936523
    7. 'cmp' → logprob: -20.375158309936523
    8. 'compl' → logprob: -20.625158309936523
    9. '_comp' → logprob: -21.125158309936523
    10. 'compound' → logprob: -21.125158309936523

Token 326: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -4.320199877838604e-07
    2. 'count' → logprob: -15.0
    3. 'comp' → logprob: -17.5
    4. '   ' → logprob: -17.625
    5. 'ids' → logprob: -18.375
    6. 'd' → logprob: -18.375
    7. '       ' → logprob: -18.75
    8. ' id' → logprob: -18.875
    9. ' ' → logprob: -19.375
    10. '```' → logprob: -19.375

Token 327: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0052392068319022655
    2. ':
' → logprob: -5.255239009857178
    3. '):' → logprob: -12.505239486694336
    4. '):
' → logprob: -14.755239486694336
    5. '       ' → logprob: -15.005239486694336
    6. '=' → logprob: -15.505239486694336
    7. ' :' → logprob: -15.630239486694336
    8. ':

' → logprob: -15.880239486694336
    9. ':
' → logprob: -16.005239486694336
    10. ']:' → logprob: -16.255239486694336

Token 328: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23076540231704712
    2. ' comp' → logprob: -2.1057653427124023
    3. '           ' → logprob: -3.1057653427124023
    4. '       ' → logprob: -4.605765342712402
    5. '	comp' → logprob: -4.605765342712402
    6. '```' → logprob: -5.105765342712402
    7. '[' → logprob: -5.230765342712402
    8. 'comp' → logprob: -6.230765342712402
    9. ' a' → logprob: -6.230765342712402
    10. '   ' → logprob: -7.230765342712402

Token 329: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.47460857033729553
    2. ' comp' → logprob: -0.9746085405349731
    3. '               ' → logprob: -7.724608421325684
    4. 'com' → logprob: -10.349608421325684
    5. '	comp' → logprob: -10.474608421325684
    6. '```' → logprob: -11.099608421325684
    7. ' ' → logprob: -12.599608421325684
    8. '           ' → logprob: -12.974608421325684
    9. '   ' → logprob: -13.099608421325684
    10. '                   ' → logprob: -13.224608421325684

Token 330: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: 0.0
    2. '[id' → logprob: -18.5
    3. ' id' → logprob: -18.625
    4. '           ' → logprob: -18.625
    5. '               ' → logprob: -18.75
    6. '```' → logprob: -19.625
    7. '       ' → logprob: -20.625
    8. 'comp' → logprob: -20.75
    9. 'a' → logprob: -20.75
    10. '[' → logprob: -20.75

Token 331: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.128163257315464e-07
    2. 'a' → logprob: -15.625
    3. '[' → logprob: -17.875
    4. '[e' → logprob: -19.125
    5. '
' → logprob: -19.25
    6. ' [' → logprob: -19.375
    7. '[c' → logprob: -19.875
    8. '```' → logprob: -20.5
    9. '[
' → logprob: -21.5
    10. '=a' → logprob: -21.625

Token 332: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.008639151230454445
    2. ']' → logprob: -5.008639335632324
    3. '=' → logprob: -6.258639335632324
    4. ']=(' → logprob: -12.883639335632324
    5. ']={' → logprob: -13.258639335632324
    6. '=len' → logprob: -13.633639335632324
    7. ' =' → logprob: -13.633639335632324
    8. '']=' → logprob: -15.133639335632324
    9. ']=-' → logprob: -15.258639335632324
    10. ')=' → logprob: -15.383639335632324

Token 333: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -5.512236498361744e-07
    2. ' comp' → logprob: -14.500000953674316
    3. '	comp' → logprob: -18.25
    4. 'com' → logprob: -19.875
    5. '(comp' → logprob: -21.5
    6. '   ' → logprob: -22.125
    7. 'compl' → logprob: -24.0
    8. 'cmp' → logprob: -24.25
    9. '       ' → logprob: -25.0
    10. '           ' → logprob: -25.125

Token 334: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.048753704875707626
    2. 'ount' → logprob: -3.0487537384033203
    3. 'id' → logprob: -9.04875373840332
    4. 'comp' → logprob: -10.29875373840332
    5. 'ont' → logprob: -11.92375373840332
    6. 'unt' → logprob: -12.79875373840332
    7. '   ' → logprob: -13.79875373840332
    8. '1' → logprob: -13.92375373840332
    9. 'ent' → logprob: -14.04875373840332
    10. ' ' → logprob: -14.42375373840332

Token 335: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0048079416155815125
    2. '
' → logprob: -6.129807949066162
    3. '                   ' → logprob: -6.754807949066162
    4. '           ' → logprob: -7.254807949066162
    5. '                
' → logprob: -8.129807472229004
    6. 'comp' → logprob: -9.254807472229004
    7. ',' → logprob: -9.254807472229004
    8. '                ' → logprob: -9.879807472229004
    9. '<|end|>' → logprob: -10.129807472229004
    10. '       ' → logprob: -10.504807472229004

Token 336: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24929460883140564
    2. '           ' → logprob: -2.8742945194244385
    3. '                   ' → logprob: -2.8742945194244385
    4. '<|end|>' → logprob: -3.6242945194244385
    5. 'comp' → logprob: -3.7492945194244385
    6. '(comp' → logprob: -3.9992945194244385
    7. '```' → logprob: -4.874294757843018
    8. '_comp' → logprob: -5.374294757843018
    9. ' comp' → logprob: -5.499294757843018
    10. '=' → logprob: -5.624294757843018

Token 337: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.0001475220051361248
    2. ' comp' → logprob: -9.000147819519043
    3. '               ' → logprob: -11.000147819519043
    4. '                   ' → logprob: -12.500147819519043
    5. 'com' → logprob: -12.875147819519043
    6. '	comp' → logprob: -14.000147819519043
    7. '           ' → logprob: -15.500147819519043
    8. '(comp' → logprob: -16.750146865844727
    9. '   ' → logprob: -17.375146865844727
    10. '                       ' → logprob: -19.250146865844727

Token 338: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.128163257315464e-07
    2. 'id' → logprob: -15.875
    3. 'ount' → logprob: -16.625
    4. ' count' → logprob: -20.25
    5. '   ' → logprob: -20.875
    6. '_count' → logprob: -21.5
    7. ' ' → logprob: -21.5
    8. 'c' → logprob: -21.75
    9. '=' → logprob: -22.625
    10. '...' → logprob: -22.75

Token 339: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00017505438881926239
    2. ' +=' → logprob: -9.000175476074219
    3. '=' → logprob: -10.125175476074219
    4. '+' → logprob: -11.750175476074219
    5. ']+=' → logprob: -13.125175476074219
    6. '<|end|>' → logprob: -13.750175476074219
    7. '+='' → logprob: -15.500175476074219
    8. '+="' → logprob: -15.875175476074219
    9. '```' → logprob: -16.12517547607422
    10. '+=(' → logprob: -17.62517547607422

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -20.25
    4. '```' → logprob: -20.5
    5. '
' → logprob: -21.375
    6. '<|end|>' → logprob: -21.625
    7. '１' → logprob: -22.0
    8. '۱' → logprob: -22.875
    9. '  ' → logprob: -23.5
    10. '১' → logprob: -23.6875

Token 341: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013213115744292736
    2. '<|end|>' → logprob: -7.751321315765381
    3. '       ' → logprob: -8.751320838928223
    4. ',' → logprob: -8.751320838928223
    5. ' if' → logprob: -8.876320838928223
    6. '               ' → logprob: -9.376320838928223
    7. '            
' → logprob: -9.376320838928223
    8. ' ' → logprob: -9.751320838928223
    9. '   ' → logprob: -10.001320838928223
    10. '          ' → logprob: -10.876320838928223

Token 342: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008073000237345695
    2. '       ' → logprob: -6.133072853088379
    3. ' if' → logprob: -6.633072853088379
    4. '<|end|>' → logprob: -6.633072853088379
    5. ',' → logprob: -6.883072853088379
    6. '   ' → logprob: -8.133072853088379
    7. '		' → logprob: -8.133072853088379
    8. '               ' → logprob: -8.383072853088379
    9. '```' → logprob: -8.508072853088379
    10. ' ' → logprob: -8.883072853088379

Token 343: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03433417156338692
    2. 'if' (adapté à ' if') → logprob: -4.034334182739258
    3. ' if' → logprob: -4.159334182739258
    4. '               ' → logprob: -8.409334182739258
    5. '            ' → logprob: -9.409334182739258
    6. '          ' → logprob: -9.659334182739258
    7. '       ' → logprob: -10.909334182739258
    8. ' ' → logprob: -11.659334182739258
    9. '    ' → logprob: -12.034334182739258
    10. '   ' → logprob: -12.159334182739258

Token 344: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014166799373924732
    2. ' b' → logprob: -4.264166831970215
    3. '   ' → logprob: -13.139166831970215
    4. '           ' → logprob: -13.889166831970215
    5. '       ' → logprob: -15.889166831970215
    6. '    ' → logprob: -16.3891658782959
    7. '	b' → logprob: -16.6391658782959
    8. '               ' → logprob: -17.6391658782959
    9. '  ' → logprob: -17.7641658782959
    10. ' ' → logprob: -17.7641658782959

Token 345: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06196914613246918
    2. 'not' → logprob: -2.811969041824341
    3. ':not' → logprob: -14.186968803405762
    4. '	not' → logprob: -14.936968803405762
    5. ')' → logprob: -15.686968803405762
    6. '!=' → logprob: -16.186969757080078
    7. '```' → logprob: -16.561969757080078
    8. ']' → logprob: -17.311969757080078
    9. '<|end|>' → logprob: -17.561969757080078
    10. '(not' → logprob: -17.561969757080078

Token 346: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20147843658924103
    2. 'in' → logprob: -1.7014784812927246
    3. 'comp' → logprob: -9.701478004455566
    4. '           ' → logprob: -13.701478004455566
    5. 'not' → logprob: -14.326478004455566
    6. ' comp' → logprob: -14.826478004455566
    7. '       ' → logprob: -14.951478004455566
    8. ' not' → logprob: -14.951478004455566
    9. '               ' → logprob: -15.076478004455566
    10. ' ' → logprob: -15.451478004455566

Token 347: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.1002127155661583
    2. ' comp' → logprob: -2.350212812423706
    3. '	comp' → logprob: -12.600213050842285
    4. '(comp' → logprob: -13.850213050842285
    5. 'com' → logprob: -14.225213050842285
    6. '.comp' → logprob: -14.975213050842285
    7. 'compl' → logprob: -16.22521209716797
    8. '_comp' → logprob: -16.35021209716797
    9. 'b' → logprob: -16.72521209716797
    10. '```' → logprob: -16.72521209716797

Token 348: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: 0.0
    2. '[' → logprob: -21.375
    3. '   ' → logprob: -21.75
    4. ' id' → logprob: -21.75
    5. '_id' → logprob: -22.0
    6. '       ' → logprob: -22.375
    7. '```' → logprob: -22.375
    8. '[id' → logprob: -23.0
    9. 'if' → logprob: -23.375
    10. 'd' → logprob: -23.75

Token 349: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01768883690237999
    2. ':
' → logprob: -4.142688751220703
    3. '{
' → logprob: -7.017688751220703
    4. '{' → logprob: -8.517688751220703
    5. ':b' → logprob: -8.892688751220703
    6. '               ' → logprob: -9.017688751220703
    7. '[b' → logprob: -9.267688751220703
    8. ':{
' → logprob: -9.517688751220703
    9. '           ' → logprob: -9.517688751220703
    10. '[' → logprob: -11.267688751220703

Token 350: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008286893367767334
    2. '           ' → logprob: -5.258286952972412
    3. 'comp' → logprob: -6.258286952972412
    4. 'b' → logprob: -7.383286952972412
    5. ' comp' → logprob: -8.883286476135254
    6. '       ' → logprob: -8.883286476135254
    7. '{
' → logprob: -9.258286476135254
    8. '(comp' → logprob: -10.133286476135254
    9. '```' → logprob: -10.883286476135254
    10. '	comp' → logprob: -11.008286476135254

Token 351: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.005275380332022905
    2. ' comp' → logprob: -5.255275249481201
    3. '               ' → logprob: -10.63027572631836
    4. 'b' → logprob: -11.50527572631836
    5. '           ' → logprob: -12.75527572631836
    6. 'com' → logprob: -13.25527572631836
    7. '	comp' → logprob: -13.25527572631836
    8. '```' → logprob: -15.38027572631836
    9. '
' → logprob: -15.75527572631836
    10. 'c' → logprob: -15.75527572631836

Token 352: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.00861681904643774
    2. 'count' → logprob: -4.758616924285889
    3. 'b' → logprob: -13.88361644744873
    4. '[b' → logprob: -14.00861644744873
    5. '[' → logprob: -15.00861644744873
    6. '[id' → logprob: -16.758617401123047
    7. 'ount' → logprob: -17.133617401123047
    8. ' id' → logprob: -17.508617401123047
    9. '```' → logprob: -17.758617401123047
    10. '       ' → logprob: -18.008617401123047

Token 353: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.2664456789934775e-06
    2. 'b' → logprob: -13.625000953674316
    3. '[a' → logprob: -18.375001907348633
    4. '=b' → logprob: -18.500001907348633
    5. '[' → logprob: -18.750001907348633
    6. '```' → logprob: -19.250001907348633
    7. '	b' → logprob: -19.750001907348633
    8. '[e' → logprob: -20.500001907348633
    9. '[c' → logprob: -20.625001907348633
    10. ' [' → logprob: -20.750001907348633

Token 354: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.20194056630134583
    2. '=' → logprob: -1.7019405364990234
    3. '}=' → logprob: -8.201940536499023
    4. ')=' → logprob: -8.451940536499023
    5. '']=' → logprob: -11.451940536499023
    6. ']' → logprob: -11.451940536499023
    7. ']={' → logprob: -11.951940536499023
    8. ']+=' → logprob: -12.576940536499023
    9. ' =' → logprob: -12.951940536499023
    10. '"]=' → logprob: -13.576940536499023

Token 355: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -6.704273118884885e-07
    2. ' comp' → logprob: -14.250000953674316
    3. 'com' → logprob: -18.75
    4. '	comp' → logprob: -19.0
    5. '(comp' → logprob: -19.875
    6. '
' → logprob: -21.625
    7. '.comp' → logprob: -22.375
    8. '   ' → logprob: -23.0
    9. '       ' → logprob: -23.125
    10. 'compl' → logprob: -23.5

Token 356: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0280383548888494e-06
    2. 'ount' → logprob: -13.875000953674316
    3. ' count' → logprob: -18.375001907348633
    4. 'comp' → logprob: -19.375001907348633
    5. '_count' → logprob: -20.625001907348633
    6. ' ' → logprob: -20.750001907348633
    7. '   ' → logprob: -20.750001907348633
    8. 'cont' → logprob: -20.875001907348633
    9. '...' → logprob: -21.250001907348633
    10. '+' → logprob: -21.375001907348633

Token 357: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004767241887748241
    2. '=' → logprob: -6.504767417907715
    3. '           ' → logprob: -6.504767417907715
    4. '                   ' → logprob: -6.754767417907715
    5. 'comp' → logprob: -8.504767417907715
    6. '              ' → logprob: -9.504767417907715
    7. '       ' → logprob: -9.754767417907715
    8. '                ' → logprob: -10.004767417907715
    9. '```' → logprob: -10.129767417907715
    10. '
' → logprob: -10.504767417907715

Token 358: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00036787090357393026
    2. '           ' → logprob: -8.375368118286133
    3. '                   ' → logprob: -9.375368118286133
    4. 'comp' → logprob: -11.000368118286133
    5. '```' → logprob: -11.750368118286133
    6. '              ' → logprob: -12.000368118286133
    7. '       ' → logprob: -12.250368118286133
    8. '                ' → logprob: -12.625368118286133
    9. '                
' → logprob: -12.750368118286133
    10. ' comp' → logprob: -12.750368118286133

Token 359: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -2.2961512513575144e-05
    2. ' comp' → logprob: -10.750022888183594
    3. '1' → logprob: -13.750022888183594
    4. '++' → logprob: -15.625022888183594
    5. '	comp' → logprob: -16.125022888183594
    6. '+' → logprob: -17.000022888183594
    7. '(comp' → logprob: -17.000022888183594
    8. 'count' → logprob: -17.625022888183594
    9. '               ' → logprob: -17.875022888183594
    10. 'com' → logprob: -18.375022888183594

Token 360: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -6.511406809295295e-06
    2. '+' → logprob: -12.875006675720215
    3. '+=' → logprob: -13.250006675720215
    4. '1' → logprob: -13.625006675720215
    5. 'ount' → logprob: -14.375006675720215
    6. '   ' → logprob: -16.2500057220459
    7. '       ' → logprob: -16.5000057220459
    8. ' count' → logprob: -16.7500057220459
    9. '```' → logprob: -17.3750057220459
    10. '           ' → logprob: -17.3750057220459

Token 361: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005293646361678839
    2. '+' → logprob: -5.255293846130371
    3. ' +=' → logprob: -10.005293846130371
    4. ']+=' → logprob: -11.755293846130371
    5. '=' → logprob: -12.255293846130371
    6. '```' → logprob: -14.130293846130371
    7. '+='' → logprob: -15.005293846130371
    8. '+="' → logprob: -15.005293846130371
    9. '++' → logprob: -15.380293846130371
    10. '1' → logprob: -16.005292892456055

Token 362: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -18.25
    4. '+' → logprob: -19.375
    5. '   ' → logprob: -20.875
    6. '-' → logprob: -20.875
    7. '2' → logprob: -22.125
    8. '
' → logprob: -22.125
    9. '       ' → logprob: -22.625
    10. '<|end|>' → logprob: -23.25

Token 363: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16528284549713135
    2. '<|end|>' → logprob: -2.290282726287842
    3. '    
' → logprob: -3.415282726287842
    4. '```' → logprob: -5.290282726287842
    5. ' graph' → logprob: -5.790282726287842
    6. '  
' → logprob: -6.040282726287842
    7. '
' → logprob: -6.290282726287842
    8. ')' → logprob: -6.415282726287842
    9. ',' → logprob: -7.165282726287842
    10. 'graph' → logprob: -7.665282726287842

Token 364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2273087203502655
    2. ' graph' → logprob: -2.727308750152588
    3. ')' → logprob: -3.477308750152588
    4. '<|end|>' → logprob: -3.727308750152588
    5. '```' → logprob: -3.852308750152588
    6. '    
' → logprob: -4.227308750152588
    7. '[]' → logprob: -4.227308750152588
    8. 'graph' → logprob: -5.227308750152588
    9. '       ' → logprob: -5.602308750152588
    10. 'from' → logprob: -5.977308750152588

Token 365: ' if' (ID: 538)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6671143770217896
    2. 'from' → logprob: -1.6671143770217896
    3. 'adj' → logprob: -2.0421142578125
    4. 'g' → logprob: -2.2921142578125
    5. 'uf' → logprob: -3.4171142578125
    6. 'G' → logprob: -3.7921142578125
    7. 'import' → logprob: -5.6671142578125
    8. 'temp' → logprob: -6.4171142578125
    9. 'if' (adapté à ' if') → logprob: -6.7921142578125
    10. 'tmp' → logprob: -7.0421142578125

Token 366: ' comp' (ID: 1050)
  Prédit: ' comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.5761764049530029
    2. 'comp' → logprob: -0.8261764049530029
    3. 'len' → logprob: -8.826176643371582
    4. ' len' → logprob: -9.451176643371582
    5. ' not' → logprob: -12.326176643371582
    6. '	comp' → logprob: -13.076176643371582
    7. 'com' → logprob: -13.201176643371582
    8. 'group' → logprob: -13.951176643371582
    9. '(comp' → logprob: -13.951176643371582
    10. 'not' → logprob: -14.701176643371582

Token 367: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04858953505754471
    2. 'id' → logprob: -3.0485894680023193
    3. 'ount' → logprob: -13.923589706420898
    4. '   ' → logprob: -14.173589706420898
    5. '_count' → logprob: -15.673589706420898
    6. 'cont' → logprob: -17.5485897064209
    7. '[count' → logprob: -17.5485897064209
    8. 'counts' → logprob: -17.6735897064209
    9. 'cut' → logprob: -17.6735897064209
    10. 'cnt' → logprob: -17.6735897064209

Token 368: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.006796605885028839
    2. ' >' → logprob: -5.006796836853027
    3. '>=' → logprob: -10.881796836853027
    4. '==' → logprob: -10.881796836853027
    5. '<' → logprob: -11.131796836853027
    6. '<|end|>' → logprob: -12.256796836853027
    7. '>
' → logprob: -12.631796836853027
    8. ':' → logprob: -12.881796836853027
    9. '><' → logprob: -13.131796836853027
    10. '   ' → logprob: -13.256796836853027

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6286106983898208e-05
    2. ' ' → logprob: -11.125016212463379
    3. '1' → logprob: -14.125016212463379
    4. '   ' → logprob: -14.625016212463379
    5. '```' → logprob: -16.375017166137695
    6. '2' → logprob: -16.500017166137695
    7. '=' → logprob: -17.375017166137695
    8. '  ' → logprob: -17.812517166137695
    9. '>' → logprob: -17.875017166137695
    10. '０' → logprob: -18.000017166137695

Token 370: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6603713035583496
    2. ':' → logprob: -0.9103713035583496
    3. '       ' → logprob: -2.5353713035583496
    4. '   ' → logprob: -7.03537130355835
    5. ' continue' → logprob: -7.28537130355835
    6. 'continue' → logprob: -9.160371780395508
    7. ' continues' → logprob: -10.910371780395508
    8. '	continue' → logprob: -11.160371780395508
    9. ',' → logprob: -12.035371780395508
    10. '):
' → logprob: -12.285371780395508

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07971547544002533
    2. '   ' → logprob: -2.5797154903411865
    3. ' continue' → logprob: -7.454715251922607
    4. 'continue' → logprob: -8.454715728759766
    5. ' for' → logprob: -11.079715728759766
    6. '```' → logprob: -12.079715728759766
    7. '	continue' → logprob: -12.204715728759766
    8. '
' → logprob: -13.204715728759766
    9. 'for' → logprob: -13.454715728759766
    10. '           ' → logprob: -13.579715728759766

Token 372: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20504425466060638
    2. 'continue' (adapté à ' continue') → logprob: -1.7050442695617676
    3. ' continue' → logprob: -5.705044269561768
    4. '       ' → logprob: -8.33004379272461
    5. '	continue' → logprob: -10.20504379272461
    6. 'for' → logprob: -11.58004379272461
    7. '```' → logprob: -12.08004379272461
    8. ' ' → logprob: -14.08004379272461
    9. ' for' → logprob: -14.95504379272461
    10. '
' → logprob: -14.95504379272461

Token 373: '
' (ID: 198)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.9891930222511292
    2. 'graph' → logprob: -1.7391929626464844
    3. 'g' → logprob: -2.1141929626464844
    4. '   ' → logprob: -2.1141929626464844
    5. 'tmp' → logprob: -2.4891929626464844
    6. 'from' → logprob: -3.4891929626464844
    7. 'uf' → logprob: -3.8641929626464844
    8. 'import' → logprob: -3.9891929626464844
    9. 'adj' → logprob: -4.489192962646484
    10. 'G' → logprob: -4.739192962646484

Token 374: '   ' (ID: 271)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.7730949521064758
    2. '   ' → logprob: -2.148094892501831
    3. 'tmp' → logprob: -2.148094892501831
    4. 'graph' → logprob: -2.523094892501831
    5. 'g' → logprob: -2.773094892501831
    6. 'from' → logprob: -3.023094892501831
    7. 'uf' → logprob: -3.148094892501831
    8. 'import' → logprob: -3.648094892501831
    9. 'G' → logprob: -5.27309513092041
    10. 'adj' → logprob: -5.39809513092041

Token 375: ' g' (ID: 329)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.434055894613266
    2. 'g' (adapté à ' g') → logprob: -2.309055805206299
    3. 'adj' → logprob: -2.559055805206299
    4. 'from' → logprob: -3.309055805206299
    5. 'G' → logprob: -3.309055805206299
    6. 'size' → logprob: -3.934055805206299
    7. 'import' → logprob: -4.059055805206299
    8. 'tmp' → logprob: -4.184055805206299
    9. 'temp' → logprob: -4.184055805206299
    10. '   ' → logprob: -5.434055805206299

Token 376: '=[' (ID: 13370)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.20050077140331268
    2. '=' → logprob: -1.825500726699829
    3. '=[' → logprob: -4.575500965118408
    4. '=[]' → logprob: -5.700500965118408
    5. '={}' → logprob: -5.950500965118408
    6. ' =' → logprob: -6.700500965118408
    7. '=g' → logprob: -7.200500965118408
    8. '={' → logprob: -7.575500965118408
    9. '=[]
' → logprob: -7.950500965118408
    10. 'r' → logprob: -8.07550048828125

Token 377: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.8312570318812504e-05
    2. '[' → logprob: -11.000018119812012
    3. '[]
' → logprob: -14.125018119812012
    4. ' []' → logprob: -14.875018119812012
    5. 'set' → logprob: -15.125018119812012
    6. '[]

' → logprob: -17.000019073486328
    7. '[][]' → logprob: -17.125019073486328
    8. '   ' → logprob: -18.125019073486328
    9. '[]}' → logprob: -18.125019073486328
    10. '[]=' → logprob: -18.375019073486328

Token 378: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2524773180484772
    2. ' for' → logprob: -1.5024772882461548
    3. '[]' → logprob: -8.127477645874023
    4. ']' → logprob: -8.502477645874023
    5. ']*' → logprob: -11.502477645874023
    6. '	for' → logprob: -11.627477645874023
    7. '*' → logprob: -11.877477645874023
    8. ')' → logprob: -12.002477645874023
    9. ' ' → logprob: -12.627477645874023
    10. '=[]' → logprob: -12.752477645874023

Token 379: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4862971901893616
    2. '_' → logprob: -1.2362971305847168
    3. 'range' → logprob: -2.486297130584717
    4. ' in' → logprob: -5.236297130584717
    5. ' _' → logprob: -5.486297130584717
    6. 'in' → logprob: -6.486297130584717
    7. '_range' → logprob: -7.986297130584717
    8. ' ' → logprob: -9.986297607421875
    9. '(range' → logprob: -10.736297607421875
    10. '_comp' → logprob: -11.111297607421875

Token 380: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05185314267873764
    2. 'range' → logprob: -3.3018531799316406
    3. 'in' → logprob: -4.426853179931641
    4. ' range' → logprob: -6.426853179931641
    5. 'comp' → logprob: -9.05185317993164
    6. ' ' → logprob: -10.92685317993164
    7. '_' → logprob: -12.92685317993164
    8. 'i' → logprob: -13.30185317993164
    9. '(range' → logprob: -13.30185317993164
    10. '(comp' → logprob: -13.55185317993164

Token 381: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023245595395565033
    2. ' range' → logprob: -3.7732455730438232
    3. '(range' → logprob: -16.148244857788086
    4. ' ' → logprob: -19.648244857788086
    5. '	range' → logprob: -19.898244857788086
    6. '   ' → logprob: -21.023244857788086
    7. '_range' → logprob: -21.148244857788086
    8. 'r' → logprob: -21.398244857788086
    9. 'rang' → logprob: -21.898244857788086
    10. 'comp' → logprob: -21.898244857788086

Token 382: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -0.0005530327325686812
    2. 'comp' → logprob: -7.500553131103516
    3. ' comp' → logprob: -17.125553131103516
    4. ' (' → logprob: -18.000553131103516
    5. '(' → logprob: -18.250553131103516
    6. '	comp' → logprob: -18.500553131103516
    7. '
' → logprob: -21.125553131103516
    8. '_comp' → logprob: -22.125553131103516
    9. '   ' → logprob: -22.750553131103516
    10. '(c' → logprob: -23.000553131103516

Token 383: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -9.088346359931165e-07
    2. 'ount' → logprob: -14.250000953674316
    3. 'id' → logprob: -15.125000953674316
    4. 'comp' → logprob: -17.75
    5. '_count' → logprob: -19.75
    6. '   ' → logprob: -20.625
    7. ' count' → logprob: -21.0
    8. 'cout' → logprob: -21.875
    9. ' ' → logprob: -22.0
    10. ')' → logprob: -22.25

Token 384: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20311330258846283
    2. ')]' → logprob: -1.703113317489624
    3. ']
' → logprob: -6.453113079071045
    4. ')' → logprob: -9.578113555908203
    5. ')]
' → logprob: -10.078113555908203
    6. '()]' → logprob: -12.453113555908203
    7. ' ]' → logprob: -12.828113555908203
    8. '>]' → logprob: -13.578113555908203
    9. '`]' → logprob: -13.703113555908203
    10. ']
' → logprob: -13.953113555908203

Token 385: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6445794701576233
    2. '   ' → logprob: -1.2695794105529785
    3. ' for' → logprob: -1.6445794105529785
    4. '<|end|>' → logprob: -7.0195794105529785
    5. '    
' → logprob: -9.519579887390137
    6. '```' → logprob: -10.019579887390137
    7. '  
' → logprob: -10.519579887390137
    8. '	for' → logprob: -11.144579887390137
    9. '  ' → logprob: -12.394579887390137
    10. ')' → logprob: -12.394579887390137

Token 386: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0013463040813803673
    2. 'used' → logprob: -7.501346111297607
    3. 'edges' → logprob: -8.001346588134766
    4. 'idx' → logprob: -9.501346588134766
    5. 'temp' → logprob: -9.626346588134766
    6. ' for' → logprob: -9.751346588134766
    7. 'edge' → logprob: -9.876346588134766
    8. 'from' → logprob: -10.501346588134766
    9. 'checked' → logprob: -11.001346588134766
    10. 'def' → logprob: -11.126346588134766

Token 387: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1128259226679802
    2. ' e' → logprob: -2.237825870513916
    3. '(e' → logprob: -13.237826347351074
    4. ' ' → logprob: -14.862826347351074
    5. 'edge' → logprob: -15.237826347351074
    6. '   ' → logprob: -15.612826347351074
    7. '	e' → logprob: -15.612826347351074
    8. ' (' → logprob: -15.737826347351074
    9. ' edge' → logprob: -15.987826347351074
    10. '_e' → logprob: -15.987826347351074

Token 388: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02632201462984085
    2. 'in' → logprob: -3.65132212638855
    3. '   ' → logprob: -12.401322364807129
    4. 'group' → logprob: -12.776322364807129
    5. ' ' → logprob: -13.026322364807129
    6. 'n' → logprob: -13.026322364807129
    7. 'e' → logprob: -13.151322364807129
    8. 's' → logprob: -13.276322364807129
    9. 'import' → logprob: -13.526322364807129
    10. 'ingroup' → logprob: -14.026322364807129

Token 389: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.0002613358374219388
    2. ' group' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.375261306762695
    4. '(group' → logprob: -18.000261306762695
    5. '[group' → logprob: -18.000261306762695
    6. '"group' → logprob: -18.250261306762695
    7. '	group' → logprob: -18.750261306762695
    8. 'e' → logprob: -19.375261306762695
    9. ' ' → logprob: -19.750261306762695
    10. '.group' → logprob: -20.000261306762695

Token 390: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05134955421090126
    2. ':' → logprob: -3.176349639892578
    3. '   ' → logprob: -5.426349639892578
    4. '       ' → logprob: -5.926349639892578
    5. ',' → logprob: -7.426349639892578
    6. '):
' → logprob: -7.926349639892578
    7. 'if' → logprob: -9.051349639892578
    8. ' if' → logprob: -9.176349639892578
    9. '[' → logprob: -10.426349639892578
    10. ',
' → logprob: -11.676349639892578

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42997029423713684
    2. '   ' → logprob: -1.0549702644348145
    3. ' a' → logprob: -7.5549702644348145
    4. 'a' → logprob: -7.8049702644348145
    5. ' if' → logprob: -8.804970741271973
    6. ',' → logprob: -8.929970741271973
    7. ',a' → logprob: -11.304970741271973
    8. ' ' → logprob: -11.554970741271973
    9. '           ' → logprob: -12.179970741271973
    10. '    ' → logprob: -12.304970741271973

Token 392: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.024862905964255333
    2. '   ' → logprob: -4.024862766265869
    3. 'if' → logprob: -5.399862766265869
    4. ' a' → logprob: -6.399862766265869
    5. ' if' → logprob: -8.149863243103027
    6. '       ' → logprob: -8.899863243103027
    7. 'e' → logprob: -9.899863243103027
    8. 'c' → logprob: -11.024863243103027
    9. 's' → logprob: -12.024863243103027
    10. 'u' → logprob: -13.399863243103027

Token 393: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.9160102712921798e-05
    2. ' =' → logprob: -11.125029563903809
    3. '=
' → logprob: -12.250029563903809
    4. '=a' → logprob: -12.875029563903809
    5. 'a' → logprob: -13.375029563903809
    6. 'comp' → logprob: -13.875029563903809
    7. '=e' → logprob: -13.875029563903809
    8. '=_' → logprob: -14.250029563903809
    9. '=sys' → logprob: -14.250029563903809
    10. ',' → logprob: -14.500029563903809

Token 394: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0004606975708156824
    2. 'comp' → logprob: -7.875460624694824
    3. ' uf' → logprob: -9.500460624694824
    4. 'ufs' → logprob: -13.000460624694824
    5. 'e' → logprob: -13.500460624694824
    6. ' comp' → logprob: -14.250460624694824
    7. 'ug' → logprob: -15.125460624694824
    8. 'u' → logprob: -15.375460624694824
    9. 'ub' → logprob: -15.500460624694824
    10. 'com' → logprob: -16.12546157836914

Token 395: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0038083845283836126
    2. 'find' → logprob: -5.878808498382568
    3. '[' → logprob: -7.378808498382568
    4. '[e' → logprob: -8.62880802154541
    5. 'e' → logprob: -8.75380802154541
    6. '.' → logprob: -11.00380802154541
    7. '(e' → logprob: -11.75380802154541
    8. '   ' → logprob: -12.62880802154541
    9. '=find' → logprob: -12.75380802154541
    10. 'def' → logprob: -13.12880802154541

Token 396: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -2.935296834039036e-06
    2. 'e' → logprob: -13.00000286102295
    3. '(' → logprob: -14.62500286102295
    4. '[e' → logprob: -16.250003814697266
    5. ' (' → logprob: -17.750003814697266
    6. ',e' → logprob: -17.875003814697266
    7. '(a' → logprob: -18.250003814697266
    8. '(
' → logprob: -19.000003814697266
    9. '<|end|>' → logprob: -20.500003814697266
    10. ')e' → logprob: -20.625003814697266

Token 397: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.791440293658525e-05
    2. '1' → logprob: -10.000078201293945
    3. '][' → logprob: -10.750078201293945
    4. 'e' → logprob: -12.750078201293945
    5. '(' → logprob: -13.250078201293945
    6. '```' → logprob: -13.750078201293945
    7. ')[' → logprob: -14.000078201293945
    8. '[
' → logprob: -14.000078201293945
    9. '   ' → logprob: -14.500078201293945
    10. 'a' → logprob: -14.500078201293945

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '```' → logprob: -16.500001907348633
    5. '2' → logprob: -17.312501907348633
    6. '[' → logprob: -18.375001907348633
    7. '۱' → logprob: -18.375001907348633
    8. '１' → logprob: -18.437501907348633
    9. '
' → logprob: -18.562501907348633
    10. '१' → logprob: -18.812501907348633

Token 399: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25755879282951355
    2. '])
' → logprob: -2.257558822631836
    3. ')' → logprob: -2.382558822631836
    4. '])' → logprob: -3.507558822631836
    5. ']' → logprob: -10.007558822631836
    6. ')
' → logprob: -10.257558822631836
    7. ' )
' → logprob: -10.507558822631836
    8. ')]' → logprob: -11.132558822631836
    9. '       ' → logprob: -11.382558822631836
    10. ']
' → logprob: -11.632558822631836

Token 400: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.13041844964027405
    2. '   ' → logprob: -2.255418539047241
    3. ' b' → logprob: -4.130418300628662
    4. ' if' → logprob: -7.005418300628662
    5. ' ' → logprob: -8.75541877746582
    6. '<|end|>' → logprob: -8.88041877746582
    7. ',b' → logprob: -9.75541877746582
    8. 'if' → logprob: -10.13041877746582
    9. '       ' → logprob: -10.88041877746582
    10. '  ' → logprob: -11.13041877746582

Token 401: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0031804447062313557
    2. ' b' → logprob: -5.753180503845215
    3. '   ' → logprob: -12.878180503845215
    4. '	b' → logprob: -16.5031795501709
    5. '       ' → logprob: -18.3781795501709
    6. '           ' → logprob: -19.6281795501709
    7. ' ' → logprob: -19.8781795501709
    8. '  ' → logprob: -20.3781795501709
    9. '    ' → logprob: -21.2531795501709
    10. ',b' → logprob: -21.3781795501709

Token 402: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00010998018842656165
    2. '=e' → logprob: -9.875109672546387
    3. '=a' → logprob: -10.750109672546387
    4. '=
' → logprob: -11.750109672546387
    5. '[' → logprob: -11.875109672546387
    6. 'a' → logprob: -12.000109672546387
    7. '=b' → logprob: -12.625109672546387
    8. '=[' → logprob: -12.750109672546387
    9. '=g' → logprob: -13.000109672546387
    10. ' =' → logprob: -13.375109672546387

Token 403: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -7.896309739408025e-07
    2. ' uf' → logprob: -14.125000953674316
    3. 'comp' → logprob: -17.75
    4. 'ufs' → logprob: -18.75
    5. 'ug' → logprob: -19.125
    6. 'uff' → logprob: -20.125
    7. '
' → logprob: -20.5
    8. 'ub' → logprob: -21.25
    9. '.uf' → logprob: -21.875
    10. 'ufi' → logprob: -22.125

Token 404: '.find' (ID: 4231)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05042427033185959
    2. '(e' → logprob: -3.425424337387085
    3. 'find' → logprob: -5.050424098968506
    4. 'def' → logprob: -5.550424098968506
    5. '[e' → logprob: -5.675424098968506
    6. '.find' → logprob: -6.300424098968506
    7. 'b' → logprob: -8.300424575805664
    8. 'e' → logprob: -8.550424575805664
    9. '(b' → logprob: -9.050424575805664
    10. '```' → logprob: -9.550424575805664

Token 405: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.030007917433977127
    2. 'e' → logprob: -3.530007839202881
    3. '[e' → logprob: -8.655008316040039
    4. 'b' → logprob: -9.530008316040039
    5. 'find' → logprob: -12.155008316040039
    6. ' e' → logprob: -13.155008316040039
    7. 'a' → logprob: -13.530008316040039
    8. '(b' → logprob: -14.155008316040039
    9. 'f' → logprob: -15.280008316040039
    10. 'def' → logprob: -15.530008316040039

Token 406: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14788730442523956
    2. '2' → logprob: -2.0228872299194336
    3. 'find' → logprob: -5.897887229919434
    4. '(e' → logprob: -6.522887229919434
    5. '[e' → logprob: -7.272887229919434
    6. '(' → logprob: -8.647887229919434
    7. 'e' → logprob: -10.022887229919434
    8. '1' → logprob: -11.022887229919434
    9. '.find' → logprob: -11.147887229919434
    10. '(find' → logprob: -11.522887229919434

Token 407: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.375000953674316
    3. '
' → logprob: -15.750000953674316
    4. '1' → logprob: -15.875000953674316
    5. '[' → logprob: -16.0
    6. '   ' → logprob: -17.5
    7. ' ' → logprob: -17.875
    8. '``' → logprob: -18.125
    9. '(' → logprob: -19.25
    10. '0' → logprob: -19.6875

Token 408: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1604263037443161
    2. ')
' → logprob: -1.9104262590408325
    3. ']' → logprob: -9.535426139831543
    4. ')]' → logprob: -10.160426139831543
    5. '   ' → logprob: -10.410426139831543
    6. '])' → logprob: -11.160426139831543
    7. ']
' → logprob: -11.535426139831543
    8. ')
' → logprob: -11.535426139831543
    9. '       ' → logprob: -11.660426139831543
    10. '])
' → logprob: -12.785426139831543

Token 409: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04122366011142731
    2. ' if' → logprob: -3.9162237644195557
    3. '       ' → logprob: -4.291223526000977
    4. 'if' → logprob: -5.916223526000977
    5. '
' → logprob: -6.791223526000977
    6. '<|end|>' → logprob: -7.041223526000977
    7. '```' → logprob: -7.291223526000977
    8. '  
' → logprob: -7.916223526000977
    9. '    
' → logprob: -8.041223526000977
    10. '[' → logprob: -8.291223526000977

Token 410: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6448072791099548
    2. '   ' → logprob: -1.2698073387145996
    3. ' if' → logprob: -1.8948073387145996
    4. 'u' → logprob: -3.2698073387145996
    5. ' u' → logprob: -5.7698073387146
    6. 'a' → logprob: -6.1448073387146
    7. 'x' → logprob: -8.894806861877441
    8. '```' → logprob: -9.144806861877441
    9. ' a' → logprob: -9.269806861877441
    10. 'ai' → logprob: -9.894806861877441

Token 411: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006267757853493094
    2. ' a' → logprob: -7.375626564025879
    3. '	a' → logprob: -16.750627517700195
    4. 'comp' → logprob: -18.125627517700195
    5. '   ' → logprob: -18.250627517700195
    6. ' ' → logprob: -18.875627517700195
    7. 'not' → logprob: -20.250627517700195
    8. '
' → logprob: -20.250627517700195
    9. '```' → logprob: -20.375627517700195
    10. 'а' → logprob: -20.688127517700195

Token 412: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0006434533279389143
    2. 'not' → logprob: -7.625643253326416
    3. '==' → logprob: -9.625643730163574
    4. ' !=' → logprob: -9.750643730163574
    5. ']!=' → logprob: -10.875643730163574
    6. ' not' → logprob: -12.375643730163574
    7. '()!=' → logprob: -12.750643730163574
    8. '!==' → logprob: -13.375643730163574
    9. '```' → logprob: -13.750643730163574
    10. ')!=' → logprob: -13.875643730163574

Token 413: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. ' b' → logprob: -16.0
    3. '```' → logprob: -20.875
    4. '	b' → logprob: -21.875
    5. '
' → logprob: -21.875
    6. 'a' → logprob: -22.0
    7. '   ' → logprob: -22.375
    8. ')b' → logprob: -22.5
    9. 'None' → logprob: -22.75
    10. ' ' → logprob: -23.125

Token 414: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25274842977523804
    2. ':
' → logprob: -1.5027484893798828
    3. '       ' → logprob: -7.627748489379883
    4. '[' → logprob: -8.377748489379883
    5. ' and' → logprob: -10.627748489379883
    6. '           ' → logprob: -11.002748489379883
    7. '):
' → logprob: -11.252748489379883
    8. ':

' → logprob: -11.752748489379883
    9. '   ' → logprob: -11.877748489379883
    10. ':
' → logprob: -12.252748489379883

Token 415: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001055676257237792
    2. '```' → logprob: -7.751055717468262
    3. '           ' → logprob: -8.626055717468262
    4. ' g' → logprob: -8.626055717468262
    5. 'g' → logprob: -8.751055717468262
    6. '   ' → logprob: -9.376055717468262
    7. '``' → logprob: -11.501055717468262
    8. '[' → logprob: -12.876055717468262
    9. '        
' → logprob: -13.376055717468262
    10. ',' → logprob: -13.501055717468262

Token 416: ' u' (ID: 337)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3081222176551819
    2. ' g' → logprob: -1.433122158050537
    3. '   ' → logprob: -3.683122158050537
    4. '       ' → logprob: -7.058122158050537
    5. ' u' → logprob: -8.058122634887695
    6. 'u' (adapté à ' u') → logprob: -8.558122634887695
    7. 'a' → logprob: -10.183122634887695
    8. '```' → logprob: -10.808122634887695
    9. '	g' → logprob: -11.058122634887695
    10. ' a' → logprob: -11.683122634887695

Token 417: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.759734732331708e-05
    2. ' =' → logprob: -11.125017166137695
    3. '=
' → logprob: -14.000017166137695
    4. '=com' → logprob: -14.000017166137695
    5. '=c' → logprob: -14.875017166137695
    6. '=g' → logprob: -15.750017166137695
    7. '=int' → logprob: -16.125017166137695
    8. '=cut' → logprob: -16.250017166137695
    9. '=p' → logprob: -16.875017166137695
    10. '=u' → logprob: -17.000017166137695

Token 418: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -2.9160102712921798e-05
    2. ' comp' → logprob: -10.500029563903809
    3. 'com' → logprob: -13.500029563903809
    4. '	comp' → logprob: -16.250028610229492
    5. 'compl' → logprob: -17.625028610229492
    6. '(comp' → logprob: -18.375028610229492
    7. 'compound' → logprob: -20.125028610229492
    8. '```' → logprob: -20.375028610229492
    9. '.comp' → logprob: -21.125028610229492
    10. 'cmp' → logprob: -21.125028610229492

Token 419: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: 0.0
    2. '[a' → logprob: -16.75
    3. 'a' → logprob: -17.375
    4. '[id' → logprob: -19.25
    5. 'it' → logprob: -19.875
    6. 'idt' → logprob: -20.0
    7. '[' → logprob: -20.375
    8. 'i' → logprob: -20.5
    9. 'idig' → logprob: -21.0
    10. '```' → logprob: -21.0

Token 420: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -7.505351095460355e-05
    2. 'a' → logprob: -9.500075340270996
    3. '[u' → logprob: -16.62507438659668
    4. '[e' → logprob: -17.25007438659668
    5. '(a' → logprob: -19.62507438659668
    6. '[' → logprob: -20.25007438659668
    7. '```' → logprob: -21.37507438659668
    8. '	a' → logprob: -21.62507438659668
    9. '[x' → logprob: -22.50007438659668
    10. '<a' → logprob: -22.62507438659668

Token 421: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12700706720352173
    2. ']
' → logprob: -2.127007007598877
    3. 'u' → logprob: -9.752007484436035
    4. ']
' → logprob: -11.252007484436035
    5. '           ' → logprob: -12.627007484436035
    6. '       ' → logprob: -13.377007484436035
    7. ']

' → logprob: -14.252007484436035
    8. ' ]' → logprob: -14.752007484436035
    9. ')' → logprob: -15.002007484436035
    10. '               ' → logprob: -15.252007484436035

Token 422: '           ' (ID: 352)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00013047587708570063
    2. '           ' → logprob: -9.750130653381348
    3. ' v' → logprob: -9.875130653381348
    4. '	v' → logprob: -10.875130653381348
    5. ',v' → logprob: -13.500130653381348
    6. '   ' → logprob: -15.750130653381348
    7. ')v' → logprob: -15.875130653381348
    8. '		' → logprob: -16.87512969970703
    9. '.v' → logprob: -18.00012969970703
    10. '       ' → logprob: -18.12512969970703

Token 423: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -6.704273118884885e-07
    2. ' v' → logprob: -14.500000953674316
    3. '	v' → logprob: -17.25
    4. ',v' → logprob: -18.0
    5. ')v' → logprob: -18.25
    6. '           ' → logprob: -20.25
    7. '=v' → logprob: -21.5
    8. 'vj' → logprob: -22.125
    9. 'vq' → logprob: -23.25
    10. '_v' → logprob: -23.375

Token 424: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007042104844003916
    2. '=v' → logprob: -7.375704288482666
    3. '=u' → logprob: -9.875703811645508
    4. 'v' → logprob: -11.375703811645508
    5. ' =' → logprob: -12.000703811645508
    6. 'u' → logprob: -12.500703811645508
    7. '[v' → logprob: -13.875703811645508
    8. '[u' → logprob: -13.875703811645508
    9. '=com' → logprob: -13.875703811645508
    10. '[' → logprob: -14.625703811645508

Token 425: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -3.128163257315464e-07
    2. ' comp' → logprob: -15.25
    3. 'com' → logprob: -17.125
    4. '	comp' → logprob: -19.375
    5. 'c' → logprob: -20.875
    6. 'compl' → logprob: -21.125
    7. 'cop' → logprob: -22.625
    8. '(comp' → logprob: -23.125
    9. 'cmp' → logprob: -23.25
    10. 'compound' → logprob: -23.875

Token 426: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: 0.0
    2. 'b' → logprob: -20.125
    3. '[id' → logprob: -20.5
    4. '[b' → logprob: -20.5
    5. 'd' → logprob: -21.25
    6. '[' → logprob: -22.0
    7. 'it' → logprob: -22.125
    8. 'ids' → logprob: -22.375
    9. 'od' → logprob: -22.625
    10. 'ib' → logprob: -23.125

Token 427: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -9.627176768844947e-05
    2. 'b' → logprob: -9.250096321105957
    3. '[u' → logprob: -16.12509536743164
    4. '```' → logprob: -17.00009536743164
    5. '	b' → logprob: -18.25009536743164
    6. '[' → logprob: -18.25009536743164
    7. '[v' → logprob: -18.37509536743164
    8. '=b' → logprob: -19.37509536743164
    9. ',b' → logprob: -20.12509536743164
    10. '(b' → logprob: -20.25009536743164

Token 428: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005073175765573978
    2. '].' → logprob: -5.380073070526123
    3. ']
' → logprob: -7.755073070526123
    4. ')' → logprob: -11.630073547363281
    5. '[u' → logprob: -12.755073547363281
    6. ' ]' → logprob: -12.880073547363281
    7. '       ' → logprob: -13.130073547363281
    8. '           ' → logprob: -13.505073547363281
    9. '][' → logprob: -13.755073547363281
    10. ']+=' → logprob: -13.880073547363281

Token 429: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3955715000629425
    2. '           ' → logprob: -1.5205714702606201
    3. '       ' → logprob: -3.02057147026062
    4. '
' → logprob: -3.14557147026062
    5. 'g' → logprob: -5.645571708679199
    6. '    
' → logprob: -5.895571708679199
    7. ' g' → logprob: -6.145571708679199
    8. ' 
' → logprob: -6.145571708679199
    9. '```' → logprob: -6.645571708679199
    10. '  
' → logprob: -6.895571708679199

Token 430: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.0004521222144830972
    2. ' g' → logprob: -8.000452041625977
    3. '           ' → logprob: -9.125452041625977
    4. '   ' → logprob: -12.375452041625977
    5. '```' → logprob: -13.000452041625977
    6. '       ' → logprob: -14.500452041625977
    7. '	g' → logprob: -14.625452041625977
    8. '``' → logprob: -15.500452041625977
    9. '
' → logprob: -17.375452041625977
    10. ',g' → logprob: -17.750452041625977

Token 431: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. '[g' → logprob: -16.0
    3. '[v' → logprob: -17.125
    4. '[' → logprob: -18.25
    5. 'u' → logprob: -18.375
    6. '```' → logprob: -20.125
    7. '][' → logprob: -21.125
    8. ' [' → logprob: -21.25
    9. '[a' → logprob: -21.625
    10. '	u' → logprob: -22.125

Token 432: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.007814108394086361
    2. '[u' → logprob: -4.882813930511475
    3. '.append' → logprob: -9.507814407348633
    4. '][' → logprob: -9.757814407348633
    5. '[v' → logprob: -10.507814407348633
    6. ']' → logprob: -11.132814407348633
    7. '[' → logprob: -11.507814407348633
    8. ' ].' → logprob: -11.507814407348633
    9. '[].' → logprob: -12.132814407348633
    10. '.' → logprob: -12.257814407348633

Token 433: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. ' append' → logprob: -15.000000953674316
    3. '.append' → logprob: -15.500000953674316
    4. 'appen' → logprob: -17.125
    5. 'app' → logprob: -19.25
    6. '_append' → logprob: -19.75
    7. 'push' → logprob: -20.125
    8. '	append' → logprob: -20.25
    9. '```' → logprob: -20.75
    10. 'Append' → logprob: -20.875

Token 434: '((' (ID: 2054)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -7.553032628493384e-05
    2. '((' → logprob: -9.500075340270996
    3. '(' → logprob: -14.500075340270996
    4. 'v' → logprob: -16.875076293945312
    5. '(u' → logprob: -17.000076293945312
    6. ' (' → logprob: -17.125076293945312
    7. '(
' → logprob: -19.250076293945312
    8. '(V' → logprob: -19.875076293945312
    9. '[v' → logprob: -20.000076293945312
    10. '([' → logprob: -21.375076293945312

Token 435: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. ' v' → logprob: -15.875
    3. 'u' → logprob: -17.25
    4. '
' → logprob: -19.375
    5. '   ' → logprob: -19.75
    6. ')v' → logprob: -20.25
    7. '(v' → logprob: -21.0
    8. ',v' → logprob: -21.25
    9. 'g' → logprob: -21.875
    10. '	v' → logprob: -22.0

Token 436: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.5762202739715576
    2. ',' → logprob: -0.8262202739715576
    3. ',(' → logprob: -8.701220512390137
    4. ' ,' → logprob: -9.451220512390137
    5. 'e' → logprob: -12.076220512390137
    6. ',len' → logprob: -12.451220512390137
    7. ',None' → logprob: -12.576220512390137
    8. ',u' → logprob: -12.701220512390137
    9. ',g' → logprob: -12.826220512390137
    10. ',
' → logprob: -12.826220512390137

Token 437: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. '1' → logprob: -13.500003814697266
    3. '][' → logprob: -13.500003814697266
    4. '2' → logprob: -15.000003814697266
    5. '[-' → logprob: -15.625003814697266
    6. ',' → logprob: -15.750003814697266
    7. '-' → logprob: -16.125003814697266
    8. '3' → logprob: -16.500003814697266
    9. '
' → logprob: -16.500003814697266
    10. ')' → logprob: -16.625003814697266

Token 438: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.452426608419046e-05
    2. '
' → logprob: -11.62503433227539
    3. '```' → logprob: -11.62503433227539
    4. '-' → logprob: -12.25003433227539
    5. '0' → logprob: -12.37503433227539
    6. '`' → logprob: -13.81253433227539
    7. '1' → logprob: -13.81253433227539
    8. '
' → logprob: -14.06253433227539
    9. '``' → logprob: -14.43753433227539
    10. '

' → logprob: -14.56253433227539

Token 439: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014523330144584179
    2. ',' → logprob: -4.639523506164551
    3. '))
' → logprob: -5.889523506164551
    4. ' ))' → logprob: -6.514523506164551
    5. ',e' → logprob: -8.51452350616455
    6. '))

' → logprob: -9.38952350616455
    7. ')' → logprob: -9.88952350616455
    8. ']))' → logprob: -10.01452350616455
    9. ')))' → logprob: -10.51452350616455
    10. ' ,' → logprob: -10.63952350616455

Token 440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12153191864490509
    2. 'g' → logprob: -2.2465319633483887
    3. '       ' → logprob: -5.996531963348389
    4. '   ' → logprob: -6.246531963348389
    5. '		' → logprob: -6.496531963348389
    6. ' g' → logprob: -6.871531963348389
    7. '	g' → logprob: -7.746531963348389
    8. '          ' → logprob: -8.12153148651123
    9. '	       ' → logprob: -8.24653148651123
    10. ',g' → logprob: -8.74653148651123

Token 441: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.008759336546063423
    2. '           ' → logprob: -5.258759498596191
    3. ' g' → logprob: -6.133759498596191
    4. '   ' → logprob: -7.258759498596191
    5. '	g' → logprob: -7.633759498596191
    6. '		' → logprob: -9.133759498596191
    7. 'v' → logprob: -10.758759498596191
    8. '       ' → logprob: -10.883759498596191
    9. '    ' → logprob: -12.383759498596191
    10. '	       ' → logprob: -13.008759498596191

Token 442: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0024950411170721054
    2. '[v' → logprob: -6.002494812011719
    3. 'u' → logprob: -11.627494812011719
    4. '][' → logprob: -12.877494812011719
    5. '[' → logprob: -13.002494812011719
    6. '[w' → logprob: -13.002494812011719
    7. 'v' → logprob: -14.002494812011719
    8. 'w' → logprob: -14.127494812011719
    9. '```' → logprob: -14.877494812011719
    10. '.append' → logprob: -14.877494812011719

Token 443: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.2760675251483917
    2. ').' → logprob: -1.5260674953460693
    3. '.append' → logprob: -3.7760674953460693
    4. '.' → logprob: -7.026067733764648
    5. ']' → logprob: -11.776067733764648
    6. '.app' → logprob: -11.776067733764648
    7. '   ' → logprob: -12.026067733764648
    8. ')' → logprob: -12.151067733764648
    9. '           ' → logprob: -12.651067733764648
    10. '       ' → logprob: -13.401067733764648

Token 444: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. 'appen' → logprob: -15.875
    3. ' append' → logprob: -16.375
    4. 'app' → logprob: -16.625
    5. '.append' → logprob: -16.875
    6. '	append' → logprob: -20.875
    7. '```' → logprob: -21.5
    8. 'Append' → logprob: -23.25
    9. '_append' → logprob: -23.25
    10. 'appe' → logprob: -23.875

Token 445: '((' (ID: 2054)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.6240566083070007e-06
    2. ' (' → logprob: -14.125001907348633
    3. '((' → logprob: -14.500001907348633
    4. '(' → logprob: -15.250001907348633
    5. '(v' → logprob: -16.875001907348633
    6. '(
' → logprob: -17.750001907348633
    7. '(U' → logprob: -18.000001907348633
    8. '(user' → logprob: -19.375001907348633
    9. '(ui' → logprob: -19.375001907348633
    10. '(a' → logprob: -19.625001907348633

Token 446: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.011078591458499432
    2. '(u' → logprob: -4.511078357696533
    3. ' u' → logprob: -10.511078834533691
    4. ' (' → logprob: -13.511078834533691
    5. '	u' → logprob: -13.886078834533691
    6. ',u' → logprob: -14.261078834533691
    7. '[u' → logprob: -14.886078834533691
    8. '   ' → logprob: -15.636078834533691
    9. ''u' → logprob: -16.261077880859375
    10. '
' → logprob: -17.261077880859375

Token 447: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.0005381396040320396
    2. ',' → logprob: -7.625538349151611
    3. ',(' → logprob: -10.250537872314453
    4. ',v' → logprob: -11.750537872314453
    5. ' ,' → logprob: -12.250537872314453
    6. ',u' → logprob: -13.750537872314453
    7. 'e' → logprob: -14.750537872314453
    8. ',
' → logprob: -15.250537872314453
    9. '(e' → logprob: -16.000537872314453
    10. ',g' → logprob: -16.875537872314453

Token 448: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007257204502820969
    2. ',u' → logprob: -5.132256984710693
    3. ',' → logprob: -7.132256984710693
    4. 'u' → logprob: -8.882257461547852
    5. '[u' → logprob: -9.007257461547852
    6. '][' → logprob: -9.507257461547852
    7. ',v' → logprob: -9.757257461547852
    8. ',[' → logprob: -10.507257461547852
    9. ',g' → logprob: -10.757257461547852
    10. '-' → logprob: -11.007257461547852

Token 449: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.7968066206085496e-05
    2. '[' → logprob: -10.500027656555176
    3. '
' → logprob: -16.125028610229492
    4. ' ' → logprob: -16.375028610229492
    5. '   ' → logprob: -17.000028610229492
    6. '```' → logprob: -17.000028610229492
    7. 'e' → logprob: -17.687528610229492
    8. '３' → logprob: -17.750028610229492
    9. '0' → logprob: -18.187528610229492
    10. '
' → logprob: -18.375028610229492

Token 450: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09167340397834778
    2. ']))' → logprob: -2.4666733741760254
    3. ')' → logprob: -6.841673374176025
    4. '])' → logprob: -7.466673374176025
    5. ')))' → logprob: -7.591673374176025
    6. ',' → logprob: -8.466673851013184
    7. ')])' → logprob: -8.591673851013184
    8. ')]' → logprob: -9.841673851013184
    9. ' ))' → logprob: -9.966673851013184
    10. '}))' → logprob: -10.091673851013184

Token 451: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.06242775171995163
    2. '   ' → logprob: -3.8124277591705322
    3. 'color' → logprob: -4.062427520751953
    4. '```' → logprob: -4.937427520751953
    5. 'stack' → logprob: -5.062427520751953
    6. 'from' → logprob: -6.062427520751953
    7. 'used' → logprob: -6.187427520751953
    8. ' visited' → logprob: -7.312427520751953
    9. 'v' → logprob: -7.562427520751953
    10. 'vis' → logprob: -7.812427520751953

Token 452: ' #' (ID: 1069)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.4181472063064575
    2. 'visited' → logprob: -1.4181472063064575
    3. 'color' → logprob: -2.668147087097168
    4. 'from' → logprob: -5.168147087097168
    5. 'stack' → logprob: -5.668147087097168
    6. 'vis' → logprob: -5.668147087097168
    7. 'checked' → logprob: -5.793147087097168
    8. 'seen' → logprob: -6.043147087097168
    9. 'parent' → logprob: -6.293147087097168
    10. 'visit' → logprob: -6.668147087097168

Token 453: ' find' (ID: 1646)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.8947975635528564
    2. 'visited' → logprob: -0.8947975635528564
    3. 'color' → logprob: -2.0197975635528564
    4. 'from' → logprob: -3.7697975635528564
    5. 'import' → logprob: -4.519797325134277
    6. 'seen' → logprob: -5.519797325134277
    7. 'stack' → logprob: -5.519797325134277
    8. 'parent' → logprob: -6.769797325134277
    9. 'vis' → logprob: -7.019797325134277
    10. 'depth' → logprob: -7.144797325134277

Token 454: ' bridges' (ID: 64592)
  Prédit: 'brid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'brid' → logprob: -0.34716254472732544
    2. ' bridges' → logprob: -2.0971624851226807
    3. 'visited' → logprob: -2.4721624851226807
    4. 'bridge' → logprob: -2.8471624851226807
    5. 'cut' → logprob: -4.47216272354126
    6. 'stack' → logprob: -5.47216272354126
    7. 'art' → logprob: -5.84716272354126
    8. 'used' → logprob: -5.97216272354126
    9. ' visited' → logprob: -6.34716272354126
    10. ' articulation' → logprob: -6.59716272354126

Token 455: ' in' (ID: 306)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7611877918243408
    2. 'time' → logprob: -1.8861877918243408
    3. '   ' → logprob: -2.011187791824341
    4. 'import' → logprob: -2.511187791824341
    5. 'tin' → logprob: -3.136187791824341
    6. 'low' → logprob: -3.511187791824341
    7. 'v' → logprob: -3.761187791824341
    8. 'stack' → logprob: -4.011187553405762
    9. 'ord' → logprob: -4.636187553405762
    10. 'timer' → logprob: -5.261187553405762

Token 456: ' this' (ID: 495)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.024195440113544464
    2. 'the' → logprob: -4.399195671081543
    3. ' g' → logprob: -4.649195671081543
    4. ' the' → logprob: -6.649195671081543
    5. 'graph' → logprob: -7.399195671081543
    6. ' graph' → logprob: -9.774195671081543
    7. '```' → logprob: -10.774195671081543
    8. '[g' → logprob: -11.399195671081543
    9. 'graphs' → logprob: -11.399195671081543
    10. 'comp' → logprob: -11.774195671081543

Token 457: ' graph' (ID: 7465)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.06766056269407272
    2. 'used' → logprob: -3.1926605701446533
    3. 'stack' → logprob: -4.192660331726074
    4. 'time' → logprob: -5.817660331726074
    5. 'vis' → logprob: -6.692660331726074
    6. 'def' → logprob: -6.942660331726074
    7. 'tin' → logprob: -7.442660331726074
    8. 'import' → logprob: -7.442660331726074
    9. 'low' → logprob: -8.192660331726074
    10. 'v' → logprob: -8.192660331726074

Token 458: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.564228355884552
    2. 'time' → logprob: -1.4392282962799072
    3. 'brid' → logprob: -2.8142282962799072
    4. 'timer' → logprob: -3.1892282962799072
    5. 'tin' → logprob: -3.8142282962799072
    6. 'low' → logprob: -4.314228534698486
    7. 'disc' → logprob: -4.439228534698486
    8. 'import' → logprob: -4.814228534698486
    9. 'stack' → logprob: -5.064228534698486
    10. 'used' → logprob: -5.189228534698486

Token 459: '   ' (ID: 271)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.03343001753091812
    2. 'timer' → logprob: -4.158430099487305
    3. 'tin' → logprob: -5.033430099487305
    4. '   ' → logprob: -5.908430099487305
    5. 'import' → logprob: -6.658430099487305
    6. 'order' → logprob: -6.783430099487305
    7. 'ord' → logprob: -7.283430099487305
    8. '    
' → logprob: -7.533430099487305
    9. 'depth' → logprob: -7.533430099487305
    10. 'num' → logprob: -7.783430099487305

Token 460: ' used' (ID: 2061)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.13269059360027313
    2. 'timer' → logprob: -2.382690668106079
    3. 'import' → logprob: -4.3826904296875
    4. 'tin' → logprob: -4.6326904296875
    5. 'ord' → logprob: -5.5076904296875
    6. 'order' → logprob: -6.0076904296875
    7. 'visited' → logprob: -7.1326904296875
    8. 'low' → logprob: -7.8826904296875
    9. 'depth' → logprob: -8.2576904296875
    10. 'stack' → logprob: -8.3826904296875

Token 461: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.14114011824131012
    2. ' =' → logprob: -2.1411402225494385
    3. '=' → logprob: -4.266139984130859
    4. ' =[' → logprob: -10.26613998413086
    5. '=[]' → logprob: -10.89113998413086
    6. '=set' → logprob: -11.39113998413086
    7. ',' → logprob: -12.51613998413086
    8. '=[[' → logprob: -13.26613998413086
    9. '=[]
' → logprob: -13.64113998413086
    10. '＝' → logprob: -14.14113998413086

Token 462: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.650518920039758e-06
    2. '0' → logprob: -12.750003814697266
    3. ' False' → logprob: -14.250003814697266
    4. '[' → logprob: -16.375003814697266
    5. '(False' → logprob: -19.625003814697266
    6. '-' → logprob: -20.625003814697266
    7. '=False' → logprob: -21.875003814697266
    8. 'false' → logprob: -23.375003814697266
    9. '.False' → logprob: -23.500003814697266
    10. ']' → logprob: -23.625003814697266

Token 463: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.003265765029937029
    2. ']' → logprob: -5.753265857696533
    3. ']*(' → logprob: -9.378265380859375
    4. '*' → logprob: -13.378265380859375
    5. 'for' → logprob: -14.128265380859375
    6. ']+' → logprob: -14.378265380859375
    7. ' for' → logprob: -14.503265380859375
    8. ' ]' → logprob: -16.128265380859375
    9. ')*' → logprob: -16.753265380859375
    10. '```' → logprob: -17.128265380859375

Token 464: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -6.153795766294934e-06
    2. 'len' → logprob: -12.500005722045898
    3. '(comp' → logprob: -13.000005722045898
    4. '(' → logprob: -16.5000057220459
    5. ' comp' → logprob: -18.2500057220459
    6. '(len' → logprob: -19.5000057220459
    7. '   ' → logprob: -21.2500057220459
    8. '	comp' → logprob: -21.6250057220459
    9. 'com' → logprob: -21.8750057220459
    10. 'Comp' → logprob: -22.6250057220459

Token 465: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -6.704273118884885e-07
    2. 'comp' → logprob: -15.000000953674316
    3. 'id' → logprob: -15.125000953674316
    4. 'ount' → logprob: -17.625
    5. 'cnt' → logprob: -18.125
    6. '_count' → logprob: -18.125
    7. ' count' → logprob: -19.5
    8. '```' → logprob: -20.0
    9. 'size' → logprob: -20.125
    10. '[count' → logprob: -20.25

Token 466: '
' (ID: 198)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.06340497732162476
    2. 'ord' → logprob: -3.5634050369262695
    3. 'depth' → logprob: -4.6884050369262695
    4. 'disc' → logprob: -4.8134050369262695
    5. 'time' → logprob: -5.1884050369262695
    6. 'order' → logprob: -5.8134050369262695
    7. '
' → logprob: -6.8134050369262695
    8. ',' → logprob: -6.9384050369262695
    9. 'stack' → logprob: -7.1884050369262695
    10. 'dist' → logprob: -7.1884050369262695

Token 467: '   ' (ID: 271)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.023419121280312538
    2. 'tin' → logprob: -4.02341890335083
    3. 'order' → logprob: -5.77341890335083
    4. 'low' → logprob: -6.64841890335083
    5. 'ids' → logprob: -8.273419380187988
    6. '   ' → logprob: -9.148419380187988
    7. 'disc' → logprob: -9.398419380187988
    8. 'in' → logprob: -10.023419380187988
    9. 'ords' → logprob: -10.023419380187988
    10. 'timer' → logprob: -10.023419380187988

Token 468: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' (adapté à ' ord') → logprob: -0.02085202932357788
    2. 'low' → logprob: -4.270852088928223
    3. 'tin' → logprob: -5.520852088928223
    4. 'order' → logprob: -6.520852088928223
    5. 'ids' → logprob: -8.020852088928223
    6. 'brid' → logprob: -9.270852088928223
    7. 'in' → logprob: -9.395852088928223
    8. 'timer' → logprob: -9.395852088928223
    9. 'pr' → logprob: -9.520852088928223
    10. 'depth' → logprob: -9.645852088928223

Token 469: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.14803020656108856
    2. '=[]' → logprob: -2.1480302810668945
    3. '=' → logprob: -4.0230302810668945
    4. '[' → logprob: -6.7730302810668945
    5. 'er' → logprob: -6.7730302810668945
    6. '=[]
' → logprob: -8.398030281066895
    7. '=[
' → logprob: -9.023030281066895
    8. 'in' → logprob: -9.273030281066895
    9. '=[]
' → logprob: -10.148030281066895
    10. '=[[' → logprob: -10.523030281066895

Token 470: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.639096970204264e-05
    2. '-comp' → logprob: -9.750096321105957
    3. '[-' → logprob: -10.250096321105957
    4. '[' → logprob: -13.000096321105957
    5. '-com' → logprob: -15.750096321105957
    6. '-size' → logprob: -16.250097274780273
    7. ' -' → logprob: -17.125097274780273
    8. 'None' → logprob: -17.250097274780273
    9. '-c' → logprob: -17.500097274780273
    10. '0' → logprob: -17.625097274780273

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. 'comp' → logprob: -12.125005722045898
    3. '-' → logprob: -16.8750057220459
    4. ' ' → logprob: -17.8750057220459
    5. '```' → logprob: -18.2500057220459
    6. ' comp' → logprob: -18.5000057220459
    7. ']' → logprob: -18.5000057220459
    8. '
' → logprob: -18.8750057220459
    9. '１' → logprob: -19.3750057220459
    10. '   ' → logprob: -19.5000057220459

Token 472: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18100373446941376
    2. ']*' → logprob: -1.8060036897659302
    3. ']
' → logprob: -7.181003570556641
    4. '   ' → logprob: -8.43100357055664
    5. ']*(' → logprob: -8.93100357055664
    6. '<|end|>' → logprob: -9.93100357055664
    7. ']+' → logprob: -10.18100357055664
    8. ',' → logprob: -11.43100357055664
    9. ']int' → logprob: -11.43100357055664
    10. ' ]' → logprob: -12.05600357055664

Token 473: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: 0.0
    2. ' comp' → logprob: -16.75
    3. '(comp' → logprob: -17.0
    4. 'len' → logprob: -20.25
    5. '	comp' → logprob: -20.25
    6. 'com' → logprob: -21.5
    7. '(' → logprob: -22.0
    8. '_comp' → logprob: -23.25
    9. '   ' → logprob: -23.375
    10. 'Comp' → logprob: -23.5

Token 474: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -8.804671233519912e-05
    2. 'ount' → logprob: -9.37508773803711
    3. 'comp' → logprob: -12.75008773803711
    4. 'id' → logprob: -15.87508773803711
    5. 'cost' → logprob: -18.62508773803711
    6. '   ' → logprob: -19.25008773803711
    7. 'c' → logprob: -19.37508773803711
    8. '[count' → logprob: -19.87508773803711
    9. '```' → logprob: -20.12508773803711
    10. '_count' → logprob: -20.25008773803711

Token 475: '
' (ID: 198)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -4.632542913896032e-05
    2. '_low' → logprob: -10.625046730041504
    3. ' low' → logprob: -11.250046730041504
    4. '低' → logprob: -12.875046730041504
    5. '-low' → logprob: -13.375046730041504
    6. 'Low' → logprob: -13.500046730041504
    7. '.low' → logprob: -13.750046730041504
    8. '(low' → logprob: -14.125046730041504
    9. 'lowest' → logprob: -14.125046730041504
    10. 'LOW' → logprob: -15.125046730041504

Token 476: '   ' (ID: 271)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -3.5954712075181305e-05
    2. '_low' → logprob: -11.125036239624023
    3. 'Low' → logprob: -11.750036239624023
    4. ' low' → logprob: -12.125036239624023
    5. '-low' → logprob: -12.750036239624023
    6. 'LOW' → logprob: -13.375036239624023
    7. '低' → logprob: -13.500036239624023
    8. '.low' → logprob: -13.750036239624023
    9. 'lowest' → logprob: -14.250036239624023
    10. '(low' → logprob: -15.500036239624023

Token 477: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -2.3676733690081164e-05
    2. '_low' → logprob: -11.62502384185791
    3. 'Low' → logprob: -12.37502384185791
    4. ' low' → logprob: -12.62502384185791
    5. 'lowest' → logprob: -13.00002384185791
    6. '-low' → logprob: -13.25002384185791
    7. 'LOW' → logprob: -13.62502384185791
    8. '.low' → logprob: -14.00002384185791
    9. '低' → logprob: -15.00002384185791
    10. 'visited' → logprob: -15.37502384185791

Token 478: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.00859862007200718
    2. '=' → logprob: -5.633598804473877
    3. '=[]' → logprob: -5.633598804473877
    4. ' =' → logprob: -6.758598804473877
    5. '=[]
' → logprob: -8.633598327636719
    6. '[' → logprob: -10.383598327636719
    7. ' =[' → logprob: -10.758598327636719
    8. '[-' → logprob: -11.633598327636719
    9. '=[]
' → logprob: -12.758598327636719
    10. '=-' → logprob: -13.008598327636719

Token 479: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07908762246370316
    2. '-comp' → logprob: -2.579087734222412
    3. '[-' → logprob: -9.079087257385254
    4. 'comp' → logprob: -9.704087257385254
    5. '-com' → logprob: -11.204087257385254
    6. '-c' → logprob: -12.704087257385254
    7. '-inf' → logprob: -13.079087257385254
    8. '[' → logprob: -13.454087257385254
    9. ' -' → logprob: -13.829087257385254
    10. 'ord' → logprob: -15.329087257385254

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'comp' → logprob: -16.5
    3. '```' → logprob: -17.0
    4. ' ' → logprob: -17.125
    5. '0' → logprob: -17.375
    6. '
' → logprob: -17.5
    7. '   ' → logprob: -18.8125
    8. '-' → logprob: -18.9375
    9. '１' → logprob: -19.0
    10. '100' → logprob: -19.1875

Token 481: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0011066367151215672
    2. '*' → logprob: -6.8761067390441895
    3. ']' → logprob: -9.751106262207031
    4. ']*(' → logprob: -11.751106262207031
    5. ')*' → logprob: -12.751106262207031
    6. '*i' → logprob: -13.876106262207031
    7. '```' → logprob: -14.001106262207031
    8. '*[' → logprob: -14.251106262207031
    9. '[' → logprob: -14.751106262207031
    10. '*num' → logprob: -15.251106262207031

Token 482: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: 0.0
    2. ' comp' → logprob: -17.25
    3. '(comp' → logprob: -17.875
    4. '	comp' → logprob: -19.625
    5. 'com' → logprob: -20.0
    6. '```' → logprob: -21.25
    7. '[' → logprob: -21.375
    8. '
' → logprob: -21.625
    9. '.comp' → logprob: -21.75
    10. '_comp' → logprob: -22.375

Token 483: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -7.896309739408025e-07
    2. 'ount' → logprob: -14.125000953674316
    3. 'comp' → logprob: -17.5
    4. 'check' → logprob: -17.875
    5. 'index' → logprob: -18.0
    6. '[' → logprob: -18.75
    7. 'id' → logprob: -18.75
    8. '[count' → logprob: -18.75
    9. '_count' → logprob: -19.5
    10. ' count' → logprob: -19.75

Token 484: '
' (ID: 198)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3824205696582794
    2. '   ' → logprob: -2.382420539855957
    3. 'stack' → logprob: -2.632420539855957
    4. ',' → logprob: -2.882420539855957
    5. 't' → logprob: -3.382420539855957
    6. '
' → logprob: -4.257420539855957
    7. 'd' → logprob: -4.882420539855957
    8. 'idx' → logprob: -5.007420539855957
    9. 'timer' → logprob: -5.007420539855957
    10. 'now' → logprob: -5.507420539855957

Token 485: '   ' (ID: 271)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.48134058713912964
    2. 'k' → logprob: -0.9813405871391296
    3. 'stack' → logprob: -5.856340408325195
    4. 'timer' → logprob: -6.106340408325195
    5. 'now' → logprob: -7.481340408325195
    6. '_time' → logprob: -7.606340408325195
    7. 'def' → logprob: -8.106340408325195
    8. 'cnt' → logprob: -8.856340408325195
    9. 't' → logprob: -8.981340408325195
    10. 'timestamp' → logprob: -9.606340408325195

Token 486: ' time' (ID: 1058)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06758178770542145
    2. 'time' (adapté à ' time') → logprob: -2.81758189201355
    3. 'timer' → logprob: -5.317581653594971
    4. 'now' → logprob: -7.942581653594971
    5. 'def' → logprob: -8.942582130432129
    6. '_time' → logprob: -10.192582130432129
    7. 'pos' → logprob: -10.317582130432129
    8. 'stack' → logprob: -10.317582130432129
    9. 'cnt' → logprob: -10.317582130432129
    10. 'timestamp' → logprob: -11.067582130432129

Token 487: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12715403735637665
    2. ' =' → logprob: -2.1271541118621826
    3. '   ' → logprob: -10.002154350280762
    4. '_' → logprob: -10.002154350280762
    5. '_=' → logprob: -10.252154350280762
    6. '_depth' → logprob: -11.252154350280762
    7. '	' → logprob: -11.627154350280762
    8. '_idx' → logprob: -11.627154350280762
    9. '=[]' → logprob: -12.002154350280762
    10. '_cnt' → logprob: -12.377154350280762

Token 488: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '[' → logprob: -18.5
    4. '-' → logprob: -19.875
    5. '０' → logprob: -20.0
    6. '[]' → logprob: -22.625
    7. '=' → logprob: -22.875
    8. '۰' → logprob: -22.875
    9. '```' → logprob: -24.25
    10. '   ' → logprob: -24.625

Token 489: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0736171305179596
    2. '   ' → logprob: -3.1986172199249268
    3. '
' → logprob: -3.8236172199249268
    4. ' def' → logprob: -5.823616981506348
    5. 'stack' → logprob: -5.948616981506348
    6. ' stack' → logprob: -6.198616981506348
    7. '```' → logprob: -8.698616981506348
    8. '	stack' → logprob: -9.073616981506348
    9. '_stack' → logprob: -9.323616981506348
    10. '    
' → logprob: -9.448616981506348

Token 490: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16871263086795807
    2. '   ' → logprob: -2.043712615966797
    3. '
' → logprob: -4.543712615966797
    4. ' def' → logprob: -4.918712615966797
    5. '```' → logprob: -4.918712615966797
    6. 'stack' → logprob: -9.293712615966797
    7. '    
' → logprob: -9.418712615966797
    8. ' stack' → logprob: -9.668712615966797
    9. ',' → logprob: -10.668712615966797
    10. '	def' → logprob: -10.793712615966797

Token 491: ' ans' (ID: 3345)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012120219180360436
    2. '
' → logprob: -7.251212120056152
    3. 'stack' → logprob: -8.001212120056152
    4. '   ' → logprob: -9.126212120056152
    5. ' def' → logprob: -10.626212120056152
    6. 'import' → logprob: -11.001212120056152
    7. '```' → logprob: -12.251212120056152
    8. '    
' → logprob: -12.501212120056152
    9. 'de' → logprob: -13.251212120056152
    10. ' stack' → logprob: -13.376212120056152

Token 492: '_set' (ID: 5451)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.555787980556488
    2. '=[]' → logprob: -1.1807880401611328
    3. ' =' → logprob: -2.680788040161133
    4. '=[' → logprob: -3.430788040161133
    5. '_' → logprob: -4.930788040161133
    6. '_edges' → logprob: -5.555788040161133
    7. '_=' → logprob: -6.430788040161133
    8. '=set' → logprob: -6.555788040161133
    9. '={}' → logprob: -6.930788040161133
    10. '_stack' → logprob: -7.430788040161133

Token 493: '=set' (ID: 166509)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16303378343582153
    2. '=set' → logprob: -1.9130337238311768
    3. '={}' → logprob: -6.163033962249756
    4. ' =' → logprob: -7.538033962249756
    5. '=[]' → logprob: -8.788033485412598
    6. 's' → logprob: -11.538033485412598
    7. '={' → logprob: -13.788033485412598
    8. '=new' → logprob: -14.038033485412598
    9. '={}
' → logprob: -14.038033485412598
    10. '={
' → logprob: -15.288033485412598

Token 494: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2471589798224159e-05
    2. '(' → logprob: -12.125012397766113
    3. '()
' → logprob: -12.250012397766113
    4. '()]' → logprob: -14.000012397766113
    5. '()}' → logprob: -15.125012397766113
    6. '([]' → logprob: -15.250012397766113
    7. '()\' → logprob: -15.500012397766113
    8. '(),' → logprob: -15.875012397766113
    9. '()<' → logprob: -16.25001335144043
    10. '())' → logprob: -16.25001335144043

Token 495: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7941235899925232
    2. '   ' → logprob: -0.9191235899925232
    3. ' def' → logprob: -2.169123649597168
    4. '
' → logprob: -3.419123649597168
    5. '```' → logprob: -6.669123649597168
    6. ' 
' → logprob: -8.294123649597168
    7. '    
' → logprob: -8.419123649597168
    8. '	def' → logprob: -8.919123649597168
    9. ',' → logprob: -10.294123649597168
    10. '<|end|>' → logprob: -10.419123649597168

Token 496: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0019900170154869556
    2. '   ' → logprob: -6.626989841461182
    3. ' def' → logprob: -7.376989841461182
    4. '
' → logprob: -10.25199031829834
    5. '    
' → logprob: -13.50199031829834
    6. '	def' → logprob: -14.00199031829834
    7. '```' → logprob: -15.12699031829834
    8. 'de' → logprob: -15.37699031829834
    9. ')' → logprob: -16.501989364624023
    10. ':def' → logprob: -16.751989364624023

Token 497: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -8.602024900028482e-05
    2. ' dfs' → logprob: -9.375085830688477
    3. 'bridge' → logprob: -14.625085830688477
    4. 'df' → logprob: -14.875085830688477
    5. '
' → logprob: -15.625085830688477
    6. 'd' → logprob: -17.375085830688477
    7. 'ds' → logprob: -18.000085830688477
    8. 'brid' → logprob: -18.250085830688477
    9. '

' → logprob: -18.375085830688477
    10. 'br' → logprob: -18.375085830688477

Token 498: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.3142344057559967
    2. '(u' → logprob: -1.3142343759536743
    3. '(node' → logprob: -7.064234256744385
    4. '(' → logprob: -9.314234733581543
    5. '(cur' → logprob: -12.189234733581543
    6. '(k' → logprob: -12.689234733581543
    7. '(s' → logprob: -12.689234733581543
    8. '(n' → logprob: -12.814234733581543
    9. '(x' → logprob: -12.814234733581543
    10. '(r' → logprob: -13.189234733581543

Token 499: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04376065731048584
    2. ',v' → logprob: -3.1687607765197754
    3. ',u' → logprob: -7.668760776519775
    4. ',k' → logprob: -9.293760299682617
    5. ',t' → logprob: -9.668760299682617
    6. ',d' → logprob: -10.043760299682617
    7. ',n' → logprob: -11.043760299682617
    8. ',int' → logprob: -11.293760299682617
    9. ',p' → logprob: -11.543760299682617
    10. ',b' → logprob: -12.168760299682617

Token 500: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2932456433773041
    2. ',v' → logprob: -1.9182456731796265
    3. ',u' → logprob: -2.293245553970337
    4. ',d' → logprob: -6.168245792388916
    5. ',int' → logprob: -6.793245792388916
    6. ',k' → logprob: -6.918245792388916
    7. ',t' → logprob: -7.043245792388916
    8. ',time' → logprob: -7.668245792388916
    9. ',c' → logprob: -8.918245315551758
    10. ' ,' → logprob: -9.293245315551758

Token 501: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09166958928108215
    2. '       ' → logprob: -3.0916695594787598
    3. '
' → logprob: -3.3416695594787598
    4. '    
' → logprob: -5.84166955947876
    5. ' ord' → logprob: -7.34166955947876
    6. '	time' → logprob: -7.46666955947876
    7. '[' → logprob: -8.091670036315918
    8. '    ' → logprob: -8.216670036315918
    9. ' time' → logprob: -8.341670036315918
    10. '	   ' → logprob: -8.466670036315918

Token 502: ' non' (ID: 2893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.20977783203125
    2. 'used' → logprob: -1.20977783203125
    3. 'non' (adapté à ' non') → logprob: -1.70977783203125
    4. 'ord' → logprob: -2.20977783203125
    5. 'global' → logprob: -2.33477783203125
    6. ' used' → logprob: -4.70977783203125
    7. ' ord' → logprob: -5.58477783203125
    8. ' non' → logprob: -5.95977783203125
    9. ' global' → logprob: -7.83477783203125
    10. '       ' → logprob: -9.33477783203125

Token 503: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.24660801887512207
    2. 'used' → logprob: -1.746608018875122
    3. '[' → logprob: -3.746608018875122
    4. 'v' → logprob: -5.371607780456543
    5. 'def' → logprob: -5.746607780456543
    6. '   ' → logprob: -5.996607780456543
    7. '_used' → logprob: -6.121607780456543
    8. '=' → logprob: -6.621607780456543
    9. '```' → logprob: -7.121607780456543
    10. 'locals' → logprob: -7.246607780456543

Token 504: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.3856492842023727e-06
    2. ' time' → logprob: -13.625000953674316
    3. 'ord' → logprob: -17.250001907348633
    4. '
' → logprob: -18.250001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '	time' → logprob: -20.625001907348633
    7. '"time' → logprob: -21.375001907348633
    8. 'tim' → logprob: -21.625001907348633
    9. 't' → logprob: -21.625001907348633
    10. 'ti' → logprob: -21.750001907348633

Token 505: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1070965826511383
    2. '
' → logprob: -2.8570966720581055
    3. 'used' → logprob: -4.1070966720581055
    4. ' used' → logprob: -4.6070966720581055
    5. 'ord' → logprob: -4.8570966720581055
    6. ' ord' → logprob: -5.4820966720581055
    7. ':
' → logprob: -6.3570966720581055
    8. 'time' → logprob: -6.4820966720581055
    9. '       ' → logprob: -6.8570966720581055
    10. ',' → logprob: -7.8570966720581055

Token 506: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5607803463935852
    2. '
' → logprob: -1.1857802867889404
    3. ' ord' → logprob: -3.1857802867889404
    4. ' 
' → logprob: -3.8107802867889404
    5. '    
' → logprob: -4.1857805252075195
    6. ' used' → logprob: -4.5607805252075195
    7. 'time' → logprob: -4.5607805252075195
    8. ' time' → logprob: -4.8107805252075195
    9. '  
' → logprob: -5.5607805252075195
    10. '	time' → logprob: -5.9357805252075195

Token 507: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.018167270347476006
    2. 'ord' → logprob: -4.018167495727539
    3. ' used' → logprob: -11.393167495727539
    4. '   ' → logprob: -12.768167495727539
    5. 'time' → logprob: -13.143167495727539
    6. ' ord' → logprob: -14.518167495727539
    7. 'visited' → logprob: -14.643167495727539
    8. 'ords' → logprob: -16.14316749572754
    9. 'non' → logprob: -16.76816749572754
    10. '       ' → logprob: -16.89316749572754

Token 508: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -12.375004768371582
    3. 'v' → logprob: -16.875003814697266
    4. ' [' → logprob: -18.250003814697266
    5. '```' → logprob: -18.375003814697266
    6. '<v' → logprob: -19.375003814697266
    7. '\[' → logprob: -19.875003814697266
    8. '	v' → logprob: -20.000003814697266
    9. '[V' → logprob: -20.000003814697266
    10. '[u' → logprob: -20.375003814697266

Token 509: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7326273322105408
    2. ']=' → logprob: -0.9826273322105408
    3. '=True' → logprob: -1.9826273918151855
    4. ']' → logprob: -4.9826273918151855
    5. ' =' → logprob: -7.8576273918151855
    6. '=true' → logprob: -10.607626914978027
    7. ')=' → logprob: -10.982626914978027
    8. '[' → logprob: -10.982626914978027
    9. '=
' → logprob: -11.357626914978027
    10. '=False' → logprob: -12.982626914978027

Token 510: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.1472419600977446e-06
    2. ' True' → logprob: -13.750000953674316
    3. 'true' → logprob: -20.375001907348633
    4. '   ' → logprob: -21.125001907348633
    5. '
' → logprob: -21.750001907348633
    6. ' ' → logprob: -22.000001907348633
    7. 'Tr' → logprob: -22.250001907348633
    8. '(True' → logprob: -22.375001907348633
    9. '1' → logprob: -22.625001907348633
    10. '  ' → logprob: -22.750001907348633

Token 511: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01745012030005455
    2. 'ord' → logprob: -4.267450332641602
    3. ' ord' → logprob: -5.892450332641602
    4. '   ' → logprob: -8.642450332641602
    5. ' 
' → logprob: -9.267450332641602
    6. '
' → logprob: -9.892450332641602
    7. 'time' → logprob: -10.142450332641602
    8. ',
' → logprob: -10.392450332641602
    9. '```' → logprob: -10.392450332641602
    10. '\n' → logprob: -10.517450332641602

Token 512: '       ' (ID: 309)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.11895151436328888
    2. '   ' → logprob: -2.3689515590667725
    3. ' ord' → logprob: -3.9939515590667725
    4. '       ' → logprob: -9.368951797485352
    5. 'for' → logprob: -11.243951797485352
    6. 'time' → logprob: -11.618951797485352
    7. '
' → logprob: -11.743951797485352
    8. '(ord' → logprob: -11.868951797485352
    9. '   ' → logprob: -12.118951797485352
    10. '```' → logprob: -12.618951797485352

Token 513: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' (adapté à ' ord') → logprob: -5.512236498361744e-07
    2. ' ord' → logprob: -14.500000953674316
    3. 'org' → logprob: -19.5
    4. '(ord' → logprob: -20.5
    5. 'ans' → logprob: -21.75
    6. 'order' → logprob: -21.875
    7. 'ords' → logprob: -22.125
    8. 'orde' → logprob: -22.125
    9. '   ' → logprob: -23.25
    10. 'ordin' → logprob: -23.375

Token 514: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -16.0
    3. '[' → logprob: -17.375
    4. '	v' → logprob: -18.5
    5. '=v' → logprob: -18.875
    6. '[u' → logprob: -19.5
    7. ',v' → logprob: -19.625
    8. ' v' → logprob: -19.875
    9. '<v' → logprob: -19.875
    10. ' [' → logprob: -20.125

Token 515: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.5492531061172485
    2. '=' → logprob: -0.9242531061172485
    3. ']' → logprob: -3.799252986907959
    4. ' =' → logprob: -6.424252986907959
    5. '=v' → logprob: -6.674252986907959
    6. '=time' → logprob: -8.299253463745117
    7. ')=' → logprob: -8.549253463745117
    8. ')' → logprob: -11.299253463745117
    9. ']=-' → logprob: -11.549253463745117
    10. '=
' → logprob: -11.924253463745117

Token 516: 'low' (ID: 14739)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -3.128163257315464e-07
    2. ' time' → logprob: -15.5
    3. 'ti' → logprob: -20.375
    4. '"time' → logprob: -21.625
    5. '=time' → logprob: -22.125
    6. '
' → logprob: -22.25
    7. '	time' → logprob: -22.625
    8. '0' → logprob: -23.75
    9. 'times' → logprob: -23.875
    10. 'tim' → logprob: -23.875

Token 517: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.1888679839321412e-05
    2. 'v' → logprob: -10.750021934509277
    3. 'time' → logprob: -15.250021934509277
    4. ' v' → logprob: -16.25002098083496
    5. '<v' → logprob: -17.87502098083496
    6. '[' → logprob: -17.87502098083496
    7. '	v' → logprob: -18.00002098083496
    8. '=v' → logprob: -18.37502098083496
    9. '```' → logprob: -18.37502098083496
    10. '(v' → logprob: -18.87502098083496

Token 518: ']=' (ID: 9539)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.07338066399097443
    2. ']' → logprob: -2.698380708694458
    3. 'v' → logprob: -5.698380470275879
    4. '[' → logprob: -10.573380470275879
    5. ']+' → logprob: -10.573380470275879
    6. ']=' → logprob: -11.573380470275879
    7. '<v' → logprob: -11.573380470275879
    8. '	v' → logprob: -12.573380470275879
    9. ' v' → logprob: -13.323380470275879
    10. '(v' → logprob: -13.448380470275879

Token 519: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.1472419600977446e-06
    2. ' time' → logprob: -13.750000953674316
    3. 'ti' → logprob: -21.000001907348633
    4. '=time' → logprob: -22.625001907348633
    5. '	time' → logprob: -22.750001907348633
    6. '
' → logprob: -22.750001907348633
    7. '"time' → logprob: -23.000001907348633
    8. 'tim' → logprob: -23.125001907348633
    9. '0' → logprob: -23.250001907348633
    10. 'timer' → logprob: -23.875001907348633

Token 520: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10186991095542908
    2. '+' → logprob: -2.351869821548462
    3. '<|end|>' → logprob: -6.726870059967041
    4. 'time' → logprob: -8.976869583129883
    5. '
' → logprob: -9.601869583129883
    6. '+
' → logprob: -9.726869583129883
    7. '+=' → logprob: -9.726869583129883
    8. '<|end|>' → logprob: -10.101869583129883
    9. '       ' → logprob: -10.976869583129883
    10. '   ' → logprob: -11.351869583129883

Token 521: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1644197255373001
    2. 'time' → logprob: -1.9144197702407837
    3. '+' → logprob: -6.289419651031494
    4. ' time' → logprob: -6.789419651031494
    5. '
' → logprob: -8.164420127868652
    6. '   ' → logprob: -8.289420127868652
    7. '\n' → logprob: -8.414420127868652
    8. '       ' → logprob: -9.039420127868652
    9. '	time' → logprob: -9.539420127868652
    10. '+
' → logprob: -9.664420127868652

Token 522: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.01293820608407259
    2. ' time' → logprob: -4.762938022613525
    3. '
' → logprob: -5.637938022613525
    4. '1' → logprob: -8.012938499450684
    5. '\n' → logprob: -8.637938499450684
    6. '+' → logprob: -9.137938499450684
    7. '```' → logprob: -10.262938499450684
    8. '   ' → logprob: -10.387938499450684
    9. '+=' → logprob: -11.387938499450684
    10. '\' → logprob: -11.387938499450684

Token 523: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0025913503486663103
    2. '+' → logprob: -6.627591133117676
    3. ' +=' → logprob: -6.752591133117676
    4. '=' → logprob: -9.252591133117676
    5. ']+=' → logprob: -15.002591133117676
    6. '+="' → logprob: -15.252591133117676
    7. '+='' → logprob: -15.502591133117676
    8. ' =' → logprob: -17.002592086791992
    9. '=time' → logprob: -17.252592086791992
    10. 'plus' → logprob: -17.502592086791992

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '
' → logprob: -22.125
    4. '１' → logprob: -22.375
    5. '   ' → logprob: -23.375
    6. '```' → logprob: -23.375
    7. '۱' → logprob: -24.375
    8. '+' → logprob: -25.5625
    9. '१' → logprob: -25.625
    10. '১' → logprob: -25.6875

Token 525: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8623749613761902
    2. ' for' → logprob: -1.237375020980835
    3. '	for' → logprob: -1.362375020980835
    4. 'for' → logprob: -3.487375020980835
    5. '       ' → logprob: -6.987374782562256
    6. '<|end|>' → logprob: -9.362375259399414
    7. '
' → logprob: -11.612375259399414
    8. ' ' → logprob: -11.862375259399414
    9. '```' → logprob: -11.862375259399414
    10. '   ' → logprob: -11.987375259399414

Token 526: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5920805931091309
    2. ' for' → logprob: -0.8420805931091309
    3. 'for' → logprob: -4.467080593109131
    4. '	for' → logprob: -5.592080593109131
    5. '       ' → logprob: -7.842080593109131
    6. '<|end|>' → logprob: -8.092081069946289
    7. '
' → logprob: -10.342081069946289
    8. '    
' → logprob: -10.967081069946289
    9. '```' → logprob: -10.967081069946289
    10. ' ' → logprob: -11.467081069946289

Token 527: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005530327325686812
    2. ' for' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.250553131103516
    4. '	for' → logprob: -17.250553131103516
    5. '
' → logprob: -20.750553131103516
    6. '```' → logprob: -21.500553131103516
    7. '    
' → logprob: -21.750553131103516
    8. '       ' → logprob: -22.375553131103516
    9. 'For' → logprob: -23.750553131103516
    10. ' ' → logprob: -24.000553131103516

Token 528: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.20739497244358063
    2. '(to' → logprob: -2.707395076751709
    3. '(u' → logprob: -3.207395076751709
    4. ' to' → logprob: -3.207395076751709
    5. 'u' → logprob: -3.457395076751709
    6. 'nv' → logprob: -5.707395076751709
    7. 'w' → logprob: -6.082395076751709
    8. ' u' → logprob: -7.082395076751709
    9. ' nv' → logprob: -7.582395076751709
    10. ',to' → logprob: -7.832395076751709

Token 529: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6177204251289368
    2. ',v' → logprob: -0.8677204251289368
    3. 'in' → logprob: -3.867720365524292
    4. ' ,' → logprob: -4.742720603942871
    5. ' in' → logprob: -4.992720603942871
    6. ',in' → logprob: -6.242720603942871
    7. ',
' → logprob: -7.117720603942871
    8. ',to' → logprob: -7.617720603942871
    9. '<|end|>' → logprob: -8.492720603942871
    10. ',u' → logprob: -8.492720603942871

Token 530: 'id' (ID: 315)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3432126045227051
    2. 'd' → logprob: -1.468212604522705
    3. '_idx' → logprob: -4.093212604522705
    4. ',' → logprob: -5.093212604522705
    5. 'idx' → logprob: -5.218212604522705
    6. 'id' → logprob: -5.593212604522705
    7. 'dge' → logprob: -5.593212604522705
    8. '```' → logprob: -5.718212604522705
    9. ' in' → logprob: -5.843212604522705
    10. 'g' → logprob: -5.843212604522705

Token 531: ' in' (ID: 306)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.7522855997085571
    2. ',' → logprob: -1.5022855997085571
    3. ' in' → logprob: -1.7522855997085571
    4. 'in' → logprob: -2.1272854804992676
    5. ',u' → logprob: -5.252285480499268
    6. ',in' → logprob: -6.002285480499268
    7. ',_' → logprob: -6.627285480499268
    8. ',e' → logprob: -6.627285480499268
    9. ' ,' → logprob: -6.877285480499268
    10. ',to' → logprob: -7.127285480499268

Token 532: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00017970333283301443
    2. ' g' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.625179290771484
    4. '	g' → logprob: -17.000179290771484
    5. '[g' → logprob: -17.750179290771484
    6. ' ' → logprob: -18.500179290771484
    7. '    ' → logprob: -18.625179290771484
    8. '
' → logprob: -18.625179290771484
    9. '(g' → logprob: -18.875179290771484
    10. '#g' → logprob: -19.875179290771484

Token 533: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.56233171664644e-05
    2. ',v' → logprob: -10.500055313110352
    3. 'v' → logprob: -11.000055313110352
    4. ':' → logprob: -12.750055313110352
    5. '[u' → logprob: -13.000055313110352
    6. '[' → logprob: -13.875055313110352
    7. ':v' → logprob: -14.375055313110352
    8. ',' → logprob: -14.750055313110352
    9. '```' → logprob: -14.750055313110352
    10. '	v' → logprob: -14.875055313110352

Token 534: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.7939857840538025
    2. '):
' → logprob: -1.0439858436584473
    3. ']:' → logprob: -2.2939858436584473
    4. '):' → logprob: -2.6689858436584473
    5. ':' → logprob: -4.043985843658447
    6. ':
' → logprob: -5.668985843658447
    7. ',' → logprob: -6.293985843658447
    8. '       ' → logprob: -6.668985843658447
    9. '   ' → logprob: -8.168985366821289
    10. '```' → logprob: -8.543985366821289

Token 535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006877460982650518
    2. ' if' → logprob: -5.506877422332764
    3. '       ' → logprob: -6.381877422332764
    4. '	       ' → logprob: -8.006877899169922
    5. '<|end|>' → logprob: -8.381877899169922
    6. 'if' → logprob: -8.506877899169922
    7. '               ' → logprob: -8.881877899169922
    8. '   ' → logprob: -9.756877899169922
    9. '
' → logprob: -9.881877899169922
    10. '            
' → logprob: -11.256877899169922

Token 536: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07918146252632141
    2. ' if' → logprob: -2.579181432723999
    3. '           ' → logprob: -8.329181671142578
    4. '               ' → logprob: -10.079181671142578
    5. '```' → logprob: -12.704181671142578
    6. '       ' → logprob: -13.079181671142578
    7. '	if' → logprob: -13.829181671142578
    8. '   ' → logprob: -14.079181671142578
    9. 'If' → logprob: -15.329181671142578
    10. '
' → logprob: -15.329181671142578

Token 537: ' eid' (ID: 131397)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.10995953530073166
    2. 'not' → logprob: -2.359959602355957
    3. ' not' → logprob: -5.734959602355957
    4. 'used' → logprob: -5.984959602355957
    5. 'ord' → logprob: -6.109959602355957
    6. ' to' → logprob: -6.484959602355957
    7. 'eid' → logprob: -9.234959602355957
    8. 'e' → logprob: -9.859959602355957
    9. ' used' → logprob: -10.734959602355957
    10. '!' → logprob: -11.109959602355957

Token 538: ' not' (ID: 625)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10753839462995529
    2. ' ==' → logprob: -2.6075384616851807
    3. '!=' → logprob: -3.7325384616851807
    4. ' !=' → logprob: -5.482538223266602
    5. ']==' → logprob: -9.482538223266602
    6. '==-' → logprob: -10.107538223266602
    7. ' not' → logprob: -11.607538223266602
    8. ')==' → logprob: -12.232538223266602
    9. '()==' → logprob: -12.482538223266602
    10. '!=-' → logprob: -12.607538223266602

Token 539: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1427910029888153
    2. ' in' → logprob: -2.0177910327911377
    3. '==' → logprob: -9.267790794372559
    4. 'used' → logprob: -12.017790794372559
    5. ' ==' → logprob: -12.142790794372559
    6. ')' → logprob: -13.517790794372559
    7. ' ' → logprob: -13.767790794372559
    8. '   ' → logprob: -13.892790794372559
    9. ']==' → logprob: -13.892790794372559
    10. '<|end|>' → logprob: -13.892790794372559

Token 540: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.350386295001954e-05
    2. 'used' → logprob: -10.000073432922363
    3. 'group' → logprob: -11.500073432922363
    4. ' ans' → logprob: -11.750073432922363
    5. '{' → logprob: -13.000073432922363
    6. 'ord' → logprob: -13.125073432922363
    7. '(ans' → logprob: -13.625073432922363
    8. 'set' → logprob: -13.875073432922363
    9. 'res' → logprob: -13.875073432922363
    10. 'visited' → logprob: -14.750073432922363

Token 541: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -1.6240566083070007e-06
    2. ')' → logprob: -14.250001907348633
    3. '_' → logprob: -14.250001907348633
    4. ')set' → logprob: -16.375001907348633
    5. '_sets' → logprob: -17.375001907348633
    6. 'set' → logprob: -17.375001907348633
    7. ':' → logprob: -17.500001907348633
    8. '_SET' → logprob: -17.750001907348633
    9. '_used' → logprob: -18.500001907348633
    10. '_Set' → logprob: -18.750001907348633

Token 542: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48011547327041626
    2. ':
' → logprob: -1.2301154136657715
    3. ' and' → logprob: -2.4801154136657715
    4. 'and' → logprob: -5.3551154136657715
    5. '           ' → logprob: -8.35511589050293
    6. '):
' → logprob: -9.35511589050293
    7. ':

' → logprob: -9.73011589050293
    8. '<|end|>' → logprob: -9.73011589050293
    9. '):' → logprob: -10.10511589050293
    10. ' :
' → logprob: -10.73011589050293

Token 543: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018812811467796564
    2. ' and' → logprob: -7.501881122589111
    3. ':
' → logprob: -8.00188159942627
    4. '<|end|>' → logprob: -8.12688159942627
    5. ' if' → logprob: -8.37688159942627
    6. '           ' → logprob: -8.50188159942627
    7. ' continue' → logprob: -9.87688159942627
    8. ':' → logprob: -10.00188159942627
    9. '       ' → logprob: -10.12688159942627
    10. '                   ' → logprob: -11.00188159942627

Token 544: ' pass' (ID: 1853)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2529352605342865
    2. ' if' → logprob: -1.5029352903366089
    3. '               ' → logprob: -7.627935409545898
    4. 'continue' → logprob: -7.877935409545898
    5. ' continue' → logprob: -9.752935409545898
    6. '                   ' → logprob: -10.127935409545898
    7. '           ' → logprob: -10.252935409545898
    8. '```' → logprob: -12.627935409545898
    9. '                ' → logprob: -14.127935409545898
    10. '   ' → logprob: -14.252935409545898

Token 545: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04856942966580391
    2. ' if' → logprob: -3.298569440841675
    3. '               ' → logprob: -5.298569202423096
    4. 'continue' → logprob: -5.423569202423096
    5. '           ' → logprob: -7.673569202423096
    6. '                   ' → logprob: -7.923569202423096
    7. ' continue' → logprob: -8.548569679260254
    8. '<|end|>' → logprob: -11.798569679260254
    9. ';if' → logprob: -11.923569679260254
    10. '   ' → logprob: -12.048569679260254

Token 546: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007405600044876337
    2. ' if' → logprob: -5.507405757904053
    3. 'continue' → logprob: -6.632405757904053
    4. '           ' → logprob: -6.882405757904053
    5. '               ' → logprob: -7.007405757904053
    6. '                   ' → logprob: -9.882405281066895
    7. ' continue' → logprob: -11.507405281066895
    8. '   ' → logprob: -12.882405281066895
    9. '```' → logprob: -12.882405281066895
    10. '                       ' → logprob: -13.632405281066895

Token 547: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004678497789427638
    2. 'continue' → logprob: -8.000468254089355
    3. '           ' → logprob: -9.750468254089355
    4. ' if' → logprob: -10.125468254089355
    5. '               ' → logprob: -10.625468254089355
    6. '                   ' → logprob: -11.875468254089355
    7. '   ' → logprob: -13.500468254089355
    8. '```' → logprob: -14.875468254089355
    9. '       ' → logprob: -15.500468254089355
    10. ' continue' → logprob: -15.625468254089355

Token 548: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0854419395327568
    2. 'not' → logprob: -2.710441827774048
    3. 'ord' → logprob: -5.085442066192627
    4. ' ord' → logprob: -5.835442066192627
    5. ' used' → logprob: -5.835442066192627
    6. 'used' → logprob: -6.585442066192627
    7. ' to' → logprob: -6.835442066192627
    8. 'to' → logprob: -7.085442066192627
    9. 'ans' → logprob: -10.960441589355469
    10. ' ans' → logprob: -11.210441589355469

Token 549: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.03804149478673935
    2. ' used' → logprob: -3.288041591644287
    3. 'use' → logprob: -16.913042068481445
    4. ' ' → logprob: -17.288042068481445
    5. '   ' → logprob: -18.038042068481445
    6. '.used' → logprob: -18.038042068481445
    7. '_used' → logprob: -18.538042068481445
    8. ' ' → logprob: -18.663042068481445
    9. 'to' → logprob: -18.788042068481445
    10. '```' → logprob: -19.288042068481445

Token 550: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -5.5577775128767826e-06
    2. '[v' → logprob: -12.625005722045898
    3. '[' → logprob: -13.125005722045898
    4. ' [' → logprob: -15.625005722045898
    5. '(to' → logprob: -17.2500057220459
    6. 'to' → logprob: -18.6250057220459
    7. '   ' → logprob: -18.7500057220459
    8. '[next' → logprob: -18.8750057220459
    9. '[now' → logprob: -19.0000057220459
    10. '[from' → logprob: -19.2500057220459

Token 551: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3880353271961212
    2. ':
' → logprob: -1.1380352973937988
    3. ']:
' → logprob: -7.763035297393799
    4. '):
' → logprob: -8.513035774230957
    5. ']:' → logprob: -8.888035774230957
    6. ' and' → logprob: -9.138035774230957
    7. '           ' → logprob: -9.763035774230957
    8. 'and' → logprob: -10.138035774230957
    9. '():
' → logprob: -10.263035774230957
    10. ':

' → logprob: -10.263035774230957

Token 552: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013602360850200057
    2. ' dfs' → logprob: -7.3763604164123535
    3. '           ' → logprob: -8.126359939575195
    4. ':
' → logprob: -9.126359939575195
    5. 'dfs' → logprob: -9.126359939575195
    6. '                
' → logprob: -10.376359939575195
    7. '                   ' → logprob: -10.376359939575195
    8. '              ' → logprob: -10.751359939575195
    9. '                ' → logprob: -11.001359939575195
    10. '       ' → logprob: -11.126359939575195

Token 553: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.01740901544690132
    2. '               ' → logprob: -4.392408847808838
    3. ' dfs' → logprob: -5.642408847808838
    4. 'ans' → logprob: -7.392408847808838
    5. '                   ' → logprob: -7.517408847808838
    6. '   ' → logprob: -9.642409324645996
    7. '           ' → logprob: -10.017409324645996
    8. 'if' → logprob: -11.017409324645996
    9. '                ' → logprob: -11.642409324645996
    10. '```' → logprob: -11.892409324645996

Token 554: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.000006675720215
    3. '(
' → logprob: -14.750006675720215
    4. 'to' → logprob: -16.62500762939453
    5. '(To' → logprob: -17.00000762939453
    6. ' (' → logprob: -17.25000762939453
    7. ',to' → logprob: -17.25000762939453
    8. '[to' → logprob: -19.25000762939453
    9. '(the' → logprob: -20.12500762939453
    10. '(from' → logprob: -20.12500762939453

Token 555: ',v' (ID: 30680)
  Prédit: ',to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',to' → logprob: -0.7264067530632019
    2. '(to' → logprob: -0.9764067530632019
    3. ',' → logprob: -1.9764068126678467
    4. 'to' → logprob: -8.351407051086426
    5. ' ,' → logprob: -8.476407051086426
    6. ')' → logprob: -8.476407051086426
    7. ' (' → logprob: -8.601407051086426
    8. '               ' → logprob: -9.101407051086426
    9. ',(' → logprob: -9.601407051086426
    10. ')(' → logprob: -9.726407051086426

Token 556: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1602519452571869
    2. ')
' → logprob: -1.9102519750595093
    3. ',' → logprob: -11.53525161743164
    4. ');' → logprob: -12.91025161743164
    5. '),' → logprob: -13.16025161743164
    6. ')
' → logprob: -13.28525161743164
    7. ')v' → logprob: -13.53525161743164
    8. ')

' → logprob: -13.66025161743164
    9. '):
' → logprob: -13.78525161743164
    10. ');
' → logprob: -13.78525161743164

Token 557: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0060036866925656796
    2. '```' → logprob: -6.1310038566589355
    3. '
' → logprob: -6.8810038566589355
    4. '                   ' → logprob: -7.6310038566589355
    5. 'low' → logprob: -7.7560038566589355
    6. '           ' → logprob: -8.006003379821777
    7. ' if' → logprob: -8.131003379821777
    8. '<|end|>' → logprob: -8.256003379821777
    9. '              ' → logprob: -8.381003379821777
    10. ' low' → logprob: -8.631003379821777

Token 558: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.0011974901426583529
    2. 'if' → logprob: -6.751197338104248
    3. ' low' → logprob: -11.376197814941406
    4. '               ' → logprob: -12.251197814941406
    5. '
' → logprob: -12.501197814941406
    6. '           ' → logprob: -12.751197814941406
    7. '                   ' → logprob: -13.126197814941406
    8. '   ' → logprob: -13.251197814941406
    9. '       ' → logprob: -15.501197814941406
    10. '                       ' → logprob: -15.876197814941406

Token 559: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0010561492526903749
    2. 'v' → logprob: -6.87605619430542
    3. '=v' → logprob: -11.876055717468262
    4. '=' → logprob: -12.376055717468262
    5. ' =' → logprob: -13.251055717468262
    6. '[min' → logprob: -13.251055717468262
    7. 'min' → logprob: -13.501055717468262
    8. '<v' → logprob: -13.626055717468262
    9. '[' → logprob: -13.751055717468262
    10. '_v' → logprob: -14.126055717468262

Token 560: ']=' (ID: 9539)
  Prédit: '=min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=min' → logprob: -0.03910280764102936
    2. '=' → logprob: -4.039103031158447
    3. ' =' → logprob: -4.164103031158447
    4. '[min' → logprob: -6.039103031158447
    5. '=max' → logprob: -6.164103031158447
    6. ']=' → logprob: -7.664103031158447
    7. 'min' → logprob: -9.289102554321289
    8. ')=' → logprob: -9.539102554321289
    9. ',min' → logprob: -10.664102554321289
    10. ')' → logprob: -10.914102554321289

Token 561: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.306760805164231e-05
    2. ' min' → logprob: -11.25001335144043
    3. '	min' → logprob: -17.75001335144043
    4. '(min' → logprob: -19.00001335144043
    5. 'low' → logprob: -19.50001335144043
    6. 'max' → logprob: -19.62501335144043
    7. ',min' → logprob: -20.50001335144043
    8. '[min' → logprob: -20.50001335144043
    9. '.min' → logprob: -20.62501335144043
    10. '_min' → logprob: -21.25001335144043

Token 562: '(low' (ID: 119835)
  Prédit: '(low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -1.0325924449716695e-05
    2. 'low' → logprob: -12.00001049041748
    3. '(' → logprob: -12.50001049041748
    4. '(
' → logprob: -14.75001049041748
    5. '(lower' → logprob: -17.625009536743164
    6. ' low' → logprob: -19.500009536743164
    7. '(

' → logprob: -22.000009536743164
    8. ' (' → logprob: -22.000009536743164
    9. '(
' → logprob: -22.625009536743164
    10. '(lo' → logprob: -22.875009536743164

Token 563: '[v' (ID: 36561)
  Prédit: '(low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.00013798571308143437
    2. '[' → logprob: -9.750138282775879
    3. 'low' → logprob: -9.875138282775879
    4. '(' → logprob: -11.250138282775879
    5. '(
' → logprob: -11.375138282775879
    6. ' low' → logprob: -13.375138282775879
    7. '[
' → logprob: -13.625138282775879
    8. '([' → logprob: -14.750138282775879
    9. '(v' → logprob: -15.750138282775879
    10. '.low' → logprob: -15.875138282775879

Token 564: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004254219587892294
    2. 'low' → logprob: -5.754254341125488
    3. ',to' → logprob: -8.004254341125488
    4. ' ,' → logprob: -8.504254341125488
    5. '[' → logprob: -8.504254341125488
    6. '],' → logprob: -8.879254341125488
    7. '[to' → logprob: -9.129254341125488
    8. ',[' → logprob: -10.254254341125488
    9. ' low' → logprob: -11.004254341125488
    10. 'to' → logprob: -11.879254341125488

Token 565: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -2.15310683415737e-05
    2. ' low' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.50002098083496
    4. '
' → logprob: -18.25002098083496
    5. '(low' → logprob: -18.62502098083496
    6. '  ' → logprob: -19.87502098083496
    7. '           ' → logprob: -20.00002098083496
    8. '.low' → logprob: -20.62502098083496
    9. '       ' → logprob: -20.75002098083496
    10. '低' → logprob: -20.87502098083496

Token 566: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.0005992617807351053
    2. 'to' → logprob: -7.500599384307861
    3. '(to' → logprob: -10.250598907470703
    4. '[v' → logprob: -11.750598907470703
    5. 'v' → logprob: -12.750598907470703
    6. ',to' → logprob: -16.375598907470703
    7. '```' → logprob: -17.250598907470703
    8. 'To' → logprob: -17.375598907470703
    9. '
' → logprob: -18.750598907470703
    10. '   ' → logprob: -18.875598907470703

Token 567: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019335162360221148
    2. ')
' → logprob: -6.251933574676514
    3. ' )' → logprob: -12.376933097839355
    4. ')

' → logprob: -15.751933097839355
    5. ' )
' → logprob: -16.501934051513672
    6. ')return' → logprob: -16.626934051513672
    7. ')</' → logprob: -16.751934051513672
    8. ')
' → logprob: -16.751934051513672
    9. ')v' → logprob: -16.751934051513672
    10. ')#' → logprob: -16.876934051513672

Token 568: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23667854070663452
    2. ' if' → logprob: -1.9866786003112793
    3. '```' → logprob: -2.9866786003112793
    4. 'if' → logprob: -3.8616786003112793
    5. '
' → logprob: -7.236678600311279
    6. '           ' → logprob: -7.861678600311279
    7. 'else' → logprob: -8.111678123474121
    8. '``' → logprob: -8.736678123474121
    9. '                   ' → logprob: -8.986678123474121
    10. ' else' → logprob: -9.236678123474121

Token 569: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005638765869662166
    2. '               ' → logprob: -7.750564098358154
    3. ' if' → logprob: -9.000563621520996
    4. '                   ' → logprob: -12.125563621520996
    5. '```' → logprob: -13.000563621520996
    6. '
' → logprob: -13.625563621520996
    7. '           ' → logprob: -14.125563621520996
    8. '``' → logprob: -17.000564575195312
    9. '                ' → logprob: -17.250564575195312
    10. ';if' → logprob: -17.375564575195312

Token 570: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0011755822924897075
    2. ' low' → logprob: -6.751175403594971
    3. '(low' → logprob: -12.376175880432129
    4. '
' → logprob: -14.251175880432129
    5. 'ord' → logprob: -15.376175880432129
    6. ' ' → logprob: -16.376174926757812
    7. '   ' → logprob: -16.626174926757812
    8. '.low' → logprob: -18.501174926757812
    9. '    
' → logprob: -18.876174926757812
    10. '```' → logprob: -19.126174926757812

Token 571: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.0019311357755213976
    2. '[v' → logprob: -6.251931190490723
    3. 'to' → logprob: -13.626931190490723
    4. '[u' → logprob: -14.751931190490723
    5. ' [' → logprob: -15.126931190490723
    6. '[' → logprob: -15.251931190490723
    7. 'v' → logprob: -16.001930236816406
    8. '[e' → logprob: -16.126930236816406
    9. '(to' → logprob: -16.501930236816406
    10. '```' → logprob: -16.626930236816406

Token 572: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8341066241264343
    2. ']>' → logprob: -1.084106683731079
    3. ']' → logprob: -1.959106683731079
    4. ' >' → logprob: -2.834106683731079
    5. '[v' → logprob: -3.709106683731079
    6. '[' → logprob: -6.5841064453125
    7. ' ]' → logprob: -7.3341064453125
    8. ']==' → logprob: -7.5841064453125
    9. '>[' → logprob: -8.9591064453125
    10. '```' → logprob: -8.9591064453125

Token 573: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -5.848420551046729e-05
    2. ' ord' → logprob: -9.7500581741333
    3. '(ord' → logprob: -15.8750581741333
    4. 'org' → logprob: -17.125059127807617
    5. '   ' → logprob: -17.625059127807617
    6. '
' → logprob: -18.625059127807617
    7. 'orb' → logprob: -19.750059127807617
    8. ' ' → logprob: -20.000059127807617
    9. '_ord' → logprob: -20.000059127807617
    10. 'ordinal' → logprob: -20.250059127807617

Token 574: '[v' (ID: 36561)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.693159818649292
    2. '[v' → logprob: -0.693159818649292
    3. ' v' → logprob: -12.068160057067871
    4. '	v' → logprob: -12.443160057067871
    5. '(v' → logprob: -13.318160057067871
    6. '   ' → logprob: -14.818160057067871
    7. ')v' → logprob: -14.943160057067871
    8. '```' → logprob: -15.943160057067871
    9. '<v' → logprob: -16.068159103393555
    10. '
' → logprob: -16.193159103393555

Token 575: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5394554734230042
    2. '):' → logprob: -1.5394554138183594
    3. '):
' → logprob: -1.9144554138183594
    4. ']:
' → logprob: -3.2894554138183594
    5. ':' → logprob: -4.664455413818359
    6. '       ' → logprob: -6.039455413818359
    7. '           ' → logprob: -6.164455413818359
    8. ':
' → logprob: -6.914455413818359
    9. ']):' → logprob: -7.539455413818359
    10. '               ' → logprob: -7.664455413818359

Token 576: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13424859941005707
    2. ' ans' → logprob: -2.8842484951019287
    3. 'ans' → logprob: -3.1342484951019287
    4. '
' → logprob: -4.009248733520508
    5. '               ' → logprob: -5.509248733520508
    6. '```' → logprob: -6.134248733520508
    7. '                       ' → logprob: -7.509248733520508
    8. '   ' → logprob: -7.759248733520508
    9. '           ' → logprob: -8.134248733520508
    10. '	ans' → logprob: -9.134248733520508

Token 577: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0007487560505978763
    2. ' ans' → logprob: -7.250748634338379
    3. '
' → logprob: -10.625748634338379
    4. '                   ' → logprob: -11.250748634338379
    5. '	ans' → logprob: -13.875748634338379
    6. 'res' → logprob: -16.000749588012695
    7. '               ' → logprob: -16.250749588012695
    8. '(ans' → logprob: -16.375749588012695
    9. 'answer' → logprob: -16.625749588012695
    10. '   ' → logprob: -16.750749588012695

Token 578: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -7.896309739408025e-07
    2. 'set' → logprob: -15.125000953674316
    3. '_SET' → logprob: -15.375000953674316
    4. 'Set' → logprob: -15.375000953674316
    5. '_sets' → logprob: -17.375
    6. '_Set' → logprob: -17.5
    7. '_' → logprob: -18.25
    8. ')set' → logprob: -18.375
    9. '=set' → logprob: -18.625
    10. '```' → logprob: -18.75

Token 579: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -4.320199877838604e-07
    2. ' .' → logprob: -15.75
    3. '.' → logprob: -15.875
    4. 'add' → logprob: -16.0
    5. '
' → logprob: -18.625
    6. '	add' → logprob: -18.75
    7. '<|end|>' → logprob: -18.75
    8. '=' → logprob: -19.0
    9. ')add' → logprob: -19.125
    10. ').' → logprob: -19.25

Token 580: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: 0.0
    2. '((' → logprob: -17.5
    3. 'eid' → logprob: -18.125
    4. '(ans' → logprob: -19.25
    5. '	e' → logprob: -19.875
    6. '(' → logprob: -20.0
    7. ' eid' → logprob: -20.125
    8. ' (' → logprob: -21.125
    9. '(
' → logprob: -21.375
    10. '(ed' → logprob: -22.625

Token 581: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.9027791495318525e-05
    2. 'd' → logprob: -11.000019073486328
    3. '[id' → logprob: -14.000019073486328
    4. '_id' → logprob: -15.375019073486328
    5. 'eid' → logprob: -15.375019073486328
    6. '(id' → logprob: -15.500019073486328
    7. ')' → logprob: -16.125019073486328
    8. '_set' → logprob: -16.500019073486328
    9. '[' → logprob: -16.500019073486328
    10. 's' → logprob: -16.750019073486328

Token 582: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002100965939462185
    2. ')
' → logprob: -8.50020980834961
    3. ' )' → logprob: -13.25020980834961
    4. '<|end|>' → logprob: -13.37520980834961
    5. ')return' → logprob: -14.12520980834961
    6. '               ' → logprob: -14.25020980834961
    7. '       ' → logprob: -15.00020980834961
    8. '                   ' → logprob: -15.12520980834961
    9. ')#' → logprob: -15.50020980834961
    10. ')}}' → logprob: -15.75020980834961

Token 583: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037088620010763407
    2. '<|end|>' → logprob: -6.378708839416504
    3. '               ' → logprob: -6.753708839416504
    4. 'else' → logprob: -8.003708839416504
    5. '       ' → logprob: -8.128708839416504
    6. '```' → logprob: -9.753708839416504
    7. '          ' → logprob: -10.378708839416504
    8. 'elif' → logprob: -10.628708839416504
    9. ' else' → logprob: -10.753708839416504
    10. '            ' → logprob: -11.003708839416504

Token 584: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25753289461135864
    2. 'elif' (adapté à ' elif') → logprob: -2.132532835006714
    3. '           ' → logprob: -2.882532835006714
    4. ' else' → logprob: -3.382532835006714
    5. ' elif' → logprob: -4.382533073425293
    6. '       ' → logprob: -5.507533073425293
    7. 'if' → logprob: -6.882533073425293
    8. '               ' → logprob: -7.757533073425293
    9. ' if' → logprob: -8.382533073425293
    10. '```' → logprob: -8.632533073425293

Token 585: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.00317783304490149
    2. ' to' → logprob: -5.753177642822266
    3. '(to' → logprob: -16.003177642822266
    4. '```' → logprob: -18.753177642822266
    5. '               ' → logprob: -20.003177642822266
    6. '	to' → logprob: -20.128177642822266
    7. 'toc' → logprob: -20.253177642822266
    8. '   ' → logprob: -20.253177642822266
    9. '                   ' → logprob: -20.503177642822266
    10. '[to' → logprob: -20.628177642822266

Token 586: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0020091719925403595
    2. ' !=' → logprob: -6.252009391784668
    3. ']!=' → logprob: -10.127009391784668
    4. ')!=' → logprob: -10.627009391784668
    5. '()!=' → logprob: -11.502009391784668
    6. '!==' → logprob: -13.252009391784668
    7. '!=(' → logprob: -13.752009391784668
    8. 'v' → logprob: -14.127009391784668
    9. '```' → logprob: -14.252009391784668
    10. '!=-' → logprob: -14.377009391784668

Token 587: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.128163257315464e-07
    2. ' p' → logprob: -15.5
    3. '   ' → logprob: -18.875
    4. 'v' → logprob: -19.375
    5. 'parent' → logprob: -19.625
    6. '	p' → logprob: -21.25
    7. '<p' → logprob: -21.5
    8. '    ' → logprob: -21.625
    9. '           ' → logprob: -21.75
    10. ' ' → logprob: -21.75

Token 588: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05959561467170715
    2. ':' → logprob: -2.9345955848693848
    3. '               ' → logprob: -5.934595584869385
    4. 'and' → logprob: -7.059595584869385
    5. ' and' → logprob: -7.434595584869385
    6. '           ' → logprob: -7.934595584869385
    7. '<|end|>' → logprob: -9.809596061706543
    8. ':

' → logprob: -10.059596061706543
    9. ',' → logprob: -10.434596061706543
    10. '):
' → logprob: -10.684596061706543

Token 589: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11569979786872864
    2. 'low' → logprob: -2.7406997680664062
    3. ' low' → logprob: -3.1156997680664062
    4. '           ' → logprob: -8.740699768066406
    5. '                   ' → logprob: -9.240699768066406
    6. '              ' → logprob: -9.990699768066406
    7. '```' → logprob: -10.865699768066406
    8. '(low' → logprob: -11.240699768066406
    9. '                ' → logprob: -11.365699768066406
    10. '   ' → logprob: -11.365699768066406

Token 590: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -7.52919222577475e-05
    2. ' low' → logprob: -9.500075340270996
    3. '               ' → logprob: -14.875075340270996
    4. '                   ' → logprob: -17.25007438659668
    5. '           ' → logprob: -17.50007438659668
    6. '.low' → logprob: -19.50007438659668
    7. '   ' → logprob: -19.50007438659668
    8. '低' → logprob: -19.75007438659668
    9. '```' → logprob: -20.12507438659668
    10. '(low' → logprob: -20.25007438659668

Token 591: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.5451681974809617e-05
    2. '[to' → logprob: -11.125015258789062
    3. 'v' → logprob: -14.875015258789062
    4. '[' → logprob: -16.500015258789062
    5. '<v' → logprob: -16.875015258789062
    6. 'to' → logprob: -16.875015258789062
    7. '           ' → logprob: -17.125015258789062
    8. '               ' → logprob: -17.625015258789062
    9. '                   ' → logprob: -18.000015258789062
    10. '```' → logprob: -18.000015258789062

Token 592: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.579847514629364
    2. '[v' → logprob: -0.829847514629364
    3. '][' → logprob: -5.70484733581543
    4. ']' → logprob: -7.70484733581543
    5. '=' → logprob: -9.82984733581543
    6. '[' → logprob: -11.20484733581543
    7. '=v' → logprob: -11.45484733581543
    8. ']+=' → logprob: -11.45484733581543
    9. '[to' → logprob: -11.82984733581543
    10. ']==' → logprob: -11.95484733581543

Token 593: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.9361264946837764e-07
    2. ' min' → logprob: -16.25
    3. '	min' → logprob: -22.5
    4. 'max' → logprob: -22.875
    5. '.min' → logprob: -23.125
    6. '(min' → logprob: -23.25
    7. '[min' → logprob: -23.75
    8. ',min' → logprob: -23.875
    9. 'mini' → logprob: -24.0
    10. '=min' → logprob: -24.125

Token 594: '(low' (ID: 119835)
  Prédit: '(low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -8.061054359131958e-06
    2. 'low' → logprob: -11.750007629394531
    3. '(' → logprob: -15.750007629394531
    4. '(
' → logprob: -18.87500762939453
    5. ' low' → logprob: -19.12500762939453
    6. '(ord' → logprob: -19.25000762939453
    7. '```' → logprob: -19.37500762939453
    8. '(left' → logprob: -20.87500762939453
    9. '低' → logprob: -20.87500762939453
    10. '(lower' → logprob: -20.87500762939453

Token 595: '[v' (ID: 36561)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.07540007680654526
    2. '[v' → logprob: -2.8254001140594482
    3. '[' → logprob: -4.325399875640869
    4. 'low' → logprob: -9.325400352478027
    5. ' low' → logprob: -11.575400352478027
    6. 'to' → logprob: -11.825400352478027
    7. '(low' → logprob: -13.075400352478027
    8. '[top' → logprob: -13.575400352478027
    9. '(to' → logprob: -13.950400352478027
    10. '[
' → logprob: -14.450400352478027

Token 596: '],' (ID: 2155)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.013183883391320705
    2. ',to' → logprob: -4.763184070587158
    3. '],' → logprob: -5.513184070587158
    4. 'to' → logprob: -8.13818359375
    5. ',' → logprob: -8.51318359375
    6. '(to' → logprob: -11.13818359375
    7. '[v' → logprob: -11.88818359375
    8. '][' → logprob: -12.01318359375
    9. ']' → logprob: -13.13818359375
    10. '),' → logprob: -13.88818359375

Token 597: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -6.704273118884885e-07
    2. ' ord' → logprob: -14.250000953674316
    3. 'org' → logprob: -18.5
    4. '(ord' → logprob: -19.625
    5. 'orb' → logprob: -20.875
    6. '   ' → logprob: -22.25
    7. 'ordin' → logprob: -22.25
    8. '
' → logprob: -22.375
    9. 'ordinal' → logprob: -22.375
    10. 'ords' → logprob: -22.75

Token 598: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.3856492842023727e-06
    2. '(to' → logprob: -14.250000953674316
    3. '[v' → logprob: -14.750000953674316
    4. 'to' → logprob: -15.000000953674316
    5. ',to' → logprob: -18.250001907348633
    6. '
' → logprob: -19.500001907348633
    7. 'v' → logprob: -20.500001907348633
    8. '```' → logprob: -20.625001907348633
    9. '[' → logprob: -20.750001907348633
    10. ')' → logprob: -21.375001907348633

Token 599: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5762213468551636
    2. '])' → logprob: -0.8262213468551636
    3. ')
' → logprob: -8.951221466064453
    4. ')])' → logprob: -9.826221466064453
    5. ')]' → logprob: -10.826221466064453
    6. '])
' → logprob: -10.826221466064453
    7. ' )' → logprob: -10.826221466064453
    8. '<|end|>' → logprob: -11.826221466064453
    9. '})' → logprob: -12.451221466064453
    10. ']' → logprob: -12.451221466064453

Token 600: '   ' (ID: 271)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5832154154777527
    2. ' continue' → logprob: -1.7082154750823975
    3. '<|end|>' → logprob: -2.2082154750823975
    4. '                   ' → logprob: -2.4582154750823975
    5. '           ' → logprob: -3.8332154750823975
    6. '       ' → logprob: -3.9582154750823975
    7. 'continue' → logprob: -4.333215236663818
    8. '```' → logprob: -5.208215236663818
    9. ' else' → logprob: -6.333215236663818
    10. 'Continue' → logprob: -7.083215236663818

Token 601: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5878064632415771
    2. ' dfs' → logprob: -1.2128064632415771
    3. '       ' → logprob: -2.212806463241577
    4. 'dfs' → logprob: -3.962806463241577
    5. '           ' → logprob: -4.212806701660156
    6. ' ' → logprob: -6.962806701660156
    7. '```' → logprob: -7.212806701660156
    8. '                   ' → logprob: -7.837806701660156
    9. ' continue' → logprob: -7.962806701660156
    10. ' if' → logprob: -8.087806701660156

Token 602: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00018494461255613714
    2. ' v' → logprob: -8.875185012817383
    3. 'j' → logprob: -10.375185012817383
    4. 'x' → logprob: -11.875185012817383
    5. 'k' → logprob: -13.125185012817383
    6. 'u' → logprob: -13.250185012817383
    7. 's' → logprob: -13.875185012817383
    8. 'vv' → logprob: -13.875185012817383
    9. 'start' → logprob: -14.750185012817383
    10. 'ver' → logprob: -15.500185012817383

Token 603: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47408628463745117
    2. 'in' → logprob: -0.9740862846374512
    3. '0' → logprob: -12.84908676147461
    4. '   ' → logprob: -12.84908676147461
    5. 'range' → logprob: -12.97408676147461
    6. ' ' → logprob: -15.09908676147461
    7. '	in' → logprob: -15.34908676147461
    8. 'v' → logprob: -15.34908676147461
    9. 'In' → logprob: -15.72408676147461
    10. '  ' → logprob: -16.09908676147461

Token 604: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.339278580620885e-06
    2. ' range' → logprob: -13.000001907348633
    3. 'comp' → logprob: -19.375001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '(range' → logprob: -19.875001907348633
    6. '0' → logprob: -20.500001907348633
    7. '
' → logprob: -21.875001907348633
    8. 'r' → logprob: -22.375001907348633
    9. 'rang' → logprob: -22.625001907348633
    10. '	range' → logprob: -22.625001907348633

Token 605: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -4.60414821645827e-06
    2. 'comp' → logprob: -13.000004768371582
    3. '(' → logprob: -14.125004768371582
    4. ' comp' → logprob: -14.375004768371582
    5. '(
' → logprob: -14.875004768371582
    6. '   ' → logprob: -15.000004768371582
    7. '	comp' → logprob: -16.000003814697266
    8. '(len' → logprob: -16.750003814697266
    9. '(c' → logprob: -17.625003814697266
    10. ' (' → logprob: -18.250003814697266

Token 606: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -5.4192871175473556e-05
    2. 'ount' → logprob: -10.375054359436035
    3. '_count' → logprob: -11.000054359436035
    4. 'id' → logprob: -12.250054359436035
    5. 'comp' → logprob: -14.750054359436035
    6. '(count' → logprob: -14.750054359436035
    7. '   ' → logprob: -15.500054359436035
    8. 'cnt' → logprob: -15.625054359436035
    9. '[count' → logprob: -15.625054359436035
    10. 'Count' → logprob: -16.87505340576172

Token 607: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22641348838806152
    2. '):' → logprob: -1.6014134883880615
    3. ':' → logprob: -7.476413726806641
    4. '   ' → logprob: -8.60141372680664
    5. ':
' → logprob: -8.97641372680664
    6. ')' → logprob: -9.72641372680664
    7. '():
' → logprob: -10.72641372680664
    8. '       ' → logprob: -11.85141372680664
    9. '):
' → logprob: -11.97641372680664
    10. '<|end|>' → logprob: -12.47641372680664

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012999980710446835
    2. ' if' → logprob: -4.388000011444092
    3. '   ' → logprob: -8.762999534606934
    4. 'if' → logprob: -8.887999534606934
    5. '```' → logprob: -9.012999534606934
    6. '<|end|>' → logprob: -10.762999534606934
    7. '    ' → logprob: -11.262999534606934
    8. '     ' → logprob: -11.387999534606934
    9. '        
' → logprob: -12.012999534606934
    10. ',' → logprob: -12.637999534606934

Token 609: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6986923813819885
    2. ' if' → logprob: -0.6986923813819885
    3. '       ' → logprob: -5.198692321777344
    4. '	if' → logprob: -12.823692321777344
    5. '   ' → logprob: -13.573692321777344
    6. '```' → logprob: -13.823692321777344
    7. 'not' → logprob: -14.448692321777344
    8. ' not' → logprob: -14.948692321777344
    9. 'If' → logprob: -15.573692321777344
    10. '           ' → logprob: -16.698692321777344

Token 610: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3868763744831085
    2. ' not' → logprob: -1.1368763446807861
    3. 'used' → logprob: -12.511876106262207
    4. '   ' → logprob: -14.261876106262207
    5. '!' → logprob: -14.511876106262207
    6. '(not' → logprob: -15.136876106262207
    7. ' used' → logprob: -15.636876106262207
    8. '	not' → logprob: -18.136877059936523
    9. '```' → logprob: -18.886877059936523
    10. ':not' → logprob: -19.886877059936523

Token 611: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.03804149478673935
    2. ' used' → logprob: -3.288041591644287
    3. '.used' → logprob: -17.163042068481445
    4. '```' → logprob: -17.663042068481445
    5. '   ' → logprob: -18.038042068481445
    6. ' ' → logprob: -18.413042068481445
    7. '_used' → logprob: -18.788042068481445
    8. '-used' → logprob: -19.038042068481445
    9. '
' → logprob: -19.288042068481445
    10. 'Used' → logprob: -19.538042068481445

Token 612: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.1517960956552997e-05
    2. '(v' → logprob: -11.375011444091797
    3. '[' → logprob: -17.000011444091797
    4. ' [' → logprob: -18.000011444091797
    5. '```' → logprob: -18.750011444091797
    6. '[V' → logprob: -19.625011444091797
    7. '[i' → logprob: -19.750011444091797
    8. '[to' → logprob: -19.750011444091797
    9. '<v' → logprob: -19.875011444091797
    10. '[
' → logprob: -20.000011444091797

Token 613: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.09637393057346344
    2. ']:' → logprob: -2.471374034881592
    3. ':' → logprob: -5.846374034881592
    4. '():
' → logprob: -5.846374034881592
    5. ':
' → logprob: -6.596374034881592
    6. '):
' → logprob: -9.846373558044434
    7. ']:
' → logprob: -10.096373558044434
    8. ']' → logprob: -10.346373558044434
    9. ']:

' → logprob: -10.846373558044434
    10. '   ' → logprob: -10.846373558044434

Token 614: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1071094423532486
    2. ':
' → logprob: -2.857109546661377
    3. ':' → logprob: -3.482109546661377
    4. ' dfs' → logprob: -4.857109546661377
    5. '():
' → logprob: -5.732109546661377
    6. 'dfs' → logprob: -6.732109546661377
    7. '       ' → logprob: -7.482109546661377
    8. '(d' → logprob: -8.607109069824219
    9. '          ' → logprob: -9.607109069824219
    10. '():' → logprob: -9.982109069824219

Token 615: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.0015122429467737675
    2. ' dfs' → logprob: -6.501512050628662
    3. 'df' → logprob: -12.50151252746582
    4. '           ' → logprob: -12.62651252746582
    5. '       ' → logprob: -13.00151252746582
    6. '               ' → logprob: -14.62651252746582
    7. '   ' → logprob: -15.75151252746582
    8. 'dfa' → logprob: -17.25151252746582
    9. '
' → logprob: -18.00151252746582
    10. '```' → logprob: -18.37651252746582

Token 616: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.250005722045898
    3. ' (' → logprob: -14.250005722045898
    4. '(
' → logprob: -16.0000057220459
    5. 'v' → logprob: -17.0000057220459
    6. '
' → logprob: -17.6250057220459
    7. ')(' → logprob: -17.6250057220459
    8. ')' → logprob: -18.2500057220459
    9. ')v' → logprob: -18.2500057220459
    10. '```' → logprob: -18.8750057220459

Token 617: ',-' (ID: 8202)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4773487448692322
    2. ',v' → logprob: -0.9773487448692322
    3. ',' → logprob: -5.727348804473877
    4. ')v' → logprob: -12.602348327636719
    5. ' v' → logprob: -12.852348327636719
    6. '[v' → logprob: -12.977348327636719
    7. '(v' → logprob: -14.477348327636719
    8. ',
' → logprob: -14.602348327636719
    9. ')' → logprob: -14.602348327636719
    10. ' ,' → logprob: -15.227348327636719

Token 618: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '１' → logprob: -20.625
    4. '   ' → logprob: -22.125
    5. '
' → logprob: -22.625
    6. '

' → logprob: -23.25
    7. '```' → logprob: -25.125
    8. '  
' → logprob: -25.25
    9. '  ' → logprob: -25.25
    10. '2' → logprob: -25.25

Token 619: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.084206375409849e-05
    2. ')
' → logprob: -10.125041007995605
    3. '<|end|>' → logprob: -15.625041007995605
    4. ')#' → logprob: -16.00004005432129
    5. ')

' → logprob: -16.25004005432129
    6. ')v' → logprob: -16.62504005432129
    7. ')return' → logprob: -17.12504005432129
    8. ' )' → logprob: -17.25004005432129
    9. '))' → logprob: -17.25004005432129
    10. ')}}' → logprob: -17.62504005432129

Token 620: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7710289359092712
    2. 'for' → logprob: -1.146028995513916
    3. '   ' → logprob: -1.521028995513916
    4. 'uf' → logprob: -7.896028995513916
    5. '```' → logprob: -8.271028518676758
    6. ' uf' → logprob: -8.396028518676758
    7. '       ' → logprob: -9.896028518676758
    8. '           ' → logprob: -10.271028518676758
    9. '<|end|>' → logprob: -10.771028518676758
    10. ')' → logprob: -10.771028518676758

Token 621: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001104852301068604
    2. ' for' → logprob: -7.251104831695557
    3. '   ' → logprob: -7.876104831695557
    4. '```' → logprob: -11.251105308532715
    5. '       ' → logprob: -14.751105308532715
    6. '    
' → logprob: -15.126105308532715
    7. '
' → logprob: -15.251105308532715
    8. '	for' → logprob: -15.251105308532715
    9. 'uf' → logprob: -15.501105308532715
    10. '#' (adapté à ' #') → logprob: -15.501105308532715

Token 622: ' mark' (ID: 1983)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.386147626675665e-05
    2. '   ' → logprob: -10.000073432922363
    3. ' for' → logprob: -10.500073432922363
    4. '#' → logprob: -14.750073432922363
    5. 'edges' → logprob: -16.00007438659668
    6. '           ' → logprob: -16.12507438659668
    7. '       ' → logprob: -16.37507438659668
    8. '
' → logprob: -16.87507438659668
    9. '```' → logprob: -17.00007438659668
    10. 'uf' → logprob: -17.12507438659668

Token 623: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030535973608493805
    2. ' for' → logprob: -3.530535936355591
    3. '   ' → logprob: -7.15553617477417
    4. 'edges' → logprob: -13.030535697937012
    5. ' ' → logprob: -13.280535697937012
    6. ' edges' → logprob: -15.030535697937012
    7. '  ' → logprob: -15.655535697937012
    8. '```' → logprob: -16.155536651611328
    9. '	for' → logprob: -16.905536651611328
    10. '       ' → logprob: -16.905536651611328

Token 624: ' which' (ID: 1118)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0025864813942462206
    2. ' for' → logprob: -6.002586364746094
    3. '   ' → logprob: -9.127586364746094
    4. '```' → logprob: -13.502586364746094
    5. '[' → logprob: -15.252586364746094
    6. 'in' → logprob: -16.252586364746094
    7. 'as' → logprob: -16.377586364746094
    8. '       ' → logprob: -16.502586364746094
    9. '	for' → logprob: -16.627586364746094
    10. ' in' → logprob: -17.002586364746094

Token 625: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.5618038177490234
    2. 'connect' → logprob: -1.4368038177490234
    3. 'un' → logprob: -2.0618038177490234
    4. '   ' → logprob: -3.5618038177490234
    5. 'can' → logprob: -4.811803817749023
    6. ' are' → logprob: -4.936803817749023
    7. 'union' → logprob: -5.436803817749023
    8. 'were' → logprob: -6.061803817749023
    9. 'uf' → logprob: -6.436803817749023
    10. 'res' → logprob: -6.436803817749023

Token 626: ' bridges' (ID: 64592)
  Prédit: 'brid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'brid' → logprob: -0.18381242454051971
    2. 'in' → logprob: -2.558812379837036
    3. 'critical' → logprob: -3.183812379837036
    4. 'used' → logprob: -3.683812379837036
    5. 'bridge' → logprob: -4.558812618255615
    6. 'part' → logprob: -4.933812618255615
    7. 'necessary' → logprob: -6.308812618255615
    8. 'important' → logprob: -6.433812618255615
    9. ' bridges' → logprob: -7.183812618255615
    10. 'included' → logprob: -7.683812618255615

Token 627: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16101251542568207
    2. '   ' → logprob: -1.9110125303268433
    3. ' for' → logprob: -7.161012649536133
    4. '```' → logprob: -11.911012649536133
    5. '       ' → logprob: -12.786012649536133
    6. '	for' → logprob: -13.411012649536133
    7. '    
' → logprob: -15.536012649536133
    8. '
' → logprob: -15.911012649536133
    9. '``' → logprob: -15.911012649536133
    10. ' ' → logprob: -16.161012649536133

Token 628: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015223652124404907
    2. '   ' → logprob: -4.265223503112793
    3. ' for' → logprob: -6.890223503112793
    4. '```' → logprob: -10.140223503112793
    5. '	for' → logprob: -13.515223503112793
    6. '``' → logprob: -14.265223503112793
    7. '       ' → logprob: -15.515223503112793
    8. '
' → logprob: -15.640223503112793
    9. ' ' → logprob: -16.89022445678711
    10. '  ' → logprob: -17.01522445678711

Token 629: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.1398757123970427e-05
    2. '   ' → logprob: -11.500011444091797
    3. ' for' → logprob: -13.625011444091797
    4. '```' → logprob: -17.000011444091797
    5. '	for' → logprob: -20.875011444091797
    6. '
' → logprob: -21.500011444091797
    7. '``' → logprob: -21.750011444091797
    8. ' ' → logprob: -22.000011444091797
    9. '       ' → logprob: -22.125011444091797
    10. 'For' → logprob: -23.250011444091797

Token 630: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0016432845732197165
    2. 'c' → logprob: -7.376643180847168
    3. ' e' → logprob: -7.376643180847168
    4. '_,' → logprob: -9.001643180847168
    5. 'u' → logprob: -9.251643180847168
    6. '(_,' → logprob: -10.001643180847168
    7. '(c' → logprob: -10.376643180847168
    8. '(e' → logprob: -10.501643180847168
    9. '   ' → logprob: -10.751643180847168
    10. 'v' → logprob: -11.626643180847168

Token 631: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5762245655059814
    2. ' in' → logprob: -0.8262245655059814
    3. 'e' → logprob: -9.451224327087402
    4. ',' → logprob: -9.701224327087402
    5. ',e' → logprob: -9.826224327087402
    6. '   ' → logprob: -10.701224327087402
    7. ' ' → logprob: -11.201224327087402
    8. '```' → logprob: -11.326224327087402
    9. 'group' → logprob: -12.451224327087402
    10. '  ' → logprob: -12.701224327087402

Token 632: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -9.865583706414327e-05
    2. ' group' → logprob: -9.25009822845459
    3. 'edges' → logprob: -13.50009822845459
    4. 'ans' → logprob: -14.75009822845459
    5. '[group' → logprob: -15.25009822845459
    6. '   ' → logprob: -16.250099182128906
    7. 'g' → logprob: -16.375099182128906
    8. 'range' → logprob: -16.500099182128906
    9. 'e' → logprob: -16.875099182128906
    10. '"group' → logprob: -17.125099182128906

Token 633: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1895950585603714
    2. ':
' → logprob: -2.5645949840545654
    3. '       ' → logprob: -3.6895949840545654
    4. 'in' → logprob: -3.8145949840545654
    5. '   ' → logprob: -3.8145949840545654
    6. ':' → logprob: -4.0645952224731445
    7. ',' → logprob: -5.4395952224731445
    8. '[' → logprob: -6.4395952224731445
    9. ' if' → logprob: -6.4395952224731445
    10. ' as' → logprob: -7.5645952224731445

Token 634: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25997990369796753
    2. '       ' → logprob: -1.5099799633026123
    3. '```' → logprob: -4.884979724884033
    4. ' if' → logprob: -7.884979724884033
    5. '<|end|>' → logprob: -10.509980201721191
    6. '``' → logprob: -11.134980201721191
    7. 'if' → logprob: -11.634980201721191
    8. '           ' → logprob: -12.134980201721191
    9. '[' → logprob: -12.384980201721191
    10. ' ' → logprob: -12.634980201721191

Token 635: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01556631363928318
    2. '       ' → logprob: -4.765566349029541
    3. '   ' → logprob: -5.015566349029541
    4. ' if' → logprob: -8.265565872192383
    5. '           ' → logprob: -10.890565872192383
    6. '	if' → logprob: -11.015565872192383
    7. '```' → logprob: -14.015565872192383
    8. ' ' → logprob: -15.890565872192383
    9. '    
' → logprob: -16.265565872192383
    10. '        
' → logprob: -16.390565872192383

Token 636: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.726595241460018e-05
    2. '=sys' → logprob: -10.50003719329834
    3. ' =' → logprob: -12.12503719329834
    4. '=
' → logprob: -13.00003719329834
    5. '_=' → logprob: -15.50003719329834
    6. '=`' → logprob: -15.50003719329834
    7. '=tf' → logprob: -15.62503719329834
    8. 'if' → logprob: -15.87503719329834
    9. '=_' → logprob: -16.000038146972656
    10. '=

' → logprob: -16.000038146972656

Token 637: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -9.400689305039123e-05
    2. ' uf' → logprob: -9.875094413757324
    3. '=' → logprob: -10.125094413757324
    4. 'e' → logprob: -13.500094413757324
    5. 'ufs' → logprob: -14.875094413757324
    6. '.uf' → logprob: -16.375093460083008
    7. 'ut' → logprob: -16.375093460083008
    8. '   ' → logprob: -16.625093460083008
    9. '[' → logprob: -16.625093460083008
    10. ' =' → logprob: -17.000093460083008

Token 638: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.681871235370636
    2. 'find' → logprob: -0.806871235370636
    3. '[' → logprob: -3.306871175765991
    4. '=find' → logprob: -5.30687141418457
    5. '```' → logprob: -6.05687141418457
    6. '=' → logprob: -6.55687141418457
    7. '   ' → logprob: -7.30687141418457
    8. '_find' → logprob: -7.55687141418457
    9. ' find' → logprob: -7.93187141418457
    10. 'e' → logprob: -8.43187141418457

Token 639: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -5.512236498361744e-07
    2. 'e' → logprob: -15.000000953674316
    3. '[e' → logprob: -16.125
    4. '(' → logprob: -16.75
    5. '(a' → logprob: -17.125
    6. ' (' → logprob: -17.75
    7. '(
' → logprob: -19.0
    8. ',e' → logprob: -20.0
    9. '```' → logprob: -20.5
    10. '   ' → logprob: -20.625

Token 640: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002096197713399306
    2. '(e' → logprob: -8.87520980834961
    3. '[e' → logprob: -10.37520980834961
    4. '(' → logprob: -10.87520980834961
    5. ')[' → logprob: -12.62520980834961
    6. 'e' → logprob: -12.62520980834961
    7. '][' → logprob: -12.87520980834961
    8. '   ' → logprob: -13.12520980834961
    9. '```' → logprob: -13.25020980834961
    10. '(a' → logprob: -13.75020980834961

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '[' → logprob: -15.875001907348633
    5. '(' → logprob: -16.000001907348633
    6. 'e' → logprob: -16.375001907348633
    7. '2' → logprob: -16.750001907348633
    8. '       ' → logprob: -16.812501907348633
    9. '
' → logprob: -17.687501907348633
    10. '     ' → logprob: -17.750001907348633

Token 642: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4682118892669678
    2. ')
' → logprob: -1.2182118892669678
    3. '])' → logprob: -2.9682118892669678
    4. '])
' → logprob: -3.8432118892669678
    5. '       ' → logprob: -5.718212127685547
    6. '[' → logprob: -6.843212127685547
    7. '),' → logprob: -8.343212127685547
    8. ')]' → logprob: -8.718212127685547
    9. ']' → logprob: -9.718212127685547
    10. ')[' → logprob: -9.843212127685547

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011480901390314102
    2. 'b' → logprob: -4.886480808258057
    3. ' b' → logprob: -5.636480808258057
    4. '   ' → logprob: -8.261481285095215
    5. ' if' → logprob: -10.886481285095215
    6. ' ' → logprob: -11.261481285095215
    7. 'if' → logprob: -12.011481285095215
    8. '           ' → logprob: -12.761481285095215
    9. ',b' → logprob: -13.761481285095215
    10. '	b' → logprob: -15.011481285095215

Token 644: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.008634308353066444
    2. ' b' → logprob: -4.758634090423584
    3. '       ' → logprob: -10.883634567260742
    4. '           ' → logprob: -14.133634567260742
    5. '	b' → logprob: -16.008634567260742
    6. '   ' → logprob: -16.133634567260742
    7. ' if' → logprob: -17.758634567260742
    8. 'if' → logprob: -18.133634567260742
    9. '>b' → logprob: -19.133634567260742
    10. ',b' → logprob: -19.508634567260742

Token 645: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000721487682312727
    2. '==' → logprob: -7.375721454620361
    3. '=e' → logprob: -9.50072193145752
    4. '=f' → logprob: -12.50072193145752
    5. '=a' → logprob: -12.62572193145752
    6. '=self' → logprob: -12.87572193145752
    7. '=sys' → logprob: -13.50072193145752
    8. '!=' → logprob: -13.62572193145752
    9. '[' → logprob: -13.87572193145752
    10. '```' → logprob: -14.00072193145752

Token 646: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -2.935296834039036e-06
    2. ' uf' → logprob: -12.75000286102295
    3. 'ufs' → logprob: -18.875003814697266
    4. 'ub' → logprob: -20.125003814697266
    5. 'af' → logprob: -20.500003814697266
    6. '.uf' → logprob: -20.875003814697266
    7. 'ug' → logprob: -21.375003814697266
    8. 'uff' → logprob: -21.500003814697266
    9. 'ufa' → logprob: -21.625003814697266
    10. 'ut' → logprob: -22.000003814697266

Token 647: '.find' (ID: 4231)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22639332711696625
    2. 'uf' → logprob: -2.226393222808838
    3. '[' → logprob: -3.726393222808838
    4. '.find' → logprob: -3.976393222808838
    5. 'find' → logprob: -4.351393222808838
    6. 'def' → logprob: -4.726393222808838
    7. 'e' → logprob: -5.101393222808838
    8. '=find' → logprob: -5.226393222808838
    9. '=e' → logprob: -5.476393222808838
    10. '.uf' → logprob: -5.476393222808838

Token 648: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0006008113850839436
    2. 'e' → logprob: -7.500600814819336
    3. '[e' → logprob: -10.250600814819336
    4. 'b' → logprob: -12.000600814819336
    5. '(a' → logprob: -12.750600814819336
    6. 'a' → logprob: -13.000600814819336
    7. '(' → logprob: -14.500600814819336
    8. '(b' → logprob: -14.500600814819336
    9. ' e' → logprob: -16.375600814819336
    10. ' (' → logprob: -17.000600814819336

Token 649: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -11.000021934509277
    3. '   ' → logprob: -13.375021934509277
    4. '2' → logprob: -13.625021934509277
    5. '```' → logprob: -14.500021934509277
    6. 'e' → logprob: -15.000021934509277
    7. '[e' → logprob: -15.000021934509277
    8. '(e' → logprob: -15.125021934509277
    9. '][' → logprob: -16.00002098083496
    10. '       ' → logprob: -16.37502098083496

Token 650: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.625000953674316
    3. '[' → logprob: -15.375000953674316
    4. '   ' → logprob: -15.500000953674316
    5. '```' → logprob: -15.625000953674316
    6. '1' → logprob: -16.250001907348633
    7. '
' → logprob: -17.625001907348633
    8. '(' → logprob: -18.125001907348633
    9. '  ' → logprob: -18.375001907348633
    10. '２' → logprob: -18.500001907348633

Token 651: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.9495576620101929
    2. '])' → logprob: -1.1995576620101929
    3. ')' → logprob: -1.8245576620101929
    4. '])
' → logprob: -1.9495576620101929
    5. '       ' → logprob: -5.574557781219482
    6. '):
' → logprob: -6.324557781219482
    7. ')]' → logprob: -6.824557781219482
    8. ']==' → logprob: -8.324557304382324
    9. ']
' → logprob: -8.449557304382324
    10. ')]
' → logprob: -8.574557304382324

Token 652: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002037368481978774
    2. '```' → logprob: -6.502037525177002
    3. ' if' → logprob: -8.002037048339844
    4. '   ' → logprob: -9.877037048339844
    5. '<|end|>' → logprob: -9.877037048339844
    6. 'if' → logprob: -10.002037048339844
    7. '           ' → logprob: -10.627037048339844
    8. '
' → logprob: -11.252037048339844
    9. ' ' → logprob: -12.502037048339844
    10. '        
' → logprob: -13.127037048339844

Token 653: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1634431630373001
    2. ' if' → logprob: -2.288443088531494
    3. 'if' (adapté à ' if') → logprob: -3.038443088531494
    4. '```' → logprob: -6.663443088531494
    5. '   ' → logprob: -9.288443565368652
    6. '           ' → logprob: -9.913443565368652
    7. 'u' → logprob: -11.538443565368652
    8. '
' → logprob: -12.663443565368652
    9. '``' → logprob: -12.788443565368652
    10. '<|end|>' → logprob: -12.913443565368652

Token 654: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7686406373977661
    2. 'uf' → logprob: -1.6436406373977661
    3. ' uf' → logprob: -2.1436405181884766
    4. 'e' → logprob: -2.1436405181884766
    5. ' a' → logprob: -2.8936405181884766
    6. '(' → logprob: -4.268640518188477
    7. ' e' → logprob: -4.393640518188477
    8. ' (' → logprob: -4.518640518188477
    9. '(a' → logprob: -5.268640518188477
    10. '(e' → logprob: -5.518640518188477

Token 655: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0011367622064426541
    2. '==' → logprob: -7.251136779785156
    3. 'not' → logprob: -8.376136779785156
    4. ' !=' → logprob: -8.751136779785156
    5. ']!=' → logprob: -11.376136779785156
    6. '()!=' → logprob: -11.501136779785156
    7. ')!=' → logprob: -12.126136779785156
    8. ' not' → logprob: -12.251136779785156
    9. '```' → logprob: -13.001136779785156
    10. 'if' → logprob: -13.751136779785156

Token 656: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.128163257315464e-07
    2. ' b' → logprob: -16.25
    3. 'e' → logprob: -16.625
    4. 'uf' → logprob: -18.875
    5. '=b' → logprob: -19.375
    6. '```' → logprob: -19.375
    7. '   ' → logprob: -19.75
    8. '
' → logprob: -20.125
    9. '=' → logprob: -20.25
    10. 'a' → logprob: -20.5

Token 657: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12811000645160675
    2. '           ' → logprob: -2.253109931945801
    3. ':
' → logprob: -4.378109931945801
    4. ':' → logprob: -6.753109931945801
    5. 'and' → logprob: -6.878109931945801
    6. '       ' → logprob: -8.1281099319458
    7. '               ' → logprob: -10.1281099319458
    8. '   ' → logprob: -10.7531099319458
    9. '):
' → logprob: -11.2531099319458
    10. '          ' → logprob: -11.2531099319458

Token 658: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.000156577822053805
    2. ' e' → logprob: -8.87515640258789
    3. 'edges' → logprob: -11.75015640258789
    4. '       ' → logprob: -12.75015640258789
    5. '           ' → logprob: -13.25015640258789
    6. '   ' → logprob: -13.50015640258789
    7. '(e' → logprob: -13.62515640258789
    8. 'res' → logprob: -14.62515640258789
    9. ' edges' → logprob: -15.37515640258789
    10. '        ' → logprob: -16.25015640258789

Token 659: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.612634362885728e-05
    2. ' in' → logprob: -11.625076293945312
    3. '   ' → logprob: -11.875076293945312
    4. '3' → logprob: -11.875076293945312
    5. ' not' → logprob: -12.000076293945312
    6. 's' → logprob: -12.125076293945312
    7. ''s' → logprob: -12.375076293945312
    8. 'e' → logprob: -12.500076293945312
    9. '...' → logprob: -12.875076293945312
    10. 'def' → logprob: -13.000076293945312

Token 660: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.988221684878226e-06
    2. '[' → logprob: -12.125006675720215
    3. '
' → logprob: -14.875006675720215
    4. '2' → logprob: -15.000006675720215
    5. '```' → logprob: -15.000006675720215
    6. ' ' → logprob: -16.12500762939453
    7. '``' → logprob: -16.43750762939453
    8. ']' → logprob: -16.62500762939453
    9. '   ' → logprob: -16.68750762939453
    10. '۳' → logprob: -18.12500762939453

Token 661: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1808166205883026
    2. 'in' → logprob: -2.055816650390625
    3. ')' → logprob: -3.305816650390625
    4. ']' → logprob: -7.680816650390625
    5. ' not' → logprob: -9.180816650390625
    6. ' )' → logprob: -9.680816650390625
    7. ' ' → logprob: -9.680816650390625
    8. '   ' → logprob: -10.805816650390625
    9. 'not' → logprob: -11.430816650390625
    10. '	in' → logprob: -11.930816650390625

Token 662: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5760130286216736
    2. 'in' → logprob: -0.8260130286216736
    3. ' not' → logprob: -9.82601261138916
    4. 'not' → logprob: -11.07601261138916
    5. ' ' → logprob: -13.20101261138916
    6. '
' → logprob: -13.70101261138916
    7. '	in' → logprob: -14.82601261138916
    8. '   ' → logprob: -15.07601261138916
    9. ')' → logprob: -15.32601261138916
    10. '  ' → logprob: -16.076013565063477

Token 663: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.128163257315464e-07
    2. ' ans' → logprob: -15.25
    3. '(ans' → logprob: -20.125
    4. '	ans' → logprob: -20.25
    5. '   ' → logprob: -21.25
    6. 'answer' → logprob: -22.375
    7. 'ann' → logprob: -23.75
    8. '_ans' → logprob: -24.0
    9. '
' → logprob: -24.625
    10. '           ' → logprob: -24.875

Token 664: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: 0.0
    2. 'set' → logprob: -18.5
    3. '_SET' → logprob: -18.625
    4. '_Set' → logprob: -19.375
    5. ')set' → logprob: -19.375
    6. 'Set' → logprob: -19.5
    7. '_sets' → logprob: -20.125
    8. '_' → logprob: -20.5
    9. ')' → logprob: -21.125
    10. '```' → logprob: -21.375

Token 665: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03185104951262474
    2. ':' → logprob: -4.531850814819336
    3. '           ' → logprob: -4.531850814819336
    4. '       ' → logprob: -4.781850814819336
    5. '=' → logprob: -7.031850814819336
    6. '==' → logprob: -8.031850814819336
    7. '):
' → logprob: -9.656850814819336
    8. ' =' → logprob: -9.781850814819336
    9. ' and' → logprob: -9.906850814819336
    10. '   ' → logprob: -10.406850814819336

Token 666: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19165268540382385
    2. '       ' → logprob: -1.9416526556015015
    3. ' res' → logprob: -3.816652774810791
    4. '```' → logprob: -5.691652774810791
    5. 'res' → logprob: -5.816652774810791
    6. '   ' → logprob: -6.566652774810791
    7. ':
' → logprob: -7.566652774810791
    8. '               ' → logprob: -8.691652297973633
    9. '``' → logprob: -8.941652297973633
    10. ',' → logprob: -9.066652297973633

Token 667: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -2.2842308680992573e-05
    2. ' res' → logprob: -11.000022888183594
    3. '           ' → logprob: -12.750022888183594
    4. '               ' → logprob: -13.500022888183594
    5. '   ' → logprob: -13.750022888183594
    6. '       ' → logprob: -14.250022888183594
    7. '	res' → logprob: -18.750022888183594
    8. '```' → logprob: -19.250022888183594
    9. '
' → logprob: -19.500022888183594
    10. ' ' → logprob: -20.000022888183594

Token 668: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -11.375011444091797
    3. '```' → logprob: -16.250011444091797
    4. ' [' → logprob: -17.750011444091797
    5. '\[' → logprob: -17.750011444091797
    6. 'e' → logprob: -19.000011444091797
    7. '[
' → logprob: -19.125011444091797
    8. '   ' → logprob: -19.875011444091797
    9. '[a' → logprob: -19.875011444091797
    10. '
' → logprob: -19.875011444091797

Token 669: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010235115041723475
    2. '[e' → logprob: -9.625102043151855
    3. 'e' → logprob: -11.625102043151855
    4. '   ' → logprob: -12.125102043151855
    5. 'id' → logprob: -12.875102043151855
    6. '][' → logprob: -12.875102043151855
    7. 's' → logprob: -13.125102043151855
    8. '       ' → logprob: -13.375102043151855
    9. ']' → logprob: -13.375102043151855
    10. '-' → logprob: -13.625102043151855

Token 670: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.000003814697266
    3. ' ' → logprob: -15.000003814697266
    4. '   ' → logprob: -15.250003814697266
    5. ']' → logprob: -15.500003814697266
    6. '```' → logprob: -16.000003814697266
    7. '-' → logprob: -17.000003814697266
    8. '       ' → logprob: -17.000003814697266
    9. '
' → logprob: -17.562503814697266
    10. '۳' → logprob: -17.750003814697266

Token 671: ']]=' (ID: 192551)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.018150178715586662
    2. ']' → logprob: -4.018150329589844
    3. '=True' → logprob: -16.518150329589844
    4. '']=' → logprob: -16.643150329589844
    5. '=' → logprob: -17.643150329589844
    6. ' ]' → logprob: -17.768150329589844
    7. ')=' → logprob: -17.768150329589844
    8. '"]=' → logprob: -17.893150329589844
    9. ']+=' → logprob: -18.393150329589844
    10. ']==' → logprob: -18.393150329589844

Token 672: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: 0.0
    2. ' True' → logprob: -17.5
    3. '1' → logprob: -17.625
    4. '   ' → logprob: -19.375
    5. '=True' → logprob: -19.625
    6. '(True' → logprob: -19.75
    7. 'False' → logprob: -20.875
    8. 'true' → logprob: -21.125
    9. '           ' → logprob: -21.5
    10. '"' → logprob: -21.625

Token 673: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023430418223142624
    2. '   ' → logprob: -3.773430347442627
    3. ' for' → logprob: -8.648430824279785
    4. 'uf' → logprob: -12.398430824279785
    5. '```' → logprob: -12.398430824279785
    6. '    
' → logprob: -14.523430824279785
    7. '       ' → logprob: -15.148430824279785
    8. '
' → logprob: -16.27342987060547
    9. '	for' → logprob: -16.52342987060547
    10. '           ' → logprob: -17.02342987060547

Token 674: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03659813106060028
    2. 'uf' → logprob: -3.6615982055664062
    3. '```' → logprob: -5.286598205566406
    4. '   ' → logprob: -5.536598205566406
    5. ' for' → logprob: -6.786598205566406
    6. '``' → logprob: -9.411598205566406
    7. ' uf' → logprob: -11.286598205566406
    8. '       ' → logprob: -11.786598205566406
    9. '           ' → logprob: -13.161598205566406
    10. 'un' → logprob: -13.286598205566406

Token 675: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009955588728189468
    2. 'uf' → logprob: -5.259955406188965
    3. ' for' → logprob: -5.634955406188965
    4. '   ' → logprob: -6.884955406188965
    5. '```' → logprob: -9.384955406188965
    6. ' uf' → logprob: -10.509955406188965
    7. '``' → logprob: -13.134955406188965
    8. 'Union' → logprob: -13.884955406188965
    9. 'union' → logprob: -14.634955406188965
    10. 'ur' → logprob: -15.134955406188965

Token 676: ' unite' (ID: 96146)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.999452772201039e-05
    2. '   ' → logprob: -10.625029563903809
    3. ' for' → logprob: -12.125029563903809
    4. 'uf' → logprob: -15.875029563903809
    5. '       ' → logprob: -16.375030517578125
    6. '           ' → logprob: -18.750030517578125
    7. '```' → logprob: -18.875030517578125
    8. '#' → logprob: -20.000030517578125
    9. '	for' → logprob: -20.000030517578125
    10. '               ' → logprob: -20.125030517578125

Token 677: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20672722160816193
    2. 'e' → logprob: -1.7067272663116455
    3. ' for' → logprob: -6.206727027893066
    4. '(e' → logprob: -6.456727027893066
    5. 'edge' → logprob: -7.081727027893066
    6. '   ' → logprob: -8.081727027893066
    7. ' e' → logprob: -9.081727027893066
    8. '[e' → logprob: -9.081727027893066
    9. 'edges' → logprob: -9.206727027893066
    10. 'uf' → logprob: -9.706727027893066

Token 678: ' edges' (ID: 22569)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3600712716579437
    2. 'for' → logprob: -1.3600713014602661
    3. '(e' → logprob: -3.2350711822509766
    4. '[e' → logprob: -5.735071182250977
    5. 'edges' → logprob: -6.860071182250977
    6. 'edge' → logprob: -6.860071182250977
    7. '   ' → logprob: -7.860071182250977
    8. ' for' → logprob: -8.110071182250977
    9. ' e' → logprob: -9.485071182250977
    10. 'a' → logprob: -9.485071182250977

Token 679: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03949204832315445
    2. '   ' → logprob: -3.289492130279541
    3. ' for' → logprob: -6.539492130279541
    4. '       ' → logprob: -12.539491653442383
    5. '	for' → logprob: -14.414491653442383
    6. '```' → logprob: -16.664491653442383
    7. '
' → logprob: -17.289491653442383
    8. 'from' → logprob: -17.414491653442383
    9. '           ' → logprob: -17.414491653442383
    10. '    
' → logprob: -17.414491653442383

Token 680: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.5094070477061905e-05
    2. ' group' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.625015258789062
    4. 'edges' → logprob: -16.625015258789062
    5. 'the' → logprob: -16.750015258789062
    6. '[group' → logprob: -17.500015258789062
    7. '"group' → logprob: -17.750015258789062
    8. 'groups' → logprob: -18.625015258789062
    9. 'for' → logprob: -18.750015258789062
    10. '(group' → logprob: -18.875015258789062

Token 681: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014421462081372738
    2. '   ' → logprob: -4.264421463012695
    3. ' for' → logprob: -8.264421463012695
    4. '```' → logprob: -14.764421463012695
    5. '	for' → logprob: -17.014421463012695
    6. '
' → logprob: -17.264421463012695
    7. '    
' → logprob: -17.389421463012695
    8. ' ' → logprob: -18.264421463012695
    9. '       ' → logprob: -18.514421463012695
    10. '``' → logprob: -18.764421463012695

Token 682: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03990255296230316
    2. '   ' → logprob: -3.289902448654175
    3. ' for' → logprob: -6.289902687072754
    4. '```' → logprob: -12.414902687072754
    5. '	for' → logprob: -15.289902687072754
    6. '``' → logprob: -16.539901733398438
    7. '    
' → logprob: -17.414901733398438
    8. '
' → logprob: -17.789901733398438
    9. '       ' → logprob: -17.914901733398438
    10. '`' → logprob: -20.414901733398438

Token 683: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.438573680294212e-06
    2. ' for' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.375005722045898
    4. '```' → logprob: -18.5000057220459
    5. '	for' → logprob: -21.2500057220459
    6. '
' → logprob: -21.2500057220459
    7. '``' → logprob: -23.0000057220459
    8. 'from' → logprob: -23.5000057220459
    9. '    
' → logprob: -23.5000057220459
    10. 'edges' → logprob: -23.7500057220459

Token 684: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0013260759878903627
    2. ' e' → logprob: -6.626326084136963
    3. '(e' → logprob: -16.501325607299805
    4. '   ' → logprob: -16.626325607299805
    5. '_,' → logprob: -17.126325607299805
    6. '_e' → logprob: -17.876325607299805
    7. '(_,' → logprob: -18.126325607299805
    8. '```' → logprob: -18.376325607299805
    9. '	e' → logprob: -18.626325607299805
    10. 'edges' → logprob: -18.876325607299805

Token 685: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1608099490404129
    2. ' in' → logprob: -1.9108099937438965
    3. 'group' → logprob: -7.6608099937438965
    4. '(group' → logprob: -9.785809516906738
    5. 'e' → logprob: -10.410809516906738
    6. 'edges' → logprob: -11.285809516906738
    7. '(edges' → logprob: -12.535809516906738
    8. ' group' → logprob: -12.535809516906738
    9. ' ' → logprob: -12.785809516906738
    10. '   ' → logprob: -13.285809516906738

Token 686: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.00015872348740231246
    2. ' group' → logprob: -8.750158309936523
    3. 'edges' → logprob: -16.125158309936523
    4. '(group' → logprob: -16.750158309936523
    5. '[group' → logprob: -17.500158309936523
    6. 'e' → logprob: -17.750158309936523
    7. '	group' → logprob: -18.250158309936523
    8. '"group' → logprob: -18.250158309936523
    9. '   ' → logprob: -18.750158309936523
    10. '.group' → logprob: -19.375158309936523

Token 687: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.020787693560123444
    2. ':' → logprob: -3.8957877159118652
    3. '   ' → logprob: -8.770787239074707
    4. '       ' → logprob: -9.520787239074707
    5. '):
' → logprob: -11.270787239074707
    6. '[' → logprob: -13.395787239074707
    7. ':
' → logprob: -13.895787239074707
    8. ',' → logprob: -14.770787239074707
    9. 'if' → logprob: -15.145787239074707
    10. ':

' → logprob: -15.395787239074707

Token 688: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18028371036052704
    2. '   ' → logprob: -1.8052836656570435
    3. 'uf' → logprob: -7.805283546447754
    4. ' uf' → logprob: -9.180283546447754
    5. ' ' → logprob: -11.805283546447754
    6. '```' → logprob: -12.055283546447754
    7. '	' → logprob: -13.055283546447754
    8. '           ' → logprob: -13.430283546447754
    9. ':
' → logprob: -13.555283546447754
    10. ':' → logprob: -13.680283546447754

Token 689: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.002525722375139594
    2. '   ' → logprob: -6.002525806427002
    3. ' uf' → logprob: -10.252525329589844
    4. '       ' → logprob: -11.502525329589844
    5. 'if' → logprob: -13.002525329589844
    6. 'ug' → logprob: -14.877525329589844
    7. 'ufs' → logprob: -14.877525329589844
    8. 'ut' → logprob: -15.002525329589844
    9. '  ' → logprob: -15.252525329589844
    10. '           ' → logprob: -15.502525329589844

Token 690: '.un' (ID: 11508)
  Prédit: '.un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.un' → logprob: -1.1041145626222715e-05
    2. 'un' → logprob: -11.500011444091797
    3. ' .' → logprob: -15.000011444091797
    4. '```' → logprob: -15.500011444091797
    5. '.' → logprob: -16.375011444091797
    6. '   ' → logprob: -16.625011444091797
    7. '`.' → logprob: -16.875011444091797
    8. '.u' → logprob: -17.875011444091797
    9. '_un' → logprob: -18.125011444091797
    10. 'Un' → logprob: -18.125011444091797

Token 691: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -4.320199877838604e-07
    2. 'ate' → logprob: -15.0
    3. 'it' → logprob: -16.75
    4. 'te' → logprob: -20.0
    5. 'ited' → logprob: -20.25
    6. 'e' → logprob: -20.5
    7. 'ion' → logprob: -20.5
    8. '```' → logprob: -20.75
    9. ' ite' → logprob: -20.75
    10. '(' → logprob: -21.0

Token 692: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.9361264946837764e-07
    2. '((' → logprob: -16.25
    3. '(' → logprob: -16.75
    4. 'e' → logprob: -17.875
    5. '(
' → logprob: -20.125
    6. ' (' → logprob: -20.25
    7. '[e' → logprob: -20.75
    8. ',e' → logprob: -22.375
    9. '```' → logprob: -22.375
    10. '(edge' → logprob: -22.75

Token 693: '[' (ID: 58)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0009694644249975681
    2. 'e' → logprob: -7.625969409942627
    3. '[' → logprob: -8.000969886779785
    4. '[e' → logprob: -9.000969886779785
    5. '(' → logprob: -10.875969886779785
    6. ' e' → logprob: -13.375969886779785
    7. ')e' → logprob: -14.250969886779785
    8. ')' → logprob: -14.250969886779785
    9. ')(' → logprob: -15.250969886779785
    10. ',e' → logprob: -15.750969886779785

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011403311509639025
    2. '[' → logprob: -10.000114440917969
    3. '(' → logprob: -10.250114440917969
    4. 'e' → logprob: -10.500114440917969
    5. '(e' → logprob: -12.750114440917969
    6. '2' → logprob: -13.875114440917969
    7. '   ' → logprob: -14.625114440917969
    8. ' e' → logprob: -14.625114440917969
    9. ' ' → logprob: -14.875114440917969
    10. '```' → logprob: -15.875114440917969

Token 695: '],' (ID: 2155)
  Prédit: ',e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.004153191577643156
    2. ',' → logprob: -5.879153251647949
    3. '],' → logprob: -6.629153251647949
    4. ' ,' → logprob: -11.25415325164795
    5. 'e' → logprob: -11.50415325164795
    6. '],[' → logprob: -13.25415325164795
    7. '),' → logprob: -15.12915325164795
    8. '][' → logprob: -15.75415325164795
    9. ']' → logprob: -15.75415325164795
    10. '[e' → logprob: -15.75415325164795

Token 696: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0206720617134124e-05
    2. ' e' → logprob: -11.50001049041748
    3. '       ' → logprob: -18.000009536743164
    4. '   ' → logprob: -18.875009536743164
    5. ')e' → logprob: -19.250009536743164
    6. '
' → logprob: -20.125009536743164
    7. '           ' → logprob: -20.125009536743164
    8. '	e' → logprob: -20.250009536743164
    9. ')' → logprob: -22.375009536743164
    10. 'ｅ' → logprob: -23.375009536743164

Token 697: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002809036523103714
    2. '[' → logprob: -5.877809047698975
    3. 'e' → logprob: -13.252808570861816
    4. '   ' → logprob: -14.252808570861816
    5. ' ' → logprob: -14.252808570861816
    6. '(' → logprob: -14.627808570861816
    7. '```' → logprob: -15.252808570861816
    8. '-' → logprob: -15.502808570861816
    9. '
' → logprob: -15.877808570861816
    10. ']' → logprob: -16.377809524536133

Token 698: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.375000953674316
    3. '   ' → logprob: -16.125
    4. '２' → logprob: -16.625
    5. '[' → logprob: -17.25
    6. '۲' → logprob: -17.25
    7. '
' → logprob: -17.4375
    8. '```' → logprob: -17.75
    9. '3' → logprob: -18.25
    10. '1' → logprob: -18.25

Token 699: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.750003814697266
    3. '())' → logprob: -14.625003814697266
    4. ' )' → logprob: -15.750003814697266
    5. '))' → logprob: -16.000003814697266
    6. ')return' → logprob: -18.000003814697266
    7. ')#' → logprob: -18.125003814697266
    8. ')e' → logprob: -18.750003814697266
    9. '   ' → logprob: -18.875003814697266
    10. '()' → logprob: -19.000003814697266

Token 700: 'count' (ID: 5420)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 701: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07131927460432053
    2. '(' → logprob: -3.071319341659546
    3. ' =' → logprob: -4.946319103240967
    4. '=[' → logprob: -5.196319103240967
    5. '_' → logprob: -5.571319103240967
    6. '_=' → logprob: -5.696319103240967
    7. '[' → logprob: -7.321319103240967
    8. '=sum' → logprob: -7.571319103240967
    9. '_res' → logprob: -7.946319103240967
    10. '=(' → logprob: -8.071319580078125

Token 702: '0' (ID: 15)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3237692415714264
    2. 'sum' → logprob: -1.323769211769104
    3. '0' → logprob: -4.5737690925598145
    4. ' res' → logprob: -9.448769569396973
    5. ' sum' → logprob: -9.823769569396973
    6. ' ' → logprob: -15.323769569396973
    7. '```' → logprob: -16.448768615722656
    8. '(res' → logprob: -16.573768615722656
    9. '
' → logprob: -16.948768615722656
    10. '(sum' → logprob: -17.323768615722656

Token 703: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001008515479043126
    2. ' for' → logprob: -7.3760085105896
    3. '
' → logprob: -7.8760085105896
    4. '<|end|>' → logprob: -13.501008987426758
    5. '```' → logprob: -14.751008987426758
    6. ' 
' → logprob: -15.626008987426758
    7. '	for' → logprob: -15.876008987426758
    8. '  
' → logprob: -17.251008987426758
    9. '    
' → logprob: -17.376008987426758
    10. '[' → logprob: -17.376008987426758

Token 704: 'cost' (ID: 33457)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.5
    3. '
' → logprob: -19.625
    4. '	for' → logprob: -20.25
    5. '```' → logprob: -20.25
    6. 'print' → logprob: -21.5
    7. '0' → logprob: -22.75
    8. '[' → logprob: -23.125
    9. 'count' → logprob: -23.25
    10. 'For' → logprob: -24.25

Token 705: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00397890480235219
    2. ' =' → logprob: -5.753978729248047
    3. '=count' → logprob: -8.753978729248047
    4. '_' → logprob: -8.878978729248047
    5. '+=' → logprob: -8.878978729248047
    6. '=sum' → logprob: -9.003978729248047
    7. '_=' → logprob: -9.753978729248047
    8. ',' → logprob: -9.878978729248047
    9. '[' → logprob: -9.878978729248047
    10. ' +=' → logprob: -10.503978729248047

Token 706: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. 'sum' → logprob: -12.500003814697266
    3. ' ' → logprob: -18.125003814697266
    4. '1' → logprob: -19.750003814697266
    5. '100' → logprob: -20.125003814697266
    6. '10' → logprob: -20.250003814697266
    7. '=' → logprob: -20.250003814697266
    8. '```' → logprob: -20.500003814697266
    9. '
' → logprob: -20.625003814697266
    10. '000' → logprob: -20.625003814697266

Token 707: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.127333340875339e-06
    2. '
' → logprob: -12.500003814697266
    3. ' for' → logprob: -14.875003814697266
    4. '```' → logprob: -20.125003814697266
    5. '\n' → logprob: -20.250003814697266
    6. '	for' → logprob: -20.250003814697266
    7. '\' → logprob: -21.625003814697266
    8. '' → logprob: -21.750003814697266
    9. '0' → logprob: -22.000003814697266
    10. '
' → logprob: -22.125003814697266

Token 708: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -18.625
    3. '```' → logprob: -19.375
    4. 'print' → logprob: -21.875
    5. '	for' → logprob: -22.5
    6. '
' → logprob: -23.75
    7. '``' → logprob: -24.375
    8. 'from' → logprob: -26.0
    9. 'ans' → logprob: -26.25
    10. 'output' → logprob: -26.375

Token 709: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011383118107914925
    2. 'idx' → logprob: -7.376138210296631
    3. 'e' → logprob: -7.751138210296631
    4. 'j' → logprob: -10.126138687133789
    5. ' i' → logprob: -11.501138687133789
    6. 'c' → logprob: -11.501138687133789
    7. 'r' → logprob: -11.751138687133789
    8. 'v' → logprob: -11.751138687133789
    9. 'x' → logprob: -13.126138687133789
    10. 'k' → logprob: -13.376138687133789

Token 710: ',(' (ID: 27243)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.014232615008950233
    2. ' in' → logprob: -4.264232635498047
    3. ',' → logprob: -9.639232635498047
    4. ',in' → logprob: -13.139232635498047
    5. ' ' → logprob: -13.889232635498047
    6. '   ' → logprob: -15.014232635498047
    7. 'range' → logprob: -15.389232635498047
    8. ' ,' → logprob: -15.514232635498047
    9. '```' → logprob: -15.889232635498047
    10. '  ' → logprob: -16.764232635498047

Token 711: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008856110507622361
    2. '_,' → logprob: -7.875885486602783
    3. 'res' → logprob: -8.625885963439941
    4. 'w' → logprob: -9.000885963439941
    5. ',c' → logprob: -9.500885963439941
    6. 'e' → logprob: -10.750885963439941
    7. ',' → logprob: -10.750885963439941
    8. '   ' → logprob: -10.875885963439941
    9. 'cost' → logprob: -11.375885963439941
    10. 'False' → logprob: -11.625885963439941

Token 712: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.46173787117004395
    2. ',' → logprob: -1.711737871170044
    3. ',i' → logprob: -2.211737871170044
    4. ',res' → logprob: -2.961737871170044
    5. ',e' → logprob: -3.961737871170044
    6. ',x' → logprob: -5.711737632751465
    7. ',r' → logprob: -6.461737632751465
    8. ',[' → logprob: -7.336737632751465
    9. ',t' → logprob: -7.711737632751465
    10. ',j' → logprob: -7.711737632751465

Token 713: ',d' (ID: 26159)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.5256946086883545
    2. ',e' → logprob: -1.5256946086883545
    3. ',d' → logprob: -2.0256946086883545
    4. ',' → logprob: -4.275694847106934
    5. ',t' → logprob: -4.275694847106934
    6. ',a' → logprob: -4.900694847106934
    7. ',j' → logprob: -5.150694847106934
    8. ',x' → logprob: -5.525694847106934
    9. ',o' → logprob: -5.525694847106934
    10. ',res' → logprob: -6.400694847106934

Token 714: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013358361320570111
    2. ')=' → logprob: -6.626335620880127
    3. ',i' → logprob: -13.126336097717285
    4. ' )' → logprob: -13.251336097717285
    5. ',' → logprob: -13.501336097717285
    6. ',)' → logprob: -13.751336097717285
    7. ')==' → logprob: -14.376336097717285
    8. ')
' → logprob: -14.626336097717285
    9. ')=>' → logprob: -14.626336097717285
    10. '
' → logprob: -14.876336097717285

Token 715: 'idx' (ID: 13196)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09039894491434097
    2. ')' → logprob: -2.7153990268707275
    3. 'idx' → logprob: -4.090398788452148
    4. '_)' → logprob: -6.715398788452148
    5. 'index' → logprob: -7.090398788452148
    6. 'id' → logprob: -7.965398788452148
    7. ')=' → logprob: -8.215398788452148
    8. '_i' → logprob: -8.590398788452148
    9. ')i' → logprob: -9.590398788452148
    10. 'cost' → logprob: -9.590398788452148

Token 716: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. 'in' → logprob: -11.625012397766113
    3. ')=' → logprob: -13.000012397766113
    4. ' )' → logprob: -14.375012397766113
    5. ')
' → logprob: -15.750012397766113
    6. '
' → logprob: -16.000011444091797
    7. '）' → logprob: -17.125011444091797
    8. '   ' → logprob: -17.875011444091797
    9. ')is' → logprob: -18.000011444091797
    10. '))' → logprob: -18.125011444091797

Token 717: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10022887587547302
    2. ' in' → logprob: -2.350228786468506
    3. ',in' → logprob: -12.475229263305664
    4. '_in' → logprob: -12.850229263305664
    5. '   ' → logprob: -13.225229263305664
    6. ' ' → logprob: -13.475229263305664
    7. '	in' → logprob: -13.475229263305664
    8. ')' → logprob: -13.600229263305664
    9. '
' → logprob: -13.600229263305664
    10. 's' → logprob: -13.725229263305664

Token 718: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.01898345910012722
    2. 'edges' → logprob: -4.268983364105225
    3. 'in' → logprob: -5.518983364105225
    4. ' enumerate' → logprob: -7.143983364105225
    5. '(edges' → logprob: -12.018983840942383
    6. ' edges' → logprob: -13.393983840942383
    7. ' in' → logprob: -14.893983840942383
    8. 'zip' → logprob: -15.018983840942383
    9. 'en' → logprob: -15.018983840942383
    10. '```' → logprob: -16.018983840942383

Token 719: '(edges' (ID: 185298)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0017646668711677194
    2. '(edges' → logprob: -6.50176477432251
    3. ' edges' → logprob: -8.251764297485352
    4. 'enumer' → logprob: -13.626764297485352
    5. '.edges' → logprob: -15.876764297485352
    6. 'in' → logprob: -17.37676429748535
    7. '_edges' → logprob: -17.62676429748535
    8. '(' → logprob: -17.75176429748535
    9. '[' → logprob: -18.12676429748535
    10. 'edge' → logprob: -18.37676429748535

Token 720: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4074154794216156
    2. '):
' → logprob: -1.157415509223938
    3. ':' → logprob: -3.9074153900146484
    4. ':
' → logprob: -8.657415390014648
    5. 'if' → logprob: -10.657415390014648
    6. ')' → logprob: -11.407415390014648
    7. '):
' → logprob: -11.657415390014648
    8. ' if' → logprob: -11.657415390014648
    9. '   ' → logprob: -12.407415390014648
    10. '):

' → logprob: -13.032415390014648

Token 721: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07904169708490372
    2. 'if' → logprob: -2.8290417194366455
    3. ' if' → logprob: -4.079041481018066
    4. '```' → logprob: -12.954041481018066
    5. '	if' → logprob: -13.204041481018066
    6. '       ' → logprob: -14.954041481018066
    7. '  ' → logprob: -15.454041481018066
    8. ' ' → logprob: -15.454041481018066
    9. 'If' → logprob: -15.704041481018066
    10. '<|end|>' → logprob: -16.329042434692383

Token 722: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1346891075372696
    2. '   ' → logprob: -2.3846890926361084
    3. ' if' → logprob: -3.3846890926361084
    4. '	if' → logprob: -12.634689331054688
    5. '```' → logprob: -13.259689331054688
    6. ' ' → logprob: -14.384689331054688
    7. '  ' → logprob: -14.634689331054688
    8. '
' → logprob: -15.384689331054688
    9. '       ' → logprob: -15.634689331054688
    10. 'If' → logprob: -16.509689331054688

Token 723: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00011331788846291602
    2. ' res' → logprob: -9.125113487243652
    3. '   ' → logprob: -12.625113487243652
    4. 'not' → logprob: -14.125113487243652
    5. '(res' → logprob: -16.250112533569336
    6. 's' → logprob: -16.750112533569336
    7. '	res' → logprob: -17.375112533569336
    8. ' ' → logprob: -17.875112533569336
    9. '
' → logprob: -18.000112533569336
    10. 'r' → logprob: -18.250112533569336

Token 724: '[idx' (ID: 25582)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.054378196597099304
    2. '[idx' → logprob: -3.0543782711029053
    3. '[e' → logprob: -5.679378032684326
    4. '[' → logprob: -6.054378032684326
    5. '[s' → logprob: -12.929378509521484
    6. '[id' → logprob: -13.554378509521484
    7. '[index' → logprob: -13.679378509521484
    8. '[c' → logprob: -14.179378509521484
    9. '[ind' → logprob: -14.304378509521484
    10. '[
' → logprob: -14.304378509521484

Token 725: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.41091445088386536
    2. '):
' → logprob: -1.535914421081543
    3. ':' → logprob: -2.285914421081543
    4. '==' → logprob: -4.660914421081543
    5. ':
' → logprob: -5.410914421081543
    6. ']:' → logprob: -5.660914421081543
    7. ']==' → logprob: -7.035914421081543
    8. ')' → logprob: -7.410914421081543
    9. ')==' → logprob: -7.410914421081543
    10. ']:
' → logprob: -7.910914421081543

Token 726: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47740593552589417
    2. '       ' → logprob: -1.6024059057235718
    3. 'count' → logprob: -2.1024060249328613
    4. 'cost' → logprob: -3.3524060249328613
    5. ' cost' → logprob: -4.477406024932861
    6. '```' → logprob: -5.477406024932861
    7. ' count' → logprob: -6.227406024932861
    8. '``' → logprob: -6.727406024932861
    9. '+' → logprob: -7.102406024932861
    10. '
' → logprob: -7.977406024932861

Token 727: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0067170290276408195
    2. 'cost' → logprob: -5.006717205047607
    3. 'print' → logprob: -14.50671672821045
    4. 'c' → logprob: -14.63171672821045
    5. ' count' → logprob: -15.25671672821045
    6. '   ' → logprob: -15.38171672821045
    7. '
' → logprob: -15.50671672821045
    8. ' cost' → logprob: -16.756717681884766
    9. '```' → logprob: -18.256717681884766
    10. '       ' → logprob: -20.006717681884766

Token 728: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008836505003273487
    2. ' +=' → logprob: -4.758836269378662
    3. '+' → logprob: -8.50883674621582
    4. ']+=' → logprob: -11.13383674621582
    5. '+=(' → logprob: -12.25883674621582
    6. '[' → logprob: -15.13383674621582
    7. '   ' → logprob: -15.50883674621582
    8. '+="' → logprob: -15.88383674621582
    9. '=' → logprob: -16.00883674621582
    10. '+='' → logprob: -16.50883674621582

Token 729: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3133023977279663
    2. 'c' → logprob: -1.3133023977279663
    3. ' c' → logprob: -10.563302040100098
    4. 'cost' → logprob: -11.813302040100098
    5. ' ' → logprob: -12.313302040100098
    6. 'edges' → logprob: -14.438302040100098
    7. '```' → logprob: -15.188302040100098
    8. '(c' → logprob: -15.313302040100098
    9. '	c' → logprob: -15.375802040100098
    10. '0' → logprob: -15.625802040100098

Token 730: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.956197202205658
    2. 'cost' → logprob: -1.0811972618103027
    3. '   ' → logprob: -1.8311972618103027
    4. ' cost' → logprob: -2.2061972618103027
    5. '       ' → logprob: -6.456197261810303
    6. '```' → logprob: -6.581197261810303
    7. '``' → logprob: -7.581197261810303
    8. ',
' → logprob: -7.706197261810303
    9. ',' → logprob: -7.831197261810303
    10. '    
' → logprob: -7.956197261810303

Token 731: '       ' (ID: 309)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.33169835805892944
    2. ' cost' → logprob: -1.3316984176635742
    3. '   ' → logprob: -4.081698417663574
    4. '
' → logprob: -7.206698417663574
    5. '```' → logprob: -7.706698417663574
    6. '``' → logprob: -9.331698417663574
    7. '       ' → logprob: -10.081698417663574
    8. '+' → logprob: -10.956698417663574
    9. '    ' → logprob: -11.581698417663574
    10. 'c' → logprob: -12.081698417663574

Token 732: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -3.547789674485102e-05
    2. ' cost' → logprob: -10.250035285949707
    3. '
' → logprob: -17.500036239624023
    4. 'c' → logprob: -18.375036239624023
    5. '   ' → logprob: -18.625036239624023
    6. '```' → logprob: -19.375036239624023
    7. 'code' → logprob: -19.500036239624023
    8. '(cost' → logprob: -20.250036239624023
    9. '_cost' → logprob: -20.750036239624023
    10. 'count' → logprob: -21.250036239624023

Token 733: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005756704485975206
    2. ' +=' → logprob: -7.625575542449951
    3. ']+=' → logprob: -10.12557601928711
    4. '+' → logprob: -10.12557601928711
    5. '```' → logprob: -12.75057601928711
    6. '+=(' → logprob: -13.12557601928711
    7. '+="' → logprob: -13.87557601928711
    8. '=' → logprob: -14.12557601928711
    9. '+='' → logprob: -14.25057601928711
    10. ')+' → logprob: -16.50057601928711

Token 734: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.128163257315464e-07
    2. ' c' → logprob: -15.5
    3. '(c' → logprob: -17.125
    4. 'edges' → logprob: -18.625
    5. '	c' → logprob: -19.0
    6. '_c' → logprob: -19.375
    7. '```' → logprob: -19.75
    8. 'cost' → logprob: -20.125
    9. 'с' → logprob: -20.75
    10. ')c' → logprob: -21.0

Token 735: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006744031794369221
    2. '
' → logprob: -5.006743907928467
    3. '```' → logprob: -11.256744384765625
    4. ' print' → logprob: -11.631744384765625
    5. '<|end|>' → logprob: -12.756744384765625
    6. ')
' → logprob: -13.631744384765625
    7. '.print' → logprob: -14.631744384765625
    8. '
' → logprob: -14.756744384765625
    9. 'if' → logprob: -14.881744384765625
    10. '#print' → logprob: -15.131744384765625

Token 736: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017767686222214252
    2. '```' → logprob: -9.250177383422852
    3. '<|end|>' → logprob: -9.750177383422852
    4. '
' → logprob: -10.875177383422852
    5. '#print' → logprob: -13.500177383422852
    6. ' print' → logprob: -13.625177383422852
    7. '#' → logprob: -14.250177383422852
    8. 'for' → logprob: -15.750177383422852
    9. '(print' → logprob: -15.750177383422852
    10. '\' → logprob: -15.875177383422852

Token 737: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0007025416707620025
    2. '(cost' → logprob: -7.500702381134033
    3. 'count' → logprob: -9.125702857971191
    4. '(f' → logprob: -10.625702857971191
    5. '(' → logprob: -11.125702857971191
    6. '(c' → logprob: -14.625702857971191
    7. '((' → logprob: -14.750702857971191
    8. 'cost' → logprob: -14.750702857971191
    9. '()' → logprob: -15.875702857971191
    10. 'f' → logprob: -16.500701904296875

Token 738: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5799235701560974
    2. ',c' → logprob: -0.8299235701560974
    3. ',end' → logprob: -6.204923629760742
    4. ',count' → logprob: -6.704923629760742
    5. ' ,' → logprob: -7.454923629760742
    6. ',f' → logprob: -9.454923629760742
    7. ')' → logprob: -10.329923629760742
    8. ',len' → logprob: -11.204923629760742
    9. ',total' → logprob: -12.329923629760742
    10. ',b' → logprob: -12.454923629760742

Token 739: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.00014537633978761733
    2. ')' → logprob: -8.875144958496094
    3. 'st' → logprob: -12.375144958496094
    4. 'ount' → logprob: -14.875144958496094
    5. 'os' → logprob: -15.125144958496094
    6. 'ast' → logprob: -15.625144958496094
    7. 'OST' → logprob: -16.000144958496094
    8. '')' → logprob: -16.500144958496094
    9. '`)' → logprob: -16.625144958496094
    10. '[' → logprob: -17.125144958496094

Token 740: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.375000953674316
    3. ',)' → logprob: -16.0
    4. ' )' → logprob: -16.125
    5. '')' → logprob: -17.0
    6. ',' → logprob: -17.125
    7. '`)' → logprob: -17.875
    8. '())' → logprob: -17.875
    9. '))' → logprob: -18.0
    10. '")' → logprob: -18.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 738
Tokens correctement prédits (1ère position, stricte): 354
Tokens correctement prédits (1ère position, avec adaptation): 410
Tokens correctement prédits (top 10): 662
Précision stricte (1ère position): 47.97%
Précision adaptée (1ère position): 55.56%
Précision (top 10): 89.70%
================================================================================
