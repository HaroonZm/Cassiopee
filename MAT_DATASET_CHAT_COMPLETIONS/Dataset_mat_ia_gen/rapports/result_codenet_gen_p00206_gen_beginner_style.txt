================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:57:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    L = input()
    if L == '0':
        break
    L = int(L)
    savings = 0
    month = 0
    reached = False
    for i in range(12):
        M, N = input().split()
        M = int(M)
        N = int(N)
        savings += (M - N)
        month += 1
        if savings >= L and not reached:
            print(month)
            reached = True
    if not reached:
        print("NA")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09785973280668259
    2. 'e' → logprob: -4.097859859466553
    3. '   ' → logprob: -4.097859859466553
    4. 'o' → logprob: -4.347859859466553
    5. '[i' → logprob: -4.472859859466553
    6. 'ist' → logprob: -5.222859859466553
    7. '[' → logprob: -5.347859859466553
    8. 'I' → logprob: -5.722859859466553
    9. '```' → logprob: -5.847859859466553
    10. '=' → logprob: -5.972859859466553

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8848142027854919
    2. ' []' → logprob: -1.0098142623901367
    3. 'input' → logprob: -1.8848142623901367
    4. '[]' → logprob: -3.1348142623901367
    5. ' [' → logprob: -4.009814262390137
    6. '[' → logprob: -6.009814262390137
    7. ' int' → logprob: -6.259814262390137
    8. ' list' → logprob: -6.509814262390137
    9. 'int' → logprob: -6.634814262390137
    10. 'list' → logprob: -7.759814262390137

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043102685594931245
    2. '('' → logprob: -8.250431060791016
    3. '("("' → logprob: -9.000431060791016
    4. '()' → logprob: -11.750431060791016
    5. '(
' → logprob: -11.875431060791016
    6. '("")' → logprob: -12.000431060791016
    7. '```' → logprob: -12.000431060791016
    8. ''' → logprob: -12.625431060791016
    9. ' (' → logprob: -12.625431060791016
    10. '(

' → logprob: -13.000431060791016

Token 8: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6463420987129211
    2. '   ' → logprob: -1.5213420391082764
    3. ' ' → logprob: -2.0213420391082764
    4. '<|end|>' → logprob: -2.8963420391082764
    5. '    ' → logprob: -4.1463422775268555
    6. '```' → logprob: -4.6463422775268555
    7. ' ==' → logprob: -4.8963422775268555
    8. ')' → logprob: -5.1463422775268555
    9. '  
' → logprob: -5.2713422775268555
    10. ' =' → logprob: -5.6463422775268555

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3281190097332001
    2. ' ' → logprob: -1.8281190395355225
    3. '   ' → logprob: -2.8281190395355225
    4. 'if' (adapté à ' if') → logprob: -3.3281190395355225
    5. '    ' → logprob: -4.828118801116943
    6. ' ==' → logprob: -5.328118801116943
    7. '  ' → logprob: -6.203118801116943
    8. '<|end|>' → logprob: -6.328118801116943
    9. '.' → logprob: -6.828118801116943
    10. '==' → logprob: -7.078118801116943

Token 10: ' L' (ID: 451)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3655336797237396
    2. ' L' → logprob: -1.240533709526062
    3. ' ' → logprob: -4.240533828735352
    4. 'not' → logprob: -6.240533828735352
    5. 'L' → logprob: -7.740533828735352
    6. '  ' → logprob: -9.240533828735352
    7. ' len' → logprob: -9.990533828735352
    8. ' ' → logprob: -11.615533828735352
    9. ')' → logprob: -13.990533828735352
    10. '"' → logprob: -13.990533828735352

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06412213295698166
    2. '==' → logprob: -3.064122200012207
    3. '.' → logprob: -4.689122200012207
    4. '.startswith' → logprob: -6.439122200012207
    5. ' .' → logprob: -6.814122200012207
    6. ' !=' → logprob: -6.939122200012207
    7. '.strip' → logprob: -7.314122200012207
    8. ' ' → logprob: -7.689122200012207
    9. ' =' → logprob: -8.189122200012207
    10. '=' → logprob: -8.439122200012207

Token 12: ' '' (ID: 461)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.38228386640548706
    2. '"' → logprob: -2.007283926010132
    3. '''' → logprob: -2.132283926010132
    4. ''' → logprob: -3.257283926010132
    5. ' ""' → logprob: -3.882283926010132
    6. ' ''' → logprob: -6.132283687591553
    7. '"":' → logprob: -6.507283687591553
    8. ' "' → logprob: -6.757283687591553
    9. ' '' → logprob: -8.007284164428711
    10. '"\' → logprob: -9.382284164428711

Token 13: '0' (ID: 15)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.8904326558113098
    2. ''' → logprob: -1.140432596206665
    3. '"' → logprob: -1.890432596206665
    4. 'quit' → logprob: -3.390432596206665
    5. '\n' → logprob: -3.640432596206665
    6. ''\' → logprob: -3.890432596206665
    7. '':' → logprob: -4.640432834625244
    8. ''ex' → logprob: -5.265432834625244
    9. '''' → logprob: -5.390432834625244
    10. '""' → logprob: -5.390432834625244

Token 14: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.10779903829097748
    2. ''' → logprob: -2.3577990531921387
    3. '\n' → logprob: -5.107799053192139
    4. ' ':' → logprob: -7.107799053192139
    5. ':' → logprob: -8.23279857635498
    6. '':
' → logprob: -8.85779857635498
    7. ' '' → logprob: -9.23279857635498
    8. '0' → logprob: -9.35779857635498
    9. '':
' → logprob: -10.23279857635498
    10. ''or' → logprob: -11.23279857635498

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012304315343499184
    2. ' break' → logprob: -5.012304306030273
    3. '   ' → logprob: -6.012304306030273
    4. '    ' → logprob: -6.762304306030273
    5. '\n' → logprob: -7.262304306030273
    6. ':' → logprob: -8.387304306030273
    7. ' ' → logprob: -8.762304306030273
    8. '	break' → logprob: -8.762304306030273
    9. '      ' → logprob: -8.887304306030273
    10. '        ' → logprob: -8.887304306030273

Token 16: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4767245650291443
    2. ' break' → logprob: -0.9767245650291443
    3. '   ' → logprob: -6.976724624633789
    4. '\n' → logprob: -7.476724624633789
    5. 'break' (adapté à ' break') → logprob: -7.726724624633789
    6. '	break' → logprob: -8.101724624633789
    7. '           ' → logprob: -9.476724624633789
    8. ' ' → logprob: -9.726724624633789
    9. ' ' → logprob: -10.101724624633789
    10. '        
' → logprob: -10.226724624633789

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4613885879516602
    2. '\n' → logprob: -1.4613885879516602
    3. '<|end|>' → logprob: -1.4613885879516602
    4. '
' → logprob: -1.5863885879516602
    5. ' ' → logprob: -3.58638858795166
    6. '    
' → logprob: -4.21138858795166
    7. ')' → logprob: -4.33638858795166
    8. ':' → logprob: -4.71138858795166
    9. '<|end|>' → logprob: -5.46138858795166
    10. '  
' → logprob: -5.46138858795166

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015425561927258968
    2. '    
' → logprob: -5.015425682067871
    3. ' ' → logprob: -6.140425682067871
    4. '
' → logprob: -6.515425682067871
    5. '<|end|>' → logprob: -6.890425682067871
    6. 'print' → logprob: -7.015425682067871
    7. '    ' → logprob: -7.265425682067871
    8. '  ' → logprob: -7.390425682067871
    9. '\n' → logprob: -8.140425682067871
    10. '  
' → logprob: -8.140425682067871

Token 19: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7594900727272034
    2. ' ' → logprob: -0.8844900727272034
    3. 'print' → logprob: -4.134490013122559
    4. '[' → logprob: -4.259490013122559
    5. ',' → logprob: -4.384490013122559
    6. '    ' → logprob: -4.759490013122559
    7. '    
' → logprob: -4.884490013122559
    8. '<|end|>' → logprob: -4.884490013122559
    9. 'n' → logprob: -5.009490013122559
    10. '.' → logprob: -5.134490013122559

Token 20: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.44979172945022583
    2. '+' → logprob: -2.199791669845581
    3. ')' → logprob: -2.699791669845581
    4. '.split' → logprob: -2.949791669845581
    5. '[' → logprob: -3.324791669845581
    6. ' ' → logprob: -4.19979190826416
    7. '<|end|>' → logprob: -4.19979190826416
    8. '=' → logprob: -4.44979190826416
    9. '()' → logprob: -4.69979190826416
    10. '.strip' → logprob: -5.07479190826416

Token 21: ' int' (ID: 677)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8909297585487366
    2. ' L' → logprob: -1.0159296989440918
    3. 'L' → logprob: -2.140929698944092
    4. 'list' → logprob: -2.390929698944092
    5. ' [' → logprob: -5.140929698944092
    6. 'int' → logprob: -5.515929698944092
    7. ' int' → logprob: -6.015929698944092
    8. '[' → logprob: -6.265929698944092
    9. '[int' → logprob: -6.765929698944092
    10. ' ' → logprob: -7.140929698944092

Token 22: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.38690367341041565
    2. '(' → logprob: -1.1369036436080933
    3. '(input' → logprob: -11.636903762817383
    4. ' (' → logprob: -11.886903762817383
    5. '('' → logprob: -12.511903762817383
    6. '(
' → logprob: -12.511903762817383
    7. '(line' → logprob: -13.136903762817383
    8. '(

' → logprob: -13.511903762817383
    9. '(`' → logprob: -14.011903762817383
    10. '()' → logprob: -14.261903762817383

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007220837287604809
    2. '+' → logprob: -7.5007219314575195
    3. ' )' → logprob: -9.00072193145752
    4. ' +' → logprob: -11.50072193145752
    5. '*' → logprob: -12.12572193145752
    6. ')
' → logprob: -12.12572193145752
    7. '))' → logprob: -12.37572193145752
    8. '   ' → logprob: -12.87572193145752
    9. '[' → logprob: -12.87572193145752
    10. '+)' → logprob: -13.12572193145752

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6588380336761475
    2. '<|end|>' → logprob: -1.9088380336761475
    3. ':' → logprob: -2.0338380336761475
    4. ' ' → logprob: -3.0338380336761475
    5. ')' → logprob: -3.1588380336761475
    6. '+' → logprob: -3.2838380336761475
    7. '\n' → logprob: -4.408838272094727
    8. ',' → logprob: -4.533838272094727
    9. '#' → logprob: -5.033838272094727
    10. ' if' → logprob: -5.158838272094727

Token 25: ' savings' (ID: 22381)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09452511370182037
    2. ' if' → logprob: -3.469525098800659
    3. '   ' → logprob: -4.219525337219238
    4. '<|end|>' → logprob: -4.969525337219238
    5. 'if' → logprob: -5.094525337219238
    6. ')' → logprob: -5.219525337219238
    7. ',' → logprob: -5.594525337219238
    8. '[' → logprob: -5.969525337219238
    9. ' 
' → logprob: -6.219525337219238
    10. '    ' → logprob: -6.219525337219238

Token 26: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023692166432738304
    2. ' =' → logprob: -4.6486921310424805
    3. '+=' → logprob: -4.8986921310424805
    4. '=' → logprob: -6.0236921310424805
    5. '[' → logprob: -6.7736921310424805
    6. ' -=' → logprob: -7.1486921310424805
    7. ' ' → logprob: -7.3986921310424805
    8. ' *=' → logprob: -7.7736921310424805
    9. '_' → logprob: -8.39869213104248
    10. '+' → logprob: -8.64869213104248

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2560062110424042
    2. ' ' → logprob: -2.2560062408447266
    3. ' L' → logprob: -3.3810062408447266
    4. '[]' → logprob: -4.006006240844727
    5. '100' → logprob: -4.006006240844727
    6. ' [' → logprob: -4.381006240844727
    7. 'L' → logprob: -4.381006240844727
    8. ' []' → logprob: -4.756006240844727
    9. '[' → logprob: -5.256006240844727
    10. 's' → logprob: -6.131006240844727

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5479649901390076
    2. 'L' → logprob: -1.6729650497436523
    3. '100' → logprob: -2.5479650497436523
    4. ' L' → logprob: -3.1729650497436523
    5. '[L' → logprob: -3.5479650497436523
    6. '[' → logprob: -4.422965049743652
    7. '[]' → logprob: -4.547965049743652
    8. 's' → logprob: -4.672965049743652
    9. ' ' → logprob: -4.797965049743652
    10. 'int' → logprob: -4.922965049743652

Token 29: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' month' (ID: 2944)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1312199980020523
    2. ' for' → logprob: -2.3812201023101807
    3. 'while' → logprob: -4.631219863891602
    4. '   ' → logprob: -4.756219863891602
    5. 'n' → logprob: -6.006219863891602
    6. 'i' → logprob: -6.006219863891602
    7. 'if' → logprob: -6.256219863891602
    8. 's' → logprob: -6.381219863891602
    9. ' while' → logprob: -6.631219863891602
    10. ' if' → logprob: -8.006219863891602

Token 32: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020554035902023315
    2. ' =' → logprob: -5.020554065704346
    3. '_s' → logprob: -5.145554065704346
    4. '_' → logprob: -5.145554065704346
    5. '=' → logprob: -6.645554065704346
    6. 'ly' → logprob: -7.645554065704346
    7. ' s' → logprob: -8.895553588867188
    8. ' ' → logprob: -9.770553588867188
    9. '_count' → logprob: -10.270553588867188
    10. ',' → logprob: -11.520553588867188

Token 33: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6970449686050415
    2. ' ' → logprob: -1.3220449686050415
    3. '0' → logprob: -1.4470449686050415
    4. '   ' → logprob: -11.32204532623291
    5. '+' → logprob: -11.44704532623291
    6. '12' → logprob: -11.44704532623291
    7. '6' → logprob: -11.57204532623291
    8. '2' → logprob: -12.00954532623291
    9. '    ' → logprob: -12.00954532623291
    10. ' +' → logprob: -12.07204532623291

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.633547842502594
    2. '1' → logprob: -0.758547842502594
    3. ' ' → logprob: -7.383547782897949
    4. '12' → logprob: -8.63354778289795
    5. '2' → logprob: -10.25854778289795
    6. 'month' → logprob: -11.25854778289795
    7. '6' → logprob: -11.69604778289795
    8. '10' → logprob: -11.75854778289795
    9. '   ' → logprob: -11.75854778289795
    10. '3' → logprob: -11.82104778289795

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' reached' (ID: 15237)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9768054485321045
    2. '_' → logprob: -1.1018054485321045
    3. '=' → logprob: -2.3518054485321045
    4. ' +=' → logprob: -2.8518054485321045
    5. '_s' → logprob: -3.3518054485321045
    6. ' >=' → logprob: -3.6018054485321045
    7. ' ' → logprob: -3.8518054485321045
    8. '_amount' → logprob: -4.101805686950684
    9. '_month' → logprob: -4.601805686950684
    10. '+=' → logprob: -5.601805686950684

Token 39: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.477960467338562
    2. ' False' → logprob: -0.977960467338562
    3. ' L' → logprob: -7.102960586547852
    4. ' True' → logprob: -7.102960586547852
    5. 'True' → logprob: -7.477960586547852
    6. 'L' → logprob: -7.477960586547852
    7. '0' → logprob: -7.727960586547852
    8. '100' → logprob: -7.977960586547852
    9. ' ' → logprob: -9.102960586547852
    10. '10' → logprob: -9.977960586547852

Token 40: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8906937837600708
    2. ' month' → logprob: -1.0156937837600708
    3. ' i' → logprob: -1.6406937837600708
    4. ' _' → logprob: -3.6406936645507812
    5. ' range' → logprob: -5.265693664550781
    6. ' year' → logprob: -7.015693664550781
    7. ' day' → logprob: -7.765693664550781
    8. '_' → logprob: -7.890693664550781
    9. '  ' → logprob: -8.890693664550781
    10. ' m' → logprob: -9.265693664550781

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005971930921077728
    2. 'in' → logprob: -5.255971908569336
    3. ' ' → logprob: -7.880971908569336
    4. 'n' → logprob: -8.255971908569336
    5. '  ' → logprob: -10.380971908569336
    6. ' n' → logprob: -10.755971908569336
    7. ',' → logprob: -11.255971908569336
    8. ' range' → logprob: -12.005971908569336
    9. 'range' → logprob: -12.255971908569336
    10. '	in' → logprob: -12.255971908569336

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0430140346288681
    2. 'range' → logprob: -3.1680140495300293
    3. ' ' → logprob: -12.168013572692871
    4. '	range' → logprob: -12.793013572692871
    5. '(range' → logprob: -13.418013572692871
    6. '[' → logprob: -13.668013572692871
    7. '   ' → logprob: -13.793013572692871
    8. '  ' → logprob: -13.918013572692871
    9. ' xrange' → logprob: -14.793013572692871
    10. 'r' → logprob: -15.793013572692871

Token 46: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01745656505227089
    2. ' (' → logprob: -4.267456531524658
    3. '(L' → logprob: -5.892456531524658
    4. '(s' → logprob: -7.767456531524658
    5. ' L' → logprob: -11.142457008361816
    6. '(range' → logprob: -11.267457008361816
    7. '(space' → logprob: -11.392457008361816
    8. ' ' → logprob: -11.642457008361816
    9. '(month' → logprob: -11.642457008361816
    10. '(len' → logprob: -11.767457008361816

Token 47: '12' (ID: 899)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5571631789207458
    2. '1' → logprob: -1.6821632385253906
    3. '12' → logprob: -1.6821632385253906
    4. '100' → logprob: -4.307163238525391
    5. '365' → logprob: -4.932163238525391
    6. '6' → logprob: -5.182163238525391
    7. '30' → logprob: -5.682163238525391
    8. '0' → logprob: -5.807163238525391
    9. '13' → logprob: -6.057163238525391
    10. '(' → logprob: -6.057163238525391

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013767797499895096
    2. ' ):' → logprob: -7.001376628875732
    3. ')' → logprob: -8.50137710571289
    4. ':' → logprob: -8.75137710571289
    5. '+' → logprob: -9.62637710571289
    6. ',' → logprob: -10.50137710571289
    7. '):
' → logprob: -12.12637710571289
    8. ' )' → logprob: -13.62637710571289
    9. '():' → logprob: -14.37637710571289
    10. '   ' → logprob: -14.37637710571289

Token 49: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7818251848220825
    2. '       ' → logprob: -1.1568251848220825
    3. '   ' → logprob: -2.281825065612793
    4. '<|end|>' → logprob: -2.281825065612793
    5. '    ' → logprob: -4.656825065612793
    6. ' ' → logprob: -5.281825065612793
    7. '<|end|>' → logprob: -6.531825065612793
    8. ':
' → logprob: -6.656825065612793
    9. ',' → logprob: -7.031825065612793
    10. '\n' → logprob: -7.031825065612793

Token 50: ' M' (ID: 391)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31196242570877075
    2. 'onth' → logprob: -1.436962366104126
    3. '=' → logprob: -4.311962604522705
    4. ',' → logprob: -5.686962604522705
    5. ' +=' → logprob: -5.686962604522705
    6. 'on' → logprob: -6.186962604522705
    7. 'o' → logprob: -6.686962604522705
    8. 'ont' → logprob: -6.811962604522705
    9. '   ' → logprob: -7.436962604522705
    10. '+' → logprob: -7.561962604522705

Token 52: ' N' (ID: 478)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.079938292503357
    2. 'R' → logprob: -1.079938292503357
    3. ' D' → logprob: -2.8299384117126465
    4. 'S' → logprob: -2.9549384117126465
    5. ' R' → logprob: -2.9549384117126465
    6. 'Y' → logprob: -3.3299384117126465
    7. 'P' → logprob: -3.7049384117126465
    8. 'N' → logprob: -4.0799384117126465
    9. ' S' → logprob: -4.4549384117126465
    10. 'B' → logprob: -4.8299384117126465

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3875879943370819
    2. '=' → logprob: -1.1375880241394043
    3. ',' → logprob: -7.262588024139404
    4. '=input' → logprob: -11.637587547302246
    5. ' ' → logprob: -13.262587547302246
    6. ')' → logprob: -13.387587547302246
    7. ' ,' → logprob: -14.012587547302246
    8. '=int' → logprob: -14.637587547302246
    9. '    ' → logprob: -15.637587547302246
    10. 'input' → logprob: -15.637587547302246

Token 54: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01835736073553562
    2. 'map' → logprob: -4.143357276916504
    3. ' input' → logprob: -6.268357276916504
    4. ' list' → logprob: -8.268357276916504
    5. 'input' → logprob: -9.393357276916504
    6. ' [' → logprob: -10.268357276916504
    7. ' ' → logprob: -11.018357276916504
    8. '[' → logprob: -11.768357276916504
    9. ' ' → logprob: -11.768357276916504
    10. '	map' → logprob: -11.893357276916504

Token 55: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08931401371955872
    2. '()' → logprob: -2.4643139839172363
    3. '(' → logprob: -8.089314460754395
    4. '('' → logprob: -10.339314460754395
    5. ' ()' → logprob: -11.714314460754395
    6. ' ().' → logprob: -12.214314460754395
    7. '("' → logprob: -12.339314460754395
    8. '("("' → logprob: -12.839314460754395
    9. '()

' → logprob: -13.214314460754395
    10. '()
' → logprob: -13.339314460754395

Token 56: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.73183855926618e-05
    2. 'strip' → logprob: -9.500077247619629
    3. 'rstrip' → logprob: -13.250077247619629
    4. ' split' → logprob: -14.750077247619629
    5. 'spl' → logprob: -15.750077247619629
    6. 'rs' → logprob: -17.000078201293945
    7. '(split' → logprob: -17.750078201293945
    8. 'replace' → logprob: -18.125078201293945
    9. 's' → logprob: -18.375078201293945
    10. '.split' → logprob: -18.875078201293945

Token 57: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007492927368730307
    2. '('' → logprob: -5.132493019104004
    3. '(' → logprob: -6.507493019104004
    4. '("("' → logprob: -11.007493019104004
    5. '(',' → logprob: -11.257493019104004
    6. '(),' → logprob: -12.007493019104004
    7. '("' → logprob: -12.132493019104004
    8. ')' → logprob: -12.257493019104004
    9. '())' → logprob: -12.257493019104004
    10. '()
' → logprob: -12.757493019104004

Token 58: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6640727519989014
    2. '<|end|>' → logprob: -0.7890727519989014
    3. ' M' → logprob: -3.7890727519989014
    4. 'M' (adapté à ' M') → logprob: -6.1640729904174805
    5. ')' → logprob: -6.5390729904174805
    6. 'int' → logprob: -6.9140729904174805
    7. '<|end|>' → logprob: -7.1640729904174805
    8. 's' → logprob: -7.2890729904174805
    9. ' )' → logprob: -7.4140729904174805
    10. ' 
' → logprob: -7.6640729904174805

Token 60: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3307085633277893
    2. ' =' → logprob: -1.3307085037231445
    3. ',' → logprob: -4.2057085037231445
    4. '=int' → logprob: -6.0807085037231445
    5. 's' → logprob: -10.580708503723145
    6. ',N' → logprob: -10.830708503723145
    7. 'int' → logprob: -11.330708503723145
    8. ' ,' → logprob: -11.455708503723145
    9. ',int' → logprob: -12.205708503723145
    10. ')' → logprob: -12.455708503723145

Token 61: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10189381241798401
    2. 'int' → logprob: -2.351893901824951
    3. ' float' → logprob: -6.476893901824951
    4. 'float' → logprob: -8.851893424987793
    5. '[int' → logprob: -13.976893424987793
    6. '=int' → logprob: -14.101893424987793
    7. '(int' → logprob: -14.226893424987793
    8. '	int' → logprob: -14.351893424987793
    9. ' ' → logprob: -14.726893424987793
    10. ' in' → logprob: -15.601893424987793

Token 62: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -6.64708495605737e-05
    2. '(' → logprob: -9.625066757202148
    3. '()' → logprob: -16.50006675720215
    4. '(N' → logprob: -16.62506675720215
    5. ' (' → logprob: -17.12506675720215
    6. '(S' → logprob: -17.87506675720215
    7. '(
' → logprob: -18.00006675720215
    8. '((' → logprob: -18.12506675720215
    9. '(A' → logprob: -18.37506675720215
    10. '(T' → logprob: -18.62506675720215

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12703078985214233
    2. ')
' → logprob: -2.127030849456787
    3. ' )' → logprob: -10.377030372619629
    4. ')

' → logprob: -10.752030372619629
    5. ' )
' → logprob: -10.877030372619629
    6. '<|end|>' → logprob: -11.252030372619629
    7. ')
' → logprob: -11.627030372619629
    8. '       ' → logprob: -12.752030372619629
    9. '   ' → logprob: -13.252030372619629
    10. ' ' → logprob: -14.252030372619629

Token 64: '       ' (ID: 309)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5517340302467346
    2. ' ' → logprob: -1.5517339706420898
    3. 'N' → logprob: -1.8017339706420898
    4. '<|end|>' → logprob: -3.80173397064209
    5. ' ' → logprob: -4.05173397064209
    6. ',' → logprob: -6.05173397064209
    7. '       ' → logprob: -6.17673397064209
    8. '        ' → logprob: -7.67673397064209
    9. '    ' → logprob: -7.92673397064209
    10. ')' → logprob: -7.92673397064209

Token 65: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0076598734594881535
    2. ' N' → logprob: -4.882659912109375
    3. 'int' → logprob: -10.132659912109375
    4. ' int' → logprob: -12.257659912109375
    5. ' ' → logprob: -13.507659912109375
    6. 'n' → logprob: -13.570159912109375
    7. 'M' → logprob: -13.757659912109375
    8. '   ' → logprob: -14.320159912109375
    9. '       ' → logprob: -14.570159912109375
    10. 'float' → logprob: -14.570159912109375

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38766855001449585
    2. ' =' → logprob: -1.1376686096191406
    3. '=int' → logprob: -7.137668609619141
    4. ')' → logprob: -14.13766860961914
    5. '<|end|>' → logprob: -14.51266860961914
    6. ' ' → logprob: -15.01266860961914
    7. '＝' → logprob: -15.51266860961914
    8. 'int' → logprob: -16.38766860961914
    9. '```' → logprob: -16.38766860961914
    10. '=

' → logprob: -16.63766860961914

Token 67: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038110461086034775
    2. ' int' → logprob: -3.2881104946136475
    3. 'float' → logprob: -11.038110733032227
    4. '-' → logprob: -11.538110733032227
    5. ' -' → logprob: -11.538110733032227
    6. '(int' → logprob: -11.913110733032227
    7. '0' → logprob: -11.913110733032227
    8. '-int' → logprob: -12.163110733032227
    9. ' ' → logprob: -12.788110733032227
    10. '[int' → logprob: -13.163110733032227

Token 68: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00021021578868385404
    2. '(' → logprob: -8.62520980834961
    3. 'N' → logprob: -11.25020980834961
    4. ' (' → logprob: -11.87520980834961
    5. '(M' → logprob: -12.62520980834961
    6. ')' → logprob: -12.87520980834961
    7. '(n' → logprob: -14.25020980834961
    8. ' ' → logprob: -14.50020980834961
    9. ' N' → logprob: -14.62520980834961
    10. '[N' → logprob: -14.93770980834961

Token 69: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016049619764089584
    2. ')
' → logprob: -4.141049385070801
    3. ')

' → logprob: -12.5160493850708
    4. '<|end|>' → logprob: -12.8910493850708
    5. ' )' → logprob: -13.1410493850708
    6. ')
' → logprob: -13.3910493850708
    7. '   ' → logprob: -13.5160493850708
    8. '       ' → logprob: -13.8910493850708
    9. '+' → logprob: -14.8910493850708
    10. '#' → logprob: -15.0160493850708

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6834412813186646
    2. 's' → logprob: -1.8084412813186646
    3. '<|end|>' → logprob: -2.183441162109375
    4. '   ' → logprob: -2.683441162109375
    5. ' if' → logprob: -3.183441162109375
    6. 'month' → logprob: -3.558441162109375
    7. '
' → logprob: -3.808441162109375
    8. ' savings' → logprob: -4.183441162109375
    9. 'if' → logprob: -4.183441162109375
    10. ' month' → logprob: -5.058441162109375

Token 71: ' savings' (ID: 22381)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7149340510368347
    2. ' savings' → logprob: -1.4649341106414795
    3. 'if' → logprob: -1.7149341106414795
    4. ' if' → logprob: -2.7149341106414795
    5. 'month' → logprob: -3.9649341106414795
    6. ' month' → logprob: -5.2149338722229
    7. 'saving' → logprob: -6.9649338722229
    8. '   ' → logprob: -7.2149338722229
    9. 're' → logprob: -7.2149338722229
    10. 'monthly' → logprob: -7.4649338722229

Token 72: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07112478464841843
    2. '+=' → logprob: -2.696124792098999
    3. '=' → logprob: -7.69612455368042
    4. ' =' → logprob: -7.69612455368042
    5. ' -=' → logprob: -8.821125030517578
    6. '+' → logprob: -9.321125030517578
    7. '+=(' → logprob: -10.821125030517578
    8. ' +' → logprob: -11.571125030517578
    9. '-=' → logprob: -13.071125030517578
    10. '	' → logprob: -13.071125030517578

Token 73: ' (' (ID: 350)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.01768754981458187
    2. 'N' → logprob: -4.8926873207092285
    3. ' M' → logprob: -4.8926873207092285
    4. '(M' → logprob: -6.2676873207092285
    5. ' (' → logprob: -8.767687797546387
    6. '(' → logprob: -9.392687797546387
    7. '100' → logprob: -9.392687797546387
    8. ' N' → logprob: -9.517687797546387
    9. '(N' → logprob: -9.642687797546387
    10. ' ' → logprob: -10.267687797546387

Token 74: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0312191192060709
    2. 'N' → logprob: -3.531219005584717
    3. ' M' → logprob: -6.781219005584717
    4. '12' → logprob: -8.531219482421875
    5. ' N' → logprob: -10.406219482421875
    6. '100' → logprob: -11.031219482421875
    7. '-' → logprob: -11.156219482421875
    8. 'L' → logprob: -11.406219482421875
    9. 's' → logprob: -11.656219482421875
    10. '(M' → logprob: -12.343719482421875

Token 75: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11472392827272415
    2. '-' → logprob: -2.2397239208221436
    3. '+' → logprob: -7.614724159240723
    4. '-N' → logprob: -7.739724159240723
    5. '*' → logprob: -7.989724159240723
    6. ' +' → logprob: -7.989724159240723
    7. ' *' → logprob: -8.864724159240723
    8. ' ' → logprob: -9.614724159240723
    9. ')' → logprob: -9.739724159240723
    10. ' )' → logprob: -11.614724159240723

Token 76: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08920934796333313
    2. ' N' → logprob: -2.4642093181610107
    3. ' ' → logprob: -9.08920955657959
    4. ')' → logprob: -9.21420955657959
    5. ' )' → logprob: -11.96420955657959
    6. '<|end|>' → logprob: -12.08920955657959
    7. '   ' → logprob: -12.46420955657959
    8. ' (' → logprob: -12.46420955657959
    9. 'M' → logprob: -12.46420955657959
    10. '  ' → logprob: -12.65170955657959

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002698831958696246
    2. ' )' → logprob: -6.12769889831543
    3. ')
' → logprob: -7.62769889831543
    4. ')*' → logprob: -11.87769889831543
    5. ' )
' → logprob: -12.12769889831543
    6. ')

' → logprob: -12.62769889831543
    7. '*' → logprob: -13.12769889831543
    8. ')>' → logprob: -13.12769889831543
    9. '>' → logprob: -13.37769889831543
    10. '   ' → logprob: -13.75269889831543

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2537218928337097
    2. '   ' → logprob: -1.8787219524383545
    3. ' if' → logprob: -3.2537219524383545
    4. 'if' → logprob: -3.7537219524383545
    5. 'month' → logprob: -5.378721714019775
    6. ' month' → logprob: -5.753721714019775
    7. '```' → logprob: -7.378721714019775
    8. '        
' → logprob: -8.378722190856934
    9. '
' → logprob: -8.628722190856934
    10. ' ' → logprob: -9.753722190856934

Token 79: ' month' (ID: 2944)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29791712760925293
    2. 'month' (adapté à ' month') → logprob: -2.297917127609253
    3. ' if' → logprob: -2.672917127609253
    4. '   ' → logprob: -2.672917127609253
    5. ' month' → logprob: -4.547917366027832
    6. '       ' → logprob: -4.797917366027832
    7. ' ' → logprob: -9.672917366027832
    8. 's' → logprob: -10.672917366027832
    9. '    ' → logprob: -10.922917366027832
    10. '	if' → logprob: -11.047917366027832

Token 80: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2529684007167816
    2. '+=' → logprob: -1.502968430519104
    3. '+' → logprob: -7.0029683113098145
    4. '=' → logprob: -10.252968788146973
    5. ' =' → logprob: -10.377968788146973
    6. ' +' → logprob: -10.502968788146973
    7. '<|end|>' → logprob: -11.127968788146973
    8. ']+=' → logprob: -11.877968788146973
    9. '++' → logprob: -12.127968788146973
    10. ' ' → logprob: -13.002968788146973

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. '+' → logprob: -17.005233764648438
    4. '   ' → logprob: -17.255233764648438
    5. ' ' → logprob: -17.255233764648438
    6. '<|end|>' → logprob: -17.380233764648438
    7. '```' → logprob: -17.880233764648438
    8. '0' → logprob: -18.130233764648438
    9. ' +' → logprob: -18.567733764648438
    10. '2' → logprob: -18.880233764648438

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.250011444091797
    4. '<|end|>' → logprob: -18.000011444091797
    5. '```' → logprob: -18.375011444091797
    6. '6' → logprob: -18.750011444091797
    7. '+' → logprob: -18.875011444091797
    8. '0' → logprob: -18.937511444091797
    9. '  ' → logprob: -19.125011444091797
    10. '`' → logprob: -19.500011444091797

Token 83: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2295335978269577
    2. '   ' → logprob: -2.4795336723327637
    3. '<|end|>' → logprob: -2.6045336723327637
    4. '
' → logprob: -3.6045336723327637
    5. '```' → logprob: -4.104533672332764
    6. '<|end|>' → logprob: -6.854533672332764
    7. ' if' → logprob: -6.979533672332764
    8. '        
' → logprob: -7.604533672332764
    9. '    
' → logprob: -8.479533195495605
    10. '  
' → logprob: -8.604533195495605

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2453611046075821
    2. '   ' → logprob: -1.745361089706421
    3. '
' → logprob: -3.995361089706421
    4. '<|end|>' → logprob: -4.370361328125
    5. '```' → logprob: -5.120361328125
    6. ' if' → logprob: -5.995361328125
    7. '        
' → logprob: -7.120361328125
    8. 'if' → logprob: -7.120361328125
    9. '<|end|>' → logprob: -7.870361328125
    10. '    
' → logprob: -7.995361328125

Token 85: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5554371476173401
    2. ' if' → logprob: -0.9304371476173401
    3. '       ' → logprob: -3.6804370880126953
    4. '   ' → logprob: -5.055437088012695
    5. '```' → logprob: -9.055437088012695
    6. ' ' → logprob: -9.930437088012695
    7. '
' → logprob: -11.430437088012695
    8. '	if' → logprob: -11.555437088012695
    9. '  ' → logprob: -12.180437088012695
    10. '    ' → logprob: -12.680437088012695

Token 86: ' savings' (ID: 22381)
  Prédit: ' savings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' savings' → logprob: -0.003227740991860628
    2. 's' → logprob: -5.753227710723877
    3. ' saving' → logprob: -11.003228187561035
    4. ' ' → logprob: -11.753228187561035
    5. 'Savings' → logprob: -12.128228187561035
    6. '   ' → logprob: -12.628228187561035
    7. '	s' → logprob: -12.753228187561035
    8. '(s' → logprob: -12.878228187561035
    9. ' (' → logprob: -13.628228187561035
    10. ' s' → logprob: -13.628228187561035

Token 87: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5783417224884033
    2. ' >=' → logprob: -0.8283417224884033
    3. '>' → logprob: -6.578341484069824
    4. ' >' → logprob: -7.078341484069824
    5. '<' → logprob: -9.328341484069824
    6. ' <' → logprob: -10.078341484069824
    7. ' ' → logprob: -11.203341484069824
    8. ']>=' → logprob: -12.328341484069824
    9. ')>=' → logprob: -12.828341484069824
    10. '%' → logprob: -12.953341484069824

Token 88: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005361348390579224
    2. ' L' → logprob: -5.380361557006836
    3. '100' → logprob: -7.755361557006836
    4. '   ' → logprob: -9.380361557006836
    5. ' ' → logprob: -9.630361557006836
    6. '300' → logprob: -10.380361557006836
    7. '500' → logprob: -10.505361557006836
    8. '200' → logprob: -11.130361557006836
    9. '  ' → logprob: -11.505361557006836
    10. '    ' → logprob: -11.505361557006836

Token 89: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001229634741321206
    2. ':
' → logprob: -6.751229763031006
    3. '       ' → logprob: -10.626229286193848
    4. ' and' → logprob: -11.001229286193848
    5. ' :' → logprob: -11.626229286193848
    6. ':return' → logprob: -13.001229286193848
    7. '   ' → logprob: -13.251229286193848
    8. '           ' → logprob: -13.376229286193848
    9. '):' → logprob: -14.001229286193848
    10. ' or' → logprob: -14.501229286193848

Token 90: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11302249133586884
    2. 'not' → logprob: -2.238022565841675
    3. ' reached' → logprob: -9.238022804260254
    4. 're' → logprob: -9.738022804260254
    5. '(not' → logprob: -10.863022804260254
    6. '	not' → logprob: -11.613022804260254
    7. ' ' → logprob: -11.988022804260254
    8. ' no' → logprob: -12.988022804260254
    9. '   ' → logprob: -13.113022804260254
    10. ' month' → logprob: -13.613022804260254

Token 91: ' reached' (ID: 15237)
  Prédit: ' reached'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reached' → logprob: -0.1269560307264328
    2. 're' → logprob: -2.126955986022949
    3. ' ' → logprob: -11.50195598602295
    4. '   ' → logprob: -12.00195598602295
    5. 'Reached' → logprob: -12.12695598602295
    6. '	re' → logprob: -12.87695598602295
    7. '  ' → logprob: -13.62695598602295
    8. 'reach' → logprob: -14.50195598602295
    9. ' ' → logprob: -15.00195598602295
    10. 'reachable' → logprob: -15.50195598602295

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00031043673516251147
    2. ' :' → logprob: -8.625310897827148
    3. ':
' → logprob: -9.000310897827148
    4. '):' → logprob: -13.625310897827148
    5. '>:' → logprob: -13.750310897827148
    6. '_:' → logprob: -13.750310897827148
    7. 'and' → logprob: -14.000310897827148
    8. ' and' → logprob: -14.250310897827148
    9. ':

' → logprob: -14.375310897827148
    10. ' :
' → logprob: -15.125310897827148

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06771303713321686
    2. ':' → logprob: -2.8177130222320557
    3. '       ' → logprob: -6.192713260650635
    4. ':
' → logprob: -6.192713260650635
    5. '<|end|>' → logprob: -7.942713260650635
    6. ' :' → logprob: -8.567712783813477
    7. '```' → logprob: -8.817712783813477
    8. '<|end|>' → logprob: -8.817712783813477
    9. '            
' → logprob: -9.067712783813477
    10. '\n' → logprob: -9.192712783813477

Token 94: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.031294796615839005
    2. ' print' → logprob: -3.656294822692871
    3. 'month' → logprob: -5.906294822692871
    4. '           ' → logprob: -6.281294822692871
    5. ' month' → logprob: -8.281294822692871
    6. '   ' → logprob: -10.281294822692871
    7. '```' → logprob: -10.656294822692871
    8. '               ' → logprob: -10.781294822692871
    9. 'break' → logprob: -11.406294822692871
    10. '       ' → logprob: -11.906294822692871

Token 95: '(month' (ID: 88975)
  Prédit: '(month'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(month' → logprob: -0.07713253796100616
    2. '(' → logprob: -2.9521324634552
    3. '(f' → logprob: -4.452132701873779
    4. 'month' → logprob: -5.202132701873779
    5. '("' → logprob: -6.452132701873779
    6. '(i' → logprob: -6.577132701873779
    7. '('' → logprob: -6.702132701873779
    8. ' month' → logprob: -8.452132225036621
    9. ' (' → logprob: -8.702132225036621
    10. '((' → logprob: -9.452132225036621

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23936507105827332
    2. ')
' → logprob: -1.6143651008605957
    3. ' )' → logprob: -4.864365100860596
    4. ',' → logprob: -5.614365100860596
    5. ' )
' → logprob: -6.114365100860596
    6. ' ,' → logprob: -8.989364624023438
    7. ',end' → logprob: -10.114364624023438
    8. ')
' → logprob: -10.739364624023438
    9. '")' → logprob: -11.489364624023438
    10. ')

' → logprob: -11.614364624023438

Token 97: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000755427754484117
    2. '       ' → logprob: -7.875755310058594
    3. 're' → logprob: -8.500755310058594
    4. '   ' → logprob: -9.375755310058594
    5. '            
' → logprob: -10.625755310058594
    6. 'Reached' → logprob: -10.750755310058594
    7. ' reached' → logprob: -11.375755310058594
    8. '               ' → logprob: -11.875755310058594
    9. '        
' → logprob: -12.000755310058594
    10. '<|end|>' → logprob: -12.500755310058594

Token 98: ' reached' (ID: 15237)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.015490120276808739
    2. '           ' → logprob: -4.2654900550842285
    3. ' reached' → logprob: -6.8904900550842285
    4. '       ' → logprob: -8.390490531921387
    5. '   ' → logprob: -9.515490531921387
    6. 'Reached' → logprob: -13.140490531921387
    7. '```' → logprob: -13.515490531921387
    8. '            
' → logprob: -13.640490531921387
    9. '          ' → logprob: -14.015490531921387
    10. '
' → logprob: -14.765490531921387

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007294706883840263
    2. ' =' → logprob: -7.250729560852051
    3. '=True' → logprob: -10.87572956085205
    4. 'True' → logprob: -14.62572956085205
    5. ' True' → logprob: -18.000728607177734
    6. '=
' → logprob: -20.000728607177734
    7. 's' → logprob: -20.125728607177734
    8. '_=' → logprob: -20.250728607177734
    9. '   ' → logprob: -20.375728607177734
    10. '＝' → logprob: -20.375728607177734

Token 100: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.06196802109479904
    2. ' True' → logprob: -2.8119680881500244
    3. '(True' → logprob: -15.311967849731445
    4. '=True' → logprob: -15.811967849731445
    5. 'Tr' → logprob: -16.811967849731445
    6. ' Tru' → logprob: -18.186967849731445
    7. ' ' → logprob: -18.311967849731445
    8. 'False' → logprob: -19.061967849731445
    9. '   ' → logprob: -19.186967849731445
    10. 'T' → logprob: -19.311967849731445

Token 101: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6332190632820129
    2. 'not' → logprob: -0.7582190632820129
    3. '   ' → logprob: -7.633219242095947
    4. 're' → logprob: -9.758218765258789
    5. ' reached' → logprob: -9.883218765258789
    6. '(not' → logprob: -11.383218765258789
    7. ' ' → logprob: -12.883218765258789
    8. ' no' → logprob: -13.258218765258789
    9. 'n' → logprob: -13.258218765258789
    10. 'no' → logprob: -13.383218765258789

Token 105: ' reached' (ID: 15237)
  Prédit: ' reached'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reached' → logprob: -0.03805594891309738
    2. 're' → logprob: -3.288055896759033
    3. '   ' → logprob: -11.788056373596191
    4. ' ' → logprob: -12.538056373596191
    5. '  ' → logprob: -13.663056373596191
    6. ' ' → logprob: -14.288056373596191
    7. 'Reached' → logprob: -14.538056373596191
    8. 'reach' → logprob: -14.913056373596191
    9. 's' → logprob: -15.788056373596191
    10. 'reachable' → logprob: -15.913056373596191

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5760340690612793
    2. ':
' → logprob: -0.8260340690612793
    3. '   ' → logprob: -9.576034545898438
    4. ' :
' → logprob: -11.951034545898438
    5. '():
' → logprob: -12.076034545898438
    6. ':

' → logprob: -12.201034545898438
    7. ' :' → logprob: -12.826034545898438
    8. ':
' → logprob: -13.451034545898438
    9. ' and' → logprob: -13.826034545898438
    10. 'print' → logprob: -14.201034545898438

Token 107: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7072861790657043
    2. 'print' → logprob: -0.7072861790657043
    3. ' print' → logprob: -4.457286357879639
    4. '```' → logprob: -7.082286357879639
    5. '0' → logprob: -8.70728588104248
    6. 'No' → logprob: -8.70728588104248
    7. '    ' → logprob: -8.95728588104248
    8. '       ' → logprob: -9.08228588104248
    9. '>' → logprob: -9.45728588104248
    10. 'Print' → logprob: -9.45728588104248

Token 108: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08008625358343124
    2. ' print' → logprob: -2.5800862312316895
    3. '   ' → logprob: -6.8300862312316895
    4. ' ' → logprob: -10.205086708068848
    5. '    ' → logprob: -10.580086708068848
    6. '0' → logprob: -12.205086708068848
    7. '  ' → logprob: -12.205086708068848
    8. '```' → logprob: -12.330086708068848
    9. '	print' → logprob: -12.455086708068848
    10. ' no' → logprob: -12.455086708068848

Token 109: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.30831050872802734
    2. '('' → logprob: -1.5583105087280273
    3. '(' → logprob: -3.1833105087280273
    4. '(-' → logprob: -4.433310508728027
    5. '(L' → logprob: -7.558310508728027
    6. '(s' → logprob: -8.183310508728027
    7. '0' → logprob: -8.933310508728027
    8. '(month' → logprob: -9.183310508728027
    9. '(re' → logprob: -9.558310508728027
    10. '()' → logprob: -9.933310508728027

Token 110: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.7144232392311096
    2. 'Def' → logprob: -1.7144231796264648
    3. '-' → logprob: -2.714423179626465
    4. 'N' → logprob: -3.089423179626465
    5. '0' → logprob: -3.339423179626465
    6. 'Nao' → logprob: -3.339423179626465
    7. 'No' → logprob: -3.839423179626465
    8. 'failure' → logprob: -4.214423179626465
    9. 'Impossible' → logprob: -4.464423179626465
    10. 'NE' → logprob: -4.589423179626465

Token 111: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -7.386147626675665e-05
    2. ')' → logprob: -10.000073432922363
    3. '")
' → logprob: -11.375073432922363
    4. '')' → logprob: -11.875073432922363
    5. ')")' → logprob: -12.250073432922363
    6. 'N' → logprob: -13.875073432922363
    7. '"' → logprob: -14.500073432922363
    8. '}")' → logprob: -14.875073432922363
    9. '!")' → logprob: -14.875073432922363
    10. 'I' → logprob: -15.000073432922363


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 87
Précision stricte (1ère position): 35.78%
Précision adaptée (1ère position): 39.45%
Précision (top 10): 79.82%
================================================================================
