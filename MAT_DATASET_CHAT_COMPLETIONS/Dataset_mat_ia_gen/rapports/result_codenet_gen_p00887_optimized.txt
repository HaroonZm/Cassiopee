================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def gauss_elimination(matrix, vector, n):
    for i in range(n):
        pivot = -1
        for r in range(i, n):
            if matrix[r][i]:
                pivot = r
                break
        if pivot == -1:
            continue
        if pivot != i:
            matrix[i], matrix[pivot] = matrix[pivot], matrix[i]
            vector[i], vector[pivot] = vector[pivot], vector[i]
        for r in range(i+1, n):
            if matrix[r][i]:
                for c in range(i, n):
                    matrix[r][c] ^= matrix[i][c]
                vector[r] ^= vector[i]

    for i in reversed(range(n)):
        s = vector[i]
        for c in range(i+1, n):
            s ^= (matrix[i][c] & vector[c])
        if matrix[i][i] == 0 and s != 0:
            return False
        vector[i] = s
    return True

def main():
    input = sys.stdin.readline
    while True:
        m,n,d = map(int,input().split())
        if m==0 and n==0 and d==0:
            break
        size = m*n
        lights = []
        for _ in range(n):
            lights.extend(map(int,input().split()))
        A = [0]*size
        for i in range(size):
            A[i] = 0
        matrix = [[0]*size for _ in range(size)]
        for r in range(n):
            for c in range(m):
                idx = r*m+c
                for rr in range(n):
                    for cc in range(m):
                        if abs(r-rr)+abs(c-cc) == d or (r==rr and c==cc):
                            matrix[idx][rr*m+cc] = 1
        vector = lights[:]
        if gauss_elimination(matrix, vector, size):
            print(1)
        else:
            print(0)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18349961936473846
    2. '\n' → logprob: -2.183499574661255
    3. 'import' → logprob: -3.558499574661255
    4. '<|end|>' → logprob: -4.808499813079834
    5. '' → logprob: -5.808499813079834
    6. 'newline' → logprob: -5.933499813079834
    7. '\' → logprob: -6.058499813079834
    8. 'print' → logprob: -6.433499813079834
    9. '[' → logprob: -6.558499813079834
    10. '<|end|>' → logprob: -6.808499813079834

Token 4: ' ga' (ID: 6666)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02042287401854992
    2. ' ' → logprob: -5.39542293548584
    3. '  ' → logprob: -6.39542293548584
    4. '<|end|>' → logprob: -6.39542293548584
    5. ' process' → logprob: -6.52042293548584
    6. ' space' → logprob: -6.64542293548584
    7. ' sys' → logprob: -6.89542293548584
    8. ' main' → logprob: -6.89542293548584
    9. ' a' → logprob: -7.02042293548584
    10. ')' → logprob: -7.27042293548584

Token 5: 'uss' (ID: 1824)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2304449826478958
    2. 'me' → logprob: -1.6054450273513794
    3. 'r' → logprob: -6.73044490814209
    4. 'def' → logprob: -6.98044490814209
    5. 'mes' → logprob: -7.10544490814209
    6. 't' → logprob: -7.73044490814209
    7. 'g' → logprob: -8.48044490814209
    8. 'ml' → logprob: -8.85544490814209
    9. 'l' → logprob: -8.98044490814209
    10. 's' → logprob: -8.98044490814209

Token 6: '_el' (ID: 55168)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14386162161827087
    2. '_' → logprob: -3.0188615322113037
    3. ' (' → logprob: -3.3938615322113037
    4. '_kernel' → logprob: -4.518861770629883
    5. ')' → logprob: -4.893861770629883
    6. '(a' → logprob: -5.268861770629883
    7. '(n' → logprob: -5.393861770629883
    8. 'ian' → logprob: -5.518861770629883
    9. '(_' → logprob: -5.768861770629883
    10. ' _' → logprob: -5.893861770629883

Token 7: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -0.15019574761390686
    2. 'im' → logprob: -2.150195837020874
    3. 'm' → logprob: -4.525195598602295
    4. 'iminate' → logprob: -4.525195598602295
    5. 'i' → logprob: -7.775195598602295
    6. '}' → logprob: -9.525196075439453
    7. '}(' → logprob: -9.525196075439453
    8. 'e' → logprob: -9.650196075439453
    9. '```' → logprob: -9.650196075439453
    10. 'imin' → logprob: -10.025196075439453

Token 8: '(matrix' (ID: 57027)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04917746037244797
    2. '_' → logprob: -3.049177408218384
    3. ' (' → logprob: -8.799177169799805
    4. '```' → logprob: -8.924177169799805
    5. ':' → logprob: -9.674177169799805
    6. '(_' → logprob: -10.299177169799805
    7. '_(' → logprob: -10.549177169799805
    8. '_linear' → logprob: -10.924177169799805
    9. '_:' → logprob: -11.549177169799805
    10. '(n' → logprob: -11.674177169799805

Token 9: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12347795814275742
    2. '[' → logprob: -2.7484779357910156
    3. ',' → logprob: -3.2484779357910156
    4. ')' → logprob: -4.373477935791016
    5. ':' → logprob: -8.623477935791016
    6. '):
' → logprob: -9.248477935791016
    7. '[]):' → logprob: -9.373477935791016
    8. '<|end|>' → logprob: -10.373477935791016
    9. '[row' → logprob: -10.623477935791016
    10. '[:,' → logprob: -10.873477935791016

Token 10: ' vector' (ID: 9727)
  Prédit: ' rhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rhs' → logprob: -0.34516897797584534
    2. ' vector' → logprob: -1.470168948173523
    3. 'vector' → logprob: -3.8451690673828125
    4. 'rhs' → logprob: -4.0951690673828125
    5. ' n' → logprob: -4.2201690673828125
    6. ' b' → logprob: -6.3451690673828125
    7. ' solution' → logprob: -6.4701690673828125
    8. ' vectors' → logprob: -6.9701690673828125
    9. ' size' → logprob: -7.0951690673828125
    10. ' right' → logprob: -7.2201690673828125

Token 11: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012218938209116459
    2. ')' → logprob: -6.876221656799316
    3. ':' → logprob: -9.626221656799316
    4. '):
' → logprob: -9.876221656799316
    5. ',' → logprob: -10.001221656799316
    6. ''):' → logprob: -11.626221656799316
    7. ' ):' → logprob: -12.751221656799316
    8. '[]):' → logprob: -13.126221656799316
    9. '```' → logprob: -13.376221656799316
    10. '   ' → logprob: -13.376221656799316

Token 12: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.29431548714637756
    2. ' size' → logprob: -1.9193154573440552
    3. ' solution' → logprob: -3.4193155765533447
    4. ' rhs' → logprob: -3.7943155765533447
    5. ' tolerance' → logprob: -3.9193155765533447
    6. 'n' → logprob: -4.544315338134766
    7. ' pivot' → logprob: -5.669315338134766
    8. ' unknown' → logprob: -6.044315338134766
    9. ' augmented' → logprob: -6.294315338134766
    10. ' epsilon' → logprob: -6.669315338134766

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002811290556564927
    2. ')' → logprob: -6.002811431884766
    3. ':' → logprob: -8.252811431884766
    4. ''):' → logprob: -10.127811431884766
    5. '):
' → logprob: -10.752811431884766
    6. ' ):' → logprob: -11.877811431884766
    7. ',' → logprob: -13.252811431884766
    8. '   ' → logprob: -14.002811431884766
    9. '"):' → logprob: -14.502811431884766
    10. ' ' → logprob: -14.877811431884766

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48126938939094543
    2. ':' → logprob: -0.981269359588623
    3. '    
' → logprob: -6.481269359588623
    4. ':
' → logprob: -6.606269359588623
    5. '```' → logprob: -6.856269359588623
    6. ' :' → logprob: -7.106269359588623
    7. '    ' → logprob: -7.856269359588623
    8. '
' → logprob: -8.106269836425781
    9. '\n' → logprob: -8.106269836425781
    10. '):' → logprob: -8.481269836425781

Token 15: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07677823305130005
    2. ' for' → logprob: -2.9517781734466553
    3. '    ' → logprob: -4.826778411865234
    4. 'for' (adapté à ' for') → logprob: -5.076778411865234
    5. '     
' → logprob: -6.451778411865234
    6. '    
' → logprob: -6.826778411865234
    7. ' 
' → logprob: -7.076778411865234
    8. ' if' → logprob: -7.201778411865234
    9. '```' → logprob: -7.701778411865234
    10. ':' → logprob: -8.201778411865234

Token 16: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5766555070877075
    2. ' i' → logprob: -0.8266555070877075
    3. 'i' → logprob: -7.701655387878418
    4. '  ' → logprob: -9.326655387878418
    5. ' row' → logprob: -9.576655387878418
    6. ' range' → logprob: -9.701655387878418
    7. ' _' → logprob: -11.326655387878418
    8. ' ‌' → logprob: -11.826655387878418
    9. ' ```' → logprob: -12.576655387878418
    10. ' r' → logprob: -12.701655387878418

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006216724403202534
    2. 'in' → logprob: -5.131216526031494
    3. ' ' → logprob: -8.381217002868652
    4. '   ' → logprob: -10.881217002868652
    5. '  ' → logprob: -11.006217002868652
    6. '=' → logprob: -12.006217002868652
    7. '	in' → logprob: -12.131217002868652
    8. 'n' → logprob: -12.506217002868652
    9. ' =' → logprob: -13.381217002868652
    10. ')' → logprob: -13.381217002868652

Token 18: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004078997299075127
    2. 'range' → logprob: -5.5040788650512695
    3. '	range' → logprob: -15.12907886505127
    4. ' ' → logprob: -16.129079818725586
    5. ' xrange' → logprob: -16.504079818725586
    6. '(range' → logprob: -17.129079818725586
    7. '```' → logprob: -18.254079818725586
    8. '   ' → logprob: -18.379079818725586
    9. '0' → logprob: -18.379079818725586
    10. '  ' → logprob: -19.004079818725586

Token 19: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6336829662322998
    2. '(' → logprob: -0.8836829662322998
    3. ' (' → logprob: -2.8836829662323
    4. ' ' → logprob: -8.883683204650879
    5. '(i' → logprob: -11.133683204650879
    6. '(len' → logprob: -11.758683204650879
    7. ' n' → logprob: -12.133683204650879
    8. '   ' → logprob: -12.383683204650879
    9. 'n' → logprob: -12.883683204650879
    10. ')' → logprob: -13.383683204650879

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027935877442359924
    2. ' ):' → logprob: -6.127793788909912
    3. '):
' → logprob: -7.502793788909912
    4. '   ' → logprob: -10.502793312072754
    5. ':' → logprob: -11.252793312072754
    6. ')' → logprob: -11.627793312072754
    7. ' ):
' → logprob: -13.002793312072754
    8. '-' → logprob: -13.752793312072754
    9. '+' → logprob: -14.002793312072754
    10. ' ' → logprob: -14.252793312072754

Token 21: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8874061703681946
    2. '    ' → logprob: -1.0124061107635498
    3. '       ' → logprob: -2.01240611076355
    4. '     
' → logprob: -3.26240611076355
    5. ' :' → logprob: -3.51240611076355
    6. '        ' → logprob: -4.637406349182129
    7. '     ' → logprob: -5.387406349182129
    8. ' ' → logprob: -6.012406349182129
    9. '   ' → logprob: -6.262406349182129
    10. '      ' → logprob: -7.012406349182129

Token 22: ' pivot' (ID: 44506)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5991032123565674
    2. ' for' → logprob: -2.0991032123565674
    3. '        ' → logprob: -2.3491032123565674
    4. ' ' → logprob: -2.7241032123565674
    5. 'for' → logprob: -2.8491032123565674
    6. '     
' → logprob: -3.8491032123565674
    7. ':' → logprob: -3.8491032123565674
    8. '       ' → logprob: -4.099102973937988
    9. ' :' → logprob: -4.349102973937988
    10. ' if' → logprob: -5.349102973937988

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10796160995960236
    2. '=' → logprob: -2.357961654663086
    3. '_' → logprob: -5.482961654663086
    4. ' ' → logprob: -5.857961654663086
    5. '_index' → logprob: -8.732961654663086
    6. '_row' → logprob: -8.982961654663086
    7. ' _' → logprob: -9.482961654663086
    8. '   ' → logprob: -9.482961654663086
    9. '_idx' → logprob: -9.607961654663086
    10. ',' → logprob: -10.482961654663086

Token 24: ' -' (ID: 533)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.011095807887613773
    2. 'matrix' → logprob: -4.511096000671387
    3. ' i' → logprob: -10.886096000671387
    4. ' vector' → logprob: -11.386096000671387
    5. '	matrix' → logprob: -12.136096000671387
    6. '   ' → logprob: -12.386096000671387
    7. ' max' → logprob: -12.761096000671387
    8. 'i' → logprob: -13.761096000671387
    9. '0' → logprob: -14.261096000671387
    10. '    ' → logprob: -14.261096000671387

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1648409515619278
    2. 'matrix' → logprob: -2.0398409366607666
    3. 'float' → logprob: -4.914841175079346
    4. '-' → logprob: -4.914841175079346
    5. 'sys' → logprob: -5.914841175079346
    6. ' matrix' → logprob: -6.414841175079346
    7. ' ' → logprob: -7.039841175079346
    8. 'system' → logprob: -8.414840698242188
    9. '999' → logprob: -8.539840698242188
    10. '   ' → logprob: -8.664840698242188

Token 26: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09273580461740494
    2. ' ' → logprob: -2.467735767364502
    3. '<|end|>' → logprob: -6.092735767364502
    4. '   ' → logprob: -8.34273624420166
    5. '    ' → logprob: -8.34273624420166
    6. ' for' → logprob: -8.71773624420166
    7. '
' → logprob: -9.09273624420166
    8. 'for' → logprob: -9.21773624420166
    9. ' 
' → logprob: -9.21773624420166
    10. '  ' → logprob: -9.59273624420166

Token 27: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.640217661857605
    2. ' ' → logprob: -0.765217661857605
    3. '<|end|>' → logprob: -5.3902177810668945
    4. ' for' → logprob: -7.5152177810668945
    5. ' 
' → logprob: -7.7652177810668945
    6. ',' → logprob: -7.7652177810668945
    7. ' if' → logprob: -8.015217781066895
    8. '   ' → logprob: -8.640217781066895
    9. '>' → logprob: -8.765217781066895
    10. '  ' → logprob: -9.140217781066895

Token 28: ' for' (ID: 395)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05508742481470108
    2. ' ' → logprob: -2.9300873279571533
    3. '    ' → logprob: -9.805087089538574
    4. ' for' → logprob: -10.430087089538574
    5. '   ' → logprob: -10.430087089538574
    6. '       ' → logprob: -10.430087089538574
    7. '        ' → logprob: -11.305087089538574
    8. 'for' (adapté à ' for') → logprob: -11.430087089538574
    9. '  ' → logprob: -12.055087089538574
    10. ' i' → logprob: -12.555087089538574

Token 29: ' r' (ID: 428)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.02638959139585495
    2. 'j' → logprob: -3.6513895988464355
    3. ' range' → logprob: -10.526389122009277
    4. ' ' → logprob: -10.901389122009277
    5. 'range' → logprob: -11.151389122009277
    6. '	j' → logprob: -11.776389122009277
    7. '```' → logprob: -11.901389122009277
    8. ' r' → logprob: -12.776389122009277
    9. ' k' → logprob: -12.776389122009277
    10. '    ' → logprob: -13.276389122009277

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001419399632140994
    2. 'in' → logprob: -6.626419544219971
    3. ' ' → logprob: -9.501419067382812
    4. 'ange' → logprob: -12.126419067382812
    5. ' i' → logprob: -12.876419067382812
    6. 'range' → logprob: -13.251419067382812
    7. '	in' → logprob: -13.751419067382812
    8. '   ' → logprob: -13.876419067382812
    9. 's' → logprob: -14.001419067382812
    10. '  ' → logprob: -14.126419067382812

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003604344092309475
    2. 'range' → logprob: -5.628604412078857
    3. '	range' → logprob: -13.8786039352417
    4. ' ' → logprob: -14.0036039352417
    5. '(range' → logprob: -14.1286039352417
    6. ' r' → logprob: -14.6286039352417
    7. ' i' → logprob: -15.0036039352417
    8. ' in' → logprob: -15.1286039352417
    9. ' rango' → logprob: -16.253604888916016
    10. ' xrange' → logprob: -16.378604888916016

Token 32: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.007910504005849361
    2. '(' → logprob: -5.13291072845459
    3. '(n' → logprob: -6.25791072845459
    4. ' (' → logprob: -10.63291072845459
    5. ' i' → logprob: -10.63291072845459
    6. '(range' → logprob: -11.25791072845459
    7. ' range' → logprob: -13.50791072845459
    8. ' ' → logprob: -14.38291072845459
    9. 'i' → logprob: -14.63291072845459
    10. 'range' → logprob: -15.25791072845459

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009061029995791614
    2. ',n' → logprob: -7.750905990600586
    3. ' ,' → logprob: -7.750905990600586
    4. '+' → logprob: -10.250905990600586
    5. '<|end|>' → logprob: -12.875905990600586
    6. ',i' → logprob: -13.875905990600586
    7. '‌,' → logprob: -13.875905990600586
    8. ',
' → logprob: -14.000905990600586
    9. 'n' → logprob: -14.125905990600586
    10. ')' → logprob: -14.750905990600586

Token 34: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4287306070327759
    2. 'n' → logprob: -1.0537306070327759
    3. '	n' → logprob: -10.553730964660645
    4. ')n' → logprob: -14.178730964660645
    5. '(n' → logprob: -14.428730964660645
    6. ')' → logprob: -14.428730964660645
    7. ',n' → logprob: -14.678730964660645
    8. ' ' → logprob: -14.803730964660645
    9. '<n' → logprob: -14.928730964660645
    10. '_n' → logprob: -15.928730964660645

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000829759519547224
    2. '):
' → logprob: -7.125829696655273
    3. ':' → logprob: -11.250829696655273
    4. ')' → logprob: -11.875829696655273
    5. ' ):' → logprob: -13.250829696655273
    6. ',' → logprob: -14.250829696655273
    7. '):
' → logprob: -14.375829696655273
    8. '+' → logprob: -14.625829696655273
    9. '):

' → logprob: -15.000829696655273
    10. '```' → logprob: -15.000829696655273

Token 36: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6302207708358765
    2. ':' → logprob: -1.3802207708358765
    3. ' if' → logprob: -2.380220890045166
    4. '            ' → logprob: -3.380220890045166
    5. ' :' → logprob: -3.380220890045166
    6. ' ' → logprob: -4.005220890045166
    7. '       ' → logprob: -4.380220890045166
    8. '        ' → logprob: -4.880220890045166
    9. 'if' → logprob: -5.630220890045166
    10. ':
' → logprob: -6.005220890045166

Token 37: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16316230595111847
    2. ' ' → logprob: -3.0381622314453125
    3. '           ' → logprob: -3.5381622314453125
    4. '            ' → logprob: -3.6631622314453125
    5. 'if' (adapté à ' if') → logprob: -4.0381622314453125
    6. ' 
' → logprob: -4.5381622314453125
    7. '       ' → logprob: -5.5381622314453125
    8. '        ' → logprob: -5.6631622314453125
    9. '    ' → logprob: -5.7881622314453125
    10. ' \' → logprob: -6.7881622314453125

Token 38: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.11193504184484482
    2. ' abs' → logprob: -2.6119351387023926
    3. 'matrix' → logprob: -3.6119351387023926
    4. 'abs' → logprob: -5.236935138702393
    5. '	matrix' → logprob: -9.236934661865234
    6. '    ' → logprob: -10.611934661865234
    7. ' mat' → logprob: -11.361934661865234
    8. '(matrix' → logprob: -11.486934661865234
    9. ' ' → logprob: -11.736934661865234
    10. '   ' → logprob: -12.111934661865234

Token 39: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0003782416461035609
    2. '[' → logprob: -8.000378608703613
    3. '[i' → logprob: -10.500378608703613
    4. '[row' → logprob: -11.500378608703613
    5. '[s' → logprob: -12.750378608703613
    6. ' [' → logprob: -14.250378608703613
    7. '[t' → logprob: -14.875378608703613
    8. '[n' → logprob: -15.500378608703613
    9. '[x' → logprob: -15.750378608703613
    10. '   ' → logprob: -16.250377655029297

Token 40: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.28648996353149414
    2. '[i' → logprob: -1.4114899635314941
    3. '[r' → logprob: -5.661489963531494
    4. '[I' → logprob: -7.036489963531494
    5. '[' → logprob: -8.036489486694336
    6. ' ][' → logprob: -8.786489486694336
    7. '}[' → logprob: -9.161489486694336
    8. '[j' → logprob: -9.536489486694336
    9. ']' → logprob: -9.536489486694336
    10. ' [' → logprob: -9.911489486694336

Token 41: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2113979209971149e-05
    2. ' i' → logprob: -11.500012397766113
    3. '][' → logprob: -13.500012397766113
    4. '	i' → logprob: -15.250012397766113
    5. ']' → logprob: -16.125011444091797
    6. ',i' → logprob: -16.375011444091797
    7. 'j' → logprob: -17.125011444091797
    8. '```' → logprob: -17.250011444091797
    9. 'r' → logprob: -17.750011444091797
    10. ' ' → logprob: -17.750011444091797

Token 42: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017802569782361388
    2. ' ]' → logprob: -7.001780033111572
    3. ']!=' → logprob: -7.126780033111572
    4. ']==' → logprob: -10.12678050994873
    5. ']:' → logprob: -11.25178050994873
    6. '[' → logprob: -13.25178050994873
    7. ']>' → logprob: -13.25178050994873
    8. '!=' → logprob: -13.62678050994873
    9. ' !=' → logprob: -13.87678050994873
    10. '   ' → logprob: -14.12678050994873

Token 43: '               ' (ID: 506)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0877383947372437
    2. ':' → logprob: -1.7127383947372437
    3. '            ' → logprob: -2.212738513946533
    4. ' and' → logprob: -2.462738513946533
    5. ' >' → logprob: -2.587738513946533
    6. ' ' → logprob: -2.837738513946533
    7. '==' → logprob: -2.962738513946533
    8. '           ' → logprob: -4.087738513946533
    9. ' >=' → logprob: -4.087738513946533
    10. ' :' → logprob: -4.337738513946533

Token 44: ' pivot' (ID: 44506)
  Prédit: ' pivot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pivot' → logprob: -0.2815360724925995
    2. 'pivot' (adapté à ' pivot') → logprob: -1.4065361022949219
    3. ' ' → logprob: -8.406536102294922
    4. '            ' → logprob: -9.656536102294922
    5. ' piv' → logprob: -10.906536102294922
    6. '<|end|>' → logprob: -11.031536102294922
    7. '                ' → logprob: -11.156536102294922
    8. ' 
' → logprob: -11.406536102294922
    9. '=' → logprob: -12.031536102294922
    10. ' ' → logprob: -12.156536102294922

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815626211464405
    2. '=' → logprob: -4.018156051635742
    3. ' ' → logprob: -12.018156051635742
    4. ' =
' → logprob: -15.268156051635742
    5. '<|end|>' → logprob: -17.393156051635742
    6. ' ==' → logprob: -17.643156051635742
    7. ' =)' → logprob: -18.268156051635742
    8. '=r' → logprob: -18.643156051635742
    9. ' ' → logprob: -18.768156051635742
    10. '=

' → logprob: -18.768156051635742

Token 46: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1269282102584839
    2. ' r' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.876928329467773
    4. ' ' → logprob: -16.876928329467773
    5. '_r' → logprob: -16.876928329467773
    6. '	r' → logprob: -17.626928329467773
    7. 'space' → logprob: -19.626928329467773
    8. ' `' → logprob: -19.689428329467773
    9. '<|end|>' → logprob: -20.251928329467773
    10. 's' → logprob: -20.314428329467773

Token 47: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037322607822716236
    2. '<|end|>' → logprob: -6.003732204437256
    3. '                ' → logprob: -7.003732204437256
    4. '                   ' → logprob: -9.128732681274414
    5. '<|end|>' → logprob: -9.753732681274414
    6. 'break' → logprob: -10.503732681274414
    7. ' break' → logprob: -10.503732681274414
    8. '                       ' → logprob: -10.753732681274414
    9. '           ' → logprob: -11.128732681274414
    10. '              ' → logprob: -11.378732681274414

Token 48: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19672471284866333
    2. '<|end|>' → logprob: -1.8217246532440186
    3. '                ' → logprob: -5.321724891662598
    4. '<|end|>' → logprob: -5.696724891662598
    5. '                   ' → logprob: -5.821724891662598
    6. ' break' → logprob: -6.196724891662598
    7. '
' → logprob: -6.946724891662598
    8. '           ' → logprob: -8.196724891662598
    9. '       ' → logprob: -8.196724891662598
    10. ' ' → logprob: -8.196724891662598

Token 49: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07796583324670792
    2. ' break' → logprob: -3.20296573638916
    3. 'break' (adapté à ' break') → logprob: -3.45296573638916
    4. '	break' → logprob: -6.20296573638916
    5. '                ' → logprob: -8.20296573638916
    6. '			' → logprob: -8.95296573638916
    7. '<|end|>' → logprob: -9.82796573638916
    8. '	           ' → logprob: -10.07796573638916
    9. '_break' → logprob: -10.45296573638916
    10. '                   ' → logprob: -10.45296573638916

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2716463506221771
    2. '<|end|>' → logprob: -2.02164626121521
    3. '       ' → logprob: -2.77164626121521
    4. ' 
' → logprob: -4.271646499633789
    5. '\n' → logprob: -4.771646499633789
    6. '        
' → logprob: -4.896646499633789
    7. '  
' → logprob: -5.396646499633789
    8. '```' → logprob: -5.896646499633789
    9. '<|end|>' → logprob: -6.396646499633789
    10. '    
' → logprob: -6.896646499633789

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5335277915000916
    2. '<|end|>' → logprob: -1.1585278511047363
    3. '
' → logprob: -2.5335278511047363
    4. '        
' → logprob: -5.408527851104736
    5. ' 
' → logprob: -5.658527851104736
    6. '\n' → logprob: -5.658527851104736
    7. '  
' → logprob: -5.658527851104736
    8. '<|end|>' → logprob: -6.158527851104736
    9. '    
' → logprob: -7.783527851104736
    10. '```' → logprob: -8.033527374267578

Token 52: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.545703649520874
    2. '       ' → logprob: -1.170703649520874
    3. '<|end|>' → logprob: -2.795703649520874
    4. ' 
' → logprob: -3.920703649520874
    5. '\n' → logprob: -4.670703887939453
    6. '  
' → logprob: -4.920703887939453
    7. '        
' → logprob: -5.170703887939453
    8. '```' → logprob: -6.170703887939453
    9. '<|end|>' → logprob: -7.045703887939453
    10. '        ' → logprob: -7.670703887939453

Token 53: ' pivot' (ID: 44506)
  Prédit: ' pivot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pivot' → logprob: -0.008910824544727802
    2. 'pivot' → logprob: -4.758910655975342
    3. ' not' → logprob: -8.2589111328125
    4. ' piv' → logprob: -10.6339111328125
    5. ' ' → logprob: -11.3839111328125
    6. ' ' → logprob: -14.7589111328125
    7. 'not' → logprob: -15.0089111328125
    8. ' matrix' → logprob: -15.2589111328125
    9. '	p' → logprob: -15.6339111328125
    10. ' p' → logprob: -16.0089111328125

Token 54: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006991234607994556
    2. '==' → logprob: -5.006991386413574
    3. '==-' → logprob: -8.381991386413574
    4. ' <' → logprob: -10.881991386413574
    5. ' !=' → logprob: -11.881991386413574
    6. '=' → logprob: -12.006991386413574
    7. '<|end|>' → logprob: -12.131991386413574
    8. '<' → logprob: -12.506991386413574
    9. ' =' → logprob: -13.256991386413574
    10. ')' → logprob: -13.381991386413574

Token 55: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2021770477294922
    2. ' -' → logprob: -1.7021770477294922
    3. '-i' → logprob: -7.202177047729492
    4. ' ' → logprob: -12.202177047729492
    5. 'i' → logprob: -12.327177047729492
    6. ' i' → logprob: -12.327177047729492
    7. '	' → logprob: -12.827177047729492
    8. '   ' → logprob: -14.702177047729492
    9. '=i' → logprob: -15.077177047729492
    10. '=' → logprob: -15.202177047729492

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.562501907348633
    4. '１' → logprob: -18.125001907348633
    5. '१' → logprob: -18.125001907348633
    6. '   ' → logprob: -18.187501907348633
    7. '১' → logprob: -18.437501907348633
    8. '۱' → logprob: -18.562501907348633
    9. ' -' → logprob: -18.687501907348633
    10. '-' → logprob: -18.750001907348633

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035056343767791986
    2. ':
' → logprob: -6.003505706787109
    3. '           ' → logprob: -7.878505706787109
    4. '       ' → logprob: -8.00350570678711
    5. ' :' → logprob: -8.37850570678711
    6. ':return' → logprob: -10.75350570678711
    7. '<|end|>' → logprob: -11.25350570678711
    8. ' :
' → logprob: -11.75350570678711
    9. '               ' → logprob: -12.12850570678711
    10. '   ' → logprob: -12.12850570678711

Token 58: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3085377812385559
    2. '           ' → logprob: -2.308537721633911
    3. ' raise' → logprob: -2.308537721633911
    4. ' continue' → logprob: -3.308537721633911
    5. ' ' → logprob: -4.80853796005249
    6. 'return' → logprob: -4.93353796005249
    7. ' 
' → logprob: -5.18353796005249
    8. '            ' → logprob: -5.80853796005249
    9. 'raise' → logprob: -6.43353796005249
    10. 'continue' → logprob: -6.55853796005249

Token 59: ' continue' (ID: 4901)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3378940224647522
    2. ' raise' → logprob: -2.0878939628601074
    3. ' continue' → logprob: -2.0878939628601074
    4. ' 
' → logprob: -3.9628939628601074
    5. ' ' → logprob: -4.212893962860107
    6. 'return' → logprob: -5.837893962860107
    7. 'raise' → logprob: -7.212893962860107
    8. 'continue' (adapté à ' continue') → logprob: -7.587893962860107
    9. '           ' → logprob: -9.087894439697266
    10. ' ' → logprob: -9.212894439697266

Token 60: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6204186081886292
    2. '<|end|>' → logprob: -0.8704186081886292
    3. '
' → logprob: -3.6204185485839844
    4. '        
' → logprob: -4.620418548583984
    5. '<|end|>' → logprob: -6.245418548583984
    6. '\n' → logprob: -6.495418548583984
    7. '  
' → logprob: -6.745418548583984
    8. '```' → logprob: -7.245418548583984
    9. ' 
' → logprob: -7.745418548583984
    10. '        ' → logprob: -8.620418548583984

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08106520771980286
    2. '
' → logprob: -2.9560651779174805
    3. '<|end|>' → logprob: -3.9560651779174805
    4. '        
' → logprob: -5.4560651779174805
    5. ' 
' → logprob: -7.0810651779174805
    6. '  
' → logprob: -7.3310651779174805
    7. '```' → logprob: -8.08106517791748
    8. '\n' → logprob: -8.08106517791748
    9. '<|end|>' → logprob: -9.83106517791748
    10. '    
' → logprob: -10.33106517791748

Token 62: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18703295290470123
    2. ' if' → logprob: -2.68703293800354
    3. '        
' → logprob: -3.56203293800354
    4. '
' → logprob: -3.56203293800354
    5. ' 
' → logprob: -3.93703293800354
    6. ' matrix' → logprob: -5.062033176422119
    7. 'matrix' → logprob: -5.062033176422119
    8. '   ' → logprob: -5.937033176422119
    9. '    
' → logprob: -5.937033176422119
    10. '  
' → logprob: -6.562033176422119

Token 63: ' pivot' (ID: 44506)
  Prédit: ' pivot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pivot' → logprob: -0.004617153201252222
    2. 'pivot' → logprob: -5.504617214202881
    3. ' ' → logprob: -8.254616737365723
    4. ' i' → logprob: -8.629616737365723
    5. ' matrix' → logprob: -9.754616737365723
    6. ' piv' → logprob: -10.254616737365723
    7. '  ' → logprob: -12.879616737365723
    8. '	p' → logprob: -14.004616737365723
    9. ' ' → logprob: -14.254616737365723
    10. ' r' → logprob: -14.629616737365723

Token 64: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.014196290634572506
    2. '!=' → logprob: -4.264196395874023
    3. ' ' → logprob: -11.014196395874023
    4. ']!=' → logprob: -12.639196395874023
    5. '   ' → logprob: -13.014196395874023
    6. '<|end|>' → logprob: -13.014196395874023
    7. ')!=' → logprob: -13.389196395874023
    8. ' ' → logprob: -13.514196395874023
    9. '>' → logprob: -13.889196395874023
    10. '	' → logprob: -13.889196395874023

Token 65: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31326404213905334
    2. 'i' → logprob: -1.313264012336731
    3. '	i' → logprob: -13.438263893127441
    4. ' ' → logprob: -14.313263893127441
    5. '```' → logprob: -16.313264846801758
    6. ' ' → logprob: -16.813264846801758
    7. '    ' → logprob: -16.938264846801758
    8. '<|end|>' → logprob: -18.063264846801758
    9. ''i' → logprob: -18.188264846801758
    10. ')i' → logprob: -18.188264846801758

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03924025222659111
    2. ':
' → logprob: -4.28924036026001
    3. '       ' → logprob: -4.66424036026001
    4. '<|end|>' → logprob: -5.03924036026001
    5. '           ' → logprob: -5.53924036026001
    6. ',' → logprob: -6.16424036026001
    7. ' :' → logprob: -7.03924036026001
    8. '<|end|>' → logprob: -7.28924036026001
    9. ' :
' → logprob: -8.289239883422852
    10. '   ' → logprob: -8.539239883422852

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43472278118133545
    2. ' matrix' → logprob: -2.184722900390625
    3. '\n' → logprob: -2.184722900390625
    4. '```' → logprob: -3.309722900390625
    5. ' 
' → logprob: -3.934722900390625
    6. 'matrix' → logprob: -4.184722900390625
    7. '\' → logprob: -4.684722900390625
    8. '            
' → logprob: -4.684722900390625
    9. '       ' → logprob: -5.309722900390625
    10. '<|end|>' → logprob: -5.559722900390625

Token 68: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.13644926249980927
    2. ' 
' → logprob: -2.5114493370056152
    3. 'matrix' (adapté à ' matrix') → logprob: -3.3864493370056152
    4. '
' → logprob: -5.636449337005615
    5. '\n' → logprob: -5.761449337005615
    6. '           ' → logprob: -6.761449337005615
    7. '	matrix' → logprob: -7.011449337005615
    8. '```' → logprob: -7.386449337005615
    9. '    
' → logprob: -7.636449337005615
    10. '            
' → logprob: -7.636449337005615

Token 69: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1875571544806007e-05
    2. '[p' → logprob: -12.000011444091797
    3. '[' → logprob: -12.375011444091797
    4. ',' → logprob: -14.000011444091797
    5. ',i' → logprob: -15.375011444091797
    6. '.swap' → logprob: -16.500011444091797
    7. '```' → logprob: -16.625011444091797
    8. '[s' → logprob: -17.375011444091797
    9. '[idx' → logprob: -17.375011444091797
    10. '[j' → logprob: -17.375011444091797

Token 70: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0009544557542540133
    2. ',' → logprob: -7.000954627990723
    3. '],[' → logprob: -11.000954627990723
    4. ']' → logprob: -11.625954627990723
    5. '},' → logprob: -11.625954627990723
    6. '][' → logprob: -12.750954627990723
    7. '[i' → logprob: -13.500954627990723
    8. ''],' → logprob: -13.625954627990723
    9. '>,' → logprob: -13.750954627990723
    10. ']],' → logprob: -14.125954627990723

Token 71: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.3132818341255188
    2. ' matrix' → logprob: -1.313281774520874
    3. '	matrix' → logprob: -10.938282012939453
    4. '<|end|>' → logprob: -13.813282012939453
    5. '(matrix' → logprob: -14.438282012939453
    6. 'Matrix' → logprob: -15.688282012939453
    7. '_matrix' → logprob: -15.688282012939453
    8. 'mat' → logprob: -15.938282012939453
    9. '.matrix' → logprob: -16.188282012939453
    10. ' matriz' → logprob: -16.438282012939453

Token 72: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.9981420336989686e-05
    2. '[' → logprob: -11.375020027160645
    3. 'pivot' → logprob: -11.750020027160645
    4. '][' → logprob: -16.125019073486328
    5. 'p' → logprob: -16.250019073486328
    6. '	p' → logprob: -16.500019073486328
    7. '```' → logprob: -16.500019073486328
    8. ' pivot' → logprob: -16.625019073486328
    9. '[
' → logprob: -17.500019073486328
    10. '\[' → logprob: -17.625019073486328

Token 73: 'ivot' (ID: 19481)
  Prédit: 'ivot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivot' → logprob: -5.514650183613412e-05
    2. 'pivot' → logprob: -10.750055313110352
    3. 'i' → logprob: -11.000055313110352
    4. '[i' → logprob: -12.250055313110352
    5. 'iv' → logprob: -12.625055313110352
    6. '[' → logprob: -13.000055313110352
    7. ']' → logprob: -13.500055313110352
    8. '   ' → logprob: -14.250055313110352
    9. 'ivat' → logprob: -14.375055313110352
    10. 'ivo' → logprob: -14.375055313110352

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00041518008220009506
    2. ']=' → logprob: -7.875415325164795
    3. ' ]' → logprob: -11.000414848327637
    4. '=' → logprob: -11.375414848327637
    5. '<|end|>' → logprob: -12.375414848327637
    6. ' =' → logprob: -14.000414848327637
    7. '],' → logprob: -14.125414848327637
    8. '[' → logprob: -15.625414848327637
    9. '']' → logprob: -16.125415802001953
    10. '   ' → logprob: -16.375415802001953

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016052549704909325
    2. ' =' → logprob: -4.141052722930908
    3. '=
' → logprob: -11.26605224609375
    4. '=

' → logprob: -12.51605224609375
    5. ' =
' → logprob: -14.01605224609375
    6. '=line' → logprob: -15.39105224609375
    7. '<|end|>' → logprob: -15.76605224609375
    8. '=s' → logprob: -16.39105224609375
    9. '=sys' → logprob: -16.51605224609375
    10. ',' → logprob: -16.51605224609375

Token 76: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.023248156532645226
    2. 'matrix' → logprob: -3.7732481956481934
    3. '	matrix' → logprob: -13.023247718811035
    4. '(matrix' → logprob: -15.148247718811035
    5. ' ' → logprob: -16.27324867248535
    6. ' matriz' → logprob: -16.89824867248535
    7. '.matrix' → logprob: -17.27324867248535
    8. 'Matrix' → logprob: -17.39824867248535
    9. '_matrix' → logprob: -17.52324867248535
    10. ' vector' → logprob: -17.77324867248535

Token 77: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0052708727307617664
    2. 'pivot' → logprob: -5.255270957946777
    3. 'p' → logprob: -10.755270957946777
    4. ' pivot' → logprob: -11.630270957946777
    5. '	p' → logprob: -12.505270957946777
    6. '[' → logprob: -13.380270957946777
    7. 'Pivot' → logprob: -14.880270957946777
    8. '-p' → logprob: -15.380270957946777
    9. '```' → logprob: -15.505270957946777
    10. '   ' → logprob: -15.630270957946777

Token 78: 'ivot' (ID: 19481)
  Prédit: 'ivot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivot' → logprob: -0.0017228922806680202
    2. 'pivot' → logprob: -6.376722812652588
    3. 'i' → logprob: -11.251723289489746
    4. '[p' → logprob: -13.126723289489746
    5. 'p' → logprob: -14.001723289489746
    6. ']' → logprob: -14.001723289489746
    7. 'ivt' → logprob: -14.126723289489746
    8. 'iv' → logprob: -14.126723289489746
    9. 'v' → logprob: -14.376723289489746
    10. '[' → logprob: -14.626723289489746

Token 79: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004087066277861595
    2. ']' → logprob: -6.379086971282959
    3. ',
' → logprob: -7.379086971282959
    4. ',i' → logprob: -7.379086971282959
    5. ' ,' → logprob: -7.629086971282959
    6. '],' → logprob: -8.129087448120117
    7. '<|end|>' → logprob: -8.254087448120117
    8. ',

' → logprob: -10.879087448120117
    9. '[i' → logprob: -11.004087448120117
    10. ',None' → logprob: -12.129087448120117

Token 80: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.061980683356523514
    2. 'matrix' → logprob: -2.811980724334717
    3. '	matrix' → logprob: -11.311980247497559
    4. '(matrix' → logprob: -14.811980247497559
    5. '.matrix' → logprob: -15.186980247497559
    6. ' matriz' → logprob: -16.186981201171875
    7. '_matrix' → logprob: -17.061981201171875
    8. 'm' → logprob: -17.936981201171875
    9. 'Matrix' → logprob: -18.311981201171875
    10. '```' → logprob: -18.561981201171875

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001605115394340828
    2. '[' → logprob: -8.750160217285156
    3. ']' → logprob: -14.250160217285156
    4. '```' → logprob: -14.500160217285156
    5. '[
' → logprob: -15.250160217285156
    6. ' [' → logprob: -15.375160217285156
    7. '][' → logprob: -16.000160217285156
    8. 'i' → logprob: -16.125160217285156
    9. '[user' → logprob: -17.750160217285156
    10. ')' → logprob: -17.750160217285156

Token 82: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020857853814959526
    2. ']
' → logprob: -6.2520856857299805
    3. '[' → logprob: -9.87708568572998
    4. '[
' → logprob: -10.25208568572998
    5. '<|end|>' → logprob: -10.25208568572998
    6. ')' → logprob: -11.00208568572998
    7. ' ]' → logprob: -12.25208568572998
    8. ']

' → logprob: -12.37708568572998
    9. '}' → logprob: -13.25208568572998
    10. '']' → logprob: -13.25208568572998

Token 83: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2284737080335617
    2. '        
' → logprob: -2.853473663330078
    3. '
' → logprob: -2.978473663330078
    4. '<|end|>' → logprob: -3.478473663330078
    5. '\n' → logprob: -4.353473663330078
    6. ' 
' → logprob: -4.603473663330078
    7. '           ' → logprob: -4.728473663330078
    8. '[' → logprob: -4.978473663330078
    9. '```' → logprob: -5.478473663330078
    10. '            
' → logprob: -5.603473663330078

Token 84: ' vector' (ID: 9727)
  Prédit: ' vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.5759401321411133
    2. 'vector' (adapté à ' vector') → logprob: -0.8259401321411133
    3. '   ' → logprob: -15.075940132141113
    4. '       ' → logprob: -16.325939178466797
    5. '```' → logprob: -16.450939178466797
    6. '_vector' → logprob: -16.825939178466797
    7. '           ' → logprob: -16.950939178466797
    8. '	vector' → logprob: -16.950939178466797
    9. 'Vector' → logprob: -17.200939178466797
    10. '.vector' → logprob: -17.450939178466797

Token 85: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00044651966891251504
    2. '[' → logprob: -8.125446319580078
    3. ',' → logprob: -9.000446319580078
    4. ',i' → logprob: -11.000446319580078
    5. 'i' → logprob: -11.750446319580078
    6. ' i' → logprob: -13.625446319580078
    7. ' ' → logprob: -15.375446319580078
    8. '```' → logprob: -15.625446319580078
    9. '<|end|>' → logprob: -15.750446319580078
    10. ' ,' → logprob: -16.250446319580078

Token 86: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.014205348677933216
    2. ',' → logprob: -4.389205455780029
    3. ']' → logprob: -6.639205455780029
    4. ' ],' → logprob: -8.389204978942871
    5. ' ,' → logprob: -9.264204978942871
    6. '],[' → logprob: -10.514204978942871
    7. '},' → logprob: -10.889204978942871
    8. '],
' → logprob: -12.139204978942871
    9. '<|end|>' → logprob: -12.264204978942871
    10. '>,' → logprob: -12.514204978942871

Token 87: ' vector' (ID: 9727)
  Prédit: ' vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.016038941219449043
    2. 'vector' → logprob: -4.14103889465332
    3. '<|end|>' → logprob: -13.51603889465332
    4. '_vector' → logprob: -13.76603889465332
    5. '	vector' → logprob: -13.89103889465332
    6. '<vector' → logprob: -14.89103889465332
    7. '.vector' → logprob: -14.89103889465332
    8. '(vector' → logprob: -14.89103889465332
    9. 'Vector' → logprob: -15.76603889465332
    10. ' ' → logprob: -16.76603889465332

Token 88: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0008060562540777028
    2. '[' → logprob: -7.375805854797363
    3. 'pivot' → logprob: -8.750805854797363
    4. ' pivot' → logprob: -11.125805854797363
    5. ',p' → logprob: -13.625805854797363
    6. ' piv' → logprob: -13.875805854797363
    7. 'p' → logprob: -14.000805854797363
    8. '<|end|>' → logprob: -14.125805854797363
    9. ']' → logprob: -14.375805854797363
    10. '	p' → logprob: -14.625805854797363

Token 89: 'ivot' (ID: 19481)
  Prédit: 'ivot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivot' → logprob: -3.8219583075260743e-05
    2. 'pivot' → logprob: -10.250038146972656
    3. 'i' → logprob: -13.250038146972656
    4. 'iv' → logprob: -14.375038146972656
    5. 'ivo' → logprob: -15.625038146972656
    6. 'vector' → logprob: -16.125038146972656
    7. 'ivat' → logprob: -17.125038146972656
    8. '[i' → logprob: -17.375038146972656
    9. 'ivt' → logprob: -18.000038146972656
    10. '   ' → logprob: -18.000038146972656

Token 90: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012920241570100188
    2. ']=' → logprob: -7.0012922286987305
    3. '=' → logprob: -8.25129222869873
    4. ' ]' → logprob: -9.62629222869873
    5. ' =' → logprob: -10.00129222869873
    6. '<|end|>' → logprob: -12.00129222869873
    7. '],' → logprob: -14.12629222869873
    8. ')' → logprob: -14.37629222869873
    9. ' ' → logprob: -16.001291275024414
    10. ',' → logprob: -16.001291275024414

Token 91: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519338130950928
    2. ' =' → logprob: -1.5019338130950928
    3. ' ' → logprob: -13.376934051513672
    4. '=
' → logprob: -13.876934051513672
    5. ']' → logprob: -14.751934051513672
    6. ')' → logprob: -14.876934051513672
    7. ',' → logprob: -15.126934051513672
    8. '=

' → logprob: -15.126934051513672
    9. ' =
' → logprob: -15.251934051513672
    10. '[' → logprob: -15.626934051513672

Token 92: ' vector' (ID: 9727)
  Prédit: ' vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.10020720958709717
    2. 'vector' → logprob: -2.3502073287963867
    3. '	vector' → logprob: -15.100207328796387
    4. '_vector' → logprob: -16.47520637512207
    5. '(vector' → logprob: -16.60020637512207
    6. 'Vector' → logprob: -16.72520637512207
    7. '.vector' → logprob: -16.72520637512207
    8. '<vector' → logprob: -16.97520637512207
    9. 'vect' → logprob: -17.60020637512207
    10. 'v' → logprob: -18.35020637512207

Token 93: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00027706706896424294
    2. 'pivot' → logprob: -8.375277519226074
    3. '[' → logprob: -10.625277519226074
    4. ' pivot' → logprob: -11.375277519226074
    5. 'p' → logprob: -12.000277519226074
    6. ',p' → logprob: -12.875277519226074
    7. '	p' → logprob: -13.875277519226074
    8. 'Pivot' → logprob: -14.875277519226074
    9. ',' → logprob: -15.500277519226074
    10. ' piv' → logprob: -16.500276565551758

Token 94: 'ivot' (ID: 19481)
  Prédit: 'ivot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivot' → logprob: -0.0018420136766508222
    2. 'pivot' → logprob: -6.376842021942139
    3. ']' → logprob: -10.12684154510498
    4. '[p' → logprob: -10.37684154510498
    5. '[' → logprob: -11.12684154510498
    6. 'i' → logprob: -11.37684154510498
    7. '```' → logprob: -11.62684154510498
    8. 'iv' → logprob: -12.00184154510498
    9. 'ivat' → logprob: -12.12684154510498
    10. 'v' → logprob: -12.37684154510498

Token 95: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4789292514324188
    2. '],' → logprob: -0.9789292812347412
    3. ']' → logprob: -5.853929042816162
    4. ' ,' → logprob: -6.478929042816162
    5. ',i' → logprob: -8.72892951965332
    6. ' ],' → logprob: -8.85392951965332
    7. '<|end|>' → logprob: -9.72892951965332
    8. '},' → logprob: -11.35392951965332
    9. '>,' → logprob: -11.60392951965332
    10. '‌,' → logprob: -11.72892951965332

Token 96: ' vector' (ID: 9727)
  Prédit: ' vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.25192955136299133
    2. 'vector' → logprob: -1.501929521560669
    3. '	vector' → logprob: -15.12692928314209
    4. 'Vector' → logprob: -16.501930236816406
    5. '.vector' → logprob: -16.626930236816406
    6. '_vector' → logprob: -16.876930236816406
    7. '<vector' → logprob: -17.126930236816406
    8. '(vector' → logprob: -17.751930236816406
    9. ' vectors' → logprob: -18.626930236816406
    10. '```' → logprob: -19.501930236816406

Token 97: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001338454894721508
    2. '[' → logprob: -6.626338481903076
    3. '```' → logprob: -11.626338005065918
    4. 'i' → logprob: -13.751338005065918
    5. '[user' → logprob: -14.001338005065918
    6. '[
' → logprob: -14.751338005065918
    7. '[I' → logprob: -15.376338005065918
    8. ']' → logprob: -15.501338005065918
    9. '`' → logprob: -15.626338005065918
    10. '[j' → logprob: -16.376338958740234

Token 98: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11760111153125763
    2. '<|end|>' → logprob: -2.492601156234741
    3. ')' → logprob: -3.617601156234741
    4. '<|end|>' → logprob: -7.617600917816162
    5. '}' → logprob: -8.24260139465332
    6. ']
' → logprob: -8.36760139465332
    7. '
' → logprob: -8.86760139465332
    8. '       ' → logprob: -9.49260139465332
    9. '```' → logprob: -9.61760139465332
    10. 'newline' → logprob: -10.74260139465332

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7210301756858826
    2. ' 
' → logprob: -1.0960302352905273
    3. '        
' → logprob: -2.4710302352905273
    4. '\n' → logprob: -3.9710302352905273
    5. '  
' → logprob: -4.096030235290527
    6. '     
' → logprob: -4.221030235290527
    7. '
' → logprob: -4.346030235290527
    8. '    
' → logprob: -4.721030235290527
    9. '```' → logprob: -4.721030235290527
    10. '   
' → logprob: -5.471030235290527

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6742149591445923
    2. '       ' → logprob: -0.9242149591445923
    3. 'for' (adapté à ' for') → logprob: -2.4242148399353027
    4. '        
' → logprob: -5.924214839935303
    5. '```' → logprob: -7.424214839935303
    6. ' 
' → logprob: -7.549214839935303
    7. '   ' → logprob: -8.049215316772461
    8. '        ' → logprob: -8.549215316772461
    9. '    ' → logprob: -8.674215316772461
    10. '
' → logprob: -9.424215316772461

Token 101: ' r' (ID: 428)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.0047525265254080296
    2. 'j' → logprob: -5.3797526359558105
    3. ' ' → logprob: -9.004752159118652
    4. '	j' → logprob: -11.879752159118652
    5. '   ' → logprob: -13.504752159118652
    6. '  ' → logprob: -14.879752159118652
    7. '```' → logprob: -15.379752159118652
    8. ' ' → logprob: -15.629752159118652
    9. ' r' → logprob: -16.12975311279297
    10. '    ' → logprob: -16.37975311279297

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00019722258730325848
    2. ' ' → logprob: -9.000197410583496
    3. 'in' → logprob: -10.000197410583496
    4. ' i' → logprob: -10.750197410583496
    5. ' range' → logprob: -12.750197410583496
    6. 'range' → logprob: -14.000197410583496
    7. '	in' → logprob: -14.625197410583496
    8. '  ' → logprob: -14.875197410583496
    9. 'i' → logprob: -15.000197410583496
    10. '   ' → logprob: -15.125197410583496

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519325911998749
    2. ' range' → logprob: -1.5019326210021973
    3. '   ' → logprob: -13.251932144165039
    4. ' ' → logprob: -14.126932144165039
    5. '(range' → logprob: -14.751932144165039
    6. '	range' → logprob: -15.001932144165039
    7. '  ' → logprob: -15.501932144165039
    8. 'i' → logprob: -16.75193214416504
    9. '    ' → logprob: -17.37693214416504
    10. 'ange' → logprob: -17.37693214416504

Token 104: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.750001907348633
    3. 'i' → logprob: -14.500001907348633
    4. ' i' → logprob: -15.750001907348633
    5. ' (' → logprob: -17.000001907348633
    6. '(n' → logprob: -19.125001907348633
    7. '(
' → logprob: -20.125001907348633
    8. '(r' → logprob: -20.750001907348633
    9. '[i' → logprob: -21.000001907348633
    10. '   ' → logprob: -21.125001907348633

Token 105: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889661937952042
    2. ' +' → logprob: -2.5788965225219727
    3. '+i' → logprob: -12.828896522521973
    4. ' ' → logprob: -13.328896522521973
    5. '   ' → logprob: -13.703896522521973
    6. '+
' → logprob: -15.328896522521973
    7. '(i' → logprob: -15.578896522521973
    8. ',' → logprob: -15.828896522521973
    9. '()+' → logprob: -15.828896522521973
    10. '1' → logprob: -16.20389747619629

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.457669562427327e-05
    2. ' ' → logprob: -9.62507438659668
    3. 'n' → logprob: -11.75007438659668
    4. ' n' → logprob: -14.50007438659668
    5. '   ' → logprob: -17.12507438659668
    6. '```' → logprob: -17.12507438659668
    7. '0' → logprob: -18.00007438659668
    8. ',' → logprob: -18.62507438659668
    9. '
' → logprob: -19.12507438659668
    10. '2' → logprob: -20.00007438659668

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010930694406852126
    2. ' ,' → logprob: -6.876092910766602
    3. ',n' → logprob: -9.751092910766602
    4. 'n' → logprob: -14.001092910766602
    5. ',
' → logprob: -14.251092910766602
    6. '(n' → logprob: -14.626092910766602
    7. '

' → logprob: -17.7510929107666
    8. '),' → logprob: -17.8760929107666
    9. ')' → logprob: -17.8760929107666
    10. ' ' → logprob: -18.1260929107666

Token 108: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4740806519985199
    2. 'n' → logprob: -0.9740806818008423
    3. '	n' → logprob: -12.599081039428711
    4. ')n' → logprob: -15.724081039428711
    5. '   ' → logprob: -16.47408103942871
    6. '<|end|>' → logprob: -16.97408103942871
    7. ' ' → logprob: -17.84908103942871
    8. '(n' → logprob: -17.97408103942871
    9. '```' → logprob: -17.97408103942871
    10. '    ' → logprob: -18.34908103942871

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016571152955293655
    2. '):
' → logprob: -4.141571044921875
    3. ':' → logprob: -7.891571044921875
    4. ' ):' → logprob: -8.891571044921875
    5. ')' → logprob: -11.266571044921875
    6. ' ):
' → logprob: -12.766571044921875
    7. '       ' → logprob: -13.016571044921875
    8. '):
' → logprob: -13.266571044921875
    9. '   ' → logprob: -13.266571044921875
    10. ',' → logprob: -13.766571044921875

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07618024200201035
    2. '        ' → logprob: -4.076180458068848
    3. ' if' → logprob: -4.451180458068848
    4. '       ' → logprob: -4.576180458068848
    5. ' 
' → logprob: -4.701180458068848
    6. '            
' → logprob: -5.326180458068848
    7. '        
' → logprob: -5.326180458068848
    8. ' ' → logprob: -5.826180458068848
    9. '               ' → logprob: -5.826180458068848
    10. '            ' → logprob: -5.826180458068848

Token 111: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21812058985233307
    2. ' ' → logprob: -1.8431205749511719
    3. ' factor' → logprob: -4.218120574951172
    4. ' 
' → logprob: -4.843120574951172
    5. '            ' → logprob: -5.218120574951172
    6. '    ' → logprob: -5.343120574951172
    7. '                ' → logprob: -6.968120574951172
    8. 'if' (adapté à ' if') → logprob: -7.093120574951172
    9. '     
' → logprob: -7.093120574951172
    10. '           ' → logprob: -7.468120574951172

Token 112: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.20146392285823822
    2. 'matrix' → logprob: -1.7014639377593994
    3. '	matrix' → logprob: -9.95146369934082
    4. '(matrix' → logprob: -14.32646369934082
    5. ' ' → logprob: -14.45146369934082
    6. '   ' → logprob: -14.70146369934082
    7. ' not' → logprob: -15.20146369934082
    8. '_matrix' → logprob: -15.70146369934082
    9. ' matriz' → logprob: -15.82646369934082
    10. 'mat' → logprob: -15.95146369934082

Token 113: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -7.874882430769503e-05
    2. '[' → logprob: -9.500079154968262
    3. ' [' → logprob: -12.750079154968262
    4. 'r' → logprob: -15.000079154968262
    5. '[row' → logprob: -15.500079154968262
    6. '[i' → logprob: -15.750079154968262
    7. ' r' → logprob: -16.250078201293945
    8. '[
' → logprob: -16.750078201293945
    9. '[root' → logprob: -18.125078201293945
    10. '```' → logprob: -18.250078201293945

Token 114: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018798859789967537
    2. '[i' → logprob: -4.018798828125
    3. ' ][' → logprob: -8.143798828125
    4. '[' → logprob: -8.518798828125
    5. ']' → logprob: -9.518798828125
    6. '[r' → logprob: -11.018798828125
    7. '[j' → logprob: -11.393798828125
    8. ' [' → logprob: -11.643798828125
    9. '```' → logprob: -12.018798828125
    10. '[I' → logprob: -12.143798828125

Token 115: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.014684110297821e-06
    2. ' i' → logprob: -11.750008583068848
    3. '[i' → logprob: -14.000008583068848
    4. '```' → logprob: -16.000009536743164
    5. ' ' → logprob: -16.750009536743164
    6. 'r' → logprob: -17.125009536743164
    7. ']' → logprob: -17.500009536743164
    8. '[' → logprob: -17.625009536743164
    9. '   ' → logprob: -17.625009536743164
    10. '	i' → logprob: -18.000009536743164

Token 116: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2489471733570099
    2. ']:' → logprob: -2.1239471435546875
    3. ']' → logprob: -2.6239471435546875
    4. ' !=' → logprob: -4.6239471435546875
    5. '>' → logprob: -5.3739471435546875
    6. ' ]' → logprob: -5.6239471435546875
    7. ' :' → logprob: -5.8739471435546875
    8. '):' → logprob: -5.9989471435546875
    9. ']:
' → logprob: -6.7489471435546875
    10. ':
' → logprob: -7.2489471435546875

Token 117: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06857393682003021
    2. ':' → logprob: -3.9435739517211914
    3. ':
' → logprob: -4.318573951721191
    4. ' :' → logprob: -4.443573951721191
    5. ' :
' → logprob: -4.943573951721191
    6. '           ' → logprob: -5.068573951721191
    7. ' =' → logprob: -6.193573951721191
    8. '            ' → logprob: -6.443573951721191
    9. '                ' → logprob: -6.943573951721191
    10. ',' → logprob: -7.443573951721191

Token 118: ' for' (ID: 395)
  Prédit: ' factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factor' → logprob: -0.18512573838233948
    2. 'factor' → logprob: -1.810125708580017
    3. '```' → logprob: -6.810125827789307
    4. '                   ' → logprob: -7.060125827789307
    5. '               ' → logprob: -7.185125827789307
    6. ' multiplier' → logprob: -7.435125827789307
    7. '           ' → logprob: -8.435125350952148
    8. ' ratio' → logprob: -9.060125350952148
    9. ' 
' → logprob: -9.060125350952148
    10. 'mult' → logprob: -9.060125350952148

Token 119: ' c' (ID: 274)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7037278413772583
    2. ' j' → logprob: -0.7037278413772583
    3. ' c' → logprob: -5.203727722167969
    4. 'c' → logprob: -5.328727722167969
    5. 'k' → logprob: -9.328727722167969
    6. ' k' → logprob: -9.578727722167969
    7. '	j' → logprob: -11.578727722167969
    8. '   ' → logprob: -12.078727722167969
    9. ' ' → logprob: -13.328727722167969
    10. '	c' → logprob: -13.453727722167969

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014225799590349197
    2. 'in' → logprob: -4.264225959777832
    3. ' ' → logprob: -10.764225959777832
    4. '	in' → logprob: -11.139225959777832
    5. ' i' → logprob: -11.639225959777832
    6. 'i' → logprob: -11.764225959777832
    7. 'n' → logprob: -13.639225959777832
    8. '[' → logprob: -14.264225959777832
    9. '=' → logprob: -14.264225959777832
    10. '[i' → logprob: -14.389225959777832

Token 121: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132753074169159
    2. ' range' → logprob: -1.3132753372192383
    3. '(range' → logprob: -11.563275337219238
    4. '	range' → logprob: -13.313275337219238
    5. 'i' → logprob: -13.688275337219238
    6. '   ' → logprob: -14.813275337219238
    7. ' ' → logprob: -15.438275337219238
    8. ' i' → logprob: -15.563275337219238
    9. '```' → logprob: -16.688274383544922
    10. '[i' → logprob: -16.938274383544922

Token 122: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001985021401196718
    2. 'i' → logprob: -6.3769850730896
    3. '(n' → logprob: -8.751984596252441
    4. ' i' → logprob: -9.626984596252441
    5. '(' → logprob: -10.251984596252441
    6. '	i' → logprob: -11.001984596252441
    7. ' (' → logprob: -12.751984596252441
    8. '[i' → logprob: -13.876984596252441
    9. 'n' → logprob: -14.001984596252441
    10. '(
' → logprob: -14.626984596252441

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21495528519153595
    2. ',n' → logprob: -1.8399553298950195
    3. ' ,' → logprob: -3.5899553298950195
    4. '+' → logprob: -5.0899553298950195
    5. '   ' → logprob: -8.58995532989502
    6. '	n' → logprob: -8.83995532989502
    7. ' n' → logprob: -8.96495532989502
    8. ' +' → logprob: -9.46495532989502
    9. ' ' → logprob: -9.83995532989502
    10. 'n' → logprob: -10.08995532989502

Token 124: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019294669618830085
    2. ' n' → logprob: -6.25192928314209
    3. '	n' → logprob: -14.00192928314209
    4. '   ' → logprob: -18.126930236816406
    5. '<n' → logprob: -19.001930236816406
    6. ',n' → logprob: -19.501930236816406
    7. '_n' → logprob: -19.751930236816406
    8. '
' → logprob: -19.751930236816406
    9. ')n' → logprob: -19.751930236816406
    10. '<|end|>' → logprob: -19.876930236816406

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014403014443814754
    2. '):
' → logprob: -4.764402866363525
    3. ')' → logprob: -5.389402866363525
    4. ':' → logprob: -7.764402866363525
    5. ' ):' → logprob: -7.889402866363525
    6. '+' → logprob: -8.764403343200684
    7. '               ' → logprob: -9.764403343200684
    8. '           ' → logprob: -10.014403343200684
    9. '                   ' → logprob: -10.389403343200684
    10. '   ' → logprob: -10.764403343200684

Token 126: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23023933172225952
    2. '                    ' → logprob: -2.4802393913269043
    3. '                       ' → logprob: -2.4802393913269043
    4. '                ' → logprob: -4.605239391326904
    5. ' :' → logprob: -4.855239391326904
    6. ' ' → logprob: -5.230239391326904
    7. '               ' → logprob: -5.730239391326904
    8. '                        ' → logprob: -6.230239391326904
    9. '*' → logprob: -6.355239391326904
    10. ' =' → logprob: -6.730239391326904

Token 127: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.1746186465024948
    2. 'matrix' (adapté à ' matrix') → logprob: -1.9246186017990112
    3. '                   ' → logprob: -4.799618721008301
    4. '                       ' → logprob: -5.174618721008301
    5. '                    ' → logprob: -8.9246187210083
    6. '	matrix' → logprob: -9.4246187210083
    7. ' ' → logprob: -10.5496187210083
    8. '               ' → logprob: -10.6746187210083
    9. '                        ' → logprob: -10.7996187210083
    10. '                           ' → logprob: -10.7996187210083

Token 128: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0487510971724987
    2. '[i' → logprob: -3.04875111579895
    3. 'r' → logprob: -9.548750877380371
    4. '[' → logprob: -10.048750877380371
    5. ' [' → logprob: -10.673750877380371
    6. 'i' → logprob: -11.923750877380371
    7. '][' → logprob: -12.048750877380371
    8. '[c' → logprob: -12.048750877380371
    9. '[row' → logprob: -13.048750877380371
    10. '	r' → logprob: -14.298750877380371

Token 129: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07025417685508728
    2. '[c' → logprob: -2.69525408744812
    3. '[' → logprob: -8.6952543258667
    4. '[i' → logprob: -9.4452543258667
    5. ']' → logprob: -10.3202543258667
    6. ' ][' → logprob: -11.3202543258667
    7. '}[' → logprob: -12.1952543258667
    8. '```' → logprob: -12.9452543258667
    9. '[j' → logprob: -13.0702543258667
    10. '[][' → logprob: -13.4452543258667

Token 130: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.319370302458992e-06
    2. ' c' → logprob: -12.875005722045898
    3. '[c' → logprob: -14.125005722045898
    4. '```' → logprob: -14.375005722045898
    5. 'i' → logprob: -14.875005722045898
    6. '   ' → logprob: -14.875005722045898
    7. '	c' → logprob: -15.500005722045898
    8. 'r' → logprob: -15.875005722045898
    9. ']' → logprob: -16.6250057220459
    10. '    ' → logprob: -16.8750057220459

Token 131: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012654215970542282
    2. ']*' → logprob: -10.000126838684082
    3. ' ]' → logprob: -10.375126838684082
    4. ']=' → logprob: -10.875126838684082
    5. ']-' → logprob: -11.375126838684082
    6. ']+=' → logprob: -11.375126838684082
    7. '-' → logprob: -12.750126838684082
    8. ' -=' → logprob: -13.500126838684082
    9. '-=' → logprob: -14.000126838684082
    10. ']]' → logprob: -14.125126838684082

Token 132: ' ^=' (ID: 79665)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5932177901268005
    2. '-=' → logprob: -1.0932178497314453
    3. '=' → logprob: -2.2182178497314453
    4. '*=' → logprob: -6.343217849731445
    5. '-' → logprob: -7.343217849731445
    6. ' =' → logprob: -7.718217849731445
    7. ' *=' → logprob: -7.968217849731445
    8. ' /=' → logprob: -8.718217849731445
    9. '+=' → logprob: -10.343217849731445
    10. '/=' → logprob: -10.468217849731445

Token 133: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.11300832778215408
    2. ' matrix' → logprob: -2.2380082607269287
    3. '	matrix' → logprob: -8.863008499145508
    4. ' ' → logprob: -10.988008499145508
    5. '1' → logprob: -11.863008499145508
    6. '<|end|>' → logprob: -12.238008499145508
    7. 'm' → logprob: -12.488008499145508
    8. '(matrix' → logprob: -12.488008499145508
    9. '   ' → logprob: -13.113008499145508
    10. '                   ' → logprob: -13.113008499145508

Token 134: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.750005722045898
    3. 'i' → logprob: -13.375005722045898
    4. '```' → logprob: -15.125005722045898
    5. ' [' → logprob: -15.250005722045898
    6. '[I' → logprob: -15.875005722045898
    7. '[r' → logprob: -16.7500057220459
    8. '   ' → logprob: -16.7500057220459
    9. '`' → logprob: -16.8750057220459
    10. '][' → logprob: -17.2500057220459

Token 135: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5760663747787476
    2. '[c' → logprob: -0.8260663747787476
    3. ' ][' → logprob: -9.701066017150879
    4. '[' → logprob: -10.951066017150879
    5. '}[' → logprob: -11.701066017150879
    6. ')[' → logprob: -11.701066017150879
    7. 'c' → logprob: -12.076066017150879
    8. '	' → logprob: -12.201066017150879
    9. ']' → logprob: -12.326066017150879
    10. '	c' → logprob: -12.451066017150879

Token 136: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.612634362885728e-05
    2. ' c' → logprob: -9.625076293945312
    3. '	c' → logprob: -11.625076293945312
    4. ' ' → logprob: -14.625076293945312
    5. '   ' → logprob: -15.125076293945312
    6. '[c' → logprob: -16.000076293945312
    7. '```' → logprob: -16.125076293945312
    8. '  ' → logprob: -17.375076293945312
    9. 'с' → logprob: -17.875076293945312
    10. '    ' → logprob: -18.125076293945312

Token 137: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02480778470635414
    2. '                
' → logprob: -4.899807929992676
    3. ' 
' → logprob: -5.524807929992676
    4. '                   ' → logprob: -5.774807929992676
    5. '    
' → logprob: -6.274807929992676
    6. '           ' → logprob: -6.399807929992676
    7. '       ' → logprob: -6.524807929992676
    8. '  
' → logprob: -6.649807929992676
    9. '
' → logprob: -7.524807929992676
    10. '                    
' → logprob: -7.649807929992676

Token 139: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' (adapté à ' vector') → logprob: -0.018156031146645546
    2. ' vector' → logprob: -4.018156051635742
    3. '                   ' → logprob: -12.518156051635742
    4. '_vector' → logprob: -14.518156051635742
    5. '               ' → logprob: -14.893156051635742
    6. '.vector' → logprob: -15.018156051635742
    7. 'Vector' → logprob: -15.268156051635742
    8. '	vector' → logprob: -15.268156051635742
    9. '-vector' → logprob: -15.518156051635742
    10. '(vector' → logprob: -15.518156051635742

Token 140: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.9146995327901095e-05
    2. '[' → logprob: -10.875019073486328
    3. '[
' → logprob: -16.750019073486328
    4. ' [' → logprob: -16.750019073486328
    5. '[c' → logprob: -17.625019073486328
    6. '[i' → logprob: -17.875019073486328
    7. 'r' → logprob: -18.500019073486328
    8. '[u' → logprob: -18.625019073486328
    9. '```' → logprob: -18.625019073486328
    10. '[row' → logprob: -19.000019073486328

Token 141: ']' (ID: 60)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.0011330705601722002
    2. '^' → logprob: -7.626132965087891
    3. ' ^' → logprob: -7.751132965087891
    4. ']' → logprob: -9.25113296508789
    5. ' ' → logprob: -9.50113296508789
    6. ')' → logprob: -10.50113296508789
    7. '[' → logprob: -11.50113296508789
    8. ' ]' → logprob: -13.37613296508789
    9. '[i' → logprob: -13.75113296508789
    10. '`' → logprob: -14.62613296508789

Token 142: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.005985678173601627
    2. '^' → logprob: -5.130985736846924
    3. ' ^' → logprob: -10.130985260009766
    4. ' ' → logprob: -11.130985260009766
    5. '=' → logprob: -13.755985260009766
    6. '_^' → logprob: -14.630985260009766
    7. ''^' → logprob: -15.130985260009766
    8. ' ' → logprob: -15.630985260009766
    9. ')' → logprob: -15.880985260009766
    10. ' =' → logprob: -16.130985260009766

Token 143: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.3868717551231384
    2. ' vector' → logprob: -1.1368718147277832
    3. '	vector' → logprob: -14.761871337890625
    4. '(vector' → logprob: -15.761871337890625
    5. '.vector' → logprob: -16.386871337890625
    6. '_vector' → logprob: -17.136871337890625
    7. '                   ' → logprob: -17.386871337890625
    8. 'Vector' → logprob: -17.636871337890625
    9. ' ' → logprob: -17.761871337890625
    10. '<vector' → logprob: -17.886871337890625

Token 144: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. 'i' → logprob: -17.625
    4. '```' → logprob: -18.125
    5. '[r' → logprob: -18.25
    6. '[I' → logprob: -18.875
    7. ' [' → logprob: -19.25
    8. ' ' → logprob: -20.5
    9. '[
' → logprob: -20.5
    10. '`' → logprob: -20.625

Token 145: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026973789557814598
    2. '<|end|>' → logprob: -3.6519737243652344
    3. ')' → logprob: -8.526973724365234
    4. '<|end|>' → logprob: -8.776973724365234
    5. '[' → logprob: -9.651973724365234
    6. ']
' → logprob: -9.651973724365234
    7. ' ]' → logprob: -10.401973724365234
    8. '']' → logprob: -10.401973724365234
    9. '[r' → logprob: -10.526973724365234
    10. '}' → logprob: -10.776973724365234

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3047144114971161
    2. '
' → logprob: -1.8047144412994385
    3. '    
' → logprob: -3.6797144412994385
    4. '<|end|>' → logprob: -4.304714202880859
    5. '\n' → logprob: -4.554714202880859
    6. '       ' → logprob: -4.554714202880859
    7. ' 
' → logprob: -4.679714202880859
    8. '  
' → logprob: -5.304714202880859
    9. ' return' → logprob: -5.429714202880859
    10. 'return' → logprob: -5.554714202880859

Token 147: ' for' (ID: 395)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10251244157552719
    2. 'for' (adapté à ' for') → logprob: -3.6025123596191406
    3. 'solution' → logprob: -3.6025123596191406
    4. 'res' → logprob: -3.8525123596191406
    5. 'result' → logprob: -4.102512359619141
    6. 'return' → logprob: -6.102512359619141
    7. ' x' → logprob: -6.977512359619141
    8. '   ' → logprob: -7.102512359619141
    9. ' solution' → logprob: -7.602512359619141
    10. ' for' → logprob: -8.47751235961914

Token 148: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25193482637405396
    2. ' i' → logprob: -1.5019347667694092
    3. '	i' → logprob: -12.501935005187988
    4. ' ' → logprob: -13.626935005187988
    5. '   ' → logprob: -14.876935005187988
    6. 'r' → logprob: -16.001934051513672
    7. '  ' → logprob: -16.751934051513672
    8. ' ' → logprob: -17.001934051513672
    9. '```' → logprob: -17.126934051513672
    10. '_i' → logprob: -17.126934051513672

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03579562529921532
    2. 'in' → logprob: -3.4107956886291504
    3. ' ' → logprob: -6.28579568862915
    4. 'n' → logprob: -8.910795211791992
    5. ' n' → logprob: -10.160795211791992
    6. '(n' → logprob: -10.660795211791992
    7. '  ' → logprob: -10.910795211791992
    8. '<|end|>' → logprob: -11.535795211791992
    9. ',' → logprob: -11.660795211791992
    10. '	in' → logprob: -11.910795211791992

Token 150: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038049984723329544
    2. ' range' → logprob: -3.2880499362945557
    3. ' reversed' → logprob: -12.788049697875977
    4. '(range' → logprob: -13.163049697875977
    5. 're' → logprob: -13.288049697875977
    6. 'reverse' → logprob: -13.788049697875977
    7. 'n' → logprob: -14.288049697875977
    8. '   ' → logprob: -16.288049697875977
    9. ' ' → logprob: -16.413049697875977
    10. '
' → logprob: -16.663049697875977

Token 151: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00465962290763855
    2. '(' → logprob: -5.504659652709961
    3. 'range' → logprob: -7.754659652709961
    4. ' range' → logprob: -9.129659652709961
    5. '(n' → logprob: -10.129659652709961
    6. ' (' → logprob: -12.504659652709961
    7. '(
' → logprob: -15.504659652709961
    8. '_range' → logprob: -17.25465965270996
    9. '	range' → logprob: -17.62965965270996
    10. '(r' → logprob: -17.75465965270996

Token 152: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.240481914370321e-05
    2. '(' → logprob: -9.875052452087402
    3. ' (' → logprob: -14.250052452087402
    4. 'n' → logprob: -16.125051498413086
    5. '(
' → logprob: -16.250051498413086
    6. ' n' → logprob: -18.750051498413086
    7. '(i' → logprob: -19.125051498413086
    8. '(len' → logprob: -20.000051498413086
    9. ')' → logprob: -20.125051498413086
    10. '((' → logprob: -20.750051498413086

Token 153: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.4784931540489197
    2. '):' → logprob: -0.9784931540489197
    3. '))' → logprob: -6.6034932136535645
    4. ')):
' → logprob: -6.6034932136535645
    5. ' ):' → logprob: -7.1034932136535645
    6. ')' → logprob: -7.7284932136535645
    7. '):
' → logprob: -8.728492736816406
    8. ':' → logprob: -8.978492736816406
    9. ' ' → logprob: -10.103492736816406
    10. ')):
' → logprob: -10.228492736816406

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07363971322774887
    2. ' if' → logprob: -2.8236396312713623
    3. '   ' → logprob: -5.198639869689941
    4. 'if' → logprob: -5.823639869689941
    5. ':' → logprob: -6.448639869689941
    6. '    ' → logprob: -7.823639869689941
    7. ':
' → logprob: -7.823639869689941
    8. ' for' → logprob: -8.948639869689941
    9. ' :' → logprob: -9.323639869689941
    10. '        
' → logprob: -9.448639869689941

Token 155: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18717887997627258
    2. 'if' → logprob: -2.43717885017395
    3. '       ' → logprob: -2.68717885017395
    4. '        ' → logprob: -4.937179088592529
    5. ' for' → logprob: -5.187179088592529
    6. 'for' → logprob: -6.687179088592529
    7. '    ' → logprob: -7.687179088592529
    8. ' ' → logprob: -7.812179088592529
    9. '   ' → logprob: -8.937178611755371
    10. '        
' → logprob: -9.812178611755371

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13474775850772858
    2. '=' → logprob: -2.1347477436065674
    3. 'um' → logprob: -4.8847479820251465
    4. ' ' → logprob: -8.634747505187988
    5. 'u' → logprob: -10.634747505187988
    6. '	' → logprob: -11.759747505187988
    7. '   ' → logprob: -13.009747505187988
    8. ' ' → logprob: -13.009747505187988
    9. 'pace' → logprob: -13.759747505187988
    10. 'umm' → logprob: -13.759747505187988

Token 157: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.016076482832431793
    2. ' vector' → logprob: -4.391076564788818
    3. '0' → logprob: -5.641076564788818
    4. ' ' → logprob: -12.51607608795166
    5. '   ' → logprob: -12.64107608795166
    6. '	vector' → logprob: -13.51607608795166
    7. 'int' → logprob: -14.01607608795166
    8. '(vector' → logprob: -14.26607608795166
    9. '.vector' → logprob: -15.01607608795166
    10. 'Vector' → logprob: -15.39107608795166

Token 158: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020389800192788243
    2. '[' → logprob: -8.500204086303711
    3. ' [' → logprob: -14.875204086303711
    4. '[
' → logprob: -17.87520408630371
    5. '[I' → logprob: -18.87520408630371
    6. '[j' → logprob: -19.12520408630371
    7. 'i' → logprob: -19.25020408630371
    8. '[:]' → logprob: -19.50020408630371
    9. '[a' → logprob: -19.62520408630371
    10. ' ' → logprob: -19.62520408630371

Token 159: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04296756535768509
    2. ' 
' → logprob: -3.5429675579071045
    3. '  
' → logprob: -5.792967796325684
    4. ')
' → logprob: -5.917967796325684
    5. ')' → logprob: -6.292967796325684
    6. ' ' → logprob: -6.417967796325684
    7. '<|end|>' → logprob: -6.917967796325684
    8. ']' → logprob: -7.167967796325684
    9. ']
' → logprob: -7.667967796325684
    10. '
' → logprob: -7.792967796325684

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0865250900387764
    2. ' for' → logprob: -2.7115252017974854
    3. 'for' → logprob: -4.461524963378906
    4. '   ' → logprob: -6.711524963378906
    5. '	for' → logprob: -6.711524963378906
    6. '        
' → logprob: -7.711524963378906
    7. '	' → logprob: -7.711524963378906
    8. '
' → logprob: -7.711524963378906
    9. ' ' → logprob: -8.586524963378906
    10. '           ' → logprob: -8.711524963378906

Token 161: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026090107858181
    2. ' for' → logprob: -3.776090145111084
    3. '       ' → logprob: -5.901090145111084
    4. '	for' → logprob: -9.776089668273926
    5. '   ' → logprob: -10.151089668273926
    6. '
' → logprob: -12.651089668273926
    7. ' ' → logprob: -13.276089668273926
    8. '           ' → logprob: -14.401089668273926
    9. '	   ' → logprob: -14.776089668273926
    10. 'from' → logprob: -14.776089668273926

Token 162: ' c' (ID: 274)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01815064437687397
    2. ' j' → logprob: -4.018150806427002
    3. 'c' → logprob: -14.268150329589844
    4. '	j' → logprob: -15.643150329589844
    5. '   ' → logprob: -18.018150329589844
    6. '$j' → logprob: -18.518150329589844
    7. '_j' → logprob: -19.018150329589844
    8. ' c' → logprob: -19.143150329589844
    9. ' ' → logprob: -19.393150329589844
    10. '```' → logprob: -19.518150329589844

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012708000838756561
    2. 'in' → logprob: -4.3877081871032715
    3. ' ' → logprob: -8.637707710266113
    4. 'range' → logprob: -12.137707710266113
    5. '	in' → logprob: -12.262707710266113
    6. '   ' → logprob: -13.262707710266113
    7. '  ' → logprob: -13.387707710266113
    8. 'i' → logprob: -13.387707710266113
    9. ',' → logprob: -13.637707710266113
    10. '<|end|>' → logprob: -13.887707710266113

Token 164: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47410017251968384
    2. 'range' → logprob: -0.9741001725196838
    3. '(range' → logprob: -10.849100112915039
    4. '	range' → logprob: -12.849100112915039
    5. ' xrange' → logprob: -14.599100112915039
    6. ' ' → logprob: -15.599100112915039
    7. '   ' → logprob: -15.599100112915039
    8. '_range' → logprob: -16.47410011291504
    9. '.range' → logprob: -17.09910011291504
    10. ' ran' → logprob: -17.34910011291504

Token 165: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.875001907348633
    3. ' i' → logprob: -15.375001907348633
    4. 'i' → logprob: -15.750001907348633
    5. ' (' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '(
' → logprob: -17.875001907348633
    8. '	i' → logprob: -19.250001907348633
    9. '[i' → logprob: -20.500001907348633
    10. ',i' → logprob: -20.875001907348633

Token 166: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0028052295092493296
    2. ' +' → logprob: -5.877805233001709
    3. '+i' → logprob: -15.87780475616455
    4. '   ' → logprob: -17.002805709838867
    5. '1' → logprob: -17.127805709838867
    6. '+
' → logprob: -17.127805709838867
    7. ' ' → logprob: -17.377805709838867
    8. ')+' → logprob: -18.127805709838867
    9. '＋' → logprob: -18.127805709838867
    10. '()+' → logprob: -18.252805709838867

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002783783129416406
    2. ' ' → logprob: -8.50027847290039
    3. '+' → logprob: -9.87527847290039
    4. 'n' → logprob: -11.00027847290039
    5. '   ' → logprob: -12.62527847290039
    6. ',' → logprob: -13.75027847290039
    7. '       ' → logprob: -15.12527847290039
    8. ' n' → logprob: -15.12527847290039
    9. '```' → logprob: -15.12527847290039
    10. '    ' → logprob: -15.50027847290039

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047166430158540606
    2. ',n' → logprob: -7.750471591949463
    3. ' ,' → logprob: -10.125472068786621
    4. ',
' → logprob: -14.625472068786621
    5. 'n' → logprob: -15.250472068786621
    6. '```' → logprob: -17.250471115112305
    7. ',

' → logprob: -17.625471115112305
    8. '，' → logprob: -17.750471115112305
    9. ',num' → logprob: -17.750471115112305
    10. '<|end|>' → logprob: -17.875471115112305

Token 169: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04858759790658951
    2. ' n' → logprob: -3.0485875606536865
    3. '	n' → logprob: -15.423587799072266
    4. ')n' → logprob: -18.548587799072266
    5. '   ' → logprob: -20.298587799072266
    6. ',n' → logprob: -20.423587799072266
    7. '<n' → logprob: -20.673587799072266
    8. ' ' → logprob: -20.923587799072266
    9. '_n' → logprob: -20.923587799072266
    10. '(n' → logprob: -21.923587799072266

Token 170: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5760148763656616
    2. '):' → logprob: -0.8260148763656616
    3. '):

' → logprob: -10.701014518737793
    4. ')' → logprob: -10.826014518737793
    5. '):
' → logprob: -11.076014518737793
    6. ' ):' → logprob: -12.076014518737793
    7. ':' → logprob: -12.201014518737793
    8. ' ):
' → logprob: -12.326014518737793
    9. ' ' → logprob: -13.701014518737793
    10. '}:' → logprob: -14.826014518737793

Token 171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03966381028294563
    2. ' s' → logprob: -3.414663791656494
    3. ':' → logprob: -6.664663791656494
    4. '       ' → logprob: -6.914663791656494
    5. ' ' → logprob: -7.164663791656494
    6. '          ' → logprob: -7.164663791656494
    7. '               ' → logprob: -7.664663791656494
    8. ' if' → logprob: -8.039664268493652
    9. ':
' → logprob: -8.414664268493652
    10. 's' → logprob: -8.539664268493652

Token 172: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.17606326937675476
    2. 's' (adapté à ' s') → logprob: -1.9260632991790771
    3. '           ' → logprob: -4.551063060760498
    4. ' ' → logprob: -5.926063060760498
    5. '       ' → logprob: -7.301063060760498
    6. ' if' → logprob: -7.676063060760498
    7. 'if' → logprob: -7.926063060760498
    8. '            ' → logprob: -8.551063537597656
    9. '               ' → logprob: -8.551063537597656
    10. '   ' → logprob: -9.426063537597656

Token 173: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.0011341434437781572
    2. '^' → logprob: -6.876133918762207
    3. ' ^' → logprob: -9.251133918762207
    4. ' ' → logprob: -12.251133918762207
    5. ' ' → logprob: -15.001133918762207
    6. '	' → logprob: -16.126134872436523
    7. '=' → logprob: -17.001134872436523
    8. '[' → logprob: -17.626134872436523
    9. ' -=' → logprob: -17.876134872436523
    10. ' =' → logprob: -17.876134872436523

Token 174: ' (' (ID: 350)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.3887222707271576
    2. ' matrix' → logprob: -1.13872230052948
    3. '(matrix' → logprob: -6.5137224197387695
    4. ' (' → logprob: -8.63872241973877
    5. '	matrix' → logprob: -8.88872241973877
    6. '   ' → logprob: -11.01372241973877
    7. 'vector' → logprob: -11.38872241973877
    8. ' vector' → logprob: -11.63872241973877
    9. '(' → logprob: -11.76372241973877
    10. ' ' → logprob: -12.51372241973877

Token 175: 'matrix' (ID: 37307)
  Prédit: 'matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.006856981664896011
    2. ' matrix' → logprob: -5.006856918334961
    3. '	matrix' → logprob: -9.381856918334961
    4. '   ' → logprob: -10.006856918334961
    5. '(matrix' → logprob: -11.631856918334961
    6. '           ' → logprob: -13.756856918334961
    7. 'vector' → logprob: -14.006856918334961
    8. ' ' → logprob: -14.756856918334961
    9. '  ' → logprob: -15.631856918334961
    10. 'm' → logprob: -15.756856918334961

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. 'i' → logprob: -15.75
    4. '[c' → logprob: -17.25
    5. '[I' → logprob: -17.5
    6. '[
' → logprob: -18.0
    7. '[s' → logprob: -18.75
    8. ' [' → logprob: -19.0
    9. '```' → logprob: -19.125
    10. '[u' → logprob: -19.25

Token 177: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.04870057478547096
    2. '][' → logprob: -3.0487005710601807
    3. '[' → logprob: -9.548700332641602
    4. ')[' → logprob: -10.798700332641602
    5. ' ][' → logprob: -11.798700332641602
    6. ' [' → logprob: -12.798700332641602
    7. ']' → logprob: -12.923700332641602
    8. '[
' → logprob: -13.048700332641602
    9. '>[' → logprob: -13.548700332641602
    10. '}[' → logprob: -14.048700332641602

Token 178: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00047595196519978344
    2. '[c' → logprob: -8.000475883483887
    3. ' c' → logprob: -8.875475883483887
    4. '   ' → logprob: -14.875475883483887
    5. ')c' → logprob: -15.250475883483887
    6. '	c' → logprob: -16.125476837158203
    7. '][' → logprob: -17.625476837158203
    8. ' ' → logprob: -17.750476837158203
    9. ']' → logprob: -18.375476837158203
    10. '
' → logprob: -19.125476837158203

Token 179: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013080471195280552
    2. ' ]' → logprob: -4.388080596923828
    3. ' and' → logprob: -8.388080596923828
    4. ' &' → logprob: -8.763080596923828
    5. ']*' → logprob: -9.763080596923828
    6. ' *' → logprob: -10.138080596923828
    7. 'and' → logprob: -10.138080596923828
    8. ' ' → logprob: -10.763080596923828
    9. '&' → logprob: -11.888080596923828
    10. '*' → logprob: -12.388080596923828

Token 180: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.6759735345840454
    2. ' and' → logprob: -0.9259735345840454
    3. '&' → logprob: -3.050973415374756
    4. 'and' → logprob: -3.550973415374756
    5. ' ' → logprob: -4.175973415374756
    6. ' *' → logprob: -5.800973415374756
    7. '*' → logprob: -7.675973415374756
    8. ')' → logprob: -8.800973892211914
    9. ' )' → logprob: -10.300973892211914
    10. ' vector' → logprob: -10.675973892211914

Token 181: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.38687485456466675
    2. ' vector' → logprob: -1.1368749141693115
    3. '	vector' → logprob: -13.76187515258789
    4. '   ' → logprob: -14.01187515258789
    5. ' ' → logprob: -14.63687515258789
    6. '(vector' → logprob: -14.76187515258789
    7. '
' → logprob: -15.63687515258789
    8. '    ' → logprob: -16.13687515258789
    9. '  ' → logprob: -16.51187515258789
    10. '       ' → logprob: -16.51187515258789

Token 182: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.583550642360933e-05
    2. '[' → logprob: -10.250036239624023
    3. '[
' → logprob: -15.625036239624023
    4. ' [' → logprob: -15.750036239624023
    5. 'c' → logprob: -16.750036239624023
    6. '
' → logprob: -17.000036239624023
    7. '```' → logprob: -18.375036239624023
    8. '   ' → logprob: -18.625036239624023
    9. '`' → logprob: -19.500036239624023
    10. ' ' → logprob: -19.500036239624023

Token 183: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016708957264199853
    2. ')
' → logprob: -6.501670837402344
    3. ' )' → logprob: -9.126670837402344
    4. '])' → logprob: -10.376670837402344
    5. ')
' → logprob: -11.751670837402344
    6. ')

' → logprob: -11.751670837402344
    7. ')`' → logprob: -13.001670837402344
    8. '[' → logprob: -13.251670837402344
    9. '))' → logprob: -13.376670837402344
    10. ' )
' → logprob: -13.501670837402344

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04053659737110138
    2. '   ' → logprob: -3.915536642074585
    3. '
' → logprob: -4.540536403656006
    4. '        
' → logprob: -6.040536403656006
    5. ' vector' → logprob: -6.165536403656006
    6. '    
' → logprob: -6.540536403656006
    7. 'vector' → logprob: -7.040536403656006
    8. ' 
' → logprob: -7.415536403656006
    9. '           ' → logprob: -8.040536880493164
    10. '[' → logprob: -8.415536880493164

Token 185: ' if' (ID: 538)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.0024821963161230087
    2. ' vector' → logprob: -6.0024824142456055
    3. '       ' → logprob: -12.252482414245605
    4. '   ' → logprob: -13.752482414245605
    5. 'if' (adapté à ' if') → logprob: -15.002482414245605
    6. '           ' → logprob: -16.62748146057129
    7. '	vector' → logprob: -16.75248146057129
    8. 'Vector' → logprob: -17.00248146057129
    9. '_vector' → logprob: -17.37748146057129
    10. '.vector' → logprob: -17.50248146057129

Token 186: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.07290422171354294
    2. 'matrix' → logprob: -2.822904109954834
    3. ' not' → logprob: -5.322904109954834
    4. ' s' → logprob: -5.322904109954834
    5. '(matrix' → logprob: -7.447904109954834
    6. 's' → logprob: -8.322904586791992
    7. ' ' → logprob: -9.072904586791992
    8. 'not' → logprob: -9.572904586791992
    9. '	matrix' → logprob: -9.822904586791992
    10. ' (' → logprob: -10.572904586791992

Token 187: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.700132997939363e-05
    2. '[' → logprob: -11.125017166137695
    3. ' [' → logprob: -13.500017166137695
    4. '[
' → logprob: -15.375017166137695
    5. '```' → logprob: -15.375017166137695
    6. '[I' → logprob: -16.125017166137695
    7. '][' → logprob: -17.125017166137695
    8. ')[' → logprob: -17.250017166137695
    9. '[r' → logprob: -17.625017166137695
    10. '   ' → logprob: -17.625017166137695

Token 188: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.024562036618590355
    2. '[' → logprob: -4.274561882019043
    3. '][' → logprob: -4.774561882019043
    4. '[I' → logprob: -6.774561882019043
    5. '[c' → logprob: -8.899561882019043
    6. ')[' → logprob: -9.024561882019043
    7. '}[' → logprob: -9.274561882019043
    8. ''[' → logprob: -9.399561882019043
    9. '[j' → logprob: -9.649561882019043
    10. '```' → logprob: -10.399561882019043

Token 189: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.2762428822461516e-05
    2. ' i' → logprob: -9.875052452087402
    3. '[i' → logprob: -14.625052452087402
    4. ' ' → logprob: -14.625052452087402
    5. '	i' → logprob: -15.750052452087402
    6. '   ' → logprob: -17.00005340576172
    7. ''i' → logprob: -17.37505340576172
    8. ']' → logprob: -17.37505340576172
    9. '][' → logprob: -17.62505340576172
    10. ',i' → logprob: -18.12505340576172

Token 190: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7820662260055542
    2. ' ==' → logprob: -0.7820662260055542
    3. ')' → logprob: -2.5320663452148438
    4. ')==' → logprob: -5.657066345214844
    5. '):' → logprob: -7.032066345214844
    6. ']' → logprob: -7.782066345214844
    7. ']==' → logprob: -7.782066345214844
    8. ':' → logprob: -8.782066345214844
    9. '):
' → logprob: -9.282066345214844
    10. ' )' → logprob: -9.907066345214844

Token 191: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42905348539352417
    2. '==' → logprob: -1.054053544998169
    3. ':' → logprob: -8.55405330657959
    4. '=' → logprob: -9.05405330657959
    5. ' =' → logprob: -11.42905330657959
    6. ' ' → logprob: -12.17905330657959
    7. '[' → logprob: -12.17905330657959
    8. '0' → logprob: -12.42905330657959
    9. ')==' → logprob: -12.42905330657959
    10. ')' → logprob: -12.80405330657959

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015128388768061996
    2. ' ' → logprob: -6.5015130043029785
    3. '1' → logprob: -11.50151252746582
    4. '۰' → logprob: -16.12651252746582
    5. '   ' → logprob: -16.37651252746582
    6. 'False' → logprob: -16.62651252746582
    7. '  ' → logprob: -17.50151252746582
    8. '
' → logprob: -18.00151252746582
    9. '０' → logprob: -18.06401252746582
    10. '	' → logprob: -18.06401252746582

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059643457643687725
    2. ' ' → logprob: -5.130964279174805
    3. '1' → logprob: -10.255964279174805
    4. '   ' → logprob: -15.880964279174805
    5. 'False' → logprob: -16.130964279174805
    6. '  ' → logprob: -16.130964279174805
    7. ' ' → logprob: -16.630964279174805
    8. '	' → logprob: -16.818464279174805
    9. '۰' → logprob: -17.068464279174805
    10. '' → logprob: -17.693464279174805

Token 194: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03354138508439064
    2. ' and' → logprob: -3.658541440963745
    3. ':
' → logprob: -5.658541202545166
    4. 'and' → logprob: -5.783541202545166
    5. ':return' → logprob: -7.408541202545166
    6. '=' → logprob: -11.783541679382324
    7. ' :' → logprob: -11.783541679382324
    8. '           ' → logprob: -12.283541679382324
    9. ':
' → logprob: -12.533541679382324
    10. ':

' → logprob: -12.533541679382324

Token 195: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.020899776369333267
    2. 's' → logprob: -3.895899772644043
    3. ' vector' → logprob: -8.520899772644043
    4. ' not' → logprob: -9.020899772644043
    5. 'vector' → logprob: -10.520899772644043
    6. ' ' → logprob: -12.645899772644043
    7. 'not' → logprob: -12.770899772644043
    8. '(s' → logprob: -13.270899772644043
    9. '	s' → logprob: -14.145899772644043
    10. ' ' → logprob: -14.895899772644043

Token 196: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3331209123134613
    2. ' !=' → logprob: -1.5831209421157837
    3. ':' → logprob: -2.583120822906494
    4. '<|end|>' → logprob: -7.083120822906494
    5. '==' → logprob: -7.458120822906494
    6. ')' → logprob: -8.708121299743652
    7. ')!=' → logprob: -9.083121299743652
    8. '):' → logprob: -9.333121299743652
    9. ' ==' → logprob: -9.458121299743652
    10. '[' → logprob: -9.708121299743652

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43321794271469116
    2. ' ' → logprob: -1.058218002319336
    3. '1' → logprob: -5.433218002319336
    4. ' vector' → logprob: -9.058218002319336
    5. 'vector' → logprob: -10.933218002319336
    6. '  ' → logprob: -14.308218002319336
    7. ' ' → logprob: -14.433218002319336
    8. '   ' → logprob: -14.558218002319336
    9. '<|end|>' → logprob: -15.058218002319336
    10. '	' → logprob: -15.433218002319336

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023272618651390076
    2. ' ' → logprob: -3.7732725143432617
    3. ' vector' → logprob: -11.273272514343262
    4. 'vector' → logprob: -11.273272514343262
    5. '  ' → logprob: -15.148272514343262
    6. '   ' → logprob: -15.523272514343262
    7. '=' → logprob: -15.960772514343262
    8. '```' → logprob: -16.023273468017578
    9. '1' → logprob: -16.273273468017578
    10. ' ' → logprob: -16.523273468017578

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3507680296897888
    2. ':
' → logprob: -1.2257680892944336
    3. ':return' → logprob: -6.350768089294434
    4. '           ' → logprob: -7.850768089294434
    5. '       ' → logprob: -9.100768089294434
    6. ':
' → logprob: -10.600768089294434
    7. '   ' → logprob: -11.100768089294434
    8. ' return' → logprob: -11.725768089294434
    9. ' :
' → logprob: -12.100768089294434
    10. ' :' → logprob: -12.475768089294434

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0113947419449687
    2. ':' → logprob: -5.26139497756958
    3. ' return' → logprob: -6.01139497756958
    4. ':
' → logprob: -6.51139497756958
    5. ':return' → logprob: -6.51139497756958
    6. '       ' → logprob: -7.63639497756958
    7. 'return' → logprob: -9.261394500732422
    8. '               ' → logprob: -9.761394500732422
    9. '
' → logprob: -10.636394500732422
    10. ' :' → logprob: -11.386394500732422

Token 201: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1278553456068039
    2. 'return' (adapté à ' return') → logprob: -2.8778553009033203
    3. '           ' → logprob: -3.0028553009033203
    4. '
' → logprob: -5.00285530090332
    5. ' 
' → logprob: -5.50285530090332
    6. '   ' → logprob: -6.87785530090332
    7. '               ' → logprob: -7.62785530090332
    8. '       ' → logprob: -7.62785530090332
    9. ' raise' → logprob: -8.12785530090332
    10. '    
' → logprob: -8.50285530090332

Token 202: ' False' (ID: 7983)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07035018503665924
    2. ' None' → logprob: -2.820350170135498
    3. 'False' → logprob: -4.945350170135498
    4. '[]' → logprob: -6.820350170135498
    5. ' False' → logprob: -9.570350646972656
    6. '"' → logprob: -10.445350646972656
    7. 'No' → logprob: -11.695350646972656
    8. '[' → logprob: -11.695350646972656
    9. ' []' → logprob: -11.695350646972656
    10. '[]
' → logprob: -12.570350646972656

Token 203: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1127333790063858
    2. '
' → logprob: -2.3627333641052246
    3. '        
' → logprob: -4.737733364105225
    4. '<|end|>' → logprob: -7.487733364105225
    5. '\n' → logprob: -7.612733364105225
    6. '   ' → logprob: -7.612733364105225
    7. '    
' → logprob: -7.737733364105225
    8. '  
' → logprob: -8.112733840942383
    9. '
' → logprob: -8.237733840942383
    10. '' → logprob: -8.237733840942383

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024601989425718784
    2. '        
' → logprob: -6.37746000289917
    3. '
' → logprob: -7.37746000289917
    4. '   ' → logprob: -10.502460479736328
    5. '    
' → logprob: -10.627460479736328
    6. ' return' → logprob: -10.752460479736328
    7. '  
' → logprob: -11.377460479736328
    8. 'return' → logprob: -12.002460479736328
    9. '       
' → logprob: -12.127460479736328
    10. '	' → logprob: -12.252460479736328

Token 205: ' vector' (ID: 9727)
  Prédit: ' vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.4627911448478699
    2. 'vector' (adapté à ' vector') → logprob: -1.3377912044525146
    3. '   ' → logprob: -2.7127912044525146
    4. '       ' → logprob: -3.5877912044525146
    5. ' if' → logprob: -4.5877909660339355
    6. '    ' → logprob: -6.3377909660339355
    7. 'if' → logprob: -6.4627909660339355
    8. '    
' → logprob: -9.337791442871094
    9. '	vector' → logprob: -9.337791442871094
    10. '        
' → logprob: -9.462791442871094

Token 206: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.048743151128292084
    2. '[' → logprob: -3.04874324798584
    3. '```' → logprob: -9.92374324798584
    4. '[
' → logprob: -10.79874324798584
    5. '\[' → logprob: -11.04874324798584
    6. '[I' → logprob: -11.29874324798584
    7. '[c' → logprob: -11.92374324798584
    8. '[int' → logprob: -12.17374324798584
    9. '[:]' → logprob: -12.17374324798584
    10. '[...]' → logprob: -12.42374324798584

Token 207: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07945478707551956
    2. '=' → logprob: -2.5794548988342285
    3. ' ^=' → logprob: -7.5794548988342285
    4. ' ' → logprob: -10.57945442199707
    5. ')' → logprob: -11.20445442199707
    6. ' |=' → logprob: -11.82945442199707
    7. ']' → logprob: -12.70445442199707
    8. ',' → logprob: -13.82945442199707
    9. '	' → logprob: -14.32945442199707
    10. ')=' → logprob: -14.45445442199707

Token 208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868900537490845
    2. ' =' → logprob: -1.1368900537490845
    3. ' ^=' → logprob: -10.886890411376953
    4. ' |=' → logprob: -15.636890411376953
    5. ' ' → logprob: -16.511890411376953
    6. '＝' → logprob: -16.761890411376953
    7. ' ' → logprob: -17.386890411376953
    8. '=

' → logprob: -17.636890411376953
    9. '[' → logprob: -18.136890411376953
    10. '.=' → logprob: -18.511890411376953

Token 209: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03804149478673935
    2. ' s' → logprob: -3.288041591644287
    3. '(s' → logprob: -18.288042068481445
    4. '	s' → logprob: -18.663042068481445
    5. ' ' → logprob: -19.288042068481445
    6. '0' → logprob: -19.788042068481445
    7. 'int' → logprob: -19.913042068481445
    8. '_s' → logprob: -20.163042068481445
    9. '1' → logprob: -20.788042068481445
    10. '`s' → logprob: -20.788042068481445

Token 210: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5157281756401062
    2. '
' → logprob: -1.390728235244751
    3. '	return' → logprob: -2.890728235244751
    4. 'return' → logprob: -3.265728235244751
    5. ' return' → logprob: -4.015727996826172
    6. '    
' → logprob: -4.015727996826172
    7. '       ' → logprob: -4.015727996826172
    8. '<|end|>' → logprob: -6.140727996826172
    9. '        
' → logprob: -6.765727996826172
    10. ' 
' → logprob: -7.390727996826172

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3821263611316681
    2. '
' → logprob: -2.3821263313293457
    3. '    
' → logprob: -2.7571263313293457
    4. '	return' → logprob: -3.0071263313293457
    5. '       ' → logprob: -3.3821263313293457
    6. 'return' → logprob: -4.007126331329346
    7. ' 
' → logprob: -4.132126331329346
    8. ' return' → logprob: -4.132126331329346
    9. '\n' → logprob: -4.757126331329346
    10. '  
' → logprob: -5.382126331329346

Token 212: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40205439925193787
    2. ' return' → logprob: -1.2770544290542603
    3. 'return' (adapté à ' return') → logprob: -3.1520543098449707
    4. '
' → logprob: -5.527054309844971
    5. '    
' → logprob: -6.402054309844971
    6. ' 
' → logprob: -6.402054309844971
    7. '	return' → logprob: -6.527054309844971
    8. '       ' → logprob: -8.527054786682129
    9. ' ' → logprob: -8.652054786682129
    10. '  
' → logprob: -9.152054786682129

Token 213: ' True' (ID: 6432)
  Prédit: ' vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.7529662251472473
    2. 'vector' → logprob: -0.8779662251472473
    3. 'True' → logprob: -2.7529661655426025
    4. ' True' → logprob: -3.0029661655426025
    5. '[' → logprob: -12.002965927124023
    6. '	vector' → logprob: -12.877965927124023
    7. ' ' → logprob: -13.252965927124023
    8. 'Vector' → logprob: -13.252965927124023
    9. '[]' → logprob: -13.502965927124023
    10. 'vectors' → logprob: -13.502965927124023

Token 214: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09366597980260849
    2. '<|end|>' → logprob: -3.0936660766601562
    3. '
' → logprob: -3.4686660766601562
    4. '```' → logprob: -5.718666076660156
    5. '[' → logprob: -6.468666076660156
    6. 'def' → logprob: -6.593666076660156
    7. ' ' → logprob: -6.593666076660156
    8. 'a' → logprob: -6.968666076660156
    9. 'n' → logprob: -7.218666076660156
    10. ' 
' → logprob: -7.718666076660156

Token 216: ' main' (ID: 2758)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.26130181550979614
    2. ' main' → logprob: -1.6363017559051514
    3. ' ' → logprob: -4.1363019943237305
    4. ' find' → logprob: -4.5113019943237305
    5. ' check' → logprob: -5.8863019943237305
    6. ' calculate' → logprob: -6.6363019943237305
    7. ' space' → logprob: -7.2613019943237305
    8. ' solver' → logprob: -7.2613019943237305
    9. ' linear' → logprob: -8.26130199432373
    10. ' test' → logprob: -8.26130199432373

Token 217: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004744023026432842
    2. ' ():' → logprob: -8.500473976135254
    3. '(' → logprob: -8.625473976135254
    4. '():
' → logprob: -9.750473976135254
    5. '()' → logprob: -10.750473976135254
    6. '()>' → logprob: -12.125473976135254
    7. ':' → logprob: -13.375473976135254
    8. '():
' → logprob: -14.125473976135254
    9. '(":' → logprob: -14.375473976135254
    10. '_' → logprob: -14.375473976135254

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3473670482635498
    2. ' ' → logprob: -1.7223670482635498
    3. ' n' → logprob: -3.34736704826355
    4. 'n' → logprob: -3.47236704826355
    5. '    ' → logprob: -4.347367286682129
    6. ' import' → logprob: -4.597367286682129
    7. '[' → logprob: -4.722367286682129
    8. '(' → logprob: -5.722367286682129
    9. '(n' → logprob: -6.097367286682129
    10. ' input' → logprob: -6.347367286682129

Token 219: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05403740331530571
    2. ' import' → logprob: -3.55403733253479
    3. 'n' → logprob: -3.92903733253479
    4. ' input' → logprob: -6.054037570953369
    5. '   ' → logprob: -7.179037570953369
    6. ' t' → logprob: -7.554037570953369
    7. 'import' → logprob: -7.679037570953369
    8. ' T' → logprob: -9.304037094116211
    9. ' ' → logprob: -10.054037094116211
    10. 'input' (adapté à ' input') → logprob: -10.429037094116211

Token 220: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04510478675365448
    2. '_data' → logprob: -3.670104742050171
    3. '_line' → logprob: -4.04510498046875
    4. '_' → logprob: -7.79510498046875
    5. '_lines' → logprob: -8.29510498046875
    6. '().' → logprob: -8.92010498046875
    7. 'data' → logprob: -9.17010498046875
    8. ' =' → logprob: -9.67010498046875
    9. '_text' → logprob: -10.29510498046875
    10. '_str' → logprob: -10.79510498046875

Token 221: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.005239564459770918
    2. 'sys' → logprob: -5.255239486694336
    3. ' input' → logprob: -12.380239486694336
    4. '	sys' → logprob: -14.755239486694336
    5. '=sys' → logprob: -14.755239486694336
    6. ' lambda' → logprob: -14.880239486694336
    7. 'input' → logprob: -14.880239486694336
    8. '(sys' → logprob: -16.255239486694336
    9. ' ' → logprob: -17.505239486694336
    10. 'lambda' → logprob: -18.630239486694336

Token 222: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.31357529759407043
    2. '.stdin' → logprob: -1.313575267791748
    3. '.readline' → logprob: -8.813575744628906
    4. '.argv' → logprob: -9.313575744628906
    5. '.stdout' → logprob: -9.938575744628906
    6. ' .' → logprob: -11.688575744628906
    7. '.std' → logprob: -11.938575744628906
    8. '.input' → logprob: -12.313575744628906
    9. '.setdefault' → logprob: -13.813575744628906
    10. '.
' → logprob: -13.813575744628906

Token 223: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.009394899010658264
    2. 'read' → logprob: -4.759395122528076
    3. '.read' → logprob: -7.259395122528076
    4. 'buffer' → logprob: -10.009394645690918
    5. '.readlines' → logprob: -10.759394645690918
    6. ' readline' → logprob: -12.509394645690918
    7. '_read' → logprob: -12.884394645690918
    8. '.' → logprob: -13.009394645690918
    9. '.buffer' → logprob: -14.009394645690918
    10. 'readonly' → logprob: -15.509394645690918

Token 224: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01167885772883892
    2. '().' → logprob: -4.636678695678711
    3. '()
' → logprob: -6.261678695678711
    4. '   ' → logprob: -12.636678695678711
    5. '()

' → logprob: -12.886678695678711
    6. '()\' → logprob: -13.261678695678711
    7. ' ()' → logprob: -13.636678695678711
    8. '(' → logprob: -13.761678695678711
    9. '()<' → logprob: -14.136678695678711
    10. '()
' → logprob: -14.261678695678711

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044654130935668945
    2. ' n' → logprob: -3.294654130935669
    3. '    
' → logprob: -5.91965389251709
    4. 'n' → logprob: -5.91965389251709
    5. ' line' → logprob: -8.04465389251709
    6. '(n' → logprob: -8.29465389251709
    7. '	n' → logprob: -8.79465389251709
    8. 'data' → logprob: -9.29465389251709
    9. '    ' → logprob: -9.29465389251709
    10. ' data' → logprob: -9.91965389251709

Token 226: ' while' (ID: 2049)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.21257635951042175
    2. 'n' → logprob: -2.087576389312744
    3. ' t' → logprob: -2.837576389312744
    4. '   ' → logprob: -5.587576389312744
    5. ' T' → logprob: -5.962576389312744
    6. 't' → logprob: -6.087576389312744
    7. 'T' → logprob: -9.087575912475586
    8. ' N' → logprob: -10.712575912475586
    9. '	n' → logprob: -10.712575912475586
    10. '    
' → logprob: -10.962575912475586

Token 227: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.01847696863114834
    2. 'True' → logprob: -4.018476963043213
    3. '(True' → logprob: -8.143477439880371
    4. ' ' → logprob: -11.018477439880371
    5. ' line' → logprob: -12.018477439880371
    6. '    ' → logprob: -12.018477439880371
    7. '1' → logprob: -12.643477439880371
    8. '   ' → logprob: -13.393477439880371
    9. ' (' → logprob: -14.018477439880371
    10. '=True' → logprob: -14.393477439880371

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23395530879497528
    2. '():' → logprob: -1.6089552640914917
    3. ':
' → logprob: -5.983955383300781
    4. '():
' → logprob: -6.358955383300781
    5. '       ' → logprob: -6.608955383300781
    6. '   ' → logprob: -6.858955383300781
    7. ' :' → logprob: -6.983955383300781
    8. '(' → logprob: -7.608955383300781
    9. ',' → logprob: -8.733955383300781
    10. '    ' → logprob: -9.858955383300781

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0738021582365036
    2. '   ' → logprob: -2.8238022327423096
    3. '    ' → logprob: -5.1988019943237305
    4. ' line' → logprob: -5.6988019943237305
    5. ' ' → logprob: -6.3238019943237305
    6. '  ' → logprob: -7.9488019943237305
    7. '      ' → logprob: -8.69880199432373
    8. ' readline' → logprob: -8.69880199432373
    9. '<|end|>' → logprob: -9.32380199432373
    10. '     ' → logprob: -9.57380199432373

Token 230: ' m' (ID: 284)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.01807689666748047
    2. 'line' → logprob: -4.6430768966674805
    3. ' n' → logprob: -4.8930768966674805
    4. 'n' → logprob: -7.7680768966674805
    5. ' l' → logprob: -8.39307689666748
    6. '   ' → logprob: -9.64307689666748
    7. ' data' → logprob: -9.89307689666748
    8. 'l' → logprob: -12.14307689666748
    9. 'data' → logprob: -12.51807689666748
    10. '	line' → logprob: -12.76807689666748

Token 231: ',n' (ID: 18103)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009807559661567211
    2. '=' → logprob: -4.759807586669922
    3. ' ' → logprob: -7.384807586669922
    4. ',' → logprob: -8.259807586669922
    5. ' =
' → logprob: -10.259807586669922
    6. '=int' → logprob: -10.384807586669922
    7. 'a' → logprob: -10.384807586669922
    8. '  ' → logprob: -10.634807586669922
    9. '    ' → logprob: -10.634807586669922
    10. 'space' → logprob: -11.134807586669922

Token 232: ',d' (ID: 26159)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689371943473816
    2. '=' → logprob: -1.1368937492370605
    3. ',' → logprob: -10.886893272399902
    4. ')' → logprob: -13.761893272399902
    5. ' ' → logprob: -14.011893272399902
    6. '=input' → logprob: -14.636893272399902
    7. '=line' → logprob: -14.761893272399902
    8. '[' → logprob: -15.636893272399902
    9. '   ' → logprob: -15.761893272399902
    10. '=int' → logprob: -15.886893272399902

Token 233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409409284591675
    2. ' =' → logprob: -0.9740940928459167
    3. ',' → logprob: -11.34909439086914
    4. ' ' → logprob: -13.22409439086914
    5. '=input' → logprob: -13.22409439086914
    6. '=line' → logprob: -13.97409439086914
    7. '[' → logprob: -15.22409439086914
    8. ')' → logprob: -15.22409439086914
    9. '_' → logprob: -16.97409439086914
    10. '  ' → logprob: -17.47409439086914

Token 234: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07916957885026932
    2. 'map' → logprob: -2.579169511795044
    3. ' sys' → logprob: -8.579169273376465
    4. '[' → logprob: -10.329169273376465
    5. ' input' → logprob: -10.954169273376465
    6. ' [' → logprob: -11.329169273376465
    7. 'input' → logprob: -11.454169273376465
    8. 'sys' → logprob: -11.704169273376465
    9. '(map' → logprob: -11.954169273376465
    10. ' list' → logprob: -13.454169273376465

Token 235: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.021971169859170914
    2. '(' → logprob: -4.271971225738525
    3. '(str' → logprob: -5.396971225738525
    4. '(input' → logprob: -6.146971225738525
    5. '(lambda' → logprob: -6.896971225738525
    6. '(list' → logprob: -9.646970748901367
    7. 'int' → logprob: -12.021970748901367
    8. '(
' → logprob: -12.271970748901367
    9. '(tuple' → logprob: -12.271970748901367
    10. '(sys' → logprob: -12.646970748901367

Token 236: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.33239221572875977
    2. '(sys' → logprob: -1.3323922157287598
    3. '(' → logprob: -4.20739221572876
    4. ')' → logprob: -5.83239221572876
    5. 'input' → logprob: -7.95739221572876
    6. ',input' → logprob: -8.332391738891602
    7. 'sys' → logprob: -8.707391738891602
    8. '()' → logprob: -8.957391738891602
    9. '(
' → logprob: -9.957391738891602
    10. '=sys' → logprob: -10.332391738891602

Token 237: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.723973582556937e-05
    2. '()' → logprob: -11.000017166137695
    3. ' ().' → logprob: -14.625017166137695
    4. '()
' → logprob: -17.375017166137695
    5. '())' → logprob: -19.500017166137695
    6. '(' → logprob: -20.125017166137695
    7. '('').' → logprob: -20.125017166137695
    8. '()?.' → logprob: -20.250017166137695
    9. '   ' → logprob: -20.375017166137695
    10. '()

' → logprob: -20.500017166137695

Token 238: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0021822615526616573
    2. 'strip' → logprob: -6.252182483673096
    3. 'rstrip' → logprob: -8.377182006835938
    4. '(split' → logprob: -11.252182006835938
    5. '().' → logprob: -11.752182006835938
    6. ' split' → logprob: -13.252182006835938
    7. ')' → logprob: -15.127182006835938
    8. 'decode' → logprob: -15.752182006835938
    9. '()' → logprob: -16.377182006835938
    10. '```' → logprob: -16.627182006835938

Token 239: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03100915253162384
    2. ')' → logprob: -3.9060091972351074
    3. '()' → logprob: -4.656009197235107
    4. '())
' → logprob: -7.031009197235107
    5. '()
' → logprob: -11.78100872039795
    6. '()))' → logprob: -12.65600872039795
    7. ')
' → logprob: -12.65600872039795
    8. '(' → logprob: -12.78100872039795
    9. '))' → logprob: -13.53100872039795
    10. '(),' → logprob: -13.65600872039795

Token 240: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.017520174384117126
    2. 'if' (adapté à ' if') → logprob: -4.267519950866699
    3. '       ' → logprob: -5.767519950866699
    4. '<|end|>' → logprob: -9.0175199508667
    5. ' ' → logprob: -10.2675199508667
    6. '	if' → logprob: -10.6425199508667
    7. '        ' → logprob: -11.1425199508667
    8. ' 
' → logprob: -11.6425199508667
    9. ' ' → logprob: -11.8925199508667
    10. '   ' → logprob: -13.1425199508667

Token 242: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3869295120239258
    2. 'm' → logprob: -1.1369295120239258
    3. ' not' → logprob: -10.011929512023926
    4. '(m' → logprob: -11.511929512023926
    5. 'not' → logprob: -13.136929512023926
    6. ' (' → logprob: -13.761929512023926
    7. ' ' → logprob: -15.261929512023926
    8. '	m' → logprob: -15.761929512023926
    9. ' ' → logprob: -16.26192855834961
    10. '(' → logprob: -16.38692855834961

Token 243: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11355810612440109
    2. '==' → logprob: -2.238558053970337
    3. ' <=' → logprob: -8.113557815551758
    4. '=' → logprob: -8.238557815551758
    5. '<=' → logprob: -9.613557815551758
    6. '<|end|>' → logprob: -9.738557815551758
    7. ' =' → logprob: -10.613557815551758
    8. ' ' → logprob: -12.488557815551758
    9. '[' → logprob: -12.613557815551758
    10. ',' → logprob: -13.238557815551758

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150296062231064
    2. ' ' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.643150329589844
    4. 'n' → logprob: -15.768150329589844
    5. ' n' → logprob: -16.768150329589844
    6. 'd' → logprob: -17.018150329589844
    7. '۰' → logprob: -17.768150329589844
    8. '  ' → logprob: -17.893150329589844
    9. '    ' → logprob: -18.393150329589844
    10. ' ' → logprob: -18.518150329589844

Token 245: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03382054716348648
    2. 'and' → logprob: -3.408820629119873
    3. ':' → logprob: -8.908820152282715
    4. ' or' → logprob: -11.033820152282715
    5. ' ' → logprob: -11.533820152282715
    6. '	and' → logprob: -11.658820152282715
    7. ',' → logprob: -12.783820152282715
    8. '<|end|>' → logprob: -13.783820152282715
    9. ' a' → logprob: -14.783820152282715
    10. ' an' → logprob: -16.03382110595703

Token 246: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3868711292743683
    2. 'n' → logprob: -1.136871099472046
    3. '	n' → logprob: -16.261871337890625
    4. ' ' → logprob: -19.636871337890625
    5. ',n' → logprob: -20.386871337890625
    6. ' ' → logprob: -20.886871337890625
    7. '   ' → logprob: -21.886871337890625
    8. '  ' → logprob: -21.886871337890625
    9. '_n' → logprob: -22.136871337890625
    10. '
' → logprob: -22.761871337890625

Token 247: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03365284204483032
    2. ' ==' → logprob: -3.4086527824401855
    3. '=' → logprob: -13.658653259277344
    4. '==
' → logprob: -13.658653259277344
    5. '<|end|>' → logprob: -13.783653259277344
    6. '()==' → logprob: -14.158653259277344
    7. ')==' → logprob: -14.408653259277344
    8. ']==' → logprob: -14.533653259277344
    9. '0' → logprob: -14.533653259277344
    10. '===' → logprob: -14.783653259277344

Token 248: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.68750762939453
    4. '```' → logprob: -19.93750762939453
    5. '<|end|>' → logprob: -20.00000762939453
    6. '=' → logprob: -20.06250762939453
    7. '۰' → logprob: -20.31250762939453
    8. 'and' → logprob: -20.37500762939453
    9. '  ' → logprob: -20.62500762939453
    10. ' ' → logprob: -20.81250762939453

Token 249: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007631469983607531
    2. 'and' → logprob: -4.882631301879883
    3. '0' → logprob: -11.257631301879883
    4. '	and' → logprob: -11.632631301879883
    5. '<|end|>' → logprob: -13.382631301879883
    6. ' ' → logprob: -14.007631301879883
    7. '<|end|>' → logprob: -14.882631301879883
    8. ' и' → logprob: -15.382631301879883
    9. ' ' → logprob: -15.757631301879883
    10. '&&' → logprob: -15.882631301879883

Token 250: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.018161294981837273
    2. ' d' → logprob: -4.018161296844482
    3. '0' → logprob: -11.393160820007324
    4. ' ' → logprob: -16.26816177368164
    5. '	d' → logprob: -17.26816177368164
    6. '   ' → logprob: -17.39316177368164
    7. '  ' → logprob: -19.64316177368164
    8. ' ' → logprob: -20.39316177368164
    9. '       ' → logprob: -20.51816177368164
    10. '_d' → logprob: -20.76816177368164

Token 251: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28138214349746704
    2. ' ==' → logprob: -1.4063820838928223
    3. ')==' → logprob: -9.40638256072998
    4. '0' → logprob: -10.03138256072998
    5. '=' → logprob: -10.28138256072998
    6. '()==' → logprob: -10.78138256072998
    7. '<|end|>' → logprob: -11.03138256072998
    8. ':' → logprob: -11.28138256072998
    9. ' ' → logprob: -11.90638256072998
    10. ']==' → logprob: -12.28138256072998

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -20.25001335144043
    4. '  ' → logprob: -20.75001335144043
    5. '۰' → logprob: -21.12501335144043
    6. ' ' → logprob: -21.62501335144043
    7. '<|end|>' → logprob: -21.62501335144043
    8. '```' → logprob: -22.25001335144043
    9. '
' → logprob: -23.37501335144043
    10. '０' → logprob: -23.37501335144043

Token 253: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05793149396777153
    2. ':
' → logprob: -3.307931423187256
    3. '           ' → logprob: -3.932931423187256
    4. ':return' → logprob: -9.932931900024414
    5. '       ' → logprob: -10.307931900024414
    6. '   ' → logprob: -11.557931900024414
    7. ' :' → logprob: -12.807931900024414
    8. '          ' → logprob: -13.307931900024414
    9. '<|end|>' → logprob: -13.307931900024414
    10. '               ' → logprob: -13.432931900024414

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001025895617203787
    2. '       ' → logprob: -9.250102996826172
    3. '		' → logprob: -12.750102996826172
    4. '               ' → logprob: -13.625102996826172
    5. '          ' → logprob: -13.625102996826172
    6. '	       ' → logprob: -15.250102996826172
    7. '   ' → logprob: -15.375102996826172
    8. '            ' → logprob: -15.375102996826172
    9. ' break' → logprob: -15.500102996826172
    10. 'break' → logprob: -16.875102996826172

Token 255: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.05342304706573486
    2. ' break' → logprob: -3.3034229278564453
    3. 'return' → logprob: -4.303422927856445
    4. '           ' → logprob: -6.553422927856445
    5. '	break' → logprob: -8.678422927856445
    6. ' return' → logprob: -9.053422927856445
    7. '       ' → logprob: -10.928422927856445
    8. '               ' → logprob: -11.803422927856445
    9. '_break' → logprob: -13.678422927856445
    10. '   ' → logprob: -14.428422927856445

Token 256: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46714386343955994
    2. '<|end|>' → logprob: -1.0921438932418823
    3. '        
' → logprob: -3.5921437740325928
    4. '
' → logprob: -4.842144012451172
    5. '<|end|>' → logprob: -7.717144012451172
    6. '        ' → logprob: -7.717144012451172
    7. '```' → logprob: -8.217144012451172
    8. '  
' → logprob: -8.342144012451172
    9. '    
' → logprob: -8.842144012451172
    10. ' 
' → logprob: -9.092144012451172

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06003812700510025
    2. '<|end|>' → logprob: -3.1850380897521973
    3. '        
' → logprob: -4.685038089752197
    4. '
' → logprob: -4.935038089752197
    5. '```' → logprob: -9.435038566589355
    6. '<|end|>' → logprob: -9.560038566589355
    7. '   ' → logprob: -9.560038566589355
    8. '    
' → logprob: -10.310038566589355
    9. '  
' → logprob: -10.435038566589355
    10. '            
' → logprob: -10.810038566589355

Token 258: ' size' (ID: 2349)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.6820222735404968
    2. ' matrix' → logprob: -0.8070222735404968
    3. '       ' → logprob: -4.3070220947265625
    4. 'lights' → logprob: -4.5570220947265625
    5. 'mat' → logprob: -5.8070220947265625
    6. 'buttons' → logprob: -6.0570220947265625
    7. 'b' → logprob: -6.4320220947265625
    8. ' lights' → logprob: -6.8070220947265625
    9. 'graph' → logprob: -6.9320220947265625
    10. '	matrix' → logprob: -6.9320220947265625

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00977001991122961
    2. '=' → logprob: -4.634769916534424
    3. ' ' → logprob: -11.759770393371582
    4. ',' → logprob: -14.134770393371582
    5. ' =
' → logprob: -14.134770393371582
    6. '[' → logprob: -14.259770393371582
    7. 's' → logprob: -14.384770393371582
    8. ' =[' → logprob: -14.759770393371582
    9. '```' → logprob: -14.759770393371582
    10. ' ,' → logprob: -14.884770393371582

Token 260: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3287942409515381
    2. 'm' → logprob: -1.453794240951538
    3. ' n' → logprob: -3.203794240951538
    4. 'n' → logprob: -5.328794479370117
    5. ' max' → logprob: -7.453794479370117
    6. ' d' → logprob: -8.703794479370117
    7. 'max' → logprob: -9.203794479370117
    8. 'd' → logprob: -9.703794479370117
    9. ' ' → logprob: -10.203794479370117
    10. '1' → logprob: -10.328794479370117

Token 261: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.3907543122768402
    2. ' *' → logprob: -1.5157543420791626
    3. '*' → logprob: -2.265754222869873
    4. '*d' → logprob: -10.140754699707031
    5. '*m' → logprob: -12.515754699707031
    6. '*N' → logprob: -12.515754699707031
    7. '*num' → logprob: -13.265754699707031
    8. '**' → logprob: -13.390754699707031
    9. '*q' → logprob: -14.015754699707031
    10. '*object' → logprob: -14.140754699707031

Token 262: '
' (ID: 198)
  Prédit: '*d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.6468934416770935
    2. '*' → logprob: -2.1468935012817383
    3. '
' → logprob: -2.2718935012817383
    4. '       ' → logprob: -2.6468935012817383
    5. '<|end|>' → logprob: -2.7718935012817383
    6. 'd' → logprob: -3.2718935012817383
    7. '        
' → logprob: -4.271893501281738
    8. 'vector' → logprob: -4.271893501281738
    9. ' *' → logprob: -5.146893501281738
    10. '   ' → logprob: -5.271893501281738

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22241640090942383
    2. 'matrix' → logprob: -2.597416400909424
    3. '
' → logprob: -2.847416400909424
    4. ' matrix' → logprob: -3.472416400909424
    5. '        
' → logprob: -3.722416400909424
    6. 'grid' → logprob: -5.722416400909424
    7. 'vector' → logprob: -6.472416400909424
    8. '<|end|>' → logprob: -6.722416400909424
    9. '	matrix' → logprob: -6.847416400909424
    10. ' vector' → logprob: -7.222416400909424

Token 264: ' lights' (ID: 18032)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.2607845067977905
    2. ' matrix' → logprob: -1.5107845067977905
    3. 'lights' (adapté à ' lights') → logprob: -6.01078462600708
    4. 'mat' → logprob: -7.51078462600708
    5. 'buttons' → logprob: -7.51078462600708
    6. 'grid' → logprob: -7.63578462600708
    7. 'initial' → logprob: -7.76078462600708
    8. 'board' → logprob: -7.88578462600708
    9. ' lights' → logprob: -7.88578462600708
    10. 'button' → logprob: -8.135784149169922

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033692266792058945
    2. '=' → logprob: -3.4086923599243164
    3. '[' → logprob: -10.908692359924316
    4. ',' → logprob: -11.408692359924316
    5. ' =[' → logprob: -12.033692359924316
    6. ' ' → logprob: -12.908692359924316
    7. '[]' → logprob: -13.283692359924316
    8. '=[]' → logprob: -13.408692359924316
    9. '_' → logprob: -13.908692359924316
    10. '```' → logprob: -14.033692359924316

Token 266: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.10502856969833374
    2. ' []' → logprob: -3.2300286293029785
    3. '[' → logprob: -3.6050286293029785
    4. '[]' → logprob: -3.8550286293029785
    5. ' [[' → logprob: -4.8550286293029785
    6. '[[' → logprob: -6.2300286293029785
    7. '[list' → logprob: -7.3550286293029785
    8. '[input' → logprob: -7.3550286293029785
    9. ' [[]' → logprob: -8.60502815246582
    10. '[m' → logprob: -8.85502815246582

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12427082657814026
    2. ' for' → logprob: -2.3742709159851074
    3. 'for' → logprob: -4.999270915985107
    4. '   ' → logprob: -5.749270915985107
    5. '<|end|>' → logprob: -5.874270915985107
    6. '[' → logprob: -5.999270915985107
    7. '
' → logprob: -6.499270915985107
    8. '	for' → logprob: -6.749270915985107
    9. '	' → logprob: -6.749270915985107
    10. ' =' → logprob: -7.249270915985107

Token 268: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018154975026845932
    2. ' for' → logprob: -4.018155097961426
    3. '       ' → logprob: -12.643155097961426
    4. 'while' → logprob: -13.518155097961426
    5. '   ' → logprob: -15.268155097961426
    6. '[' → logprob: -16.64315414428711
    7. '	for' → logprob: -16.76815414428711
    8. 'row' → logprob: -16.89315414428711
    9. 'lights' → logprob: -17.39315414428711
    10. '
' → logprob: -17.39315414428711

Token 269: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.10022132843732834
    2. '_' → logprob: -2.3502213954925537
    3. ' i' → logprob: -11.475221633911133
    4. ' ' → logprob: -12.975221633911133
    5. '_i' → logprob: -13.475221633911133
    6. 'i' → logprob: -14.600221633911133
    7. ' ' → logprob: -17.100221633911133
    8. '_=' → logprob: -17.475221633911133
    9. '   ' → logprob: -17.975221633911133
    10. '  ' → logprob: -18.350221633911133

Token 270: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03926099091768265
    2. 'range' → logprob: -3.7892611026763916
    3. 'in' → logprob: -4.2892608642578125
    4. ' range' → logprob: -6.1642608642578125
    5. ' ' → logprob: -9.914260864257812
    6. '  ' → logprob: -11.414260864257812
    7. ' _' → logprob: -12.164260864257812
    8. '	range' → logprob: -14.039260864257812
    9. 'i' → logprob: -14.164260864257812
    10. '   ' → logprob: -14.789260864257812

Token 271: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.583550642360933e-05
    2. ' range' → logprob: -10.250036239624023
    3. 'ange' → logprob: -16.000036239624023
    4. '(range' → logprob: -16.500036239624023
    5. '	range' → logprob: -16.625036239624023
    6. 'rang' → logprob: -17.250036239624023
    7. 'in' → logprob: -18.625036239624023
    8. 'r' → logprob: -19.125036239624023
    9. 'ran' → logprob: -19.125036239624023
    10. '   ' → logprob: -19.250036239624023

Token 272: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.062223680317401886
    2. '(size' → logprob: -2.8122236728668213
    3. '(' → logprob: -8.937223434448242
    4. '(d' → logprob: -9.187223434448242
    5. '(s' → logprob: -11.687223434448242
    6. '(n' → logprob: -11.937223434448242
    7. 'm' → logprob: -13.062223434448242
    8. 'size' → logprob: -13.187223434448242
    9. ' (' → logprob: -13.562223434448242
    10. '((' → logprob: -14.562223434448242

Token 273: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31413882970809937
    2. '):
' → logprob: -1.3141388893127441
    3. '+' → logprob: -7.564138889312744
    4. '*' → logprob: -9.189138412475586
    5. '*m' → logprob: -9.564138412475586
    6. '):
' → logprob: -9.939138412475586
    7. ')' → logprob: -10.064138412475586
    8. '   ' → logprob: -10.314138412475586
    9. ' ):' → logprob: -11.439138412475586
    10. '+m' → logprob: -11.564138412475586

Token 274: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08080144971609116
    2. '   ' → logprob: -3.580801486968994
    3. '	   ' → logprob: -3.580801486968994
    4. 'lights' → logprob: -4.705801486968994
    5. '           ' → logprob: -5.205801486968994
    6. '	       ' → logprob: -6.080801486968994
    7. ' lines' → logprob: -6.205801486968994
    8. '<|end|>' → logprob: -6.580801486968994
    9. '	lines' → logprob: -7.955801486968994
    10. '	' → logprob: -8.580801010131836

Token 275: ' lights' (ID: 18032)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.4266393482685089
    2. 'row' → logprob: -1.8016393184661865
    3. 'lights' (adapté à ' lights') → logprob: -1.8016393184661865
    4. 'line' → logprob: -4.676639556884766
    5. ' line' → logprob: -5.176639556884766
    6. ' lights' → logprob: -6.426639556884766
    7. 'rows' → logprob: -8.676639556884766
    8. '   ' → logprob: -9.176639556884766
    9. 'l' → logprob: -9.176639556884766
    10. 'arr' → logprob: -9.301639556884766

Token 276: '.extend' (ID: 34151)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04056624323129654
    2. '.' → logprob: -3.2905662059783936
    3. '=' → logprob: -7.165566444396973
    4. ' .' → logprob: -7.415566444396973
    5. '.extend' → logprob: -7.415566444396973
    6. ' =' → logprob: -8.165566444396973
    7. ' +=' → logprob: -9.165566444396973
    8. '().' → logprob: -9.290566444396973
    9. '+=' → logprob: -10.165566444396973
    10. '.=' → logprob: -11.540566444396973

Token 277: '(map' (ID: 16946)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.4748622179031372
    2. '(map' → logprob: -0.9748622179031372
    3. '(' → logprob: -7.724862098693848
    4. 'list' → logprob: -8.974862098693848
    5. 'map' → logprob: -9.099862098693848
    6. '([' → logprob: -9.724862098693848
    7. '(int' → logprob: -11.474862098693848
    8. ' list' → logprob: -11.474862098693848
    9. ' map' → logprob: -11.724862098693848
    10. '   ' → logprob: -12.224862098693848

Token 278: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00027134892297908664
    2. 'int' → logprob: -8.250271797180176
    3. ',int' → logprob: -12.625271797180176
    4. '(' → logprob: -13.000271797180176
    5. '   ' → logprob: -13.250271797180176
    6. '(lambda' → logprob: -14.375271797180176
    7. ' int' → logprob: -14.625271797180176
    8. ' (' → logprob: -14.875271797180176
    9. '
' → logprob: -14.875271797180176
    10. '[int' → logprob: -15.375271797180176

Token 279: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.1006942093372345
    2. '(input' → logprob: -2.350694179534912
    3. ',' → logprob: -7.850694179534912
    4. '(),' → logprob: -9.97569465637207
    5. '(' → logprob: -11.22569465637207
    6. ',list' → logprob: -11.35069465637207
    7. 'input' → logprob: -11.60069465637207
    8. ' ,' → logprob: -12.22569465637207
    9. '(sys' → logprob: -12.97569465637207
    10. '=input' → logprob: -13.60069465637207

Token 280: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1472419600977446e-06
    2. '()' → logprob: -13.875000953674316
    3. ' ().' → logprob: -16.000001907348633
    4. '(' → logprob: -19.750001907348633
    5. '.' → logprob: -20.625001907348633
    6. '.readline' → logprob: -20.625001907348633
    7. '>().' → logprob: -20.875001907348633
    8. '.split' → logprob: -20.875001907348633
    9. '()))' → logprob: -21.125001907348633
    10. '().__' → logprob: -21.250001907348633

Token 281: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007944972603581846
    2. 'strip' → logprob: -7.250794410705566
    3. 'rstrip' → logprob: -9.875794410705566
    4. 'read' → logprob: -10.375794410705566
    5. ' split' → logprob: -13.500794410705566
    6. '(split' → logprob: -14.750794410705566
    7. 'spl' → logprob: -16.625795364379883
    8. ')' → logprob: -17.000795364379883
    9. 'replace' → logprob: -18.750795364379883
    10. '.split' → logprob: -18.875795364379883

Token 282: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.011364213190972805
    2. '))' → logprob: -5.011363983154297
    3. '()' → logprob: -5.636363983154297
    4. '()))
' → logprob: -7.636363983154297
    5. '())' → logprob: -7.636363983154297
    6. '(' → logprob: -9.386363983154297
    7. '()));' → logprob: -11.636363983154297
    8. '()))
' → logprob: -12.136363983154297
    9. ')' → logprob: -13.386363983154297
    10. '()))

' → logprob: -13.386363983154297

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17186185717582703
    2. '<|end|>' → logprob: -1.9218618869781494
    3. '	' → logprob: -5.67186164855957
    4. '        
' → logprob: -6.04686164855957
    5. '
' → logprob: -6.42186164855957
    6. ')' → logprob: -6.92186164855957
    7. '[' → logprob: -7.42186164855957
    8. '		
' → logprob: -7.79686164855957
    9. '  
' → logprob: -7.92186164855957
    10. ' 
' → logprob: -8.04686164855957

Token 284: ' A' (ID: 355)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.472491979598999
    2. '       ' → logprob: -2.222491979598999
    3. 'for' → logprob: -2.597491979598999
    4. ' switch' → logprob: -2.722491979598999
    5. 'switch' → logprob: -3.222491979598999
    6. ' switches' → logprob: -3.347491979598999
    7. ' buttons' → logprob: -4.097492218017578
    8. 'buttons' → logprob: -4.597492218017578
    9. ' toggle' → logprob: -5.222492218017578
    10. 'lights' → logprob: -5.722492218017578

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010454319417476654
    2. '=' → logprob: -6.876045227050781
    3. ' ' → logprob: -12.876045227050781
    4. '[' → logprob: -13.126045227050781
    5. ',' → logprob: -13.376045227050781
    6. ' =[' → logprob: -13.501045227050781
    7. 'space' → logprob: -13.626045227050781
    8. '_' → logprob: -14.251045227050781
    9. ' =
' → logprob: -14.626045227050781
    10. '<|end|>' → logprob: -14.876045227050781

Token 286: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.5339974164962769
    2. '[' → logprob: -1.0339974164962769
    3. '[]' → logprob: -3.5339975357055664
    4. ' [[' → logprob: -4.033997535705566
    5. ' [' → logprob: -4.533997535705566
    6. ' []' → logprob: -8.408997535705566
    7. '[m' → logprob: -9.158997535705566
    8. ' [[]' → logprob: -9.908997535705566
    9. '[array' → logprob: -10.783997535705566
    10. '[][]' → logprob: -10.908997535705566

Token 287: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003478593716863543
    2. ' [' → logprob: -8.125348091125488
    3. '[]' → logprob: -10.375348091125488
    4. '0' → logprob: -11.625348091125488
    5. '[m' → logprob: -12.375348091125488
    6. ']' → logprob: -13.000348091125488
    7. '([' → logprob: -13.250348091125488
    8. '[l' → logprob: -14.000348091125488
    9. '[int' → logprob: -15.000348091125488
    10. '[size' → logprob: -15.125348091125488

Token 288: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.28975218534469604
    2. ']' → logprob: -1.4147522449493408
    3. ' for' → logprob: -5.164752006530762
    4. ']*(' → logprob: -6.039752006530762
    5. 'for' → logprob: -8.289752006530762
    6. ' ]' → logprob: -8.914752006530762
    7. '[:]' → logprob: -10.664752006530762
    8. '[]' → logprob: -11.664752006530762
    9. ']+' → logprob: -11.914752006530762
    10. '[' → logprob: -11.914752006530762

Token 289: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.3896540403366089
    2. '(size' → logprob: -1.1396540403366089
    3. '(m' → logprob: -6.264654159545898
    4. ' size' → logprob: -7.764654159545898
    5. '(' → logprob: -8.514654159545898
    6. 'm' → logprob: -8.764654159545898
    7. ' (' → logprob: -10.014654159545898
    8. '(n' → logprob: -11.264654159545898
    9. '[size' → logprob: -11.514654159545898
    10. '((' → logprob: -11.764654159545898

Token 290: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10154182463884354
    2. '<|end|>' → logprob: -2.351541757583618
    3. 'for' → logprob: -7.851541996002197
    4. '
' → logprob: -8.601541519165039
    5. ' for' → logprob: -8.601541519165039
    6. '  
' → logprob: -9.101541519165039
    7. '[' → logprob: -9.351541519165039
    8. '<|end|>' → logprob: -9.476541519165039
    9. ' 
' → logprob: -9.851541519165039
    10. '   ' → logprob: -9.976541519165039

Token 291: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6953796148300171
    2. 'for' (adapté à ' for') → logprob: -0.6953796148300171
    3. '[' → logprob: -6.320379734039307
    4. '<|end|>' → logprob: -8.695379257202148
    5. ' ' → logprob: -9.195379257202148
    6. '[
' → logprob: -9.945379257202148
    7. '	for' → logprob: -10.445379257202148
    8. ' [' → logprob: -10.445379257202148
    9. '[]' → logprob: -11.195379257202148
    10. '
' → logprob: -11.945379257202148

Token 293: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6471371054649353
    2. ' i' → logprob: -0.7721371054649353
    3. ' r' → logprob: -4.89713716506958
    4. 'r' → logprob: -5.02213716506958
    5. ' row' → logprob: -8.772136688232422
    6. ' _' → logprob: -9.772136688232422
    7. 'row' → logprob: -9.897136688232422
    8. 'x' → logprob: -10.272136688232422
    9. ' x' → logprob: -11.147136688232422
    10. '_' → logprob: -11.272136688232422

Token 294: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028283897787332535
    2. 'in' → logprob: -3.6532838344573975
    3. ' ' → logprob: -6.278284072875977
    4. '	in' → logprob: -10.403284072875977
    5. '  ' → logprob: -10.528284072875977
    6. '_' → logprob: -11.778284072875977
    7. ',' → logprob: -11.903284072875977
    8. 'n' → logprob: -12.028284072875977
    9. ' i' → logprob: -12.153284072875977
    10. ' _' → logprob: -12.403284072875977

Token 295: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008056987426243722
    2. ' range' → logprob: -7.125805854797363
    3. '(range' → logprob: -14.750805854797363
    4. '	range' → logprob: -15.125805854797363
    5. ' ' → logprob: -15.375805854797363
    6. 'rang' → logprob: -16.125804901123047
    7. '   ' → logprob: -16.500804901123047
    8. '  ' → logprob: -16.750804901123047
    9. 'ran' → logprob: -16.875804901123047
    10. 'r' → logprob: -17.125804901123047

Token 296: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.01625910773873329
    2. 'size' → logprob: -4.26625919342041
    3. '(m' → logprob: -6.64125919342041
    4. '(' → logprob: -7.39125919342041
    5. ' size' → logprob: -9.39125919342041
    6. ' (' → logprob: -10.01625919342041
    7. 'm' → logprob: -11.01625919342041
    8. '(n' → logprob: -11.39125919342041
    9. '(s' → logprob: -12.39125919342041
    10. '(len' → logprob: -13.14125919342041

Token 297: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16374115645885468
    2. '):
' → logprob: -1.913741111755371
    3. ')' → logprob: -6.163741111755371
    4. ':' → logprob: -7.163741111755371
    5. '       ' → logprob: -8.913741111755371
    6. ' ):' → logprob: -9.038741111755371
    7. '   ' → logprob: -9.288741111755371
    8. '):
' → logprob: -9.538741111755371
    9. ',' → logprob: -10.163741111755371
    10. '+' → logprob: -10.538741111755371

Token 298: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6780555248260498
    2. ' A' → logprob: -1.4280555248260498
    3. '       ' → logprob: -2.42805552482605
    4. '[' → logprob: -3.42805552482605
    5. ' ' → logprob: -3.42805552482605
    6. '=' → logprob: -3.92805552482605
    7. '           ' → logprob: -4.178055763244629
    8. '        ' → logprob: -4.553055763244629
    9. ':' → logprob: -4.678055763244629
    10. ' [' → logprob: -4.928055763244629

Token 299: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5902549624443054
    2. 'A' (adapté à ' A') → logprob: -0.8402549624443054
    3. ' row' → logprob: -4.465254783630371
    4. 'row' → logprob: -5.965254783630371
    5. '   ' → logprob: -9.965254783630371
    6. ' ' → logprob: -10.715254783630371
    7. '	A' → logprob: -11.215254783630371
    8. ' mask' → logprob: -11.465254783630371
    9. 'a' → logprob: -11.840254783630371
    10. ' for' → logprob: -12.215254783630371

Token 300: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07931549102067947
    2. '=' → logprob: -2.579315423965454
    3. ' |=' → logprob: -8.579315185546875
    4. ' ^=' → logprob: -9.204315185546875
    5. ' =[' → logprob: -9.829315185546875
    6. ' ' → logprob: -10.579315185546875
    7. ' <<=' → logprob: -10.579315185546875
    8. '=i' → logprob: -11.954315185546875
    9. '[' → logprob: -12.329315185546875
    10. '0' → logprob: -12.579315185546875

Token 301: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2993778586387634
    2. ' =' → logprob: -1.4243779182434082
    3. ']' → logprob: -4.174377918243408
    4. ']=' → logprob: -6.049377918243408
    5. ')' → logprob: -9.17437744140625
    6. ')=' → logprob: -9.79937744140625
    7. ' |=' → logprob: -10.04937744140625
    8. ' =[' → logprob: -10.79937744140625
    9. ' ' → logprob: -11.29937744140625
    10. '=[' → logprob: -11.54937744140625

Token 302: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6339194774627686
    2. ' =' → logprob: -0.7589194774627686
    3. ' |=' → logprob: -7.008919715881348
    4. ' ^=' → logprob: -8.008919715881348
    5. '|' → logprob: -10.133919715881348
    6. ' ' → logprob: -12.008919715881348
    7. ' <<=' → logprob: -12.008919715881348
    8. ' =[' → logprob: -12.133919715881348
    9. '[' → logprob: -12.508919715881348
    10. '^' → logprob: -12.633919715881348

Token 303: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010143491672351956
    2. '0' → logprob: -7.626014232635498
    3. '[]' → logprob: -8.376014709472656
    4. ' [' → logprob: -8.626014709472656
    5. '[m' → logprob: -9.751014709472656
    6. '[int' → logprob: -10.626014709472656
    7. '[i' → logprob: -11.626014709472656
    8. '[n' → logprob: -12.626014709472656
    9. '{}' → logprob: -12.751014709472656
    10. '{' → logprob: -12.876014709472656

Token 304: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00047821682528592646
    2. '[m' → logprob: -8.25047779083252
    3. '0' → logprob: -9.12547779083252
    4. '[]' → logprob: -9.87547779083252
    5. '[int' → logprob: -11.00047779083252
    6. ' [' → logprob: -11.50047779083252
    7. '[i' → logprob: -12.12547779083252
    8. '[n' → logprob: -12.12547779083252
    9. '[l' → logprob: -13.00047779083252
    10. '{' → logprob: -13.00047779083252

Token 305: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: ' matrix' (ID: 12248)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3726184368133545
    2. '<|end|>' → logprob: -1.8726184368133545
    3. ' for' → logprob: -2.1226184368133545
    4. 'for' → logprob: -4.122618675231934
    5. ' ' → logprob: -4.622618675231934
    6. '   ' → logprob: -5.497618675231934
    7. '
' → logprob: -5.872618675231934
    8. '[' → logprob: -6.497618675231934
    9. '<|end|>' → logprob: -7.622618675231934
    10. '	for' → logprob: -7.997618675231934

Token 308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39912575483322144
    2. '[' → logprob: -1.2741258144378662
    3. '[i' → logprob: -3.149125814437866
    4. '=' → logprob: -6.149125576019287
    5. '.append' → logprob: -6.399125576019287
    6. '<|end|>' → logprob: -7.024125576019287
    7. '[
' → logprob: -8.274126052856445
    8. ' =[' → logprob: -8.399126052856445
    9. ' ' → logprob: -8.524126052856445
    10. '[line' → logprob: -8.899126052856445

Token 309: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.07896888256072998
    2. '[' → logprob: -3.0789690017700195
    3. ' [[' → logprob: -3.5789690017700195
    4. ' [' → logprob: -6.3289690017700195
    5. '[]' → logprob: -9.07896900177002
    6. ' [[]' → logprob: -9.07896900177002
    7. '[['' → logprob: -13.07896900177002
    8. ' []' → logprob: -13.32896900177002
    9. '[m' → logprob: -13.57896900177002
    10. '[n' → logprob: -14.20396900177002

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004237627435941249
    2. ' ' → logprob: -7.875423908233643
    3. 'False' → logprob: -10.125423431396484
    4. '1' → logprob: -13.750423431396484
    5. ' False' → logprob: -14.125423431396484
    6. '(' → logprob: -14.375423431396484
    7. '[' → logprob: -15.125423431396484
    8. '   ' → logprob: -15.125423431396484
    9. 'int' → logprob: -15.250423431396484
    10. ' (' → logprob: -16.000423431396484

Token 311: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02574336528778076
    2. 'for' → logprob: -3.7757434844970703
    3. ']*' → logprob: -6.15074348449707
    4. ']' → logprob: -8.15074348449707
    5. ']*(' → logprob: -10.27574348449707
    6. '	for' → logprob: -10.90074348449707
    7. ' ' → logprob: -11.40074348449707
    8. ' ]' → logprob: -12.65074348449707
    9. '   ' → logprob: -13.27574348449707
    10. ')' → logprob: -13.77574348449707

Token 312: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -9.889424836728722e-05
    2. ' size' → logprob: -9.750099182128906
    3. '(size' → logprob: -10.250099182128906
    4. 'm' → logprob: -12.875099182128906
    5. 'n' → logprob: -13.250099182128906
    6. '(' → logprob: -15.000099182128906
    7. 'd' → logprob: -15.875099182128906
    8. '   ' → logprob: -16.500099182128906
    9. '[size' → logprob: -16.500099182128906
    10. '	size' → logprob: -16.625099182128906

Token 313: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009400692768394947
    2. 'for' → logprob: -4.759400844573975
    3. '<|end|>' → logprob: -8.259400367736816
    4. ']' → logprob: -8.634400367736816
    5. '	for' → logprob: -8.634400367736816
    6. ')' → logprob: -9.259400367736816
    7. '       ' → logprob: -11.134400367736816
    8. ' ' → logprob: -11.134400367736816
    9. '<|end|>' → logprob: -11.134400367736816
    10. '   ' → logprob: -11.259400367736816

Token 314: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12040995806455612
    2. '_' → logprob: -2.3704099655151367
    3. 'range' → logprob: -4.620409965515137
    4. ' _' → logprob: -4.620409965515137
    5. '_range' → logprob: -8.120409965515137
    6. '(range' → logprob: -13.120409965515137
    7. ' i' → logprob: -13.495409965515137
    8. ' ' → logprob: -14.245409965515137
    9. 'i' → logprob: -14.620409965515137
    10. '	range' → logprob: -14.620409965515137

Token 315: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006744269747287035
    2. ' range' → logprob: -5.006744384765625
    3. '(range' → logprob: -11.131744384765625
    4. 'in' → logprob: -11.381744384765625
    5. ' in' → logprob: -13.131744384765625
    6. '	range' → logprob: -15.381744384765625
    7. ' ' → logprob: -15.631744384765625
    8. 'row' → logprob: -16.006744384765625
    9. 'ran' → logprob: -16.381744384765625
    10. '   ' → logprob: -16.381744384765625

Token 316: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023252932354807854
    2. ' range' → logprob: -3.7732529640197754
    3. '(range' → logprob: -12.273252487182617
    4. 'size' → logprob: -13.148252487182617
    5. '	range' → logprob: -15.648252487182617
    6. '[' → logprob: -15.773252487182617
    7. '   ' → logprob: -16.273252487182617
    8. ' ' → logprob: -16.523252487182617
    9. '
' → logprob: -17.023252487182617
    10. ' size' → logprob: -17.273252487182617

Token 317: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.7600304484367371
    2. 'range' → logprob: -1.0100305080413818
    3. '(range' → logprob: -2.010030508041382
    4. ' range' → logprob: -3.510030508041382
    5. 'size' → logprob: -6.260030269622803
    6. '[size' → logprob: -6.760030269622803
    7. ' (' → logprob: -7.635030269622803
    8. '(' → logprob: -8.010030746459961
    9. ' size' → logprob: -8.760030746459961
    10. '<size' → logprob: -9.510030746459961

Token 318: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00028088156250305474
    2. ')' → logprob: -8.25028133392334
    3. ']' → logprob: -11.25028133392334
    4. ')]
' → logprob: -12.12528133392334
    5. ' )' → logprob: -15.00028133392334
    6. ')
' → logprob: -15.12528133392334
    7. ')],' → logprob: -16.125280380249023
    8. '))' → logprob: -16.500280380249023
    9. '')]' → logprob: -16.875280380249023
    10. ')][' → logprob: -16.875280380249023

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44059598445892334
    2. '<|end|>' → logprob: -1.1905959844589233
    3. ' for' → logprob: -3.190596103668213
    4. '   ' → logprob: -5.815596103668213
    5. '
' → logprob: -5.940596103668213
    6. '<|end|>' → logprob: -6.565596103668213
    7. ' ' → logprob: -6.690596103668213
    8. '        
' → logprob: -7.440596103668213
    9. '	for' → logprob: -7.690596103668213
    10. '	' → logprob: -7.940596103668213

Token 320: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.047434236854314804
    2. '       ' → logprob: -3.5474343299865723
    3. 'for' (adapté à ' for') → logprob: -4.047434329986572
    4. '	for' → logprob: -11.172433853149414
    5. '<|end|>' → logprob: -11.547433853149414
    6. '        
' → logprob: -12.047433853149414
    7. ' rows' → logprob: -12.172433853149414
    8. '   ' → logprob: -12.172433853149414
    9. '```' → logprob: -12.672433853149414
    10. ' row' → logprob: -12.922433853149414

Token 321: ' r' (ID: 428)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31589362025260925
    2. ' r' → logprob: -1.9408936500549316
    3. 'i' → logprob: -2.3158936500549316
    4. 'r' → logprob: -4.065893650054932
    5. ' row' → logprob: -5.065893650054932
    6. ' x' → logprob: -6.190893650054932
    7. 'row' → logprob: -6.440893650054932
    8. ' pos' → logprob: -7.815893650054932
    9. 'x' → logprob: -7.940893650054932
    10. ' y' → logprob: -8.690893173217773

Token 322: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006171232555061579
    2. 'in' → logprob: -5.131171226501465
    3. ' ' → logprob: -8.756171226501465
    4. ',' → logprob: -10.131171226501465
    5. ')' → logprob: -11.631171226501465
    6. '<|end|>' → logprob: -11.631171226501465
    7. ' i' → logprob: -12.131171226501465
    8. ' ,' → logprob: -12.381171226501465
    9. '=' → logprob: -12.881171226501465
    10. '	in' → logprob: -13.131171226501465

Token 323: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6326099634170532
    2. ' range' → logprob: -0.7576099634170532
    3. '(range' → logprob: -12.757610321044922
    4. ' ' → logprob: -12.882610321044922
    5. 'size' → logprob: -14.007610321044922
    6. '0' → logprob: -14.007610321044922
    7. '	range' → logprob: -14.382610321044922
    8. 'r' → logprob: -14.632610321044922
    9. 'rang' → logprob: -14.757610321044922
    10. ' rang' → logprob: -15.257610321044922

Token 324: '(n' (ID: 2406)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.005584837403148413
    2. 'size' → logprob: -5.380584716796875
    3. ' size' → logprob: -7.880584716796875
    4. '(' → logprob: -8.630584716796875
    5. ' (' → logprob: -8.630584716796875
    6. 'range' → logprob: -9.255584716796875
    7. '(range' → logprob: -10.005584716796875
    8. '(m' → logprob: -10.130584716796875
    9. '(n' → logprob: -11.005584716796875
    10. ' range' → logprob: -11.255584716796875

Token 325: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47566118836402893
    2. '):' → logprob: -0.9756611585617065
    3. '*n' → logprob: -7.475661277770996
    4. '       ' → logprob: -8.225661277770996
    5. '):
' → logprob: -8.600661277770996
    6. '   ' → logprob: -8.725661277770996
    7. '*' → logprob: -9.100661277770996
    8. '*m' → logprob: -9.225661277770996
    9. ' *' → logprob: -9.850661277770996
    10. '           ' → logprob: -10.350661277770996

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7849802374839783
    2. '   ' → logprob: -1.284980297088623
    3. '       ' → logprob: -2.034980297088623
    4. ' for' → logprob: -2.659980297088623
    5. '	       ' → logprob: -3.284980297088623
    6. ' ' → logprob: -5.034980297088623
    7. '	   ' → logprob: -5.409980297088623
    8. '<|end|>' → logprob: -5.534980297088623
    9. '        ' → logprob: -5.659980297088623
    10. '    	' → logprob: -5.909980297088623

Token 327: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03572845458984375
    2. 'for' (adapté à ' for') → logprob: -3.4107284545898438
    3. '   ' → logprob: -6.410728454589844
    4. '       ' → logprob: -8.285728454589844
    5. ' range' → logprob: -9.035728454589844
    6. '	for' → logprob: -10.910728454589844
    7. ' ' → logprob: -11.035728454589844
    8. ' c' → logprob: -11.785728454589844
    9. '    ' → logprob: -12.160728454589844
    10. 'c' → logprob: -12.285728454589844

Token 328: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16686685383319855
    2. ' c' → logprob: -1.9168668985366821
    3. 'm' → logprob: -5.541866779327393
    4. ' range' → logprob: -6.791866779327393
    5. 'range' → logprob: -7.416866779327393
    6. ' m' → logprob: -7.541866779327393
    7. 'i' → logprob: -8.16686725616455
    8. ' i' → logprob: -9.79186725616455
    9. '   ' → logprob: -10.66686725616455
    10. 'size' → logprob: -11.54186725616455

Token 329: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021989699453115463
    2. 'in' → logprob: -4.021989822387695
    3. ' (' → logprob: -6.646989822387695
    4. ' range' → logprob: -7.021989822387695
    5. '(' → logprob: -7.146989822387695
    6. '(range' → logprob: -8.021989822387695
    7. '(n' → logprob: -8.521989822387695
    8. ' ' → logprob: -8.896989822387695
    9. 'range' → logprob: -9.396989822387695
    10. '0' → logprob: -10.771989822387695

Token 330: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.576092541217804
    2. 'range' → logprob: -0.826092541217804
    3. '(range' → logprob: -8.951092720031738
    4. 'n' → logprob: -11.701092720031738
    5. ' ' → logprob: -12.826092720031738
    6. '   ' → logprob: -13.076092720031738
    7. 'm' → logprob: -13.076092720031738
    8. 'size' → logprob: -13.201092720031738
    9. '(n' → logprob: -13.951092720031738
    10. 'ange' → logprob: -14.201092720031738

Token 331: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.19913539290428162
    2. '(m' → logprob: -2.0741353034973145
    3. '(size' → logprob: -2.9491353034973145
    4. '(' → logprob: -6.9491353034973145
    5. '(range' → logprob: -7.6991353034973145
    6. 'size' → logprob: -8.199135780334473
    7. '(d' → logprob: -8.324135780334473
    8. ' (' → logprob: -8.824135780334473
    9. 'range' → logprob: -8.824135780334473
    10. 'n' → logprob: -9.449135780334473

Token 332: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3905009627342224
    2. '):
' → logprob: -1.1405010223388672
    3. '           ' → logprob: -6.265501022338867
    4. '+' → logprob: -7.640501022338867
    5. '       ' → logprob: -7.640501022338867
    6. ':' → logprob: -8.640501022338867
    7. '               ' → logprob: -8.890501022338867
    8. ')' → logprob: -8.890501022338867
    9. '   ' → logprob: -9.265501022338867
    10. ' ):' → logprob: -10.265501022338867

Token 333: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009608164429664612
    2. '           ' → logprob: -5.634608268737793
    3. '<|end|>' → logprob: -6.134608268737793
    4. ' ' → logprob: -6.759608268737793
    5. '            ' → logprob: -7.384608268737793
    6. '                ' → logprob: -7.509608268737793
    7. '              ' → logprob: -8.884608268737793
    8. '                
' → logprob: -9.259608268737793
    9. '	           ' → logprob: -9.384608268737793
    10. '		       ' → logprob: -9.384608268737793

Token 334: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.6347006559371948
    2. ' index' → logprob: -1.6347006559371948
    3. '                   ' → logprob: -2.6347007751464844
    4. 'index' → logprob: -2.7597007751464844
    5. ' for' → logprob: -2.8847007751464844
    6. ' pos' → logprob: -3.1347007751464844
    7. 'idx' (adapté à ' idx') → logprob: -4.009700775146484
    8. ' i' → logprob: -5.009700775146484
    9. 'pos' → logprob: -5.759700775146484
    10. 'for' → logprob: -6.009700775146484

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022211531177163124
    2. '=' → logprob: -6.12722110748291
    3. ' ' → logprob: -10.25222110748291
    4. '=r' → logprob: -15.50222110748291
    5. ')' → logprob: -15.87722110748291
    6. ' =
' → logprob: -16.127222061157227
    7. '=row' → logprob: -16.877222061157227
    8. '<|end|>' → logprob: -17.377222061157227
    9. ' ' → logprob: -17.502222061157227
    10. ' =)' → logprob: -17.752222061157227

Token 336: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04858839511871338
    2. ' r' → logprob: -3.048588275909424
    3. '[r' → logprob: -15.173588752746582
    4. '	r' → logprob: -15.173588752746582
    5. '(r' → logprob: -15.298588752746582
    6. 'c' → logprob: -15.798588752746582
    7. '_r' → logprob: -16.298587799072266
    8. ' c' → logprob: -17.048587799072266
    9. '   ' → logprob: -17.298587799072266
    10. ' ' → logprob: -17.923587799072266

Token 337: '*m' (ID: 85049)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.35793155431747437
    2. '*n' → logprob: -1.3579316139221191
    3. '*m' → logprob: -3.232931613922119
    4. '*' → logprob: -5.482931613922119
    5. '*c' → logprob: -9.732931137084961
    6. '*d' → logprob: -11.607931137084961
    7. '*num' → logprob: -11.607931137084961
    8. '*(' → logprob: -13.357931137084961
    9. '*r' → logprob: -13.857931137084961
    10. ' ' → logprob: -13.857931137084961

Token 338: '+c' (ID: 114860)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7210890650749207
    2. ' +' → logprob: -0.7210890650749207
    3. '+c' → logprob: -3.5960891246795654
    4. '+n' → logprob: -9.721089363098145
    5. '+
' → logprob: -11.096089363098145
    6. '+i' → logprob: -11.346089363098145
    7. '+r' → logprob: -11.596089363098145
    8. '+k' → logprob: -11.846089363098145
    9. '+d' → logprob: -11.971089363098145
    10. '               ' → logprob: -12.721089363098145

Token 339: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.049124106764793396
    2. '<|end|>' → logprob: -3.424124002456665
    3. '                
' → logprob: -5.299124240875244
    4. '  
' → logprob: -6.549124240875244
    5. '                   ' → logprob: -6.674124240875244
    6. '#' → logprob: -6.674124240875244
    7. '<|end|>' → logprob: -6.799124240875244
    8. '
' → logprob: -7.049124240875244
    9. ':
' → logprob: -7.424124240875244
    10. '           ' → logprob: -7.549124240875244

Token 340: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0049790008924901485
    2. '<|end|>' → logprob: -5.629979133605957
    3. '                   ' → logprob: -8.129979133605957
    4. '                ' → logprob: -8.629979133605957
    5. '                
' → logprob: -8.879979133605957
    6. '#' → logprob: -9.254979133605957
    7. '           ' → logprob: -9.379979133605957
    8. '<|end|>' → logprob: -9.379979133605957
    9. ',' → logprob: -9.504979133605957
    10. ' for' → logprob: -9.629979133605957

Token 341: ' for' (ID: 395)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.29407182335853577
    2. ' matrix' → logprob: -1.5440717935562134
    3. 'for' (adapté à ' for') → logprob: -3.919071912765503
    4. ' for' → logprob: -4.544071674346924
    5. '               ' → logprob: -5.919071674346924
    6. '                   ' → logprob: -6.044071674346924
    7. 'vector' → logprob: -6.669071674346924
    8. '#' → logprob: -6.919071674346924
    9. 'A' → logprob: -6.919071674346924
    10. 'neighbors' → logprob: -8.169072151184082

Token 342: ' rr' (ID: 54129)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.46852412819862366
    2. ' dr' → logprob: -1.0935240983963013
    3. 'dx' → logprob: -3.468524217605591
    4. ' dx' → logprob: -5.968523979187012
    5. 'nr' → logprob: -6.718523979187012
    6. 'x' → logprob: -6.718523979187012
    7. 'rr' → logprob: -7.593523979187012
    8. 'di' → logprob: -7.843523979187012
    9. ' nr' → logprob: -8.093523979187012
    10. 'delta' → logprob: -8.093523979187012

Token 343: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008670591749250889
    2. 'in' → logprob: -4.758670806884766
    3. ' ' → logprob: -10.008670806884766
    4. '	in' → logprob: -13.008670806884766
    5. ',' → logprob: -13.508670806884766
    6. 'range' → logprob: -14.133670806884766
    7. '<|end|>' → logprob: -14.133670806884766
    8. '```' → logprob: -14.258670806884766
    9. '   ' → logprob: -14.883670806884766
    10. ')' → logprob: -14.946170806884766

Token 344: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5927984118461609
    2. ' range' → logprob: -0.8427984118461609
    3. '[-' → logprob: -5.217798233032227
    4. '[r' → logprob: -5.717798233032227
    5. '[max' → logprob: -6.092798233032227
    6. ' max' → logprob: -6.717798233032227
    7. 'max' → logprob: -7.217798233032227
    8. ' r' → logprob: -7.467798233032227
    9. '(range' → logprob: -7.467798233032227
    10. '-' → logprob: -7.717798233032227

Token 345: '(n' (ID: 2406)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.28132733702659607
    2. 'max' → logprob: -1.7813273668289185
    3. '(n' → logprob: -3.781327247619629
    4. 'd' → logprob: -3.906327247619629
    5. '(d' → logprob: -3.906327247619629
    6. '(r' → logprob: -5.281327247619629
    7. '(-' → logprob: -5.656327247619629
    8. 'n' → logprob: -6.406327247619629
    9. 'r' → logprob: -6.656327247619629
    10. '(' → logprob: -7.156327247619629

Token 346: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25759032368659973
    2. '):
' → logprob: -1.8825902938842773
    3. '-' → logprob: -2.7575902938842773
    4. '           ' → logprob: -5.882590293884277
    5. '+' → logprob: -6.007590293884277
    6. '               ' → logprob: -6.507590293884277
    7. '       ' → logprob: -6.507590293884277
    8. ' -' → logprob: -6.882590293884277
    9. '                   ' → logprob: -7.882590293884277
    10. '   ' → logprob: -7.882590293884277

Token 347: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2760699689388275
    2. '<|end|>' → logprob: -2.2760698795318604
    3. '               ' → logprob: -3.0260698795318604
    4. '		           ' → logprob: -3.5260698795318604
    5. '			       ' → logprob: -4.1510701179504395
    6. '                       ' → logprob: -5.0260701179504395
    7. '           ' → logprob: -5.0260701179504395
    8. '			           ' → logprob: -5.6510701179504395
    9. '<|end|>' → logprob: -5.6510701179504395
    10. '	               ' → logprob: -5.7760701179504395

Token 348: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2806245684623718
    2. 'for' (adapté à ' for') → logprob: -2.0306246280670166
    3. ' ' → logprob: -3.2806246280670166
    4. ' if' → logprob: -3.7806246280670166
    5. '                               ' → logprob: -4.0306243896484375
    6. '                   ' → logprob: -4.2806243896484375
    7. '                       ' → logprob: -4.5306243896484375
    8. 'if' → logprob: -6.5306243896484375
    9. '               ' → logprob: -6.6556243896484375
    10. '   ' → logprob: -6.7806243896484375

Token 349: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.009829403832554817
    2. ' cc' → logprob: -4.634829521179199
    3. 'rc' → logprob: -9.7598295211792
    4. '(cc' → logprob: -12.2598295211792
    5. 'ccc' → logprob: -12.3848295211792
    6. '	cc' → logprob: -13.5098295211792
    7. 'dc' → logprob: -13.6348295211792
    8. ' rc' → logprob: -14.2598295211792
    9. 'c' → logprob: -14.5098295211792
    10. '_cc' → logprob: -14.5098295211792

Token 350: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006018387619405985
    2. 'in' → logprob: -5.131018161773682
    3. ' ' → logprob: -9.50601863861084
    4. '<|end|>' → logprob: -12.13101863861084
    5. '	in' → logprob: -12.75601863861084
    6. '(' → logprob: -13.75601863861084
    7. ' =' → logprob: -14.13101863861084
    8. '0' → logprob: -14.13101863861084
    9. '=' → logprob: -14.13101863861084
    10. ' (' → logprob: -14.38101863861084

Token 351: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11766437441110611
    2. ' range' → logprob: -2.242664337158203
    3. '(m' → logprob: -5.617664337158203
    4. 'm' → logprob: -7.492664337158203
    5. '(range' → logprob: -7.617664337158203
    6. '0' → logprob: -9.992664337158203
    7. 'd' → logprob: -10.867664337158203
    8. ' m' → logprob: -10.867664337158203
    9. '(' → logprob: -10.992664337158203
    10. ' (' → logprob: -11.367664337158203

Token 352: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0006610880955122411
    2. '(d' → logprob: -8.12566089630127
    3. '(' → logprob: -9.25066089630127
    4. 'range' → logprob: -9.25066089630127
    5. '(n' → logprob: -9.62566089630127
    6. 'm' → logprob: -9.75066089630127
    7. 'size' → logprob: -11.37566089630127
    8. '(size' → logprob: -11.50066089630127
    9. 'd' → logprob: -11.75066089630127
    10. '(max' → logprob: -12.12566089630127

Token 353: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6953674554824829
    2. '):' → logprob: -0.9453674554824829
    3. '                       ' → logprob: -3.3203673362731934
    4. '<|end|>' → logprob: -3.5703673362731934
    5. ',' → logprob: -4.570367336273193
    6. '                               ' → logprob: -4.695367336273193
    7. '                   ' → logprob: -4.695367336273193
    8. ')' → logprob: -5.320367336273193
    9. ':' → logprob: -5.445367336273193
    10. '=' → logprob: -6.570367336273193

Token 354: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.17146946489810944
    2. '                   ' → logprob: -2.6714694499969482
    3. ' ' → logprob: -3.2964694499969482
    4. '<|end|>' → logprob: -3.9214694499969482
    5. '                               ' → logprob: -4.171469688415527
    6. '                        ' → logprob: -5.296469688415527
    7. '                           ' → logprob: -5.921469688415527
    8. '                    ' → logprob: -6.296469688415527
    9. '               ' → logprob: -6.296469688415527
    10. ':' → logprob: -7.546469688415527

Token 355: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09020005166530609
    2. '                               ' → logprob: -3.8401999473571777
    3. ' if' → logprob: -4.340199947357178
    4. '                           ' → logprob: -4.465199947357178
    5. ' 
' → logprob: -4.715199947357178
    6. '                       ' → logprob: -4.965199947357178
    7. '<|end|>' → logprob: -5.340199947357178
    8. '0' → logprob: -5.965199947357178
    9. '                                ' → logprob: -6.215199947357178
    10. ' (' → logprob: -6.215199947357178

Token 356: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.18946193158626556
    2. ' abs' → logprob: -1.9394619464874268
    3. '(abs' → logprob: -3.5644619464874268
    4. '(rr' → logprob: -8.314461708068848
    5. 'max' → logprob: -9.189461708068848
    6. ' (' → logprob: -9.939461708068848
    7. 'rr' → logprob: -10.189461708068848
    8. '(r' → logprob: -10.439461708068848
    9. '(max' → logprob: -10.939461708068848
    10. ' max' → logprob: -12.189461708068848

Token 357: '(r' (ID: 4729)
  Prédit: '(rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rr' → logprob: -0.1139751598238945
    2. '(r' → logprob: -2.2389750480651855
    3. '(cc' → logprob: -7.1139750480651855
    4. '(idx' → logprob: -8.363975524902344
    5. '(' → logprob: -10.113975524902344
    6. '(rc' → logprob: -10.613975524902344
    7. '((' → logprob: -11.738975524902344
    8. '(c' → logprob: -11.863975524902344
    9. '(row' → logprob: -12.238975524902344
    10. 'r' → logprob: -12.238975524902344

Token 358: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5830285549163818
    2. '-' → logprob: -0.8330285549163818
    3. '-r' → logprob: -5.083028793334961
    4. '-row' → logprob: -7.458028793334961
    5. ' ' → logprob: -8.958028793334961
    6. '[' → logprob: -10.208028793334961
    7. '   ' → logprob: -10.708028793334961
    8. '-c' → logprob: -10.833028793334961
    9. '-ra' → logprob: -10.958028793334961
    10. '  ' → logprob: -11.458028793334961

Token 359: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.0036206236109137535
    2. ' rr' → logprob: -5.753620624542236
    3. '(rr' → logprob: -8.503620147705078
    4. '_rr' → logprob: -9.003620147705078
    5. 'RR' → logprob: -10.003620147705078
    6. 'cc' → logprob: -10.003620147705078
    7. 'r' → logprob: -12.003620147705078
    8. '   ' → logprob: -12.378620147705078
    9. '
' → logprob: -12.753620147705078
    10. ' ' → logprob: -12.878620147705078

Token 360: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06498757004737854
    2. ')<=' → logprob: -3.0649876594543457
    3. ')+' → logprob: -4.189987659454346
    4. ' )' → logprob: -7.189987659454346
    5. ')>' → logprob: -8.439987182617188
    6. '[' → logprob: -9.689987182617188
    7. ')==' → logprob: -10.564987182617188
    8. ')*' → logprob: -11.064987182617188
    9. ')>=' → logprob: -11.439987182617188
    10. ')<' → logprob: -11.939987182617188

Token 361: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0002659847668837756
    2. ' abs' → logprob: -8.500266075134277
    3. 'cc' → logprob: -9.750266075134277
    4. '(abs' → logprob: -14.000266075134277
    5. '   ' → logprob: -14.250266075134277
    6. '           ' → logprob: -14.750266075134277
    7. '1' → logprob: -15.250266075134277
    8. '       ' → logprob: -15.375266075134277
    9. '               ' → logprob: -15.750266075134277
    10. '                           ' → logprob: -15.750266075134277

Token 362: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.3333684802055359
    2. '(r' → logprob: -2.3333685398101807
    3. '(cc' → logprob: -2.3333685398101807
    4. '(' → logprob: -2.4583685398101807
    5. '<|end|>' → logprob: -6.208368301391602
    6. '(rr' → logprob: -7.208368301391602
    7. '(rc' → logprob: -7.333368301391602
    8. ' (' → logprob: -8.458368301391602
    9. '(
' → logprob: -9.083368301391602
    10. '(row' → logprob: -9.958368301391602

Token 363: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.027580810710787773
    2. '[' → logprob: -4.527580738067627
    3. ')' → logprob: -5.277580738067627
    4. 'cc' → logprob: -5.652580738067627
    5. '(cc' → logprob: -5.902580738067627
    6. ' -' → logprob: -6.652580738067627
    7. '	cc' → logprob: -7.402580738067627
    8. ')>' → logprob: -7.527580738067627
    9. '+' → logprob: -8.277581214904785
    10. ')==' → logprob: -8.402581214904785

Token 364: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -2.093505099765025e-05
    2. ' cc' → logprob: -10.875020980834961
    3. '(cc' → logprob: -14.000020980834961
    4. '	cc' → logprob: -14.250020980834961
    5. '   ' → logprob: -15.750020980834961
    6. ' ' → logprob: -16.50002098083496
    7. '  ' → logprob: -17.62502098083496
    8. '    ' → logprob: -18.00002098083496
    9. '```' → logprob: -18.00002098083496
    10. '1' → logprob: -18.00002098083496

Token 365: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04192865267395973
    2. ')<=' → logprob: -3.291928768157959
    3. ' <=' → logprob: -6.416928768157959
    4. '<=' → logprob: -6.791928768157959
    5. ' )' → logprob: -7.416928768157959
    6. ')>' → logprob: -8.2919282913208
    7. ')==' → logprob: -8.9169282913208
    8. '')' → logprob: -9.7919282913208
    9. '==' → logprob: -11.5419282913208
    10. ' >' → logprob: -11.7919282913208

Token 366: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.18359626829624176
    2. ' <=' → logprob: -1.8085962533950806
    3. '>' → logprob: -5.933596134185791
    4. ' >' → logprob: -6.933596134185791
    5. ')<=' → logprob: -9.68359661102295
    6. ' ' → logprob: -10.74609661102295
    7. '```' → logprob: -10.87109661102295
    8. '">' → logprob: -11.05859661102295
    9. ']<=' → logprob: -11.24609661102295
    10. '==' → logprob: -11.43359661102295

Token 367: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08087556064128876
    2. ' d' → logprob: -2.5808756351470947
    3. '1' → logprob: -6.455875396728516
    4. '0' → logprob: -8.330875396728516
    5. ' ' → logprob: -8.705875396728516
    6. '	d' → logprob: -12.955875396728516
    7. '<|end|>' → logprob: -13.330875396728516
    8. '   ' → logprob: -14.955875396728516
    9. '<=' → logprob: -15.455875396728516
    10. '    ' → logprob: -15.455875396728516

Token 368: ' or' (ID: 503)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.694078266620636
    2. ':' → logprob: -1.0690782070159912
    3. '):
' → logprob: -2.069078207015991
    4. ':
' → logprob: -4.19407844543457
    5. '                           ' → logprob: -5.44407844543457
    6. ' and' → logprob: -5.94407844543457
    7. '                       ' → logprob: -6.44407844543457
    8. '+' → logprob: -6.81907844543457
    9. ' :' → logprob: -7.06907844543457
    10. '                               ' → logprob: -7.06907844543457

Token 369: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27292436361312866
    2. '(r' → logprob: -1.8979244232177734
    3. 'abs' → logprob: -3.6479244232177734
    4. '(rr' → logprob: -4.147924423217773
    5. ' (' → logprob: -4.272924423217773
    6. 'r' → logprob: -4.647924423217773
    7. 'rr' → logprob: -5.022924423217773
    8. ' ' → logprob: -5.397924423217773
    9. '(' → logprob: -5.522924423217773
    10. '(abs' → logprob: -5.647924423217773

Token 370: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014861393719911575
    2. 'rr' → logprob: -5.139861583709717
    3. 'abs' → logprob: -5.639861583709717
    4. ' r' → logprob: -5.639861583709717
    5. '0' → logprob: -6.889861583709717
    6. '(r' → logprob: -8.514861106872559
    7. ' abs' → logprob: -9.139861106872559
    8. '(abs' → logprob: -9.264861106872559
    9. ' rr' → logprob: -9.264861106872559
    10. '(' → logprob: -9.514861106872559

Token 371: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1008499413728714
    2. ' ==' → logprob: -2.3508498668670654
    3. ')==' → logprob: -7.9758501052856445
    4. ',' → logprob: -9.225850105285645
    5. ']==' → logprob: -10.100850105285645
    6. ')' → logprob: -10.225850105285645
    7. '-' → logprob: -10.475850105285645
    8. '<|end|>' → logprob: -10.600850105285645
    9. 'm' → logprob: -11.600850105285645
    10. '==
' → logprob: -11.725850105285645

Token 372: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.054705437272787094
    2. ' rr' → logprob: -3.4297053813934326
    3. 'cc' → logprob: -3.9297053813934326
    4. 'r' → logprob: -7.804705619812012
    5. 'rc' → logprob: -8.554705619812012
    6. '(rr' → logprob: -8.804705619812012
    7. '_rr' → logprob: -8.929705619812012
    8. ' cc' → logprob: -9.054705619812012
    9. ' ' → logprob: -9.929705619812012
    10. '	cc' → logprob: -10.429705619812012

Token 373: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5231943726539612
    2. 'and' → logprob: -0.8981943726539612
    3. ')' → logprob: -10.898194313049316
    4. ' ' → logprob: -11.023194313049316
    5. '&&' → logprob: -11.273194313049316
    6. '                       ' → logprob: -12.273194313049316
    7. '	and' → logprob: -12.398194313049316
    8. '<|end|>' → logprob: -12.523194313049316
    9. '                           ' → logprob: -12.773194313049316
    10. '   ' → logprob: -13.523194313049316

Token 374: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07423222064971924
    2. ' c' → logprob: -2.6992321014404297
    3. 'cc' → logprob: -5.57423210144043
    4. '	c' → logprob: -8.32423210144043
    5. ' cc' → logprob: -9.32423210144043
    6. '   ' → logprob: -9.57423210144043
    7. '    ' → logprob: -10.94923210144043
    8. '                               ' → logprob: -11.07423210144043
    9. '                           ' → logprob: -11.94923210144043
    10. '                                   ' → logprob: -11.94923210144043

Token 375: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0008151084766723216
    2. ' ==' → logprob: -7.125814914703369
    3. '==
' → logprob: -12.500815391540527
    4. ')==' → logprob: -12.750815391540527
    5. '=' → logprob: -13.125815391540527
    6. ']==' → logprob: -13.500815391540527
    7. '!=' → logprob: -15.750815391540527
    8. '()==' → logprob: -16.00081443786621
    9. '<|end|>' → logprob: -16.12581443786621
    10. '	' → logprob: -16.37581443786621

Token 376: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.00014334988372866064
    2. ' cc' → logprob: -8.875143051147461
    3. '	cc' → logprob: -12.875143051147461
    4. '   ' → logprob: -15.250143051147461
    5. '(cc' → logprob: -15.375143051147461
    6. ' ' → logprob: -15.750143051147461
    7. 'c' → logprob: -15.875143051147461
    8. '  ' → logprob: -17.37514305114746
    9. '_cc' → logprob: -17.87514305114746
    10. '    ' → logprob: -18.12514305114746

Token 377: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.150628462433815
    2. '):
' → logprob: -2.4006285667419434
    3. ')' → logprob: -3.0256285667419434
    4. ' ):' → logprob: -8.525628089904785
    5. '):

' → logprob: -8.775628089904785
    6. '                       ' → logprob: -10.150628089904785
    7. ' ):
' → logprob: -10.150628089904785
    8. ' )' → logprob: -10.400628089904785
    9. '):
' → logprob: -10.400628089904785
    10. ':' → logprob: -10.525628089904785

Token 378: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0013611861504614353
    2. '                               ' → logprob: -7.00136137008667
    3. '                       ' → logprob: -8.001360893249512
    4. '                   ' → logprob: -10.001360893249512
    5. '                            ' → logprob: -11.376360893249512
    6. '                                   ' → logprob: -11.751360893249512
    7. '                          ' → logprob: -12.126360893249512
    8. '<|end|>' → logprob: -12.126360893249512
    9. '						' → logprob: -12.251360893249512
    10. '           ' → logprob: -12.251360893249512

Token 379: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.10032021254301071
    2. ' matrix' → logprob: -2.3503201007843018
    3. '                               ' → logprob: -9.975319862365723
    4. '                           ' → logprob: -10.100319862365723
    5. '	matrix' → logprob: -10.975319862365723
    6. '   ' → logprob: -12.725319862365723
    7. ' ' → logprob: -13.850319862365723
    8. '                                   ' → logprob: -13.975319862365723
    9. '```' → logprob: -14.725319862365723
    10. 'A' → logprob: -14.850319862365723

Token 380: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.5764660239219666
    2. '[r' → logprob: -0.8264660239219666
    3. '[' → logprob: -7.826466083526611
    4. '[row' → logprob: -9.826465606689453
    5. 'idx' → logprob: -10.076465606689453
    6. '][' → logprob: -11.076465606689453
    7. 'r' → logprob: -12.326465606689453
    8. ' [' → logprob: -13.076465606689453
    9. ')[' → logprob: -13.076465606689453
    10. '[i' → logprob: -13.201465606689453

Token 381: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005325427744537592
    2. '[idx' → logprob: -5.7553253173828125
    3. '[' → logprob: -6.2553253173828125
    4. ' ][' → logprob: -9.505325317382812
    5. ']' → logprob: -10.630325317382812
    6. '[r' → logprob: -10.755325317382812
    7. '                           ' → logprob: -11.255325317382812
    8. '           ' → logprob: -11.255325317382812
    9. '                   ' → logprob: -11.630325317382812
    10. '[row' → logprob: -12.005325317382812

Token 382: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.0007167232106439769
    2. ' rr' → logprob: -7.250716686248779
    3. '(rr' → logprob: -12.750717163085938
    4. '   ' → logprob: -12.750717163085938
    5. '
' → logprob: -15.000717163085938
    6. 'r' → logprob: -15.625717163085938
    7. ' ' → logprob: -15.750717163085938
    8. '_rr' → logprob: -16.375717163085938
    9. 'rc' → logprob: -16.875717163085938
    10. 'rrrr' → logprob: -17.125717163085938

Token 383: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.0010518652852624655
    2. '][' → logprob: -7.376051902770996
    3. ' *' → logprob: -7.876051902770996
    4. 'm' → logprob: -10.751051902770996
    5. ']' → logprob: -11.501051902770996
    6. '*' → logprob: -11.751051902770996
    7. ']*' → logprob: -13.501051902770996
    8. '	m' → logprob: -14.001051902770996
    9. '```' → logprob: -14.501051902770996
    10. '*c' → logprob: -15.126051902770996

Token 384: '+' (ID: 10)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -4.286852345103398e-05
    2. '+' → logprob: -10.250042915344238
    3. ' cc' → logprob: -12.125042915344238
    4. '	cc' → logprob: -13.375042915344238
    5. '(cc' → logprob: -15.250042915344238
    6. ' +' → logprob: -16.000041961669922
    7. 'xcc' → logprob: -17.625041961669922
    8. '_cc' → logprob: -18.250041961669922
    9. '[' → logprob: -19.250041961669922
    10. ']' → logprob: -19.500041961669922

Token 385: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -1.0325924449716695e-05
    2. ' cc' → logprob: -11.50001049041748
    3. '	cc' → logprob: -15.75001049041748
    4. '(cc' → logprob: -17.125009536743164
    5. '   ' → logprob: -20.250009536743164
    6. '_cc' → logprob: -20.375009536743164
    7. 'c' → logprob: -21.250009536743164
    8. 'ccc' → logprob: -21.500009536743164
    9. ' ' → logprob: -22.000009536743164
    10. '.cc' → logprob: -22.375009536743164

Token 386: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01781192421913147
    2. ']=' → logprob: -4.1428117752075195
    3. '=' → logprob: -6.3928117752075195
    4. ' ]' → logprob: -10.14281177520752
    5. ' =' → logprob: -10.26781177520752
    6. ' ^=' → logprob: -11.14281177520752
    7. ']+=' → logprob: -12.39281177520752
    8. ']^' → logprob: -12.89281177520752
    9. '1' → logprob: -13.01781177520752
    10. '^' → logprob: -13.01781177520752

Token 387: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008438145159743726
    2. ' =' → logprob: -7.1258440017700195
    3. ' ^=' → logprob: -10.37584400177002
    4. '^' → logprob: -11.75084400177002
    5. '[' → logprob: -15.87584400177002
    6. ']=' → logprob: -16.375843048095703
    7. '1' → logprob: -16.500843048095703
    8. ' ' → logprob: -16.750843048095703
    9. ']' → logprob: -17.375843048095703
    10. '=
' → logprob: -18.125843048095703

Token 388: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.750001907348633
    4. '                           ' → logprob: -16.750001907348633
    5. '                               ' → logprob: -17.375001907348633
    6. '                   ' → logprob: -17.375001907348633
    7. '                       ' → logprob: -17.500001907348633
    8. '           ' → logprob: -17.500001907348633
    9. '                                   ' → logprob: -18.625001907348633
    10. '۱' → logprob: -19.312501907348633

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '           ' → logprob: -17.500001907348633
    5. '                   ' → logprob: -18.125001907348633
    6. '
' → logprob: -18.375001907348633
    7. '                       ' → logprob: -18.687501907348633
    8. '１' → logprob: -19.000001907348633
    9. '                           ' → logprob: -19.062501907348633
    10. '       ' → logprob: -19.312501907348633

Token 390: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: ' vector' (ID: 9727)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008699901401996613
    2. '=' → logprob: -4.758699893951416
    3. '<|end|>' → logprob: -10.133700370788574
    4. '[' → logprob: -11.008700370788574
    5. ' =[' → logprob: -11.008700370788574
    6. '[:]' → logprob: -11.508700370788574
    7. '[idx' → logprob: -14.508700370788574
    8. ' ' → logprob: -14.883700370788574
    9. '[:' → logprob: -15.133700370788574
    10. '<|end|>' → logprob: -15.258700370788574

Token 394: ' lights' (ID: 18032)
  Prédit: 'lights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lights' → logprob: -0.018473811447620392
    2. ' lights' → logprob: -4.0184736251831055
    3. '[' → logprob: -8.643473625183105
    4. ' [' → logprob: -9.768473625183105
    5. '[l' → logprob: -10.268473625183105
    6. 'l' → logprob: -11.018473625183105
    7. 'list' → logprob: -11.393473625183105
    8. 'light' → logprob: -11.518473625183105
    9. ' list' → logprob: -12.830973625183105
    10. ' ' → logprob: -13.330973625183105

Token 395: '[:' (ID: 7808)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.552675724029541
    2. '
' → logprob: -1.427675724029541
    3. '<|end|>' → logprob: -1.802675724029541
    4. '[' → logprob: -5.177675724029541
    5. '        
' → logprob: -5.677675724029541
    6. '   ' → logprob: -5.927675724029541
    7. '<|end|>' → logprob: -6.052675724029541
    8. ')' → logprob: -7.177675724029541
    9. ',' → logprob: -7.177675724029541
    10. '  
' → logprob: -7.302675724029541

Token 396: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008712020353414118
    2. ']
' → logprob: -8.000871658325195
    3. '<|end|>' → logprob: -8.250871658325195
    4. ' ]' → logprob: -8.625871658325195
    5. ')' → logprob: -10.250871658325195
    6. ']
' → logprob: -10.750871658325195
    7. ']

' → logprob: -11.125871658325195
    8. '<|end|>' → logprob: -11.500871658325195
    9. '       ' → logprob: -13.125871658325195
    10. ')]' → logprob: -13.500871658325195

Token 397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009301366284489632
    2. '<|end|>' → logprob: -5.00930118560791
    3. '
' → logprob: -6.88430118560791
    4. ' if' → logprob: -7.50930118560791
    5. '   ' → logprob: -8.25930118560791
    6. '        
' → logprob: -8.38430118560791
    7. 'if' → logprob: -8.88430118560791
    8. '<|end|>' → logprob: -9.00930118560791
    9. ',' → logprob: -9.25930118560791
    10. 'result' → logprob: -10.38430118560791

Token 398: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0095006227493286
    2. 'if' (adapté à ' if') → logprob: -1.0095006227493286
    3. ' if' → logprob: -1.3845006227493286
    4. 'success' → logprob: -4.384500503540039
    5. ' success' → logprob: -5.259500503540039
    6. 'result' → logprob: -6.384500503540039
    7. '   ' → logprob: -8.009500503540039
    8. '        
' → logprob: -8.384500503540039
    9. ' result' → logprob: -8.759500503540039
    10. '<|end|>' → logprob: -9.134500503540039

Token 399: ' ga' (ID: 6666)
  Prédit: ' ga'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ga' → logprob: -0.034280724823474884
    2. ' not' → logprob: -3.784280776977539
    3. 'ga' → logprob: -4.534280776977539
    4. 'not' → logprob: -8.659280776977539
    5. ' ' → logprob: -10.159280776977539
    6. '   ' → logprob: -11.409280776977539
    7. '  ' → logprob: -12.284280776977539
    8. ' len' → logprob: -12.409280776977539
    9. ' ' → logprob: -12.659280776977539
    10. ' gaussian' → logprob: -14.096780776977539

Token 400: 'uss' (ID: 1824)
  Prédit: 'uss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uss' → logprob: -1.981667537620524e-06
    2. 'ss' → logprob: -13.250001907348633
    3. 'u' → logprob: -16.000001907348633
    4. '_' → logprob: -16.375001907348633
    5. 'us' → logprob: -17.500001907348633
    6. 'ussian' → logprob: -18.750001907348633
    7. '
' → logprob: -20.000001907348633
    8. 'a' → logprob: -20.125001907348633
    9. '\' → logprob: -20.250001907348633
    10. 'uß' → logprob: -20.625001907348633

Token 401: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.875000953674316
    3. '_em' → logprob: -16.25
    4. '_er' → logprob: -16.625
    5. '_en' → logprob: -16.75
    6. '_ele' → logprob: -17.75
    7. '_e' → logprob: -18.25
    8. '_ga' → logprob: -18.625
    9. '_ed' → logprob: -19.0
    10. '_under' → logprob: -19.0

Token 402: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -0.0010106575209647417
    2. 'min' → logprob: -7.626010894775391
    3. 'im' → logprob: -8.00101089477539
    4. 'ination' → logprob: -9.75101089477539
    5. 'imation' → logprob: -9.75101089477539
    6. 'iminate' → logprob: -9.87601089477539
    7. 'imin' → logprob: -12.25101089477539
    8. 'imini' → logprob: -12.50101089477539
    9. 'in' → logprob: -12.75101089477539
    10. 'imina' → logprob: -13.37601089477539

Token 403: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -1.2113979209971149e-05
    2. '(vector' → logprob: -12.250012397766113
    3. ' (' → logprob: -12.375012397766113
    4. '(' → logprob: -13.000012397766113
    5. '(
' → logprob: -15.625012397766113
    6. '(m' → logprob: -16.000011444091797
    7. 'matrix' → logprob: -16.625011444091797
    8. '```' → logprob: -16.625011444091797
    9. '(mask' → logprob: -17.250011444091797
    10. '(mat' → logprob: -17.500011444091797

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020103710994590074
    2. ' ,' → logprob: -9.375201225280762
    3. '(vector' → logprob: -9.375201225280762
    4. ',m' → logprob: -11.875201225280762
    5. 'vector' → logprob: -12.250201225280762
    6. ',v' → logprob: -12.250201225280762
    7. '(' → logprob: -12.250201225280762
    8. ',
' → logprob: -12.625201225280762
    9. '(matrix' → logprob: -13.500201225280762
    10. '<vector' → logprob: -13.875201225280762

Token 405: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.2519291639328003
    2. ' vector' → logprob: -1.5019291639328003
    3. '	vector' → logprob: -16.001928329467773
    4. '(vector' → logprob: -17.626928329467773
    5. '.vector' → logprob: -18.626928329467773
    6. '<vector' → logprob: -18.876928329467773
    7. 'Vector' → logprob: -19.251928329467773
    8. '   ' → logprob: -19.376928329467773
    9. '_vector' → logprob: -19.376928329467773
    10. 'vectors' → logprob: -20.126928329467773

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006019568536430597
    2. ',size' → logprob: -5.131019592285156
    3. ' ,' → logprob: -9.756019592285156
    4. '(size' → logprob: -10.631019592285156
    5. ',n' → logprob: -13.131019592285156
    6. '(' → logprob: -13.631019592285156
    7. ',
' → logprob: -13.756019592285156
    8. '):' → logprob: -13.881019592285156
    9. ')' → logprob: -14.381019592285156
    10. ',(' → logprob: -14.506019592285156

Token 407: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.023247340694069862
    2. ' size' → logprob: -3.773247241973877
    3. 'len' → logprob: -13.273247718811035
    4. '   ' → logprob: -17.02324676513672
    5. 'length' → logprob: -17.27324676513672
    6. '	size' → logprob: -17.27324676513672
    7. '(size' → logprob: -17.64824676513672
    8. '[size' → logprob: -17.64824676513672
    9. ' len' → logprob: -18.02324676513672
    10. '=size' → logprob: -18.27324676513672

Token 408: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00044663884909823537
    2. '):
' → logprob: -8.000446319580078
    3. ' ):' → logprob: -9.375446319580078
    4. ')' → logprob: -10.750446319580078
    5. ':' → logprob: -12.625446319580078
    6. '):
' → logprob: -13.625446319580078
    7. ')==' → logprob: -15.500446319580078
    8. '[]):' → logprob: -16.250446319580078
    9. '():' → logprob: -16.750446319580078
    10. '}:' → logprob: -17.250446319580078

Token 409: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04040791466832161
    2. '           ' → logprob: -3.29040789604187
    3. 'print' → logprob: -6.290408134460449
    4. ' print' → logprob: -7.915408134460449
    5. '
' → logprob: -10.41540813446045
    6. '   ' → logprob: -10.41540813446045
    7. '<|end|>' → logprob: -10.54040813446045
    8. '        
' → logprob: -10.91540813446045
    9. '               ' → logprob: -11.91540813446045
    10. '	       ' → logprob: -11.91540813446045

Token 410: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.611514687538147
    2. ' for' → logprob: -1.486514687538147
    3. 'for' → logprob: -1.986514687538147
    4. '           ' → logprob: -2.8615145683288574
    5. ' print' → logprob: -3.4865145683288574
    6. '       ' → logprob: -5.236514568328857
    7. 'result' → logprob: -7.611514568328857
    8. ' result' → logprob: -9.361515045166016
    9. '   ' → logprob: -9.361515045166016
    10. 'answer' → logprob: -9.611515045166016

Token 411: '(' (ID: 7)
  Prédit: '(vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vector' → logprob: -0.34569838643074036
    2. '('' → logprob: -2.095698356628418
    3. '(sum' → logprob: -2.220698356628418
    4. '("' → logprob: -3.470698356628418
    5. 'vector' → logprob: -4.095698356628418
    6. '(' → logprob: -5.095698356628418
    7. '(*' → logprob: -5.470698356628418
    8. 'sum' → logprob: -6.595698356628418
    9. '(int' → logprob: -7.720698356628418
    10. ''' → logprob: -8.845698356628418

Token 412: '1' (ID: 16)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.5670068264007568
    2. 'sum' → logprob: -0.9420068264007568
    3. ''' → logprob: -3.817006826400757
    4. '"' → logprob: -4.067007064819336
    5. ' vector' → logprob: -6.692007064819336
    6. ' sum' → logprob: -7.317007064819336
    7. '(vector' → logprob: -7.567007064819336
    8. '*' → logprob: -7.692007064819336
    9. '(sum' → logprob: -8.567007064819336
    10. 'min' → logprob: -8.942007064819336

Token 413: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5237705111503601
    2. ')' → logprob: -0.8987705111503601
    3. ' )
' → logprob: -8.648770332336426
    4. ' )' → logprob: -8.648770332336426
    5. '
' → logprob: -8.898770332336426
    6. '       ' → logprob: -9.773770332336426
    7. ')
' → logprob: -10.398770332336426
    8. '0' → logprob: -10.898770332336426
    9. '   ' → logprob: -11.148770332336426
    10. ' else' → logprob: -11.898770332336426

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06564366072416306
    2. 'else' → logprob: -2.940643548965454
    3. '<|end|>' → logprob: -5.065643787384033
    4. ' else' → logprob: -5.565643787384033
    5. '
' → logprob: -8.815643310546875
    6. '	' → logprob: -9.190643310546875
    7. '	else' → logprob: -9.440643310546875
    8. '   ' → logprob: -9.565643310546875
    9. '<|end|>' → logprob: -9.565643310546875
    10. '  
' → logprob: -10.315643310546875

Token 415: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.48194271326065063
    2. '       ' → logprob: -0.9819427132606506
    3. ' else' → logprob: -4.856942653656006
    4. '	else' → logprob: -10.231943130493164
    5. '	' → logprob: -11.106943130493164
    6. '<|end|>' → logprob: -12.481943130493164
    7. '   ' → logprob: -12.606943130493164
    8. ' ' → logprob: -14.606943130493164
    9. 'elif' → logprob: -14.981943130493164
    10. '```' → logprob: -15.106943130493164

Token 416: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01110382191836834
    2. ':
' → logprob: -4.511103630065918
    3. '           ' → logprob: -10.136103630065918
    4. '       ' → logprob: -12.386103630065918
    5. ' :' → logprob: -12.511103630065918
    6. ':
' → logprob: -13.386103630065918
    7. '   ' → logprob: -13.511103630065918
    8. ',' → logprob: -14.011103630065918
    9. '{' → logprob: -14.136103630065918
    10. ':

' → logprob: -14.511103630065918

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09099806100130081
    2. 'print' → logprob: -2.4659981727600098
    3. ' print' → logprob: -6.71599817276001
    4. '	       ' → logprob: -7.21599817276001
    5. '		' → logprob: -10.340997695922852
    6. '	print' → logprob: -10.840997695922852
    7. '```' → logprob: -10.840997695922852
    8. '       ' → logprob: -11.590997695922852
    9. '		   ' → logprob: -12.340997695922852
    10. '               ' → logprob: -12.340997695922852

Token 418: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0015305745182558894
    2. ' print' → logprob: -6.501530647277832
    3. '           ' → logprob: -11.376530647277832
    4. '	print' → logprob: -11.626530647277832
    5. '       ' → logprob: -11.876530647277832
    6. '   ' → logprob: -15.001530647277832
    7. '	       ' → logprob: -15.501530647277832
    8. '```' → logprob: -15.876530647277832
    9. '.print' → logprob: -16.376529693603516
    10. ' ' → logprob: -16.501529693603516

Token 419: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031966082751750946
    2. '0' → logprob: -5.753196716308594
    3. ' (' → logprob: -11.503196716308594
    4. ' ' → logprob: -11.753196716308594
    5. '(
' → logprob: -14.378196716308594
    6. '```' → logprob: -15.878196716308594
    7. '`' → logprob: -16.753196716308594
    8. '   ' → logprob: -16.878196716308594
    9. '``' → logprob: -17.253196716308594
    10. ' 
' → logprob: -17.628196716308594

Token 420: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '-' → logprob: -15.375000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '2' → logprob: -16.25
    5. '```' → logprob: -17.875
    6. ')' → logprob: -18.375
    7. '``' → logprob: -19.0625
    8. '   ' → logprob: -19.25
    9. '`' → logprob: -19.375
    10. '(' → logprob: -19.4375

Token 421: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003251508343964815
    2. '<|end|>' → logprob: -5.753251552581787
    3. ')
' → logprob: -10.628251075744629
    4. '```' → logprob: -10.878251075744629
    5. '
' → logprob: -11.253251075744629
    6. '()' → logprob: -12.378251075744629
    7. '<|end|>' → logprob: -12.378251075744629
    8. '())' → logprob: -12.503251075744629
    9. ' )' → logprob: -14.128251075744629
    10. '#' → logprob: -14.628251075744629

Token 422: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0658793449401855
    2. '<|end|>' → logprob: -1.0658793449401855
    3. 'if' → logprob: -1.1908793449401855
    4. ' if' → logprob: -6.3158793449401855
    5. '<|end|>' → logprob: -6.3158793449401855
    6. '\n' → logprob: -6.9408793449401855
    7. '[' → logprob: -7.4408793449401855
    8. '#' → logprob: -7.5658793449401855
    9. '```' → logprob: -7.5658793449401855
    10. '\' → logprob: -8.815879821777344

Token 423: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.09518551826477051
    2. '__' → logprob: -2.4701855182647705
    3. '_' → logprob: -5.095185279846191
    4. '_name' → logprob: -10.095185279846191
    5. ' _' → logprob: -11.220185279846191
    6. ' ' → logprob: -11.220185279846191
    7. ' ' → logprob: -11.595185279846191
    8. '___' → logprob: -11.720185279846191
    9. '  ' → logprob: -12.720185279846191
    10. ' ___' → logprob: -12.970185279846191

Token 424: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01101834885776043
    2. ' ==' → logprob: -5.1360182762146
    3. '==' → logprob: -6.6360182762146
    4. '.__' → logprob: -6.7610182762146
    5. ' __' → logprob: -7.2610182762146
    6. '_' → logprob: -7.3860182762146
    7. '__.' → logprob: -8.261018753051758
    8. '__.__' → logprob: -8.261018753051758
    9. '__[' → logprob: -8.386018753051758
    10. '[' → logprob: -8.386018753051758

Token 425: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -13.125004768371582
    3. '__.__' → logprob: -13.625004768371582
    4. '___' → logprob: -14.125004768371582
    5. '==' → logprob: -14.750004768371582
    6. '____' → logprob: -15.000004768371582
    7. '__
' → logprob: -17.0000057220459
    8. '__.' → logprob: -17.1250057220459
    9. '__["' → logprob: -18.5000057220459
    10. '=="' → logprob: -18.6250057220459

Token 426: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006387195084244013
    2. '==' → logprob: -5.381387233734131
    3. ' ==' → logprob: -6.506387233734131
    4. '=="' → logprob: -8.381386756896973
    5. '__.__' → logprob: -10.506386756896973
    6. '=='' → logprob: -13.006386756896973
    7. '___' → logprob: -13.256386756896973
    8. '__":
' → logprob: -13.256386756896973
    9. '_' → logprob: -13.506386756896973
    10. '__["' → logprob: -13.631386756896973

Token 427: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01349782943725586
    2. '"' → logprob: -4.513497829437256
    3. ''' → logprob: -6.013497829437256
    4. ' __' → logprob: -14.013498306274414
    5. ' "__' → logprob: -14.888498306274414
    6. '___' → logprob: -15.513498306274414
    7. 'main' → logprob: -16.513498306274414
    8. '____' → logprob: -17.138498306274414
    9. '/__' → logprob: -17.513498306274414
    10. '_main' → logprob: -18.638498306274414

Token 428: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002651503309607506
    2. 'name' → logprob: -8.250265121459961
    3. '__' → logprob: -12.500265121459961
    4. '_main' → logprob: -16.25026512145996
    5. 'built' → logprob: -17.25026512145996
    6. '```' → logprob: -18.37526512145996
    7. ' main' → logprob: -18.62526512145996
    8. 'ma' → logprob: -18.75026512145996
    9. 'm' → logprob: -19.75026512145996
    10. '__
' → logprob: -20.25026512145996

Token 429: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.43705281615257263
    2. '__":
' → logprob: -1.062052845954895
    3. '__:' → logprob: -5.6870527267456055
    4. ':' → logprob: -5.9370527267456055
    5. '__':
' → logprob: -6.3120527267456055
    6. '__["' → logprob: -9.187052726745605
    7. '.' → logprob: -9.187052726745605
    8. '__.' → logprob: -10.187052726745605
    9. '__
' → logprob: -10.312052726745605
    10. '__.__' → logprob: -10.312052726745605

Token 430: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22546960413455963
    2. '	main' → logprob: -2.2254695892333984
    3. ' main' → logprob: -2.4754695892333984
    4. 'main' → logprob: -4.725469589233398
    5. '    
' → logprob: -7.850469589233398
    6. '<|end|>' → logprob: -8.350469589233398
    7. '   ' → logprob: -9.975469589233398
    8. '_main' → logprob: -10.100469589233398
    9. ' ' → logprob: -10.600469589233398
    10. '  ' → logprob: -11.225469589233398

Token 431: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0015061709564179182
    2. ' main' → logprob: -6.501506328582764
    3. '	main' → logprob: -13.001505851745605
    4. '   ' → logprob: -13.376505851745605
    5. '_main' → logprob: -18.876506805419922
    6. '.main' → logprob: -19.751506805419922
    7. '(main' → logprob: -19.876506805419922
    8. ' ' → logprob: -20.876506805419922
    9. 'Main' → logprob: -21.626506805419922
    10. 'maine' → logprob: -21.876506805419922

Token 432: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 430
Tokens correctement prédits (1ère position, stricte): 230
Tokens correctement prédits (1ère position, avec adaptation): 239
Tokens correctement prédits (top 10): 385
Précision stricte (1ère position): 53.49%
Précision adaptée (1ère position): 55.58%
Précision (top 10): 89.53%
================================================================================
