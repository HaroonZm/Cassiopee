================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    chars = []
    times = {}
    for _ in range(n):
        data = input().split()
        name = data[0]
        m = int(data[1])
        tlist = list(map(int, data[2:2+m]))
        chars.append(name)
        for t in tlist:
            if t not in times:
                times[t] = []
            times[t].append(name)
    points = {c:0 for c in chars}
    for t in times:
        l = len(times[t])
        for c in times[t]:
            points[c] += l
    min_point = min(points.values())
    min_chars = [c for c,v in points.items() if v == min_point]
    print(min_point, sorted(min_chars)[0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37804487347602844
    2. '\n' → logprob: -2.503044843673706
    3. '    ' → logprob: -2.753044843673706
    4. '\' → logprob: -3.253044843673706
    5. ' 
' → logprob: -3.628044843673706
    6. ' ' → logprob: -3.628044843673706
    7. '    
' → logprob: -3.753044843673706
    8. '```' → logprob: -4.503045082092285
    9. '<|end|>' → logprob: -4.628045082092285
    10. '     
' → logprob: -5.128045082092285

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4148074984550476
    2. '    ' → logprob: -1.9148075580596924
    3. ' ' → logprob: -2.0398075580596924
    4. '```' → logprob: -3.5398075580596924
    5. '       ' → logprob: -4.914807319641113
    6. '  ' → logprob: -5.289807319641113
    7. '    
' → logprob: -5.789807319641113
    8. 'i' → logprob: -6.414807319641113
    9. '`' → logprob: -6.414807319641113
    10. '        
' → logprob: -6.789807319641113

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7143212556838989
    2. 'u' → logprob: -1.714321255683899
    3. '=' → logprob: -2.0893211364746094
    4. 'o' → logprob: -2.7143211364746094
    5. '   ' → logprob: -2.9643211364746094
    6. 'e' → logprob: -4.089321136474609
    7. ' =' → logprob: -4.089321136474609
    8. '_' → logprob: -4.839321136474609
    9. '+' → logprob: -4.964321136474609
    10. '  ' → logprob: -5.089321136474609

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2919977307319641
    2. ' input' → logprob: -1.5419976711273193
    3. 'input' → logprob: -3.6669976711273193
    4. 'int' → logprob: -4.416997909545898
    5. ' n' → logprob: -7.041997909545898
    6. ' ' → logprob: -7.666997909545898
    7. ' randint' → logprob: -9.666997909545898
    8. 'n' → logprob: -10.291997909545898
    9. ' i' → logprob: -10.541997909545898
    10. '1' → logprob: -11.041997909545898

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04866332933306694
    2. '(input' → logprob: -3.048663377761841
    3. '()' → logprob: -10.798663139343262
    4. 'input' → logprob: -11.173663139343262
    5. '('' → logprob: -11.423663139343262
    6. '(n' → logprob: -11.423663139343262
    7. ' (' → logprob: -12.548663139343262
    8. '(open' → logprob: -13.298663139343262
    9. '(ord' → logprob: -13.423663139343262
    10. '(
' → logprob: -13.548663139343262

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18912996351718903
    2. '()' → logprob: -2.1891300678253174
    3. ')' → logprob: -3.5641300678253174
    4. '())' → logprob: -3.6891300678253174
    5. '('' → logprob: -5.564129829406738
    6. ' ' → logprob: -7.814129829406738
    7. '(""))' → logprob: -8.064129829406738
    8. '))' → logprob: -8.064129829406738
    9. '(
' → logprob: -8.064129829406738
    10. '(()' → logprob: -8.189129829406738

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9599012732505798
    2. ' if' → logprob: -1.7099013328552246
    3. '<|end|>' → logprob: -1.9599013328552246
    4. ' ' → logprob: -2.2099013328552246
    5. ')' → logprob: -2.2099013328552246
    6. '    
' → logprob: -4.209901332855225
    7. '```' → logprob: -4.584901332855225
    8. ':' → logprob: -4.709901332855225
    9. '    ' → logprob: -4.834901332855225
    10. ' 
' → logprob: -4.834901332855225

Token 10: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6401323080062866
    2. '   ' → logprob: -1.7651323080062866
    3. ' ' → logprob: -2.640132427215576
    4. '```' → logprob: -2.765132427215576
    5. '    ' → logprob: -3.140132427215576
    6. ')' → logprob: -3.515132427215576
    7. 'if' (adapté à ' if') → logprob: -4.015132427215576
    8. '<|end|>' → logprob: -4.640132427215576
    9. ' 
' → logprob: -4.765132427215576
    10. '    
' → logprob: -4.890132427215576

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0003045994380954653
    2. 'n' → logprob: -8.875304222106934
    3. ' not' → logprob: -9.250304222106934
    4. ' ' → logprob: -9.625304222106934
    5. ' ' → logprob: -13.000304222106934
    6. 'not' → logprob: -16.62530517578125
    7. ' (' → logprob: -17.00030517578125
    8. '	n' → logprob: -17.25030517578125
    9. '<|end|>' → logprob: -17.37530517578125
    10. '(n' → logprob: -17.75030517578125

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6851745247840881
    2. ' >' → logprob: -1.0601744651794434
    3. ' <=' → logprob: -2.5601744651794434
    4. ' <' → logprob: -3.5601744651794434
    5. ' ' → logprob: -4.310174465179443
    6. '==' → logprob: -4.310174465179443
    7. '>' → logprob: -4.435174465179443
    8. ' >=' → logprob: -6.435174465179443
    9. '  ' → logprob: -7.560174465179443
    10. ')' → logprob: -7.560174465179443

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1797505021095276
    2. '0' → logprob: -1.8047504425048828
    3. '1' → logprob: -13.929750442504883
    4. ' ' → logprob: -13.929750442504883
    5. '  ' → logprob: -14.179750442504883
    6. ')' → logprob: -15.179750442504883
    7. '100' → logprob: -15.242250442504883
    8. ' -' → logprob: -15.304750442504883
    9. '20' → logprob: -15.429750442504883
    10. '<|end|>' → logprob: -15.617250442504883

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002514188876375556
    2. ' ' → logprob: -6.002514362335205
    3. '-' → logprob: -10.377513885498047
    4. ' -' → logprob: -12.877513885498047
    5. '1' → logprob: -13.252513885498047
    6. '   ' → logprob: -14.127513885498047
    7. '42' → logprob: -14.752513885498047
    8. '  ' → logprob: -14.877513885498047
    9. '```' → logprob: -14.877513885498047
    10. '4' → logprob: -15.252513885498047

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.2524021157296374e-05
    2. ':
' → logprob: -10.625052452087402
    3. ' :' → logprob: -11.250052452087402
    4. '   ' → logprob: -12.500052452087402
    5. ':return' → logprob: -12.625052452087402
    6. '):' → logprob: -12.750052452087402
    7. ':\' → logprob: -13.375052452087402
    8. '       ' → logprob: -13.500052452087402
    9. '':' → logprob: -14.625052452087402
    10. '():' → logprob: -15.000052452087402

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002498609945178032
    2. '   ' → logprob: -6.752498626708984
    3. ' break' → logprob: -6.877498626708984
    4. '\n' → logprob: -9.127498626708984
    5. '    ' → logprob: -9.877498626708984
    6. '	break' → logprob: -10.502498626708984
    7. ':' → logprob: -10.752498626708984
    8. '\' → logprob: -11.377498626708984
    9. '      ' → logprob: -11.377498626708984
    10. ' ' → logprob: -11.627498626708984

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.014878070913255215
    2. '       ' → logprob: -4.514878273010254
    3. 'break' (adapté à ' break') → logprob: -5.889878273010254
    4. '   ' → logprob: -7.264878273010254
    5. '\n' → logprob: -8.889878273010254
    6. '	break' → logprob: -9.014878273010254
    7. '    ' → logprob: -10.764878273010254
    8. '```' → logprob: -10.764878273010254
    9. '_break' → logprob: -11.514878273010254
    10. ' ' → logprob: -11.514878273010254

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9458492994308472
    2. '\n' → logprob: -0.9458492994308472
    3. '\' → logprob: -2.4458494186401367
    4. '```' → logprob: -2.6958494186401367
    5. '    
' → logprob: -3.0708494186401367
    6. '
' → logprob: -5.070849418640137
    7. 'n' → logprob: -5.570849418640137
    8. '\r' → logprob: -6.070849418640137
    9. '  
' → logprob: -6.320849418640137
    10. ':' → logprob: -6.695849418640137

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46828585863113403
    2. '<|end|>' → logprob: -1.2182857990264893
    3. '\n' → logprob: -4.093286037445068
    4. '
' → logprob: -4.468286037445068
    5. '    
' → logprob: -4.468286037445068
    6. '#' → logprob: -4.593286037445068
    7. '```' → logprob: -4.718286037445068
    8. ')' → logprob: -5.218286037445068
    9. '\' → logprob: -5.343286037445068
    10. '<|end|>' → logprob: -5.968286037445068

Token 20: ' chars' (ID: 47991)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3427201509475708
    2. ' ' → logprob: -1.9677201509475708
    3. 'print' → logprob: -3.0927200317382812
    4. '    ' → logprob: -3.3427200317382812
    5. ')' → logprob: -3.9677200317382812
    6. '       ' → logprob: -4.592720031738281
    7. '#' → logprob: -5.592720031738281
    8. '\' → logprob: -5.717720031738281
    9. ',' → logprob: -5.842720031738281
    10. '<|end|>' → logprob: -5.842720031738281

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21010133624076843
    2. '=' → logprob: -1.7101013660430908
    3. '[' → logprob: -5.335101127624512
    4. '.' → logprob: -6.710101127624512
    5. '_' → logprob: -7.335101127624512
    6. ')' → logprob: -7.335101127624512
    7. '   ' → logprob: -8.210101127624512
    8. ' ' → logprob: -8.335101127624512
    9. ',' → logprob: -8.960101127624512
    10. '[]' → logprob: -9.210101127624512

Token 22: ' []
' (ID: 8911)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.37927860021591187
    2. ' list' → logprob: -1.8792786598205566
    3. 'input' → logprob: -2.3792786598205566
    4. ' []' → logprob: -3.0042786598205566
    5. 'list' → logprob: -4.629278659820557
    6. ' set' → logprob: -5.504278659820557
    7. ' [' → logprob: -6.254278659820557
    8. '[]' → logprob: -6.754278659820557
    9. ' {}' → logprob: -6.879278659820557
    10. 'set' → logprob: -7.129278659820557

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05331205949187279
    2. ' ' → logprob: -4.053311824798584
    3. 'for' → logprob: -4.803311824798584
    4. '    ' → logprob: -4.928311824798584
    5. ' for' → logprob: -5.303311824798584
    6. '<|end|>' → logprob: -6.053311824798584
    7. '\t' → logprob: -6.053311824798584
    8. '       ' → logprob: -6.303311824798584
    9. '    
' → logprob: -6.803311824798584
    10. '\' → logprob: -6.928311824798584

Token 24: ' times' (ID: 4238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36240270733833313
    2. '   ' → logprob: -1.6124026775360107
    3. ' for' → logprob: -2.4874026775360107
    4. ' ' → logprob: -4.36240291595459
    5. 'c' → logprob: -6.23740291595459
    6. '    ' → logprob: -6.48740291595459
    7. 'a' → logprob: -7.11240291595459
    8. 't' → logprob: -7.48740291595459
    9. 'i' → logprob: -7.61240291595459
    10. 'n' → logprob: -7.73740291595459

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16310183703899384
    2. '=' → logprob: -1.9131017923355103
    3. '_' → logprob: -5.913101673126221
    4. ' ' → logprob: -9.663102149963379
    5. '   ' → logprob: -10.288102149963379
    6. '    ' → logprob: -11.163102149963379
    7. '  ' → logprob: -12.163102149963379
    8. ')' → logprob: -12.163102149963379
    9. '[' → logprob: -12.288102149963379
    10. '_count' → logprob: -12.413102149963379

Token 26: ' {}
' (ID: 11421)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6204920411109924
    2. ' ' → logprob: -1.9954919815063477
    3. ' []' → logprob: -1.9954919815063477
    4. '0' → logprob: -2.3704919815063477
    5. 'n' → logprob: -2.9954919815063477
    6. ' int' → logprob: -3.8704919815063477
    7. '[]' → logprob: -4.870491981506348
    8. 'int' → logprob: -5.120491981506348
    9. '1' → logprob: -5.495491981506348
    10. ' [' → logprob: -6.245491981506348

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1973729282617569
    2. ' ' → logprob: -2.6973729133605957
    3. '    ' → logprob: -3.3223729133605957
    4. '    
' → logprob: -3.6973729133605957
    5. '     
' → logprob: -4.447372913360596
    6. ' 
' → logprob: -4.697372913360596
    7. 'for' → logprob: -5.447372913360596
    8. '\' → logprob: -5.572372913360596
    9. '```' → logprob: -5.572372913360596
    10. ' for' → logprob: -5.697372913360596

Token 28: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11635442078113556
    2. '   ' → logprob: -2.741354465484619
    3. ' for' → logprob: -3.241354465484619
    4. ' ' → logprob: -5.991354465484619
    5. 'n' → logprob: -6.991354465484619
    6. 'c' → logprob: -7.366354465484619
    7. '    ' → logprob: -7.491354465484619
    8. 'f' → logprob: -8.241353988647461
    9. '\t' → logprob: -8.491353988647461
    10. '```' → logprob: -8.491353988647461

Token 29: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9692645072937012
    2. ' _' → logprob: -0.9692645072937012
    3. ' ' → logprob: -1.5942645072937012
    4. ' c' → logprob: -3.969264507293701
    5. '_' → logprob: -4.344264507293701
    6. 'i' → logprob: -5.469264507293701
    7. 'c' → logprob: -6.344264507293701
    8. ' char' → logprob: -8.84426498413086
    9. ' )' → logprob: -10.09426498413086
    10. ' x' → logprob: -10.84426498413086

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030921319499611855
    2. 'in' → logprob: -3.530921220779419
    3. ' ' → logprob: -6.905921459197998
    4. '  ' → logprob: -10.03092098236084
    5. '_' → logprob: -10.28092098236084
    6. ' i' → logprob: -10.90592098236084
    7. ' _' → logprob: -11.15592098236084
    8. 'n' → logprob: -11.28092098236084
    9. '    ' → logprob: -11.53092098236084
    10. 'range' → logprob: -11.65592098236084

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4741252362728119
    2. 'range' → logprob: -0.9741252660751343
    3. '	range' → logprob: -11.099124908447266
    4. 'rang' → logprob: -11.599124908447266
    5. '(range' → logprob: -12.224124908447266
    6. 'ran' → logprob: -12.224124908447266
    7. ' ran' → logprob: -12.724124908447266
    8. ' ' → logprob: -12.724124908447266
    9. '```' → logprob: -13.474124908447266
    10. 'r' → logprob: -13.474124908447266

Token 32: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.026041436940431595
    2. '(' → logprob: -4.526041507720947
    3. ' n' → logprob: -4.526041507720947
    4. ' (' → logprob: -5.651041507720947
    5. 'n' → logprob: -7.526041507720947
    6. ' ' → logprob: -13.026041030883789
    7. '_n' → logprob: -14.401041030883789
    8. '()' → logprob: -14.651041030883789
    9. ')' → logprob: -14.651041030883789
    10. ')n' → logprob: -14.901041030883789

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011479835025966167
    2. ')' → logprob: -4.63647985458374
    3. ' ):' → logprob: -6.76147985458374
    4. ':' → logprob: -8.261479377746582
    5. '   ' → logprob: -8.761479377746582
    6. '+' → logprob: -10.011479377746582
    7. ' )' → logprob: -10.261479377746582
    8. '):
' → logprob: -10.261479377746582
    9. ' ' → logprob: -11.886479377746582
    10. '():' → logprob: -12.761479377746582

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07483600080013275
    2. '   ' → logprob: -3.199836015701294
    3. ' ' → logprob: -4.574835777282715
    4. '    ' → logprob: -4.824835777282715
    5. '<|end|>' → logprob: -4.824835777282715
    6. ' 
' → logprob: -6.324835777282715
    7. '    
' → logprob: -7.449835777282715
    8. ' s' → logprob: -7.699835777282715
    9. '<|end|>' → logprob: -8.824835777282715
    10. '        
' → logprob: -8.824835777282715

Token 35: ' data' (ID: 1238)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' word' → logprob: -1.311192512512207
    2. ' line' → logprob: -1.436192512512207
    3. ' s' → logprob: -1.561192512512207
    4. '   ' → logprob: -1.561192512512207
    5. 'word' → logprob: -4.186192512512207
    6. ' string' → logprob: -4.436192512512207
    7. 'line' → logprob: -4.436192512512207
    8. 's' → logprob: -4.561192512512207
    9. '    ' → logprob: -4.811192512512207
    10. ' char' → logprob: -5.436192512512207

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02818191610276699
    2. '=' → logprob: -3.653182029724121
    3. '[' → logprob: -6.778182029724121
    4. '.' → logprob: -7.778182029724121
    5. '   ' → logprob: -9.778182029724121
    6. '[]' → logprob: -10.028182029724121
    7. ')' → logprob: -10.528182029724121
    8. ' ' → logprob: -10.903182029724121
    9. ',' → logprob: -10.903182029724121
    10. '  ' → logprob: -11.028182029724121

Token 37: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.009835309349000454
    2. 'input' → logprob: -4.634835243225098
    3. ' list' → logprob: -9.634835243225098
    4. ' ' → logprob: -12.384835243225098
    5. 'list' → logprob: -12.884835243225098
    6. '=input' → logprob: -13.634835243225098
    7. '   ' → logprob: -13.759835243225098
    8. '(input' → logprob: -13.759835243225098
    9. '	input' → logprob: -14.134835243225098
    10. ' int' → logprob: -14.259835243225098

Token 38: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00798998586833477
    2. '(' → logprob: -4.882989883422852
    3. '().' → logprob: -8.882989883422852
    4. '())' → logprob: -9.132989883422852
    5. '('' → logprob: -9.507989883422852
    6. '("' → logprob: -11.632989883422852
    7. '()`' → logprob: -11.632989883422852
    8. ')' → logprob: -12.007989883422852
    9. '("")' → logprob: -12.007989883422852
    10. '()>' → logprob: -12.507989883422852

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08148931711912155
    2. 'strip' → logprob: -2.581489324569702
    3. 'rstrip' → logprob: -5.956489086151123
    4. 'rs' → logprob: -12.831489562988281
    5. 'lower' → logprob: -13.706489562988281
    6. ' split' → logprob: -13.956489562988281
    7. 'replace' → logprob: -13.956489562988281
    8. 'spl' → logprob: -14.581489562988281
    9. 's' → logprob: -15.331489562988281
    10. '```' → logprob: -15.581489562988281

Token 40: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2215384989976883
    2. '('' → logprob: -1.7215385437011719
    3. '(' → logprob: -3.971538543701172
    4. '("("' → logprob: -7.346538543701172
    5. '("' → logprob: -8.096538543701172
    6. '())' → logprob: -9.471538543701172
    7. '('.')' → logprob: -11.971538543701172
    8. '(',' → logprob: -11.971538543701172
    9. '()]' → logprob: -12.346538543701172
    10. ')' → logprob: -13.096538543701172

Token 41: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9278509020805359
    2. '       ' → logprob: -0.9278509020805359
    3. '   ' → logprob: -2.3028509616851807
    4. ' ' → logprob: -3.1778509616851807
    5. '<|end|>' → logprob: -3.4278509616851807
    6. ')' → logprob: -5.177850723266602
    7. '  ' → logprob: -5.427850723266602
    8. '    ' → logprob: -5.552850723266602
    9. '```' → logprob: -5.927850723266602
    10. ''' → logprob: -6.052850723266602

Token 42: ' name' (ID: 1308)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8971830010414124
    2. 'char' → logprob: -1.3971829414367676
    3. 'chars' → logprob: -1.8971829414367676
    4. 'word' → logprob: -2.5221829414367676
    5. 'name' (adapté à ' name') → logprob: -3.3971829414367676
    6. 's' → logprob: -3.6471829414367676
    7. 'key' → logprob: -3.8971829414367676
    8. ' word' → logprob: -5.397182941436768
    9. 'character' → logprob: -5.522182941436768
    10. 'a' → logprob: -5.522182941436768

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20206564664840698
    2. '[' → logprob: -2.3270657062530518
    3. ',' → logprob: -2.7020657062530518
    4. '=' → logprob: -4.577065467834473
    5. ')' → logprob: -5.202065467834473
    6. ' ,' → logprob: -7.327065467834473
    7. ']' → logprob: -8.202065467834473
    8. '_' → logprob: -8.452065467834473
    9. ' ' → logprob: -8.577065467834473
    10. '   ' → logprob: -8.952065467834473

Token 44: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.054886456578969955
    2. 'data' → logprob: -2.9298863410949707
    3. ' ' → logprob: -12.929886817932129
    4. ''' → logprob: -14.179886817932129
    5. ' '' → logprob: -15.554886817932129
    6. '(data' → logprob: -16.054885864257812
    7. ' datas' → logprob: -16.054885864257812
    8. '"' → logprob: -16.179885864257812
    9. '	data' → logprob: -16.429885864257812
    10. 'Data' → logprob: -16.679885864257812

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002390594017924741
    2. '[-' → logprob: -9.125239372253418
    3. '0' → logprob: -9.500239372253418
    4. '()[' → logprob: -10.500239372253418
    5. ' [' → logprob: -11.000239372253418
    6. '```' → logprob: -12.875239372253418
    7. '[:' → logprob: -13.625239372253418
    8. '1' → logprob: -14.000239372253418
    9. '(' → logprob: -14.500239372253418
    10. '"[' → logprob: -14.750239372253418

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001695176586508751
    2. '1' → logprob: -6.626695156097412
    3. '-' → logprob: -8.50169563293457
    4. ' ' → logprob: -8.75169563293457
    5. '2' → logprob: -12.25169563293457
    6. ']' → logprob: -14.12669563293457
    7. ' -' → logprob: -14.37669563293457
    8. '3' → logprob: -14.62669563293457
    9. '   ' → logprob: -14.93919563293457
    10. '4' → logprob: -15.93919563293457

Token 47: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00043019242002628744
    2. ' ]' → logprob: -8.1254301071167
    3. '[' → logprob: -10.3754301071167
    4. ']
' → logprob: -10.6254301071167
    5. ')' → logprob: -10.8754301071167
    6. '<|end|>' → logprob: -10.8754301071167
    7. '']' → logprob: -11.0004301071167
    8. ')]' → logprob: -12.2504301071167
    9. '()]' → logprob: -12.8754301071167
    10. '][' → logprob: -13.2504301071167

Token 48: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.844079315662384
    2. '    ' → logprob: -1.8440792560577393
    3. '   ' → logprob: -2.2190792560577393
    4. '       ' → logprob: -2.4690792560577393
    5. '<|end|>' → logprob: -2.7190792560577393
    6. ' times' → logprob: -3.0940792560577393
    7. 'times' → logprob: -3.8440792560577393
    8. 'count' → logprob: -3.9690792560577393
    9. ' count' → logprob: -4.219079494476318
    10. '  ' → logprob: -5.219079494476318

Token 49: ' m' (ID: 284)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.408029705286026
    2. 'time' → logprob: -2.658029794692993
    3. 't' → logprob: -3.033029794692993
    4. 'num' → logprob: -3.033029794692993
    5. 'cnt' → logprob: -3.033029794692993
    6. 'value' → logprob: -4.283029556274414
    7. 'freq' → logprob: -4.283029556274414
    8. 'score' → logprob: -4.533029556274414
    9. 'c' → logprob: -4.533029556274414
    10. 'k' → logprob: -4.908029556274414

Token 50: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36558181047439575
    2. ' =' → logprob: -1.490581750869751
    3. 'ethod' → logprob: -3.365581750869751
    4. 'e' → logprob: -3.865581750869751
    5. '=int' → logprob: -4.24058198928833
    6. 'ean' → logprob: -5.36558198928833
    7. 'essage' → logprob: -6.24058198928833
    8. 'ount' → logprob: -7.36558198928833
    9. ' ' → logprob: -7.49058198928833
    10. 'essages' → logprob: -7.61558198928833

Token 51: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20141440629959106
    2. ' int' → logprob: -1.7014143466949463
    3. '=int' → logprob: -14.826414108276367
    4. '[int' → logprob: -15.451414108276367
    5. '(int' → logprob: -15.701414108276367
    6. ' ' → logprob: -16.201414108276367
    7. '<int' → logprob: -16.201414108276367
    8. '   ' → logprob: -16.701414108276367
    9. 'len' → logprob: -16.951414108276367
    10. ']int' → logprob: -17.576414108276367

Token 52: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.018236801028251648
    2. '(' → logprob: -4.0182366371154785
    3. 'data' → logprob: -9.393237113952637
    4. ' (' → logprob: -13.393237113952637
    5. ' data' → logprob: -13.518237113952637
    6. ')data' → logprob: -15.393237113952637
    7. ')' → logprob: -16.39323616027832
    8. '(
' → logprob: -16.39323616027832
    9. '<data' → logprob: -16.51823616027832
    10. '	data' → logprob: -17.14323616027832

Token 53: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.061054359131958e-06
    2. '1' → logprob: -12.875007629394531
    3. ']' → logprob: -13.500007629394531
    4. ')' → logprob: -13.750007629394531
    5. ' [' → logprob: -13.875007629394531
    6. '[-' → logprob: -14.250007629394531
    7. '```' → logprob: -14.625007629394531
    8. '][' → logprob: -14.875007629394531
    9. '])' → logprob: -15.125007629394531
    10. '[
' → logprob: -15.750007629394531

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.455048449221067e-05
    2. ' ' → logprob: -10.250054359436035
    3. '2' → logprob: -11.500054359436035
    4. '])' → logprob: -12.750054359436035
    5. ']' → logprob: -13.375054359436035
    6. '3' → logprob: -13.750054359436035
    7. '   ' → logprob: -13.875054359436035
    8. '[' → logprob: -14.500054359436035
    9. '][' → logprob: -14.937554359436035
    10. '4' → logprob: -15.125054359436035

Token 55: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013347391970455647
    2. '])' → logprob: -4.388347625732422
    3. ' )' → logprob: -7.513347625732422
    4. ')
' → logprob: -9.513347625732422
    5. ']' → logprob: -10.013347625732422
    6. '   ' → logprob: -10.138347625732422
    7. '）' → logprob: -10.513347625732422
    8. ' ])' → logprob: -10.763347625732422
    9. ')])' → logprob: -10.763347625732422
    10. '       ' → logprob: -10.888347625732422

Token 56: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5719864368438721
    2. ' ' → logprob: -1.446986436843872
    3. 'for' → logprob: -2.946986436843872
    4. ' for' → logprob: -3.196986436843872
    5. '    ' → logprob: -3.446986436843872
    6. '       ' → logprob: -3.571986436843872
    7. ' 
' → logprob: -4.446986198425293
    8. ')' → logprob: -4.571986198425293
    9. '<|end|>' → logprob: -5.071986198425293
    10. '    
' → logprob: -5.571986198425293

Token 57: ' t' (ID: 260)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5636605620384216
    2. 'for' → logprob: -0.9386605620384216
    3. ' ' → logprob: -3.6886606216430664
    4. '<|end|>' → logprob: -5.563660621643066
    5. '   ' → logprob: -5.688660621643066
    6. '    ' → logprob: -5.938660621643066
    7. 'chars' → logprob: -6.563660621643066
    8. ' chars' → logprob: -6.688660621643066
    9. ')' → logprob: -7.188660621643066
    10. 'times' → logprob: -8.063660621643066

Token 58: 'list' (ID: 2641)
  Prédit: 'imes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.280337393283844
    2. 'ime' → logprob: -1.7803373336791992
    3. ' =' → logprob: -2.905337333679199
    4. '=' → logprob: -4.280337333679199
    5. 'im' → logprob: -6.280337333679199
    6. 'otal' → logprob: -6.405337333679199
    7. 'ype' → logprob: -7.155337333679199
    8. 'o' → logprob: -7.530337333679199
    9. 'i' → logprob: -8.0303373336792
    10. 'ext' → logprob: -8.6553373336792

Token 59: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4753781259059906
    2. ' =' → logprob: -0.975378155708313
    3. '=[]' → logprob: -6.850378036499023
    4. 'imes' → logprob: -8.725378036499023
    5. 'ime' → logprob: -10.225378036499023
    6. 'okens' → logprob: -10.725378036499023
    7. 's' → logprob: -12.225378036499023
    8. '[]' → logprob: -12.600378036499023
    9. ',' → logprob: -13.350378036499023
    10. 'imestamps' → logprob: -13.600378036499023

Token 60: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.0801423788070679
    2. 'data' → logprob: -1.4551423788070679
    3. '[]' → logprob: -1.5801423788070679
    4. ' data' → logprob: -1.7051423788070679
    5. 'list' → logprob: -4.330142498016357
    6. ' [' → logprob: -4.580142498016357
    7. ' list' → logprob: -5.080142498016357
    8. '[data' → logprob: -5.330142498016357
    9. '[' → logprob: -6.080142498016357
    10. 'input' → logprob: -6.830142498016357

Token 61: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.39022213220596313
    2. '(data' → logprob: -1.3902220726013184
    3. '(' → logprob: -2.8902220726013184
    4. '()' → logprob: -4.140222072601318
    5. '(range' → logprob: -6.390222072601318
    6. '(input' → logprob: -7.765222072601318
    7. '(int' → logprob: -8.390222549438477
    8. '(t' → logprob: -9.765222549438477
    9. '(set' → logprob: -9.765222549438477
    10. 'data' → logprob: -10.140222549438477

Token 62: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0028546862304210663
    2. '(str' → logprob: -6.127854824066162
    3. '(' → logprob: -7.377854824066162
    4. '(lambda' → logprob: -10.252854347229004
    5. ')' → logprob: -12.502854347229004
    6. '(input' → logprob: -12.627854347229004
    7. '(float' → logprob: -14.752854347229004
    8. '=int' → logprob: -15.127854347229004
    9. '<int' → logprob: -15.127854347229004
    10. '[int' → logprob: -15.377854347229004

Token 63: ',' (ID: 11)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.0025785129982978106
    2. '(' → logprob: -6.5025787353515625
    3. '(input' → logprob: -7.3775787353515625
    4. ',data' → logprob: -8.502578735351562
    5. ')data' → logprob: -9.377578735351562
    6. '<|end|>' → logprob: -9.377578735351562
    7. ')' → logprob: -10.127578735351562
    8. '<|end|>' → logprob: -11.877578735351562
    9. ')(' → logprob: -12.502578735351562
    10. ',input' → logprob: -12.627578735351562

Token 64: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.34924986958503723
    2. 'data' → logprob: -1.2242498397827148
    3. ' input' → logprob: -7.724249839782715
    4. 'input' → logprob: -7.974249839782715
    5. ')data' → logprob: -11.974249839782715
    6. '(data' → logprob: -12.224249839782715
    7. '   ' → logprob: -13.349249839782715
    8. ')' → logprob: -13.599249839782715
    9. '	data' → logprob: -14.099249839782715
    10. '<data' → logprob: -14.474249839782715

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09458217024803162
    2. '(data' → logprob: -2.8445820808410645
    3. '(' → logprob: -3.9695820808410645
    4. '[data' → logprob: -5.2195820808410645
    5. '.split' → logprob: -6.0945820808410645
    6. '.readline' → logprob: -6.4695820808410645
    7. 'data' → logprob: -6.7195820808410645
    8. ')' → logprob: -7.5945820808410645
    9. '.setdefault' → logprob: -7.7195820808410645
    10. '   ' → logprob: -8.344582557678223

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00271618808619678
    2. '[' → logprob: -6.377716064453125
    3. '])' → logprob: -8.627716064453125
    4. '3' → logprob: -8.752716064453125
    5. '   ' → logprob: -9.002716064453125
    6. '(' → logprob: -9.002716064453125
    7. ']))' → logprob: -9.127716064453125
    8. ' ' → logprob: -9.502716064453125
    9. '1' → logprob: -9.627716064453125
    10. ']' → logprob: -10.002716064453125

Token 67: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12795519828796387
    2. ':]' → logprob: -2.127955198287964
    3. ' :' → logprob: -7.377955436706543
    4. ':(' → logprob: -8.627955436706543
    5. ':m' → logprob: -9.127955436706543
    6. ':].' → logprob: -10.252955436706543
    7. ' :]' → logprob: -11.377955436706543
    8. '   ' → logprob: -11.502955436706543
    9. ':],' → logprob: -11.627955436706543
    10. '2' → logprob: -11.752955436706543

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010374028235673904
    2. ']))' → logprob: -4.760374069213867
    3. ' ' → logprob: -6.885374069213867
    4. '(' → logprob: -8.260374069213867
    5. '   ' → logprob: -8.510374069213867
    6. ']' → logprob: -9.385374069213867
    7. 'm' → logprob: -9.885374069213867
    8. '])' → logprob: -10.385374069213867
    9. ']))
' → logprob: -11.135374069213867
    10. '  ' → logprob: -11.135374069213867

Token 69: '+m' (ID: 139456)
  Prédit: '+m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+m' → logprob: -0.010993706062436104
    2. '+' → logprob: -5.010993480682373
    3. '2' → logprob: -5.635993480682373
    4. ' +' → logprob: -8.010993957519531
    5. '+n' → logprob: -8.135993957519531
    6. 'm' → logprob: -10.385993957519531
    7. '   ' → logprob: -11.010993957519531
    8. ' ' → logprob: -11.260993957519531
    9. '    ' → logprob: -11.885993957519531
    10. '(' → logprob: -13.385993957519531

Token 70: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.004297776613384485
    2. ']' → logprob: -5.504297733306885
    3. ']))
' → logprob: -9.004298210144043
    4. ' ]' → logprob: -10.254298210144043
    5. '])' → logprob: -11.129298210144043
    6. '))' → logprob: -11.254298210144043
    7. '   ' → logprob: -11.504298210144043
    8. ']))

' → logprob: -12.129298210144043
    9. '])))' → logprob: -12.254298210144043
    10. '']))' → logprob: -13.004298210144043

Token 71: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4564620852470398
    2. '       ' → logprob: -1.9564621448516846
    3. '
' → logprob: -2.2064621448516846
    4. ')' → logprob: -3.2064621448516846
    5. ' for' → logprob: -3.8314621448516846
    6. 'for' → logprob: -4.2064619064331055
    7. '    
' → logprob: -4.3314619064331055
    8. '        
' → logprob: -4.9564619064331055
    9. ')
' → logprob: -5.4564619064331055
    10. '<|end|>' → logprob: -5.7064619064331055

Token 72: ' chars' (ID: 47991)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25798511505126953
    2. ')' → logprob: -3.1329851150512695
    3. '<|end|>' → logprob: -3.3829851150512695
    4. 'for' → logprob: -3.5079851150512695
    5. ' for' → logprob: -3.7579851150512695
    6. ' ' → logprob: -3.7579851150512695
    7. '       ' → logprob: -4.3829851150512695
    8. 'times' → logprob: -4.3829851150512695
    9. '
' → logprob: -4.6329851150512695
    10. ' times' → logprob: -5.0079851150512695

Token 73: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.09587061405181885
    2. '.' → logprob: -2.5958704948425293
    3. '.append' → logprob: -4.095870494842529
    4. ' .' → logprob: -8.595870971679688
    5. ' +=' → logprob: -12.345870971679688
    6. ' .=' → logprob: -13.345870971679688
    7. '.=' → logprob: -13.845870971679688
    8. '.ext' → logprob: -13.970870971679688
    9. '.update' → logprob: -14.470870971679688
    10. '.app' → logprob: -14.845870971679688

Token 74: '(name' (ID: 5587)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4884912669658661
    2. '(name' → logprob: -0.9884912967681885
    3. '(' → logprob: -4.488491058349609
    4. '(t' → logprob: -6.238491058349609
    5. '([' → logprob: -6.863491058349609
    6. 'name' → logprob: -10.48849105834961
    7. '(data' → logprob: -11.86349105834961
    8. '(([' → logprob: -11.86349105834961
    9. '(n' → logprob: -11.98849105834961
    10. '(m' → logprob: -12.73849105834961

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001295000547543168
    2. ',' → logprob: -7.00129508972168
    3. ',)' → logprob: -8.37629508972168
    4. ' )' → logprob: -9.37629508972168
    5. ')
' → logprob: -10.62629508972168
    6. ',
' → logprob: -11.37629508972168
    7. '))' → logprob: -11.50129508972168
    8. '),' → logprob: -12.62629508972168
    9. ',:)' → logprob: -13.00129508972168
    10. '`)' → logprob: -13.00129508972168

Token 76: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0824873074889183
    2. '<|end|>' → logprob: -2.7074873447418213
    3. '    
' → logprob: -5.832487106323242
    4. ' for' → logprob: -5.957487106323242
    5. 'for' → logprob: -6.207487106323242
    6. '       ' → logprob: -6.582487106323242
    7. '
' → logprob: -6.707487106323242
    8. '    ' → logprob: -7.457487106323242
    9. '<|end|>' → logprob: -7.457487106323242
    10. ' ' → logprob: -8.332487106323242

Token 77: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1835867315530777
    2. ' for' → logprob: -1.9335867166519165
    3. '   ' → logprob: -3.933586835861206
    4. 'times' → logprob: -6.058586597442627
    5. ' times' → logprob: -7.558586597442627
    6. '
' → logprob: -8.558587074279785
    7. '```' → logprob: -8.558587074279785
    8. '       ' → logprob: -9.308587074279785
    9. '	for' → logprob: -9.933587074279785
    10. ' ' → logprob: -10.433587074279785

Token 78: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5149272084236145
    2. 't' → logprob: -1.6399271488189697
    3. ' time' → logprob: -2.3899271488189697
    4. 'time' → logprob: -2.6399271488189697
    5. 'num' → logprob: -4.639927387237549
    6. ' num' → logprob: -4.764927387237549
    7. ' x' → logprob: -5.264927387237549
    8. 'x' → logprob: -5.764927387237549
    9. 'score' → logprob: -5.764927387237549
    10. ' score' → logprob: -5.889927387237549

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01309058628976345
    2. 'in' → logprob: -4.38809061050415
    3. 'ime' → logprob: -7.51309061050415
    4. 'imes' → logprob: -11.388090133666992
    5. 'i' → logprob: -11.638090133666992
    6. ' ' → logprob: -12.138090133666992
    7. '_' → logprob: -13.138090133666992
    8. ' i' → logprob: -13.638090133666992
    9. 'list' → logprob: -14.013090133666992
    10. 'time' → logprob: -14.013090133666992

Token 80: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.4740946590900421
    2. 't' → logprob: -0.9740946292877197
    3. '	t' → logprob: -12.22409439086914
    4. ' ' → logprob: -12.59909439086914
    5. 'tml' → logprob: -13.22409439086914
    6. '    ' → logprob: -13.47409439086914
    7. '`t' → logprob: -13.72409439086914
    8. '   ' → logprob: -13.97409439086914
    9. '_t' → logprob: -14.22409439086914
    10. '(t' → logprob: -14.59909439086914

Token 81: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10387817025184631
    2. 'ist' → logprob: -2.4788782596588135
    3. 't' → logprob: -4.978878021240234
    4. 'st' → logprob: -6.228878021240234
    5. 'lst' → logprob: -6.228878021240234
    6. 'times' → logprob: -6.478878021240234
    7. 's' → logprob: -6.603878021240234
    8. ' t' → logprob: -7.978878021240234
    9. ' times' → logprob: -8.603878021240234
    10. '   ' → logprob: -9.478878021240234

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025225074496120214
    2. ':
' → logprob: -6.1275224685668945
    3. '       ' → logprob: -8.377522468566895
    4. '):' → logprob: -10.127522468566895
    5. ' :' → logprob: -10.627522468566895
    6. '   ' → logprob: -11.002522468566895
    7. '           ' → logprob: -12.127522468566895
    8. '<|end|>' → logprob: -12.377522468566895
    9. '):
' → logprob: -12.752522468566895
    10. '<|end|>' → logprob: -13.002522468566895

Token 83: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2507460415363312
    2. '           ' → logprob: -1.6257460117340088
    3. ' times' → logprob: -4.125746250152588
    4. 'times' → logprob: -5.000746250152588
    5. ' if' → logprob: -6.375746250152588
    6. 'if' → logprob: -8.50074577331543
    7. '```' → logprob: -9.87574577331543
    8. '	       ' → logprob: -10.37574577331543
    9. '   ' → logprob: -10.37574577331543
    10. '        
' → logprob: -10.87574577331543

Token 84: ' if' (ID: 538)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.10951633006334305
    2. '       ' → logprob: -3.1095163822174072
    3. 'times' → logprob: -3.3595163822174072
    4. ' if' → logprob: -3.8595163822174072
    5. 'if' (adapté à ' if') → logprob: -6.984516143798828
    6. '           ' → logprob: -7.234516143798828
    7. '   ' → logprob: -7.484516143798828
    8. '    ' → logprob: -7.484516143798828
    9. '        ' → logprob: -8.109516143798828
    10. '_times' → logprob: -10.234516143798828

Token 85: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.0013526180991902947
    2. 't' → logprob: -6.626352787017822
    3. ' ' → logprob: -11.376352310180664
    4. ' times' → logprob: -11.376352310180664
    5. ' ' → logprob: -13.251352310180664
    6. 'times' → logprob: -13.751352310180664
    7. ' not' → logprob: -14.251352310180664
    8. '<|end|>' → logprob: -17.126352310180664
    9. '_t' → logprob: -17.251352310180664
    10. ' time' → logprob: -17.501352310180664

Token 86: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4312722980976105
    2. ' not' → logprob: -1.056272268295288
    3. 'in' → logprob: -6.681272506713867
    4. 'not' → logprob: -6.681272506713867
    5. ' ' → logprob: -10.181272506713867
    6. 't' → logprob: -12.306272506713867
    7. ' t' → logprob: -12.431272506713867
    8. '   ' → logprob: -12.931272506713867
    9. '<|end|>' → logprob: -13.181272506713867
    10. ')' → logprob: -13.181272506713867

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006736095994710922
    2. 'in' → logprob: -5.1317362785339355
    3. ' times' → logprob: -7.2567362785339355
    4. 'times' → logprob: -9.631735801696777
    5. '<|end|>' → logprob: -10.756735801696777
    6. ' ' → logprob: -11.381735801696777
    7. '<|end|>' → logprob: -14.381735801696777
    8. 'imes' → logprob: -14.506735801696777
    9. ')' → logprob: -14.881735801696777
    10. ' to' → logprob: -15.006735801696777

Token 88: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.3484862446784973
    2. 'times' → logprob: -1.2234861850738525
    3. '(times' → logprob: -11.848485946655273
    4. 'time' → logprob: -11.973485946655273
    5. ' ' → logprob: -12.410985946655273
    6. ' time' → logprob: -12.598485946655273
    7. ')' → logprob: -12.598485946655273
    8. '_times' → logprob: -12.785985946655273
    9. '.times' → logprob: -13.410985946655273
    10. '   ' → logprob: -13.410985946655273

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019185843120794743
    2. ']:' → logprob: -9.125191688537598
    3. '):' → logprob: -10.250191688537598
    4. ':
' → logprob: -10.750191688537598
    5. ' :' → logprob: -11.375191688537598
    6. '.keys' → logprob: -12.625191688537598
    7. '<|end|>' → logprob: -12.875191688537598
    8. ']' → logprob: -13.250191688537598
    9. '[' → logprob: -13.625191688537598
    10. ':

' → logprob: -13.875191688537598

Token 90: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11901585757732391
    2. ' times' → logprob: -2.24401593208313
    3. '           ' → logprob: -6.119015693664551
    4. ':' → logprob: -6.244015693664551
    5. 'times' → logprob: -6.494015693664551
    6. ' :' → logprob: -9.11901569366455
    7. ':
' → logprob: -9.24401569366455
    8. '<|end|>' → logprob: -9.61901569366455
    9. '       ' → logprob: -9.86901569366455
    10. '_times' → logprob: -10.24401569366455

Token 91: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.04229199141263962
    2. 'times' (adapté à ' times') → logprob: -3.2922918796539307
    3. '               ' → logprob: -6.04229211807251
    4. '           ' → logprob: -7.04229211807251
    5. '                   ' → logprob: -7.04229211807251
    6. '       ' → logprob: -10.292291641235352
    7. '   ' → logprob: -10.792291641235352
    8. ' ' → logprob: -11.042291641235352
    9. '_times' → logprob: -11.417291641235352
    10. '(times' → logprob: -12.042291641235352

Token 92: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.011076119728386402
    2. '[' → logprob: -4.511075973510742
    3. '=' → logprob: -11.386075973510742
    4. ']' → logprob: -12.261075973510742
    5. ' =' → logprob: -12.511075973510742
    6. ' [' → logprob: -13.261075973510742
    7. '[i' → logprob: -13.636075973510742
    8. ' t' → logprob: -13.886075973510742
    9. '[n' → logprob: -14.011075973510742
    10. '[]' → logprob: -14.636075973510742

Token 93: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0055476087145507336
    2. ']=' → logprob: -5.380547523498535
    3. '=' → logprob: -7.255547523498535
    4. ' =' → logprob: -9.130547523498535
    5. ' ]' → logprob: -9.130547523498535
    6. ')' → logprob: -13.505547523498535
    7. '']' → logprob: -14.255547523498535
    8. '"]' → logprob: -15.005547523498535
    9. '   ' → logprob: -15.755547523498535
    10. '[' → logprob: -15.755547523498535

Token 94: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022808849811554
    2. ' =' → logprob: -1.9102281332015991
    3. '<|end|>' → logprob: -13.53522777557373
    4. ']' → logprob: -14.28522777557373
    5. ']=' → logprob: -14.53522777557373
    6. '=[]' → logprob: -14.91022777557373
    7. ')' → logprob: -15.28522777557373
    8. ' ' → logprob: -15.28522777557373
    9. '=
' → logprob: -15.66022777557373
    10. '=

' → logprob: -16.285228729248047

Token 95: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36347663402557373
    2. '1' → logprob: -1.2384766340255737
    3. ' ' → logprob: -4.988476753234863
    4. '[]' → logprob: -4.988476753234863
    5. '[' → logprob: -7.738476753234863
    6. 'set' → logprob: -7.988476753234863
    7. ' []' → logprob: -8.238476753234863
    8. ' [' → logprob: -10.238476753234863
    9. 'name' → logprob: -10.363476753234863
    10. '[]
' → logprob: -10.363476753234863

Token 96: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001954563893377781
    2. '            ' → logprob: -7.501954555511475
    3. '<|end|>' → logprob: -7.626954555511475
    4. '            
' → logprob: -7.876954555511475
    5. ' ' → logprob: -8.501955032348633
    6. '[' → logprob: -9.501955032348633
    7. ' 
' → logprob: -9.876955032348633
    8. '    ' → logprob: -10.376955032348633
    9. '                ' → logprob: -10.626955032348633
    10. '<|end|>' → logprob: -10.751955032348633

Token 97: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' (adapté à ' times') → logprob: -0.4744427502155304
    2. ' times' → logprob: -0.974442720413208
    3. '           ' → logprob: -7.974442958831787
    4. '       ' → logprob: -11.349442481994629
    5. '               ' → logprob: -12.224442481994629
    6. '   ' → logprob: -13.724442481994629
    7. ' ' → logprob: -14.224442481994629
    8. '(times' → logprob: -14.474442481994629
    9. '.times' → logprob: -14.849442481994629
    10. '            
' → logprob: -14.974442481994629

Token 98: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. 't' → logprob: -17.875001907348633
    4. ' [' → logprob: -18.250001907348633
    5. '	t' → logprob: -20.500001907348633
    6. '   ' → logprob: -20.750001907348633
    7. '           ' → logprob: -21.250001907348633
    8. '       ' → logprob: -21.500001907348633
    9. '[T' → logprob: -21.500001907348633
    10. '.setdefault' → logprob: -21.625001907348633

Token 99: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.015262283384799957
    2. '.append' → logprob: -4.265262126922607
    3. '.' → logprob: -6.890262126922607
    4. ' ].' → logprob: -10.265262603759766
    5. ').' → logprob: -10.390262603759766
    6. ']' → logprob: -12.265262603759766
    7. '}.' → logprob: -12.390262603759766
    8. 'append' → logprob: -12.640262603759766
    9. ' .' → logprob: -13.640262603759766
    10. '.add' → logprob: -15.265262603759766

Token 100: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0206720617134124e-05
    2. ' append' → logprob: -11.50001049041748
    3. '.append' → logprob: -18.375009536743164
    4. 'add' → logprob: -18.625009536743164
    5. 'insert' → logprob: -19.375009536743164
    6. 'appen' → logprob: -19.875009536743164
    7. '	append' → logprob: -20.125009536743164
    8. 'push' → logprob: -20.375009536743164
    9. 'extend' → logprob: -20.500009536743164
    10. 'Append' → logprob: -21.125009536743164

Token 101: '(name' (ID: 5587)
  Prédit: '(name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(name' → logprob: -0.0019546831026673317
    2. 'name' → logprob: -6.251954555511475
    3. '(' → logprob: -10.876955032348633
    4. ' name' → logprob: -11.876955032348633
    5. '(n' → logprob: -16.251955032348633
    6. ',name' → logprob: -16.626955032348633
    7. '((' → logprob: -16.876955032348633
    8. ''name' → logprob: -17.251955032348633
    9. '{name' → logprob: -17.376955032348633
    10. '[name' → logprob: -18.251955032348633

Token 102: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ')
' → logprob: -12.625005722045898
    3. ' )' → logprob: -13.000005722045898
    4. '       ' → logprob: -15.625005722045898
    5. '))' → logprob: -16.1250057220459
    6. ')n' → logprob: -16.8750057220459
    7. ')`' → logprob: -17.1250057220459
    8. '   ' → logprob: -17.1250057220459
    9. ')return' → logprob: -17.6250057220459
    10. '())' → logprob: -17.8750057220459

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2351362556219101
    2. 'for' → logprob: -2.4851362705230713
    3. ' ' → logprob: -3.4851362705230713
    4. '\n' → logprob: -3.9851362705230713
    5. ')' → logprob: -4.360136032104492
    6. '#' → logprob: -4.360136032104492
    7. '    
' → logprob: -4.610136032104492
    8. ' for' → logprob: -4.985136032104492
    9. '    ' → logprob: -5.735136032104492
    10. ':' → logprob: -5.860136032104492

Token 104: ' points' (ID: 5571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1999952346086502
    2. 'for' → logprob: -2.074995279312134
    3. ' for' → logprob: -3.824995279312134
    4. 't' → logprob: -5.074995040893555
    5. '    
' → logprob: -5.449995040893555
    6. 'times' → logprob: -5.949995040893555
    7. '\n' → logprob: -6.074995040893555
    8. '
' → logprob: -6.199995040893555
    9. 'sorted' → logprob: -6.199995040893555
    10. 'max' → logprob: -6.324995040893555

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030302857980132103
    2. '=' → logprob: -3.5303027629852295
    3. 's' → logprob: -8.280303001403809
    4. ' ' → logprob: -9.280303001403809
    5. '[' → logprob: -9.280303001403809
    6. '.setdefault' → logprob: -9.905303001403809
    7. '_' → logprob: -11.155303001403809
    8. '.' → logprob: -11.280303001403809
    9. '<|end|>' → logprob: -12.030303001403809
    10. ')' → logprob: -12.530303001403809

Token 106: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.09117338806390762
    2. ' {}' → logprob: -2.7161734104156494
    3. '{' → logprob: -4.21617317199707
    4. ' {' → logprob: -5.96617317199707
    5. '[]' → logprob: -6.59117317199707
    6. '0' → logprob: -6.96617317199707
    7. ' ' → logprob: -7.84117317199707
    8. ' []' → logprob: -8.09117317199707
    9. ' [' → logprob: -8.21617317199707
    10. '[' → logprob: -8.46617317199707

Token 107: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.35811781883239746
    2. 'char' → logprob: -1.3581178188323975
    3. '}' → logprob: -3.3581178188323975
    4. 'name' → logprob: -5.358118057250977
    5. 'ch' → logprob: -6.233118057250977
    6. 'k' → logprob: -6.608118057250977
    7. 'x' → logprob: -8.108118057250977
    8. '   ' → logprob: -8.358118057250977
    9. '})' → logprob: -9.483118057250977
    10. 'chr' → logprob: -9.483118057250977

Token 108: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9743012671824545e-05
    2. ' :' → logprob: -11.000020027160645
    3. '0' → logprob: -13.375020027160645
    4. '1' → logprob: -15.000020027160645
    5. ':i' → logprob: -15.000020027160645
    6. ':index' → logprob: -16.500019073486328
    7. '=' → logprob: -16.625019073486328
    8. '   ' → logprob: -16.750019073486328
    9. ':c' → logprob: -17.125019073486328
    10. '```' → logprob: -17.125019073486328

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0337020643055439
    2. ' ' → logprob: -3.4087021350860596
    3. '100' → logprob: -10.90870189666748
    4. '   ' → logprob: -11.15870189666748
    5. '10' → logprob: -12.03370189666748
    6. '1' → logprob: -12.65870189666748
    7. 'n' → logprob: -13.03370189666748
    8. 'len' → logprob: -13.53370189666748
    9. '  ' → logprob: -13.65870189666748
    10. '}' → logprob: -13.90870189666748

Token 110: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.019213970750570297
    2. 'for' → logprob: -4.019214153289795
    3. ',' → logprob: -8.019213676452637
    4. '   ' → logprob: -8.519213676452637
    5. ' ' → logprob: -8.519213676452637
    6. '}' → logprob: -8.644213676452637
    7. '	for' → logprob: -9.394213676452637
    8. '
' → logprob: -10.769213676452637
    9. ' }' → logprob: -11.144213676452637
    10. '    ' → logprob: -11.394213676452637

Token 111: ' c' (ID: 274)
  Prédit: ' chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chars' → logprob: -0.5760327577590942
    2. 'chars' → logprob: -0.8260327577590942
    3. '(chars' → logprob: -9.326032638549805
    4. 'c' → logprob: -13.076032638549805
    5. '_chars' → logprob: -14.076032638549805
    6. 'char' → logprob: -14.076032638549805
    7. ' c' → logprob: -15.076032638549805
    8. 'Chars' → logprob: -15.951032638549805
    9. ' char' → logprob: -16.701032638549805
    10. ' ' → logprob: -16.701032638549805

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020597830414772034
    2. ' chars' → logprob: -4.1455979347229
    3. 'chars' → logprob: -5.8955979347229
    4. 'in' → logprob: -6.8955979347229
    5. 's' → logprob: -7.8955979347229
    6. 'c' → logprob: -8.895597457885742
    7. ' c' → logprob: -9.270597457885742
    8. '_chars' → logprob: -9.395597457885742
    9. '(chars' → logprob: -10.520597457885742
    10. 'char' → logprob: -10.520597457885742

Token 113: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.011054890230298042
    2. ' chars' → logprob: -4.511054992675781
    3. '(chars' → logprob: -11.886054992675781
    4. '   ' → logprob: -16.26105499267578
    5. 'char' → logprob: -16.51105499267578
    6. '_chars' → logprob: -17.51105499267578
    7. 'Chars' → logprob: -18.38605499267578
    8. ' ' → logprob: -18.51105499267578
    9. '```' → logprob: -19.01105499267578
    10. 'range' → logprob: -19.01105499267578

Token 114: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.4498052223643754e-05
    2. '}
' → logprob: -11.875014305114746
    3. ' }' → logprob: -11.875014305114746
    4. ')' → logprob: -15.000014305114746
    5. '   ' → logprob: -16.250015258789062
    6. '}

' → logprob: -16.375015258789062
    7. ',' → logprob: -17.000015258789062
    8. ' ' → logprob: -17.875015258789062
    9. '
' → logprob: -18.125015258789062
    10. '}\' → logprob: -18.625015258789062

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04302739351987839
    2. ' for' → logprob: -3.543027400970459
    3. 'for' → logprob: -4.418027400970459
    4. '    
' → logprob: -7.043027400970459
    5. '
' → logprob: -9.7930269241333
    6. ' times' → logprob: -10.1680269241333
    7. '<|end|>' → logprob: -10.2930269241333
    8. '   
' → logprob: -10.7930269241333
    9. 'times' → logprob: -11.4180269241333
    10. ' 
' → logprob: -11.5430269241333

Token 116: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.24246911704540253
    2. ' for' → logprob: -2.117469072341919
    3. '   ' → logprob: -2.367469072341919
    4. 'sorted' → logprob: -7.242469310760498
    5. '    
' → logprob: -9.24246883392334
    6. ' sorted' → logprob: -9.36746883392334
    7. 'times' → logprob: -9.36746883392334
    8. 'all' → logprob: -9.86746883392334
    9. 't' → logprob: -10.49246883392334
    10. ' ' → logprob: -10.61746883392334

Token 117: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.059321776032447815
    2. ' time' → logprob: -3.184321880340576
    3. ' key' → logprob: -4.309321880340576
    4. ' k' → logprob: -6.559321880340576
    5. 't' → logprob: -7.559321880340576
    6. ' ' → logprob: -8.434321403503418
    7. ' i' → logprob: -8.809321403503418
    8. ' point' → logprob: -9.746821403503418
    9. ' minute' → logprob: -10.246821403503418
    10. ' times' → logprob: -10.434321403503418

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003290471388027072
    2. 'in' → logprob: -5.75329065322876
    3. ',' → logprob: -9.253290176391602
    4. ' ' → logprob: -11.878290176391602
    5. ' ,' → logprob: -12.628290176391602
    6. 's' → logprob: -13.128290176391602
    7. ' i' → logprob: -13.253290176391602
    8. '	in' → logprob: -13.878290176391602
    9. '  ' → logprob: -15.003290176391602
    10. ',in' → logprob: -15.253290176391602

Token 119: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.47994083166122437
    2. ' sorted' → logprob: -1.4799408912658691
    3. 'times' → logprob: -2.604940891265869
    4. 'sorted' → logprob: -2.854940891265869
    5. ' range' → logprob: -3.979940891265869
    6. 'range' → logprob: -5.729940891265869
    7. ' ' → logprob: -10.604940414428711
    8. '(times' → logprob: -11.229940414428711
    9. '   ' → logprob: -11.604940414428711
    10. '(sorted' → logprob: -11.729940414428711

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003933768020942807
    2. '.values' → logprob: -8.50039291381836
    3. '.keys' → logprob: -8.75039291381836
    4. ':
' → logprob: -10.87539291381836
    5. '[' → logprob: -12.75039291381836
    6. '.' → logprob: -12.75039291381836
    7. 'values' → logprob: -13.00039291381836
    8. ' :' → logprob: -13.37539291381836
    9. '):' → logprob: -14.62539291381836
    10. ':

' → logprob: -14.87539291381836

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08947242051362991
    2. ':' → logprob: -2.839472532272339
    3. '   ' → logprob: -4.08947229385376
    4. ':
' → logprob: -5.33947229385376
    5. ' times' → logprob: -5.58947229385376
    6. ' if' → logprob: -7.46447229385376
    7. 'times' → logprob: -7.71447229385376
    8. '[' → logprob: -9.089472770690918
    9. 'if' → logprob: -9.464472770690918
    10. ',' → logprob: -9.589472770690918

Token 122: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3255223333835602
    2. 'times' → logprob: -2.0755224227905273
    3. 'names' → logprob: -2.4505224227905273
    4. '   ' → logprob: -4.575522422790527
    5. ' if' → logprob: -4.575522422790527
    6. 'participants' → logprob: -4.700522422790527
    7. 'players' → logprob: -4.950522422790527
    8. 'vals' → logprob: -5.075522422790527
    9. 'values' → logprob: -5.325522422790527
    10. 'lst' → logprob: -5.575522422790527

Token 123: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2581143379211426
    2. '=len' → logprob: -1.8831143379211426
    3. ' =' → logprob: -2.6331143379211426
    4. 'en' → logprob: -6.258114337921143
    5. 'ength' → logprob: -7.758114337921143
    6. '=[]' → logprob: -7.883114337921143
    7. 'ist' → logprob: -8.383113861083984
    8. 'ens' → logprob: -9.383113861083984
    9. 'len' → logprob: -9.758113861083984
    10. 'names' → logprob: -10.008113861083984

Token 124: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.26166239380836487
    2. ' len' → logprob: -1.5116623640060425
    3. ' times' → logprob: -5.386662483215332
    4. 'times' → logprob: -5.636662483215332
    5. '[len' → logprob: -6.636662483215332
    6. 'min' → logprob: -10.386662483215332
    7. 'sorted' → logprob: -10.386662483215332
    8. '[]' → logprob: -10.511662483215332
    9. '(len' → logprob: -10.511662483215332
    10. ' sorted' → logprob: -10.636662483215332

Token 125: '(times' (ID: 135653)
  Prédit: '(times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(times' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -13.000003814697266
    3. 'times' → logprob: -13.375003814697266
    4. ' times' → logprob: -16.125003814697266
    5. '(time' → logprob: -16.250003814697266
    6. ' (' → logprob: -16.625003814697266
    7. '(types' → logprob: -18.375003814697266
    8. '(points' → logprob: -18.625003814697266
    9. '(t' → logprob: -18.875003814697266
    10. '(tokens' → logprob: -19.750003814697266

Token 126: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -1.9981420336989686e-05
    2. ' [' → logprob: -11.125020027160645
    3. '[' → logprob: -13.125020027160645
    4. 't' → logprob: -14.000020027160645
    5. '```' → logprob: -14.625020027160645
    6. ')' → logprob: -14.750020027160645
    7. ')[' → logprob: -15.250020027160645
    8. '[
' → logprob: -15.250020027160645
    9. '(t' → logprob: -15.250020027160645
    10. '
' → logprob: -15.875020027160645

Token 127: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01483884360641241
    2. ')' → logprob: -4.639838695526123
    3. ' ])' → logprob: -5.764838695526123
    4. '])
' → logprob: -6.514838695526123
    5. ' )' → logprob: -8.514839172363281
    6. ')
' → logprob: -9.889839172363281
    7. ']' → logprob: -10.014839172363281
    8. ')])' → logprob: -10.264839172363281
    9. ' ])
' → logprob: -10.764839172363281
    10. ''])' → logprob: -10.889839172363281

Token 128: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22820435464382172
    2. ' if' → logprob: -1.853204369544983
    3. '
' → logprob: -3.4782042503356934
    4. 'if' → logprob: -4.978204250335693
    5. '       ' → logprob: -5.978204250335693
    6. '<|end|>' → logprob: -6.103204250335693
    7. ' for' → logprob: -6.353204250335693
    8. ' points' → logprob: -7.603204250335693
    9. ' 
' → logprob: -7.853204250335693
    10. ' ' → logprob: -7.853204250335693

Token 129: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8603613376617432
    2. ' if' → logprob: -1.1103613376617432
    3. 'for' (adapté à ' for') → logprob: -1.9853613376617432
    4. ' for' → logprob: -2.610361337661743
    5. '   ' → logprob: -3.735361337661743
    6. 'points' → logprob: -4.610361099243164
    7. ' points' → logprob: -6.110361099243164
    8. '       ' → logprob: -7.735361099243164
    9. ' ' → logprob: -9.610361099243164
    10. ' times' → logprob: -10.235361099243164

Token 130: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9278528094291687
    2. 'name' → logprob: -1.3028528690338135
    3. ' c' → logprob: -1.9278528690338135
    4. ' name' → logprob: -2.0528528690338135
    5. 'char' → logprob: -4.177852630615234
    6. 'p' → logprob: -4.802852630615234
    7. 'i' → logprob: -4.802852630615234
    8. ' p' → logprob: -5.302852630615234
    9. ' i' → logprob: -5.427852630615234
    10. ' player' → logprob: -5.552852630615234

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03964192047715187
    2. ' times' → logprob: -3.289641857147217
    3. 'times' → logprob: -7.039641857147217
    4. 'in' → logprob: -7.914641857147217
    5. ' ' → logprob: -8.039642333984375
    6. 's' → logprob: -11.289642333984375
    7. '  ' → logprob: -12.039642333984375
    8. '(times' → logprob: -12.539642333984375
    9. '   ' → logprob: -12.789642333984375
    10. 'imes' → logprob: -12.789642333984375

Token 132: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.001957298256456852
    2. 'times' → logprob: -6.251957416534424
    3. ' ' → logprob: -11.001956939697266
    4. ' set' → logprob: -12.126956939697266
    5. '(times' → logprob: -12.876956939697266
    6. ' points' → logprob: -13.501956939697266
    7. '   ' → logprob: -14.626956939697266
    8. ' range' → logprob: -14.876956939697266
    9. ' ' → logprob: -15.376956939697266
    10. '  ' → logprob: -15.376956939697266

Token 133: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -1.4021237802808173e-05
    2. 't' → logprob: -11.625014305114746
    3. ' [' → logprob: -13.625014305114746
    4. '[' → logprob: -13.750014305114746
    5. '[c' → logprob: -13.750014305114746
    6. '```' → logprob: -15.125014305114746
    7. '[
' → logprob: -15.750014305114746
    8. '[s' → logprob: -15.750014305114746
    9. '[[' → logprob: -15.875014305114746
    10. '

' → logprob: -16.12501335144043

Token 134: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.018805641680955887
    2. ']):' → logprob: -4.393805503845215
    3. '):' → logprob: -5.143805503845215
    4. ']' → logprob: -8.143805503845215
    5. ']:
' → logprob: -10.018805503845215
    6. ' ):' → logprob: -10.643805503845215
    7. '])' → logprob: -10.768805503845215
    8. ':' → logprob: -11.018805503845215
    9. ' ]' → logprob: -11.268805503845215
    10. ']):
' → logprob: -11.643805503845215

Token 135: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.510288655757904
    2. '           ' → logprob: -1.1352887153625488
    3. ':' → logprob: -3.010288715362549
    4. ' points' → logprob: -4.510288715362549
    5. '
' → logprob: -4.885288715362549
    6. ':
' → logprob: -5.385288715362549
    7. '               ' → logprob: -6.760288715362549
    8. '   ' → logprob: -7.260288715362549
    9. '(points' → logprob: -7.260288715362549
    10. 'points' → logprob: -7.635288715362549

Token 136: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.598795473575592
    2. '       ' → logprob: -0.973795473575592
    3. '               ' → logprob: -2.7237954139709473
    4. 'points' (adapté à ' points') → logprob: -5.598795413970947
    5. '   ' → logprob: -7.223795413970947
    6. '	points' → logprob: -7.473795413970947
    7. ' if' → logprob: -7.848795413970947
    8. '.points' → logprob: -7.848795413970947
    9. '_points' → logprob: -7.973795413970947
    10. ' ' → logprob: -8.348795890808105

Token 137: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00043162284418940544
    2. '[' → logprob: -7.750431537628174
    3. ' [' → logprob: -14.000432014465332
    4. '[C' → logprob: -17.250431060791016
    5. '[p' → logprob: -18.000431060791016
    6. '\[' → logprob: -18.500431060791016
    7. '```' → logprob: -18.625431060791016
    8. 'c' → logprob: -18.750431060791016
    9. '[cur' → logprob: -18.875431060791016
    10. '[t' → logprob: -18.875431060791016

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12696968019008636
    2. ']+=' → logprob: -2.126969575881958
    3. ']+' → logprob: -10.876969337463379
    4. ')' → logprob: -11.376969337463379
    5. '+=' → logprob: -12.251969337463379
    6. ' ]' → logprob: -12.376969337463379
    7. ' +=' → logprob: -13.626969337463379
    8. '+' → logprob: -14.751969337463379
    9. '}' → logprob: -15.376969337463379
    10. '[' → logprob: -15.626969337463379

Token 139: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12697504460811615
    2. ' +=' → logprob: -2.1269750595092773
    3. '+=(' → logprob: -10.876975059509277
    4. '+' → logprob: -11.251975059509277
    5. ']+=' → logprob: -11.876975059509277
    6. '=' → logprob: -12.501975059509277
    7. '[' → logprob: -13.876975059509277
    8. '+='' → logprob: -14.001975059509277
    9. '   ' → logprob: -14.251975059509277
    10. '-=' → logprob: -14.751975059509277

Token 140: ' l' (ID: 305)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.37511226534843445
    2. '
' → logprob: -1.7501122951507568
    3. '<|end|>' → logprob: -2.250112295150757
    4. '   ' → logprob: -4.000112056732178
    5. ' print' → logprob: -5.500112056732178
    6. ')' → logprob: -6.000112056732178
    7. '```' → logprob: -6.375112056732178
    8. '*' → logprob: -6.625112056732178
    9. '+' → logprob: -7.125112056732178
    10. '%' → logprob: -7.125112056732178

Token 142: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2480820268392563
    2. '   ' → logprob: -1.9980820417404175
    3. '<|end|>' → logprob: -3.248081922531128
    4. 'for' → logprob: -3.998081922531128
    5. ' for' → logprob: -4.623082160949707
    6. ' print' → logprob: -4.998082160949707
    7. '
' → logprob: -5.498082160949707
    8. ')' → logprob: -5.623082160949707
    9. '```' → logprob: -7.248082160949707
    10. '#' → logprob: -8.123082160949707

Token 143: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5793288946151733
    2. 'print' → logprob: -2.079329013824463
    3. 'sorted' → logprob: -2.329329013824463
    4. 'for' → logprob: -2.454329013824463
    5. '   ' → logprob: -3.079329013824463
    6. ' for' → logprob: -3.204329013824463
    7. ' max' → logprob: -3.704329013824463
    8. ' sorted' → logprob: -4.579329013824463
    9. ' print' → logprob: -5.579329013824463
    10. 'min' (adapté à ' min') → logprob: -7.204329013824463

Token 144: '_point' (ID: 15466)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.4527610242366791
    2. '_' → logprob: -1.9527610540390015
    3. '_point' → logprob: -1.9527610540390015
    4. '_pts' → logprob: -3.202760934829712
    5. '_p' → logprob: -4.077761173248291
    6. '_key' → logprob: -4.327761173248291
    7. '_val' → logprob: -4.952761173248291
    8. '_pt' → logprob: -6.577761173248291
    9. '_value' → logprob: -8.327760696411133
    10. '_char' → logprob: -8.452760696411133

Token 145: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35196352005004883
    2. '=' → logprob: -1.6019635200500488
    3. ' =' → logprob: -2.351963520050049
    4. '_' → logprob: -12.35196304321289
    5. '=s' → logprob: -12.60196304321289
    6. ',' → logprob: -13.72696304321289
    7. '_=' → logprob: -13.72696304321289
    8. ' ' → logprob: -14.97696304321289
    9. ' ' → logprob: -15.10196304321289
    10. '```' → logprob: -15.85196304321289

Token 146: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.160234272480011
    2. ' min' → logprob: -1.9102342128753662
    3. 'float' → logprob: -11.910234451293945
    4. ' float' → logprob: -12.910234451293945
    5. 'max' → logprob: -14.285234451293945
    6. '100' → logprob: -16.535234451293945
    7. ' max' → logprob: -16.910234451293945
    8. '(min' → logprob: -17.285234451293945
    9. ' ' → logprob: -17.410234451293945
    10. '   ' → logprob: -17.910234451293945

Token 147: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -7.226628895296017e-06
    2. 'points' → logprob: -12.250007629394531
    3. ' points' → logprob: -13.375007629394531
    4. '(' → logprob: -14.375007629394531
    5. '(point' → logprob: -16.00000762939453
    6. '	points' → logprob: -16.62500762939453
    7. ' (' → logprob: -16.87500762939453
    8. '(p' → logprob: -18.50000762939453
    9. '(
' → logprob: -19.25000762939453
    10. '(parts' → logprob: -20.12500762939453

Token 148: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.0001637300301808864
    2. '.' → logprob: -9.750164031982422
    3. '().' → logprob: -9.750164031982422
    4. ')' → logprob: -10.250164031982422
    5. ' .' → logprob: -11.625164031982422
    6. '.value' → logprob: -13.375164031982422
    7. ').' → logprob: -14.750164031982422
    8. 'values' → logprob: -14.875164031982422
    9. '()' → logprob: -15.000164031982422
    10. ' values' → logprob: -16.750164031982422

Token 149: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04637230932712555
    2. ')' → logprob: -3.296372413635254
    3. '()' → logprob: -4.796372413635254
    4. ' )' → logprob: -10.796372413635254
    5. ' ())' → logprob: -11.421372413635254
    6. '(' → logprob: -12.796372413635254
    7. '(),' → logprob: -13.671372413635254
    8. '())
' → logprob: -14.796372413635254
    9. '()
' → logprob: -15.546372413635254
    10. '()))' → logprob: -16.046371459960938

Token 150: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016960566863417625
    2. '   ' → logprob: -5.016960620880127
    3. ' for' → logprob: -5.141960620880127
    4. '<|end|>' → logprob: -6.016960620880127
    5. 'result' → logprob: -7.766960620880127
    6. 'for' → logprob: -7.891960620880127
    7. '    
' → logprob: -8.141960144042969
    8. 'print' → logprob: -9.016960144042969
    9. ' candidates' → logprob: -9.141960144042969
    10. 'min' → logprob: -9.141960144042969

Token 151: ' min' (ID: 1349)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2427072525024414
    2. ' winners' → logprob: -2.2427072525024414
    3. ' result' → logprob: -2.3677072525024414
    4. 'w' → logprob: -2.7427072525024414
    5. 'print' → logprob: -2.7427072525024414
    6. 'min' (adapté à ' min') → logprob: -2.8677072525024414
    7. 'for' → logprob: -3.1177072525024414
    8. ' for' → logprob: -3.2427072525024414
    9. 'res' → logprob: -3.3677072525024414
    10. ' losers' → logprob: -3.4927072525024414

Token 152: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.06095777079463005
    2. '_char' → logprob: -3.810957670211792
    3. '_c' → logprob: -4.810957908630371
    4. '_names' → logprob: -4.935957908630371
    5. '_point' → logprob: -5.060957908630371
    6. '_points' → logprob: -5.185957908630371
    7. '_name' → logprob: -5.310957908630371
    8. '_' → logprob: -6.310957908630371
    9. '_keys' → logprob: -6.685957908630371
    10. '_key' → logprob: -6.810957908630371

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602308303117752
    2. '=' → logprob: -1.9102308750152588
    3. ' =[' → logprob: -12.28523063659668
    4. '=[' → logprob: -13.78523063659668
    5. '=[]' → logprob: -13.91023063659668
    6. '＝' → logprob: -17.03523063659668
    7. ' ' → logprob: -17.28523063659668
    8. ' ' → logprob: -17.53523063659668
    9. '_' → logprob: -18.78523063659668
    10. 's' → logprob: -19.03523063659668

Token 154: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8669470548629761
    2. ' [' → logprob: -0.8669470548629761
    3. '[c' → logprob: -1.866947054862976
    4. '[name' → logprob: -6.241947174072266
    5. '[key' → logprob: -6.616947174072266
    6. '[k' → logprob: -7.491947174072266
    7. '[list' → logprob: -8.491947174072266
    8. '[min' → logprob: -8.866947174072266
    9. '[x' → logprob: -9.366947174072266
    10. '[class' → logprob: -9.366947174072266

Token 155: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.636475493200123e-05
    2. ' c' → logprob: -9.500076293945312
    3. 'k' → logprob: -14.000076293945312
    4. 'char' → logprob: -14.750076293945312
    5. 'ch' → logprob: -15.625076293945312
    6. '```' → logprob: -16.375076293945312
    7. 'x' → logprob: -17.500076293945312
    8. '(c' → logprob: -17.875076293945312
    9. '   ' → logprob: -17.875076293945312
    10. '[c' → logprob: -18.250076293945312

Token 156: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0009152670972980559
    2. 'for' → logprob: -7.000915050506592
    3. ' ' → logprob: -12.50091552734375
    4. '	for' → logprob: -16.87591552734375
    5. '```' → logprob: -18.37591552734375
    6. '   ' → logprob: -18.62591552734375
    7. '  ' → logprob: -18.62591552734375
    8. ' ' → logprob: -18.75091552734375
    9. ' 
' → logprob: -19.62591552734375
    10. '    ' → logprob: -19.75091552734375

Token 157: ' c' (ID: 274)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.4517771601676941
    2. ' chars' → logprob: -2.076777219772339
    3. 'chars' → logprob: -2.076777219772339
    4. 'points' → logprob: -2.201777219772339
    5. 'c' → logprob: -6.57677698135376
    6. ' c' → logprob: -7.32677698135376
    7. ' characters' → logprob: -9.826777458190918
    8. 'characters' → logprob: -10.326777458190918
    9. 'char' → logprob: -10.576777458190918
    10. ' ' → logprob: -10.951777458190918

Token 158: ',v' (ID: 30680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015393633395433426
    2. ',' → logprob: -4.8903937339782715
    3. 'in' → logprob: -4.8903937339782715
    4. ' points' → logprob: -9.515393257141113
    5. 'points' → logprob: -9.765393257141113
    6. 'c' → logprob: -10.140393257141113
    7. ',c' → logprob: -10.515393257141113
    8. 's' → logprob: -11.265393257141113
    9. ' ,' → logprob: -11.515393257141113
    10. ' ' → logprob: -11.765393257141113

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06198270246386528
    2. 'in' → logprob: -2.8119826316833496
    3. ' ' → logprob: -11.936983108520508
    4. 'import' → logprob: -12.436983108520508
    5. ',' → logprob: -13.436983108520508
    6. 'to' → logprob: -14.561983108520508
    7. 'inthe' → logprob: -15.186983108520508
    8. '	in' → logprob: -15.311983108520508
    9. '  ' → logprob: -15.311983108520508
    10. '<|end|>' → logprob: -15.436983108520508

Token 160: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.02975662797689438
    2. 'points' → logprob: -3.529756546020508
    3. '(points' → logprob: -12.529756546020508
    4. '.points' → logprob: -14.404756546020508
    5. '_points' → logprob: -14.779756546020508
    6. '	points' → logprob: -15.029756546020508
    7. ' pontos' → logprob: -15.529756546020508
    8. ' ' → logprob: -15.654756546020508
    9. 'Points' → logprob: -15.779756546020508
    10. '```' → logprob: -16.029756546020508

Token 161: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0011671261163428426
    2. 'items' → logprob: -7.126167297363281
    3. '.' → logprob: -9.251167297363281
    4. '.iteritems' → logprob: -9.251167297363281
    5. ' .' → logprob: -9.626167297363281
    6. 'in' → logprob: -10.501167297363281
    7. ' in' → logprob: -10.626167297363281
    8. 'points' → logprob: -10.876167297363281
    9. '.points' → logprob: -11.251167297363281
    10. '.Items' → logprob: -12.251167297363281

Token 162: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019414882408455014
    2. '()]' → logprob: -6.751941680908203
    3. ' ()' → logprob: -7.876941680908203
    4. 'if' → logprob: -8.751941680908203
    5. '(' → logprob: -9.876941680908203
    6. ' if' → logprob: -10.001941680908203
    7. 'items' → logprob: -10.376941680908203
    8. '(items' → logprob: -10.626941680908203
    9. '(lambda' → logprob: -10.626941680908203
    10. '(v' → logprob: -11.001941680908203

Token 163: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.029768308624625206
    2. 'if' → logprob: -3.529768228530884
    3. ' in' → logprob: -11.654767990112305
    4. 'in' → logprob: -12.404767990112305
    5. '()' → logprob: -12.779767990112305
    6. '    ' → logprob: -14.404767990112305
    7. '   ' → logprob: -14.404767990112305
    8. '        ' → logprob: -15.154767990112305
    9. ' ' → logprob: -15.154767990112305
    10. '       ' → logprob: -16.154767990112305

Token 164: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6931481957435608
    2. ' v' → logprob: -0.6931481957435608
    3. '	v' → logprob: -14.693148612976074
    4. '(v' → logprob: -15.318148612976074
    5. '    ' → logprob: -15.818148612976074
    6. ' ' → logprob: -16.693147659301758
    7. '   ' → logprob: -16.943147659301758
    8. '_v' → logprob: -17.068147659301758
    9. '.v' → logprob: -18.068147659301758
    10. '<v' → logprob: -18.693147659301758

Token 165: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759411454200745
    2. ' ==' → logprob: -0.8259411454200745
    3. ']==' → logprob: -14.07594108581543
    4. '=' → logprob: -14.70094108581543
    5. '==
' → logprob: -15.20094108581543
    6. ' ' → logprob: -16.07594108581543
    7. '()==' → logprob: -16.32594108581543
    8. ')==' → logprob: -16.95094108581543
    9. ' ' → logprob: -17.95094108581543
    10. '===' → logprob: -18.82594108581543

Token 166: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.061967797577381134
    2. ' min' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.436967849731445
    4. '	min' → logprob: -17.936967849731445
    5. '_min' → logprob: -18.061967849731445
    6. '(min' → logprob: -18.936967849731445
    7. '=min' → logprob: -18.936967849731445
    8. '[min' → logprob: -19.311967849731445
    9. '   ' → logprob: -19.561967849731445
    10. '  ' → logprob: -19.811967849731445

Token 167: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.318681188422488e-05
    2. 'point' → logprob: -12.25001335144043
    3. '_min' → logprob: -12.50001335144043
    4. 'min' → logprob: -12.50001335144043
    5. '_points' → logprob: -15.00001335144043
    6. 'oint' → logprob: -15.62501335144043
    7. '_char' → logprob: -16.37501335144043
    8. '_' → logprob: -17.00001335144043
    9. '(min' → logprob: -17.37501335144043
    10. 'Point' → logprob: -17.37501335144043

Token 168: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00988806877285242
    2. ']
' → logprob: -4.634888172149658
    3. ' ]' → logprob: -9.2598876953125
    4. ']
' → logprob: -10.8848876953125
    5. ']

' → logprob: -11.1348876953125
    6. ' ]
' → logprob: -12.7598876953125
    7. '   ' → logprob: -15.2598876953125
    8. ']

' → logprob: -16.2598876953125
    9. ']


' → logprob: -16.3848876953125
    10. '];' → logprob: -17.2598876953125

Token 169: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.36940014362335205
    2. '   ' → logprob: -1.244400143623352
    3. ' print' → logprob: -4.6194000244140625
    4. '
' → logprob: -4.6194000244140625
    5. '    
' → logprob: -7.8694000244140625
    6. '<|end|>' → logprob: -8.119400024414062
    7. '  
' → logprob: -9.869400024414062
    8. '[' → logprob: -10.119400024414062
    9. 'for' → logprob: -10.369400024414062
    10. ' for' → logprob: -10.619400024414062

Token 170: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12085215747356415
    2. 'min' → logprob: -2.24585223197937
    3. '   ' → logprob: -5.745851993560791
    4. 'for' → logprob: -6.245851993560791
    5. ' print' → logprob: -6.745851993560791
    6. ' min' → logprob: -7.495851993560791
    7. '
' → logprob: -7.620851993560791
    8. 'if' → logprob: -8.12085247039795
    9. ' for' → logprob: -8.99585247039795
    10. '    
' → logprob: -9.74585247039795

Token 171: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.09529867023229599
    2. '(' → logprob: -2.8452987670898438
    3. '(*' → logprob: -4.095298767089844
    4. '('' → logprob: -4.345298767089844
    5. '("' → logprob: -5.845298767089844
    6. '(sorted' → logprob: -8.345298767089844
    7. '(f' → logprob: -10.970298767089844
    8. '("("' → logprob: -12.345298767089844
    9. '(max' → logprob: -12.470298767089844
    10. '(len' → logprob: -13.095298767089844

Token 172: '_point' (ID: 15466)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -2.816093228830141e-06
    2. '(chars' → logprob: -13.12500286102295
    3. '_char' → logprob: -14.75000286102295
    4. '_' → logprob: -15.50000286102295
    5. '(' → logprob: -16.875001907348633
    6. 'chars' → logprob: -17.125001907348633
    7. '(_' → logprob: -17.250001907348633
    8. '_coords' → logprob: -18.000001907348633
    9. 'Chars' → logprob: -18.000001907348633
    10. '(min' → logprob: -18.500001907348633

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019780736416578293
    2. ',len' → logprob: -4.89478063583374
    3. ',min' → logprob: -5.26978063583374
    4. ')' → logprob: -5.39478063583374
    5. ',"' → logprob: -6.76978063583374
    6. ',end' → logprob: -8.019781112670898
    7. ' ,' → logprob: -8.394781112670898
    8. ',*' → logprob: -8.394781112670898
    9. ','' → logprob: -8.769781112670898
    10. ',max' → logprob: -9.269781112670898

Token 174: ' sorted' (ID: 20099)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6852918267250061
    2. '*' → logprob: -0.9352918267250061
    3. 'len' → logprob: -3.1852917671203613
    4. ''' → logprob: -3.3102917671203613
    5. 'sorted' → logprob: -4.185291767120361
    6. '"' → logprob: -5.310291767120361
    7. ' min' → logprob: -5.685291767120361
    8. ' *' → logprob: -7.560291767120361
    9. 'end' → logprob: -7.810291767120361
    10. ')' → logprob: -8.43529224395752

Token 175: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -10.500027656555176
    3. 'min' → logprob: -15.875027656555176
    4. '(
' → logprob: -18.000028610229492
    5. '[min' → logprob: -18.000028610229492
    6. ' (' → logprob: -18.750028610229492
    7. ',min' → logprob: -19.000028610229492
    8. '(max' → logprob: -19.125028610229492
    9. '(list' → logprob: -19.500028610229492
    10. ')' → logprob: -20.000028610229492

Token 176: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -9.412610233994201e-05
    2. '(min' → logprob: -9.375094413757324
    3. '_char' → logprob: -11.875094413757324
    4. '_min' → logprob: -13.875094413757324
    5. '(chars' → logprob: -14.500094413757324
    6. 'Chars' → logprob: -14.875094413757324
    7. 'chars' → logprob: -15.500094413757324
    8. '(' → logprob: -15.750094413757324
    9. '(_' → logprob: -16.375093460083008
    10. 'min' → logprob: -17.500093460083008

Token 177: ')[' (ID: 13637)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9368951916694641
    2. ')' → logprob: -1.1868951320648193
    3. '))' → logprob: -1.3118951320648193
    4. '()))' → logprob: -3.5618951320648193
    5. '()' → logprob: -5.436895370483398
    6. '])' → logprob: -7.686895370483398
    7. '()[' → logprob: -9.186895370483398
    8. ')))' → logprob: -9.561895370483398
    9. '(),' → logprob: -9.811895370483398
    10. ')[' → logprob: -10.061895370483398

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006965887732803822
    2. '[' → logprob: -7.875696659088135
    3. ')' → logprob: -9.000696182250977
    4. ' ' → logprob: -9.125696182250977
    5. '])' → logprob: -10.000696182250977
    6. '][' → logprob: -11.125696182250977
    7. ']' → logprob: -11.250696182250977
    8. ')[' → logprob: -12.875696182250977
    9. '   ' → logprob: -13.250696182250977
    10. '()[' → logprob: -13.375696182250977

Token 179: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. '))' → logprob: -12.250007629394531
    3. ' )' → logprob: -13.125007629394531
    4. ')
' → logprob: -15.875007629394531
    5. ')`' → logprob: -16.12500762939453
    6. '`)' → logprob: -16.62500762939453
    7. '})' → logprob: -17.75000762939453
    8. '])' → logprob: -17.87500762939453
    9. ')}' → logprob: -18.75000762939453
    10. '())' → logprob: -18.87500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 177
Tokens correctement prédits (1ère position, stricte): 90
Tokens correctement prédits (1ère position, avec adaptation): 95
Tokens correctement prédits (top 10): 156
Précision stricte (1ère position): 50.85%
Précision adaptée (1ère position): 53.67%
Précision (top 10): 88.14%
================================================================================
