================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input()
    if line == '':
        continue
    X_Y = line.split()
    if len(X_Y) != 2:
        continue
    X, Y = map(int, X_Y)
    if X == 0 and Y == 0:
        break
    grid = []
    for _ in range(Y):
        row = list(map(int, input().split()))
        grid.append(row)
    # dp[y][x] = number of ways to reach position (x,y)
    dp = [[0]*X for _ in range(Y+2)]  # +2 for jump landing possibility beyond last row

    # start positions at y=0 (y=1 in problem, index 0 here)
    for x in range(X):
        if grid[0][x] == 0:
            dp[0][x] = 1

    for y in range(Y):
        for x in range(X):
            if dp[y][x] == 0:
                continue
            # current position dp[y][x] has dp[y][x] ways
            # try to move to next positions
            for dx in [-1, 0, 1]:
                nx = x + dx
                if nx < 0 or nx >= X:
                    continue
                ny = y + 1
                if ny >= Y:
                    # over the bottom - count 1 way
                    dp[Y].append(dp[y][x])  # just to keep consistent length, no need
                    continue
                cell = grid[ny][nx]
                if cell == 1:
                    # obstacle
                    continue
                elif cell == 0:
                    dp[ny][nx] += dp[y][x]
                else:
                    # cell == 2 jump ramp
                    # can jump only from same x
                    # so dx must be 0
                    if dx == 0:
                        ny2 = y + 2
                        if ny2 >= Y:
                            # finish
                            # no dp beyond last row so just count ways
                            pass
                        else:
                            if grid[ny2][nx] != 1:
                                dp[ny2][nx] += dp[y][x]
    # sum ways reaching below bottom
    total = 0
    for x in range(X):
        total += dp[Y][x]
    # also add ways that went beyond bottom directly
    # but dp[Y] is only length X, no extension further
    # so check dp at y=Y and y=Y+1 as we did dp detail - since dp size is Y+2 only
    if Y+1 < len(dp):
        for x in range(X):
            total += dp[Y+1][x]
    # Add ways that finish by moving below last row directly in loop
    # Since in above loop we didn't store ways beyond dp arrays, so need another way
    # So reimplement above with counting directly finish ways

while True:
    line = input()
    if line == '':
        continue
    X_Y = line.split()
    if len(X_Y) != 2:
        continue
    X, Y = map(int, X_Y)
    if X == 0 and Y == 0:
        break
    grid = []
    for _ in range(Y):
        row = list(map(int, input().split()))
        grid.append(row)

    dp = [[0]*X for _ in range(Y+3)]
    for x in range(X):
        if grid[0][x] == 0:
            dp[0][x] = 1

    ans = 0
    for y in range(Y):
        for x in range(X):
            if dp[y][x] == 0:
                continue
            ways = dp[y][x]
            for dx in [-1,0,1]:
                nx = x + dx
                if nx < 0 or nx >= X:
                    continue
                ny = y + 1
                if ny >= Y:
                    ans += ways
                    continue
                cell = grid[ny][nx]
                if cell == 1:
                    continue
                elif cell == 0:
                    dp[ny][nx] += ways
                else:
                    # jump ramp
                    # only from same x
                    if dx == 0:
                        ny2 = y + 2
                        if ny2 >= Y:
                            ans += ways
                        else:
                            if grid[ny2][nx] != 1:
                                dp[ny2][nx] += ways
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19949382543563843
    2. '=' → logprob: -1.8244938850402832
    3. 's' → logprob: -4.699493885040283
    4. '.' → logprob: -5.824493885040283
    5. '.startswith' → logprob: -6.324493885040283
    6. '_' → logprob: -6.699493885040283
    7. '[' → logprob: -7.449493885040283
    8. '.readline' → logprob: -7.449493885040283
    9. '[:]' → logprob: -7.449493885040283
    10. '   ' → logprob: -7.574493885040283

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2254386842250824
    2. 'input' → logprob: -1.6004387140274048
    3. ' ' → logprob: -11.850439071655273
    4. ' f' → logprob: -12.100439071655273
    5. '=input' → logprob: -12.475439071655273
    6. ' readline' → logprob: -13.100439071655273
    7. '(input' → logprob: -13.725439071655273
    8. ' file' → logprob: -13.850439071655273
    9. 'file' → logprob: -13.975439071655273
    10. '<input' → logprob: -14.350439071655273

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033465633168816566
    2. '()' → logprob: -6.5033464431762695
    3. '('' → logprob: -6.6283464431762695
    4. '("("' → logprob: -8.50334644317627
    5. ''' → logprob: -9.00334644317627
    6. '```' → logprob: -9.37834644317627
    7. ')' → logprob: -10.87834644317627
    8. '("")' → logprob: -11.37834644317627
    9. '"' → logprob: -11.37834644317627
    10. '`' → logprob: -11.50334644317627

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0842502117156982
    2. '<|end|>' → logprob: -1.4592502117156982
    3. ' if' → logprob: -1.5842502117156982
    4. ' ' → logprob: -2.2092502117156982
    5. '    ' → logprob: -3.3342502117156982
    6. '\n' → logprob: -4.459250450134277
    7. ' ==' → logprob: -4.709250450134277
    8. '.' → logprob: -4.834250450134277
    9. '<|end|>' → logprob: -4.959250450134277
    10. '.strip' → logprob: -5.084250450134277

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2029114067554474
    2. '   ' → logprob: -2.577911376953125
    3. ' ' → logprob: -2.952911376953125
    4. '<|end|>' → logprob: -3.952911376953125
    5. '    ' → logprob: -4.077911376953125
    6. 'if' (adapté à ' if') → logprob: -4.452911376953125
    7. '\n' → logprob: -5.827911376953125
    8. '  ' → logprob: -7.202911376953125
    9. '\r' → logprob: -7.452911376953125
    10. '    
' → logprob: -7.577911376953125

Token 10: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04952910169959068
    2. ' line' → logprob: -3.0495290756225586
    3. ' ' → logprob: -7.674529075622559
    4. 'not' → logprob: -7.799529075622559
    5. 'line' → logprob: -9.799529075622559
    6. ' len' → logprob: -12.674529075622559
    7. '  ' → logprob: -12.674529075622559
    8. ' lines' → logprob: -13.549529075622559
    9. '<|end|>' → logprob: -14.174529075622559
    10. '(line' → logprob: -14.924529075622559

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11603689193725586
    2. '.startswith' → logprob: -3.116036891937256
    3. '.' → logprob: -3.616036891937256
    4. '==' → logprob: -3.866036891937256
    5. '.strip' → logprob: -4.116036891937256
    6. ' .' → logprob: -7.866036891937256
    7. '.endswith' → logprob: -8.866037368774414
    8. '.rstrip' → logprob: -9.241037368774414
    9. ' ' → logprob: -9.366037368774414
    10. '    ' → logprob: -9.366037368774414

Token 12: ' '':
' (ID: 125614)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08197423070669174
    2. ''' → logprob: -3.2069742679595947
    3. '""' → logprob: -3.4569742679595947
    4. '''' → logprob: -6.081974029541016
    5. ' "' → logprob: -6.206974029541016
    6. ' ""' → logprob: -6.581974029541016
    7. ' '' → logprob: -7.581974029541016
    8. ' ' → logprob: -8.456974029541016
    9. ' ''' → logprob: -8.456974029541016
    10. '"":' → logprob: -11.456974029541016

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06778377294540405
    2. ' break' → logprob: -3.192783832550049
    3. '   ' → logprob: -3.942783832550049
    4. '    ' → logprob: -5.942783832550049
    5. ':' → logprob: -7.567783832550049
    6. ' ' → logprob: -7.942783832550049
    7. '	break' → logprob: -8.06778335571289
    8. ' ' → logprob: -8.56778335571289
    9. '<|end|>' → logprob: -8.56778335571289
    10. 'break' → logprob: -8.81778335571289

Token 14: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.05527794733643532
    2. 'break' → logprob: -3.3052780628204346
    3. '       ' → logprob: -4.3052778244018555
    4. '   ' → logprob: -5.9302778244018555
    5. '	break' → logprob: -7.0552778244018555
    6. '_break' → logprob: -10.680277824401855
    7. '           ' → logprob: -11.055277824401855
    8. ' ' → logprob: -11.805277824401855
    9. 'Break' → logprob: -11.805277824401855
    10. '\n' → logprob: -12.305277824401855

Token 15: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02695092000067234
    2. '\n' → logprob: -4.776950836181641
    3. '    
' → logprob: -4.776950836181641
    4. '<|end|>' → logprob: -5.151950836181641
    5. '  ' → logprob: -7.276950836181641
    6. '\r' → logprob: -7.776950836181641
    7. '\' → logprob: -7.901950836181641
    8. '    ' → logprob: -8.02695083618164
    9. ':' → logprob: -8.15195083618164
    10. ')' → logprob: -8.40195083618164

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007059985073283315
    2. '    
' → logprob: -7.375706195831299
    3. '
' → logprob: -10.87570571899414
    4. '<|end|>' → logprob: -11.00070571899414
    5. '```' → logprob: -11.62570571899414
    6. '\n' → logprob: -12.25070571899414
    7. '       ' → logprob: -12.37570571899414
    8. '  ' → logprob: -12.37570571899414
    9. '        
' → logprob: -12.75070571899414
    10. ' ' → logprob: -13.00070571899414

Token 17: ' X' (ID: 2127)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01503707468509674
    2. 'if' → logprob: -4.7650370597839355
    3. ' if' → logprob: -6.0150370597839355
    4. 'break' → logprob: -6.0150370597839355
    5. ' break' → logprob: -8.140037536621094
    6. '    ' → logprob: -8.140037536621094
    7. '  ' → logprob: -8.265037536621094
    8. ' ' → logprob: -8.890037536621094
    9. 'print' → logprob: -9.265037536621094
    10. '       ' → logprob: -9.390037536621094

Token 18: '_Y' (ID: 22477)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3842337727546692
    2. '=' → logprob: -1.2592337131500244
    3. ' ==' → logprob: -4.2592339515686035
    4. '.' → logprob: -5.1342339515686035
    5. '=int' → logprob: -5.5092339515686035
    6. ',' → logprob: -5.8842339515686035
    7. '.strip' → logprob: -6.5092339515686035
    8. ' +=' → logprob: -7.0092339515686035
    9. '==' → logprob: -7.0092339515686035
    10. ':' → logprob: -7.0092339515686035

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4846009910106659
    2. ' =' → logprob: -0.9846010208129883
    3. ',' → logprob: -4.734601020812988
    4. '_' → logprob: -6.984601020812988
    5. 'split' → logprob: -8.984601020812988
    6. '.' → logprob: -9.109601020812988
    7. ')' → logprob: -9.109601020812988
    8. '=input' → logprob: -9.609601020812988
    9. 'input' → logprob: -9.984601020812988
    10. '  ' → logprob: -10.234601020812988

Token 20: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07284802943468094
    2. ' line' → logprob: -2.697848081588745
    3. 'list' → logprob: -5.947847843170166
    4. ' list' → logprob: -8.822848320007324
    5. '[line' → logprob: -10.072848320007324
    6. 'tuple' → logprob: -10.197848320007324
    7. ' tuple' → logprob: -11.072848320007324
    8. 'int' → logprob: -11.197848320007324
    9. 'input' → logprob: -11.822848320007324
    10. 'map' → logprob: -12.572848320007324

Token 21: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.1638888120651245
    2. '.' → logprob: -1.9138888120651245
    3. '.strip' → logprob: -5.788888931274414
    4. ' .' → logprob: -7.788888931274414
    5. '.replace' → logprob: -9.288888931274414
    6. '.rstrip' → logprob: -9.788888931274414
    7. 'split' → logprob: -10.788888931274414
    8. ' split' → logprob: -13.038888931274414
    9. '.Split' → logprob: -14.038888931274414
    10. '   ' → logprob: -14.163888931274414

Token 22: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.015363347716629505
    2. '("("' → logprob: -4.6403632164001465
    3. '(' → logprob: -5.2653632164001465
    4. ''' → logprob: -8.390363693237305
    5. '()' → logprob: -8.890363693237305
    6. '('.')' → logprob: -10.140363693237305
    7. '```' → logprob: -12.765363693237305
    8. '("' → logprob: -13.140363693237305
    9. '   ' → logprob: -13.140363693237305
    10. '(('' → logprob: -13.265363693237305

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2225736677646637
    2. ' if' → logprob: -2.722573757171631
    3. 'if' → logprob: -2.847573757171631
    4. '[' → logprob: -3.097573757171631
    5. 'print' → logprob: -4.722573757171631
    6. 'X' → logprob: -4.847573757171631
    7. '<|end|>' → logprob: -6.097573757171631
    8. 'x' → logprob: -6.222573757171631
    9. '    
' → logprob: -6.222573757171631
    10. 'n' → logprob: -6.597573757171631

Token 24: ' if' (ID: 538)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.8193883895874023
    2. 'x' → logprob: -1.1943883895874023
    3. 'if' (adapté à ' if') → logprob: -2.0693883895874023
    4. 'i' → logprob: -2.1943883895874023
    5. 'a' → logprob: -5.069388389587402
    6. ' if' → logprob: -5.694388389587402
    7. 'try' → logprob: -6.069388389587402
    8. 'n' → logprob: -6.444388389587402
    9. 'I' → logprob: -6.819388389587402
    10. 'print' → logprob: -7.069388389587402

Token 25: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9761254787445068
    2. ' X' → logprob: -1.1011254787445068
    3. 'len' → logprob: -1.7261254787445068
    4. 'X' → logprob: -2.351125478744507
    5. ' not' → logprob: -4.101125717163086
    6. 'not' → logprob: -7.601125717163086
    7. ' int' → logprob: -8.851125717163086
    8. ' ' → logprob: -8.976125717163086
    9. '(len' → logprob: -9.726125717163086
    10. 'int' → logprob: -9.851125717163086

Token 26: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.31345123052597046
    2. '(' → logprob: -1.3134512901306152
    3. ' (' → logprob: -9.688450813293457
    4. 'X' → logprob: -9.938450813293457
    5. '()' → logprob: -11.188450813293457
    6. ')' → logprob: -11.313450813293457
    7. ' ' → logprob: -11.313450813293457
    8. '(Y' → logprob: -11.438450813293457
    9. ' X' → logprob: -11.688450813293457
    10. '('' → logprob: -12.313450813293457

Token 27: '_Y' (ID: 22477)
  Prédit: '_Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Y' → logprob: -0.0038134956266731024
    2. '_X' → logprob: -5.62881326675415
    3. ')' → logprob: -8.753813743591309
    4. '_' → logprob: -10.253813743591309
    5. ')_' → logprob: -12.128813743591309
    6. '```' → logprob: -12.628813743591309
    7. '_)' → logprob: -13.128813743591309
    8. 'Y' → logprob: -13.253813743591309
    9. '<' → logprob: -13.378813743591309
    10. ')==' → logprob: -13.628813743591309

Token 28: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5130168199539185
    2. ')' → logprob: -1.3880168199539185
    3. '<' → logprob: -2.263016700744629
    4. ' !=' → logprob: -3.263016700744629
    5. ' )' → logprob: -5.388016700744629
    6. ' ==' → logprob: -6.263016700744629
    7. '!=' → logprob: -6.513016700744629
    8. ' ' → logprob: -7.138016700744629
    9. '==' → logprob: -7.638016700744629
    10. ')<' → logprob: -9.763016700744629

Token 29: ' !=' (ID: 1666)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31067803502082825
    2. '<' → logprob: -2.060678005218506
    3. ' !=' → logprob: -2.435678005218506
    4. ' ==' → logprob: -3.185678005218506
    5. '==' → logprob: -5.060678005218506
    6. '!=' → logprob: -5.685678005218506
    7. ' <=' → logprob: -7.935678005218506
    8. ' ' → logprob: -8.685678482055664
    9. '>' → logprob: -9.060678482055664
    10. ' >' → logprob: -9.060678482055664

Token 30: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11290067434310913
    2. ' ' → logprob: -2.237900733947754
    3. '3' → logprob: -10.237900733947754
    4. '1' → logprob: -10.362900733947754
    5. '4' → logprob: -12.862900733947754
    6. '<|end|>' → logprob: -13.112900733947754
    7. '```' → logprob: -13.612900733947754
    8. '  ' → logprob: -14.612900733947754
    9. '<|end|>' → logprob: -14.612900733947754
    10. ')' → logprob: -14.800400733947754

Token 31: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000954694114625454
    2. ' ' → logprob: -7.000954627990723
    3. '1' → logprob: -10.875954627990723
    4. '3' → logprob: -11.000954627990723
    5. '4' → logprob: -13.250954627990723
    6. '```' → logprob: -13.250954627990723
    7. '<' → logprob: -13.938454627990723
    8. '0' → logprob: -14.625954627990723
    9. '  ' → logprob: -15.125954627990723
    10. ')' → logprob: -15.188454627990723

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.9875325708417222e-05
    2. ':
' → logprob: -10.875029563903809
    3. ' or' → logprob: -12.250029563903809
    4. ' and' → logprob: -13.500029563903809
    5. ' :' → logprob: -13.625029563903809
    6. '):' → logprob: -13.750029563903809
    7. ':**' → logprob: -14.000029563903809
    8. '   ' → logprob: -14.875029563903809
    9. ':return' → logprob: -15.250029563903809
    10. '.' → logprob: -15.250029563903809

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003458468010649085
    2. ' continue' → logprob: -5.878458499908447
    3. '   ' → logprob: -8.378458023071289
    4. ' break' → logprob: -9.128458023071289
    5. 'continue' → logprob: -9.628458023071289
    6. '    ' → logprob: -9.753458023071289
    7. '```' → logprob: -10.253458023071289
    8. ' ' → logprob: -10.253458023071289
    9. '
' → logprob: -10.628458023071289
    10. '        
' → logprob: -10.878458023071289

Token 34: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5900775790214539
    2. ' continue' → logprob: -0.9650775790214539
    3. '   ' → logprob: -3.5900776386260986
    4. '       ' → logprob: -3.8400776386260986
    5. 'break' → logprob: -5.2150774002075195
    6. '    ' → logprob: -5.4650774002075195
    7. 'continue' (adapté à ' continue') → logprob: -5.5900774002075195
    8. '```' → logprob: -6.7150774002075195
    9. ' print' → logprob: -7.9650774002075195
    10. ' continu' → logprob: -8.59007740020752

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01392148993909359
    2. '    
' → logprob: -4.88892126083374
    3. '
' → logprob: -5.51392126083374
    4. 'X' → logprob: -7.26392126083374
    5. 'n' → logprob: -8.263921737670898
    6. '   
' → logprob: -8.638921737670898
    7. '```' → logprob: -8.888921737670898
    8. '\n' → logprob: -8.888921737670898
    9. '<|end|>' → logprob: -9.013921737670898
    10. '  
' → logprob: -9.138921737670898

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008042368106544018
    2. '    
' → logprob: -5.883042335510254
    3. 'x' → logprob: -6.883042335510254
    4. 'X' → logprob: -7.133042335510254
    5. '```' → logprob: -7.133042335510254
    6. '       ' → logprob: -7.633042335510254
    7. ' if' → logprob: -7.883042335510254
    8. 'n' → logprob: -8.383042335510254
    9. '  ' → logprob: -8.633042335510254
    10. ' X' → logprob: -8.758042335510254

Token 37: ' X' (ID: 2127)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6445298194885254
    2. 'X' (adapté à ' X') → logprob: -0.7695298194885254
    3. 'try' → logprob: -5.394529819488525
    4. ' try' → logprob: -5.519529819488525
    5. '   ' → logprob: -7.019529819488525
    6. ' x' → logprob: -7.144529819488525
    7. ' X' → logprob: -7.144529819488525
    8. 'i' → logprob: -8.019529342651367
    9. 'A' → logprob: -9.019529342651367
    10. 'a' → logprob: -9.144529342651367

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01473206840455532
    2. ' =' → logprob: -5.3897318840026855
    3. '_' → logprob: -5.6397318840026855
    4. '=' → logprob: -5.6397318840026855
    5. ',Y' → logprob: -6.6397318840026855
    6. '_,' → logprob: -7.1397318840026855
    7. ' ,' → logprob: -8.014732360839844
    8. ',_' → logprob: -8.639732360839844
    9. '=int' → logprob: -9.014732360839844
    10. ')' → logprob: -10.389732360839844

Token 39: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0015034328680485487
    2. ' Y' → logprob: -6.5015034675598145
    3. 'int' → logprob: -14.751502990722656
    4. '_Y' → logprob: -16.001502990722656
    5. '<|end|>' → logprob: -16.001502990722656
    6. 'y' → logprob: -16.501502990722656
    7. '	Y' → logprob: -16.501502990722656
    8. 'X' → logprob: -16.751502990722656
    9. '   ' → logprob: -17.376502990722656
    10. '=' → logprob: -18.001502990722656

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269567757844925
    2. '=' → logprob: -2.1269567012786865
    3. ',' → logprob: -11.626956939697266
    4. ' =
' → logprob: -12.251956939697266
    5. ')' → logprob: -12.376956939697266
    6. ' ' → logprob: -12.501956939697266
    7. '<|end|>' → logprob: -12.751956939697266
    8. '=int' → logprob: -14.251956939697266
    9. ' =)' → logprob: -15.126956939697266
    10. ' ,' → logprob: -15.126956939697266

Token 41: ' map' (ID: 4014)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.4832741916179657
    2. ' map' → logprob: -1.608274221420288
    3. 'X' → logprob: -2.108274221420288
    4. 'map' → logprob: -3.108274221420288
    5. 'int' → logprob: -4.733273983001709
    6. ' int' → logprob: -4.858273983001709
    7. ' ' → logprob: -8.983274459838867
    8. '   ' → logprob: -10.233274459838867
    9. ' float' → logprob: -10.358274459838867
    10. '  ' → logprob: -10.483274459838867

Token 42: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10028031468391418
    2. '(' → logprob: -2.350280284881592
    3. '(str' → logprob: -10.10028076171875
    4. 'int' → logprob: -10.97528076171875
    5. '(
' → logprob: -11.35028076171875
    6. '(lambda' → logprob: -13.60028076171875
    7. '<int' → logprob: -14.10028076171875
    8. '(

' → logprob: -15.10028076171875
    9. '[int' → logprob: -15.22528076171875
    10. '(float' → logprob: -15.35028076171875

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18988575041294098
    2. ',X' → logprob: -2.3148858547210693
    3. '(X' → logprob: -2.6898858547210693
    4. ' ,' → logprob: -5.56488561630249
    5. ',line' → logprob: -6.93988561630249
    6. ')' → logprob: -7.31488561630249
    7. '(line' → logprob: -8.439886093139648
    8. 'X' → logprob: -8.689886093139648
    9. '(' → logprob: -9.064886093139648
    10. ',Y' → logprob: -9.439886093139648

Token 44: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3869413137435913
    2. ' X' → logprob: -1.1369413137435913
    3. ')' → logprob: -9.636940956115723
    4. ' ' → logprob: -13.511940956115723
    5. '   ' → logprob: -13.886940956115723
    6. '(X' → logprob: -14.011940956115723
    7. '	X' → logprob: -14.136940956115723
    8. '[X' → logprob: -15.011940956115723
    9. '>X' → logprob: -15.511940956115723
    10. ' )' → logprob: -15.761940956115723

Token 45: '_Y' (ID: 22477)
  Prédit: '_Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Y' → logprob: -9.925185440806672e-05
    2. '_' → logprob: -9.500099182128906
    3. ')' → logprob: -11.375099182128906
    4. 'Y' → logprob: -12.875099182128906
    5. '_)' → logprob: -13.000099182128906
    6. ')_' → logprob: -13.250099182128906
    7. '_X' → logprob: -13.875099182128906
    8. '[_' → logprob: -13.875099182128906
    9. '[Y' → logprob: -13.875099182128906
    10. '[' → logprob: -14.375099182128906

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.625001907348633
    4. ')`' → logprob: -15.125001907348633
    5. '))' → logprob: -16.625001907348633
    6. '),' → logprob: -17.250001907348633
    7. '):' → logprob: -17.625001907348633
    8. '[' → logprob: -17.750001907348633
    9. ')}' → logprob: -17.750001907348633
    10. ')<' → logprob: -17.875001907348633

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08287835866212845
    2. ':' → logprob: -3.582878351211548
    3. ' if' → logprob: -4.207878589630127
    4. '    
' → logprob: -4.582878589630127
    5. '
' → logprob: -5.082878589630127
    6. '<|end|>' → logprob: -5.207878589630127
    7. '\n' → logprob: -5.707878589630127
    8. ',' → logprob: -5.707878589630127
    9. ':
' → logprob: -6.457878589630127
    10. ' ' → logprob: -6.582878589630127

Token 48: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8152754306793213
    2. 'if' (adapté à ' if') → logprob: -0.9402754306793213
    3. '   ' → logprob: -1.9402754306793213
    4. 'print' → logprob: -5.190275192260742
    5. 'i' → logprob: -5.565275192260742
    6. '    ' → logprob: -6.065275192260742
    7. 'try' → logprob: -6.065275192260742
    8. ' i' → logprob: -6.190275192260742
    9. 'n' → logprob: -7.315275192260742
    10. 's' → logprob: -7.440275192260742

Token 49: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.103984534740448
    2. ' Y' → logprob: -2.4789845943450928
    3. 'X' → logprob: -4.353984355926514
    4. ' ' → logprob: -6.978984355926514
    5. 'Y' → logprob: -7.478984355926514
    6. ' not' → logprob: -7.728984355926514
    7. '  ' → logprob: -9.853984832763672
    8. ' (' → logprob: -10.478984832763672
    9. '   ' → logprob: -11.353984832763672
    10. ' ' → logprob: -11.978984832763672

Token 50: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.37967851758003235
    2. ' ==' → logprob: -2.37967848777771
    3. ' <=' → logprob: -2.50467848777771
    4. ' <' → logprob: -2.62967848777771
    5. '>' → logprob: -3.50467848777771
    6. ' >=' → logprob: -3.75467848777771
    7. '<' → logprob: -5.504678726196289
    8. '==' → logprob: -5.629678726196289
    9. ' %' → logprob: -6.004678726196289
    10. '%' → logprob: -6.254678726196289

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2596122920513153
    2. ' ' → logprob: -1.5096123218536377
    3. ' Y' → logprob: -5.384612083435059
    4. 'Y' → logprob: -6.009612083435059
    5. '1' → logprob: -7.884612083435059
    6. '-' → logprob: -8.884612083435059
    7. ' -' → logprob: -10.447112083435059
    8. '  ' → logprob: -11.697112083435059
    9. '2' → logprob: -12.134612083435059
    10. '	Y' → logprob: -12.197112083435059

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01871778443455696
    2. 'Y' → logprob: -4.3937177658081055
    3. '-' → logprob: -5.6437177658081055
    4. ' ' → logprob: -6.1437177658081055
    5. ' Y' → logprob: -8.393717765808105
    6. '1' → logprob: -8.643717765808105
    7. ' -' → logprob: -10.643717765808105
    8. '-Y' → logprob: -11.518717765808105
    9. '```' → logprob: -11.581217765808105
    10. '9' → logprob: -12.268717765808105

Token 53: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06244802102446556
    2. 'and' → logprob: -2.812448024749756
    3. ' or' → logprob: -8.562447547912598
    4. ':' → logprob: -8.687447547912598
    5. ' ' → logprob: -9.187447547912598
    6. ' a' → logprob: -11.562447547912598
    7. '<|end|>' → logprob: -12.812447547912598
    8. ' ' → logprob: -13.187447547912598
    9. '	and' → logprob: -13.937447547912598
    10. 'a' → logprob: -14.437447547912598

Token 54: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.023327350616455078
    2. 'Y' → logprob: -3.773327350616455
    3. ' ' → logprob: -9.648326873779297
    4. '	Y' → logprob: -11.523326873779297
    5. '<|end|>' → logprob: -12.398326873779297
    6. '  ' → logprob: -13.273326873779297
    7. '   ' → logprob: -13.898326873779297
    8. ' ' → logprob: -14.898326873779297
    9. '<|end|>' → logprob: -16.148326873779297
    10. '    ' → logprob: -16.523326873779297

Token 55: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012866653501987457
    2. '==' → logprob: -4.387866497039795
    3. ' ' → logprob: -8.762866973876953
    4. '<|end|>' → logprob: -8.887866973876953
    5. '<|end|>' → logprob: -11.012866973876953
    6. '=' → logprob: -11.262866973876953
    7. '0' → logprob: -11.762866973876953
    8. ' =' → logprob: -11.887866973876953
    9. '  ' → logprob: -11.887866973876953
    10. ' ' → logprob: -12.512866973876953

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2811538577079773
    2. ' ' → logprob: -1.406153917312622
    3. '  ' → logprob: -13.031153678894043
    4. ' ' → logprob: -14.531153678894043
    5. '   ' → logprob: -14.656153678894043
    6. '1' → logprob: -15.531153678894043
    7. '۰' → logprob: -17.40615463256836
    8. '	' → logprob: -17.53115463256836
    9. '<|end|>' → logprob: -17.53115463256836
    10. '    ' → logprob: -17.65615463256836

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010332842357456684
    2. ' ' → logprob: -6.876033306121826
    3. '  ' → logprob: -15.751032829284668
    4. '1' → logprob: -15.876032829284668
    5. ')' → logprob: -16.751033782958984
    6. '   ' → logprob: -16.751033782958984
    7. '-' → logprob: -16.938533782958984
    8. '```' → logprob: -17.313533782958984
    9. '<|end|>' → logprob: -17.501033782958984
    10. '۰' → logprob: -17.626033782958984

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036453302018344402
    2. ':
' → logprob: -5.628645420074463
    3. '       ' → logprob: -10.378644943237305
    4. '   ' → logprob: -11.378644943237305
    5. ' :' → logprob: -13.753644943237305
    6. ':return' → logprob: -14.878644943237305
    7. '	break' → logprob: -15.378644943237305
    8. ' break' → logprob: -15.878644943237305
    9. ':

' → logprob: -15.878644943237305
    10. '):' → logprob: -16.003644943237305

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014307122677564621
    2. ':' → logprob: -4.264307022094727
    3. ':
' → logprob: -9.139307022094727
    4. '   ' → logprob: -11.389307022094727
    5. '      ' → logprob: -12.389307022094727
    6. '           ' → logprob: -12.514307022094727
    7. ' break' → logprob: -12.889307022094727
    8. '     ' → logprob: -13.014307022094727
    9. '	break' → logprob: -13.264307022094727
    10. '	' → logprob: -13.764307022094727

Token 60: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.1954711377620697
    2. '       ' → logprob: -1.820471167564392
    3. 'break' (adapté à ' break') → logprob: -4.195471286773682
    4. '	break' → logprob: -8.195470809936523
    5. '   ' → logprob: -8.695470809936523
    6. '           ' → logprob: -9.570470809936523
    7. '```' → logprob: -11.945470809936523
    8. '        
' → logprob: -12.445470809936523
    9. '_break' → logprob: -12.820470809936523
    10. '\n' → logprob: -12.820470809936523

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4450643062591553
    2. '
' → logprob: -1.3200643062591553
    3. '    
' → logprob: -2.5700643062591553
    4. '<|end|>' → logprob: -4.445064544677734
    5. 'print' → logprob: -6.820064544677734
    6. '  
' → logprob: -7.195064544677734
    7. '\n' → logprob: -7.820064544677734
    8. '   
' → logprob: -8.070064544677734
    9. ' 
' → logprob: -8.570064544677734
    10. '```' → logprob: -8.695064544677734

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02846883423626423
    2. '    
' → logprob: -3.9034688472747803
    3. 'print' → logprob: -5.403468608856201
    4. '
' → logprob: -6.778468608856201
    5. '<|end|>' → logprob: -7.403468608856201
    6. '    ' → logprob: -8.40346908569336
    7. '  
' → logprob: -8.90346908569336
    8. '#' → logprob: -8.90346908569336
    9. ' print' → logprob: -9.02846908569336
    10. ' 
' → logprob: -9.02846908569336

Token 63: ' grid' (ID: 10586)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.276809960603714
    2. 'print' → logprob: -2.2768099308013916
    3. 'if' → logprob: -3.0268099308013916
    4. ' if' → logprob: -3.6518099308013916
    5. 'result' → logprob: -3.7768099308013916
    6. ' print' → logprob: -4.776810169219971
    7. ' result' → logprob: -5.776810169219971
    8. 'n' → logprob: -5.901810169219971
    9. 'p' → logprob: -6.026810169219971
    10. 's' → logprob: -6.151810169219971

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45701488852500916
    2. '=' → logprob: -1.7070149183273315
    3. '[' → logprob: -1.7070149183273315
    4. '   ' → logprob: -6.832015037536621
    5. '_' → logprob: -7.082015037536621
    6. '.' → logprob: -7.332015037536621
    7. '.append' → logprob: -8.832015037536621
    8. ' ' → logprob: -8.957015037536621
    9. '[]' → logprob: -8.957015037536621
    10. '=[]' → logprob: -8.957015037536621

Token 65: ' []
' (ID: 8911)
  Prédit: ' [['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[' → logprob: -1.3338000774383545
    2. '[[' → logprob: -1.4588000774383545
    3. ' [' → logprob: -1.7088000774383545
    4. '[['' → logprob: -2.2088000774383545
    5. '[' → logprob: -2.3338000774383545
    6. ' [['' → logprob: -2.4588000774383545
    7. '[]' → logprob: -4.458800315856934
    8. '['' → logprob: -5.083800315856934
    9. ' []' → logprob: -5.208800315856934
    10. ' [["' → logprob: -5.708800315856934

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30917632579803467
    2. '<|end|>' → logprob: -1.5591763257980347
    3. ' for' → logprob: -3.809176445007324
    4. ' ' → logprob: -4.309176445007324
    5. '    ' → logprob: -4.559176445007324
    6. 'for' → logprob: -5.684176445007324
    7. '<|end|>' → logprob: -6.184176445007324
    8. '    
' → logprob: -6.934176445007324
    9. '[' → logprob: -7.184176445007324
    10. '	for' → logprob: -7.184176445007324

Token 67: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2534337043762207
    2. ' for' → logprob: -1.5034337043762207
    3. '   ' → logprob: -7.128433704376221
    4. '	for' → logprob: -7.753433704376221
    5. '    ' → logprob: -8.878433227539062
    6. ' ' → logprob: -9.628433227539062
    7. '[' → logprob: -10.128433227539062
    8. '<|end|>' → logprob: -12.253433227539062
    9. '    
' → logprob: -12.753433227539062
    10. '  ' → logprob: -12.753433227539062

Token 68: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.027784667909145355
    2. ' i' → logprob: -4.277784824371338
    3. '_' → logprob: -4.652784824371338
    4. ' ' → logprob: -5.527784824371338
    5. ' ' → logprob: -11.65278434753418
    6. 'i' → logprob: -11.77778434753418
    7. ' ‌' → logprob: -13.90278434753418
    8. '_i' → logprob: -14.15278434753418
    9. ' range' → logprob: -15.52778434753418
    10. ' ▁' → logprob: -16.02778434753418

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008423556573688984
    2. 'in' → logprob: -4.883423328399658
    3. ' ' → logprob: -7.633423328399658
    4. 'range' → logprob: -8.133423805236816
    5. ' range' → logprob: -10.633423805236816
    6. '<|end|>' → logprob: -12.633423805236816
    7. ' xrange' → logprob: -12.758423805236816
    8. '	in' → logprob: -12.883423805236816
    9. '  ' → logprob: -13.008423805236816
    10. ' i' → logprob: -13.508423805236816

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002212346764281392
    2. ' range' → logprob: -6.1272125244140625
    3. 'grid' → logprob: -11.627212524414062
    4. 'ran' → logprob: -12.877212524414062
    5. 'ange' → logprob: -12.877212524414062
    6. 'rang' → logprob: -12.877212524414062
    7. ' ' → logprob: -13.252212524414062
    8. '```' → logprob: -13.502212524414062
    9. '(range' → logprob: -13.627212524414062
    10. '	range' → logprob: -13.627212524414062

Token 71: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.007444651797413826
    2. '(X' → logprob: -5.007444858551025
    3. '(' → logprob: -7.257444858551025
    4. ' Y' → logprob: -11.257444381713867
    5. ' (' → logprob: -11.757444381713867
    6. 'Y' → logprob: -13.007444381713867
    7. '	Y' → logprob: -15.007444381713867
    8. '   ' → logprob: -15.007444381713867
    9. '(int' → logprob: -15.757444381713867
    10. '(y' → logprob: -16.257444381713867

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00685035390779376
    2. '):
' → logprob: -5.006850242614746
    3. ':' → logprob: -10.006850242614746
    4. ')' → logprob: -10.131850242614746
    5. '   ' → logprob: -11.006850242614746
    6. '<|end|>' → logprob: -11.131850242614746
    7. '+' → logprob: -12.506850242614746
    8. ' ):' → logprob: -12.756850242614746
    9. '):
' → logprob: -13.006850242614746
    10. '<|end|>' → logprob: -13.506850242614746

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04717022180557251
    2. '   ' → logprob: -3.1721701622009277
    3. '    ' → logprob: -6.422170162200928
    4. ' ' → logprob: -6.797170162200928
    5. '<|end|>' → logprob: -7.172170162200928
    6. ':' → logprob: -8.672170639038086
    7. '        ' → logprob: -9.547170639038086
    8. '      ' → logprob: -9.672170639038086
    9. '     ' → logprob: -10.172170639038086
    10. ',' → logprob: -10.422170639038086

Token 74: ' row' (ID: 5225)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.013386443257331848
    2. 'grid' → logprob: -5.013386249542236
    3. ' line' → logprob: -6.138386249542236
    4. '   ' → logprob: -6.388386249542236
    5. '    ' → logprob: -6.513386249542236
    6. ' row' → logprob: -7.763386249542236
    7. ' ' → logprob: -8.013386726379395
    8. '	grid' → logprob: -8.263386726379395
    9. ' input' → logprob: -9.388386726379395
    10. '<|end|>' → logprob: -10.013386726379395

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007623899728059769
    2. '=' → logprob: -4.882623672485352
    3. '   ' → logprob: -12.007623672485352
    4. ' ' → logprob: -12.757623672485352
    5. '_' → logprob: -12.882623672485352
    6. '=line' → logprob: -13.257623672485352
    7. '=input' → logprob: -13.382623672485352
    8. '    ' → logprob: -13.632623672485352
    9. ' =
' → logprob: -15.382623672485352
    10. '.append' → logprob: -15.507623672485352

Token 76: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.35854828357696533
    2. 'input' → logprob: -1.8585482835769653
    3. ' list' → logprob: -2.108548164367676
    4. 'list' → logprob: -3.733548164367676
    5. ' [' → logprob: -10.483548164367676
    6. '[input' → logprob: -11.108548164367676
    7. '   ' → logprob: -11.483548164367676
    8. ' ' → logprob: -11.733548164367676
    9. '[' → logprob: -12.296048164367676
    10. '	input' → logprob: -12.546048164367676

Token 77: '(map' (ID: 16946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25458991527557373
    2. '(' → logprob: -1.5045899152755737
    3. '(map' → logprob: -6.129590034484863
    4. '()' → logprob: -7.754590034484863
    5. '(int' → logprob: -11.004590034484863
    6. '(str' → logprob: -11.129590034484863
    7. 'input' → logprob: -12.254590034484863
    8. '(range' → logprob: -12.629590034484863
    9. '=input' → logprob: -12.879590034484863
    10. '(
' → logprob: -13.504590034484863

Token 78: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005420515313744545
    2. '(' → logprob: -5.755420684814453
    3. '(str' → logprob: -6.130420684814453
    4. '(lambda' → logprob: -10.005420684814453
    5. '(
' → logprob: -12.630420684814453
    6. 'int' → logprob: -12.630420684814453
    7. '=int' → logprob: -12.755420684814453
    8. '(input' → logprob: -12.755420684814453
    9. '<int' → logprob: -13.255420684814453
    10. '(list' → logprob: -14.005420684814453

Token 79: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25316423177719116
    2. ',input' → logprob: -1.753164291381836
    3. '(' → logprob: -3.378164291381836
    4. ',' → logprob: -4.128164291381836
    5. 'input' → logprob: -8.878164291381836
    6. '=input' → logprob: -10.253164291381836
    7. '(
' → logprob: -11.628164291381836
    8. ' input' → logprob: -11.878164291381836
    9. ')' → logprob: -12.128164291381836
    10. ' ,' → logprob: -12.253164291381836

Token 80: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16024017333984375
    2. 'input' → logprob: -1.9102401733398438
    3. '	input' → logprob: -12.035240173339844
    4. ' ' → logprob: -12.660240173339844
    5. '(input' → logprob: -13.535240173339844
    6. ',input' → logprob: -13.660240173339844
    7. ')' → logprob: -13.785240173339844
    8. ' list' → logprob: -14.035240173339844
    9. '=input' → logprob: -14.285240173339844
    10. '<input' → logprob: -14.660240173339844

Token 81: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.165027217415627e-05
    2. '()' → logprob: -10.875021934509277
    3. '()))' → logprob: -13.500021934509277
    4. ' ().' → logprob: -14.625021934509277
    5. '())))' → logprob: -14.750021934509277
    6. '.' → logprob: -15.875021934509277
    7. '(' → logprob: -16.62502098083496
    8. '()
' → logprob: -16.62502098083496
    9. '()));' → logprob: -16.62502098083496
    10. '())' → logprob: -17.50002098083496

Token 82: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001946248929016292
    2. 'strip' → logprob: -6.251946449279785
    3. 'rstrip' → logprob: -11.126946449279785
    4. ' split' → logprob: -13.001946449279785
    5. '(split' → logprob: -15.126946449279785
    6. 'spl' → logprob: -15.501946449279785
    7. 's' → logprob: -16.62694549560547
    8. ')' → logprob: -17.00194549560547
    9. 'sp' → logprob: -17.62694549560547
    10. ' strip' → logprob: -18.50194549560547

Token 83: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.038425058126449585
    2. '()' → logprob: -3.4134249687194824
    3. '())' → logprob: -5.663424968719482
    4. '())))' → logprob: -7.413424968719482
    5. '(' → logprob: -7.913424968719482
    6. '))' → logprob: -8.41342544555664
    7. '()))
' → logprob: -9.66342544555664
    8. '()));' → logprob: -11.16342544555664
    9. '()))

' → logprob: -12.16342544555664
    10. ')' → logprob: -12.66342544555664

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01243983581662178
    2. '<|end|>' → logprob: -5.012439727783203
    3. ')' → logprob: -5.762439727783203
    4. '   ' → logprob: -6.137439727783203
    5. '	' → logprob: -8.887439727783203
    6. '<|end|>' → logprob: -9.512439727783203
    7. ' ' → logprob: -10.262439727783203
    8. '()' → logprob: -10.637439727783203
    9. '      ' → logprob: -10.762439727783203
    10. ',' → logprob: -11.387439727783203

Token 85: ' grid' (ID: 10586)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0518276691436768
    2. 'grid' (adapté à ' grid') → logprob: -1.0518276691436768
    3. ' grid' → logprob: -1.8018276691436768
    4. '   ' → logprob: -2.0518276691436768
    5. '	grid' → logprob: -5.176827430725098
    6. ' ' → logprob: -7.676827430725098
    7. '.grid' → logprob: -7.676827430725098
    8. '<|end|>' → logprob: -8.426827430725098
    9. '	   ' → logprob: -8.801827430725098
    10. '
' → logprob: -8.926827430725098

Token 86: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2519659698009491
    2. '.' → logprob: -1.5019659996032715
    3. '.extend' → logprob: -11.001965522766113
    4. '.setdefault' → logprob: -11.751965522766113
    5. '.add' → logprob: -12.501965522766113
    6. '.app' → logprob: -13.126965522766113
    7. ' .' → logprob: -13.251965522766113
    8. '<|end|>' → logprob: -13.501965522766113
    9. '.ap' → logprob: -14.126965522766113
    10. '.insert' → logprob: -14.126965522766113

Token 87: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.006723540835082531
    2. '(' → logprob: -5.006723403930664
    3. '(line' → logprob: -12.256723403930664
    4. '(
' → logprob: -13.506723403930664
    5. ' (' → logprob: -14.256723403930664
    6. '(rows' → logprob: -14.256723403930664
    7. '((' → logprob: -15.381723403930664
    8. '(list' → logprob: -16.006723403930664
    9. '(grid' → logprob: -16.131723403930664
    10. '(column' → logprob: -16.506723403930664

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002905334113165736
    2. '   ' → logprob: -8.250290870666504
    3. ')
' → logprob: -11.125290870666504
    4. '<|end|>' → logprob: -12.125290870666504
    5. '
' → logprob: -12.375290870666504
    6. ' )' → logprob: -13.375290870666504
    7. '#' → logprob: -13.750290870666504
    8. ' ' → logprob: -14.750290870666504
    9. '```' → logprob: -15.375290870666504
    10. '))' → logprob: -15.750290870666504

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47990405559539795
    2. 'visited' → logprob: -1.104904055595398
    3. ' visited' → logprob: -3.7299041748046875
    4. 'neighbors' → logprob: -5.7299041748046875
    5. 'dire' → logprob: -5.8549041748046875
    6. '    ' → logprob: -5.9799041748046875
    7. 'count' → logprob: -6.2299041748046875
    8. '    
' → logprob: -6.6049041748046875
    9. '<|end|>' → logprob: -6.7299041748046875
    10. 'def' → logprob: -6.7299041748046875

Token 90: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.232340008020401
    2. 'dp' → logprob: -2.357340097427368
    3. 'dire' → logprob: -3.232340097427368
    4. '   ' → logprob: -3.857340097427368
    5. 'def' → logprob: -3.857340097427368
    6. ' visited' → logprob: -5.107339859008789
    7. 'from' → logprob: -5.357339859008789
    8. 'count' → logprob: -5.607339859008789
    9. 'dist' → logprob: -5.857339859008789
    10. 'dx' → logprob: -6.232339859008789

Token 91: ' dp' (ID: 21546)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.732635736465454
    2. 'def' → logprob: -1.982635736465454
    3. 'dire' → logprob: -1.982635736465454
    4. 'dx' → logprob: -2.107635736465454
    5. '#' → logprob: -2.607635736465454
    6. ' from' → logprob: -2.857635736465454
    7. ' directions' → logprob: -2.857635736465454
    8. 'dp' → logprob: -2.982635736465454
    9. 'visited' → logprob: -3.107635736465454
    10. ' dx' → logprob: -3.357635736465454

Token 92: '[y' (ID: 34551)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005322577897459269
    2. '=' → logprob: -5.255322456359863
    3. '[' → logprob: -10.505322456359863
    4. ' ' → logprob: -10.880322456359863
    5. ' =
' → logprob: -10.880322456359863
    6. '<|end|>' → logprob: -11.880322456359863
    7. '_' → logprob: -12.255322456359863
    8. '   ' → logprob: -12.755322456359863
    9. ' =[' → logprob: -13.755322456359863
    10. '=[]' → logprob: -13.880322456359863

Token 93: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.220789834856987
    2. ']' → logprob: -1.7207897901535034
    3. ')' → logprob: -4.345789909362793
    4. ' ][' → logprob: -6.595789909362793
    5. ' =' → logprob: -6.720789909362793
    6. '[' → logprob: -7.095789909362793
    7. '   ' → logprob: -7.595789909362793
    8. '=' → logprob: -7.720789909362793
    9. '][]' → logprob: -8.095789909362793
    10. ']=' → logprob: -8.220789909362793

Token 94: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.423219696851447e-05
    2. ' x' → logprob: -10.500083923339844
    3. '0' → logprob: -10.750083923339844
    4. ']' → logprob: -11.000083923339844
    5. '][' → logprob: -12.125083923339844
    6. ')x' → logprob: -12.625083923339844
    7. 'X' → logprob: -13.625083923339844
    8. '   ' → logprob: -13.875083923339844
    9. ')' → logprob: -14.125083923339844
    10. '	x' → logprob: -14.375083923339844

Token 95: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01437645684927702
    2. ' ]' → logprob: -4.389376640319824
    3. ' =' → logprob: -7.389376640319824
    4. '=' → logprob: -7.889376640319824
    5. ']=' → logprob: -8.014376640319824
    6. '][' → logprob: -8.264376640319824
    7. '   ' → logprob: -9.139376640319824
    8. ' ][' → logprob: -9.889376640319824
    9. '[' → logprob: -10.639376640319824
    10. '+' → logprob: -10.764376640319824

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16095994412899017
    2. '=' → logprob: -1.9109599590301514
    3. ' ' → logprob: -7.785959720611572
    4. '[' → logprob: -8.66096019744873
    5. '=[]' → logprob: -10.66096019744873
    6. ',' → logprob: -10.78596019744873
    7. ' =
' → logprob: -10.91096019744873
    8. '<|end|>' → logprob: -11.41096019744873
    9. '=[' → logprob: -11.53596019744873
    10. '    ' → logprob: -11.66096019744873

Token 97: ' number' (ID: 2086)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.123659372329712
    2. ' number' → logprob: -1.623659372329712
    3. 'max' → logprob: -1.748659372329712
    4. ' maximum' → logprob: -2.623659372329712
    5. ' the' → logprob: -2.748659372329712
    6. 'number' → logprob: -3.123659372329712
    7. 'the' → logprob: -3.623659372329712
    8. '1' → logprob: -3.623659372329712
    9. 'maximum' → logprob: -4.123659133911133
    10. ' grid' → logprob: -4.748659133911133

Token 98: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' ways' (ID: 6984)
  Prédit: ' paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paths' → logprob: -0.21163314580917358
    2. ' ways' → logprob: -1.9616332054138184
    3. ' unique' → logprob: -4.211633205413818
    4. 'paths' → logprob: -4.211633205413818
    5. '_paths' → logprob: -4.711633205413818
    6. ' distinct' → logprob: -6.086633205413818
    7. ' islands' → logprob: -6.711633205413818
    8. 'ways' → logprob: -6.836633205413818
    9. ' ' → logprob: -6.836633205413818
    10. 'distinct' → logprob: -7.336633205413818

Token 100: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2890656292438507
    2. '<|end|>' → logprob: -1.6640655994415283
    3. '   ' → logprob: -3.2890655994415283
    4. ' ' → logprob: -4.164065837860107
    5. 'to' → logprob: -5.164065837860107
    6. '    ' → logprob: -6.539065837860107
    7. '  ' → logprob: -7.289065837860107
    8. '[' → logprob: -7.914065837860107
    9. '<|end|>' → logprob: -8.78906536102295
    10. ' for' → logprob: -10.03906536102295

Token 101: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.1360888034105301
    2. ' reach' → logprob: -2.2610888481140137
    3. 'get' → logprob: -4.136088848114014
    4. ' get' → logprob: -5.511088848114014
    5. 'arr' → logprob: -6.636088848114014
    6. ' ' → logprob: -7.761088848114014
    7. 'move' → logprob: -8.136088371276855
    8. 'y' → logprob: -8.511088371276855
    9. 'go' → logprob: -8.511088371276855
    10. '   ' → logprob: -9.136088371276855

Token 102: ' position' (ID: 4010)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.6538430452346802
    2. 'dp' → logprob: -1.5288430452346802
    3. '   ' → logprob: -2.4038429260253906
    4. ' dp' → logprob: -2.6538429260253906
    5. ' grid' → logprob: -3.4038429260253906
    6. 'grid' → logprob: -4.028842926025391
    7. ' [' → logprob: -4.028842926025391
    8. ' to' → logprob: -4.403842926025391
    9. ' y' → logprob: -4.903842926025391
    10. ' (' → logprob: -5.528842926025391

Token 103: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1556251049041748
    2. 'dp' → logprob: -1.5306251049041748
    3. '[y' → logprob: -2.030625104904175
    4. ' (' → logprob: -2.655625104904175
    5. ' dp' → logprob: -2.780625104904175
    6. '[' → logprob: -2.905625104904175
    7. ' ' → logprob: -3.155625104904175
    8. 's' → logprob: -3.530625104904175
    9. ' y' → logprob: -3.780625104904175
    10. '(y' → logprob: -4.530625343322754

Token 104: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.30017533898353577
    2. ' y' → logprob: -1.8001753091812134
    3. 'x' → logprob: -2.425175428390503
    4. ' x' → logprob: -5.300175189971924
    5. ')' → logprob: -7.925175189971924
    6. ')y' → logprob: -9.425175666809082
    7. ',' → logprob: -9.800175666809082
    8. '	y' → logprob: -11.175175666809082
    9. ')x' → logprob: -11.300175666809082
    10. '   ' → logprob: -11.425175666809082

Token 105: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01159921009093523
    2. ',y' → logprob: -4.636599063873291
    3. ' ,' → logprob: -6.386599063873291
    4. '   ' → logprob: -9.26159954071045
    5. ')' → logprob: -10.26159954071045
    6. ' ' → logprob: -12.01159954071045
    7. 'y' → logprob: -12.51159954071045
    8. '-' → logprob: -12.51159954071045
    9. ',
' → logprob: -12.63659954071045
    10. '```' → logprob: -13.76159954071045

Token 106: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009782671695575118
    2. '   ' → logprob: -7.625978469848633
    3. ')
' → logprob: -8.250978469848633
    4. ' )' → logprob: -8.750978469848633
    5. 'from' → logprob: -10.500978469848633
    6. ' from' → logprob: -10.625978469848633
    7. ',' → logprob: -12.000978469848633
    8. ')

' → logprob: -12.875978469848633
    9. ')`' → logprob: -13.625978469848633
    10. ' ' → logprob: -13.875978469848633

Token 107: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09098172932863235
    2. '   ' → logprob: -2.4659817218780518
    3. '    
' → logprob: -6.590981960296631
    4. ' 
' → logprob: -8.590981483459473
    5. '\n' → logprob: -8.965981483459473
    6. '' → logprob: -8.965981483459473
    7. '  
' → logprob: -9.965981483459473
    8. '
' → logprob: -10.090981483459473
    9. '   
' → logprob: -10.215981483459473
    10. '\' → logprob: -10.840981483459473

Token 108: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.3943018913269043
    2. '   ' → logprob: -1.2693018913269043
    3. ' dp' → logprob: -3.2693018913269043
    4. '
' → logprob: -5.144301891326904
    5. '	dp' → logprob: -8.019302368164062
    6. '    
' → logprob: -8.644302368164062
    7. 'd' → logprob: -9.144302368164062
    8. ' 
' → logprob: -9.394302368164062
    9. ' ' → logprob: -9.394302368164062
    10. '_dp' → logprob: -10.019302368164062

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004774480126798153
    2. '=' → logprob: -5.504774570465088
    3. '[' → logprob: -7.504774570465088
    4. ' =[' → logprob: -9.37977409362793
    5. ' ' → logprob: -10.12977409362793
    6. '=[' → logprob: -11.62977409362793
    7. '[y' → logprob: -12.00477409362793
    8. '=[]' → logprob: -14.25477409362793
    9. '<|end|>' → logprob: -14.25477409362793
    10. '   ' → logprob: -14.37977409362793

Token 110: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.4768981635570526
    2. ' [[' → logprob: -0.976898193359375
    3. '[' → logprob: -6.226898193359375
    4. ' [' → logprob: -7.101898193359375
    5. '[
' → logprob: -11.601898193359375
    6. '   ' → logprob: -12.476898193359375
    7. '[]' → logprob: -13.351898193359375
    8. '[y' → logprob: -13.601898193359375
    9. ' [
' → logprob: -15.351898193359375
    10. '([[' → logprob: -15.351898193359375

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011081460979767144
    2. ' ' → logprob: -9.125110626220703
    3. '1' → logprob: -13.875110626220703
    4. '   ' → logprob: -14.375110626220703
    5. ']' → logprob: -16.125110626220703
    6. '-' → logprob: -17.125110626220703
    7. 'False' → logprob: -17.375110626220703
    8. '  ' → logprob: -17.562610626220703
    9. '[' → logprob: -17.687610626220703
    10. '       ' → logprob: -18.062610626220703

Token 112: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14663726091384888
    2. ']' → logprob: -2.271637201309204
    3. 'for' → logprob: -4.146637439727783
    4. ']*' → logprob: -4.146637439727783
    5. ']*(' → logprob: -7.146637439727783
    6. '   ' → logprob: -8.021636962890625
    7. ' ]' → logprob: -8.271636962890625
    8. '	for' → logprob: -9.521636962890625
    9. ')' → logprob: -9.521636962890625
    10. ' ' → logprob: -10.396636962890625

Token 113: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0004715450922958553
    2. ' X' → logprob: -8.250471115112305
    3. '(X' → logprob: -8.500471115112305
    4. '   ' → logprob: -12.125471115112305
    5. '(' → logprob: -14.375471115112305
    6. ' (' → logprob: -14.500471115112305
    7. '	X' → logprob: -17.000471115112305
    8. 'Y' → logprob: -17.125471115112305
    9. ' ' → logprob: -17.250471115112305
    10. '    ' → logprob: -17.250471115112305

Token 114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03365227207541466
    2. 'for' → logprob: -3.4086523056030273
    3. ']' → logprob: -12.908652305603027
    4. ')' → logprob: -13.658652305603027
    5. '   ' → logprob: -13.783652305603027
    6. ' ]' → logprob: -13.908652305603027
    7. ' ' → logprob: -14.783652305603027
    8. '	for' → logprob: -15.033652305603027
    9. ')]' → logprob: -16.53365135192871
    10. '    ' → logprob: -17.15865135192871

Token 115: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.035547953099012375
    2. ' _' → logprob: -3.410547971725464
    3. '_' → logprob: -6.785547733306885
    4. 'range' → logprob: -7.535547733306885
    5. ' y' → logprob: -9.660548210144043
    6. ' xrange' → logprob: -10.035548210144043
    7. ' Y' → logprob: -10.160548210144043
    8. ' in' → logprob: -10.535548210144043
    9. ' ' → logprob: -10.785548210144043
    10. '_range' → logprob: -10.910548210144043

Token 116: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026198692619800568
    2. 'in' → logprob: -4.026198863983154
    3. ' range' → logprob: -5.026198863983154
    4. ' in' → logprob: -6.651198863983154
    5. '(range' → logprob: -8.776198387145996
    6. ' xrange' → logprob: -13.526198387145996
    7. ' ' → logprob: -14.151198387145996
    8. ')' → logprob: -14.276198387145996
    9. '	range' → logprob: -14.276198387145996
    10. '   ' → logprob: -14.901198387145996

Token 117: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038060080260038376
    2. ' range' → logprob: -3.288060188293457
    3. '[' → logprob: -11.538060188293457
    4. '(range' → logprob: -12.538060188293457
    5. ' xrange' → logprob: -13.163060188293457
    6. 'Y' → logprob: -13.663060188293457
    7. '   ' → logprob: -14.038060188293457
    8. ' ' → logprob: -15.038060188293457
    9. '	range' → logprob: -15.038060188293457
    10. ')' → logprob: -15.663060188293457

Token 118: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.0005081149865873158
    2. '(' → logprob: -8.000508308410645
    3. 'Y' → logprob: -8.750508308410645
    4. '(X' → logprob: -11.875508308410645
    5. ' (' → logprob: -12.375508308410645
    6. '   ' → logprob: -13.500508308410645
    7. ' Y' → logprob: -14.375508308410645
    8. '	Y' → logprob: -15.125508308410645
    9. '(y' → logprob: -15.625508308410645
    10. ')' → logprob: -16.250507354736328

Token 119: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.3676733690081164e-05
    2. ')' → logprob: -11.37502384185791
    3. ' )' → logprob: -11.87502384185791
    4. ')]
' → logprob: -13.00002384185791
    5. ']' → logprob: -13.25002384185791
    6. '   ' → logprob: -14.62502384185791
    7. ')]

' → logprob: -16.125022888183594
    8. '))' → logprob: -16.375022888183594
    9. ')],' → logprob: -16.500022888183594
    10. ' ]' → logprob: -16.500022888183594

Token 120: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011613822542130947
    2. '0' → logprob: -5.011613845825195
    3. ' ' → logprob: -5.386613845825195
    4. '2' → logprob: -9.136613845825195
    5. '   ' → logprob: -9.136613845825195
    6. 'X' → logprob: -9.886613845825195
    7. ')' → logprob: -11.136613845825195
    8. 'Y' → logprob: -11.136613845825195
    9. ' X' → logprob: -12.761613845825195
    10. '  ' → logprob: -13.136613845825195

Token 121: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.337155355140567e-05
    2. ')' → logprob: -10.750062942504883
    3. ' )' → logprob: -11.125062942504883
    4. ']' → logprob: -11.250062942504883
    5. '+' → logprob: -12.250062942504883
    6. ')]
' → logprob: -12.250062942504883
    7. ')][' → logprob: -14.125062942504883
    8. ')]

' → logprob: -14.500062942504883
    9. ' ]' → logprob: -14.875062942504883
    10. '   ' → logprob: -15.125062942504883

Token 122: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' +' (ID: 659)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4515680968761444
    2. '<|end|>' → logprob: -1.4515681266784668
    3. '0' → logprob: -3.201568126678467
    4. ' ' → logprob: -3.826568126678467
    5. '
' → logprob: -4.201568126678467
    6. ' dp' → logprob: -4.326568126678467
    7. ' Y' → logprob: -4.576568126678467
    8. 'Y' → logprob: -4.826568126678467
    9. '<|end|>' → logprob: -4.951568126678467
    10. '   ' → logprob: -5.951568126678467

Token 125: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0054744635708630085
    2. ' ' → logprob: -5.63047456741333
    3. '1' → logprob: -6.50547456741333
    4. '0' → logprob: -8.005474090576172
    5. 'Y' → logprob: -11.755474090576172
    6. '   ' → logprob: -11.880474090576172
    7. '```' → logprob: -11.880474090576172
    8. '+' → logprob: -12.505474090576172
    9. '<|end|>' → logprob: -12.755474090576172
    10. '3' → logprob: -13.005474090576172

Token 126: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' jump' (ID: 13843)
  Prédit: ' boundary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' boundary' → logprob: -1.6348183155059814
    2. ' padding' → logprob: -1.7598183155059814
    3. ' safe' → logprob: -1.8848183155059814
    4. ' safety' → logprob: -2.2598183155059814
    5. ' ' → logprob: -2.6348183155059814
    6. ' extra' → logprob: -3.0098183155059814
    7. 'padding' → logprob: -3.0098183155059814
    8. 'boundary' → logprob: -3.1348183155059814
    9. ' buffer' → logprob: -3.2598183155059814
    10. 'safe' → logprob: -3.8848183155059814

Token 128: ' landing' (ID: 30271)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5751957893371582
    2. '
' → logprob: -1.4501957893371582
    3. '<|end|>' → logprob: -1.8251957893371582
    4. ' ' → logprob: -4.075195789337158
    5. ')' → logprob: -4.575195789337158
    6. '  ' → logprob: -6.075195789337158
    7. '<|end|>' → logprob: -6.075195789337158
    8. ' for' → logprob: -6.325195789337158
    9. 'newline' → logprob: -6.825195789337158
    10. 'for' → logprob: -7.075195789337158

Token 129: ' possibility' (ID: 21568)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009755854494869709
    2. '<|end|>' → logprob: -5.259756088256836
    3. '   ' → logprob: -6.259756088256836
    4. '
' → logprob: -6.884756088256836
    5. '  
' → logprob: -7.759756088256836
    6. ' ' → logprob: -8.759756088256836
    7. '

' → logprob: -8.759756088256836
    8. ' 
' → logprob: -8.884756088256836
    9. '    
' → logprob: -8.884756088256836
    10. '' → logprob: -9.134756088256836

Token 130: ' beyond' (ID: 11615)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9644280076026917
    2. '<|end|>' → logprob: -0.9644280076026917
    3. '
' → logprob: -1.4644279479980469
    4. '<|end|>' → logprob: -5.964427947998047
    5. ')' → logprob: -6.839427947998047
    6. ' ' → logprob: -7.089427947998047
    7. '    
' → logprob: -7.589427947998047
    8. '  ' → logprob: -7.839427947998047
    9. '  
' → logprob: -8.839427947998047
    10. '    ' → logprob: -9.089427947998047

Token 131: ' last' (ID: 2174)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0026579394470900297
    2. ' Y' → logprob: -6.627657890319824
    3. '<|end|>' → logprob: -8.127657890319824
    4. 'rows' → logprob: -8.627657890319824
    5. 'X' → logprob: -8.877657890319824
    6. '0' → logprob: -8.877657890319824
    7. 'y' → logprob: -9.252657890319824
    8. ' the' → logprob: -9.502657890319824
    9. ' lines' → logprob: -9.502657890319824
    10. 'line' → logprob: -9.627657890319824

Token 132: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6979452967643738
    2. ' row' → logprob: -0.8229452967643738
    3. ' line' → logprob: -3.5729453563690186
    4. '<|end|>' → logprob: -4.0729451179504395
    5. 'line' → logprob: -4.1979451179504395
    6. '_row' → logprob: -7.5729451179504395
    7. '<|end|>' → logprob: -7.8229451179504395
    8. 'Y' → logprob: -8.072945594787598
    9. 'rows' → logprob: -8.072945594787598
    10. '+' → logprob: -8.322945594787598

Token 133: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3037712574005127
    2. '
' → logprob: -1.6787712574005127
    3. 'dp' → logprob: -2.8037712574005127
    4. '<|end|>' → logprob: -5.178771018981934
    5. ' for' → logprob: -6.178771018981934
    6. '    
' → logprob: -6.428771018981934
    7. '  
' → logprob: -6.803771018981934
    8. 'for' → logprob: -6.928771018981934
    9. ' ' → logprob: -7.303771018981934
    10. '	dp' → logprob: -7.553771018981934

Token 134: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08296646177768707
    2. '   ' → logprob: -2.9579665660858154
    3. '
' → logprob: -4.582966327667236
    4. ' dp' → logprob: -5.082966327667236
    5. '	dp' → logprob: -5.582966327667236
    6. 'for' → logprob: -5.832966327667236
    7. ' for' → logprob: -6.457966327667236
    8. '    
' → logprob: -6.832966327667236
    9. ' ' → logprob: -7.707966327667236
    10. ' 
' → logprob: -7.832966327667236

Token 135: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002176193054765463
    2. 'for' → logprob: -6.252176284790039
    3. '   ' → logprob: -8.502176284790039
    4. 'if' → logprob: -11.002176284790039
    5. ' dp' → logprob: -11.752176284790039
    6. 'from' → logprob: -11.752176284790039
    7. ' for' → logprob: -13.002176284790039
    8. 'import' → logprob: -13.002176284790039
    9. '	dp' → logprob: -13.127176284790039
    10. '    
' → logprob: -13.252176284790039

Token 136: ' start' (ID: 1604)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0027843154966831207
    2. 'for' → logprob: -6.127784252166748
    3. ' dp' → logprob: -8.127784729003906
    4. '#' → logprob: -8.627784729003906
    5. 'if' → logprob: -10.127784729003906
    6. ' for' → logprob: -10.627784729003906
    7. 'from' → logprob: -11.127784729003906
    8. 'ways' → logprob: -12.002784729003906
    9. 'start' → logprob: -12.002784729003906
    10. '   ' → logprob: -12.377784729003906

Token 137: ' positions' (ID: 15897)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18592722713947296
    2. 'dp' → logprob: -2.185927152633667
    3. ' =' → logprob: -4.185927391052246
    4. '   ' → logprob: -4.685927391052246
    5. '=' → logprob: -4.810927391052246
    6. '_dp' → logprob: -4.935927391052246
    7. '<|end|>' → logprob: -5.810927391052246
    8. '][' → logprob: -5.935927391052246
    9. ' dp' → logprob: -6.060927391052246
    10. 's' → logprob: -6.935927391052246

Token 138: ' at' (ID: 540)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.694159209728241
    2. 'for' → logprob: -1.5691592693328857
    3. ' for' → logprob: -1.9441592693328857
    4. ' =' → logprob: -2.4441592693328857
    5. '=' → logprob: -3.1941592693328857
    6. '   ' → logprob: -4.194159030914307
    7. ' dp' → logprob: -5.694159030914307
    8. '
' → logprob: -7.194159030914307
    9. '[' → logprob: -7.319159030914307
    10. '(dp' → logprob: -7.944159030914307

Token 139: ' y' (ID: 342)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26209625601768494
    2. 'dp' → logprob: -2.0120961666107178
    3. 'for' → logprob: -3.1370961666107178
    4. '[' → logprob: -3.2620961666107178
    5. ' dp' → logprob: -5.637096405029297
    6. ' ' → logprob: -5.887096405029297
    7. ' for' → logprob: -6.137096405029297
    8. 'grid' → logprob: -6.637096405029297
    9. 'the' → logprob: -6.887096405029297
    10. 'range' → logprob: -6.887096405029297

Token 140: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5010234713554382
    2. '[' → logprob: -1.501023530960083
    3. ' =' → logprob: -1.876023530960083
    4. '][' → logprob: -4.751023292541504
    5. '0' → logprob: -5.126023292541504
    6. ',' → logprob: -6.501023292541504
    7. ']' → logprob: -7.251023292541504
    8. '=[' → logprob: -7.751023292541504
    9. ' ' → logprob: -8.251023292541504
    10. ' [' → logprob: -9.126023292541504

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008145124302245677
    2. '1' → logprob: -7.375814437866211
    3. 'Y' → logprob: -9.375814437866211
    4. ' ' → logprob: -9.375814437866211
    5. '-' → logprob: -12.250814437866211
    6. '[' → logprob: -12.438314437866211
    7. 'X' → logprob: -13.063314437866211
    8. '   ' → logprob: -13.375814437866211
    9. '2' → logprob: -13.750814437866211
    10. 'y' → logprob: -14.188314437866211

Token 142: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4649500548839569
    2. ' for' → logprob: -2.0899500846862793
    3. '   ' → logprob: -2.5899500846862793
    4. 'for' → logprob: -2.7149500846862793
    5. ' dp' → logprob: -3.2149500846862793
    6. ',' → logprob: -3.3399500846862793
    7. '
' → logprob: -3.9649500846862793
    8. '[' → logprob: -5.964950084686279
    9. '(dp' → logprob: -6.214950084686279
    10. ']' → logprob: -6.714950084686279

Token 143: 'y' (ID: 88)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5821595788002014
    2. ')' → logprob: -1.4571595191955566
    3. 'for' → logprob: -2.4571595191955566
    4. 'x' → logprob: -2.9571595191955566
    5. ' for' → logprob: -3.3321595191955566
    6. ' x' → logprob: -4.207159519195557
    7. ' ' → logprob: -4.832159519195557
    8. ' )' → logprob: -6.207159519195557
    9. 'dp' → logprob: -6.207159519195557
    10. 'y' → logprob: -6.582159519195557

Token 144: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26855823397636414
    2. ',' → logprob: -2.7685582637786865
    3. '][' → logprob: -3.1435582637786865
    4. '-' → logprob: -3.3935582637786865
    5. ')[' → logprob: -3.7685582637786865
    6. '[' → logprob: -4.018558025360107
    7. '=' → logprob: -4.018558025360107
    8. '   ' → logprob: -5.268558025360107
    9. '0' → logprob: -5.518558025360107
    10. ')][' → logprob: -5.518558025360107

Token 145: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019049769267439842
    2. '1' → logprob: -4.769049644470215
    3. ' ' → logprob: -4.769049644470215
    4. ')' → logprob: -7.144049644470215
    5. '-' → logprob: -7.269049644470215
    6. '[' → logprob: -9.144049644470215
    7. 's' → logprob: -10.081549644470215
    8. ' -' → logprob: -10.081549644470215
    9. '   ' → logprob: -10.081549644470215
    10. '=' → logprob: -10.956549644470215

Token 146: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021586824208498
    2. ',' → logprob: -4.771586894989014
    3. ')[' → logprob: -5.771586894989014
    4. ' )' → logprob: -5.896586894989014
    5. '):' → logprob: -6.021586894989014
    6. ' and' → logprob: -6.646586894989014
    7. '),' → logprob: -7.896586894989014
    8. 'and' → logprob: -8.021586418151855
    9. ' for' → logprob: -8.021586418151855
    10. '-' → logprob: -8.146586418151855

Token 147: ' problem' (ID: 4792)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6673300862312317
    2. ' range' → logprob: -1.792330026626587
    3. 'range' → logprob: -1.917330026626587
    4. ' the' → logprob: -2.542330026626587
    5. ' dp' → logprob: -3.167330026626587
    6. 'the' → logprob: -3.417330026626587
    7. ' code' → logprob: -4.917330265045166
    8. 'python' → logprob: -6.167330265045166
    9. ')' → logprob: -6.417330265045166
    10. ' python' → logprob: -6.792330265045166

Token 148: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009667078964412212
    2. '[' → logprob: -5.259666919708252
    3. ']' → logprob: -7.009666919708252
    4. ')]' → logprob: -7.259666919708252
    5. ')[' → logprob: -7.259666919708252
    6. ',' → logprob: -7.634666919708252
    7. ' )' → logprob: -7.759666919708252
    8. '<|end|>' → logprob: -8.75966739654541
    9. '[line' → logprob: -9.00966739654541
    10. ')
' → logprob: -9.38466739654541

Token 149: ' index' (ID: 3472)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5654605627059937
    2. 'x' → logprob: -1.5654605627059937
    3. ')' → logprob: -2.190460681915283
    4. 'X' → logprob: -3.690460681915283
    5. '0' → logprob: -4.190460681915283
    6. ' but' → logprob: -4.315460681915283
    7. ' X' → logprob: -4.315460681915283
    8. ' ' → logprob: -4.565460681915283
    9. ' )' → logprob: -4.565460681915283
    10. ' y' → logprob: -5.565460681915283

Token 150: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7045730948448181
    2. '0' → logprob: -1.329573154449463
    3. ')' → logprob: -2.704573154449463
    4. 'ing' → logprob: -2.829573154449463
    5. 's' → logprob: -3.204573154449463
    6. ' =' → logprob: -3.454573154449463
    7. '+' → logprob: -4.204573154449463
    8. '1' → logprob: -5.079573154449463
    9. ' ' → logprob: -5.204573154449463
    10. '-based' → logprob: -5.829573154449463

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2444087266921997
    2. '=' → logprob: -1.8694087266921997
    3. '+' → logprob: -3.11940860748291
    4. '[' → logprob: -5.36940860748291
    5. ')' → logprob: -5.86940860748291
    6. '1' → logprob: -5.99440860748291
    7. ' ' → logprob: -6.11940860748291
    8. '+=' → logprob: -6.86940860748291
    9. 'ing' → logprob: -7.36940860748291
    10. 'offset' → logprob: -7.36940860748291

Token 152: ' here' (ID: 2105)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018770311027765274
    2. ')]' → logprob: -5.393770217895508
    3. ' )' → logprob: -5.518770217895508
    4. '):' → logprob: -6.143770217895508
    5. '   ' → logprob: -6.143770217895508
    6. 'for' → logprob: -6.268770217895508
    7. ']' → logprob: -7.018770217895508
    8. ' for' → logprob: -7.018770217895508
    9. ',' → logprob: -7.518770217895508
    10. ')
' → logprob: -7.643770217895508

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05016353353857994
    2. ')]' → logprob: -3.550163507461548
    3. ']' → logprob: -4.550163745880127
    4. '):' → logprob: -5.800163745880127
    5. ' )' → logprob: -6.300163745880127
    6. ')
' → logprob: -6.425163745880127
    7. 'for' → logprob: -7.175163745880127
    8. '])' → logprob: -7.425163745880127
    9. ',' → logprob: -7.550163745880127
    10. 'dp' → logprob: -8.550163269042969

Token 154: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7178335189819336
    2. 'for' → logprob: -0.8428335189819336
    3. 'dp' → logprob: -2.5928335189819336
    4. ' dp' → logprob: -5.717833518981934
    5. '   ' → logprob: -6.092833518981934
    6. '
' → logprob: -7.092833518981934
    7. ',' → logprob: -9.092833518981934
    8. 's' → logprob: -9.467833518981934
    9. ' ' → logprob: -9.717833518981934
    10. '_dp' → logprob: -10.092833518981934

Token 155: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23576872050762177
    2. 'dp' → logprob: -1.6107686758041382
    3. ' for' → logprob: -4.735768795013428
    4. '   ' → logprob: -7.235768795013428
    5. ' dp' → logprob: -7.235768795013428
    6. '0' → logprob: -10.73576831817627
    7. 'if' → logprob: -10.73576831817627
    8. ' ' → logprob: -12.23576831817627
    9. '    
' → logprob: -12.36076831817627
    10. 'import' → logprob: -12.73576831817627

Token 156: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5762361884117126
    2. ' x' → logprob: -0.8262361884117126
    3. ' i' → logprob: -9.4512357711792
    4. 'i' → logprob: -9.4512357711792
    5. '```' → logprob: -10.2012357711792
    6. '	x' → logprob: -11.0762357711792
    7. 'j' → logprob: -11.2012357711792
    8. '_x' → logprob: -11.4512357711792
    9. ')x' → logprob: -11.4512357711792
    10. ')' → logprob: -12.1387357711792

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07002546638250351
    2. 'in' → logprob: -2.6950254440307617
    3. ' ' → logprob: -10.445025444030762
    4. ')' → logprob: -10.695025444030762
    5. 'x' → logprob: -11.320025444030762
    6. '	in' → logprob: -12.570025444030762
    7. ',' → logprob: -12.945025444030762
    8. '0' → logprob: -13.320025444030762
    9. 'In' → logprob: -13.445025444030762
    10. '=' → logprob: -13.445025444030762

Token 158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029753385111689568
    2. ' range' → logprob: -3.5297534465789795
    3. '   ' → logprob: -14.154753684997559
    4. '	range' → logprob: -14.654753684997559
    5. '(range' → logprob: -15.029753684997559
    6. ' ' → logprob: -15.029753684997559
    7. 'grid' → logprob: -15.279753684997559
    8. '0' → logprob: -15.279753684997559
    9. ')' → logprob: -15.904753684997559
    10. '[' → logprob: -15.904753684997559

Token 159: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.875009536743164
    3. 'X' → logprob: -13.250009536743164
    4. '(x' → logprob: -15.500009536743164
    5. '(len' → logprob: -16.625009536743164
    6. '   ' → logprob: -17.500009536743164
    7. ' X' → logprob: -17.750009536743164
    8. '	X' → logprob: -18.125009536743164
    9. '(Y' → logprob: -18.375009536743164
    10. '[X' → logprob: -18.625009536743164

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026176320388913155
    2. '):
' → logprob: -6.002617835998535
    3. ' ):' → logprob: -9.002617835998535
    4. '+' → logprob: -11.627617835998535
    5. '):
' → logprob: -13.002617835998535
    6. '   ' → logprob: -13.252617835998535
    7. ']:' → logprob: -13.252617835998535
    8. ')' → logprob: -13.627617835998535
    9. ' ' → logprob: -14.252617835998535
    10. '):

' → logprob: -14.752617835998535

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009047918138094246
    2. '   ' → logprob: -7.750904560089111
    3. 'dp' → logprob: -8.50090503692627
    4. ' dp' → logprob: -8.75090503692627
    5. ' if' → logprob: -10.25090503692627
    6. '<|end|>' → logprob: -10.75090503692627
    7. ',' → logprob: -11.37590503692627
    8. ':' → logprob: -11.75090503692627
    9. '_dp' → logprob: -11.75090503692627
    10. '	dp' → logprob: -12.12590503692627

Token 162: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04927675053477287
    2. ' dp' → logprob: -3.549276828765869
    3. '   ' → logprob: -4.424276828765869
    4. 'if' (adapté à ' if') → logprob: -5.174276828765869
    5. ' if' → logprob: -6.674276828765869
    6. '       ' → logprob: -8.174276351928711
    7. '	dp' → logprob: -9.049276351928711
    8. '           ' → logprob: -11.799276351928711
    9. ' ' → logprob: -12.174276351928711
    10. '  ' → logprob: -12.924276351928711

Token 163: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.04868729040026665
    2. 'grid' → logprob: -3.048687219619751
    3. '	grid' → logprob: -10.548686981201172
    4. '   ' → logprob: -11.048686981201172
    5. '(grid' → logprob: -11.173686981201172
    6. ' ' → logprob: -11.423686981201172
    7. ' not' → logprob: -11.798686981201172
    8. ' x' → logprob: -12.173686981201172
    9. 'x' → logprob: -12.298686981201172
    10. ' y' → logprob: -13.236186981201172

Token 164: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022094044834375381
    2. '0' → logprob: -8.750221252441406
    3. '][' → logprob: -10.375221252441406
    4. '   ' → logprob: -11.500221252441406
    5. '[y' → logprob: -12.000221252441406
    6. ' [' → logprob: -13.125221252441406
    7. ' ' → logprob: -13.375221252441406
    8. 's' → logprob: -13.750221252441406
    9. 'def' → logprob: -13.750221252441406
    10. '```' → logprob: -13.875221252441406

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004015945305582136
    2. '[' → logprob: -8.000401496887207
    3. ' ' → logprob: -10.375401496887207
    4. '   ' → logprob: -11.000401496887207
    5. '1' → logprob: -11.375401496887207
    6. '       ' → logprob: -14.000401496887207
    7. '][' → logprob: -14.312901496887207
    8. '           ' → logprob: -14.687901496887207
    9. '                   ' → logprob: -14.750401496887207
    10. '    ' → logprob: -15.062901496887207

Token 166: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01631259359419346
    2. '[x' → logprob: -4.141312599182129
    3. '[' → logprob: -9.141312599182129
    4. ' ][' → logprob: -9.516312599182129
    5. ']' → logprob: -9.641312599182129
    6. '[y' → logprob: -10.766312599182129
    7. '   ' → logprob: -12.641312599182129
    8. ' [' → logprob: -13.266312599182129
    9. '"][' → logprob: -14.266312599182129
    10. '[row' → logprob: -14.641312599182129

Token 167: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009142052149400115
    2. ' x' → logprob: -7.000914096832275
    3. '[x' → logprob: -14.250914573669434
    4. '   ' → logprob: -14.625914573669434
    5. '][' → logprob: -15.250914573669434
    6. ')x' → logprob: -15.250914573669434
    7. '	x' → logprob: -15.375914573669434
    8. ' ' → logprob: -15.625914573669434
    9. '0' → logprob: -15.625914573669434
    10. ']' → logprob: -15.750914573669434

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05921841785311699
    2. ']==' → logprob: -2.934218406677246
    3. '==' → logprob: -5.809218406677246
    4. ' ==' → logprob: -7.059218406677246
    5. ' ]' → logprob: -8.309218406677246
    6. ')' → logprob: -8.809218406677246
    7. ']!=' → logprob: -11.059218406677246
    8. '[' → logprob: -11.434218406677246
    9. ')==' → logprob: -11.934218406677246
    10. '])' → logprob: -12.059218406677246

Token 169: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05107841268181801
    2. ' ==' → logprob: -3.0510783195495605
    3. '!=' → logprob: -6.8010783195495605
    4. '>' → logprob: -6.9260783195495605
    5. ' !=' → logprob: -9.301078796386719
    6. '[' → logprob: -9.551078796386719
    7. '>=' → logprob: -9.801078796386719
    8. '1' → logprob: -10.301078796386719
    9. ']==' → logprob: -10.676078796386719
    10. '<=' → logprob: -10.801078796386719

Token 170: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5339364409446716
    2. '0' → logprob: -0.9089364409446716
    3. '1' → logprob: -4.533936500549316
    4. '   ' → logprob: -11.908936500549316
    5. '2' → logprob: -13.096436500549316
    6. '  ' → logprob: -13.283936500549316
    7. '4' → logprob: -14.658936500549316
    8. ')' → logprob: -14.783936500549316
    9. '100' → logprob: -14.846436500549316
    10. '3' → logprob: -14.908936500549316

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.057941507548093796
    2. '1' → logprob: -2.932941436767578
    3. ' ' → logprob: -5.807941436767578
    4. '.' → logprob: -11.182941436767578
    5. '2' → logprob: -11.307941436767578
    6. '7' → logprob: -12.557941436767578
    7. '4' → logprob: -12.745441436767578
    8. '3' → logprob: -12.807941436767578
    9. '9' → logprob: -12.870441436767578
    10. '6' → logprob: -13.620441436767578

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20169253647327423
    2. ':
' → logprob: -1.7016925811767578
    3. ' and' → logprob: -9.576692581176758
    4. '       ' → logprob: -9.701692581176758
    5. '           ' → logprob: -9.826692581176758
    6. 'dp' → logprob: -10.326692581176758
    7. '):
' → logprob: -10.826692581176758
    8. ':
' → logprob: -11.451692581176758
    9. '):' → logprob: -11.576692581176758
    10. '   ' → logprob: -11.701692581176758

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02428259328007698
    2. '       ' → logprob: -4.649282455444336
    3. 'dp' → logprob: -4.899282455444336
    4. ':' → logprob: -5.899282455444336
    5. ' dp' → logprob: -6.024282455444336
    6. '               ' → logprob: -7.899282455444336
    7. ',' → logprob: -8.149282455444336
    8. ':
' → logprob: -8.149282455444336
    9. '   ' → logprob: -8.274282455444336
    10. '	dp' → logprob: -8.399282455444336

Token 174: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6331823468208313
    2. 'dp' (adapté à ' dp') → logprob: -0.7581823468208313
    3. '           ' → logprob: -7.883182525634766
    4. '   ' → logprob: -9.383182525634766
    5. '               ' → logprob: -10.008182525634766
    6. '	dp' → logprob: -10.008182525634766
    7. '       ' → logprob: -10.883182525634766
    8. ' ' → logprob: -12.258182525634766
    9. '                   ' → logprob: -13.508182525634766
    10. '_dp' → logprob: -13.633182525634766

Token 175: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010628487507347018
    2. '][' → logprob: -9.250105857849121
    3. '0' → logprob: -12.625105857849121
    4. '}[' → logprob: -13.375105857849121
    5. '```' → logprob: -13.750105857849121
    6. ' [' → logprob: -14.000105857849121
    7. ')[' → logprob: -14.250105857849121
    8. '[y' → logprob: -14.250105857849121
    9. '   ' → logprob: -15.250105857849121
    10. '\[' → logprob: -15.250105857849121

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009261108934879303
    2. '1' → logprob: -7.0009260177612305
    3. ' ' → logprob: -11.87592601776123
    4. '[' → logprob: -12.62592601776123
    5. '][' → logprob: -13.12592601776123
    6. '   ' → logprob: -13.75092601776123
    7. ']' → logprob: -14.75092601776123
    8. '-' → logprob: -15.75092601776123
    9. '```' → logprob: -15.87592601776123
    10. '  ' → logprob: -16.250926971435547

Token 177: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0011701062321662903
    2. '[x' → logprob: -7.0011701583862305
    3. ']' → logprob: -8.50117015838623
    4. ' ][' → logprob: -9.87617015838623
    5. '   ' → logprob: -13.62617015838623
    6. '[' → logprob: -14.00117015838623
    7. '"][' → logprob: -14.75117015838623
    8. ' ' → logprob: -15.25117015838623
    9. ')[' → logprob: -15.75117015838623
    10. 'x' → logprob: -16.001169204711914

Token 178: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. ' x' → logprob: -14.250000953674316
    3. '0' → logprob: -18.625
    4. '[x' → logprob: -19.25
    5. ']' → logprob: -19.625
    6. '][' → logprob: -19.875
    7. ')x' → logprob: -20.0
    8. '   ' → logprob: -20.125
    9. '	x' → logprob: -20.5
    10. '"x' → logprob: -20.875

Token 179: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014764121442567557
    2. ']=' → logprob: -9.000147819519043
    3. ' ]' → logprob: -10.750147819519043
    4. '=' → logprob: -13.000147819519043
    5. ']+=' → logprob: -14.750147819519043
    6. ' =' → logprob: -16.250146865844727
    7. '   ' → logprob: -16.750146865844727
    8. ')' → logprob: -17.000146865844727
    9. '']' → logprob: -19.375146865844727
    10. ']+' → logprob: -19.375146865844727

Token 180: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889363914728165
    2. ' =' → logprob: -2.5788936614990234
    3. '+=' → logprob: -12.828893661499023
    4. ' +=' → logprob: -14.453893661499023
    5. ']=' → logprob: -15.328893661499023
    6. ']' → logprob: -15.453893661499023
    7. '[' → logprob: -16.203893661499023
    8. '1' → logprob: -17.078893661499023
    9. ' ' → logprob: -17.703893661499023
    10. 's' → logprob: -17.703893661499023

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.500007629394531
    3. '0' → logprob: -13.125007629394531
    4. '   ' → logprob: -14.000007629394531
    5. '2' → logprob: -15.937507629394531
    6. '  ' → logprob: -16.75000762939453
    7. '
' → logprob: -16.81250762939453
    8. '3' → logprob: -17.25000762939453
    9. 'int' → logprob: -17.50000762939453
    10. ' ' → logprob: -17.50000762939453

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.125001907348633
    4. '   ' → logprob: -16.000001907348633
    5. '2' → logprob: -17.250001907348633
    6. '-' → logprob: -17.875001907348633
    7. '(' → logprob: -17.937501907348633
    8. 'int' → logprob: -17.937501907348633
    9. '3' → logprob: -18.250001907348633
    10. 'dp' → logprob: -18.250001907348633

Token 183: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026307035237550735
    2. 'for' → logprob: -4.401307106018066
    3. ' for' → logprob: -4.526307106018066
    4. '
' → logprob: -6.151307106018066
    5. '    
' → logprob: -7.526307106018066
    6. '<|end|>' → logprob: -9.651307106018066
    7. '	for' → logprob: -10.026307106018066
    8. ' ' → logprob: -11.026307106018066
    9. '  
' → logprob: -11.276307106018066
    10. 'y' → logprob: -11.401307106018066

Token 185: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0032611307688057423
    2. '   ' → logprob: -6.378261089324951
    3. ' for' → logprob: -6.503261089324951
    4. 'from' → logprob: -9.87826156616211
    5. '	for' → logprob: -12.50326156616211
    6. 'y' → logprob: -12.62826156616211
    7. '    
' → logprob: -14.37826156616211
    8. '
' → logprob: -16.75326156616211
    9. 'import' → logprob: -16.75326156616211
    10. 'dire' → logprob: -17.12826156616211

Token 186: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.000511687423568219
    2. 'y' → logprob: -7.625511646270752
    3. ' _' → logprob: -11.37551212310791
    4. ' ' → logprob: -12.25051212310791
    5. ' ' → logprob: -12.50051212310791
    6. '_y' → logprob: -13.00051212310791
    7. '_' → logprob: -14.87551212310791
    8. ' range' → logprob: -15.25051212310791
    9. ' Y' → logprob: -15.50051212310791
    10. 'Y' → logprob: -16.000511169433594

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016090326011180878
    2. 'in' → logprob: -4.141090393066406
    3. ' ' → logprob: -10.141090393066406
    4. '   ' → logprob: -12.266090393066406
    5. '	in' → logprob: -12.516090393066406
    6. '0' → logprob: -13.141090393066406
    7. ' y' → logprob: -13.266090393066406
    8. '+' → logprob: -13.641090393066406
    9. '    ' → logprob: -14.016090393066406
    10. ',' → logprob: -14.641090393066406

Token 188: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1269315630197525
    2. 'range' → logprob: -2.126931667327881
    3. ' ' → logprob: -13.251931190490723
    4. '1' → logprob: -14.251931190490723
    5. '0' → logprob: -15.001931190490723
    6. ' in' → logprob: -15.126931190490723
    7. '(range' → logprob: -15.376931190490723
    8. '	range' → logprob: -16.00193214416504
    9. '   ' → logprob: -16.37693214416504
    10. ' xrange' → logprob: -16.50193214416504

Token 189: '(Y' (ID: 44341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4000847041606903
    2. '1' → logprob: -1.1500847339630127
    3. '(Y' → logprob: -4.775084495544434
    4. '0' → logprob: -5.775084495544434
    5. ' ' → logprob: -6.650084495544434
    6. ' Y' → logprob: -9.025084495544434
    7. 'Y' → logprob: -9.275084495544434
    8. ' (' → logprob: -9.900084495544434
    9. '(
' → logprob: -11.400084495544434
    10. '   ' → logprob: -11.525084495544434

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05277553200721741
    2. '):
' → logprob: -3.3027756214141846
    3. '1' → logprob: -4.6777753829956055
    4. ' ):' → logprob: -6.4277753829956055
    5. '   ' → logprob: -6.8027753829956055
    6. '+' → logprob: -7.0527753829956055
    7. '-' → logprob: -7.1777753829956055
    8. ')' → logprob: -7.9277753829956055
    9. ' ' → logprob: -8.427775382995605
    10. ' -' → logprob: -9.427775382995605

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16495053470134735
    2. '   ' → logprob: -1.9149504899978638
    3. ' for' → logprob: -5.539950370788574
    4. '	   ' → logprob: -8.039950370788574
    5. '<|end|>' → logprob: -8.664950370788574
    6. ',' → logprob: -9.539950370788574
    7. ' ' → logprob: -9.664950370788574
    8. '    ' → logprob: -10.164950370788574
    9. '	for' → logprob: -10.164950370788574
    10. '    
' → logprob: -10.789950370788574

Token 192: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.015333413146436214
    2. '   ' → logprob: -4.76533317565918
    3. 'for' (adapté à ' for') → logprob: -5.01533317565918
    4. '	for' → logprob: -10.14033317565918
    5. ' ' → logprob: -11.39033317565918
    6. '       ' → logprob: -11.89033317565918
    7. '    ' → logprob: -13.14033317565918
    8. '    
' → logprob: -14.89033317565918
    9. '  ' → logprob: -15.26533317565918
    10. '   ' → logprob: -15.51533317565918

Token 193: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01815064437687397
    2. ' x' → logprob: -4.018150806427002
    3. 'y' → logprob: -14.768150329589844
    4. ' y' → logprob: -16.393150329589844
    5. ')x' → logprob: -16.393150329589844
    6. ' ' → logprob: -16.518150329589844
    7. '	x' → logprob: -16.768150329589844
    8. '   ' → logprob: -17.018150329589844
    9. '```' → logprob: -17.018150329589844
    10. '_x' → logprob: -17.268150329589844

Token 194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008678274229168892
    2. 'in' → logprob: -4.883678436279297
    3. '   ' → logprob: -7.633678436279297
    4. ' ' → logprob: -7.883678436279297
    5. '(' → logprob: -9.633678436279297
    6. ')' → logprob: -10.508678436279297
    7. '    ' → logprob: -10.883678436279297
    8. '0' → logprob: -11.008678436279297
    9. '-' → logprob: -11.383678436279297
    10. '  ' → logprob: -11.383678436279297

Token 195: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861468818038702
    2. ' range' → logprob: -4.758614540100098
    3. '(range' → logprob: -15.883614540100098
    4. '   ' → logprob: -17.758615493774414
    5. 'Range' → logprob: -18.383615493774414
    6. '	range' → logprob: -19.258615493774414
    7. '[' → logprob: -19.383615493774414
    8. ')' → logprob: -20.383615493774414
    9. ' ' → logprob: -20.508615493774414
    10. 'X' → logprob: -20.758615493774414

Token 196: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.000739707553293556
    2. '(' → logprob: -7.375739574432373
    3. ' (' → logprob: -9.500740051269531
    4. '(Y' → logprob: -10.500740051269531
    5. '   ' → logprob: -12.750740051269531
    6. ')' → logprob: -13.125740051269531
    7. '(range' → logprob: -13.625740051269531
    8. '(-' → logprob: -13.875740051269531
    9. 'X' → logprob: -14.000740051269531
    10. '((' → logprob: -14.250740051269531

Token 197: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07902440428733826
    2. '):
' → logprob: -2.579024314880371
    3. '       ' → logprob: -9.579024314880371
    4. '   ' → logprob: -10.829024314880371
    5. '           ' → logprob: -10.954024314880371
    6. ' ):' → logprob: -11.454024314880371
    7. '+' → logprob: -11.704024314880371
    8. '):
' → logprob: -12.454024314880371
    9. ':' → logprob: -12.954024314880371
    10. '               ' → logprob: -14.204024314880371

Token 198: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03584243729710579
    2. '       ' → logprob: -4.035842418670654
    3. ':' → logprob: -4.410842418670654
    4. ' if' → logprob: -5.910842418670654
    5. ':
' → logprob: -7.535842418670654
    6. '<|end|>' → logprob: -7.660842418670654
    7. ',' → logprob: -8.035842895507812
    8. '               ' → logprob: -8.285842895507812
    9. '   ' → logprob: -8.410842895507812
    10. '	       ' → logprob: -8.660842895507812

Token 199: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2081913948059082
    2. ' if' → logprob: -1.7081913948059082
    3. '           ' → logprob: -5.083191394805908
    4. '               ' → logprob: -7.583191394805908
    5. '   ' → logprob: -10.83319091796875
    6. '	if' → logprob: -11.95819091796875
    7. 'count' → logprob: -12.95819091796875
    8. 'num' → logprob: -13.20819091796875
    9. '            ' → logprob: -13.33319091796875
    10. '```' → logprob: -13.45819091796875

Token 200: ' dp' (ID: 21546)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.7239784002304077
    2. 'dp' → logprob: -0.7239784002304077
    3. ' grid' → logprob: -3.8489785194396973
    4. ' dp' → logprob: -4.723978519439697
    5. '   ' → logprob: -9.223978042602539
    6. '           ' → logprob: -10.848978042602539
    7. ' ' → logprob: -11.598978042602539
    8. '0' → logprob: -11.848978042602539
    9. '       ' → logprob: -12.098978042602539
    10. '               ' → logprob: -12.473978042602539

Token 201: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.7133641196996905e-05
    2. '[' → logprob: -11.12502670288086
    3. '][' → logprob: -12.00002670288086
    4. '[Y' → logprob: -13.00002670288086
    5. '```' → logprob: -13.75002670288086
    6. ' [' → logprob: -13.87502670288086
    7. 'y' → logprob: -14.00002670288086
    8. ']' → logprob: -15.87502670288086
    9. '   ' → logprob: -15.87502670288086
    10. ')[' → logprob: -16.00002670288086

Token 202: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16623468697071075
    2. '[x' → logprob: -1.9162347316741943
    3. '[y' → logprob: -5.166234493255615
    4. '[' → logprob: -8.666234970092773
    5. ']' → logprob: -10.166234970092773
    6. ' ][' → logprob: -10.416234970092773
    7. '   ' → logprob: -11.291234970092773
    8. 'x' → logprob: -11.541234970092773
    9. ' [' → logprob: -12.041234970092773
    10. '```' → logprob: -12.916234970092773

Token 203: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005199087900109589
    2. '0' → logprob: -7.625519752502441
    3. ' x' → logprob: -10.375519752502441
    4. ' ' → logprob: -14.750519752502441
    5. '[x' → logprob: -16.125520706176758
    6. '```' → logprob: -16.750520706176758
    7. ']' → logprob: -17.750520706176758
    8. 'None' → logprob: -17.875520706176758
    9. '   ' → logprob: -18.125520706176758
    10. '
' → logprob: -18.875520706176758

Token 204: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6019551157951355
    2. ']' → logprob: -1.4769551753997803
    3. ' >' → logprob: -1.9769551753997803
    4. ' ==' → logprob: -3.2269551753997803
    5. ')' → logprob: -3.9769551753997803
    6. '==' → logprob: -4.101954936981201
    7. ']==' → logprob: -5.226954936981201
    8. ']>' → logprob: -5.976954936981201
    9. ' ]' → logprob: -7.226954936981201
    10. ' and' → logprob: -7.351954936981201

Token 205: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7515312433242798
    2. '==' → logprob: -0.7515312433242798
    3. ' ==' → logprob: -3.1265311241149902
    4. ' >' → logprob: -4.50153112411499
    5. ' and' → logprob: -7.50153112411499
    6. 'and' → logprob: -7.75153112411499
    7. '!=' → logprob: -7.87653112411499
    8. '0' → logprob: -8.251531600952148
    9. ':' → logprob: -9.626531600952148
    10. ' !=' → logprob: -10.626531600952148

Token 206: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023246755823493004
    2. ' ' → logprob: -3.7732467651367188
    3. '>' → logprob: -14.398246765136719
    4. '1' → logprob: -15.273246765136719
    5. ' >' → logprob: -16.27324676513672
    6. ' ' → logprob: -16.52324676513672
    7. '   ' → logprob: -16.71074676513672
    8. '=' → logprob: -17.08574676513672
    9. '    ' → logprob: -17.27324676513672
    10. '  ' → logprob: -17.77324676513672

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009117019944824278
    2. ' ' → logprob: -7.000911712646484
    3. '>' → logprob: -17.375911712646484
    4. '  ' → logprob: -17.625911712646484
    5. '   ' → logprob: -17.750911712646484
    6. '1' → logprob: -18.375911712646484
    7. '    ' → logprob: -18.500911712646484
    8. '۰' → logprob: -18.875911712646484
    9. '```' → logprob: -19.000911712646484
    10. ' ' → logprob: -19.500911712646484

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5861197113990784
    2. '               ' → logprob: -0.8361197113990784
    3. ':
' → logprob: -4.961119651794434
    4. ' or' → logprob: -6.461119651794434
    5. '           ' → logprob: -6.586119651794434
    6. '       ' → logprob: -9.461119651794434
    7. '                   ' → logprob: -10.086119651794434
    8. '   ' → logprob: -11.211119651794434
    9. 'continue' → logprob: -11.336119651794434
    10. '              ' → logprob: -11.961119651794434

Token 209: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031741487327963114
    2. ':' → logprob: -6.003174304962158
    3. ':
' → logprob: -7.878174304962158
    4. ' continue' → logprob: -9.128173828125
    5. 'continue' → logprob: -9.378173828125
    6. ' or' → logprob: -9.753173828125
    7. '           ' → logprob: -10.128173828125
    8. '       ' → logprob: -11.878173828125
    9. ',' → logprob: -12.253173828125
    10. '                   ' → logprob: -12.753173828125

Token 210: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4143386781215668
    2. 'continue' (adapté à ' continue') → logprob: -1.6643387079238892
    3. ' continue' → logprob: -1.9143387079238892
    4. '   ' → logprob: -6.6643385887146
    5. '           ' → logprob: -7.5393385887146
    6. '                   ' → logprob: -7.6643385887146
    7. '	continue' → logprob: -9.039339065551758
    8. '       ' → logprob: -10.039339065551758
    9. '			' → logprob: -11.914339065551758
    10. '_continue' → logprob: -11.914339065551758

Token 211: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03191016986966133
    2. '
' → logprob: -3.7819101810455322
    3. '            
' → logprob: -5.406909942626953
    4. '<|end|>' → logprob: -6.406909942626953
    5. '               ' → logprob: -7.656909942626953
    6. '```' → logprob: -7.906909942626953
    7. '\n' → logprob: -8.406909942626953
    8. '    
' → logprob: -8.906909942626953
    9. ' 
' → logprob: -9.031909942626953
    10. ' if' → logprob: -9.156909942626953

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06271059811115265
    2. '<|end|>' → logprob: -3.6877105236053467
    3. '       ' → logprob: -4.062710762023926
    4. '            
' → logprob: -5.187710762023926
    5. '
' → logprob: -5.437710762023926
    6. '               ' → logprob: -6.312710762023926
    7. '   ' → logprob: -7.312710762023926
    8. ' for' → logprob: -7.437710762023926
    9. ' 
' → logprob: -7.437710762023926
    10. '<|end|>' → logprob: -7.437710762023926

Token 213: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.705998420715332
    2. 'for' → logprob: -1.330998420715332
    3. ' if' → logprob: -2.080998420715332
    4. 'if' → logprob: -3.330998420715332
    5. '           ' → logprob: -3.830998420715332
    6. '#' (adapté à ' #') → logprob: -3.955998420715332
    7. '   ' → logprob: -4.080998420715332
    8. ' #' → logprob: -5.205998420715332
    9. 'moves' → logprob: -5.455998420715332
    10. ' directions' → logprob: -5.705998420715332

Token 214: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15084920823574066
    2. '#' → logprob: -2.2758491039276123
    3. 'if' → logprob: -4.275849342346191
    4. 'dire' → logprob: -4.525849342346191
    5. 'moves' → logprob: -4.900849342346191
    6. ' for' → logprob: -5.775849342346191
    7. 'dx' → logprob: -7.775849342346191
    8. 'steps' → logprob: -8.025849342346191
    9. 'dirs' → logprob: -8.400849342346191
    10. ' #' → logprob: -8.775849342346191

Token 215: ' position' (ID: 4010)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9899505972862244
    2. 'pos' → logprob: -1.3649506568908691
    3. 'cell' → logprob: -2.239950656890869
    4. '_y' → logprob: -2.364950656890869
    5. '_pos' → logprob: -2.739950656890869
    6. 'row' → logprob: -3.739950656890869
    7. 'for' → logprob: -4.364950656890869
    8. '_cell' → logprob: -4.364950656890869
    9. 'if' → logprob: -4.489950656890869
    10. 'positions' → logprob: -4.739950656890869

Token 216: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.074568271636963
    2. ' =' → logprob: -1.324568271636963
    3. '=' → logprob: -2.074568271636963
    4. 'for' → logprob: -2.449568271636963
    5. '#' → logprob: -3.574568271636963
    6. ' for' → logprob: -3.574568271636963
    7. 'if' → logprob: -3.824568271636963
    8. '+' → logprob: -4.574568271636963
    9. ',' → logprob: -4.699568271636963
    10. 'y' → logprob: -4.699568271636963

Token 217: '[y' (ID: 34551)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.1956225633621216
    2. ' =' → logprob: -1.6956225633621216
    3. 'value' → logprob: -1.9456225633621216
    4. '_val' → logprob: -2.070622444152832
    5. '=' → logprob: -2.195622444152832
    6. '_value' → logprob: -3.320622444152832
    7. 'count' → logprob: -3.695622444152832
    8. '_count' → logprob: -4.070622444152832
    9. 'ways' → logprob: -4.195622444152832
    10. 'y' → logprob: -4.445622444152832

Token 218: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006085559725761414
    2. ']' → logprob: -8.000608444213867
    3. ' ][' → logprob: -9.125608444213867
    4. '[x' → logprob: -9.750608444213867
    5. '+' → logprob: -10.000608444213867
    6. '   ' → logprob: -11.125608444213867
    7. '           ' → logprob: -11.750608444213867
    8. '[' → logprob: -11.875608444213867
    9. '       ' → logprob: -12.125608444213867
    10. ']][' → logprob: -12.625608444213867

Token 219: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00032879042555578053
    2. '][' → logprob: -8.62532901763916
    3. '[x' → logprob: -9.25032901763916
    4. ' x' → logprob: -10.62532901763916
    5. '
' → logprob: -11.75032901763916
    6. ']' → logprob: -12.00032901763916
    7. '+' → logprob: -13.00032901763916
    8. '   ' → logprob: -13.37532901763916
    9. '+x' → logprob: -13.37532901763916
    10. '```' → logprob: -13.62532901763916

Token 220: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.053615592420101166
    2. ']
' → logprob: -3.8036155700683594
    3. '           ' → logprob: -3.9286155700683594
    4. ']+=' → logprob: -5.928615570068359
    5. ']+' → logprob: -6.553615570068359
    6. '+' → logprob: -7.053615570068359
    7. '][' → logprob: -7.053615570068359
    8. '])' → logprob: -7.678615570068359
    9. ']:
' → logprob: -7.803615570068359
    10. ')' → logprob: -7.928615570068359

Token 221: ' has' (ID: 853)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17276641726493835
    2. 'for' → logprob: -2.4227664470672607
    3. ' for' → logprob: -3.5477664470672607
    4. '
' → logprob: -4.172766208648682
    5. 'if' → logprob: -4.547766208648682
    6. '#' → logprob: -5.047766208648682
    7. ' if' → logprob: -6.047766208648682
    8. '            
' → logprob: -6.422766208648682
    9. '<|end|>' → logprob: -7.297766208648682
    10. ',' → logprob: -7.422766208648682

Token 222: ' dp' (ID: 21546)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.6105377674102783
    2. ' ways' → logprob: -1.2355377674102783
    3. 'a' → logprob: -2.6105377674102783
    4. ' a' → logprob: -3.9855377674102783
    5. 'value' → logprob: -3.9855377674102783
    6. ' value' → logprob: -5.110537528991699
    7. 'possible' → logprob: -5.110537528991699
    8. 'the' → logprob: -5.235537528991699
    9. 'some' → logprob: -5.485537528991699
    10. 'paths' → logprob: -5.485537528991699

Token 223: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.19211307168006897
    2. 'value' → logprob: -2.817113161087036
    3. ' ways' → logprob: -3.442113161087036
    4. 'val' → logprob: -4.317112922668457
    5. '_value' → logprob: -4.442112922668457
    6. ' value' → logprob: -4.567112922668457
    7. '_val' → logprob: -4.692112922668457
    8. '           ' → logprob: -5.067112922668457
    9. 'ways' → logprob: -5.567112922668457
    10. 'count' → logprob: -5.692112922668457

Token 224: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00036918214755132794
    2. ' ][' → logprob: -9.00036907196045
    3. ']' → logprob: -9.37536907196045
    4. '   ' → logprob: -10.12536907196045
    5. '[y' → logprob: -10.25036907196045
    6. '[x' → logprob: -10.25036907196045
    7. '+' → logprob: -11.12536907196045
    8. '       ' → logprob: -11.37536907196045
    9. '[' → logprob: -12.25036907196045
    10. '           ' → logprob: -12.37536907196045

Token 225: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.4987974029500037e-05
    2. '[x' → logprob: -10.750024795532227
    3. ' x' → logprob: -12.750024795532227
    4. 'y' → logprob: -15.500024795532227
    5. ']' → logprob: -16.500024795532227
    6. '
' → logprob: -16.625024795532227
    7. ' ' → logprob: -17.250024795532227
    8. '[' → logprob: -17.250024795532227
    9. '(x' → logprob: -17.250024795532227
    10. '{x' → logprob: -17.500024795532227

Token 226: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012501158053055406
    2. ' ways' → logprob: -7.001250267028809
    3. 'ways' → logprob: -9.251250267028809
    4. ' ]' → logprob: -9.376250267028809
    5. '])' → logprob: -10.001250267028809
    6. '   ' → logprob: -10.376250267028809
    7. ']+' → logprob: -11.251250267028809
    8. ')' → logprob: -11.626250267028809
    9. ']
' → logprob: -11.626250267028809
    10. ']*' → logprob: -12.501250267028809

Token 227: ' ways' (ID: 6984)
  Prédit: ' ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.036523427814245224
    2. 'ways' → logprob: -3.6615233421325684
    3. ' possibilities' → logprob: -6.036523342132568
    4. ' value' → logprob: -6.786523342132568
    5. 'tokens' → logprob: -6.786523342132568
    6. ' tokens' → logprob: -7.411523342132568
    7. 'value' → logprob: -7.411523342132568
    8. '#' → logprob: -7.411523342132568
    9. '   ' → logprob: -7.786523342132568
    10. ' possible' → logprob: -8.286523818969727

Token 228: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032153308391571045
    2. '
' → logprob: -4.657153129577637
    3. '            
' → logprob: -5.282153129577637
    4. ' for' → logprob: -6.032153129577637
    5. '   ' → logprob: -6.032153129577637
    6. '       ' → logprob: -6.157153129577637
    7. '    
' → logprob: -6.157153129577637
    8. ',' → logprob: -6.407153129577637
    9. '<|end|>' → logprob: -6.532153129577637
    10. '               ' → logprob: -7.282153129577637

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005520791164599359
    2. '            
' → logprob: -8.2505521774292
    3. ' for' → logprob: -9.1255521774292
    4. 'for' → logprob: -9.6255521774292
    5. ',' → logprob: -10.6255521774292
    6. '<|end|>' → logprob: -10.8755521774292
    7. '          ' → logprob: -11.0005521774292
    8. '       ' → logprob: -11.5005521774292
    9. '               ' → logprob: -11.6255521774292
    10. '		' → logprob: -11.6255521774292

Token 230: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11701178550720215
    2. ' for' → logprob: -2.867011785507202
    3. 'if' → logprob: -4.117012023925781
    4. '           ' → logprob: -4.492012023925781
    5. 'moves' → logprob: -4.492012023925781
    6. '#' (adapté à ' #') → logprob: -4.742012023925781
    7. 'dire' → logprob: -6.742012023925781
    8. ' if' → logprob: -6.867012023925781
    9. 'steps' → logprob: -7.492012023925781
    10. ' moves' → logprob: -7.992012023925781

Token 231: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06848455220460892
    2. '#' → logprob: -3.3184845447540283
    3. 'if' → logprob: -4.568484783172607
    4. 'moves' → logprob: -4.693484783172607
    5. 'dire' → logprob: -5.443484783172607
    6. ' for' → logprob: -5.568484783172607
    7. 'steps' → logprob: -7.943484783172607
    8. 'dx' → logprob: -8.06848430633545
    9. 'next' → logprob: -8.31848430633545
    10. 'dirs' → logprob: -8.94348430633545

Token 232: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14531980454921722
    2. ':
' → logprob: -2.645319700241089
    3. 'to' → logprob: -3.395319700241089
    4. ' to' → logprob: -4.145319938659668
    5. '   ' → logprob: -5.020319938659668
    6. 'moves' → logprob: -6.020319938659668
    7. 'all' → logprob: -7.020319938659668
    8. 'left' → logprob: -7.020319938659668
    9. 'positions' → logprob: -7.395319938659668
    10. ' all' → logprob: -7.395319938659668

Token 233: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.16363701224327087
    2. 'move' → logprob: -2.0386369228363037
    3. ' jump' → logprob: -5.038637161254883
    4. 'for' → logprob: -5.163637161254883
    5. 'jump' → logprob: -5.913637161254883
    6. ' for' → logprob: -6.038637161254883
    7. ' go' → logprob: -6.163637161254883
    8. 'go' → logprob: -7.913637161254883
    9. '   ' → logprob: -8.288637161254883
    10. '#' → logprob: -8.913637161254883

Token 234: ' to' (ID: 316)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.38475924730300903
    2. ' right' → logprob: -2.1347591876983643
    3. ' down' → logprob: -2.7597591876983643
    4. 'right' → logprob: -2.7597591876983643
    5. ' to' → logprob: -3.2597591876983643
    6. 'to' → logprob: -4.759759426116943
    7. 'up' → logprob: -5.259759426116943
    8. '           ' → logprob: -5.259759426116943
    9. ' up' → logprob: -5.509759426116943
    10. ' in' → logprob: -6.134759426116943

Token 235: ' next' (ID: 2613)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8267555832862854
    2. '(y' → logprob: -0.9517555832862854
    3. ' y' → logprob: -1.9517555236816406
    4. ' (' → logprob: -3.9517555236816406
    5. '[y' → logprob: -5.201755523681641
    6. 'x' → logprob: -5.326755523681641
    7. '(x' → logprob: -5.576755523681641
    8. '(' → logprob: -8.20175552368164
    9. ' x' → logprob: -8.32675552368164
    10. ',y' → logprob: -9.07675552368164

Token 236: ' positions' (ID: 15897)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.25467273592948914
    2. 'row' → logprob: -2.2546727657318115
    3. ' line' → logprob: -2.6296727657318115
    4. 'y' → logprob: -4.254672527313232
    5. '_row' → logprob: -4.629672527313232
    6. ' y' → logprob: -5.129672527313232
    7. ' positions' → logprob: -5.379672527313232
    8. 'line' → logprob: -5.754672527313232
    9. '   ' → logprob: -6.129672527313232
    10. ' rows' → logprob: -6.629672527313232

Token 237: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055822957307100296
    2. '            
' → logprob: -3.8058228492736816
    3. ' for' → logprob: -4.680822849273682
    4. '
' → logprob: -5.305822849273682
    5. '               ' → logprob: -5.805822849273682
    6. ' in' → logprob: -6.180822849273682
    7. ',' → logprob: -6.555822849273682
    8. ':' → logprob: -6.805822849273682
    9. '<|end|>' → logprob: -6.805822849273682
    10. ':
' → logprob: -7.055822849273682

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005173631943762302
    2. ' for' → logprob: -6.630173683166504
    3. '            
' → logprob: -6.755173683166504
    4. ',' → logprob: -7.630173683166504
    5. '<|end|>' → logprob: -7.880173683166504
    6. '       ' → logprob: -8.130173683166504
    7. '               ' → logprob: -8.380173683166504
    8. '   ' → logprob: -9.130173683166504
    9. '
' → logprob: -9.255173683166504
    10. '#' → logprob: -9.505173683166504

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31037628650665283
    2. '           ' → logprob: -2.0603761672973633
    3. ' for' → logprob: -2.3103761672973633
    4. '#' → logprob: -3.8103761672973633
    5. 'if' → logprob: -5.310376167297363
    6. 'moves' → logprob: -5.560376167297363
    7. 'dire' → logprob: -6.435376167297363
    8. '            
' → logprob: -6.560376167297363
    9. 'dx' → logprob: -6.685376167297363
    10. 'positions' → logprob: -7.185376167297363

Token 240: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.18179035186767578
    2. ' dx' → logprob: -2.931790351867676
    3. 'ny' → logprob: -3.431790351867676
    4. 'dy' → logprob: -3.431790351867676
    5. 'nx' → logprob: -3.806790351867676
    6. ' ny' → logprob: -4.431790351867676
    7. ' dy' → logprob: -4.681790351867676
    8. ' nx' → logprob: -5.931790351867676
    9. '```' → logprob: -7.681790351867676
    10. '_dx' → logprob: -8.306790351867676

Token 241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12707708775997162
    2. 'in' → logprob: -2.127077102661133
    3. ' ' → logprob: -9.752077102661133
    4. ')' → logprob: -10.002077102661133
    5. '	in' → logprob: -11.252077102661133
    6. 'In' → logprob: -12.252077102661133
    7. '=' → logprob: -12.377077102661133
    8. ',' → logprob: -12.627077102661133
    9. '_in' → logprob: -13.252077102661133
    10. '  ' → logprob: -13.252077102661133

Token 242: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.10522891581058502
    2. '(-' → logprob: -3.105228900909424
    3. ' [-' → logprob: -3.230228900909424
    4. ' (-' → logprob: -4.480228900909424
    5. '-' → logprob: -5.980228900909424
    6. '[' → logprob: -6.855228900909424
    7. ' -' → logprob: -7.980228900909424
    8. ' [' → logprob: -8.980229377746582
    9. ' range' → logprob: -9.730229377746582
    10. '(' → logprob: -10.730229377746582

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -12.500011444091797
    3. '0' → logprob: -12.750011444091797
    4. '2' → logprob: -13.000011444091797
    5. '-' → logprob: -13.125011444091797
    6. '   ' → logprob: -15.937511444091797
    7. ' -' → logprob: -16.375011444091797
    8. '3' → logprob: -16.750011444091797
    9. '{' → logprob: -17.125011444091797
    10. '(' → logprob: -17.500011444091797

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002189756603911519
    2. ' ,' → logprob: -6.127189636230469
    3. ',+' → logprob: -13.877189636230469
    4. ',
' → logprob: -14.127189636230469
    5. '0' → logprob: -14.127189636230469
    6. ',x' → logprob: -14.377189636230469
    7. '1' → logprob: -14.752189636230469
    8. ',d' → logprob: -15.127189636230469
    9. ' ' → logprob: -15.377189636230469
    10. ',next' → logprob: -16.00218963623047

Token 245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024843348655849695
    2. ' ' → logprob: -6.002484321594238
    3. '1' → logprob: -11.752484321594238
    4. ',' → logprob: -15.377484321594238
    5. '   ' → logprob: -16.002485275268555
    6. '+' → logprob: -16.314985275268555
    7. ' ' → logprob: -16.314985275268555
    8. '  ' → logprob: -16.877485275268555
    9. '2' → logprob: -17.564985275268555
    10. '
' → logprob: -17.627485275268555

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.301394023466855e-05
    2. ' ' → logprob: -9.875062942504883
    3. '1' → logprob: -11.375062942504883
    4. '+' → logprob: -18.625062942504883
    5. '   ' → logprob: -18.625062942504883
    6. '
' → logprob: -18.812562942504883
    7. ',' → logprob: -19.000062942504883
    8. '2' → logprob: -19.937562942504883
    9. '۰' → logprob: -19.937562942504883
    10. '  ' → logprob: -20.125062942504883

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011904643615707755
    2. ' ,' → logprob: -6.751190662384033
    3. '1' → logprob: -11.376190185546875
    4. ',+' → logprob: -12.001190185546875
    5. '   ' → logprob: -14.251190185546875
    6. '2' → logprob: -15.126190185546875
    7. ' ' → logprob: -15.126190185546875
    8. '3' → logprob: -15.376190185546875
    9. ']' → logprob: -15.376190185546875
    10. ']:' → logprob: -15.751190185546875

Token 248: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11283667385578156
    2. ' ' → logprob: -2.2378365993499756
    3. '+' → logprob: -11.487836837768555
    4. ' +' → logprob: -13.112836837768555
    5. '   ' → logprob: -13.612836837768555
    6. ']' → logprob: -14.987836837768555
    7. '  ' → logprob: -15.737836837768555
    8. '2' → logprob: -16.175336837768555
    9. ' ' → logprob: -16.362836837768555
    10. ',' → logprob: -16.737836837768555

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.375017166137695
    3. '+' → logprob: -12.125017166137695
    4. ']' → logprob: -16.500017166137695
    5. '2' → logprob: -17.625017166137695
    6. '   ' → logprob: -17.750017166137695
    7. ' +' → logprob: -18.000017166137695
    8. '0' → logprob: -18.000017166137695
    9. '```' → logprob: -18.500017166137695
    10. ']+' → logprob: -18.812517166137695

Token 250: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.47777462005615234
    2. ']:
' → logprob: -0.9777746200561523
    3. ']:
' → logprob: -6.727774620056152
    4. ']' → logprob: -6.977774620056152
    5. '       ' → logprob: -6.977774620056152
    6. ',' → logprob: -8.477774620056152
    7. '               ' → logprob: -9.102774620056152
    8. '           ' → logprob: -9.227774620056152
    9. ']:

' → logprob: -9.352774620056152
    10. '   ' → logprob: -10.102774620056152

Token 251: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48759907484054565
    2. '           ' → logprob: -1.4875991344451904
    3. ':' → logprob: -2.6125991344451904
    4. '       ' → logprob: -3.9875991344451904
    5. ',' → logprob: -3.9875991344451904
    6. '<|end|>' → logprob: -3.9875991344451904
    7. ':
' → logprob: -4.987598896026611
    8. ' if' → logprob: -5.737598896026611
    9. '   ' → logprob: -5.862598896026611
    10. ' ' → logprob: -5.987598896026611

Token 252: ' nx' (ID: 50118)
  Prédit: ' ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.7273320555686951
    2. 'nx' (adapté à ' nx') → logprob: -1.2273321151733398
    3. 'ny' → logprob: -2.10233211517334
    4. ' nx' → logprob: -2.35233211517334
    5. '                   ' → logprob: -5.97733211517334
    6. ' new' → logprob: -6.35233211517334
    7. 'x' → logprob: -7.22733211517334
    8. 'new' → logprob: -8.35233211517334
    9. '               ' → logprob: -8.35233211517334
    10. '```' → logprob: -8.60233211517334

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269482672214508
    2. '=' → logprob: -2.126948356628418
    3. ')' → logprob: -11.626948356628418
    4. ',' → logprob: -12.626948356628418
    5. 'x' → logprob: -13.126948356628418
    6. '=x' → logprob: -13.626948356628418
    7. ' ' → logprob: -13.751948356628418
    8. ']' → logprob: -13.751948356628418
    9. ' =)' → logprob: -14.126948356628418
    10. ' =
' → logprob: -15.126948356628418

Token 254: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01815006136894226
    2. ' x' → logprob: -4.0181498527526855
    3. '	x' → logprob: -17.018150329589844
    4. '   ' → logprob: -17.393150329589844
    5. ' ' → logprob: -18.143150329589844
    6. '(x' → logprob: -19.143150329589844
    7. '```' → logprob: -20.518150329589844
    8. '               ' → logprob: -21.018150329589844
    9. '[x' → logprob: -21.268150329589844
    10. '  ' → logprob: -21.643150329589844

Token 255: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.392126202583313
    2. '+' → logprob: -1.517126202583313
    3. '=' → logprob: -2.6421260833740234
    4. ' =' → logprob: -3.3921260833740234
    5. '+x' → logprob: -9.142126083374023
    6. '+=' → logprob: -10.142126083374023
    7. ' +=' → logprob: -10.642126083374023
    8. ' ' → logprob: -11.267126083374023
    9. 'x' → logprob: -12.642126083374023
    10. '+y' → logprob: -13.267126083374023

Token 256: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.001171652227640152
    2. ' dx' → logprob: -6.751171588897705
    3. '1' → logprob: -14.126172065734863
    4. '(dx' → logprob: -14.376172065734863
    5. '_dx' → logprob: -15.876172065734863
    6. '.dx' → logprob: -18.501171112060547
    7. ' ' → logprob: -18.626171112060547
    8. 'd' → logprob: -19.001171112060547
    9. 'Dx' → logprob: -19.001171112060547
    10. '   ' → logprob: -19.126171112060547

Token 257: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021293947473168373
    2. '<|end|>' → logprob: -4.146294116973877
    3. ' if' → logprob: -5.521294116973877
    4. ')' → logprob: -8.146293640136719
    5. '           ' → logprob: -8.396293640136719
    6. 'if' → logprob: -8.771293640136719
    7. '                ' → logprob: -8.896293640136719
    8. '```' → logprob: -9.146293640136719
    9. '                
' → logprob: -9.271293640136719
    10. '<|end|>' → logprob: -10.271293640136719

Token 259: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.034768443554639816
    2. 'if' (adapté à ' if') → logprob: -3.4097683429718018
    3. '0' → logprob: -7.659768581390381
    4. '               ' → logprob: -8.034768104553223
    5. ' ' → logprob: -8.409768104553223
    6. '                ' → logprob: -10.159768104553223
    7. '<|end|>' → logprob: -11.034768104553223
    8. ' 
' → logprob: -11.284768104553223
    9. '                   ' → logprob: -11.784768104553223
    10. ' and' → logprob: -11.909768104553223

Token 260: ' nx' (ID: 50118)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5323513746261597
    2. ' ' → logprob: -0.9073513746261597
    3. ' nx' → logprob: -5.032351493835449
    4. 'nx' → logprob: -6.032351493835449
    5. ' not' → logprob: -8.65735149383545
    6. '(nx' → logprob: -9.53235149383545
    7. 'not' → logprob: -11.65735149383545
    8. ' nex' → logprob: -13.84485149383545
    9. 'Nx' → logprob: -14.21985149383545
    10. 'n' → logprob: -14.21985149383545

Token 261: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3979119658470154
    2. ' <' → logprob: -1.1479120254516602
    3. ' >=' → logprob: -4.89791202545166
    4. '>=' → logprob: -5.77291202545166
    5. '0' → logprob: -8.39791202545166
    6. ' ' → logprob: -8.89791202545166
    7. ' not' → logprob: -11.14791202545166
    8. '[' → logprob: -11.52291202545166
    9. '<|end|>' → logprob: -12.52291202545166
    10. ')' → logprob: -12.77291202545166

Token 262: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.626502990722656
    4. '```' → logprob: -17.751502990722656
    5. '۰' → logprob: -18.814002990722656
    6. '=' → logprob: -19.001502990722656
    7. '1' → logprob: -19.064002990722656
    8. ' ' → logprob: -19.251502990722656
    9. '  ' → logprob: -19.314002990722656
    10. '<|end|>' → logprob: -19.314002990722656

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '1' → logprob: -19.625003814697266
    4. '```' → logprob: -19.875003814697266
    5. '
' → logprob: -20.125003814697266
    6. 'X' → logprob: -20.125003814697266
    7. '00' → logprob: -20.375003814697266
    8. '=' → logprob: -20.812503814697266
    9. '۰' → logprob: -20.812503814697266
    10. '   ' → logprob: -21.125003814697266

Token 264: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008620012551546097
    2. 'or' → logprob: -4.758619785308838
    3. '	or' → logprob: -12.633620262145996
    4. ':' → logprob: -13.758620262145996
    5. '<|end|>' → logprob: -14.633620262145996
    6. '               ' → logprob: -15.633620262145996
    7. ' ' → logprob: -15.883620262145996
    8. '           ' → logprob: -15.883620262145996
    9. ':
' → logprob: -16.63361930847168
    10. '0' → logprob: -16.75861930847168

Token 265: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.029757777228951454
    2. ' nx' → logprob: -3.5297577381134033
    3. '(nx' → logprob: -11.904757499694824
    4. 'x' → logprob: -15.654757499694824
    5. 'n' → logprob: -16.15475845336914
    6. 'xn' → logprob: -16.52975845336914
    7. 'ny' → logprob: -17.40475845336914
    8. '>=' → logprob: -17.52975845336914
    9. 'Nx' → logprob: -17.77975845336914
    10. '   ' → logprob: -17.77975845336914

Token 266: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.006735860835760832
    2. ' >=' → logprob: -5.006735801696777
    3. ']>=' → logprob: -11.006735801696777
    4. '>' → logprob: -13.381735801696777
    5. ')>=' → logprob: -13.631735801696777
    6. '≥' → logprob: -15.006735801696777
    7. '```' → logprob: -15.131735801696777
    8. ' ' → logprob: -15.381735801696777
    9. '==' → logprob: -16.631736755371094
    10. '<|end|>' → logprob: -16.756736755371094

Token 267: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0004882152716163546
    2. ' X' → logprob: -7.62548828125
    3. '   ' → logprob: -15.25048828125
    4. ' ' → logprob: -17.25048828125
    5. 'x' → logprob: -17.37548828125
    6. '	X' → logprob: -18.25048828125
    7. '>X' → logprob: -19.12548828125
    8. 'Xs' → logprob: -19.37548828125
    9. '  ' → logprob: -19.50048828125
    10. '           ' → logprob: -19.75048828125

Token 268: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48881006240844727
    2. ':
' → logprob: -0.9888100624084473
    3. '               ' → logprob: -4.488810062408447
    4. '                   ' → logprob: -5.988810062408447
    5. ' or' → logprob: -7.238810062408447
    6. '           ' → logprob: -9.863809585571289
    7. '                       ' → logprob: -10.113809585571289
    8. ':return' → logprob: -11.238809585571289
    9. 'continue' → logprob: -11.238809585571289
    10. '   ' → logprob: -11.363809585571289

Token 269: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.961358904838562
    2. ':
' → logprob: -1.086358904838562
    3. '               ' → logprob: -1.461358904838562
    4. ':' → logprob: -3.0863590240478516
    5. 'continue' → logprob: -6.836359024047852
    6. ' or' → logprob: -7.961359024047852
    7. '   ' → logprob: -7.961359024047852
    8. '                       ' → logprob: -8.211359024047852
    9. ' continue' → logprob: -8.461359024047852
    10. '           ' → logprob: -8.586359024047852

Token 270: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.43926507234573364
    2. ' continue' → logprob: -1.1892650127410889
    3. '                   ' → logprob: -3.189265012741089
    4. '               ' → logprob: -4.689265251159668
    5. '       ' → logprob: -8.689265251159668
    6. '                       ' → logprob: -8.814265251159668
    7. '	continue' → logprob: -8.814265251159668
    8. '   ' → logprob: -9.189265251159668
    9. '           ' → logprob: -9.564265251159668
    10. '```' → logprob: -12.064265251159668

Token 271: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019843026995658875
    2. 'if' → logprob: -4.894843101501465
    3. ' if' → logprob: -4.894843101501465
    4. '```' → logprob: -6.519843101501465
    5. '                
' → logprob: -6.769843101501465
    6. '           ' → logprob: -7.644843101501465
    7. '<|end|>' → logprob: -8.019843101501465
    8. '                   ' → logprob: -8.644843101501465
    9. 'y' → logprob: -8.769843101501465
    10. '                ' → logprob: -8.769843101501465

Token 272: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07571343332529068
    2. '```' → logprob: -3.5757133960723877
    3. '                
' → logprob: -4.325713634490967
    4. 'if' → logprob: -4.450713634490967
    5. ' if' → logprob: -4.700713634490967
    6. '
' → logprob: -5.325713634490967
    7. '<|end|>' → logprob: -6.450713634490967
    8. '   ' → logprob: -7.325713634490967
    9. ' for' → logprob: -7.700713634490967
    10. '                   ' → logprob: -7.825713634490967

Token 273: ' ny' (ID: 4423)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1876453012228012
    2. 'ny' (adapté à ' ny') → logprob: -1.8126453161239624
    3. 'for' → logprob: -5.187645435333252
    4. '#' → logprob: -7.437645435333252
    5. '```' → logprob: -7.562645435333252
    6. '               ' → logprob: -7.812645435333252
    7. ' if' → logprob: -8.062644958496094
    8. ' ny' → logprob: -9.437644958496094
    9. '                   ' → logprob: -9.562644958496094
    10. '                
' → logprob: -9.687644958496094

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740813374519348
    2. ' =' → logprob: -0.9740813374519348
    3. '=
' → logprob: -13.349081039428711
    4. ' =
' → logprob: -13.474081039428711
    5. '=y' → logprob: -14.974081039428711
    6. ')' → logprob: -15.224081039428711
    7. ' ' → logprob: -15.474081039428711
    8. '>' → logprob: -15.724081039428711
    9. 's' → logprob: -16.59908103942871
    10. 'y' → logprob: -16.59908103942871

Token 275: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.003178544342517853
    2. ' y' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.503178596496582
    4. '	y' → logprob: -15.878178596496582
    5. ')y' → logprob: -16.753177642822266
    6. '[y' → logprob: -17.503177642822266
    7. 'Y' → logprob: -17.503177642822266
    8. '(y' → logprob: -17.503177642822266
    9. ' ' → logprob: -17.628177642822266
    10. '+' → logprob: -18.503177642822266

Token 276: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06197262182831764
    2. ' +' → logprob: -2.8119726181030273
    3. '+
' → logprob: -13.186972618103027
    4. '1' → logprob: -13.686972618103027
    5. '=' → logprob: -14.061972618103027
    6. '+y' → logprob: -14.436972618103027
    7. ' +
' → logprob: -15.311972618103027
    8. 'y' → logprob: -16.061973571777344
    9. '+=' → logprob: -16.186973571777344
    10. '＋' → logprob: -16.436973571777344

Token 277: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.031157969729975e-05
    2. ' ' → logprob: -9.625090599060059
    3. '2' → logprob: -10.750090599060059
    4. '   ' → logprob: -13.875090599060059
    5. '```' → logprob: -14.375090599060059
    6. '`' → logprob: -16.000089645385742
    7. '<|end|>' → logprob: -16.250089645385742
    8. '{
' → logprob: -16.375089645385742
    9. '
' → logprob: -16.500089645385742
    10. '0' → logprob: -16.500089645385742

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0391463193809614e-05
    2. '2' → logprob: -9.875060081481934
    3. ' ' → logprob: -11.750060081481934
    4. '   ' → logprob: -15.187560081481934
    5. '3' → logprob: -16.06256103515625
    6. '```' → logprob: -16.43756103515625
    7. '{
' → logprob: -16.75006103515625
    8. '
' → logprob: -16.75006103515625
    9. '{' → logprob: -17.18756103515625
    10. 's' → logprob: -17.50006103515625

Token 279: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2060125768184662
    2. '<|end|>' → logprob: -1.7060126066207886
    3. ' if' → logprob: -6.581012725830078
    4. '```' → logprob: -6.706012725830078
    5. '<|end|>' → logprob: -7.456012725830078
    6. '                
' → logprob: -7.706012725830078
    7. '           ' → logprob: -7.956012725830078
    8. '       ' → logprob: -9.456012725830078
    9. '
' → logprob: -9.456012725830078
    10. '                ' → logprob: -9.706012725830078

Token 280: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5242605805397034
    2. '<|end|>' → logprob: -0.8992605805397034
    3. '```' → logprob: -8.024260520935059
    4. '<|end|>' → logprob: -8.024260520935059
    5. ' if' → logprob: -8.899260520935059
    6. '                
' → logprob: -9.149260520935059
    7. ')' → logprob: -9.399260520935059
    8. '                ' → logprob: -10.274260520935059
    9. '           ' → logprob: -10.399260520935059
    10. '              ' → logprob: -10.524260520935059

Token 281: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4646064341068268
    2. '               ' → logprob: -1.4646064043045044
    3. ' if' → logprob: -1.9646064043045044
    4. '                
' → logprob: -8.589606285095215
    5. '           ' → logprob: -10.839606285095215
    6. '                ' → logprob: -11.464606285095215
    7. '```' → logprob: -12.589606285095215
    8. '                   ' → logprob: -12.964606285095215
    9. '              ' → logprob: -13.089606285095215
    10. '   ' → logprob: -13.089606285095215

Token 282: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.1005195677280426
    2. ' ny' → logprob: -2.3505196571350098
    3. '0' → logprob: -8.850519180297852
    4. 'grid' → logprob: -9.975519180297852
    5. ' grid' → logprob: -10.600519180297852
    6. 'n' → logprob: -10.975519180297852
    7. '1' → logprob: -11.100519180297852
    8. ' ' → logprob: -11.475519180297852
    9. 'Ny' → logprob: -11.850519180297852
    10. 'Y' → logprob: -12.288019180297852

Token 283: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.20633023977279663
    2. '>=' → logprob: -1.8313302993774414
    3. ' <' → logprob: -3.9563302993774414
    4. '<|end|>' → logprob: -5.456330299377441
    5. '<' → logprob: -6.206330299377441
    6. ' ==' → logprob: -8.206330299377441
    7. ']>=' → logprob: -8.456330299377441
    8. '==' → logprob: -8.706330299377441
    9. ')>=' → logprob: -9.581330299377441
    10. '[' → logprob: -10.956330299377441

Token 284: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.02984466589987278
    2. 'len' → logprob: -3.5298447608947754
    3. ' Y' → logprob: -9.654844284057617
    4. ' len' → logprob: -11.154844284057617
    5. 'y' → logprob: -11.779844284057617
    6. '   ' → logprob: -12.529844284057617
    7. '(len' → logprob: -13.404844284057617
    8. '(Y' → logprob: -14.029844284057617
    9. '	Y' → logprob: -14.154844284057617
    10. ' ' → logprob: -14.529844284057617

Token 285: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.36319854855537415
    2. ' or' → logprob: -1.4881985187530518
    3. ':' → logprob: -2.6131985187530518
    4. 'or' → logprob: -5.863198757171631
    5. '           ' → logprob: -7.488198757171631
    6. '               ' → logprob: -7.488198757171631
    7. 'and' → logprob: -7.988198757171631
    8. ' and' → logprob: -8.113198280334473
    9. '   ' → logprob: -8.238198280334473
    10. '                   ' → logprob: -8.363198280334473

Token 286: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012648437172174454
    2. ':
' → logprob: -4.762648582458496
    3. ':' → logprob: -6.387648582458496
    4. '               ' → logprob: -6.762648582458496
    5. 'continue' → logprob: -7.262648582458496
    6. ' continue' → logprob: -9.137648582458496
    7. ' or' → logprob: -9.137648582458496
    8. '                       ' → logprob: -9.262648582458496
    9. '           ' → logprob: -9.637648582458496
    10. '   ' → logprob: -9.762648582458496

Token 287: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8126693964004517
    2. 'dp' → logprob: -1.4376693964004517
    3. ' continue' → logprob: -2.062669277191162
    4. '                   ' → logprob: -2.312669277191162
    5. ' dp' → logprob: -2.812669277191162
    6. '               ' → logprob: -3.562669277191162
    7. '   ' → logprob: -5.937669277191162
    8. '           ' → logprob: -7.187669277191162
    9. '                       ' → logprob: -8.43766975402832
    10. 'print' → logprob: -8.81266975402832

Token 288: ' over' (ID: 1072)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0020180940628051758
    2. 'continue' → logprob: -6.377017974853516
    3. '#' → logprob: -9.002017974853516
    4. ' dp' → logprob: -9.377017974853516
    5. 'for' → logprob: -9.877017974853516
    6. '   ' → logprob: -11.002017974853516
    7. 'if' → logprob: -11.127017974853516
    8. '               ' → logprob: -12.127017974853516
    9. ' continue' → logprob: -12.252017974853516
    10. '           ' → logprob: -12.377017974853516

Token 289: ' the' (ID: 290)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.917731761932373
    2. 'step' → logprob: -1.917731761932373
    3. 'the' → logprob: -2.167731761932373
    4. 'jump' → logprob: -2.292731761932373
    5. 'count' → logprob: -2.542731761932373
    6. 'flow' → logprob: -2.542731761932373
    7. 'bound' → logprob: -3.042731761932373
    8. 'bounds' → logprob: -3.167731761932373
    9. 'all' → logprob: -3.292731761932373
    10. 'continue' → logprob: -3.417731761932373

Token 290: ' bottom' (ID: 8725)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.7565554976463318
    2. 'last' → logprob: -1.6315555572509766
    3. 'boundary' → logprob: -1.8815555572509766
    4. 'board' → logprob: -2.1315555572509766
    5. 'field' → logprob: -3.8815555572509766
    6. 'edge' → logprob: -4.256555557250977
    7. 'limit' → logprob: -4.756555557250977
    8. 'border' → logprob: -5.381555557250977
    9. 'wall' → logprob: -6.006555557250977
    10. 'line' → logprob: -6.381555557250977

Token 291: ' -' (ID: 533)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5253729224205017
    2. ':' → logprob: -1.6503729820251465
    3. 'continue' → logprob: -2.6503729820251465
    4. '               ' → logprob: -2.7753729820251465
    5. '                   ' → logprob: -3.4003729820251465
    6. ' continue' → logprob: -3.6503729820251465
    7. '   ' → logprob: -4.9003729820251465
    8. '           ' → logprob: -5.2753729820251465
    9. 'break' → logprob: -5.2753729820251465
    10. ' break' → logprob: -6.4003729820251465

Token 292: ' count' (ID: 3605)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05739305168390274
    2. 'continue' → logprob: -3.3073930740356445
    3. ' dp' → logprob: -4.4323930740356445
    4. ' continue' → logprob: -5.0573930740356445
    5. '#' → logprob: -8.182393074035645
    6. '   ' → logprob: -8.432393074035645
    7. '               ' → logprob: -9.182393074035645
    8. '           ' → logprob: -9.682393074035645
    9. '                   ' → logprob: -9.807393074035645
    10. 'for' → logprob: -9.932393074035645

Token 293: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0338236540555954
    2. ' dp' → logprob: -3.5338237285614014
    3. '+=' → logprob: -6.158823490142822
    4. ' +=' → logprob: -7.283823490142822
    5. '                   ' → logprob: -8.40882396697998
    6. '               ' → logprob: -8.40882396697998
    7. '   ' → logprob: -8.65882396697998
    8. '(dp' → logprob: -9.15882396697998
    9. 'ways' → logprob: -9.40882396697998
    10. '           ' → logprob: -9.40882396697998

Token 294: '1' (ID: 16)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.046135686337947845
    2. ' dp' → logprob: -3.546135663986206
    3. 'ways' → logprob: -5.296135902404785
    4. '+=' → logprob: -5.296135902404785
    5. ' +=' → logprob: -6.421135902404785
    6. 'as' → logprob: -6.671135902404785
    7. ' ways' → logprob: -6.796135902404785
    8. '=' → logprob: -8.046135902404785
    9. 'ans' → logprob: -8.171135902404785
    10. 'the' → logprob: -8.171135902404785

Token 295: ' way' (ID: 2006)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9956791996955872
    2. '               ' → logprob: -1.2456791400909424
    3. '           ' → logprob: -1.6206791400909424
    4. '                   ' → logprob: -2.7456791400909424
    5. '
' → logprob: -3.7456791400909424
    6. '+=' → logprob: -3.9956791400909424
    7. 'dp' → logprob: -4.6206793785095215
    8. ',' → logprob: -5.4956793785095215
    9. '   ' → logprob: -5.6206793785095215
    10. '+' → logprob: -5.9956793785095215

Token 296: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08197334408760071
    2. '               ' → logprob: -2.7069733142852783
    3. '                       ' → logprob: -5.581973552703857
    4. ' +=' → logprob: -6.081973552703857
    5. '+' → logprob: -6.331973552703857
    6. '           ' → logprob: -6.456973552703857
    7. '                           ' → logprob: -7.831973552703857
    8. '+=' → logprob: -7.831973552703857
    9. ',' → logprob: -7.956973552703857
    10. ' and' → logprob: -8.0819730758667

Token 297: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21604909002780914
    2. '               ' → logprob: -2.0910491943359375
    3. ':' → logprob: -3.2160491943359375
    4. '                       ' → logprob: -4.5910491943359375
    5. ':
' → logprob: -4.7160491943359375
    6. '+' → logprob: -5.8410491943359375
    7. '           ' → logprob: -6.4660491943359375
    8. ',' → logprob: -6.5910491943359375
    9. '
' → logprob: -6.7160491943359375
    10. '                           ' → logprob: -7.2160491943359375

Token 298: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00726312818005681
    2. ' dp' → logprob: -5.00726318359375
    3. '                   ' → logprob: -8.00726318359375
    4. 'continue' → logprob: -9.75726318359375
    5. '                       ' → logprob: -10.13226318359375
    6. 'for' → logprob: -10.63226318359375
    7. '                           ' → logprob: -10.75726318359375
    8. '               ' → logprob: -10.88226318359375
    9. '                               ' → logprob: -11.75726318359375
    10. '```' → logprob: -11.88226318359375

Token 299: '[Y' (ID: 173881)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.002473635831847787
    2. '[Y' → logprob: -6.127473831176758
    3. '[' → logprob: -8.377473831176758
    4. 'y' → logprob: -10.127473831176758
    5. '[n' → logprob: -11.627473831176758
    6. 'Y' → logprob: -13.627473831176758
    7. '
' → logprob: -13.752473831176758
    8. '[len' → logprob: -14.252473831176758
    9. '[next' → logprob: -14.252473831176758
    10. '][' → logprob: -14.377473831176758

Token 300: '].' (ID: 1651)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009961245581507683
    2. ']' → logprob: -4.884961128234863
    3. '+' → logprob: -7.134961128234863
    4. '][-' → logprob: -7.134961128234863
    5. '])' → logprob: -8.509961128234863
    6. '-' → logprob: -9.009961128234863
    7. '][]' → logprob: -9.134961128234863
    8. '[' → logprob: -9.509961128234863
    9. ']+=' → logprob: -9.884961128234863
    10. ']+' → logprob: -10.759961128234863

Token 301: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.23267918825149536
    2. 'nx' → logprob: -2.1076791286468506
    3. 'sum' → logprob: -2.8576791286468506
    4. 'extend' → logprob: -4.48267936706543
    5. '[n' → logprob: -5.10767936706543
    6. 'count' → logprob: -5.35767936706543
    7. 'fill' → logprob: -5.98267936706543
    8. '__' → logprob: -7.35767936706543
    9. '[' → logprob: -7.48267936706543
    10. 'insert' → logprob: -7.73267936706543

Token 302: '(dp' (ID: 68843)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02357236109673977
    2. '(dp' → logprob: -3.8985724449157715
    3. '1' → logprob: -5.8985724449157715
    4. 'dp' → logprob: -8.273571968078613
    5. ' (' → logprob: -11.898571968078613
    6. '((' → logprob: -12.648571968078613
    7. '(
' → logprob: -12.773571968078613
    8. '0' → logprob: -13.398571968078613
    9. '([' → logprob: -13.523571968078613
    10. '[' → logprob: -13.898571968078613

Token 303: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0013598784571513534
    2. '[Y' → logprob: -7.126359939575195
    3. 'y' → logprob: -7.751359939575195
    4. '[' → logprob: -10.001359939575195
    5. '][' → logprob: -10.001359939575195
    6. 'Y' → logprob: -11.626359939575195
    7. ' [' → logprob: -11.626359939575195
    8. '```' → logprob: -12.501359939575195
    9. ']' → logprob: -13.251359939575195
    10. ' y' → logprob: -13.376359939575195

Token 304: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2857072949409485
    2. '[x' → logprob: -1.4107072353363037
    3. '[y' → logprob: -6.035707473754883
    4. '[' → logprob: -6.660707473754883
    5. ']' → logprob: -8.035707473754883
    6. 'x' → logprob: -8.410707473754883
    7. ' ][' → logprob: -8.910707473754883
    8. ' [' → logprob: -9.285707473754883
    9. ' ' → logprob: -10.660707473754883
    10. '[s' → logprob: -11.160707473754883

Token 305: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7954958821064793e-05
    2. '[x' → logprob: -11.000018119812012
    3. ' x' → logprob: -14.250018119812012
    4. '[' → logprob: -14.625018119812012
    5. '][' → logprob: -16.750017166137695
    6. ']' → logprob: -18.375017166137695
    7. '{x' → logprob: -18.500017166137695
    8. '(x' → logprob: -18.750017166137695
    9. 'grid' → logprob: -18.750017166137695
    10. ' ' → logprob: -19.375017166137695

Token 306: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5909196734428406
    2. ')' → logprob: -0.8409196734428406
    3. '])
' → logprob: -4.965919494628906
    4. ')
' → logprob: -5.590919494628906
    5. ' )' → logprob: -6.965919494628906
    6. '))' → logprob: -7.340919494628906
    7. '*' → logprob: -7.465919494628906
    8. ']' → logprob: -7.590919494628906
    9. '           ' → logprob: -8.465919494628906
    10. ' ])' → logprob: -8.715919494628906

Token 307: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05355311185121536
    2. '               ' → logprob: -3.3035531044006348
    3. '           ' → logprob: -4.678553104400635
    4. ' continue' → logprob: -6.303553104400635
    5. 'continue' → logprob: -6.553553104400635
    6. ')' → logprob: -7.053553104400635
    7. '                       ' → logprob: -7.803553104400635
    8. '       ' → logprob: -8.303553581237793
    9. '<|end|>' → logprob: -8.303553581237793
    10. '+' → logprob: -8.428553581237793

Token 308: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5326529741287231
    2. '               ' → logprob: -1.2826529741287231
    3. ')' → logprob: -2.9076528549194336
    4. 'continue' → logprob: -2.9076528549194336
    5. ' continue' → logprob: -4.907652854919434
    6. '+' → logprob: -5.157652854919434
    7. '           ' → logprob: -5.907652854919434
    8. '                ' → logprob: -6.657652854919434
    9. '
' → logprob: -6.907652854919434
    10. '[' → logprob: -7.032652854919434

Token 309: ' just' (ID: 1327)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4166485667228699
    2. ' continue' → logprob: -1.1666486263275146
    3. 'pass' → logprob: -4.5416483879089355
    4. '                   ' → logprob: -4.5416483879089355
    5. ' pass' → logprob: -5.6666483879089355
    6. '               ' → logprob: -6.7916483879089355
    7. 'dp' → logprob: -7.4166483879089355
    8. 'break' → logprob: -7.6666483879089355
    9. ')' → logprob: -7.7916483879089355
    10. '#' → logprob: -8.041648864746094

Token 310: ' to' (ID: 316)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.020144619047641754
    2. 'pass' → logprob: -4.520144462585449
    3. ' continue' → logprob: -5.020144462585449
    4. 'break' → logprob: -6.895144462585449
    5. '...' → logprob: -7.895144462585449
    6. '                   ' → logprob: -8.77014446258545
    7. 'count' → logprob: -8.89514446258545
    8. '.' → logprob: -9.02014446258545
    9. '           ' → logprob: -9.02014446258545
    10. '               ' → logprob: -9.14514446258545

Token 311: ' keep' (ID: 3357)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.33773380517959595
    2. 'count' → logprob: -2.087733745574951
    3. 'avoid' → logprob: -3.212733745574951
    4. 'continue' → logprob: -3.837733745574951
    5. ' avoid' → logprob: -3.962733745574951
    6. 'prevent' → logprob: -3.962733745574951
    7. ' pass' → logprob: -4.712733745574951
    8. 'expand' → logprob: -5.337733745574951
    9. 'record' → logprob: -5.337733745574951
    10. ' prevent' → logprob: -5.462733745574951

Token 312: ' consistent' (ID: 20434)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8968745470046997
    2. 'count' → logprob: -1.8968745470046997
    3. ' going' → logprob: -2.27187442779541
    4. 'passing' → logprob: -2.39687442779541
    5. 'going' → logprob: -2.64687442779541
    6. 'pass' → logprob: -3.64687442779541
    7. 'Index' → logprob: -4.14687442779541
    8. 'indent' → logprob: -4.27187442779541
    9. 'track' → logprob: -4.52187442779541
    10. 'continu' → logprob: -4.64687442779541

Token 313: ' length' (ID: 5517)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04680444672703743
    2. 'continue' → logprob: -3.796804428100586
    3. '           ' → logprob: -4.546804428100586
    4. '               ' → logprob: -4.921804428100586
    5. ' continue' → logprob: -5.296804428100586
    6. ')' → logprob: -9.171804428100586
    7. ',' → logprob: -9.921804428100586
    8. '                       ' → logprob: -10.046804428100586
    9. '
' → logprob: -10.296804428100586
    10. '       ' → logprob: -10.546804428100586

Token 314: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02559603750705719
    2. '               ' → logprob: -4.6505961418151855
    3. '           ' → logprob: -4.7755961418151855
    4. 'continue' → logprob: -5.9005961418151855
    5. ' continue' → logprob: -6.1505961418151855
    6. ')' → logprob: -6.5255961418151855
    7. '                       ' → logprob: -8.775595664978027
    8. ',' → logprob: -9.150595664978027
    9. '                    ' → logprob: -9.400595664978027
    10. '+' → logprob: -9.400595664978027

Token 315: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.40170711278915405
    2. '                   ' → logprob: -1.7767071723937988
    3. ' continue' → logprob: -1.9017071723937988
    4. '               ' → logprob: -4.776707172393799
    5. '                       ' → logprob: -6.151707172393799
    6. '           ' → logprob: -7.901707172393799
    7. '   ' → logprob: -8.15170669555664
    8. 'dp' → logprob: -8.40170669555664
    9. '                    ' → logprob: -9.02670669555664
    10. '                  ' → logprob: -9.27670669555664

Token 316: ' need' (ID: 1309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07982279360294342
    2. ' dp' → logprob: -4.079823017120361
    3. 'continue' → logprob: -4.329823017120361
    4. '+=' → logprob: -4.704823017120361
    5. ' need' → logprob: -5.454823017120361
    6. '+' → logprob: -5.704823017120361
    7. ')' → logprob: -5.829823017120361
    8. '=' → logprob: -5.829823017120361
    9. 'need' → logprob: -5.954823017120361
    10. ' continue' → logprob: -6.079823017120361

Token 317: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9116356372833252
    2. '                   ' → logprob: -1.5366356372833252
    3. '=' → logprob: -2.036635637283325
    4. '           ' → logprob: -2.786635637283325
    5. 'for' → logprob: -2.911635637283325
    6. 'continue' → logprob: -3.036635637283325
    7. ')' → logprob: -3.661635637283325
    8. ' for' → logprob: -3.911635637283325
    9. 'else' → logprob: -4.536635398864746
    10. ' to' → logprob: -5.161635398864746

Token 318: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1040075272321701
    2. '               ' → logprob: -2.9790074825286865
    3. 'continue' → logprob: -3.8540074825286865
    4. '           ' → logprob: -4.104007720947266
    5. ' continue' → logprob: -4.729007720947266
    6. ')' → logprob: -7.854007720947266
    7. '                       ' → logprob: -8.354007720947266
    8. '       ' → logprob: -8.479007720947266
    9. '   ' → logprob: -8.854007720947266
    10. ',' → logprob: -9.604007720947266

Token 319: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.03600286692380905
    2. ' continue' → logprob: -3.9110028743743896
    3. '                   ' → logprob: -4.5360026359558105
    4. 'dp' → logprob: -5.6610026359558105
    5. '               ' → logprob: -7.5360026359558105
    6. 'pass' → logprob: -9.036003112792969
    7. '                       ' → logprob: -9.161003112792969
    8. ' dp' → logprob: -9.911003112792969
    9. '...' → logprob: -10.161003112792969
    10. '                    ' → logprob: -10.286003112792969

Token 320: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010967887006700039
    2. 'if' → logprob: -4.63596773147583
    3. ' if' → logprob: -7.26096773147583
    4. '           ' → logprob: -8.760968208312988
    5. '                   ' → logprob: -9.510968208312988
    6. '```' → logprob: -9.510968208312988
    7. '#' → logprob: -9.885968208312988
    8. 'continue' → logprob: -10.385968208312988
    9. '                ' → logprob: -10.510968208312988
    10. ')' → logprob: -11.385968208312988

Token 321: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016974377213045955
    2. 'if' → logprob: -6.751697540283203
    3. ' if' → logprob: -8.626697540283203
    4. '+' → logprob: -8.751697540283203
    5. '                ' → logprob: -9.501697540283203
    6. '              ' → logprob: -10.126697540283203
    7. '           ' → logprob: -11.126697540283203
    8. ')' → logprob: -11.251697540283203
    9. '                   ' → logprob: -11.626697540283203
    10. 'dp' → logprob: -11.751697540283203

Token 322: ' cell' (ID: 4206)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0299080740660429
    2. '               ' → logprob: -3.6549081802368164
    3. ' if' → logprob: -5.654908180236816
    4. '           ' → logprob: -9.779908180236816
    5. '```' → logprob: -10.904908180236816
    6. 'If' → logprob: -11.404908180236816
    7. 'elif' → logprob: -12.154908180236816
    8. '                
' → logprob: -13.029908180236816
    9. '#' → logprob: -13.154908180236816
    10. '	if' → logprob: -13.904908180236816

Token 323: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34985843300819397
    2. ' =' → logprob: -1.2248584032058716
    3. '_value' → logprob: -7.224858283996582
    4. 'if' → logprob: -7.849858283996582
    5. '==' → logprob: -9.224858283996582
    6. 'value' → logprob: -9.224858283996582
    7. '_val' → logprob: -10.599858283996582
    8. '=
' → logprob: -11.849858283996582
    9. 'status' → logprob: -11.974858283996582
    10. '=n' → logprob: -12.349858283996582

Token 324: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.003178306156769395
    2. ' grid' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.378178596496582
    4. '0' → logprob: -16.628177642822266
    5. '	grid' → logprob: -16.628177642822266
    6. '(grid' → logprob: -16.753177642822266
    7. ' ' → logprob: -17.378177642822266
    8. 'Grid' → logprob: -17.503177642822266
    9. 'gr' → logprob: -17.503177642822266
    10. '.grid' → logprob: -18.253177642822266

Token 325: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014935573562979698
    2. '[y' → logprob: -6.751493453979492
    3. 'ny' → logprob: -8.126493453979492
    4. '=' → logprob: -12.376493453979492
    5. '][' → logprob: -12.626493453979492
    6. '[n' → logprob: -12.626493453979492
    7. ' [' → logprob: -13.001493453979492
    8. '   ' → logprob: -13.376493453979492
    9. '       ' → logprob: -13.376493453979492
    10. '           ' → logprob: -13.501493453979492

Token 326: 'ny' (ID: 3008)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07026606798171997
    2. 'ny' → logprob: -2.695266008377075
    3. '[y' → logprob: -8.695265769958496
    4. 'yn' → logprob: -10.195265769958496
    5. ' ny' → logprob: -10.820265769958496
    6. ' y' → logprob: -10.945265769958496
    7. '[' → logprob: -11.070265769958496
    8. '   ' → logprob: -11.445265769958496
    9. 'n' → logprob: -11.820265769958496
    10. '	y' → logprob: -12.320265769958496

Token 327: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003909927327185869
    2. ']' → logprob: -8.000391006469727
    3. '[' → logprob: -10.250391006469727
    4. '[n' → logprob: -11.375391006469727
    5. ' ][' → logprob: -12.875391006469727
    6. '"][' → logprob: -13.375391006469727
    7. '       ' → logprob: -14.250391006469727
    8. ']][' → logprob: -14.250391006469727
    9. ''][' → logprob: -14.500391006469727
    10. '<|end|>' → logprob: -15.125391006469727

Token 328: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00017243190086446702
    2. ' nx' → logprob: -8.75017261505127
    3. '(nx' → logprob: -11.37517261505127
    4. 'n' → logprob: -14.00017261505127
    5. 'x' → logprob: -14.12517261505127
    6. '
' → logprob: -15.37517261505127
    7. 'Nx' → logprob: -15.75017261505127
    8. '```' → logprob: -16.375171661376953
    9. 'xn' → logprob: -16.500171661376953
    10. 'ny' → logprob: -16.625171661376953

Token 329: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4742357134819031
    2. ']' → logprob: -0.9742357134819031
    3. ')
' → logprob: -9.849235534667969
    4. ')' → logprob: -10.099235534667969
    5. ']==' → logprob: -10.474235534667969
    6. ']
' → logprob: -10.724235534667969
    7. ']

' → logprob: -11.974235534667969
    8. '])' → logprob: -13.224235534667969
    9. ')]' → logprob: -13.474235534667969
    10. '])
' → logprob: -13.724235534667969

Token 330: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002790730679407716
    2. '<|end|>' → logprob: -6.252790927886963
    3. ' if' → logprob: -8.502790451049805
    4. '```' → logprob: -8.627790451049805
    5. '                
' → logprob: -9.002790451049805
    6. '           ' → logprob: -9.002790451049805
    7. '<|end|>' → logprob: -9.877790451049805
    8. '                ' → logprob: -10.252790451049805
    9. 'if' → logprob: -10.252790451049805
    10. '                   ' → logprob: -10.502790451049805

Token 331: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3069286346435547
    2. ' if' → logprob: -1.5569286346435547
    3. '               ' → logprob: -2.9319286346435547
    4. '                ' → logprob: -9.431928634643555
    5. '           ' → logprob: -10.306928634643555
    6. '<|end|>' → logprob: -10.431928634643555
    7. 'If' → logprob: -10.556928634643555
    8. '```' → logprob: -10.931928634643555
    9. '                   ' → logprob: -11.056928634643555
    10. '                
' → logprob: -12.556928634643555

Token 332: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.17995384335517883
    2. ' cell' → logprob: -1.8049538135528564
    3. 'dp' → logprob: -9.554953575134277
    4. '(cell' → logprob: -10.304953575134277
    5. 'grid' → logprob: -10.929953575134277
    6. '[cell' → logprob: -10.929953575134277
    7. '	cell' → logprob: -10.929953575134277
    8. ' dp' → logprob: -11.429953575134277
    9. ' ' → logprob: -11.679953575134277
    10. ' grid' → logprob: -12.179953575134277

Token 333: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22605980932712555
    2. '==' → logprob: -1.6010597944259644
    3. ' !=' → logprob: -7.726059913635254
    4. ' in' → logprob: -9.476059913635254
    5. '!=' → logprob: -9.726059913635254
    6. ']==' → logprob: -10.476059913635254
    7. '[' → logprob: -11.601059913635254
    8. '0' → logprob: -12.351059913635254
    9. ']' → logprob: -12.351059913635254
    10. ')' → logprob: -12.351059913635254

Token 334: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10043030977249146
    2. ' ' → logprob: -2.6004302501678467
    3. '1' → logprob: -3.8504302501678467
    4. '2' → logprob: -11.287930488586426
    5. '   ' → logprob: -11.725430488586426
    6. '  ' → logprob: -13.100430488586426
    7. ' -' → logprob: -13.287930488586426
    8. '```' → logprob: -13.850430488586426
    9. ' ' → logprob: -13.850430488586426
    10. '3' → logprob: -13.975430488586426

Token 335: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027887385338544846
    2. '1' → logprob: -3.6528873443603516
    3. ' ' → logprob: -6.527887344360352
    4. '-' → logprob: -9.777887344360352
    5. '2' → logprob: -10.277887344360352
    6. '   ' → logprob: -12.402887344360352
    7. '3' → logprob: -12.465387344360352
    8. ' -' → logprob: -12.652887344360352
    9. '  ' → logprob: -13.340387344360352
    10. '
' → logprob: -13.340387344360352

Token 336: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31614670157432556
    2. ':
' → logprob: -1.816146731376648
    3. ' or' → logprob: -2.5661466121673584
    4. '                   ' → logprob: -3.6911466121673584
    5. '               ' → logprob: -5.8161468505859375
    6. ' and' → logprob: -6.4411468505859375
    7. '           ' → logprob: -7.1911468505859375
    8. '                       ' → logprob: -7.6911468505859375
    9. '   ' → logprob: -7.8161468505859375
    10. '       ' → logprob: -9.441146850585938

Token 337: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029014280065894127
    2. '               ' → logprob: -4.5290141105651855
    3. ' continue' → logprob: -4.7790141105651855
    4. 'continue' → logprob: -4.7790141105651855
    5. '   ' → logprob: -7.2790141105651855
    6. '           ' → logprob: -9.279014587402344
    7. '                       ' → logprob: -9.279014587402344
    8. 'dp' → logprob: -10.654014587402344
    9. ' or' → logprob: -11.279014587402344
    10. ' dp' → logprob: -11.279014587402344

Token 338: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21464110910892487
    2. '#' (adapté à ' #') → logprob: -2.2146410942077637
    3. '                   ' → logprob: -3.4646410942077637
    4. 'if' → logprob: -3.4646410942077637
    5. ' continue' → logprob: -5.214641094207764
    6. 'jump' → logprob: -5.339641094207764
    7. '                       ' → logprob: -5.589641094207764
    8. 'dp' → logprob: -5.589641094207764
    9. '               ' → logprob: -6.964641094207764
    10. '   ' → logprob: -7.589641094207764

Token 339: ' obstacle' (ID: 57212)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6658602356910706
    2. 'continue' → logprob: -0.9158602356910706
    3. 'jump' → logprob: -2.915860176086426
    4. ' continue' → logprob: -4.415860176086426
    5. 'if' → logprob: -4.665860176086426
    6. 'ny' → logprob: -5.790860176086426
    7. 'for' → logprob: -6.415860176086426
    8. ' #' → logprob: -6.665860176086426
    9. 'dp' → logprob: -7.540860176086426
    10. 'pass' → logprob: -7.790860176086426

Token 340: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0735316202044487
    2. '                       ' → logprob: -3.6985316276550293
    3. 'continue' → logprob: -4.073531627655029
    4. ':
' → logprob: -4.448531627655029
    5. ':' → logprob: -4.948531627655029
    6. ' continue' → logprob: -5.323531627655029
    7. '               ' → logprob: -5.823531627655029
    8. '
' → logprob: -7.573531627655029
    9. ',' → logprob: -7.698531627655029
    10. '   ' → logprob: -7.948531627655029

Token 341: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09160128980875015
    2. 'continue' → logprob: -3.0916013717651367
    3. ' continue' → logprob: -4.466601371765137
    4. '                       ' → logprob: -5.091601371765137
    5. ',' → logprob: -5.341601371765137
    6. ':' → logprob: -5.341601371765137
    7. '               ' → logprob: -5.466601371765137
    8. ':
' → logprob: -5.716601371765137
    9. ' or' → logprob: -6.091601371765137
    10. '#' → logprob: -6.841601371765137

Token 342: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.04186028987169266
    2. ' continue' → logprob: -3.541860342025757
    3. '                   ' → logprob: -5.166860103607178
    4. '#' → logprob: -6.041860103607178
    5. 'if' → logprob: -6.166860103607178
    6. '                       ' → logprob: -7.041860103607178
    7. '   ' → logprob: -8.416860580444336
    8. '               ' → logprob: -8.416860580444336
    9. 'jump' → logprob: -8.666860580444336
    10. 'pass' → logprob: -8.916860580444336

Token 343: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008084330474957824
    2. '                
' → logprob: -8.250808715820312
    3. 'dp' → logprob: -9.375808715820312
    4. '
' → logprob: -9.375808715820312
    5. 'elif' → logprob: -9.375808715820312
    6. ')' → logprob: -9.750808715820312
    7. 'if' → logprob: -10.000808715820312
    8. '                ' → logprob: -10.125808715820312
    9. '<|end|>' → logprob: -10.500808715820312
    10. '```' → logprob: -10.625808715820312

Token 344: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010051815770566463
    2. '                
' → logprob: -7.501005172729492
    3. 'if' → logprob: -8.751005172729492
    4. '
' → logprob: -9.626005172729492
    5. 'elif' → logprob: -9.626005172729492
    6. '```' → logprob: -9.876005172729492
    7. ' if' → logprob: -10.876005172729492
    8. 'dp' → logprob: -11.126005172729492
    9. '              ' → logprob: -11.251005172729492
    10. '                ' → logprob: -11.376005172729492

Token 345: ' elif' (ID: 9497)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6694312691688538
    2. '               ' → logprob: -0.9194312691688538
    3. ' dp' → logprob: -2.919431209564209
    4. 'if' → logprob: -4.044431209564209
    5. ' if' → logprob: -4.169431209564209
    6. '                
' → logprob: -7.419431209564209
    7. '                ' → logprob: -7.544431209564209
    8. '                   ' → logprob: -7.794431209564209
    9. '           ' → logprob: -8.794431686401367
    10. 'elif' (adapté à ' elif') → logprob: -9.044431686401367

Token 346: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.22605933248996735
    2. ' cell' → logprob: -1.6010593175888062
    3. 'grid' → logprob: -8.726058959960938
    4. 'dp' → logprob: -8.851058959960938
    5. ' grid' → logprob: -9.351058959960938
    6. ' dp' → logprob: -9.476058959960938
    7. 'ny' → logprob: -10.726058959960938
    8. '0' → logprob: -10.726058959960938
    9. 'y' → logprob: -10.976058959960938
    10. ' ' → logprob: -10.976058959960938

Token 347: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20144890248775482
    2. '==' → logprob: -1.701448917388916
    3. '[' → logprob: -11.201448440551758
    4. ']==' → logprob: -12.076448440551758
    5. ' in' → logprob: -12.076448440551758
    6. 'in' → logprob: -13.201448440551758
    7. ':' → logprob: -13.576448440551758
    8. '[]' → logprob: -13.826448440551758
    9. '=' → logprob: -14.076448440551758
    10. ' ' → logprob: -14.201448440551758

Token 348: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5878946781158447
    2. ' ' → logprob: -1.3378946781158447
    3. '0' → logprob: -1.7128946781158447
    4. '3' → logprob: -6.837894439697266
    5. '1' → logprob: -7.962894439697266
    6. '4' → logprob: -9.525394439697266
    7. ' -' → logprob: -9.587894439697266
    8. '9' → logprob: -9.900394439697266
    9. '-' → logprob: -10.337894439697266
    10. '5' → logprob: -10.962894439697266

Token 349: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5811380743980408
    2. '0' → logprob: -0.8311380743980408
    3. '3' → logprob: -5.9561381340026855
    4. ' ' → logprob: -6.3311381340026855
    5. '1' → logprob: -7.7061381340026855
    6. '4' → logprob: -8.706137657165527
    7. '-' → logprob: -9.581137657165527
    8. '9' → logprob: -10.268637657165527
    9. '5' → logprob: -10.768637657165527
    10. ' -' → logprob: -11.643637657165527

Token 350: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18367105722427368
    2. ':
' → logprob: -1.933670997619629
    3. '                   ' → logprob: -3.808670997619629
    4. ' or' → logprob: -7.433670997619629
    5. '               ' → logprob: -8.183670997619629
    6. '                       ' → logprob: -9.808670997619629
    7. 'or' → logprob: -11.308670997619629
    8. ':
' → logprob: -11.558670997619629
    9. ',' → logprob: -11.683670997619629
    10. '                  ' → logprob: -11.808670997619629

Token 351: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.34097474813461304
    2. 'dp' → logprob: -1.3409748077392578
    3. ' dp' → logprob: -3.965974807739258
    4. '               ' → logprob: -4.840974807739258
    5. '                       ' → logprob: -8.090974807739258
    6. '   ' → logprob: -9.590974807739258
    7. '           ' → logprob: -10.340974807739258
    8. '	dp' → logprob: -10.965974807739258
    9. '```' → logprob: -11.465974807739258
    10. '                           ' → logprob: -11.465974807739258

Token 352: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.16043047606945038
    2. ' dp' → logprob: -1.9104304313659668
    3. '                   ' → logprob: -8.910430908203125
    4. '                       ' → logprob: -10.160430908203125
    5. '               ' → logprob: -11.285430908203125
    6. '	dp' → logprob: -11.410430908203125
    7. '                               ' → logprob: -12.660430908203125
    8. '(dp' → logprob: -12.910430908203125
    9. '_dp' → logprob: -13.660430908203125
    10. '                           ' → logprob: -14.285430908203125

Token 353: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014394549652934074
    2. '[y' → logprob: -4.264394760131836
    3. '][' → logprob: -8.389394760131836
    4. '[next' → logprob: -14.014394760131836
    5. '   ' → logprob: -14.639394760131836
    6. ']' → logprob: -14.639394760131836
    7. ' [' → logprob: -14.889394760131836
    8. '[n' → logprob: -14.889394760131836
    9. 'y' → logprob: -15.264394760131836
    10. ')[' → logprob: -16.014394760131836

Token 354: 'ny' (ID: 3008)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1275506615638733
    2. 'ny' → logprob: -2.1275506019592285
    3. '[y' → logprob: -8.002551078796387
    4. '[' → logprob: -8.627551078796387
    5. '][' → logprob: -9.752551078796387
    6. '   ' → logprob: -10.627551078796387
    7. ' y' → logprob: -12.252551078796387
    8. ' ny' → logprob: -12.252551078796387
    9. 'yn' → logprob: -12.377551078796387
    10. 'n' → logprob: -12.627551078796387

Token 355: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008881522342562675
    2. '[n' → logprob: -4.758881568908691
    3. '[' → logprob: -8.633881568908691
    4. ']' → logprob: -10.008881568908691
    5. ' ][' → logprob: -11.258881568908691
    6. '"][' → logprob: -11.758881568908691
    7. ''][' → logprob: -12.508881568908691
    8. '```' → logprob: -12.508881568908691
    9. '   ' → logprob: -12.633881568908691
    10. '       ' → logprob: -13.008881568908691

Token 356: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -1.8908587662735954e-05
    2. ' nx' → logprob: -11.000019073486328
    3. '(nx' → logprob: -13.125019073486328
    4. 'n' → logprob: -16.500019073486328
    5. '[n' → logprob: -17.250019073486328
    6. '][' → logprob: -17.375019073486328
    7. 'Nx' → logprob: -17.500019073486328
    8. '   ' → logprob: -19.000019073486328
    9. 'x' → logprob: -19.500019073486328
    10. '[' → logprob: -20.250019073486328

Token 357: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.5997427701950073
    2. ']' → logprob: -0.8497427701950073
    3. '+=' → logprob: -3.849742889404297
    4. ' +=' → logprob: -6.224742889404297
    5. ' ]' → logprob: -8.349742889404297
    6. '    ' → logprob: -11.974742889404297
    7. '   ' → logprob: -12.599742889404297
    8. '+]' → logprob: -12.724742889404297
    9. ']+' → logprob: -13.099742889404297
    10. '+' → logprob: -13.599742889404297

Token 358: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008667164482176304
    2. ' +=' → logprob: -4.7586669921875
    3. ']+=' → logprob: -10.0086669921875
    4. '=' → logprob: -11.8836669921875
    5. '+' → logprob: -15.0086669921875
    6. '   ' → logprob: -15.8836669921875
    7. '    ' → logprob: -16.1336669921875
    8. '+=(' → logprob: -16.7586669921875
    9. '	' → logprob: -17.1336669921875
    10. ' ' → logprob: -17.3836669921875

Token 359: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001234428636962548
    2. ' dp' → logprob: -9.000123023986816
    3. '	dp' → logprob: -19.125123977661133
    4. '                   ' → logprob: -20.250123977661133
    5. '(dp' → logprob: -20.500123977661133
    6. '               ' → logprob: -20.750123977661133
    7. '           ' → logprob: -20.750123977661133
    8. 'd' → logprob: -20.875123977661133
    9. '_dp' → logprob: -21.500123977661133
    10. 'df' → logprob: -21.500123977661133

Token 360: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00012737659562844783
    2. 'y' → logprob: -9.000127792358398
    3. '[' → logprob: -12.750127792358398
    4. '][' → logprob: -14.625127792358398
    5. '```' → logprob: -15.625127792358398
    6. '[user' → logprob: -16.0001277923584
    7. ' y' → logprob: -16.3751277923584
    8. ' [' → logprob: -16.6251277923584
    9. '	y' → logprob: -16.8751277923584
    10. '(y' → logprob: -17.8751277923584

Token 361: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002022258937358856
    2. '[x' → logprob: -6.2520222663879395
    3. ' ][' → logprob: -9.752021789550781
    4. ']' → logprob: -11.002021789550781
    5. 'x' → logprob: -11.127021789550781
    6. '[' → logprob: -12.877021789550781
    7. '   ' → logprob: -15.002021789550781
    8. ' ' → logprob: -15.127021789550781
    9. '"][' → logprob: -15.252021789550781
    10. ' [' → logprob: -15.252021789550781

Token 362: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. '[x' → logprob: -15.5
    3. ' x' → logprob: -16.125
    4. '"x' → logprob: -18.125
    5. '[' → logprob: -18.25
    6. '<|end|>' → logprob: -18.25
    7. ''x' → logprob: -19.25
    8. ')x' → logprob: -19.25
    9. '{x' → logprob: -19.375
    10. '][' → logprob: -19.5

Token 363: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23032400012016296
    2. ')' → logprob: -1.7303240299224854
    3. '               ' → logprob: -3.7303240299224854
    4. '                   ' → logprob: -6.230323791503906
    5. '<|end|>' → logprob: -6.980323791503906
    6. ']
' → logprob: -7.230323791503906
    7. '
' → logprob: -8.105323791503906
    8. '           ' → logprob: -9.105323791503906
    9. ')
' → logprob: -9.730323791503906
    10. '  
' → logprob: -9.855323791503906

Token 364: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026267850771546364
    2. 'elif' → logprob: -6.002626895904541
    3. ' elif' → logprob: -9.127626419067383
    4. 'else' → logprob: -10.627626419067383
    5. ' else' → logprob: -12.002626419067383
    6. '<|end|>' → logprob: -12.502626419067383
    7. '           ' → logprob: -13.502626419067383
    8. '			' → logprob: -14.002626419067383
    9. '   ' → logprob: -14.127626419067383
    10. '```' → logprob: -14.127626419067383

Token 365: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.046469613909721375
    2. '               ' → logprob: -3.7964696884155273
    3. 'else' (adapté à ' else') → logprob: -4.421469688415527
    4. ' elif' → logprob: -4.546469688415527
    5. ' else' → logprob: -8.671469688415527
    6. '           ' → logprob: -8.921469688415527
    7. '	elif' → logprob: -11.671469688415527
    8. '                   ' → logprob: -11.796469688415527
    9. 'elseif' → logprob: -12.796469688415527
    10. ')' → logprob: -12.796469688415527

Token 366: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09039381891489029
    2. 'if' → logprob: -2.9653937816619873
    3. ':
' → logprob: -3.9653937816619873
    4. ' if' → logprob: -5.090394020080566
    5. '==' → logprob: -5.215394020080566
    6. ' ==' → logprob: -6.090394020080566
    7. '   ' → logprob: -7.340394020080566
    8. '                   ' → logprob: -8.090394020080566
    9. '[' → logprob: -8.590394020080566
    10. 'elif' → logprob: -8.840394020080566

Token 367: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33830294013023376
    2. '0' → logprob: -1.9633029699325562
    3. 'if' → logprob: -2.4633028507232666
    4. ' if' → logprob: -3.3383028507232666
    5. ' ' → logprob: -5.213303089141846
    6. '1' → logprob: -5.213303089141846
    7. '               ' → logprob: -5.338303089141846
    8. '#' → logprob: -6.088303089141846
    9. '           ' → logprob: -6.338303089141846
    10. ':' → logprob: -6.713303089141846

Token 368: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7414403557777405
    2. ' #' → logprob: -1.3664402961730957
    3. '2' → logprob: -2.4914402961730957
    4. 'if' → logprob: -2.9914402961730957
    5. ' if' → logprob: -3.3664402961730957
    6. '1' → logprob: -3.6164402961730957
    7. 'jump' → logprob: -3.7414402961730957
    8. ' ' → logprob: -3.9914402961730957
    9. ' jump' → logprob: -4.991440296173096
    10. ' ny' → logprob: -5.366440296173096

Token 369: ' cell' (ID: 4206)
  Prédit: ' ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.8101669549942017
    2. 'ny' → logprob: -1.0601669549942017
    3. '2' → logprob: -2.685166835784912
    4. 'cell' → logprob: -2.935166835784912
    5. 'jump' → logprob: -3.685166835784912
    6. ' jump' → logprob: -4.560166835784912
    7. '#' → logprob: -4.685166835784912
    8. '1' → logprob: -4.810166835784912
    9. ' cell' → logprob: -4.935166835784912
    10. ' ' → logprob: -5.560166835784912

Token 370: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2969844937324524
    2. '==' → logprob: -1.6719844341278076
    3. '[y' → logprob: -2.9219844341278076
    4. 'value' → logprob: -5.171984672546387
    5. '[' → logprob: -5.296984672546387
    6. ' =' → logprob: -6.921984672546387
    7. ' value' → logprob: -6.921984672546387
    8. '=' → logprob: -7.296984672546387
    9. 'type' → logprob: -8.046984672546387
    10. '[n' → logprob: -8.296984672546387

Token 371: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16226805746555328
    2. ' ' → logprob: -1.912268042564392
    3. '3' → logprob: -6.912268161773682
    4. '-' → logprob: -7.412268161773682
    5. ' -' → logprob: -9.162267684936523
    6. '4' → logprob: -9.662267684936523
    7. '  ' → logprob: -9.787267684936523
    8. '10' → logprob: -9.849767684936523
    9. '1' → logprob: -10.224767684936523
    10. '9' → logprob: -10.287267684936523

Token 372: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001950417528860271
    2. '3' → logprob: -7.001950263977051
    3. ' ' → logprob: -7.251950263977051
    4. '-' → logprob: -8.37695026397705
    5. '4' → logprob: -10.25195026397705
    6. '10' → logprob: -11.37695026397705
    7. '5' → logprob: -11.50195026397705
    8. '1' → logprob: -11.68945026397705
    9. '9' → logprob: -11.81445026397705
    10. '
' → logprob: -12.56445026397705

Token 373: ' jump' (ID: 13843)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22917449474334717
    2. ':' → logprob: -2.7291746139526367
    3. 'jump' → logprob: -3.6041746139526367
    4. ' if' → logprob: -3.8541746139526367
    5. ',' → logprob: -4.354174613952637
    6. '#' → logprob: -4.354174613952637
    7. 'if' → logprob: -4.479174613952637
    8. ' and' → logprob: -4.854174613952637
    9. ':
' → logprob: -4.854174613952637
    10. ' jump' → logprob: -4.979174613952637

Token 374: ' ramp' (ID: 37998)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.7386060953140259
    2. '                   ' → logprob: -1.3636060953140259
    3. ':' → logprob: -2.2386059761047363
    4. '_n' → logprob: -3.3636059761047363
    5. 'landing' → logprob: -3.4886059761047363
    6. ':
' → logprob: -4.113605976104736
    7. '   ' → logprob: -4.863605976104736
    8. ' landing' → logprob: -4.863605976104736
    9. '               ' → logprob: -4.988605976104736
    10. 'pos' → logprob: -5.238605976104736

Token 375: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020222429186105728
    2. ',' → logprob: -5.3952226638793945
    3. ' if' → logprob: -5.7702226638793945
    4. 'ny' → logprob: -6.0202226638793945
    5. 'if' → logprob: -6.1452226638793945
    6. 'jump' → logprob: -6.2702226638793945
    7. '               ' → logprob: -7.0202226638793945
    8. '
' → logprob: -7.1452226638793945
    9. 'nj' → logprob: -7.2702226638793945
    10. ':' → logprob: -7.3952226638793945

Token 376: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4075421690940857
    2. '
' → logprob: -1.1575422286987305
    3. ' if' → logprob: -5.2825422286987305
    4. '                    
' → logprob: -5.9075422286987305
    5. '               ' → logprob: -6.2825422286987305
    6. ':
' → logprob: -6.2825422286987305
    7. ',' → logprob: -6.2825422286987305
    8. '                       ' → logprob: -6.6575422286987305
    9. '
' → logprob: -7.2825422286987305
    10. ',
' → logprob: -7.4075422286987305

Token 377: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8532291054725647
    2. 'ny' → logprob: -1.72822904586792
    3. 'jump' → logprob: -1.97822904586792
    4. 'dp' → logprob: -2.10322904586792
    5. 'nj' → logprob: -2.72822904586792
    6. 'jy' → logprob: -3.72822904586792
    7. '#' (adapté à ' #') → logprob: -4.22822904586792
    8. 'jp' → logprob: -5.10322904586792
    9. 'for' → logprob: -5.47822904586792
    10. 'j' → logprob: -5.47822904586792

Token 378: ' can' (ID: 665)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.5503370761871338
    2. 'jump' → logprob: -1.4253370761871338
    3. 'nj' → logprob: -2.425337076187134
    4. 'if' → logprob: -3.550337076187134
    5. '#' → logprob: -4.550336837768555
    6. 'jy' → logprob: -4.550336837768555
    7. 'landing' → logprob: -4.925336837768555
    8. 'j' → logprob: -5.175336837768555
    9. 'land' → logprob: -5.300336837768555
    10. 'n' → logprob: -5.425336837768555

Token 379: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.3772228956222534
    2. 'ny' → logprob: -1.5022228956222534
    3. ' jump' → logprob: -2.877223014831543
    4. '_jump' → logprob: -4.002223014831543
    5. 'move' → logprob: -5.627223014831543
    6. 'y' → logprob: -5.877223014831543
    7. 'continue' → logprob: -6.377223014831543
    8. '#' → logprob: -6.502223014831543
    9. 'try' → logprob: -6.752223014831543
    10. 'n' → logprob: -7.502223014831543

Token 380: ' only' (ID: 1606)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.46706750988960266
    2. 'two' → logprob: -1.8420674800872803
    3. 'over' → logprob: -2.8420674800872803
    4. ' to' → logprob: -2.9670674800872803
    5. '                   ' → logprob: -3.3420674800872803
    6. ' two' → logprob: -3.9670674800872803
    7. '2' → logprob: -3.9670674800872803
    8. 'ny' → logprob: -4.592067718505859
    9. '=' → logprob: -5.592067718505859
    10. '               ' → logprob: -5.717067718505859

Token 381: ' from' (ID: 591)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2819855809211731
    2. ' to' → logprob: -1.7819855213165283
    3. 'over' → logprob: -3.4069855213165283
    4. ' two' → logprob: -4.281985759735107
    5. 'two' → logprob: -4.406985759735107
    6. ' over' → logprob: -5.281985759735107
    7. 'if' → logprob: -5.906985759735107
    8. '                   ' → logprob: -6.031985759735107
    9. '               ' → logprob: -6.156985759735107
    10. 'one' → logprob: -6.531985759735107

Token 382: ' same' (ID: 2684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3226943016052246
    2. 'ny' → logprob: -1.4476943016052246
    3. 'dp' → logprob: -4.447694301605225
    4. ' y' → logprob: -4.822694301605225
    5. ' ny' → logprob: -5.572694301605225
    6. '(y' → logprob: -5.822694301605225
    7. ' here' → logprob: -5.822694301605225
    8. 'here' → logprob: -5.947694301605225
    9. 'current' → logprob: -6.822694301605225
    10. 'jump' → logprob: -6.822694301605225

Token 383: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2419722080230713
    2. ' y' → logprob: -2.3669722080230713
    3. 'position' → logprob: -3.6169722080230713
    4. 'row' → logprob: -3.9919722080230713
    5. 'x' → logprob: -4.241971969604492
    6. 'cell' → logprob: -4.241971969604492
    7. 'line' → logprob: -4.741971969604492
    8. 'column' → logprob: -4.866971969604492
    9. 'level' → logprob: -4.866971969604492
    10. 'dp' → logprob: -5.491971969604492

Token 384: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.720930278301239
    2. ' and' → logprob: -1.7209303379058838
    3. ' if' → logprob: -2.220930337905884
    4. ',' → logprob: -2.720930337905884
    5. 'if' → logprob: -2.720930337905884
    6. 'and' → logprob: -3.220930337905884
    7. ' to' → logprob: -3.970930337905884
    8. '
' → logprob: -5.220930099487305
    9. ' or' → logprob: -5.345930099487305
    10. '               ' → logprob: -5.845930099487305

Token 385: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09780428558588028
    2. '
' → logprob: -3.472804307937622
    3. ',' → logprob: -3.972804307937622
    4. ' if' → logprob: -4.597804069519043
    5. ' to' → logprob: -4.972804069519043
    6. '```' → logprob: -5.097804069519043
    7. ' and' → logprob: -5.597804069519043
    8. '               ' → logprob: -5.847804069519043
    9. '                    
' → logprob: -6.222804069519043
    10. '                       ' → logprob: -6.972804069519043

Token 386: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07538405060768127
    2. 'ny' → logprob: -2.8253841400146484
    3. ' if' → logprob: -5.075384140014648
    4. 'nj' → logprob: -5.450384140014648
    5. 'jump' → logprob: -6.575384140014648
    6. '   ' → logprob: -8.325384140014648
    7. 'n' → logprob: -8.700384140014648
    8. 'jy' → logprob: -8.825384140014648
    9. ' ny' → logprob: -8.950384140014648
    10. 'nx' → logprob: -9.450384140014648

Token 387: ' so' (ID: 813)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.6724013090133667
    2. 'if' → logprob: -1.0474013090133667
    3. 'nj' → logprob: -3.1724014282226562
    4. 'jump' → logprob: -3.1724014282226562
    5. ' if' → logprob: -3.5474014282226562
    6. 'jy' → logprob: -5.047401428222656
    7. ' ny' → logprob: -5.297401428222656
    8. '#' → logprob: -5.797401428222656
    9. ' jump' → logprob: -6.047401428222656
    10. 'jp' → logprob: -7.047401428222656

Token 388: ' dx' (ID: 29472)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.8096809387207031
    2. 'if' → logprob: -1.1846809387207031
    3. ' if' → logprob: -2.434680938720703
    4. ' ny' → logprob: -2.559680938720703
    5. 'nj' → logprob: -3.434680938720703
    6. 'jump' → logprob: -4.059680938720703
    7. ' jump' → logprob: -4.309680938720703
    8. ' nj' → logprob: -5.309680938720703
    9. '#' → logprob: -5.684680938720703
    10. 'for' → logprob: -6.184680938720703

Token 389: ' must' (ID: 2804)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3487120568752289
    2. ' ==' → logprob: -1.2237120866775513
    3. '=' → logprob: -8.973711967468262
    4. '```' → logprob: -9.973711967468262
    5. ' !=' → logprob: -10.348711967468262
    6. '!=' → logprob: -11.223711967468262
    7. ' =' → logprob: -11.473711967468262
    8. ' must' → logprob: -11.973711967468262
    9. ')' → logprob: -12.098711967468262
    10. ' ' → logprob: -12.223711967468262

Token 390: ' be' (ID: 413)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08812521398067474
    2. ' be' → logprob: -3.213125228881836
    3. '=' → logprob: -3.963125228881836
    4. ' ==' → logprob: -4.338125228881836
    5. '0' → logprob: -4.463125228881836
    6. 'be' → logprob: -9.088125228881836
    7. ' ' → logprob: -9.213125228881836
    8. '```' → logprob: -9.463125228881836
    9. '==
' → logprob: -10.088125228881836
    10. ')==' → logprob: -10.213125228881836

Token 391: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.098748053773306e-05
    2. ' ' → logprob: -9.75006103515625
    3. '=' → logprob: -13.00006103515625
    4. '==' → logprob: -14.75006103515625
    5. '```' → logprob: -17.25006103515625
    6. '1' → logprob: -17.62506103515625
    7. '                   ' → logprob: -19.25006103515625
    8. ' ' → logprob: -19.62506103515625
    9. 'exact' → logprob: -19.87506103515625
    10. 'zero' → logprob: -19.87506103515625

Token 392: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '=' → logprob: -15.500051498413086
    4. '1' → logprob: -17.125051498413086
    5. '==' → logprob: -18.250051498413086
    6. '```' → logprob: -18.500051498413086
    7. '00' → logprob: -19.125051498413086
    8. '۰' → logprob: -20.312551498413086
    9. '000' → logprob: -20.437551498413086
    10. 's' → logprob: -20.437551498413086

Token 393: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15223665535449982
    2. ' and' → logprob: -2.1522367000579834
    3. '                       ' → logprob: -4.527236461639404
    4. '               ' → logprob: -5.402236461639404
    5. ':' → logprob: -5.777236461639404
    6. ' if' → logprob: -6.152236461639404
    7. 'and' → logprob: -6.277236461639404
    8. '				' → logprob: -7.527236461639404
    9. '                    ' → logprob: -7.777236461639404
    10. '   ' → logprob: -7.902236461639404

Token 394: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09101938456296921
    2. ' and' → logprob: -3.21601939201355
    3. ' if' → logprob: -3.84101939201355
    4. '                       ' → logprob: -4.091019153594971
    5. '               ' → logprob: -5.841019153594971
    6. '                    ' → logprob: -6.716019153594971
    7. 'if' → logprob: -6.841019153594971
    8. 'and' → logprob: -7.091019153594971
    9. '   ' → logprob: -7.216019153594971
    10. '           ' → logprob: -7.966019153594971

Token 395: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6469547152519226
    2. ' if' → logprob: -0.7719547152519226
    3. '                   ' → logprob: -4.396954536437988
    4. '                       ' → logprob: -6.896954536437988
    5. 'continue' → logprob: -8.521954536437988
    6. '               ' → logprob: -8.896954536437988
    7. ' continue' → logprob: -8.896954536437988
    8. '   ' → logprob: -9.271954536437988
    9. '                           ' → logprob: -9.396954536437988
    10. '                               ' → logprob: -10.146954536437988

Token 396: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.1799030750989914
    2. 'dx' → logprob: -1.8049030303955078
    3. 'x' → logprob: -9.304903030395508
    4. ' x' → logprob: -10.304903030395508
    5. ' nx' → logprob: -11.804903030395508
    6. ' ' → logprob: -11.929903030395508
    7. 'nx' → logprob: -12.304903030395508
    8. ' not' → logprob: -12.304903030395508
    9. '(dx' → logprob: -12.429903030395508
    10. '0' → logprob: -13.179903030395508

Token 397: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20390287041664124
    2. ' ==' → logprob: -1.7039028406143188
    3. '!=' → logprob: -6.703902721405029
    4. ' !=' → logprob: -6.703902721405029
    5. '0' → logprob: -11.203903198242188
    6. ')' → logprob: -11.828903198242188
    7. ' ' → logprob: -12.328903198242188
    8. '=' → logprob: -12.703903198242188
    9. ')==' → logprob: -12.703903198242188
    10. ']==' → logprob: -13.953903198242188

Token 398: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005928678438067436
    2. ' ' → logprob: -5.1309285163879395
    3. '=' → logprob: -17.13092803955078
    4. '1' → logprob: -18.38092803955078
    5. '۰' → logprob: -18.75592803955078
    6. ')' → logprob: -18.75592803955078
    7. ' ' → logprob: -18.88092803955078
    8. '```' → logprob: -19.00592803955078
    9. '   ' → logprob: -19.69342803955078
    10. ' ' → logprob: -19.81842803955078

Token 399: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '۰' → logprob: -19.37500762939453
    4. '```' → logprob: -19.87500762939453
    5. '<|end|>' → logprob: -20.25000762939453
    6. ')' → logprob: -20.62500762939453
    7. '1' → logprob: -20.81250762939453
    8. '=' → logprob: -20.87500762939453
    9. ' ' → logprob: -21.00000762939453
    10. '０' → logprob: -21.68750762939453

Token 400: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08059525489807129
    2. ':' → logprob: -2.7055952548980713
    3. ' and' → logprob: -4.830595016479492
    4. '                       ' → logprob: -6.080595016479492
    5. '                   ' → logprob: -8.205595016479492
    6. 'and' → logprob: -10.830595016479492
    7. ':

' → logprob: -11.330595016479492
    8. ':
' → logprob: -11.705595016479492
    9. '):
' → logprob: -11.705595016479492
    10. ',' → logprob: -12.455595016479492

Token 401: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.022050222381949425
    2. ':' → logprob: -4.522050380706787
    3. ':
' → logprob: -5.272050380706787
    4. ' and' → logprob: -5.397050380706787
    5. ',' → logprob: -7.522050380706787
    6. '                   ' → logprob: -7.897050380706787
    7. '                        
' → logprob: -9.397049903869629
    8. '                           ' → logprob: -9.897049903869629
    9. '                        ' → logprob: -10.522049903869629
    10. '
' → logprob: -10.772049903869629

Token 402: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' (adapté à ' ny') → logprob: -0.8237554430961609
    2. 'if' → logprob: -1.8237555027008057
    3. 'nj' → logprob: -1.8237555027008057
    4. 'jump' → logprob: -2.0737555027008057
    5. 'dp' → logprob: -3.5737555027008057
    6. '#' → logprob: -3.5737555027008057
    7. 'jy' → logprob: -4.573755264282227
    8. 'jp' → logprob: -4.823755264282227
    9. 'landing' → logprob: -4.823755264282227
    10. 'jj' → logprob: -5.823755264282227

Token 403: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2690427601337433
    2. ' =' → logprob: -1.894042730331421
    3. '+=' → logprob: -2.894042730331421
    4. ' +=' → logprob: -4.14404296875
    5. '+' → logprob: -4.26904296875
    6. ' +' → logprob: -8.64404296875
    7. '=y' → logprob: -10.64404296875
    8. 'y' → logprob: -12.01904296875
    9. ' ' → logprob: -13.14404296875
    10. '2' → logprob: -13.26904296875

Token 404: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687458634376526
    2. '=' → logprob: -1.1368745565414429
    3. '=y' → logprob: -13.011874198913574
    4. ' ' → logprob: -15.261874198913574
    5. '<|end|>' → logprob: -15.636874198913574
    6. '＝' → logprob: -15.636874198913574
    7. '+=' → logprob: -16.13687515258789
    8. ',' → logprob: -16.26187515258789
    9. ' +=' → logprob: -16.51187515258789
    10. '```' → logprob: -16.88687515258789

Token 405: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00037371189682744443
    2. ' y' → logprob: -8.000373840332031
    3. 'ny' → logprob: -10.250373840332031
    4. '                       ' → logprob: -13.250373840332031
    5. '                   ' → logprob: -14.875373840332031
    6. '   ' → logprob: -15.875373840332031
    7. '	y' → logprob: -16.12537384033203
    8. 'n' → logprob: -16.50037384033203
    9. ' ny' → logprob: -16.62537384033203
    10. 'yn' → logprob: -17.12537384033203

Token 406: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04863971471786499
    2. ' +' → logprob: -3.0486397743225098
    3. '2' → logprob: -9.923639297485352
    4. ' ' → logprob: -13.548639297485352
    5. '3' → logprob: -14.673639297485352
    6. '+y' → logprob: -14.798639297485352
    7. '+
' → logprob: -14.923639297485352
    8. '＋' → logprob: -15.798639297485352
    9. '1' → logprob: -15.923639297485352
    10. ' +
' → logprob: -16.29863929748535

Token 407: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06999924033880234
    2. '3' → logprob: -2.6949992179870605
    3. '4' → logprob: -10.569999694824219
    4. ' ' → logprob: -10.944999694824219
    5. 'jump' → logprob: -10.944999694824219
    6. '   ' → logprob: -14.569999694824219
    7. '  ' → logprob: -15.569999694824219
    8. 'Jump' → logprob: -15.694999694824219
    9. ' jumps' → logprob: -15.944999694824219
    10. '5' → logprob: -16.06999969482422

Token 408: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004082197323441505
    2. '3' → logprob: -5.504082202911377
    3. ' ' → logprob: -13.254081726074219
    4. '4' → logprob: -13.504081726074219
    5. 'jump' → logprob: -14.879081726074219
    6. '   ' → logprob: -16.06658172607422
    7. '

' → logprob: -17.12908172607422
    8. '  ' → logprob: -17.50408172607422
    9. 'two' → logprob: -17.69158172607422
    10. '``' → logprob: -17.94158172607422

Token 409: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04619976878166199
    2. '<|end|>' → logprob: -3.6711997985839844
    3. ' if' → logprob: -4.796199798583984
    4. '                        
' → logprob: -5.671199798583984
    5. 'if' → logprob: -5.796199798583984
    6. '
' → logprob: -6.296199798583984
    7. ',' → logprob: -7.796199798583984
    8. ')' → logprob: -7.796199798583984
    9. '               ' → logprob: -7.921199798583984
    10. '					' → logprob: -8.046199798583984

Token 410: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001674587489105761
    2. ' if' → logprob: -7.001674652099609
    3. 'if' → logprob: -7.876674652099609
    4. '                        
' → logprob: -9.00167465209961
    5. '					' → logprob: -9.62667465209961
    6. '<|end|>' → logprob: -9.75167465209961
    7. ',' → logprob: -10.50167465209961
    8. '                        ' → logprob: -10.62667465209961
    9. '```' → logprob: -11.25167465209961
    10. ':' → logprob: -11.87667465209961

Token 411: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04860871285200119
    2. ' if' → logprob: -3.0486087799072266
    3. '                       ' → logprob: -11.298608779907227
    4. 'for' → logprob: -12.173608779907227
    5. 'nx' → logprob: -14.423608779907227
    6. '                               ' → logprob: -14.548608779907227
    7. '```' → logprob: -14.923608779907227
    8. '                           ' → logprob: -14.923608779907227
    9. ' ' → logprob: -15.048608779907227
    10. ' for' → logprob: -15.548608779907227

Token 412: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.12698259949684143
    2. ' ny' → logprob: -2.1269826889038086
    3. '0' → logprob: -10.501982688903809
    4. 'nx' → logprob: -10.751982688903809
    5. 'y' → logprob: -13.626982688903809
    6. 'n' → logprob: -14.376982688903809
    7. 'yn' → logprob: -14.376982688903809
    8. 'nj' → logprob: -14.751982688903809
    9. 'Ny' → logprob: -14.751982688903809
    10. '   ' → logprob: -15.126982688903809

Token 413: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014576653949916363
    2. '+' → logprob: -4.264576435089111
    3. ' +' → logprob: -8.01457691192627
    4. '<' → logprob: -10.01457691192627
    5. ' <' → logprob: -11.13957691192627
    6. '```' → logprob: -12.01457691192627
    7. ' ' → logprob: -12.13957691192627
    8. '[' → logprob: -13.51457691192627
    9. '   ' → logprob: -13.88957691192627
    10. '       ' → logprob: -14.13957691192627

Token 414: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.22553686797618866
    2. ' <' → logprob: -1.600536823272705
    3. '<len' → logprob: -10.225537300109863
    4. '<n' → logprob: -10.600537300109863
    5. '<size' → logprob: -11.225537300109863
    6. '<num' → logprob: -11.475537300109863
    7. '<=' → logprob: -11.475537300109863
    8. '<N' → logprob: -11.725537300109863
    9. ' <=' → logprob: -12.100537300109863
    10. '<|end|>' → logprob: -13.725537300109863

Token 415: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -8.315936429426074e-05
    2. ' Y' → logprob: -9.500082969665527
    3. 'len' → logprob: -12.250082969665527
    4. '   ' → logprob: -13.375082969665527
    5. '(Y' → logprob: -13.750082969665527
    6. '	Y' → logprob: -15.250082969665527
    7. '                       ' → logprob: -16.125083923339844
    8. '                   ' → logprob: -16.250083923339844
    9. '0' → logprob: -16.250083923339844
    10. 'y' → logprob: -16.625083923339844

Token 416: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5295159220695496
    2. ':
' → logprob: -0.9045159220695496
    3. ' or' → logprob: -5.904515743255615
    4. '                           ' → logprob: -6.279515743255615
    5. ' and' → logprob: -6.904515743255615
    6. '                       ' → logprob: -7.529515743255615
    7. '<|end|>' → logprob: -9.779516220092773
    8. '):
' → logprob: -10.404516220092773
    9. 'and' → logprob: -10.529516220092773
    10. '                   ' → logprob: -10.904516220092773

Token 417: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.004100842867046595
    2. ':' → logprob: -6.004100799560547
    3. '                       ' → logprob: -7.254100799560547
    4. ':
' → logprob: -7.504100799560547
    5. '                               ' → logprob: -8.379100799560547
    6. '                            
' → logprob: -10.629100799560547
    7. '                   ' → logprob: -10.879100799560547
    8. ',' → logprob: -11.129100799560547
    9. '                            ' → logprob: -11.129100799560547
    10. ' and' → logprob: -11.254100799560547

Token 418: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13042178750038147
    2. 'for' → logprob: -2.2554218769073486
    3. 'continue' → logprob: -5.1304216384887695
    4. '                           ' → logprob: -5.1304216384887695
    5. ' dp' → logprob: -5.6304216384887695
    6. ' for' → logprob: -7.0054216384887695
    7. '                               ' → logprob: -7.5054216384887695
    8. '                       ' → logprob: -8.25542163848877
    9. ' continue' → logprob: -9.50542163848877
    10. '#' (adapté à ' #') → logprob: -10.00542163848877

Token 419: ' finish' (ID: 9115)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.073516346514225
    2. 'for' → logprob: -2.948516368865967
    3. '#' → logprob: -4.448516368865967
    4. 'continue' → logprob: -5.198516368865967
    5. '                       ' → logprob: -7.948516368865967
    6. '                   ' → logprob: -8.073515892028809
    7. ' dp' → logprob: -8.698515892028809
    8. '                           ' → logprob: -8.948515892028809
    9. 'if' → logprob: -9.823515892028809
    10. ' for' → logprob: -9.948515892028809

Token 420: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32000261545181274
    2. ' dp' → logprob: -1.320002555847168
    3. '                           ' → logprob: -5.695002555847168
    4. '                               ' → logprob: -6.195002555847168
    5. '(dp' → logprob: -7.070002555847168
    6. '                       ' → logprob: -8.945002555847168
    7. '                                   ' → logprob: -9.445002555847168
    8. '   ' → logprob: -9.695002555847168
    9. '	dp' → logprob: -9.945002555847168
    10. '                   ' → logprob: -10.320002555847168

Token 421: '                           ' (ID: 1686)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7250123023986816
    2. ' dp' → logprob: -1.4750123023986816
    3. '                           ' → logprob: -1.7250123023986816
    4. '[' → logprob: -3.3500123023986816
    5. '                               ' → logprob: -3.4750123023986816
    6. '(dp' → logprob: -4.225012302398682
    7. '                       ' → logprob: -4.350012302398682
    8. ':
' → logprob: -5.100012302398682
    9. '                   ' → logprob: -5.600012302398682
    10. '][' → logprob: -6.975012302398682

Token 422: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010323764756321907
    2. 'for' → logprob: -4.760324001312256
    3. 'continue' → logprob: -6.760324001312256
    4. ' dp' → logprob: -8.010323524475098
    5. '                           ' → logprob: -9.135323524475098
    6. ' for' → logprob: -10.760323524475098
    7. '                               ' → logprob: -11.135323524475098
    8. 'if' → logprob: -11.135323524475098
    9. '#' (adapté à ' #') → logprob: -11.260323524475098
    10. '                       ' → logprob: -11.635323524475098

Token 423: ' no' (ID: 860)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010624700225889683
    2. 'for' → logprob: -4.885624885559082
    3. 'continue' → logprob: -6.010624885559082
    4. ' dp' → logprob: -8.760624885559082
    5. '#' → logprob: -8.885624885559082
    6. 'pass' → logprob: -9.635624885559082
    7. '                   ' → logprob: -9.885624885559082
    8. 'if' → logprob: -10.260624885559082
    9. ' for' → logprob: -10.760624885559082
    10. '                       ' → logprob: -11.010624885559082

Token 424: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10825465619564056
    2. ' dp' → logprob: -2.3582546710968018
    3. ' need' → logprob: -5.733254432678223
    4. 'w' → logprob: -6.983254432678223
    5. 'need' → logprob: -7.233254432678223
    6. 'indent' → logprob: -7.233254432678223
    7. 'continue' → logprob: -7.483254432678223
    8. ' continue' → logprob: -7.983254432678223
    9. '(dp' → logprob: -8.608254432678223
    10. 'op' → logprob: -8.858254432678223

Token 425: ' beyond' (ID: 11615)
  Prédit: '[Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.4131435751914978
    2. '[y' → logprob: -1.4131436347961426
    3. '[' → logprob: -2.5381436347961426
    4. 'dp' → logprob: -5.413143634796143
    5. 'Y' → logprob: -6.038143634796143
    6. 'ny' → logprob: -6.163143634796143
    7. 'y' → logprob: -6.663143634796143
    8. 'append' → logprob: -7.288143634796143
    9. '```' → logprob: -7.538143634796143
    10. '[][]' → logprob: -7.538143634796143

Token 426: ' last' (ID: 2174)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.5656999349594116
    2. 'dp' → logprob: -0.9406999349594116
    3. '[Y' → logprob: -3.690700054168701
    4. 'y' → logprob: -4.315700054168701
    5. '[y' → logprob: -6.315700054168701
    6. ']' → logprob: -8.315699577331543
    7. ' dp' → logprob: -8.440699577331543
    8. 'ny' → logprob: -8.690699577331543
    9. '[' → logprob: -8.940699577331543
    10. 'range' → logprob: -8.940699577331543

Token 427: ' row' (ID: 5225)
  Prédit: '[Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.3013722896575928
    2. '[y' → logprob: -1.6763722896575928
    3. '][' → logprob: -3.3013722896575928
    4. ']' → logprob: -3.5513722896575928
    5. '[' → logprob: -5.426372528076172
    6. 'Y' → logprob: -6.301372528076172
    7. 'y' → logprob: -7.551372528076172
    8. 'dp' → logprob: -8.301372528076172
    9. ' [' → logprob: -8.926372528076172
    10. '[]' → logprob: -9.926372528076172

Token 428: ' so' (ID: 813)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.7164440155029297
    2. 'continue' → logprob: -1.7164440155029297
    3. ' continue' → logprob: -1.9664440155029297
    4. '                               ' → logprob: -2.4664440155029297
    5. ')' → logprob: -3.5914440155029297
    6. 'dp' → logprob: -3.7164440155029297
    7. '                       ' → logprob: -3.7164440155029297
    8. '[' → logprob: -4.84144401550293
    9. ' dp' → logprob: -5.34144401550293
    10. '(dp' → logprob: -5.71644401550293

Token 429: ' just' (ID: 1327)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23431016504764557
    2. 'continue' → logprob: -1.7343101501464844
    3. '                           ' → logprob: -4.484310150146484
    4. ' dp' → logprob: -4.859310150146484
    5. ' continue' → logprob: -4.984310150146484
    6. 'pass' → logprob: -5.984310150146484
    7. '                               ' → logprob: -6.234310150146484
    8. '#' → logprob: -7.734310150146484
    9. '```' → logprob: -8.109310150146484
    10. 'for' → logprob: -8.734310150146484

Token 430: ' count' (ID: 3605)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1732095181941986
    2. 'continue' → logprob: -1.923209547996521
    3. 'pass' → logprob: -5.0482096672058105
    4. ' dp' → logprob: -6.1732096672058105
    5. '                           ' → logprob: -6.7982096672058105
    6. '+=' → logprob: -7.2982096672058105
    7. ' continue' → logprob: -7.5482096672058105
    8. '
' → logprob: -7.7982096672058105
    9. '                       ' → logprob: -8.423209190368652
    10. '...' → logprob: -8.798209190368652

Token 431: ' ways' (ID: 6984)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37261301279067993
    2. '+=' → logprob: -1.8726129531860352
    3. ' dp' → logprob: -2.122612953186035
    4. ' +=' → logprob: -3.747612953186035
    5. '=' → logprob: -5.747612953186035
    6. 'ways' → logprob: -6.122612953186035
    7. ' ways' → logprob: -6.372612953186035
    8. '1' → logprob: -6.372612953186035
    9. '(dp' → logprob: -6.622612953186035
    10. 'if' → logprob: -7.122612953186035

Token 432: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.02920198068022728
    2. '+=' → logprob: -4.779201984405518
    3. ' +=' → logprob: -5.279201984405518
    4. '                               ' → logprob: -5.279201984405518
    5. 'dp' → logprob: -5.779201984405518
    6. '                       ' → logprob: -6.154201984405518
    7. '=' → logprob: -6.529201984405518
    8. ' dp' → logprob: -7.154201984405518
    9. ',' → logprob: -7.279201984405518
    10. '(dp' → logprob: -8.15420150756836

Token 433: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.10957338660955429
    2. 'dp' → logprob: -2.7345733642578125
    3. '                               ' → logprob: -3.8595733642578125
    4. ' dp' → logprob: -4.3595733642578125
    5. '                       ' → logprob: -6.3595733642578125
    6. '(dp' → logprob: -7.2345733642578125
    7. '```' → logprob: -7.7345733642578125
    8. ',' → logprob: -7.9845733642578125
    9. 'continue' → logprob: -8.234573364257812
    10. ' for' → logprob: -8.609573364257812

Token 434: ' pass' (ID: 1853)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.019772203639149666
    2. ' dp' → logprob: -4.894772052764893
    3. '                           ' → logprob: -5.144772052764893
    4. 'continue' → logprob: -5.394772052764893
    5. '                               ' → logprob: -7.519772052764893
    6. 'for' → logprob: -8.14477252960205
    7. 'pass' (adapté à ' pass') → logprob: -8.51977252960205
    8. 'print' → logprob: -9.26977252960205
    9. 'count' → logprob: -9.64477252960205
    10. ' continue' → logprob: -9.64477252960205

Token 435: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17076937854290009
    2. '                           ' → logprob: -3.045769453048706
    3. '                       ' → logprob: -3.295769453048706
    4. '
' → logprob: -3.420769453048706
    5. ' dp' → logprob: -4.295769214630127
    6. 'continue' → logprob: -5.045769214630127
    7. '(dp' → logprob: -5.170769214630127
    8. '                               ' → logprob: -5.295769214630127
    9. '+' → logprob: -6.170769214630127
    10. 'elif' → logprob: -6.420769214630127

Token 436: '                       ' (ID: 968)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0997660160064697
    2. '                           ' → logprob: -1.3497660160064697
    3. '                       ' → logprob: -1.4747660160064697
    4. 'else' → logprob: -2.0997660160064697
    5. '                               ' → logprob: -3.5997660160064697
    6. ' dp' → logprob: -4.724765777587891
    7. ' else' → logprob: -4.724765777587891
    8. 'continue' → logprob: -5.599765777587891
    9. 'elif' → logprob: -6.099765777587891
    10. '                   ' → logprob: -6.474765777587891

Token 437: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4510417580604553
    2. '                       ' → logprob: -2.2010416984558105
    3. 'dp' → logprob: -2.2010416984558105
    4. '                           ' → logprob: -2.2010416984558105
    5. ' else' → logprob: -4.7010416984558105
    6. 'continue' → logprob: -5.3260416984558105
    7. 'elif' → logprob: -5.4510416984558105
    8. '                   ' → logprob: -5.7010416984558105
    9. '                               ' → logprob: -6.4510416984558105
    10. '...' → logprob: -6.7010416984558105

Token 438: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5701472759246826
    2. ':' → logprob: -1.3201472759246826
    3. '                           ' → logprob: -1.8201472759246826
    4. '                       ' → logprob: -5.695147514343262
    5. '                   ' → logprob: -7.570147514343262
    6. ' if' → logprob: -7.570147514343262
    7. ',' → logprob: -8.445147514343262
    8. ' and' → logprob: -8.695147514343262
    9. '                               ' → logprob: -8.695147514343262
    10. 'if' → logprob: -8.820147514343262

Token 439: '                           ' (ID: 1686)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5803837180137634
    2. '                           ' → logprob: -1.4553837776184082
    3. '                       ' → logprob: -1.5803837776184082
    4. '                   ' → logprob: -7.580383777618408
    5. 'elif' → logprob: -8.33038330078125
    6. ' if' → logprob: -8.83038330078125
    7. '   ' → logprob: -9.83038330078125
    8. '           ' → logprob: -9.95538330078125
    9. '```' → logprob: -10.45538330078125
    10. '               ' → logprob: -10.58038330078125

Token 440: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008652507327497005
    2. 'dp' → logprob: -4.883652687072754
    3. 'for' → logprob: -7.133652687072754
    4. '                           ' → logprob: -8.758652687072754
    5. ' if' → logprob: -10.008652687072754
    6. 'cell' → logprob: -11.508652687072754
    7. '                       ' → logprob: -11.633652687072754
    8. '                               ' → logprob: -11.758652687072754
    9. '#' → logprob: -11.883652687072754
    10. 'elif' → logprob: -13.133652687072754

Token 441: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.011052774265408516
    2. ' grid' → logprob: -4.51105260848999
    3. '                           ' → logprob: -13.261053085327148
    4. '(grid' → logprob: -13.886053085327148
    5. 'dp' → logprob: -14.136053085327148
    6. '                       ' → logprob: -15.386053085327148
    7. '	grid' → logprob: -15.386053085327148
    8. '   ' → logprob: -15.511053085327148
    9. '                               ' → logprob: -15.636053085327148
    10. 'Grid' → logprob: -16.01105308532715

Token 442: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.061676347395405e-05
    2. 'ny' → logprob: -10.12505054473877
    3. '```' → logprob: -12.62505054473877
    4. ' [' → logprob: -12.87505054473877
    5. '][' → logprob: -13.87505054473877
    6. '   ' → logprob: -14.00005054473877
    7. '[y' → logprob: -14.87505054473877
    8. ' ny' → logprob: -15.25005054473877
    9. '[n' → logprob: -15.37505054473877
    10. ')[' → logprob: -15.75005054473877

Token 443: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00012689977302215993
    2. ' ny' → logprob: -9.375126838684082
    3. 'y' → logprob: -10.500126838684082
    4. '   ' → logprob: -11.750126838684082
    5. '[' → logprob: -13.625126838684082
    6. 'yn' → logprob: -14.250126838684082
    7. 'n' → logprob: -14.500126838684082
    8. ']' → logprob: -14.625126838684082
    9. 'NY' → logprob: -14.875126838684082
    10. '
' → logprob: -14.875126838684082

Token 444: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004534319508820772
    2. '+' → logprob: -6.1295342445373535
    3. '][' → logprob: -6.5045342445373535
    4. '[' → logprob: -7.3795342445373535
    5. '```' → logprob: -9.379534721374512
    6. ' +' → logprob: -10.254534721374512
    7. ' ' → logprob: -10.879534721374512
    8. ']' → logprob: -11.129534721374512
    9. 'ny' → logprob: -11.379534721374512
    10. '
' → logprob: -11.692034721374512

Token 445: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0015802091220393777
    2. ']' → logprob: -7.376580238342285
    3. '[n' → logprob: -7.376580238342285
    4. '[' → logprob: -8.251580238342285
    5. ' ][' → logprob: -11.126580238342285
    6. '   ' → logprob: -11.751580238342285
    7. ']][' → logprob: -12.501580238342285
    8. '       ' → logprob: -12.626580238342285
    9. 'nx' → logprob: -12.626580238342285
    10. '                           ' → logprob: -12.626580238342285

Token 446: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.12698994576931
    2. 'x' → logprob: -2.1269898414611816
    3. ' nx' → logprob: -11.25199031829834
    4. '][' → logprob: -11.25199031829834
    5. '[x' → logprob: -11.87699031829834
    6. '(nx' → logprob: -11.87699031829834
    7. 'xn' → logprob: -12.37699031829834
    8. 'n' → logprob: -12.50199031829834
    9. '   ' → logprob: -13.12699031829834
    10. ']' → logprob: -13.37699031829834

Token 447: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002204974414780736
    2. ']==' → logprob: -6.127204895019531
    3. ' ]' → logprob: -11.752204895019531
    4. '[' → logprob: -11.752204895019531
    5. ']!=' → logprob: -13.502204895019531
    6. '==' → logprob: -13.752204895019531
    7. '`]' → logprob: -14.252204895019531
    8. '']' → logprob: -15.002204895019531
    9. '"]' → logprob: -15.502204895019531
    10. '```' → logprob: -15.877204895019531

Token 448: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0407734140753746
    2. ' ==' → logprob: -3.290773391723633
    3. ']==' → logprob: -6.915773391723633
    4. ']' → logprob: -7.415773391723633
    5. '!=' → logprob: -7.415773391723633
    6. '[' → logprob: -7.665773391723633
    7. ' !=' → logprob: -10.290773391723633
    8. '```' → logprob: -11.540773391723633
    9. '[]' → logprob: -12.540773391723633
    10. ')' → logprob: -12.790773391723633

Token 449: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2762428822461516e-05
    2. ' ' → logprob: -10.000052452087402
    3. '0' → logprob: -12.125052452087402
    4. '2' → logprob: -13.375052452087402
    5. '   ' → logprob: -16.62505340576172
    6. '```' → logprob: -16.87505340576172
    7. '  ' → logprob: -17.25005340576172
    8. '`' → logprob: -17.93755340576172
    9. ')' → logprob: -18.00005340576172
    10. '
' → logprob: -18.18755340576172

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.125003814697266
    3. '0' → logprob: -13.750003814697266
    4. '2' → logprob: -14.875003814697266
    5. '```' → logprob: -17.750003814697266
    6. '   ' → logprob: -17.937503814697266
    7. '`' → logprob: -18.125003814697266
    8. '  ' → logprob: -18.937503814697266
    9. '
' → logprob: -19.312503814697266
    10. '۱' → logprob: -19.375003814697266

Token 451: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01616152748465538
    2. ' and' → logprob: -4.6411614418029785
    3. ':
' → logprob: -5.6411614418029785
    4. '):' → logprob: -6.6411614418029785
    5. '                           ' → logprob: -6.8911614418029785
    6. '                               ' → logprob: -8.516161918640137
    7. 'and' → logprob: -9.516161918640137
    8. ')' → logprob: -9.766161918640137
    9. '<|end|>' → logprob: -9.891161918640137
    10. '):
' → logprob: -10.516161918640137

Token 452: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.022046035155653954
    2. ':' → logprob: -4.647046089172363
    3. ':
' → logprob: -4.772046089172363
    4. '                           ' → logprob: -5.772046089172363
    5. ',' → logprob: -8.397046089172363
    6. '                       ' → logprob: -9.522046089172363
    7. '                                   ' → logprob: -9.647046089172363
    8. ' and' → logprob: -9.772046089172363
    9. '                   ' → logprob: -10.147046089172363
    10. '               ' → logprob: -10.647046089172363

Token 453: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.033506568521261215
    2. ' dp' → logprob: -3.5335066318511963
    3. '                               ' → logprob: -6.283506393432617
    4. '                                   ' → logprob: -6.283506393432617
    5. '                                       ' → logprob: -12.408506393432617
    6. '                           ' → logprob: -12.408506393432617
    7. '                                ' → logprob: -13.283506393432617
    8. '                                    ' → logprob: -14.408506393432617
    9. '(dp' → logprob: -14.408506393432617
    10. '	dp' → logprob: -14.408506393432617

Token 454: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004411591507960111
    2. '[y' → logprob: -7.750441074371338
    3. '   ' → logprob: -12.250441551208496
    4. ' [' → logprob: -12.625441551208496
    5. '[n' → logprob: -14.125441551208496
    6. '][' → logprob: -14.625441551208496
    7. 'ny' → logprob: -15.250441551208496
    8. 'y' → logprob: -15.375441551208496
    9. '       ' → logprob: -15.625441551208496
    10. '
' → logprob: -16.00044059753418

Token 455: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.001935065840370953
    2. 'y' → logprob: -6.251935005187988
    3. 'yn' → logprob: -12.876935005187988
    4. '   ' → logprob: -13.126935005187988
    5. ' ny' → logprob: -14.376935005187988
    6. 'yny' → logprob: -14.876935005187988
    7. 'nyt' → logprob: -14.876935005187988
    8. 'n' → logprob: -16.001935958862305
    9. '[' → logprob: -16.251935958862305
    10. 'ry' → logprob: -16.501935958862305

Token 456: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.718606891809031e-05
    2. '[' → logprob: -10.125066757202148
    3. '[y' → logprob: -11.625066757202148
    4. '][' → logprob: -12.437566757202148
    5. 'ny' → logprob: -13.312566757202148
    6. 'y' → logprob: -13.750066757202148
    7. '   ' → logprob: -13.875066757202148
    8. '```' → logprob: -13.937566757202148
    9. '       ' → logprob: -14.125066757202148
    10. '_' → logprob: -14.562566757202148

Token 457: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002545448951423168
    2. '[n' → logprob: -8.75025463104248
    3. ' ][' → logprob: -10.25025463104248
    4. '[' → logprob: -10.50025463104248
    5. ']' → logprob: -10.50025463104248
    6. '"][' → logprob: -13.37525463104248
    7. '```' → logprob: -14.25025463104248
    8. '       ' → logprob: -14.50025463104248
    9. '   ' → logprob: -14.62525463104248
    10. ''][' → logprob: -14.75025463104248

Token 458: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -7.696077227592468e-05
    2. 'x' → logprob: -9.750077247619629
    3. ' nx' → logprob: -11.000077247619629
    4. '(nx' → logprob: -13.875077247619629
    5. 'xn' → logprob: -14.375077247619629
    6. '][' → logprob: -16.125076293945312
    7. 'n' → logprob: -16.875076293945312
    8. 'dx' → logprob: -17.375076293945312
    9. 'Nx' → logprob: -17.500076293945312
    10. '   ' → logprob: -17.500076293945312

Token 459: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009358783136121929
    2. ']+=' → logprob: -7.000936031341553
    3. ' ]' → logprob: -10.625935554504395
    4. '+=' → logprob: -17.00093650817871
    5. '']' → logprob: -18.12593650817871
    6. ']+' → logprob: -18.25093650817871
    7. ')' → logprob: -18.50093650817871
    8. '"]' → logprob: -18.50093650817871
    9. ' +=' → logprob: -18.75093650817871
    10. '[' → logprob: -18.75093650817871

Token 460: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.021708030253648758
    2. ' +=' → logprob: -4.021708011627197
    3. ']+=' → logprob: -5.646708011627197
    4. ']' → logprob: -11.146708488464355
    5. '[' → logprob: -13.146708488464355
    6. '```' → logprob: -13.771708488464355
    7. '+' → logprob: -13.771708488464355
    8. '                           ' → logprob: -13.896708488464355
    9. '=' → logprob: -14.021708488464355
    10. '+=(' → logprob: -14.646708488464355

Token 461: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00033546582562848926
    2. ' dp' → logprob: -8.000335693359375
    3. '	dp' → logprob: -20.250335693359375
    4. '(dp' → logprob: -21.250335693359375
    5. '_dp' → logprob: -21.750335693359375
    6. '           ' → logprob: -22.250335693359375
    7. 'd' → logprob: -22.625335693359375
    8. '                           ' → logprob: -22.875335693359375
    9. '               ' → logprob: -23.125335693359375
    10. '                               ' → logprob: -23.250335693359375

Token 462: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0001601539261173457
    2. 'y' → logprob: -8.750160217285156
    3. '[' → logprob: -13.500160217285156
    4. '[user' → logprob: -16.875160217285156
    5. '```' → logprob: -16.875160217285156
    6. '(y' → logprob: -17.625160217285156
    7. '	y' → logprob: -17.625160217285156
    8. ' y' → logprob: -18.000160217285156
    9. '[Y' → logprob: -18.375160217285156
    10. '[j' → logprob: -18.500160217285156

Token 463: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010187433508690447
    2. '[x' → logprob: -9.375102043151855
    3. ']' → logprob: -11.750102043151855
    4. ' ][' → logprob: -12.375102043151855
    5. '[y' → logprob: -13.125102043151855
    6. '[' → logprob: -13.125102043151855
    7. '   ' → logprob: -14.875102043151855
    8. '+' → logprob: -16.25010108947754
    9. '}[' → logprob: -16.50010108947754
    10. 'x' → logprob: -16.62510108947754

Token 464: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.5
    3. '[x' → logprob: -17.375
    4. '```' → logprob: -20.0
    5. '[' → logprob: -20.375
    6. ' ' → logprob: -21.125
    7. '	x' → logprob: -21.125
    8. '"x' → logprob: -21.375
    9. '(x' → logprob: -21.5
    10. ']' → logprob: -21.5

Token 465: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11349457502365112
    2. ']' → logprob: -2.238494634628296
    3. '<|end|>' → logprob: -8.113494873046875
    4. '])' → logprob: -9.113494873046875
    5. ')
' → logprob: -9.738494873046875
    6. ')]' → logprob: -10.363494873046875
    7. '                           ' → logprob: -10.363494873046875
    8. '```' → logprob: -10.613494873046875
    9. '）' → logprob: -10.988494873046875
    10. '}' → logprob: -10.988494873046875

Token 466: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.2132736444473267
    2. 'else' → logprob: -1.7132736444473267
    3. '                       ' → logprob: -1.9632736444473267
    4. '                   ' → logprob: -2.463273525238037
    5. 'continue' → logprob: -2.463273525238037
    6. '                               ' → logprob: -2.713273525238037
    7. '               ' → logprob: -3.713273525238037
    8. 'count' → logprob: -4.088273525238037
    9. '       ' → logprob: -4.338273525238037
    10. '           ' → logprob: -4.463273525238037

Token 468: ' sum' (ID: 4215)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.7076038122177124
    2. 'total' → logprob: -1.9576038122177124
    3. 'result' → logprob: -2.082603931427002
    4. ' ways' → logprob: -2.457603931427002
    5. 'answer' → logprob: -3.207603931427002
    6. 'ans' → logprob: -3.582603931427002
    7. 'res' → logprob: -3.832603931427002
    8. ' total' → logprob: -3.957603931427002
    9. 'count' → logprob: -4.582603931427002
    10. ' result' → logprob: -5.207603931427002

Token 469: ' ways' (ID: 6984)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9460014700889587
    2. 'ways' → logprob: -1.5710015296936035
    3. ' =' → logprob: -1.8210015296936035
    4. ' ways' → logprob: -2.5710015296936035
    5. '_result' → logprob: -2.9460015296936035
    6. ' result' → logprob: -3.4460015296936035
    7. '_' → logprob: -4.0710015296936035
    8. '   ' → logprob: -4.1960015296936035
    9. '=' → logprob: -4.1960015296936035
    10. 'res' → logprob: -4.6960015296936035

Token 470: ' reaching' (ID: 29787)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0015813112258911
    2. '   ' → logprob: -1.2515813112258911
    3. 'total' → logprob: -1.7515813112258911
    4. 'ways' → logprob: -2.6265811920166016
    5. 'print' → logprob: -3.7515811920166016
    6. 'answer' → logprob: -4.001581192016602
    7. 'res' → logprob: -4.626581192016602
    8. 'count' → logprob: -4.626581192016602
    9. ' ways' → logprob: -4.751581192016602
    10. ' result' → logprob: -4.876581192016602

Token 471: ' below' (ID: 4895)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9972087740898132
    2. '=' → logprob: -2.247208833694458
    3. ' =' → logprob: -2.247208833694458
    4. 'result' → logprob: -2.372208833694458
    5. 'ways' → logprob: -2.372208833694458
    6. ' ways' → logprob: -2.872208833694458
    7. ' dp' → logprob: -3.247208833694458
    8. 'print' → logprob: -3.747208833694458
    9. 'total' → logprob: -4.372208595275879
    10. 'sum' → logprob: -4.497208595275879

Token 472: ' bottom' (ID: 8725)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0625505447387695
    2. 'ways' → logprob: -1.0625505447387695
    3. '   ' → logprob: -2.0625505447387695
    4. 'total' → logprob: -2.4375505447387695
    5. 'count' → logprob: -4.1875505447387695
    6. ' =' → logprob: -4.5625505447387695
    7. 'result' → logprob: -4.8125505447387695
    8. 'dp' → logprob: -4.8125505447387695
    9. '```' → logprob: -4.9375505447387695
    10. 'at' → logprob: -5.3125505447387695

Token 473: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5993392467498779
    2. 'result' → logprob: -1.349339246749878
    3. 'total' → logprob: -2.224339246749878
    4. 'ways' → logprob: -2.974339246749878
    5. 'answer' → logprob: -4.599339485168457
    6. 'res' → logprob: -4.974339485168457
    7. 'ans' → logprob: -5.224339485168457
    8. 'count' → logprob: -6.099339485168457
    9. '```' → logprob: -6.099339485168457
    10. '
' → logprob: -6.224339485168457

Token 474: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6405996680259705
    2. 'total' → logprob: -1.6405997276306152
    3. 'ways' → logprob: -2.1405997276306152
    4. '   ' → logprob: -2.7655997276306152
    5. 'answer' → logprob: -2.7655997276306152
    6. 'ans' → logprob: -4.015599727630615
    7. 'res' → logprob: -4.765599727630615
    8. 'count' → logprob: -5.515599727630615
    9. '```' → logprob: -6.640599727630615
    10. '
' → logprob: -7.015599727630615

Token 475: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0651813745498657
    2. 'ways' → logprob: -1.3151813745498657
    3. 'ans' → logprob: -1.4401813745498657
    4. 'total' (adapté à ' total') → logprob: -2.815181255340576
    5. 'res' → logprob: -3.065181255340576
    6. 'answer' → logprob: -3.315181255340576
    7. ' ways' → logprob: -5.940181255340576
    8. 'out' → logprob: -6.440181255340576
    9. 'print' → logprob: -6.690181255340576
    10. 'count' → logprob: -7.690181255340576

Token 476: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35376814007759094
    2. ' =' → logprob: -1.3537681102752686
    3. '=' → logprob: -3.2287681102752686
    4. 'ways' → logprob: -10.603768348693848
    5. 'Ways' → logprob: -11.603768348693848
    6. '```' → logprob: -11.603768348693848
    7. '_paths' → logprob: -11.728768348693848
    8. '_=' → logprob: -11.728768348693848
    9. '_count' → logprob: -11.978768348693848
    10. '   ' → logprob: -12.478768348693848

Token 477: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39294102787971497
    2. 'sum' → logprob: -1.2679409980773926
    3. ' sum' → logprob: -3.5179409980773926
    4. 'dp' → logprob: -4.392940998077393
    5. ' dp' → logprob: -7.142940998077393
    6. ' ' → logprob: -7.392940998077393
    7. '   ' → logprob: -10.01794147491455
    8. '(sum' → logprob: -11.95544147491455
    9. '(dp' → logprob: -12.20544147491455
    10. '=sum' → logprob: -12.76794147491455

Token 478: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45097529888153076
    2. 'sum' → logprob: -1.0759752988815308
    3. 'dp' → logprob: -3.8259754180908203
    4. ' sum' → logprob: -8.57597541809082
    5. ' dp' → logprob: -11.70097541809082
    6. '(dp' → logprob: -12.20097541809082
    7. '(sum' → logprob: -12.20097541809082
    8. ' ' → logprob: -12.32597541809082
    9. '[' → logprob: -12.45097541809082
    10. 'len' → logprob: -13.32597541809082

Token 479: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35580509901046753
    2. '   ' → logprob: -1.8558051586151123
    3. ' for' → logprob: -2.2308051586151123
    4. 'for' → logprob: -3.3558051586151123
    5. '    
' → logprob: -8.730805397033691
    6. '  
' → logprob: -8.855805397033691
    7. '	for' → logprob: -8.980805397033691
    8. ' 
' → logprob: -9.480805397033691
    9. '
' → logprob: -9.855805397033691
    10. '<|end|>' → logprob: -10.105805397033691

Token 480: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7273244261741638
    2. 'for' → logprob: -1.1023244857788086
    3. '   ' → logprob: -1.7273244857788086
    4. '
' → logprob: -5.102324485778809
    5. '<|end|>' → logprob: -7.477324485778809
    6. '	for' → logprob: -8.977324485778809
    7. '```' → logprob: -10.227324485778809
    8. 'total' → logprob: -10.227324485778809
    9. '  ' → logprob: -11.227324485778809
    10. '    
' → logprob: -11.227324485778809

Token 481: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0014966491144150496
    2. 'total' → logprob: -7.5014967918396
    3. '   ' → logprob: -7.6264967918396
    4. ' for' → logprob: -7.7514967918396
    5. '
' → logprob: -10.626496315002441
    6. '	for' → logprob: -15.001496315002441
    7. '```' → logprob: -15.126496315002441
    8. 'if' → logprob: -15.126496315002441
    9. ' total' → logprob: -15.751496315002441
    10. '    
' → logprob: -16.126497268676758

Token 482: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001363093382678926
    2. ' x' → logprob: -7.501363277435303
    3. 'y' → logprob: -7.626363277435303
    4. 'nx' → logprob: -8.751362800598145
    5. 'dp' → logprob: -9.251362800598145
    6. 'ny' → logprob: -10.876362800598145
    7. 'i' → logprob: -11.126362800598145
    8. 'j' → logprob: -12.626362800598145
    9. '```' → logprob: -12.876362800598145
    10. 'dx' → logprob: -12.876362800598145

Token 483: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018156850710511208
    2. 'in' → logprob: -4.018157005310059
    3. '   ' → logprob: -13.268157005310059
    4. ' ' → logprob: -13.768157005310059
    5. 'range' → logprob: -14.018157005310059
    6. ' range' → logprob: -14.518157005310059
    7. '[' → logprob: -14.768157005310059
    8. '0' → logprob: -14.768157005310059
    9. '```' → logprob: -14.893157005310059
    10. ',' → logprob: -15.018157005310059

Token 484: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0025069285184144974
    2. ' range' → logprob: -6.002506732940674
    3. 'dp' → logprob: -10.377507209777832
    4. '[' → logprob: -16.627506256103516
    5. '0' → logprob: -17.127506256103516
    6. '(range' → logprob: -17.502506256103516
    7. ' dp' → logprob: -17.752506256103516
    8. '   ' → logprob: -18.127506256103516
    9. '```' → logprob: -18.127506256103516
    10. '
' → logprob: -18.252506256103516

Token 485: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0009189624106511474
    2. 'X' → logprob: -7.000918865203857
    3. '(len' → logprob: -13.000919342041016
    4. '(' → logprob: -13.375919342041016
    5. '[X' → logprob: -13.375919342041016
    6. '   ' → logprob: -13.500919342041016
    7. ' X' → logprob: -15.125919342041016
    8. 'len' → logprob: -15.125919342041016
    9. ' (' → logprob: -16.125919342041016
    10. '
' → logprob: -17.625919342041016

Token 486: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31764739751815796
    2. '):
' → logprob: -1.3176474571228027
    3. '+' → logprob: -5.942647457122803
    4. ')' → logprob: -6.692647457122803
    5. '   ' → logprob: -8.442646980285645
    6. ',' → logprob: -8.817646980285645
    7. ':' → logprob: -10.442646980285645
    8. ' ):' → logprob: -10.817646980285645
    9. '0' → logprob: -11.442646980285645
    10. '[' → logprob: -11.567646980285645

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05529487133026123
    2. '   ' → logprob: -3.305294990539551
    3. ' total' → logprob: -4.930294990539551
    4. 'total' → logprob: -5.430294990539551
    5. ' if' → logprob: -6.680294990539551
    6. '
' → logprob: -7.180294990539551
    7. ':' → logprob: -7.430294990539551
    8. ' for' → logprob: -7.680294990539551
    9. '<|end|>' → logprob: -7.805294990539551
    10. '(total' → logprob: -8.43029499053955

Token 488: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.29340770840644836
    2. 'if' → logprob: -1.418407678604126
    3. 'for' → logprob: -4.918407917022705
    4. '   ' → logprob: -5.418407917022705
    5. ' total' → logprob: -8.793407440185547
    6. ' if' → logprob: -9.043407440185547
    7. '       ' → logprob: -9.168407440185547
    8. '
' → logprob: -11.543407440185547
    9. '           ' → logprob: -11.793407440185547
    10. '#' → logprob: -12.168407440185547

Token 489: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04874076321721077
    2. ' +=' → logprob: -3.048740863800049
    3. '=' → logprob: -9.04874038696289
    4. ']+=' → logprob: -11.04874038696289
    5. '   ' → logprob: -11.17374038696289
    6. '+' → logprob: -12.42374038696289
    7. '```' → logprob: -14.42374038696289
    8. ')' → logprob: -15.29874038696289
    9. '    ' → logprob: -15.42374038696289
    10. '       ' → logprob: -15.79874038696289

Token 490: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003805064770858735
    2. ' dp' → logprob: -7.875380516052246
    3. '0' → logprob: -15.750380516052246
    4. '(dp' → logprob: -16.62537956237793
    5. '	dp' → logprob: -16.87537956237793
    6. '   ' → logprob: -18.12537956237793
    7. '_dp' → logprob: -18.12537956237793
    8. 'sum' → logprob: -19.25037956237793
    9. '
' → logprob: -19.37537956237793
    10. '       ' → logprob: -19.75037956237793

Token 491: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.0013266648165881634
    2. 'Y' → logprob: -7.376326560974121
    3. '[-' → logprob: -7.376326560974121
    4. '[' → logprob: -9.626326560974121
    5. '[len' → logprob: -12.376326560974121
    6. '[X' → logprob: -13.251326560974121
    7. '(Y' → logprob: -14.876326560974121
    8. ' Y' → logprob: -15.001326560974121
    9. '[
' → logprob: -15.626326560974121
    10. '[y' → logprob: -15.626326560974121

Token 492: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.134509021649137e-05
    2. ']' → logprob: -10.37506103515625
    3. '[x' → logprob: -11.00006103515625
    4. ' ][' → logprob: -11.75006103515625
    5. '   ' → logprob: -13.12506103515625
    6. '+' → logprob: -13.87506103515625
    7. '-' → logprob: -14.75006103515625
    8. '+x' → logprob: -14.87506103515625
    9. ' ' → logprob: -15.12506103515625
    10. ')[' → logprob: -15.62506103515625

Token 493: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.875
    3. '0' → logprob: -16.375
    4. '[x' → logprob: -17.5
    5. ']' → logprob: -19.5
    6. 'total' → logprob: -20.125
    7. '(x' → logprob: -20.25
    8. '
' → logprob: -20.375
    9. '   ' → logprob: -20.5
    10. ' ' → logprob: -20.875

Token 494: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2822765111923218
    2. ')' → logprob: -1.4072765111923218
    3. '<|end|>' → logprob: -8.157276153564453
    4. ']
' → logprob: -8.282276153564453
    5. ')
' → logprob: -8.532276153564453
    6. '   ' → logprob: -9.282276153564453
    7. ')]' → logprob: -9.782276153564453
    8. '+' → logprob: -9.782276153564453
    9. '
' → logprob: -9.782276153564453
    10. ']+' → logprob: -10.282276153564453

Token 495: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18751177191734314
    2. '
' → logprob: -1.8125118017196655
    3. '```' → logprob: -5.312511920928955
    4. '   ' → logprob: -6.687511920928955
    5. ' print' → logprob: -7.437511920928955
    6. '<|end|>' → logprob: -7.937511920928955
    7. '+
' → logprob: -8.562511444091797
    8. '+' → logprob: -8.812511444091797
    9. '``' → logprob: -9.312511444091797
    10. '    
' → logprob: -10.062511444091797

Token 496: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012314191553741693
    2. '   ' → logprob: -6.7512311935424805
    3. ' print' → logprob: -10.50123119354248
    4. '```' → logprob: -10.75123119354248
    5. '
' → logprob: -11.37623119354248
    6. '    
' → logprob: -15.12623119354248
    7. '``' → logprob: -15.37623119354248
    8. '#print' → logprob: -16.751232147216797
    9. '	print' → logprob: -17.626232147216797
    10. 'for' → logprob: -17.876232147216797

Token 497: ' also' (ID: 1217)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.194110756041482e-05
    2. '   ' → logprob: -9.875061988830566
    3. ' print' → logprob: -11.500061988830566
    4. '```' → logprob: -15.625061988830566
    5. '#print' → logprob: -16.62506103515625
    6. 'for' → logprob: -17.00006103515625
    7. 'total' → logprob: -17.50006103515625
    8. 'if' → logprob: -17.75006103515625
    9. 'break' → logprob: -18.00006103515625
    10. '
' → logprob: -18.62506103515625

Token 498: ' add' (ID: 1147)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11207412928342819
    2. 'print' → logprob: -2.612074136734009
    3. ' for' → logprob: -4.23707389831543
    4. 'if' → logprob: -5.48707389831543
    5. '#' → logprob: -5.61207389831543
    6. 'total' → logprob: -5.86207389831543
    7. 'continue' → logprob: -6.36207389831543
    8. '
' → logprob: -6.48707389831543
    9. 'ny' → logprob: -6.86207389831543
    10. '   ' → logprob: -6.98707389831543

Token 499: ' ways' (ID: 6984)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7167580723762512
    2. ' dp' → logprob: -1.7167580127716064
    3. ' sum' → logprob: -1.9667580127716064
    4. 'dp' → logprob: -1.9667580127716064
    5. 'for' → logprob: -3.4667580127716064
    6. ' for' → logprob: -4.9667582511901855
    7. '   ' → logprob: -5.5917582511901855
    8. '0' → logprob: -5.7167582511901855
    9. ' ' → logprob: -6.5917582511901855
    10. 'total' → logprob: -7.2167582511901855

Token 500: ' that' (ID: 484)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.42293626070022583
    2. ' from' → logprob: -2.422936201095581
    3. '   ' → logprob: -3.047936201095581
    4. ' that' → logprob: -3.172936201095581
    5. 'that' → logprob: -3.422936201095581
    6. 'for' → logprob: -3.672936201095581
    7. ' finishing' → logprob: -3.797936201095581
    8. 'to' → logprob: -4.42293643951416
    9. ' to' → logprob: -4.67293643951416
    10. '=' → logprob: -4.92293643951416

Token 501: ' went' (ID: 5981)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.410884976387024
    2. 'pass' → logprob: -1.785884976387024
    3. ' +=' → logprob: -2.0358848571777344
    4. ' can' → logprob: -2.4108848571777344
    5. ' pass' → logprob: -2.5358848571777344
    6. 'finish' → logprob: -3.0358848571777344
    7. 'can' → logprob: -3.5358848571777344
    8. '=' → logprob: -3.6608848571777344
    9. ' could' → logprob: -3.6608848571777344
    10. 'if' → logprob: -4.035884857177734

Token 502: ' beyond' (ID: 11615)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7100917100906372
    2. ' beyond' → logprob: -2.0850915908813477
    3. 'through' → logprob: -2.2100915908813477
    4. 'over' → logprob: -2.4600915908813477
    5. 'to' → logprob: -2.7100915908813477
    6. '   ' → logprob: -3.2100915908813477
    7. ' through' → logprob: -3.9600915908813477
    8. ' to' → logprob: -4.460091590881348
    9. ' off' → logprob: -4.835091590881348
    10. ' over' → logprob: -5.335091590881348

Token 503: ' bottom' (ID: 8725)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.4742685556411743
    2. 'Y' → logprob: -1.5992685556411743
    3. '   ' → logprob: -1.9742685556411743
    4. 'the' → logprob: -2.3492684364318848
    5. ' through' → logprob: -2.8492684364318848
    6. 'dp' → logprob: -3.0992684364318848
    7. 'from' → logprob: -3.7242684364318848
    8. ' bottom' → logprob: -3.8492684364318848
    9. 'through' → logprob: -3.9742684364318848
    10. ' Y' → logprob: -4.224268436431885

Token 504: ' directly' (ID: 8516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6520106792449951
    2. ' +=' → logprob: -1.4020106792449951
    3. '                   ' → logprob: -2.652010679244995
    4. '
' → logprob: -2.652010679244995
    5. '+=' → logprob: -3.527010679244995
    6. '           ' → logprob: -4.152010917663574
    7. ' for' → logprob: -4.777010917663574
    8. '                       ' → logprob: -5.027010917663574
    9. '                           ' → logprob: -5.402010917663574
    10. '       ' → logprob: -5.527010917663574

Token 505: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43353697657585144
    2. '                   ' → logprob: -1.1835370063781738
    3. '           ' → logprob: -4.308537006378174
    4. '       ' → logprob: -4.683537006378174
    5. '
' → logprob: -4.933537006378174
    6. '               ' → logprob: -5.183537006378174
    7. '                       ' → logprob: -6.558537006378174
    8. ' +=' → logprob: -6.558537006378174
    9. ' for' → logprob: -6.683537006378174
    10. 'for' → logprob: -6.683537006378174

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17709988355636597
    2. '
' → logprob: -2.6770999431610107
    3. '       ' → logprob: -3.1770999431610107
    4. '                   ' → logprob: -4.052099704742432
    5. ' for' → logprob: -4.177099704742432
    6. '           ' → logprob: -4.427099704742432
    7. 'for' → logprob: -5.677099704742432
    8. '               ' → logprob: -6.677099704742432
    9. '    
' → logprob: -7.427099704742432
    10. 'total' → logprob: -7.427099704742432

Token 507: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25160008668899536
    2. ' for' → logprob: -2.0016000270843506
    3. 'total' → logprob: -2.8766000270843506
    4. '   ' → logprob: -4.50160026550293
    5. '                   ' → logprob: -4.87660026550293
    6. '       ' → logprob: -5.50160026550293
    7. ' total' → logprob: -6.12660026550293
    8. '           ' → logprob: -6.25160026550293
    9. '
' → logprob: -6.62660026550293
    10. '                       ' → logprob: -7.25160026550293

Token 508: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13188613951206207
    2. 'total' → logprob: -2.2568862438201904
    3. 'if' → logprob: -4.756886005401611
    4. ' for' → logprob: -5.131886005401611
    5. '   ' → logprob: -6.381886005401611
    6. '                   ' → logprob: -7.131886005401611
    7. ' total' → logprob: -7.256886005401611
    8. 'continue' → logprob: -8.00688648223877
    9. '
' → logprob: -8.25688648223877
    10. 'print' → logprob: -9.00688648223877

Token 509: ' dp' (ID: 21546)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3797411918640137
    2. 'for' → logprob: -1.3797411918640137
    3. ' if' → logprob: -1.5047411918640137
    4. 'if' → logprob: -1.6297411918640137
    5. ' continue' → logprob: -4.129741191864014
    6. '#' → logprob: -4.504741191864014
    7. 'continue' → logprob: -4.629741191864014
    8. '   ' → logprob: -4.754741191864014
    9. ' #' → logprob: -5.254741191864014
    10. '                   ' → logprob: -5.879741191864014

Token 510: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.5976433157920837
    2. ' +=' → logprob: -1.8476433753967285
    3. '+=' → logprob: -2.4726433753967285
    4. '=' → logprob: -2.5976433753967285
    5. '[' → logprob: -3.3476433753967285
    6. 'Y' → logprob: -3.3476433753967285
    7. ' =' → logprob: -3.8476433753967285
    8. '[y' → logprob: -3.9726433753967285
    9. ' ' → logprob: -5.9726433753967285
    10. 'y' → logprob: -6.4726433753967285

Token 511: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.39397135376930237
    2. ']' → logprob: -1.26897132396698
    3. ']+=' → logprob: -4.0189714431762695
    4. '].' → logprob: -4.1439714431762695
    5. '[' → logprob: -5.5189714431762695
    6. '][]' → logprob: -7.0189714431762695
    7. ']=' → logprob: -7.7689714431762695
    8. ']==' → logprob: -7.8939714431762695
    9. '
' → logprob: -8.01897144317627
    10. '   ' → logprob: -8.01897144317627

Token 512: ' is' (ID: 382)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.0451350212097168
    2. ' is' → logprob: -1.7951350212097168
    3. '[' → logprob: -1.9201350212097168
    4. '+=' → logprob: -2.295135021209717
    5. '[Y' → logprob: -3.295135021209717
    6. ' =' → logprob: -3.295135021209717
    7. '=' → logprob: -3.670135021209717
    8. ' does' → logprob: -3.920135021209717
    9. ' was' → logprob: -4.170135021209717
    10. '
' → logprob: -5.045135021209717

Token 513: ' only' (ID: 1606)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022686496376991272
    2. 'not' → logprob: -4.27268648147583
    3. '[]' → logprob: -5.64768648147583
    4. ' [' → logprob: -6.52268648147583
    5. 'fixed' → logprob: -7.14768648147583
    6. '0' → logprob: -7.27268648147583
    7. 'dp' → logprob: -7.89768648147583
    8. 'list' → logprob: -7.89768648147583
    9. 'len' → logprob: -8.272686958312988
    10. '[len' → logprob: -8.397686958312988

Token 514: ' length' (ID: 5517)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1819919347763062
    2. '[Y' → logprob: -2.1819920539855957
    3. '[X' → logprob: -2.3069920539855957
    4. ' a' → logprob: -2.8069920539855957
    5. 'initialized' → logprob: -2.8069920539855957
    6. '[' → logprob: -3.0569920539855957
    7. 'used' → logprob: -3.3069920539855957
    8. 'dp' → logprob: -3.5569920539855957
    9. ' of' → logprob: -3.5569920539855957
    10. '0' → logprob: -3.6819920539855957

Token 515: ' X' (ID: 2127)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.3378740549087524
    2. 'for' → logprob: -1.7128740549087524
    3. ' for' → logprob: -2.712873935699463
    4. '0' → logprob: -2.712873935699463
    5. '+=' → logprob: -2.837873935699463
    6. '=' → logprob: -2.962873935699463
    7. '
' → logprob: -3.337873935699463
    8. '   ' → logprob: -3.337873935699463
    9. 'dp' → logprob: -3.337873935699463
    10. '+' → logprob: -3.962873935699463

Token 516: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2063418626785278
    2. 'for' → logprob: -1.8313418626785278
    3. '                       ' → logprob: -1.8313418626785278
    4. '
' → logprob: -2.5813417434692383
    5. '                           ' → logprob: -3.0813417434692383
    6. '                   ' → logprob: -3.0813417434692383
    7. 'total' → logprob: -3.3313417434692383
    8. ' if' → logprob: -3.4563417434692383
    9. '+' → logprob: -3.7063417434692383
    10. '<|end|>' → logprob: -4.206341743469238

Token 517: ' no' (ID: 860)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8349779844284058
    2. 'for' → logprob: -0.9599779844284058
    3. 'total' → logprob: -2.7099781036376953
    4. '                   ' → logprob: -3.9599781036376953
    5. ' total' → logprob: -4.084978103637695
    6. 'continue' → logprob: -4.334978103637695
    7. '                               ' → logprob: -4.584978103637695
    8. '                           ' → logprob: -4.834978103637695
    9. ' if' → logprob: -4.834978103637695
    10. '                       ' → logprob: -5.084978103637695

Token 518: ' extension' (ID: 15369)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.3603891432285309
    2. 'dp' → logprob: -2.110389232635498
    3. 'extra' → logprob: -3.360389232635498
    4. ' extra' → logprob: -3.735389232635498
    5. 'additional' → logprob: -4.110389232635498
    6. 'for' → logprob: -4.610389232635498
    7. 'extend' → logprob: -4.610389232635498
    8. ' append' → logprob: -4.610389232635498
    9. '.append' → logprob: -4.860389232635498
    10. ' for' → logprob: -5.110389232635498

Token 519: ' further' (ID: 6544)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4691925346851349
    2. '   ' → logprob: -2.2191925048828125
    3. '<|end|>' → logprob: -2.4691925048828125
    4. ' for' → logprob: -2.5941925048828125
    5. 'for' → logprob: -3.3441925048828125
    6. 'total' → logprob: -3.5941925048828125
    7. '       ' → logprob: -3.7191925048828125
    8. '           ' → logprob: -5.7191925048828125
    9. '                   ' → logprob: -5.8441925048828125
    10. '<|end|>' → logprob: -5.9691925048828125

Token 520: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 521: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24527835845947266
    2. 'for' → logprob: -2.1202783584594727
    3. ' for' → logprob: -2.8702783584594727
    4. 'total' → logprob: -3.7452783584594727
    5. '
' → logprob: -4.245278358459473
    6. ' total' → logprob: -6.745278358459473
    7. '       ' → logprob: -7.870278358459473
    8. 'continue' → logprob: -8.370278358459473
    9. '<|end|>' → logprob: -8.495278358459473
    10. '           ' → logprob: -8.870278358459473

Token 522: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5140854716300964
    2. 'total' → logprob: -1.5140855312347412
    3. ' for' → logprob: -2.264085531234741
    4. 'continue' → logprob: -3.889085531234741
    5. '                           ' → logprob: -4.639085292816162
    6. ' total' → logprob: -4.764085292816162
    7. '                   ' → logprob: -4.764085292816162
    8. '   ' → logprob: -4.889085292816162
    9. '<|end|>' → logprob: -5.014085292816162
    10. '                       ' → logprob: -5.764085292816162

Token 523: ' so' (ID: 813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0616137832403183
    2. 'total' → logprob: -3.0616137981414795
    3. '   ' → logprob: -5.5616135597229
    4. 'print' → logprob: -5.9366135597229
    5. 'continue' → logprob: -6.0616135597229
    6. ' for' → logprob: -6.1866135597229
    7. 'ways' → logprob: -7.3116135597229
    8. 'if' → logprob: -7.6866135597229
    9. '
' → logprob: -8.561614036560059
    10. 'pass' → logprob: -8.811614036560059

Token 524: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3084357678890228
    2. ' for' → logprob: -1.5584357976913452
    3. 'total' → logprob: -4.183435916900635
    4. 'pass' → logprob: -4.558435916900635
    5. ' total' → logprob: -4.933435916900635
    6. 'continue' → logprob: -5.183435916900635
    7. ' pass' → logprob: -5.808435916900635
    8. 'print' → logprob: -5.933435916900635
    9. ' continue' → logprob: -5.933435916900635
    10. 'if' → logprob: -6.183435916900635

Token 525: ' dp' (ID: 21546)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38724008202552795
    2. 'for' → logprob: -1.5122400522232056
    3. ' if' → logprob: -2.637240171432495
    4. '   ' → logprob: -4.512239933013916
    5. ' for' → logprob: -4.637239933013916
    6. 'ny' → logprob: -5.512239933013916
    7. '                   ' → logprob: -6.762239933013916
    8. 'cells' → logprob: -7.012239933013916
    9. 'cell' → logprob: -8.137240409851074
    10. 'y' → logprob: -8.262240409851074

Token 526: ' at' (ID: 540)
  Prédit: '[Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.5385409593582153
    2. 'Y' → logprob: -1.7885409593582153
    3. '[y' → logprob: -2.663540840148926
    4. ' =' → logprob: -2.788540840148926
    5. '=' → logprob: -3.163540840148926
    6. 'for' → logprob: -3.663540840148926
    7. 'y' → logprob: -4.788540840148926
    8. 'values' → logprob: -5.163540840148926
    9. '=[]' → logprob: -5.288540840148926
    10. 'indices' → logprob: -5.663540840148926

Token 527: ' y' (ID: 342)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.2016698271036148
    2. 'y' → logprob: -2.201669931411743
    3. 'dp' → logprob: -3.701669931411743
    4. '0' → logprob: -4.326669692993164
    5. 'ny' → logprob: -4.701669692993164
    6. '[Y' → logprob: -4.826669692993164
    7. 'for' → logprob: -5.076669692993164
    8. '[y' → logprob: -5.701669692993164
    9. 'range' → logprob: -6.576669692993164
    10. '   ' → logprob: -6.951669692993164

Token 528: '=' (ID: 28)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10314389318227768
    2. ' +' → logprob: -2.4781439304351807
    3. '   ' → logprob: -5.353143692016602
    4. 'Y' → logprob: -6.603143692016602
    5. '2' → logprob: -6.728143692016602
    6. '
' → logprob: -6.978143692016602
    7. 'for' → logprob: -6.978143692016602
    8. '==' → logprob: -7.478143692016602
    9. ' ==' → logprob: -7.478143692016602
    10. ' +=' → logprob: -7.603143692016602

Token 529: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.007857046090066433
    2. 'y' → logprob: -4.882856845855713
    3. '0' → logprob: -9.507857322692871
    4. '   ' → logprob: -9.757857322692871
    5. ' Y' → logprob: -10.132857322692871
    6. '1' → logprob: -11.007857322692871
    7. ' ' → logprob: -11.507857322692871
    8. '(Y' → logprob: -11.882857322692871
    9. '[Y' → logprob: -12.132857322692871
    10. '[y' → logprob: -12.382857322692871

Token 530: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.9451031684875488
    2. 'for' → logprob: -1.9451031684875488
    3. '           ' → logprob: -2.195103168487549
    4. ' for' → logprob: -2.445103168487549
    5. '       ' → logprob: -2.570103168487549
    6. '                   ' → logprob: -2.820103168487549
    7. '<|end|>' → logprob: -2.820103168487549
    8. '   ' → logprob: -2.945103168487549
    9. '               ' → logprob: -3.320103168487549
    10. ' and' → logprob: -3.320103168487549

Token 531: ' y' (ID: 342)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9868612885475159
    2. 'Y' → logprob: -1.236861228942871
    3. 'y' → logprob: -1.861861228942871
    4. 'dp' → logprob: -1.986861228942871
    5. 'continue' → logprob: -4.861861228942871
    6. 'total' → logprob: -4.861861228942871
    7. '
' → logprob: -5.111861228942871
    8. 'x' → logprob: -5.486861228942871
    9. '0' → logprob: -5.736861228942871
    10. 'print' → logprob: -5.861861228942871

Token 532: '=' (ID: 28)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00334370625205338
    2. 'Y' → logprob: -6.62834358215332
    3. ' +' → logprob: -7.25334358215332
    4. '[Y' → logprob: -7.62834358215332
    5. '-' → logprob: -8.50334358215332
    6. '   ' → logprob: -8.62834358215332
    7. '[' → logprob: -8.87834358215332
    8. 'for' → logprob: -9.75334358215332
    9. '=' → logprob: -10.25334358215332
    10. ' Y' → logprob: -10.50334358215332

Token 533: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.5213274309644476e-05
    2. '(Y' → logprob: -11.750015258789062
    3. ' Y' → logprob: -12.625015258789062
    4. '[Y' → logprob: -13.500015258789062
    5. '	Y' → logprob: -14.000015258789062
    6. '   ' → logprob: -14.875015258789062
    7. '1' → logprob: -15.000015258789062
    8. '0' → logprob: -15.250015258789062
    9. 'y' → logprob: -15.625015258789062
    10. '`' → logprob: -16.125015258789062

Token 534: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.060104917734861374
    2. '2' → logprob: -3.5601048469543457
    3. 'for' → logprob: -4.935104846954346
    4. ' +' → logprob: -5.435104846954346
    5. '<|end|>' → logprob: -5.435104846954346
    6. '-' → logprob: -5.685104846954346
    7. '   ' → logprob: -6.060104846954346
    8. ']' → logprob: -6.685104846954346
    9. '
' → logprob: -6.810104846954346
    10. ':' → logprob: -7.310104846954346

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.632542913896032e-05
    2. '0' → logprob: -10.375046730041504
    3. '2' → logprob: -11.375046730041504
    4. ' ' → logprob: -13.125046730041504
    5. '```' → logprob: -14.000046730041504
    6. '   ' → logprob: -15.187546730041504
    7. '
' → logprob: -16.437545776367188
    8. '`' → logprob: -16.562545776367188
    9. '１' → logprob: -16.937545776367188
    10. '+' → logprob: -17.125045776367188

Token 536: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6625424027442932
    2. '   ' → logprob: -1.1625423431396484
    3. ' for' → logprob: -2.6625423431396484
    4. 'for' → logprob: -2.6625423431396484
    5. '<|end|>' → logprob: -3.5375423431396484
    6. 'total' → logprob: -6.537542343139648
    7. '<|end|>' → logprob: -7.662542343139648
    8. '    
' → logprob: -8.787542343139648
    9. ' ' → logprob: -8.912542343139648
    10. ' total' → logprob: -9.162542343139648

Token 537: ' we' (ID: 581)
  Prédit: 'well'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'well' → logprob: -0.714525580406189
    2. '0' → logprob: -0.839525580406189
    3. 'dp' → logprob: -3.4645256996154785
    4. '   ' → logprob: -4.4645256996154785
    5. 'possible' → logprob: -4.8395256996154785
    6. 'y' → logprob: -4.9645256996154785
    7. 'Y' → logprob: -5.2145256996154785
    8. 'range' → logprob: -5.5895256996154785
    9. ' well' → logprob: -5.7145256996154785
    10. 'sum' → logprob: -6.7145256996154785

Token 538: ' did' (ID: 2242)
  Prédit: ' don't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' don't' → logprob: -0.6816263198852539
    2. 'don't' → logprob: -1.931626319885254
    3. 're' → logprob: -2.306626319885254
    4. ' have' → logprob: -2.556626319885254
    5. 'have' → logprob: -3.681626319885254
    6. '   ' → logprob: -4.306626319885254
    7. ' cannot' → logprob: -4.681626319885254
    8. ' don' → logprob: -4.806626319885254
    9. 'for' → logprob: -4.931626319885254
    10. 'continue' → logprob: -4.931626319885254

Token 539: ' dp' (ID: 21546)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7388952970504761
    2. 'for' → logprob: -1.863895297050476
    3. '   ' → logprob: -2.1138954162597656
    4. ' for' → logprob: -2.3638954162597656
    5. '<|end|>' → logprob: -2.7388954162597656
    6. 'total' → logprob: -3.2388954162597656
    7. '+' → logprob: -4.488895416259766
    8. '+
' → logprob: -4.863895416259766
    9. ' total' → logprob: -5.363895416259766
    10. ' ' → logprob: -5.363895416259766

Token 540: ' detail' (ID: 10851)
  Prédit: '[Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.8380836248397827
    2. ' =' → logprob: -1.5880836248397827
    3. 'for' → logprob: -2.0880837440490723
    4. '   ' → logprob: -3.0880837440490723
    5. 'Y' → logprob: -3.3380837440490723
    6. '=' → logprob: -3.4630837440490723
    7. ' +=' → logprob: -3.7130837440490723
    8. '[' → logprob: -4.088083744049072
    9. '[y' → logprob: -4.338083744049072
    10. ' for' → logprob: -4.838083744049072

Token 541: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9660983681678772
    2. ' for' → logprob: -1.4660983085632324
    3. '
' → logprob: -1.9660983085632324
    4. 'for' → logprob: -2.0910983085632324
    5. 'total' → logprob: -2.3410983085632324
    6. ' total' → logprob: -4.216098308563232
    7. '<|end|>' → logprob: -4.841098308563232
    8. ' ' → logprob: -6.591098308563232
    9. '       ' → logprob: -7.091098308563232
    10. '<|end|>' → logprob: -7.216098308563232

Token 542: ' since' (ID: 3630)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3871086537837982
    2. 'for' → logprob: -2.387108564376831
    3. '   ' → logprob: -2.512108564376831
    4. ' continue' → logprob: -3.262108564376831
    5. ' total' → logprob: -3.887108564376831
    6. 'continue' → logprob: -3.887108564376831
    7. '
' → logprob: -4.26210880279541
    8. '<|end|>' → logprob: -4.26210880279541
    9. 'total' → logprob: -4.38710880279541
    10. ' if' → logprob: -4.88710880279541

Token 543: ' dp' (ID: 21546)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.1747404336929321
    2. 'ny' → logprob: -1.6747404336929321
    3. 'dp' → logprob: -1.9247404336929321
    4. 'y' → logprob: -2.2997403144836426
    5. ' ny' → logprob: -2.5497403144836426
    6. ' dp' → logprob: -3.6747403144836426
    7. 'grid' → logprob: -3.9247403144836426
    8. 'the' → logprob: -4.174740314483643
    9. ' Y' → logprob: -4.299740314483643
    10. '0' → logprob: -4.674740314483643

Token 544: ' size' (ID: 2349)
  Prédit: '[Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.025438223034143448
    2. '[y' → logprob: -4.27543830871582
    3. 'Y' → logprob: -5.15043830871582
    4. '.append' → logprob: -6.15043830871582
    5. '=' → logprob: -6.65043830871582
    6. '[' → logprob: -6.90043830871582
    7. ' =' → logprob: -8.77543830871582
    8. '   ' → logprob: -9.15043830871582
    9. '+=' → logprob: -9.27543830871582
    10. '```' → logprob: -9.77543830871582

Token 545: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02010910026729107
    2. ' =' → logprob: -4.395109176635742
    3. '[' → logprob: -6.270109176635742
    4. '==' → logprob: -6.395109176635742
    5. '   ' → logprob: -7.270109176635742
    6. '+=' → logprob: -7.270109176635742
    7. '[Y' → logprob: -7.645109176635742
    8. 'is' → logprob: -7.895109176635742
    9. '=[' → logprob: -8.270109176635742
    10. 'for' → logprob: -8.645109176635742

Token 546: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0011574854142963886
    2. ' Y' → logprob: -7.126157283782959
    3. '(Y' → logprob: -8.626157760620117
    4. 'len' → logprob: -9.501157760620117
    5. '   ' → logprob: -10.501157760620117
    6. '[Y' → logprob: -10.751157760620117
    7. '```' → logprob: -10.751157760620117
    8. ' ' → logprob: -11.876157760620117
    9. ' (' → logprob: -12.501157760620117
    10. '	Y' → logprob: -12.876157760620117

Token 547: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0021396710071712732
    2. ' +' → logprob: -6.752139568328857
    3. '
' → logprob: -7.877139568328857
    4. '+
' → logprob: -8.627140045166016
    5. '   ' → logprob: -8.752140045166016
    6. '```' → logprob: -9.377140045166016
    7. '2' → logprob: -10.627140045166016
    8. '[' → logprob: -11.064640045166016
    9. '][' → logprob: -11.627140045166016
    10. 'for' → logprob: -11.689640045166016

Token 548: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5763866901397705
    2. '3' → logprob: -0.8263866901397705
    3. ' ' → logprob: -8.076386451721191
    4. '4' → logprob: -9.826386451721191
    5. '1' → logprob: -10.076386451721191
    6. '
' → logprob: -10.951386451721191
    7. '```' → logprob: -11.326386451721191
    8. '   ' → logprob: -12.076386451721191
    9. '`' → logprob: -13.576386451721191
    10. '  ' → logprob: -13.576386451721191

Token 549: ' only' (ID: 1606)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5791546106338501
    2. '   ' → logprob: -1.07915461063385
    3. ' for' → logprob: -2.7041544914245605
    4. 'for' → logprob: -3.7041544914245605
    5. 'total' → logprob: -5.5791544914245605
    6. '<|end|>' → logprob: -6.3291544914245605
    7. ' total' → logprob: -7.3291544914245605
    8. '    
' → logprob: -7.4541544914245605
    9. ',' → logprob: -8.079154968261719
    10. '<|end|>' → logprob: -8.704154968261719

Token 550: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5614283084869385
    2. '   ' → logprob: -0.9364283084869385
    3. ' for' → logprob: -4.061428070068359
    4. 'for' → logprob: -4.561428070068359
    5. '    
' → logprob: -5.936428070068359
    6. '<|end|>' → logprob: -6.061428070068359
    7. 'total' → logprob: -6.436428070068359
    8. '  
' → logprob: -7.061428070068359
    9. ' ' → logprob: -7.811428070068359
    10. '   
' → logprob: -7.936428070068359

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.819024920463562
    2. '
' → logprob: -2.0690250396728516
    3. 'for' → logprob: -2.1940250396728516
    4. '<|end|>' → logprob: -2.1940250396728516
    5. 'total' → logprob: -2.3190250396728516
    6. ' for' → logprob: -2.4440250396728516
    7. ' total' → logprob: -4.694025039672852
    8. ' ' → logprob: -5.444025039672852
    9. '       ' → logprob: -6.569025039672852
    10. '<|end|>' → logprob: -6.694025039672852

Token 552: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4980112314224243
    2. '   ' → logprob: -1.4980112314224243
    3. 'total' → logprob: -2.4980111122131348
    4. ' for' → logprob: -2.6230111122131348
    5. '
' → logprob: -4.498011112213135
    6. ' total' → logprob: -6.748011112213135
    7. 'print' → logprob: -7.498011112213135
    8. '    
' → logprob: -8.373011589050293
    9. '<|end|>' → logprob: -9.248011589050293
    10. 'if' (adapté à ' if') → logprob: -9.623011589050293

Token 553: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.1142929419875145
    2. ' Y' → logprob: -2.864292860031128
    3. 'dp' → logprob: -3.739292860031128
    4. 'len' → logprob: -4.739293098449707
    5. 'any' → logprob: -4.989293098449707
    6. ' dp' → logprob: -5.739293098449707
    7. 'total' → logprob: -5.989293098449707
    8. ' len' → logprob: -6.364293098449707
    9. ' any' → logprob: -6.614293098449707
    10. ' total' → logprob: -6.989293098449707

Token 554: '+' (ID: 10)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.1636266708374023
    2. ' ==' → logprob: -1.5386266708374023
    3. '>' → logprob: -1.7886266708374023
    4. '+' → logprob: -2.1636266708374023
    5. '==' → logprob: -2.2886266708374023
    6. ' >=' → logprob: -3.5386266708374023
    7. ' <' → logprob: -4.038626670837402
    8. ' +' → logprob: -4.663626670837402
    9. '>=' → logprob: -4.913626670837402
    10. ' ' → logprob: -5.038626670837402

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.037702884525060654
    2. '2' → logprob: -3.787702798843384
    3. ' ' → logprob: -4.287703037261963
    4. '0' → logprob: -7.537703037261963
    5. '   ' → logprob: -10.537702560424805
    6. ' <' → logprob: -11.162702560424805
    7. '<' → logprob: -11.287702560424805
    8. '  ' → logprob: -11.912702560424805
    9. '+' → logprob: -12.162702560424805
    10. '<=' → logprob: -12.162702560424805

Token 556: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18414939939975739
    2. '<' → logprob: -1.9341493844985962
    3. ' >=' → logprob: -4.184149265289307
    4. ' <=' → logprob: -5.809149265289307
    5. ' >' → logprob: -5.934149265289307
    6. '>=' → logprob: -6.684149265289307
    7. '>' → logprob: -7.434149265289307
    8. '<=' → logprob: -7.934149265289307
    9. ' ' → logprob: -8.184149742126465
    10. '<len' → logprob: -8.809149742126465

Token 557: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.09030450880527496
    2. 'Y' → logprob: -2.5903046131134033
    3. ' len' → logprob: -4.590304374694824
    4. ' Y' → logprob: -6.840304374694824
    5. '(len' → logprob: -9.715304374694824
    6. '   ' → logprob: -10.590304374694824
    7. '2' → logprob: -11.340304374694824
    8. '(Y' → logprob: -11.590304374694824
    9. 'dp' → logprob: -11.965304374694824
    10. ' ' → logprob: -12.090304374694824

Token 558: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.5570885807392187e-05
    2. 'dp' → logprob: -11.125015258789062
    3. '(' → logprob: -14.625015258789062
    4. ' dp' → logprob: -16.250015258789062
    5. '	dp' → logprob: -16.250015258789062
    6. ' (' → logprob: -16.875015258789062
    7. '(
' → logprob: -17.250015258789062
    8. '_dp' → logprob: -19.250015258789062
    9. '   ' → logprob: -20.375015258789062
    10. ')' → logprob: -20.500015258789062

Token 559: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5909960865974426
    2. '):
' → logprob: -0.8409960865974426
    3. ')' → logprob: -4.215996265411377
    4. '):
' → logprob: -9.090995788574219
    5. '):

' → logprob: -10.215995788574219
    6. ' ):' → logprob: -11.465995788574219
    7. ' ):
' → logprob: -11.465995788574219
    8. '[' → logprob: -12.465995788574219
    9. ':' → logprob: -12.590995788574219
    10. '   ' → logprob: -12.840995788574219

Token 560: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6449536681175232
    2. '       ' → logprob: -1.019953727722168
    3. ':
' → logprob: -2.269953727722168
    4. '   ' → logprob: -4.769953727722168
    5. ' and' → logprob: -6.019953727722168
    6. '):
' → logprob: -9.394953727722168
    7. ' :' → logprob: -9.769953727722168
    8. '<|end|>' → logprob: -9.769953727722168
    9. ' for' → logprob: -10.144953727722168
    10. ' :
' → logprob: -10.519953727722168

Token 561: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20103618502616882
    2. '   ' → logprob: -2.826036214828491
    3. 'total' → logprob: -2.826036214828491
    4. '       ' → logprob: -3.201036214828491
    5. ' for' → logprob: -3.826036214828491
    6. ' total' → logprob: -6.951035976409912
    7. ' ' → logprob: -10.45103645324707
    8. '           ' → logprob: -10.70103645324707
    9. '  ' → logprob: -10.95103645324707
    10. '	for' → logprob: -11.07603645324707

Token 562: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00317783304490149
    2. ' x' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.003177642822266
    4. '	x' → logprob: -18.003177642822266
    5. '_x' → logprob: -18.878177642822266
    6. '0' → logprob: -19.003177642822266
    7. ' ' → logprob: -19.378177642822266
    8. 'total' → logprob: -19.753177642822266
    9. ')x' → logprob: -20.128177642822266
    10. '```' → logprob: -20.128177642822266

Token 563: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013288103509694338
    2. 'in' → logprob: -6.626328945159912
    3. ' ' → logprob: -13.876328468322754
    4. '   ' → logprob: -13.876328468322754
    5. 'In' → logprob: -15.501328468322754
    6. 'import' → logprob: -16.25132942199707
    7. 'n' → logprob: -16.37632942199707
    8. '	in' → logprob: -16.37632942199707
    9. '  ' → logprob: -16.50132942199707
    10. 'x' → logprob: -16.50132942199707

Token 564: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25192955136299133
    2. ' range' → logprob: -1.501929521560669
    3. 'dp' → logprob: -15.12692928314209
    4. '(range' → logprob: -15.62692928314209
    5. ' dp' → logprob: -19.501930236816406
    6. '   ' → logprob: -20.001930236816406
    7. 'Range' → logprob: -20.876930236816406
    8. '0' → logprob: -20.876930236816406
    9. '	range' → logprob: -20.876930236816406
    10. 'X' → logprob: -21.126930236816406

Token 565: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -1.2233183042553719e-05
    2. '(len' → logprob: -11.500012397766113
    3. 'X' → logprob: -13.750012397766113
    4. '(' → logprob: -14.000012397766113
    5. '(x' → logprob: -16.500011444091797
    6. ' (' → logprob: -17.375011444091797
    7. 'len' → logprob: -17.375011444091797
    8. '(dp' → logprob: -17.500011444091797
    9. '[X' → logprob: -18.250011444091797
    10. '(Y' → logprob: -18.375011444091797

Token 566: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6330180764198303
    2. '):
' → logprob: -0.7580180764198303
    3. ']:' → logprob: -8.883018493652344
    4. ')' → logprob: -8.883018493652344
    5. ']:
' → logprob: -10.383018493652344
    6. '):
' → logprob: -10.633018493652344
    7. '   ' → logprob: -10.633018493652344
    8. ' ):' → logprob: -11.008018493652344
    9. ' ):
' → logprob: -11.633018493652344
    10. ']):' → logprob: -11.633018493652344

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006711343768984079
    2. ' total' → logprob: -5.381711483001709
    3. '	       ' → logprob: -6.631711483001709
    4. 'total' → logprob: -7.381711483001709
    5. '       ' → logprob: -9.75671100616455
    6. '(total' → logprob: -10.50671100616455
    7. '		' → logprob: -11.75671100616455
    8. '[' → logprob: -12.00671100616455
    9. '               ' → logprob: -12.00671100616455
    10. '```' → logprob: -12.00671100616455

Token 568: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.009383565746247768
    2. ' total' → logprob: -4.759383678436279
    3. '           ' → logprob: -7.259383678436279
    4. '       ' → logprob: -9.884383201599121
    5. '   ' → logprob: -11.259383201599121
    6. '	total' → logprob: -14.134383201599121
    7. ' ' → logprob: -14.884383201599121
    8. '               ' → logprob: -15.509383201599121
    9. '  ' → logprob: -17.134384155273438
    10. ',total' → logprob: -17.259384155273438

Token 569: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10023006796836853
    2. ' +=' → logprob: -2.3502299785614014
    3. '   ' → logprob: -11.22523021697998
    4. ']+=' → logprob: -11.97523021697998
    5. '    ' → logprob: -13.60023021697998
    6. '+' → logprob: -14.10023021697998
    7. '       ' → logprob: -14.47523021697998
    8. '=' → logprob: -14.85023021697998
    9. '           ' → logprob: -15.35023021697998
    10. '  ' → logprob: -15.72523021697998

Token 570: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001170460251159966
    2. ' dp' → logprob: -6.751170635223389
    3. '(dp' → logprob: -16.251171112060547
    4. '	dp' → logprob: -16.501171112060547
    5. '0' → logprob: -17.751171112060547
    6. '_dp' → logprob: -19.876171112060547
    7. '   ' → logprob: -20.751171112060547
    8. '           ' → logprob: -21.376171112060547
    9. 'dt' → logprob: -21.501171112060547
    10. '.dp' → logprob: -21.626171112060547

Token 571: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.00010330478107789531
    2. 'Y' → logprob: -9.250102996826172
    3. '[' → logprob: -12.625102996826172
    4. '[y' → logprob: -13.000102996826172
    5. '   ' → logprob: -14.625102996826172
    6. ' [' → logprob: -15.625102996826172
    7. ' Y' → logprob: -15.875102996826172
    8. '[-' → logprob: -16.000102996826172
    9. '(Y' → logprob: -16.125102996826172
    10. '][' → logprob: -16.125102996826172

Token 572: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0025355906691402197
    2. '][' → logprob: -6.002535820007324
    3. ' +' → logprob: -10.752535820007324
    4. '+x' → logprob: -10.752535820007324
    5. '1' → logprob: -11.502535820007324
    6. '   ' → logprob: -13.627535820007324
    7. '+
' → logprob: -13.752535820007324
    8. 'plus' → logprob: -13.877535820007324
    9. '-' → logprob: -14.127535820007324
    10. ']' → logprob: -14.377535820007324

Token 573: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.750436007976532e-05
    2. 'x' → logprob: -10.75003719329834
    3. '+' → logprob: -11.12503719329834
    4. '   ' → logprob: -14.75003719329834
    5. ' ' → logprob: -14.87503719329834
    6. '+x' → logprob: -15.25003719329834
    7. '```' → logprob: -16.750038146972656
    8. '[x' → logprob: -17.000038146972656
    9. '       ' → logprob: -17.500038146972656
    10. '[' → logprob: -17.875038146972656

Token 574: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.7372048862162046e-05
    2. ']' → logprob: -10.875027656555176
    3. '[x' → logprob: -12.500027656555176
    4. ' ][' → logprob: -12.625027656555176
    5. '"][' → logprob: -14.375027656555176
    6. '   ' → logprob: -15.000027656555176
    7. ''][' → logprob: -15.500027656555176
    8. ')][' → logprob: -16.25002670288086
    9. ']][' → logprob: -17.50002670288086
    10. '[' → logprob: -17.62502670288086

Token 575: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. ' x' → logprob: -16.75
    3. '```' → logprob: -20.5
    4. '[x' → logprob: -21.0
    5. '0' → logprob: -21.25
    6. '   ' → logprob: -21.375
    7. '
' → logprob: -21.5
    8. '	x' → logprob: -21.625
    9. ')x' → logprob: -21.875
    10. '"x' → logprob: -22.375

Token 576: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.843177233240567e-05
    2. ']
' → logprob: -11.375018119812012
    3. ' ]' → logprob: -12.375018119812012
    4. ')' → logprob: -13.875018119812012
    5. ')]' → logprob: -14.750018119812012
    6. '   ' → logprob: -14.750018119812012
    7. '])' → logprob: -15.125018119812012
    8. '       ' → logprob: -15.375018119812012
    9. ']+' → logprob: -15.375018119812012
    10. ']>' → logprob: -16.375019073486328

Token 577: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2780110836029053
    2. '   ' → logprob: -2.2780110836029053
    3. '
' → logprob: -2.4030110836029053
    4. '<|end|>' → logprob: -3.4030110836029053
    5. '```' → logprob: -4.778011322021484
    6. 'continue' → logprob: -6.153011322021484
    7. ')' → logprob: -6.403011322021484
    8. ' print' → logprob: -6.903011322021484
    9. 'else' → logprob: -7.403011322021484
    10. '\n' → logprob: -7.653011322021484

Token 578: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009814819786697626
    2. '   ' → logprob: -7.000981330871582
    3. ' print' → logprob: -10.375981330871582
    4. '
' → logprob: -11.375981330871582
    5. 'continue' → logprob: -12.250981330871582
    6. '<|end|>' → logprob: -12.250981330871582
    7. '```' → logprob: -12.625981330871582
    8. 'return' → logprob: -12.750981330871582
    9. ')' → logprob: -12.875981330871582
    10. 'for' → logprob: -13.000981330871582

Token 579: ' Add' (ID: 4063)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014724906533956528
    2. '   ' → logprob: -5.0147247314453125
    3. '<|end|>' → logprob: -5.5147247314453125
    4. 'continue' → logprob: -5.8897247314453125
    5. ' print' → logprob: -7.8897247314453125
    6. 'for' → logprob: -8.514724731445312
    7. 'if' → logprob: -9.264724731445312
    8. '       ' → logprob: -9.389724731445312
    9. 'while' → logprob: -9.889724731445312
    10. 'return' → logprob: -10.014724731445312

Token 580: ' ways' (ID: 6984)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09401404112577438
    2. ' print' → logprob: -2.4690139293670654
    3. '   ' → logprob: -6.3440141677856445
    4. 'for' → logprob: -7.2190141677856445
    5. ' for' → logprob: -7.8440141677856445
    6. '
' → logprob: -7.9690141677856445
    7. 'import' → logprob: -8.094014167785645
    8. ' =' → logprob: -8.719014167785645
    9. ' if' → logprob: -8.844014167785645
    10. 'total' → logprob: -8.969014167785645

Token 581: ' that' (ID: 484)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.0136445760726929
    2. 'print' → logprob: -1.3886445760726929
    3. '=' → logprob: -1.8886445760726929
    4. '+=' → logprob: -2.3886446952819824
    5. ' =' → logprob: -2.5136446952819824
    6. '   ' → logprob: -3.1386446952819824
    7. '
' → logprob: -5.388644695281982
    8. 'for' → logprob: -5.638644695281982
    9. 'from' → logprob: -5.638644695281982
    10. 'return' → logprob: -6.138644695281982

Token 582: ' finish' (ID: 9115)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finished' → logprob: -2.06250262260437
    2. 'came' → logprob: -2.06250262260437
    3. 'finish' → logprob: -2.18750262260437
    4. 'went' → logprob: -2.31250262260437
    5. 'can' → logprob: -2.31250262260437
    6. 'ended' → logprob: -2.56250262260437
    7. 'were' → logprob: -2.68750262260437
    8. 'come' → logprob: -3.68750262260437
    9. 'jump' → logprob: -3.68750262260437
    10. 'passed' → logprob: -3.68750262260437

Token 583: ' by' (ID: 656)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.875786304473877
    2. ' +=' → logprob: -1.625786304473877
    3. 'when' → logprob: -1.750786304473877
    4. 'direct' → logprob: -2.875786304473877
    5. '=' → logprob: -3.250786304473877
    6. 'from' → logprob: -3.875786304473877
    7. 'at' → logprob: -4.125786304473877
    8. 'here' → logprob: -4.375786304473877
    9. '   ' → logprob: -4.625786304473877
    10. 'if' → logprob: -4.750786304473877

Token 584: ' moving' (ID: 10067)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.08819932490587234
    2. ' jumping' → logprob: -3.3381993770599365
    3. 'passing' → logprob: -3.5881993770599365
    4. 'pass' → logprob: -4.838199138641357
    5. ' passing' → logprob: -6.463199138641357
    6. 'direct' → logprob: -6.838199138641357
    7. ' jump' → logprob: -6.838199138641357
    8. ' finishing' → logprob: -7.088199138641357
    9. 'landing' → logprob: -7.088199138641357
    10. 'continu' → logprob: -7.338199138641357

Token 585: ' below' (ID: 4895)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.965000569820404
    2. 'b' → logprob: -1.3400006294250488
    3. ' beyond' → logprob: -2.215000629425049
    4. 'out' → logprob: -3.215000629425049
    5. 'from' → logprob: -3.340000629425049
    6. 'off' → logprob: -3.340000629425049
    7. 'to' → logprob: -3.340000629425049
    8. 'ny' → logprob: -3.465000629425049
    9. ' off' → logprob: -4.090000629425049
    10. ' ny' → logprob: -4.215000629425049

Token 586: ' last' (ID: 2174)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.09897477924823761
    2. ' the' → logprob: -2.4739747047424316
    3. 'Y' → logprob: -5.723974704742432
    4. 'bottom' → logprob: -5.848974704742432
    5. 'b' → logprob: -7.098974704742432
    6. 'down' → logprob: -7.598974704742432
    7. ' bottom' → logprob: -7.973974704742432
    8. 'out' → logprob: -8.22397518157959
    9. '```' → logprob: -8.47397518157959
    10. ' beyond' → logprob: -8.47397518157959

Token 587: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.49027177691459656
    2. ' row' → logprob: -0.990271806716919
    3. 'line' → logprob: -4.36527156829834
    4. ' line' → logprob: -6.36527156829834
    5. '   ' → logprob: -6.49027156829834
    6. '	row' → logprob: -10.61527156829834
    7. '_row' → logprob: -11.24027156829834
    8. 'for' → logprob: -11.36527156829834
    9. 'Y' → logprob: -11.49027156829834
    10. 'layer' → logprob: -11.99027156829834

Token 588: ' directly' (ID: 8516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05785904824733734
    2. '                   ' → logprob: -3.557858943939209
    3. '           ' → logprob: -3.932858943939209
    4. '               ' → logprob: -4.932858943939209
    5. 'for' → logprob: -8.307859420776367
    6. '                       ' → logprob: -8.682859420776367
    7. '       ' → logprob: -8.682859420776367
    8. '
' → logprob: -8.807859420776367
    9. ' for' → logprob: -9.682859420776367
    10. '                           ' → logprob: -9.932859420776367

Token 589: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28688186407089233
    2. '           ' → logprob: -1.536881923675537
    3. '                   ' → logprob: -3.911881923675537
    4. '               ' → logprob: -4.411881923675537
    5. '
' → logprob: -7.411881923675537
    6. 'for' → logprob: -7.411881923675537
    7. '       ' → logprob: -7.536881923675537
    8. ' for' → logprob: -8.036881446838379
    9. '                       ' → logprob: -9.286881446838379
    10. '                           ' → logprob: -10.661881446838379

Token 590: ' loop' (ID: 11453)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6597837209701538
    2. 'elif' → logprob: -1.6597837209701538
    3. 'this' → logprob: -1.7847837209701538
    4. 'if' → logprob: -3.2847838401794434
    5. 'for' → logprob: -3.9097838401794434
    6. 'jump' → logprob: -4.159783840179443
    7. 'cell' → logprob: -4.784783840179443
    8. ' the' → logprob: -5.159783840179443
    9. 'case' → logprob: -5.284783840179443
    10. 'moves' → logprob: -5.409783840179443

Token 591: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.29589563608169556
    2. '                       ' → logprob: -1.5458955764770508
    3. '                               ' → logprob: -3.420895576477051
    4. '                   ' → logprob: -5.170895576477051
    5. '                                   ' → logprob: -6.545895576477051
    6. '                            ' → logprob: -8.04589557647705
    7. ',' → logprob: -8.17089557647705
    8. 'for' → logprob: -8.29589557647705
    9. ' for' → logprob: -8.29589557647705
    10. 'return' → logprob: -8.42089557647705

Token 592: '   ' (ID: 271)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.4395156502723694
    2. '                       ' → logprob: -1.6895155906677246
    3. '                   ' → logprob: -2.0645155906677246
    4. '                               ' → logprob: -3.5645155906677246
    5. '           ' → logprob: -5.814515590667725
    6. '               ' → logprob: -6.064515590667725
    7. '       ' → logprob: -6.439515590667725
    8. '                            ' → logprob: -6.689515590667725
    9. '<|end|>' → logprob: -7.189515590667725
    10. '                                   ' → logprob: -7.189515590667725

Token 593: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.9177127480506897
    2. 'total' → logprob: -2.042712688446045
    3. '                               ' → logprob: -2.292712688446045
    4. ' if' → logprob: -2.542712688446045
    5. '                       ' → logprob: -2.542712688446045
    6. 'if' → logprob: -2.917712688446045
    7. ' total' → logprob: -3.292712688446045
    8. 'for' → logprob: -3.542712688446045
    9. 'continue' → logprob: -3.542712688446045
    10. ' for' → logprob: -3.667712688446045

Token 594: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4355202615261078
    2. ' for' → logprob: -2.0605201721191406
    3. 'total' → logprob: -2.8105201721191406
    4. 'continue' → logprob: -3.0605201721191406
    5. '                   ' → logprob: -3.1855201721191406
    6. '   ' → logprob: -4.435520172119141
    7. '                       ' → logprob: -4.560520172119141
    8. '                           ' → logprob: -4.685520172119141
    9. '...' → logprob: -4.810520172119141
    10. '#' → logprob: -5.310520172119141

Token 595: ' in' (ID: 306)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.7300739288330078
    2. ' pass' → logprob: -1.9800739288330078
    3. ' if' → logprob: -2.480073928833008
    4. 'pass' → logprob: -2.480073928833008
    5. 'if' → logprob: -2.730073928833008
    6. 'for' → logprob: -2.855073928833008
    7. ' for' → logprob: -2.855073928833008
    8. ' dp' → logprob: -2.855073928833008
    9. ' we' → logprob: -3.105073928833008
    10. 'we' → logprob: -3.480073928833008

Token 596: ' above' (ID: 5151)
  Prédit: ' ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.6033615469932556
    2. 'ny' → logprob: -1.9783616065979004
    3. ' the' → logprob: -2.2283616065979004
    4. ' cell' → logprob: -2.4783616065979004
    5. 'elif' → logprob: -3.4783616065979004
    6. 'cell' → logprob: -3.7283616065979004
    7. 'the' → logprob: -3.9783616065979004
    8. ' dp' → logprob: -4.6033616065979
    9. 'if' → logprob: -4.9783616065979
    10. ' if' → logprob: -5.2283616065979

Token 597: ' loop' (ID: 11453)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.595211923122406
    2. ' loop' → logprob: -1.9702119827270508
    3. 'code' → logprob: -3.095211982727051
    4. 'elif' → logprob: -3.095211982727051
    5. 'loop' → logprob: -3.595211982727051
    6. ' if' → logprob: -3.595211982727051
    7. 'if' → logprob: -3.720211982727051
    8. 'cell' → logprob: -4.095211982727051
    9. 'for' → logprob: -4.220211982727051
    10. ' for' → logprob: -4.220211982727051

Token 598: ' we' (ID: 581)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5951473116874695
    2. '                               ' → logprob: -1.2201473712921143
    3. '                       ' → logprob: -2.2201473712921143
    4. ',' → logprob: -4.220147132873535
    5. 'continue' → logprob: -5.345147132873535
    6. ' continue' → logprob: -5.720147132873535
    7. '                                   ' → logprob: -5.720147132873535
    8. ':' → logprob: -5.720147132873535
    9. 'total' → logprob: -6.095147132873535
    10. '                   ' → logprob: -6.220147132873535

Token 599: ' didn't' (ID: 9289)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9531368613243103
    2. ' continue' → logprob: -1.203136920928955
    3. ' haven't' → logprob: -3.078136920928955
    4. ' have' → logprob: -3.203136920928955
    5. 'pass' → logprob: -3.703136920928955
    6. 'did' → logprob: -3.953136920928955
    7. ' didn't' → logprob: -4.078136920928955
    8. '#' → logprob: -4.078136920928955
    9. ' need' → logprob: -4.203136920928955
    10. 'have' → logprob: -4.328136920928955

Token 600: ' store' (ID: 4897)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7606644034385681
    2. 'add' → logprob: -1.510664463043213
    3. 'increment' → logprob: -2.635664463043213
    4. 'continue' → logprob: -3.010664463043213
    5. 'pass' → logprob: -3.135664463043213
    6. ' add' → logprob: -3.385664463043213
    7. '                   ' → logprob: -4.135664463043213
    8. 'handle' → logprob: -4.135664463043213
    9. ' count' → logprob: -4.760664463043213
    10. 'acc' → logprob: -5.010664463043213

Token 601: ' ways' (ID: 6984)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5384392142295837
    2. 'total' → logprob: -0.9134392142295837
    3. ' continue' → logprob: -5.5384392738342285
    4. '
' → logprob: -5.6634392738342285
    5. 'continue' → logprob: -6.0384392738342285
    6. '                   ' → logprob: -6.1634392738342285
    7. '                       ' → logprob: -7.0384392738342285
    8. '                               ' → logprob: -8.03843879699707
    9. ' if' → logprob: -8.28843879699707
    10. '                           ' → logprob: -8.28843879699707

Token 602: ' beyond' (ID: 11615)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9837153553962708
    2. '                   ' → logprob: -1.608715295791626
    3. ' total' → logprob: -1.858715295791626
    4. ' for' → logprob: -2.608715295791626
    5. '
' → logprob: -2.733715295791626
    6. 'for' → logprob: -3.358715295791626
    7. '   ' → logprob: -3.483715295791626
    8. '                           ' → logprob: -3.733715295791626
    9. '           ' → logprob: -4.358715534210205
    10. '                       ' → logprob: -4.608715534210205

Token 603: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.43922069668769836
    2. ' total' → logprob: -2.189220666885376
    3. 'dp' → logprob: -2.439220666885376
    4. ' the' → logprob: -2.564220666885376
    5. 'the' → logprob: -3.189220666885376
    6. 'total' → logprob: -4.189220905303955
    7. ' y' → logprob: -5.689220905303955
    8. ' continue' → logprob: -6.064220905303955
    9. 'y' → logprob: -6.314220905303955
    10. ' that' → logprob: -6.564220905303955

Token 604: ' arrays' (ID: 38774)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1569002866744995
    2. '   ' → logprob: -1.5319002866744995
    3. 'total' → logprob: -1.7819002866744995
    4. '
' → logprob: -2.406900405883789
    5. ' for' → logprob: -2.781900405883789
    6. 'for' → logprob: -2.906900405883789
    7. '           ' → logprob: -3.531900405883789
    8. ' total' → logprob: -3.656900405883789
    9. '       ' → logprob: -4.281900405883789
    10. '               ' → logprob: -4.906900405883789

Token 605: ',' (ID: 11)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8415106534957886
    2. '                   ' → logprob: -1.8415106534957886
    3. 'for' → logprob: -2.091510772705078
    4. ' for' → logprob: -2.591510772705078
    5. '   ' → logprob: -2.716510772705078
    6. '                       ' → logprob: -2.716510772705078
    7. ' total' → logprob: -3.466510772705078
    8. '                           ' → logprob: -4.466510772705078
    9. '       ' → logprob: -4.591510772705078
    10. '           ' → logprob: -4.841510772705078

Token 606: ' so' (ID: 813)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5923812985420227
    2. '                               ' → logprob: -1.717381238937378
    3. '                       ' → logprob: -1.967381238937378
    4. 'continue' → logprob: -3.342381238937378
    5. '                                   ' → logprob: -3.717381238937378
    6. ' continue' → logprob: -4.092381477355957
    7. '                   ' → logprob: -4.217381477355957
    8. 'total' → logprob: -4.217381477355957
    9. ' total' → logprob: -5.092381477355957
    10. '                                           ' → logprob: -5.592381477355957

Token 607: ' need' (ID: 1309)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.31594255566596985
    2. ' total' → logprob: -1.6909425258636475
    3. 'pass' → logprob: -3.5659425258636475
    4. 'for' → logprob: -3.8159425258636475
    5. ' for' → logprob: -4.565942764282227
    6. ' pass' → logprob: -4.565942764282227
    7. 'continue' → logprob: -5.315942764282227
    8. '                   ' → logprob: -5.440942764282227
    9. '           ' → logprob: -6.690942764282227
    10. '#' → logprob: -6.940942764282227

Token 608: ' another' (ID: 3613)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.01942700892686844
    2. ' to' → logprob: -4.0194268226623535
    3. '   ' → logprob: -7.3944268226623535
    4. '           ' → logprob: -8.019427299499512
    5. '+=' → logprob: -9.269427299499512
    6. 'total' → logprob: -10.394427299499512
    7. '       ' → logprob: -10.394427299499512
    8. '
' → logprob: -10.519427299499512
    9. 'continue' → logprob: -10.644427299499512
    10. 'for' → logprob: -10.769427299499512

Token 609: ' way' (ID: 2006)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.12397301197052
    2. 'ways' → logprob: -1.49897301197052
    3. 'variable' → logprob: -2.2489728927612305
    4. 'count' → logprob: -2.7489728927612305
    5. 'for' → logprob: -2.8739728927612305
    6. '
' → logprob: -2.9989728927612305
    7. 'continue' → logprob: -3.2489728927612305
    8. ' ways' → logprob: -3.2489728927612305
    9. 'counter' → logprob: -3.6239728927612305
    10. ' variable' → logprob: -4.2489728927612305

Token 610: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16679725050926208
    2. 'total' → logprob: -2.291797161102295
    3. '
' → logprob: -3.541797161102295
    4. '<|end|>' → logprob: -4.541797161102295
    5. 'print' → logprob: -5.166797161102295
    6. ' total' → logprob: -6.416797161102295
    7. 'for' → logprob: -7.166797161102295
    8. 'continue' → logprob: -7.416797161102295
    9. '<|end|>' → logprob: -7.541797161102295
    10. ' for' → logprob: -7.666797161102295

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4025019705295563
    2. 'total' → logprob: -1.4025019407272339
    3. '<|end|>' → logprob: -3.1525020599365234
    4. ' total' → logprob: -4.027502059936523
    5. 'continue' → logprob: -4.902502059936523
    6. 'ways' → logprob: -6.152502059936523
    7. 'jump' → logprob: -6.277502059936523
    8. '
' → logprob: -6.652502059936523
    9. '       ' → logprob: -6.777502059936523
    10. '...' → logprob: -6.902502059936523

Token 612: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0426137447357178
    2. 'ways' → logprob: -1.4176137447357178
    3. '   ' → logprob: -2.0426137447357178
    4. '                   ' → logprob: -2.5426137447357178
    5. ' ways' → logprob: -3.4176137447357178
    6. '           ' → logprob: -3.4176137447357178
    7. '       ' → logprob: -3.6676137447357178
    8. 'count' → logprob: -3.7926137447357178
    9. 'for' → logprob: -3.9176137447357178
    10. 'jump' → logprob: -4.167613983154297

Token 613: ' So' (ID: 2632)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.7184833288192749
    2. '   ' → logprob: -1.218483328819275
    3. 'total' → logprob: -2.3434834480285645
    4. 'finish' → logprob: -3.3434834480285645
    5. 'jump' → logprob: -3.5934834480285645
    6. ' ways' → logprob: -3.9684834480285645
    7. '#' → logprob: -4.7184834480285645
    8. '           ' → logprob: -5.5934834480285645
    9. 'direct' → logprob: -5.8434834480285645
    10. 'result' → logprob: -5.8434834480285645

Token 614: ' re' (ID: 322)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.4108238220214844
    2. ' ways' → logprob: -2.1608238220214844
    3. '#' → logprob: -3.1608238220214844
    4. 'pass' → logprob: -3.1608238220214844
    5. 'finish' → logprob: -3.2858238220214844
    6. 'total' → logprob: -3.5358238220214844
    7. '   ' → logprob: -4.410823822021484
    8. 'jump' → logprob: -4.410823822021484
    9. 'below' → logprob: -5.160823822021484
    10. 'for' → logprob: -5.285823822021484

Token 615: 'implement' (ID: 105849)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.7887319326400757
    2. 'member' → logprob: -1.4137319326400757
    3. 'turn' → logprob: -2.0387320518493652
    4. 'move' → logprob: -2.6637320518493652
    5. 'place' → logprob: -3.5387320518493652
    6. 'main' → logprob: -4.538732051849365
    7. 'visit' → logprob: -4.663732051849365
    8. 'set' → logprob: -4.788732051849365
    9. 'store' → logprob: -4.913732051849365
    10. 'consider' → logprob: -5.413732051849365

Token 616: ' above' (ID: 5151)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6985952854156494
    2. 'ways' → logprob: -1.5735952854156494
    3. 'while' → logprob: -2.5735952854156494
    4. 'jump' → logprob: -3.0735952854156494
    5. '   ' → logprob: -3.5735952854156494
    6. 'finish' → logprob: -3.8235952854156494
    7. 'below' → logprob: -3.9485952854156494
    8. ' total' → logprob: -4.07359504699707
    9. ' ways' → logprob: -4.07359504699707
    10. 'over' → logprob: -4.44859504699707

Token 617: ' with' (ID: 483)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1752265691757202
    2. 'total' → logprob: -1.1752265691757202
    3. 'for' → logprob: -1.6752265691757202
    4. '   ' → logprob: -2.1752266883850098
    5. ' for' → logprob: -4.05022668838501
    6. ' total' → logprob: -4.67522668838501
    7. ' while' → logprob: -4.92522668838501
    8. '                   ' → logprob: -4.92522668838501
    9. '0' → logprob: -4.92522668838501
    10. '           ' → logprob: -5.17522668838501

Token 618: ' counting' (ID: 43276)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5134084820747375
    2. ' a' → logprob: -2.5134084224700928
    3. 'an' → logprob: -3.1384084224700928
    4. 'extra' → logprob: -3.2634084224700928
    5. 'total' → logprob: -3.3884084224700928
    6. 'additional' → logprob: -3.3884084224700928
    7. 'count' → logprob: -3.6384084224700928
    8. 'dp' → logprob: -3.8884084224700928
    9. ' an' → logprob: -3.8884084224700928
    10. 'ways' → logprob: -4.013408660888672

Token 619: ' directly' (ID: 8516)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8667418360710144
    2. '<|end|>' → logprob: -0.9917418360710144
    3. '   ' → logprob: -2.866741895675659
    4. '
' → logprob: -3.241741895675659
    5. '<|end|>' → logprob: -3.991741895675659
    6. ' total' → logprob: -4.24174165725708
    7. '#' → logprob: -4.36674165725708
    8. 'continue' → logprob: -4.74174165725708
    9. ')' → logprob: -5.11674165725708
    10. '=' → logprob: -5.24174165725708

Token 620: ' finish' (ID: 9115)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3034183979034424
    2. '<|end|>' → logprob: -2.0534183979034424
    3. '   ' → logprob: -3.5534183979034424
    4. '<|end|>' → logprob: -3.6784183979034424
    5. ' total' → logprob: -3.8034183979034424
    6. '
' → logprob: -4.428418159484863
    7. ' =' → logprob: -5.803418159484863
    8. '#' → logprob: -5.803418159484863
    9. 'import' → logprob: -5.803418159484863
    10. '(total' → logprob: -5.803418159484863

Token 621: ' ways' (ID: 6984)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6271998286247253
    2. ' =' → logprob: -1.8771998882293701
    3. '   ' → logprob: -2.00219988822937
    4. '=' → logprob: -2.87719988822937
    5. ' total' → logprob: -3.62719988822937
    6. '
' → logprob: -4.127199649810791
    7. 'ways' → logprob: -4.752199649810791
    8. '           ' → logprob: -4.877199649810791
    9. ' +=' → logprob: -5.127199649810791
    10. '                   ' → logprob: -5.377199649810791

Token 622: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 623: 'while' (ID: 7032)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.1058179140090942
    2. '   ' → logprob: -1.2308179140090942
    3. 'while' → logprob: -2.1058177947998047
    4. 'finish' → logprob: -2.1058177947998047
    5. '
' → logprob: -2.6058177947998047
    6. 'ways' → logprob: -4.605817794799805
    7. 'continue' → logprob: -4.855817794799805
    8. ' while' → logprob: -4.980817794799805
    9. ' total' → logprob: -5.105817794799805
    10. '```' → logprob: -5.480817794799805

Token 624: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.16028636693954468
    2. 'True' → logprob: -1.9102864265441895
    3. ' ' → logprob: -10.160285949707031
    4. '(True' → logprob: -11.535285949707031
    5. ' line' → logprob: -13.035285949707031
    6. '_' → logprob: -13.035285949707031
    7. '_true' → logprob: -13.285285949707031
    8. '```' → logprob: -13.535285949707031
    9. ' not' → logprob: -13.660285949707031
    10. '=True' → logprob: -13.910285949707031

Token 625: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005402727052569389
    2. ':
' → logprob: -5.505402565002441
    3. '   ' → logprob: -7.005402565002441
    4. ' :' → logprob: -8.880402565002441
    5. '[' → logprob: -10.130402565002441
    6. '<|end|>' → logprob: -10.130402565002441
    7. ',' → logprob: -10.505402565002441
    8. '):' → logprob: -10.755402565002441
    9. '       ' → logprob: -10.880402565002441
    10. '=' → logprob: -10.880402565002441

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005608899984508753
    2. ' line' → logprob: -5.255609035491943
    3. '<|end|>' → logprob: -8.755608558654785
    4. ':' → logprob: -9.505608558654785
    5. 'line' → logprob: -10.380608558654785
    6. '       ' → logprob: -11.380608558654785
    7. '(line' → logprob: -11.380608558654785
    8. '<|end|>' → logprob: -11.505608558654785
    9. '...' → logprob: -11.630608558654785
    10. ',' → logprob: -12.005608558654785

Token 627: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6005963087081909
    2. '   ' → logprob: -0.8505963087081909
    3. 'line' (adapté à ' line') → logprob: -3.7255964279174805
    4. '	line' → logprob: -9.60059642791748
    5. '...' → logprob: -10.35059642791748
    6. ' total' → logprob: -10.47559642791748
    7. '```' → logprob: -10.97559642791748
    8. '#line' → logprob: -11.66309642791748
    9. 'total' → logprob: -11.78809642791748
    10. '(line' → logprob: -11.85059642791748

Token 628: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931514739990234
    2. ' =' → logprob: -0.6931514739990234
    3. '=line' → logprob: -12.818151473999023
    4. ' ' → logprob: -14.818151473999023
    5. '=input' → logprob: -15.193151473999023
    6. 'line' → logprob: -15.443151473999023
    7. '   ' → logprob: -15.693151473999023
    8. ' ' → logprob: -16.693151473999023
    9. 's' → logprob: -16.693151473999023
    10. '_' → logprob: -16.943151473999023

Token 629: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03814695030450821
    2. ' input' → logprob: -3.28814697265625
    3. 'line' → logprob: -9.41314697265625
    4. ' line' → logprob: -12.03814697265625
    5. '(input' → logprob: -12.03814697265625
    6. '=input' → logprob: -12.28814697265625
    7. ' ' → logprob: -12.91314697265625
    8. '<input' → logprob: -13.53814697265625
    9. 'output' → logprob: -14.60064697265625
    10. '[input' → logprob: -15.03814697265625

Token 630: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006008905824273825
    2. '()
' → logprob: -5.131009101867676
    3. '().' → logprob: -9.506009101867676
    4. '()

' → logprob: -13.131009101867676
    5. '()
' → logprob: -13.256009101867676
    6. '(' → logprob: -13.506009101867676
    7. '())' → logprob: -15.506009101867676
    8. '()`' → logprob: -15.881009101867676
    9. ')' → logprob: -16.13100814819336
    10. ' ()' → logprob: -16.38100814819336

Token 631: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010763956233859062
    2. ' if' → logprob: -7.3760762214660645
    3. '<|end|>' → logprob: -8.751076698303223
    4. '  ' → logprob: -9.751076698303223
    5. '    ' → logprob: -9.751076698303223
    6. '    
' → logprob: -10.251076698303223
    7. '       ' → logprob: -10.751076698303223
    8. '
' → logprob: -11.001076698303223
    9. 'if' → logprob: -11.001076698303223
    10. ' ' → logprob: -11.001076698303223

Token 632: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2987223267555237
    2. '''' → logprob: -2.173722267150879
    3. ' if' → logprob: -2.298722267150879
    4. '   ' → logprob: -3.298722267150879
    5. '```' → logprob: -6.923722267150879
    6. ''' → logprob: -7.048722267150879
    7. '''
' → logprob: -7.173722267150879
    8. ' ' → logprob: -7.298722267150879
    9. 'strip' → logprob: -7.298722267150879
    10. ''''' → logprob: -7.423722267150879

Token 633: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.25272446870803833
    2. 'line' → logprob: -1.5027244091033936
    3. ' not' → logprob: -7.877724647521973
    4. '''' → logprob: -8.252724647521973
    5. 'not' → logprob: -9.502724647521973
    6. ' ' → logprob: -10.377724647521973
    7. ' ''' → logprob: -10.627724647521973
    8. '(line' → logprob: -12.252724647521973
    9. '	line' → logprob: -12.502724647521973
    10. '#line' → logprob: -12.627724647521973

Token 634: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6326659917831421
    2. '==' → logprob: -0.7576659917831421
    3. '()==' → logprob: -11.007665634155273
    4. '=' → logprob: -11.507665634155273
    5. '=='' → logprob: -11.632665634155273
    6. '.strip' → logprob: -12.132665634155273
    7. ' ' → logprob: -12.382665634155273
    8. ':' → logprob: -12.632665634155273
    9. ' !=' → logprob: -12.632665634155273
    10. '   ' → logprob: -13.132665634155273

Token 635: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.029801523312926292
    2. ''' → logprob: -3.529801607131958
    3. '''
' → logprob: -10.529801368713379
    4. ' '':
' → logprob: -11.029801368713379
    5. '""' → logprob: -13.404801368713379
    6. ''s' → logprob: -13.779801368713379
    7. '':' → logprob: -13.904801368713379
    8. ':' → logprob: -13.904801368713379
    9. '''.' → logprob: -14.029801368713379
    10. ''ex' → logprob: -14.529801368713379

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013973555527627468
    2. 'continue' → logprob: -4.513973712921143
    3. ' continue' → logprob: -6.388973712921143
    4. '   ' → logprob: -6.763973712921143
    5. '           ' → logprob: -10.388973236083984
    6. '	continue' → logprob: -11.013973236083984
    7. ':' → logprob: -11.388973236083984
    8. '      ' → logprob: -12.638973236083984
    9. '	' → logprob: -12.763973236083984
    10. '```' → logprob: -13.013973236083984

Token 637: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.016692500561475754
    2. '       ' → logprob: -4.891692638397217
    3. ' continue' → logprob: -4.891692638397217
    4. '   ' → logprob: -6.516692638397217
    5. '	continue' → logprob: -10.891692161560059
    6. 'break' → logprob: -10.891692161560059
    7. '```' → logprob: -12.266692161560059
    8. '           ' → logprob: -12.391692161560059
    9. 'continu' → logprob: -12.516692161560059
    10. 'contin' → logprob: -13.516692161560059

Token 638: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002595276804640889
    2. 'X' → logprob: -6.0025954246521
    3. '<|end|>' → logprob: -10.502594947814941
    4. ' X' → logprob: -10.877594947814941
    5. '       ' → logprob: -10.877594947814941
    6. '
' → logprob: -11.627594947814941
    7. '  ' → logprob: -12.002594947814941
    8. 'Code' → logprob: -12.252594947814941
    9. '    
' → logprob: -12.252594947814941
    10. '```' → logprob: -12.502594947814941

Token 639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03830346092581749
    2. 'X' → logprob: -3.2883033752441406
    3. ' X' → logprob: -9.53830337524414
    4. '...' → logprob: -10.16330337524414
    5. '       ' → logprob: -10.78830337524414
    6. 'Code' → logprob: -10.78830337524414
    7. '```' → logprob: -11.03830337524414
    8. '  ' → logprob: -11.28830337524414
    9. '<|end|>' → logprob: -11.41330337524414
    10. 'line' → logprob: -11.53830337524414

Token 640: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.005797720979899168
    2. 'continue' → logprob: -6.130797863006592
    3. ' X' → logprob: -6.505797863006592
    4. '   ' → logprob: -6.630797863006592
    5. 'break' → logprob: -7.880797863006592
    6. 'import' → logprob: -9.380797386169434
    7. 'line' → logprob: -9.505797386169434
    8. ' continue' → logprob: -10.005797386169434
    9. ' break' → logprob: -10.505797386169434
    10. 'print' → logprob: -10.755797386169434

Token 641: '_Y' (ID: 22477)
  Prédit: '_Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Y' → logprob: -0.006356512662023306
    2. ',' → logprob: -5.131356716156006
    3. '_,' → logprob: -9.006356239318848
    4. '_X' → logprob: -9.256356239318848
    5. ',_' → logprob: -9.256356239318848
    6. ',Y' → logprob: -9.256356239318848
    7. '_' → logprob: -11.381356239318848
    8. 'Y' → logprob: -12.881356239318848
    9. ' ,' → logprob: -14.131356239318848
    10. ' _' → logprob: -14.506356239318848

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020893067121506
    2. ' =' → logprob: -2.3502089977264404
    3. '=line' → logprob: -12.97520923614502
    4. ' ' → logprob: -17.600208282470703
    5. '=

' → logprob: -17.850208282470703
    6. 'line' → logprob: -18.850208282470703
    7. '=
' → logprob: -19.100208282470703
    8. '＝' → logprob: -19.350208282470703
    9. '   ' → logprob: -19.725208282470703
    10. '==' → logprob: -19.850208282470703

Token 643: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07889165729284286
    2. ' line' → logprob: -2.5788917541503906
    3. '[line' → logprob: -13.95389175415039
    4. '(line' → logprob: -15.20389175415039
    5. '#line' → logprob: -15.70389175415039
    6. '=line' → logprob: -15.82889175415039
    7. 'list' → logprob: -15.95389175415039
    8. '	line' → logprob: -15.95389175415039
    9. ' ' → logprob: -16.20389175415039
    10. 'Line' → logprob: -17.20389175415039

Token 644: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.12582215666770935
    2. '=' → logprob: -2.250822067260742
    3. 'split' → logprob: -4.500822067260742
    4. ' =' → logprob: -6.875822067260742
    5. '.' → logprob: -7.375822067260742
    6. ' .' → logprob: -10.000822067260742
    7. '.strip' → logprob: -10.625822067260742
    8. '==' → logprob: -10.875822067260742
    9. ' split' → logprob: -11.375822067260742
    10. '[' → logprob: -11.500822067260742

Token 645: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 646: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6640012860298157
    2. 'if' → logprob: -0.7890012860298157
    3. ' if' → logprob: -3.664001226425171
    4. '<|end|>' → logprob: -5.41400146484375
    5. '[' → logprob: -7.66400146484375
    6. ' ' → logprob: -9.03900146484375
    7. '```' → logprob: -9.66400146484375
    8. '  ' → logprob: -10.66400146484375
    9. 'X' → logprob: -10.66400146484375
    10. 'If' → logprob: -10.66400146484375

Token 647: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005948944482952356
    2. ' if' → logprob: -5.630949020385742
    3. '   ' → logprob: -6.380949020385742
    4. 'continue' → logprob: -7.630949020385742
    5. '[' → logprob: -10.130949020385742
    6. '1' → logprob: -10.255949020385742
    7. 'If' → logprob: -10.630949020385742
    8. 'X' → logprob: -10.880949020385742
    9. '2' → logprob: -11.005949020385742
    10. ' ' → logprob: -11.380949020385742

Token 648: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.023245826363563538
    2. ' len' → logprob: -3.7732458114624023
    3. '(len' → logprob: -15.273245811462402
    4. ' ' → logprob: -17.39824676513672
    5. '   ' → logprob: -17.89824676513672
    6. '[len' → logprob: -18.14824676513672
    7. '2' → logprob: -18.27324676513672
    8. '	len' → logprob: -18.27324676513672
    9. '<len' → logprob: -19.14824676513672
    10. 'not' → logprob: -19.14824676513672

Token 649: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.001279641641303897
    2. '(' → logprob: -7.126279830932617
    3. ' (' → logprob: -7.751279830932617
    4. '<|end|>' → logprob: -10.501279830932617
    5. '<|end|>' → logprob: -12.626279830932617
    6. ' ' → logprob: -12.751279830932617
    7. '()' → logprob: -12.751279830932617
    8. '('' → logprob: -12.876279830932617
    9. '(
' → logprob: -14.501279830932617
    10. '(Code' → logprob: -14.501279830932617

Token 650: '_Y' (ID: 22477)
  Prédit: '_Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Y' → logprob: -0.257278174161911
    2. '!=' → logprob: -1.6322782039642334
    3. ')!=' → logprob: -4.007277965545654
    4. ')' → logprob: -5.257277965545654
    5. '_X' → logprob: -5.757277965545654
    6. ' !=' → logprob: -5.757277965545654
    7. '()!=' → logprob: -7.007277965545654
    8. '```' → logprob: -8.757278442382812
    9. '[' → logprob: -8.882278442382812
    10. ']!=' → logprob: -9.382278442382812

Token 651: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7974756956100464
    2. '!=' → logprob: -1.2974756956100464
    3. ' !=' → logprob: -1.2974756956100464
    4. ')!=' → logprob: -5.797475814819336
    5. ' )' → logprob: -10.047475814819336
    6. '==' → logprob: -11.797475814819336
    7. '()!=' → logprob: -12.672475814819336
    8. '   ' → logprob: -14.047475814819336
    9. '<' → logprob: -14.047475814819336
    10. '```' → logprob: -14.547475814819336

Token 652: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3132692873477936
    2. ' !=' → logprob: -1.3132692575454712
    3. '()!=' → logprob: -12.93826961517334
    4. '==' → logprob: -13.06326961517334
    5. ')!=' → logprob: -13.43826961517334
    6. '<' → logprob: -14.06326961517334
    7. '!==' → logprob: -15.81326961517334
    8. '!=(' → logprob: -15.81326961517334
    9. '!='' → logprob: -16.188268661499023
    10. '```' → logprob: -16.313268661499023

Token 653: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005550591740757227
    2. ' ' → logprob: -7.500555038452148
    3. '0' → logprob: -13.875555038452148
    4. '1' → logprob: -14.250555038452148
    5. '```' → logprob: -15.625555038452148
    6. '   ' → logprob: -15.750555038452148
    7. '<' → logprob: -17.37555503845215
    8. '3' → logprob: -17.56305503845215
    9. '
' → logprob: -17.75055503845215
    10. '[' → logprob: -18.37555503845215

Token 654: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.625024795532227
    3. '1' → logprob: -15.375024795532227
    4. '   ' → logprob: -16.250024795532227
    5. '```' → logprob: -16.250024795532227
    6. '0' → logprob: -16.375024795532227
    7. '
' → logprob: -17.312524795532227
    8. '<' → logprob: -17.500024795532227
    9. '3' → logprob: -18.187524795532227
    10. '  ' → logprob: -18.625024795532227

Token 655: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16284529864788055
    2. ':' → logprob: -2.2878453731536865
    3. '       ' → logprob: -3.0378453731536865
    4. '   ' → logprob: -7.662845134735107
    5. 'continue' → logprob: -8.787845611572266
    6. '=' → logprob: -9.037845611572266
    7. '):
' → logprob: -10.037845611572266
    8. '{
' → logprob: -11.537845611572266
    9. ':return' → logprob: -11.787845611572266
    10. ':

' → logprob: -11.912845611572266

Token 656: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005664733238518238
    2. '   ' → logprob: -5.880664825439453
    3. 'continue' → logprob: -5.880664825439453
    4. ' continue' → logprob: -10.505664825439453
    5. '	continue' → logprob: -11.130664825439453
    6. '	' → logprob: -12.255664825439453
    7. ':' → logprob: -12.380664825439453
    8. '           ' → logprob: -13.130664825439453
    9. ':
' → logprob: -13.130664825439453
    10. ' ' → logprob: -13.255664825439453

Token 657: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -4.668304245569743e-05
    2. ' continue' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.125046730041504
    4. '       ' → logprob: -15.125046730041504
    5. '	continue' → logprob: -16.375045776367188
    6. 'continu' → logprob: -16.750045776367188
    7. 'contin' → logprob: -17.250045776367188
    8. ' ' → logprob: -19.250045776367188
    9. '```' → logprob: -19.375045776367188
    10. '_continue' → logprob: -19.750045776367188

Token 658: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11373132467269897
    2. 'X' → logprob: -2.2387313842773438
    3. ' X' → logprob: -7.863731384277344
    4. ' ' → logprob: -8.488731384277344
    5. '[' → logprob: -8.738731384277344
    6. '  ' → logprob: -9.988731384277344
    7. ')' → logprob: -10.738731384277344
    8. '<|end|>' → logprob: -11.113731384277344
    9. '    
' → logprob: -11.488731384277344
    10. 'continue' → logprob: -11.738731384277344

Token 659: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6333646178245544
    2. 'X' → logprob: -0.7583646178245544
    3. ' X' → logprob: -7.883364677429199
    4. ' ' → logprob: -8.5083646774292
    5. '  ' → logprob: -9.2583646774292
    6. '```' → logprob: -10.7583646774292
    7. 'import' → logprob: -10.8833646774292
    8. 'continue' → logprob: -11.5083646774292
    9. '[' → logprob: -11.5083646774292
    10. '<|end|>' → logprob: -12.2583646774292

Token 660: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.009002035483717918
    2. '   ' → logprob: -4.759002208709717
    3. 'continue' → logprob: -8.884001731872559
    4. ' X' → logprob: -9.009001731872559
    5. 'break' → logprob: -9.384001731872559
    6. 'import' → logprob: -10.759001731872559
    7. ' ' → logprob: -12.009001731872559
    8. '  ' → logprob: -12.509001731872559
    9. '```' → logprob: -13.259001731872559
    10. 'from' → logprob: -13.759001731872559

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010139751975657418
    2. ',Y' → logprob: -9.250101089477539
    3. ' ,' → logprob: -12.625101089477539
    4. ',
' → logprob: -14.250101089477539
    5. '=' → logprob: -14.625101089477539
    6. '_,' → logprob: -15.125101089477539
    7. ',X' → logprob: -16.12510108947754
    8. '<|end|>' → logprob: -16.87510108947754
    9. ',Z' → logprob: -17.12510108947754
    10. '```' → logprob: -17.12510108947754

Token 662: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.048587825149297714
    2. ' Y' → logprob: -3.0485877990722656
    3. 'int' → logprob: -15.173587799072266
    4. ' ' → logprob: -15.798587799072266
    5. '<|end|>' → logprob: -17.048587799072266
    6. ' int' → logprob: -18.048587799072266
    7. '   ' → logprob: -18.048587799072266
    8. '  ' → logprob: -18.798587799072266
    9. '	Y' → logprob: -18.798587799072266
    10. '    ' → logprob: -19.423587799072266

Token 663: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687410950660706
    2. '=' → logprob: -1.1368740797042847
    3. '   ' → logprob: -13.261874198913574
    4. ')' → logprob: -13.636874198913574
    5. ',' → logprob: -16.386873245239258
    6. '=int' → logprob: -16.761873245239258
    7. ' ' → logprob: -17.761873245239258
    8. ')=' → logprob: -18.011873245239258
    9. '=
' → logprob: -18.511873245239258
    10. '=

' → logprob: -18.636873245239258

Token 664: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.061968132853507996
    2. ' map' → logprob: -2.8119680881500244
    3. 'int' → logprob: -14.811967849731445
    4. '   ' → logprob: -16.061967849731445
    5. 'm' → logprob: -17.936967849731445
    6. 'list' → logprob: -18.311967849731445
    7. '	map' → logprob: -18.686967849731445
    8. '    ' → logprob: -18.686967849731445
    9. ' ' → logprob: -18.936967849731445
    10. 'maps' → logprob: -19.186967849731445

Token 665: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008636081591248512
    2. 'int' → logprob: -4.758635997772217
    3. '[int' → logprob: -11.133636474609375
    4. '=int' → logprob: -12.508636474609375
    5. ' int' → logprob: -13.633636474609375
    6. ',int' → logprob: -13.758636474609375
    7. '<int' → logprob: -14.508636474609375
    8. ':int' → logprob: -15.633636474609375
    9. ']int' → logprob: -15.758636474609375
    10. '(' → logprob: -16.383636474609375

Token 666: ',' (ID: 11)
  Prédit: ',int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.4115108549594879
    2. ',' → logprob: -1.4115108251571655
    3. 'int' → logprob: -2.411510944366455
    4. '(int' → logprob: -6.161510944366455
    5. ',X' → logprob: -6.411510944366455
    6. '(X' → logprob: -9.786510467529297
    7. '=int' → logprob: -10.536510467529297
    8. ' int' → logprob: -11.286510467529297
    9. '[int' → logprob: -11.536510467529297
    10. 'X' → logprob: -11.661510467529297

Token 667: ' X' (ID: 2127)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5771002769470215
    2. 'X' → logprob: -0.8271002769470215
    3. ' X' → logprob: -7.4521002769470215
    4. ' int' → logprob: -7.7021002769470215
    5. 'line' → logprob: -10.07710075378418
    6. ' ' → logprob: -10.32710075378418
    7. 'map' → logprob: -11.20210075378418
    8. '(X' → logprob: -11.95210075378418
    9. '[X' → logprob: -11.95210075378418
    10. '   ' → logprob: -12.20210075378418

Token 668: '_Y' (ID: 22477)
  Prédit: '_Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Y' → logprob: -0.0005760280764661729
    2. ')' → logprob: -7.750576019287109
    3. ')_' → logprob: -9.87557601928711
    4. 'Y' → logprob: -10.37557601928711
    5. 'split' → logprob: -10.87557601928711
    6. '[' → logprob: -11.25057601928711
    7. '_X' → logprob: -11.62557601928711
    8. '1' → logprob: -12.62557601928711
    9. '.split' → logprob: -13.00057601928711
    10. '   ' → logprob: -13.12557601928711

Token 669: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07890598475933075
    2. ')
' → logprob: -2.5789060592651367
    3. '   ' → logprob: -11.828906059265137
    4. ')
' → logprob: -12.078906059265137
    5. ')

' → logprob: -13.328906059265137
    6. ' )' → logprob: -15.203906059265137
    7. ')return' → logprob: -15.453906059265137
    8. 'if' → logprob: -15.578906059265137
    9. 'def' → logprob: -15.578906059265137
    10. '[' → logprob: -16.32890510559082

Token 670: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012578642927110195
    2. 'if' → logprob: -4.38757848739624
    3. ' if' → logprob: -9.637578964233398
    4. '       ' → logprob: -13.012578964233398
    5. 'import' → logprob: -14.637578964233398
    6. '<|end|>' → logprob: -15.137578964233398
    7. '[' → logprob: -15.637578964233398
    8. '  ' → logprob: -15.887578964233398
    9. 'from' → logprob: -16.3875789642334
    10. 'If' → logprob: -16.3875789642334

Token 671: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00017815368482843041
    2. ' if' → logprob: -8.875178337097168
    3. '   ' → logprob: -10.250178337097168
    4. 'break' → logprob: -12.875178337097168
    5. '0' → logprob: -16.37517738342285
    6. 'If' → logprob: -16.50017738342285
    7. 'import' → logprob: -17.50017738342285
    8. 'from' → logprob: -18.00017738342285
    9. '```' → logprob: -18.50017738342285
    10. 'dp' → logprob: -18.87517738342285

Token 672: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6950059533119202
    2. ' X' → logprob: -0.6950059533119202
    3. '0' → logprob: -6.570005893707275
    4. ' ' → logprob: -7.695005893707275
    5. '   ' → logprob: -16.820005416870117
    6. '	X' → logprob: -17.070005416870117
    7. '(X' → logprob: -17.195005416870117
    8. '  ' → logprob: -18.070005416870117
    9. ' (' → logprob: -18.570005416870117
    10. 'x' → logprob: -18.695005416870117

Token 673: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20141655206680298
    2. '==' → logprob: -1.7014164924621582
    3. ' ' → logprob: -13.326416969299316
    4. '0' → logprob: -14.076416969299316
    5. '```' → logprob: -15.201416969299316
    6. '==
' → logprob: -15.326416969299316
    7. '=' → logprob: -15.451416969299316
    8. ' =' → logprob: -16.576416015625
    9. '===' → logprob: -17.326416015625
    10. '[' → logprob: -17.326416015625

Token 674: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02054188773036003
    2. ' ' → logprob: -3.8955419063568115
    3. '۰' → logprob: -17.58304214477539
    4. '_' → logprob: -19.14554214477539
    5. '<|end|>' → logprob: -19.14554214477539
    6. '  ' → logprob: -19.39554214477539
    7. '=' → logprob: -19.58304214477539
    8. '`' → logprob: -19.64554214477539
    9. '00' → logprob: -20.02054214477539
    10. '０' → logprob: -20.08304214477539

Token 675: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -18.500001907348633
    4. '０' → logprob: -20.375001907348633
    5. '০' → logprob: -21.125001907348633
    6. 'o' → logprob: -21.375001907348633
    7. '00' → logprob: -21.625001907348633
    8. '000' → logprob: -21.750001907348633
    9. '```' → logprob: -21.750001907348633
    10. '=' → logprob: -21.812501907348633

Token 676: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.575941801071167
    2. ' and' → logprob: -0.825941801071167
    3. ' ' → logprob: -13.200942039489746
    4. '   ' → logprob: -14.700942039489746
    5. '0' → logprob: -15.575942039489746
    6. '  ' → logprob: -17.45094108581543
    7. '	and' → logprob: -18.32594108581543
    8. ' и' → logprob: -19.20094108581543
    9. '```' → logprob: -19.57594108581543
    10. ' ' → logprob: -19.57594108581543

Token 677: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.048593614250421524
    2. ' Y' → logprob: -3.048593521118164
    3. '0' → logprob: -12.298593521118164
    4. ' ' → logprob: -13.423593521118164
    5. '	Y' → logprob: -16.048593521118164
    6. '   ' → logprob: -16.298593521118164
    7. '  ' → logprob: -18.173593521118164
    8. '    ' → logprob: -20.923593521118164
    9. '_Y' → logprob: -21.798593521118164
    10. 'X' → logprob: -22.048593521118164

Token 678: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2474515587091446
    2. '==' → logprob: -1.7474515438079834
    3. '0' → logprob: -3.1224515438079834
    4. ' ' → logprob: -7.3724517822265625
    5. '   ' → logprob: -8.247451782226562
    6. '[' → logprob: -11.247451782226562
    7. '       ' → logprob: -11.247451782226562
    8. '=' → logprob: -11.372451782226562
    9. ' =' → logprob: -11.872451782226562
    10. '  ' → logprob: -12.747451782226562

Token 679: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.125158309936523
    4. '۰' → logprob: -19.125158309936523
    5. '<|end|>' → logprob: -20.125158309936523
    6. '  ' → logprob: -20.187658309936523
    7. '```' → logprob: -21.375158309936523
    8. '=' → logprob: -21.625158309936523
    9. '০' → logprob: -22.250158309936523
    10. '０' → logprob: -22.250158309936523

Token 680: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.125001907348633
    4. '۰' → logprob: -19.750001907348633
    5. '<|end|>' → logprob: -20.125001907348633
    6. '  ' → logprob: -21.750001907348633
    7. '```' → logprob: -21.875001907348633
    8. '০' → logprob: -22.250001907348633
    9. '<|end|>' → logprob: -22.875001907348633
    10. '０' → logprob: -22.937501907348633

Token 681: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2651369571685791
    2. ':' → logprob: -1.515136957168579
    3. '       ' → logprob: -4.51513671875
    4. '   ' → logprob: -6.14013671875
    5. '():
' → logprob: -11.64013671875
    6. '):
' → logprob: -11.89013671875
    7. ' :
' → logprob: -12.76513671875
    8. '     ' → logprob: -13.89013671875
    9. ':
' → logprob: -14.14013671875
    10. ':return' → logprob: -14.64013671875

Token 682: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5761194825172424
    2. '       ' → logprob: -0.8261194825172424
    3. ' break' → logprob: -9.451119422912598
    4. 'break' → logprob: -9.826119422912598
    5. ':' → logprob: -10.576119422912598
    6. '	break' → logprob: -11.576119422912598
    7. ' ' → logprob: -12.951119422912598
    8. '   ' → logprob: -13.076119422912598
    9. '     ' → logprob: -13.701119422912598
    10. ':
' → logprob: -13.826119422912598

Token 683: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0007099286303855479
    2. ' break' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.500709533691406
    4. '	break' → logprob: -19.375709533691406
    5. 'b' → logprob: -20.500709533691406
    6. '_break' → logprob: -21.500709533691406
    7. 'print' → logprob: -22.500709533691406
    8. 'Break' → logprob: -22.625709533691406
    9. '```' → logprob: -22.625709533691406
    10. 'return' → logprob: -23.375709533691406

Token 684: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008529895567335188
    2. 'total' → logprob: -7.625853061676025
    3. '    
' → logprob: -8.750852584838867
    4. '
' → logprob: -9.750852584838867
    5. ')' → logprob: -10.125852584838867
    6. '```' → logprob: -10.125852584838867
    7. ' total' → logprob: -11.500852584838867
    8. 'grid' → logprob: -11.750852584838867
    9. '<|end|>' → logprob: -11.750852584838867
    10. 'count' → logprob: -12.125852584838867

Token 685: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22389107942581177
    2. 'ways' → logprob: -2.473891019821167
    3. 'total' → logprob: -2.473891019821167
    4. 'finish' → logprob: -4.223891258239746
    5. 'grid' → logprob: -4.598891258239746
    6. 'count' → logprob: -6.473891258239746
    7. 'result' → logprob: -6.473891258239746
    8. ' ways' → logprob: -7.348891258239746
    9. 'dp' → logprob: -7.473891258239746
    10. ' total' → logprob: -7.473891258239746

Token 686: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.2688208520412445
    2. 'finish' → logprob: -1.768820881843567
    3. 'finished' → logprob: -3.5188207626342773
    4. 'ways' → logprob: -3.7688207626342773
    5. 'total' → logprob: -5.518820762634277
    6. 'fin' → logprob: -5.518820762634277
    7. 'count' → logprob: -6.893820762634277
    8. 'jump' → logprob: -7.768820762634277
    9. '#' → logprob: -8.143820762634277
    10. 'ob' → logprob: -8.268820762634277

Token 687: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132694363594055
    2. '=' → logprob: -1.3132693767547607
    3. '.clear' → logprob: -12.06326961517334
    4. '=[]' → logprob: -13.18826961517334
    5. '[:]' → logprob: -16.563268661499023
    6. '   ' → logprob: -17.063268661499023
    7. '.' → logprob: -17.688268661499023
    8. '.=' → logprob: -17.813268661499023
    9. '=[]
' → logprob: -18.313268661499023
    10. '＝' → logprob: -18.313268661499023

Token 688: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.008675670251250267
    2. '[]' → logprob: -4.758675575256348
    3. '[' → logprob: -9.758675575256348
    4. '[
' → logprob: -13.508675575256348
    5. ' []
' → logprob: -13.758675575256348
    6. '[]

' → logprob: -14.508675575256348
    7. ' []' → logprob: -16.508676528930664
    8. '=[]
' → logprob: -16.758676528930664
    9. '[user' → logprob: -17.758676528930664
    10. '[line' → logprob: -17.758676528930664

Token 689: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12726657092571259
    2. 'for' → logprob: -2.1272666454315186
    3. ' for' → logprob: -8.002266883850098
    4. '<|end|>' → logprob: -13.502266883850098
    5. '	for' → logprob: -13.627266883850098
    6. '       ' → logprob: -15.002266883850098
    7. '[' → logprob: -15.377266883850098
    8. '```' → logprob: -15.502266883850098
    9. '
' → logprob: -16.12726593017578
    10. '    
' → logprob: -16.37726593017578

Token 690: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001228561857715249
    2. ' for' → logprob: -6.751228332519531
    3. '   ' → logprob: -9.751228332519531
    4. '	for' → logprob: -15.876228332519531
    5. '[' → logprob: -17.87622833251953
    6. ' ' → logprob: -20.37622833251953
    7. '  ' → logprob: -20.50122833251953
    8. 'For' → logprob: -20.62622833251953
    9. '    
' → logprob: -21.00122833251953
    10. '
' → logprob: -21.50122833251953

Token 691: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.822646693966817e-06
    2. ' _' → logprob: -11.875007629394531
    3. ' in' → logprob: -14.000007629394531
    4. '_in' → logprob: -17.25000762939453
    5. '_range' → logprob: -17.75000762939453
    6. 'in' → logprob: -19.62500762939453
    7. 'range' → logprob: -19.87500762939453
    8. ' range' → logprob: -20.00000762939453
    9. '_Y' → logprob: -20.00000762939453
    10. '_y' → logprob: -20.62500762939453

Token 692: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.40803420543670654
    2. ' in' → logprob: -1.4080342054367065
    3. 'range' → logprob: -2.408034324645996
    4. ' range' → logprob: -8.158034324645996
    5. '_' → logprob: -8.908034324645996
    6. ' ' → logprob: -12.908034324645996
    7. '(range' → logprob: -13.908034324645996
    8. '0' → logprob: -13.908034324645996
    9. 'int' → logprob: -14.783034324645996
    10. '   ' → logprob: -15.158034324645996

Token 693: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006715370807796717
    2. ' range' → logprob: -5.006715297698975
    3. '_' → logprob: -17.131715774536133
    4. '_range' → logprob: -18.506715774536133
    5. '(range' → logprob: -19.256715774536133
    6. ' ' → logprob: -20.381715774536133
    7. '	range' → logprob: -21.381715774536133
    8. ' _' → logprob: -22.256715774536133
    9. ' in' → logprob: -22.631715774536133
    10. '   ' → logprob: -22.881715774536133

Token 694: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -4.036524842376821e-05
    2. 'Y' → logprob: -10.125040054321289
    3. ' Y' → logprob: -16.62504005432129
    4. ' (' → logprob: -16.75004005432129
    5. '(' → logprob: -17.25004005432129
    6. '(y' → logprob: -18.00004005432129
    7. 'range' → logprob: -18.87504005432129
    8. '(X' → logprob: -19.62504005432129
    9. '[Y' → logprob: -20.12504005432129
    10. '   ' → logprob: -20.50004005432129

Token 695: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4291132688522339
    2. '):' → logprob: -1.0541132688522339
    3. '   ' → logprob: -8.429113388061523
    4. '):
' → logprob: -9.054113388061523
    5. '       ' → logprob: -10.304113388061523
    6. ')' → logprob: -10.804113388061523
    7. '():
' → logprob: -12.054113388061523
    8. ':' → logprob: -12.929113388061523
    9. ' ):
' → logprob: -13.179113388061523
    10. '()):
' → logprob: -13.429113388061523

Token 696: '       ' (ID: 309)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.21784566342830658
    2. 'row' → logprob: -2.3428456783294678
    3. '       ' → logprob: -2.4678456783294678
    4. '   ' → logprob: -4.217845439910889
    5. '	row' → logprob: -9.217845916748047
    6. '(row' → logprob: -11.217845916748047
    7. '        ' → logprob: -11.342845916748047
    8. '    ' → logprob: -11.592845916748047
    9. '```' → logprob: -11.592845916748047
    10. ' ' → logprob: -11.592845916748047

Token 697: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.06197004392743111
    2. ' row' → logprob: -2.8119699954986572
    3. 'grid' → logprob: -13.811969757080078
    4. '   ' → logprob: -14.061969757080078
    5. '	row' → logprob: -15.686969757080078
    6. '       ' → logprob: -15.811969757080078
    7. 'list' → logprob: -15.936969757080078
    8. 'rows' → logprob: -16.561969757080078
    9. ' grid' → logprob: -16.686969757080078
    10. 'line' → logprob: -17.936969757080078

Token 698: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164329506456852
    2. '=' → logprob: -4.264164447784424
    3. ' ' → logprob: -15.014163970947266
    4. 's' → logprob: -15.514163970947266
    5. '   ' → logprob: -15.514163970947266
    6. '=line' → logprob: -17.389163970947266
    7. '=list' → logprob: -17.514163970947266
    8. '    ' → logprob: -18.014163970947266
    9. ')' → logprob: -18.639163970947266
    10. '```' → logprob: -19.014163970947266

Token 699: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004078401252627373
    2. ' list' → logprob: -5.504078388214111
    3. 'List' → logprob: -22.004077911376953
    4. '=list' → logprob: -22.754077911376953
    5. '(list' → logprob: -24.254077911376953
    6. '	list' → logprob: -24.379077911376953
    7. 'map' → logprob: -24.754077911376953
    8. '.list' → logprob: -25.004077911376953
    9. ':list' → logprob: -25.004077911376953
    10. '_list' → logprob: -25.379077911376953

Token 700: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0015024791937321424
    2. 'map' → logprob: -6.501502513885498
    3. ',map' → logprob: -16.251502990722656
    4. ' map' → logprob: -17.251502990722656
    5. '(m' → logprob: -19.126502990722656
    6. '.map' → logprob: -19.251502990722656
    7. '(' → logprob: -19.626502990722656
    8. '	map' → logprob: -19.626502990722656
    9. '_map' → logprob: -20.251502990722656
    10. 'append' → logprob: -21.626502990722656

Token 701: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007207724265754223
    2. 'int' → logprob: -7.250720977783203
    3. '[int' → logprob: -11.625720977783203
    4. ',int' → logprob: -14.250720977783203
    5. '=int' → logprob: -14.375720977783203
    6. '<int' → logprob: -15.125720977783203
    7. '(' → logprob: -15.750720977783203
    8. ' int' → logprob: -16.375720977783203
    9. ']int' → logprob: -16.750720977783203
    10. '(input' → logprob: -17.125720977783203

Token 702: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.17330414056777954
    2. '(int' → logprob: -2.0483040809631348
    3. ',input' → logprob: -4.048304080963135
    4. ',' → logprob: -4.923304080963135
    5. ',int' → logprob: -5.673304080963135
    6. 'input' → logprob: -6.923304080963135
    7. 'int' → logprob: -7.673304080963135
    8. '=input' → logprob: -7.798304080963135
    9. '=int' → logprob: -10.048304557800293
    10. '<input' → logprob: -10.423304557800293

Token 703: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004078997299075127
    2. ' input' → logprob: -5.5040788650512695
    3. 'int' → logprob: -14.37907886505127
    4. '(input' → logprob: -17.629079818725586
    5. '=input' → logprob: -20.004079818725586
    6. ',input' → logprob: -20.129079818725586
    7. '<input' → logprob: -20.254079818725586
    8. ' ' → logprob: -21.379079818725586
    9. '_input' → logprob: -21.879079818725586
    10. 'import' → logprob: -22.254079818725586

Token 704: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.1008713702030946e-06
    2. '()' → logprob: -13.125001907348633
    3. ' ().' → logprob: -17.125001907348633
    4. '())' → logprob: -17.375001907348633
    5. '()))' → logprob: -18.625001907348633
    6. '(int' → logprob: -18.750001907348633
    7. '.' → logprob: -19.500001907348633
    8. '(' → logprob: -19.500001907348633
    9. '()[' → logprob: -19.750001907348633
    10. ' .' → logprob: -20.000001907348633

Token 705: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.125
    3. '(split' → logprob: -17.375
    4. 'strip' → logprob: -18.5
    5. 'spl' → logprob: -20.0
    6. ')' → logprob: -21.0
    7. 'rstrip' → logprob: -21.25
    8. 's' → logprob: -21.375
    9. '.split' → logprob: -22.0
    10. '```' → logprob: -22.375

Token 706: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.12746314704418182
    2. '()))
' → logprob: -2.1274631023406982
    3. '()' → logprob: -8.002463340759277
    4. '))' → logprob: -8.877463340759277
    5. '())' → logprob: -10.752463340759277
    6. '(' → logprob: -11.127463340759277
    7. '()))
' → logprob: -11.752463340759277
    8. '()));' → logprob: -12.252463340759277
    9. '()))

' → logprob: -12.502463340759277
    10. '()
' → logprob: -12.752463340759277

Token 707: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018994826823472977
    2. 'grid' → logprob: -6.751899719238281
    3. '   ' → logprob: -7.376899719238281
    4. ')' → logprob: -9.626899719238281
    5. '(grid' → logprob: -11.126899719238281
    6. ' grid' → logprob: -12.126899719238281
    7. '<|end|>' → logprob: -12.251899719238281
    8. '           ' → logprob: -13.126899719238281
    9. '	grid' → logprob: -13.501899719238281
    10. '.grid' → logprob: -13.626899719238281

Token 708: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -4.246537173457909e-06
    2. ' grid' → logprob: -12.625003814697266
    3. '   ' → logprob: -14.125003814697266
    4. '       ' → logprob: -16.875003814697266
    5. '.grid' → logprob: -17.750003814697266
    6. '	grid' → logprob: -18.000003814697266
    7. 'continue' → logprob: -18.250003814697266
    8. '(grid' → logprob: -18.625003814697266
    9. '
' → logprob: -18.875003814697266
    10. ' ' → logprob: -19.375003814697266

Token 709: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.4140441635390744e-05
    2. '.' → logprob: -11.500014305114746
    3. 'append' → logprob: -13.125014305114746
    4. '.extend' → logprob: -13.375014305114746
    5. '.app' → logprob: -15.875014305114746
    6. '.Append' → logprob: -16.62501335144043
    7. '.ap' → logprob: -17.12501335144043
    8. ' .' → logprob: -17.25001335144043
    9. '_append' → logprob: -17.25001335144043
    10. ').' → logprob: -17.37501335144043

Token 710: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -3.173704271830502e-06
    2. ' (' → logprob: -13.12500286102295
    3. '(' → logprob: -14.12500286102295
    4. 'row' → logprob: -14.87500286102295
    5. ' row' → logprob: -17.500003814697266
    6. '(line' → logprob: -17.625003814697266
    7. ',row' → logprob: -17.625003814697266
    8. '[row' → logprob: -18.875003814697266
    9. '(rows' → logprob: -19.375003814697266
    10. '=row' → logprob: -19.625003814697266

Token 711: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011735594598576427
    2. ')
' → logprob: -6.876173496246338
    3. '   ' → logprob: -8.876173973083496
    4. ')

' → logprob: -14.126173973083496
    5. ')
' → logprob: -15.876173973083496
    6. ' )' → logprob: -16.62617301940918
    7. '))' → logprob: -17.00117301940918
    8. ')`' → logprob: -17.62617301940918
    9. ')}' → logprob: -17.87617301940918
    10. '       ' → logprob: -18.37617301940918

Token 712: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5022482872009277
    2. '   ' → logprob: -1.0022482872009277
    3. '#' → logprob: -4.002248287200928
    4. 'ways' → logprob: -5.502248287200928
    5. 'total' → logprob: -6.127248287200928
    6. 'finish' → logprob: -6.502248287200928
    7. 'def' → logprob: -7.877248287200928
    8. '```' → logprob: -8.002248764038086
    9. '
' → logprob: -8.502248764038086
    10. ' dp' → logprob: -9.002248764038086

Token 713: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.17097406089305878
    2. 'finish' → logprob: -2.670974016189575
    3. 'ways' → logprob: -3.420974016189575
    4. 'total' → logprob: -3.545974016189575
    5. 'finished' → logprob: -4.920974254608154
    6. 'result' → logprob: -5.045974254608154
    7. '#' → logprob: -5.045974254608154
    8. 'res' → logprob: -6.295974254608154
    9. 'count' → logprob: -7.045974254608154
    10. 'ans' → logprob: -7.045974254608154

Token 714: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06199311837553978
    2. '=' → logprob: -2.81199312210083
    3. '[' → logprob: -11.061992645263672
    4. '=[' → logprob: -12.186992645263672
    5. '=[[' → logprob: -13.436992645263672
    6. ' ' → logprob: -13.936992645263672
    7. '   ' → logprob: -14.436992645263672
    8. '```' → logprob: -14.686992645263672
    9. ')' → logprob: -14.936992645263672
    10. ']' → logprob: -15.311992645263672

Token 715: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -8.537868779967539e-06
    2. '[' → logprob: -12.250008583068848
    3. ' [[' → logprob: -12.500008583068848
    4. '   ' → logprob: -17.37500762939453
    5. '([[' → logprob: -19.25000762939453
    6. '0' → logprob: -20.12500762939453
    7. '[(' → logprob: -20.75000762939453
    8. '=[[' → logprob: -21.50000762939453
    9. '[
' → logprob: -21.62500762939453
    10. '[Y' → logprob: -21.87500762939453

Token 716: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'False' → logprob: -17.75
    4. '[' → logprob: -18.5
    5. '   ' → logprob: -18.9375
    6. '
' → logprob: -19.125
    7. '۰' → logprob: -19.5625
    8. 'int' → logprob: -19.75
    9. 'false' → logprob: -20.125
    10. '(' → logprob: -20.5625

Token 717: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.04089976102113724
    2. ']*(' → logprob: -3.2908997535705566
    3. ' for' → logprob: -6.665899753570557
    4. ']' → logprob: -6.665899753570557
    5. 'for' → logprob: -9.165900230407715
    6. '   ' → logprob: -9.540900230407715
    7. '*' → logprob: -9.540900230407715
    8. '*(' → logprob: -10.040900230407715
    9. ')*' → logprob: -12.040900230407715
    10. ']+' → logprob: -12.915900230407715

Token 718: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0001129602751461789
    2. '(X' → logprob: -9.125112533569336
    3. ' X' → logprob: -13.000112533569336
    4. '   ' → logprob: -13.375112533569336
    5. '[X' → logprob: -16.875112533569336
    6. '```' → logprob: -17.375112533569336
    7. '(' → logprob: -17.875112533569336
    8. ' (' → logprob: -17.875112533569336
    9. '       ' → logprob: -18.375112533569336
    10. '           ' → logprob: -18.500112533569336

Token 719: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16034343838691711
    2. ' for' → logprob: -1.9103434085845947
    3. '   ' → logprob: -9.035343170166016
    4. ')' → logprob: -16.785343170166016
    5. '	for' → logprob: -17.535343170166016
    6. '    ' → logprob: -17.910343170166016
    7. ' ' → logprob: -18.035343170166016
    8. '```' → logprob: -18.035343170166016
    9. ']' → logprob: -18.285343170166016
    10. '       ' → logprob: -19.035343170166016

Token 720: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.038513388484716415
    2. ' range' → logprob: -3.913513422012329
    3. ' in' → logprob: -5.03851318359375
    4. 'range' → logprob: -5.16351318359375
    5. '_range' → logprob: -5.78851318359375
    6. ' _' → logprob: -6.16351318359375
    7. 'in' → logprob: -8.16351318359375
    8. '_Y' → logprob: -9.28851318359375
    9. '_y' → logprob: -10.28851318359375
    10. '_in' → logprob: -11.53851318359375

Token 721: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14871948957443237
    2. ' range' → logprob: -2.648719549179077
    3. ' in' → logprob: -2.898719549179077
    4. 'in' → logprob: -4.398719310760498
    5. '(range' → logprob: -9.773719787597656
    6. '(Y' → logprob: -12.898719787597656
    7. '(' → logprob: -14.648719787597656
    8. 'Y' → logprob: -15.773719787597656
    9. '(y' → logprob: -15.773719787597656
    10. ' ' → logprob: -16.023719787597656

Token 722: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1271272599697113
    2. ' range' → logprob: -2.127127170562744
    3. '(Y' → logprob: -9.002127647399902
    4. '(range' → logprob: -9.502127647399902
    5. '   ' → logprob: -14.752127647399902
    6. '[Y' → logprob: -14.877127647399902
    7. 'Y' → logprob: -16.002126693725586
    8. '_range' → logprob: -16.752126693725586
    9. '	range' → logprob: -16.752126693725586
    10. 'Range' → logprob: -17.002126693725586

Token 723: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.00038086410495452583
    2. 'Y' → logprob: -7.875380992889404
    3. '   ' → logprob: -15.500380516052246
    4. ' (' → logprob: -15.750380516052246
    5. '(y' → logprob: -15.750380516052246
    6. ' Y' → logprob: -16.000381469726562
    7. '(' → logprob: -16.125381469726562
    8. '[Y' → logprob: -17.000381469726562
    9. '((' → logprob: -18.250381469726562
    10. '	Y' → logprob: -18.375381469726562

Token 724: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.306760805164231e-05
    2. ' +' → logprob: -11.62501335144043
    3. ')]' → logprob: -12.87501335144043
    4. '+
' → logprob: -13.75001335144043
    5. '   ' → logprob: -15.87501335144043
    6. ')' → logprob: -16.50001335144043
    7. '2' → logprob: -16.75001335144043
    8. ')+' → logprob: -17.25001335144043
    9. '+)' → logprob: -17.50001335144043
    10. ')]
' → logprob: -17.87501335144043

Token 725: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2014152854681015
    2. '3' → logprob: -1.7014153003692627
    3. ' ' → logprob: -13.951415061950684
    4. '4' → logprob: -14.701415061950684
    5. '   ' → logprob: -15.201415061950684
    6. '
' → logprob: -15.326415061950684
    7. '```' → logprob: -16.451416015625
    8. '  ' → logprob: -17.638916015625
    9. '``' → logprob: -17.763916015625
    10. '`' → logprob: -17.826416015625

Token 726: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.580929347255733e-05
    2. ' )' → logprob: -11.750016212463379
    3. ']' → logprob: -12.750016212463379
    4. ')]
' → logprob: -12.875016212463379
    5. ')' → logprob: -13.125016212463379
    6. ' ]' → logprob: -15.875016212463379
    7. ')]

' → logprob: -16.500015258789062
    8. '   ' → logprob: -16.750015258789062
    9. ')]
' → logprob: -17.250015258789062
    10. '))' → logprob: -17.250015258789062

Token 727: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028998551424592733
    2. 'for' → logprob: -7.127899646759033
    3. 'total' → logprob: -7.252899646759033
    4. 'ways' → logprob: -7.627899646759033
    5. 'finish' → logprob: -8.002900123596191
    6. '    
' → logprob: -8.127900123596191
    7. ' for' → logprob: -9.502900123596191
    8. '
' → logprob: -9.627900123596191
    9. 'start' → logprob: -10.877900123596191
    10. '  
' → logprob: -10.877900123596191

Token 728: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.14289651811122894
    2. 'ways' → logprob: -2.8928964138031006
    3. '   ' → logprob: -3.1428964138031006
    4. 'finish' → logprob: -4.01789665222168
    5. 'total' → logprob: -4.76789665222168
    6. 'start' → logprob: -5.14289665222168
    7. 'dp' → logprob: -7.01789665222168
    8. '#' → logprob: -7.76789665222168
    9. ' for' → logprob: -8.14289665222168
    10. 'finished' → logprob: -8.39289665222168

Token 729: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.988221684878226e-06
    2. ' x' → logprob: -12.000006675720215
    3. 'i' → logprob: -14.750006675720215
    4. 'y' → logprob: -15.500006675720215
    5. '```' → logprob: -17.50000762939453
    6. '   ' → logprob: -17.62500762939453
    7. '0' → logprob: -18.12500762939453
    8. '_x' → logprob: -18.75000762939453
    9. 'idx' → logprob: -19.50000762939453
    10. '	x' → logprob: -19.75000762939453

Token 730: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012547565624117851
    2. 'in' → logprob: -4.387547492980957
    3. ')' → logprob: -11.137547492980957
    4. ' ' → logprob: -11.887547492980957
    5. '   ' → logprob: -11.887547492980957
    6. 'In' → logprob: -13.012547492980957
    7. ',' → logprob: -13.637547492980957
    8. '```' → logprob: -13.637547492980957
    9. '  ' → logprob: -13.887547492980957
    10. '[' → logprob: -14.262547492980957

Token 731: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015023599844425917
    2. ' range' → logprob: -6.501502513885498
    3. '   ' → logprob: -19.501502990722656
    4. '(range' → logprob: -19.876502990722656
    5. '0' → logprob: -21.001502990722656
    6. '[' → logprob: -21.251502990722656
    7. '```' → logprob: -21.376502990722656
    8. 'x' → logprob: -21.876502990722656
    9. '	range' → logprob: -22.001502990722656
    10. 'X' → logprob: -22.251502990722656

Token 732: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.02975245751440525
    2. 'X' → logprob: -3.529752492904663
    3. '[X' → logprob: -13.904752731323242
    4. '(' → logprob: -14.154752731323242
    5. '   ' → logprob: -15.404752731323242
    6. ' X' → logprob: -16.279752731323242
    7. '(len' → logprob: -17.279752731323242
    8. '	X' → logprob: -17.904752731323242
    9. ')' → logprob: -18.154752731323242
    10. 'len' → logprob: -18.154752731323242

Token 733: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4743146002292633
    2. '):' → logprob: -0.9743145704269409
    3. '   ' → logprob: -8.59931468963623
    4. ')' → logprob: -10.84931468963623
    5. '):
' → logprob: -10.97431468963623
    6. ' ):' → logprob: -12.22431468963623
    7. ' ):
' → logprob: -12.84931468963623
    8. ' ' → logprob: -13.09931468963623
    9. ':' → logprob: -13.22431468963623
    10. 'if' → logprob: -13.34931468963623

Token 734: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018327576981391758
    2. ':' → logprob: -8.87518310546875
    3. '<|end|>' → logprob: -10.75018310546875
    4. ' if' → logprob: -12.00018310546875
    5. '[' → logprob: -12.00018310546875
    6. ',' → logprob: -13.62518310546875
    7. '```' → logprob: -13.75018310546875
    8. ':
' → logprob: -13.87518310546875
    9. ' =' → logprob: -14.12518310546875
    10. '   ' → logprob: -14.12518310546875

Token 735: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6681564450263977
    2. '       ' → logprob: -0.9181564450263977
    3. 'if' (adapté à ' if') → logprob: -2.918156385421753
    4. 'dp' → logprob: -3.918156385421753
    5. ' dp' → logprob: -4.293156623840332
    6. '   ' → logprob: -7.918156623840332
    7. '```' → logprob: -10.043156623840332
    8. '	dp' → logprob: -10.293156623840332
    9. '	if' → logprob: -11.168156623840332
    10. '_dp' → logprob: -11.168156623840332

Token 736: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.1602395623922348
    2. ' grid' → logprob: -1.910239577293396
    3. '   ' → logprob: -11.535239219665527
    4. '(grid' → logprob: -12.785239219665527
    5. '	grid' → logprob: -13.535239219665527
    6. ' ' → logprob: -15.160239219665527
    7. 'x' → logprob: -15.160239219665527
    8. '.grid' → logprob: -15.410239219665527
    9. '0' → logprob: -15.410239219665527
    10. '_grid' → logprob: -16.035240173339844

Token 737: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011054771952331066
    2. '0' → logprob: -4.511054992675781
    3. '   ' → logprob: -12.511054992675781
    4. ' ' → logprob: -13.386054992675781
    5. '[
' → logprob: -14.761054992675781
    6. '```' → logprob: -14.761054992675781
    7. ' [' → logprob: -15.136054992675781
    8. '][' → logprob: -15.261054992675781
    9. '(' → logprob: -16.26105499267578
    10. '=' → logprob: -16.51105499267578

Token 738: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -12.250008583068848
    3. '[' → logprob: -12.750008583068848
    4. '   ' → logprob: -14.875008583068848
    5. '```' → logprob: -15.875008583068848
    6. '#' → logprob: -18.12500762939453
    7. '][' → logprob: -18.12500762939453
    8. '
' → logprob: -18.18750762939453
    9. '       ' → logprob: -18.25000762939453
    10. '`' → logprob: -18.31250762939453

Token 739: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00013250234769657254
    2. '[x' → logprob: -9.00013256072998
    3. ']' → logprob: -12.50013256072998
    4. '   ' → logprob: -13.12513256072998
    5. ' ][' → logprob: -13.12513256072998
    6. '[' → logprob: -14.87513256072998
    7. ')[' → logprob: -14.87513256072998
    8. ' ' → logprob: -16.250131607055664
    9. '       ' → logprob: -16.625131607055664
    10. '[y' → logprob: -16.875131607055664

Token 740: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. ' x' → logprob: -14.875000953674316
    3. '[x' → logprob: -15.500000953674316
    4. '][' → logprob: -18.5
    5. '```' → logprob: -18.5
    6. '
' → logprob: -18.875
    7. '   ' → logprob: -18.875
    8. '"x' → logprob: -19.375
    9. '	x' → logprob: -19.5
    10. ' ' → logprob: -19.75

Token 741: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003936152206733823
    2. ']==' → logprob: -7.875393390655518
    3. '==' → logprob: -11.375393867492676
    4. ' ]' → logprob: -13.375393867492676
    5. ' ==' → logprob: -14.625393867492676
    6. '[' → logprob: -17.00039291381836
    7. ')' → logprob: -18.12539291381836
    8. '```' → logprob: -18.62539291381836
    9. '']' → logprob: -18.87539291381836
    10. ']=' → logprob: -19.37539291381836

Token 742: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07889397442340851
    2. ' ==' → logprob: -2.5788938999176025
    3. ']==' → logprob: -12.578893661499023
    4. '```' → logprob: -15.203893661499023
    5. '0' → logprob: -15.703893661499023
    6. ']' → logprob: -15.953893661499023
    7. '=' → logprob: -16.078893661499023
    8. '[' → logprob: -16.328893661499023
    9. ')==' → logprob: -16.703893661499023
    10. '==
' → logprob: -17.328893661499023

Token 743: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.750431060791016
    4. '```' → logprob: -18.250431060791016
    5. '==' → logprob: -19.437931060791016
    6. '  ' → logprob: -19.500431060791016
    7. '۰' → logprob: -19.687931060791016
    8. '00' → logprob: -19.937931060791016
    9. '=' → logprob: -19.937931060791016
    10. ' ' → logprob: -20.000431060791016

Token 744: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.750036239624023
    4. '```' → logprob: -17.500036239624023
    5. '۰' → logprob: -19.562536239624023
    6. '00' → logprob: -19.687536239624023
    7. '=' → logprob: -19.875036239624023
    8. '  ' → logprob: -20.062536239624023
    9. ' ' → logprob: -20.312536239624023
    10. '
' → logprob: -20.437536239624023

Token 745: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04862256348133087
    2. ':' → logprob: -3.0486226081848145
    3. '   ' → logprob: -11.423622131347656
    4. '       ' → logprob: -11.548622131347656
    5. '):
' → logprob: -11.798622131347656
    6. ':
' → logprob: -12.423622131347656
    7. '           ' → logprob: -13.548622131347656
    8. ' or' → logprob: -14.548622131347656
    9. ' :
' → logprob: -15.173622131347656
    10. 'dp' → logprob: -15.548622131347656

Token 746: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006846087984740734
    2. ':' → logprob: -5.506845951080322
    3. ':
' → logprob: -6.881845951080322
    4. '       ' → logprob: -7.131845951080322
    5. ' dp' → logprob: -7.631845951080322
    6. 'dp' → logprob: -7.881845951080322
    7. ' or' → logprob: -10.75684642791748
    8. '          ' → logprob: -11.38184642791748
    9. '(dp' → logprob: -11.63184642791748
    10. '   ' → logprob: -11.75684642791748

Token 747: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.004078401252627373
    2. ' dp' → logprob: -5.504078388214111
    3. '           ' → logprob: -17.629077911376953
    4. '	dp' → logprob: -17.629077911376953
    5. '   ' → logprob: -18.504077911376953
    6. '_dp' → logprob: -19.004077911376953
    7. '(dp' → logprob: -19.129077911376953
    8. '
' → logprob: -20.129077911376953
    9. '       ' → logprob: -21.004077911376953
    10. '```' → logprob: -21.254077911376953

Token 748: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.627176768844947e-05
    2. '0' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.875096321105957
    4. '1' → logprob: -17.37509536743164
    5. '```' → logprob: -17.37509536743164
    6. '
' → logprob: -17.87509536743164
    7. ' ' → logprob: -18.00009536743164
    8. '﻿' → logprob: -18.25009536743164
    9. '[
' → logprob: -18.25009536743164
    10. ' [' → logprob: -18.62509536743164

Token 749: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.25
    3. '2' → logprob: -17.0
    4. '[' → logprob: -17.375
    5. ' ' → logprob: -18.375
    6. '   ' → logprob: -18.375
    7. '```' → logprob: -18.375
    8. '０' → logprob: -19.25
    9. '۰' → logprob: -19.3125
    10. '`' → logprob: -21.125

Token 750: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.029815176501870155
    2. '[x' → logprob: -3.529815196990967
    3. ']' → logprob: -10.779814720153809
    4. ' ][' → logprob: -10.904814720153809
    5. '[' → logprob: -11.904814720153809
    6. '   ' → logprob: -12.154814720153809
    7. '}[' → logprob: -12.404814720153809
    8. ')[' → logprob: -12.529814720153809
    9. '>[' → logprob: -12.904814720153809
    10. ' [' → logprob: -13.904814720153809

Token 751: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. ' x' → logprob: -17.25
    3. '[x' → logprob: -19.25
    4. '"x' → logprob: -21.625
    5. ')x' → logprob: -21.625
    6. '	x' → logprob: -21.75
    7. '   ' → logprob: -22.125
    8. '```' → logprob: -22.875
    9. '
' → logprob: -23.375
    10. ''x' → logprob: -23.875

Token 752: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03164399415254593
    2. '=' → logprob: -3.531644105911255
    3. ']=' → logprob: -6.281643867492676
    4. ' =' → logprob: -11.281643867492676
    5. ' ]' → logprob: -12.281643867492676
    6. ']+=' → logprob: -13.031643867492676
    7. ')' → logprob: -13.406643867492676
    8. '   ' → logprob: -15.156643867492676
    9. '+=' → logprob: -16.281644821166992
    10. ')=' → logprob: -17.406644821166992

Token 753: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001502598519437015
    2. ' =' → logprob: -6.501502513885498
    3. '+=' → logprob: -15.376502990722656
    4. ' +=' → logprob: -18.626502990722656
    5. '.=' → logprob: -21.001502990722656
    6. '=
' → logprob: -22.501502990722656
    7. '=

' → logprob: -22.751502990722656
    8. ']=' → logprob: -23.001502990722656
    9. '[' → logprob: -23.251502990722656
    10. '＝' → logprob: -23.501502990722656

Token 754: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '   ' → logprob: -21.125
    4. '```' → logprob: -23.5
    5. '１' → logprob: -24.125
    6. '۱' → logprob: -24.25
    7. '0' → logprob: -24.625
    8. '' → logprob: -25.25
    9. '
' → logprob: -25.5
    10. '`' → logprob: -25.8125

Token 755: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.5
    3. '   ' → logprob: -24.125
    4. '```' → logprob: -24.25
    5. '۱' → logprob: -24.375
    6. '0' → logprob: -24.5
    7. '１' → logprob: -24.5
    8. '[' → logprob: -25.0
    9. '{' → logprob: -25.25
    10. '' → logprob: -25.5

Token 756: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.602024900028482e-05
    2. 'for' → logprob: -9.750085830688477
    3. '```' → logprob: -11.375085830688477
    4. ' for' → logprob: -11.500085830688477
    5. '<|end|>' → logprob: -13.125085830688477
    6. '    
' → logprob: -13.250085830688477
    7. '
' → logprob: -14.000085830688477
    8. ')' → logprob: -15.000085830688477
    9. '  ' → logprob: -15.000085830688477
    10. '       ' → logprob: -15.375085830688477

Token 757: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7008503079414368
    2. 'for' → logprob: -0.7008503079414368
    3. 'total' → logprob: -5.700850486755371
    4. ' for' → logprob: -5.700850486755371
    5. 'finish' → logprob: -7.325850486755371
    6. '```' → logprob: -8.325850486755371
    7. 'ways' → logprob: -10.575850486755371
    8. ' total' → logprob: -10.825850486755371
    9. 'finished' → logprob: -12.075850486755371
    10. 'count' → logprob: -12.200850486755371

Token 758: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.7755875129951164e-05
    2. '   ' → logprob: -10.12504768371582
    3. ' for' → logprob: -12.62504768371582
    4. 'total' → logprob: -12.75004768371582
    5. 'finish' → logprob: -13.62504768371582
    6. 'finished' → logprob: -16.00004768371582
    7. 'ways' → logprob: -16.37504768371582
    8. 'from' → logprob: -16.87504768371582
    9. '```' → logprob: -17.12504768371582
    10. 'result' → logprob: -18.12504768371582

Token 759: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365318849682808
    2. '=' → logprob: -3.4086532592773438
    3. '   ' → logprob: -12.533653259277344
    4. ' ' → logprob: -13.033653259277344
    5. ':' → logprob: -14.533653259277344
    6. '  ' → logprob: -14.908653259277344
    7. '    ' → logprob: -15.908653259277344
    8. 'total' → logprob: -16.158653259277344
    9. ')' → logprob: -16.283653259277344
    10. ' =
' → logprob: -16.408653259277344

Token 760: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.125024795532227
    4. '[' → logprob: -20.875024795532227
    5. '=' → logprob: -21.375024795532227
    6. ' ' → logprob: -21.625024795532227
    7. '  ' → logprob: -21.875024795532227
    8. '۰' → logprob: -21.875024795532227
    9. '```' → logprob: -22.750024795532227
    10. 'int' → logprob: -23.125024795532227

Token 761: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '[' → logprob: -18.25
    4. 'int' → logprob: -20.0
    5. '1' → logprob: -20.625
    6. 'total' → logprob: -20.875
    7. '۰' → logprob: -20.875
    8. 'sum' → logprob: -21.375
    9. '[]' → logprob: -21.375
    10. 's' → logprob: -21.375

Token 762: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00028612653841264546
    2. 'for' → logprob: -8.250286102294922
    3. ' for' → logprob: -10.750286102294922
    4. '
' → logprob: -12.750286102294922
    5. '```' → logprob: -15.375286102294922
    6. '    
' → logprob: -15.875286102294922
    7. '	for' → logprob: -16.500286102294922
    8. '       ' → logprob: -17.250286102294922
    9. ',' → logprob: -17.250286102294922
    10. '<|end|>' → logprob: -18.000286102294922

Token 763: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004293630365282297
    2. 'for' → logprob: -5.504293441772461
    3. ' for' → logprob: -8.504293441772461
    4. '
' → logprob: -11.879293441772461
    5. '```' → logprob: -12.254293441772461
    6. '    
' → logprob: -14.379293441772461
    7. '	for' → logprob: -15.254293441772461
    8. ',' → logprob: -17.00429344177246
    9. '       ' → logprob: -17.00429344177246
    10. ' ' → logprob: -17.87929344177246

Token 764: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0017979926196858287
    2. '   ' → logprob: -6.501798152923584
    3. ' for' → logprob: -8.126797676086426
    4. '
' → logprob: -16.376798629760742
    5. ' ' → logprob: -16.876798629760742
    6. '```' → logprob: -17.751798629760742
    7. '	for' → logprob: -18.001798629760742
    8. 'from' → logprob: -19.001798629760742
    9. '  ' → logprob: -19.126798629760742
    10. '    
' → logprob: -19.251798629760742

Token 765: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47407761216163635
    2. ' y' → logprob: -0.974077582359314
    3. 'Y' → logprob: -14.849077224731445
    4. '_y' → logprob: -16.224077224731445
    5. '	y' → logprob: -16.599077224731445
    6. '(y' → logprob: -17.224077224731445
    7. ' Y' → logprob: -17.474077224731445
    8. '   ' → logprob: -18.474077224731445
    9. 'x' → logprob: -19.099077224731445
    10. '`' → logprob: -19.349077224731445

Token 766: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006733845453709364
    2. 'in' → logprob: -5.0067338943481445
    3. '   ' → logprob: -12.256733894348145
    4. ',' → logprob: -12.381733894348145
    5. ')' → logprob: -12.881733894348145
    6. '[' → logprob: -13.881733894348145
    7. ' ' → logprob: -14.006733894348145
    8. 'y' → logprob: -14.256733894348145
    9. ' y' → logprob: -14.256733894348145
    10. '0' → logprob: -14.506733894348145

Token 767: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031790214125066996
    2. ' range' → logprob: -5.75317907333374
    3. '0' → logprob: -13.878178596496582
    4. '(range' → logprob: -15.128178596496582
    5. '[' → logprob: -16.5031795501709
    6. ' ' → logprob: -16.8781795501709
    7. '	range' → logprob: -18.8781795501709
    8. ' xrange' → logprob: -18.8781795501709
    9. 'Y' → logprob: -19.1281795501709
    10. 'y' → logprob: -19.3781795501709

Token 768: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.2519892156124115
    2. 'Y' → logprob: -1.5019892454147339
    3. '   ' → logprob: -10.126989364624023
    4. ' Y' → logprob: -11.876989364624023
    5. '[Y' → logprob: -12.501989364624023
    6. '(' → logprob: -12.626989364624023
    7. '(y' → logprob: -13.376989364624023
    8. '0' → logprob: -13.876989364624023
    9. '1' → logprob: -14.251989364624023
    10. 'y' → logprob: -14.376989364624023

Token 769: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.44679388403892517
    2. '):
' → logprob: -1.0717939138412476
    3. '+' → logprob: -4.071794033050537
    4. ')' → logprob: -7.821794033050537
    5. '   ' → logprob: -7.821794033050537
    6. ' +' → logprob: -10.446793556213379
    7. '-' → logprob: -11.196793556213379
    8. ' ):' → logprob: -11.821793556213379
    9. ':' → logprob: -11.946793556213379
    10. '):
' → logprob: -12.196793556213379

Token 770: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016432604752480984
    2. ' for' → logprob: -9.125164031982422
    3. 'for' → logprob: -10.375164031982422
    4. '   ' → logprob: -10.875164031982422
    5. '```' → logprob: -12.875164031982422
    6. '	   ' → logprob: -13.375164031982422
    7. '	for' → logprob: -14.375164031982422
    8. '	' → logprob: -15.625164031982422
    9. '    ' → logprob: -16.875164031982422
    10. ',' → logprob: -17.000164031982422

Token 771: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038585301488637924
    2. ' for' → logprob: -3.2885851860046387
    3. '   ' → logprob: -7.538585186004639
    4. '	for' → logprob: -11.913585662841797
    5. '       ' → logprob: -12.288585662841797
    6. ' ' → logprob: -15.413585662841797
    7. '```' → logprob: -17.038585662841797
    8. '    ' → logprob: -18.913585662841797
    9. '  ' → logprob: -19.038585662841797
    10. '        
' → logprob: -20.163585662841797

Token 772: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024756586644798517
    2. ' x' → logprob: -6.002475738525391
    3. 'X' → logprob: -17.12747573852539
    4. 'y' → logprob: -18.50247573852539
    5. '0' → logprob: -18.87747573852539
    6. 'range' → logprob: -20.12747573852539
    7. '	x' → logprob: -20.25247573852539
    8. ' ' → logprob: -20.87747573852539
    9. '_x' → logprob: -21.25247573852539
    10. '```' → logprob: -21.25247573852539

Token 773: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.348568856716156
    2. 'in' → logprob: -1.2235689163208008
    3. ')' → logprob: -10.0985689163208
    4. '(x' → logprob: -10.3485689163208
    5. '(' → logprob: -10.8485689163208
    6. ',' → logprob: -12.0985689163208
    7. '(y' → logprob: -12.3485689163208
    8. '[' → logprob: -12.7235689163208
    9. '   ' → logprob: -12.7235689163208
    10. ' ' → logprob: -12.7235689163208

Token 774: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019287518225610256
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -16.626928329467773
    4. ' ' → logprob: -22.251928329467773
    5. '   ' → logprob: -23.001928329467773
    6. '
' → logprob: -23.376928329467773
    7. 'rang' → logprob: -23.751928329467773
    8. '(X' → logprob: -24.251928329467773
    9. 'ran' → logprob: -24.251928329467773
    10. '(' → logprob: -24.376928329467773

Token 775: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -2.935296834039036e-06
    2. 'range' → logprob: -13.50000286102295
    3. 'X' → logprob: -13.75000286102295
    4. '(' → logprob: -15.87500286102295
    5. ' range' → logprob: -15.87500286102295
    6. '(range' → logprob: -16.375003814697266
    7. '[X' → logprob: -17.000003814697266
    8. ' (' → logprob: -17.625003814697266
    9. 'Range' → logprob: -18.000003814697266
    10. '(x' → logprob: -18.000003814697266

Token 776: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20153525471687317
    2. '):' → logprob: -1.7015352249145508
    3. '       ' → logprob: -10.20153522491455
    4. ':' → logprob: -10.32653522491455
    5. '           ' → logprob: -11.07653522491455
    6. '):
' → logprob: -11.07653522491455
    7. '   ' → logprob: -11.57653522491455
    8. ':
' → logprob: -12.70153522491455
    9. ')' → logprob: -12.95153522491455
    10. '):

' → logprob: -13.07653522491455

Token 777: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.954393079970032e-05
    2. '	       ' → logprob: -10.500049591064453
    3. ' if' → logprob: -11.625049591064453
    4. '       ' → logprob: -11.875049591064453
    5. '               ' → logprob: -13.500049591064453
    6. '		' → logprob: -13.750049591064453
    7. '   ' → logprob: -14.000049591064453
    8. '```' → logprob: -14.750049591064453
    9. 'if' → logprob: -14.875049591064453
    10. ',' → logprob: -15.125049591064453

Token 778: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12206383794546127
    2. 'if' (adapté à ' if') → logprob: -2.3720638751983643
    3. ' if' → logprob: -3.9970638751983643
    4. '               ' → logprob: -5.747063636779785
    5. '		' → logprob: -10.622063636779785
    6. '	if' → logprob: -11.497063636779785
    7. '	       ' → logprob: -11.747063636779785
    8. 'token' → logprob: -12.372063636779785
    9. '   ' → logprob: -12.622063636779785
    10. '       ' → logprob: -13.497063636779785

Token 779: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00861456897109747
    2. ' dp' → logprob: -4.758614540100098
    3. '	dp' → logprob: -18.508615493774414
    4. '           ' → logprob: -18.633615493774414
    5. '(dp' → logprob: -18.633615493774414
    6. '_dp' → logprob: -19.758615493774414
    7. '               ' → logprob: -21.008615493774414
    8. '0' → logprob: -22.508615493774414
    9. '.dp' → logprob: -22.633615493774414
    10. 'd' → logprob: -23.133615493774414

Token 780: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.650518920039758e-06
    2. 'y' → logprob: -12.750003814697266
    3. ' [' → logprob: -14.875003814697266
    4. '[' → logprob: -15.750003814697266
    5. '][' → logprob: -16.750003814697266
    6. '```' → logprob: -17.375003814697266
    7. '[Y' → logprob: -17.500003814697266
    8. ' y' → logprob: -17.750003814697266
    9. '   ' → logprob: -17.750003814697266
    10. ')[' → logprob: -18.500003814697266

Token 781: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002835780382156372
    2. '[x' → logprob: -5.877835750579834
    3. ' ][' → logprob: -11.252836227416992
    4. '   ' → logprob: -11.877836227416992
    5. ']' → logprob: -12.252836227416992
    6. '[' → logprob: -12.752836227416992
    7. '[y' → logprob: -13.252836227416992
    8. '       ' → logprob: -15.627836227416992
    9. '>[' → logprob: -16.252836227416992
    10. '```' → logprob: -16.252836227416992

Token 782: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. ' x' → logprob: -14.875000953674316
    3. '0' → logprob: -15.125000953674316
    4. '[x' → logprob: -17.625
    5. '```' → logprob: -20.75
    6. '[' → logprob: -21.125
    7. '"x' → logprob: -21.5
    8. ']' → logprob: -21.5
    9. ')x' → logprob: -21.625
    10. '][' → logprob: -21.625

Token 783: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.062446895986795425
    2. ' ==' → logprob: -2.8124468326568604
    3. ']==' → logprob: -8.062446594238281
    4. ')' → logprob: -9.687446594238281
    5. ']' → logprob: -10.062446594238281
    6. '>' → logprob: -10.312446594238281
    7. ')==' → logprob: -10.687446594238281
    8. '=' → logprob: -13.187446594238281
    9. '   ' → logprob: -15.437446594238281
    10. '===' → logprob: -15.437446594238281

Token 784: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1603192687034607
    2. ' ==' → logprob: -1.9103193283081055
    3. '>' → logprob: -9.410319328308105
    4. ']==' → logprob: -11.910319328308105
    5. ' >' → logprob: -12.910319328308105
    6. '=' → logprob: -13.285319328308105
    7. ')==' → logprob: -13.535319328308105
    8. '===' → logprob: -15.160319328308105
    9. ')' → logprob: -15.910319328308105
    10. '()==' → logprob: -15.910319328308105

Token 785: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.12506675720215
    4. '  ' → logprob: -18.62506675720215
    5. ' ' → logprob: -19.81256675720215
    6. '    ' → logprob: -19.93756675720215
    7. '۰' → logprob: -20.12506675720215
    8. '
' → logprob: -20.18756675720215
    9. '     ' → logprob: -20.31256675720215
    10. '```' → logprob: -20.37506675720215

Token 786: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.375
    4. '۰' → logprob: -21.75
    5. '０' → logprob: -22.75
    6. '  ' → logprob: -22.875
    7. '>' → logprob: -22.875
    8. '00' → logprob: -23.125
    9. '```' → logprob: -23.25
    10. '       ' → logprob: -23.625

Token 787: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10553887486457825
    2. ':' → logprob: -2.730538845062256
    3. ':
' → logprob: -3.355538845062256
    4. '           ' → logprob: -10.230539321899414
    5. ' continue' → logprob: -11.355539321899414
    6. '       ' → logprob: -11.855539321899414
    7. 'continue' → logprob: -12.105539321899414
    8. '                   ' → logprob: -12.480539321899414
    9. '              ' → logprob: -12.605539321899414
    10. '   ' → logprob: -12.855539321899414

Token 788: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015022408915683627
    2. ' continue' → logprob: -6.75150203704834
    3. 'continue' → logprob: -8.37650203704834
    4. '			' → logprob: -9.75150203704834
    5. '           ' → logprob: -11.00150203704834
    6. '	continue' → logprob: -12.00150203704834
    7. '	           ' → logprob: -12.12650203704834
    8. '   ' → logprob: -12.50150203704834
    9. '       ' → logprob: -12.50150203704834
    10. '		       ' → logprob: -13.25150203704834

Token 789: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.20173539221286774
    2. ' continue' → logprob: -1.7017353773117065
    3. '               ' → logprob: -8.451735496520996
    4. '	continue' → logprob: -9.826735496520996
    5. '           ' → logprob: -10.701735496520996
    6. '   ' → logprob: -10.951735496520996
    7. '       ' → logprob: -11.451735496520996
    8. '                   ' → logprob: -12.826735496520996
    9. 'contin' → logprob: -14.451735496520996
    10. '_continue' → logprob: -15.701735496520996

Token 790: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011765359668061137
    2. '       ' → logprob: -7.626176357269287
    3. '               ' → logprob: -7.876176357269287
    4. '		' → logprob: -9.376176834106445
    5. ' for' → logprob: -9.626176834106445
    6. '	       ' → logprob: -10.126176834106445
    7. '<|end|>' → logprob: -10.251176834106445
    8. '   ' → logprob: -10.626176834106445
    9. 'for' → logprob: -11.376176834106445
    10. '<|end|>' → logprob: -12.001176834106445

Token 791: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006224881508387625
    2. '               ' → logprob: -8.125622749328613
    3. '       ' → logprob: -9.125622749328613
    4. ' for' → logprob: -9.125622749328613
    5. '```' → logprob: -10.250622749328613
    6. 'for' → logprob: -10.375622749328613
    7. '   ' → logprob: -10.625622749328613
    8. '	       ' → logprob: -12.250622749328613
    9. '            ' → logprob: -12.750622749328613
    10. '		' → logprob: -13.000622749328613

Token 792: ' ways' (ID: 6984)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5985147356987
    2. '           ' → logprob: -0.8485147356987
    3. '#' → logprob: -4.098514556884766
    4. ' for' → logprob: -5.223514556884766
    5. '```' → logprob: -9.348514556884766
    6. ' #' → logprob: -9.598514556884766
    7. '   ' → logprob: -10.223514556884766
    8. '       ' → logprob: -10.348514556884766
    9. '               ' → logprob: -10.598514556884766
    10. 'if' → logprob: -10.598514556884766

Token 793: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31421568989753723
    2. ' =' → logprob: -1.3142156600952148
    3. '           ' → logprob: -8.314215660095215
    4. '<|end|>' → logprob: -8.314215660095215
    5. 'for' → logprob: -8.689215660095215
    6. ')' → logprob: -9.189215660095215
    7. '            ' → logprob: -10.439215660095215
    8. '               ' → logprob: -10.814215660095215
    9. ' for' → logprob: -10.939215660095215
    10. ' +=' → logprob: -11.189215660095215

Token 794: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0380416102707386
    2. ' dp' → logprob: -3.288041591644287
    3. '           ' → logprob: -16.663042068481445
    4. '	dp' → logprob: -16.663042068481445
    5. '(dp' → logprob: -17.538042068481445
    6. '_dp' → logprob: -19.163042068481445
    7. '               ' → logprob: -19.913042068481445
    8. '.dp' → logprob: -20.413042068481445
    9. 'd' → logprob: -21.538042068481445
    10. '   ' → logprob: -21.538042068481445

Token 795: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.1472419600977446e-06
    2. 'y' → logprob: -14.875000953674316
    3. ' [' → logprob: -15.125000953674316
    4. '][' → logprob: -15.625000953674316
    5. '[' → logprob: -16.000001907348633
    6. '```' → logprob: -17.500001907348633
    7. '           ' → logprob: -18.500001907348633
    8. ')[' → logprob: -18.500001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '[user' → logprob: -19.375001907348633

Token 796: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.5772390961647034
    2. '][' → logprob: -0.8272390961647034
    3. 'y' → logprob: -6.702239036560059
    4. ']' → logprob: -10.452239036560059
    5. '           ' → logprob: -11.202239036560059
    6. '   ' → logprob: -11.952239036560059
    7. ' ][' → logprob: -12.452239036560059
    8. '[' → logprob: -12.952239036560059
    9. '       ' → logprob: -12.952239036560059
    10. ' y' → logprob: -13.202239036560059

Token 797: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026344774290919304
    2. 'x' → logprob: -3.6513447761535645
    3. '[y' → logprob: -10.526344299316406
    4. ' y' → logprob: -11.151344299316406
    5. '[x' → logprob: -13.276344299316406
    6. '][' → logprob: -14.151344299316406
    7. '
' → logprob: -14.901344299316406
    8. '   ' → logprob: -15.651344299316406
    9. '```' → logprob: -15.901344299316406
    10. '	y' → logprob: -16.401344299316406

Token 798: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6719374060630798
    2. '           ' → logprob: -1.2969374656677246
    3. ')' → logprob: -1.9219374656677246
    4. ']' → logprob: -3.0469374656677246
    5. ')
' → logprob: -4.171937465667725
    6. ']
' → logprob: -5.921937465667725
    7. '   ' → logprob: -6.296937465667725
    8. '            
' → logprob: -7.171937465667725
    9. '               ' → logprob: -7.921937465667725
    10. '       ' → logprob: -8.171936988830566

Token 799: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.225939872208983e-05
    2. ' for' → logprob: -11.375032424926758
    3. '       ' → logprob: -12.125032424926758
    4. 'for' → logprob: -12.125032424926758
    5. '   ' → logprob: -12.375032424926758
    6. '               ' → logprob: -13.125032424926758
    7. '```' → logprob: -13.375032424926758
    8. '		' → logprob: -13.500032424926758
    9. '	       ' → logprob: -15.250032424926758
    10. '                   ' → logprob: -16.375032424926758

Token 800: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00031377444975078106
    2. '           ' → logprob: -8.750313758850098
    3. '#' → logprob: -9.125313758850098
    4. ' for' → logprob: -10.000313758850098
    5. '   ' → logprob: -14.250313758850098
    6. '```' → logprob: -15.625313758850098
    7. 'if' → logprob: -16.625314712524414
    8. '            
' → logprob: -16.875314712524414
    9. '	for' → logprob: -17.250314712524414
    10. '
' → logprob: -17.625314712524414

Token 801: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.17981544137001038
    2. ' dx' → logprob: -1.804815411567688
    3. '_dx' → logprob: -11.054815292358398
    4. '```' → logprob: -11.054815292358398
    5. '   ' → logprob: -11.679815292358398
    6. 'd' → logprob: -11.929815292358398
    7. 'dy' → logprob: -12.054815292358398
    8. '(dx' → logprob: -12.054815292358398
    9. '.dx' → logprob: -13.304815292358398
    10. ' dy' → logprob: -13.492315292358398

Token 802: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012514829635620117
    2. 'in' → logprob: -4.387515068054199
    3. ' ' → logprob: -13.0125150680542
    4. '<|end|>' → logprob: -13.6375150680542
    5. '	in' → logprob: -14.0125150680542
    6. 'In' → logprob: -15.2625150680542
    7. ')' → logprob: -16.012514114379883
    8. '_in' → logprob: -16.012514114379883
    9. 'import' → logprob: -16.387514114379883
    10. '```' → logprob: -16.637514114379883

Token 803: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0047384146600961685
    2. ' [-' → logprob: -5.5047383308410645
    3. '-' → logprob: -7.3797383308410645
    4. '(-' → logprob: -10.504738807678223
    5. ' -' → logprob: -12.379738807678223
    6. '[' → logprob: -12.879738807678223
    7. ' (-' → logprob: -13.379738807678223
    8. '{-' → logprob: -16.504737854003906
    9. ' in' → logprob: -16.629737854003906
    10. '[]' → logprob: -17.254737854003906

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '```' → logprob: -19.875
    4. '१' → logprob: -20.9375
    5. '   ' → logprob: -21.125
    6. '１' → logprob: -21.4375
    7. '۱' → logprob: -21.5
    8. '১' → logprob: -21.5625
    9. '`' → logprob: -21.5625
    10. '2' → logprob: -21.875

Token 805: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013298832345753908
    2. ' ,' → logprob: -6.6263298988342285
    3. '0' → logprob: -12.62632942199707
    4. ',
' → logprob: -15.37632942199707
    5. '   ' → logprob: -15.62632942199707
    6. ' ' → logprob: -16.00132942199707
    7. '‌,' → logprob: -16.75132942199707
    8. '```' → logprob: -17.50132942199707
    9. '               ' → logprob: -17.75132942199707
    10. '           ' → logprob: -17.75132942199707

Token 806: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. ',' → logprob: -16.87603187561035
    4. ' ' → logprob: -19.12603187561035
    5. ' ,' → logprob: -20.00103187561035
    6. '۰' → logprob: -20.12603187561035
    7. '   ' → logprob: -21.25103187561035
    8. '```' → logprob: -21.62603187561035
    9. '  ' → logprob: -22.12603187561035
    10. ' 
' → logprob: -22.25103187561035

Token 807: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006268949946388602
    2. ' ,' → logprob: -7.375627040863037
    3. '1' → logprob: -15.625626564025879
    4. ' ' → logprob: -16.500627517700195
    5. ',
' → logprob: -16.500627517700195
    6. ',+' → logprob: -17.625627517700195
    7. '   ' → logprob: -18.875627517700195
    8. '               ' → logprob: -20.000627517700195
    9. ']' → logprob: -20.250627517700195
    10. ',

' → logprob: -20.375627517700195

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '+' → logprob: -20.250015258789062
    4. '   ' → logprob: -22.500015258789062
    5. '１' → logprob: -22.500015258789062
    6. ',' → logprob: -23.625015258789062
    7. ']' → logprob: -24.125015258789062
    8. '```' → logprob: -24.250015258789062
    9. '  ' → logprob: -24.500015258789062
    10. ' ' → logprob: -24.625015258789062

Token 809: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5765925645828247
    2. ']:' → logprob: -0.8265925645828247
    3. '               ' → logprob: -7.826592445373535
    4. ']:
' → logprob: -9.076592445373535
    5. ']' → logprob: -9.576592445373535
    6. ']:

' → logprob: -10.576592445373535
    7. ',' → logprob: -11.076592445373535
    8. '           ' → logprob: -12.076592445373535
    9. '       ' → logprob: -12.326592445373535
    10. '   ' → logprob: -12.576592445373535

Token 810: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033232688438147306
    2. '           ' → logprob: -6.753323078155518
    3. '```' → logprob: -7.753323078155518
    4. '<|end|>' → logprob: -7.878323078155518
    5. '(nx' → logprob: -8.253323554992676
    6. '(n' → logprob: -9.003323554992676
    7. '              ' → logprob: -9.003323554992676
    8. '       ' → logprob: -9.378323554992676
    9. '                   ' → logprob: -9.503323554992676
    10. '                
' → logprob: -9.503323554992676

Token 811: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.012592298910021782
    2. 'nx' (adapté à ' nx') → logprob: -4.387592315673828
    3. '(nx' → logprob: -9.887592315673828
    4. ' nxt' → logprob: -11.387592315673828
    5. '                ' → logprob: -11.887592315673828
    6. '               ' → logprob: -12.262592315673828
    7. '                   ' → logprob: -13.137592315673828
    8. 'n' → logprob: -13.137592315673828
    9. ' ny' → logprob: -13.512592315673828
    10. 'x' → logprob: -13.762592315673828

Token 812: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868732452392578
    2. ' =' → logprob: -1.1368732452392578
    3. '=x' → logprob: -13.136873245239258
    4. '=
' → logprob: -15.636873245239258
    5. ' =
' → logprob: -17.011873245239258
    6. 'x' → logprob: -17.511873245239258
    7. ')' → logprob: -17.636873245239258
    8. '＝' → logprob: -17.761873245239258
    9. '```' → logprob: -18.636873245239258
    10. '=n' → logprob: -19.261873245239258

Token 813: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001170225441455841
    2. ' x' → logprob: -6.7511701583862305
    3. '	x' → logprob: -22.001171112060547
    4. '(x' → logprob: -22.626171112060547
    5. '"x' → logprob: -23.251171112060547
    6. ')x' → logprob: -23.501171112060547
    7. '   ' → logprob: -23.876171112060547
    8. '$x' → logprob: -24.376171112060547
    9. '{x' → logprob: -24.751171112060547
    10. '[x' → logprob: -24.751171112060547

Token 814: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16025419533252716
    2. '+' → logprob: -1.9102542400360107
    3. '+x' → logprob: -10.53525447845459
    4. ' +
' → logprob: -13.03525447845459
    5. '+
' → logprob: -14.91025447845459
    6. '<|end|>' → logprob: -14.91025447845459
    7. ' ' → logprob: -15.41025447845459
    8. ' ' → logprob: -16.785253524780273
    9. '+d' → logprob: -17.035253524780273
    10. '+xml' → logprob: -17.160253524780273

Token 815: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.688212614681106e-05
    2. ' dx' → logprob: -11.000017166137695
    3. '(dx' → logprob: -16.250017166137695
    4. '_dx' → logprob: -18.500017166137695
    5. '.dx' → logprob: -20.000017166137695
    6. 'Dx' → logprob: -20.500017166137695
    7. 'd' → logprob: -21.500017166137695
    8. 'DX' → logprob: -21.625017166137695
    9. '0' → logprob: -21.750017166137695
    10. '
' → logprob: -22.000017166137695

Token 816: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7305590510368347
    2. '<|end|>' → logprob: -0.8555590510368347
    3. 'if' → logprob: -2.9805591106414795
    4. ' if' → logprob: -4.4805588722229
    5. '```' → logprob: -4.4805588722229
    6. '<|end|>' → logprob: -5.1055588722229
    7. '                   ' → logprob: -5.9805588722229
    8. ',' → logprob: -6.1055588722229
    9. '           ' → logprob: -6.2305588722229
    10. '                
' → logprob: -6.8555588722229

Token 817: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6007921695709229
    2. ' if' → logprob: -1.4757921695709229
    3. 'if' → logprob: -1.7257921695709229
    4. '<|end|>' → logprob: -3.600792169570923
    5. '```' → logprob: -4.225791931152344
    6. '                   ' → logprob: -7.600791931152344
    7. '                
' → logprob: -7.850791931152344
    8. '                               ' → logprob: -7.850791931152344
    9. '           ' → logprob: -7.850791931152344
    10. '                ' → logprob: -8.975791931152344

Token 818: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007613374851644039
    2. ' if' → logprob: -4.882613182067871
    3. '<|end|>' → logprob: -12.757613182067871
    4. '```' → logprob: -13.257613182067871
    5. '
' → logprob: -14.007613182067871
    6. '               ' → logprob: -14.382613182067871
    7. '	if' → logprob: -15.757613182067871
    8. ' 
' → logprob: -15.882613182067871
    9. ' ' → logprob: -16.382614135742188
    10. 'If' → logprob: -16.382614135742188

Token 819: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.02422371879220009
    2. 'nx' → logprob: -3.774223804473877
    3. '0' → logprob: -7.024223804473877
    4. ' ' → logprob: -9.774223327636719
    5. '(nx' → logprob: -10.399223327636719
    6. ' not' → logprob: -16.14922332763672
    7. ' ny' → logprob: -16.89922332763672
    8. ' nex' → logprob: -17.14922332763672
    9. 'Nx' → logprob: -17.14922332763672
    10. 'n' → logprob: -17.64922332763672

Token 820: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1602245420217514
    2. '<' → logprob: -1.9102245569229126
    3. '<|end|>' → logprob: -16.28522491455078
    4. ')' → logprob: -16.66022491455078
    5. ' >=' → logprob: -17.03522491455078
    6. ' ' → logprob: -17.03522491455078
    7. '[' → logprob: -17.28522491455078
    8. '<n' → logprob: -18.03522491455078
    9. ')<' → logprob: -18.16022491455078
    10. '<x' → logprob: -18.41022491455078

Token 821: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '=' → logprob: -17.250045776367188
    4. '   ' → logprob: -20.000045776367188
    5. '```' → logprob: -20.875045776367188
    6. '
' → logprob: -21.625045776367188
    7. '۰' → logprob: -21.750045776367188
    8. '>' → logprob: -23.000045776367188
    9. ' =' → logprob: -23.375045776367188
    10. '00' → logprob: -23.625045776367188

Token 822: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '=' → logprob: -21.5
    4. '۰' → logprob: -22.5
    5. '
' → logprob: -22.875
    6. '00' → logprob: -23.625
    7. '   ' → logprob: -24.0
    8. '```' → logprob: -24.0
    9. '０' → logprob: -24.75
    10. '000' → logprob: -26.0

Token 823: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.16023722290992737
    2. 'or' → logprob: -1.910237193107605
    3. '<|end|>' → logprob: -11.785237312316895
    4. '	or' → logprob: -12.660237312316895
    5. '0' → logprob: -14.285237312316895
    6. ' ' → logprob: -14.410237312316895
    7. '```' → logprob: -14.535237312316895
    8. ''or' → logprob: -15.785237312316895
    9. '           ' → logprob: -16.785236358642578
    10. ':' → logprob: -17.035236358642578

Token 824: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.474124014377594
    2. ' nx' → logprob: -0.974124014377594
    3. '(nx' → logprob: -9.97412395477295
    4. 'Nx' → logprob: -15.97412395477295
    5. 'n' → logprob: -16.099124908447266
    6. 'NX' → logprob: -16.974124908447266
    7. 'x' → logprob: -17.724124908447266
    8. '0' → logprob: -17.974124908447266
    9. 'xn' → logprob: -18.599124908447266
    10. ' Nx' → logprob: -18.849124908447266

Token 825: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.02058393508195877
    2. ' >=' → logprob: -3.8955838680267334
    3. ']>=' → logprob: -10.520584106445312
    4. '>' → logprob: -11.895584106445312
    5. ')>=' → logprob: -12.270584106445312
    6. '≥' → logprob: -13.270584106445312
    7. 'X' → logprob: -14.770584106445312
    8. ' ' → logprob: -15.020584106445312
    9. '0' → logprob: -15.520584106445312
    10. '>X' → logprob: -15.645584106445312

Token 826: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -6.988221684878226e-06
    2. ' X' → logprob: -11.875006675720215
    3. '   ' → logprob: -21.25000762939453
    4. '>X' → logprob: -21.62500762939453
    5. 'Xs' → logprob: -21.62500762939453
    6. '
' → logprob: -21.87500762939453
    7. ' ' → logprob: -22.25000762939453
    8. 'x' → logprob: -22.37500762939453
    9. '	X' → logprob: -22.87500762939453
    10. '(X' → logprob: -23.50000762939453

Token 827: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3494006097316742
    2. ':
' → logprob: -1.3494006395339966
    3. '                   ' → logprob: -3.974400520324707
    4. '               ' → logprob: -4.224400520324707
    5. '                       ' → logprob: -7.099400520324707
    6. '           ' → logprob: -7.724400520324707
    7. '       ' → logprob: -8.224400520324707
    8. '   ' → logprob: -8.974400520324707
    9. ' or' → logprob: -9.474400520324707
    10. 'continue' → logprob: -9.724400520324707

Token 828: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4296230673789978
    2. '               ' → logprob: -1.1796231269836426
    3. 'continue' → logprob: -3.5546231269836426
    4. ' continue' → logprob: -4.554623126983643
    5. '   ' → logprob: -7.304623126983643
    6. '```' → logprob: -7.304623126983643
    7. '           ' → logprob: -7.679623126983643
    8. '                       ' → logprob: -7.804623126983643
    9. '       ' → logprob: -8.679622650146484
    10. '	continue' → logprob: -9.304622650146484

Token 829: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.015210856683552265
    2. ' continue' → logprob: -4.5152106285095215
    3. '                   ' → logprob: -5.5152106285095215
    4. '               ' → logprob: -9.01521110534668
    5. '                       ' → logprob: -12.51521110534668
    6. '   ' → logprob: -13.14021110534668
    7. '       ' → logprob: -14.26521110534668
    8. '           ' → logprob: -14.39021110534668
    9. '	continue' → logprob: -14.39021110534668
    10. '```' → logprob: -15.14021110534668

Token 830: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0526144802570343
    2. '```' → logprob: -3.052614450454712
    3. '``' → logprob: -7.052614688873291
    4. '                
' → logprob: -7.177614688873291
    5. '                   ' → logprob: -7.177614688873291
    6. '           ' → logprob: -7.677614688873291
    7. '\n' → logprob: -8.052614212036133
    8. 'ny' → logprob: -8.302614212036133
    9. '<|end|>' → logprob: -9.552614212036133
    10. '   ' → logprob: -9.802614212036133

Token 831: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01044010091573
    2. 'ny' → logprob: -4.885439872741699
    3. '```' → logprob: -6.135439872741699
    4. '                
' → logprob: -8.1354398727417
    5. '           ' → logprob: -9.1354398727417
    6. '                   ' → logprob: -9.7604398727417
    7. '                ' → logprob: -10.0104398727417
    8. ' ny' → logprob: -10.0104398727417
    9. '``' → logprob: -10.1354398727417
    10. '              ' → logprob: -11.1354398727417

Token 832: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' (adapté à ' ny') → logprob: -0.0008542861323803663
    2. 'cell' → logprob: -7.1258544921875
    3. 'if' → logprob: -10.6258544921875
    4. '```' → logprob: -11.2508544921875
    5. 'for' → logprob: -12.0008544921875
    6. '   ' → logprob: -13.1258544921875
    7. ' ny' → logprob: -13.2508544921875
    8. 'n' → logprob: -14.8758544921875
    9. 'dy' → logprob: -15.1258544921875
    10. '               ' → logprob: -15.5008544921875

Token 833: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006716079078614712
    2. ' =' → logprob: -5.006716251373291
    3. '=
' → logprob: -15.006715774536133
    4. '```' → logprob: -15.256715774536133
    5. '+=' → logprob: -16.631715774536133
    6. '＝' → logprob: -17.131715774536133
    7. 's' → logprob: -17.131715774536133
    8. ')' → logprob: -17.631715774536133
    9. '<|end|>' → logprob: -17.631715774536133
    10. '   ' → logprob: -17.756715774536133

Token 834: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.860340752406046e-05
    2. ' y' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.6250581741333
    4. '	y' → logprob: -17.875059127807617
    5. ' ' → logprob: -19.875059127807617
    6. '[y' → logprob: -20.000059127807617
    7. '+' → logprob: -20.625059127807617
    8. ')y' → logprob: -20.750059127807617
    9. '‘y' → logprob: -20.750059127807617
    10. '  ' → logprob: -21.125059127807617

Token 835: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001721592154353857
    2. ' +' → logprob: -6.376721382141113
    3. '=' → logprob: -11.251721382141113
    4. '+=' → logprob: -12.751721382141113
    5. '+
' → logprob: -13.001721382141113
    6. '＋' → logprob: -14.376721382141113
    7. '+y' → logprob: -15.001721382141113
    8. '1' → logprob: -16.00172233581543
    9. 'y' → logprob: -16.00172233581543
    10. ')+' → logprob: -17.50172233581543

Token 836: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '2' → logprob: -18.5
    4. '```' → logprob: -18.625
    5. '<|end|>' → logprob: -19.4375
    6. '۱' → logprob: -19.4375
    7. '   ' → logprob: -20.125
    8. '
' → logprob: -20.3125
    9. '１' → logprob: -20.4375
    10. '0' → logprob: -20.625

Token 837: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -19.875
    5. '
' → logprob: -20.8125
    6. '۱' → logprob: -20.8125
    7. '{
' → logprob: -20.875
    8. '[' → logprob: -21.0625
    9. '2' → logprob: -21.125
    10. '{' → logprob: -21.3125

Token 838: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004604572430253029
    2. '```' → logprob: -5.504604339599609
    3. '<|end|>' → logprob: -8.50460433959961
    4. '                
' → logprob: -9.12960433959961
    5. '              ' → logprob: -10.12960433959961
    6. ' if' → logprob: -10.37960433959961
    7. '                   ' → logprob: -10.50460433959961
    8. '                ' → logprob: -10.75460433959961
    9. '           ' → logprob: -10.87960433959961
    10. '       ' → logprob: -11.37960433959961

Token 839: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008288058452308178
    2. '```' → logprob: -7.250828742980957
    3. '<|end|>' → logprob: -10.500828742980957
    4. 'if' → logprob: -11.250828742980957
    5. '              ' → logprob: -11.250828742980957
    6. ' if' → logprob: -11.375828742980957
    7. '                
' → logprob: -11.625828742980957
    8. '                ' → logprob: -11.625828742980957
    9. '       ' → logprob: -11.750828742980957
    10. '           ' → logprob: -11.750828742980957

Token 840: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16496215760707855
    2. 'cell' → logprob: -1.9149621725082397
    3. '               ' → logprob: -5.414962291717529
    4. '```' → logprob: -8.289961814880371
    5. ' if' → logprob: -10.789961814880371
    6. ' cell' → logprob: -12.539961814880371
    7. '``' → logprob: -13.914961814880371
    8. '_cell' → logprob: -15.664961814880371
    9. '[cell' → logprob: -15.664961814880371
    10. '#' → logprob: -15.914961814880371

Token 841: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.004100008402019739
    2. ' ny' → logprob: -5.5040998458862305
    3. 'nx' → logprob: -10.87909984588623
    4. 'y' → logprob: -14.62909984588623
    5. 'grid' → logprob: -14.75409984588623
    6. 'n' → logprob: -15.37909984588623
    7. 'yn' → logprob: -15.62909984588623
    8. 'nyi' → logprob: -15.75409984588623
    9. 'ni' → logprob: -15.87909984588623
    10. 'nj' → logprob: -16.004100799560547

Token 842: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.11754842847585678
    2. ' >=' → logprob: -2.2425484657287598
    3. '==' → logprob: -5.61754846572876
    4. '>' → logprob: -7.36754846572876
    5. ' ==' → logprob: -8.117547988891602
    6. ' >' → logprob: -9.367547988891602
    7. ')>=' → logprob: -10.867547988891602
    8. '<|end|>' → logprob: -10.992547988891602
    9. ']>=' → logprob: -11.242547988891602
    10. '```' → logprob: -11.742547988891602

Token 843: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.5048530030981055e-06
    2. ' Y' → logprob: -13.500001907348633
    3. '	Y' → logprob: -19.125001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '<|end|>' → logprob: -20.625001907348633
    6. '(Y' → logprob: -21.000001907348633
    7. '...' → logprob: -21.125001907348633
    8. '
' → logprob: -21.500001907348633
    9. '0' → logprob: -21.500001907348633
    10. '[Y' → logprob: -21.625001907348633

Token 844: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3874514698982239
    2. ':
' → logprob: -1.137451410293579
    3. '                   ' → logprob: -8.137451171875
    4. '):
' → logprob: -9.387451171875
    5. '               ' → logprob: -9.637451171875
    6. '<|end|>' → logprob: -10.137451171875
    7. ' and' → logprob: -10.387451171875
    8. '                       ' → logprob: -11.262451171875
    9. '           ' → logprob: -11.387451171875
    10. ',' → logprob: -11.887451171875

Token 845: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016978973522782326
    2. '               ' → logprob: -4.641978740692139
    3. '                       ' → logprob: -6.016978740692139
    4. '```' → logprob: -6.141978740692139
    5. '   ' → logprob: -7.641978740692139
    6. '<|end|>' → logprob: -8.016979217529297
    7. '                               ' → logprob: -8.266979217529297
    8. ':
' → logprob: -8.391979217529297
    9. 'ans' → logprob: -8.516979217529297
    10. '           ' → logprob: -8.766979217529297

Token 846: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00016301481809932739
    2. ' ans' → logprob: -8.750163078308105
    3. '(ans' → logprob: -12.750163078308105
    4. '	ans' → logprob: -13.750163078308105
    5. 'ways' → logprob: -15.250163078308105
    6. '_ans' → logprob: -16.00016212463379
    7. '```' → logprob: -16.62516212463379
    8. '           ' → logprob: -16.62516212463379
    9. '               ' → logprob: -17.12516212463379
    10. '
' → logprob: -17.37516212463379

Token 847: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12716664373874664
    2. ' +=' → logprob: -2.127166748046875
    3. '                   ' → logprob: -9.127166748046875
    4. ']+=' → logprob: -10.377166748046875
    5. '               ' → logprob: -10.502166748046875
    6. '```' → logprob: -10.502166748046875
    7. '+' → logprob: -11.002166748046875
    8. '                       ' → logprob: -11.502166748046875
    9. '           ' → logprob: -11.502166748046875
    10. '                           ' → logprob: -13.502166748046875

Token 848: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -1.3856492842023727e-06
    2. 'dp' → logprob: -14.375000953674316
    3. ' ways' → logprob: -14.500000953674316
    4. 'way' → logprob: -15.500000953674316
    5. 'WAYS' → logprob: -19.125001907348633
    6. ' dp' → logprob: -20.500001907348633
    7. '   ' → logprob: -21.250001907348633
    8. '```' → logprob: -21.375001907348633
    9. 'Ways' → logprob: -21.375001907348633
    10. 'w' → logprob: -22.000001907348633

Token 849: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.040961433202028275
    2. '               ' → logprob: -3.290961503982544
    3. 'continue' → logprob: -6.290961265563965
    4. '                       ' → logprob: -7.665961265563965
    5. '           ' → logprob: -7.915961265563965
    6. ' continue' → logprob: -8.790961265563965
    7. '```' → logprob: -10.290961265563965
    8. '       ' → logprob: -11.540961265563965
    9. '                           ' → logprob: -11.540961265563965
    10. '   ' → logprob: -12.040961265563965

Token 850: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006253215949982405
    2. '               ' → logprob: -5.381253242492676
    3. 'continue' → logprob: -6.506253242492676
    4. '           ' → logprob: -9.881253242492676
    5. '                       ' → logprob: -10.006253242492676
    6. ' continue' → logprob: -11.006253242492676
    7. '```' → logprob: -11.131253242492676
    8. '       ' → logprob: -12.381253242492676
    9. '   ' → logprob: -12.881253242492676
    10. '                           ' → logprob: -14.131253242492676

Token 851: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0003564383659977466
    2. '                   ' → logprob: -8.500356674194336
    3. ' continue' → logprob: -9.000356674194336
    4. '               ' → logprob: -10.500356674194336
    5. '                       ' → logprob: -14.250356674194336
    6. '```' → logprob: -14.500356674194336
    7. '           ' → logprob: -14.625356674194336
    8. '       ' → logprob: -15.750356674194336
    9. '   ' → logprob: -16.125356674194336
    10. '	continue' → logprob: -16.375356674194336

Token 852: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003721622342709452
    2. '```' → logprob: -8.625371932983398
    3. '                   ' → logprob: -9.375371932983398
    4. '                
' → logprob: -10.000371932983398
    5. 'if' → logprob: -10.500371932983398
    6. '           ' → logprob: -11.250371932983398
    7. '              ' → logprob: -12.250371932983398
    8. '
' → logprob: -12.750371932983398
    9. 'cell' → logprob: -12.875371932983398
    10. '                ' → logprob: -13.125371932983398

Token 853: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03911323845386505
    2. '```' → logprob: -3.2891132831573486
    3. 'cell' → logprob: -7.2891130447387695
    4. 'if' → logprob: -8.53911304473877
    5. '``' → logprob: -9.03911304473877
    6. '                   ' → logprob: -10.53911304473877
    7. '           ' → logprob: -11.28911304473877
    8. ' if' → logprob: -11.53911304473877
    9. '              ' → logprob: -12.03911304473877
    10. ' cell' → logprob: -12.16411304473877

Token 854: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' (adapté à ' cell') → logprob: -0.0004317420825827867
    2. 'if' → logprob: -7.750431537628174
    3. '               ' → logprob: -14.250432014465332
    4. '```' → logprob: -15.000432014465332
    5. ' cell' → logprob: -16.375431060791016
    6. '                   ' → logprob: -17.250431060791016
    7. 'next' → logprob: -17.750431060791016
    8. '                
' → logprob: -18.250431060791016
    9. 'c' → logprob: -18.375431060791016
    10. 'elif' → logprob: -18.625431060791016

Token 855: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693104147911072
    2. ' =' → logprob: -2.1269309520721436
    3. '==' → logprob: -12.876931190490723
    4. ' ==' → logprob: -15.626931190490723
    5. 'if' → logprob: -15.751931190490723
    6. '＝' → logprob: -16.626930236816406
    7. '```' → logprob: -17.126930236816406
    8. '=
' → logprob: -18.126930236816406
    9. '=line' → logprob: -18.501930236816406
    10. '[cell' → logprob: -18.501930236816406

Token 856: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0024756586644798517
    2. ' grid' → logprob: -6.002475738525391
    3. '(grid' → logprob: -18.37747573852539
    4. '	grid' → logprob: -19.12747573852539
    5. '.grid' → logprob: -19.87747573852539
    6. '   ' → logprob: -20.12747573852539
    7. '/grid' → logprob: -20.62747573852539
    8. '_grid' → logprob: -20.87747573852539
    9. ':grid' → logprob: -20.87747573852539
    10. 'Grid' → logprob: -21.12747573852539

Token 857: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.500000953674316
    3. '   ' → logprob: -16.125
    4. 'ny' → logprob: -16.625
    5. '=' → logprob: -16.875
    6. '
' → logprob: -17.0
    7. ' [' → logprob: -17.125
    8. '       ' → logprob: -17.5
    9. ' =' → logprob: -17.875
    10. '[
' → logprob: -18.375

Token 858: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.875005722045898
    3. ' ny' → logprob: -12.875005722045898
    4. 'nyi' → logprob: -16.5000057220459
    5. 'n' → logprob: -17.3750057220459
    6. 'yn' → logprob: -17.6250057220459
    7. 'ni' → logprob: -18.5000057220459
    8. '   ' → logprob: -18.5000057220459
    9. 'y' → logprob: -18.5000057220459
    10. 'ney' → logprob: -19.2500057220459

Token 859: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5762059688568115
    2. '[n' → logprob: -0.8262059688568115
    3. '[' → logprob: -8.82620620727539
    4. '```' → logprob: -9.82620620727539
    5. ' ][' → logprob: -11.45120620727539
    6. '       ' → logprob: -11.45120620727539
    7. '   ' → logprob: -11.57620620727539
    8. '"][' → logprob: -11.95120620727539
    9. '           ' → logprob: -12.32620620727539
    10. ']' → logprob: -12.32620620727539

Token 860: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -4.842555426876061e-06
    2. '(nx' → logprob: -12.500004768371582
    3. ' nx' → logprob: -14.000004768371582
    4. 'n' → logprob: -16.1250057220459
    5. '[n' → logprob: -16.5000057220459
    6. 'x' → logprob: -17.8750057220459
    7. 'Nx' → logprob: -19.2500057220459
    8. 'nk' → logprob: -19.2500057220459
    9. '```' → logprob: -19.3750057220459
    10. 'xn' → logprob: -19.5000057220459

Token 861: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5297616124153137
    2. ']' → logprob: -0.9047616124153137
    3. ')
' → logprob: -5.779761791229248
    4. ')' → logprob: -6.279761791229248
    5. '               ' → logprob: -6.654761791229248
    6. '                   ' → logprob: -8.40476131439209
    7. '           ' → logprob: -10.52976131439209
    8. ']==' → logprob: -10.65476131439209
    9. '```' → logprob: -10.77976131439209
    10. ']
' → logprob: -10.77976131439209

Token 862: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004715276416391134
    2. '```' → logprob: -6.004715442657471
    3. ' if' → logprob: -6.379715442657471
    4. 'if' → logprob: -7.879715442657471
    5. '                   ' → logprob: -8.879714965820312
    6. '           ' → logprob: -12.129714965820312
    7. '``' → logprob: -12.129714965820312
    8. '                ' → logprob: -12.504714965820312
    9. '              ' → logprob: -12.879714965820312
    10. '                
' → logprob: -13.129714965820312

Token 863: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.652451464906335e-05
    2. ' if' → logprob: -12.000016212463379
    3. '```' → logprob: -12.000016212463379
    4. '               ' → logprob: -12.500016212463379
    5. '                   ' → logprob: -14.875016212463379
    6. '           ' → logprob: -16.375017166137695
    7. '   ' → logprob: -19.875017166137695
    8. '``' → logprob: -20.375017166137695
    9. '                       ' → logprob: -20.500017166137695
    10. 'If' → logprob: -20.500017166137695

Token 864: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.0009344478603452444
    2. ' cell' → logprob: -7.000934600830078
    3. '0' → logprob: -10.875934600830078
    4. '1' → logprob: -12.500934600830078
    5. '(cell' → logprob: -16.125934600830078
    6. 'cel' → logprob: -16.125934600830078
    7. ' ' → logprob: -17.375934600830078
    8. '[cell' → logprob: -17.375934600830078
    9. '	cell' → logprob: -18.125934600830078
    10. 'cells' → logprob: -18.375934600830078

Token 865: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.033655378967523575
    2. '==' → logprob: -3.4086554050445557
    3. ' !=' → logprob: -12.908655166625977
    4. '```' → logprob: -13.283655166625977
    5. ']==' → logprob: -13.783655166625977
    6. '[' → logprob: -14.033655166625977
    7. ')==' → logprob: -14.158655166625977
    8. ' ' → logprob: -14.283655166625977
    9. ' ' → logprob: -14.533655166625977
    10. '()==' → logprob: -15.283655166625977

Token 866: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013330980436876416
    2. '1' → logprob: -6.626333236694336
    3. ' ' → logprob: -11.876333236694336
    4. '2' → logprob: -16.126333236694336
    5. '```' → logprob: -16.751333236694336
    6. '`' → logprob: -17.876333236694336
    7. '   ' → logprob: -18.126333236694336
    8. ' ' → logprob: -19.251333236694336
    9. '۰' → logprob: -19.251333236694336
    10. '...' → logprob: -19.751333236694336

Token 867: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015024791937321424
    2. '1' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.251502990722656
    4. '2' → logprob: -16.751502990722656
    5. '```' → logprob: -17.251502990722656
    6. '   ' → logprob: -18.751502990722656
    7. '`' → logprob: -18.814002990722656
    8. '#' → logprob: -20.751502990722656
    9. '۰' → logprob: -20.814002990722656
    10. '``' → logprob: -20.814002990722656

Token 868: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.37207385897636414
    2. ':' → logprob: -1.2470738887786865
    3. ':
' → logprob: -3.9970738887786865
    4. '                       ' → logprob: -5.872073650360107
    5. '               ' → logprob: -6.997073650360107
    6. 'continue' → logprob: -6.997073650360107
    7. ' continue' → logprob: -9.372074127197266
    8. '           ' → logprob: -9.497074127197266
    9. '                           ' → logprob: -10.122074127197266
    10. '   ' → logprob: -10.497074127197266

Token 869: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0027793198823928833
    2. 'continue' → logprob: -6.127779483795166
    3. '                       ' → logprob: -8.502779006958008
    4. '               ' → logprob: -8.752779006958008
    5. '   ' → logprob: -9.252779006958008
    6. ' continue' → logprob: -9.752779006958008
    7. ':
' → logprob: -10.002779006958008
    8. '```' → logprob: -11.627779006958008
    9. ':' → logprob: -11.752779006958008
    10. '	continue' → logprob: -12.002779006958008

Token 870: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.010660214349627495
    2. '                   ' → logprob: -4.760660171508789
    3. ' continue' → logprob: -6.260660171508789
    4. '   ' → logprob: -9.760660171508789
    5. '                       ' → logprob: -10.260660171508789
    6. '```' → logprob: -10.635660171508789
    7. '	continue' → logprob: -11.635660171508789
    8. '               ' → logprob: -12.260660171508789
    9. '       ' → logprob: -12.885660171508789
    10. '           ' → logprob: -15.010660171508789

Token 871: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01163551490753889
    2. 'elif' → logprob: -4.5116353034973145
    3. '                   ' → logprob: -7.6366353034973145
    4. '```' → logprob: -9.386635780334473
    5. ' elif' → logprob: -11.636635780334473
    6. '           ' → logprob: -12.386635780334473
    7. 'else' → logprob: -12.886635780334473
    8. 'if' → logprob: -13.261635780334473
    9. 'continue' → logprob: -14.136635780334473
    10. '              ' → logprob: -14.386635780334473

Token 872: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005215143784880638
    2. '```' → logprob: -5.880215167999268
    3. 'elif' → logprob: -6.630215167999268
    4. '                   ' → logprob: -6.880215167999268
    5. 'if' → logprob: -10.25521469116211
    6. 'continue' → logprob: -11.38021469116211
    7. '           ' → logprob: -12.38021469116211
    8. 'else' → logprob: -13.13021469116211
    9. '                       ' → logprob: -13.25521469116211
    10. '``' → logprob: -13.63021469116211

Token 873: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5826412439346313
    2. 'elif' (adapté à ' elif') → logprob: -0.8326412439346313
    3. 'if' → logprob: -5.082641124725342
    4. '```' → logprob: -8.2076416015625
    5. ' elif' → logprob: -9.3326416015625
    6. 'else' → logprob: -9.5826416015625
    7. ' if' → logprob: -10.7076416015625
    8. '                   ' → logprob: -10.9576416015625
    9. '           ' → logprob: -12.7076416015625
    10. '``' → logprob: -14.3326416015625

Token 874: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.038047123700380325
    2. ' cell' → logprob: -3.2880470752716064
    3. '0' → logprob: -12.288046836853027
    4. 'cel' → logprob: -15.163046836853027
    5. '(cell' → logprob: -15.413046836853027
    6. ' ' → logprob: -15.788046836853027
    7. '[cell' → logprob: -15.913046836853027
    8. 'dp' → logprob: -16.413047790527344
    9. '	cell' → logprob: -16.413047790527344
    10. ' dp' → logprob: -16.788047790527344

Token 875: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014169624075293541
    2. '==' → logprob: -4.264169692993164
    3. '[' → logprob: -12.139169692993164
    4. '               ' → logprob: -15.639169692993164
    5. '                   ' → logprob: -16.264169692993164
    6. '```' → logprob: -16.514169692993164
    7. ']==' → logprob: -16.514169692993164
    8. ' ' → logprob: -16.764169692993164
    9. ':' → logprob: -16.764169692993164
    10. ' ' → logprob: -17.014169692993164

Token 876: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606389466673136
    2. ' ' → logprob: -4.882606506347656
    3. ' ' → logprob: -15.757606506347656
    4. '   ' → logprob: -16.632606506347656
    5. '1' → logprob: -18.007606506347656
    6. '2' → logprob: -18.382606506347656
    7. '```' → logprob: -18.507606506347656
    8. '  ' → logprob: -18.882606506347656
    9. '00' → logprob: -19.007606506347656
    10. '`' → logprob: -19.007606506347656

Token 877: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -20.375
    4. '2' → logprob: -20.625
    5. '```' → logprob: -21.5
    6. '1' → logprob: -22.0
    7. '۰' → logprob: -22.125
    8. '00' → logprob: -22.25
    9. '`' → logprob: -22.25
    10. ' ' → logprob: -22.375

Token 878: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6594505310058594
    2. ':
' → logprob: -0.9094505310058594
    3. '                   ' → logprob: -2.5344505310058594
    4. '                       ' → logprob: -7.284450531005859
    5. '               ' → logprob: -9.40945053100586
    6. 'dp' → logprob: -10.65945053100586
    7. ':
' → logprob: -12.40945053100586
    8. '                           ' → logprob: -12.65945053100586
    9. ':

' → logprob: -12.78445053100586
    10. '                  ' → logprob: -13.15945053100586

Token 879: '                   ' (ID: 699)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07930701225996017
    2. '                   ' → logprob: -2.8293070793151855
    3. ' dp' → logprob: -4.0793070793151855
    4. '                       ' → logprob: -8.454306602478027
    5. '               ' → logprob: -10.079306602478027
    6. '(dp' → logprob: -12.329306602478027
    7. '                           ' → logprob: -13.204306602478027
    8. '                               ' → logprob: -13.204306602478027
    9. '	dp' → logprob: -13.454306602478027
    10. '                  ' → logprob: -13.704306602478027

Token 880: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -2.15310683415737e-05
    2. ' dp' → logprob: -10.750021934509277
    3. '                   ' → logprob: -16.75002098083496
    4. '                       ' → logprob: -19.25002098083496
    5. '	dp' → logprob: -19.62502098083496
    6. '                           ' → logprob: -20.12502098083496
    7. '(dp' → logprob: -20.50002098083496
    8. '                               ' → logprob: -21.12502098083496
    9. '               ' → logprob: -21.87502098083496
    10. '_dp' → logprob: -22.12502098083496

Token 881: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -15.250000953674316
    3. 'ny' → logprob: -15.500000953674316
    4. '       ' → logprob: -16.5
    5. '           ' → logprob: -17.0
    6. '               ' → logprob: -17.375
    7. '                   ' → logprob: -17.5
    8. '```' → logprob: -18.625
    9. ' [' → logprob: -18.75
    10. '[y' → logprob: -19.625

Token 882: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.625001907348633
    3. 'y' → logprob: -14.750001907348633
    4. ' ny' → logprob: -15.000001907348633
    5. '   ' → logprob: -15.875001907348633
    6. 'yn' → logprob: -16.875001907348633
    7. 'n' → logprob: -19.000001907348633
    8. '[y' → logprob: -19.125001907348633
    9. 'ry' → logprob: -19.250001907348633
    10. '       ' → logprob: -19.375001907348633

Token 883: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.20154821872711182
    2. '][' → logprob: -1.7015482187271118
    3. '[' → logprob: -9.45154857635498
    4. '```' → logprob: -10.82654857635498
    5. '   ' → logprob: -11.45154857635498
    6. '"][' → logprob: -12.57654857635498
    7. ']' → logprob: -12.95154857635498
    8. ''][' → logprob: -12.95154857635498
    9. '       ' → logprob: -13.07654857635498
    10. '
' → logprob: -13.07654857635498

Token 884: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -6.511406809295295e-06
    2. 'x' → logprob: -12.500006675720215
    3. '(nx' → logprob: -13.625006675720215
    4. ' nx' → logprob: -14.500006675720215
    5. 'n' → logprob: -14.750006675720215
    6. '][' → logprob: -15.625006675720215
    7. '[n' → logprob: -16.2500057220459
    8. 'nk' → logprob: -16.8750057220459
    9. 'ny' → logprob: -17.0000057220459
    10. 'xn' → logprob: -17.5000057220459

Token 885: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.32883861660957336
    2. '+=' → logprob: -1.578838586807251
    3. ' +=' → logprob: -3.078838586807251
    4. ']' → logprob: -3.578838586807251
    5. '                   ' → logprob: -9.828838348388672
    6. '                       ' → logprob: -11.578838348388672
    7. '                    ' → logprob: -11.578838348388672
    8. ')' → logprob: -11.703838348388672
    9. ' ]' → logprob: -12.453838348388672
    10. '```' → logprob: -12.453838348388672

Token 886: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00032724079210311174
    2. ']+=' → logprob: -8.500327110290527
    3. ' +=' → logprob: -9.000327110290527
    4. '```' → logprob: -15.500327110290527
    5. '=' → logprob: -17.250328063964844
    6. '+' → logprob: -17.375328063964844
    7. '+=(' → logprob: -18.000328063964844
    8. '[' → logprob: -18.125328063964844
    9. '                   ' → logprob: -19.000328063964844
    10. '                       ' → logprob: -19.500328063964844

Token 887: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -8.554343366995454e-05
    2. ' ways' → logprob: -9.375085830688477
    3. 'way' → logprob: -14.375085830688477
    4. '   ' → logprob: -18.125085830688477
    5. 'WAYS' → logprob: -18.500085830688477
    6. 'Ways' → logprob: -19.625085830688477
    7. '       ' → logprob: -20.375085830688477
    8. '           ' → logprob: -20.625085830688477
    9. 'dp' → logprob: -20.750085830688477
    10. '```' → logprob: -20.875085830688477

Token 888: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00320052751339972
    2. 'else' → logprob: -5.878200531005859
    3. 'elif' → logprob: -8.37820053100586
    4. '```' → logprob: -8.87820053100586
    5. ' else' → logprob: -10.75320053100586
    6. '                   ' → logprob: -12.62820053100586
    7. ' elif' → logprob: -14.00320053100586
    8. '			' → logprob: -15.37820053100586
    9. '``' → logprob: -15.50320053100586
    10. '           ' → logprob: -16.37820053100586

Token 889: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04250931367278099
    2. 'else' → logprob: -3.2925093173980713
    3. '```' → logprob: -5.667509078979492
    4. '                   ' → logprob: -7.542509078979492
    5. ' else' → logprob: -8.167509078979492
    6. 'elif' → logprob: -8.667509078979492
    7. '                       ' → logprob: -12.167509078979492
    8. '           ' → logprob: -12.667509078979492
    9. '``' → logprob: -13.042509078979492
    10. ' elif' → logprob: -14.042509078979492

Token 890: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1019519567489624
    2. '               ' → logprob: -2.351952075958252
    3. 'elif' → logprob: -7.101952075958252
    4. '```' → logprob: -7.101952075958252
    5. ' else' → logprob: -9.351951599121094
    6. '                   ' → logprob: -11.601951599121094
    7. '           ' → logprob: -15.476951599121094
    8. '``' → logprob: -15.851951599121094
    9. '                       ' → logprob: -15.976951599121094
    10. '   ' → logprob: -16.351951599121094

Token 891: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35738852620124817
    2. ':
' → logprob: -1.2323884963989258
    3. '                   ' → logprob: -4.732388496398926
    4. '{' → logprob: -10.732388496398926
    5. ':#' → logprob: -10.732388496398926
    6. '                  ' → logprob: -11.357388496398926
    7. '#' → logprob: -11.982388496398926
    8. '   ' → logprob: -11.982388496398926
    9. '```' → logprob: -11.982388496398926
    10. '{
' → logprob: -12.357388496398926

Token 892: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14158959686756134
    2. ':' → logprob: -2.266589641571045
    3. ':
' → logprob: -3.641589641571045
    4. '#' → logprob: -7.266589641571045
    5. '                  ' → logprob: -8.141589164733887
    6. '               ' → logprob: -8.266589164733887
    7. ':#' → logprob: -8.766589164733887
    8. '                       ' → logprob: -8.891589164733887
    9. '           ' → logprob: -9.016589164733887
    10. 'if' → logprob: -9.391589164733887

Token 893: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.03416771814227104
    2. 'ny' → logprob: -3.659167766571045
    3. 'if' → logprob: -5.534167766571045
    4. ' #' → logprob: -6.409167766571045
    5. '                   ' → logprob: -6.909167766571045
    6. ' ny' → logprob: -7.409167766571045
    7. '   ' → logprob: -8.159167289733887
    8. '                       ' → logprob: -8.909167289733887
    9. ' ' → logprob: -9.409167289733887
    10. 'nx' → logprob: -10.159167289733887

Token 894: ' jump' (ID: 13843)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.41080841422080994
    2. 'ny' → logprob: -2.0358083248138428
    3. 'if' → logprob: -2.1608083248138428
    4. '#' → logprob: -2.5358083248138428
    5. '                   ' → logprob: -4.785808563232422
    6. 'nx' → logprob: -6.410808563232422
    7. '               ' → logprob: -7.410808563232422
    8. ' ny' → logprob: -8.035808563232422
    9. '   ' → logprob: -8.035808563232422
    10. '                       ' → logprob: -8.910808563232422

Token 895: ' ramp' (ID: 37998)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8931707739830017
    2. '_' → logprob: -1.3931708335876465
    3. '==' → logprob: -2.0181708335876465
    4. ' ==' → logprob: -3.0181708335876465
    5. '_r' → logprob: -3.2681708335876465
    6. '_n' → logprob: -3.7681708335876465
    7. 'ny' → logprob: -4.0181708335876465
    8. '```' → logprob: -4.5181708335876465
    9. ':' → logprob: -5.0181708335876465
    10. 'if' → logprob: -5.0181708335876465

Token 896: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11784140765666962
    2. ':
' → logprob: -2.8678414821624756
    3. '
' → logprob: -3.8678414821624756
    4. ' if' → logprob: -4.6178412437438965
    5. ':' → logprob: -4.7428412437438965
    6. 'if' → logprob: -4.9928412437438965
    7. '                       ' → logprob: -5.1178412437438965
    8. '```' → logprob: -7.2428412437438965
    9. '                    
' → logprob: -7.8678412437438965
    10. '               ' → logprob: -8.242841720581055

Token 897: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13564008474349976
    2. 'if' → logprob: -2.6356401443481445
    3. ' if' → logprob: -3.3856401443481445
    4. '                       ' → logprob: -4.2606401443481445
    5. ':' → logprob: -5.6356401443481445
    6. '```' → logprob: -6.5106401443481445
    7. '               ' → logprob: -7.1356401443481445
    8. '   ' → logprob: -7.6356401443481445
    9. ' (' → logprob: -8.635640144348145
    10. ' and' → logprob: -8.760640144348145

Token 898: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018177436431869864
    2. ' if' → logprob: -6.50181770324707
    3. '                   ' → logprob: -8.12681770324707
    4. '```' → logprob: -11.37681770324707
    5. '                       ' → logprob: -12.62681770324707
    6. '               ' → logprob: -13.37681770324707
    7. 'ny' → logprob: -13.37681770324707
    8. 'for' → logprob: -14.75181770324707
    9. '   ' → logprob: -14.75181770324707
    10. '#' (adapté à ' #') → logprob: -15.00181770324707

Token 899: ' only' (ID: 1606)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003599713556468487
    2. 'ny' → logprob: -5.753599643707275
    3. 'nx' → logprob: -8.503600120544434
    4. ' if' → logprob: -8.878600120544434
    5. '#' → logprob: -10.378600120544434
    6. '                   ' → logprob: -10.628600120544434
    7. 'for' → logprob: -12.128600120544434
    8. ' ny' → logprob: -12.628600120544434
    9. '```' → logprob: -12.878600120544434
    10. '   ' → logprob: -12.878600120544434

Token 900: ' from' (ID: 591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007951430045068264
    2. ' if' → logprob: -5.382951259613037
    3. 'dx' → logprob: -5.757951259613037
    4. 'for' → logprob: -9.382951736450195
    5. ' dx' → logprob: -10.382951736450195
    6. 'allow' → logprob: -10.382951736450195
    7. 'can' → logprob: -12.007951736450195
    8. 'when' → logprob: -12.257951736450195
    9. 'continue' → logprob: -12.882951736450195
    10. '(dx' → logprob: -13.257951736450195

Token 901: ' same' (ID: 2684)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.007060722913593054
    2. ' dx' → logprob: -5.007060527801514
    3. 'x' → logprob: -8.632061004638672
    4. 'if' → logprob: -9.757061004638672
    5. 'nx' → logprob: -9.882061004638672
    6. '(dx' → logprob: -10.632061004638672
    7. '0' → logprob: -11.007061004638672
    8. '```' → logprob: -12.507061004638672
    9. ' if' → logprob: -12.757061004638672
    10. '_dx' → logprob: -12.757061004638672

Token 902: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.252215176820755
    2. ' x' → logprob: -1.5022151470184326
    3. ' ' → logprob: -9.127215385437012
    4. '0' → logprob: -9.502215385437012
    5. ' dx' → logprob: -10.127215385437012
    6. 'dx' → logprob: -10.127215385437012
    7. '_x' → logprob: -11.377215385437012
    8. '```' → logprob: -12.252215385437012
    9. ',' → logprob: -14.127215385437012
    10. '=' → logprob: -14.252215385437012

Token 903: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11308711767196655
    2. '                   ' → logprob: -2.6130871772766113
    3. '                       ' → logprob: -4.238087177276611
    4. ' if' → logprob: -4.488087177276611
    5. '```' → logprob: -5.613087177276611
    6. ':' → logprob: -6.238087177276611
    7. ' and' → logprob: -6.863087177276611
    8. 'and' → logprob: -7.488087177276611
    9. ':
' → logprob: -7.988087177276611
    10. '==' → logprob: -9.113086700439453

Token 904: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026543768122792244
    2. '                       ' → logprob: -4.026543617248535
    3. 'if' → logprob: -5.026543617248535
    4. ' if' → logprob: -6.901543617248535
    5. '               ' → logprob: -7.901543617248535
    6. '```' → logprob: -8.026543617248535
    7. '       ' → logprob: -10.651543617248535
    8. '           ' → logprob: -11.026543617248535
    9. '   ' → logprob: -11.026543617248535
    10. '                    ' → logprob: -11.526543617248535

Token 905: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005010855966247618
    2. ' if' → logprob: -8.000500679016113
    3. '                   ' → logprob: -8.750500679016113
    4. '                       ' → logprob: -12.375500679016113
    5. '               ' → logprob: -13.750500679016113
    6. '   ' → logprob: -14.250500679016113
    7. '```' → logprob: -14.500500679016113
    8. '           ' → logprob: -15.125500679016113
    9. 'continue' → logprob: -15.625500679016113
    10. '                           ' → logprob: -15.875500679016113

Token 906: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0015023599844425917
    2. ' dx' → logprob: -6.501502513885498
    3. '(dx' → logprob: -18.751502990722656
    4. '_dx' → logprob: -19.126502990722656
    5. 'Dx' → logprob: -21.876502990722656
    6. 'd' → logprob: -22.001502990722656
    7. 'nx' → logprob: -22.001502990722656
    8. '.dx' → logprob: -22.251502990722656
    9. 'DX' → logprob: -23.001502990722656
    10. '   ' → logprob: -23.376502990722656

Token 907: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023053228855133
    2. '==' → logprob: -1.9102305173873901
    3. '```' → logprob: -13.41023063659668
    4. '0' → logprob: -13.78523063659668
    5. '=' → logprob: -13.91023063659668
    6. ']==' → logprob: -14.41023063659668
    7. ')==' → logprob: -14.41023063659668
    8. '[' → logprob: -14.66023063659668
    9. '==
' → logprob: -14.78523063659668
    10. '()==' → logprob: -14.91023063659668

Token 908: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -21.125
    4. '   ' → logprob: -22.0
    5. '۰' → logprob: -22.75
    6. '=' → logprob: -23.375
    7. '``' → logprob: -24.25
    8. '00' → logprob: -24.375
    9. '
' → logprob: -24.375
    10. '０' → logprob: -24.5

Token 909: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۰' → logprob: -20.25
    4. '```' → logprob: -20.625
    5. '=' → logprob: -21.125
    6. '   ' → logprob: -21.5
    7. ' ' → logprob: -22.3125
    8. '０' → logprob: -22.375
    9. '==' → logprob: -22.4375
    10. '٠' → logprob: -22.75

Token 910: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.01628807745873928
    2. ':' → logprob: -4.1412882804870605
    3. '                       ' → logprob: -8.391287803649902
    4. '):
' → logprob: -10.766287803649902
    5. '                   ' → logprob: -12.766287803649902
    6. ':
' → logprob: -13.891287803649902
    7. ' :
' → logprob: -14.391287803649902
    8. ':

' → logprob: -14.641287803649902
    9. '():
' → logprob: -14.891287803649902
    10. ' and' → logprob: -16.01628875732422

Token 911: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0004428243264555931
    2. ':
' → logprob: -9.250442504882812
    3. '                   ' → logprob: -9.500442504882812
    4. ' ny' → logprob: -9.500442504882812
    5. '                        
' → logprob: -9.625442504882812
    6. '
' → logprob: -9.875442504882812
    7. ':' → logprob: -10.875442504882812
    8. ',' → logprob: -11.125442504882812
    9. 'ny' → logprob: -11.500442504882812
    10. '```' → logprob: -12.125442504882812

Token 912: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' (adapté à ' ny') → logprob: -4.36574100604048e-06
    2. 'if' → logprob: -13.125004768371582
    3. ' ny' → logprob: -13.625004768371582
    4. 'ans' → logprob: -15.750004768371582
    5. '                   ' → logprob: -15.875004768371582
    6. '```' → logprob: -15.875004768371582
    7. '#' → logprob: -16.125003814697266
    8. 'nj' → logprob: -16.250003814697266
    9. 'nyi' → logprob: -16.250003814697266
    10. '   ' → logprob: -16.250003814697266

Token 913: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05609022080898285
    2. '+' → logprob: -3.6810901165008545
    3. '+=' → logprob: -3.9310901165008545
    4. ' =' → logprob: -4.681090354919434
    5. ' +=' → logprob: -7.806090354919434
    6. ' +' → logprob: -10.431090354919434
    7. '                       ' → logprob: -11.556090354919434
    8. '                           ' → logprob: -12.431090354919434
    9. '2' → logprob: -13.056090354919434
    10. '```' → logprob: -13.681090354919434

Token 914: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005530327325686812
    2. ' =' → logprob: -7.500553131103516
    3. '+=' → logprob: -18.750553131103516
    4. '＝' → logprob: -19.750553131103516
    5. '=y' → logprob: -19.875553131103516
    6. '=
' → logprob: -20.125553131103516
    7. '.=' → logprob: -21.375553131103516
    8. '```' → logprob: -21.500553131103516
    9. '=

' → logprob: -21.625553131103516
    10. '=}' → logprob: -22.500553131103516

Token 915: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001170225441455841
    2. ' y' → logprob: -6.7511701583862305
    3. '                       ' → logprob: -17.501171112060547
    4. '	y' → logprob: -17.626171112060547
    5. 'Y' → logprob: -19.626171112060547
    6. '                   ' → logprob: -20.126171112060547
    7. '(y' → logprob: -21.001171112060547
    8. '=y' → logprob: -21.126171112060547
    9. '   ' → logprob: -21.376171112060547
    10. '‘y' → logprob: -21.376171112060547

Token 916: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0040801819413900375
    2. ' +' → logprob: -5.504080295562744
    3. '+y' → logprob: -14.129079818725586
    4. '2' → logprob: -14.629079818725586
    5. '＋' → logprob: -15.504079818725586
    6. '+
' → logprob: -16.004079818725586
    7. '+x' → logprob: -16.879079818725586
    8. '                       ' → logprob: -17.379079818725586
    9. '+=' → logprob: -17.504079818725586
    10. '```' → logprob: -17.504079818725586

Token 917: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۲' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '２' → logprob: -18.875001907348633
    6. '```' → logprob: -19.125001907348633
    7. '२' → logprob: -19.375001907348633
    8. '২' → logprob: -19.437501907348633
    9. '٢' → logprob: -19.937501907348633
    10. '3' → logprob: -20.437501907348633

Token 918: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '۲' → logprob: -20.5
    3. '２' → logprob: -21.125
    4. ' ' → logprob: -21.625
    5. '```' → logprob: -22.125
    6. '3' → logprob: -22.25
    7. '   ' → logprob: -22.625
    8. '٢' → logprob: -22.75
    9. '২' → logprob: -22.875
    10. '२' → logprob: -23.0

Token 919: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.019534332677721977
    2. '<|end|>' → logprob: -4.394534111022949
    3. ' if' → logprob: -5.644534111022949
    4. 'if' → logprob: -6.019534111022949
    5. '                        
' → logprob: -7.644534111022949
    6. ',' → logprob: -9.14453411102295
    7. '<|end|>' → logprob: -9.39453411102295
    8. '                        ' → logprob: -9.51953411102295
    9. '                           ' → logprob: -10.14453411102295
    10. '       ' → logprob: -10.26953411102295

Token 920: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005975604057312012
    2. 'if' → logprob: -5.130975723266602
    3. ' if' → logprob: -10.130975723266602
    4. '                   ' → logprob: -13.380975723266602
    5. '                        
' → logprob: -13.755975723266602
    6. '       ' → logprob: -13.880975723266602
    7. '```' → logprob: -13.880975723266602
    8. '               ' → logprob: -14.380975723266602
    9. '					' → logprob: -14.880975723266602
    10. '           ' → logprob: -15.005975723266602

Token 921: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002478508511558175
    2. ' if' → logprob: -6.00247859954834
    3. '                       ' → logprob: -13.75247859954834
    4. '                           ' → logprob: -14.00247859954834
    5. '```' → logprob: -14.12747859954834
    6. '                               ' → logprob: -16.377477645874023
    7. 'for' → logprob: -17.627477645874023
    8. '``' → logprob: -18.752477645874023
    9. ' ' → logprob: -19.002477645874023
    10. 'x' → logprob: -19.127477645874023

Token 922: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -2.7610454708337784e-05
    2. ' ny' → logprob: -10.500027656555176
    3. 'y' → logprob: -18.12502670288086
    4. 'nx' → logprob: -18.62502670288086
    5. '
' → logprob: -19.12502670288086
    6. 'nyi' → logprob: -19.75002670288086
    7. 'nyt' → logprob: -20.12502670288086
    8. '```' → logprob: -20.62502670288086
    9. '   ' → logprob: -20.75002670288086
    10. 'nj' → logprob: -21.12502670288086

Token 923: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031881670001894236
    2. '+' → logprob: -6.503188133239746
    3. '>=' → logprob: -6.878188133239746
    4. ' >=' → logprob: -7.503188133239746
    5. '```' → logprob: -10.003188133239746
    6. ' +' → logprob: -10.128188133239746
    7. '   ' → logprob: -12.253188133239746
    8. ' ' → logprob: -12.378188133239746
    9. '``' → logprob: -13.503188133239746
    10. '                           ' → logprob: -13.753188133239746

Token 924: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.16384994983673096
    2. '>=' → logprob: -1.913849949836731
    3. ' <' → logprob: -6.163849830627441
    4. ' <=' → logprob: -7.538849830627441
    5. '<' → logprob: -7.913849830627441
    6. '>' → logprob: -8.413849830627441
    7. ' >' → logprob: -8.663849830627441
    8. '<=' → logprob: -9.163849830627441
    9. '                           ' → logprob: -9.913849830627441
    10. '```' → logprob: -10.288849830627441

Token 925: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -4.0126840758603066e-05
    2. ' Y' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -17.00004005432129
    4. '	Y' → logprob: -18.37504005432129
    5. 'y' → logprob: -19.12504005432129
    6. '(Y' → logprob: -19.62504005432129
    7. '[Y' → logprob: -20.50004005432129
    8. '0' → logprob: -20.75004005432129
    9. '                       ' → logprob: -21.00004005432129
    10. 'Ys' → logprob: -21.37504005432129

Token 926: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.034954022616147995
    2. ':' → logprob: -3.534954071044922
    3. '                           ' → logprob: -5.284954071044922
    4. '                       ' → logprob: -9.534954071044922
    5. '):
' → logprob: -10.534954071044922
    6. '                   ' → logprob: -11.534954071044922
    7. '           ' → logprob: -12.659954071044922
    8. '                               ' → logprob: -13.159954071044922
    9. '                            
' → logprob: -13.534954071044922
    10. '                            ' → logprob: -13.659954071044922

Token 927: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.01987341232597828
    2. 'ans' → logprob: -5.14487361907959
    3. '                   ' → logprob: -5.39487361907959
    4. '                       ' → logprob: -5.64487361907959
    5. '   ' → logprob: -6.51987361907959
    6. ':
' → logprob: -6.51987361907959
    7. '                               ' → logprob: -6.89487361907959
    8. ' ans' → logprob: -7.01987361907959
    9. ':' → logprob: -8.14487361907959
    10. '           ' → logprob: -8.39487361907959

Token 928: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00039825684507377446
    2. ' ans' → logprob: -7.8753981590271
    3. '	ans' → logprob: -11.625398635864258
    4. '                               ' → logprob: -12.125398635864258
    5. '(ans' → logprob: -13.375398635864258
    6. '                           ' → logprob: -13.625398635864258
    7. '_ans' → logprob: -15.500398635864258
    8. 'answer' → logprob: -15.875398635864258
    9. 'anst' → logprob: -15.875398635864258
    10. '```' → logprob: -15.875398635864258

Token 929: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10022219270467758
    2. '+=' → logprob: -2.350222110748291
    3. '                           ' → logprob: -12.10022258758545
    4. '```' → logprob: -12.97522258758545
    5. ']+=' → logprob: -13.10022258758545
    6. '+' → logprob: -13.47522258758545
    7. '                       ' → logprob: -13.97522258758545
    8. '                               ' → logprob: -14.22522258758545
    9. '   ' → logprob: -14.35022258758545
    10. '=' → logprob: -14.60022258758545

Token 930: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -5.5577775128767826e-06
    2. ' ways' → logprob: -12.125005722045898
    3. 'way' → logprob: -16.2500057220459
    4. 'WAYS' → logprob: -19.7500057220459
    5. '           ' → logprob: -20.6250057220459
    6. '                       ' → logprob: -20.8750057220459
    7. '               ' → logprob: -21.2500057220459
    8. 'Ways' → logprob: -21.2500057220459
    9. '   ' → logprob: -21.6250057220459
    10. '                   ' → logprob: -21.7500057220459

Token 931: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06531158834695816
    2. '<|end|>' → logprob: -3.4403116703033447
    3. '
' → logprob: -4.565311431884766
    4. '                           ' → logprob: -5.065311431884766
    5. 'else' → logprob: -5.315311431884766
    6. 'continue' → logprob: -5.690311431884766
    7. ' else' → logprob: -6.940311431884766
    8. '                               ' → logprob: -6.940311431884766
    9. '                        
' → logprob: -6.940311431884766
    10. '               ' → logprob: -7.565311431884766

Token 932: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00677920039743185
    2. '```' → logprob: -5.631779193878174
    3. '                           ' → logprob: -6.381779193878174
    4. '                               ' → logprob: -7.006779193878174
    5. 'else' → logprob: -7.881779193878174
    6. 'continue' → logprob: -9.256779670715332
    7. '                   ' → logprob: -9.631779670715332
    8. '``' → logprob: -12.006779670715332
    9. '           ' → logprob: -12.381779670715332
    10. '               ' → logprob: -12.756779670715332

Token 933: ' else' (ID: 1203)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.062121618539094925
    2. 'else' (adapté à ' else') → logprob: -2.812121629714966
    3. 'elif' → logprob: -9.187121391296387
    4. ' else' → logprob: -10.312121391296387
    5. '                           ' → logprob: -11.812121391296387
    6. '                   ' → logprob: -12.187121391296387
    7. '       ' → logprob: -13.312121391296387
    8. '                               ' → logprob: -13.562121391296387
    9. '               ' → logprob: -14.062121391296387
    10. '           ' → logprob: -14.562121391296387

Token 934: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0599718913435936
    2. ':
' → logprob: -3.059971809387207
    3. ':' → logprob: -4.809971809387207
    4. '                               ' → logprob: -6.434971809387207
    5. '                       ' → logprob: -7.309971809387207
    6. ' if' → logprob: -7.559971809387207
    7. 'if' → logprob: -8.184971809387207
    8. ' and' → logprob: -9.809971809387207
    9. '   ' → logprob: -11.809971809387207
    10. '           ' → logprob: -11.934971809387207

Token 935: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.04903445392847061
    2. 'if' → logprob: -3.049034357070923
    3. '                       ' → logprob: -8.549034118652344
    4. '                               ' → logprob: -8.924034118652344
    5. '```' → logprob: -9.799034118652344
    6. '   ' → logprob: -10.174034118652344
    7. ' if' → logprob: -10.924034118652344
    8. '           ' → logprob: -12.549034118652344
    9. '                         ' → logprob: -13.299034118652344
    10. '                   ' → logprob: -14.799034118652344

Token 936: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -6.034592388459714e-06
    2. '                           ' → logprob: -12.250005722045898
    3. ' if' → logprob: -13.750005722045898
    4. '                               ' → logprob: -16.1250057220459
    5. '
' → logprob: -17.6250057220459
    6. '   ' → logprob: -18.5000057220459
    7. '```' → logprob: -18.5000057220459
    8. 'If' → logprob: -19.7500057220459
    9. '           ' → logprob: -20.0000057220459
    10. 'dp' → logprob: -20.1250057220459

Token 937: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -2.935296834039036e-06
    2. ' grid' → logprob: -12.75000286102295
    3. '(grid' → logprob: -19.375003814697266
    4. '                           ' → logprob: -21.750003814697266
    5. '.grid' → logprob: -22.125003814697266
    6. 'graph' → logprob: -22.500003814697266
    7. 'Grid' → logprob: -22.625003814697266
    8. '	grid' → logprob: -22.625003814697266
    9. ':grid' → logprob: -22.750003814697266
    10. '                       ' → logprob: -23.125003814697266

Token 938: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.200166469876422e-06
    2. '```' → logprob: -12.625004768371582
    3. 'ny' → logprob: -13.625004768371582
    4. '   ' → logprob: -15.625004768371582
    5. '
' → logprob: -16.1250057220459
    6. '==' → logprob: -16.2500057220459
    7. '][' → logprob: -16.7500057220459
    8. '       ' → logprob: -16.8750057220459
    9. '[n' → logprob: -16.8750057220459
    10. 'def' → logprob: -17.0000057220459

Token 939: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.1472419600977446e-06
    2. ' ny' → logprob: -13.875000953674316
    3. '```' → logprob: -17.125001907348633
    4. '
' → logprob: -17.500001907348633
    5. 'yn' → logprob: -17.500001907348633
    6. 'n' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.250001907348633
    8. 'Ny' → logprob: -18.375001907348633
    9. 'y' → logprob: -18.625001907348633
    10. 'nyi' → logprob: -19.375001907348633

Token 940: '2' (ID: 17)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.08042334765195847
    2. '2' → logprob: -2.580423355102539
    3. '[' → logprob: -6.580423355102539
    4. '```' → logprob: -9.330423355102539
    5. '   ' → logprob: -10.580423355102539
    6. '
' → logprob: -12.080423355102539
    7. '``' → logprob: -12.205423355102539
    8. ' ny' → logprob: -12.330423355102539
    9. '               ' → logprob: -12.955423355102539
    10. '       ' → logprob: -13.080423355102539

Token 941: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4076477885246277
    2. '][' → logprob: -1.4076478481292725
    3. '[n' → logprob: -2.4076478481292725
    4. '       ' → logprob: -11.532648086547852
    5. '```' → logprob: -11.907648086547852
    6. '
' → logprob: -12.032648086547852
    7. '   ' → logprob: -12.032648086547852
    8. '               ' → logprob: -13.157648086547852
    9. '           ' → logprob: -13.157648086547852
    10. '                           ' → logprob: -13.782648086547852

Token 942: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -3.173704271830502e-06
    2. '(nx' → logprob: -13.50000286102295
    3. 'x' → logprob: -14.50000286102295
    4. 'ny' → logprob: -14.75000286102295
    5. ' nx' → logprob: -15.25000286102295
    6. 'n' → logprob: -15.75000286102295
    7. '[n' → logprob: -15.75000286102295
    8. '
' → logprob: -16.000003814697266
    9. '][' → logprob: -16.750003814697266
    10. '```' → logprob: -17.375003814697266

Token 943: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017019055783748627
    2. ']!=' → logprob: -4.142019271850586
    3. '!=' → logprob: -7.142019271850586
    4. '[' → logprob: -9.142019271850586
    5. ']==' → logprob: -9.517019271850586
    6. ' !=' → logprob: -12.142019271850586
    7. '```' → logprob: -13.142019271850586
    8. '==' → logprob: -13.392019271850586
    9. ')!=' → logprob: -13.767019271850586
    10. '[]' → logprob: -14.392019271850586

Token 944: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.001014706795103848
    2. ' !=' → logprob: -7.251014709472656
    3. '==' → logprob: -8.126014709472656
    4. ']!=' → logprob: -12.501014709472656
    5. '[' → logprob: -12.751014709472656
    6. '```' → logprob: -13.876014709472656
    7. ')!=' → logprob: -14.876014709472656
    8. '()!=' → logprob: -15.001014709472656
    9. ']' → logprob: -15.501014709472656
    10. '!==' → logprob: -16.126014709472656

Token 945: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -18.25
    4. '0' → logprob: -20.375
    5. '   ' → logprob: -21.0
    6. '`' → logprob: -21.625
    7. '
' → logprob: -21.9375
    8. '۱' → logprob: -22.0
    9. '[' → logprob: -22.5
    10. '१' → logprob: -22.9375

Token 946: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '```' → logprob: -20.125
    4. '0' → logprob: -21.0
    5. '<|end|>' → logprob: -22.125
    6. '[' → logprob: -22.375
    7. '१' → logprob: -22.5
    8. '۱' → logprob: -22.625
    9. '১' → logprob: -22.75
    10. '{' → logprob: -22.875

Token 947: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.047685444355010986
    2. ':' → logprob: -3.547685384750366
    3. '                               ' → logprob: -4.047685623168945
    4. '                           ' → logprob: -8.297685623168945
    5. '):
' → logprob: -10.422685623168945
    6. ':

' → logprob: -11.422685623168945
    7. '```' → logprob: -12.172685623168945
    8. '():
' → logprob: -12.547685623168945
    9. ':
' → logprob: -12.797685623168945
    10. '                       ' → logprob: -12.797685623168945

Token 948: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0013177391374483705
    2. ':
' → logprob: -7.501317501068115
    3. 'dp' → logprob: -7.876317501068115
    4. ':' → logprob: -8.626317977905273
    5. '                           ' → logprob: -9.251317977905273
    6. ' dp' → logprob: -9.876317977905273
    7. '                                   ' → logprob: -11.626317977905273
    8. '                              ' → logprob: -11.876317977905273
    9. '(dp' → logprob: -11.876317977905273
    10. '```' → logprob: -11.876317977905273

Token 949: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -3.547789674485102e-05
    2. ' dp' → logprob: -10.250035285949707
    3. '                               ' → logprob: -17.375036239624023
    4. '                                   ' → logprob: -18.375036239624023
    5. '	dp' → logprob: -21.125036239624023
    6. 'dt' → logprob: -21.250036239624023
    7. '_dp' → logprob: -21.750036239624023
    8. '                                       ' → logprob: -21.750036239624023
    9. '(dp' → logprob: -22.250036239624023
    10. 'd' → logprob: -22.250036239624023

Token 950: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.5954712075181305e-05
    2. 'ny' → logprob: -10.250036239624023
    3. '```' → logprob: -14.625036239624023
    4. ' ny' → logprob: -17.750036239624023
    5. '=' → logprob: -17.750036239624023
    6. 'def' → logprob: -18.125036239624023
    7. '
' → logprob: -18.375036239624023
    8. '[
' → logprob: -18.375036239624023
    9. '   ' → logprob: -18.375036239624023
    10. 'dp' → logprob: -19.500036239624023

Token 951: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -11.750008583068848
    3. 'y' → logprob: -14.625008583068848
    4. 'dp' → logprob: -15.750008583068848
    5. 'yn' → logprob: -16.000009536743164
    6. '   ' → logprob: -16.250009536743164
    7. ' ny' → logprob: -16.500009536743164
    8. '
' → logprob: -17.375009536743164
    9. '```' → logprob: -17.375009536743164
    10. 'n' → logprob: -18.000009536743164

Token 952: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.125001907348633
    3. '```' → logprob: -15.875001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '
' → logprob: -17.875001907348633
    6. '       ' → logprob: -18.125001907348633
    7. 'ny' → logprob: -18.500001907348633
    8. '][' → logprob: -19.250001907348633
    9. '           ' → logprob: -19.250001907348633
    10. '               ' → logprob: -19.375001907348633

Token 953: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.16072042286396027
    2. '][' → logprob: -1.9107204675674438
    3. '[' → logprob: -7.660720348358154
    4. '```' → logprob: -11.535720825195312
    5. '
' → logprob: -12.660720825195312
    6. '                           ' → logprob: -12.910720825195312
    7. '                               ' → logprob: -13.160720825195312
    8. '       ' → logprob: -13.285720825195312
    9. '   ' → logprob: -13.785720825195312
    10. '                       ' → logprob: -14.285720825195312

Token 954: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -4.179569077678025e-05
    2. 'x' → logprob: -10.125041961669922
    3. '(nx' → logprob: -14.125041961669922
    4. ' nx' → logprob: -14.500041961669922
    5. '
' → logprob: -15.750041961669922
    6. 'dx' → logprob: -16.375041961669922
    7. '```' → logprob: -16.625041961669922
    8. '[' → logprob: -17.000041961669922
    9. '[n' → logprob: -17.125041961669922
    10. '][' → logprob: -17.500041961669922

Token 955: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47789642214775085
    2. ']+=' → logprob: -0.9778964519500732
    3. '+=' → logprob: -5.602896213531494
    4. '                               ' → logprob: -10.477896690368652
    5. '[' → logprob: -10.477896690368652
    6. '                           ' → logprob: -11.102896690368652
    7. ' +=' → logprob: -11.102896690368652
    8. ']+' → logprob: -11.477896690368652
    9. '']' → logprob: -11.602896690368652
    10. '```' → logprob: -11.977896690368652

Token 956: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0008316631428897381
    2. ' +=' → logprob: -7.250831604003906
    3. ']+=' → logprob: -9.625831604003906
    4. '                               ' → logprob: -10.000831604003906
    5. '                           ' → logprob: -12.375831604003906
    6. '[' → logprob: -12.750831604003906
    7. '+' → logprob: -13.875831604003906
    8. '                                ' → logprob: -14.500831604003906
    9. '```' → logprob: -14.625831604003906
    10. '=' → logprob: -14.750831604003906

Token 957: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -1.0280383548888494e-06
    2. ' ways' → logprob: -14.125000953674316
    3. 'way' → logprob: -15.500000953674316
    4. '   ' → logprob: -21.000001907348633
    5. 'WAYS' → logprob: -21.000001907348633
    6. 'Ways' → logprob: -21.875001907348633
    7. 'answers' → logprob: -22.000001907348633
    8. 'waves' → logprob: -22.250001907348633
    9. 'wares' → logprob: -22.750001907348633
    10. '```' → logprob: -22.750001907348633

Token 958: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 959: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 960: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007703172159381211
    2. '   ' → logprob: -7.250770092010498
    3. '
' → logprob: -9.750770568847656
    4. ' print' → logprob: -13.250770568847656
    5. '```' → logprob: -15.375770568847656
    6. '    
' → logprob: -16.625770568847656
    7. '	print' → logprob: -18.375770568847656
    8. '  
' → logprob: -19.000770568847656
    9. '``' → logprob: -19.375770568847656
    10. '
' → logprob: -19.375770568847656

Token 961: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.621933451038785e-05
    2. '(total' → logprob: -10.375056266784668
    3. '(' → logprob: -10.625056266784668
    4. '(answer' → logprob: -15.000056266784668
    5. 'ans' → logprob: -15.375056266784668
    6. ' (' → logprob: -16.25005531311035
    7. '(abs' → logprob: -18.00005531311035
    8. '(acc' → logprob: -18.62505531311035
    9. '((' → logprob: -18.75005531311035
    10. '()' → logprob: -19.37505531311035

Token 962: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.856408536899835e-05
    2. '())' → logprob: -11.125028610229492
    3. '()' → logprob: -11.250028610229492
    4. '`)' → logprob: -14.750028610229492
    5. ')`' → logprob: -16.000028610229492
    6. '')' → logprob: -16.875028610229492
    7. ' )' → logprob: -17.250028610229492
    8. '))' → logprob: -17.250028610229492
    9. '(' → logprob: -17.250028610229492
    10. '   ' → logprob: -17.375028610229492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 960
Tokens correctement prédits (1ère position, stricte): 373
Tokens correctement prédits (1ère position, avec adaptation): 435
Tokens correctement prédits (top 10): 767
Précision stricte (1ère position): 38.85%
Précision adaptée (1ère position): 45.31%
Précision (top 10): 79.90%
================================================================================
