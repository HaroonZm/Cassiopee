================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution au problème Maximum Sum Sequence en Python
# Le but est de trouver la somme maximale d'une sous-séquence contiguë dans une séquence donnée.
# La technique utilisée est l'algorithme de Kadane qui résout ce problème en O(n).
# Entrées multiples jusqu'à ce qu'une ligne contenant 0 soit rencontrée.

def max_sum_subsequence(arr):
    """
    Calcule la somme maximale d'une sous-séquence contiguë dans la liste arr.
    Utilisation de l'algorithme de Kadane.
    """
    max_ending_here = arr[0]  # somme max se terminant à la position actuelle
    max_so_far = arr[0]       # somme max trouvée jusqu'ici
    for x in arr[1:]:
        # Met à jour la somme max se terminant ici:
        # Soit on commence une nouvelle sous-séquence à x, soit on continue l'actuelle
        max_ending_here = max(x, max_ending_here + x)
        # Met à jour la somme max globale
        max_so_far = max(max_so_far, max_ending_here)
    return max_so_far

def main():
    import sys
    input_lines = sys.stdin.read().strip().split('\n')
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        n_line = input_lines[idx].strip()
        idx += 1
        if n_line == '0':  # Fin de tous les datasets
            break
        n = int(n_line)
        
        # Lire les n nombres suivants
        arr = []
        for _ in range(n):
            arr.append(int(input_lines[idx].strip()))
            idx += 1
        
        # Calculer et afficher la somme maximale
        print(max_sum_subsequence(arr))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' au' (ID: 2791)
  → Token d'amorce (pas de prédiction)

Token 3: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.18668653070926666
    2. 'pro' → logprob: -3.3116865158081055
    3. '#' → logprob: -3.4366865158081055
    4. ' code' → logprob: -4.0616865158081055
    5. 'r' → logprob: -4.3116865158081055
    6. ' probleme' → logprob: -4.5616865158081055
    7. '-pro' → logprob: -4.6866865158081055
    8. '_pro' → logprob: -4.8116865158081055
    9. 'x' → logprob: -4.8116865158081055
    10. ' #' → logprob: -4.9366865158081055

Token 4: ' Maximum' (ID: 49848)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.698620080947876
    2. ':' → logprob: -1.073620080947876
    3. '\n' → logprob: -2.698620080947876
    4. ' :' → logprob: -3.073620080947876
    5. '\' → logprob: -3.448620080947876
    6. '#' → logprob: -5.948619842529297
    7. 'def' → logprob: -6.198619842529297
    8. '
' → logprob: -6.323619842529297
    9. ' ```' → logprob: -6.573619842529297
    10. 's' → logprob: -6.698619842529297

Token 5: ' Sum' (ID: 34138)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2643130421638489
    2. 'de' → logprob: -2.264312982559204
    3. '_' → logprob: -3.514312982559204
    4. 's' → logprob: -3.639312982559204
    5. ':' → logprob: -3.889312982559204
    6. '```' → logprob: -4.014313220977783
    7. '\' → logprob: -4.764313220977783
    8. ' of' → logprob: -5.639313220977783
    9. ' :' → logprob: -5.639313220977783
    10. ' ' → logprob: -5.764313220977783

Token 6: ' Sequence' (ID: 57144)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11563672125339508
    2. 'def' → logprob: -2.6156368255615234
    3. '_' → logprob: -4.490636825561523
    4. '#' → logprob: -4.615636825561523
    5. '```' → logprob: -5.865636825561523
    6. '=' → logprob: -6.240636825561523
    7. 's' → logprob: -6.365636825561523
    8. ' :' → logprob: -6.365636825561523
    9. ' def' → logprob: -6.615636825561523
    10. '\' → logprob: -6.615636825561523

Token 7: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04567982256412506
    2. 'def' → logprob: -4.045680046081543
    3. '#' → logprob: -4.420680046081543
    4. ' :' → logprob: -4.795680046081543
    5. '\' → logprob: -6.045680046081543
    6. '```' → logprob: -6.420680046081543
    7. '\n' → logprob: -7.420680046081543
    8. 's' → logprob: -7.545680046081543
    9. ':
' → logprob: -7.920680046081543
    10. '.' → logprob: -8.170680046081543

Token 8: ' Python' (ID: 26534)
  Prédit: ' Python'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Python' → logprob: -0.8447818756103516
    2. 'python' → logprob: -1.2197818756103516
    3. 'Python' → logprob: -1.8447818756103516
    4. ' python' → logprob: -3.0947818756103516
    5. 'C' → logprob: -4.219781875610352
    6. ' C' → logprob: -4.344781875610352
    7. '```' → logprob: -4.719781875610352
    8. 'py' → logprob: -5.094781875610352
    9. '.py' → logprob: -5.594781875610352
    10. ' programmation' → logprob: -5.719781875610352

Token 9: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05426303297281265
    2. ' :' → logprob: -3.804263114929199
    3. 'def' → logprob: -4.429263114929199
    4. '```' → logprob: -4.429263114929199
    5. '#' → logprob: -5.179263114929199
    6. ':def' → logprob: -8.3042631149292
    7. '\' → logprob: -8.4292631149292
    8. 's' → logprob: -8.9292631149292
    9. ':
' → logprob: -8.9292631149292
    10. '``' → logprob: -10.0542631149292

Token 10: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10566864907741547
    2. '```' → logprob: -2.730668544769287
    3. 'def' → logprob: -3.480668544769287
    4. '#' → logprob: -6.605668544769287
    5. ':
' → logprob: -7.230668544769287
    6. 's' → logprob: -7.230668544769287
    7. ' :' → logprob: -7.730668544769287
    8. 'd' → logprob: -7.980668544769287
    9. ':def' → logprob: -8.730669021606445
    10. 'n' → logprob: -8.730669021606445

Token 11: ' Le' (ID: 2018)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.308611512184143
    2. 'def' → logprob: -1.308611512184143
    3. ' def' → logprob: -1.433611512184143
    4. ' ```' → logprob: -2.3086113929748535
    5. '```' → logprob: -3.1836113929748535
    6. ' #' → logprob: -3.4336113929748535
    7. '#' → logprob: -3.9336113929748535
    8. 'from' → logprob: -5.8086113929748535
    9. '
' → logprob: -6.0586113929748535
    10. ' de' → logprob: -6.1836113929748535

Token 12: ' but' (ID: 889)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.4019387662410736
    2. ' problème' → logprob: -2.5269386768341064
    3. 'plus' → logprob: -2.7769386768341064
    4. '#' → logprob: -3.0269386768341064
    5. 's' → logprob: -3.5269386768341064
    6. ' code' → logprob: -3.6519386768341064
    7. 'def' → logprob: -4.2769389152526855
    8. 'a' → logprob: -4.7769389152526855
    9. ' maximum' → logprob: -4.9019389152526855
    10. ' meilleur' → logprob: -4.9019389152526855

Token 13: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36915650963783264
    2. ' est' → logprob: -1.2441564798355103
    3. ':' → logprob: -5.244156360626221
    4. ' de' → logprob: -5.369156360626221
    5. ' ' → logprob: -5.619156360626221
    6. ' :' → logprob: -6.244156360626221
    7. ' d' → logprob: -6.619156360626221
    8. 'est' → logprob: -7.244156360626221
    9. ' =' → logprob: -7.244156360626221
    10. ' is' → logprob: -7.619156360626221

Token 14: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.17475298047065735
    2. ' d' → logprob: -1.924752950668335
    3. ' ' → logprob: -4.424753189086914
    4. 'd' → logprob: -6.799753189086914
    5. 'de' → logprob: -7.174753189086914
    6. '#' → logprob: -8.424753189086914
    7. '  ' → logprob: -8.674753189086914
    8. ' #' → logprob: -10.049753189086914
    9. ',' → logprob: -10.549753189086914
    10. '_de' → logprob: -11.049753189086914

Token 15: ' trouver' (ID: 23195)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.057884130626916885
    2. ' trouver' → logprob: -2.9328842163085938
    3. '#' → logprob: -6.807884216308594
    4. 'max' → logprob: -7.557884216308594
    5. ' déterminer' → logprob: -8.307884216308594
    6. 'dé' → logprob: -8.557884216308594
    7. '```' → logprob: -8.932884216308594
    8. 'don' → logprob: -9.182884216308594
    9. ' résoudre' → logprob: -9.182884216308594
    10. 'rés' → logprob: -9.307884216308594

Token 16: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1470223069190979
    2. 'la' → logprob: -2.522022247314453
    3. 'l' → logprob: -4.272022247314453
    4. ' l' → logprob: -4.397022247314453
    5. ' ' → logprob: -4.522022247314453
    6. '```' → logprob: -5.522022247314453
    7. ' ' → logprob: -5.772022247314453
    8. ' une' → logprob: -5.897022247314453
    9. '<|end|>' → logprob: -6.022022247314453
    10. '_la' → logprob: -6.647022247314453

Token 17: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6154760122299194
    2. ' ' → logprob: -1.4904760122299194
    3. ' plus' → logprob: -2.365476131439209
    4. ' sé' → logprob: -2.740476131439209
    5. ' sous' → logprob: -3.490476131439209
    6. ' subse' → logprob: -3.990476131439209
    7. ' s' → logprob: -4.865476131439209
    8. ' sequence' → logprob: -5.615476131439209
    9. ' somme' → logprob: -5.990476131439209
    10. ' meilleure' → logprob: -6.115476131439209

Token 18: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.12922944128513336
    2. ' max' → logprob: -3.3792295455932617
    3. '<|end|>' → logprob: -4.129229545593262
    4. ' optimale' → logprob: -4.379229545593262
    5. '_' → logprob: -4.379229545593262
    6. ' ' → logprob: -4.504229545593262
    7. 'max' → logprob: -4.629229545593262
    8. ' maximum' → logprob: -4.754229545593262
    9. '_max' → logprob: -5.129229545593262
    10. ' maximal' → logprob: -6.379229545593262

Token 19: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4345363676548004
    2. '_' → logprob: -1.184536337852478
    3. ' maximale' → logprob: -3.5595364570617676
    4. '<|end|>' → logprob: -5.559536457061768
    5. ' max' → logprob: -5.684536457061768
    6. ' _' → logprob: -6.184536457061768
    7. ' d' → logprob: -6.934536457061768
    8. '_max' → logprob: -7.184536457061768
    9. ' de' → logprob: -7.309536457061768
    10. ',' → logprob: -7.309536457061768

Token 20: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.0389886200428009
    2. ''un' → logprob: -3.7889885902404785
    3. ''' → logprob: -4.7889885902404785
    4. '’une' → logprob: -5.7889885902404785
    5. 'une' → logprob: -6.1639885902404785
    6. '_' → logprob: -7.4139885902404785
    7. 'u' → logprob: -7.4139885902404785
    8. ''u' → logprob: -8.163989067077637
    9. 'e' → logprob: -8.913989067077637
    10. 'a' → logprob: -9.163989067077637

Token 21: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.5935047268867493
    2. 's' → logprob: -0.9685047268867493
    3. ' sé' → logprob: -3.3435046672821045
    4. 'sé' → logprob: -4.218504905700684
    5. ' subse' → logprob: -5.093504905700684
    6. 'sub' → logprob: -5.968504905700684
    7. 'suite' → logprob: -6.218504905700684
    8. '_s' → logprob: -6.468504905700684
    9. '#' → logprob: -6.718504905700684
    10. ' under' → logprob: -7.218504905700684

Token 22: '-s' (ID: 2011)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8294973373413086
    2. '-s' → logprob: -1.3294973373413086
    3. 'sé' → logprob: -1.4544973373413086
    4. 's' → logprob: -3.4544973373413086
    5. 'sequence' → logprob: -3.9544973373413086
    6. ' sé' → logprob: -5.329497337341309
    7. '#' → logprob: -5.454497337341309
    8. 'liste' → logprob: -6.704497337341309
    9. 'chaine' → logprob: -6.829497337341309
    10. '_s' → logprob: -7.079497337341309

Token 23: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.011233024299144745
    2. 'e' → logprob: -5.136232852935791
    3. 'équ' → logprob: -5.511232852935791
    4. 'quence' → logprob: -7.136232852935791
    5. '#' → logprob: -9.13623332977295
    6. 'u' → logprob: -9.51123332977295
    7. 'érie' → logprob: -9.76123332977295
    8. 'ée' → logprob: -10.13623332977295
    9. 'èque' → logprob: -10.38623332977295
    10. 'q' → logprob: -11.13623332977295

Token 24: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0006390500930137932
    2. 'q' → logprob: -7.500638961791992
    3. '#' → logprob: -10.250638961791992
    4. '`' → logprob: -10.875638961791992
    5. '[' → logprob: -12.250638961791992
    6. '-' → logprob: -12.500638961791992
    7. '_' → logprob: -12.875638961791992
    8. 'qu' → logprob: -13.000638961791992
    9. 'QUENCE' → logprob: -13.000638961791992
    10. '|' → logprob: -13.250638961791992

Token 25: ' cont' (ID: 836)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08995941281318665
    2. '_' → logprob: -2.8399593830108643
    3. '```' → logprob: -5.214959621429443
    4. 's' → logprob: -5.964959621429443
    5. ' ,' → logprob: -5.964959621429443
    6. ',' → logprob: -6.339959621429443
    7. '<|end|>' → logprob: -6.339959621429443
    8. ' ' → logprob: -6.714959621429443
    9. ' _' → logprob: -6.839959621429443
    10. 'import' → logprob: -6.964959621429443

Token 26: 'igu' (ID: 12143)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.741163969039917
    2. 'in' → logprob: -1.116163969039917
    3. 'iguous' → logprob: -2.616163969039917
    4. 'enant' → logprob: -3.116163969039917
    5. 'igu' → logprob: -3.616163969039917
    6. 'enue' → logprob: -3.866163969039917
    7. 'inu' → logprob: -4.366164207458496
    8. 'igue' → logprob: -4.616164207458496
    9. 'ig' → logprob: -6.116164207458496
    10. '```' → logprob: -6.741164207458496

Token 27: 'ë' (ID: 1730)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5810056328773499
    2. 'ue' → logprob: -1.706005573272705
    3. 'üe' → logprob: -1.956005573272705
    4. 'ë' → logprob: -2.206005573272705
    5. 'enue' → logprob: -6.081005573272705
    6. '#' → logprob: -6.831005573272705
    7. 'gue' → logprob: -6.956005573272705
    8. 'ée' → logprob: -7.206005573272705
    9. 'ï' → logprob: -7.831005573272705
    10. '```' → logprob: -8.206006050109863

Token 28: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05396590754389763
    2. '```' → logprob: -3.9289658069610596
    3. ':' → logprob: -4.428966045379639
    4. 'd' → logprob: -4.803966045379639
    5. '\' → logprob: -5.803966045379639
    6. '#' → logprob: -5.928966045379639
    7. ' def' → logprob: -6.303966045379639
    8. '_' → logprob: -7.053966045379639
    9. ',' → logprob: -7.053966045379639
    10. 's' → logprob: -7.178966045379639

Token 29: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.2998467981815338
    2. ' une' → logprob: -1.6748467683792114
    3. 'la' → logprob: -3.174846887588501
    4. ' la' → logprob: -3.799846887588501
    5. 'l' → logprob: -5.674846649169922
    6. 'a' → logprob: -6.674846649169922
    7. ' un' → logprob: -7.174846649169922
    8. 'un' → logprob: -7.674846649169922
    9. ''une' → logprob: -7.799846649169922
    10. 'le' → logprob: -8.049846649169922

Token 30: ' sé' (ID: 7462)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.28602179884910583
    2. ' chaîne' → logprob: -1.9110218286514282
    3. 'liste' → logprob: -2.9110217094421387
    4. 'chaine' → logprob: -3.7860217094421387
    5. ' sé' → logprob: -5.411021709442139
    6. ' chaine' → logprob: -5.411021709442139
    7. ' tableau' → logprob: -5.536021709442139
    8. ' sequence' → logprob: -5.661021709442139
    9. 'sequence' → logprob: -5.661021709442139
    10. 'sé' → logprob: -6.786021709442139

Token 31: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0010490043787285686
    2. 'q' → logprob: -7.251049041748047
    3. '#' → logprob: -8.626049041748047
    4. 'qu' → logprob: -9.501049041748047
    5. 'que' → logprob: -10.626049041748047
    6. 'rie' → logprob: -11.251049041748047
    7. '-' → logprob: -11.376049041748047
    8. 'QUENCE' → logprob: -12.251049041748047
    9. 'quences' → logprob: -12.251049041748047
    10. '```' → logprob: -12.251049041748047

Token 32: ' donnée' (ID: 130126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6763361096382141
    2. ':' → logprob: -1.9263360500335693
    3. '_' → logprob: -2.4263360500335693
    4. '```' → logprob: -2.5513360500335693
    5. '#' → logprob: -2.8013360500335693
    6. 'd' → logprob: -2.9263360500335693
    7. '\' → logprob: -3.8013360500335693
    8. 's' → logprob: -4.551336288452148
    9. 'n' → logprob: -4.676336288452148
    10. '.' → logprob: -5.176336288452148

Token 33: '.
' (ID: 558)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14084100723266602
    2. 'def' → logprob: -2.140841007232666
    3. '```' → logprob: -4.640841007232666
    4. '#' → logprob: -6.015841007232666
    5. '_' → logprob: -7.640841007232666
    6. '\' → logprob: -8.515840530395508
    7. 'i' → logprob: -8.515840530395508
    8. 'n' → logprob: -8.890840530395508
    9. 'de' → logprob: -9.015840530395508
    10. ' d' → logprob: -9.140840530395508

Token 34: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31505587697029114
    2. 'def' → logprob: -1.3150558471679688
    3. '```' → logprob: -6.565055847167969
    4. 'de' → logprob: -8.440055847167969
    5. '#' → logprob: -9.315055847167969
    6. 'import' → logprob: -10.190055847167969
    7. 'dé' → logprob: -10.940055847167969
    8. '\' → logprob: -11.815055847167969
    9. 'n' → logprob: -12.690055847167969
    10. ' d' → logprob: -12.690055847167969

Token 35: ' La' (ID: 3038)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014487017877399921
    2. 'def' → logprob: -4.389486789703369
    3. '```' → logprob: -6.389486789703369
    4. 'import' → logprob: -8.764487266540527
    5. '\' → logprob: -10.139487266540527
    6. '#' → logprob: -10.264487266540527
    7. 'i' → logprob: -10.639487266540527
    8. 'n' → logprob: -11.014487266540527
    9. 'de' → logprob: -11.389487266540527
    10. ' 
' → logprob: -12.889487266540527

Token 36: ' technique' (ID: 16410)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.1594332456588745
    2. ' ' → logprob: -1.2844332456588745
    3. ' #' → logprob: -1.2844332456588745
    4. 'def' → logprob: -2.784433364868164
    5. '#' → logprob: -3.659433364868164
    6. ' d' → logprob: -4.034433364868164
    7. ' ' → logprob: -4.534433364868164
    8. ' meilleure' → logprob: -5.909433364868164
    9. 'dé' → logprob: -6.659433364868164
    10. ' solution' → logprob: -6.659433364868164

Token 37: ' utilisée' (ID: 106548)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.549726128578186
    2. ' d' → logprob: -1.549726128578186
    3. ' ' → logprob: -2.0497260093688965
    4. ' utilisée' → logprob: -3.7997260093688965
    5. ' #' → logprob: -4.4247260093688965
    6. '  ' → logprob: -4.4247260093688965
    7. 's' → logprob: -4.6747260093688965
    8. 'd' → logprob: -5.0497260093688965
    9. ' s' → logprob: -5.1747260093688965
    10. ' du' → logprob: -6.1747260093688965

Token 38: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6883808374404907
    2. ':' → logprob: -1.3133808374404907
    3. 'est' → logprob: -2.938380718231201
    4. ' ' → logprob: -3.188380718231201
    5. ' :' → logprob: -3.688380718231201
    6. ' =' → logprob: -3.813380718231201
    7. ' consiste' → logprob: -3.938380718231201
    8. '=' → logprob: -4.063380718231201
    9. ' #' → logprob: -4.813380718231201
    10. 's' → logprob: -4.813380718231201

Token 39: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3185720145702362
    2. 'l' → logprob: -1.3185720443725586
    3. ' la' → logprob: -6.193572044372559
    4. '```' → logprob: -6.818572044372559
    5. 'd' → logprob: -7.943572044372559
    6. '   ' → logprob: -8.568572044372559
    7. 'a' → logprob: -8.568572044372559
    8. '	l' → logprob: -8.693572044372559
    9. ' celle' → logprob: -9.068572044372559
    10. 'la' → logprob: -9.193572044372559

Token 40: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32702016830444336
    2. ''' → logprob: -1.3270201683044434
    3. 'e' → logprob: -4.577020168304443
    4. ''a' → logprob: -7.577020168304443
    5. '’' → logprob: -7.702020168304443
    6. ''application' → logprob: -7.827020168304443
    7. ''utilisation' → logprob: -7.827020168304443
    8. ' a' → logprob: -8.452020645141602
    9. ''appro' → logprob: -8.452020645141602
    10. 'alg' → logprob: -9.202020645141602

Token 41: 'alg' (ID: 15258)
  Prédit: 'alg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alg' → logprob: -0.13100826740264893
    2. 'algorithm' → logprob: -2.3810081481933594
    3. 'algo' → logprob: -4.631008148193359
    4. ' alg' → logprob: -5.381008148193359
    5. 'appro' → logprob: -5.756008148193359
    6. ''' → logprob: -6.131008148193359
    7. ' algorithm' → logprob: -6.131008148193359
    8. 'optim' → logprob: -6.506008148193359
    9. 'programm' → logprob: -6.631008148193359
    10. 'impl' → logprob: -6.756008148193359

Token 42: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.008681466802954674
    2. 'o' → logprob: -4.883681297302246
    3. 'orithm' → logprob: -7.133681297302246
    4. 'orit' → logprob: -8.508681297302246
    5. '#' → logprob: -10.383681297302246
    6. 'or' → logprob: -11.508681297302246
    7. '```' → logprob: -11.758681297302246
    8. 'orithms' → logprob: -12.008681297302246
    9. '[' → logprob: -12.258681297302246
    10. 'ori' → logprob: -12.508681297302246

Token 43: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.011234678328037262
    2. 'm' → logprob: -4.511234760284424
    3. 'mie' → logprob: -9.261234283447266
    4. 'mes' → logprob: -9.761234283447266
    5. '```' → logprob: -11.511234283447266
    6. '#' → logprob: -12.886234283447266
    7. 'hme' → logprob: -13.386234283447266
    8. 'mme' → logprob: -13.511234283447266
    9. '\' → logprob: -13.636234283447266
    10. 'ме' → logprob: -13.636234283447266

Token 44: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.002880595624446869
    2. ' d' → logprob: -6.502880573272705
    3. 'de' → logprob: -7.377880573272705
    4. ' ' → logprob: -7.502880573272705
    5. 'd' → logprob: -10.002881050109863
    6. '_de' → logprob: -10.252881050109863
    7. ' of' → logprob: -11.127881050109863
    8. ' Kad' → logprob: -11.252881050109863
    9. ' "' → logprob: -11.502881050109863
    10. ' d'S' → logprob: -11.752881050109863

Token 45: ' Kad' (ID: 53913)
  Prédit: 'Kad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Kad' → logprob: -0.1800161898136139
    2. ' Kad' → logprob: -1.8050161600112915
    3. 'K' → logprob: -8.68001651763916
    4. ' kad' → logprob: -10.55501651763916
    5. 'kad' → logprob: -10.80501651763916
    6. ' l' → logprob: -11.55501651763916
    7. ' ' → logprob: -11.68001651763916
    8. ' K' → logprob: -11.80501651763916
    9. 'l' → logprob: -12.18001651763916
    10. '```' → logprob: -12.30501651763916

Token 46: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.473258376121521
    2. 'n' → logprob: -1.848258376121521
    3. 'nes' → logprob: -2.8482584953308105
    4. 'z' → logprob: -2.8482584953308105
    5. 'ne' → logprob: -2.9732584953308105
    6. '```' → logprob: -4.3482584953308105
    7. 'ns' → logprob: -4.9732584953308105
    8. 'an' → logprob: -5.2232584953308105
    9. '``' → logprob: -5.2232584953308105
    10. 'a' → logprob: -5.2232584953308105

Token 47: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45978695154190063
    2. '```' → logprob: -1.2097868919372559
    3. '
' → logprob: -2.959786891937256
    4. '

' → logprob: -5.459786891937256
    5. 'd' → logprob: -5.959786891937256
    6. ':' → logprob: -5.959786891937256
    7. '``' → logprob: -6.459786891937256
    8. '#' → logprob: -6.459786891937256
    9. '\' → logprob: -6.709786891937256
    10. ' 

' → logprob: -6.834786891937256

Token 48: ' rés' (ID: 13282)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.13828326761722565
    2. ' consiste' → logprob: -2.5132832527160645
    3. ' calc' → logprob: -4.2632832527160645
    4. ' trouve' → logprob: -4.6382832527160645
    5. ' ' → logprob: -4.8882832527160645
    6. ' continue' → logprob: -5.1382832527160645
    7. ' s' → logprob: -6.5132832527160645
    8. ' a' → logprob: -6.7632832527160645
    9. '  ' → logprob: -6.8882832527160645
    10. ' est' → logprob: -7.1382832527160645

Token 49: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.014941129833459854
    2. 's' → logprob: -6.514941215515137
    3. 'oit' → logprob: -6.514941215515137
    4. '#' → logprob: -6.639941215515137
    5. 'oud' → logprob: -6.639941215515137
    6. 'oute' → logprob: -7.014941215515137
    7. 'e' → logprob: -7.264941215515137
    8. '_' → logprob: -7.389941215515137
    9. '\' → logprob: -7.514941215515137
    10. 'ou' → logprob: -7.764941215515137

Token 50: ' ce' (ID: 2357)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.0658344253897667
    2. ' efficacement' → logprob: -2.9408345222473145
    3. 'le' → logprob: -5.5658345222473145
    4. ' efficiently' → logprob: -5.8158345222473145
    5. ' ce' → logprob: -7.0658345222473145
    6. ' la' → logprob: -7.3158345222473145
    7. ' ' → logprob: -8.065834045410156
    8. ' un' → logprob: -8.440834045410156
    9. ' l' → logprob: -8.565834045410156
    10. ' rapidement' → logprob: -8.690834045410156

Token 51: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.037126313894987106
    2. 'pro' → logprob: -3.537126302719116
    3. ' probl' → logprob: -5.537126541137695
    4. 'proble' → logprob: -7.037126541137695
    5. '```' → logprob: -7.287126541137695
    6. ' probleme' → logprob: -7.662126541137695
    7. 's' → logprob: -8.287126541137695
    8. ' problém' → logprob: -8.787126541137695
    9. ' type' → logprob: -8.912126541137695
    10. '#' → logprob: -8.912126541137695

Token 52: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6457480192184448
    2. '```' → logprob: -1.5207480192184448
    3. '
' → logprob: -1.7707480192184448
    4. '

' → logprob: -2.7707481384277344
    5. ':' → logprob: -4.395748138427734
    6. '\' → logprob: -5.520748138427734
    7. '.' → logprob: -6.645748138427734
    8. 'n' → logprob: -7.020748138427734
    9. '
' → logprob: -7.145748138427734
    10. '#' → logprob: -7.270748138427734

Token 53: ' O' (ID: 532)
  Prédit: ' temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.132473424077034
    2. ' O' → logprob: -3.6324734687805176
    3. ' utilisant' → logprob: -3.7574734687805176
    4. ' une' → logprob: -4.132473468780518
    5. 'temps' → logprob: -4.257473468780518
    6. ' ' → logprob: -4.382473468780518
    7. 'O' → logprob: -4.632473468780518
    8. '```' → logprob: -5.132473468780518
    9. '   ' → logprob: -5.632473468780518
    10. ' optim' → logprob: -6.007473468780518

Token 54: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00912878941744566
    2. '(' → logprob: -4.759128570556641
    3. '(N' → logprob: -7.759128570556641
    4. 'n' → logprob: -9.63412857055664
    5. '\' → logprob: -12.50912857055664
    6. '(
' → logprob: -12.75912857055664
    7. ' (' → logprob: -13.00912857055664
    8. '-' → logprob: -13.38412857055664
    9. '\(' → logprob: -13.63412857055664
    10. '_n' → logprob: -13.88412857055664

Token 55: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047082986566238105
    2. ' )' → logprob: -7.7504706382751465
    3. ').' → logprob: -10.500471115112305
    4. ')
' → logprob: -11.625471115112305
    5. '),' → logprob: -13.375471115112305
    6. '.' → logprob: -15.250471115112305
    7. ')\' → logprob: -15.375471115112305
    8. ')**' → logprob: -15.500471115112305
    9. 'log' → logprob: -15.750471115112305
    10. ')

' → logprob: -15.750471115112305

Token 56: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012141678482294083
    2. '```' → logprob: -4.762141704559326
    3. 'd' → logprob: -5.887141704559326
    4. '\' → logprob: -8.137141227722168
    5. 'n' → logprob: -8.387141227722168
    6. 'import' → logprob: -8.637141227722168
    7. '#' → logprob: -11.262141227722168
    8. '
' → logprob: -11.637141227722168
    9. '``' → logprob: -11.637141227722168
    10. 'dé' → logprob: -12.137141227722168

Token 57: ' Entr' (ID: 50650)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005702073220163584
    2. 'd' → logprob: -5.755702018737793
    3. '```' → logprob: -6.380702018737793
    4. '\' → logprob: -8.005702018737793
    5. 'import' → logprob: -8.380702018737793
    6. 'n' → logprob: -8.755702018737793
    7. '
' → logprob: -10.005702018737793
    8. 'de' → logprob: -10.130702018737793
    9. '\n' → logprob: -11.880702018737793
    10. '``' → logprob: -12.630702018737793

Token 58: 'ées' (ID: 5161)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.4894651770591736
    2. 'ée' → logprob: -1.2394652366638184
    3. 'r' → logprob: -2.3644652366638184
    4. 'er' → logprob: -6.364465236663818
    5. 'ré' → logprob: -7.364465236663818
    6. 'ête' → logprob: -7.489465236663818
    7. 'ées' → logprob: -8.73946475982666
    8. '#' → logprob: -9.11446475982666
    9. '```' → logprob: -9.86446475982666
    10. '_r' → logprob: -9.98946475982666

Token 59: ' multiples' (ID: 70720)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3620840311050415
    2. ' :' → logprob: -1.2370840311050415
    3. 's' → logprob: -4.862083911895752
    4. ' =' → logprob: -5.862083911895752
    5. 'def' → logprob: -6.862083911895752
    6. '#' → logprob: -7.487083911895752
    7. '[:]' → logprob: -8.11208438873291
    8. 'n' → logprob: -8.23708438873291
    9. '=' → logprob: -9.23708438873291
    10. '```' → logprob: -9.86208438873291

Token 60: ' jusqu' (ID: 21961)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08968079090118408
    2. 'n' → logprob: -2.9646806716918945
    3. '```' → logprob: -3.7146806716918945
    4. '
' → logprob: -5.7146806716918945
    5. 'import' → logprob: -6.0896806716918945
    6. 'd' → logprob: -6.5896806716918945
    7. '\' → logprob: -6.5896806716918945
    8. '#' → logprob: -7.4646806716918945
    9. ':' → logprob: -8.589680671691895
    10. '\n' → logprob: -8.714680671691895

Token 61: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.0009973214473575354
    2. ''' → logprob: -7.375997543334961
    3. '_' → logprob: -8.875997543334961
    4. ''a' → logprob: -9.500997543334961
    5. ''au' → logprob: -9.500997543334961
    6. '’à' → logprob: -9.625997543334961
    7. 'à' → logprob: -11.500997543334961
    8. ''_' → logprob: -12.875997543334961
    9. '_a' → logprob: -14.125997543334961
    10. '_'' → logprob: -14.500997543334961

Token 62: ' ce' (ID: 2357)
  Prédit: ' EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.5828458666801453
    2. 'EOF' → logprob: -0.8328458666801453
    3. ' la' → logprob: -5.207845687866211
    4. 'la' → logprob: -7.957845687866211
    5. '```' → logprob: -8.332845687866211
    6. ' ce' → logprob: -8.707845687866211
    7. 'l' → logprob: -9.082845687866211
    8. ''' → logprob: -9.207845687866211
    9. ' fin' → logprob: -9.207845687866211
    10. '''' → logprob: -9.457845687866211

Token 63: ' qu' (ID: 474)
  Prédit: ' EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -1.4943026304244995
    2. 'EOF' → logprob: -1.9943026304244995
    3. ''' → logprob: -2.119302749633789
    4. ''une' → logprob: -2.369302749633789
    5. '#' → logprob: -2.494302749633789
    6. 'u' → logprob: -3.119302749633789
    7. ''#' → logprob: -3.119302749633789
    8. 'qu' → logprob: -3.119302749633789
    9. ''à' → logprob: -3.244302749633789
    10. ''a' → logprob: -3.494302749633789

Token 64: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2505837678909302
    2. '_' → logprob: -3.0005836486816406
    3. ''à' → logprob: -3.1255836486816406
    4. ''une' → logprob: -3.2505836486816406
    5. ''on' → logprob: -3.8755836486816406
    6. 'e' → logprob: -4.125583648681641
    7. ''a' → logprob: -4.375583648681641
    8. ' EOF' → logprob: -4.500583648681641
    9. ''il' → logprob: -4.750583648681641
    10. 'a' → logprob: -5.000583648681641

Token 65: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.5997588038444519
    2. ' ' → logprob: -1.3497588634490967
    3. ' valeur' → logprob: -2.9747588634490967
    4. ' EOF' → logprob: -3.3497588634490967
    5. ' fin' → logprob: -3.8497588634490967
    6. ' line' → logprob: -3.8497588634490967
    7. ' entrée' → logprob: -4.224758625030518
    8. '0' → logprob: -4.474758625030518
    9. '-' → logprob: -5.099758625030518
    10. ' -' → logprob: -5.099758625030518

Token 66: ' contenant' (ID: 131049)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.30610257387161255
    2. ' vide' → logprob: -1.4311025142669678
    3. ' soit' → logprob: -4.681102752685547
    4. 'v' → logprob: -5.681102752685547
    5. ' v' → logprob: -6.556102752685547
    6. ' n' → logprob: -6.931102752685547
    7. 'ne' → logprob: -7.056102752685547
    8. 'so' → logprob: -7.056102752685547
    9. '"' → logprob: -7.056102752685547
    10. ' ' → logprob: -7.181102752685547

Token 67: ' ' (ID: 220)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5510075092315674
    2. ' "' → logprob: -1.5510075092315674
    3. ' ' → logprob: -1.9260075092315674
    4. '0' → logprob: -3.6760075092315674
    5. ' '' → logprob: -5.301007270812988
    6. ''' → logprob: -5.426007270812988
    7. '-' → logprob: -5.676007270812988
    8. ' un' → logprob: -5.863507270812988
    9. ' une' → logprob: -5.926007270812988
    10. ' EOF' → logprob: -6.363507270812988

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49716076254844666
    2. '"' → logprob: -0.997160792350769
    3. ''' → logprob: -4.497160911560059
    4. '-' → logprob: -4.997160911560059
    5. ' ' → logprob: -6.872160911560059
    6. '`' → logprob: -7.247160911560059
    7. '"-' → logprob: -7.872160911560059
    8. 'EOF' → logprob: -8.247160911560059
    9. '```' → logprob: -8.372160911560059
    10. '#' → logprob: -8.434660911560059

Token 69: ' soit' (ID: 17293)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07528620213270187
    2. '\n' → logprob: -3.5752861499786377
    3. '

' → logprob: -4.200286388397217
    4. '\' → logprob: -5.075286388397217
    5. ' 
' → logprob: -5.075286388397217
    6. 'import' → logprob: -5.825286388397217
    7. '```' → logprob: -5.825286388397217
    8. 'n' → logprob: -6.700286388397217
    9. '
 
' → logprob: -6.700286388397217
    10. ' 

' → logprob: -6.825286388397217

Token 70: ' rencontr' (ID: 49751)
  Prédit: ' rencontr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rencontr' → logprob: -0.06057120859622955
    2. ' l' → logprob: -3.6855711936950684
    3. 'enc' → logprob: -3.9355711936950684
    4. ' encountered' → logprob: -4.560571193695068
    5. ' encounter' → logprob: -7.060571193695068
    6. ' rencontré' → logprob: -7.185571193695068
    7. ' ' → logprob: -7.435571193695068
    8. ' détect' → logprob: -7.685571193695068
    9. 'l' → logprob: -8.185571670532227
    10. ' reç' → logprob: -8.685571670532227

Token 71: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.11352936923503876
    2. 'rée' → logprob: -2.7385294437408447
    3. 'é' → logprob: -3.2385294437408447
    4. 'r' → logprob: -5.988529205322266
    5. 'ré' → logprob: -7.488529205322266
    6. 'e' → logprob: -8.613529205322266
    7. '#' → logprob: -10.488529205322266
    8. ' é' → logprob: -10.863529205322266
    9. 'ee' → logprob: -11.238529205322266
    10. 'ree' → logprob: -11.238529205322266

Token 72: '.

' (ID: 364)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.72758948802948
    2. '
' → logprob: -1.10258948802948
    3. 'n' → logprob: -2.1025896072387695
    4. 'import' → logprob: -3.7275896072387695
    5. '\n' → logprob: -3.8525896072387695
    6. 'while' → logprob: -4.7275896072387695
    7. '\' → logprob: -5.7275896072387695
    8. '``' → logprob: -6.2275896072387695
    9. 'def' → logprob: -6.4775896072387695
    10. '

' → logprob: -6.9775896072387695

Token 73: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7800518274307251
    2. 'while' → logprob: -1.030051827430725
    3. 'n' → logprob: -1.905051827430725
    4. 'import' → logprob: -3.4050517082214355
    5. '
' → logprob: -6.6550517082214355
    6. '``' → logprob: -7.9050517082214355
    7. 'def' → logprob: -8.155052185058594
    8. 'd' → logprob: -8.780052185058594
    9. ' while' → logprob: -9.155052185058594
    10. '\' → logprob: -9.155052185058594

Token 74: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.26170507073402405
    2. ' maximum' → logprob: -1.5117050409317017
    3. ' ' → logprob: -5.636704921722412
    4. ' maximal' → logprob: -6.261704921722412
    5. ' maximale' → logprob: -6.886704921722412
    6. ' main' → logprob: -6.886704921722412
    7. ' solution' → logprob: -7.386704921722412
    8. '_' → logprob: -7.511704921722412
    9. ' solve' → logprob: -8.26170539855957
    10. ' maximize' → logprob: -8.51170539855957

Token 75: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.9112099409103394
    2. '_s' → logprob: -1.4112099409103394
    3. '_sequence' → logprob: -1.5362099409103394
    4. '_sub' → logprob: -2.161210060119629
    5. 'imum' → logprob: -4.411210060119629
    6. '_' → logprob: -4.536210060119629
    7. '_seq' → logprob: -8.411210060119629
    8. '_max' → logprob: -8.661210060119629
    9. '_subset' → logprob: -9.411210060119629
    10. '_so' → logprob: -9.536210060119629

Token 76: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.6982836723327637
    2. '_sequence' → logprob: -0.6982836723327637
    3. '_' → logprob: -5.448283672332764
    4. '_cont' → logprob: -8.198284149169922
    5. '_s' → logprob: -8.323284149169922
    6. '_seq' → logprob: -8.573284149169922
    7. 'sub' → logprob: -10.698284149169922
    8. 'sequence' → logprob: -11.073284149169922
    9. 's' → logprob: -11.323284149169922
    10. '_so' → logprob: -11.573284149169922

Token 77: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0036805979907512665
    2. 'array' → logprob: -5.75368070602417
    3. '_sequence' → logprob: -8.503680229187012
    4. 'seq' → logprob: -8.878680229187012
    5. 'quence' → logprob: -9.253680229187012
    6. 's' → logprob: -10.253680229187012
    7. ' sequence' → logprob: -11.753680229187012
    8. 'sequ' → logprob: -12.128680229187012
    9. '_s' → logprob: -12.753680229187012
    10. 'e' → logprob: -12.878680229187012

Token 78: '(arr' (ID: 19646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09729553014039993
    2. '(sequence' → logprob: -3.2222955226898193
    3. '(arr' → logprob: -3.5972955226898193
    4. '(seq' → logprob: -4.097295761108398
    5. '(lst' → logprob: -5.597295761108398
    6. '(nums' → logprob: -5.972295761108398
    7. '(array' → logprob: -7.222295761108398
    8. '(s' → logprob: -7.847295761108398
    9. '(l' → logprob: -7.972295761108398
    10. '_sequence' → logprob: -8.347295761108398

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013598784571513534
    2. ')' → logprob: -6.751359939575195
    3. ' ):' → logprob: -9.001359939575195
    4. ':' → logprob: -10.126359939575195
    5. '[]):' → logprob: -11.626359939575195
    6. '):
' → logprob: -11.751359939575195
    7. '   ' → logprob: -12.626359939575195
    8. ']:' → logprob: -13.376359939575195
    9. '[' → logprob: -13.751359939575195
    10. ' ' → logprob: -13.876359939575195

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004716703202575445
    2. ':' → logprob: -5.379716873168945
    3. ':
' → logprob: -10.879716873168945
    4. ' :' → logprob: -11.379716873168945
    5. '    
' → logprob: -11.379716873168945
    6. '   ' → logprob: -11.379716873168945
    7. ' ' → logprob: -11.504716873168945
    8. '	max' → logprob: -12.129716873168945
    9. 'max' → logprob: -12.254716873168945
    10. '```' → logprob: -12.504716873168945

Token 81: ' """
' (ID: 7037)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7074093818664551
    2. '   ' → logprob: -1.207409381866455
    3. ' n' → logprob: -2.457409381866455
    4. ' if' → logprob: -2.582409381866455
    5. 'max' → logprob: -3.582409381866455
    6. ' current' → logprob: -4.082409381866455
    7. 'if' → logprob: -7.082409381866455
    8. 'n' → logprob: -7.582409381866455
    9. 'current' → logprob: -7.582409381866455
    10. ' ' → logprob: -9.332408905029297

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2974959909915924
    2. 'max' → logprob: -1.67249596118927
    3. ' max' → logprob: -3.7974960803985596
    4. '"' → logprob: -5.1724958419799805
    5. 'n' → logprob: -5.1724958419799805
    6. '       ' → logprob: -5.6724958419799805
    7. 'm' → logprob: -5.6724958419799805
    8. '"""' → logprob: -5.6724958419799805
    9. '"""
' → logprob: -5.7974958419799805
    10. ' n' → logprob: -5.7974958419799805

Token 83: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4237116873264313
    2. 'Calcul' → logprob: -1.1737116575241089
    3. 'Cal' (adapté à ' Cal') → logprob: -3.9237117767333984
    4. ' Cal' → logprob: -6.173711776733398
    5. 'Trou' → logprob: -6.173711776733398
    6. '       ' → logprob: -6.298711776733398
    7. ' Calcul' → logprob: -6.423711776733398
    8. 'Calculate' → logprob: -6.423711776733398
    9. ' Trou' → logprob: -6.798711776733398
    10. '    ' → logprob: -6.798711776733398

Token 84: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.29166337847709656
    2. 'cul' → logprob: -1.416663408279419
    3. 'c' → logprob: -4.79166316986084
    4. 'culate' → logprob: -6.29166316986084
    5. 'cula' → logprob: -8.91666316986084
    6. 'cules' → logprob: -9.79166316986084
    7. 'cu' → logprob: -10.79166316986084
    8. 'cular' → logprob: -10.91666316986084
    9. '```' → logprob: -11.16666316986084
    10. 'culator' → logprob: -11.54166316986084

Token 85: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.011885036714375019
    2. '   ' → logprob: -5.011885166168213
    3. ' ' → logprob: -6.261885166168213
    4. ' l' → logprob: -7.136885166168213
    5. ' le' → logprob: -7.136885166168213
    6. ' the' → logprob: -7.386885166168213
    7. '    ' → logprob: -8.261884689331055
    8. '  ' → logprob: -8.511884689331055
    9. 'e' → logprob: -8.886884689331055
    10. '_' → logprob: -9.136884689331055

Token 86: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.049241803586483
    2. ' plus' → logprob: -3.549241781234741
    3. 's' → logprob: -4.67424201965332
    4. '   ' → logprob: -5.67424201965332
    5. ' maximum' → logprob: -5.79924201965332
    6. ' maximale' → logprob: -6.79924201965332
    7. ' max' → logprob: -7.04924201965332
    8. ' ' → logprob: -8.04924201965332
    9. ' sum' → logprob: -8.17424201965332
    10. ' meilleure' → logprob: -8.17424201965332

Token 87: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.0054437583312392235
    2. '_max' → logprob: -6.505443572998047
    3. ' maximal' → logprob: -6.630443572998047
    4. 'max' → logprob: -7.130443572998047
    5. ' max' → logprob: -7.380443572998047
    6. ' maximum' → logprob: -7.755443572998047
    7. ' optimale' → logprob: -8.130443572998047
    8. ' maxim' → logprob: -9.130443572998047
    9. '(max' → logprob: -9.255443572998047
    10. '   ' → logprob: -9.755443572998047

Token 88: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5728240013122559
    2. '   ' → logprob: -1.9478240013122559
    3. ' d' → logprob: -2.322824001312256
    4. '<|end|>' → logprob: -2.322824001312256
    5. ' maximale' → logprob: -2.822824001312256
    6. ' de' → logprob: -4.072824001312256
    7. '  ' → logprob: -5.572824001312256
    8. ' ' → logprob: -5.572824001312256
    9. 'd' → logprob: -6.072824001312256
    10. '<|end|>' → logprob: -6.572824001312256

Token 89: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.012147453613579273
    2. ''' → logprob: -5.762147426605225
    3. 'une' → logprob: -5.887147426605225
    4. 'e' → logprob: -6.012147426605225
    5. '’une' → logprob: -6.512147426605225
    6. ''un' → logprob: -7.262147426605225
    7. 'a' → logprob: -7.512147426605225
    8. ' une' → logprob: -7.762147426605225
    9. '   ' → logprob: -8.512147903442383
    10. 'u' → logprob: -8.512147903442383

Token 90: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.030042966827750206
    2. ' subse' → logprob: -4.030043125152588
    3. 's' → logprob: -5.280043125152588
    4. ' under' → logprob: -6.030043125152588
    5. ' somme' → logprob: -6.655043125152588
    6. ' ' → logprob: -6.905043125152588
    7. ' sub' → logprob: -7.280043125152588
    8. '_s' → logprob: -7.530043125152588
    9. 'sub' → logprob: -8.28004264831543
    10. 'Sous' → logprob: -8.78004264831543

Token 91: '-s' (ID: 2011)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10174448043107986
    2. '-s' → logprob: -2.9767444133758545
    3. '_' → logprob: -3.6017444133758545
    4. ' -' → logprob: -5.226744651794434
    5. '_-' → logprob: -5.351744651794434
    6. '_s' → logprob: -5.476744651794434
    7. '_sequence' → logprob: -6.351744651794434
    8. '-se' → logprob: -6.976744651794434
    9. '   ' → logprob: -6.976744651794434
    10. '-_' → logprob: -8.726744651794434

Token 92: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.03955460712313652
    2. 'équ' → logprob: -3.7895545959472656
    3. 'quence' → logprob: -4.414554595947266
    4. '-' → logprob: -5.914554595947266
    5. '-é' → logprob: -8.039554595947266
    6. '-s' → logprob: -8.039554595947266
    7. 'e' → logprob: -8.664554595947266
    8. '_s' → logprob: -8.789554595947266
    9. '_' → logprob: -9.414554595947266
    10. 'éc' → logprob: -9.789554595947266

Token 93: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -2.856408536899835e-05
    2. 'q' → logprob: -10.875028610229492
    3. 'QUENCE' → logprob: -12.625028610229492
    4. '   ' → logprob: -13.250028610229492
    5. '
' → logprob: -13.750028610229492
    6. 'qu' → logprob: -13.875028610229492
    7. 'quences' → logprob: -14.625028610229492
    8. 'que' → logprob: -14.750028610229492
    9. '-' → logprob: -15.125028610229492
    10. '#' → logprob: -15.250028610229492

Token 94: ' cont' (ID: 836)
  Prédit: ' cont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cont' → logprob: -0.49354463815689087
    2. '<|end|>' → logprob: -1.493544578552246
    3. ' ' → logprob: -2.368544578552246
    4. ' contiguous' → logprob: -3.118544578552246
    5. 'cont' → logprob: -5.368544578552246
    6. '_cont' → logprob: -5.368544578552246
    7. ' )' → logprob: -5.493544578552246
    8. '  ' → logprob: -5.868544578552246
    9. ' ' → logprob: -6.743544578552246
    10. ' maximale' → logprob: -6.743544578552246

Token 95: 'igu' (ID: 12143)
  Prédit: 'igu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igu' → logprob: -0.003963112831115723
    2. 'ig' → logprob: -6.378962993621826
    3. 'iguous' → logprob: -6.503962993621826
    4. 'igua' → logprob: -8.378963470458984
    5. 'í' → logprob: -8.628963470458984
    6. 'i' → logprob: -9.128963470458984
    7. 'igue' → logprob: -10.003963470458984
    8. 'in' → logprob: -10.253963470458984
    9. 'inue' → logprob: -10.628963470458984
    10. 'ingu' → logprob: -10.628963470458984

Token 96: 'ë' (ID: 1730)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.07830166071653366
    2. 'uée' → logprob: -3.2033016681671143
    3. 'üe' → logprob: -3.5783016681671143
    4. 'u' → logprob: -5.203301429748535
    5. 'úe' → logprob: -7.578301429748535
    6. 'ué' → logprob: -8.328301429748535
    7. ' ue' → logprob: -8.578301429748535
    8. 'ù' → logprob: -9.453301429748535
    9. ' u' → logprob: -9.703301429748535
    10. 'û' → logprob: -9.703301429748535

Token 97: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5567625164985657
    2. ' de' → logprob: -2.056762456893921
    3. ' ' → logprob: -2.931762456893921
    4. '  ' → logprob: -3.681762456893921
    5. '<|end|>' → logprob: -3.681762456893921
    6. ' ,' → logprob: -3.806762456893921
    7. ' )' → logprob: -3.931762456893921
    8. ',' → logprob: -3.931762456893921
    9. ' possible' → logprob: -4.0567626953125
    10. ' du' → logprob: -4.0567626953125

Token 98: ' la' (ID: 557)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.5035697221755981
    2. ' la' → logprob: -2.0035696029663086
    3. ' un' → logprob: -2.5035696029663086
    4. ' une' → logprob: -2.7535696029663086
    5. ' ' → logprob: -3.0035696029663086
    6. '   ' → logprob: -3.7535696029663086
    7. 'arr' → logprob: -3.8785696029663086
    8. ' l' → logprob: -4.128569602966309
    9. ' le' → logprob: -6.628569602966309
    10. 'l' → logprob: -7.128569602966309

Token 99: ' liste' (ID: 31719)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.42656800150871277
    2. 'arr' → logprob: -1.6765680313110352
    3. ' liste' → logprob: -2.301568031311035
    4. ' tableau' → logprob: -3.426568031311035
    5. ' array' → logprob: -4.426568031311035
    6. ' sequence' → logprob: -5.051568031311035
    7. '   ' → logprob: -5.051568031311035
    8. 'liste' → logprob: -7.051568031311035
    9. ' list' → logprob: -7.426568031311035
    10. ' ' → logprob: -8.051568031311035

Token 100: ' arr' (ID: 1724)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1679458618164062
    2. ' de' → logprob: -1.4179458618164062
    3. ' arr' → logprob: -2.1679458618164062
    4. 'arr' → logprob: -2.6679458618164062
    5. ' ' → logprob: -2.9179458618164062
    6. '<|end|>' → logprob: -3.1679458618164062
    7. ' des' → logprob: -3.4179458618164062
    8. '(arr' → logprob: -3.6679458618164062
    9. '[arr' → logprob: -3.6679458618164062
    10. '[' → logprob: -4.292945861816406

Token 101: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02551237680017948
    2. '.' → logprob: -4.150512218475342
    3. ')' → logprob: -6.400512218475342
    4. ' """' → logprob: -6.400512218475342
    5. ' """
' → logprob: -6.525512218475342
    6. ',' → logprob: -6.525512218475342
    7. '  ' → logprob: -7.150512218475342
    8. ' ' → logprob: -7.275512218475342
    9. '"""' → logprob: -7.775512218475342
    10. ' )' → logprob: -7.900512218475342

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003320426447317004
    2. '    
' → logprob: -6.253320217132568
    3. '
' → logprob: -7.628320217132568
    4. '"""' → logprob: -8.503320693969727
    5. '"""
' → logprob: -8.753320693969727
    6. '    ' → logprob: -8.753320693969727
    7. '   
' → logprob: -9.128320693969727
    8. '```' → logprob: -9.378320693969727
    9. ' 
' → logprob: -10.128320693969727
    10. '     
' → logprob: -10.253320693969727

Token 103: ' Util' (ID: 13564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004882788751274347
    2. '    
' → logprob: -6.1298828125
    3. '
' → logprob: -6.7548828125
    4. '"""' → logprob: -7.1298828125
    5. '   
' → logprob: -7.8798828125
    6. '  
' → logprob: -9.2548828125
    7. '    ' → logprob: -9.6298828125
    8. '"""
' → logprob: -9.7548828125
    9. '     
' → logprob: -10.2548828125
    10. '```' → logprob: -10.5048828125

Token 104: 'isation' (ID: 6993)
  Prédit: 'ise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.00021867557370569557
    2. 'is' → logprob: -9.375218391418457
    3. 'isé' → logprob: -9.750218391418457
    4. 'isant' → logprob: -10.625218391418457
    5. 'se' → logprob: -11.250218391418457
    6. 'isez' → logprob: -11.750218391418457
    7. 'isée' → logprob: -12.000218391418457
    8. 'e' → logprob: -12.000218391418457
    9. 'isation' → logprob: -12.500218391418457
    10. 'i' → logprob: -12.625218391418457

Token 105: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.004183229058980942
    2. ' ' → logprob: -6.379183292388916
    3. ' d' → logprob: -6.379183292388916
    4. ' du' → logprob: -8.254182815551758
    5. 'de' → logprob: -8.254182815551758
    6. ' des' → logprob: -9.379182815551758
    7. ' =' → logprob: -9.754182815551758
    8. ' of' → logprob: -10.379182815551758
    9. ' optimale' → logprob: -11.129182815551758
    10. '   ' → logprob: -11.379182815551758

Token 106: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.02246655523777008
    2. 'l' → logprob: -3.8974666595458984
    3. ' ' → logprob: -7.022466659545898
    4. ' Kad' → logprob: -7.397466659545898
    5. ' la' → logprob: -8.772466659545898
    6. 'Kad' → logprob: -8.897466659545898
    7. '   ' → logprob: -10.522466659545898
    8. '  ' → logprob: -11.147466659545898
    9. ' K' → logprob: -11.522466659545898
    10. '```' → logprob: -11.647466659545898

Token 107: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008470256812870502
    2. 'a' → logprob: -4.883470058441162
    3. ''al' → logprob: -8.00847053527832
    4. ''ap' → logprob: -8.50847053527832
    5. 'e' → logprob: -9.50847053527832
    6. ''application' → logprob: -10.25847053527832
    7. ''espace' → logprob: -10.75847053527832
    8. ' '' → logprob: -10.88347053527832
    9. '’' → logprob: -11.00847053527832
    10. ''appro' → logprob: -11.13347053527832

Token 108: 'alg' (ID: 15258)
  Prédit: 'alg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alg' → logprob: -0.14206606149673462
    2. ' alg' → logprob: -2.76706600189209
    3. 'algorithm' → logprob: -3.01706600189209
    4. ' algorithm' → logprob: -4.26706600189209
    5. 'algo' → logprob: -6.26706600189209
    6. ''' → logprob: -7.01706600189209
    7. 'Kad' → logprob: -7.26706600189209
    8. 'max' → logprob: -7.64206600189209
    9. '_alg' → logprob: -7.76706600189209
    10. ' Kad' → logprob: -7.89206600189209

Token 109: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.0034263967536389828
    2. '   ' → logprob: -6.628426551818848
    3. 'or' → logprob: -7.253426551818848
    4. 'orit' → logprob: -7.253426551818848
    5. 'orithm' → logprob: -7.753426551818848
    6. 'orithms' → logprob: -10.128426551818848
    7. 'o' → logprob: -10.503426551818848
    8. '-' → logprob: -10.628426551818848
    9. '      ' → logprob: -10.753426551818848
    10. '       ' → logprob: -11.003426551818848

Token 110: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.00018268341955263168
    2. 'e' → logprob: -8.87518310546875
    3. 'ime' → logprob: -11.00018310546875
    4. 'ume' → logprob: -11.25018310546875
    5. 'm' → logprob: -12.37518310546875
    6. 'hme' → logprob: -13.37518310546875
    7. 'yme' → logprob: -13.62518310546875
    8. 'ème' → logprob: -13.75018310546875
    9. 'mes' → logprob: -13.87518310546875
    10. 'eme' → logprob: -14.12518310546875

Token 111: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0037004391197115183
    2. '_de' → logprob: -6.253700256347656
    3. 'de' → logprob: -6.503700256347656
    4. '   ' → logprob: -9.253700256347656
    5. ' ' → logprob: -9.753700256347656
    6. '  ' → logprob: -10.003700256347656
    7. '_' → logprob: -10.503700256347656
    8. ' of' → logprob: -11.253700256347656
    9. ' d' → logprob: -11.628700256347656
    10. ' def' → logprob: -12.628700256347656

Token 112: ' Kad' (ID: 53913)
  Prédit: ' Kad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Kad' → logprob: -0.07897373288869858
    2. 'Kad' → logprob: -2.5789737701416016
    3. 'K' → logprob: -10.328973770141602
    4. ' kad' → logprob: -10.953973770141602
    5. ' K' → logprob: -11.078973770141602
    6. ' ' → logprob: -12.078973770141602
    7. '_K' → logprob: -12.328973770141602
    8. 'kad' → logprob: -12.578973770141602
    9. '```' → logprob: -14.078973770141602
    10. 'l' → logprob: -14.453973770141602

Token 113: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.014630110003054142
    2. 'a' → logprob: -4.264630317687988
    3. '   ' → logprob: -8.264630317687988
    4. 'an' → logprob: -9.139630317687988
    5. '```' → logprob: -10.639630317687988
    6. ' ane' → logprob: -11.264630317687988
    7. '"""
' → logprob: -11.764630317687988
    8. ']' → logprob: -11.764630317687988
    9. '-' → logprob: -12.014630317687988
    10. 'ане' → logprob: -12.139630317687988

Token 114: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010299465619027615
    2. '.' → logprob: -4.8852996826171875
    3. '.
' → logprob: -6.2602996826171875
    4. '
' → logprob: -8.260299682617188
    5. ':' → logprob: -8.385299682617188
    6. '```' → logprob: -9.635299682617188
    7. ':
' → logprob: -10.010299682617188
    8. '    
' → logprob: -10.135299682617188
    9. '       ' → logprob: -10.635299682617188
    10. 'def' → logprob: -10.885299682617188

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017134016379714012
    2. '
' → logprob: -4.267134189605713
    3. '    
' → logprob: -6.267134189605713
    4. '"""' → logprob: -7.267134189605713
    5. '"""
' → logprob: -8.892133712768555
    6. '   
' → logprob: -9.392133712768555
    7. '  
' → logprob: -9.767133712768555
    8. '```' → logprob: -10.392133712768555
    9. '"' → logprob: -11.267133712768555
    10. '\n' → logprob: -11.267133712768555

Token 116: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046117350459098816
    2. '
' → logprob: -3.4211173057556152
    3. '"""' → logprob: -5.046117305755615
    4. '    
' → logprob: -5.296117305755615
    5. '   
' → logprob: -8.171117782592773
    6. '"""
' (adapté à ' """
') → logprob: -8.171117782592773
    7. '```' → logprob: -9.296117782592773
    8. ' 
' → logprob: -9.921117782592773
    9. '  
' → logprob: -9.921117782592773
    10. '    ' → logprob: -10.046117782592773

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018461400642991066
    2. ' max' → logprob: -4.268461227416992
    3. 'max' → logprob: -5.768461227416992
    4. ' n' → logprob: -7.143461227416992
    5. ' current' → logprob: -8.393461227416992
    6. 'n' → logprob: -9.143461227416992
    7. 'current' → logprob: -10.893461227416992
    8. ' if' → logprob: -12.018461227416992
    9. '	max' → logprob: -12.268461227416992
    10. '    
' → logprob: -12.643461227416992

Token 118: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.023628372699022293
    2. ' max' → logprob: -3.7736284732818604
    3. 'if' → logprob: -8.773628234863281
    4. '   ' → logprob: -8.898628234863281
    5. ' if' → logprob: -10.273628234863281
    6. 'current' → logprob: -10.648628234863281
    7. 'n' → logprob: -10.648628234863281
    8. ' n' → logprob: -11.898628234863281
    9. '	max' → logprob: -13.648628234863281
    10. ' current' → logprob: -14.148628234863281

Token 119: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.040942322462797165
    2. '_current' → logprob: -3.540942430496216
    3. '_so' → logprob: -4.540942192077637
    4. '_sum' → logprob: -8.790942192077637
    5. '_here' → logprob: -8.915942192077637
    6. '_end' → logprob: -9.415942192077637
    7. '_c' → logprob: -9.790942192077637
    8. '_curr' → logprob: -10.915942192077637
    9. '_cur' → logprob: -11.790942192077637
    10. '_val' → logprob: -12.540942192077637

Token 120: 'ending' (ID: 3258)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.043936826288700104
    2. 'ending' → logprob: -3.7939367294311523
    3. 'so' → logprob: -3.9189367294311523
    4. '_current' → logprob: -8.293936729431152
    5. 'curr' → logprob: -9.168936729431152
    6. 'cour' → logprob: -9.668936729431152
    7. '_so' → logprob: -9.918936729431152
    8. '_' → logprob: -9.918936729431152
    9. 'sum' → logprob: -10.168936729431152
    10. 'global' → logprob: -11.418936729431152

Token 121: '_here' (ID: 192915)
  Prédit: '_here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -5.514650183613412e-05
    2. 'here' → logprob: -10.375055313110352
    3. '_at' → logprob: -11.250055313110352
    4. '=' → logprob: -12.250055313110352
    5. 'Here' → logprob: -12.625055313110352
    6. ' =' → logprob: -13.250055313110352
    7. '   ' → logprob: -14.625055313110352
    8. '_' → logprob: -15.125055313110352
    9. '\' → logprob: -16.37505531311035
    10. ' here' → logprob: -16.62505531311035

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004626768175512552
    2. '=' → logprob: -5.379626750946045
    3. ',' → logprob: -12.129627227783203
    4. ' =
' → logprob: -15.254627227783203
    5. '=max' → logprob: -15.254627227783203
    6. ' +=' → logprob: -15.379627227783203
    7. ' ' → logprob: -15.879627227783203
    8. ' ,' → logprob: -15.879627227783203
    9. ' ' → logprob: -16.004627227783203
    10. '=int' → logprob: -17.629627227783203

Token 123: ' arr' (ID: 1724)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4366394579410553
    2. ' ' → logprob: -1.561639428138733
    3. 'arr' → logprob: -2.0616395473480225
    4. ' arr' → logprob: -4.186639308929443
    5. 'max' → logprob: -6.936639308929443
    6. ' max' → logprob: -7.561639308929443
    7. '	arr' → logprob: -10.936639785766602
    8. '   ' → logprob: -11.061639785766602
    9. '1' → logprob: -11.686639785766602
    10. '-' → logprob: -12.561639785766602

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. ' [' → logprob: -13.625001907348633
    3. '0' → logprob: -14.250001907348633
    4. '[
' → logprob: -15.375001907348633
    5. 's' → logprob: -17.875001907348633
    6. 'def' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.000001907348633
    8. ' ' → logprob: -18.000001907348633
    9. '_' → logprob: -18.250001907348633
    10. '[]' → logprob: -18.375001907348633

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '[' → logprob: -15.937517166137695
    4. '   ' → logprob: -16.500017166137695
    5. ']' → logprob: -16.750017166137695
    6. '-' → logprob: -17.250017166137695
    7. '```' → logprob: -17.437517166137695
    8. '۰' → logprob: -17.500017166137695
    9. '00' → logprob: -17.562517166137695
    10. '1' → logprob: -17.625017166137695

Token 126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032989128958433867
    2. ']
' → logprob: -5.878298759460449
    3. ' ]' → logprob: -7.753298759460449
    4. '<|end|>' → logprob: -10.25329875946045
    5. ')' → logprob: -11.12829875946045
    6. '   ' → logprob: -12.50329875946045
    7. ' ]
' → logprob: -12.50329875946045
    8. ']

' → logprob: -13.62829875946045
    9. ' ' → logprob: -13.87829875946045
    10. '}' → logprob: -13.87829875946045

Token 127: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.128811776638031
    2. '   ' → logprob: -2.878811836242676
    3. 'max' → logprob: -3.253811836242676
    4. '    
' → logprob: -4.378811836242676
    5. '<|end|>' → logprob: -5.378811836242676
    6. '   
' → logprob: -6.128811836242676
    7. ' 
' → logprob: -6.253811836242676
    8. ' max' → logprob: -6.253811836242676
    9. '  
' → logprob: -6.378811836242676
    10. '  ' → logprob: -8.378811836242676

Token 128: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8806100487709045
    2. '
' → logprob: -1.5056099891662598
    3. '<|end|>' → logprob: -1.6306099891662598
    4. '   ' → logprob: -2.0056099891662598
    5. ' max' → logprob: -4.38060998916626
    6. '    
' → logprob: -5.13060998916626
    7. '<|end|>' → logprob: -5.88060998916626
    8. '  ' → logprob: -6.13060998916626
    9. ' ' → logprob: -6.38060998916626
    10. ' 
' → logprob: -6.75560998916626

Token 129: ' somme' (ID: 64484)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07076121121644974
    2. ' max' → logprob: -2.695761203765869
    3. 'arr' → logprob: -7.320761203765869
    4. '   ' → logprob: -9.695761680603027
    5. ' ' → logprob: -10.695761680603027
    6. '0' → logprob: -10.820761680603027
    7. ' arr' → logprob: -11.195761680603027
    8. '    
' → logprob: -12.070761680603027
    9. ' 
' → logprob: -12.320761680603027
    10. '=max' → logprob: -12.570761680603027

Token 130: ' max' (ID: 2999)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: ' se' (ID: 458)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: ' termin' (ID: 18412)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.7533590197563171
    2. 'quence' → logprob: -2.503359079360962
    3. 'u' → logprob: -3.003359079360962
    4. 'r' → logprob: -3.128359079360962
    5. 'quent' → logprob: -3.128359079360962
    6. 'ns' → logprob: -3.628359079360962
    7. 't' → logprob: -3.753359079360962
    8. 'rans' → logprob: -3.753359079360962
    9. 'mble' → logprob: -3.878359079360962
    10. 'ur' → logprob: -4.003358840942383

Token 133: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0006623993394896388
    2. 'à' → logprob: -8.750662803649902
    3. 'nt' → logprob: -9.250662803649902
    4. 'nant' → logprob: -9.500662803649902
    5. 'a' → logprob: -9.750662803649902
    6. 'e' → logprob: -10.000662803649902
    7. 'an' → logprob: -10.625662803649902
    8. ' ant' → logprob: -10.625662803649902
    9. 'par' → logprob: -10.875662803649902
    10. 'er' → logprob: -11.000662803649902

Token 134: ' à' (ID: 1221)
  Prédit: ' ici'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ici' → logprob: -0.752397358417511
    2. ' à' → logprob: -0.877397358417511
    3. 'à' → logprob: -3.252397298812866
    4. ' ' → logprob: -3.877397298812866
    5. ' here' → logprob: -4.002397537231445
    6. '_here' → logprob: -4.127397537231445
    7. ' a' → logprob: -5.002397537231445
    8. '_' → logprob: -5.752397537231445
    9. ' au' → logprob: -6.002397537231445
    10. 'au' → logprob: -6.002397537231445

Token 135: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6859976649284363
    2. 'l' → logprob: -1.435997724533081
    3. 'i' → logprob: -2.185997724533081
    4. ' i' → logprob: -3.310997724533081
    5. ' cet' → logprob: -3.935997724533081
    6. ' current' → logprob: -3.935997724533081
    7. ' ' → logprob: -4.060997486114502
    8. ' cette' → logprob: -4.810997486114502
    9. '_' → logprob: -4.935997486114502
    10. 'current' → logprob: -5.560997486114502

Token 136: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0686559677124023
    2. ' i' → logprob: -1.1936559677124023
    3. ' position' → logprob: -1.6936559677124023
    4. 'position' → logprob: -1.9436559677124023
    5. ' ' → logprob: -4.318655967712402
    6. '   ' → logprob: -5.193655967712402
    7. ' current' → logprob: -6.818655967712402
    8. 'prem' → logprob: -7.068655967712402
    9. ' ' → logprob: -7.318655967712402
    10. '0' → logprob: -7.443655967712402

Token 137: ' actuelle' (ID: 104951)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5761857628822327
    2. '0' → logprob: -0.8261857628822327
    3. '_' → logprob: -8.951186180114746
    4. '  ' → logprob: -9.826186180114746
    5. ' ' → logprob: -10.951186180114746
    6. '1' → logprob: -11.451186180114746
    7. '[' → logprob: -11.576186180114746
    8. 's' → logprob: -11.826186180114746
    9. ' actuelle' → logprob: -12.576186180114746
    10. ' i' → logprob: -13.076186180114746

Token 138: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45494505763053894
    2. '<|end|>' → logprob: -1.3299450874328613
    3. '   ' → logprob: -2.9549450874328613
    4. 'max' → logprob: -3.8299450874328613
    5. '<|end|>' → logprob: -4.454945087432861
    6. '    
' → logprob: -4.954945087432861
    7. ' 
' → logprob: -6.454945087432861
    8. '  
' → logprob: -6.829945087432861
    9. 's' → logprob: -7.079945087432861
    10. '  ' → logprob: -7.454945087432861

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06527785956859589
    2. 'max' → logprob: -3.3152778148651123
    3. '
' → logprob: -4.190278053283691
    4. ' max' → logprob: -4.940278053283691
    5. '    
' → logprob: -5.565278053283691
    6. '   
' → logprob: -8.190278053283691
    7. '  
' → logprob: -8.315278053283691
    8. '	max' → logprob: -9.815278053283691
    9. '  ' → logprob: -10.065278053283691
    10. ' 
' → logprob: -10.440278053283691

Token 140: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.043010611087083817
    2. 'max' (adapté à ' max') → logprob: -3.168010711669922
    3. '   ' → logprob: -12.293010711669922
    4. '	max' → logprob: -12.418010711669922
    5. ' maximum' → logprob: -13.668010711669922
    6. '_max' → logprob: -14.418010711669922
    7. '    ' → logprob: -15.168010711669922
    8. ' ' → logprob: -15.168010711669922
    9. ' ' → logprob: -15.918010711669922
    10. ' maximal' → logprob: -15.918010711669922

Token 141: '_so' (ID: 98189)
  Prédit: '_so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -0.026366490870714188
    2. '_' → logprob: -3.6513664722442627
    3. '_global' → logprob: -10.776366233825684
    4. '_here' → logprob: -11.151366233825684
    5. '_far' → logprob: -11.901366233825684
    6. '_current' → logprob: -12.026366233825684
    7. '_cont' → logprob: -13.026366233825684
    8. '_sub' → logprob: -13.276366233825684
    9. '_s' → logprob: -13.401366233825684
    10. '_max' → logprob: -13.401366233825684

Token 142: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -0.0014377313200384378
    2. 'far' → logprob: -6.751437664031982
    3. '_f' → logprob: -8.62643814086914
    4. '_' → logprob: -9.50143814086914
    5. 'Far' → logprob: -12.12643814086914
    6. 'f' → logprob: -12.50143814086914
    7. '   ' → logprob: -13.25143814086914
    8. 'l' → logprob: -14.37643814086914
    9. ' far' → logprob: -15.12643814086914
    10. '_ft' → logprob: -15.12643814086914

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804194927215576
    2. '=' → logprob: -3.2880420684814453
    3. '=max' → logprob: -14.788042068481445
    4. ' ' → logprob: -16.538042068481445
    5. ' ' → logprob: -17.663042068481445
    6. '   ' → logprob: -18.663042068481445
    7. ' =
' → logprob: -18.788042068481445
    8. '=int' → logprob: -19.413042068481445
    9. '_' → logprob: -19.413042068481445
    10. 'max' → logprob: -19.913042068481445

Token 144: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.12722384929656982
    2. ' arr' → logprob: -2.1272239685058594
    3. 'max' → logprob: -8.50222396850586
    4. ' max' → logprob: -9.37722396850586
    5. '	arr' → logprob: -12.50222396850586
    6. '[arr' → logprob: -13.75222396850586
    7. ' ' → logprob: -14.25222396850586
    8. '_arr' → logprob: -14.25222396850586
    9. '(arr' → logprob: -14.37722396850586
    10. '<arr' → logprob: -14.87722396850586

Token 145: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. ' [' → logprob: -13.25000286102295
    3. '[
' → logprob: -14.87500286102295
    4. '0' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.875001907348633
    6. ' ' → logprob: -17.250001907348633
    7. '
' → logprob: -18.000001907348633
    8. '  ' → logprob: -18.750001907348633
    9. '```' → logprob: -18.875001907348633
    10. '1' → logprob: -18.875001907348633

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. '[' → logprob: -14.750001907348633
    4. '1' → logprob: -17.500001907348633
    5. ']' → logprob: -18.375001907348633
    6. '۰' → logprob: -18.437501907348633
    7. '```' → logprob: -18.562501907348633
    8. '   ' → logprob: -18.937501907348633
    9. '-' → logprob: -19.250001907348633
    10. ')' → logprob: -19.312501907348633

Token 147: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3366979658603668
    2. '<|end|>' → logprob: -1.3366979360580444
    3. '}' → logprob: -4.586698055267334
    4. '   ' → logprob: -5.086698055267334
    5. ']' → logprob: -5.586698055267334
    6. '<|end|>' → logprob: -6.211698055267334
    7. ' )' → logprob: -7.586698055267334
    8. ' ' → logprob: -9.336697578430176
    9. '
' → logprob: -9.836697578430176
    10. '>' → logprob: -9.836697578430176

Token 148: '      ' (ID: 1699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09038630872964859
    2. '   ' → logprob: -2.590386390686035
    3. '    
' → logprob: -4.590386390686035
    4. ' 
' → logprob: -7.965386390686035
    5. 'for' → logprob: -8.090386390686035
    6. '   
' → logprob: -8.590386390686035
    7. ' for' → logprob: -8.840386390686035
    8. '  
' → logprob: -8.965386390686035
    9. '' → logprob: -9.840386390686035
    10. '	
' → logprob: -9.965386390686035

Token 149: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04202067106962204
    2. '   ' → logprob: -4.042020797729492
    3. 'for' → logprob: -4.792020797729492
    4. '    
' → logprob: -4.792020797729492
    5. '<|end|>' → logprob: -5.667020797729492
    6. '  
' → logprob: -6.792020797729492
    7. '   
' → logprob: -7.042020797729492
    8. ' for' → logprob: -7.917020797729492
    9. ' 
' → logprob: -8.042020797729492
    10. '  ' → logprob: -8.292020797729492

Token 150: ' somme' (ID: 64484)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12600284814834595
    2. ' max' → logprob: -2.251002788543701
    3. 'arr' → logprob: -4.376002788543701
    4. ' arr' → logprob: -7.626002788543701
    5. 'maximum' → logprob: -12.00100326538086
    6. 'for' → logprob: -12.62600326538086
    7. ' maximum' → logprob: -12.62600326538086
    8. 'sum' → logprob: -13.12600326538086
    9. '	max' → logprob: -13.62600326538086
    10. '```' → logprob: -13.62600326538086

Token 151: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5328730344772339
    2. ' maximale' → logprob: -1.5328730344772339
    3. 'max' → logprob: -1.6578730344772339
    4. '_max' → logprob: -5.657873153686523
    5. ' maximum' → logprob: -5.907873153686523
    6. ' maximal' → logprob: -8.532873153686523
    7. ' maxim' → logprob: -9.032873153686523
    8. '	max' → logprob: -10.157873153686523
    9. ' maxime' → logprob: -10.907873153686523
    10. ' maxima' → logprob: -11.282873153686523

Token 152: ' trouv' (ID: 40254)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0019935856107622385
    2. 'é' → logprob: -6.251993656158447
    3. 'ee' → logprob: -10.376993179321289
    4. 'e' → logprob: -10.376993179321289
    5. 'ées' → logprob: -13.626993179321289
    6. 'ė' → logprob: -15.251993179321289
    7. 'è' → logprob: -15.376993179321289
    8. 'É' → logprob: -16.00199317932129
    9. 'æ' → logprob: -16.12699317932129
    10. '�' → logprob: -16.25199317932129

Token 154: ' jusqu' (ID: 21961)
  Prédit: ' jusqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -1.0047154426574707
    2. ' jusque' → logprob: -1.0047154426574707
    3. 'jus' → logprob: -1.8797154426574707
    4. '<|end|>' → logprob: -2.2547154426574707
    5. 'max' → logprob: -5.754715442657471
    6. ' ' → logprob: -6.754715442657471
    7. 'au' → logprob: -6.754715442657471
    8. 'until' → logprob: -7.004715442657471
    9. '<|end|>' → logprob: -7.629715442657471
    10. '   ' → logprob: -7.879715442657471

Token 155: ''ici' (ID: 162066)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.34650713205337524
    2. ''ici' → logprob: -1.3465070724487305
    3. 'à' → logprob: -3.5965070724487305
    4. 'ici' → logprob: -5.7215070724487305
    5. '’ici' → logprob: -7.0965070724487305
    6. '’à' → logprob: -7.4715070724487305
    7. '_' → logprob: -8.22150707244873
    8. ' ici' → logprob: -8.84650707244873
    9. ''' → logprob: -9.97150707244873
    10. '   ' → logprob: -10.34650707244873

Token 156: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.353767991065979
    2. '   ' → logprob: -1.228767991065979
    3. '    
' → logprob: -5.3537678718566895
    4. '  
' → logprob: -8.853768348693848
    5. ' for' → logprob: -9.353768348693848
    6. 'for' → logprob: -9.353768348693848
    7. '   
' → logprob: -9.353768348693848
    8. '
' → logprob: -9.603768348693848
    9. ' 
' → logprob: -9.728768348693848
    10. '	
' → logprob: -10.478768348693848

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05554739013314247
    2. '
' → logprob: -3.0555474758148193
    3. '    
' → logprob: -5.30554723739624
    4. ' for' → logprob: -6.68054723739624
    5. 'for' → logprob: -8.055547714233398
    6. '  
' → logprob: -9.055547714233398
    7. '\n' → logprob: -9.430547714233398
    8. ' 
' → logprob: -9.680547714233398
    9. '   
' → logprob: -9.680547714233398
    10. '' → logprob: -10.930547714233398

Token 158: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5050387382507324
    2. 'for' (adapté à ' for') → logprob: -1.0050387382507324
    3. '   ' → logprob: -3.5050387382507324
    4. '	for' → logprob: -8.00503921508789
    5. '
' → logprob: -9.63003921508789
    6. '    
' → logprob: -10.25503921508789
    7. ' 
' → logprob: -13.13003921508789
    8. '  ' → logprob: -14.25503921508789
    9. '   ' → logprob: -14.50503921508789
    10. ' ' → logprob: -14.75503921508789

Token 159: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.010584250092506409
    2. ' x' → logprob: -4.760584354400635
    3. 'i' → logprob: -6.510584354400635
    4. ' num' → logprob: -7.885584354400635
    5. 'x' → logprob: -9.635583877563477
    6. 'num' → logprob: -10.885583877563477
    7. ' ' → logprob: -11.760583877563477
    8. '   ' → logprob: -12.010583877563477
    9. '	i' → logprob: -13.135583877563477
    10. '(i' → logprob: -13.510583877563477

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004179902374744415
    2. 'in' → logprob: -5.504179954528809
    3. ' ' → logprob: -9.379179954528809
    4. ' i' → logprob: -12.379179954528809
    5. 'n' → logprob: -12.879179954528809
    6. '  ' → logprob: -13.129179954528809
    7. 's' → logprob: -13.129179954528809
    8. '   ' → logprob: -13.629179954528809
    9. 'i' → logprob: -14.004179954528809
    10. ' ' → logprob: -14.254179954528809

Token 161: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6931605935096741
    2. ' arr' → logprob: -0.6931605935096741
    3. '	arr' → logprob: -12.068161010742188
    4. '(arr' → logprob: -12.318161010742188
    5. '_arr' → logprob: -13.443161010742188
    6. '<arr' → logprob: -15.068161010742188
    7. '[arr' → logprob: -15.193161010742188
    8. ' ' → logprob: -15.443161010742188
    9. '.arr' → logprob: -15.568161010742188
    10. '   ' → logprob: -16.068161010742188

Token 162: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004643842112272978
    2. ':' → logprob: -5.37964391708374
    3. '   ' → logprob: -11.629643440246582
    4. '1' → logprob: -12.004643440246582
    5. ' :' → logprob: -12.129643440246582
    6. ' [' → logprob: -14.129643440246582
    7. ':
' → logprob: -14.379643440246582
    8. '[i' → logprob: -14.504643440246582
    9. ' ' → logprob: -15.254643440246582
    10. ' in' → logprob: -15.379643440246582

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.3226136767771095e-05
    2. ' ' → logprob: -10.250042915344238
    3. '):' → logprob: -12.875042915344238
    4. ':' → logprob: -13.375042915344238
    5. '   ' → logprob: -13.500042915344238
    6. ')' → logprob: -14.125042915344238
    7. '):
' → logprob: -15.250042915344238
    8. ']' → logprob: -15.375042915344238
    9. ']:' → logprob: -15.375042915344238
    10. '[' → logprob: -15.500042915344238

Token 164: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04759781435132027
    2. ']:' → logprob: -3.172597885131836
    3. ' :' → logprob: -5.547597885131836
    4. '):' → logprob: -7.797597885131836
    5. ':]' → logprob: -8.797597885131836
    6. ' ):' → logprob: -9.672597885131836
    7. '>:' → logprob: -11.422597885131836
    8. '}:' → logprob: -11.547597885131836
    9. ':],' → logprob: -11.672597885131836
    10. '():' → logprob: -11.922597885131836

Token 165: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.8519161343574524
    2. '   ' → logprob: -1.1019160747528076
    3. ']:' → logprob: -2.2269160747528076
    4. '):
' → logprob: -2.6019160747528076
    5. ']' → logprob: -3.8519160747528076
    6. ':' → logprob: -4.101916313171387
    7. ':
' → logprob: -4.976916313171387
    8. '):' → logprob: -5.476916313171387
    9. ' ]' → logprob: -5.476916313171387
    10. '       ' → logprob: -6.226916313171387

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005789900664240122
    2. '   ' → logprob: -6.130789756774902
    3. '        
' → logprob: -6.755789756774902
    4. '    
' → logprob: -7.130789756774902
    5. ' 
' → logprob: -7.505789756774902
    6. '    ' → logprob: -7.755789756774902
    7. '<|end|>' → logprob: -8.505789756774902
    8. '   
' → logprob: -9.505789756774902
    9. '     
' → logprob: -9.630789756774902
    10. '  
' → logprob: -9.630789756774902

Token 167: ' #' (ID: 1069)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.42944204807281494
    2. 'max' → logprob: -1.054442048072815
    3. '       ' → logprob: -7.804441928863525
    4. '   ' → logprob: -8.054442405700684
    5. '	max' → logprob: -12.054442405700684
    6. '    ' → logprob: -12.429442405700684
    7. ' ' → logprob: -13.554442405700684
    8. '_max' → logprob: -14.304442405700684
    9. ' ' → logprob: -14.554442405700684
    10. '        
' → logprob: -14.679442405700684

Token 168: ' Met' (ID: 7227)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6354242563247681
    2. ' max' → logprob: -0.7604242563247681
    3. '   ' → logprob: -6.1354241371154785
    4. '       ' → logprob: -7.3854241371154785
    5. '	max' → logprob: -11.135424613952637
    6. '    ' → logprob: -12.135424613952637
    7. ' ' → logprob: -13.010424613952637
    8. '=max' → logprob: -13.385424613952637
    9. '  ' → logprob: -13.510424613952637
    10. '```' → logprob: -13.697924613952637

Token 169: ' à' (ID: 1221)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.023225558921694756
    2. 'tre' → logprob: -4.523225784301758
    3. 'max' → logprob: -5.523225784301758
    4. 'x' → logprob: -6.148225784301758
    5. 'axa' → logprob: -6.648225784301758
    6. '   ' → logprob: -6.773225784301758
    7. '=max' → logprob: -6.898225784301758
    8. '=' → logprob: -7.773225784301758
    9. '       ' → logprob: -8.023225784301758
    10. 'a' → logprob: -8.148225784301758

Token 170: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.007417678367346525
    2. ' jour' → logprob: -5.007417678833008
    3. 'profit' → logprob: -7.882417678833008
    4. 'Jour' → logprob: -9.507417678833008
    5. 'day' → logprob: -9.632417678833008
    6. 'jours' → logprob: -9.757417678833008
    7. 'x' → logprob: -10.757417678833008
    8. 'point' → logprob: -10.882417678833008
    9. 'con' → logprob: -11.132417678833008
    10. 'max' → logprob: -11.132417678833008

Token 171: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31329455971717834
    2. ' max' → logprob: -1.313294529914856
    3. '   ' → logprob: -10.688294410705566
    4. '       ' → logprob: -12.438294410705566
    5. '	max' → logprob: -12.438294410705566
    6. '_max' → logprob: -13.688294410705566
    7. '(max' → logprob: -14.938294410705566
    8. '=max' → logprob: -15.563294410705566
    9. '    ' → logprob: -15.938294410705566
    10. ' ' → logprob: -16.688295364379883

Token 172: ' somme' (ID: 64484)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014443661086261272
    2. ' max' → logprob: -4.514443874359131
    3. '   ' → logprob: -6.639443874359131
    4. ' somme' → logprob: -6.639443874359131
    5. ' valeur' → logprob: -8.764443397521973
    6. 'maximum' → logprob: -9.264443397521973
    7. 'val' → logprob: -9.389443397521973
    8. 's' → logprob: -9.389443397521973
    9. 'x' → logprob: -9.514443397521973
    10. '       ' → logprob: -9.764443397521973

Token 173: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004685495514422655
    2. '_max' → logprob: -6.379685401916504
    3. '=max' → logprob: -6.504685401916504
    4. ' max' → logprob: -7.129685401916504
    5. '   ' → logprob: -7.754685401916504
    6. '_' → logprob: -9.254685401916504
    7. ' =' → logprob: -10.004685401916504
    8. ' maximale' → logprob: -10.129685401916504
    9. 'cour' → logprob: -10.754685401916504
    10. '(max' → logprob: -11.129685401916504

Token 174: ' se' (ID: 458)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.050878919661045074
    2. ' max' → logprob: -3.4258790016174316
    3. '   ' → logprob: -4.300879001617432
    4. '_max' → logprob: -7.175879001617432
    5. '_' → logprob: -7.425879001617432
    6. '(max' → logprob: -7.800879001617432
    7. '       ' → logprob: -7.800879001617432
    8. '=max' → logprob: -7.800879001617432
    9. ' ' → logprob: -8.050878524780273
    10. '    ' → logprob: -8.800878524780273

Token 175: ' termin' (ID: 18412)
  Prédit: 'termin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'termin' → logprob: -0.0868864506483078
    2. 'x' → logprob: -3.836886405944824
    3. 'max' → logprob: -4.211886405944824
    4. 'nt' → logprob: -4.211886405944824
    5. ' termin' → logprob: -4.961886405944824
    6. 'ending' → logprob: -5.211886405944824
    7. 'xt' → logprob: -5.711886405944824
    8. 'ax' → logprob: -5.836886405944824
    9. 'ant' → logprob: -6.086886405944824
    10. 'nant' → logprob: -6.461886405944824

Token 176: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -4.0722858102526516e-05
    2. 'nant' → logprob: -11.250041007995605
    3. 'ent' → logprob: -12.250041007995605
    4. 'e' → logprob: -12.750041007995605
    5. '[' → logprob: -13.000041007995605
    6. 'ante' → logprob: -13.125041007995605
    7. 'd' → logprob: -13.250041007995605
    8. '   ' → logprob: -13.250041007995605
    9. 'nt' → logprob: -13.500041007995605
    10. 'a' → logprob: -14.000041007995605

Token 177: ' ici' (ID: 27994)
  Prédit: ' ici'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ici' → logprob: -0.25334182381629944
    2. ' à' → logprob: -2.0033419132232666
    3. 'à' → logprob: -2.5033419132232666
    4. 'ici' → logprob: -6.2533416748046875
    5. ' here' → logprob: -6.5033416748046875
    6. '_here' → logprob: -6.7533416748046875
    7. '   ' → logprob: -7.2533416748046875
    8. ' ' → logprob: -7.2533416748046875
    9. 'au' → logprob: -7.7533416748046875
    10. 'here' → logprob: -7.8783416748046875

Token 178: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5802189707756042
    2. ' =' → logprob: -1.705219030380249
    3. ' max' → logprob: -2.205219030380249
    4. 'max' → logprob: -2.330219030380249
    5. '=' → logprob: -4.08021879196167
    6. '   ' → logprob: -4.45521879196167
    7. '=max' → logprob: -4.45521879196167
    8. ':' → logprob: -5.58021879196167
    9. ',' → logprob: -5.58021879196167
    10. ' if' → logprob: -7.33021879196167

Token 179: '       ' (ID: 309)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.13481661677360535
    2. 'max' → logprob: -2.2598166465759277
    3. '       ' → logprob: -3.8848166465759277
    4. '   ' → logprob: -7.509816646575928
    5. '
' → logprob: -8.63481616973877
    6. '_max' → logprob: -9.50981616973877
    7. '        
' → logprob: -9.50981616973877
    8. '    ' → logprob: -9.50981616973877
    9. '        ' → logprob: -10.00981616973877
    10. '	max' → logprob: -10.50981616973877

Token 180: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03811195120215416
    2. ' max' → logprob: -3.288111925125122
    3. '   ' → logprob: -10.288111686706543
    4. '       ' → logprob: -10.413111686706543
    5. '	max' → logprob: -12.913111686706543
    6. '        
' → logprob: -13.913111686706543
    7. '    ' → logprob: -14.288111686706543
    8. '_max' → logprob: -14.788111686706543
    9. '        ' → logprob: -15.038111686706543
    10. ' ' → logprob: -15.413111686706543

Token 181: ' So' (ID: 2632)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12714837491512299
    2. ' max' → logprob: -2.127148389816284
    3. '       ' → logprob: -8.627148628234863
    4. '   ' → logprob: -10.252148628234863
    5. '	max' → logprob: -13.502148628234863
    6. ' ' → logprob: -13.877148628234863
    7. '    ' → logprob: -14.127148628234863
    8. '        ' → logprob: -14.377148628234863
    9. '
' → logprob: -15.252148628234863
    10. '        
' → logprob: -15.252148628234863

Token 182: 'it' (ID: 278)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.47492820024490356
    2. 'max' → logprob: -1.9749281406402588
    3. 'us' → logprob: -2.474928140640259
    4. 'it' → logprob: -2.599928140640259
    5. 'u' → logprob: -3.099928140640259
    6. 'ut' → logprob: -3.974928140640259
    7. 'is' → logprob: -5.599928379058838
    8. '_' → logprob: -5.974928379058838
    9. '   ' → logprob: -6.099928379058838
    10. '_max' → logprob: -6.974928379058838

Token 183: ' on' (ID: 402)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5943183302879333
    2. 'max' → logprob: -1.0943183898925781
    3. 'x' → logprob: -2.844318389892578
    4. ' x' → logprob: -2.969318389892578
    5. '   ' → logprob: -6.344318389892578
    6. ' on' → logprob: -6.969318389892578
    7. '(max' → logprob: -8.469318389892578
    8. ' ' → logprob: -9.094318389892578
    9. '(x' → logprob: -9.219318389892578
    10. '	max' → logprob: -9.594318389892578

Token 184: ' commence' (ID: 44755)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.34853896498680115
    2. ' prend' → logprob: -2.098538875579834
    3. 'continue' → logprob: -2.098538875579834
    4. 'contin' → logprob: -3.848538875579834
    5. ' ajoute' → logprob: -4.598538875579834
    6. ' reprend' → logprob: -5.473538875579834
    7. ' chois' → logprob: -5.723538875579834
    8. 'max' → logprob: -6.098538875579834
    9. ' max' → logprob: -6.723538875579834
    10. ' x' → logprob: -6.848538875579834

Token 185: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.198918104171753
    2. 'une' → logprob: -1.198918104171753
    3. 'un' → logprob: -2.198918104171753
    4. 'à' → logprob: -2.573918104171753
    5. 'x' → logprob: -2.823918104171753
    6. ' un' → logprob: -3.073918104171753
    7. 'au' → logprob: -3.573918104171753
    8. ' fresh' → logprob: -4.073918342590332
    9. ' à' → logprob: -4.323918342590332
    10. ' ' → logprob: -4.573918342590332

Token 186: ' nouvelle' (ID: 24562)
  Prédit: 'nou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nou' → logprob: -0.09291397780179977
    2. ' nouvelle' → logprob: -2.592913866043091
    3. 'n' → logprob: -4.71791410446167
    4. 'new' → logprob: -5.96791410446167
    5. ' ' → logprob: -7.09291410446167
    6. ' new' → logprob: -7.96791410446167
    7. 's' → logprob: -8.342913627624512
    8. '   ' → logprob: -8.342913627624512
    9. '_n' → logprob: -9.342913627624512
    10. 'x' → logprob: -9.467913627624512

Token 187: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5951410531997681
    2. ' sé' → logprob: -1.470141053199768
    3. ' sous' → logprob: -2.3451409339904785
    4. 'sé' → logprob: -3.0951409339904785
    5. '_s' → logprob: -3.5951409339904785
    6. ' sequence' → logprob: -3.9701409339904785
    7. ' ' → logprob: -4.2201409339904785
    8. '_' → logprob: -5.5951409339904785
    9. 'sequence' → logprob: -5.9701409339904785
    10. '   ' → logprob: -5.9701409339904785

Token 188: '-s' (ID: 2011)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02214619517326355
    2. '_' → logprob: -4.397146224975586
    3. '-s' → logprob: -6.022146224975586
    4. '       ' → logprob: -6.397146224975586
    5. '_s' → logprob: -6.522146224975586
    6. '   ' → logprob: -6.522146224975586
    7. '_sequence' → logprob: -7.022146224975586
    8. ' sequence' → logprob: -7.772146224975586
    9. 'sequence' → logprob: -7.897146224975586
    10. 'sé' → logprob: -8.397146224975586

Token 189: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.05179890990257263
    2. 'quence' → logprob: -3.4267988204956055
    3. 'équ' → logprob: -4.3017988204956055
    4. 'e' → logprob: -5.8017988204956055
    5. '-' → logprob: -7.0517988204956055
    6. '_' → logprob: -8.801798820495605
    7. '#' → logprob: -9.676798820495605
    8. 'q' → logprob: -10.176798820495605
    9. 's' → logprob: -10.426798820495605
    10. '[' → logprob: -11.051798820495605

Token 190: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -2.3438327843905427e-05
    2. 'q' → logprob: -11.50002384185791
    3. 'qu' → logprob: -11.75002384185791
    4. 'QUENCE' → logprob: -13.12502384185791
    5. 'quences' → logprob: -13.50002384185791
    6. '-' → logprob: -14.12502384185791
    7. 'que' → logprob: -15.00002384185791
    8. '#' → logprob: -15.37502384185791
    9. '
' → logprob: -15.87502384185791
    10. '   ' → logprob: -15.87502384185791

Token 191: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0484340526163578
    2. ' ou' → logprob: -3.548434019088745
    3. ' ,' → logprob: -4.173434257507324
    4. ' à' → logprob: -6.298434257507324
    5. 'ou' → logprob: -7.798434257507324
    6. '       ' → logprob: -8.423434257507324
    7. ' x' → logprob: -8.548434257507324
    8. ' au' → logprob: -9.548434257507324
    9. ' soit' → logprob: -9.673434257507324
    10. ' +' → logprob: -9.923434257507324

Token 192: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20143868029117584
    2. ' x' → logprob: -1.7014386653900146
    3. ' ' → logprob: -10.951438903808594
    4. '0' → logprob: -12.951438903808594
    5. '   ' → logprob: -13.451438903808594
    6. '	x' → logprob: -14.076438903808594
    7. '1' → logprob: -14.451438903808594
    8. ' ' → logprob: -15.076438903808594
    9. 'l' → logprob: -15.326438903808594
    10. '"x' → logprob: -15.451438903808594

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008302973583340645
    2. ' ,' → logprob: -4.883303165435791
    3. ' ou' → logprob: -8.258302688598633
    4. ' soit' → logprob: -8.258302688598633
    5. ' +' → logprob: -9.258302688598633
    6. ',
' → logprob: -10.633302688598633
    7. '+' → logprob: -10.758302688598633
    8. '       ' → logprob: -11.383302688598633
    9. ' x' → logprob: -11.883302688598633
    10. ' or' → logprob: -12.758302688598633

Token 194: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.01023739855736494
    2. 'so' → logprob: -4.760237216949463
    3. ' ou' → logprob: -7.385237216949463
    4. ' so' → logprob: -7.760237216949463
    5. 'ou' → logprob: -8.260237693786621
    6. ',' → logprob: -8.635237693786621
    7. ' So' → logprob: -10.260237693786621
    8. 'So' → logprob: -10.385237693786621
    9. '       ' → logprob: -10.385237693786621
    10. ' or' → logprob: -12.010237693786621

Token 195: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.2297913283109665
    2. 'max' → logprob: -2.4797914028167725
    3. 'on' → logprob: -2.6047914028167725
    4. ' max' → logprob: -3.1047914028167725
    5. 'x' → logprob: -6.854791164398193
    6. ' x' → logprob: -7.354791164398193
    7. ' ' → logprob: -7.854791164398193
    8. ' ' → logprob: -8.354791641235352
    9. 'contin' → logprob: -8.854791641235352
    10. ''on' → logprob: -9.854791641235352

Token 196: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5919516682624817
    2. ' continue' → logprob: -0.8419516682624817
    3. ' ajoute' → logprob: -4.591951847076416
    4. 'contin' → logprob: -5.591951847076416
    5. 'aj' → logprob: -6.841951847076416
    6. '_continue' → logprob: -8.216951370239258
    7. 'continu' → logprob: -8.591951370239258
    8. ' poursuit' → logprob: -8.841951370239258
    9. ' continues' → logprob: -8.966951370239258
    10. ' la' → logprob: -10.091951370239258

Token 197: ' l' (ID: 305)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.4302287101745605
    2. ' max' → logprob: -1.5552287101745605
    3. ' avec' → logprob: -1.9302287101745605
    4. 'x' → logprob: -2.1802287101745605
    5. 'max' → logprob: -2.1802287101745605
    6. ' la' → logprob: -2.4302287101745605
    7. 'avec' → logprob: -3.6802287101745605
    8. '   ' → logprob: -3.9302287101745605
    9. ' with' → logprob: -4.4302287101745605
    10. '+' → logprob: -4.6802287101745605

Token 198: ''act' (ID: 107224)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.054327044636011124
    2. '   ' → logprob: -4.054327011108398
    3. ' max' → logprob: -4.679327011108398
    4. 'max' → logprob: -4.804327011108398
    5. ' a' → logprob: -5.054327011108398
    6. '_' → logprob: -5.804327011108398
    7. 'e' → logprob: -5.804327011108398
    8. '+' → logprob: -7.054327011108398
    9. 'ancienne' → logprob: -7.304327011108398
    10. 'à' → logprob: -7.554327011108398

Token 199: 'uelle' (ID: 18079)
  Prédit: 'uelle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uelle' → logprob: -0.010246839374303818
    2. 'u' → logprob: -5.260246753692627
    3. 'uel' → logprob: -5.510246753692627
    4. 'e' → logprob: -7.010246753692627
    5. 'ual' → logprob: -11.135247230529785
    6. 'ue' → logprob: -11.385247230529785
    7. 'uale' → logprob: -12.010247230529785
    8. 'uele' → logprob: -12.135247230529785
    9. 'uée' → logprob: -12.635247230529785
    10. 'uellement' → logprob: -13.010247230529785

Token 200: '
' (ID: 198)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4687424898147583
    2. ' +' → logprob: -1.4687424898147583
    3. ',' → logprob: -2.5937423706054688
    4. 'max' → logprob: -3.4687423706054688
    5. '+' → logprob: -3.8437423706054688
    6. ' =' → logprob: -5.218742370605469
    7. '=max' → logprob: -5.968742370605469
    8. ' ,' → logprob: -6.343742370605469
    9. ' or' → logprob: -6.718742370605469
    10. '   ' → logprob: -6.718742370605469

Token 201: '       ' (ID: 309)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4029105603694916
    2. 'max' → logprob: -2.1529104709625244
    3. '       ' → logprob: -2.2779104709625244
    4. '   ' → logprob: -2.5279104709625244
    5. '=max' → logprob: -5.0279107093811035
    6. '
' → logprob: -5.1529107093811035
    7. '    
' → logprob: -5.1529107093811035
    8. '        
' → logprob: -5.5279107093811035
    9. ' 
' → logprob: -5.5279107093811035
    10. ' =' → logprob: -6.2779107093811035

Token 202: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.001328095211647451
    2. ' max' → logprob: -6.751327991485596
    3. '       ' → logprob: -9.376328468322754
    4. '   ' → logprob: -9.626328468322754
    5. '        
' → logprob: -12.876328468322754
    6. '	max' → logprob: -13.626328468322754
    7. 'temp' → logprob: -14.251328468322754
    8. '
' → logprob: -14.626328468322754
    9. '    ' → logprob: -14.626328468322754
    10. '=max' → logprob: -15.126328468322754

Token 203: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.128163257315464e-07
    2. 'ending' → logprob: -16.625
    3. '_max' → logprob: -18.125
    4. '   ' → logprob: -18.25
    5. '\' → logprob: -18.375
    6. '_
' → logprob: -18.375
    7. '_here' → logprob: -18.375
    8. '```' → logprob: -18.5
    9. '(' → logprob: -18.75
    10. '_so' → logprob: -18.75

Token 204: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -6.704273118884885e-07
    2. ' ending' → logprob: -14.875000953674316
    3. 'sum' → logprob: -17.0
    4. 'Ending' → logprob: -17.0
    5. 'ENDING' → logprob: -17.125
    6. 'continu' → logprob: -17.75
    7. '_' → logprob: -17.875
    8. 'ended' → logprob: -18.0
    9. '```' → logprob: -18.25
    10. 'max' → logprob: -19.0

Token 205: '_here' (ID: 192915)
  Prédit: '_here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -1.0683535037969705e-05
    2. '_' → logprob: -11.62501049041748
    3. 'Here' → logprob: -13.50001049041748
    4. 'here' → logprob: -15.87501049041748
    5. ' _' → logprob: -16.375011444091797
    6. '_he' → logprob: -19.375011444091797
    7. '=' → logprob: -19.750011444091797
    8. ' here' → logprob: -19.750011444091797
    9. ' Here' → logprob: -19.875011444091797
    10. '   ' → logprob: -20.000011444091797

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194594264030457
    2. '=' → logprob: -1.501945972442627
    3. '=max' → logprob: -11.001945495605469
    4. '   ' → logprob: -15.876945495605469
    5. '=
' → logprob: -17.37694549560547
    6. ' ' → logprob: -17.50194549560547
    7. '=

' → logprob: -18.25194549560547
    8. ' =
' → logprob: -18.50194549560547
    9. '    ' → logprob: -19.12694549560547
    10. '＝' → logprob: -19.25194549560547

Token 207: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3132619559764862
    2. 'max' → logprob: -1.3132619857788086
    3. '	max' → logprob: -15.438261985778809
    4. ' ' → logprob: -16.813261032104492
    5. '(max' → logprob: -17.563261032104492
    6. ' ' → logprob: -18.563261032104492
    7. '_max' → logprob: -19.438261032104492
    8. '[max' → logprob: -20.313261032104492
    9. '=max' → logprob: -20.563261032104492
    10. '   ' → logprob: -20.688261032104492

Token 208: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001064963056705892
    2. '(max' → logprob: -7.751064777374268
    3. '(' → logprob: -8.001065254211426
    4. 'x' → logprob: -8.126065254211426
    5. 'max' → logprob: -13.001065254211426
    6. ' x' → logprob: -14.501065254211426
    7. ' (' → logprob: -15.751065254211426
    8. '(
' → logprob: -16.62606430053711
    9. '   ' → logprob: -16.75106430053711
    10. '_x' → logprob: -17.12606430053711

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013188120210543275
    2. ',max' → logprob: -7.25131893157959
    3. ' ,' → logprob: -7.50131893157959
    4. 'max' → logprob: -9.87631893157959
    5. ' max' → logprob: -12.50131893157959
    6. ',
' → logprob: -14.25131893157959
    7. '   ' → logprob: -16.001317977905273
    8. '(max' → logprob: -16.626317977905273
    9. ' ' → logprob: -17.001317977905273
    10. '+' → logprob: -17.376317977905273

Token 210: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.023266678676009178
    2. 'max' → logprob: -3.7732667922973633
    3. '	max' → logprob: -12.148266792297363
    4. ' ' → logprob: -12.523266792297363
    5. '(max' → logprob: -12.648266792297363
    6. ' ' → logprob: -12.773266792297363
    7. '[max' → logprob: -13.148266792297363
    8. '_max' → logprob: -13.398266792297363
    9. '   ' → logprob: -14.273266792297363
    10. '=max' → logprob: -14.523266792297363

Token 211: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2664456789934775e-06
    2. 'ending' → logprob: -14.125000953674316
    3. '_max' → logprob: -15.750000953674316
    4. 'max' → logprob: -16.375001907348633
    5. 'Ending' → logprob: -16.375001907348633
    6. '```' → logprob: -16.500001907348633
    7. 'x' → logprob: -17.250001907348633
    8. '[' → logprob: -17.750001907348633
    9. '_x' → logprob: -18.625001907348633
    10. '(' → logprob: -18.812501907348633

Token 212: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.12500286102295
    3. ' ending' → logprob: -14.87500286102295
    4. 'Ending' → logprob: -16.375001907348633
    5. 'ended' → logprob: -17.750001907348633
    6. 'ENDING' → logprob: -18.375001907348633
    7. '-ending' → logprob: -18.375001907348633
    8. 'adding' → logprob: -18.500001907348633
    9. '```' → logprob: -18.875001907348633
    10. 'endl' → logprob: -19.250001907348633

Token 213: '_here' (ID: 192915)
  Prédit: '_here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -0.0012015394167974591
    2. 'here' → logprob: -6.751201629638672
    3. 'Here' → logprob: -10.376201629638672
    4. '_' → logprob: -16.376201629638672
    5. 'e' → logprob: -18.001201629638672
    6. '   ' → logprob: -18.251201629638672
    7. 'ici' → logprob: -18.626201629638672
    8. '_else' → logprob: -18.876201629638672
    9. '```' → logprob: -18.876201629638672
    10. '__' → logprob: -19.001201629638672

Token 214: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.000627610192168504
    2. '+' → logprob: -7.375627517700195
    3. '+x' → logprob: -14.250627517700195
    4. ' ' → logprob: -15.250627517700195
    5. ' +
' → logprob: -16.375627517700195
    6. ' ' → logprob: -16.625627517700195
    7. ' plus' → logprob: -16.750627517700195
    8. ')' → logprob: -18.750627517700195
    9. ' x' → logprob: -20.000627517700195
    10. ' )' → logprob: -20.250627517700195

Token 215: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.029750484973192215
    2. 'x' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.02975082397461
    4. '	x' → logprob: -17.02975082397461
    5. ')x' → logprob: -18.52975082397461
    6. ' ' → logprob: -18.77975082397461
    7. ')' → logprob: -19.90475082397461
    8. ''x' → logprob: -20.15475082397461
    9. '"x' → logprob: -20.77975082397461
    10. ' )' → logprob: -22.02975082397461

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001510335598140955
    2. ')
' → logprob: -6.501510143280029
    3. '   ' → logprob: -11.876510620117188
    4. ' )' → logprob: -14.126510620117188
    5. ')
' → logprob: -15.251510620117188
    6. ')

' → logprob: -16.251510620117188
    7. ' )
' → logprob: -18.126510620117188
    8. ')#' → logprob: -18.376510620117188
    9. '       ' → logprob: -18.626510620117188
    10. ' ' → logprob: -18.751510620117188

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18625232577323914
    2. '   ' → logprob: -1.8112523555755615
    3. '
' → logprob: -5.186252117156982
    4. 'max' → logprob: -7.311252117156982
    5. ' max' → logprob: -9.31125259399414
    6. '    
' → logprob: -9.43625259399414
    7. '        
' → logprob: -10.31125259399414
    8. '  
' → logprob: -11.93625259399414
    9. ' 
' → logprob: -13.18625259399414
    10. '           ' → logprob: -13.31125259399414

Token 218: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35936927795410156
    2. 'max' → logprob: -1.6093692779541016
    3. ' if' → logprob: -3.1093692779541016
    4. 'if' → logprob: -3.2343692779541016
    5. ' max' → logprob: -4.109369277954102
    6. '   ' → logprob: -6.609369277954102
    7. '
' → logprob: -10.359369277954102
    8. '           ' → logprob: -11.359369277954102
    9. ' ' → logprob: -11.609369277954102
    10. '        
' → logprob: -11.734369277954102

Token 219: ' Met' (ID: 7227)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.24370424449443817
    2. ' max' → logprob: -1.8687041997909546
    3. 'if' → logprob: -3.743704319000244
    4. ' if' → logprob: -3.868704319000244
    5. '   ' → logprob: -4.368704319000244
    6. '       ' → logprob: -5.368704319000244
    7. '  ' → logprob: -10.618703842163086
    8. ' ' → logprob: -10.993703842163086
    9. '    ' → logprob: -11.368703842163086
    10. '     ' → logprob: -12.368703842163086

Token 220: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04605519771575928
    2. 'max' → logprob: -4.296055316925049
    3. '   ' → logprob: -4.546055316925049
    4. ' à' → logprob: -5.046055316925049
    5. 'à' → logprob: -5.421055316925049
    6. 'ax' → logprob: -5.671055316925049
    7. '_a' → logprob: -6.296055316925049
    8. '_max' → logprob: -6.546055316925049
    9. '_so' → logprob: -7.046055316925049
    10. 'tre' → logprob: -7.421055316925049

Token 221: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.002620250917971134
    2. ' jour' → logprob: -6.127620220184326
    3. 'jours' → logprob: -8.502620697021484
    4. 'max' → logprob: -9.002620697021484
    5. 'day' → logprob: -10.002620697021484
    6. 'Jour' → logprob: -10.377620697021484
    7. 'j' → logprob: -11.127620697021484
    8. 'jou' → logprob: -12.127620697021484
    9. '```' → logprob: -12.752620697021484
    10. 'aj' → logprob: -13.377620697021484

Token 222: ' la' (ID: 557)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.20145581662654877
    2. 'max' → logprob: -1.70145583152771
    3. '   ' → logprob: -10.826456069946289
    4. '       ' → logprob: -11.201456069946289
    5. '(max' → logprob: -12.326456069946289
    6. ' ' → logprob: -13.326456069946289
    7. ' la' → logprob: -13.576456069946289
    8. ' le' → logprob: -15.201456069946289
    9. '	max' → logprob: -15.201456069946289
    10. '=max' → logprob: -15.201456069946289

Token 223: ' somme' (ID: 64484)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014223560690879822
    2. ' max' → logprob: -4.264223575592041
    3. 'maximum' → logprob: -11.014223098754883
    4. '
' → logprob: -11.264223098754883
    5. ' maximum' → logprob: -11.639223098754883
    6. '	max' → logprob: -13.139223098754883
    7. '(max' → logprob: -13.139223098754883
    8. '   ' → logprob: -13.139223098754883
    9. ' ' → logprob: -13.264223098754883
    10. 's' → logprob: -13.389223098754883

Token 224: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.35811707377433777
    2. '_so' → logprob: -1.2331171035766602
    3. '_max' → logprob: -4.98311710357666
    4. 'so' → logprob: -5.98311710357666
    5. ' max' → logprob: -8.98311710357666
    6. ' maximale' → logprob: -9.48311710357666
    7. '(max' → logprob: -10.98311710357666
    8. '_' → logprob: -11.23311710357666
    9. 'maximum' → logprob: -12.10811710357666
    10. '=max' → logprob: -12.60811710357666

Token 225: ' globale' (ID: 87991)
  Prédit: '_so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_so' → logprob: -0.07319752126932144
    2. '   ' → logprob: -3.448197603225708
    3. ' =' → logprob: -4.198197364807129
    4. 'max' → logprob: -4.323197364807129
    5. '=max' → logprob: -4.823197364807129
    6. '=' → logprob: -6.948197364807129
    7. 'so' → logprob: -7.323197364807129
    8. ' max' → logprob: -8.073197364807129
    9. '       ' → logprob: -8.323197364807129
    10. '_max' → logprob: -9.198197364807129

Token 226: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0066804406233131886
    2. '=' → logprob: -5.131680488586426
    3. '   ' → logprob: -8.131680488586426
    4. 'max' → logprob: -8.256680488586426
    5. '=max' → logprob: -8.631680488586426
    6. ' max' → logprob: -11.256680488586426
    7. '       ' → logprob: -12.006680488586426
    8. ' ' → logprob: -15.506680488586426
    9. '    ' → logprob: -15.881680488586426
    10. '(max' → logprob: -16.38167953491211

Token 227: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19475919008255005
    2. '=' → logprob: -2.4447591304779053
    3. '   ' → logprob: -2.4447591304779053
    4. '       ' → logprob: -6.444759368896484
    5. '=max' → logprob: -6.444759368896484
    6. 'max' → logprob: -8.194759368896484
    7. ' max' → logprob: -11.194759368896484
    8. '    ' → logprob: -13.444759368896484
    9. '  ' → logprob: -13.569759368896484
    10. ' ' → logprob: -13.694759368896484

Token 228: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.1308974176645279
    2. ' max' → logprob: -2.1308975219726562
    3. ' if' → logprob: -6.130897521972656
    4. 'if' → logprob: -6.505897521972656
    5. '       ' → logprob: -8.630897521972656
    6. '   ' → logprob: -9.130897521972656
    7. ' ' → logprob: -13.755897521972656
    8. '           ' → logprob: -14.005897521972656
    9. '    ' → logprob: -14.255897521972656
    10. '	max' → logprob: -14.255897521972656

Token 229: '_so' (ID: 98189)
  Prédit: '_so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.875
    3. 'so' → logprob: -17.125
    4. '_SO' → logprob: -17.375
    5. 'So' → logprob: -18.125
    6. '_s' → logprob: -19.0
    7. '   ' → logprob: -20.125
    8. 's' → logprob: -20.375
    9. '_sol' → logprob: -20.625
    10. '_se' → logprob: -21.0

Token 230: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -0.029766570776700974
    2. 'far' → logprob: -3.52976655960083
    3. 'Far' → logprob: -11.654767036437988
    4. ' far' → logprob: -12.154767036437988
    5. 'ar' → logprob: -13.904767036437988
    6. '_f' → logprob: -14.154767036437988
    7. 'ofar' → logprob: -15.654767036437988
    8. '_for' → logprob: -16.154766082763672
    9. 'f' → logprob: -16.779766082763672
    10. 'afar' → logprob: -17.654766082763672

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759434103965759
    2. '=' → logprob: -0.8259434103965759
    3. '=max' → logprob: -12.575942993164062
    4. '   ' → logprob: -14.450942993164062
    5. 'max' → logprob: -16.950942993164062
    6. ' ' → logprob: -18.075942993164062
    7. '    ' → logprob: -18.825942993164062
    8. '=
' → logprob: -19.200942993164062
    9. '＝' → logprob: -20.200942993164062
    10. ' max' → logprob: -20.200942993164062

Token 232: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06196768581867218
    2. ' max' → logprob: -2.811967611312866
    3. '	max' → logprob: -19.186967849731445
    4. '(max' → logprob: -19.936967849731445
    5. '=max' → logprob: -21.311967849731445
    6. '[max' → logprob: -21.811967849731445
    7. ' ' → logprob: -22.061967849731445
    8. ' ' → logprob: -23.061967849731445
    9. '   ' → logprob: -23.186967849731445
    10. '_max' → logprob: -23.436967849731445

Token 233: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -6.630610641877865e-06
    2. 'max' → logprob: -12.000006675720215
    3. '(' → logprob: -15.000006675720215
    4. '=max' → logprob: -16.8750057220459
    5. '[max' → logprob: -17.1250057220459
    6. ' max' → logprob: -17.6250057220459
    7. ',max' → logprob: -17.7500057220459
    8. '	max' → logprob: -19.6250057220459
    9. '```' → logprob: -20.1250057220459
    10. '   ' → logprob: -20.2500057220459

Token 234: '_so' (ID: 98189)
  Prédit: '_so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -2.45848218582978e-06
    2. 'so' → logprob: -13.25000286102295
    3. '(max' → logprob: -15.00000286102295
    4. 'So' → logprob: -15.75000286102295
    5. '_' → logprob: -15.87500286102295
    6. 'max' → logprob: -16.750001907348633
    7. '(' → logprob: -17.250001907348633
    8. '_SO' → logprob: -17.750001907348633
    9. '_soft' → logprob: -18.125001907348633
    10. 's' → logprob: -19.000001907348633

Token 235: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -0.004098585341125727
    2. 'far' → logprob: -5.504098415374756
    3. 'Far' → logprob: -11.379098892211914
    4. 'ar' → logprob: -12.754098892211914
    5. '_so' → logprob: -13.004098892211914
    6. ' far' → logprob: -13.504098892211914
    7. '_for' → logprob: -13.879098892211914
    8. '_f' → logprob: -14.879098892211914
    9. 'ofar' → logprob: -15.129098892211914
    10. '_here' → logprob: -15.879098892211914

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006928971270099282
    2. ',max' → logprob: -7.375692844390869
    3. ' ,' → logprob: -9.750693321228027
    4. 'max' → logprob: -11.875693321228027
    5. ' max' → logprob: -14.125693321228027
    6. ',
' → logprob: -15.625693321228027
    7. '(max' → logprob: -16.00069236755371
    8. '[max' → logprob: -17.25069236755371
    9. ')' → logprob: -18.12569236755371
    10. '   ' → logprob: -18.87569236755371

Token 237: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.25192946195602417
    2. 'max' → logprob: -1.501929521560669
    3. '(max' → logprob: -16.126930236816406
    4. ' ' → logprob: -16.376930236816406
    5. '[max' → logprob: -16.751930236816406
    6. '   ' → logprob: -16.876930236816406
    7. '_max' → logprob: -17.126930236816406
    8. '	max' → logprob: -17.126930236816406
    9. '=max' → logprob: -18.126930236816406
    10. ',max' → logprob: -18.126930236816406

Token 238: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.128163257315464e-07
    2. 'ending' → logprob: -15.5
    3. 'Ending' → logprob: -16.875
    4. '[' → logprob: -19.375
    5. ')' → logprob: -19.625
    6. '\' → logprob: -20.0
    7. '```' → logprob: -20.25
    8. ')_' → logprob: -20.25
    9. '_
' → logprob: -20.625
    10. 'ENDING' → logprob: -20.625

Token 239: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -9.014684110297821e-06
    2. '_' → logprob: -11.750008583068848
    3. 'Ending' → logprob: -14.375008583068848
    4. ' ending' → logprob: -15.500008583068848
    5. '-ending' → logprob: -16.250009536743164
    6. 'ENDING' → logprob: -16.500009536743164
    7. 'here' → logprob: -16.500009536743164
    8. 'ended' → logprob: -17.375009536743164
    9. '```' → logprob: -17.375009536743164
    10. '
' → logprob: -18.125009536743164

Token 240: '_here' (ID: 192915)
  Prédit: '_here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -8.41866585687967e-06
    2. 'here' → logprob: -11.750008583068848
    3. 'Here' → logprob: -14.750008583068848
    4. '_' → logprob: -16.12500762939453
    5. 'ici' → logprob: -19.62500762939453
    6. '_else' → logprob: -20.37500762939453
    7. '_have' → logprob: -21.12500762939453
    8. '_where' → logprob: -21.12500762939453
    9. '_so' → logprob: -21.25000762939453
    10. 'e' → logprob: -21.37500762939453

Token 241: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002494087442755699
    2. ')
' → logprob: -6.002493858337402
    3. '   ' → logprob: -11.002493858337402
    4. ' )' → logprob: -14.252493858337402
    5. ')return' → logprob: -14.252493858337402
    6. ')

' → logprob: -14.877493858337402
    7. ')
' → logprob: -16.00249481201172
    8. '}' → logprob: -17.62749481201172
    9. '),' → logprob: -17.87749481201172
    10. 'return' → logprob: -18.00249481201172

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002939905971288681
    2. 'return' → logprob: -6.002939701080322
    3. '
' → logprob: -7.752939701080322
    4. '    
' → logprob: -10.50294017791748
    5. ' return' → logprob: -12.12794017791748
    6. '	return' → logprob: -14.12794017791748
    7. 'def' → logprob: -15.00294017791748
    8. '  
' → logprob: -15.12794017791748
    9. '```' → logprob: -15.37794017791748
    10. '        
' → logprob: -17.127939224243164

Token 243: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6934603452682495
    2. 'return' (adapté à ' return') → logprob: -0.6934603452682495
    3. ' return' → logprob: -8.318460464477539
    4. '    
' → logprob: -10.443460464477539
    5. '
' → logprob: -10.568460464477539
    6. '	return' → logprob: -11.443460464477539
    7. ':return' → logprob: -13.943460464477539
    8. ' ' → logprob: -14.193460464477539
    9. '  
' → logprob: -14.443460464477539
    10. '```' → logprob: -15.193460464477539

Token 244: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5759394764900208
    2. ' max' → logprob: -0.8259394764900208
    3. '(max' → logprob: -16.825939178466797
    4. '_max' → logprob: -18.325939178466797
    5. '[max' → logprob: -18.950939178466797
    6. ' ' → logprob: -19.450939178466797
    7. '=max' → logprob: -19.825939178466797
    8. '	max' → logprob: -19.950939178466797
    9. ',max' → logprob: -20.700939178466797
    10. ' ' → logprob: -21.700939178466797

Token 245: '_so' (ID: 98189)
  Prédit: '_so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -0.0006283254479058087
    2. '_' → logprob: -7.375628471374512
    3. '_soft' → logprob: -13.875628471374512
    4. '_SO' → logprob: -14.625628471374512
    5. '_s' → logprob: -16.375627517700195
    6. 'So' → logprob: -16.500627517700195
    7. '\' → logprob: -16.625627517700195
    8. '_soc' → logprob: -16.625627517700195
    9. '```' → logprob: -17.250627517700195
    10. 'so' → logprob: -17.875627517700195

Token 246: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -0.0015061709564179182
    2. 'far' → logprob: -6.501506328582764
    3. '_f' → logprob: -13.126505851745605
    4. 'f' → logprob: -15.001505851745605
    5. 'ar' → logprob: -15.126505851745605
    6. 'Far' → logprob: -15.376505851745605
    7. '_' → logprob: -15.501505851745605
    8. '_for' → logprob: -15.501505851745605
    9. 'ofar' → logprob: -15.751505851745605
    10. ' far' → logprob: -15.751505851745605

Token 247: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020550761371850967
    2. 'while' → logprob: -4.145550727844238
    3. '

' → logprob: -5.645550727844238
    4. 'def' → logprob: -8.020550727844238
    5. 'n' → logprob: -8.270550727844238
    6. '
' → logprob: -8.895550727844238
    7. 'for' → logprob: -9.270550727844238
    8. '\n' → logprob: -10.395550727844238
    9. '    
' → logprob: -10.395550727844238
    10. '  
' → logprob: -10.395550727844238

Token 248: 'def' (ID: 1314)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0031421820167452097
    2. '
' → logprob: -6.503142356872559
    3. 'if' → logprob: -6.628142356872559
    4. 'import' → logprob: -8.628142356872559
    5. 'def' → logprob: -9.378142356872559
    6. '```' → logprob: -11.003142356872559
    7. ' while' → logprob: -11.253142356872559
    8. 'n' → logprob: -11.753142356872559
    9. 'for' → logprob: -12.003142356872559
    10. '    
' → logprob: -12.878142356872559

Token 249: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0007856834563426673
    2. ' process' → logprob: -8.125785827636719
    3. ' solve' → logprob: -8.250785827636719
    4. 'main' → logprob: -9.000785827636719
    5. ' solution' → logprob: -9.750785827636719
    6. ' read' → logprob: -10.875785827636719
    7. ' traitement' → logprob: -11.875785827636719
    8. '_main' → logprob: -12.875785827636719
    9. 'solve' → logprob: -13.000785827636719
    10. ' lire' → logprob: -13.250785827636719

Token 250: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.4855663721391466e-05
    2. '():
' → logprob: -12.125015258789062
    3. ' ():' → logprob: -12.125015258789062
    4. '()' → logprob: -12.625015258789062
    5. '(' → logprob: -14.625015258789062
    6. '()>' → logprob: -16.250015258789062
    7. '():
' → logprob: -17.000015258789062
    8. ':' → logprob: -18.000015258789062
    9. '():

' → logprob: -18.625015258789062
    10. '()">' → logprob: -18.875015258789062

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02708841674029827
    2. ' while' → logprob: -3.6520884037017822
    3. ' import' → logprob: -8.527088165283203
    4. '    
' → logprob: -8.777088165283203
    5. 'while' → logprob: -9.777088165283203
    6. ' ' → logprob: -9.902088165283203
    7. ' input' → logprob: -9.902088165283203
    8. '   ' → logprob: -10.527088165283203
    9. '	while' → logprob: -10.652088165283203
    10. ' 
' → logprob: -10.652088165283203

Token 252: ' import' (ID: 1588)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3147102892398834
    2. 'while' → logprob: -1.314710259437561
    3. '   ' → logprob: -6.9397101402282715
    4. 'import' (adapté à ' import') → logprob: -7.8147101402282715
    5. ' import' → logprob: -9.56471061706543
    6. '    
' → logprob: -13.18971061706543
    7. '	while' → logprob: -13.68971061706543
    8. '```' → logprob: -13.93971061706543
    9. '
' → logprob: -14.68971061706543
    10. ' 
' → logprob: -15.18971061706543

Token 253: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0007099286303855479
    2. ' sys' → logprob: -7.2507100105285645
    3. '=sys' → logprob: -17.250709533691406
    4. '	sys' → logprob: -18.125709533691406
    5. '(sys' → logprob: -20.500709533691406
    6. 'stdin' → logprob: -20.500709533691406
    7. 'sy' → logprob: -20.625709533691406
    8. 's' → logprob: -21.250709533691406
    9. 'stdio' → logprob: -21.625709533691406
    10. '.sys' → logprob: -21.625709533691406

Token 254: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01578458584845066
    2. '
' → logprob: -4.515784740447998
    3. '    
' → logprob: -5.640784740447998
    4. ' for' → logprob: -7.390784740447998
    5. 'for' → logprob: -7.515784740447998
    6. ' 
' → logprob: -12.76578426361084
    7. '  
' → logprob: -13.14078426361084
    8. '   
' → logprob: -13.26578426361084
    9. '    ' → logprob: -13.89078426361084
    10. '     
' → logprob: -14.01578426361084

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06256212294101715
    2. ' for' → logprob: -3.3125622272491455
    3. 'for' → logprob: -3.9375622272491455
    4. '
' → logprob: -5.562561988830566
    5. '    
' → logprob: -7.062561988830566
    6. ' ' → logprob: -11.687561988830566
    7. '    ' → logprob: -12.437561988830566
    8. '	for' → logprob: -12.437561988830566
    9. ' lines' → logprob: -12.937561988830566
    10. '   
' → logprob: -13.062561988830566

Token 256: ' input' (ID: 3422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.057694997638463974
    2. ' for' → logprob: -3.057694911956787
    3. '   ' → logprob: -4.807694911956787
    4. ' lines' → logprob: -7.182694911956787
    5. 'lines' → logprob: -8.932695388793945
    6. 'while' → logprob: -12.182695388793945
    7. 'line' → logprob: -13.682695388793945
    8. ' while' → logprob: -15.182695388793945
    9. '	for' → logprob: -15.182695388793945
    10. ' ' → logprob: -15.432695388793945

Token 257: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.7698513865470886
    2. '_lines' → logprob: -1.8948514461517334
    3. '()' → logprob: -2.1448514461517334
    4. '_' → logprob: -2.1448514461517334
    5. '=' → logprob: -2.5198514461517334
    6. '_data' → logprob: -3.1448514461517334
    7. ' =' → logprob: -3.6448514461517334
    8. '_list' → logprob: -7.519851207733154
    9. '_stream' → logprob: -7.894851207733154
    10. 's' → logprob: -8.019851684570312

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11328276991844177
    2. ' =' → logprob: -2.2382826805114746
    3. '()' → logprob: -7.863282680511475
    4. '=sys' → logprob: -9.988283157348633
    5. '   ' → logprob: -11.363283157348633
    6. 'for' → logprob: -12.488283157348633
    7. '=
' → logprob: -12.613283157348633
    8. ' ' → logprob: -12.613283157348633
    9. ' =
' → logprob: -12.863283157348633
    10. '	' → logprob: -14.113283157348633

Token 259: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006716436706483364
    2. ' sys' → logprob: -5.006716251373291
    3. '[' → logprob: -13.88171672821045
    4. '(sys' → logprob: -16.256715774536133
    5. '	sys' → logprob: -16.881715774536133
    6. '[]' → logprob: -17.131715774536133
    7. '=sys' → logprob: -17.756715774536133
    8. ' [' → logprob: -18.006715774536133
    9. 'list' → logprob: -19.506715774536133
    10. '[]
' → logprob: -19.631715774536133

Token 260: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004126130603253841
    2. '.' → logprob: -5.504126071929932
    3. '.readline' → logprob: -10.62912654876709
    4. '.stdout' → logprob: -10.87912654876709
    5. '.std' → logprob: -13.62912654876709
    6. '.argv' → logprob: -14.12912654876709
    7. ' .' → logprob: -14.25412654876709
    8. 'stdin' → logprob: -14.37912654876709
    9. '.input' → logprob: -14.62912654876709
    10. '._' → logprob: -15.12912654876709

Token 261: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.16063900291919708
    2. '.readline' → logprob: -1.9106390476226807
    3. '.read' → logprob: -8.035638809204102
    4. '.' → logprob: -9.535638809204102
    5. 'read' → logprob: -11.160638809204102
    6. '.buffer' → logprob: -13.535638809204102
    7. 'buffer' → logprob: -13.910638809204102
    8. 'lines' → logprob: -14.035638809204102
    9. '```' → logprob: -14.285638809204102
    10. ' readline' → logprob: -15.285638809204102

Token 262: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015034328680485487
    2. '()' → logprob: -6.5015034675598145
    3. '(' → logprob: -14.876502990722656
    4. 'lines' → logprob: -14.876502990722656
    5. '()
' → logprob: -15.876502990722656
    6. '_lines' → logprob: -16.126502990722656
    7. '()

' → logprob: -16.626502990722656
    8. '()).' → logprob: -16.751502990722656
    9. ' ().' → logprob: -17.001502990722656
    10. 'line' → logprob: -19.001502990722656

Token 263: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.38818714022636414
    2. 'split' → logprob: -1.1381871700286865
    3. 'decode' → logprob: -6.638186931610107
    4. 'rstrip' → logprob: -12.513187408447266
    5. 'read' → logprob: -13.138187408447266
    6. 'lines' → logprob: -15.888187408447266
    7. 'replace' → logprob: -17.513187408447266
    8. '(split' → logprob: -17.888187408447266
    9. ' split' → logprob: -18.263187408447266
    10. '(strip' → logprob: -19.388187408447266

Token 264: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007113590254448354
    2. '()' → logprob: -7.250711441040039
    3. '()
' → logprob: -13.750711441040039
    4. '('' → logprob: -16.12571144104004
    5. ' ().' → logprob: -16.37571144104004
    6. 'split' → logprob: -17.00071144104004
    7. '('\' → logprob: -17.25071144104004
    8. '()\' → logprob: -17.25071144104004
    9. '()

' → logprob: -17.37571144104004
    10. '(' → logprob: -17.87571144104004

Token 265: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. '(split' → logprob: -18.75
    3. ' split' → logprob: -19.0
    4. 'strip' → logprob: -19.625
    5. 'spl' → logprob: -20.25
    6. 'rstrip' → logprob: -21.125
    7. 'decode' → logprob: -21.625
    8. '.split' → logprob: -21.75
    9. 'sp' → logprob: -22.75
    10. 'plit' → logprob: -23.125

Token 266: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.018445836380124092
    2. 'lines' → logprob: -4.26844596862793
    3. '()' → logprob: -5.51844596862793
    4. '("\' → logprob: -8.26844596862793
    5. '()
' → logprob: -12.64344596862793
    6. '()\' → logprob: -14.01844596862793
    7. '(' → logprob: -14.76844596862793
    8. '('' → logprob: -15.39344596862793
    9. '()

' → logprob: -17.14344596862793
    10. ''\' → logprob: -17.39344596862793

Token 267: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2664456789934775e-06
    2. '\n' → logprob: -13.625000953674316
    3. '
' → logprob: -18.000001907348633
    4. ' n' → logprob: -19.250001907348633
    5. 'ndef' → logprob: -20.250001907348633
    6. 'nj' → logprob: -20.875001907348633
    7. '\' → logprob: -21.500001907348633
    8. '```' → logprob: -21.500001907348633
    9. '	n' → logprob: -21.625001907348633
    10. '012' → logprob: -21.750001907348633

Token 268: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.4742487668991089
    2. ')' → logprob: -1.2242487668991089
    3. '')
' → logprob: -2.5992488861083984
    4. ')
' → logprob: -4.849248886108398
    5. '   ' → logprob: -6.599248886108398
    6. ')')
' → logprob: -9.349248886108398
    7. '')
' → logprob: -10.724248886108398
    8. '")' → logprob: -11.599248886108398
    9. ')'
' → logprob: -11.974248886108398
    10. ']' → logprob: -12.224248886108398

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05221730098128319
    2. 'for' → logprob: -3.0522172451019287
    3. 'i' → logprob: -5.927217483520508
    4. ' for' → logprob: -7.427217483520508
    5. 'idx' → logprob: -8.302217483520508
    6. 'index' → logprob: -9.802217483520508
    7. ' i' → logprob: -10.302217483520508
    8. '    
' → logprob: -10.802217483520508
    9. '
' → logprob: -13.427217483520508
    10. ' idx' → logprob: -14.177217483520508

Token 270: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06618181616067886
    2. 'i' → logprob: -3.3161818981170654
    3. '   ' → logprob: -4.316181659698486
    4. 'idx' (adapté à ' idx') → logprob: -4.566181659698486
    5. 'index' → logprob: -5.566181659698486
    6. 'results' → logprob: -8.941182136535645
    7. 'result' → logprob: -10.441182136535645
    8. 'output' → logprob: -12.316182136535645
    9. ' for' → logprob: -12.941182136535645
    10. 'lines' → logprob: -13.066182136535645

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192946195602417
    2. '=' → logprob: -1.501929521560669
    3. ')' → logprob: -16.001930236816406
    4. '_' → logprob: -16.751930236816406
    5. ' ' → logprob: -17.001930236816406
    6. ' ' → logprob: -17.501930236816406
    7. ',' → logprob: -17.501930236816406
    8. '}' → logprob: -17.751930236816406
    9. ' =
' → logprob: -17.876930236816406
    10. 'space' → logprob: -17.876930236816406

Token 272: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '1' → logprob: -16.87502098083496
    4. '   ' → logprob: -17.87502098083496
    5. '۰' → logprob: -19.75002098083496
    6. '  ' → logprob: -20.81252098083496
    7. '```' → logprob: -21.18752098083496
    8. '０' → logprob: -21.43752098083496
    9. '[' → logprob: -21.75002098083496
    10. '০' → logprob: -21.93752098083496

Token 273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.125001907348633
    4. '1' → logprob: -19.250001907348633
    5. '۰' → logprob: -20.812501907348633
    6. '```' → logprob: -21.500001907348633
    7. '  ' → logprob: -21.562501907348633
    8. '=' → logprob: -21.875001907348633
    9. '000' → logprob: -22.312501907348633
    10. '０' → logprob: -22.437501907348633

Token 274: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17319287359714508
    2. '
' → logprob: -1.9231928586959839
    3. 'while' → logprob: -4.673192977905273
    4. ' while' → logprob: -5.798192977905273
    5. '    
' → logprob: -7.798192977905273
    6. '	while' → logprob: -9.423192977905273
    7. '	
' → logprob: -11.923192977905273
    8. ' 
' → logprob: -12.798192977905273
    9. '  
' → logprob: -13.048192977905273
    10. '
' → logprob: -13.798192977905273

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029901716858148575
    2. ' while' → logprob: -3.7799017429351807
    3. 'while' → logprob: -5.029901504516602
    4. '	while' → logprob: -9.279901504516602
    5. '    
' → logprob: -14.404901504516602
    6. '```' → logprob: -15.154901504516602
    7. '
' → logprob: -15.279901504516602
    8. '   ' → logprob: -15.529901504516602
    9. '<|end|>' → logprob: -16.2799015045166
    10. 'While' → logprob: -16.9049015045166

Token 276: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.007160272914916277
    2. '   ' → logprob: -5.257160186767578
    3. ' while' → logprob: -6.257160186767578
    4. 'n' → logprob: -12.132160186767578
    5. '	while' → logprob: -13.382160186767578
    6. '    
' → logprob: -14.382160186767578
    7. '
' → logprob: -15.007160186767578
    8. '```' → logprob: -17.132160186767578
    9. 'for' → logprob: -17.257160186767578
    10. 't' → logprob: -17.507160186767578

Token 277: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.600170373916626
    2. 'True' → logprob: -1.225170373916626
    3. ' idx' → logprob: -2.100170373916626
    4. 'idx' → logprob: -3.350170373916626
    5. '(True' → logprob: -10.725170135498047
    6. '   ' → logprob: -11.600170135498047
    7. ' input' → logprob: -11.850170135498047
    8. 'input' → logprob: -11.975170135498047
    9. '	idx' → logprob: -12.350170135498047
    10. '(idx' → logprob: -12.975170135498047

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03365134820342064
    2. ':
' → logprob: -3.533651351928711
    3. '   ' → logprob: -5.908651351928711
    4. '       ' → logprob: -6.908651351928711
    5. ' and' → logprob: -9.283651351928711
    6. ' :' → logprob: -10.158651351928711
    7. '=' → logprob: -11.533651351928711
    8. ' :
' → logprob: -11.908651351928711
    9. ',' → logprob: -12.158651351928711
    10. '):' → logprob: -12.283651351928711

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030046850442886353
    2. '   ' → logprob: -6.253004550933838
    3. ' if' → logprob: -8.253005027770996
    4. 'line' → logprob: -8.253005027770996
    5. ' line' → logprob: -8.503005027770996
    6. 'n' → logprob: -8.753005027770996
    7. 'if' → logprob: -9.253005027770996
    8. '    ' → logprob: -11.003005027770996
    9. ' lines' → logprob: -11.503005027770996
    10. ' n' → logprob: -11.628005027770996

Token 280: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.45422208309173584
    2. 'n' → logprob: -1.5792220830917358
    3. 'line' → logprob: -2.4542222023010254
    4. ' if' → logprob: -3.0792222023010254
    5. '       ' → logprob: -4.329222202301025
    6. '   ' → logprob: -5.079222202301025
    7. ' line' → logprob: -5.829222202301025
    8. ' n' → logprob: -6.204222202301025
    9. 'lines' → logprob: -6.704222202301025
    10. 'idx' → logprob: -7.579222202301025

Token 281: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6043822169303894
    2. ' idx' → logprob: -0.8543822169303894
    3. 'input' → logprob: -3.979382276535034
    4. ' input' → logprob: -4.729382038116455
    5. 'int' → logprob: -8.354382514953613
    6. '	idx' → logprob: -9.354382514953613
    7. ' int' → logprob: -9.604382514953613
    8. '   ' → logprob: -9.729382514953613
    9. ' ' → logprob: -10.354382514953613
    10. 'index' → logprob: -11.604382514953613

Token 282: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.05529802665114403
    2. '>=' → logprob: -2.930298089981079
    3. ' ==' → logprob: -8.0552978515625
    4. '==' → logprob: -9.5552978515625
    5. ' ' → logprob: -10.9302978515625
    6. ']>=' → logprob: -12.6802978515625
    7. ')>=' → logprob: -13.0552978515625
    8. ' <' → logprob: -13.3052978515625
    9. '+' → logprob: -14.1802978515625
    10. '=' → logprob: -14.8052978515625

Token 283: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.339278580620885e-06
    2. ' len' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.500001907348633
    4. 'length' → logprob: -23.000001907348633
    5. '	len' → logprob: -23.375001907348633
    6. '(len' → logprob: -23.750001907348633
    7. '=len' → logprob: -24.000001907348633
    8. 'input' → logprob: -24.250001907348633
    9. '[len' → logprob: -24.625001907348633
    10. '<len' → logprob: -24.875001907348633

Token 284: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008714676834642887
    2. 'input' → logprob: -4.75871467590332
    3. ' input' → logprob: -9.25871467590332
    4. '(' → logprob: -13.00871467590332
    5. ' (' → logprob: -13.63371467590332
    6. '=input' → logprob: -14.38371467590332
    7. ',input' → logprob: -14.88371467590332
    8. '_input' → logprob: -15.25871467590332
    9. '<input' → logprob: -16.50871467590332
    10. '[input' → logprob: -17.13371467590332

Token 285: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.75
    3. ')' → logprob: -16.75
    4. '_l' → logprob: -17.0
    5. '_line' → logprob: -17.125
    6. '_LINES' → logprob: -17.5
    7. 'lines' → logprob: -18.375
    8. '_)' → logprob: -18.5
    9. ')_' → logprob: -18.875
    10. '```' → logprob: -19.625

Token 286: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.016090678051114082
    2. ')' → logprob: -4.5160908699035645
    3. '):' → logprob: -6.0160908699035645
    4. ':' → logprob: -6.5160908699035645
    5. 'or' → logprob: -7.6410908699035645
    6. '):
' → logprob: -7.7660908699035645
    7. ':
' → logprob: -9.016090393066406
    8. ' ' → logprob: -10.391090393066406
    9. '           ' → logprob: -11.266090393066406
    10. '   ' → logprob: -11.516090393066406

Token 287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.7968066206085496e-05
    2. ' break' → logprob: -11.375027656555176
    3. '       ' → logprob: -12.250027656555176
    4. '
' → logprob: -12.750027656555176
    5. 'break' → logprob: -13.125027656555176
    6. ':' → logprob: -13.625027656555176
    7. '   ' → logprob: -13.750027656555176
    8. '		' → logprob: -14.125027656555176
    9. ':
' → logprob: -14.250027656555176
    10. '            
' → logprob: -14.250027656555176

Token 288: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04893728718161583
    2. 'break' (adapté à ' break') → logprob: -3.0489373207092285
    3. ' break' → logprob: -8.04893684387207
    4. '		' → logprob: -11.92393684387207
    5. '	break' → logprob: -11.92393684387207
    6. '               ' → logprob: -11.92393684387207
    7. '       ' → logprob: -12.42393684387207
    8. 'return' → logprob: -12.54893684387207
    9. '   ' → logprob: -13.54893684387207
    10. '	       ' → logprob: -14.67393684387207

Token 289: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3054365813732147
    2. '       ' → logprob: -1.430436611175537
    3. '        
' → logprob: -3.805436611175537
    4. '    
' → logprob: -7.305436611175537
    5. '  
' → logprob: -7.305436611175537
    6. ' 
' → logprob: -8.930436134338379
    7. '\n' → logprob: -9.680436134338379
    8. '
' → logprob: -10.180436134338379
    9. '<|end|>' → logprob: -10.180436134338379
    10. '            
' → logprob: -10.430436134338379

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023273199796676636
    2. '
' → logprob: -4.64827299118042
    3. '    
' → logprob: -5.14827299118042
    4. '        
' → logprob: -5.14827299118042
    5. '   ' → logprob: -6.39827299118042
    6. '  
' → logprob: -9.273273468017578
    7. '            
' → logprob: -11.523273468017578
    8. ' 
' → logprob: -11.898273468017578
    9. '   
' → logprob: -12.148273468017578
    10. '0' → logprob: -12.398273468017578

Token 291: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.33692312240600586
    2. 'line' → logprob: -2.086923122406006
    3. ' n' → logprob: -2.461923122406006
    4. '       ' → logprob: -3.211923122406006
    5. ' line' → logprob: -3.336923122406006
    6. 'ligne' → logprob: -8.711923599243164
    7. '   ' → logprob: -8.836923599243164
    8. 'size' → logprob: -8.836923599243164
    9. 'length' → logprob: -9.336923599243164
    10. 't' → logprob: -9.836923599243164

Token 292: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4743148684501648
    2. '=' → logprob: -0.9743148684501648
    3. '=int' → logprob: -8.34931468963623
    4. ' =
' → logprob: -14.72431468963623
    5. ' ' → logprob: -14.97431468963623
    6. '=
' → logprob: -15.34931468963623
    7. ' ' → logprob: -15.84931468963623
    8. 'int' → logprob: -16.349315643310547
    9. '=

' → logprob: -16.849315643310547
    10. ')' → logprob: -17.099315643310547

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326258182525635
    2. '=' → logprob: -1.3132625818252563
    3. '   ' → logprob: -15.063262939453125
    4. '=
' → logprob: -16.313262939453125
    5. ' ' → logprob: -16.438262939453125
    6. ' =
' → logprob: -16.438262939453125
    7. 's' → logprob: -16.438262939453125
    8. '=n' → logprob: -17.063262939453125
    9. '    ' → logprob: -17.188262939453125
    10. ' ' → logprob: -17.438262939453125

Token 294: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0008073674980551004
    2. ' input' → logprob: -7.125807285308838
    3. 'int' → logprob: -12.750807762145996
    4. ' ' → logprob: -18.87580680847168
    5. 'output' → logprob: -19.37580680847168
    6. '(input' → logprob: -19.50080680847168
    7. ' int' → logprob: -19.75080680847168
    8. '	input' → logprob: -20.25080680847168
    9. '<input' → logprob: -20.75080680847168
    10. '   ' → logprob: -20.75080680847168

Token 295: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.012287944555282593
    2. 'lines' → logprob: -4.8872880935668945
    3. '()' → logprob: -6.3872880935668945
    4. 'es' → logprob: -6.6372880935668945
    5. '(lines' → logprob: -7.8872880935668945
    6. 't' → logprob: -8.137288093566895
    7. 'put' → logprob: -8.137288093566895
    8. 'ines' → logprob: -8.387288093566895
    9. 'e' → logprob: -9.012288093566895
    10. 'Lines' → logprob: -9.512288093566895

Token 296: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.250006675720215
    3. 'idx' → logprob: -14.000006675720215
    4. ' [' → logprob: -14.500006675720215
    5. '   ' → logprob: -16.3750057220459
    6. ')[' → logprob: -16.5000057220459
    7. '```' → logprob: -16.6250057220459
    8. '(idx' → logprob: -17.1250057220459
    9. ' idx' → logprob: -17.1250057220459
    10. '[id' → logprob: -17.1250057220459

Token 297: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0643615797162056
    2. ']' → logprob: -2.814361572265625
    3. ']
' → logprob: -6.064361572265625
    4. ' ].' → logprob: -10.064361572265625
    5. '];' → logprob: -11.689361572265625
    6. '])' → logprob: -12.064361572265625
    7. '.strip' → logprob: -12.439361572265625
    8. ' ]' → logprob: -12.564361572265625
    9. ').' → logprob: -13.939361572265625
    10. ')' → logprob: -14.814361572265625

Token 298: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.128163257315464e-07
    2. 'rstrip' → logprob: -15.25
    3. 'split' → logprob: -18.25
    4. ' strip' → logprob: -21.25
    5. 'str' → logprob: -21.875
    6. '.strip' → logprob: -22.875
    7. '(strip' → logprob: -23.25
    8. '_strip' → logprob: -23.375
    9. '-strip' → logprob: -25.375
    10. 'isdigit' → logprob: -25.625

Token 299: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018153922632336617
    2. '()
' → logprob: -4.018154144287109
    3. '()\' → logprob: -13.89315414428711
    4. '())' → logprob: -14.14315414428711
    5. '()

' → logprob: -14.14315414428711
    6. ')' → logprob: -14.64315414428711
    7. '()
' → logprob: -14.76815414428711
    8. '()`' → logprob: -15.26815414428711
    9. '(' → logprob: -15.51815414428711
    10. ' ()' → logprob: -16.01815414428711

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00090061966329813
    2. '        
' → logprob: -7.625900745391846
    3. '   ' → logprob: -8.375900268554688
    4. '<|end|>' → logprob: -10.125900268554688
    5. ' if' → logprob: -10.250900268554688
    6. '
' → logprob: -10.375900268554688
    7. '\n' → logprob: -10.500900268554688
    8. 'if' → logprob: -11.250900268554688
    9. '  
' → logprob: -12.250900268554688
    10. '    
' → logprob: -12.375900268554688

Token 301: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09164327383041382
    2. 'idx' (adapté à ' idx') → logprob: -2.5916433334350586
    3. '       ' → logprob: -4.591643333435059
    4. ' if' → logprob: -6.466643333435059
    5. 'n' → logprob: -6.966643333435059
    6. ' idx' → logprob: -10.341643333435059
    7. '   ' → logprob: -12.216643333435059
    8. '        
' → logprob: -14.591643333435059
    9. 'index' → logprob: -14.841643333435059
    10. ' n' → logprob: -15.216643333435059

Token 302: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20143623650074005
    2. ' +=' → logprob: -1.7014362812042236
    3. '+' → logprob: -10.701436042785645
    4. '=' → logprob: -15.326436042785645
    5. ']+=' → logprob: -15.951436042785645
    6. '+="' → logprob: -17.82643699645996
    7. '++' → logprob: -17.82643699645996
    8. '   ' → logprob: -18.07643699645996
    9. '```' → logprob: -18.07643699645996
    10. '+='' → logprob: -18.20143699645996

Token 303: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -19.500001907348633
    4. '0' → logprob: -20.750001907348633
    5. '   ' → logprob: -21.125001907348633
    6. '１' → logprob: -22.375001907348633
    7. '۱' → logprob: -23.187501907348633
    8. '`' → logprob: -23.250001907348633
    9. '
' → logprob: -23.250001907348633
    10. '``' → logprob: -24.312501907348633

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '0' → logprob: -19.375
    4. '```' → logprob: -20.125
    5. '１' → logprob: -22.0625
    6. '   ' → logprob: -22.1875
    7. '
' → logprob: -22.1875
    8. '`' → logprob: -22.75
    9. '۱' → logprob: -22.875
    10. '``' → logprob: -23.3125

Token 305: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010411669500172138
    2. 'if' → logprob: -4.635411739349365
    3. ' if' → logprob: -8.010411262512207
    4. '   ' → logprob: -8.135411262512207
    5. 'n' → logprob: -10.885411262512207
    6. '        
' → logprob: -11.885411262512207
    7. '
' → logprob: -13.760411262512207
    8. '      ' → logprob: -14.135411262512207
    9. '```' → logprob: -14.635411262512207
    10. '	if' → logprob: -14.885411262512207

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4805460572242737
    2. 'if' → logprob: -0.9805460572242737
    3. ' if' → logprob: -5.105545997619629
    4. '   ' → logprob: -8.230545997619629
    5. 'n' → logprob: -9.105545997619629
    6. '        
' → logprob: -12.480545997619629
    7. '	if' → logprob: -13.730545997619629
    8. '      ' → logprob: -14.355545997619629
    9. ' ' → logprob: -14.355545997619629
    10. '```' → logprob: -15.355545997619629

Token 307: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.127333340875339e-06
    2. 'n' → logprob: -12.750003814697266
    3. ' if' → logprob: -14.000003814697266
    4. '       ' → logprob: -14.750003814697266
    5. 'try' → logprob: -20.875003814697266
    6. 'If' → logprob: -21.000003814697266
    7. '   ' → logprob: -21.125003814697266
    8. '        
' → logprob: -21.375003814697266
    9. '	if' → logprob: -23.250003814697266
    10. '
' → logprob: -24.000003814697266

Token 308: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006716436706483364
    2. ' n' → logprob: -5.006716251373291
    3. 'not' → logprob: -14.50671672821045
    4. ' not' → logprob: -14.63171672821045
    5. '	n' → logprob: -17.006715774536133
    6. ' ' → logprob: -17.756715774536133
    7. '0' → logprob: -18.006715774536133
    8. '
' → logprob: -18.631715774536133
    9. ' ' → logprob: -18.756715774536133
    10. 'int' → logprob: -19.131715774536133

Token 309: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00017123986617662013
    2. '_' → logprob: -8.750171661376953
    3. '==' → logprob: -12.375171661376953
    4. '_lin' → logprob: -12.750171661376953
    5. '_l' → logprob: -13.000171661376953
    6. 'line' → logprob: -13.375171661376953
    7. '_li' → logprob: -15.250171661376953
    8. '_LINE' → logprob: -15.375171661376953
    9. ' ==' → logprob: -15.375171661376953
    10. 'ine' → logprob: -15.750171661376953

Token 310: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02056208811700344
    2. '==' → logprob: -3.895562171936035
    3. ' ' → logprob: -11.895562171936035
    4. '=' → logprob: -12.145562171936035
    5. ' =' → logprob: -12.145562171936035
    6. ' =="' → logprob: -14.520562171936035
    7. ' =='' → logprob: -14.895562171936035
    8. '.strip' → logprob: -14.895562171936035
    9. '()==' → logprob: -15.020562171936035
    10. ')==' → logprob: -15.145562171936035

Token 311: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04863926023244858
    2. '"' → logprob: -3.0486392974853516
    3. ' '' → logprob: -10.173639297485352
    4. '0' → logprob: -11.298639297485352
    5. ' "' → logprob: -14.173639297485352
    6. ' ' → logprob: -15.048639297485352
    7. '`' → logprob: -15.548639297485352
    8. '   ' → logprob: -17.54863929748535
    9. '```' → logprob: -19.79863929748535
    10. '  ' → logprob: -20.29863929748535

Token 312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ''' → logprob: -17.25
    3. ' ' → logprob: -19.125
    4. '```' → logprob: -20.5
    5. '"' → logprob: -21.75
    6. '`' → logprob: -22.625
    7. '')' → logprob: -23.5
    8. '``' → logprob: -23.5
    9. '00' → logprob: -23.625
    10. '   ' → logprob: -24.0

Token 313: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.314170241355896
    2. '':
' → logprob: -1.314170241355896
    3. ''' → logprob: -7.1891703605651855
    4. '':
' → logprob: -8.814169883728027
    5. ''):
' → logprob: -13.564169883728027
    6. ':' → logprob: -13.564169883728027
    7. '':

' → logprob: -14.564169883728027
    8. '":' → logprob: -14.689169883728027
    9. '\n' → logprob: -15.064169883728027
    10. ':
' → logprob: -15.564169883728027

Token 314: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.6550729419104755e-05
    2. ' break' → logprob: -10.750036239624023
    3. 'break' → logprob: -11.500036239624023
    4. '       ' → logprob: -13.375036239624023
    5. '		' → logprob: -13.625036239624023
    6. '               ' → logprob: -14.000036239624023
    7. '          ' → logprob: -14.375036239624023
    8. '	break' → logprob: -15.125036239624023
    9. '   ' → logprob: -15.750036239624023
    10. '	       ' → logprob: -15.875036239624023

Token 315: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3192492127418518
    2. 'break' → logprob: -1.319249153137207
    3. ' break' → logprob: -5.194249153137207
    4. '       ' → logprob: -7.944249153137207
    5. '	break' → logprob: -10.319249153137207
    6. '               ' → logprob: -11.194249153137207
    7. '   ' → logprob: -11.444249153137207
    8. '          ' → logprob: -12.819249153137207
    9. '_break' → logprob: -13.569249153137207
    10. '		' → logprob: -13.694249153137207

Token 316: ' Fin' (ID: 7772)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7482736110687256
    2. ' break' → logprob: -1.2482736110687256
    3. 'break' → logprob: -1.4982736110687256
    4. '       ' → logprob: -4.123273849487305
    5. '	break' → logprob: -9.748273849487305
    6. '               ' → logprob: -10.498273849487305
    7. '		' → logprob: -12.123273849487305
    8. '```' → logprob: -12.373273849487305
    9. '_break' → logprob: -12.748273849487305
    10. 'Break' → logprob: -12.748273849487305

Token 317: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009143244242295623
    2. '       ' → logprob: -7.125914096832275
    3. '          ' → logprob: -10.000914573669434
    4. '               ' → logprob: -11.000914573669434
    5. '		' → logprob: -11.125914573669434
    6. '   ' → logprob: -11.875914573669434
    7. '\n' → logprob: -12.125914573669434
    8. '            ' → logprob: -12.500914573669434
    9. ',' → logprob: -12.625914573669434
    10. '        ' → logprob: -12.750914573669434

Token 318: ' tous' (ID: 10688)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1399407535791397
    2. 'la' → logprob: -2.7649407386779785
    3. 'programme' → logprob: -4.0149407386779785
    4. 'input' → logprob: -4.2649407386779785
    5. 'lecture' → logprob: -4.8899407386779785
    6. 'entrée' → logprob: -5.0149407386779785
    7. 'le' → logprob: -5.2649407386779785
    8. ' l' → logprob: -5.6399407386779785
    9. 'program' → logprob: -6.0149407386779785
    10. 'les' → logprob: -6.0149407386779785

Token 319: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.146154522895813
    2. ' les' → logprob: -2.0211544036865234
    3. ' input' → logprob: -6.896154403686523
    4. 's' → logprob: -7.521154403686523
    5. 'es' → logprob: -7.771154403686523
    6. ' inputs' → logprob: -8.146154403686523
    7. ' ' → logprob: -8.396154403686523
    8. 'l' → logprob: -8.771154403686523
    9. 'inputs' → logprob: -8.896154403686523
    10. ' tests' → logprob: -9.396154403686523

Token 320: ' datasets' (ID: 57711)
  Prédit: 'tests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tests' → logprob: -0.08970607072114944
    2. 'cas' → logprob: -2.8397061824798584
    3. 'inputs' → logprob: -4.589705944061279
    4. ' tests' → logprob: -5.089705944061279
    5. 'test' → logprob: -5.839705944061279
    6. 'je' → logprob: -6.089705944061279
    7. 'program' → logprob: -6.089705944061279
    8. 'calcul' → logprob: -7.214705944061279
    9. ' traitements' → logprob: -7.464705944061279
    10. ' cas' → logprob: -7.589705944061279

Token 321: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018899753922596574
    2. '       ' → logprob: -8.625188827514648
    3. '          ' → logprob: -12.375188827514648
    4. ',' → logprob: -13.500188827514648
    5. '               ' → logprob: -13.875188827514648
    6. '   ' → logprob: -14.000188827514648
    7. '		' → logprob: -14.250188827514648
    8. '         ' → logprob: -14.875188827514648
    9. ' break' → logprob: -15.125188827514648
    10. ':' → logprob: -15.750188827514648

Token 322: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.707997428951785e-05
    2. '       ' → logprob: -9.500077247619629
    3. '          ' → logprob: -13.625077247619629
    4. '               ' → logprob: -15.000077247619629
    5. '   ' → logprob: -15.875077247619629
    6. '		' → logprob: -16.000076293945312
    7. '	       ' → logprob: -16.750076293945312
    8. '            ' → logprob: -16.750076293945312
    9. ' break' → logprob: -16.750076293945312
    10. '         ' → logprob: -16.875076293945312

Token 323: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0658973678946495
    2. '           ' → logprob: -2.8158974647521973
    3. ' break' → logprob: -5.565897464752197
    4. '       ' → logprob: -9.940896987915039
    5. '	break' → logprob: -10.690896987915039
    6. 'return' → logprob: -11.065896987915039
    7. '               ' → logprob: -11.815896987915039
    8. '		' → logprob: -13.690896987915039
    9. '```' → logprob: -15.440896987915039
    10. '   ' → logprob: -15.565896987915039

Token 324: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012821101699955761
    2. '        
' → logprob: -9.125127792358398
    3. '
' → logprob: -12.250127792358398
    4. '<|end|>' → logprob: -12.250127792358398
    5. '  
' → logprob: -12.875127792358398
    6. '   ' → logprob: -13.375127792358398
    7. 'n' → logprob: -13.625127792358398
    8. ',' → logprob: -13.750127792358398
    9. '       
' → logprob: -14.625127792358398
    10. '      ' → logprob: -14.625127792358398

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000193527273950167
    2. 'n' → logprob: -8.75019359588623
    3. ' n' → logprob: -10.75019359588623
    4. '        
' → logprob: -11.37519359588623
    5. '      ' → logprob: -14.75019359588623
    6. '        ' → logprob: -15.12519359588623
    7. '
' → logprob: -15.37519359588623
    8. '​' → logprob: -15.62519359588623
    9. '   ' → logprob: -15.75019359588623
    10. '<|end|>' → logprob: -15.87519359588623

Token 326: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.000665375788230449
    2. '       ' → logprob: -7.375665187835693
    3. ' n' → logprob: -10.250665664672852
    4. '   ' → logprob: -12.750665664672852
    5. '        
' → logprob: -15.250665664672852
    6. 'try' → logprob: -16.12566566467285
    7. '
' → logprob: -16.12566566467285
    8. '	n' → logprob: -17.00066566467285
    9. 'num' → logprob: -17.25066566467285
    10. '```' → logprob: -17.37566566467285

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029774557799100876
    2. '=' → logprob: -3.5297746658325195
    3. '=int' → logprob: -11.02977466583252
    4. ' ' → logprob: -12.40477466583252
    5. '   ' → logprob: -13.40477466583252
    6. '    ' → logprob: -14.52977466583252
    7. ' =
' → logprob: -14.65477466583252
    8. '       ' → logprob: -15.02977466583252
    9. ',' → logprob: -15.40477466583252
    10. ')' → logprob: -16.154773712158203

Token 328: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02324547804892063
    2. ' int' → logprob: -3.7732455730438232
    3. '(int' → logprob: -24.148244857788086
    4. '	int' → logprob: -24.648244857788086
    5. '[int' → logprob: -24.648244857788086
    6. ' ' → logprob: -25.148244857788086
    7. '=int' → logprob: -25.273244857788086
    8. '<int' → logprob: -26.148244857788086
    9. '   ' → logprob: -28.273244857788086
    10. '  ' → logprob: -28.398244857788086

Token 329: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.500075340270996
    3. ' (' → logprob: -16.12507438659668
    4. 'n' → logprob: -16.12507438659668
    5. '(
' → logprob: -17.50007438659668
    6. ' n' → logprob: -19.00007438659668
    7. ')n' → logprob: -21.25007438659668
    8. ')' → logprob: -21.37507438659668
    9. '((' → logprob: -21.62507438659668
    10. '(num' → logprob: -21.62507438659668

Token 330: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00012630375567823648
    2. 'line' → logprob: -9.000125885009766
    3. ')' → logprob: -13.375125885009766
    4. '_LINE' → logprob: -15.125125885009766
    5. 'Line' → logprob: -15.125125885009766
    6. '_n' → logprob: -15.500125885009766
    7. '[line' → logprob: -16.000125885009766
    8. '_lines' → logprob: -16.625125885009766
    9. 'n' → logprob: -16.625125885009766
    10. '_l' → logprob: -17.000125885009766

Token 331: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067176250740885735
    2. ')
' → logprob: -5.006717681884766
    3. '       ' → logprob: -13.881717681884766
    4. ' )' → logprob: -14.506717681884766
    5. ')
' → logprob: -14.631717681884766
    6. '   ' → logprob: -15.631717681884766
    7. '<|end|>' → logprob: -16.756717681884766
    8. ')

' → logprob: -17.256717681884766
    9. ')#' → logprob: -17.756717681884766
    10. '))' → logprob: -17.756717681884766

Token 332: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016659092216286808
    2. 'arr' → logprob: -8.875166893005371
    3. '        
' → logprob: -11.250166893005371
    4. '   ' → logprob: -11.625166893005371
    5. '	arr' → logprob: -13.375166893005371
    6. '```' → logprob: -14.000166893005371
    7. ' arr' → logprob: -14.375166893005371
    8. '      ' → logprob: -15.250166893005371
    9. '	' → logprob: -15.625166893005371
    10. '<|end|>' → logprob: -15.625166893005371

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06198493763804436
    2. 'arr' → logprob: -2.8119850158691406
    3. '	arr' → logprob: -11.93698501586914
    4. '   ' → logprob: -12.56198501586914
    5. 'array' → logprob: -12.81198501586914
    6. ' arr' → logprob: -13.68698501586914
    7. 'numbers' → logprob: -13.68698501586914
    8. 'if' → logprob: -14.56198501586914
    9. 'nums' → logprob: -14.68698501586914
    10. 'data' → logprob: -15.56198501586914

Token 334: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.007852788083255291
    2. 'numbers' → logprob: -5.382852554321289
    3. '       ' → logprob: -6.882852554321289
    4. 'sequence' → logprob: -7.507852554321289
    5. 'nums' → logprob: -7.632852554321289
    6. 'seq' → logprob: -7.882852554321289
    7. 'array' → logprob: -8.132852554321289
    8. 'values' → logprob: -8.132852554321289
    9. 'if' → logprob: -8.757852554321289
    10. 'data' → logprob: -10.507852554321289

Token 335: ' Lire' (ID: 57624)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.005950252525508404
    2. 'seq' → logprob: -6.005950450897217
    3. 'if' → logprob: -6.630950450897217
    4. 'sequence' → logprob: -6.880950450897217
    5. 'numbers' → logprob: -8.005949974060059
    6. 'array' → logprob: -8.380949974060059
    7. '       ' → logprob: -8.755949974060059
    8. 'nums' → logprob: -9.130949974060059
    9. '   ' → logprob: -9.255949974060059
    10. ' arr' → logprob: -9.505949974060059

Token 336: ' les' (ID: 1341)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.22326995432376862
    2. ' la' → logprob: -2.3482699394226074
    3. ' arr' → logprob: -2.9732699394226074
    4. '       ' → logprob: -3.3482699394226074
    5. ' l' → logprob: -4.723269939422607
    6. ' les' → logprob: -5.473269939422607
    7. 'l' → logprob: -6.598269939422607
    8. 'les' → logprob: -6.973269939422607
    9. 'la' → logprob: -7.598269939422607
    10. '	arr' → logprob: -7.723269939422607

Token 337: ' n' (ID: 297)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5764056444168091
    2. ' valeurs' → logprob: -1.701405644416809
    3. 'val' → logprob: -1.826405644416809
    4. ' arr' → logprob: -3.7014055252075195
    5. ' nombres' → logprob: -3.7014055252075195
    6. 'numbers' → logprob: -4.8264055252075195
    7. ' numbers' → logprob: -4.8264055252075195
    8. 'values' → logprob: -4.8264055252075195
    9. 'élé' → logprob: -5.8264055252075195
    10. 'vals' → logprob: -6.2014055252075195

Token 338: ' nombres' (ID: 76205)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.2154667377471924
    2. ' lignes' → logprob: -1.7154667377471924
    3. ' lines' → logprob: -2.0904667377471924
    4. ' tokens' → logprob: -2.7154667377471924
    5. ' elements' → logprob: -2.8404667377471924
    6. 'tokens' → logprob: -2.8404667377471924
    7. ' arr' → logprob: -3.0904667377471924
    8. '_arr' → logprob: -3.7154667377471924
    9. 'elements' → logprob: -3.9654667377471924
    10. ' éléments' → logprob: -4.215466499328613

Token 339: ' suivants' (ID: 112219)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016188843874260783
    2. 'arr' → logprob: -6.8766188621521
    3. ',' → logprob: -8.876619338989258
    4. 's' → logprob: -9.376619338989258
    5. ' arr' → logprob: -9.501619338989258
    6. '        
' → logprob: -10.376619338989258
    7. '	arr' → logprob: -10.501619338989258
    8. 'n' → logprob: -10.626619338989258
    9. ':' → logprob: -10.626619338989258
    10. 'numbers' → logprob: -10.751619338989258

Token 340: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.150362166110426e-05
    2. 'arr' → logprob: -10.000091552734375
    3. ',' → logprob: -10.625091552734375
    4. ' arr' → logprob: -12.250091552734375
    5. ' lines' → logprob: -13.125091552734375
    6. ':' → logprob: -13.250091552734375
    7. 's' → logprob: -13.250091552734375
    8. '        
' → logprob: -13.375091552734375
    9. '	arr' → logprob: -13.500091552734375
    10. '      ' → logprob: -13.625091552734375

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011832444579340518
    2. 'arr' → logprob: -9.375118255615234
    3. '        
' → logprob: -11.500118255615234
    4. ',' → logprob: -12.125118255615234
    5. '   ' → logprob: -12.250118255615234
    6. '      ' → logprob: -12.750118255615234
    7. '	arr' → logprob: -13.375118255615234
    8. '	   ' → logprob: -13.500118255615234
    9. '	' → logprob: -13.750118255615234
    10. '    ' → logprob: -13.875118255615234

Token 342: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.948365330696106
    2. '       ' → logprob: -1.198365330696106
    3. ' numbers' → logprob: -1.948365330696106
    4. 'numbers' → logprob: -2.0733652114868164
    5. 'nums' → logprob: -3.8233652114868164
    6. ' arr' → logprob: -4.073365211486816
    7. ' nums' → logprob: -6.448365211486816
    8. 'if' → logprob: -7.323365211486816
    9. ' if' → logprob: -7.323365211486816
    10. 'values' → logprob: -8.198365211486816

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740773141384125
    2. '=' → logprob: -0.9740773439407349
    3. '=[]' → logprob: -15.849077224731445
    4. '   ' → logprob: -16.724077224731445
    5. ' ' → logprob: -17.474077224731445
    6. ' ' → logprob: -17.974077224731445
    7. '=line' → logprob: -17.974077224731445
    8. '=int' → logprob: -18.099077224731445
    9. '       ' → logprob: -18.099077224731445
    10. '=input' → logprob: -18.599077224731445

Token 344: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0011835616314783692
    2. ' list' → logprob: -6.75118350982666
    3. '[list' → logprob: -11.25118350982666
    4. '[' → logprob: -14.75118350982666
    5. '	list' → logprob: -17.376184463500977
    6. '   ' → logprob: -19.001184463500977
    7. ' [' → logprob: -19.876184463500977
    8. '=list' → logprob: -20.376184463500977
    9. '(list' → logprob: -20.501184463500977
    10. '[]' → logprob: -21.751184463500977

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00090407655807212
    2. ' for' → logprob: -7.375904083251953
    3. 'for' → logprob: -8.875904083251953
    4. '<|end|>' → logprob: -9.125904083251953
    5. '	' → logprob: -12.000904083251953
    6. '	   ' → logprob: -12.375904083251953
    7. '<|end|>' → logprob: -12.375904083251953
    8. '   ' → logprob: -12.500904083251953
    9. '	for' → logprob: -12.875904083251953
    10. ',' → logprob: -13.250904083251953

Token 346: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002765882993116975
    2. '       ' → logprob: -6.002765655517578
    3. ' for' → logprob: -8.252765655517578
    4. 'while' → logprob: -10.502765655517578
    5. '	for' → logprob: -13.377765655517578
    6. '   ' → logprob: -14.377765655517578
    7. ' while' → logprob: -18.252765655517578
    8. ' ' → logprob: -19.002765655517578
    9. '        
' → logprob: -20.127765655517578
    10. '	' → logprob: -20.252765655517578

Token 347: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4446989595890045
    2. '_i' → logprob: -1.1946989297866821
    3. 'i' → logprob: -3.4446990489959717
    4. ' _' → logprob: -4.194698810577393
    5. ' i' → logprob: -4.694698810577393
    6. '_j' → logprob: -10.19469928741455
    7. '_in' → logprob: -12.44469928741455
    8. '_line' → logprob: -12.56969928741455
    9. ' ' → logprob: -12.69469928741455
    10. '__' → logprob: -13.19469928741455

Token 348: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029971938580274582
    2. 'in' → logprob: -3.5299718379974365
    3. 'i' → logprob: -8.779972076416016
    4. ' ' → logprob: -10.404972076416016
    5. 'range' → logprob: -10.404972076416016
    6. '_' → logprob: -12.404972076416016
    7. ' i' → logprob: -13.529972076416016
    8. '  ' → logprob: -14.404972076416016
    9. ' range' → logprob: -14.404972076416016
    10. 'n' → logprob: -15.654972076416016

Token 349: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.4855663721391466e-05
    2. ' range' → logprob: -11.125015258789062
    3. '(range' → logprob: -16.875015258789062
    4. 'ange' → logprob: -17.625015258789062
    5. '	range' → logprob: -18.750015258789062
    6. 'rang' → logprob: -18.875015258789062
    7. '   ' → logprob: -19.375015258789062
    8. '```' → logprob: -20.000015258789062
    9. ' ' → logprob: -20.625015258789062
    10. '  ' → logprob: -20.625015258789062

Token 350: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05331522598862648
    2. 'n' → logprob: -3.0533151626586914
    3. ' n' → logprob: -5.428315162658691
    4. '(' → logprob: -8.178315162658691
    5. 'range' → logprob: -11.178315162658691
    6. ' (' → logprob: -11.553315162658691
    7. ' range' → logprob: -11.678315162658691
    8. ' in' → logprob: -12.303315162658691
    9. '	n' → logprob: -12.553315162658691
    10. '(range' → logprob: -13.053315162658691

Token 351: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03816749155521393
    2. '):
' → logprob: -3.2881674766540527
    3. ' ):' → logprob: -9.163167953491211
    4. '   ' → logprob: -11.913167953491211
    5. '       ' → logprob: -12.538167953491211
    6. ':' → logprob: -12.538167953491211
    7. ' ):
' → logprob: -12.663167953491211
    8. '):
' → logprob: -13.413167953491211
    9. ')' → logprob: -14.038167953491211
    10. ']:' → logprob: -14.788167953491211

Token 352: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00038705902989022434
    2. '<|end|>' → logprob: -8.500387191772461
    3. '<|end|>' → logprob: -9.750387191772461
    4. '	       ' → logprob: -10.625387191772461
    5. '
' → logprob: -10.750387191772461
    6. '            
' → logprob: -11.125387191772461
    7. ',' → logprob: -11.250387191772461
    8. '```' → logprob: -11.375387191772461
    9. ':
' → logprob: -11.500387191772461
    10. '   ' → logprob: -12.125387191772461

Token 353: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.04771283641457558
    2. 'num' → logprob: -3.547712802886963
    3. '           ' → logprob: -5.047712802886963
    4. 'number' → logprob: -5.047712802886963
    5. ' arr' → logprob: -6.047712802886963
    6. 'value' → logprob: -6.422712802886963
    7. 'val' → logprob: -7.922712802886963
    8. 'x' → logprob: -8.047713279724121
    9. ' number' → logprob: -9.297713279724121
    10. ' num' → logprob: -9.797713279724121

Token 354: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007501865038648248
    2. '.' → logprob: -7.8757500648498535
    3. '+=' → logprob: -8.750750541687012
    4. ' +=' → logprob: -9.750750541687012
    5. '=' → logprob: -10.000750541687012
    6. '.extend' → logprob: -10.000750541687012
    7. '.=' → logprob: -10.875750541687012
    8. 'append' → logprob: -11.000750541687012
    9. ' =' → logprob: -11.375750541687012
    10. ' .' → logprob: -12.375750541687012

Token 355: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00024715426843613386
    2. '(' → logprob: -9.00024700164795
    3. 'int' → logprob: -9.00024700164795
    4. ' int' → logprob: -15.75024700164795
    5. '   ' → logprob: -16.000247955322266
    6. ' (' → logprob: -16.125247955322266
    7. '(
' → logprob: -16.875247955322266
    8. '	int' → logprob: -17.750247955322266
    9. '<int' → logprob: -18.250247955322266
    10. '(in' → logprob: -18.375247955322266

Token 356: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -8.137130498653278e-05
    2. 'input' → logprob: -9.750081062316895
    3. '(' → logprob: -10.750081062316895
    4. ' input' → logprob: -14.500081062316895
    5. ' (' → logprob: -14.625081062316895
    6. '(
' → logprob: -14.750081062316895
    7. ')' → logprob: -16.37508201599121
    8. ',input' → logprob: -16.50008201599121
    9. ')(' → logprob: -17.25008201599121
    10. '(in' → logprob: -18.37508201599121

Token 357: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0011175924446433783
    2. '(lines' → logprob: -7.126117706298828
    3. '()' → logprob: -9.376117706298828
    4. 'Lines' → logprob: -10.251117706298828
    5. 'lines' → logprob: -10.251117706298828
    6. '())' → logprob: -10.251117706298828
    7. ')' → logprob: -10.376117706298828
    8. '().' → logprob: -10.626117706298828
    9. '(' → logprob: -11.626117706298828
    10. ' lines' → logprob: -11.876117706298828

Token 358: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0005556552205234766
    2. 'idx' → logprob: -7.500555515289307
    3. ' idx' → logprob: -13.250555992126465
    4. '(idx' → logprob: -14.250555992126465
    5. '	idx' → logprob: -15.750555992126465
    6. '   ' → logprob: -16.00055503845215
    7. '       ' → logprob: -17.00055503845215
    8. '[index' → logprob: -17.62555503845215
    9. '[' → logprob: -17.75055503845215
    10. '```' → logprob: -18.62555503845215

Token 359: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.31450697779655457
    2. ']))' → logprob: -1.314507007598877
    3. '.strip' → logprob: -7.439507007598877
    4. ']' → logprob: -7.564507007598877
    5. ']))
' → logprob: -9.314506530761719
    6. '])' → logprob: -10.689506530761719
    7. '])))' → logprob: -11.939506530761719
    8. ' ].' → logprob: -12.439506530761719
    9. '   ' → logprob: -12.564506530761719
    10. ']))

' → logprob: -13.439506530761719

Token 360: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.128163257315464e-07
    2. 'split' → logprob: -15.75
    3. '.strip' → logprob: -16.0
    4. ' strip' → logprob: -17.125
    5. 'rstrip' → logprob: -19.0
    6. 'trim' → logprob: -20.625
    7. '_strip' → logprob: -20.625
    8. 'idx' → logprob: -20.625
    9. 'pop' → logprob: -22.25
    10. '(strip' → logprob: -22.25

Token 361: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0002639582962729037
    2. '())' → logprob: -9.125264167785645
    3. '))' → logprob: -9.375264167785645
    4. '()))
' → logprob: -10.250264167785645
    5. '()' → logprob: -10.375264167785645
    6. '(' → logprob: -13.500264167785645
    7. '()));' → logprob: -13.750264167785645
    8. '()))

' → logprob: -14.625264167785645
    9. '())))' → logprob: -15.625264167785645
    10. '()))
' → logprob: -15.750264167785645

Token 362: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002798087371047586
    2. '       ' → logprob: -8.250279426574707
    3. '   ' → logprob: -12.000279426574707
    4. '	       ' → logprob: -12.125279426574707
    5. '	   ' → logprob: -12.375279426574707
    6. 'idx' → logprob: -14.125279426574707
    7. '		' → logprob: -14.125279426574707
    8. '    	   ' → logprob: -15.000279426574707
    9. '               ' → logprob: -15.125279426574707
    10. '		   ' → logprob: -15.625279426574707

Token 363: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0007679368136450648
    2. ' idx' → logprob: -7.750767707824707
    3. '           ' → logprob: -8.000767707824707
    4. '       ' → logprob: -13.750767707824707
    5. '	idx' → logprob: -14.500767707824707
    6. '   ' → logprob: -15.750767707824707
    7. 'index' → logprob: -15.750767707824707
    8. '_idx' → logprob: -16.125768661499023
    9. '[idx' → logprob: -17.250768661499023
    10. '(idx' → logprob: -18.375768661499023

Token 364: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00021676832693628967
    2. ' +=' → logprob: -8.500216484069824
    3. '+' → logprob: -11.250216484069824
    4. ']+=' → logprob: -15.250216484069824
    5. '=' → logprob: -17.25021743774414
    6. '++' → logprob: -17.75021743774414
    7. '```' → logprob: -18.62521743774414
    8. '+='' → logprob: -18.75021743774414
    9. '+="' → logprob: -18.87521743774414
    10. '   ' → logprob: -19.62521743774414

Token 365: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -19.500030517578125
    4. '   ' → logprob: -19.875030517578125
    5. '１' → logprob: -20.625030517578125
    6. '۱' → logprob: -21.375030517578125
    7. '0' → logprob: -22.125030517578125
    8. '       ' → logprob: -22.625030517578125
    9. '           ' → logprob: -22.750030517578125
    10. ' ' → logprob: -23.000030517578125

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -22.125
    4. '１' → logprob: -22.875
    5. '   ' → logprob: -23.25
    6. '۱' → logprob: -23.875
    7. '
' → logprob: -25.0
    8. '१' → logprob: -25.0
    9. '১' → logprob: -25.0625
    10. '0' → logprob: -25.125

Token 367: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05225034058094025
    2. '        
' → logprob: -3.802250385284424
    3. '
' → logprob: -3.927250385284424
    4. '<|end|>' → logprob: -5.552250385284424
    5. '    
' → logprob: -5.802250385284424
    6. '   ' → logprob: -6.552250385284424
    7. '  
' → logprob: -8.052249908447266
    8. '            
' → logprob: -9.677249908447266
    9. '        
        
' → logprob: -10.427249908447266
    10. 'print' → logprob: -10.927249908447266

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0210412610322237
    2. '   ' → logprob: -3.89604115486145
    3. 'print' → logprob: -7.771041393280029
    4. 'result' → logprob: -9.896040916442871
    5. ' print' → logprob: -11.021040916442871
    6. ' result' → logprob: -12.646040916442871
    7. '    
' → logprob: -12.896040916442871
    8. '        
' → logprob: -13.396040916442871
    9. '
' → logprob: -13.646040916442871
    10. 'results' → logprob: -13.646040916442871

Token 369: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47698286175727844
    2. 'result' → logprob: -0.976982831954956
    3. '       ' → logprob: -5.976983070373535
    4. 'res' → logprob: -8.351983070373535
    5. ' result' → logprob: -10.601983070373535
    6. ' print' → logprob: -10.601983070373535
    7. 'max' → logprob: -10.726983070373535
    8. '   ' → logprob: -10.726983070373535
    9. 'sum' → logprob: -11.101983070373535
    10. 'rés' → logprob: -11.976983070373535

Token 370: ' Calcul' (ID: 57243)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.47823384404182434
    2. 'print' → logprob: -0.978233814239502
    3. 'res' → logprob: -6.228233814239502
    4. ' result' → logprob: -6.728233814239502
    5. ' print' → logprob: -7.853233814239502
    6. 'rés' → logprob: -7.978233814239502
    7. 'max' → logprob: -9.60323429107666
    8. '       ' → logprob: -9.97823429107666
    9. 's' → logprob: -10.10323429107666
    10. '   ' → logprob: -10.22823429107666

Token 371: 'er' (ID: 259)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046099595725536346
    2. 'er' → logprob: -3.1710996627807617
    3. 'result' → logprob: -6.171099662780762
    4. 'print' → logprob: -8.171099662780762
    5. 'et' → logprob: -8.671099662780762
    6. ' de' → logprob: -8.796099662780762
    7. ' et' → logprob: -8.921099662780762
    8. ' result' → logprob: -9.046099662780762
    9. '_result' → logprob: -10.171099662780762
    10. ' =' → logprob: -10.171099662780762

Token 372: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.36224743723869324
    2. 'la' → logprob: -1.4872474670410156
    3. '       ' → logprob: -3.4872474670410156
    4. ' la' → logprob: -3.8622474670410156
    5. ' et' → logprob: -4.112247467041016
    6. 'print' → logprob: -5.237247467041016
    7. 'result' → logprob: -5.612247467041016
    8. 'le' → logprob: -7.987247467041016
    9. 'max' → logprob: -8.112247467041016
    10. 'and' → logprob: -8.612247467041016

Token 373: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.636475493200123e-05
    2. ' print' → logprob: -9.500076293945312
    3. '       ' → logprob: -13.500076293945312
    4. '   ' → logprob: -18.750076293945312
    5. '        
' → logprob: -18.875076293945312
    6. '```' → logprob: -19.375076293945312
    7. 'aff' → logprob: -19.625076293945312
    8. '#print' → logprob: -19.875076293945312
    9. 'im' → logprob: -20.500076293945312
    10. '
' → logprob: -20.750076293945312

Token 374: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3493621349334717
    2. '(max' → logprob: -1.8493621349334717
    3. '       ' → logprob: -2.5993621349334717
    4. 'la' → logprob: -3.2243621349334717
    5. 'print' → logprob: -4.474362373352051
    6. 'le' → logprob: -5.099362373352051
    7. ' la' → logprob: -5.974362373352051
    8. ' max' → logprob: -6.224362373352051
    9. '   ' → logprob: -6.724362373352051
    10. 'result' → logprob: -9.97436237335205

Token 375: ' somme' (ID: 64484)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012220130302011967
    2. 'max' → logprob: -7.251222133636475
    3. 'result' → logprob: -7.626222133636475
    4. ' print' → logprob: -11.251221656799316
    5. 's' → logprob: -12.376221656799316
    6. 'rés' → logprob: -12.751221656799316
    7. 'maximum' → logprob: -13.251221656799316
    8. 'sum' → logprob: -14.501221656799316
    9. 'res' → logprob: -14.501221656799316
    10. '   ' → logprob: -14.626221656799316

Token 376: ' maximale' (ID: 76380)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.321519672870636
    2. ' maximale' → logprob: -1.3215196132659912
    3. '_max' → logprob: -5.07151985168457
    4. 'maximum' → logprob: -7.07151985168457
    5. '(max' → logprob: -7.57151985168457
    6. '       ' → logprob: -8.19651985168457
    7. ' maximal' → logprob: -9.19651985168457
    8. '   ' → logprob: -9.82151985168457
    9. ' maximum' → logprob: -10.19651985168457
    10. ' max' → logprob: -10.44651985168457

Token 377: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3963238000869751
    2. 'print' → logprob: -1.146323800086975
    3. 'max' → logprob: -5.5213236808776855
    4. 'result' → logprob: -6.3963236808776855
    5. ' maximale' → logprob: -6.3963236808776855
    6. ' print' → logprob: -6.5213236808776855
    7. '(max' → logprob: -8.896324157714844
    8. 'de' → logprob: -9.021324157714844
    9. '   ' → logprob: -9.396324157714844
    10. '_max' → logprob: -9.646324157714844

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030505118891596794
    2. 'print' → logprob: -3.5305051803588867
    3. '   ' → logprob: -7.530505180358887
    4. ' print' → logprob: -8.905505180358887
    5. 'result' → logprob: -9.530505180358887
    6. 'max' → logprob: -12.905505180358887
    7. 'de' → logprob: -13.030505180358887
    8. ' de' → logprob: -13.655505180358887
    9. ' result' → logprob: -14.405505180358887
    10. '	print' → logprob: -14.655505180358887

Token 379: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001239156350493431
    2. ' print' → logprob: -7.37623929977417
    3. 'result' → logprob: -7.62623929977417
    4. '       ' → logprob: -9.001238822937012
    5. ' result' → logprob: -13.626238822937012
    6. '```' → logprob: -15.751238822937012
    7. '   ' → logprob: -15.876238822937012
    8. 'res' → logprob: -16.626239776611328
    9. '	print' → logprob: -18.001239776611328
    10. 'max' → logprob: -18.251239776611328

Token 380: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.000432695698691532
    2. '(' → logprob: -7.75043249130249
    3. 'max' → logprob: -13.250432968139648
    4. ' max' → logprob: -15.875432968139648
    5. ' (' → logprob: -17.37543296813965
    6. '=max' → logprob: -17.75043296813965
    7. '(
' → logprob: -18.25043296813965
    8. '(m' → logprob: -18.87543296813965
    9. ',max' → logprob: -18.87543296813965
    10. '((' → logprob: -19.75043296813965

Token 381: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.875
    3. '_max' → logprob: -18.125
    4. 'sum' → logprob: -18.5
    5. '_s' → logprob: -20.375
    6. ' sum' → logprob: -21.75
    7. ')_' → logprob: -21.875
    8. ')' → logprob: -22.0
    9. 'Sum' → logprob: -22.0
    10. '_sub' → logprob: -22.125

Token 382: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -3.128163257315464e-07
    2. 'sub' → logprob: -15.5
    3. '_s' → logprob: -17.75
    4. '_' → logprob: -17.875
    5. '_sum' → logprob: -18.5
    6. '_SUB' → logprob: -20.125
    7. '_
' → logprob: -21.375
    8. 's' → logprob: -21.625
    9. 'Sub' → logprob: -21.625
    10. '_sequence' → logprob: -21.75

Token 383: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0018965097842738032
    2. 'quence' → logprob: -6.501896381378174
    3. 'sub' → logprob: -8.251896858215332
    4. '_sub' → logprob: -9.126896858215332
    5. '_sequence' → logprob: -11.001896858215332
    6. 'e' → logprob: -12.876896858215332
    7. 'se' → logprob: -12.876896858215332
    8. '(sequence' → logprob: -13.501896858215332
    9. 'ub' → logprob: -14.501896858215332
    10. 'sequ' → logprob: -15.376896858215332

Token 384: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.875000953674316
    3. ' (' → logprob: -16.5
    4. '(
' → logprob: -18.125
    5. '[arr' → logprob: -18.25
    6. ')' → logprob: -18.5
    7. 'arr' → logprob: -18.875
    8. '<arr' → logprob: -20.125
    9. ')(' → logprob: -20.5
    10. '(ans' → logprob: -21.0

Token 385: '))

' (ID: 9746)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006722823018208146
    2. ')' → logprob: -7.750672340393066
    3. '()' → logprob: -8.375672340393066
    4. '()))' → logprob: -12.625672340393066
    5. ' ())' → logprob: -12.750672340393066
    6. '(' → logprob: -12.875672340393066
    7. '())
' → logprob: -13.500672340393066
    8. '))' → logprob: -14.250672340393066
    9. '());' → logprob: -17.12567138671875
    10. '(),' → logprob: -17.25067138671875

Token 386: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00016229959146585315
    2. '
' → logprob: -9.125162124633789
    3. '```' → logprob: -10.250162124633789
    4. ' if' → logprob: -11.750162124633789
    5. '<|end|>' → logprob: -11.875162124633789
    6. '#' → logprob: -13.500162124633789
    7. '\n' → logprob: -14.500162124633789
    8. '  
' → logprob: -14.750162124633789
    9. '``' → logprob: -15.625162124633789
    10. '\
' → logprob: -16.25016212463379

Token 387: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07678253203630447
    2. '__' → logprob: -2.701782464981079
    3. '_' → logprob: -5.076782703399658
    4. '_name' → logprob: -7.951782703399658
    5. '___' → logprob: -9.3267822265625
    6. ' ' → logprob: -9.8267822265625
    7. ' _' → logprob: -9.8267822265625
    8. ' ___' → logprob: -11.8267822265625
    9. ' ' → logprob: -11.9517822265625
    10. '_space' → logprob: -12.0767822265625

Token 388: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06412357836961746
    2. ' ==' → logprob: -3.4391236305236816
    3. '==' → logprob: -3.6891236305236816
    4. '__.__' → logprob: -6.064123630523682
    5. '.__' → logprob: -7.064123630523682
    6. '=="' → logprob: -7.314123630523682
    7. '[' → logprob: -8.189123153686523
    8. 'name' → logprob: -8.439123153686523
    9. ' __' → logprob: -8.939123153686523
    10. '__["' → logprob: -9.314123153686523

Token 389: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00020711649267468601
    2. '__.__' → logprob: -8.50020694732666
    3. '__.' → logprob: -13.12520694732666
    4. '==' → logprob: -14.37520694732666
    5. '__["' → logprob: -15.12520694732666
    6. '__[' → logprob: -15.25020694732666
    7. '__('' → logprob: -15.62520694732666
    8. '__
' → logprob: -16.375207901000977
    9. '___' → logprob: -16.750207901000977
    10. '____' → logprob: -16.875207901000977

Token 390: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0029205416794866323
    2. '==' → logprob: -6.252920627593994
    3. ' ==' → logprob: -7.127920627593994
    4. '=="' → logprob: -8.627920150756836
    5. '___' → logprob: -12.877920150756836
    6. '_' → logprob: -12.877920150756836
    7. '=='' → logprob: -13.002920150756836
    8. '__.__' → logprob: -13.377920150756836
    9. '=' → logprob: -15.377920150756836
    10. '____' → logprob: -15.877920150756836

Token 391: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04860054701566696
    2. ''' → logprob: -3.048600435256958
    3. ' "__' → logprob: -11.423600196838379
    4. '__' → logprob: -13.298600196838379
    5. ' '__' → logprob: -14.548600196838379
    6. ''"' → logprob: -16.673601150512695
    7. '"'' → logprob: -17.673601150512695
    8. '"user' → logprob: -18.048601150512695
    9. '"name' → logprob: -18.173601150512695
    10. '"_' → logprob: -18.173601150512695

Token 392: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002043748099822551
    2. '__' → logprob: -8.500204086303711
    3. 'name' → logprob: -15.250204086303711
    4. 'built' → logprob: -15.625204086303711
    5. 'm' → logprob: -16.00020408630371
    6. '_main' → logprob: -16.25020408630371
    7. 'py' → logprob: -16.25020408630371
    8. ' main' → logprob: -16.37520408630371
    9. 'python' → logprob: -18.00020408630371
    10. '__":
' → logprob: -18.00020408630371

Token 393: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38688504695892334
    2. '__":
' → logprob: -1.1368850469589233
    3. '__':
' → logprob: -12.136884689331055
    4. '__:' → logprob: -12.636884689331055
    5. '__["' → logprob: -12.886884689331055
    6. '__.' → logprob: -13.511884689331055
    7. '__",' → logprob: -14.136884689331055
    8. '__.__' → logprob: -14.886884689331055
    9. '_' → logprob: -15.636884689331055
    10. '__("' → logprob: -15.761884689331055

Token 394: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04859543219208717
    2. ' main' → logprob: -3.048595428466797
    3. '	main' → logprob: -12.423595428466797
    4. '__' → logprob: -12.673595428466797
    5. '   ' → logprob: -13.923595428466797
    6. '_main' → logprob: -17.548595428466797
    7. ' __' → logprob: -18.798595428466797
    8. '(main' → logprob: -19.423595428466797
    9. ' ' → logprob: -19.923595428466797
    10. '.main' → logprob: -20.423595428466797

Token 395: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.676292231422849e-05
    2. ' main' → logprob: -11.000017166137695
    3. '	main' → logprob: -18.000017166137695
    4. '   ' → logprob: -18.125017166137695
    5. ' ' → logprob: -23.750017166137695
    6. '.main' → logprob: -23.750017166137695
    7. '_main' → logprob: -23.750017166137695
    8. '  ' → logprob: -24.750017166137695
    9. '(main' → logprob: -25.000017166137695
    10. 'Main' → logprob: -25.500017166137695

Token 396: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 394
Tokens correctement prédits (1ère position, stricte): 183
Tokens correctement prédits (1ère position, avec adaptation): 198
Tokens correctement prédits (top 10): 313
Précision stricte (1ère position): 46.45%
Précision adaptée (1ère position): 50.25%
Précision (top 10): 79.44%
================================================================================
