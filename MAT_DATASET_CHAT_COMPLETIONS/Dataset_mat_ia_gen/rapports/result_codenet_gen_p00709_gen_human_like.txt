================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def can_place_carpet(floor, x, y, size, W, H):
    if x + size > W or y + size > H:
        return False
    for i in range(y, y + size):
        for j in range(x, x + size):
            if floor[i][j] == 0:
                return False
    return True

def place_carpet(floor, x, y, size, val):
    for i in range(y, y + size):
        for j in range(x, x + size):
            floor[i][j] = val

def find_first_scratched(floor, W, H):
    for y in range(H):
        for x in range(W):
            if floor[y][x] == 1:
                return x, y
    return -1, -1

def backtrack(floor, W, H, count, memo):
    key = tuple(tuple(row) for row in floor)
    if key in memo:
        if memo[key] <= count:
            return float('inf')
    memo[key] = count
    x, y = find_first_scratched(floor, W, H)
    if x == -1 and y == -1:
        return count
    res = float('inf')
    max_size = min(W - x, H - y)
    # Try placing largest possible carpet first to reduce carpets count
    for size in reversed(range(1, max_size + 1)):
        if can_place_carpet(floor, x, y, size, W, H):
            place_carpet(floor, x, y, size, 0)
            res = min(res, backtrack(floor, W, H, count + 1, memo))
            place_carpet(floor, x, y, size, 1)
    return res

def main():
    while True:
        W, H = map(int, input().split())
        if W == 0 and H == 0:
            break
        floor = [list(map(int, input().split())) for _ in range(H)]
        result = backtrack(floor, W, H, 0, dict())
        print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' can' (ID: 665)
  → Token d'amorce (pas de prédiction)

Token 2: '_place' (ID: 81501)
  → Token d'amorce (pas de prédiction)

Token 3: '_car' (ID: 62991)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002819612855091691
    2. '(' → logprob: -6.377819538116455
    3. '_token' → logprob: -7.627819538116455
    4. '_space' → logprob: -8.377820014953613
    5. ' _' → logprob: -9.252820014953613
    6. '_place' → logprob: -9.502820014953613
    7. ' (' → logprob: -10.252820014953613
    8. '_(' → logprob: -10.502820014953613
    9. '```' → logprob: -10.502820014953613
    10. '_parent' → logprob: -10.752820014953613

Token 4: 'pet' (ID: 9456)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23290501534938812
    2. '_:' → logprob: -2.1079049110412598
    3. '(' → logprob: -2.6079049110412598
    4. '():' → logprob: -5.23290491104126
    5. '```' → logprob: -5.85790491104126
    6. ':' → logprob: -6.85790491104126
    7. '(:' → logprob: -7.35790491104126
    8. '(_:' → logprob: -7.48290491104126
    9. '):' → logprob: -8.107905387878418
    10. '(_' → logprob: -8.107905387878418

Token 5: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20959530770778656
    2. '_' → logprob: -2.084595203399658
    3. '_:' → logprob: -2.959595203399658
    4. '(:' → logprob: -4.834595203399658
    5. '():' → logprob: -5.959595203399658
    6. '(_:' → logprob: -7.084595203399658
    7. ':' → logprob: -7.334595203399658
    8. '(":' → logprob: -8.834595680236816
    9. '_(' → logprob: -8.834595680236816
    10. '```' → logprob: -9.459595680236816

Token 6: 'loor' (ID: 5494)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.522335410118103
    2. 'u' → logprob: -1.022335410118103
    3. 'a' → logprob: -3.2723355293273926
    4. 'e' → logprob: -6.022335529327393
    5. '(u' → logprob: -6.147335529327393
    6. 'l' → logprob: -6.897335529327393
    7. '_' → logprob: -7.022335529327393
    8. 'unction' → logprob: -7.522335529327393
    9. '(a' → logprob: -7.522335529327393
    10. 'r' → logprob: -8.022335052490234

Token 7: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1562058925628662
    2. ',' → logprob: -2.406205892562866
    3. ')' → logprob: -3.406205892562866
    4. '_size' → logprob: -5.156206130981445
    5. '_tiles' → logprob: -5.531206130981445
    6. '[' → logprob: -5.656206130981445
    7. '_floor' → logprob: -6.156206130981445
    8. '_' → logprob: -7.156206130981445
    9. '_surface' → logprob: -7.156206130981445
    10. '_length' → logprob: -7.281206130981445

Token 8: ' x' (ID: 1215)
  Prédit: ' carpet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carpet' → logprob: -1.4227032661437988
    2. ' width' → logprob: -1.5477032661437988
    3. ' rows' → logprob: -2.172703266143799
    4. ' length' → logprob: -2.422703266143799
    5. ' room' → logprob: -2.797703266143799
    6. ' x' → logprob: -2.922703266143799
    7. 'width' → logprob: -3.547703266143799
    8. 'rows' → logprob: -3.672703266143799
    9. 'car' → logprob: -3.797703266143799
    10. 'room' → logprob: -3.797703266143799

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023298001906368881
    2. ',y' → logprob: -8.750232696533203
    3. '):' → logprob: -9.875232696533203
    4. ')' → logprob: -11.750232696533203
    5. ' ,' → logprob: -11.875232696533203
    6. '[' → logprob: -14.250232696533203
    7. ',n' → logprob: -14.250232696533203
    8. ',
' → logprob: -14.500232696533203
    9. ',p' → logprob: -14.500232696533203
    10. '_,' → logprob: -14.500232696533203

Token 10: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759537816047668
    2. ' y' → logprob: -0.8259537816047668
    3. ' ' → logprob: -11.700953483581543
    4. ',y' → logprob: -13.325953483581543
    5. '	y' → logprob: -13.450953483581543
    6. ',' → logprob: -13.450953483581543
    7. ')' → logprob: -14.575953483581543
    8. ' ' → logprob: -15.325953483581543
    9. '<|end|>' → logprob: -15.450953483581543
    10. ')y' → logprob: -15.825953483581543

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14374546706676483
    2. '):' → logprob: -2.0187454223632812
    3. ')' → logprob: -6.893745422363281
    4. '```' → logprob: -10.768745422363281
    5. ' ,' → logprob: -11.768745422363281
    6. ':' → logprob: -12.393745422363281
    7. '):
' → logprob: -12.643745422363281
    8. ''):' → logprob: -12.893745422363281
    9. '   ' → logprob: -13.143745422363281
    10. ',size' → logprob: -13.268745422363281

Token 12: ' size' (ID: 2349)
  Prédit: ' width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.772459864616394
    2. ' w' → logprob: -0.897459864616394
    3. 'width' → logprob: -3.1474599838256836
    4. 'w' → logprob: -3.7724599838256836
    5. ' length' → logprob: -3.8974599838256836
    6. ' carpet' → logprob: -4.022459983825684
    7. ' size' → logprob: -4.397459983825684
    8. ' direction' → logprob: -6.022459983825684
    9. 'length' → logprob: -6.272459983825684
    10. ' n' → logprob: -6.647459983825684

Token 13: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008772927336394787
    2. ')' → logprob: -4.758772850036621
    3. ',' → logprob: -9.008772850036621
    4. ':' → logprob: -10.758772850036621
    5. '):
' → logprob: -12.008772850036621
    6. ''):' → logprob: -12.883772850036621
    7. ' ):' → logprob: -13.133772850036621
    8. '_' → logprob: -13.633772850036621
    9. '   ' → logprob: -14.008772850036621
    10. '```' → logprob: -15.008772850036621

Token 14: ' W' (ID: 486)
  Prédit: ' direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.5240792632102966
    2. ' orientation' → logprob: -1.8990793228149414
    3. 'direction' → logprob: -2.6490793228149414
    4. ' carpet' → logprob: -3.5240793228149414
    5. ')' → logprob: -4.024079322814941
    6. ' color' → logprob: -4.149079322814941
    7. ' floor' → logprob: -4.274079322814941
    8. ' horizontal' → logprob: -4.274079322814941
    9. 'orientation' → logprob: -4.524079322814941
    10. 'color' → logprob: -4.649079322814941

Token 15: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02895001508295536
    2. ')' → logprob: -4.028950214385986
    3. ',' → logprob: -4.653950214385986
    4. '_' → logprob: -7.028950214385986
    5. ''):' → logprob: -9.653949737548828
    6. '=' → logprob: -10.403949737548828
    7. ':' → logprob: -10.403949737548828
    8. ' ):' → logprob: -10.528949737548828
    9. '[' → logprob: -10.778949737548828
    10. '```' → logprob: -11.153949737548828

Token 16: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.429686963558197
    2. 'H' → logprob: -1.0546870231628418
    3. ')' → logprob: -7.179687023162842
    4. ' ' → logprob: -9.429686546325684
    5. ' )' → logprob: -10.429686546325684
    6. '```' → logprob: -11.179686546325684
    7. 'space' → logprob: -11.929686546325684
    8. ' space' → logprob: -12.117186546325684
    9. 'D' → logprob: -12.179686546325684
    10. ' D' → logprob: -12.179686546325684

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018947218777611852
    2. ')' → logprob: -6.376894950866699
    3. ':' → logprob: -9.0018949508667
    4. ''):' → logprob: -10.2518949508667
    5. '):
' → logprob: -11.1268949508667
    6. ',' → logprob: -11.7518949508667
    7. '   ' → logprob: -12.8768949508667
    8. '```' → logprob: -13.1268949508667
    9. '`:' → logprob: -13.2518949508667
    10. '"):' → logprob: -13.3768949508667

Token 18: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016881227493286133
    2. '):' → logprob: -4.141880989074707
    3. '   ' → logprob: -8.141880989074707
    4. ')' → logprob: -8.516880989074707
    5. '':' → logprob: -9.516880989074707
    6. ':
' → logprob: -9.516880989074707
    7. '():' → logprob: -10.141880989074707
    8. ' :' → logprob: -10.141880989074707
    9. ''' → logprob: -11.266880989074707
    10. '":' → logprob: -11.266880989074707

Token 19: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048403386026620865
    2. '   ' → logprob: -3.54840350151062
    3. ''' → logprob: -5.298403263092041
    4. ' :' → logprob: -5.798403263092041
    5. ' ' → logprob: -5.923403263092041
    6. '"' → logprob: -6.423403263092041
    7. ')' → logprob: -6.673403263092041
    8. '):' → logprob: -6.673403263092041
    9. '[' → logprob: -6.798403263092041
    10. '```' → logprob: -7.798403263092041

Token 20: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06937270611524582
    2. 'x' → logprob: -3.5693726539611816
    3. ' floor' → logprob: -4.069372653961182
    4. ' ' → logprob: -4.694372653961182
    5. ' not' → logprob: -4.944372653961182
    6. ' (' → logprob: -5.694372653961182
    7. 'floor' → logprob: -6.944372653961182
    8. ' y' → logprob: -7.194372653961182
    9. ' ' → logprob: -9.31937313079834
    10. ' W' → logprob: -9.81937313079834

Token 21: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1489134281873703
    2. '+' → logprob: -2.2739133834838867
    3. ' <' → logprob: -3.6489133834838867
    4. ' >=' → logprob: -4.773913383483887
    5. ' ' → logprob: -7.773913383483887
    6. ' >' → logprob: -8.148913383483887
    7. ' ==' → logprob: -9.023913383483887
    8. '   ' → logprob: -9.898913383483887
    9. '<' → logprob: -10.273913383483887
    10. '<|end|>' → logprob: -10.523913383483887

Token 22: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.6931576132774353
    2. 'size' → logprob: -0.6931576132774353
    3. '1' → logprob: -12.318157196044922
    4. ' ' → logprob: -13.193157196044922
    5. '```' → logprob: -13.318157196044922
    6. '   ' → logprob: -14.193157196044922
    7. '(size' → logprob: -14.943157196044922
    8. '<size' → logprob: -15.068157196044922
    9. '	size' → logprob: -15.318157196044922
    10. '[size' → logprob: -15.568157196044922

Token 23: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.030519453808665276
    2. '>' → logprob: -3.530519485473633
    3. ' <=' → logprob: -7.280519485473633
    4. ' ' → logprob: -10.030519485473633
    5. '<=' → logprob: -11.655519485473633
    6. '">' → logprob: -11.655519485473633
    7. '```' → logprob: -11.780519485473633
    8. '   ' → logprob: -13.030519485473633
    9. ')' → logprob: -13.280519485473633
    10. ' >=' → logprob: -13.405519485473633

Token 24: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.47408413887023926
    2. 'W' → logprob: -0.9740841388702393
    3. ' ' → logprob: -12.22408390045166
    4. '	W' → logprob: -13.59908390045166
    5. 'H' → logprob: -14.47408390045166
    6. ' ' → logprob: -16.099084854125977
    7. '   ' → logprob: -16.349084854125977
    8. ' H' → logprob: -16.599084854125977
    9. '  ' → logprob: -16.974084854125977
    10. '`' → logprob: -17.349084854125977

Token 25: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.003994461614638567
    2. ':' → logprob: -5.753994464874268
    3. ' ' → logprob: -7.878994464874268
    4. ')' → logprob: -8.37899398803711
    5. '   ' → logprob: -9.62899398803711
    6. 'or' → logprob: -9.75399398803711
    7. ':return' → logprob: -10.75399398803711
    8. ' :' → logprob: -11.25399398803711
    9. ' and' → logprob: -11.50399398803711
    10. '):' → logprob: -11.50399398803711

Token 26: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.00038443657103925943
    2. 'y' → logprob: -7.875384330749512
    3. ' ' → logprob: -12.625384330749512
    4. '    ' → logprob: -15.125384330749512
    5. '   ' → logprob: -15.250384330749512
    6. ' ' → logprob: -15.625384330749512
    7. '	y' → logprob: -16.000385284423828
    8. '  ' → logprob: -16.750385284423828
    9. '```' → logprob: -17.750385284423828
    10. '`' → logprob: -18.000385284423828

Token 27: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03831160068511963
    2. '+' → logprob: -3.28831148147583
    3. ' >=' → logprob: -9.163311958312988
    4. ' >' → logprob: -9.538311958312988
    5. '>' → logprob: -9.913311958312988
    6. ' ' → logprob: -10.788311958312988
    7. '<|end|>' → logprob: -11.288311958312988
    8. '   ' → logprob: -12.538311958312988
    9. '>=' → logprob: -12.663311958312988
    10. ' <' → logprob: -13.913311958312988

Token 28: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.033648353070020676
    2. 'size' → logprob: -3.4086482524871826
    3. ' ' → logprob: -13.658648490905762
    4. '	size' → logprob: -14.533648490905762
    5. '<size' → logprob: -15.533648490905762
    6. '(size' → logprob: -15.908648490905762
    7. '_size' → logprob: -16.158647537231445
    8. 's' → logprob: -16.283647537231445
    9. '[size' → logprob: -16.283647537231445
    10. 'Size' → logprob: -16.533647537231445

Token 29: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.003767658956348896
    2. '>' → logprob: -5.628767490386963
    3. ' ' → logprob: -8.878767967224121
    4. '<|end|>' → logprob: -10.753767967224121
    5. '<|end|>' → logprob: -13.753767967224121
    6. ' >=' → logprob: -13.753767967224121
    7. ' ' → logprob: -14.128767967224121
    8. '">' → logprob: -14.378767967224121
    9. ')' → logprob: -14.503767967224121
    10. '```' → logprob: -14.628767967224121

Token 30: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.47408363223075867
    2. ' H' → logprob: -0.974083662033081
    3. '   ' → logprob: -12.84908390045166
    4. ' ' → logprob: -12.84908390045166
    5. '<|end|>' → logprob: -14.72408390045166
    6. '	H' → logprob: -14.97408390045166
    7. '<H' → logprob: -16.411582946777344
    8. '  ' → logprob: -16.536582946777344
    9. ' ' → logprob: -16.599082946777344
    10. ',' → logprob: -16.911582946777344

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009492144454270601
    2. ':return' → logprob: -7.125949382781982
    3. '):' → logprob: -9.875948905944824
    4. '   ' → logprob: -10.125948905944824
    5. ' :' → logprob: -10.375948905944824
    6. ':
' → logprob: -11.500948905944824
    7. ' or' → logprob: -12.250948905944824
    8. '       ' → logprob: -12.625948905944824
    9. ':**' → logprob: -13.250948905944824
    10. ')' → logprob: -15.125948905944824

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05013325810432434
    2. '    ' → logprob: -3.550133228302002
    3. '   ' → logprob: -5.300133228302002
    4. ' ' → logprob: -5.800133228302002
    5. '\n' → logprob: -6.300133228302002
    6. ':' → logprob: -6.425133228302002
    7. ' return' → logprob: -6.425133228302002
    8. '\' → logprob: -6.675133228302002
    9. ' 
' → logprob: -6.800133228302002
    10. ':return' → logprob: -7.175133228302002

Token 33: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3534083068370819
    2. ' return' → logprob: -1.7284083366394043
    3. ' 
' → logprob: -2.9784083366394043
    4. '    ' → logprob: -3.8534083366394043
    5. ' ' → logprob: -3.9784083366394043
    6. '\n' → logprob: -4.603408336639404
    7. ' False' → logprob: -5.103408336639404
    8. 'return' (adapté à ' return') → logprob: -5.728408336639404
    9. '   ' → logprob: -5.978408336639404
    10. '\' → logprob: -6.603408336639404

Token 34: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.0023343784268945456
    2. 'False' → logprob: -6.2523345947265625
    3. ' None' → logprob: -7.8773345947265625
    4. ' True' → logprob: -10.752334594726562
    5. ' ' → logprob: -12.377334594726562
    6. 'None' → logprob: -14.127334594726562
    7. ' false' → logprob: -17.377334594726562
    8. 'True' → logprob: -17.502334594726562
    9. '=False' → logprob: -17.502334594726562
    10. '(False' → logprob: -17.502334594726562

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20344707369804382
    2. '\n' → logprob: -1.9534471035003662
    3. '    
' → logprob: -3.703447103500366
    4. '
' → logprob: -4.953446865081787
    5. '\' → logprob: -5.453446865081787
    6. '  
' → logprob: -6.453446865081787
    7. ' 
' → logprob: -6.953446865081787
    8. '   
' → logprob: -7.203446865081787
    9. '    ' → logprob: -7.828446865081787
    10. '```' → logprob: -7.953446865081787

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7881432175636292
    2. ':' → logprob: -1.4131431579589844
    3. '\n' → logprob: -1.5381431579589844
    4. '\' → logprob: -3.4131431579589844
    5. ':
' → logprob: -4.288143157958984
    6. '    
' → logprob: -4.788143157958984
    7. '
' → logprob: -5.163143157958984
    8. ':return' → logprob: -5.413143157958984
    9. ')' → logprob: -5.788143157958984
    10. ' ' → logprob: -5.788143157958984

Token 37: ' for' (ID: 395)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2748396098613739
    2. ':' → logprob: -2.5248396396636963
    3. '   ' → logprob: -2.6498396396636963
    4. '\' → logprob: -3.1498396396636963
    5. '
' → logprob: -4.399839401245117
    6. '    
' → logprob: -5.149839401245117
    7. ' 
' → logprob: -5.274839401245117
    8. '  
' → logprob: -5.524839401245117
    9. ':
' → logprob: -5.899839401245117
    10. '[' → logprob: -5.899839401245117

Token 38: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.053707342594861984
    2. 'i' → logprob: -3.6787073612213135
    3. ' ' → logprob: -4.178707122802734
    4. ' dy' → logprob: -5.553707122802734
    5. ' row' → logprob: -5.553707122802734
    6. ' _' → logprob: -6.303707122802734
    7. ' j' → logprob: -7.928707122802734
    8. ' dx' → logprob: -7.928707122802734
    9. 'row' → logprob: -8.053707122802734
    10. ' r' → logprob: -8.053707122802734

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014385618269443512
    2. 'in' → logprob: -4.26438570022583
    3. ' ' → logprob: -9.014385223388672
    4. '<|end|>' → logprob: -10.264385223388672
    5. '   ' → logprob: -10.389385223388672
    6. '    ' → logprob: -11.764385223388672
    7. '	in' → logprob: -12.514385223388672
    8. '  ' → logprob: -12.514385223388672
    9. '```' → logprob: -12.639385223388672
    10. '<|end|>' → logprob: -13.326885223388672

Token 40: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029754191637039185
    2. 'range' → logprob: -3.529754161834717
    3. ' xrange' → logprob: -13.154754638671875
    4. '	range' → logprob: -13.654754638671875
    5. '(range' → logprob: -15.404754638671875
    6. '```' → logprob: -16.279754638671875
    7. '_range' → logprob: -16.654754638671875
    8. '   ' → logprob: -16.654754638671875
    9. ' ' → logprob: -16.904754638671875
    10. '.range' → logprob: -16.904754638671875

Token 41: '(y' (ID: 14684)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.007932149805128574
    2. '(' → logprob: -5.132932186126709
    3. '(x' → logprob: -6.382932186126709
    4. ' (' → logprob: -8.63293170928955
    5. '(s' → logprob: -9.88293170928955
    6. ' size' → logprob: -10.13293170928955
    7. '(y' → logprob: -10.25793170928955
    8. 'size' → logprob: -13.13293170928955
    9. '(len' → logprob: -13.75793170928955
    10. '(n' → logprob: -13.88293170928955

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041463072411715984
    2. ' ,' → logprob: -5.504146099090576
    3. '   ' → logprob: -10.629146575927734
    4. ',y' → logprob: -11.379146575927734
    5. ',size' → logprob: -11.504146575927734
    6. ' ' → logprob: -12.004146575927734
    7. ',len' → logprob: -13.129146575927734
    8. '       ' → logprob: -13.379146575927734
    9. '<|end|>' → logprob: -13.629146575927734
    10. ',
' → logprob: -13.629146575927734

Token 43: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16023336350917816
    2. ' y' → logprob: -1.9102333784103394
    3. '   ' → logprob: -12.535233497619629
    4. '    ' → logprob: -12.910233497619629
    5. '	y' → logprob: -13.785233497619629
    6. ' ' → logprob: -14.035233497619629
    7. '‘y' → logprob: -14.410233497619629
    8. ')y' → logprob: -14.785233497619629
    9. '```' → logprob: -16.160232543945312
    10. ''y' → logprob: -16.535232543945312

Token 44: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3484664559364319
    2. ' +' → logprob: -1.223466396331787
    3. ' ' → logprob: -11.723466873168945
    4. ')' → logprob: -11.723466873168945
    5. '<|end|>' → logprob: -12.848466873168945
    6. '   ' → logprob: -14.348466873168945
    7. '<|end|>' → logprob: -14.848466873168945
    8. '<size' → logprob: -14.848466873168945
    9. ' +
' → logprob: -15.723466873168945
    10. ' ' → logprob: -15.723466873168945

Token 45: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0036003058776259422
    2. ' size' → logprob: -5.628600120544434
    3. ' ' → logprob: -15.503600120544434
    4. '	size' → logprob: -17.37860107421875
    5. '(size' → logprob: -17.37860107421875
    6. '[size' → logprob: -17.50360107421875
    7. '<|end|>' → logprob: -17.62860107421875
    8. '_size' → logprob: -17.75360107421875
    9. 'space' → logprob: -18.00360107421875
    10. 'sizei' → logprob: -18.12860107421875

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008106979075819254
    2. ':' → logprob: -7.625810623168945
    3. '):
' → logprob: -8.500810623168945
    4. ' ):' → logprob: -9.500810623168945
    5. '   ' → logprob: -10.875810623168945
    6. ')' → logprob: -11.500810623168945
    7. '<|end|>' → logprob: -12.125810623168945
    8. '**' → logprob: -13.250810623168945
    9. ' ' → logprob: -13.625810623168945
    10. '       ' → logprob: -14.125810623168945

Token 47: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.601523756980896
    2. '<|end|>' → logprob: -1.226523756980896
    3. '       ' → logprob: -2.1015238761901855
    4. '   ' → logprob: -3.8515238761901855
    5. ' ' → logprob: -4.8515238761901855
    6. '<|end|>' → logprob: -5.9765238761901855
    7. '    ' → logprob: -6.6015238761901855
    8. ' :' → logprob: -6.8515238761901855
    9. ')' → logprob: -7.7265238761901855
    10. '  ' → logprob: -8.101523399353027

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.046385060995817184
    2. 'for' (adapté à ' for') → logprob: -3.2963850498199463
    3. '<|end|>' → logprob: -6.171385288238525
    4. '   ' → logprob: -6.421385288238525
    5. ' if' → logprob: -6.546385288238525
    6. ' ' → logprob: -6.546385288238525
    7. '    ' → logprob: -6.671385288238525
    8. 'if' → logprob: -8.796384811401367
    9. '       ' → logprob: -9.296384811401367
    10. '```' → logprob: -9.796384811401367

Token 49: ' j' (ID: 441)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.018514178693294525
    2. 'x' → logprob: -4.018514156341553
    3. ' range' → logprob: -8.518514633178711
    4. ' xrange' → logprob: -9.768514633178711
    5. 'range' → logprob: -10.018514633178711
    6. ' floor' → logprob: -10.393514633178711
    7. ' ' → logprob: -11.518514633178711
    8. 'floor' → logprob: -12.268514633178711
    9. '    ' → logprob: -12.643514633178711
    10. ' in' → logprob: -12.768514633178711

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002592065604403615
    2. 'in' → logprob: -6.002592086791992
    3. ' ' → logprob: -9.752592086791992
    4. '<|end|>' → logprob: -9.877592086791992
    5. '    ' → logprob: -12.752592086791992
    6. '<|end|>' → logprob: -14.377592086791992
    7. '	in' → logprob: -14.502592086791992
    8. '   ' → logprob: -14.627592086791992
    9. '  ' → logprob: -14.877592086791992
    10. '```' → logprob: -15.252592086791992

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5785410404205322
    2. ' range' → logprob: -0.8285410404205322
    3. '(range' → logprob: -6.078540802001953
    4. 'x' → logprob: -9.078540802001953
    5. ' x' → logprob: -9.578540802001953
    6. ' xrange' → logprob: -9.578540802001953
    7. '(x' → logprob: -9.953540802001953
    8. ' (' → logprob: -13.078540802001953
    9. '	range' → logprob: -13.453540802001953
    10. ' ' → logprob: -14.078540802001953

Token 52: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.009110488928854465
    2. '(' → logprob: -4.759110450744629
    3. ' (' → logprob: -7.634110450744629
    4. ',' → logprob: -12.759110450744629
    5. '(i' → logprob: -12.884110450744629
    6. '(j' → logprob: -13.384110450744629
    7. ')' → logprob: -13.384110450744629
    8. '(y' → logprob: -13.759110450744629
    9. 'x' → logprob: -13.884110450744629
    10. ' x' → logprob: -14.384110450744629

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006466718041338027
    2. ' ,' → logprob: -7.375646591186523
    3. ',j' → logprob: -12.125646591186523
    4. '+' → logprob: -12.250646591186523
    5. ',x' → logprob: -12.750646591186523
    6. ',y' → logprob: -13.250646591186523
    7. '   ' → logprob: -13.375646591186523
    8. '‌,' → logprob: -14.625646591186523
    9. '```' → logprob: -14.750646591186523
    10. ',size' → logprob: -15.125646591186523

Token 54: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011727249948307872
    2. ' x' → logprob: -7.0011725425720215
    3. 'j' → logprob: -8.75117301940918
    4. 'i' → logprob: -9.50117301940918
    5. 'y' → logprob: -10.87617301940918
    6. ')' → logprob: -12.37617301940918
    7. 'size' → logprob: -13.25117301940918
    8. ')x' → logprob: -14.37617301940918
    9. ' ' → logprob: -14.75117301940918
    10. '   ' → logprob: -14.87617301940918

Token 55: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12079522013664246
    2. ' +' → logprob: -2.495795249938965
    3. ',' → logprob: -3.495795249938965
    4. ' ,' → logprob: -7.245795249938965
    5. '+,' → logprob: -8.870795249938965
    6. ' ' → logprob: -9.370795249938965
    7. ')' → logprob: -10.370795249938965
    8. ',size' → logprob: -10.995795249938965
    9. '-' → logprob: -12.120795249938965
    10. '   ' → logprob: -12.370795249938965

Token 56: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0019391077803447843
    2. ' size' → logprob: -6.251939296722412
    3. ')' → logprob: -12.501938819885254
    4. 's' → logprob: -13.251938819885254
    5. ' ' → logprob: -13.501938819885254
    6. '   ' → logprob: -14.001938819885254
    7. '[size' → logprob: -14.501938819885254
    8. '1' → logprob: -14.876938819885254
    9. '```' → logprob: -14.876938819885254
    10. 'siz' → logprob: -15.751938819885254

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003574649803340435
    2. ' ):' → logprob: -6.128574848175049
    3. ':' → logprob: -7.378574848175049
    4. '):
' → logprob: -7.628574848175049
    5. '       ' → logprob: -8.87857437133789
    6. ')' → logprob: -9.75357437133789
    7. '   ' → logprob: -11.00357437133789
    8. '<|end|>' → logprob: -11.37857437133789
    9. '           ' → logprob: -11.87857437133789
    10. ' )' → logprob: -12.37857437133789

Token 58: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024540279060602188
    2. '       ' → logprob: -4.899540424346924
    3. '<|end|>' → logprob: -4.899540424346924
    4. ' if' → logprob: -5.024540424346924
    5. ' ' → logprob: -7.274540424346924
    6. ':' → logprob: -7.899540424346924
    7. '            
' → logprob: -8.024539947509766
    8. '<|end|>' → logprob: -8.149539947509766
    9. '```' → logprob: -8.524539947509766
    10. ',' → logprob: -9.149539947509766

Token 59: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.032667435705661774
    2. 'if' (adapté à ' if') → logprob: -4.157667636871338
    3. '           ' → logprob: -4.782667636871338
    4. '       ' → logprob: -4.907667636871338
    5. '        ' → logprob: -8.40766716003418
    6. ' ' → logprob: -8.40766716003418
    7. '               ' → logprob: -9.15766716003418
    8. '```' → logprob: -9.40766716003418
    9. '   ' → logprob: -11.15766716003418
    10. '            ' → logprob: -11.28266716003418

Token 60: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.2637917697429657
    2. ' not' → logprob: -1.513791799545288
    3. 'floor' → logprob: -4.513791561126709
    4. 'not' → logprob: -7.138791561126709
    5. ' ' → logprob: -11.388792037963867
    6. ' ' → logprob: -11.763792037963867
    7. '    ' → logprob: -11.763792037963867
    8. '   ' → logprob: -12.763792037963867
    9. ' flo' → logprob: -12.888792037963867
    10. '_floor' → logprob: -13.388792037963867

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01380015816539526
    2. '[j' → logprob: -4.638800144195557
    3. '[y' → logprob: -5.513800144195557
    4. '[' → logprob: -13.263800621032715
    5. '][' → logprob: -14.263800621032715
    6. '[x' → logprob: -14.388800621032715
    7. '[int' → logprob: -14.638800621032715
    8. '[I' → logprob: -15.013800621032715
    9. '[ii' → logprob: -15.388800621032715
    10. '[Y' → logprob: -15.513800621032715

Token 62: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.10382305085659027
    2. '][' → logprob: -2.353822946548462
    3. ']' → logprob: -6.103823184967041
    4. '[i' → logprob: -7.728823184967041
    5. '[' → logprob: -7.853823184967041
    6. '[y' → logprob: -8.853822708129883
    7. ']==' → logprob: -8.853822708129883
    8. ' ][' → logprob: -9.228822708129883
    9. '[x' → logprob: -9.353822708129883
    10. '   ' → logprob: -11.603822708129883

Token 63: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.372294698550832e-06
    2. ' j' → logprob: -11.625009536743164
    3. '	j' → logprob: -16.000009536743164
    4. '[j' → logprob: -16.500009536743164
    5. '```' → logprob: -16.625009536743164
    6. ',j' → logprob: -16.875009536743164
    7. '   ' → logprob: -17.375009536743164
    8. ':j' → logprob: -17.625009536743164
    9. 'jx' → logprob: -17.750009536743164
    10. ' ' → logprob: -18.000009536743164

Token 64: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3219110369682312
    2. ' ]' → logprob: -1.571911096572876
    3. ']==' → logprob: -3.446911096572876
    4. ']:' → logprob: -3.946911096572876
    5. ' !=' → logprob: -5.196910858154297
    6. ']!=' → logprob: -5.321910858154297
    7. ' ==' → logprob: -6.446910858154297
    8. ')' → logprob: -6.446910858154297
    9. '==' → logprob: -7.196910858154297
    10. '!=' → logprob: -7.196910858154297

Token 65: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.27833619713783264
    2. '!=' → logprob: -1.6533361673355103
    3. ' ==' → logprob: -3.6533362865448
    4. '==' → logprob: -3.9033362865448
    5. ':' → logprob: -5.903336048126221
    6. ' ' → logprob: -7.528336048126221
    7. '!='' → logprob: -8.028336524963379
    8. '<|end|>' → logprob: -8.028336524963379
    9. ' not' → logprob: -8.903336524963379
    10. ']!=' → logprob: -8.903336524963379

Token 66: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.174590602517128
    2. '1' → logprob: -1.9245905876159668
    3. ''' → logprob: -5.174590587615967
    4. ' '' → logprob: -5.799590587615967
    5. ' '#'' → logprob: -5.799590587615967
    6. '0' → logprob: -7.299590587615967
    7. '#' → logprob: -8.174591064453125
    8. '"' → logprob: -8.174591064453125
    9. ''#' → logprob: -8.174591064453125
    10. ' True' → logprob: -8.299591064453125

Token 67: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08023291826248169
    2. ''#' → logprob: -2.830232858657837
    3. ''' → logprob: -4.830233097076416
    4. ''*' → logprob: -5.455233097076416
    5. 'True' → logprob: -5.830233097076416
    6. 'False' → logprob: -6.705233097076416
    7. ' '#'' → logprob: -8.080232620239258
    8. ' ' → logprob: -8.205232620239258
    9. '0' → logprob: -8.330232620239258
    10. '"#' → logprob: -8.830232620239258

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002447830978780985
    2. '):' → logprob: -6.877447605133057
    3. ':
' → logprob: -7.377447605133057
    4. ' :' → logprob: -7.752447605133057
    5. ':return' → logprob: -8.627448081970215
    6. ' or' → logprob: -10.127448081970215
    7. ')' → logprob: -10.252448081970215
    8. '           ' → logprob: -10.252448081970215
    9. '       ' → logprob: -10.377448081970215
    10. '<|end|>' → logprob: -12.002448081970215

Token 69: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20182843506336212
    2. ':' → logprob: -2.4518284797668457
    3. '           ' → logprob: -2.4518284797668457
    4. ':return' → logprob: -6.201828479766846
    5. ' return' → logprob: -6.326828479766846
    6. ' :' → logprob: -6.951828479766846
    7. '       ' → logprob: -7.076828479766846
    8. '                       ' → logprob: -7.451828479766846
    9. '                           ' → logprob: -7.576828479766846
    10. ' or' → logprob: -7.701828479766846

Token 70: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7412673234939575
    2. ' return' → logprob: -1.3662673234939575
    3. 'return' (adapté à ' return') → logprob: -1.3662673234939575
    4. ' continue' → logprob: -5.241267204284668
    5. '                   ' → logprob: -5.491267204284668
    6. '           ' → logprob: -6.241267204284668
    7. 'continue' → logprob: -6.741267204284668
    8. '                ' → logprob: -8.491267204284668
    9. '   ' → logprob: -8.991267204284668
    10. '                       ' → logprob: -9.366267204284668

Token 71: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5759446620941162
    2. 'False' → logprob: -0.8259446620941162
    3. ' True' → logprob: -12.450944900512695
    4. 'True' → logprob: -13.575944900512695
    5. '(False' → logprob: -17.825944900512695
    6. ' ' → logprob: -17.950944900512695
    7. 'F' → logprob: -20.450944900512695
    8. '=False' → logprob: -20.575944900512695
    9. ' ' → logprob: -21.325944900512695
    10. ' false' → logprob: -21.700944900512695

Token 72: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6622890830039978
    2. '<|end|>' → logprob: -1.6622891426086426
    3. ' 
' → logprob: -2.7872891426086426
    4. '   ' → logprob: -2.9122891426086426
    5. '       ' → logprob: -3.1622891426086426
    6. '           ' → logprob: -3.1622891426086426
    7. '\n' → logprob: -3.5372891426086426
    8. '    
' → logprob: -4.037289142608643
    9. '  
' → logprob: -4.662289142608643
    10. '            
' → logprob: -4.662289142608643

Token 73: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46521615982055664
    2. '   ' → logprob: -1.9652161598205566
    3. '
' → logprob: -2.8402161598205566
    4. ' 
' → logprob: -2.9652161598205566
    5. '       ' → logprob: -3.0902161598205566
    6. ' return' → logprob: -3.7152161598205566
    7. 'return' → logprob: -4.215216159820557
    8. '            
' → logprob: -4.590216159820557
    9. '    
' → logprob: -4.715216159820557
    10. '\n' → logprob: -5.840216159820557

Token 74: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14734631776809692
    2. ' return' → logprob: -2.397346258163452
    3. 'return' (adapté à ' return') → logprob: -3.522346258163452
    4. '       ' → logprob: -4.397346496582031
    5. '           ' → logprob: -6.522346496582031
    6. ':return' → logprob: -7.272346496582031
    7. '    ' → logprob: -7.647346496582031
    8. ' ' → logprob: -8.147346496582031
    9. '  ' → logprob: -8.272346496582031
    10. '```' → logprob: -8.522346496582031

Token 75: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868711292743683
    2. ' True' → logprob: -1.136871099472046
    3. '(True' → logprob: -16.636871337890625
    4. '   ' → logprob: -17.636871337890625
    5. '=True' → logprob: -19.761871337890625
    6. 'False' → logprob: -20.386871337890625
    7. ' ' → logprob: -21.011871337890625
    8. '.True' → logprob: -22.761871337890625
    9. ' Tru' → logprob: -23.261871337890625
    10. 'true' → logprob: -23.261871337890625

Token 76: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6384164094924927
    2. '   ' → logprob: -1.3884164094924927
    3. '       ' → logprob: -2.388416290283203
    4. '[' → logprob: -3.138416290283203
    5. ' ' → logprob: -4.013416290283203
    6. '1' → logprob: -4.263416290283203
    7. '.' → logprob: -4.513416290283203
    8. '    ' → logprob: -4.638416290283203
    9. '```' → logprob: -5.138416290283203
    10. '#' → logprob: -5.388416290283203

Token 77: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18065303564071655
    2. '   ' → logprob: -2.5556530952453613
    3. '       ' → logprob: -3.0556530952453613
    4. ' ' → logprob: -4.180653095245361
    5. '    ' → logprob: -5.680653095245361
    6. '<|end|>' → logprob: -5.680653095245361
    7. '```' → logprob: -5.680653095245361
    8. '[' → logprob: -5.805653095245361
    9. ' :' → logprob: -6.180653095245361
    10. '#' → logprob: -6.430653095245361

Token 78: ' place' (ID: 2475)
  Prédit: ' place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.005368222016841173
    2. '_place' → logprob: -6.380368232727051
    3. ' space' → logprob: -6.630368232727051
    4. ' can' → logprob: -6.880368232727051
    5. ' ' → logprob: -8.00536823272705
    6. ' ' → logprob: -8.25536823272705
    7. ' find' → logprob: -8.88036823272705
    8. 'place' → logprob: -9.00536823272705
    9. ' add' → logprob: -9.50536823272705
    10. '_' → logprob: -9.50536823272705

Token 79: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.00035786881926469505
    2. '_' → logprob: -8.000357627868652
    3. '_c' → logprob: -11.250357627868652
    4. 'Car' → logprob: -12.750357627868652
    5. '_floor' → logprob: -12.750357627868652
    6. '_cap' → logprob: -15.250357627868652
    7. 'car' → logprob: -15.250357627868652
    8. ' _' → logprob: -15.375357627868652
    9. '_C' → logprob: -15.375357627868652
    10. '_piece' → logprob: -15.500357627868652

Token 80: 'pet' (ID: 9456)
  Prédit: 'pet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.0028199704829603434
    2. '_pet' → logprob: -6.002820014953613
    3. '_car' → logprob: -10.002820014953613
    4. 'pets' → logprob: -10.252820014953613
    5. '```' → logprob: -10.377820014953613
    6. '_p' → logprob: -10.502820014953613
    7. 'et' → logprob: -10.627820014953613
    8. 'pett' → logprob: -10.877820014953613
    9. 'p' → logprob: -11.127820014953613
    10. '   ' → logprob: -11.627820014953613

Token 81: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.07895389944314957
    2. '(' → logprob: -2.578953981399536
    3. ' (' → logprob: -9.703953742980957
    4. '_floor' → logprob: -14.078953742980957
    5. '(def' → logprob: -15.578953742980957
    6. '(car' → logprob: -15.703953742980957
    7. '(
' → logprob: -15.703953742980957
    8. '(F' → logprob: -15.828953742980957
    9. '\(' → logprob: -15.828953742980957
    10. '(room' → logprob: -16.078954696655273

Token 82: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.003334440989419818
    2. 'oor' → logprob: -6.3783345222473145
    3. 'lo' → logprob: -7.7533345222473145
    4. 'l' → logprob: -7.8783345222473145
    5. 'loo' → logprob: -8.003334045410156
    6. '_' → logprob: -8.378334045410156
    7. 'floor' → logprob: -9.378334045410156
    8. 'or' → logprob: -10.628334045410156
    9. '(' → logprob: -10.753334045410156
    10. '_floor' → logprob: -10.753334045410156

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022833107504993677
    2. ',f' → logprob: -8.750227928161621
    3. ' ,' → logprob: -9.625227928161621
    4. '‌,' → logprob: -14.125227928161621
    5. ')' → logprob: -14.375227928161621
    6. '   ' → logprob: -14.875227928161621
    7. '[f' → logprob: -15.000227928161621
    8. ',size' → logprob: -15.000227928161621
    9. '<|end|>' → logprob: -15.125227928161621
    10. '(f' → logprob: -15.500227928161621

Token 84: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1426822692155838
    2. 'x' → logprob: -2.0176823139190674
    3. ')' → logprob: -12.892682075500488
    4. '    ' → logprob: -14.267682075500488
    5. '	x' → logprob: -14.267682075500488
    6. '   ' → logprob: -14.267682075500488
    7. ',' → logprob: -14.517682075500488
    8. ')x' → logprob: -14.517682075500488
    9. ' ' → logprob: -15.017682075500488
    10. '<|end|>' → logprob: -15.392682075500488

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010843054042197764
    2. ' ,' → logprob: -9.50010871887207
    3. '+' → logprob: -11.12510871887207
    4. ')' → logprob: -12.12510871887207
    5. ',y' → logprob: -12.12510871887207
    6. '+,' → logprob: -13.12510871887207
    7. ' ' → logprob: -13.50010871887207
    8. '[' → logprob: -14.00010871887207
    9. '<|end|>' → logprob: -14.12510871887207
    10. ' +' → logprob: -14.25010871887207

Token 86: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005246568005532026
    2. ' y' → logprob: -5.255246639251709
    3. '<|end|>' → logprob: -12.13024616241455
    4. '	y' → logprob: -12.38024616241455
    5. ',y' → logprob: -14.13024616241455
    6. ')' → logprob: -14.25524616241455
    7. ')y' → logprob: -14.25524616241455
    8. ' ' → logprob: -15.50524616241455
    9. ',' → logprob: -15.63024616241455
    10. ''y' → logprob: -15.75524616241455

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.849109119386412e-06
    2. ' ,' → logprob: -12.125009536743164
    3. ',size' → logprob: -12.375009536743164
    4. '‌,' → logprob: -16.500009536743164
    5. ')' → logprob: -17.000009536743164
    6. '),' → logprob: -17.625009536743164
    7. ',
' → logprob: -17.875009536743164
    8. '   ' → logprob: -18.500009536743164
    9. '[],' → logprob: -18.500009536743164
    10. '<|end|>' → logprob: -18.625009536743164

Token 88: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.009807559661567211
    2. ' size' → logprob: -4.759807586669922
    3. 's' → logprob: -6.759807586669922
    4. ',size' → logprob: -11.384807586669922
    5. ' ' → logprob: -11.884807586669922
    6. ',' → logprob: -12.759807586669922
    7. '   ' → logprob: -13.009807586669922
    8. ')' → logprob: -13.509807586669922
    9. '	size' → logprob: -13.634807586669922
    10. 'sizei' → logprob: -14.009807586669922

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2825695872306824
    2. '):' → logprob: -1.4075696468353271
    3. ')' → logprob: -6.657569408416748
    4. ' ,' → logprob: -9.782569885253906
    5. '):
' → logprob: -10.407569885253906
    6. ':' → logprob: -11.157569885253906
    7. ' ):' → logprob: -11.282569885253906
    8. '),' → logprob: -12.282569885253906
    9. '   ' → logprob: -12.532569885253906
    10. ' ' → logprob: -13.532569885253906

Token 90: ' val' (ID: 1459)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.15065574645996094
    2. ' W' → logprob: -2.025655746459961
    3. 'H' → logprob: -6.025655746459961
    4. 'True' → logprob: -6.400655746459961
    5. '1' → logprob: -6.900655746459961
    6. ' True' → logprob: -7.275655746459961
    7. '   ' → logprob: -7.650655746459961
    8. ')' → logprob: -7.900655746459961
    9. ' ' → logprob: -8.275655746459961
    10. ' H' → logprob: -8.275655746459961

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01994621381163597
    2. ')' → logprob: -4.144946098327637
    3. '):
' → logprob: -5.769946098327637
    4. '=' → logprob: -7.269946098327637
    5. 'u' → logprob: -10.519946098327637
    6. ' ):' → logprob: -10.769946098327637
    7. ',' → logprob: -11.269946098327637
    8. 'ue' → logprob: -12.394946098327637
    9. '):

' → logprob: -12.644946098327637
    10. '_' → logprob: -13.019946098327637

Token 92: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002333428245037794
    2. '):' → logprob: -6.627333641052246
    3. '   ' → logprob: -8.002333641052246
    4. ':
' → logprob: -8.002333641052246
    5. ' :' → logprob: -8.752333641052246
    6. '<|end|>' → logprob: -9.377333641052246
    7. ')' → logprob: -9.877333641052246
    8. '):
' → logprob: -11.752333641052246
    9. ':**' → logprob: -12.502333641052246
    10. '<|end|>' → logprob: -12.627333641052246

Token 93: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08006788045167923
    2. '
' → logprob: -3.5800678730010986
    3. ' for' → logprob: -3.5800678730010986
    4. ' 
' → logprob: -4.455068111419678
    5. '    
' → logprob: -5.955068111419678
    6. ' ' → logprob: -6.580068111419678
    7. '\n' → logprob: -6.830068111419678
    8. ':' → logprob: -6.955068111419678
    9. 'for' (adapté à ' for') → logprob: -7.455068111419678
    10. '<|end|>' → logprob: -7.705068111419678

Token 94: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12798425555229187
    2. ' ' → logprob: -2.1279842853546143
    3. ' y' → logprob: -7.127984046936035
    4. 'i' → logprob: -9.002984046936035
    5. ' _' → logprob: -10.502984046936035
    6. ' ‌' → logprob: -10.502984046936035
    7. ' in' → logprob: -10.877984046936035
    8. ' range' → logprob: -11.252984046936035
    9. ' ' → logprob: -11.752984046936035
    10. '<|end|>' → logprob: -12.002984046936035

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016477463766932487
    2. 'in' → logprob: -4.266477584838867
    3. ' ' → logprob: -6.141477584838867
    4. '<|end|>' → logprob: -9.016477584838867
    5. '  ' → logprob: -11.766477584838867
    6. '   ' → logprob: -12.016477584838867
    7. '	in' → logprob: -12.141477584838867
    8. '    ' → logprob: -12.141477584838867
    9. ' i' → logprob: -12.891477584838867
    10. ' =' → logprob: -13.141477584838867

Token 96: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10021055489778519
    2. 'range' → logprob: -2.350210666656494
    3. '(range' → logprob: -13.225210189819336
    4. ' y' → logprob: -13.350210189819336
    5. ' xrange' → logprob: -15.100210189819336
    6. ' ' → logprob: -16.475210189819336
    7. ' rang' → logprob: -16.850210189819336
    8. 'y' → logprob: -17.100210189819336
    9. '	range' → logprob: -17.225210189819336
    10. ' in' → logprob: -17.600210189819336

Token 97: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.004167795181274414
    2. '(' → logprob: -5.754167556762695
    3. ' y' → logprob: -7.129167556762695
    4. ' (' → logprob: -8.629167556762695
    5. 'y' → logprob: -11.754167556762695
    6. '(len' → logprob: -15.004167556762695
    7. '(x' → logprob: -15.129167556762695
    8. '(
' → logprob: -15.629167556762695
    9. '(Y' → logprob: -16.004167556762695
    10. '(s' → logprob: -16.254167556762695

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014537633978761733
    2. ' ,' → logprob: -9.500144958496094
    3. '   ' → logprob: -9.875144958496094
    4. ')' → logprob: -12.125144958496094
    5. ' ' → logprob: -12.625144958496094
    6. '+' → logprob: -13.250144958496094
    7. ',len' → logprob: -13.750144958496094
    8. ',size' → logprob: -13.750144958496094
    9. '<|end|>' → logprob: -14.000144958496094
    10. ',
' → logprob: -14.250144958496094

Token 99: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141693949699402
    2. ' y' → logprob: -1.7014169692993164
    3. 'x' → logprob: -12.951416969299316
    4. '	y' → logprob: -14.826416969299316
    5. ' ' → logprob: -14.951416969299316
    6. '<|end|>' → logprob: -15.076416969299316
    7. '    ' → logprob: -15.951416969299316
    8. '   ' → logprob: -15.951416969299316
    9. ')y' → logprob: -16.951416015625
    10. ' x' → logprob: -17.201416015625

Token 100: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23867806792259216
    2. '+' → logprob: -1.6136780977249146
    3. ' +' → logprob: -4.988677978515625
    4. ' ,' → logprob: -5.738677978515625
    5. '   ' → logprob: -7.363677978515625
    6. '<|end|>' → logprob: -7.363677978515625
    7. ' ' → logprob: -7.488677978515625
    8. ')' → logprob: -8.238677978515625
    9. '       ' → logprob: -8.738677978515625
    10. ',y' → logprob: -8.738677978515625

Token 101: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0019287518225610256
    2. ' size' → logprob: -6.251928806304932
    3. ' ' → logprob: -16.626928329467773
    4. '	size' → logprob: -18.126928329467773
    5. 's' → logprob: -18.626928329467773
    6. '(size' → logprob: -19.001928329467773
    7. '[size' → logprob: -19.126928329467773
    8. '   ' → logprob: -19.501928329467773
    9. 'sizei' → logprob: -19.751928329467773
    10. '
' → logprob: -19.876928329467773

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012633726000785828
    2. '):
' → logprob: -4.387633800506592
    3. ':' → logprob: -9.762633323669434
    4. '   ' → logprob: -10.512633323669434
    5. ')' → logprob: -10.762633323669434
    6. '):
' → logprob: -11.387633323669434
    7. '):

' → logprob: -13.262633323669434
    8. ' ):' → logprob: -13.512633323669434
    9. ' ' → logprob: -13.762633323669434
    10. '       ' → logprob: -14.012633323669434

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4757317304611206
    2. '   ' → logprob: -1.2257317304611206
    3. '<|end|>' → logprob: -2.60073184967041
    4. ' ' → logprob: -4.97573184967041
    5. '    ' → logprob: -6.60073184967041
    6. '<|end|>' → logprob: -7.35073184967041
    7. ' for' → logprob: -7.72573184967041
    8. '    
' → logprob: -8.22573184967041
    9. '        
' → logprob: -8.60073184967041
    10. '  ' → logprob: -8.72573184967041

Token 104: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02603957988321781
    2. 'for' (adapté à ' for') → logprob: -4.2760396003723145
    3. '   ' → logprob: -4.5260396003723145
    4. '       ' → logprob: -7.9010396003723145
    5. '    ' → logprob: -8.276039123535156
    6. ' ' → logprob: -8.776039123535156
    7. '	for' → logprob: -8.901039123535156
    8. '```' → logprob: -10.776039123535156
    9. ' 
' → logprob: -11.401039123535156
    10. ' ' → logprob: -11.401039123535156

Token 105: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.048589304089546204
    2. 'j' → logprob: -3.0485892295837402
    3. '	j' → logprob: -14.173589706420898
    4. '    ' → logprob: -14.548589706420898
    5. '   ' → logprob: -15.423589706420898
    6. ' ' → logprob: -15.423589706420898
    7. '[j' → logprob: -16.1735897064209
    8. ' x' → logprob: -16.4235897064209
    9. '(j' → logprob: -16.6735897064209
    10. '<|end|>' → logprob: -17.5485897064209

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016269786283373833
    2. 'in' → logprob: -4.141269683837891
    3. ' ' → logprob: -8.51626968383789
    4. '<|end|>' → logprob: -11.39126968383789
    5. '=' → logprob: -11.76626968383789
    6. ' =' → logprob: -12.14126968383789
    7. ' j' → logprob: -13.39126968383789
    8. ')' → logprob: -13.76626968383789
    9. '```' → logprob: -14.01626968383789
    10. 'n' → logprob: -14.26626968383789

Token 107: ' range' (ID: 3352)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.009139430709183216
    2. 'x' → logprob: -4.759139537811279
    3. 'range' → logprob: -8.384139060974121
    4. ' (' → logprob: -8.884139060974121
    5. ' x' → logprob: -9.134139060974121
    6. '(range' → logprob: -11.134139060974121
    7. '(' → logprob: -11.384139060974121
    8. ' range' → logprob: -11.884139060974121
    9. '[x' → logprob: -12.259139060974121
    10. ')' → logprob: -12.509139060974121

Token 108: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007776625920087099
    2. ' (' → logprob: -4.882776737213135
    3. 'x' → logprob: -9.382776260375977
    4. '(' → logprob: -9.882776260375977
    5. ' x' → logprob: -10.382776260375977
    6. '[x' → logprob: -13.132776260375977
    7. '(s' → logprob: -14.507776260375977
    8. ')' → logprob: -14.632776260375977
    9. '(f' → logprob: -14.632776260375977
    10. ' ' → logprob: -15.007776260375977

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024299313372466713
    2. ' ,' → logprob: -9.250243186950684
    3. ',j' → logprob: -9.625243186950684
    4. '<|end|>' → logprob: -10.250243186950684
    5. ')' → logprob: -11.125243186950684
    6. '+' → logprob: -11.750243186950684
    7. '=' → logprob: -12.000243186950684
    8. '<|end|>' → logprob: -12.750243186950684
    9. ' ' → logprob: -13.500243186950684
    10. ',i' → logprob: -13.500243186950684

Token 110: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.27437537908554077
    2. 'x' → logprob: -1.5243754386901855
    3. '0' → logprob: -4.7743754386901855
    4. ' y' → logprob: -4.7743754386901855
    5. 'j' → logprob: -5.3993754386901855
    6. 'i' → logprob: -8.774374961853027
    7. ')' → logprob: -8.774374961853027
    8. 'size' → logprob: -8.774374961853027
    9. ' ' → logprob: -9.399374961853027
    10. ' x' → logprob: -9.649374961853027

Token 111: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2680259644985199
    2. '+' → logprob: -1.5180259943008423
    3. ' +' → logprob: -4.643025875091553
    4. ')' → logprob: -5.643025875091553
    5. ' ,' → logprob: -6.268025875091553
    6. ' ' → logprob: -7.643025875091553
    7. '   ' → logprob: -8.893026351928711
    8. ',size' → logprob: -10.018026351928711
    9. ',j' → logprob: -10.393026351928711
    10. '       ' → logprob: -10.643026351928711

Token 112: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0011717714369297028
    2. ' size' → logprob: -6.751171588897705
    3. ')' → logprob: -15.251172065734863
    4. ' ' → logprob: -15.251172065734863
    5. '1' → logprob: -15.501172065734863
    6. 's' → logprob: -15.751172065734863
    7. '   ' → logprob: -15.751172065734863
    8. '[size' → logprob: -16.126171112060547
    9. '(size' → logprob: -16.376171112060547
    10. '       ' → logprob: -16.376171112060547

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05627492815256119
    2. '):
' → logprob: -2.931274890899658
    3. '):
' → logprob: -7.306274890899658
    4. ')' → logprob: -8.056275367736816
    5. ' ):' → logprob: -8.806275367736816
    6. '       ' → logprob: -9.431275367736816
    7. '   ' → logprob: -9.431275367736816
    8. ':' → logprob: -10.181275367736816
    9. '):

' → logprob: -11.056275367736816
    10. ' ):
' → logprob: -11.181275367736816

Token 114: '           ' (ID: 352)
  Prédit: ' floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.17974911630153656
    2. '           ' → logprob: -2.054749011993408
    3. 'floor' → logprob: -3.429749011993408
    4. '       ' → logprob: -5.804749011993408
    5. '        ' → logprob: -8.304749488830566
    6. '               ' → logprob: -8.429749488830566
    7. '_floor' → logprob: -8.679749488830566
    8. '            ' → logprob: -9.179749488830566
    9. '   ' → logprob: -9.554749488830566
    10. ' val' → logprob: -9.554749488830566

Token 115: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' (adapté à ' floor') → logprob: -0.5760574340820312
    2. ' floor' → logprob: -0.8260574340820312
    3. '_floor' → logprob: -9.326057434082031
    4. '.floor' → logprob: -11.951057434082031
    5. '   ' → logprob: -12.326057434082031
    6. '               ' → logprob: -12.826057434082031
    7. '-floor' → logprob: -12.951057434082031
    8. 'flo' → logprob: -12.951057434082031
    9. '           ' → logprob: -13.076057434082031
    10. 'Floor' → logprob: -13.076057434082031

Token 116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3425219549390022e-05
    2. '[j' → logprob: -11.37501335144043
    3. '[' → logprob: -13.37501335144043
    4. '][' → logprob: -16.12501335144043
    5. '```' → logprob: -16.12501335144043
    6. '[I' → logprob: -16.87501335144043
    7. '[int' → logprob: -17.00001335144043
    8. 'i' → logprob: -17.50001335144043
    9. '[ii' → logprob: -18.00001335144043
    10. '\[' → logprob: -18.50001335144043

Token 117: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10027848929166794
    2. '[j' → logprob: -2.350278377532959
    3. ']' → logprob: -10.350278854370117
    4. ' ][' → logprob: -10.850278854370117
    5. '[' → logprob: -11.225278854370117
    6. '[i' → logprob: -13.475278854370117
    7. '```' → logprob: -13.725278854370117
    8. '"][' → logprob: -13.850278854370117
    9. ''][' → logprob: -13.975278854370117
    10. ']][' → logprob: -14.725278854370117

Token 118: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.512236498361744e-07
    2. ' j' → logprob: -14.875000953674316
    3. '[j' → logprob: -16.375
    4. '	j' → logprob: -18.25
    5. '```' → logprob: -18.625
    6. ']' → logprob: -19.0
    7. '$j' → logprob: -19.25
    8. ' ' → logprob: -19.25
    9. ':j' → logprob: -19.375
    10. '   ' → logprob: -19.75

Token 119: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05871057137846947
    2. '=' → logprob: -3.4337105751037598
    3. ' ]' → logprob: -4.30871057510376
    4. ']=' → logprob: -4.93371057510376
    5. ' =' → logprob: -5.55871057510376
    6. ')' → logprob: -8.558710098266602
    7. ' ' → logprob: -11.308710098266602
    8. '<|end|>' → logprob: -11.308710098266602
    9. ']+=' → logprob: -11.558710098266602
    10. ')]' → logprob: -12.058710098266602

Token 120: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815076172351837
    2. ' =' → logprob: -4.018150806427002
    3. ' ' → logprob: -15.768150329589844
    4. '=

' → logprob: -15.893150329589844
    5. '=int' → logprob: -16.268150329589844
    6. '*=' → logprob: -16.268150329589844
    7. ' *=' → logprob: -16.518150329589844
    8. '+=' → logprob: -16.643150329589844
    9. '<|end|>' → logprob: -17.268150329589844
    10. ' +=' → logprob: -17.393150329589844

Token 121: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.20141440629959106
    2. ' val' → logprob: -1.7014143466949463
    3. '[val' → logprob: -14.201414108276367
    4. '	val' → logprob: -15.076414108276367
    5. 'v' → logprob: -16.326414108276367
    6. '(val' → logprob: -17.576414108276367
    7. '_val' → logprob: -17.701414108276367
    8. ',val' → logprob: -18.326414108276367
    9. '-val' → logprob: -19.076414108276367
    10. '.val' → logprob: -19.201414108276367

Token 122: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.697162389755249
    2. '<|end|>' → logprob: -0.822162389755249
    3. '\n' → logprob: -2.947162389755249
    4. '

' → logprob: -6.072162628173828
    5. '<|end|>' → logprob: -6.197162628173828
    6. '  
' → logprob: -7.197162628173828
    7. '


' → logprob: -7.197162628173828
    8. ' ' → logprob: -7.322162628173828
    9. 'def' → logprob: -7.447162628173828
    10. '\' → logprob: -7.447162628173828

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43503496050834656
    2. '
' → logprob: -1.060034990310669
    3. '\' → logprob: -6.43503475189209
    4. '

' → logprob: -6.68503475189209
    5. ' 
' → logprob: -7.18503475189209
    6. '  
' → logprob: -7.56003475189209
    7. '\n' → logprob: -8.06003475189209
    8. '#' → logprob: -8.18503475189209
    9. 'd' → logprob: -8.18503475189209
    10. ' def' → logprob: -8.43503475189209

Token 124: ' find' (ID: 1646)
  Prédit: ' cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cover' → logprob: -1.3508028984069824
    2. ' solve' → logprob: -1.4758028984069824
    3. ' find' → logprob: -1.7258028984069824
    4. ' back' → logprob: -2.2258028984069824
    5. ' can' → logprob: -2.7258028984069824
    6. ' main' → logprob: -3.1008028984069824
    7. ' try' → logprob: -3.1008028984069824
    8. ' place' → logprob: -3.6008028984069824
    9. ' fill' → logprob: -4.725802898406982
    10. ' dfs' → logprob: -4.850802898406982

Token 125: '_first' (ID: 29347)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.3692753314971924
    2. '_' → logprob: -2.1192753314971924
    3. '_best' → logprob: -2.3692753314971924
    4. '_max' → logprob: -2.9942753314971924
    5. '_opt' → logprob: -4.619275093078613
    6. '_square' → logprob: -4.994275093078613
    7. '_next' → logprob: -4.994275093078613
    8. '_sp' → logprob: -5.244275093078613
    9. '_available' → logprob: -5.869275093078613
    10. '_possible' → logprob: -5.994275093078613

Token 126: '_scr' (ID: 148844)
  Prédit: '_empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.01059981994330883
    2. '_free' → logprob: -5.385599613189697
    3. '_blank' → logprob: -5.885599613189697
    4. '_' → logprob: -6.760599613189697
    5. '_zero' → logprob: -7.260599613189697
    6. '_un' → logprob: -8.385600090026855
    7. '_open' → logprob: -8.760600090026855
    8. '_available' → logprob: -8.885600090026855
    9. '_floor' → logprob: -8.885600090026855
    10. '_unused' → logprob: -8.885600090026855

Token 127: 'atched' (ID: 44560)
  Prédit: 'atched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atched' → logprob: -0.04017181694507599
    2. 'ap' → logprob: -4.4151716232299805
    3. 'ambled' → logprob: -4.7901716232299805
    4. 'ub' → logprob: -5.1651716232299805
    5. 'atch' → logprob: -5.2901716232299805
    6. 'aped' → logprob: -5.4151716232299805
    7. 'at' → logprob: -7.1651716232299805
    8. 'apped' → logprob: -7.2901716232299805
    9. 'ape' → logprob: -7.6651716232299805
    10. '```' → logprob: -8.29017162322998

Token 128: '(f' (ID: 1526)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -1.172347068786621
    2. '_area' → logprob: -1.672347068786621
    3. '_cell' → logprob: -2.047347068786621
    4. '_floor' → logprob: -2.172347068786621
    5. '_position' → logprob: -2.297347068786621
    6. '(f' → logprob: -2.672347068786621
    7. '_tile' → logprob: -3.047347068786621
    8. '(' → logprob: -3.797347068786621
    9. '_' → logprob: -5.047347068786621
    10. '_pos' → logprob: -5.797347068786621

Token 129: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.028270231559872627
    2. 'l' → logprob: -4.028270244598389
    3. 'lo' → logprob: -5.403270244598389
    4. 'o' → logprob: -6.528270244598389
    5. 'loo' → logprob: -6.528270244598389
    6. 'or' → logprob: -8.02826976776123
    7. 'irst' → logprob: -8.02826976776123
    8. 'i' → logprob: -8.15326976776123
    9. '```' → logprob: -8.40326976776123
    10. 'loat' → logprob: -8.65326976776123

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003263153601437807
    2. ',f' → logprob: -5.878262996673584
    3. ' ,' → logprob: -8.003263473510742
    4. '):' → logprob: -9.128263473510742
    5. ')' → logprob: -12.128263473510742
    6. '(f' → logprob: -13.628263473510742
    7. ',F' → logprob: -13.753263473510742
    8. ' ' → logprob: -14.128263473510742
    9. ',size' → logprob: -14.253263473510742
    10. ',p' → logprob: -14.378263473510742

Token 131: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.09810497611761093
    2. 'H' → logprob: -2.973104953765869
    3. ' W' → logprob: -3.223104953765869
    4. ' H' → logprob: -6.098104953765869
    5. ')' → logprob: -9.348105430603027
    6. '   ' → logprob: -10.223105430603027
    7. ' ' → logprob: -10.348105430603027
    8. 'floor' → logprob: -11.098105430603027
    9. 'def' → logprob: -11.473105430603027
    10. 'w' → logprob: -11.598105430603027

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001761272142175585
    2. ' ,' → logprob: -8.750176429748535
    3. ',H' → logprob: -11.000176429748535
    4. ',
' → logprob: -14.125176429748535
    5. '):' → logprob: -16.62517547607422
    6. 'H' → logprob: -16.75017547607422
    7. ',h' → logprob: -17.37517547607422
    8. ',

' → logprob: -17.50017547607422
    9. '‌,' → logprob: -17.75017547607422
    10. ')' → logprob: -18.00017547607422

Token 133: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.009757150895893574
    2. ' H' → logprob: -4.634757041931152
    3. ' ' → logprob: -14.259757041931152
    4. '   ' → logprob: -14.884757041931152
    5. '  ' → logprob: -16.88475799560547
    6. ',' → logprob: -17.13475799560547
    7. ')' → logprob: -17.25975799560547
    8. ',H' → logprob: -17.50975799560547
    9. '       ' → logprob: -18.13475799560547
    10. ' ' → logprob: -18.13475799560547

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.15310683415737e-05
    2. '):
' → logprob: -11.250021934509277
    3. ')' → logprob: -12.625021934509277
    4. ' ):' → logprob: -13.000021934509277
    5. ':' → logprob: -13.125021934509277
    6. ',' → logprob: -15.000021934509277
    7. '):
' → logprob: -15.250021934509277
    8. ']:' → logprob: -16.50002098083496
    9. '}:' → logprob: -16.87502098083496
    10. '():' → logprob: -17.00002098083496

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3556956350803375
    2. ' for' → logprob: -1.2306956052780151
    3. 'for' → logprob: -4.980695724487305
    4. '	for' → logprob: -8.480695724487305
    5. '<|end|>' → logprob: -9.730695724487305
    6. '```' → logprob: -9.980695724487305
    7. ' ' → logprob: -10.855695724487305
    8. '
' → logprob: -11.355695724487305
    9. '  ' → logprob: -12.855695724487305
    10. ')' → logprob: -12.980695724487305

Token 136: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16418343782424927
    2. 'for' (adapté à ' for') → logprob: -1.9141833782196045
    3. '   ' → logprob: -5.539183616638184
    4. '	for' → logprob: -11.414183616638184
    5. ' ' → logprob: -12.289183616638184
    6. '<|end|>' → logprob: -13.039183616638184
    7. '    
' → logprob: -14.039183616638184
    8. '  ' → logprob: -14.039183616638184
    9. ' 
' → logprob: -14.539183616638184
    10. ')' → logprob: -14.914183616638184

Token 137: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09838462620973587
    2. ' y' → logprob: -2.7233846187591553
    3. 'i' → logprob: -3.5983846187591553
    4. 'y' → logprob: -7.348384857177734
    5. ' ' → logprob: -10.973384857177734
    6. ' j' → logprob: -12.098384857177734
    7. '	i' → logprob: -12.348384857177734
    8. ' x' → logprob: -13.473384857177734
    9. 'h' → logprob: -13.473384857177734
    10. ' h' → logprob: -13.598384857177734

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01818377524614334
    2. 'in' → logprob: -4.018183708190918
    3. ' ' → logprob: -10.643183708190918
    4. ',' → logprob: -12.018183708190918
    5. '	in' → logprob: -14.018183708190918
    6. 'import' → logprob: -14.518183708190918
    7. ')' → logprob: -14.893183708190918
    8. '0' → logprob: -15.018183708190918
    9. '<|end|>' → logprob: -15.018183708190918
    10. 'In' → logprob: -15.143183708190918

Token 139: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1269376575946808
    2. 'range' → logprob: -2.1269376277923584
    3. ' ' → logprob: -12.126937866210938
    4. '0' → logprob: -13.126937866210938
    5. ' xrange' → logprob: -13.626937866210938
    6. '(range' → logprob: -14.501937866210938
    7. '	range' → logprob: -14.751937866210938
    8. '_range' → logprob: -18.001937866210938
    9. ')' → logprob: -18.626937866210938
    10. ' in' → logprob: -18.751937866210938

Token 140: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -7.719917630311102e-05
    2. '(' → logprob: -9.500077247619629
    3. 'H' → logprob: -13.125077247619629
    4. '(
' → logprob: -15.125077247619629
    5. '(W' → logprob: -18.000076293945312
    6. '	H' → logprob: -18.500076293945312
    7. ' (' → logprob: -19.875076293945312
    8. ' H' → logprob: -20.125076293945312
    9. ',H' → logprob: -20.250076293945312
    10. '<H' → logprob: -20.500076293945312

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02634221501648426
    2. '):
' → logprob: -3.6513421535491943
    3. ':' → logprob: -10.526342391967773
    4. ')' → logprob: -12.526342391967773
    5. '):

' → logprob: -12.651342391967773
    6. ' ):' → logprob: -12.651342391967773
    7. '):
' → logprob: -12.901342391967773
    8. '}:' → logprob: -14.651342391967773
    9. '<|end|>' → logprob: -14.651342391967773
    10. ',' → logprob: -14.901342391967773

Token 142: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5441264510154724
    2. '   ' → logprob: -1.1691265106201172
    3. '       ' → logprob: -2.919126510620117
    4. ' for' → logprob: -3.044126510620117
    5. ':
' → logprob: -5.294126510620117
    6. '<|end|>' → logprob: -7.294126510620117
    7. ' ' → logprob: -7.669126510620117
    8. ',' → logprob: -7.669126510620117
    9. '	for' → logprob: -9.169126510620117
    10. '    ' → logprob: -9.169126510620117

Token 143: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3871169984340668
    2. 'for' (adapté à ' for') → logprob: -1.1371170282363892
    3. '   ' → logprob: -8.387117385864258
    4. '	for' → logprob: -11.512117385864258
    5. ' ' → logprob: -11.887117385864258
    6. '       ' → logprob: -14.137117385864258
    7. '    ' → logprob: -15.262117385864258
    8. '  ' → logprob: -15.512117385864258
    9. '<|end|>' → logprob: -16.762117385864258
    10. '_for' → logprob: -16.887117385864258

Token 144: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12692831456661224
    2. ' x' → logprob: -2.1269283294677734
    3. '	x' → logprob: -16.126928329467773
    4. ' ' → logprob: -16.376928329467773
    5. '{x' → logprob: -19.126928329467773
    6. '<|end|>' → logprob: -19.751928329467773
    7. '$x' → logprob: -19.751928329467773
    8. '<x' → logprob: -19.876928329467773
    9. ')x' → logprob: -20.126928329467773
    10. '"x' → logprob: -20.251928329467773

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0040838588029146194
    2. 'in' → logprob: -5.504083633422852
    3. ' ' → logprob: -12.254083633422852
    4. '    ' → logprob: -16.25408363342285
    5. '   ' → logprob: -16.25408363342285
    6. '  ' → logprob: -16.37908363342285
    7. '	in' → logprob: -16.37908363342285
    8. 'In' → logprob: -16.50408363342285
    9. '<|end|>' → logprob: -16.62908363342285
    10. 'import' → logprob: -17.25408363342285

Token 146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20162276923656464
    2. ' range' → logprob: -1.701622724533081
    3. 'W' → logprob: -8.70162296295166
    4. '(range' → logprob: -10.20162296295166
    5. ' W' → logprob: -12.20162296295166
    6. '(W' → logprob: -15.07662296295166
    7. 'Range' → logprob: -15.32662296295166
    8. '	range' → logprob: -15.95162296295166
    9. ' xrange' → logprob: -16.201622009277344
    10. '_range' → logprob: -16.326622009277344

Token 147: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -8.816591434879228e-05
    2. '(' → logprob: -9.62508773803711
    3. 'W' → logprob: -10.75008773803711
    4. '(
' → logprob: -15.00008773803711
    5. '(H' → logprob: -16.50008773803711
    6. '(w' → logprob: -16.87508773803711
    7. ' (' → logprob: -17.37508773803711
    8. '(width' → logprob: -17.62508773803711
    9. '((' → logprob: -17.75008773803711
    10. '(F' → logprob: -18.25008773803711

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016167386202141643
    2. '):
' → logprob: -6.626616954803467
    3. ':' → logprob: -8.251616477966309
    4. ')' → logprob: -11.751616477966309
    5. ' ):' → logprob: -12.251616477966309
    6. '<|end|>' → logprob: -12.376616477966309
    7. '):
' → logprob: -12.876616477966309
    8. '):

' → logprob: -13.001616477966309
    9. '   ' → logprob: -13.001616477966309
    10. '():' → logprob: -13.251616477966309

Token 149: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24579107761383057
    2. ':' → logprob: -1.7457910776138306
    3. '       ' → logprob: -3.995790958404541
    4. ' if' → logprob: -3.995790958404541
    5. ':
' → logprob: -5.745790958404541
    6. ',' → logprob: -7.245790958404541
    7. '   ' → logprob: -7.370790958404541
    8. '<|end|>' → logprob: -7.370790958404541
    9. '            
' → logprob: -8.6207914352417
    10. 'if' → logprob: -8.6207914352417

Token 150: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6944278478622437
    2. ' if' → logprob: -0.6944278478622437
    3. '           ' → logprob: -7.194427967071533
    4. '       ' → logprob: -8.444427490234375
    5. '               ' → logprob: -8.444427490234375
    6. '```' → logprob: -10.569427490234375
    7. ' floor' → logprob: -10.819427490234375
    8. '   ' → logprob: -11.319427490234375
    9. 'floor' → logprob: -11.444427490234375
    10. ':' → logprob: -11.694427490234375

Token 151: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.07889804989099503
    2. 'floor' → logprob: -2.5788979530334473
    3. ' not' → logprob: -11.953898429870605
    4. 'not' → logprob: -13.953898429870605
    5. '.floor' → logprob: -14.828898429870605
    6. '_floor' → logprob: -15.078898429870605
    7. ' ' → logprob: -16.57889747619629
    8. '-floor' → logprob: -16.82889747619629
    9. '(f' → logprob: -16.95389747619629
    10. 'f' → logprob: -17.32889747619629

Token 152: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.79811754100956e-05
    2. '[i' → logprob: -10.250038146972656
    3. '[x' → logprob: -13.375038146972656
    4. '[' → logprob: -15.500038146972656
    5. '][' → logprob: -15.750038146972656
    6. '[s' → logprob: -16.125038146972656
    7. '```' → logprob: -16.125038146972656
    8. '[Y' → logprob: -16.500038146972656
    9. '[j' → logprob: -16.625038146972656
    10. '[user' → logprob: -17.000038146972656

Token 153: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12979620695114136
    2. '[x' → logprob: -2.254796266555786
    3. ']==' → logprob: -4.754796028137207
    4. '[y' → logprob: -5.254796028137207
    5. ']' → logprob: -6.379796028137207
    6. '[j' → logprob: -7.254796028137207
    7. '==' → logprob: -8.379796028137207
    8. '[' → logprob: -9.254796028137207
    9. '[i' → logprob: -10.004796028137207
    10. '[z' → logprob: -10.379796028137207

Token 154: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.088346359931165e-07
    2. ' x' → logprob: -14.500000953674316
    3. '[x' → logprob: -15.000000953674316
    4. ']' → logprob: -17.875
    5. '	x' → logprob: -17.875
    6. '```' → logprob: -18.0
    7. '0' → logprob: -18.125
    8. ''x' → logprob: -18.5
    9. ' ' → logprob: -18.625
    10. '{x' → logprob: -18.75

Token 155: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07205560058355331
    2. '==' → logprob: -2.6970555782318115
    3. ')' → logprob: -6.822055816650391
    4. ']==' → logprob: -8.07205581665039
    5. ']' → logprob: -8.19705581665039
    6. ' !=' → logprob: -8.94705581665039
    7. ' ' → logprob: -9.32205581665039
    8. ')==' → logprob: -9.32205581665039
    9. '<|end|>' → logprob: -9.82205581665039
    10. ' )' → logprob: -10.94705581665039

Token 156: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14324532449245453
    2. '==' → logprob: -2.018245220184326
    3. ' !=' → logprob: -8.643245697021484
    4. ')' → logprob: -9.643245697021484
    5. '!=' → logprob: -9.768245697021484
    6. ' ' → logprob: -9.768245697021484
    7. '>' → logprob: -9.893245697021484
    8. '<|end|>' → logprob: -10.018245697021484
    9. '[' → logprob: -10.768245697021484
    10. ']==' → logprob: -10.893245697021484

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024896390736103058
    2. '0' → logprob: -4.524896621704102
    3. ' ' → logprob: -4.774896621704102
    4. '-' → logprob: -5.524896621704102
    5. '2' → logprob: -6.899896621704102
    6. ' -' → logprob: -9.024896621704102
    7. ''s' → logprob: -10.399896621704102
    8. '   ' → logprob: -10.524896621704102
    9. '.' → logprob: -10.899896621704102
    10. ''' → logprob: -11.024896621704102

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013316578231751919
    2. '0' → logprob: -4.638316631317139
    3. '-' → logprob: -6.013316631317139
    4. '2' → logprob: -7.388316631317139
    5. ' ' → logprob: -8.13831615447998
    6. 'True' → logprob: -10.13831615447998
    7. ''s' → logprob: -10.26331615447998
    8. 'scr' → logprob: -10.88831615447998
    9. 'False' → logprob: -11.20081615447998
    10. ' -' → logprob: -11.38831615447998

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005253087729215622
    2. ':return' → logprob: -5.505253314971924
    3. ':
' → logprob: -6.880253314971924
    4. '):' → logprob: -9.380252838134766
    5. '<|end|>' → logprob: -10.505252838134766
    6. '       ' → logprob: -11.380252838134766
    7. '):
' → logprob: -11.880252838134766
    8. ' :' → logprob: -12.630252838134766
    9. ')' → logprob: -13.005252838134766
    10. ' and' → logprob: -13.505252838134766

Token 160: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008899837732315063
    2. ':return' → logprob: -5.633899688720703
    3. ' return' → logprob: -5.758899688720703
    4. 'return' → logprob: -6.258899688720703
    5. '           ' → logprob: -9.383899688720703
    6. ':' → logprob: -9.883899688720703
    7. '<|end|>' → logprob: -10.133899688720703
    8. '                
' → logprob: -12.258899688720703
    9. '                       ' → logprob: -12.258899688720703
    10. '                   ' → logprob: -12.508899688720703

Token 161: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20149841904640198
    2. 'return' (adapté à ' return') → logprob: -1.7014983892440796
    3. ':return' → logprob: -10.451498031616211
    4. '                ' → logprob: -11.076498031616211
    5. '               ' → logprob: -11.076498031616211
    6. '                   ' → logprob: -11.326498031616211
    7. ' ' → logprob: -12.201498031616211
    8. ' 
' → logprob: -12.576498031616211
    9. '{return' → logprob: -13.951498031616211
    10. '	return' → logprob: -14.451498031616211

Token 162: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.26693591475486755
    2. '(x' → logprob: -1.51693594455719
    3. ' (' → logprob: -4.6419358253479
    4. ' x' → logprob: -5.2669358253479
    5. '(' → logprob: -9.266936302185059
    6. '(y' → logprob: -14.141936302185059
    7. '(
' → logprob: -14.891936302185059
    8. '	x' → logprob: -15.391936302185059
    9. '[x' → logprob: -16.016935348510742
    10. ' ' → logprob: -16.141935348510742

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2227693498134613
    2. ',y' → logprob: -1.8477693796157837
    3. ' ,' → logprob: -3.222769260406494
    4. ' ' → logprob: -6.347769260406494
    5. '<|end|>' → logprob: -8.097769737243652
    6. 'y' → logprob: -9.347769737243652
    7. ' y' → logprob: -9.472769737243652
    8. ' ,
' → logprob: -10.972769737243652
    9. ',
' → logprob: -11.472769737243652
    10. ',user' → logprob: -12.597769737243652

Token 164: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3868713676929474
    2. ' y' → logprob: -1.136871337890625
    3. '<|end|>' → logprob: -15.386871337890625
    4. ' ' → logprob: -16.386871337890625
    5. ',y' → logprob: -17.636871337890625
    6. '	y' → logprob: -18.136871337890625
    7. '
' → logprob: -18.636871337890625
    8. ' ' → logprob: -18.886871337890625
    9. ')y' → logprob: -20.011871337890625
    10. 'Y' → logprob: -20.386871337890625

Token 165: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45433133840560913
    2. 'None' → logprob: -1.704331398010254
    3. '
' → logprob: -2.079331398010254
    4. '    
' → logprob: -3.704331398010254
    5. ' None' → logprob: -4.329331398010254
    6. ',None' → logprob: -4.829331398010254
    7. ',' → logprob: -5.954331398010254
    8. '\n' → logprob: -5.954331398010254
    9. '  
' → logprob: -6.204331398010254
    10. ' 
' → logprob: -6.579331398010254

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03420538827776909
    2. 'return' → logprob: -4.159205436706543
    3. 'None' → logprob: -4.909205436706543
    4. ' return' → logprob: -5.284205436706543
    5. '
' → logprob: -5.409205436706543
    6. ' None' → logprob: -7.034205436706543
    7. '	return' → logprob: -9.159205436706543
    8. ' ' → logprob: -10.284205436706543
    9. '    
' → logprob: -10.909205436706543
    10. '  ' → logprob: -11.284205436706543

Token 167: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12965570390224457
    2. 'None' → logprob: -2.129655599594116
    3. ' return' → logprob: -6.879655838012695
    4. '   ' → logprob: -7.129655838012695
    5. ' None' → logprob: -7.629655838012695
    6. '
' → logprob: -7.879655838012695
    7. '	return' → logprob: -11.504655838012695
    8. '    
' → logprob: -12.129655838012695
    9. '```' → logprob: -12.629655838012695
    10. ' ' → logprob: -12.754655838012695

Token 168: ' -' (ID: 533)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007252985378727317
    2. ' None' → logprob: -7.250725269317627
    3. '(None' → logprob: -11.750725746154785
    4. '-' → logprob: -12.250725746154785
    5. '_None' → logprob: -13.250725746154785
    6. ',None' → logprob: -14.125725746154785
    7. ' -' → logprob: -16.75072479248047
    8. '_none' → logprob: -16.87572479248047
    9. '<|end|>' → logprob: -17.37572479248047
    10. '.None' → logprob: -17.50072479248047

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. ' -' → logprob: -15.000015258789062
    4. ',' → logprob: -17.375015258789062
    5. '-' → logprob: -17.500015258789062
    6. ',-' → logprob: -17.875015258789062
    7. '  ' → logprob: -18.250015258789062
    8. '2' → logprob: -18.625015258789062
    9. '１' → logprob: -19.250015258789062
    10. ' ,' → logprob: -19.687515258789062

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2610184848308563
    2. '<|end|>' → logprob: -1.7610185146331787
    3. ',None' → logprob: -3.0110185146331787
    4. ',-' → logprob: -5.1360182762146
    5. 'None' → logprob: -6.7610182762146
    6. ' None' → logprob: -7.3860182762146
    7. ' ,' → logprob: -8.011018753051758
    8. ' ' → logprob: -8.636018753051758
    9. '<|end|>' → logprob: -9.136018753051758
    10. ' -' → logprob: -9.511018753051758

Token 171: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.15310683415737e-05
    2. ' -' → logprob: -10.750021934509277
    3. '1' → logprob: -17.62502098083496
    4. '<|end|>' → logprob: -18.62502098083496
    5. ' ' → logprob: -20.87502098083496
    6. '−' → logprob: -22.12502098083496
    7. '–' → logprob: -22.37502098083496
    8. '0' → logprob: -22.87502098083496
    9. '‌' → logprob: -23.25002098083496
    10. '  ' → logprob: -23.50002098083496

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -17.75
    4. '```' → logprob: -18.625
    5. '<|end|>' → logprob: -19.0
    6. '0' → logprob: -19.625
    7. '   ' → logprob: -20.0
    8. '-' → logprob: -20.125
    9. '  ' → logprob: -21.125
    10. '۱' → logprob: -21.1875

Token 173: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010473522706888616
    2. 'd' → logprob: -10.375104904174805
    3. '```' → logprob: -10.750104904174805
    4. '
' → logprob: -11.125104904174805
    5. '<|end|>' → logprob: -11.125104904174805
    6. ' def' → logprob: -12.125104904174805
    7. 'de' → logprob: -12.875104904174805
    8. '\' → logprob: -12.875104904174805
    9. '#' → logprob: -13.125104904174805
    10. ':' → logprob: -13.375104904174805

Token 174: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.125000953674316
    3. ' def' → logprob: -15.125000953674316
    4. ':def' → logprob: -17.250001907348633
    5. 'de' → logprob: -17.375001907348633
    6. '
' → logprob: -17.750001907348633
    7. 'ndef' → logprob: -18.375001907348633
    8. '    
' → logprob: -18.625001907348633
    9. '  
' → logprob: -18.750001907348633
    10. 'import' → logprob: -19.125001907348633

Token 175: ' back' (ID: 1602)
  Prédit: ' cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cover' → logprob: -0.10733410716056824
    2. ' solve' → logprob: -2.7323341369628906
    3. ' place' → logprob: -4.107334136962891
    4. ' back' → logprob: -5.232334136962891
    5. ' dfs' → logprob: -5.232334136962891
    6. ' can' → logprob: -5.732334136962891
    7. ' fill' → logprob: -6.232334136962891
    8. ' try' → logprob: -6.232334136962891
    9. 'cover' → logprob: -7.857334136962891
    10. ' paint' → logprob: -8.35733413696289

Token 176: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.27260130643844604
    2. 'tracking' → logprob: -1.5226013660430908
    3. 't' → logprob: -4.147601127624512
    4. '_track' → logprob: -6.022601127624512
    5. 'tract' → logprob: -7.147601127624512
    6. '_' → logprob: -7.522601127624512
    7. '_tracking' → logprob: -8.022601127624512
    8. 'tr' → logprob: -8.147601127624512
    9. 'trace' → logprob: -9.022601127624512
    10. 'tracker' → logprob: -9.647601127624512

Token 177: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5762593746185303
    2. '(f' → logprob: -0.8262593746185303
    3. '_floor' → logprob: -8.57625961303711
    4. ' (' → logprob: -9.32625961303711
    5. '_' → logprob: -11.20125961303711
    6. '_(' → logprob: -11.70125961303711
    7. '(_' → logprob: -11.95125961303711
    8. '(F' → logprob: -12.57625961303711
    9. '(s' → logprob: -13.95125961303711
    10. '((' → logprob: -14.07625961303711

Token 178: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.0012486852938309312
    2. 'loo' → logprob: -7.751248836517334
    3. 'lo' → logprob: -8.126248359680176
    4. 'l' → logprob: -8.126248359680176
    5. '_' → logprob: -9.501248359680176
    6. '(' → logprob: -9.626248359680176
    7. 'oor' → logprob: -9.876248359680176
    8. 'loop' → logprob: -11.751248359680176
    9. 'loot' → logprob: -12.501248359680176
    10. 'loat' → logprob: -12.751248359680176

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9743012671824545e-05
    2. '):' → logprob: -11.250020027160645
    3. ' ,' → logprob: -12.000020027160645
    4. ',W' → logprob: -15.375020027160645
    5. '‌,' → logprob: -16.125019073486328
    6. ' ):' → logprob: -16.750019073486328
    7. '،' → logprob: -17.000019073486328
    8. ')' → logprob: -17.250019073486328
    9. ' ' → logprob: -17.875019073486328
    10. ',w' → logprob: -18.000019073486328

Token 180: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.5232386589050293
    2. ' W' → logprob: -0.8982386589050293
    3. ' ' → logprob: -10.273239135742188
    4. '   ' → logprob: -10.523239135742188
    5. '    ' → logprob: -11.773239135742188
    6. ')' → logprob: -12.023239135742188
    7. 'size' → logprob: -12.398239135742188
    8. '```' → logprob: -12.398239135742188
    9. '	W' → logprob: -12.648239135742188
    10. 'floor' → logprob: -12.773239135742188

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.360996485454962e-05
    2. ' ,' → logprob: -9.7500638961792
    3. ',H' → logprob: -12.2500638961792
    4. ',
' → logprob: -15.1250638961792
    5. '‌,' → logprob: -16.250062942504883
    6. ',

' → logprob: -17.125062942504883
    7. '<|end|>' → logprob: -17.625062942504883
    8. ',W' → logprob: -17.625062942504883
    9. ',h' → logprob: -18.500062942504883
    10. 'H' → logprob: -18.625062942504883

Token 182: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.10021087527275085
    2. ' H' → logprob: -2.3502109050750732
    3. ' ' → logprob: -12.975211143493652
    4. '   ' → logprob: -13.475211143493652
    5. ',H' → logprob: -15.975211143493652
    6. '    ' → logprob: -16.100210189819336
    7. '  ' → logprob: -16.225210189819336
    8. ',' → logprob: -16.350210189819336
    9. '       ' → logprob: -17.600210189819336
    10. '     ' → logprob: -17.725210189819336

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.574251918005757e-05
    2. '):' → logprob: -9.875055313110352
    3. ' ,' → logprob: -12.750055313110352
    4. ',size' → logprob: -14.125055313110352
    5. ')' → logprob: -15.625055313110352
    6. '‌,' → logprob: -16.25005531311035
    7. ',
' → logprob: -16.75005531311035
    8. ',int' → logprob: -17.25005531311035
    9. '   ' → logprob: -17.37505531311035
    10. ':' → logprob: -17.75005531311035

Token 184: ' count' (ID: 3605)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5807932615280151
    2. ' carpets' → logprob: -1.4557932615280151
    3. 'sizes' → logprob: -2.8307933807373047
    4. ' carpet' → logprob: -3.9557933807373047
    5. 'available' → logprob: -4.205793380737305
    6. ' remaining' → logprob: -4.455793380737305
    7. 'remaining' → logprob: -4.580793380737305
    8. ' used' → logprob: -4.580793380737305
    9. ' available' → logprob: -4.830793380737305
    10. ' sizes' → logprob: -4.955793380737305

Token 185: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0068866959773004055
    2. '):' → logprob: -5.3818864822387695
    3. ',' → logprob: -6.1318864822387695
    4. ')' → logprob: -10.88188648223877
    5. '_car' → logprob: -10.88188648223877
    6. '_s' → logprob: -11.00688648223877
    7. '_' → logprob: -11.38188648223877
    8. '_map' → logprob: -12.88188648223877
    9. '1' → logprob: -13.13188648223877
    10. 'S' → logprob: -13.25688648223877

Token 186: ' memo' (ID: 46393)
  Prédit: ' carpets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' carpets' → logprob: -0.1781357079744339
    2. 'car' → logprob: -3.428135633468628
    3. ' sizes' → logprob: -3.803135633468628
    4. ' max' → logprob: -4.053135871887207
    5. 'max' → logprob: -4.178135871887207
    6. ' used' → logprob: -4.303135871887207
    7. ' carpet' → logprob: -4.303135871887207
    8. ' remaining' → logprob: -4.553135871887207
    9. ' size' → logprob: -5.053135871887207
    10. 'sizes' → logprob: -5.428135871887207

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10030975192785263
    2. ',' → logprob: -2.3503098487854004
    3. ')' → logprob: -10.100309371948242
    4. '):
' → logprob: -10.225309371948242
    5. ' ):' → logprob: -11.225309371948242
    6. ':' → logprob: -12.100309371948242
    7. '=' → logprob: -13.475309371948242
    8. '):

' → logprob: -13.975309371948242
    9. '):
' → logprob: -14.350309371948242
    10. ' ' → logprob: -14.475309371948242

Token 188: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007868167012929916
    2. '   ' → logprob: -5.13286828994751
    3. ',' → logprob: -7.63286828994751
    4. '():' → logprob: -7.75786828994751
    5. '):' → logprob: -7.75786828994751
    6. ' :' → logprob: -8.507867813110352
    7. '(' → logprob: -8.757867813110352
    8. '<|end|>' → logprob: -9.382867813110352
    9. ':
' → logprob: -10.257867813110352
    10. ' ' → logprob: -10.882867813110352

Token 189: ' key' (ID: 2140)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42840927839279175
    2. ' if' → logprob: -2.0534093379974365
    3. ' ' → logprob: -2.8034093379974365
    4. 'x' → logprob: -3.1784093379974365
    5. ' x' → logprob: -3.6784093379974365
    6. 'if' → logprob: -3.8034093379974365
    7. ' key' → logprob: -3.9284093379974365
    8. '    ' → logprob: -4.178409099578857
    9. ' 
' → logprob: -4.678409099578857
    10. 'key' (adapté à ' key') → logprob: -5.053409099578857

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022194879129529
    2. '=' → logprob: -6.1272196769714355
    3. ',' → logprob: -10.627219200134277
    4. ' =
' → logprob: -12.627219200134277
    5. ' ' → logprob: -13.002219200134277
    6. ' =(' → logprob: -13.002219200134277
    7. ' =)' → logprob: -14.502219200134277
    8. ')' → logprob: -15.002219200134277
    9. '<|end|>' → logprob: -15.127219200134277
    10. ' ,' → logprob: -15.127219200134277

Token 191: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.04204593226313591
    2. '(tuple' → logprob: -3.917045831680298
    3. 'str' → logprob: -4.542046070098877
    4. ' tuple' → logprob: -4.792046070098877
    5. '(' → logprob: -6.667046070098877
    6. '(str' → logprob: -7.667046070098877
    7. 'repr' → logprob: -8.667045593261719
    8. 'fro' → logprob: -8.917045593261719
    9. 'hash' → logprob: -9.417045593261719
    10. ' (' → logprob: -9.542045593261719

Token 192: '(tuple' (ID: 133029)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2055351436138153
    2. '(tuple' → logprob: -1.7055351734161377
    3. '([' → logprob: -6.080534934997559
    4. '(sum' → logprob: -7.080534934997559
    5. '(f' → logprob: -7.455534934997559
    6. '(' → logprob: -7.955534934997559
    7. '(sorted' → logprob: -10.705534934997559
    8. '(item' → logprob: -12.205534934997559
    9. '(flat' → logprob: -12.330534934997559
    10. '(max' → logprob: -12.580534934997559

Token 193: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.3905788064002991
    2. 'row' → logprob: -1.1405787467956543
    3. ' row' → logprob: -5.640578746795654
    4. '	row' → logprob: -9.640579223632812
    5. '(f' → logprob: -9.765579223632812
    6. '(r' → logprob: -12.015579223632812
    7. '[row' → logprob: -12.140579223632812
    8. '=row' → logprob: -12.515579223632812
    9. ',row' → logprob: -13.015579223632812
    10. 'floor' → logprob: -13.390579223632812

Token 194: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.106736039626412e-05
    2. ' for' → logprob: -11.125031471252441
    3. ' )' → logprob: -11.500031471252441
    4. '(f' → logprob: -12.875031471252441
    5. 'for' → logprob: -13.250031471252441
    6. '   ' → logprob: -14.625031471252441
    7. '))' → logprob: -14.625031471252441
    8. ' ' → logprob: -15.000031471252441
    9. ')
' → logprob: -15.750031471252441
    10. 's' → logprob: -16.375030517578125

Token 195: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43384402990341187
    2. ')' → logprob: -1.0588440895080566
    3. 'for' → logprob: -5.308844089508057
    4. ' )' → logprob: -9.183843612670898
    5. ' ' → logprob: -9.933843612670898
    6. '()' → logprob: -11.683843612670898
    7. '(f' → logprob: -11.808843612670898
    8. ' in' → logprob: -12.933843612670898
    9. '	for' → logprob: -12.933843612670898
    10. '(' → logprob: -13.183843612670898

Token 196: ' row' (ID: 5225)
  Prédit: ' floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.10021842271089554
    2. 'floor' → logprob: -2.3502185344696045
    3. ' row' → logprob: -11.600218772888184
    4. 'row' → logprob: -13.350218772888184
    5. ' ' → logprob: -14.725218772888184
    6. '_floor' → logprob: -14.850218772888184
    7. 'f' → logprob: -16.350217819213867
    8. '-floor' → logprob: -17.100217819213867
    9. 'flo' → logprob: -17.225217819213867
    10. ' f' → logprob: -17.725217819213867

Token 197: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029292158782482147
    2. 'floor' → logprob: -4.404292106628418
    3. ' floor' → logprob: -4.404292106628418
    4. 'in' → logprob: -6.279292106628418
    5. ')' → logprob: -6.529292106628418
    6. '<|end|>' → logprob: -7.279292106628418
    7. '(f' → logprob: -9.154292106628418
    8. ' ' → logprob: -9.904292106628418
    9. '_floor' → logprob: -10.529292106628418
    10. '=f' → logprob: -10.529292106628418

Token 198: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.16022758185863495
    2. ' floor' → logprob: -1.9102275371551514
    3. 'f' → logprob: -13.41022777557373
    4. '_floor' → logprob: -14.41022777557373
    5. 'flo' → logprob: -14.53522777557373
    6. ' ' → logprob: -14.78522777557373
    7. '   ' → logprob: -16.410226821899414
    8. '.floor' → logprob: -16.535226821899414
    9. '-floor' → logprob: -16.535226821899414
    10. ')' → logprob: -17.035226821899414

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023750975378789008
    2. ' )' → logprob: -8.875237464904785
    3. ')
' → logprob: -9.375237464904785
    4. '),' → logprob: -11.500237464904785
    5. '   ' → logprob: -13.875237464904785
    6. ')
' → logprob: -14.875237464904785
    7. ' ' → logprob: -15.500237464904785
    8. ')#' → logprob: -15.625237464904785
    9. '):' → logprob: -15.750237464904785
    10. ')`' → logprob: -15.875237464904785

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3171278238296509
    2. '<|end|>' → logprob: -1.6921278238296509
    3. ':' → logprob: -1.8171278238296509
    4. ')' → logprob: -1.8171278238296509
    5. ' ' → logprob: -2.1921277046203613
    6. '
' → logprob: -2.5671277046203613
    7. '    
' → logprob: -4.817127704620361
    8. ' if' → logprob: -5.192127704620361
    9. '<|end|>' → logprob: -5.317127704620361
    10. ',' → logprob: -5.442127704620361

Token 201: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3676219582557678
    2. ' if' → logprob: -1.867621898651123
    3. ':' → logprob: -2.117621898651123
    4. ' ' → logprob: -4.242621898651123
    5. '<|end|>' → logprob: -4.867621898651123
    6. '
' → logprob: -5.617621898651123
    7. ')' → logprob: -5.992621898651123
    8. 'if' (adapté à ' if') → logprob: -6.367621898651123
    9. ':
' → logprob: -7.242621898651123
    10. '<|end|>' → logprob: -7.492621898651123

Token 202: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.026386216282844543
    2. 'key' → logprob: -3.651386260986328
    3. ' ' → logprob: -9.776386260986328
    4. ' count' → logprob: -11.026386260986328
    5. '(key' → logprob: -12.401386260986328
    6. 'count' → logprob: -13.276386260986328
    7. ' (' → logprob: -13.401386260986328
    8. ' floor' → logprob: -13.651386260986328
    9. 'Key' → logprob: -14.401386260986328
    10. '	key' → logprob: -14.401386260986328

Token 203: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006623127032071352
    2. ' ' → logprob: -5.506623268127441
    3. 'in' → logprob: -6.006623268127441
    4. ' not' → logprob: -9.756623268127441
    5. ')' → logprob: -11.506623268127441
    6. 'not' → logprob: -12.381623268127441
    7. '[' → logprob: -13.631623268127441
    8. '   ' → logprob: -14.131623268127441
    9. '	in' → logprob: -14.131623268127441
    10. ' ' → logprob: -14.631623268127441

Token 204: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.04859906807541847
    2. ' memo' → logprob: -3.0485990047454834
    3. 'm' → logprob: -11.798599243164062
    4. 'mem' → logprob: -13.673599243164062
    5. '
' → logprob: -13.673599243164062
    6. 'memory' → logprob: -14.048599243164062
    7. '.memo' → logprob: -14.923599243164062
    8. ' ' → logprob: -15.298599243164062
    9. ' memoir' → logprob: -15.923599243164062
    10. '   ' → logprob: -16.298599243164062

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001841536839492619
    2. ':return' → logprob: -7.1268415451049805
    3. ':
' → logprob: -7.2518415451049805
    4. ' :' → logprob: -8.12684154510498
    5. ' and' → logprob: -10.87684154510498
    6. '):' → logprob: -12.12684154510498
    7. 'and' → logprob: -13.50184154510498
    8. ' ' → logprob: -13.75184154510498
    9. '   ' → logprob: -14.00184154510498
    10. '=' → logprob: -14.00184154510498

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6381992697715759
    2. '   ' → logprob: -1.3881993293762207
    3. ':' → logprob: -1.7631993293762207
    4. ':return' → logprob: -3.6381993293762207
    5. ' return' → logprob: -4.013199329376221
    6. ':
' → logprob: -5.888199329376221
    7. '    ' → logprob: -6.638199329376221
    8. 'return' → logprob: -6.888199329376221
    9. ' ' → logprob: -7.763199329376221
    10. '	return' → logprob: -8.138198852539062

Token 207: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12786425650119781
    2. ' return' → logprob: -2.127864360809326
    3. '
' → logprob: -7.627864360809326
    4. '   ' → logprob: -8.252863883972168
    5. '       ' → logprob: -9.002863883972168
    6. '    
' → logprob: -10.752863883972168
    7. ':return' → logprob: -10.752863883972168
    8. '           ' → logprob: -11.377863883972168
    9. '	return' → logprob: -12.502863883972168
    10. '        
' → logprob: -13.127863883972168

Token 208: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.05885522812604904
    2. 'count' → logprob: -3.3088552951812744
    3. ' memo' → logprob: -4.308855056762695
    4. 'm' → logprob: -5.308855056762695
    5. ' count' → logprob: -7.183855056762695
    6. 'len' → logprob: -7.808855056762695
    7. '   ' → logprob: -8.058855056762695
    8. ' ' → logprob: -8.308855056762695
    9. 'mem' → logprob: -9.183855056762695
    10. 'key' → logprob: -9.433855056762695

Token 209: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -4.127333340875339e-06
    2. 'key' → logprob: -13.125003814697266
    3. '[' → logprob: -13.375003814697266
    4. '][' → logprob: -15.500003814697266
    5. ' [' → logprob: -16.000003814697266
    6. '[
' → logprob: -16.875003814697266
    7. '[k' → logprob: -16.875003814697266
    8. '[token' → logprob: -16.875003814697266
    9. ')[' → logprob: -17.125003814697266
    10. ' key' → logprob: -17.375003814697266

Token 210: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.32667669653892517
    2. ' <=' → logprob: -1.8266767263412476
    3. ']' → logprob: -2.826676607131958
    4. ' is' → logprob: -3.701676607131958
    5. ']<=' → logprob: -3.826676607131958
    6. '!=' → logprob: -5.451676845550537
    7. ']!=' → logprob: -6.201676845550537
    8. ')' → logprob: -6.826676845550537
    9. '!=-' → logprob: -6.951676845550537
    10. ' !=' → logprob: -7.201676845550537

Token 211: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.030339865013957024
    2. ' <=' → logprob: -3.5303399562835693
    3. '!=' → logprob: -8.155340194702148
    4. ' is' → logprob: -8.530340194702148
    5. '>=' → logprob: -10.405340194702148
    6. ']<=' → logprob: -10.405340194702148
    7. ')<=' → logprob: -11.530340194702148
    8. '[' → logprob: -11.530340194702148
    9. '!=-' → logprob: -11.655340194702148
    10. ' !=' → logprob: -11.905340194702148

Token 212: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.002497183158993721
    2. ' count' → logprob: -6.00249719619751
    3. 'sum' → logprob: -11.502496719360352
    4. 'len' → logprob: -12.627496719360352
    5. ' ' → logprob: -12.752496719360352
    6. '   ' → logprob: -13.877496719360352
    7. '
' → logprob: -14.002496719360352
    8. '0' → logprob: -14.002496719360352
    9. ' sum' → logprob: -15.252496719360352
    10. '<count' → logprob: -15.502496719360352

Token 213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013564391992986202
    2. ':
' → logprob: -4.388564586639404
    3. ':return' → logprob: -7.138564586639404
    4. ' :' → logprob: -8.513564109802246
    5. '   ' → logprob: -10.138564109802246
    6. ' :
' → logprob: -11.638564109802246
    7. '):' → logprob: -11.888564109802246
    8. '       ' → logprob: -13.763564109802246
    9. '):
' → logprob: -14.013564109802246
    10. ':

' → logprob: -14.763564109802246

Token 214: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006484199780970812
    2. ':' → logprob: -5.381484031677246
    3. ':
' → logprob: -7.006484031677246
    4. ':return' → logprob: -7.381484031677246
    5. '   ' → logprob: -8.381484031677246
    6. ' return' → logprob: -9.756484031677246
    7. '           ' → logprob: -10.631484031677246
    8. 'return' → logprob: -11.631484031677246
    9. ' :' → logprob: -12.506484031677246
    10. '	' → logprob: -13.506484031677246

Token 215: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022540686652064323
    2. 'return' (adapté à ' return') → logprob: -4.14754056930542
    3. ' return' → logprob: -5.27254056930542
    4. '           ' → logprob: -6.77254056930542
    5. '   ' → logprob: -8.522541046142578
    6. ':return' → logprob: -12.147541046142578
    7. '	return' → logprob: -13.397541046142578
    8. '
' → logprob: -13.397541046142578
    9. '               ' → logprob: -13.772541046142578
    10. ' ' → logprob: -14.397541046142578

Token 216: ' float' (ID: 4428)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.022779259830713272
    2. 'float' → logprob: -3.8977792263031006
    3. ' False' → logprob: -7.39777946472168
    4. 'None' → logprob: -7.52277946472168
    5. '-' → logprob: -7.77277946472168
    6. '999' → logprob: -8.39777946472168
    7. '
' → logprob: -9.02277946472168
    8. '100' → logprob: -9.52277946472168
    9. '   ' → logprob: -9.77277946472168
    10. '10' → logprob: -10.14777946472168

Token 217: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.07880651205778122
    2. 'inf' → logprob: -2.8288064002990723
    3. ''in' → logprob: -4.203806400299072
    4. ''' → logprob: -6.453806400299072
    5. ''ex' → logprob: -9.70380687713623
    6. ''op' → logprob: -10.70380687713623
    7. ''inc' → logprob: -11.07880687713623
    8. ''ins' → logprob: -11.32880687713623
    9. ''s' → logprob: -11.82880687713623
    10. ''end' → logprob: -12.20380687713623

Token 218: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.676981345459353e-06
    2. ''in' → logprob: -12.125005722045898
    3. ''' → logprob: -15.250005722045898
    4. '.inf' → logprob: -17.7500057220459
    5. '('' → logprob: -18.5000057220459
    6. 'in' → logprob: -18.6250057220459
    7. '-inf' → logprob: -18.6250057220459
    8. ''s' → logprob: -18.7500057220459
    9. '_inf' → logprob: -18.7500057220459
    10. 'info' → logprob: -19.0000057220459

Token 219: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3583676815032959
    2. ')
' → logprob: -1.233367681503296
    3. '   ' → logprob: -4.858367919921875
    4. '       ' → logprob: -6.983367919921875
    5. '')' → logprob: -7.483367919921875
    6. '')
' → logprob: -7.608367919921875
    7. ' )' → logprob: -9.858367919921875
    8. ' )
' → logprob: -9.983367919921875
    9. 'def' → logprob: -12.108367919921875
    10. ')
' → logprob: -12.483367919921875

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01957712322473526
    2. '    
' → logprob: -5.0195770263671875
    3. '       ' → logprob: -5.3945770263671875
    4. '\n' → logprob: -5.6445770263671875
    5. '
' → logprob: -5.8945770263671875
    6. ')' → logprob: -6.8945770263671875
    7. 'newline' → logprob: -8.019577026367188
    8. ',' → logprob: -9.769577026367188
    9. '  
' → logprob: -9.894577026367188
    10. '        
' → logprob: -10.019577026367188

Token 221: ' memo' (ID: 46393)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3722659647464752
    2. 'memo' (adapté à ' memo') → logprob: -1.7472659349441528
    3. ' memo' → logprob: -1.9972659349441528
    4. 'else' → logprob: -8.122265815734863
    5. 'mem' → logprob: -8.747265815734863
    6. ' else' → logprob: -9.247265815734863
    7. ' mem' → logprob: -9.497265815734863
    8. 'm' → logprob: -9.497265815734863
    9. '       ' → logprob: -9.747265815734863
    10. '
' → logprob: -9.872265815734863

Token 222: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0001652796781854704
    2. '[' → logprob: -8.750164985656738
    3. '\[' → logprob: -13.000164985656738
    4. '][' → logprob: -13.500164985656738
    5. ')[' → logprob: -13.500164985656738
    6. ' [' → logprob: -14.500164985656738
    7. '```' → logprob: -14.625164985656738
    8. '[k' → logprob: -15.250164985656738
    9. ' ' → logprob: -15.500164985656738
    10. '}[' → logprob: -16.875165939331055

Token 223: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002678920282050967
    2. ' ]' → logprob: -8.75026798248291
    3. ']=' → logprob: -9.25026798248291
    4. ')' → logprob: -12.00026798248291
    5. '=' → logprob: -12.25026798248291
    6. ' =' → logprob: -13.50026798248291
    7. ' ' → logprob: -14.75026798248291
    8. '   ' → logprob: -15.87526798248291
    9. ']
' → logprob: -15.87526798248291
    10. ')]' → logprob: -16.125267028808594

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020828247070312
    2. '=' → logprob: -2.350208282470703
    3. ' ' → logprob: -13.725208282470703
    4. ')' → logprob: -15.475208282470703
    5. ' =
' → logprob: -15.600208282470703
    6. ']' → logprob: -17.225208282470703
    7. ')=' → logprob: -17.350208282470703
    8. ' ' → logprob: -17.600208282470703
    9. '=
' → logprob: -17.600208282470703
    10. '   ' → logprob: -17.725208282470703

Token 225: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.676292231422849e-05
    2. ' count' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.625017166137695
    4. '	count' → logprob: -20.875017166137695
    5. ' ' → logprob: -21.125017166137695
    6. 'min' → logprob: -21.750017166137695
    7. '[count' → logprob: -21.875017166137695
    8. '<count' → logprob: -22.250017166137695
    9. '(count' → logprob: -22.625017166137695
    10. 'c' → logprob: -23.000017166137695

Token 226: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004299795720726252
    2. '    
' → logprob: -5.879299640655518
    3. '
' → logprob: -6.629299640655518
    4. ' if' → logprob: -9.629300117492676
    5. '<|end|>' → logprob: -10.254300117492676
    6. 'if' → logprob: -10.879300117492676
    7. '  
' → logprob: -11.129300117492676
    8. '        
' → logprob: -11.754300117492676
    9. '    
    
' → logprob: -12.004300117492676
    10. ',' → logprob: -12.129300117492676

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009500489104539156
    2. '    
' → logprob: -7.625949859619141
    3. 'x' → logprob: -8.50094985961914
    4. ' if' → logprob: -9.12594985961914
    5. '
' → logprob: -9.25094985961914
    6. 'if' → logprob: -10.12594985961914
    7. '```' → logprob: -12.62594985961914
    8. ' x' → logprob: -13.00094985961914
    9. ',' → logprob: -13.25094985961914
    10. '   ' → logprob: -13.62594985961914

Token 228: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.6989777088165283
    2. 'if' → logprob: -0.6989777088165283
    3. '   ' → logprob: -5.948977470397949
    4. 'first' → logprob: -6.323977470397949
    5. ' if' → logprob: -7.198977470397949
    6. 'scr' → logprob: -7.823977470397949
    7. 'pos' → logprob: -9.44897747039795
    8. '#' → logprob: -9.57397747039795
    9. ' x' → logprob: -10.07397747039795
    10. '    
' → logprob: -10.57397747039795

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020902375399600714
    2. ' ,' → logprob: -9.125208854675293
    3. ',y' → logprob: -9.250208854675293
    4. 'y' → logprob: -13.250208854675293
    5. '<|end|>' → logprob: -14.000208854675293
    6. ',
' → logprob: -14.250208854675293
    7. ' y' → logprob: -14.500208854675293
    8. '‌,' → logprob: -16.37520980834961
    9. '_,' → logprob: -16.75020980834961
    10. 'x' → logprob: -16.87520980834961

Token 230: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.25219249725341797
    2. 'y' → logprob: -1.502192497253418
    3. '<|end|>' → logprob: -8.252192497253418
    4. ' ' → logprob: -13.002192497253418
    5. '<|end|>' → logprob: -15.752192497253418
    6. '	y' → logprob: -16.127193450927734
    7. ' ' → logprob: -16.752193450927734
    8. ',y' → logprob: -17.002193450927734
    9. '    ' → logprob: -17.252193450927734
    10. ' 
' → logprob: -17.252193450927734

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11295030266046524
    2. '=' → logprob: -2.237950325012207
    3. ',' → logprob: -8.987950325012207
    4. ' ' → logprob: -13.862950325012207
    5. ' =
' → logprob: -14.737950325012207
    6. ')' → logprob: -14.862950325012207
    7. '<|end|>' → logprob: -14.987950325012207
    8. ' =
' → logprob: -15.362950325012207
    9. ' =)' → logprob: -15.737950325012207
    10. ' ,' → logprob: -16.11294937133789

Token 232: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.47407984733581543
    2. 'find' → logprob: -0.9740798473358154
    3. '=find' → logprob: -13.974080085754395
    4. '	find' → logprob: -14.099080085754395
    5. '(find' → logprob: -14.349080085754395
    6. '.find' → logprob: -15.099080085754395
    7. '
' → logprob: -15.849080085754395
    8. '_find' → logprob: -16.099079132080078
    9. ')find' → logprob: -16.474079132080078
    10. ' ' → logprob: -18.724079132080078

Token 233: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -1.3306015716807451e-05
    2. 'first' → logprob: -12.37501335144043
    3. '_f' → logprob: -13.37501335144043
    4. '```' → logprob: -13.37501335144043
    5. ' _' → logprob: -13.50001335144043
    6. ''_' → logprob: -13.62501335144043
    7. '_' → logprob: -14.12501335144043
    8. 'First' → logprob: -14.12501335144043
    9. '_FIRST' → logprob: -14.62501335144043
    10. '_second' → logprob: -15.37501335144043

Token 234: '_scr' (ID: 148844)
  Prédit: '_scr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scr' → logprob: -0.0007117166533134878
    2. 'scr' → logprob: -7.500711917877197
    3. '_s' → logprob: -9.500711441040039
    4. '(scr' → logprob: -10.125711441040039
    5. '_sc' → logprob: -11.500711441040039
    6. 'Scr' → logprob: -11.625711441040039
    7. '_' → logprob: -11.875711441040039
    8. '(x' → logprob: -13.125711441040039
    9. '```' → logprob: -13.250711441040039
    10. '(' → logprob: -13.375711441040039

Token 235: 'atched' (ID: 44560)
  Prédit: 'atched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atched' → logprob: -0.0006957544246688485
    2. 'at' → logprob: -8.500696182250977
    3. 'atch' → logprob: -8.500696182250977
    4. 'athed' → logprob: -8.500696182250977
    5. 'ached' → logprob: -10.625696182250977
    6. 'atche' → logprob: -11.000696182250977
    7. 'atches' → logprob: -11.500696182250977
    8. 'ath' → logprob: -11.625696182250977
    9. 'atching' → logprob: -13.000696182250977
    10. 'etched' → logprob: -13.125696182250977

Token 236: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -5.12127808178775e-05
    2. '(' → logprob: -10.000051498413086
    3. ' (' → logprob: -13.000051498413086
    4. 'floor' → logprob: -13.750051498413086
    5. '(
' → logprob: -13.875051498413086
    6. '_floor' → logprob: -14.250051498413086
    7. '(F' → logprob: -15.125051498413086
    8. ' floor' → logprob: -15.250051498413086
    9. ' ' → logprob: -16.625051498413086
    10. '```' → logprob: -16.875051498413086

Token 237: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.02012452483177185
    2. 'oor' → logprob: -4.020124435424805
    3. 'or' → logprob: -7.145124435424805
    4. 'lo' → logprob: -7.895124435424805
    5. 'loo' → logprob: -8.020124435424805
    6. 'floor' → logprob: -8.395124435424805
    7. 'l' → logprob: -9.645124435424805
    8. 'loop' → logprob: -10.395124435424805
    9. 'loat' → logprob: -10.645124435424805
    10. 'o' → logprob: -10.895124435424805

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003510741807986051
    2. ' ,' → logprob: -8.625350952148438
    3. ',f' → logprob: -9.125350952148438
    4. ')' → logprob: -9.750350952148438
    5. ',
' → logprob: -14.000350952148438
    6. 'floor' → logprob: -14.125350952148438
    7. ' floor' → logprob: -14.750350952148438
    8. '),' → logprob: -14.875350952148438
    9. ',W' → logprob: -14.875350952148438
    10. ',x' → logprob: -15.375350952148438

Token 239: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.018150178715586662
    2. ' W' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.268150329589844
    4. '	W' → logprob: -17.143150329589844
    5. ',W' → logprob: -17.518150329589844
    6. ' ' → logprob: -18.393150329589844
    7. ')' → logprob: -18.518150329589844
    8. '<W' → logprob: -18.643150329589844
    9. '```' → logprob: -19.143150329589844
    10. '=W' → logprob: -19.268150329589844

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038872790173627436
    2. ',y' → logprob: -8.250389099121094
    3. ' ,' → logprob: -9.125389099121094
    4. ',H' → logprob: -11.000389099121094
    5. ')' → logprob: -14.375389099121094
    6. ',Y' → logprob: -15.000389099121094
    7. ',
' → logprob: -15.250389099121094
    8. '   ' → logprob: -15.500389099121094
    9. ',W' → logprob: -15.875389099121094
    10. 'y' → logprob: -16.000389099121094

Token 241: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.038042180240154266
    2. ' H' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.538042068481445
    4. '   ' → logprob: -16.038042068481445
    5. 'y' → logprob: -16.413042068481445
    6. ' y' → logprob: -17.163042068481445
    7. ')' → logprob: -17.788042068481445
    8. '
' → logprob: -18.038042068481445
    9. ',' → logprob: -18.288042068481445
    10. '  ' → logprob: -18.288042068481445

Token 242: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038044363260269165
    2. ')
' → logprob: -3.2880444526672363
    3. ')
' → logprob: -13.288043975830078
    4. ')

' → logprob: -14.163043975830078
    5. ' )' → logprob: -15.538043975830078
    6. '   ' → logprob: -16.163043975830078
    7. ')`' → logprob: -16.663043975830078
    8. '))' → logprob: -17.413043975830078
    9. ' )
' → logprob: -17.413043975830078
    10. '):
' → logprob: -17.413043975830078

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006404805462807417
    2. ' if' → logprob: -8.375640869140625
    3. '<|end|>' → logprob: -8.750640869140625
    4. '    
' → logprob: -9.250640869140625
    5. '
' → logprob: -9.500640869140625
    6. 'if' → logprob: -10.750640869140625
    7. '```' → logprob: -11.125640869140625
    8. '  
' → logprob: -11.250640869140625
    9. '<|end|>' → logprob: -11.750640869140625
    10. ',' → logprob: -12.500640869140625

Token 244: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037086792290210724
    2. 'if' (adapté à ' if') → logprob: -3.7870867252349854
    3. ' if' → logprob: -4.2870869636535645
    4. 'If' → logprob: -14.662086486816406
    5. '  ' → logprob: -16.037086486816406
    6. ' ' → logprob: -16.162086486816406
    7. '    
' → logprob: -16.537086486816406
    8. '	if' → logprob: -16.537086486816406
    9. ',' → logprob: -16.787086486816406
    10. '   ' → logprob: -17.037086486816406

Token 245: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5759576559066772
    2. 'x' → logprob: -0.8259576559066772
    3. ' (' → logprob: -11.950957298278809
    4. '(x' → logprob: -12.075957298278809
    5. ' ' → logprob: -12.325957298278809
    6. ' ' → logprob: -13.950957298278809
    7. '(' → logprob: -14.700957298278809
    8. '   ' → logprob: -15.450957298278809
    9. '	x' → logprob: -16.450958251953125
    10. '_x' → logprob: -17.575958251953125

Token 246: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6206710338592529
    2. '==' → logprob: -1.245671033859253
    3. '==-' → logprob: -1.745671033859253
    4. '=' → logprob: -9.995671272277832
    5. '==
' → logprob: -10.495671272277832
    6. '<' → logprob: -10.745671272277832
    7. ')' → logprob: -10.870671272277832
    8. ')==' → logprob: -11.870671272277832
    9. ']==' → logprob: -12.495671272277832
    10. ' ' → logprob: -12.620671272277832

Token 247: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007099286303855479
    2. ' -' → logprob: -7.2507100105285645
    3. '−' → logprob: -19.750709533691406
    4. ' ' → logprob: -20.125709533691406
    5. '
' → logprob: -20.750709533691406
    6. '   ' → logprob: -20.875709533691406
    7. '-
' → logprob: -21.750709533691406
    8. '  ' → logprob: -22.375709533691406
    9. '(-' → logprob: -22.500709533691406
    10. '```' → logprob: -22.750709533691406

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.125003814697266
    3. ',' → logprob: -13.875003814697266
    4. '<|end|>' → logprob: -15.812503814697266
    5. '   ' → logprob: -16.562503814697266
    6. '```' → logprob: -16.875003814697266
    7. '
' → logprob: -17.187503814697266
    8. '

' → logprob: -17.437503814697266
    9. '`' → logprob: -17.625003814697266
    10. '...' → logprob: -17.875003814697266

Token 249: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11440181732177734
    2. ':
' → logprob: -2.2394018173217773
    3. ':return' → logprob: -6.739401817321777
    4. ' and' → logprob: -8.364401817321777
    5. '   ' → logprob: -9.239401817321777
    6. ' or' → logprob: -10.614401817321777
    7. '       ' → logprob: -11.364401817321777
    8. ' :' → logprob: -11.489401817321777
    9. ' :
' → logprob: -12.239401817321777
    10. ',' → logprob: -12.239401817321777

Token 250: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31326186656951904
    2. ' y' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.813261032104492
    4. '   ' → logprob: -17.188261032104492
    5. '	y' → logprob: -18.063261032104492
    6. '  ' → logprob: -18.438261032104492
    7. '
' → logprob: -18.438261032104492
    8. '    ' → logprob: -18.563261032104492
    9. ' ' → logprob: -19.938261032104492
    10. ',' → logprob: -19.938261032104492

Token 251: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06460680067539215
    2. '==' → logprob: -2.8146069049835205
    3. '==-' → logprob: -5.939606666564941
    4. '<|end|>' → logprob: -14.064606666564941
    5. ')==' → logprob: -14.439606666564941
    6. ']==' → logprob: -14.939606666564941
    7. '==
' → logprob: -15.064606666564941
    8. '<|end|>' → logprob: -15.689606666564941
    9. ' ' → logprob: -16.064607620239258
    10. ' ' → logprob: -16.314607620239258

Token 252: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031777136027812958
    2. ' -' → logprob: -5.753177642822266
    3. ' ' → logprob: -19.503177642822266
    4. '
' → logprob: -20.628177642822266
    5. '   ' → logprob: -21.128177642822266
    6. '−' → logprob: -21.128177642822266
    7. '-
' → logprob: -21.628177642822266
    8. '1' → logprob: -22.128177642822266
    9. '  ' → logprob: -22.878177642822266
    10. '<|end|>' → logprob: -22.878177642822266

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '-' → logprob: -13.75000286102295
    3. ' ' → logprob: -13.75000286102295
    4. '```' → logprob: -16.375001907348633
    5. ' -' → logprob: -16.937501907348633
    6. '   ' → logprob: -17.187501907348633
    7. '
' → logprob: -17.937501907348633
    8. '

' → logprob: -18.062501907348633
    9. ',' → logprob: -18.125001907348633
    10. 'def' → logprob: -19.000001907348633

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4744640588760376
    2. ':
' → logprob: -0.9744640588760376
    3. ':return' → logprob: -8.099464416503906
    4. '   ' → logprob: -9.974464416503906
    5. '       ' → logprob: -10.849464416503906
    6. ' :
' → logprob: -11.724464416503906
    7. '):
' → logprob: -12.724464416503906
    8. ':
' → logprob: -12.849464416503906
    9. ' :' → logprob: -13.099464416503906
    10. ':

' → logprob: -14.474464416503906

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017221784219145775
    2. '   ' → logprob: -4.267221927642822
    3. 'return' → logprob: -6.017221927642822
    4. ' return' → logprob: -7.392221927642822
    5. '
' → logprob: -14.642221450805664
    6. '	return' → logprob: -15.142221450805664
    7. '{return' → logprob: -16.017221450805664
    8. ':return' → logprob: -16.267221450805664
    9. ' ' → logprob: -16.642221450805664
    10. '           ' → logprob: -16.767221450805664

Token 256: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12938562035560608
    2. ' return' → logprob: -2.1293857097625732
    3. '   ' → logprob: -6.129385471343994
    4. '       ' → logprob: -8.379385948181152
    5. '
' → logprob: -10.004385948181152
    6. ' ' → logprob: -14.129385948181152
    7. '	return' → logprob: -14.254385948181152
    8. ':return' → logprob: -15.254385948181152
    9. '{return' → logprob: -16.504384994506836
    10. '           ' → logprob: -16.504384994506836

Token 257: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.547789674485102e-05
    2. ' count' → logprob: -10.250035285949707
    3. '0' → logprob: -17.500036239624023
    4. '   ' → logprob: -19.000036239624023
    5. ' ' → logprob: -19.250036239624023
    6. '	count' → logprob: -20.375036239624023
    7. 'cou' → logprob: -20.625036239624023
    8. '[count' → logprob: -21.625036239624023
    9. 'counts' → logprob: -21.625036239624023
    10. '(count' → logprob: -21.750036239624023

Token 258: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23596465587615967
    2. '
' → logprob: -2.735964775085449
    3. ' min' → logprob: -2.735964775085449
    4. '    
' → logprob: -3.235964775085449
    5. 'min' → logprob: -3.485964775085449
    6. 'sizes' → logprob: -6.360964775085449
    7. ' sizes' → logprob: -6.485964775085449
    8. 'max' → logprob: -6.735964775085449
    9. ' max' → logprob: -6.735964775085449
    10. ' for' → logprob: -6.985964775085449

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7814038395881653
    2. ' min' → logprob: -1.2814037799835205
    3. 'min' → logprob: -1.4064037799835205
    4. ' result' → logprob: -4.9064040184021
    5. 'result' → logprob: -5.4064040184021
    6. 'max' → logprob: -6.9064040184021
    7. ' best' → logprob: -7.0314040184021
    8. '
' → logprob: -7.0314040184021
    9. ' res' → logprob: -7.4064040184021
    10. 'best' → logprob: -7.4064040184021

Token 260: ' res' (ID: 694)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.26754000782966614
    2. 'res' (adapté à ' res') → logprob: -1.5175399780273438
    3. 'result' → logprob: -4.517539978027344
    4. ' min' → logprob: -6.642539978027344
    5. ' res' → logprob: -6.642539978027344
    6. 'best' → logprob: -7.517539978027344
    7. '   ' → logprob: -7.767539978027344
    8. 'ans' → logprob: -7.767539978027344
    9. 'max' → logprob: -8.017539978027344
    10. 'answer' → logprob: -8.642539978027344

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018152866512537003
    2. '=' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.143153190612793
    4. ',' → logprob: -14.893153190612793
    5. ' ' → logprob: -15.768153190612793
    6. '  ' → logprob: -15.768153190612793
    7. '_' → logprob: -15.893153190612793
    8. '   ' → logprob: -16.393152236938477
    9. ' =
' → logprob: -16.518152236938477
    10. 's' → logprob: -17.018152236938477

Token 262: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0009118211455643177
    2. ' float' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.000911712646484
    4. '	float' → logprob: -17.375911712646484
    5. ',float' → logprob: -18.750911712646484
    6. '10' → logprob: -18.750911712646484
    7. '=float' → logprob: -19.000911712646484
    8. 'int' → logprob: -19.125911712646484
    9. '<float' → logprob: -19.125911712646484
    10. 'flo' → logprob: -19.250911712646484

Token 263: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.1279553291387856e-05
    2. ''in' → logprob: -11.625011444091797
    3. '('-' → logprob: -13.625011444091797
    4. '("' → logprob: -14.375011444091797
    5. ''s' → logprob: -16.625011444091797
    6. ''' → logprob: -16.750011444091797
    7. ''inc' → logprob: -16.750011444091797
    8. '(' → logprob: -16.875011444091797
    9. 'inf' → logprob: -16.875011444091797
    10. '(in' → logprob: -17.375011444091797

Token 264: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ''' → logprob: -18.875
    3. 'in' → logprob: -20.25
    4. 'max' → logprob: -21.0
    5. '``' → logprob: -21.25
    6. '
' → logprob: -21.375
    7. ' inf' → logprob: -21.625
    8. '')' → logprob: -21.625
    9. '```' → logprob: -21.75
    10. '.inf' → logprob: -22.375

Token 265: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008839575573801994
    2. ')
' → logprob: -4.7588396072387695
    3. ' )' → logprob: -8.63383960723877
    4. '   ' → logprob: -10.38383960723877
    5. ' )
' → logprob: -11.25883960723877
    6. ')

' → logprob: -14.38383960723877
    7. '
' → logprob: -14.63383960723877
    8. '')' → logprob: -14.75883960723877
    9. ')
' → logprob: -14.75883960723877
    10. ' ' → logprob: -15.00883960723877

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005788600537925959
    2. ' for' → logprob: -5.630788803100586
    3. 'for' → logprob: -6.130788803100586
    4. '    
' → logprob: -12.005788803100586
    5. '	for' → logprob: -13.630788803100586
    6. '
' → logprob: -13.755788803100586
    7. '<|end|>' → logprob: -13.880788803100586
    8. ',' → logprob: -14.255788803100586
    9. ' ' → logprob: -14.505788803100586
    10. ')' → logprob: -14.880788803100586

Token 267: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005360872019082308
    2. ' for' → logprob: -5.255361080169678
    3. '   ' → logprob: -9.00536060333252
    4. '
' → logprob: -12.63036060333252
    5. '  ' → logprob: -15.38036060333252
    6. '	for' → logprob: -15.50536060333252
    7. 'sizes' → logprob: -15.63036060333252
    8. ' ' → logprob: -15.75536060333252
    9. 'size' → logprob: -15.75536060333252
    10. '    
' → logprob: -15.75536060333252

Token 268: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.0005151443183422089
    2. '_' → logprob: -7.625514984130859
    3. 'size' → logprob: -11.25051498413086
    4. '_car' → logprob: -11.37551498413086
    5. '_s' → logprob: -14.00051498413086
    6. '_possible' → logprob: -15.37551498413086
    7. '_len' → logprob: -15.50051498413086
    8. ' size' → logprob: -15.50051498413086
    9. 'Size' → logprob: -15.75051498413086
    10. '_sizes' → logprob: -15.87551498413086

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043001025915145874
    2. '=' → logprob: -3.1680009365081787
    3. '<|end|>' → logprob: -13.793001174926758
    4. 's' → logprob: -14.668001174926758
    5. 'for' → logprob: -16.168001174926758
    6. ' ' → logprob: -16.293001174926758
    7. ',' → logprob: -16.668001174926758
    8. '=int' → logprob: -17.543001174926758
    9. ')' → logprob: -17.668001174926758
    10. '_=' → logprob: -17.918001174926758

Token 270: ' min' (ID: 1349)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.1806603968143463
    2. 'min' → logprob: -1.805660367012024
    3. ' min' → logprob: -7.305660247802734
    4. 'max' → logprob: -9.680660247802734
    5. '10' → logprob: -10.055660247802734
    6. '7' → logprob: -10.430660247802734
    7. ' ' → logprob: -10.680660247802734
    8. '6' → logprob: -11.055660247802734
    9. '
' → logprob: -11.555660247802734
    10. '   ' → logprob: -11.930660247802734

Token 271: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0028164091054350138
    2. '(' → logprob: -5.877816200256348
    3. '(
' → logprob: -12.252816200256348
    4. '((' → logprob: -12.627816200256348
    5. '(H' → logprob: -12.752816200256348
    6. '(w' → logprob: -15.752816200256348
    7. '(len' → logprob: -16.377817153930664
    8. '([' → logprob: -16.752817153930664
    9. '()' → logprob: -16.877817153930664
    10. '(

' → logprob: -17.127817153930664

Token 272: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13273997604846954
    2. ',' → logprob: -2.257740020751953
    3. '-' → logprob: -4.132740020751953
    4. ' ,' → logprob: -6.382740020751953
    5. '[y' → logprob: -6.507740020751953
    6. ',y' → logprob: -7.882740020751953
    7. '-y' → logprob: -9.882740020751953
    8. '[' → logprob: -10.382740020751953
    9. ' y' → logprob: -11.382740020751953
    10. '   ' → logprob: -11.632740020751953

Token 273: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.038043100386857986
    2. ' x' → logprob: -3.2880430221557617
    3. 'y' → logprob: -14.413043022155762
    4. ' y' → logprob: -14.663043022155762
    5. '	x' → logprob: -15.538043022155762
    6. ' ' → logprob: -16.038043975830078
    7. ')x' → logprob: -16.413043975830078
    8. '_x' → logprob: -16.538043975830078
    9. '   ' → logprob: -16.788043975830078
    10. '(x' → logprob: -17.288043975830078

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004342453321442008
    2. ' ,' → logprob: -7.750434398651123
    3. ',H' → logprob: -13.250433921813965
    4. ',
' → logprob: -13.750433921813965
    5. ',y' → logprob: -14.875433921813965
    6. ',W' → logprob: -15.500433921813965
    7. ')' → logprob: -18.37543487548828
    8. ',

' → logprob: -18.37543487548828
    9. ',Y' → logprob: -18.50043487548828
    10. '   ' → logprob: -18.75043487548828

Token 275: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06197967752814293
    2. ' H' → logprob: -2.8119797706604004
    3. '   ' → logprob: -11.436979293823242
    4. ' ' → logprob: -14.561979293823242
    5. '5' → logprob: -15.311979293823242
    6. '	H' → logprob: -15.936979293823242
    7. '  ' → logprob: -16.311979293823242
    8. ',H' → logprob: -16.436979293823242
    9. '    ' → logprob: -16.686979293823242
    10. '10' → logprob: -16.936979293823242

Token 276: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00103352265432477
    2. '-' → logprob: -6.876033306121826
    3. ' ' → logprob: -14.126033782958984
    4. ' ' → logprob: -18.376033782958984
    5. '[' → logprob: -18.751033782958984
    6. ')' → logprob: -19.376033782958984
    7. '   ' → logprob: -19.626033782958984
    8. ' -
' → logprob: -19.876033782958984
    9. ',' → logprob: -20.126033782958984
    10. '<|end|>' → logprob: -20.376033782958984

Token 277: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.061967913061380386
    2. ' y' → logprob: -2.8119678497314453
    3. '	y' → logprob: -16.311967849731445
    4. ' ' → logprob: -16.561967849731445
    5. '   ' → logprob: -16.811967849731445
    6. '(y' → logprob: -17.311967849731445
    7. '
' → logprob: -17.311967849731445
    8. ',y' → logprob: -18.561967849731445
    9. '  ' → logprob: -18.811967849731445
    10. '_y' → logprob: -19.061967849731445

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041780024766922
    2. ',' → logprob: -5.629178047180176
    3. ')
' → logprob: -7.754178047180176
    4. ' )' → logprob: -8.879178047180176
    5. ' ,' → logprob: -12.504178047180176
    6. '   ' → logprob: -13.004178047180176
    7. ')+' → logprob: -13.754178047180176
    8. ' ' → logprob: -14.379178047180176
    9. '),' → logprob: -14.754178047180176
    10. '+' → logprob: -15.004178047180176

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5611560940742493
    2. ' for' → logprob: -0.9361560940742493
    3. 'for' → logprob: -4.811156272888184
    4. '
' → logprob: -4.936156272888184
    5. '    
' → logprob: -5.186156272888184
    6. '<|end|>' → logprob: -5.311156272888184
    7. ' ' → logprob: -5.561156272888184
    8. '  
' → logprob: -6.061156272888184
    9. ',' → logprob: -6.561156272888184
    10. ' 
' → logprob: -6.686156272888184

Token 280: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3138206899166107
    2. 'for' → logprob: -1.313820719718933
    3. '   ' → logprob: -7.563820838928223
    4. ' ' → logprob: -10.313820838928223
    5. '  ' → logprob: -13.188820838928223
    6. '
' → logprob: -13.313820838928223
    7. '	for' → logprob: -14.063820838928223
    8. '    
' → logprob: -14.313820838928223
    9. ',' → logprob: -14.563820838928223
    10. ' 
' → logprob: -15.063820838928223

Token 281: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04860372841358185
    2. ' for' → logprob: -3.0486037731170654
    3. '   ' → logprob: -11.048604011535645
    4. ' ' → logprob: -15.048604011535645
    5. '
' → logprob: -16.548603057861328
    6. 'or' → logprob: -16.798603057861328
    7. '  ' → logprob: -17.298603057861328
    8. '	for' → logprob: -17.423603057861328
    9. 'size' → logprob: -18.298603057861328
    10. '```' → logprob: -18.673603057861328

Token 282: ' placing' (ID: 33268)
  Prédit: ' sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sizes' → logprob: -0.5185405611991882
    2. 'sizes' → logprob: -1.393540620803833
    3. ' size' → logprob: -2.268540620803833
    4. ' for' → logprob: -3.393540620803833
    5. 'size' → logprob: -4.143540382385254
    6. ' all' → logprob: -6.643540382385254
    7. 'for' → logprob: -7.268540382385254
    8. '   ' → logprob: -7.518540382385254
    9. '_sizes' → logprob: -8.143540382385254
    10. ' to' → logprob: -8.768540382385254

Token 283: ' largest' (ID: 10574)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.7948947548866272
    2. ' size' → logprob: -1.4198946952819824
    3. 'sizes' → logprob: -2.1698946952819824
    4. ' for' → logprob: -2.6698946952819824
    5. 'for' → logprob: -2.9198946952819824
    6. ' sizes' → logprob: -3.2948946952819824
    7. 'car' → logprob: -4.294894695281982
    8. ' carpets' → logprob: -4.794894695281982
    9. ' the' → logprob: -5.669894695281982
    10. ' carpet' → logprob: -6.544894695281982

Token 284: ' possible' (ID: 4149)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.605597734451294
    2. ' size' → logprob: -1.105597734451294
    3. 'car' → logprob: -2.355597734451294
    4. ' carpet' → logprob: -3.980597734451294
    5. ' possible' → logprob: -5.605597496032715
    6. 'possible' → logprob: -6.230597496032715
    7. '_size' → logprob: -6.730597496032715
    8. 's' → logprob: -8.105597496032715
    9. ' to' → logprob: -8.230597496032715
    10. ' carpets' → logprob: -8.230597496032715

Token 285: ' carpet' (ID: 32787)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.8399364948272705
    2. ' size' → logprob: -1.3399364948272705
    3. 'car' → logprob: -1.5899364948272705
    4. ' carpet' → logprob: -2.3399364948272705
    5. 'for' → logprob: -6.464936256408691
    6. 's' → logprob: -6.964936256408691
    7. ' for' → logprob: -7.089936256408691
    8. 'sizes' → logprob: -7.214936256408691
    9. ' carpets' → logprob: -7.214936256408691
    10. '_size' → logprob: -8.214936256408691

Token 286: ' first' (ID: 1577)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13743506371974945
    2. 'for' → logprob: -2.512434959411621
    3. '   ' → logprob: -3.637434959411621
    4. 'size' → logprob: -5.012434959411621
    5. ',' → logprob: -5.762434959411621
    6. '
' → logprob: -6.137434959411621
    7. 's' → logprob: -6.137434959411621
    8. ' size' → logprob: -6.387434959411621
    9. ' ' → logprob: -6.637434959411621
    10. 'sizes' → logprob: -7.637434959411621

Token 287: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44853824377059937
    2. ' for' → logprob: -1.0735383033752441
    3. 'for' → logprob: -3.948538303375244
    4. '
' → logprob: -8.698537826538086
    5. ',' → logprob: -9.448537826538086
    6. '    
' → logprob: -10.073537826538086
    7. '<|end|>' → logprob: -10.573537826538086
    8. ' ' → logprob: -11.198537826538086
    9. '	for' → logprob: -11.823537826538086
    10. '  ' → logprob: -12.323537826538086

Token 288: ' reduce' (ID: 10389)
  Prédit: ' cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cover' → logprob: -0.6314231157302856
    2. '   ' → logprob: -2.381422996520996
    3. 'cover' → logprob: -2.506422996520996
    4. ' range' → logprob: -3.006422996520996
    5. 'range' → logprob: -3.006422996520996
    6. 'max' → logprob: -3.256422996520996
    7. 'maximize' → logprob: -3.631422996520996
    8. 'for' → logprob: -4.006422996520996
    9. ' maximize' → logprob: -4.006422996520996
    10. ' for' → logprob: -4.131422996520996

Token 289: ' carpets' (ID: 93343)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.04404986649751663
    2. ' res' → logprob: -3.5440499782562256
    3. '   ' → logprob: -4.7940497398376465
    4. ' the' → logprob: -6.4190497398376465
    5. 'the' → logprob: -6.6690497398376465
    6. 'def' → logprob: -7.0440497398376465
    7. '
' → logprob: -8.294050216674805
    8. ' recursion' → logprob: -8.419050216674805
    9. ' back' → logprob: -8.544050216674805
    10. 'for' → logprob: -8.669050216674805

Token 290: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19056494534015656
    2. ' for' → logprob: -2.0655648708343506
    3. 'for' → logprob: -3.8155648708343506
    4. '
' → logprob: -4.69056510925293
    5. ',' → logprob: -5.31556510925293
    6. '<|end|>' → logprob: -5.56556510925293
    7. '    
' → logprob: -6.44056510925293
    8. '<|end|>' → logprob: -6.81556510925293
    9. '.' → logprob: -7.56556510925293
    10. 's' → logprob: -7.69056510925293

Token 291: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02889523282647133
    2. ' for' → logprob: -3.653895139694214
    3. '
' → logprob: -6.278895378112793
    4. 'for' → logprob: -7.903895378112793
    5. '    
' → logprob: -8.403895378112793
    6. ',' → logprob: -9.778895378112793
    7. ':' → logprob: -11.028895378112793
    8. ' 
' → logprob: -11.403895378112793
    9. '	for' → logprob: -11.653895378112793
    10. '  
' → logprob: -11.653895378112793

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4416836202144623
    2. ' for' → logprob: -1.0666836500167847
    3. 'for' → logprob: -4.816683769226074
    4. '
' → logprob: -5.566683769226074
    5. '    
' → logprob: -7.441683769226074
    6. ' ' → logprob: -9.316683769226074
    7. ' 
' → logprob: -9.316683769226074
    8. ',' → logprob: -9.691683769226074
    9. '  
' → logprob: -9.816683769226074
    10. '	for' → logprob: -10.816683769226074

Token 293: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4411625266075134
    2. 'for' (adapté à ' for') → logprob: -1.1911625862121582
    3. '   ' → logprob: -2.941162586212158
    4. ' ' → logprob: -11.191162109375
    5. '    
' → logprob: -11.816162109375
    6. '	for' → logprob: -12.316162109375
    7. ',' → logprob: -12.566162109375
    8. '
' → logprob: -12.816162109375
    9. ')' → logprob: -13.191162109375
    10. '  ' → logprob: -13.566162109375

Token 294: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.12695005536079407
    2. 'size' → logprob: -2.1269500255584717
    3. ' sz' → logprob: -12.12695026397705
    4. ' ' → logprob: -12.75195026397705
    5. '   ' → logprob: -13.12695026397705
    6. 's' → logprob: -13.25195026397705
    7. '	size' → logprob: -13.37695026397705
    8. '(size' → logprob: -13.50195026397705
    9. ' s' → logprob: -13.62695026397705
    10. 'sz' → logprob: -13.87695026397705

Token 295: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012543084099888802
    2. 'in' → logprob: -4.387543201446533
    3. ' ' → logprob: -10.637542724609375
    4. '	in' → logprob: -13.012542724609375
    5. 'size' → logprob: -13.387542724609375
    6. '   ' → logprob: -13.637542724609375
    7. 's' → logprob: -14.137542724609375
    8. '```' → logprob: -14.512542724609375
    9. '_in' → logprob: -14.887542724609375
    10. '  ' → logprob: -15.137542724609375

Token 296: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14316421747207642
    2. ' range' → logprob: -2.0181641578674316
    3. ' reversed' → logprob: -7.893164157867432
    4. 're' → logprob: -9.26816463470459
    5. 'reverse' → logprob: -11.14316463470459
    6. ' ' → logprob: -13.01816463470459
    7. '[' → logprob: -13.51816463470459
    8. '   ' → logprob: -14.39316463470459
    9. ' reverse' → logprob: -14.51816463470459
    10. '  ' → logprob: -14.64316463470459

Token 297: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.001010184409096837
    2. 'range' → logprob: -7.001010417938232
    3. '(' → logprob: -9.251009941101074
    4. ' range' → logprob: -13.376009941101074
    5. ' (' → logprob: -14.001009941101074
    6. '([' → logprob: -15.876009941101074
    7. '((' → logprob: -16.87601089477539
    8. '	range' → logprob: -17.12601089477539
    9. ')' → logprob: -18.50101089477539
    10. '(r' → logprob: -18.50101089477539

Token 298: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.45848218582978e-06
    2. '1' → logprob: -13.00000286102295
    3. ' (' → logprob: -16.375001907348633
    4. '(
' → logprob: -19.375001907348633
    5. ',' → logprob: -19.750001907348633
    6. ')' → logprob: -20.375001907348633
    7. '```' → logprob: -21.000001907348633
    8. '   ' → logprob: -21.125001907348633
    9. '[' → logprob: -21.250001907348633
    10. 'def' → logprob: -21.375001907348633

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132764399051666
    2. '(' → logprob: -1.3132764101028442
    3. '   ' → logprob: -12.188276290893555
    4. ' ' → logprob: -12.563276290893555
    5. ')' → logprob: -12.938276290893555
    6. ' (' → logprob: -14.063276290893555
    7. '
' → logprob: -14.438276290893555
    8. '```' → logprob: -14.813276290893555
    9. '[' → logprob: -15.313276290893555
    10. ',' → logprob: -15.313276290893555

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011629798245849088
    2. ' ,' → logprob: -9.250116348266602
    3. ',max' → logprob: -11.250116348266602
    4. ',size' → logprob: -12.750116348266602
    5. '1' → logprob: -13.375116348266602
    6. '6' → logprob: -13.625116348266602
    7. '5' → logprob: -14.875116348266602
    8. '7' → logprob: -15.250116348266602
    9. ',
' → logprob: -15.250116348266602
    10. '(' → logprob: -15.625116348266602

Token 301: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1898191124200821
    2. '6' → logprob: -1.814819097518921
    3. 'min' → logprob: -5.1898193359375
    4. '5' → logprob: -6.3148193359375
    5. ' max' → logprob: -6.4398193359375
    6. '(max' → logprob: -7.8148193359375
    7. '11' → logprob: -9.1898193359375
    8. '=max' → logprob: -9.1898193359375
    9. '7' → logprob: -9.3148193359375
    10. ' ' → logprob: -9.4398193359375

Token 302: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.0001137947037932463
    2. '+' → logprob: -10.375113487243652
    3. '(' → logprob: -11.250113487243652
    4. '(_' → logprob: -11.375113487243652
    5. '(size' → logprob: -11.625113487243652
    6. 'size' → logprob: -11.750113487243652
    7. '   ' → logprob: -12.000113487243652
    8. ')' → logprob: -12.125113487243652
    9. '(max' → logprob: -12.250113487243652
    10. '_s' → logprob: -13.000113487243652

Token 303: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31330031156539917
    2. '+' → logprob: -1.313300371170044
    3. ')):
' → logprob: -10.938300132751465
    4. ' ' → logprob: -11.438300132751465
    5. ')):' → logprob: -12.188300132751465
    6. '   ' → logprob: -13.688300132751465
    7. '()+' → logprob: -13.688300132751465
    8. '))' → logprob: -14.313300132751465
    9. '()' → logprob: -15.063300132751465
    10. '[' → logprob: -15.313300132751465

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004892880679108202
    2. ' ' → logprob: -7.625489234924316
    3. '(' → logprob: -14.250489234924316
    4. '))' → logprob: -15.375489234924316
    5. '   ' → logprob: -16.250490188598633
    6. '```' → logprob: -16.500490188598633
    7. ')):
' → logprob: -16.750490188598633
    8. '
' → logprob: -16.750490188598633
    9. ')):' → logprob: -17.125490188598633
    10. ')' → logprob: -17.250490188598633

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '
' → logprob: -15.000025749206543
    4. '))' → logprob: -15.500025749206543
    5. ')):
' → logprob: -16.250024795532227
    6. '   ' → logprob: -16.250024795532227
    7. '```' → logprob: -16.375024795532227
    8. ')' → logprob: -16.500024795532227
    9. '2' → logprob: -16.812524795532227
    10. '):
' → logprob: -17.375024795532227

Token 306: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.13959567248821259
    2. ')):
' → logprob: -2.1395957469940186
    3. '):' → logprob: -4.5145955085754395
    4. '))' → logprob: -7.5145955085754395
    5. '):
' → logprob: -7.7645955085754395
    6. ')):
' → logprob: -8.264595985412598
    7. ':' → logprob: -9.014595985412598
    8. '       ' → logprob: -9.264595985412598
    9. '   ' → logprob: -9.514595985412598
    10. ' ' → logprob: -9.639595985412598

Token 307: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2720125913619995
    2. '       ' → logprob: -1.5220125913619995
    3. ' ' → logprob: -5.147012710571289
    4. '<|end|>' → logprob: -5.272012710571289
    5. ':
' → logprob: -6.022012710571289
    6. ' :' → logprob: -6.397012710571289
    7. ' if' → logprob: -6.647012710571289
    8. '   ' → logprob: -6.772012710571289
    9. '):' → logprob: -7.522012710571289
    10. '    ' → logprob: -7.897012710571289

Token 308: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14956454932689667
    2. ' if' → logprob: -2.399564504623413
    3. '<|end|>' → logprob: -3.399564504623413
    4. ' 
' → logprob: -5.149564743041992
    5. 'if' (adapté à ' if') → logprob: -5.274564743041992
    6. '       ' → logprob: -6.399564743041992
    7. ')' → logprob: -7.524564743041992
    8. ':' → logprob: -7.649564743041992
    9. '        ' → logprob: -8.524564743041992
    10. '  ' → logprob: -9.274564743041992

Token 309: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.01623659022152424
    2. 'can' → logprob: -4.141236782073975
    3. ' not' → logprob: -8.516236305236816
    4. '	can' → logprob: -14.141236305236816
    5. 'not' → logprob: -14.266236305236816
    6. '_can' → logprob: -16.016237258911133
    7. ' ' → logprob: -16.266237258911133
    8. '(can' → logprob: -16.266237258911133
    9. '   ' → logprob: -16.516237258911133
    10. ' ' → logprob: -16.516237258911133

Token 310: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -4.596781946020201e-05
    2. '_' → logprob: -10.500045776367188
    3. ' _' → logprob: -11.625045776367188
    4. '_can' → logprob: -11.750045776367188
    5. '_put' → logprob: -14.250045776367188
    6. '_places' → logprob: -15.750045776367188
    7. '_have' → logprob: -16.125045776367188
    8. '_p' → logprob: -16.125045776367188
    9. '_replace' → logprob: -16.250045776367188
    10. '_continue' → logprob: -16.250045776367188

Token 311: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -8.65707261255011e-06
    2. '(f' → logprob: -13.250008583068848
    3. 'car' → logprob: -13.375008583068848
    4. ' _' → logprob: -13.375008583068848
    5. '_' → logprob: -13.750008583068848
    6. '_c' → logprob: -14.000008583068848
    7. '_floor' → logprob: -15.000008583068848
    8. 'Car' → logprob: -15.375008583068848
    9. '```' → logprob: -15.375008583068848
    10. '_can' → logprob: -15.750008583068848

Token 312: 'pet' (ID: 9456)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.42485034465789795
    2. 'pet' → logprob: -1.174850344657898
    3. 'et' → logprob: -3.5498504638671875
    4. 'pt' → logprob: -5.7998504638671875
    5. 'p' → logprob: -5.7998504638671875
    6. '_pet' → logprob: -6.9248504638671875
    7. '_car' → logprob: -7.7998504638671875
    8. '_t' → logprob: -8.174850463867188
    9. '_place' → logprob: -9.299850463867188
    10. ' carpet' → logprob: -9.424850463867188

Token 313: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00026765360962599516
    2. '(' → logprob: -8.25026798248291
    3. ' (' → logprob: -12.00026798248291
    4. '(
' → logprob: -16.000267028808594
    5. ' floor' → logprob: -18.125267028808594
    6. '(F' → logprob: -18.375267028808594
    7. ' ' → logprob: -19.375267028808594
    8. ')' → logprob: -19.375267028808594
    9. '(

' → logprob: -19.750267028808594
    10. 'floor' → logprob: -19.875267028808594

Token 314: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.004675403703004122
    2. 'floor' → logprob: -5.379675388336182
    3. 'oor' → logprob: -10.37967586517334
    4. 'lo' → logprob: -11.62967586517334
    5. '   ' → logprob: -12.75467586517334
    6. ' floor' → logprob: -13.12967586517334
    7. 'lor' → logprob: -13.50467586517334
    8. ',' → logprob: -13.62967586517334
    9. '(f' → logprob: -13.87967586517334
    10. 'loo' → logprob: -14.12967586517334

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001012803171761334
    2. ',f' → logprob: -7.376012802124023
    3. ' ,' → logprob: -7.876012802124023
    4. '(f' → logprob: -12.501012802124023
    5. ',
' → logprob: -13.626012802124023
    6. 'floor' → logprob: -15.626012802124023
    7. ')' → logprob: -16.001012802124023
    8. '(' → logprob: -16.251012802124023
    9. ',n' → logprob: -16.501012802124023
    10. ',x' → logprob: -16.501012802124023

Token 316: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4740772247314453
    2. 'x' → logprob: -0.9740772247314453
    3. '	x' → logprob: -16.599077224731445
    4. ')x' → logprob: -16.974077224731445
    5. ',' → logprob: -17.224077224731445
    6. ',x' → logprob: -17.224077224731445
    7. ' ' → logprob: -17.349077224731445
    8. '    ' → logprob: -17.849077224731445
    9. ')' → logprob: -18.099077224731445
    10. '(x' → logprob: -18.349077224731445

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020890454470645636
    2. ' ,' → logprob: -8.500208854675293
    3. ',y' → logprob: -12.375208854675293
    4. ',x' → logprob: -15.250208854675293
    5. '=' → logprob: -15.375208854675293
    6. ',
' → logprob: -15.875208854675293
    7. '‌,' → logprob: -16.12520980834961
    8. ')' → logprob: -16.50020980834961
    9. '<|end|>' → logprob: -16.50020980834961
    10. ' ' → logprob: -16.75020980834961

Token 318: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0024758970830589533
    2. ' y' → logprob: -6.002475738525391
    3. ',y' → logprob: -15.62747573852539
    4. ',' → logprob: -17.50247573852539
    5. '	y' → logprob: -17.50247573852539
    6. ')y' → logprob: -20.00247573852539
    7. 'x' → logprob: -20.37747573852539
    8. ' ' → logprob: -20.50247573852539
    9. '<|end|>' → logprob: -20.75247573852539
    10. '    ' → logprob: -20.87747573852539

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.841743303695694e-05
    2. ' ,' → logprob: -9.25009822845459
    3. ',size' → logprob: -13.50009822845459
    4. ',
' → logprob: -14.75009822845459
    5. ')' → logprob: -16.125099182128906
    6. ',

' → logprob: -16.625099182128906
    7. '       ' → logprob: -17.000099182128906
    8. '   ' → logprob: -17.375099182128906
    9. '‌,' → logprob: -17.500099182128906
    10. '`,' → logprob: -17.875099182128906

Token 320: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.029758011922240257
    2. ' size' → logprob: -3.5297579765319824
    3. ')' → logprob: -13.15475845336914
    4. ',' → logprob: -13.52975845336914
    5. ',size' → logprob: -13.52975845336914
    6. '   ' → logprob: -13.77975845336914
    7. ' ' → logprob: -14.27975845336914
    8. '[size' → logprob: -14.77975845336914
    9. '(size' → logprob: -15.27975845336914
    10. 's' → logprob: -16.15475845336914

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023405285901390016
    2. ' ,' → logprob: -8.37523365020752
    3. ')' → logprob: -14.12523365020752
    4. '):' → logprob: -14.25023365020752
    5. ',
' → logprob: -14.75023365020752
    6. '

' → logprob: -15.00023365020752
    7. '   ' → logprob: -15.12523365020752
    8. ' ' → logprob: -15.62523365020752
    9. ',

' → logprob: -16.500234603881836
    10. '=' → logprob: -16.625234603881836

Token 322: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.002475777640938759
    2. ' W' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.62747573852539
    4. ',W' → logprob: -17.87747573852539
    5. '	W' → logprob: -18.00247573852539
    6. ')' → logprob: -18.12747573852539
    7. ' ' → logprob: -18.25247573852539
    8. '    ' → logprob: -19.50247573852539
    9. ',' → logprob: -20.25247573852539
    10. '  ' → logprob: -20.25247573852539

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.167648876318708e-05
    2. ' ,' → logprob: -10.125041961669922
    3. ')' → logprob: -14.250041961669922
    4. ',H' → logprob: -14.500041961669922
    5. ',
' → logprob: -15.375041961669922
    6. ',

' → logprob: -16.750041961669922
    7. '<|end|>' → logprob: -17.250041961669922
    8. '‌,' → logprob: -17.625041961669922
    9. '),' → logprob: -18.500041961669922
    10. '   ' → logprob: -18.500041961669922

Token 324: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.011048170737922192
    2. ' H' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.511048316955566
    4. ' ' → logprob: -16.13604736328125
    5. ')' → logprob: -17.63604736328125
    6. '    ' → logprob: -18.51104736328125
    7. '  ' → logprob: -18.88604736328125
    8. ',H' → logprob: -19.01104736328125
    9. '       ' → logprob: -19.51104736328125
    10. '```' → logprob: -19.57354736328125

Token 325: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03744088113307953
    2. ')' → logprob: -3.662440776824951
    3. '):
' → logprob: -5.287440776824951
    4. ',' → logprob: -5.537440776824951
    5. ' and' → logprob: -6.412440776824951
    6. ' ):' → logprob: -8.78744125366211
    7. '       ' → logprob: -9.66244125366211
    8. 'and' → logprob: -9.78744125366211
    9. '):

' → logprob: -10.03744125366211
    10. ':' → logprob: -10.03744125366211

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07824511080980301
    2. ' place' → logprob: -3.203245162963867
    3. '(place' → logprob: -4.453245162963867
    4. '            
' → logprob: -4.953245162963867
    5. 'place' → logprob: -5.078245162963867
    6. '       ' → logprob: -6.203245162963867
    7. '_place' → logprob: -6.703245162963867
    8. '        
' → logprob: -6.953245162963867
    9. '<|end|>' → logprob: -7.078245162963867
    10. 'Place' → logprob: -7.328245162963867

Token 327: ' place' (ID: 2475)
  Prédit: ' place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.11580587923526764
    2. 'place' (adapté à ' place') → logprob: -2.2408058643341064
    3. '               ' → logprob: -6.1158061027526855
    4. '           ' → logprob: -7.9908061027526855
    5. '       ' → logprob: -8.240805625915527
    6. '_place' → logprob: -9.615805625915527
    7. '
' → logprob: -9.990805625915527
    8. '```' → logprob: -11.365805625915527
    9. '(place' → logprob: -11.490805625915527
    10. '   ' → logprob: -11.740805625915527

Token 328: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -1.7432603272027336e-06
    2. '_c' → logprob: -14.750001907348633
    3. '_' → logprob: -15.375001907348633
    4. '_floor' → logprob: -15.375001907348633
    5. '```' → logprob: -15.625001907348633
    6. 'car' → logprob: -15.625001907348633
    7. ' _' → logprob: -15.875001907348633
    8. 'Car' → logprob: -15.875001907348633
    9. '`' → logprob: -17.250001907348633
    10. '_code' → logprob: -17.375001907348633

Token 329: 'pet' (ID: 9456)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.40453416109085083
    2. 'pet' → logprob: -1.404534101486206
    3. 't' → logprob: -3.154534101486206
    4. 'et' → logprob: -3.529534101486206
    5. '_pet' → logprob: -5.529534339904785
    6. '_t' → logprob: -5.779534339904785
    7. 'car' → logprob: -5.779534339904785
    8. 'pt' → logprob: -6.654534339904785
    9. ' carpet' → logprob: -7.154534339904785
    10. '_c' → logprob: -7.654534339904785

Token 330: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.125006675720215
    3. '(car' → logprob: -14.000006675720215
    4. ' (' → logprob: -17.0000057220459
    5. 'floor' → logprob: -17.0000057220459
    6. ' floor' → logprob: -19.1250057220459
    7. '(
' → logprob: -19.1250057220459
    8. 'car' → logprob: -19.6250057220459
    9. '(F' → logprob: -20.1250057220459
    10. '```' → logprob: -20.2500057220459

Token 331: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.12228654325008392
    2. 'floor' → logprob: -2.247286558151245
    3. 'oor' → logprob: -5.497286319732666
    4. ',' → logprob: -5.997286319732666
    5. 'or' → logprob: -6.247286319732666
    6. ',f' → logprob: -8.747286796569824
    7. 'lor' → logprob: -9.247286796569824
    8. 'lo' → logprob: -9.372286796569824
    9. '(f' → logprob: -9.622286796569824
    10. '_floor' → logprob: -9.747286796569824

Token 332: ',' (ID: 11)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5264622569084167
    2. ',' → logprob: -0.9014622569084167
    3. ',f' → logprob: -6.401462078094482
    4. 'floor' → logprob: -7.026462078094482
    5. '(' → logprob: -8.02646255493164
    6. ')' → logprob: -8.15146255493164
    7. ' floor' → logprob: -9.65146255493164
    8. ' ,' → logprob: -9.90146255493164
    9. '(
' → logprob: -11.65146255493164
    10. ' (' → logprob: -11.90146255493164

Token 333: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0067156096920371056
    2. ' x' → logprob: -5.006715774536133
    3. 'floor' → logprob: -16.131715774536133
    4. '   ' → logprob: -17.131715774536133
    5. '(x' → logprob: -17.756715774536133
    6. ' ' → logprob: -18.131715774536133
    7. ' floor' → logprob: -18.256715774536133
    8. 'f' → logprob: -18.381715774536133
    9. '"x' → logprob: -18.506715774536133
    10. ')x' → logprob: -18.631715774536133

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.56233171664644e-05
    2. ',y' → logprob: -10.125055313110352
    3. ' ,' → logprob: -11.125055313110352
    4. '+' → logprob: -14.750055313110352
    5. 'y' → logprob: -15.500055313110352
    6. ')' → logprob: -16.62505531311035
    7. '   ' → logprob: -16.75005531311035
    8. '```' → logprob: -16.75005531311035
    9. '<|end|>' → logprob: -17.62505531311035
    10. ' y' → logprob: -17.87505531311035

Token 335: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00014001218369230628
    2. ' y' → logprob: -8.875140190124512
    3. '<|end|>' → logprob: -17.250139236450195
    4. '   ' → logprob: -17.500139236450195
    5. ',y' → logprob: -18.125139236450195
    6. '    ' → logprob: -18.250139236450195
    7. ',' → logprob: -18.250139236450195
    8. '	y' → logprob: -18.375139236450195
    9. ' ' → logprob: -18.500139236450195
    10. '     ' → logprob: -19.375139236450195

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.958325295476243e-05
    2. ',size' → logprob: -9.625079154968262
    3. ' ,' → logprob: -11.250079154968262
    4. 'size' → logprob: -15.875079154968262
    5. ',
' → logprob: -16.250080108642578
    6. '=' → logprob: -16.750080108642578
    7. ')' → logprob: -16.750080108642578
    8. ',s' → logprob: -16.750080108642578
    9. '```' → logprob: -17.250080108642578
    10. '=size' → logprob: -17.375080108642578

Token 337: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.002257902640849352
    2. ' size' → logprob: -6.127257823944092
    3. '1' → logprob: -9.87725830078125
    4. '
' → logprob: -11.75225830078125
    5. '0' → logprob: -12.75225830078125
    6. 'val' → logprob: -13.25225830078125
    7. ' ' → logprob: -13.62725830078125
    8. '   ' → logprob: -13.62725830078125
    9. '```' → logprob: -13.75225830078125
    10. 'value' → logprob: -13.87725830078125

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0629870858974755e-05
    2. ' ,' → logprob: -10.00006103515625
    3. '1' → logprob: -11.25006103515625
    4. '0' → logprob: -14.00006103515625
    5. ',
' → logprob: -14.25006103515625
    6. '2' → logprob: -15.75006103515625
    7. ' ' → logprob: -16.25006103515625
    8. '   ' → logprob: -16.25006103515625
    9. '```' → logprob: -16.37506103515625
    10. ')' → logprob: -17.12506103515625

Token 339: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001801801408873871
    2. ' ' → logprob: -8.6251802444458
    3. '2' → logprob: -14.7501802444458
    4. '
' → logprob: -16.750179290771484
    5. ' -' → logprob: -17.125179290771484
    6. '```' → logprob: -17.187679290771484
    7. '   ' → logprob: -17.625179290771484
    8. ' 
' → logprob: -17.937679290771484
    9. '۰' → logprob: -18.187679290771484
    10. ')' → logprob: -18.187679290771484

Token 340: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.6789137084269896e-05
    2. ' ' → logprob: -10.25003719329834
    3. '2' → logprob: -13.75003719329834
    4. '-' → logprob: -15.62503719329834
    5. ' -' → logprob: -16.375036239624023
    6. '
' → logprob: -17.937536239624023
    7. '```' → logprob: -17.937536239624023
    8. '۰' → logprob: -18.187536239624023
    9. 'False' → logprob: -18.937536239624023
    10. '   ' → logprob: -19.062536239624023

Token 341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3191767930984497
    2. ')
' → logprob: -1.3191767930984497
    3. '           ' → logprob: -5.19417667388916
    4. '
' → logprob: -8.56917667388916
    5. '       ' → logprob: -9.31917667388916
    6. ')
' → logprob: -10.44417667388916
    7. '   ' → logprob: -11.44417667388916
    8. '          ' → logprob: -11.81917667388916
    9. ')

' → logprob: -12.19417667388916
    10. '               ' → logprob: -12.31917667388916

Token 342: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008865810930728912
    2. '           ' → logprob: -4.883865833282471
    3. '   ' → logprob: -8.258865356445312
    4. '       ' → logprob: -8.258865356445312
    5. '    
' → logprob: -8.258865356445312
    6. '            
' → logprob: -9.008865356445312
    7. '
' → logprob: -9.008865356445312
    8. '  
' → logprob: -9.383865356445312
    9. '<|end|>' → logprob: -10.008865356445312
    10. ' 
' → logprob: -10.383865356445312

Token 343: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.1668301224708557
    2. 'result' → logprob: -2.541830062866211
    3. 'temp' → logprob: -2.916830062866211
    4. ' res' → logprob: -4.666830062866211
    5. 'tmp' → logprob: -6.041830062866211
    6. 'ans' → logprob: -6.166830062866211
    7. ' result' → logprob: -6.291830062866211
    8. 'new' → logprob: -7.291830062866211
    9. 'cur' → logprob: -7.291830062866211
    10. 'curr' → logprob: -7.291830062866211

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28115880489349365
    2. '=' → logprob: -1.4061588048934937
    3. '_=' → logprob: -12.281158447265625
    4. '_' → logprob: -14.031158447265625
    5. ' ' → logprob: -14.656158447265625
    6. ' =)' → logprob: -15.031158447265625
    7. ' +=' → logprob: -15.281158447265625
    8. ')' → logprob: -15.656158447265625
    9. ' =
' → logprob: -15.656158447265625
    10. '   ' → logprob: -15.781158447265625

Token 345: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12692810595035553
    2. ' min' → logprob: -2.1269280910491943
    3. '	min' → logprob: -17.001928329467773
    4. '   ' → logprob: -20.501928329467773
    5. '(min' → logprob: -20.751928329467773
    6. 'mini' → logprob: -21.751928329467773
    7. 'mi' → logprob: -21.751928329467773
    8. '_min' → logprob: -21.876928329467773
    9. ' ' → logprob: -22.251928329467773
    10. 'minimum' → logprob: -22.376928329467773

Token 346: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.014237902127206326
    2. '(' → logprob: -4.264237880706787
    3. '(
' → logprob: -9.514238357543945
    4. '(

' → logprob: -15.014238357543945
    5. 'res' → logprob: -15.764238357543945
    6. ' (' → logprob: -16.639238357543945
    7. '(
' → logprob: -18.639238357543945
    8. '=res' → logprob: -19.389238357543945
    9. ',res' → logprob: -19.639238357543945
    10. '	res' → logprob: -19.639238357543945

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041423882357776165
    2. ',res' → logprob: -5.5041422843933105
    3. 'res' → logprob: -10.254142761230469
    4. '(res' → logprob: -11.129142761230469
    5. ' ,' → logprob: -11.504142761230469
    6. ',
' → logprob: -12.504142761230469
    7. ' res' → logprob: -16.12914276123047
    8. '   ' → logprob: -16.12914276123047
    9. ',

' → logprob: -17.12914276123047
    10. '(' → logprob: -18.37914276123047

Token 348: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.5759406685829163
    2. 'back' → logprob: -0.8259406685829163
    3. '   ' → logprob: -14.70094108581543
    4. ' ' → logprob: -15.70094108581543
    5. '	back' → logprob: -15.95094108581543
    6. ' ' → logprob: -16.07594108581543
    7. '(back' → logprob: -16.32594108581543
    8. '
' → logprob: -16.32594108581543
    9. 'Back' → logprob: -16.70094108581543
    10. '           ' → logprob: -17.32594108581543

Token 349: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -4.723352049040841e-06
    2. 'tracking' → logprob: -13.125004768371582
    3. '(track' → logprob: -14.125004768371582
    4. '_track' → logprob: -14.125004768371582
    5. 'tr' → logprob: -14.625004768371582
    6. 'tracked' → logprob: -15.625004768371582
    7. 'trace' → logprob: -16.000003814697266
    8. 'tract' → logprob: -16.000003814697266
    9. 'tracker' → logprob: -16.000003814697266
    10. 'tre' → logprob: -16.750003814697266

Token 350: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.25001335144043
    3. '(
' → logprob: -14.87501335144043
    4. ' (' → logprob: -17.37501335144043
    5. ')' → logprob: -18.12501335144043
    6. 'floor' → logprob: -19.12501335144043
    7. ',f' → logprob: -19.75001335144043
    8. ' floor' → logprob: -20.00001335144043
    9. '```' → logprob: -20.12501335144043
    10. ')(' → logprob: -20.25001335144043

Token 351: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.0010150644229725003
    2. 'floor' → logprob: -7.1260151863098145
    3. ',' → logprob: -8.876014709472656
    4. 'oor' → logprob: -10.001014709472656
    5. '   ' → logprob: -11.751014709472656
    6. 'loat' → logprob: -12.876014709472656
    7. 'lo' → logprob: -13.001014709472656
    8. '[' → logprob: -13.501014709472656
    9. '_floor' → logprob: -13.501014709472656
    10. '```' → logprob: -13.751014709472656

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ' ,' → logprob: -11.875009536743164
    3. ',W' → logprob: -13.000009536743164
    4. ',
' → logprob: -14.750009536743164
    5. '   ' → logprob: -15.750009536743164
    6. 'W' → logprob: -17.250009536743164
    7. ')' → logprob: -17.625009536743164
    8. '‌,' → logprob: -18.000009536743164
    9. ' ' → logprob: -18.125009536743164
    10. '(' → logprob: -18.125009536743164

Token 353: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.6931624412536621
    2. ' W' → logprob: -0.6931624412536621
    3. '   ' → logprob: -11.81816291809082
    4. '    ' → logprob: -12.81816291809082
    5. ' ' → logprob: -13.44316291809082
    6. ',W' → logprob: -13.44316291809082
    7. ',' → logprob: -14.44316291809082
    8. '	W' → logprob: -14.44316291809082
    9. '```' → logprob: -14.94316291809082
    10. '  ' → logprob: -15.44316291809082

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016837897419463843
    2. ',H' → logprob: -9.125168800354004
    3. ' ,' → logprob: -9.750168800354004
    4. '   ' → logprob: -14.750168800354004
    5. ',
' → logprob: -15.250168800354004
    6. 'H' → logprob: -15.875168800354004
    7. '-' → logprob: -16.250167846679688
    8. '       ' → logprob: -17.375167846679688
    9. ' H' → logprob: -17.500167846679688
    10. ' ' → logprob: -17.750167846679688

Token 355: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.000804745068307966
    2. ' H' → logprob: -7.125804901123047
    3. ' ' → logprob: -15.750804901123047
    4. '   ' → logprob: -16.500804901123047
    5. 'count' → logprob: -17.000804901123047
    6. 'x' → logprob: -18.125804901123047
    7. '  ' → logprob: -18.500804901123047
    8. '    ' → logprob: -18.500804901123047
    9. '     ' → logprob: -19.625804901123047
    10. '```' → logprob: -19.750804901123047

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.093505099765025e-05
    2. ' ,' → logprob: -11.500020980834961
    3. ',count' → logprob: -11.500020980834961
    4. 'count' → logprob: -14.750020980834961
    5. ',
' → logprob: -16.00002098083496
    6. '   ' → logprob: -17.25002098083496
    7. ')' → logprob: -18.75002098083496
    8. ',

' → logprob: -18.75002098083496
    9. '```' → logprob: -19.00002098083496
    10. ' count' → logprob: -19.12502098083496

Token 357: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2519378960132599
    2. ' count' → logprob: -1.5019378662109375
    3. '   ' → logprob: -11.876937866210938
    4. ' ' → logprob: -14.501937866210938
    5. '	count' → logprob: -15.251937866210938
    6. '           ' → logprob: -15.501937866210938
    7. '(count' → logprob: -15.626937866210938
    8. '       ' → logprob: -15.876937866210938
    9. '    ' → logprob: -16.001937866210938
    10. '_count' → logprob: -16.501937866210938

Token 358: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.386922687292099
    2. ' +' → logprob: -1.1369227170944214
    3. '   ' → logprob: -10.011922836303711
    4. ',' → logprob: -12.761922836303711
    5. ' ' → logprob: -13.636922836303711
    6. '+
' → logprob: -14.011922836303711
    7. ')' → logprob: -14.386922836303711
    8. ' +
' → logprob: -15.261922836303711
    9. '```' → logprob: -15.636922836303711
    10. ' ,' → logprob: -15.636922836303711

Token 359: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -14.87548828125
    4. ')' → logprob: -18.50048828125
    5. '  ' → logprob: -18.87548828125
    6. '       ' → logprob: -19.37548828125
    7. '           ' → logprob: -19.50048828125
    8. '     ' → logprob: -19.75048828125
    9. '    ' → logprob: -19.87548828125
    10. '
' → logprob: -20.12548828125

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. 'size' → logprob: -15.375031471252441
    4. '   ' → logprob: -15.750031471252441
    5. ')' → logprob: -17.750032424926758
    6. '
' → logprob: -18.500032424926758
    7. ' size' → logprob: -18.500032424926758
    8. '[' → logprob: -18.750032424926758
    9. '       ' → logprob: -19.125032424926758
    10. '           ' → logprob: -19.437532424926758

Token 361: ',' (ID: 11)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.5371251106262207
    2. ')' → logprob: -1.0371251106262207
    3. '))' → logprob: -2.9121251106262207
    4. ')
' → logprob: -5.162125110626221
    5. ' ))
' → logprob: -7.662125110626221
    6. ' )' → logprob: -8.412124633789062
    7. ',' → logprob: -8.537124633789062
    8. '   ' → logprob: -10.787124633789062
    9. '           ' → logprob: -10.787124633789062
    10. '))

' → logprob: -11.037124633789062

Token 362: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.3132663369178772
    2. 'memo' → logprob: -1.3132662773132324
    3. 'm' → logprob: -13.31326675415039
    4. ' ' → logprob: -13.68826675415039
    5. ' memoir' → logprob: -14.93826675415039
    6. ')' → logprob: -15.43826675415039
    7. ' ' → logprob: -15.68826675415039
    8. 'mem' → logprob: -15.68826675415039
    9. '    ' → logprob: -15.93826675415039
    10. '```' → logprob: -15.93826675415039

Token 363: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.08223162591457367
    2. '))' → logprob: -2.5822315216064453
    3. ')' → logprob: -5.832231521606445
    4. ')
' → logprob: -8.082231521606445
    5. '           ' → logprob: -9.457231521606445
    6. ' ))
' → logprob: -11.332231521606445
    7. '       ' → logprob: -13.332231521606445
    8. '))
' → logprob: -13.707231521606445
    9. '))

' → logprob: -13.957231521606445
    10. ')))
' → logprob: -15.082231521606445

Token 364: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000735177774913609
    2. 'place' → logprob: -7.250735282897949
    3. '
' → logprob: -11.12573528289795
    4. ' place' → logprob: -11.75073528289795
    5. '```' → logprob: -14.00073528289795
    6. '       ' → logprob: -14.87573528289795
    7. '(place' → logprob: -15.00073528289795
    8. '          ' → logprob: -15.00073528289795
    9. '_place' → logprob: -15.50073528289795
    10. 'placement' → logprob: -15.75073528289795

Token 365: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' (adapté à ' place') → logprob: -0.010776259936392307
    2. ' place' → logprob: -5.010776042938232
    3. '           ' → logprob: -5.510776042938232
    4. '       ' → logprob: -11.63577651977539
    5. '   ' → logprob: -15.13577651977539
    6. '```' → logprob: -16.13577651977539
    7. '
' → logprob: -16.38577651977539
    8. '          ' → logprob: -16.88577651977539
    9. '.place' → logprob: -17.51077651977539
    10. '               ' → logprob: -17.51077651977539

Token 366: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: 0.0
    2. 'Car' → logprob: -18.375
    3. 'car' → logprob: -19.125
    4. '_c' → logprob: -19.625
    5. '_' → logprob: -21.125
    6. '<Car' → logprob: -22.0
    7. '-car' → logprob: -22.5
    8. '(car' → logprob: -22.75
    9. '	car' → logprob: -23.25
    10. '_floor' → logprob: -23.625

Token 367: 'pet' (ID: 9456)
  Prédit: 'pet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.1673695594072342
    2. '_car' → logprob: -2.2923696041107178
    3. 't' → logprob: -3.2923696041107178
    4. 'car' → logprob: -4.667369365692139
    5. 'et' → logprob: -5.292369365692139
    6. '_pet' → logprob: -7.292369365692139
    7. 'pt' → logprob: -8.542369842529297
    8. 'p' → logprob: -9.167369842529297
    9. 'tet' → logprob: -9.417369842529297
    10. ' carpet' → logprob: -9.667369842529297

Token 368: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.0280383548888494e-06
    2. 'floor' → logprob: -14.000000953674316
    3. ' floor' → logprob: -17.250001907348633
    4. '[f' → logprob: -18.125001907348633
    5. '(car' → logprob: -18.250001907348633
    6. '(' → logprob: -18.875001907348633
    7. '_floor' → logprob: -19.125001907348633
    8. '.floor' → logprob: -19.250001907348633
    9. ' (' → logprob: -19.500001907348633
    10. '```' → logprob: -19.625001907348633

Token 369: 'loor' (ID: 5494)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.4280177354812622
    2. 'loor' → logprob: -1.3030177354812622
    3. 'car' → logprob: -3.0530176162719727
    4. '(f' → logprob: -3.6780176162719727
    5. 'or' → logprob: -6.553017616271973
    6. 'oor' → logprob: -6.803017616271973
    7. '_floor' → logprob: -7.553017616271973
    8. '_car' → logprob: -8.678017616271973
    9. ' floor' → logprob: -9.303017616271973
    10. '.floor' → logprob: -9.303017616271973

Token 370: ',' (ID: 11)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.004823245573788881
    2. ',' → logprob: -5.379823207855225
    3. ')' → logprob: -9.254823684692383
    4. ',f' → logprob: -9.379823684692383
    5. 'floor' → logprob: -11.379823684692383
    6. '[f' → logprob: -12.629823684692383
    7. '(' → logprob: -13.004823684692383
    8. '[' → logprob: -13.004823684692383
    9. '),' → logprob: -14.254823684692383
    10. '```' → logprob: -14.504823684692383

Token 371: ' x' (ID: 1215)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.00026205103495158255
    2. ' floor' → logprob: -8.250262260437012
    3. 'f' → logprob: -14.500262260437012
    4. 'x' → logprob: -15.125262260437012
    5. '_floor' → logprob: -17.250261306762695
    6. '.floor' → logprob: -18.625261306762695
    7. 'flo' → logprob: -18.625261306762695
    8. 'fl' → logprob: -19.375261306762695
    9. '-floor' → logprob: -19.625261306762695
    10. 'Floor' → logprob: -19.750261306762695

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8074162653647363e-05
    2. ',y' → logprob: -11.000018119812012
    3. ' ,' → logprob: -13.750018119812012
    4. 'y' → logprob: -15.500018119812012
    5. '[' → logprob: -17.000017166137695
    6. ',x' → logprob: -17.750017166137695
    7. '<|end|>' → logprob: -18.375017166137695
    8. '[y' → logprob: -18.625017166137695
    9. 'def' → logprob: -19.000017166137695
    10. '```' → logprob: -19.250017166137695

Token 373: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0008091482450254261
    2. ' y' → logprob: -7.125809192657471
    3. 'x' → logprob: -12.375808715820312
    4. ',' → logprob: -15.250808715820312
    5. ',y' → logprob: -15.750808715820312
    6. '<|end|>' → logprob: -16.625808715820312
    7. '0' → logprob: -18.000808715820312
    8. 'Y' → logprob: -18.250808715820312
    9. '	y' → logprob: -18.375808715820312
    10. 'def' → logprob: -18.625808715820312

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.896309739408025e-07
    2. ' ,' → logprob: -14.250000953674316
    3. ',size' → logprob: -16.75
    4. 'size' → logprob: -17.5
    5. 'def' → logprob: -18.25
    6. 's' → logprob: -18.5
    7. ')' → logprob: -18.5
    8. '[' → logprob: -18.625
    9. '1' → logprob: -19.25
    10. '0' → logprob: -19.625

Token 375: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0001266613689949736
    2. ' size' → logprob: -9.000126838684082
    3. '0' → logprob: -13.125126838684082
    4. '1' → logprob: -13.750126838684082
    5. ' ' → logprob: -16.125125885009766
    6. '   ' → logprob: -17.500125885009766
    7. 'count' → logprob: -18.250125885009766
    8. '     ' → logprob: -18.625125885009766
    9. '    ' → logprob: -18.875125885009766
    10. '(size' → logprob: -19.000125885009766

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. '1' → logprob: -12.875003814697266
    3. ' ,' → logprob: -13.375003814697266
    4. ')' → logprob: -18.000003814697266
    5. ' ' → logprob: -18.250003814697266
    6. '0' → logprob: -18.750003814697266
    7. 'def' → logprob: -18.875003814697266
    8. 's' → logprob: -19.000003814697266
    9. ',
' → logprob: -19.000003814697266
    10. '   ' → logprob: -19.375003814697266

Token 377: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -21.625
    4. '<|end|>' → logprob: -23.0
    5. '```' → logprob: -23.125
    6. ')' → logprob: -24.0
    7. '  ' → logprob: -24.125
    8. '[' → logprob: -24.375
    9. 's' → logprob: -25.125
    10. '`' → logprob: -25.25

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '<|end|>' → logprob: -18.625
    4. '   ' → logprob: -20.75
    5. 's' → logprob: -20.75
    6. '```' → logprob: -20.875
    7. '[' → logprob: -21.75
    8. ')' → logprob: -21.875
    9. '0' → logprob: -22.125
    10. '  ' → logprob: -22.5

Token 379: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000553151941858232
    2. ')
' → logprob: -7.500553131103516
    3. ' )' → logprob: -16.250553131103516
    4. ')

' → logprob: -17.000553131103516
    5. ')
' → logprob: -17.625553131103516
    6. '   ' → logprob: -18.500553131103516
    7. ')return' → logprob: -18.875553131103516
    8. '       ' → logprob: -20.000553131103516
    9. '           ' → logprob: -20.000553131103516
    10. '),' → logprob: -20.625553131103516

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003385614836588502
    2. ' return' → logprob: -8.500338554382324
    3. '```' → logprob: -10.125338554382324
    4. '    
' → logprob: -10.500338554382324
    5. '
' → logprob: -10.500338554382324
    6. '	return' → logprob: -11.375338554382324
    7. 'return' → logprob: -11.875338554382324
    8. ' 
' → logprob: -12.125338554382324
    9. '       ' → logprob: -12.250338554382324
    10. '<|end|>' → logprob: -12.500338554382324

Token 381: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012208226136863232
    2. '   ' → logprob: -4.512208461761475
    3. ' return' → logprob: -6.762208461761475
    4. '	return' → logprob: -13.137207984924316
    5. ' ' → logprob: -14.762207984924316
    6. '```' → logprob: -15.012207984924316
    7. ':return' → logprob: -16.262208938598633
    8. '  ' → logprob: -16.262208938598633
    9. 'eturn' → logprob: -16.762208938598633
    10. '    
' → logprob: -17.387208938598633

Token 382: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1269284337759018
    2. ' res' → logprob: -2.1269283294677734
    3. 're' → logprob: -16.251928329467773
    4. '	res' → logprob: -16.751928329467773
    5. '(res' → logprob: -17.501928329467773
    6. 'r' → logprob: -17.626928329467773
    7. ' ' → logprob: -17.751928329467773
    8. '_res' → logprob: -17.876928329467773
    9. '
' → logprob: -18.001928329467773
    10. '   ' → logprob: -19.001928329467773

Token 383: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021923694759607315
    2. '<|end|>' → logprob: -4.646923542022705
    3. '
' → logprob: -4.771923542022705
    4. 'W' → logprob: -6.271923542022705
    5. '#' → logprob: -6.771923542022705
    6. '```' → logprob: -8.396924018859863
    7. '<|end|>' → logprob: -9.146924018859863
    8. '  
' → logprob: -9.896924018859863
    9. 'if' → logprob: -9.896924018859863
    10. 'import' → logprob: -10.146924018859863

Token 384: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004906039219349623
    2. '#' → logprob: -5.629906177520752
    3. 'W' → logprob: -7.754906177520752
    4. '<|end|>' → logprob: -7.754906177520752
    5. '```' → logprob: -8.504905700683594
    6. 'floor' → logprob: -8.879905700683594
    7. '<|end|>' → logprob: -10.879905700683594
    8. 'import' → logprob: -11.254905700683594
    9. 'input' → logprob: -11.254905700683594
    10. '
' → logprob: -11.629905700683594

Token 385: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6003144383430481
    2. ' min' → logprob: -1.6003143787384033
    3. ' solve' → logprob: -2.2253143787384033
    4. ' minimum' → logprob: -2.7253143787384033
    5. ' minimal' → logprob: -2.8503143787384033
    6. ' cover' → logprob: -4.975314617156982
    7. 'min' → logprob: -5.475314617156982
    8. 'solve' → logprob: -6.475314617156982
    9. 'minimum' → logprob: -6.475314617156982
    10. ' solution' → logprob: -6.850314617156982

Token 386: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001294030516874045
    2. '():
' → logprob: -9.500129699707031
    3. '(' → logprob: -10.500129699707031
    4. ' ():' → logprob: -11.000129699707031
    5. '()' → logprob: -12.000129699707031
    6. '_' → logprob: -12.875129699707031
    7. '():
' → logprob: -14.750129699707031
    8. '(":' → logprob: -15.375129699707031
    9. '()>' → logprob: -15.500129699707031
    10. '():

' → logprob: -15.875129699707031

Token 387: '   ' (ID: 271)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.24179707467556
    2. '   ' → logprob: -2.1167969703674316
    3. 'W' → logprob: -2.3667969703674316
    4. 'import' → logprob: -8.36679744720459
    5. ' import' → logprob: -8.49179744720459
    6. '```' → logprob: -9.86679744720459
    7. ' ' → logprob: -10.11679744720459
    8. ' input' → logprob: -11.11679744720459
    9. '	W' → logprob: -11.99179744720459
    10. 'n' → logprob: -12.11679744720459

Token 388: ' while' (ID: 2049)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.04831820726394653
    2. ' W' → logprob: -3.1733181476593018
    3. 'import' → logprob: -6.048318386077881
    4. '   ' → logprob: -6.548318386077881
    5. 'H' → logprob: -7.673318386077881
    6. ' import' → logprob: -8.048317909240723
    7. 'n' → logprob: -9.048317909240723
    8. ' ' → logprob: -9.048317909240723
    9. ' input' → logprob: -9.048317909240723
    10. 'input' → logprob: -9.298317909240723

Token 389: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.038123540580272675
    2. 'True' → logprob: -3.288123607635498
    3. '(True' → logprob: -9.41312313079834
    4. '=True' → logprob: -15.28812313079834
    5. '1' → logprob: -16.163124084472656
    6. ' ' → logprob: -16.913124084472656
    7. ' Tru' → logprob: -17.913124084472656
    8. ' ' → logprob: -18.663124084472656
    9. '_true' → logprob: -19.038124084472656
    10. '.True' → logprob: -19.413124084472656

Token 390: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007029473781585693
    2. ':
' → logprob: -5.8820295333862305
    3. ',' → logprob: -6.3820295333862305
    4. ' :' → logprob: -6.8820295333862305
    5. '   ' → logprob: -7.3820295333862305
    6. '():' → logprob: -7.3820295333862305
    7. '():
' → logprob: -9.25702953338623
    8. '(' → logprob: -9.63202953338623
    9. ' :
' → logprob: -11.00702953338623
    10. '.' → logprob: -11.13202953338623

Token 391: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03854412958025932
    2. ' try' → logprob: -3.538544178009033
    3. ' line' → logprob: -5.288544178009033
    4. '       ' → logprob: -6.288544178009033
    5. 'try' → logprob: -7.663544178009033
    6. 'n' → logprob: -7.913544178009033
    7. ' n' → logprob: -7.913544178009033
    8. '    ' → logprob: -8.413543701171875
    9. ' input' → logprob: -9.413543701171875
    10. '   ' → logprob: -9.788543701171875

Token 392: ' W' (ID: 486)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.025156592950224876
    2. 'line' → logprob: -4.775156497955322
    3. ' try' → logprob: -4.900156497955322
    4. ' W' → logprob: -4.900156497955322
    5. 'W' (adapté à ' W') → logprob: -7.275156497955322
    6. ' input' → logprob: -8.15015697479248
    7. 'try' → logprob: -8.27515697479248
    8. ' n' → logprob: -9.65015697479248
    9. ' s' → logprob: -9.90015697479248
    10. '   ' → logprob: -10.27515697479248

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003695562481880188
    2. ' =' → logprob: -6.003695487976074
    3. '=' → logprob: -7.253695487976074
    4. ' ,' → logprob: -7.753695487976074
    5. ',W' → logprob: -9.878695487976074
    6. '=input' → logprob: -11.753695487976074
    7. ',input' → logprob: -12.503695487976074
    8. ' >' → logprob: -12.878695487976074
    9. ',
' → logprob: -13.128695487976074
    10. '=int' → logprob: -13.128695487976074

Token 394: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.038043782114982605
    2. ' H' → logprob: -3.288043737411499
    3. '<|end|>' → logprob: -13.413043975830078
    4. ',H' → logprob: -14.788043975830078
    5. ' ' → logprob: -15.288043975830078
    6. '    ' → logprob: -16.163043975830078
    7. ' 
' → logprob: -16.788043975830078
    8. ',' → logprob: -17.038043975830078
    9. '    
' → logprob: -17.788043975830078
    10. '  ' → logprob: -17.788043975830078

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02982235886156559
    2. ' =' → logprob: -3.52982234954834
    3. ',' → logprob: -9.90482234954834
    4. '=input' → logprob: -10.77982234954834
    5. '=int' → logprob: -15.27982234954834
    6. 'input' → logprob: -15.90482234954834
    7. ')' → logprob: -16.154823303222656
    8. '=line' → logprob: -16.154823303222656
    9. '=

' → logprob: -16.279823303222656
    10. ' ' → logprob: -16.654823303222656

Token 396: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04860837012529373
    2. 'map' → logprob: -3.0486083030700684
    3. ' [' → logprob: -12.048608779907227
    4. ' list' → logprob: -12.048608779907227
    5. '[' → logprob: -12.548608779907227
    6. ' ' → logprob: -13.298608779907227
    7. ' input' → logprob: -13.423608779907227
    8. 'list' → logprob: -13.798608779907227
    9. 'input' → logprob: -14.548608779907227
    10. '(map' → logprob: -14.548608779907227

Token 397: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16276748478412628
    2. '(input' → logprob: -1.9127675294876099
    3. '(' → logprob: -6.03776741027832
    4. 'input' → logprob: -9.28776741027832
    5. '(str' → logprob: -10.66276741027832
    6. 'int' → logprob: -10.66276741027832
    7. '(
' → logprob: -12.53776741027832
    8. ' input' → logprob: -13.03776741027832
    9. '(list' → logprob: -13.41276741027832
    10. ' (' → logprob: -13.41276741027832

Token 398: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.026559902355074883
    2. 'input' → logprob: -3.776559829711914
    3. ',input' → logprob: -5.776559829711914
    4. ',' → logprob: -9.276559829711914
    5. '(' → logprob: -9.901559829711914
    6. ')' → logprob: -10.401559829711914
    7. ' input' → logprob: -10.901559829711914
    8. '=input' → logprob: -11.151559829711914
    9. '[input' → logprob: -14.651559829711914
    10. '   ' → logprob: -14.651559829711914

Token 399: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02324547804892063
    2. ' input' → logprob: -3.7732455730438232
    3. '=input' → logprob: -17.773244857788086
    4. '(input' → logprob: -17.898244857788086
    5. '	input' → logprob: -18.273244857788086
    6. ',input' → logprob: -18.898244857788086
    7. '<input' → logprob: -19.898244857788086
    8. ')' → logprob: -20.273244857788086
    9. '_input' → logprob: -21.398244857788086
    10. '[input' → logprob: -21.898244857788086

Token 400: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.676981345459353e-06
    2. '()' → logprob: -12.125005722045898
    3. '()
' → logprob: -17.1250057220459
    4. '())' → logprob: -17.3750057220459
    5. ' ().' → logprob: -17.6250057220459
    6. '(' → logprob: -18.1250057220459
    7. '()[' → logprob: -19.5000057220459
    8. '().'' → logprob: -19.7500057220459
    9. '("' → logprob: -20.0000057220459
    10. '().
' → logprob: -20.0000057220459

Token 401: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00039623770862817764
    2. 'strip' → logprob: -8.000395774841309
    3. '().' → logprob: -9.750395774841309
    4. '(split' → logprob: -13.750395774841309
    5. 'rstrip' → logprob: -14.125395774841309
    6. ' split' → logprob: -14.375395774841309
    7. 'spl' → logprob: -16.875396728515625
    8. '.split' → logprob: -17.125396728515625
    9. '()' → logprob: -17.750396728515625
    10. 'plit' → logprob: -18.375396728515625

Token 402: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003299389500170946
    2. ')' → logprob: -5.878299236297607
    3. '()' → logprob: -7.753299236297607
    4. '())
' → logprob: -9.878299713134766
    5. '(' → logprob: -11.628299713134766
    6. '()))' → logprob: -12.753299713134766
    7. '))' → logprob: -14.503299713134766
    8. ' ())' → logprob: -14.503299713134766
    9. '())

' → logprob: -15.253299713134766
    10. '())
' → logprob: -15.253299713134766

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6001120209693909
    2. '<|end|>' → logprob: -1.350111961364746
    3. '   ' → logprob: -2.225111961364746
    4. ' if' → logprob: -2.600111961364746
    5. 'if' → logprob: -6.225111961364746
    6. '\n' → logprob: -6.475111961364746
    7. ' ' → logprob: -6.475111961364746
    8. '
' → logprob: -7.225111961364746
    9. '        
' → logprob: -7.600111961364746
    10. '	if' → logprob: -7.600111961364746

Token 404: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0929294154047966
    2. 'if' (adapté à ' if') → logprob: -2.5929293632507324
    3. '       ' → logprob: -4.342929363250732
    4. '<|end|>' → logprob: -7.092929363250732
    5. '   ' → logprob: -9.84292984008789
    6. '	if' → logprob: -10.59292984008789
    7. ' ' → logprob: -12.21792984008789
    8. 'If' → logprob: -12.34292984008789
    9. '\t' → logprob: -12.46792984008789
    10. '    ' → logprob: -12.84292984008789

Token 405: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.014163628220558167
    2. ' W' → logprob: -4.264163494110107
    3. '(' → logprob: -16.514163970947266
    4. '	W' → logprob: -16.889163970947266
    5. '(W' → logprob: -17.639163970947266
    6. ' ' → logprob: -18.264163970947266
    7. '   ' → logprob: -18.889163970947266
    8. ' (' → logprob: -19.514163970947266
    9. ' ' → logprob: -20.389163970947266
    10. '<W' → logprob: -20.889163970947266

Token 406: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0619727298617363
    2. ' ==' → logprob: -2.8119726181030273
    3. '=' → logprob: -12.686972618103027
    4. '===' → logprob: -14.436972618103027
    5. '<=' → logprob: -14.686972618103027
    6. '<' → logprob: -15.186972618103027
    7. '==
' → logprob: -15.561972618103027
    8. ')==' → logprob: -15.686972618103027
    9. ' ' → logprob: -15.936972618103027
    10. '==-' → logprob: -16.436973571777344

Token 407: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '```' → logprob: -18.250158309936523
    4. 'H' → logprob: -18.375158309936523
    5. '-' → logprob: -19.125158309936523
    6. '
' → logprob: -19.500158309936523
    7. '۰' → logprob: -19.687658309936523
    8. '   ' → logprob: -19.687658309936523
    9. '  ' → logprob: -20.000158309936523
    10. ' H' → logprob: -20.187658309936523

Token 408: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '-' → logprob: -16.75001335144043
    4. 'H' → logprob: -18.37501335144043
    5. '```' → logprob: -18.62501335144043
    6. '۰' → logprob: -19.50001335144043
    7. 'W' → logprob: -19.87501335144043
    8. '  ' → logprob: -20.75001335144043
    9. '<' → logprob: -20.81251335144043
    10. 'and' → logprob: -20.81251335144043

Token 409: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31326475739479065
    2. 'and' → logprob: -1.3132647275924683
    3. ' or' → logprob: -13.188264846801758
    4. ' ' → logprob: -14.313264846801758
    5. '0' → logprob: -15.813264846801758
    6. 'a' → logprob: -16.563264846801758
    7. '	and' → logprob: -16.688264846801758
    8. '<|end|>' → logprob: -16.688264846801758
    9. '   ' → logprob: -17.438264846801758
    10. '  ' → logprob: -17.438264846801758

Token 410: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0015023599844425917
    2. ' H' → logprob: -6.501502513885498
    3. ' ' → logprob: -19.501502990722656
    4. '   ' → logprob: -20.501502990722656
    5. '  ' → logprob: -21.626502990722656
    6. '	H' → logprob: -22.501502990722656
    7. ' ' → logprob: -23.751502990722656
    8. '    ' → logprob: -23.876502990722656
    9. 'W' → logprob: -24.376502990722656
    10. '' → logprob: -24.876502990722656

Token 411: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38689175248146057
    2. '==' → logprob: -1.1368917226791382
    3. '<|end|>' → logprob: -11.88689136505127
    4. ')==' → logprob: -12.26189136505127
    5. '=' → logprob: -12.51189136505127
    6. '0' → logprob: -13.38689136505127
    7. ' ' → logprob: -13.76189136505127
    8. ')' → logprob: -14.13689136505127
    9. ' =' → logprob: -14.63689136505127
    10. '==
' → logprob: -14.88689136505127

Token 412: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.87507438659668
    4. '<|end|>' → logprob: -18.87507438659668
    5. '  ' → logprob: -20.12507438659668
    6. '۰' → logprob: -20.50007438659668
    7. ' ' → logprob: -21.25007438659668
    8. '       ' → logprob: -21.50007438659668
    9. '
' → logprob: -22.00007438659668
    10. '```' → logprob: -22.18757438659668

Token 413: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -20.000001907348633
    4. '۰' → logprob: -20.750001907348633
    5. '   ' → logprob: -21.000001907348633
    6. '  ' → logprob: -22.125001907348633
    7. '<|end|>' → logprob: -22.250001907348633
    8. '
' → logprob: -22.500001907348633
    9. '```' → logprob: -22.937501907348633
    10. '০' → logprob: -23.000001907348633

Token 414: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04861404746770859
    2. ':
' → logprob: -3.048614025115967
    3. '       ' → logprob: -11.298614501953125
    4. ':return' → logprob: -12.048614501953125
    5. '           ' → logprob: -12.423614501953125
    6. '   ' → logprob: -12.673614501953125
    7. ':
' → logprob: -14.298614501953125
    8. ',' → logprob: -15.673614501953125
    9. '):
' → logprob: -15.923614501953125
    10. '):' → logprob: -16.423614501953125

Token 415: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007182692061178386
    2. '       ' → logprob: -7.375718116760254
    3. ':
' → logprob: -10.250718116760254
    4. ':' → logprob: -10.375718116760254
    5. '   ' → logprob: -11.500718116760254
    6. '		' → logprob: -12.500718116760254
    7. '          ' → logprob: -13.000718116760254
    8. '               ' → logprob: -13.125718116760254
    9. '	       ' → logprob: -13.125718116760254
    10. ' break' → logprob: -13.625718116760254

Token 416: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.580565333366394
    2. ' break' → logprob: -0.830565333366394
    3. 'return' → logprob: -5.580565452575684
    4. '	break' → logprob: -7.705565452575684
    5. '       ' → logprob: -8.705565452575684
    6. ' return' → logprob: -8.955565452575684
    7. '           ' → logprob: -9.580565452575684
    8. '   ' → logprob: -10.705565452575684
    9. '_break' → logprob: -12.330565452575684
    10. '               ' → logprob: -13.330565452575684

Token 417: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2461614608764648
    2. '
' → logprob: -1.3711614608764648
    3. '<|end|>' → logprob: -1.6211614608764648
    4. '   ' → logprob: -1.8711614608764648
    5. '```' → logprob: -3.121161460876465
    6. 'floor' → logprob: -3.246161460876465
    7. ' floor' → logprob: -4.996161460876465
    8. '        
' → logprob: -5.496161460876465
    9. '    
' → logprob: -5.621161460876465
    10. ' ' → logprob: -6.746161460876465

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061352260410785675
    2. '   ' → logprob: -3.936352252960205
    3. '```' → logprob: -4.061352252960205
    4. '<|end|>' → logprob: -4.936352252960205
    5. 'floor' → logprob: -5.061352252960205
    6. '
' → logprob: -5.686352252960205
    7. ' floor' → logprob: -5.936352252960205
    8. '        
' → logprob: -6.311352252960205
    9. '        ' → logprob: -8.311352729797363
    10. '	' → logprob: -8.811352729797363

Token 419: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' (adapté à ' floor') → logprob: -0.2014557421207428
    2. ' floor' → logprob: -1.7014557123184204
    3. '```' → logprob: -10.701456069946289
    4. '   ' → logprob: -11.451456069946289
    5. '       ' → logprob: -12.076456069946289
    6. '_floor' → logprob: -13.326456069946289
    7. 'flo' → logprob: -14.576456069946289
    8. '
' → logprob: -15.201456069946289
    9. 'scr' → logprob: -15.451456069946289
    10. '.floor' → logprob: -15.451456069946289

Token 420: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06996966898441315
    2. '=' → logprob: -2.694969654083252
    3. ',' → logprob: -10.44497013092041
    4. '[' → logprob: -13.44497013092041
    5. ' =[' → logprob: -14.19497013092041
    6. '=[]' → logprob: -14.31997013092041
    7. '   ' → logprob: -14.31997013092041
    8. ' ' → logprob: -15.56997013092041
    9. ' =
' → logprob: -15.69497013092041
    10. '.' → logprob: -16.069969177246094

Token 421: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6022834777832031
    2. '[[' → logprob: -0.8522834777832031
    3. ' [' → logprob: -3.852283477783203
    4. ' [[' → logprob: -5.602283477783203
    5. '[int' → logprob: -8.352283477783203
    6. '[input' → logprob: -8.727283477783203
    7. '[array' → logprob: -9.477283477783203
    8. '[f' → logprob: -9.977283477783203
    9. '[new' → logprob: -10.227283477783203
    10. '[list' → logprob: -10.227283477783203

Token 422: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0012186899548396468
    2. '[list' → logprob: -6.751218795776367
    3. ' list' → logprob: -10.251218795776367
    4. '[' → logprob: -11.251218795776367
    5. '(list' → logprob: -17.501218795776367
    6. '[List' → logprob: -17.751218795776367
    7. '[int' → logprob: -18.126218795776367
    8. '=list' → logprob: -18.376218795776367
    9. ' [' → logprob: -18.751218795776367
    10. '[input' → logprob: -19.751218795776367

Token 423: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -9.849109119386412e-06
    2. 'map' → logprob: -11.750009536743164
    3. '(' → logprob: -13.375009536743164
    4. '(int' → logprob: -15.250009536743164
    5. '()' → logprob: -16.875009536743164
    6. ' map' → logprob: -18.625009536743164
    7. '(
' → logprob: -19.125009536743164
    8. '(input' → logprob: -19.375009536743164
    9. ']' → logprob: -19.625009536743164
    10. ' (' → logprob: -19.750009536743164

Token 424: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.493430894101039e-05
    2. 'int' → logprob: -9.625075340270996
    3. '(' → logprob: -12.250075340270996
    4. ',int' → logprob: -13.500075340270996
    5. ']int' → logprob: -14.000075340270996
    6. ')' → logprob: -14.500075340270996
    7. '[int' → logprob: -15.250075340270996
    8. '   ' → logprob: -15.250075340270996
    9. '=int' → logprob: -15.375075340270996
    10. '(
' → logprob: -15.500075340270996

Token 425: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.43036746978759766
    2. ',input' → logprob: -1.1803674697875977
    3. ',' → logprob: -3.1803674697875977
    4. '(' → logprob: -7.680367469787598
    5. 'input' → logprob: -7.680367469787598
    6. ' (' → logprob: -10.930367469787598
    7. '=input' → logprob: -11.555367469787598
    8. ' ,' → logprob: -11.555367469787598
    9. '(
' → logprob: -11.930367469787598
    10. ' input' → logprob: -12.055367469787598

Token 426: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001987398136407137
    2. ' input' → logprob: -6.251987457275391
    3. 'list' → logprob: -9.75198745727539
    4. ' list' → logprob: -15.00198745727539
    5. '(input' → logprob: -16.00198745727539
    6. ',input' → logprob: -17.25198745727539
    7. ')' → logprob: -17.87698745727539
    8. '<input' → logprob: -18.37698745727539
    9. '_input' → logprob: -18.50198745727539
    10. '[input' → logprob: -19.12698745727539

Token 427: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5048530030981055e-06
    2. '()' → logprob: -14.000001907348633
    3. ' ().' → logprob: -15.250001907348633
    4. '(' → logprob: -15.625001907348633
    5. ')' → logprob: -16.000001907348633
    6. '.' → logprob: -16.375001907348633
    7. '.split' → logprob: -18.125001907348633
    8. '))' → logprob: -18.500001907348633
    9. ' .' → logprob: -19.250001907348633
    10. '()))' → logprob: -19.375001907348633

Token 428: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.827200897736475e-05
    2. 'strip' → logprob: -9.500078201293945
    3. 'rstrip' → logprob: -12.750078201293945
    4. ' split' → logprob: -15.000078201293945
    5. '(split' → logprob: -17.125078201293945
    6. 'spl' → logprob: -19.375078201293945
    7. 'str' → logprob: -19.750078201293945
    8. 'read' → logprob: -20.000078201293945
    9. '.split' → logprob: -20.125078201293945
    10. 'input' → logprob: -20.875078201293945

Token 429: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0025093089789152145
    2. '))' → logprob: -6.127509117126465
    3. '()' → logprob: -8.252509117126465
    4. '()))
' → logprob: -9.877509117126465
    5. '(' → logprob: -12.627509117126465
    6. '()
' → logprob: -12.752509117126465
    7. '())' → logprob: -13.002509117126465
    8. '().' → logprob: -13.252509117126465
    9. '()[' → logprob: -14.627509117126465
    10. '()));' → logprob: -14.627509117126465

Token 430: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009716793894767761
    2. '())' → logprob: -5.134716987609863
    3. '()' → logprob: -5.634716987609863
    4. 'for' → logprob: -9.634716987609863
    5. ' for' → logprob: -10.259716987609863
    6. '(' → logprob: -10.384716987609863
    7. ' )' → logprob: -10.509716987609863
    8. ')]' → logprob: -11.259716987609863
    9. '       ' → logprob: -11.384716987609863
    10. '   ' → logprob: -11.384716987609863

Token 431: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001383805531077087
    2. ' range' → logprob: -7.3763837814331055
    3. 'range' → logprob: -7.6263837814331055
    4. ' _' → logprob: -8.376383781433105
    5. '_range' → logprob: -10.251383781433105
    6. ' in' → logprob: -13.751383781433105
    7. '(range' → logprob: -14.376383781433105
    8. '_in' → logprob: -14.501383781433105
    9. '_i' → logprob: -14.501383781433105
    10. 'i' → logprob: -15.001383781433105

Token 432: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022114597260951996
    2. 'range' → logprob: -4.0221147537231445
    3. ' range' → logprob: -5.6471147537231445
    4. 'in' → logprob: -7.7721147537231445
    5. '(range' → logprob: -12.397114753723145
    6. 'i' → logprob: -13.647114753723145
    7. ' ' → logprob: -14.397114753723145
    8. '_' → logprob: -14.397114753723145
    9. '   ' → logprob: -15.272114753723145
    10. '  ' → logprob: -15.522114753723145

Token 433: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234002135694027
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -15.130233764648438
    4. '	range' → logprob: -17.880233764648438
    5. 'H' → logprob: -18.130233764648438
    6. 'r' → logprob: -18.505233764648438
    7. '[' → logprob: -18.880233764648438
    8. '   ' → logprob: -19.380233764648438
    9. ' ' → logprob: -19.630233764648438
    10. '.range' → logprob: -20.630233764648438

Token 434: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.5094070477061905e-05
    2. 'H' → logprob: -11.375015258789062
    3. '(' → logprob: -12.750015258789062
    4. '(W' → logprob: -14.375015258789062
    5. ' (' → logprob: -17.000015258789062
    6. '(
' → logprob: -17.375015258789062
    7. '((' → logprob: -18.375015258789062
    8. '	H' → logprob: -18.750015258789062
    9. ')(' → logprob: -19.750015258789062
    10. '(F' → logprob: -19.750015258789062

Token 435: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.8889261304575484e-06
    2. ')' → logprob: -12.875003814697266
    3. ']' → logprob: -15.000003814697266
    4. ' )' → logprob: -15.375003814697266
    5. ')]
' → logprob: -15.500003814697266
    6. ')])' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.375003814697266
    8. '))' → logprob: -16.500003814697266
    9. ')],' → logprob: -17.250003814697266
    10. '       ' → logprob: -17.250003814697266

Token 436: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9964143633842468
    2. '   ' → logprob: -1.1214144229888916
    3. '<|end|>' → logprob: -1.7464144229888916
    4. '       ' → logprob: -2.1214144229888916
    5. 'result' → logprob: -5.7464141845703125
    6. '    
' → logprob: -6.1214141845703125
    7. '```' → logprob: -6.8714141845703125
    8. '        
' → logprob: -6.8714141845703125
    9. '<|end|>' → logprob: -7.2464141845703125
    10. ' result' → logprob: -7.4964141845703125

Token 437: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.028387269005179405
    2. 'res' → logprob: -3.9033873081207275
    3. ' result' → logprob: -5.653387069702148
    4. 'print' → logprob: -5.903387069702148
    5. 'answer' → logprob: -7.028387069702148
    6. 'ans' → logprob: -7.528387069702148
    7. 'memo' → logprob: -9.278387069702148
    8. ' res' → logprob: -10.778387069702148
    9. ' ans' → logprob: -11.153387069702148
    10. 'min' → logprob: -11.778387069702148

Token 438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006095639429986477
    2. '=' → logprob: -5.1310954093933105
    3. ' ' → logprob: -8.881095886230469
    4. '_' → logprob: -10.631095886230469
    5. ' =
' → logprob: -13.631095886230469
    6. ' ' → logprob: -13.881095886230469
    7. ' =)' → logprob: -15.256095886230469
    8. 'space' → logprob: -15.381095886230469
    9. '_space' → logprob: -15.506095886230469
    10. ')' → logprob: -15.506095886230469

Token 439: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.029750484973192215
    2. 'back' → logprob: -3.5297505855560303
    3. '(back' → logprob: -17.40475082397461
    4. '	back' → logprob: -17.77975082397461
    5. '_back' → logprob: -19.02975082397461
    6. '
' → logprob: -19.15475082397461
    7. '   ' → logprob: -19.52975082397461
    8. 'Back' → logprob: -19.65475082397461
    9. ' ' → logprob: -19.65475082397461
    10. '.back' → logprob: -21.02975082397461

Token 440: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -1.3306015716807451e-05
    2. 't' → logprob: -11.50001335144043
    3. 'tracking' → logprob: -13.50001335144043
    4. 'tract' → logprob: -14.62501335144043
    5. 'tr' → logprob: -14.75001335144043
    6. '_track' → logprob: -15.37501335144043
    7. '(track' → logprob: -16.00001335144043
    8. 'result' → logprob: -16.37501335144043
    9. 'tre' → logprob: -16.37501335144043
    10. 'tracker' → logprob: -16.75001335144043

Token 441: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -5.1689596148207784e-05
    2. '(' → logprob: -9.875051498413086
    3. ' floor' → logprob: -16.375051498413086
    4. ' (' → logprob: -17.000051498413086
    5. '(
' → logprob: -17.375051498413086
    6. '((' → logprob: -18.000051498413086
    7. '_floor' → logprob: -18.250051498413086
    8. '(F' → logprob: -18.625051498413086
    9. 'floor' → logprob: -18.625051498413086
    10. '```' → logprob: -18.750051498413086

Token 442: 'loor' (ID: 5494)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.4080478549003601
    2. 'loor' → logprob: -1.1580479145050049
    3. 'oor' → logprob: -4.033047676086426
    4. '(' → logprob: -6.033047676086426
    5. 'floor' → logprob: -7.408047676086426
    6. '(
' → logprob: -9.408047676086426
    7. 'or' → logprob: -9.658047676086426
    8. ')' → logprob: -11.033047676086426
    9. ',' → logprob: -11.158047676086426
    10. ' floor' → logprob: -11.408047676086426

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003132976416964084
    2. '(W' → logprob: -8.500313758850098
    3. ',W' → logprob: -9.250313758850098
    4. ' ,' → logprob: -11.375313758850098
    5. '(' → logprob: -13.250313758850098
    6. '   ' → logprob: -15.750313758850098
    7. '       ' → logprob: -15.875313758850098
    8. ')' → logprob: -16.25031280517578
    9. ',w' → logprob: -16.75031280517578
    10. ' (' → logprob: -17.75031280517578

Token 444: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -9.639096970204264e-05
    2. ' W' → logprob: -9.250096321105957
    3. '	W' → logprob: -15.500096321105957
    4. '       ' → logprob: -18.500097274780273
    5. '   ' → logprob: -18.750097274780273
    6. ',W' → logprob: -19.000097274780273
    7. '<W' → logprob: -19.125097274780273
    8. '(W' → logprob: -19.875097274780273
    9. '=W' → logprob: -19.875097274780273
    10. '<|end|>' → logprob: -20.750097274780273

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.455048449221067e-05
    2. ' ,' → logprob: -10.250054359436035
    3. ',H' → logprob: -10.875054359436035
    4. ',
' → logprob: -16.12505531311035
    5. '   ' → logprob: -18.00005531311035
    6. 'H' → logprob: -18.12505531311035
    7. ',W' → logprob: -18.12505531311035
    8. ')' → logprob: -19.37505531311035
    9. ' H' → logprob: -19.75005531311035
    10. '-' → logprob: -20.12505531311035

Token 446: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.011048054322600365
    2. ' H' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.13604736328125
    4. '   ' → logprob: -16.51104736328125
    5. '    ' → logprob: -18.01104736328125
    6. '       ' → logprob: -18.13604736328125
    7. '  ' → logprob: -18.63604736328125
    8. '	H' → logprob: -19.01104736328125
    9. '     ' → logprob: -19.26104736328125
    10. '        ' → logprob: -19.88604736328125

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013304755557328463
    2. '0' → logprob: -6.626330375671387
    3. ' ,' → logprob: -12.376330375671387
    4. ')' → logprob: -15.626330375671387
    5. ' ' → logprob: -16.501331329345703
    6. '   ' → logprob: -16.876331329345703
    7. '1' → logprob: -18.626331329345703
    8. '       ' → logprob: -18.751331329345703
    9. '=' → logprob: -18.876331329345703
    10. ',
' → logprob: -19.126331329345703

Token 448: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.250019073486328
    4. '  ' → logprob: -19.562519073486328
    5. '۰' → logprob: -19.562519073486328
    6. '000' → logprob: -19.937519073486328
    7. '00' → logprob: -20.687519073486328
    8. '    ' → logprob: -20.750019073486328
    9. '     ' → logprob: -21.000019073486328
    10. '1' → logprob: -21.000019073486328

Token 449: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.3750057220459
    4. '۰' → logprob: -19.1250057220459
    5. '```' → logprob: -19.3750057220459
    6. '1' → logprob: -19.5625057220459
    7. '000' → logprob: -19.7500057220459
    8. '０' → logprob: -20.5625057220459
    9. '00' → logprob: -20.6250057220459
    10. '  ' → logprob: -21.0625057220459

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8325677703833207e-05
    2. ',m' → logprob: -10.500028610229492
    3. ' ,' → logprob: -14.250028610229492
    4. '   ' → logprob: -16.875028610229492
    5. ')' → logprob: -18.500028610229492
    6. ',
' → logprob: -19.125028610229492
    7. '       ' → logprob: -19.125028610229492
    8. 'm' → logprob: -20.000028610229492
    9. '  ' → logprob: -20.875028610229492
    10. '‌,' → logprob: -21.125028610229492

Token 451: ' dict' (ID: 11878)
  Prédit: '{})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{})' → logprob: -0.0011791547294706106
    2. ' {})' → logprob: -7.001179218292236
    3. '{}' → logprob: -8.251178741455078
    4. 'dict' → logprob: -12.001178741455078
    5. '{})
' → logprob: -15.001178741455078
    6. ')' → logprob: -16.376178741455078
    7. '   ' → logprob: -17.876178741455078
    8. '{' → logprob: -18.001178741455078
    9. '{}
' → logprob: -18.626178741455078
    10. '{}

' → logprob: -18.626178741455078

Token 452: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -7.159660890465602e-05
    2. '())
' → logprob: -10.00007152557373
    3. '()' → logprob: -10.62507152557373
    4. ')' → logprob: -13.75007152557373
    5. '())
' → logprob: -15.00007152557373
    6. '())

' → logprob: -15.12507152557373
    7. ' ())' → logprob: -16.125072479248047
    8. '()))' → logprob: -16.625072479248047
    9. '();)' → logprob: -17.250072479248047
    10. '()
' → logprob: -18.000072479248047

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004221335984766483
    2. 'print' → logprob: -5.879221439361572
    3. '   ' → logprob: -6.629221439361572
    4. '
' → logprob: -9.504220962524414
    5. ' print' → logprob: -11.129220962524414
    6. '```' → logprob: -12.379220962524414
    7. '
' → logprob: -14.754220962524414
    8. '        
' → logprob: -15.004220962524414
    9. '	print' → logprob: -16.379220962524414
    10. '    
' → logprob: -16.504220962524414

Token 454: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.1318875446449965e-05
    2. '       ' → logprob: -10.500041007995605
    3. ' print' → logprob: -11.250041007995605
    4. 'if' → logprob: -14.500041007995605
    5. '   ' → logprob: -15.375041007995605
    6. '```' → logprob: -17.750041961669922
    7. '	print' → logprob: -17.875041961669922
    8. 'printf' → logprob: -18.875041961669922
    9. '
' → logprob: -19.000041961669922
    10. ' if' → logprob: -20.250041961669922

Token 455: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.282920129597187e-05
    2. '(' → logprob: -11.375012397766113
    3. 'result' → logprob: -13.750012397766113
    4. '(res' → logprob: -15.750012397766113
    5. '(results' → logprob: -17.62501335144043
    6. '=result' → logprob: -18.12501335144043
    7. '(resultado' → logprob: -18.62501335144043
    8. '(
' → logprob: -19.00001335144043
    9. ',result' → logprob: -19.25001335144043
    10. ' (' → logprob: -19.25001335144043

Token 456: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')`' → logprob: -15.375000953674316
    3. ' )' → logprob: -16.0
    4. '()' → logprob: -16.875
    5. '())' → logprob: -17.0
    6. '))' → logprob: -17.625
    7. ')
' → logprob: -17.75
    8. ')}' → logprob: -18.5
    9. '   ' → logprob: -18.625
    10. '`)' → logprob: -18.75

Token 457: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10026328265666962
    2. 'main' → logprob: -2.3502633571624756
    3. '```' → logprob: -10.475263595581055
    4. ' if' → logprob: -10.975263595581055
    5. ' main' → logprob: -12.475263595581055
    6. 'for' → logprob: -12.600263595581055
    7. 'can' → logprob: -13.475263595581055
    8. '#' → logprob: -13.600263595581055
    9. '(main' → logprob: -14.475263595581055
    10. '_main' → logprob: -15.475263595581055

Token 458: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023704973980784416
    2. '__' → logprob: -3.773705005645752
    3. '_name' → logprob: -8.023704528808594
    4. '_' → logprob: -9.148704528808594
    5. ' _' → logprob: -11.523704528808594
    6. ' ' → logprob: -11.523704528808594
    7. 'name' → logprob: -12.898704528808594
    8. '___' → logprob: -14.273704528808594
    9. ' ' → logprob: -14.523704528808594
    10. ' ___' → logprob: -15.023704528808594

Token 459: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001923279371112585
    2. ' __' → logprob: -7.001923084259033
    3. ' ==' → logprob: -7.751923084259033
    4. '==' → logprob: -7.876923084259033
    5. '_' → logprob: -8.876923561096191
    6. '__.__' → logprob: -10.751923561096191
    7. '.__' → logprob: -11.751923561096191
    8. '___' → logprob: -12.001923561096191
    9. '__[' → logprob: -12.126923561096191
    10. '__.' → logprob: -12.501923561096191

Token 460: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000657750410027802
    2. '__.__' → logprob: -7.375657558441162
    3. '==' → logprob: -10.50065803527832
    4. '__.' → logprob: -13.00065803527832
    5. '__('' → logprob: -15.12565803527832
    6. '__["' → logprob: -15.25065803527832
    7. '____' → logprob: -15.37565803527832
    8. '__
' → logprob: -15.75065803527832
    9. '=="' → logprob: -16.25065803527832
    10. '___' → logprob: -16.25065803527832

Token 461: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010787796927616
    2. '==' → logprob: -6.8760786056518555
    3. ' ==' → logprob: -10.251078605651855
    4. '__.__' → logprob: -12.126078605651855
    5. '=="' → logprob: -13.251078605651855
    6. '_' → logprob: -13.501078605651855
    7. '=' → logprob: -14.501078605651855
    8. '___' → logprob: -15.126078605651855
    9. '__,' → logprob: -15.626078605651855
    10. '=='' → logprob: -15.876078605651855

Token 462: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12693418562412262
    2. ''' → logprob: -2.126934289932251
    3. ' "__' → logprob: -12.251934051513672
    4. '__' → logprob: -14.251934051513672
    5. ' '__' → logprob: -15.251934051513672
    6. '"user' → logprob: -15.876934051513672
    7. ''"' → logprob: -16.126934051513672
    8. '"_' → logprob: -16.501934051513672
    9. '"name' → logprob: -17.126934051513672
    10. '"'' → logprob: -17.626934051513672

Token 463: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006995969917625189
    2. '__' → logprob: -5.006996154785156
    3. 'name' → logprob: -8.756996154785156
    4. '"' → logprob: -9.131996154785156
    5. ''' → logprob: -11.881996154785156
    6. '_main' → logprob: -13.256996154785156
    7. 'built' → logprob: -13.256996154785156
    8. '__":
' → logprob: -13.756996154785156
    9. ' main' → logprob: -14.006996154785156
    10. '__
' → logprob: -14.506996154785156

Token 464: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.5793743133544922
    2. '__' → logprob: -0.8293743133544922
    3. '__':
' → logprob: -6.329374313354492
    4. '__.__' → logprob: -7.204374313354492
    5. '__.' → logprob: -7.329374313354492
    6. '__:' → logprob: -9.079374313354492
    7. '__["' → logprob: -9.954374313354492
    8. '__
' → logprob: -10.329374313354492
    9. '.' → logprob: -10.829374313354492
    10. '.__' → logprob: -11.329374313354492

Token 465: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0060862768441438675
    2. 'main' → logprob: -5.131086349487305
    3. '	main' → logprob: -9.006086349487305
    4. '   ' → logprob: -10.506086349487305
    5. '_main' → logprob: -12.381086349487305
    6. ' ' → logprob: -13.881086349487305
    7. '    
' → logprob: -14.631086349487305
    8. ' __' → logprob: -14.756086349487305
    9. '(main' → logprob: -14.756086349487305
    10. ' 
' → logprob: -15.131086349487305

Token 466: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.7610454708337784e-05
    2. ' main' → logprob: -10.500027656555176
    3. '	main' → logprob: -18.12502670288086
    4. '   ' → logprob: -18.87502670288086
    5. 'import' → logprob: -19.00002670288086
    6. '.main' → logprob: -23.37502670288086
    7. '(main' → logprob: -23.50002670288086
    8. '_main' → logprob: -24.12502670288086
    9. ' ' → logprob: -24.25002670288086
    10. '  ' → logprob: -25.00002670288086

Token 467: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 465
Tokens correctement prédits (1ère position, stricte): 233
Tokens correctement prédits (1ère position, avec adaptation): 246
Tokens correctement prédits (top 10): 429
Précision stricte (1ère position): 50.11%
Précision adaptée (1ère position): 52.90%
Précision (top 10): 92.26%
================================================================================
