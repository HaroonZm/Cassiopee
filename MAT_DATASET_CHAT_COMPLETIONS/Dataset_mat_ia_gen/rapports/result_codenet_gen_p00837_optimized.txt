================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque, defaultdict

def solve():
    input = sys.stdin.readline
    while True:
        m,c,n = map(int,input().split())
        if m==0 and c==0 and n==0:
            break
        students = []
        total_requests = 0
        for _ in range(n):
            k = int(input())
            reqs = list(map(int,input().split()))
            students.append(deque(reqs))
            total_requests += k

        # Each desk is a list holding up to c books, initially empty
        desks = [[] for _ in range(m)]
        # shelf is all books not on any desk (including initially all books)
        shelf = set()
        # We don't know initial books; all requested books are on shelf initially.
        # So for now shelf contains all books in any request (unique)
        all_books = set()
        for s in students:
            all_books.update(s)
        shelf = set(all_books)

        # For quick lookup of where a book is:
        # book_location: book_id -> loc
        # loc=0..m-1 means desk index, m means shelf
        book_location = dict()
        for b in shelf:
            book_location[b] = m

        # For LRU tracking on D1 desk (desk 0):
        # We'll keep a list of books in order of last use, MRU at end, LRU at start
        # On each request of a book on D1, update LRU to move it to MRU
        d1_lru = deque()

        # Queue of students indexes who have outstanding requests
        queue = deque(i for i in range(n) if students[i])

        cost = 0

        def access_desk(d):
            # cost = d+1
            return d+1

        def access_shelf():
            return m+1

        def put_book_on_desk(d, b):
            desks[d].append(b)
            book_location[b] = d

        def remove_book_from_desk(d, b):
            desks[d].remove(b)
            book_location[b] = m

        def find_nonfull_desk(start, exclude = None):
            # start=0 means from D1 to Dm, but for temp placement:
            # We want closest to entrance that is not full
            # If exclude is not None, exclude that desk index
            for i in range(m):
                if i == exclude:
                    continue
                if len(desks[i])<c:
                    return i
            return None

        def find_lru_on_d1():
            # LRU book is leftmost in d1_lru
            if d1_lru:
                return d1_lru[0]
            return None

        def update_lru(book):
            # Move book to MRU (end of d1_lru)
            try:
                d1_lru.remove(book)
            except:
                pass
            d1_lru.append(book)

        for _ in range(total_requests):
            i = queue.popleft()
            book = students[i].popleft()

            loc = book_location.get(book, m) # default shelf
            # librarian finds book from D1..Dm, then shelf
            # cost for taking book:
            if loc == m:
                cost += access_shelf()
            else:
                cost += access_desk(loc)
            # After taking book out, book is removed from its current location
            if loc == m:
                shelf.remove(book)
            else:
                remove_book_from_desk(loc, book)
                if loc == 0:
                    # removed from D1, remove from LRU
                    try:
                        d1_lru.remove(book)
                    except:
                        pass

            # After giving copy, put book back on D1 according to rules

            if len(desks[0]) < c:
                # put requested book on D1 directly
                put_book_on_desk(0, book)
                update_lru(book)
                cost += access_desk(0)
            else:
                # D1 full
                # temp place requested book on closest non-full desk or shelf
                temp_d = find_nonfull_desk(0)
                temp_on_shelf = False
                if temp_d is None:
                    # all desks full
                    shelf.add(book)
                    book_location[book] = m
                    cost += access_shelf()
                    temp_on_shelf = True
                else:
                    put_book_on_desk(temp_d, book)
                    cost += access_desk(temp_d)

                # find LRU book on D1 and take it out
                lru_book = find_lru_on_d1()
                # remove lru_book from D1
                remove_book_from_desk(0, lru_book)
                d1_lru.popleft()
                cost += access_desk(0)

                # put lru_book on closest non-full desk except D1 or shelf
                lru_d = find_nonfull_desk(0, exclude=0)
                if lru_d is None:
                    shelf.add(lru_book)
                    book_location[lru_book] = m
                    cost += access_shelf()
                else:
                    put_book_on_desk(lru_d, lru_book)
                    cost += access_desk(lru_d)

                # finally take requested book from temp and put on D1
                if temp_on_shelf:
                    # remove from shelf
                    shelf.remove(book)
                    cost += access_shelf()
                else:
                    remove_book_from_desk(temp_d, book)
                    cost += access_desk(temp_d)

                put_book_on_desk(0, book)
                update_lru(book)
                cost += access_desk(0)

            # If student has more requests, go to queue end
            if students[i]:
                queue.append(i)

        print(cost)

if __name__=="__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6405937671661377
    2. '.' → logprob: -0.8905937671661377
    3. 'import' → logprob: -4.015593528747559
    4. 'newline' → logprob: -4.265593528747559
    5. '\' → logprob: -4.765593528747559
    6. '<|end|>' → logprob: -5.015593528747559
    7. '```' → logprob: -5.390593528747559
    8. '
' → logprob: -5.765593528747559
    9. '<|end|>' → logprob: -6.515593528747559
    10. '' → logprob: -6.515593528747559

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.019719837233424187
    2. 'os' → logprob: -4.01971960067749
    3. ' pathlib' → logprob: -8.019720077514648
    4. ' math' → logprob: -8.144720077514648
    5. ' Py' → logprob: -8.144720077514648
    6. ' collections' → logprob: -8.519720077514648
    7. ' ' → logprob: -9.144720077514648
    8. 'collections' → logprob: -9.894720077514648
    9. ' datetime' → logprob: -10.019720077514648
    10. ' subprocess' → logprob: -10.644720077514648

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.30307236313819885
    2. 'import' → logprob: -1.4280723333358765
    3. '.' → logprob: -3.928072452545166
    4. '```' → logprob: -7.053072452545166
    5. ' ' → logprob: -7.178072452545166
    6. '_' → logprob: -9.178071975708008
    7. '.import' → logprob: -9.428071975708008
    8. '<|end|>' → logprob: -10.178071975708008
    9. '_import' → logprob: -10.678071975708008
    10. '	import' → logprob: -10.803071975708008

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.6384097933769226
    2. ' deque' → logprob: -0.8884097933769226
    3. 'deque' → logprob: -2.8884098529815674
    4. ' abc' → logprob: -5.638409614562988
    5. ' named' → logprob: -7.638409614562988
    6. 'abc' → logprob: -7.888409614562988
    7. 'named' → logprob: -8.763409614562988
    8. ' Counter' → logprob: -8.888409614562988
    9. 'default' → logprob: -9.013409614562988
    10. 'Counter' → logprob: -10.638409614562988

Token 7: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9521250128746033
    2. '

' → logprob: -1.327125072479248
    3. '
' → logprob: -1.702125072479248
    4. 'import' → logprob: -2.327125072479248
    5. '```' → logprob: -3.202125072479248
    6. '\' → logprob: -3.827125072479248
    7. 'newline' → logprob: -6.577125072479248
    8. '<|end|>' → logprob: -6.577125072479248
    9. '<|end|>' → logprob: -7.452125072479248
    10. '' → logprob: -7.452125072479248

Token 8: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.33442339301109314
    2. 'default' → logprob: -1.3344234228134155
    3. 'named' → logprob: -4.209423542022705
    4. 'Ordered' → logprob: -6.209423542022705
    5. 'Counter' → logprob: -6.209423542022705
    6. ' named' → logprob: -6.459423542022705
    7. ' Counter' → logprob: -8.084423065185547
    8. ' Ordered' → logprob: -8.834423065185547
    9. 'deque' → logprob: -10.959423065185547
    10. ' default' → logprob: -12.209423065185547

Token 9: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.15079721808433533
    2. '
' → logprob: -2.400797128677368
    3. '```' → logprob: -3.775797128677368
    4. 'import' → logprob: -4.650797367095947
    5. '\n' → logprob: -5.525797367095947
    6. ',' → logprob: -5.650797367095947
    7. '<|end|>' → logprob: -5.650797367095947
    8. ' 

' → logprob: -6.275797367095947
    9. '


' → logprob: -7.275797367095947
    10. '``' → logprob: -7.525797367095947

Token 10: 'def' (ID: 1314)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8607555627822876
    2. '```' → logprob: -1.1107555627822876
    3. ',' → logprob: -2.360755443572998
    4. '

' → logprob: -2.860755443572998
    5. '
' → logprob: -3.860755443572998
    6. '`' → logprob: -4.110755443572998
    7. '\' → logprob: -4.235755443572998
    8. '\n' → logprob: -4.610755443572998
    9. 'def' → logprob: -4.735755443572998
    10. '#' → logprob: -4.985755443572998

Token 11: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2715282142162323
    2. ' bfs' → logprob: -1.8965282440185547
    3. ' process' → logprob: -3.0215282440185547
    4. ' main' → logprob: -4.646528244018555
    5. ' space' → logprob: -5.521528244018555
    6. '_' → logprob: -5.771528244018555
    7. ' dfs' → logprob: -5.896528244018555
    8. ' read' → logprob: -6.021528244018555
    9. ' BFS' → logprob: -6.396528244018555
    10. ' calculate' → logprob: -6.896528244018555

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014965442940592766
    2. '():' → logprob: -5.139965534210205
    3. '_' → logprob: -5.389965534210205
    4. '(:' → logprob: -6.639965534210205
    5. ':' → logprob: -7.014965534210205
    6. '```' → logprob: -7.139965534210205
    7. '(":' → logprob: -8.264965057373047
    8. '):' → logprob: -8.764965057373047
    9. '_:' → logprob: -8.889965057373047
    10. ' (' → logprob: -9.264965057373047

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1970730423927307
    2. '    ' → logprob: -2.322072982788086
    3. 'n' → logprob: -3.947072982788086
    4. '    
' → logprob: -4.197072982788086
    5. ' ' → logprob: -4.572072982788086
    6. ' n' → logprob: -5.072072982788086
    7. 'input' → logprob: -5.197072982788086
    8. ' 
' → logprob: -5.697072982788086
    9. '\' → logprob: -5.697072982788086
    10. '\n' → logprob: -5.822072982788086

Token 14: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5072454214096069
    2. ' queue' → logprob: -1.882245421409607
    3. 'n' → logprob: -2.3822455406188965
    4. '   ' → logprob: -3.1322455406188965
    5. ' q' → logprob: -3.5072455406188965
    6. ' input' → logprob: -3.5072455406188965
    7. 'input' (adapté à ' input') → logprob: -4.8822455406188965
    8. 'queue' → logprob: -5.0072455406188965
    9. ' ' → logprob: -5.0072455406188965
    10. ' data' → logprob: -5.2572455406188965

Token 15: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018695320934057236
    2. '()' → logprob: -4.14369535446167
    3. '_data' → logprob: -7.01869535446167
    4. '('' → logprob: -7.89369535446167
    5. ' (' → logprob: -8.393694877624512
    6. '_' → logprob: -8.768694877624512
    7. '_line' → logprob: -9.018694877624512
    8. '().' → logprob: -9.143694877624512
    9. '.' → logprob: -9.143694877624512
    10. ' =' → logprob: -9.518694877624512

Token 16: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0789460837841034
    2. 'sys' → logprob: -2.578946113586426
    3. ' input' → logprob: -10.328946113586426
    4. 'input' → logprob: -10.828946113586426
    5. '	sys' → logprob: -13.078946113586426
    6. '=sys' → logprob: -14.078946113586426
    7. ' ' → logprob: -14.703946113586426
    8. ' lambda' → logprob: -15.453946113586426
    9. '(sys' → logprob: -15.828946113586426
    10. 'lambda' → logprob: -16.57894515991211

Token 17: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5797246694564819
    2. '.stdin' → logprob: -0.8297246694564819
    3. '.readline' → logprob: -5.8297247886657715
    4. '.stdout' → logprob: -7.8297247886657715
    5. '.argv' → logprob: -9.079724311828613
    6. '```' → logprob: -9.579724311828613
    7. 'stdin' → logprob: -9.829724311828613
    8. '().' → logprob: -10.079724311828613
    9. '​.' → logprob: -10.704724311828613
    10. '.\' → logprob: -10.829724311828613

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.009907304309308529
    2. '.read' → logprob: -5.009907245635986
    3. '.' → logprob: -5.759907245635986
    4. '.stdin' → logprob: -10.509907722473145
    5. '.readlines' → logprob: -12.634907722473145
    6. '.Read' → logprob: -13.259907722473145
    7. '.buffer' → logprob: -13.759907722473145
    8. 'read' → logprob: -13.884907722473145
    9. ' readline' → logprob: -15.384907722473145
    10. '.READ' → logprob: -15.509907722473145

Token 19: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0036070786882191896
    2. '(' → logprob: -6.378607273101807
    3. '()
' → logprob: -6.378607273101807
    4. '(
' → logprob: -9.753606796264648
    5. '()\' → logprob: -9.753606796264648
    6. ' ()' → logprob: -10.753606796264648
    7. '()

' → logprob: -10.753606796264648
    8. '().' → logprob: -10.878606796264648
    9. '()`' → logprob: -12.003606796264648
    10. '
' → logprob: -12.253606796264648

Token 20: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3091278374195099
    2. '   ' → logprob: -2.0591278076171875
    3. '(' → logprob: -2.9341278076171875
    4. '()
' → logprob: -3.8091278076171875
    5. '    
' → logprob: -3.9341278076171875
    6. '(n' → logprob: -4.1841278076171875
    7. '
' → logprob: -4.4341278076171875
    8. '(
' → logprob: -5.3091278076171875
    9. '\' → logprob: -5.4341278076171875
    10. '```' → logprob: -6.8091278076171875

Token 21: ' while' (ID: 2049)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6725356578826904
    2. '(' → logprob: -1.1725356578826904
    3. 'n' → logprob: -2.0475356578826904
    4. '   ' → logprob: -3.2975356578826904
    5. 'data' → logprob: -5.6725358963012695
    6. '(n' → logprob: -5.6725358963012695
    7. ' n' → logprob: -6.5475358963012695
    8. 's' → logprob: -7.0475358963012695
    9. 't' → logprob: -7.4225358963012695
    10. ' ()' → logprob: -7.4225358963012695

Token 22: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.03215665742754936
    2. 'True' → logprob: -3.5321567058563232
    3. '(True' → logprob: -6.032156467437744
    4. ' ' → logprob: -13.657156944274902
    5. '=True' → logprob: -15.157156944274902
    6. ' (' → logprob: -15.282156944274902
    7. '1' → logprob: -15.532156944274902
    8. ' not' → logprob: -15.532156944274902
    9. '(' → logprob: -15.532156944274902
    10. '()' → logprob: -15.657156944274902

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16418959200382233
    2. '():' → logprob: -1.9141895771026611
    3. '(' → logprob: -6.41418981552124
    4. '):' → logprob: -7.16418981552124
    5. ' :' → logprob: -7.78918981552124
    6. '       ' → logprob: -8.289189338684082
    7. ',' → logprob: -8.289189338684082
    8. '   ' → logprob: -8.414189338684082
    9. ':**' → logprob: -8.664189338684082
    10. '    ' → logprob: -9.914189338684082

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13502806425094604
    2. '    ' → logprob: -2.635028123855591
    3. ' ' → logprob: -3.260028123855591
    4. '   ' → logprob: -5.135027885437012
    5. '        
' → logprob: -5.635027885437012
    6. '        ' → logprob: -6.385027885437012
    7. '<|end|>' → logprob: -6.760027885437012
    8. '      ' → logprob: -7.260027885437012
    9. '     ' → logprob: -7.510027885437012
    10. '  ' → logprob: -7.760027885437012

Token 25: ' m' (ID: 284)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.49396267533302307
    2. 'line' → logprob: -1.8689626455307007
    3. 'n' → logprob: -1.9939626455307007
    4. ' n' → logprob: -2.9939627647399902
    5. 'data' → logprob: -3.7439627647399902
    6. 's' → logprob: -4.49396276473999
    7. ' data' → logprob: -4.99396276473999
    8. '   ' → logprob: -5.74396276473999
    9. '       ' → logprob: -6.49396276473999
    10. ' s' → logprob: -6.49396276473999

Token 26: ',c' (ID: 22261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.553382396697998
    2. ',' → logprob: -1.303382396697998
    3. '=' → logprob: -2.303382396697998
    4. 'y' → logprob: -4.303382396697998
    5. ' ,' → logprob: -4.553382396697998
    6. 'sg' → logprob: -4.928382396697998
    7. ' ' → logprob: -5.303382396697998
    8. '  ' → logprob: -6.053382396697998
    9. ')' → logprob: -6.428382396697998
    10. 'aybe' → logprob: -6.553382396697998

Token 27: ',n' (ID: 18103)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6347634196281433
    2. '=' → logprob: -0.7597634196281433
    3. ',' → logprob: -7.009763240814209
    4. ' ' → logprob: -7.509763240814209
    5. 'ount' → logprob: -9.259763717651367
    6. 'h' → logprob: -9.384763717651367
    7. '=input' → logprob: -9.509763717651367
    8. '  ' → logprob: -10.009763717651367
    9. 'a' → logprob: -10.134763717651367
    10. '=line' → logprob: -10.259763717651367

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759766697883606
    2. '=' → logprob: -0.8259766697883606
    3. ',' → logprob: -10.950976371765137
    4. ' ' → logprob: -11.825976371765137
    5. '=input' → logprob: -12.075976371765137
    6. ')' → logprob: -13.075976371765137
    7. '=line' → logprob: -13.950976371765137
    8. '  ' → logprob: -14.200976371765137
    9. '=int' → logprob: -14.200976371765137
    10. '   ' → logprob: -14.575976371765137

Token 29: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07408691197633743
    2. 'map' → logprob: -2.699086904525757
    3. ' input' → logprob: -5.949087142944336
    4. 'input' → logprob: -6.574087142944336
    5. ' list' → logprob: -9.199087142944336
    6. 'list' → logprob: -11.074087142944336
    7. ' tuple' → logprob: -12.449087142944336
    8. '[' → logprob: -12.699087142944336
    9. ' sys' → logprob: -12.699087142944336
    10. '(map' → logprob: -12.699087142944336

Token 30: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2312040776014328
    2. '(str' → logprob: -1.9812040328979492
    3. '(int' → logprob: -2.856204032897949
    4. '(input' → logprob: -4.606204032897949
    5. '(lambda' → logprob: -7.356204032897949
    6. '(list' → logprob: -8.73120403289795
    7. '(eval' → logprob: -9.73120403289795
    8. '(sys' → logprob: -10.23120403289795
    9. '(line' → logprob: -10.23120403289795
    10. '(len' → logprob: -10.35620403289795

Token 31: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09063643217086792
    2. ',input' → logprob: -2.4656364917755127
    3. '(' → logprob: -7.215636253356934
    4. '(sys' → logprob: -7.965636253356934
    5. '(input' → logprob: -8.090636253356934
    6. ')' → logprob: -9.215636253356934
    7. ',(' → logprob: -9.590636253356934
    8. ',int' → logprob: -10.465636253356934
    9. ' ,' → logprob: -10.715636253356934
    10. 'input' → logprob: -11.090636253356934

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00015419373812619597
    2. '()' → logprob: -8.875154495239258
    3. '())' → logprob: -11.250154495239258
    4. ' ().' → logprob: -14.500154495239258
    5. '(' → logprob: -14.750154495239258
    6. ')' → logprob: -15.875154495239258
    7. '()
' → logprob: -16.250154495239258
    8. '()))' → logprob: -17.250154495239258
    9. '('').' → logprob: -17.625154495239258
    10. '();)' → logprob: -17.750154495239258

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.030637383460998535
    2. 'strip' → logprob: -3.530637264251709
    3. 'rstrip' → logprob: -7.030637264251709
    4. '(split' → logprob: -13.905637741088867
    5. ' split' → logprob: -14.780637741088867
    6. 'read' → logprob: -14.780637741088867
    7. 'rs' → logprob: -15.405637741088867
    8. ')' → logprob: -16.405637741088867
    9. ' strip' → logprob: -16.655637741088867
    10. '().' → logprob: -17.030637741088867

Token 34: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045721616595983505
    2. '())' → logprob: -3.1707215309143066
    3. '()' → logprob: -6.170721530914307
    4. '))' → logprob: -7.420721530914307
    5. ')
' → logprob: -11.920722007751465
    6. '(' → logprob: -12.045722007751465
    7. '()))' → logprob: -12.170722007751465
    8. '())
' → logprob: -12.170722007751465
    9. ')))' → logprob: -13.295722007751465
    10. '),' → logprob: -13.795722007751465

Token 35: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.007680446375161409
    2. 'm' → logprob: -5.007680416107178
    3. ' not' → logprob: -7.007680416107178
    4. ' ' → logprob: -10.632680892944336
    5. ' (' → logprob: -10.882680892944336
    6. 'not' → logprob: -11.132680892944336
    7. '(m' → logprob: -14.132680892944336
    8. ' ' → logprob: -14.257680892944336
    9. '	m' → logprob: -15.257680892944336
    10. '  ' → logprob: -15.382680892944336

Token 38: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01723666489124298
    2. '==' → logprob: -4.392236709594727
    3. ' <' → logprob: -6.017236709594727
    4. ' <=' → logprob: -6.267236709594727
    5. '<' → logprob: -8.142236709594727
    6. '<=' → logprob: -10.017236709594727
    7. ' ' → logprob: -10.517236709594727
    8. '=' → logprob: -12.017236709594727
    9. ' =' → logprob: -12.517236709594727
    10. ' ' → logprob: -13.392236709594727

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003619217313826084
    2. ' ' → logprob: -8.250362396240234
    3. 'c' → logprob: -9.250362396240234
    4. '-' → logprob: -13.375362396240234
    5. ' c' → logprob: -13.625362396240234
    6. '   ' → logprob: -14.625362396240234
    7. '```' → logprob: -15.000362396240234
    8. '  ' → logprob: -15.125362396240234
    9. 'n' → logprob: -15.750362396240234
    10. '=' → logprob: -16.125362396240234

Token 40: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0035588506143540144
    2. 'and' → logprob: -5.87855863571167
    3. ':' → logprob: -7.25355863571167
    4. ' ' → logprob: -10.628559112548828
    5. ' or' → logprob: -11.003559112548828
    6. ' :' → logprob: -13.378559112548828
    7. '	and' → logprob: -13.378559112548828
    8. ' a' → logprob: -14.253559112548828
    9. ' ' → logprob: -14.628559112548828
    10. ',' → logprob: -15.628559112548828

Token 41: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.12692883610725403
    2. 'c' → logprob: -2.1269288063049316
    3. ' ' → logprob: -15.12692928314209
    4. ' ' → logprob: -15.25192928314209
    5. '	c' → logprob: -15.37692928314209
    6. ',c' → logprob: -17.501928329467773
    7. '  ' → logprob: -17.626928329467773
    8. ')c' → logprob: -18.251928329467773
    9. '   ' → logprob: -18.501928329467773
    10. ',' → logprob: -18.939428329467773

Token 42: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0002683688362594694
    2. ' ==' → logprob: -8.25026798248291
    3. '=' → logprob: -12.75026798248291
    4. '===' → logprob: -12.87526798248291
    5. '0' → logprob: -14.62526798248291
    6. '()==' → logprob: -14.75026798248291
    7. ']==' → logprob: -15.75026798248291
    8. '==-' → logprob: -15.75026798248291
    9. '==
' → logprob: -15.87526798248291
    10. ')==' → logprob: -16.125268936157227

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -18.500015258789062
    4. '  ' → logprob: -18.875015258789062
    5. '   ' → logprob: -19.250015258789062
    6. ' and' → logprob: -19.500015258789062
    7. 'and' → logprob: -19.875015258789062
    8. '۰' → logprob: -20.000015258789062
    9. '=' → logprob: -20.375015258789062
    10. '```' → logprob: -20.750015258789062

Token 44: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0022009287495166063
    2. 'and' → logprob: -6.127201080322266
    3. ' ' → logprob: -11.627201080322266
    4. '	and' → logprob: -12.502201080322266
    5. '<|end|>' → logprob: -13.877201080322266
    6. '<|end|>' → logprob: -13.877201080322266
    7. ' ' → logprob: -14.752201080322266
    8. '0' → logprob: -15.002201080322266
    9. ':' → logprob: -15.627201080322266
    10. ' и' → logprob: -16.377201080322266

Token 45: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759445428848267
    2. ' n' → logprob: -0.8259445428848267
    3. '   ' → logprob: -13.450944900512695
    4. '	n' → logprob: -13.700944900512695
    5. '0' → logprob: -13.825944900512695
    6. ' ' → logprob: -14.075944900512695
    7. '  ' → logprob: -15.325944900512695
    8. ' ' → logprob: -15.450944900512695
    9. '<|end|>' → logprob: -16.575944900512695
    10. ' and' → logprob: -16.825944900512695

Token 46: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07923466712236404
    2. ' ==' → logprob: -2.5792346000671387
    3. '=' → logprob: -8.579235076904297
    4. '0' → logprob: -9.329235076904297
    5. ' ' → logprob: -10.704235076904297
    6. ')==' → logprob: -11.329235076904297
    7. '<|end|>' → logprob: -11.329235076904297
    8. '===' → logprob: -11.954235076904297
    9. '<|end|>' → logprob: -12.329235076904297
    10. '==
' → logprob: -13.329235076904297

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.625085830688477
    4. '<|end|>' → logprob: -17.750085830688477
    5. '  ' → logprob: -18.125085830688477
    6. '۰' → logprob: -18.250085830688477
    7. '```' → logprob: -19.937585830688477
    8. '০' → logprob: -20.125085830688477
    9. ' ' → logprob: -20.125085830688477
    10. '<|end|>' → logprob: -20.250085830688477

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015550498210359365
    2. ':
' → logprob: -9.125155448913574
    3. ':return' → logprob: -10.750155448913574
    4. '           ' → logprob: -11.250155448913574
    5. '       ' → logprob: -12.250155448913574
    6. ' :' → logprob: -12.750155448913574
    7. '   ' → logprob: -13.000155448913574
    8. '):' → logprob: -14.250155448913574
    9. ' break' → logprob: -14.750155448913574
    10. '.' → logprob: -14.875155448913574

Token 49: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002622624160721898
    2. '       ' → logprob: -6.127622604370117
    3. '		' → logprob: -9.002622604370117
    4. ':' → logprob: -9.502622604370117
    5. ' break' → logprob: -9.752622604370117
    6. '   ' → logprob: -9.877622604370117
    7. '	break' → logprob: -10.502622604370117
    8. '               ' → logprob: -10.877622604370117
    9. '	       ' → logprob: -11.252622604370117
    10. '          ' → logprob: -11.502622604370117

Token 50: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2732860743999481
    2. '           ' → logprob: -1.7732861042022705
    3. 'break' (adapté à ' break') → logprob: -2.7732861042022705
    4. '       ' → logprob: -5.898285865783691
    5. ' return' → logprob: -6.148285865783691
    6. 'return' → logprob: -6.523285865783691
    7. '               ' → logprob: -7.898285865783691
    8. '	break' → logprob: -9.273285865783691
    9. '   ' → logprob: -10.023285865783691
    10. '_break' → logprob: -11.398285865783691

Token 51: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15549346804618835
    2. '
' → logprob: -2.5304934978485107
    3. '        
' → logprob: -3.4054934978485107
    4. '<|end|>' → logprob: -4.405493259429932
    5. '        ' → logprob: -5.280493259429932
    6. '' → logprob: -5.405493259429932
    7. '\n' → logprob: -5.530493259429932
    8. '    
' → logprob: -7.405493259429932
    9. '    ' → logprob: -7.530493259429932
    10. '   ' → logprob: -7.655493259429932

Token 52: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41434624791145325
    2. '       ' → logprob: -1.2893462181091309
    3. '        
' → logprob: -3.164346218109131
    4. '<|end|>' → logprob: -5.164346218109131
    5. '    
' → logprob: -5.414346218109131
    6. '' → logprob: -6.039346218109131
    7. '\n' → logprob: -6.039346218109131
    8. '   ' → logprob: -6.414346218109131
    9. '
' → logprob: -6.914346218109131
    10. '```' → logprob: -7.289346218109131

Token 53: ' students' (ID: 4501)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5289617776870728
    2. '        
' → logprob: -2.653961658477783
    3. 'graph' → logprob: -3.653961658477783
    4. 'dp' → logprob: -3.778961658477783
    5. 'd' → logprob: -4.028961658477783
    6. '        ' → logprob: -4.153961658477783
    7. 'dist' → logprob: -4.341461658477783
    8. 's' → logprob: -4.528961658477783
    9. 'queue' → logprob: -4.528961658477783
    10. 'n' → logprob: -4.778961658477783

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015387996099889278
    2. '=' → logprob: -4.265388011932373
    3. ',' → logprob: -7.390388011932373
    4. '[' → logprob: -8.640387535095215
    5. '_' → logprob: -8.765387535095215
    6. '_counts' → logprob: -10.265387535095215
    7. '_count' → logprob: -10.265387535095215
    8. ' ,' → logprob: -10.390387535095215
    9. '_scores' → logprob: -11.015387535095215
    10. '=[]' → logprob: -11.015387535095215

Token 55: ' []
' (ID: 8911)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.7616555094718933
    2. '[]' → logprob: -1.886655569076538
    3. ' []' → logprob: -2.136655569076538
    4. 'default' → logprob: -2.386655569076538
    5. ' [' → logprob: -2.761655569076538
    6. ' deque' → logprob: -3.386655569076538
    7. 'deque' → logprob: -3.511655569076538
    8. '[' → logprob: -3.636655569076538
    9. '{}' → logprob: -4.386655330657959
    10. ' {}' → logprob: -5.511655330657959

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4674034118652344
    2. '<|end|>' → logprob: -2.0924034118652344
    3. ' for' → logprob: -2.2174034118652344
    4. 'for' → logprob: -2.4674034118652344
    5. '[' → logprob: -4.217403411865234
    6. '<|end|>' → logprob: -4.967403411865234
    7. '        
' → logprob: -5.217403411865234
    8. '   ' → logprob: -5.342403411865234
    9. '	for' → logprob: -5.592403411865234
    10. ' ' → logprob: -5.842403411865234

Token 57: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0857289731502533
    2. ' for' → logprob: -3.085728883743286
    3. '       ' → logprob: -4.210729122161865
    4. '   ' → logprob: -5.710729122161865
    5. 'graph' → logprob: -5.835729122161865
    6. 'votes' → logprob: -5.835729122161865
    7. 'stack' → logprob: -6.710729122161865
    8. 'queue' → logprob: -7.210729122161865
    9. 'score' → logprob: -7.210729122161865
    10. 'visited' → logprob: -7.460729122161865

Token 58: '_requests' (ID: 89627)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3400704860687256
    2. ' =' → logprob: -1.3400704860687256
    3. '_' → logprob: -1.5900704860687256
    4. '_scores' → logprob: -2.5900704860687256
    5. '_points' → logprob: -2.8400704860687256
    6. '_score' → logprob: -3.4650704860687256
    7. '_cost' → logprob: -3.7150704860687256
    8. '_students' → logprob: -3.7150704860687256
    9. '_votes' → logprob: -4.715070724487305
    10. '_time' → logprob: -5.215070724487305

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025904078502207994
    2. '=' → logprob: -6.377590179443359
    3. ' +=' → logprob: -7.127590179443359
    4. '.append' → logprob: -11.00259017944336
    5. ')' → logprob: -11.25259017944336
    6. '.extend' → logprob: -11.87759017944336
    7. '[' → logprob: -11.87759017944336
    8. '[:]' → logprob: -12.12759017944336
    9. ' ' → logprob: -12.25259017944336
    10. '<|end|>' → logprob: -12.50259017944336

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2827126383781433
    2. ' ' → logprob: -1.407712697982788
    3. ' defaultdict' → logprob: -7.782712459564209
    4. ' []' → logprob: -7.907712459564209
    5. '[]' → logprob: -8.157712936401367
    6. ' n' → logprob: -8.782712936401367
    7. 'n' → logprob: -9.157712936401367
    8. ' [' → logprob: -9.657712936401367
    9. '[' → logprob: -10.407712936401367
    10. 'deque' → logprob: -10.657712936401367

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0037680165842175484
    2. '[]' → logprob: -6.753767967224121
    3. '{}' → logprob: -6.878767967224121
    4. ' ' → logprob: -7.253767967224121
    5. 'n' → logprob: -8.003767967224121
    6. '[' → logprob: -8.253767967224121
    7. 'default' → logprob: -9.628767967224121
    8. 'deque' → logprob: -9.753767967224121
    9. 'sum' → logprob: -10.378767967224121
    10. ' defaultdict' → logprob: -10.753767967224121

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18420472741127014
    2. '
' → logprob: -2.6842048168182373
    3. '<|end|>' → logprob: -3.1842048168182373
    4. '        
' → logprob: -3.3092048168182373
    5. ' ' → logprob: -5.309204578399658
    6. '        ' → logprob: -5.684204578399658
    7. '<|end|>' → logprob: -6.309204578399658
    8. '' → logprob: -6.309204578399658
    9. '	' → logprob: -6.434204578399658
    10. '		
' → logprob: -6.559204578399658

Token 64: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21519044041633606
    2. 'for' (adapté à ' for') → logprob: -2.3401904106140137
    3. ' requests' → logprob: -3.5901904106140137
    4. ' queue' → logprob: -3.9651904106140137
    5. '       ' → logprob: -4.715190410614014
    6. ' seats' → logprob: -4.715190410614014
    7. 'requests' → logprob: -5.340190410614014
    8. ' capacity' → logprob: -5.465190410614014
    9. ' queues' → logprob: -6.527690410614014
    10. 'queue' → logprob: -6.965190410614014

Token 65: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0019480334594845772
    2. '_' → logprob: -6.25194787979126
    3. ' i' → logprob: -11.376948356628418
    4. ' ' → logprob: -11.751948356628418
    5. ' ' → logprob: -16.3769474029541
    6. ' ‌' → logprob: -17.5019474029541
    7. ' in' → logprob: -17.8769474029541
    8. '_i' → logprob: -18.1269474029541
    9. ' _
' → logprob: -19.6269474029541
    10. 'i' → logprob: -19.7519474029541

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020573768764734268
    2. 'in' → logprob: -3.895573854446411
    3. ' ' → logprob: -10.770573616027832
    4. 'n' → logprob: -13.020573616027832
    5. 'i' → logprob: -13.520573616027832
    6. 'import' → logprob: -14.020573616027832
    7. '  ' → logprob: -14.020573616027832
    8. '	in' → logprob: -14.020573616027832
    9. 's' → logprob: -14.270573616027832
    10. 'm' → logprob: -14.770573616027832

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013319060672074556
    2. ' range' → logprob: -6.626331806182861
    3. '(range' → logprob: -13.12633228302002
    4. 'students' → logprob: -14.00133228302002
    5. '	range' → logprob: -14.00133228302002
    6. 'ange' → logprob: -15.00133228302002
    7. 'input' → logprob: -15.25133228302002
    8. 'c' → logprob: -15.62633228302002
    9. '```' → logprob: -15.62633228302002
    10. ' ' → logprob: -15.62633228302002

Token 68: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06849958002567291
    2. '(' → logprob: -2.9434995651245117
    3. ' (' → logprob: -4.943499565124512
    4. '(m' → logprob: -5.068499565124512
    5. ' n' → logprob: -9.943499565124512
    6. '(range' → logprob: -10.443499565124512
    7. '(c' → logprob: -11.193499565124512
    8. '(s' → logprob: -12.318499565124512
    9. ' ' → logprob: -12.443499565124512
    10. '(int' → logprob: -13.943499565124512

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003078363835811615
    2. '):
' → logprob: -6.003078460693359
    3. ' ):' → logprob: -7.503078460693359
    4. ':' → logprob: -10.75307846069336
    5. '   ' → logprob: -11.75307846069336
    6. '):
' → logprob: -11.87807846069336
    7. ')' → logprob: -12.12807846069336
    8. '():' → logprob: -13.12807846069336
    9. '       ' → logprob: -13.25307846069336
    10. ' ' → logprob: -13.75307846069336

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20772933959960938
    2. '   ' → logprob: -1.9577293395996094
    3. '       ' → logprob: -4.207729339599609
    4. ' students' → logprob: -4.332729339599609
    5. '	   ' → logprob: -5.207729339599609
    6. '    	   ' → logprob: -6.582729339599609
    7. ' s' → logprob: -6.582729339599609
    8. '<|end|>' → logprob: -6.582729339599609
    9. ',' → logprob: -6.832729339599609
    10. '	       ' → logprob: -6.957729339599609

Token 71: ' k' (ID: 372)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.961193323135376
    2. ' s' → logprob: -1.961193323135376
    3. ' student' → logprob: -2.086193323135376
    4. ' a' → logprob: -2.461193323135376
    5. 's' → logprob: -2.586193323135376
    6. ' line' → logprob: -2.961193323135376
    7. ' students' → logprob: -3.461193323135376
    8. ' name' → logprob: -3.586193323135376
    9. 'student' → logprob: -3.711193323135376
    10. ' p' → logprob: -4.086193084716797

Token 72: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24917958676815033
    2. ' =' → logprob: -1.8741796016693115
    3. ',k' → logprob: -3.4991796016693115
    4. '=' → logprob: -3.8741796016693115
    5. ' ,' → logprob: -4.874179363250732
    6. '=int' → logprob: -6.624179363250732
    7. ',s' → logprob: -6.874179363250732
    8. ',int' → logprob: -7.249179363250732
    9. ',num' → logprob: -7.374179363250732
    10. ' ' → logprob: -8.24917984008789

Token 73: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2519683837890625
    2. 'int' → logprob: -1.5019683837890625
    3. ' ' → logprob: -11.376968383789062
    4. '  ' → logprob: -11.501968383789062
    5. '	int' → logprob: -12.501968383789062
    6. '[int' → logprob: -12.751968383789062
    7. '<int' → logprob: -13.251968383789062
    8. 'list' → logprob: -13.501968383789062
    9. '=int' → logprob: -13.626968383789062
    10. '   ' → logprob: -13.626968383789062

Token 74: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.3425219549390022e-05
    2. 'input' → logprob: -11.75001335144043
    3. '(' → logprob: -12.25001335144043
    4. ' (' → logprob: -14.87501335144043
    5. ',input' → logprob: -16.25001335144043
    6. '=input' → logprob: -16.50001335144043
    7. ' input' → logprob: -16.50001335144043
    8. '(sys' → logprob: -18.25001335144043
    9. '(in' → logprob: -18.25001335144043
    10. '<input' → logprob: -18.87501335144043

Token 75: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003452291479334235
    2. '()' → logprob: -5.878452301025391
    3. ')' → logprob: -8.00345230102539
    4. '().' → logprob: -8.25345230102539
    5. '())
' → logprob: -10.12845230102539
    6. ' ())' → logprob: -12.37845230102539
    7. '(' → logprob: -12.62845230102539
    8. '())

' → logprob: -13.00345230102539
    9. '())
' → logprob: -14.00345230102539
    10. '();)' → logprob: -14.12845230102539

Token 76: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.435366690158844
    2. '        
' → logprob: -2.060366630554199
    3. ')' → logprob: -2.935366630554199
    4. ' students' → logprob: -3.060366630554199
    5. '<|end|>' → logprob: -3.060366630554199
    6. 'students' → logprob: -3.935366630554199
    7. ' 
' → logprob: -4.560366630554199
    8. '    
' → logprob: -4.685366630554199
    9. ',' → logprob: -5.060366630554199
    10. '        ' → logprob: -5.185366630554199

Token 77: ' req' (ID: 7257)
  Prédit: ' requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' requests' → logprob: -0.4044853150844574
    2. 'requests' → logprob: -2.4044852256774902
    3. '           ' → logprob: -2.7794852256774902
    4. '       ' → logprob: -3.1544852256774902
    5. ' students' → logprob: -3.7794852256774902
    6. ' preferences' → logprob: -4.02948522567749
    7. ' request' → logprob: -4.52948522567749
    8. ' requested' → logprob: -4.96698522567749
    9. 'request' → logprob: -5.27948522567749
    10. ' queue' → logprob: -5.40448522567749

Token 78: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.058263897895813
    2. 'uest' → logprob: -1.183263897895813
    3. 'u' → logprob: -1.308263897895813
    4. ' =' → logprob: -3.6832637786865234
    5. 'uire' → logprob: -4.308263778686523
    6. 'ues' → logprob: -4.558263778686523
    7. 'ests' → logprob: -4.683263778686523
    8. 'quests' → logprob: -4.933263778686523
    9. '_requests' → logprob: -5.558263778686523
    10. '=' → logprob: -6.058263778686523

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.056335337460041046
    2. 'uest' → logprob: -3.43133544921875
    3. '=' → logprob: -4.30633544921875
    4. 's' → logprob: -5.18133544921875
    5. 'u' → logprob: -6.43133544921875
    6. 'ues' → logprob: -6.93133544921875
    7. 'uire' → logprob: -7.93133544921875
    8. 'ests' → logprob: -9.18133544921875
    9. 'UEST' → logprob: -9.68133544921875
    10. ' ' → logprob: -10.43133544921875

Token 80: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5844514966011047
    2. ' list' → logprob: -0.8344514966011047
    3. '[]' → logprob: -5.209451675415039
    4. ' []' → logprob: -6.334451675415039
    5. ' [' → logprob: -7.834451675415039
    6. '[' → logprob: -8.459451675415039
    7. '[list' → logprob: -8.459451675415039
    8. 'deque' → logprob: -8.709451675415039
    9. 'input' → logprob: -9.709451675415039
    10. 'set' → logprob: -9.709451675415039

Token 81: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.005265545565634966
    2. '(' → logprob: -5.255265712738037
    3. '(int' → logprob: -10.880265235900879
    4. '(input' → logprob: -11.630265235900879
    5. '(range' → logprob: -13.255265235900879
    6. '()' → logprob: -13.380265235900879
    7. 'map' → logprob: -15.755265235900879
    8. '	map' → logprob: -16.505266189575195
    9. '(
' → logprob: -16.630266189575195
    10. ' map' → logprob: -16.630266189575195

Token 82: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014460684033110738
    2. '(' → logprob: -7.25144624710083
    3. 'int' → logprob: -8.001445770263672
    4. '[int' → logprob: -8.751445770263672
    5. '=int' → logprob: -9.376445770263672
    6. ')' → logprob: -10.126445770263672
    7. '<int' → logprob: -10.501445770263672
    8. '<|end|>' → logprob: -10.501445770263672
    9. ',int' → logprob: -11.001445770263672
    10. '(lambda' → logprob: -11.001445770263672

Token 83: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.006768537685275078
    2. ',' → logprob: -5.006768703460693
    3. '(input' → logprob: -10.256768226623535
    4. ',int' → logprob: -11.881768226623535
    5. ' ,' → logprob: -12.256768226623535
    6. 'input' → logprob: -12.756768226623535
    7. '(' → logprob: -13.131768226623535
    8. '   ' → logprob: -14.881768226623535
    9. ',list' → logprob: -15.756768226623535
    10. '(),' → logprob: -16.25676918029785

Token 84: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.3080716346157715e-05
    2. '.' → logprob: -11.375022888183594
    3. '()' → logprob: -11.500022888183594
    4. '(' → logprob: -14.625022888183594
    5. '.readline' → logprob: -14.875022888183594
    6. ' ().' → logprob: -15.500022888183594
    7. ' .' → logprob: -16.125022888183594
    8. '   ' → logprob: -16.375022888183594
    9. ')' → logprob: -17.000022888183594
    10. '>().' → logprob: -17.625022888183594

Token 85: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002712297427933663
    2. 'strip' → logprob: -8.25027084350586
    3. ' split' → logprob: -12.25027084350586
    4. 'rstrip' → logprob: -12.37527084350586
    5. '(split' → logprob: -14.50027084350586
    6. ')' → logprob: -15.75027084350586
    7. 'read' → logprob: -16.62527084350586
    8. 'spl' → logprob: -17.12527084350586
    9. ' ' → logprob: -17.25027084350586
    10. 'plit' → logprob: -18.37527084350586

Token 86: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6389819383621216
    2. '))' → logprob: -0.7639819383621216
    3. '())' → logprob: -6.013981819152832
    4. '()' → logprob: -6.013981819152832
    5. ')' → logprob: -7.013981819152832
    6. '(' → logprob: -8.638981819152832
    7. '()))
' → logprob: -8.888981819152832
    8. ')))' → logprob: -9.388981819152832
    9. ' ))' → logprob: -9.888981819152832
    10. '()));' → logprob: -10.638981819152832

Token 87: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2725754380226135
    2. ')' → logprob: -2.5225753784179688
    3. '           ' → logprob: -3.0225753784179688
    4. '        
' → logprob: -3.5225753784179688
    5. '<|end|>' → logprob: -3.6475753784179688
    6. '        ' → logprob: -3.8975753784179688
    7. ' ' → logprob: -4.522575378417969
    8. 'students' → logprob: -5.522575378417969
    9. ' students' → logprob: -6.022575378417969
    10. ' )' → logprob: -6.147575378417969

Token 88: ' students' (ID: 4501)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7979405522346497
    2. '       ' → logprob: -1.5479404926300049
    3. ' students' → logprob: -1.7979404926300049
    4. 'students' (adapté à ' students') → logprob: -1.7979404926300049
    5. '   ' → logprob: -5.672940731048584
    6. '        ' → logprob: -8.172940254211426
    7. ' requests' → logprob: -8.297940254211426
    8. ' ' → logprob: -8.297940254211426
    9. ' for' → logprob: -8.672940254211426
    10. 'requests' → logprob: -8.797940254211426

Token 89: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007505440153181553
    2. '.extend' → logprob: -7.625750541687012
    3. '.' → logprob: -8.250750541687012
    4. '.ap' → logprob: -14.625750541687012
    5. ' .' → logprob: -15.125750541687012
    6. '.app' → logprob: -15.375750541687012
    7. '.setdefault' → logprob: -16.000751495361328
    8. 'append' → logprob: -16.125751495361328
    9. '.add' → logprob: -16.750751495361328
    10. '.push' → logprob: -17.625751495361328

Token 90: '(de' (ID: 20586)
  Prédit: '(req'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(req' → logprob: -0.018444780260324478
    2. '((' → logprob: -4.018445014953613
    3. '(' → logprob: -8.143445014953613
    4. ' (' → logprob: -13.518445014953613
    5. '(tuple' → logprob: -13.518445014953613
    6. '(re' → logprob: -14.143445014953613
    7. '(request' → logprob: -15.143445014953613
    8. '(list' → logprob: -16.268444061279297
    9. '([' → logprob: -16.393444061279297
    10. '=req' → logprob: -16.643444061279297

Token 91: 'que' (ID: 1126)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.011638335883617401
    2. 'que' → logprob: -4.511638164520264
    3. 'qu' → logprob: -7.761638164520264
    4. 'uq' → logprob: -9.261638641357422
    5. 'queue' → logprob: -10.511638641357422
    6. ' q' → logprob: -11.761638641357422
    7. 'ques' → logprob: -12.636638641357422
    8. 'req' → logprob: -13.011638641357422
    9. 'deque' → logprob: -13.011638641357422
    10. '	q' → logprob: -13.136638641357422

Token 92: '(req' (ID: 12192)
  Prédit: '(req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(req' → logprob: -0.0003044802288059145
    2. '(' → logprob: -8.125304222106934
    3. ')(' → logprob: -12.875304222106934
    4. ' (' → logprob: -13.375304222106934
    5. ')' → logprob: -13.375304222106934
    6. '(re' → logprob: -13.500304222106934
    7. '((' → logprob: -14.375304222106934
    8. '(
' → logprob: -15.500304222106934
    9. '([' → logprob: -15.625304222106934
    10. '(require' → logprob: -15.875304222106934

Token 93: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012002828530967236
    2. 'qs' → logprob: -4.637002944946289
    3. 'q' → logprob: -6.512002944946289
    4. '(req' → logprob: -7.637002944946289
    5. 'req' → logprob: -8.762002944946289
    6. 'ues' → logprob: -10.637002944946289
    7. ')' → logprob: -11.012002944946289
    8. '       ' → logprob: -11.262002944946289
    9. 'uest' → logprob: -11.512002944946289
    10. '   ' → logprob: -12.012002944946289

Token 94: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007710970006883144
    2. ')' → logprob: -4.882710933685303
    3. ' ))' → logprob: -9.507711410522461
    4. '))
' → logprob: -10.757711410522461
    5. ')))' → logprob: -12.257711410522461
    6. ' )' → logprob: -13.507711410522461
    7. ' ' → logprob: -13.632711410522461
    8. '()))' → logprob: -14.882711410522461
    9. '))
' → logprob: -15.007711410522461
    10. '),' → logprob: -15.132711410522461

Token 95: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09233839064836502
    2. '<|end|>' → logprob: -2.5923383235931396
    3. '        
' → logprob: -5.217338562011719
    4. '        ' → logprob: -5.342338562011719
    5. ' ' → logprob: -6.717338562011719
    6. '<|end|>' → logprob: -7.467338562011719
    7. '
' → logprob: -7.967338562011719
    8. ')' → logprob: -8.592338562011719
    9. '           ' → logprob: -8.967338562011719
    10. '      ' → logprob: -9.342338562011719

Token 96: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.2041696012020111
    2. '           ' → logprob: -1.9541696310043335
    3. ' total' → logprob: -3.204169511795044
    4. '       ' → logprob: -6.204169750213623
    5. '   ' → logprob: -8.329169273376465
    6. ' ' → logprob: -9.454169273376465
    7. '	total' → logprob: -11.204169273376465
    8. '               ' → logprob: -11.454169273376465
    9. '  ' → logprob: -11.704169273376465
    10. '    ' → logprob: -12.329169273376465

Token 97: '_requests' (ID: 89627)
  Prédit: '_requests'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_requests' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -13.000004768371582
    3. 'requests' → logprob: -13.000004768371582
    4. 'Requests' → logprob: -15.250004768371582
    5. '_request' → logprob: -16.1250057220459
    6. '_tokens' → logprob: -16.3750057220459
    7. ' _' → logprob: -16.7500057220459
    8. '_requested' → logprob: -16.8750057220459
    9. ' requests' → logprob: -17.1250057220459
    10. '```' → logprob: -17.6250057220459

Token 98: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0067161982879042625
    2. '+=' → logprob: -5.006716251373291
    3. ' +' → logprob: -14.756715774536133
    4. ' ' → logprob: -15.381715774536133
    5. '+' → logprob: -15.881715774536133
    6. ' -=' → logprob: -16.506715774536133
    7. '+=(' → logprob: -17.506715774536133
    8. '+='' → logprob: -17.881715774536133
    9. ' =' → logprob: -18.506715774536133
    10. ']+=' → logprob: -18.631715774536133

Token 99: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.026362420991063118
    2. ' k' → logprob: -3.901362419128418
    3. 'len' → logprob: -5.276362419128418
    4. ' len' → logprob: -7.276362419128418
    5. ' ' → logprob: -14.651362419128418
    6. '(len' → logprob: -16.401363372802734
    7. '   ' → logprob: -16.401363372802734
    8. '	k' → logprob: -17.026363372802734
    9. '(k' → logprob: -17.401363372802734
    10. '  ' → logprob: -17.526363372802734

Token 100: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040302351117134094
    2. '        
' → logprob: -3.790302276611328
    3. '<|end|>' → logprob: -4.915302276611328
    4. 'queue' → logprob: -5.415302276611328
    5. 'rest' → logprob: -7.415302276611328
    6. 'capacity' → logprob: -7.540302276611328
    7. '```' → logprob: -7.790302276611328
    8. ' queue' → logprob: -7.915302276611328
    9. 'current' → logprob: -8.290302276611328
    10. '   ' → logprob: -8.415302276611328

Token 102: ' #' (ID: 1069)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -1.7648887634277344
    2. 'graph' → logprob: -2.2648887634277344
    3. 'visited' → logprob: -2.8898887634277344
    4. 'queue' → logprob: -3.0148887634277344
    5. 'requests' → logprob: -3.2648887634277344
    6. 'capac' → logprob: -3.6398887634277344
    7. 'available' → logprob: -3.7648887634277344
    8. 'c' → logprob: -3.8898887634277344
    9. 'counts' → logprob: -4.014888763427734
    10. 'fulfilled' → logprob: -4.139888763427734

Token 103: ' Each' (ID: 11555)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.6001466512680054
    2. 'requests' → logprob: -2.850146770477295
    3. 'visited' → logprob: -2.850146770477295
    4. 'capacity' → logprob: -3.100146770477295
    5. 'waiting' → logprob: -3.100146770477295
    6. 'available' → logprob: -3.475146770477295
    7. '#' → logprob: -3.475146770477295
    8. 'result' → logprob: -3.850146770477295
    9. 'answer' → logprob: -3.850146770477295
    10. 'max' → logprob: -3.975146770477295

Token 104: ' desk' (ID: 20794)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.31460464000701904
    2. 'course' → logprob: -2.3146047592163086
    3. ' student' → logprob: -3.8146047592163086
    4. 'color' → logprob: -4.689604759216309
    5. 'class' → logprob: -4.814604759216309
    6. 'company' → logprob: -4.814604759216309
    7. 'computer' → logprob: -5.064604759216309
    8. 'c' → logprob: -5.189604759216309
    9. ' course' → logprob: -5.314604759216309
    10. 'car' → logprob: -5.314604759216309

Token 105: ' is' (ID: 382)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.7255772352218628
    2. ' =' → logprob: -1.7255772352218628
    3. 'can' → logprob: -2.9755773544311523
    4. ' has' → logprob: -2.9755773544311523
    5. 'will' → logprob: -3.8505773544311523
    6. 'capacity' → logprob: -3.9755773544311523
    7. ' can' → logprob: -3.9755773544311523
    8. 'requests' → logprob: -3.9755773544311523
    9. 'status' → logprob: -4.100577354431152
    10. ' will' → logprob: -4.350577354431152

Token 106: ' a' (ID: 261)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -1.3960397243499756
    2. ' a' → logprob: -1.5210397243499756
    3. ' represented' → logprob: -2.1460397243499756
    4. 'a' → logprob: -2.2710397243499756
    5. ' assigned' → logprob: -2.5210397243499756
    6. 'represented' → logprob: -2.7710397243499756
    7. 'assigned' → logprob: -2.8960397243499756
    8. 'default' → logprob: -3.2710397243499756
    9. '[]' → logprob: -3.6460397243499756
    10. 'deque' → logprob: -4.021039962768555

Token 107: ' list' (ID: 1562)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.5246726870536804
    2. 'default' → logprob: -1.1496727466583252
    3. ' defaultdict' → logprob: -3.024672746658325
    4. 'list' → logprob: -3.524672746658325
    5. ' deque' → logprob: -5.274672508239746
    6. 'set' → logprob: -5.524672508239746
    7. ' list' → logprob: -6.149672508239746
    8. 'def' → logprob: -8.024672508239746
    9. 'queue' → logprob: -8.274672508239746
    10. ' default' → logprob: -8.274672508239746

Token 108: ' holding' (ID: 16450)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3943546414375305
    2. '[]' → logprob: -1.8943545818328857
    3. '<|end|>' → logprob: -2.2693545818328857
    4. 's' → logprob: -3.7693545818328857
    5. 'of' → logprob: -4.144354820251465
    6. '[' → logprob: -4.144354820251465
    7. ' =' → logprob: -4.894354820251465
    8. '=[]' → logprob: -6.269354820251465
    9. '<|end|>' → logprob: -6.519354820251465
    10. '       ' → logprob: -6.769354820251465

Token 109: ' up' (ID: 869)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.5124595165252686
    2. 'students' → logprob: -1.5124595165252686
    3. '[]' → logprob: -1.7624595165252686
    4. ' students' → logprob: -2.2624595165252686
    5. 'the' → logprob: -2.5124595165252686
    6. 'deque' → logprob: -2.7624595165252686
    7. ' a' → logprob: -2.8874595165252686
    8. 'a' → logprob: -4.137459754943848
    9. '       ' → logprob: -4.637459754943848
    10. ' deque' → logprob: -4.762459754943848

Token 110: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3537251353263855
    2. ' to' → logprob: -1.2287251949310303
    3. 'students' → logprob: -6.103724956512451
    4. '       ' → logprob: -6.728724956512451
    5. 'requests' → logprob: -8.22872543334961
    6. ' students' → logprob: -8.35372543334961
    7. ')' → logprob: -8.60372543334961
    8. ' ' → logprob: -8.72872543334961
    9. '   ' → logprob: -9.10372543334961
    10. 'the' → logprob: -9.10372543334961

Token 111: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.042991891503334045
    2. '2' → logprob: -3.542991876602173
    3. ' c' → logprob: -4.917992115020752
    4. '3' → logprob: -6.417992115020752
    5. '1' → logprob: -6.792992115020752
    6. 'deque' → logprob: -7.792992115020752
    7. ' ' → logprob: -7.917992115020752
    8. '5' → logprob: -7.917992115020752
    9. '4' → logprob: -8.167991638183594
    10. 'C' → logprob: -8.167991638183594

Token 112: ' books' (ID: 7187)
  Prédit: ' students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' students' → logprob: -0.1729576587677002
    2. 'students' → logprob: -1.9229576587677002
    3. ' of' → logprob: -5.797957420349121
    4. ' ' → logprob: -6.797957420349121
    5. ')' → logprob: -6.797957420349121
    6. ',' → logprob: -6.922957420349121
    7. '_students' → logprob: -6.922957420349121
    8. ' ,' → logprob: -7.047957420349121
    9. ' )' → logprob: -7.297957420349121
    10. ' .' → logprob: -7.547957420349121

Token 113: ',' (ID: 11)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.7787266373634338
    2. 'des' → logprob: -1.903726577758789
    3. '       ' → logprob: -2.028726577758789
    4. 's' → logprob: -2.153726577758789
    5. ' desks' → logprob: -2.528726577758789
    6. ' =' → logprob: -3.903726577758789
    7. '[]' → logprob: -4.653726577758789
    8. ' books' → logprob: -4.903726577758789
    9. '   ' → logprob: -5.528726577758789
    10. '[' → logprob: -5.778726577758789

Token 114: ' initially' (ID: 25998)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7424383163452148
    2. ' and' → logprob: -2.117438316345215
    3. 'and' → logprob: -2.492438316345215
    4. '       ' → logprob: -3.242438316345215
    5. ' each' → logprob: -3.242438316345215
    6. 'each' → logprob: -3.242438316345215
    7. ' with' → logprob: -3.367438316345215
    8. '#' → logprob: -3.742438316345215
    9. '[' → logprob: -3.992438316345215
    10. 'with' → logprob: -4.242438316345215

Token 115: ' empty' (ID: 8213)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.32703855633735657
    2. 'empty' → logprob: -1.3270385265350342
    3. '=[]' → logprob: -4.452038764953613
    4. ' empty' → logprob: -7.077038764953613
    5. 'deque' → logprob: -8.077038764953613
    6. ' []' → logprob: -8.327038764953613
    7. '[:]' → logprob: -8.577038764953613
    8. '       ' → logprob: -9.077038764953613
    9. '=' → logprob: -9.827038764953613
    10. '[]=' → logprob: -10.202038764953613

Token 116: '
' (ID: 198)
  Prédit: ' desks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' desks' → logprob: -0.23906879127025604
    2. 'des' → logprob: -1.6140687465667725
    3. '       ' → logprob: -4.364068984985352
    4. ' des' → logprob: -7.364068984985352
    5. 'books' → logprob: -9.989068984985352
    6. '        
' → logprob: -10.489068984985352
    7. '```' → logprob: -10.489068984985352
    8. '   ' → logprob: -10.489068984985352
    9. ' =' → logprob: -11.739068984985352
    10. '_des' → logprob: -11.864068984985352

Token 117: '       ' (ID: 309)
  Prédit: ' desks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' desks' → logprob: -0.5275040864944458
    2. '       ' → logprob: -1.1525040864944458
    3. 'des' → logprob: -2.4025039672851562
    4. '        
' → logprob: -7.277503967285156
    5. ' des' → logprob: -7.277503967285156
    6. '
' → logprob: -7.527503967285156
    7. ',' → logprob: -7.902503967285156
    8. '   ' → logprob: -8.277503967285156
    9. 's' → logprob: -8.777503967285156
    10. '_des' → logprob: -9.027503967285156

Token 118: ' desks' (ID: 109910)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.12782062590122223
    2. ' desks' → logprob: -2.1278207302093506
    3. 'books' → logprob: -8.37782096862793
    4. '       ' → logprob: -8.75282096862793
    5. ' des' → logprob: -8.75282096862793
    6. '```' → logprob: -9.25282096862793
    7. 'desk' → logprob: -9.37782096862793
    8. '   ' → logprob: -9.87782096862793
    9. 'de' → logprob: -10.87782096862793
    10. ' desk' → logprob: -11.31532096862793

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269380897283554
    2. '=' → logprob: -2.1269381046295166
    3. '=[]' → logprob: -11.626937866210938
    4. '=[' → logprob: -15.001937866210938
    5. 's' → logprob: -15.126937866210938
    6. ' =[' → logprob: -15.626937866210938
    7. ' ' → logprob: -15.876937866210938
    8. '＝' → logprob: -15.876937866210938
    9. '=[]
' → logprob: -16.876937866210938
    10. '   ' → logprob: -17.126937866210938

Token 120: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006583464564755559
    2. ' [' → logprob: -7.5006585121154785
    3. 'default' → logprob: -9.25065803527832
    4. ' [[]' → logprob: -12.25065803527832
    5. '   ' → logprob: -13.12565803527832
    6. '[[' → logprob: -13.62565803527832
    7. '{' → logprob: -14.25065803527832
    8. ' defaultdict' → logprob: -14.75065803527832
    9. '[['' → logprob: -16.62565803527832
    10. ' ' → logprob: -16.62565803527832

Token 121: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759555697441101
    2. 'for' → logprob: -0.8259555697441101
    3. '       ' → logprob: -12.575955390930176
    4. '   ' → logprob: -12.575955390930176
    5. ')' → logprob: -12.825955390930176
    6. '           ' → logprob: -13.075955390930176
    7. '	for' → logprob: -13.575955390930176
    8. ']' → logprob: -13.700955390930176
    9. ' ' → logprob: -14.575955390930176
    10. '         ' → logprob: -15.325955390930176

Token 122: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.29788997769355774
    2. ' range' → logprob: -1.4228899478912354
    3. '_' → logprob: -4.1728901863098145
    4. 'range' → logprob: -6.9228901863098145
    5. '_range' → logprob: -9.297889709472656
    6. ' desk' → logprob: -9.672889709472656
    7. '(range' → logprob: -10.547889709472656
    8. ' in' → logprob: -10.797889709472656
    9. ' i' → logprob: -13.172889709472656
    10. '	range' → logprob: -13.672889709472656

Token 123: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005115988198667765
    2. 'in' → logprob: -5.505115985870361
    3. ' range' → logprob: -7.005115985870361
    4. ' in' → logprob: -9.00511646270752
    5. '(range' → logprob: -11.88011646270752
    6. 'ange' → logprob: -16.505115509033203
    7. '	range' → logprob: -17.380115509033203
    8. '_range' → logprob: -17.630115509033203
    9. '   ' → logprob: -18.005115509033203
    10. ')' → logprob: -18.380115509033203

Token 124: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -17.130233764648438
    4. '   ' → logprob: -18.380233764648438
    5. '	range' → logprob: -18.755233764648438
    6. ')' → logprob: -20.130233764648438
    7. '_range' → logprob: -20.630233764648438
    8. 'Range' → logprob: -20.880233764648438
    9. 'rang' → logprob: -21.005233764648438
    10. ' ' → logprob: -21.130233764648438

Token 125: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -6.034592388459714e-06
    2. ' (' → logprob: -12.375005722045898
    3. '(' → logprob: -13.875005722045898
    4. 'm' → logprob: -14.500005722045898
    5. '(M' → logprob: -16.0000057220459
    6. ')m' → logprob: -16.2500057220459
    7. '](' → logprob: -17.2500057220459
    8. ')(' → logprob: -17.2500057220459
    9. ',m' → logprob: -18.0000057220459
    10. '   ' → logprob: -18.1250057220459

Token 126: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.941850526549388e-06
    2. ']' → logprob: -11.875007629394531
    3. ')' → logprob: -14.375007629394531
    4. ' )' → logprob: -15.500007629394531
    5. ')]
' → logprob: -16.87500762939453
    6. '])' → logprob: -17.37500762939453
    7. ' ]' → logprob: -17.50000762939453
    8. '       ' → logprob: -18.00000762939453
    9. '}]' → logprob: -18.12500762939453
    10. '))' → logprob: -18.37500762939453

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03054199554026127
    2. '<|end|>' → logprob: -4.155541896820068
    3. '        
' → logprob: -4.655541896820068
    4. 'capacity' → logprob: -7.155541896820068
    5. 'next' → logprob: -7.530541896820068
    6. 'available' → logprob: -7.655541896820068
    7. 'book' → logprob: -7.780541896820068
    8. '   ' → logprob: -8.030542373657227
    9. '```' → logprob: -8.155542373657227
    10. ' capacity' → logprob: -8.280542373657227

Token 128: ' #' (ID: 1069)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.7589773535728455
    2. 'desk' → logprob: -1.5089774131774902
    3. 'books' → logprob: -3.0089774131774902
    4. 'visited' → logprob: -3.1339774131774902
    5. '#' (adapté à ' #') → logprob: -3.5089774131774902
    6. 'requests' → logprob: -3.6339774131774902
    7. 'assigned' → logprob: -3.7589774131774902
    8. 'allocated' → logprob: -4.88397741317749
    9. 'occupied' → logprob: -5.00897741317749
    10. 'positions' → logprob: -5.00897741317749

Token 129: ' shelf' (ID: 40978)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.5676234364509583
    2. 'requests' → logprob: -2.3176233768463135
    3. 'visited' → logprob: -3.0676233768463135
    4. 'desk' → logprob: -3.1926233768463135
    5. 'books' → logprob: -3.3176233768463135
    6. '#' → logprob: -3.5676233768463135
    7. 'pos' → logprob: -3.8176233768463135
    8. 'for' → logprob: -3.8176233768463135
    9. 'waiting' → logprob: -4.067623615264893
    10. 'student' → logprob: -4.817623615264893

Token 130: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25422510504722595
    2. ' =' → logprob: -1.5042251348495483
    3. 's' → logprob: -6.129225254058838
    4. '_books' → logprob: -10.12922477722168
    5. '=[]' → logprob: -10.25422477722168
    6. 'books' → logprob: -11.37922477722168
    7. '_counts' → logprob: -12.75422477722168
    8. '_requests' → logprob: -13.00422477722168
    9. '_s' → logprob: -13.12922477722168
    10. '_capacity' → logprob: -13.50422477722168

Token 131: ' all' (ID: 722)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5449259877204895
    2. ' defaultdict' → logprob: -1.9199259281158447
    3. ' []' → logprob: -2.2949259281158447
    4. 'deque' → logprob: -2.5449259281158447
    5. 'default' → logprob: -3.1699259281158447
    6. '[' → logprob: -3.4199259281158447
    7. ' [' → logprob: -4.294926166534424
    8. ' deque' → logprob: -6.044926166534424
    9. 'set' → logprob: -6.169926166534424
    10. '{}' → logprob: -8.294925689697266

Token 132: ' books' (ID: 7187)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.808857262134552
    2. 'books' → logprob: -1.1838572025299072
    3. 'des' → logprob: -3.0588572025299072
    4. 'deque' → logprob: -3.0588572025299072
    5. ' []' → logprob: -3.3088572025299072
    6. '_books' → logprob: -4.058857440948486
    7. 'the' → logprob: -4.183857440948486
    8. ' the' → logprob: -4.433857440948486
    9. ' books' → logprob: -4.683857440948486
    10. '[' → logprob: -4.683857440948486

Token 133: ' not' (ID: 625)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576510488986969
    2. '=' → logprob: -0.826510488986969
    3. '=[]' → logprob: -7.826510429382324
    4. 's' → logprob: -9.326510429382324
    5. '[]' → logprob: -11.576510429382324
    6. ',' → logprob: -11.576510429382324
    7. 'deque' → logprob: -11.576510429382324
    8. '=[]
' → logprob: -11.701510429382324
    9. ' ' → logprob: -11.826510429382324
    10. '   ' → logprob: -12.201510429382324

Token 134: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.31544336676597595
    2. 'placed' → logprob: -2.440443277359009
    3. 'in' → logprob: -2.565443277359009
    4. 'currently' → logprob: -3.190443277359009
    5. ' on' → logprob: -3.815443277359009
    6. 'assigned' → logprob: -4.065443515777588
    7. 'yet' → logprob: -4.440443515777588
    8. ' placed' → logprob: -5.690443515777588
    9. ' in' → logprob: -6.315443515777588
    10. ' yet' → logprob: -6.440443515777588

Token 135: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.5633324384689331
    2. 'des' → logprob: -1.063332438468933
    3. ' any' → logprob: -3.4383325576782227
    4. 'a' → logprob: -3.5633325576782227
    5. ' desks' → logprob: -3.9383325576782227
    6. 'the' → logprob: -6.188332557678223
    7. 'desk' → logprob: -6.313332557678223
    8. ' a' → logprob: -7.188332557678223
    9. 's' → logprob: -8.563332557678223
    10. ' desk' → logprob: -8.688332557678223

Token 136: ' desk' (ID: 20794)
  Prédit: ' desk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' desk' → logprob: -0.42883506417274475
    2. 'desk' → logprob: -1.0538350343704224
    3. 'des' → logprob: -10.428834915161133
    4. ' shelf' → logprob: -10.928834915161133
    5. 'def' → logprob: -11.053834915161133
    6. ' desks' → logprob: -11.428834915161133
    7. 's' → logprob: -11.553834915161133
    8. '#' → logprob: -11.678834915161133
    9. 'deck' → logprob: -11.928834915161133
    10. 'deque' → logprob: -12.303834915161133

Token 137: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35139596462249756
    2. '=' → logprob: -1.2263959646224976
    3. 's' → logprob: -5.976396083831787
    4. '=[]' → logprob: -8.851395606994629
    5. ',' → logprob: -8.976395606994629
    6. ' shelf' → logprob: -10.226395606994629
    7. 'books' → logprob: -10.851395606994629
    8. '=[]
' → logprob: -11.101395606994629
    9. '_s' → logprob: -11.726395606994629
    10. '=s' → logprob: -12.101395606994629

Token 138: 'including' (ID: 26167)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.5715333223342896
    2. 'set' → logprob: -1.9465333223342896
    3. 'default' → logprob: -2.446533203125
    4. ')' → logprob: -3.071533203125
    5. '[])' → logprob: -3.446533203125
    6. '[]' → logprob: -3.446533203125
    7. 'a' → logprob: -3.571533203125
    8. ' deque' → logprob: -4.196533203125
    9. 'in' → logprob: -4.446533203125
    10. ' set' → logprob: -4.946533203125

Token 139: ' initially' (ID: 25998)
  Prédit: 'those'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'those' → logprob: -0.4519391655921936
    2. 'books' → logprob: -2.076939105987549
    3. ' those' → logprob: -2.201939105987549
    4. 'returned' → logprob: -2.701939105987549
    5. 'the' → logprob: -3.701939105987549
    6. ' the' → logprob: -5.826939105987549
    7. 'return' → logprob: -5.826939105987549
    8. 'initial' → logprob: -5.951939105987549
    9. ' returned' → logprob: -6.326939105987549
    10. ' books' → logprob: -6.326939105987549

Token 140: ' all' (ID: 722)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5931364893913269
    2. 'all' → logprob: -1.8431365489959717
    3. 'books' → logprob: -2.7181365489959717
    4. '[])' → logprob: -2.7181365489959717
    5. '[]' → logprob: -3.5931365489959717
    6. 'the' → logprob: -3.5931365489959717
    7. 'those' → logprob: -3.8431365489959717
    8. ' all' → logprob: -4.218136310577393
    9. ' the' → logprob: -4.218136310577393
    10. 'empty' → logprob: -4.843136310577393

Token 141: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.056630056351423264
    2. ' books' → logprob: -3.5566301345825195
    3. 'range' → logprob: -4.1816301345825195
    4. ')' → logprob: -5.9316301345825195
    5. ' range' → logprob: -6.0566301345825195
    6. '[]' → logprob: -6.4316301345825195
    7. '[])' → logprob: -6.8066301345825195
    8. '[' → logprob: -7.9316301345825195
    9. ' [])' → logprob: -7.9316301345825195
    10. ' )' → logprob: -8.05663013458252

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18125398457050323
    2. ')
' → logprob: -2.4312539100646973
    3. ',' → logprob: -3.5562539100646973
    4. ' )' → logprob: -3.8062539100646973
    5. ' =' → logprob: -5.181253910064697
    6. ' or' → logprob: -5.556253910064697
    7. '       ' → logprob: -5.806253910064697
    8. ' )
' → logprob: -6.056253910064697
    9. 'books' → logprob: -6.056253910064697
    10. '),' → logprob: -6.181253910064697

Token 143: '       ' (ID: 309)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3716852068901062
    2. '       ' → logprob: -1.371685266494751
    3. ' =' → logprob: -3.746685266494751
    4. ' shelf' → logprob: -3.871685266494751
    5. '=' → logprob: -5.621685028076172
    6. 'books' → logprob: -5.871685028076172
    7. ',' → logprob: -6.121685028076172
    8. '```' → logprob: -7.371685028076172
    9. '   ' → logprob: -7.621685028076172
    10. ' books' → logprob: -7.746685028076172

Token 144: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20223462581634521
    2. ' shelf' → logprob: -1.7022346258163452
    3. 'books' → logprob: -7.577234745025635
    4. 'book' → logprob: -9.327234268188477
    5. ' books' → logprob: -10.202234268188477
    6. ' bookshelf' → logprob: -10.452234268188477
    7. 'all' → logprob: -11.327234268188477
    8. 'Shelf' → logprob: -11.327234268188477
    9. '       ' → logprob: -11.327234268188477
    10. ' defaultdict' → logprob: -11.452234268188477

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692853808403015
    2. ' =' → logprob: -2.1269285678863525
    3. '=[]' → logprob: -14.876928329467773
    4. '=set' → logprob: -15.751928329467773
    5. '＝' → logprob: -16.501928329467773
    6. '=list' → logprob: -17.876928329467773
    7. 's' → logprob: -18.001928329467773
    8. '=

' → logprob: -18.126928329467773
    9. '={}' → logprob: -18.751928329467773
    10. ' ' → logprob: -18.751928329467773

Token 146: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.04505455493927
    2. 'default' → logprob: -1.04505455493927
    3. 'deque' → logprob: -1.29505455493927
    4. '[]' → logprob: -3.7950544357299805
    5. '[' → logprob: -9.42005443572998
    6. '{}' → logprob: -9.67005443572998
    7. ' []' → logprob: -10.17005443572998
    8. ' defaultdict' → logprob: -10.42005443572998
    9. 'dict' → logprob: -11.29505443572998
    10. ' deque' → logprob: -11.29505443572998

Token 147: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10033164173364639
    2. '(range' → logprob: -2.3503315448760986
    3. 'range' → logprob: -9.22533130645752
    4. '()
' → logprob: -11.60033130645752
    5. '(' → logprob: -11.97533130645752
    6. '())' → logprob: -12.60033130645752
    7. '()

' → logprob: -13.35033130645752
    8. '()]' → logprob: -13.85033130645752
    9. '()}' → logprob: -14.22533130645752
    10. '()\' → logprob: -14.60033130645752

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01545831747353077
    2. '<|end|>' → logprob: -4.765458106994629
    3. '(range' → logprob: -5.640458106994629
    4. 'range' → logprob: -6.765458106994629
    5. ' range' → logprob: -7.890458106994629
    6. ' ' → logprob: -8.140458106994629
    7. ' for' → logprob: -8.265458106994629
    8. '()' → logprob: -8.390458106994629
    9. '        
' → logprob: -8.640458106994629
    10. '        ' → logprob: -8.640458106994629

Token 149: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04136092960834503
    2. 'for' → logprob: -3.666360855102539
    3. ' for' → logprob: -4.291360855102539
    4. '<|end|>' → logprob: -7.541360855102539
    5. 'range' → logprob: -8.666360855102539
    6. '        
' → logprob: -8.791360855102539
    7. '   ' → logprob: -9.416360855102539
    8. 'next' → logprob: -10.541360855102539
    9. ' ' → logprob: -10.541360855102539
    10. '#' (adapté à ' #') → logprob: -10.541360855102539

Token 150: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08443594723939896
    2. 'books' → logprob: -3.0844359397888184
    3. 'book' → logprob: -3.5844359397888184
    4. '#' → logprob: -5.584435939788818
    5. 'all' → logprob: -6.209435939788818
    6. ' for' → logprob: -7.709435939788818
    7. 's' → logprob: -8.334436416625977
    8. 'from' → logprob: -9.209436416625977
    9. 'Initialize' → logprob: -9.209436416625977
    10. 'For' → logprob: -9.459436416625977

Token 151: ' don't' (ID: 4128)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.12204685062170029
    2. ' need' → logprob: -2.497046947479248
    3. 'have' → logprob: -5.122046947479248
    4. ''ll' → logprob: -5.497046947479248
    5. 'will' → logprob: -5.747046947479248
    6. 'for' → logprob: -5.997046947479248
    7. 'continue' → logprob: -5.997046947479248
    8. 'initialize' → logprob: -6.122046947479248
    9. 'll' → logprob: -6.497046947479248
    10. '#' → logprob: -6.747046947479248

Token 152: ' know' (ID: 1761)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.49622857570648193
    2. 'know' → logprob: -0.9962285757064819
    3. ' have' → logprob: -4.8712286949157715
    4. 'yet' → logprob: -5.1212286949157715
    5. 'need' → logprob: -5.3712286949157715
    6. ' yet' → logprob: -6.4962286949157715
    7. ' know' → logprob: -6.8712286949157715
    8. 'use' → logprob: -8.621228218078613
    9. 'see' → logprob: -8.621228218078613
    10. 'want' → logprob: -8.871228218078613

Token 153: ' initial' (ID: 4871)
  Prédit: ' yet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yet' → logprob: -0.7844866514205933
    2. ' the' → logprob: -1.7844866514205933
    3. ' what' → logprob: -2.159486770629883
    4. 'yet' → logprob: -2.659486770629883
    5. 'the' → logprob: -2.784486770629883
    6. ' which' → logprob: -3.159486770629883
    7. ' all' → logprob: -3.284486770629883
    8. 'all' → logprob: -4.284486770629883
    9. 'what' → logprob: -4.409486770629883
    10. 'which' → logprob: -4.534486770629883

Token 154: ' books' (ID: 7187)
  Prédit: '_books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.6271827220916748
    2. 'books' → logprob: -1.6271827220916748
    3. ' books' → logprob: -2.877182722091675
    4. 'ly' → logprob: -3.502182722091675
    5. 'book' → logprob: -3.752182722091675
    6. 'positions' → logprob: -3.752182722091675
    7. '_' → logprob: -3.752182722091675
    8. ' placement' → logprob: -3.877182722091675
    9. '_positions' → logprob: -4.127182960510254
    10. ' positions' → logprob: -4.127182960510254

Token 155: ';' (ID: 26)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7710554003715515
    2. ' yet' → logprob: -0.8960554003715515
    3. ',' → logprob: -3.0210554599761963
    4. '.' → logprob: -3.7710554599761963
    5. ')' → logprob: -4.146055221557617
    6. '=' → logprob: -5.271055221557617
    7. '<|end|>' → logprob: -5.396055221557617
    8. ' ,' → logprob: -5.521055221557617
    9. '()' → logprob: -5.521055221557617
    10. 'yet' → logprob: -5.521055221557617

Token 156: ' all' (ID: 722)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1034237146377563
    2. '#' → logprob: -1.3534237146377563
    3. ' continue' → logprob: -1.4784237146377563
    4. ' so' → logprob: -2.603423595428467
    5. ' for' → logprob: -3.603423595428467
    6. '       ' → logprob: -3.728423595428467
    7. 'for' → logprob: -3.853423595428467
    8. ' #' → logprob: -5.228423595428467
    9. 'books' → logprob: -5.353423595428467
    10. ' but' → logprob: -5.478423595428467

Token 157: ' requested' (ID: 17222)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.36158478260040283
    2. ' integers' → logprob: -2.2365846633911133
    3. ' books' → logprob: -2.4865846633911133
    4. 'requests' → logprob: -4.111584663391113
    5. ' possible' → logprob: -4.361584663391113
    6. 'possible' → logprob: -4.736584663391113
    7. 'inte' → logprob: -4.736584663391113
    8. '#' → logprob: -5.111584663391113
    9. 'tokens' → logprob: -5.111584663391113
    10. ' numbers' → logprob: -5.111584663391113

Token 158: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.14699319005012512
    2. ' books' → logprob: -2.7719931602478027
    3. '<|end|>' → logprob: -2.8969931602478027
    4. '_books' → logprob: -5.271993160247803
    5. 'book' → logprob: -6.146993160247803
    6. ' by' → logprob: -6.521993160247803
    7. '<|end|>' → logprob: -6.896993160247803
    8. ' for' → logprob: -7.271993160247803
    9. ' ' → logprob: -7.271993160247803
    10. 'tokens' → logprob: -7.396993160247803

Token 159: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8056134581565857
    2. '.update' → logprob: -0.8056134581565857
    3. '=' → logprob: -3.5556135177612305
    4. ' |=' → logprob: -3.6806135177612305
    5. '.union' → logprob: -4.0556135177612305
    6. '.' → logprob: -4.1806135177612305
    7. '.add' → logprob: -5.3056135177612305
    8. '|' → logprob: -5.4306135177612305
    9. ')' → logprob: -5.5556135177612305
    10. '.clear' → logprob: -6.8056135177612305

Token 160: ' on' (ID: 402)
  Prédit: ' added'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' added' → logprob: -0.9722177982330322
    2. 'added' → logprob: -1.0972177982330322
    3. 's' → logprob: -2.2222177982330322
    4. 'in' → logprob: -2.7222177982330322
    5. ' shelf' → logprob: -3.0972177982330322
    6. 'on' → logprob: -4.347217559814453
    7. 'ass' → logprob: -4.722217559814453
    8. ' in' → logprob: -4.722217559814453
    9. ' assumed' → logprob: -5.222217559814453
    10. ' on' → logprob: -5.222217559814453

Token 161: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47076791524887085
    2. ' shelf' → logprob: -1.3457679748535156
    3. 'the' → logprob: -2.5957679748535156
    4. ' the' → logprob: -3.2207679748535156
    5. ' shelves' → logprob: -7.720767974853516
    6. ' ' → logprob: -9.720767974853516
    7. ' s' → logprob: -10.470767974853516
    8. '<|end|>' → logprob: -10.470767974853516
    9. ' shel' → logprob: -11.095767974853516
    10. '  ' → logprob: -11.345767974853516

Token 162: ' initially' (ID: 25998)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010710095055401325
    2. ' for' → logprob: -5.5107102394104
    3. '        
' → logprob: -6.3857102394104
    4. 's' → logprob: -6.6357102394104
    5. '
' → logprob: -7.2607102394104
    6. ' =' → logprob: -7.2607102394104
    7. '.update' → logprob: -8.010709762573242
    8. '        ' → logprob: -8.385709762573242
    9. '.' → logprob: -8.385709762573242
    10. 'for' → logprob: -8.760709762573242

Token 163: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04370715469121933
    2. ' for' → logprob: -3.2937071323394775
    3. 'for' → logprob: -5.293707370758057
    4. '        
' → logprob: -8.168706893920898
    5. 's' → logprob: -8.543706893920898
    6. '
' → logprob: -10.543706893920898
    7. '        ' → logprob: -11.043706893920898
    8. ',' → logprob: -11.168706893920898
    9. '      ' → logprob: -11.293706893920898
    10. '   ' → logprob: -11.293706893920898

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22691002488136292
    2. ' for' → logprob: -1.7269099950790405
    3. '        
' → logprob: -4.47691011428833
    4. 'for' → logprob: -5.22691011428833
    5. 's' → logprob: -5.97691011428833
    6. ' 
' → logprob: -6.10191011428833
    7. '
' → logprob: -6.97691011428833
    8. '  
' → logprob: -7.10191011428833
    9. ' all' → logprob: -8.226909637451172
    10. '        ' → logprob: -8.226909637451172

Token 165: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009195184335112572
    2. '       ' → logprob: -4.759195327758789
    3. 'all' → logprob: -8.509195327758789
    4. 's' → logprob: -8.759195327758789
    5. 'books' → logprob: -9.509195327758789
    6. 'book' → logprob: -9.509195327758789
    7. ' for' → logprob: -9.634195327758789
    8. '   ' → logprob: -13.009195327758789
    9. '#' (adapté à ' #') → logprob: -13.884195327758789
    10. 'requested' → logprob: -14.009195327758789

Token 166: ' So' (ID: 2632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001118426793254912
    2. 'all' → logprob: -7.6261186599731445
    3. '       ' → logprob: -7.7511186599731445
    4. 'books' → logprob: -9.126118659973145
    5. 'book' → logprob: -9.501118659973145
    6. ' for' → logprob: -12.126118659973145
    7. '   ' → logprob: -12.751118659973145
    8. 'requested' → logprob: -12.751118659973145
    9. 's' → logprob: -12.876118659973145
    10. '        
' → logprob: -14.501118659973145

Token 167: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05831234157085419
    2. ' for' → logprob: -2.93331241607666
    3. 's' → logprob: -6.30831241607666
    4. '       ' → logprob: -6.93331241607666
    5. '   ' → logprob: -7.68331241607666
    6. '
' → logprob: -9.18331241607666
    7. ' ' → logprob: -10.68331241607666
    8. '  ' → logprob: -11.43331241607666
    9. ' shelf' → logprob: -11.43331241607666
    10. '           ' → logprob: -12.43331241607666

Token 168: ' now' (ID: 1954)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.7164022326469421
    2. ' book' → logprob: -1.966402292251587
    3. 'student' → logprob: -2.216402292251587
    4. ' student' → logprob: -2.591402292251587
    5. 'req' → logprob: -2.591402292251587
    6. ' req' → logprob: -3.091402292251587
    7. ' s' → logprob: -3.966402292251587
    8. ' b' → logprob: -4.216402053833008
    9. 's' → logprob: -4.591402053833008
    10. 'b' → logprob: -4.716402053833008

Token 169: ' shelf' (ID: 40978)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4899654686450958
    2. ',' → logprob: -1.2399654388427734
    3. 's' → logprob: -2.9899654388427734
    4. ' for' → logprob: -3.8649654388427734
    5. '           ' → logprob: -4.739965438842773
    6. ':' → logprob: -4.989965438842773
    7. 'for' → logprob: -5.364965438842773
    8. ' ,' → logprob: -6.364965438842773
    9. ',s' → logprob: -6.739965438842773
    10. ',
' → logprob: -7.114965438842773

Token 170: ' contains' (ID: 8895)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.5205081701278687
    2. ' =' → logprob: -1.0205081701278687
    3. '=' → logprob: -3.270508289337158
    4. '.' → logprob: -5.020508289337158
    5. ' |=' → logprob: -8.0205078125
    6. 'update' → logprob: -8.3955078125
    7. '.=' → logprob: -9.0205078125
    8. '   ' → logprob: -10.1455078125
    9. ' ' → logprob: -10.5205078125
    10. '.add' → logprob: -11.1455078125

Token 171: ' all' (ID: 722)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.5164868831634521
    2. 'book' → logprob: -1.5164868831634521
    3. 'req' → logprob: -1.7664868831634521
    4. '{' → logprob: -1.8914868831634521
    5. 'range' → logprob: -2.141486883163452
    6. 's' → logprob: -3.391486883163452
    7. 'for' → logprob: -3.891486883163452
    8. '{s' → logprob: -4.141487121582031
    9. 'all' → logprob: -4.641487121582031
    10. 'b' → logprob: -5.016487121582031

Token 172: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.9316918253898621
    2. 'req' → logprob: -1.3066918849945068
    3. ' req' → logprob: -2.181691884994507
    4. 'book' → logprob: -2.931691884994507
    5. 'requested' → logprob: -2.931691884994507
    6. ' books' → logprob: -3.181691884994507
    7. 'tokens' → logprob: -3.681691884994507
    8. 'requests' → logprob: -4.181691646575928
    9. ' book' → logprob: -4.556691646575928
    10. ' requested' → logprob: -4.931691646575928

Token 173: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26458609104156494
    2. '.update' → logprob: -2.3895859718322754
    3. '=' → logprob: -2.7645859718322754
    4. '       ' → logprob: -2.7645859718322754
    5. 'for' → logprob: -5.264585971832275
    6. ' |=' → logprob: -6.014585971832275
    7. '.union' → logprob: -6.639585971832275
    8. 'update' → logprob: -7.014585971832275
    9. ' for' → logprob: -7.014585971832275
    10. '           ' → logprob: -7.014585971832275

Token 174: ' any' (ID: 1062)
  Prédit: 'req'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.7652667760848999
    2. 'students' → logprob: -1.7652667760849
    3. 'range' → logprob: -1.8902667760849
    4. '{' → logprob: -2.2652668952941895
    5. ' req' → logprob: -4.0152668952941895
    6. ' students' → logprob: -4.0152668952941895
    7. ' range' → logprob: -4.0152668952941895
    8. '[' → logprob: -4.2652668952941895
    9. 'set' → logprob: -4.7652668952941895
    10. '[s' → logprob: -5.1402668952941895

Token 175: ' request' (ID: 2616)
  Prédit: ' student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' student' → logprob: -0.3770129680633545
    2. ' students' → logprob: -2.1270129680633545
    3. 'student' → logprob: -2.6270129680633545
    4. ' req' → logprob: -3.2520129680633545
    5. 'req' → logprob: -3.3770129680633545
    6. 'students' → logprob: -3.6270129680633545
    7. 'requests' → logprob: -4.877013206481934
    8. ' request' → logprob: -5.002013206481934
    9. 'request' → logprob: -5.627013206481934
    10. ' requests' → logprob: -5.877013206481934

Token 176: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033655737061053514
    2. ' for' → logprob: -6.128365516662598
    3. 'for' → logprob: -7.628365516662598
    4. 's' → logprob: -7.628365516662598
    5. '        
' → logprob: -8.628365516662598
    6. '   ' → logprob: -12.378365516662598
    7. '
' → logprob: -12.628365516662598
    8. ',' → logprob: -13.128365516662598
    9. ' =' → logprob: -13.128365516662598
    10. '      ' → logprob: -13.128365516662598

Token 177: 'unique' (ID: 22365)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.2079707384109497
    2. ' for' → logprob: -1.3329707384109497
    3. 'for' → logprob: -1.7079707384109497
    4. '       ' → logprob: -2.20797061920166
    5. ' )
' → logprob: -2.45797061920166
    6. ')' → logprob: -3.33297061920166
    7. '.union' → logprob: -4.83297061920166
    8. ' )' → logprob: -4.95797061920166
    9. 'union' → logprob: -6.83297061920166
    10. ' in' → logprob: -6.95797061920166

Token 178: ')
' (ID: 446)
  Prédit: '_books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.4415236711502075
    2. ')' → logprob: -1.5665236711502075
    3. ' )' → logprob: -2.816523551940918
    4. 'books' → logprob: -3.691523551940918
    5. '_requests' → logprob: -4.441523551940918
    6. '_book' → logprob: -4.441523551940918
    7. ' ' → logprob: -5.191523551940918
    8. ' books' → logprob: -5.316523551940918
    9. '_ids' → logprob: -5.566523551940918
    10. ' )
' → logprob: -5.691523551940918

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032303521875292063
    2. '        
' → logprob: -6.503230571746826
    3. ' for' → logprob: -7.003230571746826
    4. 'for' → logprob: -8.753230094909668
    5. 's' → logprob: -8.878230094909668
    6. ' all' → logprob: -9.253230094909668
    7. 'books' → logprob: -9.253230094909668
    8. '        ' → logprob: -9.878230094909668
    9. ' books' → logprob: -9.878230094909668
    10. 'all' → logprob: -10.003230094909668

Token 180: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6710463166236877
    2. 'books' → logprob: -1.421046257019043
    3. 'all' (adapté à ' all') → logprob: -1.921046257019043
    4. 'for' → logprob: -2.421046257019043
    5. 'book' → logprob: -4.921046257019043
    6. ' for' → logprob: -6.671046257019043
    7. ' all' → logprob: -6.671046257019043
    8. ' books' → logprob: -7.421046257019043
    9. '        
' → logprob: -7.796046257019043
    10. 's' → logprob: -8.171046257019043

Token 181: '_books' (ID: 176077)
  Prédit: '_books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.0003334393841214478
    2. '_requests' → logprob: -8.500333786010742
    3. 'books' → logprob: -9.750333786010742
    4. ' =' → logprob: -10.375333786010742
    5. '_requested' → logprob: -10.750333786010742
    6. '_book' → logprob: -11.500333786010742
    7. 'Books' → logprob: -12.000333786010742
    8. '=' → logprob: -13.500333786010742
    9. '_req' → logprob: -14.875333786010742
    10. '_' → logprob: -15.625333786010742

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132699131965637
    2. '=' → logprob: -1.313269853591919
    3. '=set' → logprob: -11.93826961517334
    4. ' ' → logprob: -13.81326961517334
    5. 's' → logprob: -15.56326961517334
    6. '   ' → logprob: -16.188270568847656
    7. '_' → logprob: -16.188270568847656
    8. ' =
' → logprob: -16.563270568847656
    9. ' |=' → logprob: -17.063270568847656
    10. '  ' → logprob: -17.688270568847656

Token 183: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.023789258673787117
    2. ' set' → logprob: -3.773789167404175
    3. '{' → logprob: -7.523789405822754
    4. ' {' → logprob: -12.648789405822754
    5. '=set' → logprob: -15.898789405822754
    6. '{}' → logprob: -16.398788452148438
    7. '	set' → logprob: -16.773788452148438
    8. '(set' → logprob: -17.023788452148438
    9. '   ' → logprob: -17.773788452148438
    10. '{
' → logprob: -18.148788452148438

Token 184: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006374159827828407
    2. '()
' → logprob: -5.131374359130859
    3. '()

' → logprob: -8.38137435913086
    4. '().' → logprob: -8.75637435913086
    5. '(' → logprob: -11.00637435913086
    6. '(book' → logprob: -11.25637435913086
    7. '.union' → logprob: -11.63137435913086
    8. '(item' → logprob: -12.25637435913086
    9. '(b' → logprob: -12.50637435913086
    10. '();' → logprob: -13.00637435913086

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020162265747785568
    2. 'for' → logprob: -4.145162105560303
    3. ' for' → logprob: -5.520162105560303
    4. '<|end|>' → logprob: -9.645162582397461
    5. '        
' → logprob: -10.395162582397461
    6. '
' → logprob: -11.645162582397461
    7. '   ' → logprob: -12.645162582397461
    8. '<|end|>' → logprob: -13.145162582397461
    9. ')' → logprob: -13.895162582397461
    10. '	for' → logprob: -14.020162582397461

Token 186: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32834821939468384
    2. 'for' (adapté à ' for') → logprob: -1.328348159790039
    3. ' for' → logprob: -4.203348159790039
    4. '        
' → logprob: -11.078348159790039
    5. '   ' → logprob: -12.703348159790039
    6. '
' → logprob: -12.703348159790039
    7. '<|end|>' → logprob: -12.953348159790039
    8. '	for' → logprob: -13.703348159790039
    9. ' ' → logprob: -14.953348159790039
    10. '  
' → logprob: -15.078348159790039

Token 187: ' s' (ID: 265)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.07516589760780334
    2. 'stu' → logprob: -3.7001659870147705
    3. 's' → logprob: -4.075165748596191
    4. 'st' → logprob: -4.075165748596191
    5. ' student' → logprob: -5.325165748596191
    6. 'req' → logprob: -5.575165748596191
    7. 'stud' → logprob: -5.825165748596191
    8. 'requests' → logprob: -6.825165748596191
    9. ' s' → logprob: -8.825165748596191
    10. 'books' → logprob: -9.075165748596191

Token 188: ' in' (ID: 306)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0018899721326306462
    2. ' in' → logprob: -6.376890182495117
    3. 'tu' → logprob: -8.751890182495117
    4. 'ts' → logprob: -10.876890182495117
    5. 'td' → logprob: -12.501890182495117
    6. 'student' → logprob: -14.001890182495117
    7. 'in' → logprob: -14.126890182495117
    8. 's' → logprob: -14.876890182495117
    9. 'udent' → logprob: -14.876890182495117
    10. 'requests' → logprob: -15.001890182495117

Token 189: ' students' (ID: 4501)
  Prédit: 'students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'students' → logprob: -0.008628406561911106
    2. ' students' → logprob: -4.7586283683776855
    3. 'udents' → logprob: -11.883628845214844
    4. 'range' → logprob: -12.133628845214844
    5. ' range' → logprob: -13.883628845214844
    6. '.students' → logprob: -15.133628845214844
    7. 't' → logprob: -15.133628845214844
    8. 'stud' → logprob: -17.008628845214844
    9. '_students' → logprob: -17.758628845214844
    10. 'st' → logprob: -18.258628845214844

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2860471308231354
    2. ':
' → logprob: -1.411047101020813
    3. ' in' → logprob: -5.411046981811523
    4. 'in' → logprob: -8.911046981811523
    5. '   ' → logprob: -8.911046981811523
    6. '           ' → logprob: -9.536046981811523
    7. '       ' → logprob: -10.661046981811523
    8. '):
' → logprob: -12.286046981811523
    9. ':

' → logprob: -12.286046981811523
    10. '[' → logprob: -12.411046981811523

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002637199067976326
    2. '	       ' → logprob: -9.125264167785645
    3. ' for' → logprob: -9.500264167785645
    4. '   ' → logprob: -10.750264167785645
    5. '       ' → logprob: -11.500264167785645
    6. '    	   ' → logprob: -11.500264167785645
    7. 'for' → logprob: -11.750264167785645
    8. ',' → logprob: -11.750264167785645
    9. '<|end|>' → logprob: -12.250264167785645
    10. '```' → logprob: -12.500264167785645

Token 192: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5172479748725891
    2. 'for' → logprob: -1.2672479152679443
    3. '           ' → logprob: -2.2672479152679443
    4. ' for' → logprob: -4.642248153686523
    5. 'all' (adapté à ' all') → logprob: -5.017248153686523
    6. '               ' → logprob: -6.767248153686523
    7. '       ' → logprob: -7.517248153686523
    8. ' ' → logprob: -7.892248153686523
    9. ' all' → logprob: -8.267248153686523
    10. '  ' → logprob: -10.392248153686523

Token 193: '_books' (ID: 176077)
  Prédit: '_books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.0046738614328205585
    2. 'for' → logprob: -5.504673957824707
    3. '           ' → logprob: -8.129673957824707
    4. '       ' → logprob: -9.254673957824707
    5. 'books' → logprob: -9.629673957824707
    6. 'Books' → logprob: -10.379673957824707
    7. '_book' → logprob: -10.629673957824707
    8. ' for' → logprob: -10.754673957824707
    9. 's' → logprob: -11.379673957824707
    10. '               ' → logprob: -11.879673957824707

Token 194: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.18533167243003845
    2. '.' → logprob: -2.1853315830230713
    3. '|' → logprob: -2.9353315830230713
    4. 'update' → logprob: -5.68533182144165
    5. '.|' → logprob: -9.310331344604492
    6. ' |=' → logprob: -9.685331344604492
    7. '   ' → logprob: -10.185331344604492
    8. ' .' → logprob: -11.185331344604492
    9. '.=' → logprob: -12.060331344604492
    10. '.union' → logprob: -12.060331344604492

Token 195: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030855905264616013
    2. '(s' → logprob: -3.530855894088745
    3. 'list' → logprob: -7.155856132507324
    4. '(list' → logprob: -8.780856132507324
    5. 'set' → logprob: -8.905856132507324
    6. '(set' → logprob: -11.030856132507324
    7. 'book' → logprob: -12.030856132507324
    8. ' s' → logprob: -12.030856132507324
    9. '   ' → logprob: -13.280856132507324
    10. '([' → logprob: -13.780856132507324

Token 196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012047011114191264
    2. '))' → logprob: -9.625120162963867
    3. '())' → logprob: -10.625120162963867
    4. ')
' → logprob: -11.000120162963867
    5. ' )' → logprob: -12.375120162963867
    6. '])' → logprob: -13.125120162963867
    7. '[])' → logprob: -13.250120162963867
    8. '[' → logprob: -13.375120162963867
    9. ')`' → logprob: -13.500120162963867
    10. ')]' → logprob: -14.500120162963867

Token 197: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5177250504493713
    2. '()
' → logprob: -1.5177249908447266
    3. '       ' → logprob: -1.7677249908447266
    4. 's' → logprob: -4.642724990844727
    5. '().' → logprob: -6.267724990844727
    6. '
' → logprob: -7.017724990844727
    7. '        
' → logprob: -7.517724990844727
    8. ')' → logprob: -8.767724990844727
    9. '.' → logprob: -8.892724990844727
    10. '()

' → logprob: -9.017724990844727

Token 198: ' shelf' (ID: 40978)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.034070830792188644
    2. '()
' → logprob: -3.4090707302093506
    3. '().' → logprob: -9.28407096862793
    4. '()

' → logprob: -9.65907096862793
    5. '())' → logprob: -9.90907096862793
    6. '       ' → logprob: -10.40907096862793
    7. '.' → logprob: -10.65907096862793
    8. 's' → logprob: -10.90907096862793
    9. '()
' → logprob: -10.90907096862793
    10. '(' → logprob: -10.90907096862793

Token 199: ' =' (ID: 314)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.8814107775688171
    2. '=' → logprob: -1.131410837173462
    3. ' =' → logprob: -1.506410837173462
    4. '.=' → logprob: -3.631410837173462
    5. '.' → logprob: -4.256410598754883
    6. '=.' → logprob: -7.506410598754883
    7. ' |=' → logprob: -8.381410598754883
    8. ' .' → logprob: -10.756410598754883
    9. ' .=' → logprob: -10.881410598754883
    10. 'update' → logprob: -11.631410598754883

Token 200: ' set' (ID: 920)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.39744630455970764
    2. 'set' → logprob: -1.1474462747573853
    3. ' set' → logprob: -4.772446155548096
    4. ' all' → logprob: -6.272446155548096
    5. '{' → logprob: -9.397446632385254
    6. 's' → logprob: -10.022446632385254
    7. '(set' → logprob: -11.147446632385254
    8. 'copy' → logprob: -11.272446632385254
    9. '(all' → logprob: -11.522446632385254
    10. 'deep' → logprob: -13.022446632385254

Token 201: '(all' (ID: 34727)
  Prédit: '(all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(all' → logprob: -5.621933451038785e-05
    2. '()' → logprob: -10.375056266784668
    3. 'all' → logprob: -10.875056266784668
    4. '(s' → logprob: -12.875056266784668
    5. '(' → logprob: -13.250056266784668
    6. '().' → logprob: -14.375056266784668
    7. '(list' → logprob: -15.000056266784668
    8. '()
' → logprob: -15.625056266784668
    9. '(
' → logprob: -15.750056266784668
    10. '(range' → logprob: -16.62505531311035

Token 202: '_books' (ID: 176077)
  Prédit: '_books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.0004932218580506742
    2. 'books' → logprob: -7.750493049621582
    3. 's' → logprob: -11.125493049621582
    4. 'Books' → logprob: -11.625493049621582
    5. '_tokens' → logprob: -11.750493049621582
    6. '(' → logprob: -11.750493049621582
    7. 'ooks' → logprob: -11.875493049621582
    8. '_book' → logprob: -11.875493049621582
    9. 'all' → logprob: -12.750493049621582
    10. 'token' → logprob: -13.500493049621582

Token 203: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007763254456222057
    2. '())' → logprob: -4.882763385772705
    3. ' )' → logprob: -8.882762908935547
    4. '))' → logprob: -11.757762908935547
    5. '[])' → logprob: -12.757762908935547
    6. ' ())' → logprob: -13.632762908935547
    7. '])' → logprob: -13.757762908935547
    8. '()' → logprob: -13.882762908935547
    9. ').' → logprob: -14.507762908935547
    10. '.flatten' → logprob: -14.632762908935547

Token 204: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23449669778347015
    2. ':' → logprob: -1.8594967126846313
    3. ' =' → logprob: -4.109496593475342
    4. ')' → logprob: -4.359496593475342
    5. '<|end|>' → logprob: -5.734496593475342
    6. ' ' → logprob: -5.859496593475342
    7. '        
' → logprob: -5.859496593475342
    8. '   ' → logprob: -5.984496593475342
    9. '()' → logprob: -6.609496593475342
    10. '=' → logprob: -6.859496593475342

Token 206: ' For' (ID: 2214)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.927829384803772
    2. 'visited' → logprob: -1.552829384803772
    3. '       ' → logprob: -2.9278292655944824
    4. 'books' → logprob: -3.0528292655944824
    5. ' book' → logprob: -3.9278292655944824
    6. 'requests' → logprob: -3.9278292655944824
    7. 'positions' → logprob: -4.052829265594482
    8. '   ' → logprob: -4.177829265594482
    9. ' desk' → logprob: -4.302829265594482
    10. '#' → logprob: -4.302829265594482

Token 207: ' quick' (ID: 4853)
  Prédit: ' student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' student' → logprob: -0.6489875316619873
    2. ' desk' → logprob: -1.8989875316619873
    3. ' _' → logprob: -2.5239875316619873
    4. ' book' → logprob: -2.5239875316619873
    5. '_' → logprob: -2.6489875316619873
    6. 'student' → logprob: -3.1489875316619873
    7. 'book' → logprob: -4.148987770080566
    8. ' s' → logprob: -4.273987770080566
    9. ' i' → logprob: -4.398987770080566
    10. 'desk' → logprob: -5.898987770080566

Token 208: ' lookup' (ID: 37342)
  Prédit: ' access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' access' → logprob: -0.155862495303154
    2. ' lookup' → logprob: -2.40586256980896
    3. 'access' → logprob: -4.405862331390381
    4. ' look' → logprob: -4.530862331390381
    5. 'lookup' → logprob: -4.780862331390381
    6. '_lookup' → logprob: -5.030862331390381
    7. ' in' → logprob: -5.655862331390381
    8. 'look' → logprob: -5.780862331390381
    9. '_access' → logprob: -5.780862331390381
    10. 'book' → logprob: -6.280862331390381

Token 209: ' of' (ID: 328)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.8662160634994507
    2. 'books' → logprob: -1.9912160634994507
    3. '       ' → logprob: -2.6162161827087402
    4. 'des' → logprob: -2.7412161827087402
    5. 's' → logprob: -2.8662161827087402
    6. 'desk' → logprob: -2.9912161827087402
    7. ' of' → logprob: -3.4912161827087402
    8. 'def' → logprob: -3.7412161827087402
    9. ' desks' → logprob: -3.7412161827087402
    10. ':' → logprob: -3.7412161827087402

Token 210: ' where' (ID: 1919)
  Prédit: ' book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' book' → logprob: -0.9018396139144897
    2. ' which' → logprob: -1.5268396139144897
    3. 'book' → logprob: -1.7768396139144897
    4. ' books' → logprob: -2.1518397331237793
    5. 'books' → logprob: -3.5268397331237793
    6. 'which' → logprob: -4.901839733123779
    7. ' the' → logprob: -5.026839733123779
    8. ' desk' → logprob: -5.026839733123779
    9. '<|end|>' → logprob: -5.026839733123779
    10. ' next' → logprob: -5.276839733123779

Token 211: ' a' (ID: 261)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.7351846694946289
    2. 'each' → logprob: -1.110184669494629
    3. ' a' → logprob: -1.985184669494629
    4. 'a' → logprob: -3.860184669494629
    5. ' books' → logprob: -4.110184669494629
    6. '(book' → logprob: -5.485184669494629
    7. 'books' → logprob: -5.610184669494629
    8. 'book' → logprob: -5.735184669494629
    9. '(' → logprob: -6.485184669494629
    10. ' book' → logprob: -6.735184669494629

Token 212: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.0025267915334552526
    2. ' book' → logprob: -6.002526760101318
    3. 'token' → logprob: -10.002527236938477
    4. '(book' → logprob: -13.377527236938477
    5. ' ' → logprob: -13.752527236938477
    6. '	book' → logprob: -14.252527236938477
    7. '_book' → logprob: -14.502527236938477
    8. 'books' → logprob: -14.752527236938477
    9. ' token' → logprob: -14.877527236938477
    10. 's' → logprob: -15.502527236938477

Token 213: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.05551232025027275
    2. 'is' → logprob: -2.9305124282836914
    3. '_is' → logprob: -8.180512428283691
    4. ')' → logprob: -9.680512428283691
    5. ' ' → logprob: -10.180512428283691
    6. '_book' → logprob: -10.180512428283691
    7. '   ' → logprob: -10.680512428283691
    8. '```' → logprob: -10.805512428283691
    9. 'belongs' → logprob: -11.055512428283691
    10. 's' → logprob: -11.180512428283691

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6721596121788025
    2. '_book' → logprob: -2.4221596717834473
    3. ' =' → logprob: -2.4221596717834473
    4. '       ' → logprob: -2.5471596717834473
    5. ',' → logprob: -2.7971596717834473
    6. 'book' → logprob: -3.1721596717834473
    7. '(book' → logprob: -3.2971596717834473
    8. ' book' → logprob: -4.422159671783447
    9. 's' → logprob: -4.797159671783447
    10. '   ' → logprob: -5.047159671783447

Token 215: '       ' (ID: 309)
  Prédit: ' book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' book' → logprob: -0.5288478136062622
    2. 'book' → logprob: -1.0288478136062622
    3. '       ' → logprob: -3.1538476943969727
    4. 'location' → logprob: -5.903847694396973
    5. ' location' → logprob: -6.028847694396973
    6. 'books' → logprob: -7.028847694396973
    7. '	book' → logprob: -7.278847694396973
    8. '(book' → logprob: -7.653847694396973
    9. ' books' → logprob: -7.778847694396973
    10. '_book' → logprob: -7.903847694396973

Token 216: ' #' (ID: 1069)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.4090396463871002
    2. ' book' → logprob: -2.0340397357940674
    3. '{}' → logprob: -2.0340397357940674
    4. ' {}' → logprob: -3.4090397357940674
    5. 'dict' → logprob: -4.034039497375488
    6. '{' → logprob: -5.409039497375488
    7. 'default' → logprob: -5.409039497375488
    8. 'location' → logprob: -6.159039497375488
    9. ')' → logprob: -6.284039497375488
    10. ' dict' → logprob: -6.659039497375488

Token 217: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.3920459747314453
    2. ' book' → logprob: -1.1420459747314453
    3. 'location' → logprob: -5.767045974731445
    4. ' location' → logprob: -6.642045974731445
    5. 'where' → logprob: -8.642045974731445
    6. ' locations' → logprob: -9.642045974731445
    7. ' where' → logprob: -9.642045974731445
    8. 'locations' → logprob: -9.767045974731445
    9. ' whereabouts' → logprob: -10.142045974731445
    10. '	book' → logprob: -10.392045974731445

Token 218: '_location' (ID: 29811)
  Prédit: '_location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_location' → logprob: -0.051345594227313995
    2. '_locations' → logprob: -3.0513455867767334
    3. '_to' → logprob: -6.8013458251953125
    4. '_positions' → logprob: -7.1763458251953125
    5. '_pos' → logprob: -8.051345825195312
    6. '_loc' → logprob: -8.176345825195312
    7. '_position' → logprob: -8.301345825195312
    8. '2' → logprob: -11.426345825195312
    9. 'location' → logprob: -11.926345825195312
    10. '_map' → logprob: -12.676345825195312

Token 219: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759430527687073
    2. '=' → logprob: -0.8259430527687073
    3. 's' → logprob: -13.325942993164062
    4. '={}' → logprob: -14.200942993164062
    5. ' ' → logprob: -14.950942993164062
    6. ':' → logprob: -14.950942993164062
    7. 'book' → logprob: -15.950942993164062
    8. '   ' → logprob: -16.200942993164062
    9. ',' → logprob: -16.450942993164062
    10. '_' → logprob: -16.700942993164062

Token 220: ' book' (ID: 2392)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.027939200401306152
    2. 'default' → logprob: -4.277939319610596
    3. ' {}' → logprob: -5.027939319610596
    4. 'dict' → logprob: -5.277939319610596
    5. ' defaultdict' → logprob: -6.277939319610596
    6. ' dict' → logprob: -9.277938842773438
    7. '{' → logprob: -10.277938842773438
    8. '={}' → logprob: -11.027938842773438
    9. ' =' → logprob: -13.652938842773438
    10. '{})' → logprob: -13.777938842773438

Token 221: '_id' (ID: 1537)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.293064683675766
    2. '=' → logprob: -1.6680647134780884
    3. ':' → logprob: -3.543064594268799
    4. '_location' → logprob: -4.168064594268799
    5. '_to' → logprob: -4.418064594268799
    6. '[' → logprob: -6.168064594268799
    7. '_' → logprob: -6.168064594268799
    8. '_locations' → logprob: -6.418064594268799
    9. ']' → logprob: -7.668064594268799
    10. ' ' → logprob: -7.918064594268799

Token 222: ' ->' (ID: 2747)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575993537902832
    2. '=' → logprob: -0.825993537902832
    3. '[' → logprob: -10.825993537902832
    4. ']' → logprob: -11.450993537902832
    5. ':' → logprob: -11.825993537902832
    6. ' ' → logprob: -12.325993537902832
    7. '={}' → logprob: -12.825993537902832
    8. '   ' → logprob: -13.075993537902832
    9. ')' → logprob: -13.325993537902832
    10. ',' → logprob: -14.075993537902832

Token 223: ' loc' (ID: 1539)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.12384549528360367
    2. 'None' → logprob: -3.3738455772399902
    3. '"s' → logprob: -3.6238455772399902
    4. '"' → logprob: -4.12384557723999
    5. '-' → logprob: -4.49884557723999
    6. ''' → logprob: -4.87384557723999
    7. ' None' → logprob: -4.87384557723999
    8. 's' → logprob: -5.12384557723999
    9. ' '' → logprob: -5.87384557723999
    10. ' -' → logprob: -6.49884557723999

Token 224: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10892713069915771
    2. '=' → logprob: -2.3589272499084473
    3. '[' → logprob: -5.733927249908447
    4. '   ' → logprob: -6.983927249908447
    5. '{' → logprob: -7.233927249908447
    6. ',' → logprob: -7.483927249908447
    7. ']' → logprob: -7.733927249908447
    8. ')' → logprob: -8.108926773071289
    9. ':' → logprob: -8.233926773071289
    10. '_' → logprob: -8.358926773071289

Token 225: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025256561115384102
    2. '=' → logprob: -3.775256633758545
    3. '   ' → logprob: -7.400256633758545
    4. '       ' → logprob: -8.150256156921387
    5. '_' → logprob: -8.775256156921387
    6. '{' → logprob: -8.900256156921387
    7. ':' → logprob: -9.025256156921387
    8. ',' → logprob: -9.025256156921387
    9. ')' → logprob: -9.525256156921387
    10. 's' → logprob: -9.525256156921387

Token 226: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017977140843868256
    2. '=' → logprob: -4.267977237701416
    3. '{' → logprob: -6.392977237701416
    4. '={}' → logprob: -6.767977237701416
    5. '{}' → logprob: -8.767976760864258
    6. '_' → logprob: -8.767976760864258
    7. '<|end|>' → logprob: -9.017976760864258
    8. ' defaultdict' → logprob: -9.517976760864258
    9. 'dict' → logprob: -9.767976760864258
    10. '   ' → logprob: -10.142976760864258

Token 227: ' loc' (ID: 1539)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.34275883436203003
    2. 'dict' → logprob: -2.592758893966675
    3. 'book' → logprob: -2.717758893966675
    4. '{' → logprob: -2.967758893966675
    5. ' {}' → logprob: -3.092758893966675
    6. '={}' → logprob: -3.592758893966675
    7. ' book' → logprob: -5.342758655548096
    8. '#' → logprob: -5.467758655548096
    9. 'location' → logprob: -5.592758655548096
    10. ' dict' → logprob: -6.342758655548096

Token 228: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5769533514976501
    2. ' =' → logprob: -0.8269533514976501
    3. 'ation' → logprob: -7.201953411102295
    4. '[' → logprob: -9.826952934265137
    5. ':' → logprob: -9.951952934265137
    6. '   ' → logprob: -9.951952934265137
    7. 's' → logprob: -10.701952934265137
    8. 'ations' → logprob: -11.076952934265137
    9. '={}' → logprob: -11.076952934265137
    10. ' ' → logprob: -11.701952934265137

Token 229: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0787205621600151
    2. ''s' → logprob: -2.8287205696105957
    3. 's' → logprob: -5.328720569610596
    4. '"s' → logprob: -5.328720569610596
    5. '-s' → logprob: -6.703720569610596
    6. '(-' → logprob: -6.703720569610596
    7. '"' → logprob: -6.703720569610596
    8. '('' → logprob: -7.078720569610596
    9. 'None' → logprob: -7.078720569610596
    10. ''' → logprob: -7.578720569610596

Token 230: '..' (ID: 485)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0001307142956648022
    2. ' m' → logprob: -9.125130653381348
    3. '(m' → logprob: -11.125130653381348
    4. '[m' → logprob: -13.625130653381348
    5. '=m' → logprob: -14.000130653381348
    6. '<m' → logprob: -14.375130653381348
    7. '   ' → logprob: -14.750130653381348
    8. '#m' → logprob: -15.000130653381348
    9. '
' → logprob: -15.125130653381348
    10. '(' → logprob: -15.125130653381348

Token 232: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13765446841716766
    2. '=' → logprob: -2.8876545429229736
    3. ' =' → logprob: -3.6376545429229736
    4. ' -' → logprob: -4.5126543045043945
    5. 'for' → logprob: -5.2626543045043945
    6. ']' → logprob: -5.3876543045043945
    7. ')' → logprob: -5.3876543045043945
    8. ' for' → logprob: -5.3876543045043945
    9. '<|end|>' → logprob: -5.6376543045043945
    10. ',' → logprob: -5.7626543045043945

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024779161904007196
    2. '-' → logprob: -6.002478122711182
    3. ' ' → logprob: -14.127477645874023
    4. '```' → logprob: -14.127477645874023
    5. 'c' → logprob: -15.377477645874023
    6. ' -' → logprob: -16.127477645874023
    7. '2' → logprob: -16.377477645874023
    8. '
' → logprob: -17.002477645874023
    9. '0' → logprob: -17.127477645874023
    10. ')' → logprob: -17.627477645874023

Token 234: ' means' (ID: 4748)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.46002063155174255
    2. ' desks' → logprob: -1.835020661354065
    3. ',' → logprob: -2.7100205421447754
    4. ' for' → logprob: -2.8350205421447754
    5. '<|end|>' → logprob: -3.9600205421447754
    6. ')' → logprob: -4.335020542144775
    7. 'des' → logprob: -4.335020542144775
    8. '       ' → logprob: -5.085020542144775
    9. ' ,' → logprob: -5.210020542144775
    10. ':' → logprob: -5.335020542144775

Token 235: ' desk' (ID: 20794)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.4319497346878052
    2. 'desk' → logprob: -1.1819497346878052
    3. ' desk' → logprob: -4.056949615478516
    4. ' on' → logprob: -4.431949615478516
    5. 'at' → logprob: -5.306949615478516
    6. 'the' → logprob: -5.806949615478516
    7. 'book' → logprob: -5.931949615478516
    8. 'a' → logprob: -7.056949615478516
    9. 'books' → logprob: -7.431949615478516
    10. 's' → logprob: -7.431949615478516

Token 236: ' index' (ID: 3472)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34269148111343384
    2. '<|end|>' → logprob: -1.467691421508789
    3. '[' → logprob: -4.717691421508789
    4. ')' → logprob: -4.717691421508789
    5. '_' → logprob: -4.967691421508789
    6. ',' → logprob: -5.467691421508789
    7. '```' → logprob: -5.467691421508789
    8. '[]' → logprob: -5.467691421508789
    9. '_id' → logprob: -5.592691421508789
    10. ']' → logprob: -5.842691421508789

Token 237: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21910198032855988
    2. 's' → logprob: -2.844101905822754
    3. ',' → logprob: -3.094101905822754
    4. '=' → logprob: -3.219101905822754
    5. '
' → logprob: -4.219101905822754
    6. '<|end|>' → logprob: -4.719101905822754
    7. '       ' → logprob: -5.094101905822754
    8. '```' → logprob: -5.844101905822754
    9. ',
' → logprob: -6.469101905822754
    10. ')' → logprob: -6.594101905822754

Token 238: ' m' (ID: 284)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.4166430234909058
    2. ' loc' → logprob: -1.4166430234909058
    3. ' -' → logprob: -1.4166430234909058
    4. 'loc' → logprob: -1.9166430234909058
    5. ' None' → logprob: -3.1666431427001953
    6. '1' → logprob: -3.6666431427001953
    7. 'None' → logprob: -4.166643142700195
    8. 's' → logprob: -4.666643142700195
    9. ' m' → logprob: -5.041643142700195
    10. ''s' → logprob: -5.416643142700195

Token 239: ' means' (ID: 4748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05129813775420189
    2. ' shelf' → logprob: -3.301298141479492
    3. ''s' → logprob: -5.051298141479492
    4. '"s' → logprob: -5.051298141479492
    5. 'on' → logprob: -8.926298141479492
    6. ' on' → logprob: -9.801298141479492
    7. 'Shelf' → logprob: -10.176298141479492
    8. 'the' → logprob: -10.176298141479492
    9. '`s' → logprob: -10.301298141479492
    10. '"' → logprob: -11.301298141479492

Token 241: '
' (ID: 198)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.011862293817102909
    2. '       ' → logprob: -4.886862277984619
    3. ' book' → logprob: -6.136862277984619
    4. ')' → logprob: -8.011862754821777
    5. '	book' → logprob: -8.011862754821777
    6. '
' → logprob: -8.261862754821777
    7. '=' → logprob: -8.761862754821777
    8. '_book' → logprob: -8.761862754821777
    9. '(book' → logprob: -8.761862754821777
    10. ' =' → logprob: -8.761862754821777

Token 242: '       ' (ID: 309)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.0834188386797905
    2. '=' → logprob: -3.458418846130371
    3. ' =' → logprob: -3.833418846130371
    4. '       ' → logprob: -4.458418846130371
    5. ')' → logprob: -5.458418846130371
    6. ' book' → logprob: -5.583418846130371
    7. '
' → logprob: -6.583418846130371
    8. '```' → logprob: -6.833418846130371
    9. ')
' → logprob: -7.208418846130371
    10. '(book' → logprob: -7.333418846130371

Token 243: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.08862815052270889
    2. ' =' → logprob: -3.713628053665161
    3. ' book' → logprob: -3.713628053665161
    4. '{' → logprob: -3.963628053665161
    5. '=' → logprob: -5.58862829208374
    6. ')' → logprob: -6.08862829208374
    7. '	book' → logprob: -6.71362829208374
    8. '{}' → logprob: -6.83862829208374
    9. '       ' → logprob: -6.96362829208374
    10. '<|end|>' → logprob: -7.08862829208374

Token 244: '_location' (ID: 29811)
  Prédit: '_location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_location' → logprob: -0.002112193498760462
    2. '_locations' → logprob: -6.25211238861084
    3. '_' → logprob: -8.62711238861084
    4. ' _' → logprob: -13.87711238861084
    5. '_position' → logprob: -14.00211238861084
    6. '_loc' → logprob: -14.00211238861084
    7. '_to' → logprob: -14.87711238861084
    8. '_positions' → logprob: -15.25211238861084
    9. '_mapping' → logprob: -15.62711238861084
    10. '=_' → logprob: -16.127111434936523

Token 245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889088988304138
    2. ' =' → logprob: -2.578890800476074
    3. '={}' → logprob: -14.078890800476074
    4. ' ={' → logprob: -16.07889175415039
    5. '={' → logprob: -16.45389175415039
    6. '[' → logprob: -16.70389175415039
    7. '＝' → logprob: -17.45389175415039
    8. 's' → logprob: -17.95389175415039
    9. ' ' → logprob: -18.32889175415039
    10. '=}' → logprob: -19.07889175415039

Token 246: ' dict' (ID: 11878)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0005771008436568081
    2. '{' → logprob: -7.500576972961426
    3. '{}' → logprob: -11.125576972961426
    4. ' defaultdict' → logprob: -11.875576972961426
    5. '(default' → logprob: -14.125576972961426
    6. 'dict' → logprob: -14.250576972961426
    7. '.default' → logprob: -14.875576972961426
    8. ' {' → logprob: -15.625576972961426
    9. '"default' → logprob: -15.875576972961426
    10. '[m' → logprob: -16.000577926635742

Token 247: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017101909965276718
    2. '(book' → logprob: -5.017101764678955
    3. '()
' → logprob: -5.267101764678955
    4. '([(' → logprob: -6.017101764678955
    5. '((' → logprob: -7.142101764678955
    6. '(' → logprob: -7.642101764678955
    7. '(s' → logprob: -7.892101764678955
    8. ' =' → logprob: -8.642102241516113
    9. '({' → logprob: -8.767102241516113
    10. '()

' → logprob: -8.892102241516113

Token 248: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7649261951446533
    2. '       ' → logprob: -1.2649261951446533
    3. 'for' → logprob: -1.5149261951446533
    4. '<|end|>' → logprob: -3.6399261951446533
    5. '        
' → logprob: -6.639925956726074
    6. ')' → logprob: -7.139925956726074
    7. '        ' → logprob: -7.139925956726074
    8. ' ' → logprob: -7.389925956726074
    9. '<|end|>' → logprob: -7.639925956726074
    10. ' =' → logprob: -7.764925956726074

Token 249: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01107234600931406
    2. ' for' → logprob: -4.636072158813477
    3. '       ' → logprob: -6.636072158813477
    4. '<|end|>' → logprob: -13.511072158813477
    5. ')' → logprob: -14.011072158813477
    6. '```' → logprob: -15.261072158813477
    7. '{' → logprob: -15.386072158813477
    8. '	for' → logprob: -16.136072158813477
    9. '   ' → logprob: -16.386072158813477
    10. '        
' → logprob: -16.386072158813477

Token 250: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3610510230064392
    2. 'book' → logprob: -1.236051082611084
    3. ' b' → logprob: -4.861051082611084
    4. ' book' → logprob: -5.361051082611084
    5. 'bk' → logprob: -9.486050605773926
    6. '   ' → logprob: -12.361050605773926
    7. ' bk' → logprob: -12.861050605773926
    8. 'bid' → logprob: -13.611050605773926
    9. '	book' → logprob: -13.861050605773926
    10. ' ' → logprob: -13.861050605773926

Token 251: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007652653846889734
    2. 'in' → logprob: -4.882652759552002
    3. 's' → logprob: -10.132652282714844
    4. 'b' → logprob: -13.507652282714844
    5. ' ' → logprob: -13.757652282714844
    6. '_in' → logprob: -13.757652282714844
    7. 'n' → logprob: -14.007652282714844
    8. '	in' → logprob: -15.007652282714844
    9. ' s' → logprob: -15.945152282714844
    10. 'd' → logprob: -16.007652282714844

Token 252: ' shelf' (ID: 40978)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.01637287251651287
    2. ' all' → logprob: -4.5163726806640625
    3. 's' → logprob: -5.2663726806640625
    4. ' shelf' → logprob: -8.891372680664062
    5. 'range' → logprob: -12.391372680664062
    6. 'list' → logprob: -13.266372680664062
    7. '(all' → logprob: -13.766372680664062
    8. ' range' → logprob: -14.266372680664062
    9. 'sorted' → logprob: -14.766372680664062
    10. ' ' → logprob: -14.891372680664062

Token 253: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006301430985331535
    2. ':
' → logprob: -5.131301403045654
    3. '   ' → logprob: -8.256301879882812
    4. ',' → logprob: -10.381301879882812
    5. '       ' → logprob: -10.631301879882812
    6. ' :' → logprob: -11.131301879882812
    7. '           ' → logprob: -11.381301879882812
    8. '):' → logprob: -11.881301879882812
    9. 'in' → logprob: -12.881301879882812
    10. '.' → logprob: -12.881301879882812

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007402998744510114
    2. '   ' → logprob: -7.3757405281066895
    3. '       ' → logprob: -10.250740051269531
    4. ' =' → logprob: -11.000740051269531
    5. '=' → logprob: -11.375740051269531
    6. ',' → logprob: -11.375740051269531
    7. '	       ' → logprob: -11.750740051269531
    8. 's' → logprob: -12.125740051269531
    9. '```' → logprob: -12.125740051269531
    10. '          ' → logprob: -12.625740051269531

Token 255: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.02388017438352108
    2. ' book' → logprob: -4.0238800048828125
    3. '   ' → logprob: -5.7738800048828125
    4. '           ' → logprob: -6.3988800048828125
    5. '       ' → logprob: -7.0238800048828125
    6. '	book' → logprob: -10.273880004882812
    7. ' ' → logprob: -11.648880004882812
    8. '               ' → logprob: -12.648880004882812
    9. '  ' → logprob: -13.273880004882812
    10. '    ' → logprob: -13.523880004882812

Token 256: '_location' (ID: 29811)
  Prédit: '_location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_location' → logprob: -4.60414821645827e-06
    2. ' _' → logprob: -13.250004768371582
    3. '_locations' → logprob: -13.750004768371582
    4. '_' → logprob: -14.250004768371582
    5. '```' → logprob: -14.875004768371582
    6. ''_' → logprob: -15.500004768371582
    7. '"_' → logprob: -16.125003814697266
    8. '_position' → logprob: -16.375003814697266
    9. 'location' → logprob: -16.875003814697266
    10. ']_' → logprob: -17.500003814697266

Token 257: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00010819212911883369
    2. '[' → logprob: -9.875107765197754
    3. '=' → logprob: -10.125107765197754
    4. ' =' → logprob: -12.000107765197754
    5. ' [' → logprob: -12.375107765197754
    6. '=b' → logprob: -12.500107765197754
    7. '[m' → logprob: -14.000107765197754
    8. 'b' → logprob: -14.500107765197754
    9. '=[' → logprob: -15.125107765197754
    10. ']' → logprob: -15.250107765197754

Token 258: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0615416094660759
    2. ' =' → logprob: -3.0615415573120117
    3. '=' → logprob: -4.561541557312012
    4. ' ]' → logprob: -6.436541557312012
    5. ']=' → logprob: -7.186541557312012
    6. ')' → logprob: -9.936541557312012
    7. '=m' → logprob: -11.186541557312012
    8. ' ' → logprob: -13.936541557312012
    9. ' )' → logprob: -14.436541557312012
    10. '   ' → logprob: -14.936541557312012

Token 259: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38692277669906616
    2. ' =' → logprob: -1.136922836303711
    3. '=m' → logprob: -9.886922836303711
    4. ' ' → logprob: -15.511922836303711
    5. '=s' → logprob: -15.511922836303711
    6. '=b' → logprob: -16.01192283630371
    7. '   ' → logprob: -16.63692283630371
    8. ')' → logprob: -16.88692283630371
    9. ']' → logprob: -17.13692283630371
    10. '=True' → logprob: -17.38692283630371

Token 260: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015023599844425917
    2. ' m' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.751502990722656
    4. '	m' → logprob: -17.626502990722656
    5. ' ' → logprob: -21.001502990722656
    6. '<m' → logprob: -21.251502990722656
    7. '[m' → logprob: -21.251502990722656
    8. '=m' → logprob: -21.501502990722656
    9. ')m' → logprob: -21.876502990722656
    10. 's' → logprob: -22.001502990722656

Token 261: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5696403980255127
    2. '<|end|>' → logprob: -0.9446403980255127
    3. '
' → logprob: -3.9446403980255127
    4. '        
' → logprob: -4.444640159606934
    5. '<|end|>' → logprob: -5.069640159606934
    6. '   ' → logprob: -5.569640159606934
    7. '    
' → logprob: -6.694640159606934
    8. '```' → logprob: -7.569640159606934
    9. ')' → logprob: -8.069640159606934
    10. 'for' → logprob: -8.319640159606934

Token 263: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46471109986305237
    2. 'for' → logprob: -1.08971107006073
    3. ' for' → logprob: -3.9647111892700195
    4. '   ' → logprob: -4.4647111892700195
    5. 'while' → logprob: -6.9647111892700195
    6. '        
' → logprob: -7.0897111892700195
    7. 'def' → logprob: -7.2147111892700195
    8. 'current' → logprob: -7.4647111892700195
    9. 'next' → logprob: -7.4647111892700195
    10. 'queue' → logprob: -8.08971118927002

Token 264: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44295334815979004
    2. ' for' → logprob: -1.94295334815979
    3. '       ' → logprob: -3.06795334815979
    4. 'queue' → logprob: -3.19295334815979
    5. 'current' → logprob: -4.567953109741211
    6. 'next' → logprob: -4.567953109741211
    7. '   ' → logprob: -4.567953109741211
    8. 'while' → logprob: -4.817953109741211
    9. 'book' → logprob: -4.942953109741211
    10. ' queue' → logprob: -4.942953109741211

Token 265: ' L' (ID: 451)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.46948519349098206
    2. ' each' → logprob: -1.9694851636886597
    3. ' desk' → logprob: -3.344485282897949
    4. '_each' → logprob: -3.344485282897949
    5. 'student' → logprob: -3.594485282897949
    6. 'i' → logprob: -3.844485282897949
    7. ' student' → logprob: -4.094485282897949
    8. 'book' → logprob: -4.094485282897949
    9. 'desk' → logprob: -4.219485282897949
    10. 'b' → logprob: -4.844485282897949

Token 266: 'RU' (ID: 63252)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -1.049821376800537
    2. 'RU' → logprob: -1.549821376800537
    3. 'en' → logprob: -2.049821376800537
    4. 'ook' → logprob: -2.174821376800537
    5. 'ast' → logprob: -2.549821376800537
    6. 'for' → logprob: -3.674821376800537
    7. '#' → logprob: -4.049821376800537
    8. 'from' → logprob: -4.299821376800537
    9. 'eft' → logprob: -5.049821376800537
    10. 'book' → logprob: -5.174821376800537

Token 267: ' tracking' (ID: 20254)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.512502908706665
    2. 'stack' → logprob: -1.637502908706665
    3. 'cache' → logprob: -2.137502908706665
    4. '_cache' → logprob: -2.262502908706665
    5. ' =' → logprob: -2.637502908706665
    6. '_stack' → logprob: -2.762502908706665
    7. 'queues' → logprob: -3.762502908706665
    8. 'c' → logprob: -4.012502670288086
    9. ' stacks' → logprob: -4.137502670288086
    10. 'desk' → logprob: -4.387502670288086

Token 268: ' on' (ID: 402)
  Prédit: ' desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' desk' → logprob: -0.32558852434158325
    2. 'desk' → logprob: -2.2005884647369385
    3. ' last' → logprob: -3.2005884647369385
    4. ' l' → logprob: -3.2005884647369385
    5. 'last' → logprob: -3.5755884647369385
    6. ' usage' → logprob: -4.575588703155518
    7. ' desks' → logprob: -4.700588703155518
    8. 'from' → logprob: -5.200588703155518
    9. 'import' → logprob: -5.450588703155518
    10. 'usage' → logprob: -5.450588703155518

Token 269: ' D' (ID: 415)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.37645605206489563
    2. 'des' → logprob: -1.8764560222625732
    3. ' each' → logprob: -2.1264560222625732
    4. ' desks' → logprob: -3.2514560222625732
    5. 'the' → logprob: -7.001456260681152
    6. 'desk' → logprob: -8.126456260681152
    7. ' the' → logprob: -8.126456260681152
    8. 'books' → logprob: -8.626456260681152
    9. 'import' → logprob: -8.876456260681152
    10. '[]' → logprob: -9.376456260681152

Token 270: '1' (ID: 16)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.03678947314620018
    2. 'esk' → logprob: -3.6617894172668457
    3. 'each' → logprob: -6.036789417266846
    4. 'e' → logprob: -6.411789417266846
    5. 'ES' → logprob: -6.411789417266846
    6. 'des' → logprob: -7.286789417266846
    7. 'for' → logprob: -7.349289417266846
    8. '   ' → logprob: -7.724289417266846
    9. '[' → logprob: -8.161789894104004
    10. '#' → logprob: -8.161789894104004

Token 271: ' desk' (ID: 20794)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.370013952255249
    2. ',' → logprob: -2.745013952255249
    3. '
' → logprob: -2.870013952255249
    4. ' =' → logprob: -3.370013952255249
    5. 'import' → logprob: -3.620013952255249
    6. '        
' → logprob: -3.995013952255249
    7. 'd' → logprob: -4.120014190673828
    8. 'deque' → logprob: -4.120014190673828
    9. ' desk' → logprob: -4.870014190673828
    10. 'book' → logprob: -4.995014190673828

Token 273: 'desk' (ID: 84302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35730114579200745
    2. 'm' → logprob: -1.607301115989685
    3. ')' → logprob: -3.2323012351989746
    4. '#' → logprob: -4.482301235198975
    5. 'des' → logprob: -4.732301235198975
    6. '[' → logprob: -5.107301235198975
    7. ' m' → logprob: -5.107301235198975
    8. 'd' → logprob: -5.482301235198975
    9. '       ' → logprob: -5.482301235198975
    10. ' ' → logprob: -5.982301235198975

Token 274: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24221409857273102
    2. '[' → logprob: -1.8672140836715698
    3. ' =' → logprob: -3.9922142028808594
    4. '=' → logprob: -4.492214202880859
    5. 'index' → logprob: -5.117214202880859
    6. ')' → logprob: -5.367214202880859
    7. '_index' → logprob: -5.617214202880859
    8. '_idx' → logprob: -5.617214202880859
    9. '
' → logprob: -5.992214202880859
    10. '_' → logprob: -6.242214202880859

Token 275: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1245378851890564
    2. '=' → logprob: -2.874537944793701
    3. '[' → logprob: -3.374537944793701
    4. 'index' → logprob: -4.624537944793701
    5. ' =' → logprob: -5.249537944793701
    6. '_index' → logprob: -5.999537944793701
    7. '_idx' → logprob: -5.999537944793701
    8. 'idx' → logprob: -6.249537944793701
    9. '```' → logprob: -6.499537944793701
    10. 's' → logprob: -7.499537944793701

Token 276: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1461024135351181
    2. '):' → logprob: -2.0211024284362793
    3. '),' → logprob: -6.521102428436279
    4. '):
' → logprob: -6.771102428436279
    5. ')
' → logprob: -8.271101951599121
    6. ').' → logprob: -8.896101951599121
    7. ' )' → logprob: -9.271101951599121
    8. '):

' → logprob: -9.771101951599121
    9. ')...' → logprob: -9.771101951599121
    10. ',' → logprob: -9.896101951599121

Token 277: '       ' (ID: 309)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.33268484473228455
    2. '       ' → logprob: -2.7076847553253174
    3. ' from' → logprob: -3.2076847553253174
    4. ' d' → logprob: -3.2076847553253174
    5. ' import' → logprob: -3.5826847553253174
    6. 'from' → logprob: -3.9576847553253174
    7. ' access' → logprob: -4.0826849937438965
    8. 'd' → logprob: -4.5826849937438965
    9. 'l' → logprob: -4.5826849937438965
    10. ' last' → logprob: -4.8326849937438965

Token 278: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5576809644699097
    2. 'd' → logprob: -1.5576809644699097
    3. 'from' → logprob: -2.307681083679199
    4. ' l' → logprob: -3.557681083679199
    5. 'D' → logprob: -3.932681083679199
    6. ' d' → logprob: -4.557681083679199
    7. 'last' → logprob: -4.557681083679199
    8. 'import' → logprob: -4.807681083679199
    9. 'desk' → logprob: -4.807681083679199
    10. 'lr' → logprob: -5.057681083679199

Token 279: ' We'll' (ID: 46830)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.526691198348999
    2. 'd' → logprob: -1.276691198348999
    3. 'from' → logprob: -2.651691198348999
    4. 'desk' → logprob: -4.401691436767578
    5. 'D' → logprob: -4.776691436767578
    6. 'last' → logprob: -5.026691436767578
    7. 'usage' → logprob: -5.151691436767578
    8. 'access' → logprob: -5.526691436767578
    9. '#' → logprob: -5.651691436767578
    10. 'lr' → logprob: -5.776691436767578

Token 280: ' keep' (ID: 3357)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.4319413900375366
    2. 'use' → logprob: -1.3069413900375366
    3. ' track' → logprob: -3.556941509246826
    4. 'track' → logprob: -4.431941509246826
    5. 'import' → logprob: -4.806941509246826
    6. ' implement' → logprob: -4.931941509246826
    7. 'simulate' → logprob: -4.931941509246826
    8. ' maintain' → logprob: -5.181941509246826
    9. 'maint' → logprob: -6.056941509246826
    10. 'implement' → logprob: -6.306941509246826

Token 281: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18229007720947266
    2. ' a' → logprob: -2.1822900772094727
    3. 'an' → logprob: -3.9322900772094727
    4. ' an' → logprob: -3.9322900772094727
    5. 'track' → logprob: -5.307290077209473
    6. ' track' → logprob: -5.557290077209473
    7. '   ' → logprob: -6.807290077209473
    8. ' desk' → logprob: -6.807290077209473
    9. 'book' → logprob: -7.307290077209473
    10. 'from' → logprob: -7.807290077209473

Token 282: ' list' (ID: 1562)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0012735659256577492
    2. ' deque' → logprob: -7.6262736320495605
    3. 'queue' → logprob: -7.8762736320495605
    4. 'from' → logprob: -8.751273155212402
    5. 'd' → logprob: -9.126273155212402
    6. 'list' → logprob: -9.251273155212402
    7. 'collections' → logprob: -11.376273155212402
    8. 'linked' → logprob: -11.751273155212402
    9. 'dq' → logprob: -12.501273155212402
    10. ' queue' → logprob: -12.876273155212402

Token 283: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.2293553352355957
    2. 'd' → logprob: -1.8543553352355957
    3. '_d' → logprob: -2.7293553352355957
    4. ' l' → logprob: -2.8543553352355957
    5. ' or' → logprob: -2.8543553352355957
    6. ' for' → logprob: -3.2293553352355957
    7. ',' → logprob: -3.3543553352355957
    8. ' =' → logprob: -3.4793553352355957
    9. ' desk' → logprob: -3.8543553352355957
    10. ' d' → logprob: -3.9793553352355957

Token 284: ' books' (ID: 7187)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.7540575265884399
    2. 'books' → logprob: -0.7540575265884399
    3. 'desk' → logprob: -3.8790574073791504
    4. 'students' → logprob: -4.75405740737915
    5. 'des' → logprob: -5.25405740737915
    6. 'b' → logprob: -5.62905740737915
    7. 'recent' → logprob: -5.62905740737915
    8. '(book' → logprob: -5.62905740737915
    9. 'the' → logprob: -6.25405740737915
    10. 'd' → logprob: -6.25405740737915

Token 285: ' in' (ID: 306)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0855646133422852
    2. 'on' → logprob: -1.3355646133422852
    3. '_d' → logprob: -2.585564613342285
    4. 'in' → logprob: -2.835564613342285
    5. ' for' → logprob: -3.585564613342285
    6. 'for' → logprob: -3.585564613342285
    7. ',' → logprob: -3.585564613342285
    8. ' in' → logprob: -3.585564613342285
    9. ' =' → logprob: -3.835564613342285
    10. '       ' → logprob: -4.460564613342285

Token 286: ' order' (ID: 2569)
  Prédit: 'desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'desk' → logprob: -0.5429247617721558
    2. 'order' → logprob: -1.1679247617721558
    3. 'des' → logprob: -2.9179248809814453
    4. ' desk' → logprob: -4.292924880981445
    5. ' desks' → logprob: -4.542924880981445
    6. 'd' → logprob: -5.042924880981445
    7. 'books' → logprob: -5.417924880981445
    8. 'book' → logprob: -5.792924880981445
    9. 'LR' → logprob: -5.792924880981445
    10. 'the' → logprob: -6.042924880981445

Token 287: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0129714012145996
    2. ',' → logprob: -1.6379714012145996
    3. 'desk' → logprob: -2.5129714012145996
    4. 'd' → logprob: -2.6379714012145996
    5. '[' → logprob: -3.1379714012145996
    6. ' of' → logprob: -3.3879714012145996
    7. '=' → logprob: -3.3879714012145996
    8. ' desk' → logprob: -3.7629714012145996
    9. '_d' → logprob: -3.8879714012145996
    10. '       ' → logprob: -4.2629714012146

Token 288: ' last' (ID: 2174)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'access' → logprob: -0.9195318222045898
    2. 'usage' → logprob: -1.0445318222045898
    3. 'use' → logprob: -1.9195318222045898
    4. ' usage' → logprob: -3.66953182220459
    5. 'most' → logprob: -4.16953182220459
    6. 'recent' → logprob: -4.41953182220459
    7. 'in' → logprob: -4.79453182220459
    8. ' access' → logprob: -4.91953182220459
    9. 'least' → logprob: -5.04453182220459
    10. 'last' → logprob: -5.04453182220459

Token 289: ' use' (ID: 1199)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.6545814871788025
    2. ' access' → logprob: -1.7795815467834473
    3. ' use' → logprob: -1.9045815467834473
    4. 'access' → logprob: -2.5295815467834473
    5. 'use' → logprob: -3.2795815467834473
    6. 'usage' → logprob: -3.7795815467834473
    7. 'used' → logprob: -4.404581546783447
    8. ' used' → logprob: -4.654581546783447
    9. ' accessed' → logprob: -8.029581069946289
    10. '_used' → logprob: -8.904581069946289

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34788191318511963
    2. '_d' → logprob: -2.72288179397583
    3. '[' → logprob: -3.47288179397583
    4. '<|end|>' → logprob: -3.72288179397583
    5. ' =' → logprob: -3.84788179397583
    6. ',
' → logprob: -3.97288179397583
    7. ':' → logprob: -4.09788179397583
    8. '   ' → logprob: -4.22288179397583
    9. '_' → logprob: -4.47288179397583
    10. '.' → logprob: -4.59788179397583

Token 291: ' MR' (ID: 50009)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3595390319824219
    2. 'with' → logprob: -1.7345390319824219
    3. ' with' → logprob: -2.609539031982422
    4. '[]' → logprob: -2.734539031982422
    5. '0' → logprob: -2.984539031982422
    6. 'from' → logprob: -3.109539031982422
    7. 'def' → logprob: -3.109539031982422
    8. '       ' → logprob: -3.234539031982422
    9. 'most' → logprob: -3.609539031982422
    10. ' or' → logprob: -3.859539031982422

Token 292: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -8.947715832618997e-05
    2. '#' → logprob: -11.000089645385742
    3. 'L' → logprob: -11.250089645385742
    4. ' U' → logprob: -11.250089645385742
    5. 'list' → logprob: -12.250089645385742
    6. 'u' → logprob: -12.562589645385742
    7. 'R' → logprob: -12.937589645385742
    8. '```' → logprob: -13.062589645385742
    9. '{' → logprob: -13.125089645385742
    10. 'use' → logprob: -13.187589645385742

Token 293: ' at' (ID: 540)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.921624481678009
    2. ' =' → logprob: -1.4216244220733643
    3. '<|end|>' → logprob: -1.7966244220733643
    4. ' at' → logprob: -3.4216244220733643
    5. '=' → logprob: -4.046624660491943
    6. 'to' → logprob: -4.171624660491943
    7. ' to' → logprob: -4.296624660491943
    8. ')' → logprob: -4.296624660491943
    9. 'first' → logprob: -4.421624660491943
    10. '>' → logprob: -4.421624660491943

Token 294: ' end' (ID: 1268)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.5349954962730408
    2. 'end' → logprob: -1.5349955558776855
    3. '0' → logprob: -1.9099955558776855
    4. 'the' → logprob: -3.4099955558776855
    5. ' front' → logprob: -4.9099955558776855
    6. 'index' → logprob: -5.2849955558776855
    7. ' end' → logprob: -6.0349955558776855
    8. 'begin' → logprob: -7.1599955558776855
    9. '[' → logprob: -7.4099955558776855
    10. ' the' → logprob: -7.5349955558776855

Token 295: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7327483892440796
    2. ',' → logprob: -1.6077483892440796
    3. 'd' → logprob: -2.607748508453369
    4. ' =' → logprob: -2.732748508453369
    5. '   ' → logprob: -3.107748508453369
    6. ',
' → logprob: -3.732748508453369
    7. 'books' → logprob: -4.357748508453369
    8. ':' → logprob: -4.482748508453369
    9. '_d' → logprob: -4.732748508453369
    10. '
' → logprob: -4.732748508453369

Token 296: ' L' (ID: 451)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' → logprob: -0.16572190821170807
    2. '#' → logprob: -2.040721893310547
    3. '       ' → logprob: -4.540721893310547
    4. '   ' → logprob: -5.665721893310547
    5. ' #' → logprob: -6.415721893310547
    6. ' L' → logprob: -6.790721893310547
    7. '0' → logprob: -7.165721893310547
    8. ' LR' → logprob: -7.415721893310547
    9. 'MR' → logprob: -7.790721893310547
    10. '
' → logprob: -8.165721893310547

Token 297: 'RU' (ID: 63252)
  Prédit: 'RU'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RU' → logprob: -0.004640522412955761
    2. 'R' → logprob: -5.379640579223633
    3. 'U' → logprob: -11.129640579223633
    4. 'FU' → logprob: -13.129640579223633
    5. 'RL' → logprob: -13.879640579223633
    6. '#' → logprob: -14.754640579223633
    7. ' R' → logprob: -14.754640579223633
    8. '<R' → logprob: -15.254640579223633
    9. 'ru' → logprob: -15.254640579223633
    10. ' RU' → logprob: -15.379640579223633

Token 298: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48202720284461975
    2. ' at' → logprob: -2.357027292251587
    3. '=' → logprob: -2.857027292251587
    4. ',' → logprob: -3.357027292251587
    5. '_' → logprob: -3.357027292251587
    6. '_list' → logprob: -3.357027292251587
    7. '<|end|>' → logprob: -3.857027292251587
    8. ')' → logprob: -3.982027292251587
    9. '=[]' → logprob: -4.107027053833008
    10. '.' → logprob: -4.482027053833008

Token 299: ' start' (ID: 1604)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.6644121408462524
    2. '0' → logprob: -1.4144121408462524
    3. 'start' → logprob: -1.6644121408462524
    4. 'begin' → logprob: -3.289412021636963
    5. 'index' → logprob: -4.289412021636963
    6. ' front' → logprob: -6.789412021636963
    7. '[' → logprob: -7.789412021636963
    8. ' ' → logprob: -8.164412498474121
    9. ' start' → logprob: -9.414412498474121
    10. 'position' → logprob: -9.914412498474121

Token 300: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19328247010707855
    2. 'd' → logprob: -2.44328236579895
    3. '   ' → logprob: -3.31828236579895
    4. 'l' → logprob: -3.44328236579895
    5. 'LR' → logprob: -4.693282604217529
    6. ',' → logprob: -6.193282604217529
    7. 'D' → logprob: -6.318282604217529
    8. '        
' → logprob: -6.568282604217529
    9. '
' → logprob: -6.568282604217529
    10. ' l' → logprob: -6.693282604217529

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23739255964756012
    2. '   ' → logprob: -1.612392544746399
    3. '<|end|>' → logprob: -4.862392425537109
    4. '    
' → logprob: -6.987392425537109
    5. '        
' → logprob: -6.987392425537109
    6. '    ' → logprob: -7.362392425537109
    7. '<|end|>' → logprob: -8.48739242553711
    8. '
' → logprob: -8.48739242553711
    9. ')' → logprob: -8.86239242553711
    10. 'd' → logprob: -8.98739242553711

Token 302: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3753341734409332
    2. 'd' → logprob: -1.5003341436386108
    3. 'D' → logprob: -3.3753342628479004
    4. ' l' → logprob: -4.2503342628479
    5. 'lr' → logprob: -4.5003342628479
    6. 'LR' → logprob: -4.8753342628479
    7. ' d' → logprob: -5.0003342628479
    8. '   ' → logprob: -5.2503342628479
    9. ' D' → logprob: -5.6253342628479
    10. 'L' → logprob: -6.2503342628479

Token 303: ' On' (ID: 2160)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.15189599990844727
    2. 'd' → logprob: -2.2768959999084473
    3. 'lr' → logprob: -4.401895999908447
    4. 'D' → logprob: -4.776895999908447
    5. ' l' → logprob: -4.776895999908447
    6. 'LR' → logprob: -6.276895999908447
    7. ' d' → logprob: -6.901895999908447
    8. '   ' → logprob: -7.026895999908447
    9. 'from' → logprob: -7.026895999908447
    10. ' D' → logprob: -7.026895999908447

Token 304: ' each' (ID: 2454)
  Prédit: ' desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' desk' → logprob: -0.8337717652320862
    2. ' access' → logprob: -1.9587717056274414
    3. 'access' → logprob: -2.4587717056274414
    4. ' each' → logprob: -2.9587717056274414
    5. ' the' → logprob: -3.5837717056274414
    6. 'book' → logprob: -3.8337717056274414
    7. 'each' → logprob: -3.8337717056274414
    8. ' use' → logprob: -3.9587717056274414
    9. ' usage' → logprob: -4.333771705627441
    10. ' =' → logprob: -4.583771705627441

Token 305: ' request' (ID: 2616)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'access' → logprob: -1.1611988544464111
    2. ' access' → logprob: -1.4111988544464111
    3. ' request' → logprob: -1.7861988544464111
    4. 'request' → logprob: -2.036198854446411
    5. 'use' → logprob: -3.036198854446411
    6. 'book' → logprob: -3.411198854446411
    7. ' use' → logprob: -3.411198854446411
    8. ' book' → logprob: -4.286198616027832
    9. ' student' → logprob: -5.661198616027832
    10. ' line' → logprob: -5.786198616027832

Token 306: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44142213463783264
    2. '<|end|>' → logprob: -1.0664221048355103
    3. '<|end|>' → logprob: -4.941421985626221
    4. '   ' → logprob: -6.316421985626221
    5. ')' → logprob: -6.941421985626221
    6. '    ' → logprob: -7.191421985626221
    7. ' ,' → logprob: -7.441421985626221
    8. 's' → logprob: -8.566422462463379
    9. ',
' → logprob: -8.941422462463379
    10. 'token' → logprob: -9.316422462463379

Token 307: ' a' (ID: 261)
  Prédit: ' desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' desk' → logprob: -0.26552295684814453
    2. 'desk' → logprob: -2.5155229568481445
    3. 'book' → logprob: -2.6405229568481445
    4. 'a' → logprob: -3.8905229568481445
    5. ' a' → logprob: -3.8905229568481445
    6. ' D' → logprob: -4.2655229568481445
    7. ' book' → logprob: -4.3905229568481445
    8. 'D' → logprob: -4.5155229568481445
    9. 'the' → logprob: -7.3905229568481445
    10. 'books' → logprob: -7.3905229568481445

Token 308: ' book' (ID: 2392)
  Prédit: ' book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' book' → logprob: -0.16334375739097595
    2. 'book' → logprob: -2.663343667984009
    3. ' desk' → logprob: -2.663343667984009
    4. 'token' → logprob: -5.913343906402588
    5. 'space' → logprob: -6.038343906402588
    6. 'b' → logprob: -6.288343906402588
    7. 'desk' → logprob: -6.413343906402588
    8. ' token' → logprob: -7.288343906402588
    9. ' space' → logprob: -7.913343906402588
    10. 'n' → logprob: -8.03834342956543

Token 309: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03737451508641243
    2. ':' → logprob: -4.162374496459961
    3. '   ' → logprob: -4.412374496459961
    4. 'def' → logprob: -5.912374496459961
    5. ' ,' → logprob: -6.162374496459961
    6. ' for' → logprob: -7.287374496459961
    7. '<|end|>' → logprob: -7.412374496459961
    8. '       ' → logprob: -7.662374496459961
    9. ' in' → logprob: -7.787374496459961
    10. ')' → logprob: -7.912374496459961

Token 310: ' D' (ID: 415)
  Prédit: ' desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' desk' → logprob: -0.5884719491004944
    2. 'desk' → logprob: -1.3384718894958496
    3. 'D' → logprob: -1.9634718894958496
    4. ' D' → logprob: -3.5884718894958496
    5. 'the' → logprob: -5.58847188949585
    6. 's' → logprob: -5.58847188949585
    7. '0' → logprob: -6.08847188949585
    8. 'd' → logprob: -6.46347188949585
    9. ' the' → logprob: -7.33847188949585
    10. '[' → logprob: -7.46347188949585

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18027940392494202
    2. '0' → logprob: -1.8052793741226196
    3. '_' → logprob: -8.555279731750488
    4. 'esk' → logprob: -9.180279731750488
    5. ' ' → logprob: -9.305279731750488
    6. '[' → logprob: -9.305279731750488
    7. 'es' → logprob: -11.305279731750488
    8. 'e' → logprob: -11.305279731750488
    9. '   ' → logprob: -11.930279731750488
    10. '#' → logprob: -12.367779731750488

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03236129507422447
    2. ':' → logprob: -4.2823615074157715
    3. '   ' → logprob: -4.7823615074157715
    4. ' ,' → logprob: -5.2823615074157715
    5. ',
' → logprob: -6.7823615074157715
    6. ')' → logprob: -7.0323615074157715
    7. '):' → logprob: -8.032361030578613
    8. 'def' → logprob: -8.157361030578613
    9. '       ' → logprob: -8.407361030578613
    10. '[' → logprob: -8.407361030578613

Token 313: ' update' (ID: 4027)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6156779527664185
    2. 'book' → logprob: -2.365677833557129
    3. ' if' → logprob: -2.740677833557129
    4. '#' → logprob: -2.865677833557129
    5. '           ' → logprob: -3.115677833557129
    6. '   ' → logprob: -3.115677833557129
    7. ' pass' → logprob: -3.365677833557129
    8. 'pass' → logprob: -4.115677833557129
    9. ' book' → logprob: -4.240677833557129
    10. 'if' → logprob: -4.365677833557129

Token 314: ' L' (ID: 451)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5672334432601929
    2. ' l' → logprob: -1.0672334432601929
    3. '   ' → logprob: -4.192233562469482
    4. 'd' → logprob: -4.317233562469482
    5. 'book' → logprob: -4.442233562469482
    6. ' the' → logprob: -4.942233562469482
    7. 'last' → logprob: -4.942233562469482
    8. 'm' → logprob: -5.067233562469482
    9. 'LR' → logprob: -5.317233562469482
    10. ' d' → logprob: -5.442233562469482

Token 315: 'RU' (ID: 63252)
  Prédit: 'RU'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RU' → logprob: -0.24105948209762573
    2. 'R' → logprob: -1.6160595417022705
    3. 'ru' → logprob: -4.741059303283691
    4. 'r' → logprob: -6.116059303283691
    5. 'ast' → logprob: -6.241059303283691
    6. ' R' → logprob: -6.866059303283691
    7. '```' → logprob: -8.303559303283691
    8. '_r' → logprob: -8.991059303283691
    9. '_R' → logprob: -9.241059303283691
    10. 'ist' → logprob: -9.491059303283691

Token 316: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6587521433830261
    2. '
' → logprob: -1.533752202987671
    3. '       ' → logprob: -2.033752202987671
    4. '    
' → logprob: -3.908752202987671
    5. '_' → logprob: -4.158751964569092
    6. '_d' → logprob: -4.283751964569092
    7. '_book' → logprob: -4.408751964569092
    8. '_list' → logprob: -4.783751964569092
    9. ' =' → logprob: -5.033751964569092
    10. '_books' → logprob: -5.158751964569092

Token 317: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.7030625939369202
    2. 'move' → logprob: -0.7030625939369202
    3. 'remove' → logprob: -5.453062534332275
    4. 'put' → logprob: -6.703062534332275
    5. ' remove' → logprob: -6.953062534332275
    6. ' bring' → logprob: -7.328062534332275
    7. 'end' → logprob: -7.453062534332275
    8. 'm' → logprob: -8.203063011169434
    9. ' ' → logprob: -8.203063011169434
    10. 'book' → logprob: -8.328063011169434

Token 318: ' it' (ID: 480)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.40511032938957214
    2. ' that' → logprob: -1.1551103591918945
    3. 'the' → logprob: -4.2801103591918945
    4. 'book' → logprob: -5.9051103591918945
    5. ' the' → logprob: -7.2801103591918945
    6. 'it' → logprob: -7.7801103591918945
    7. ' it' → logprob: -8.655110359191895
    8. ' book' → logprob: -8.905110359191895
    9. '_that' → logprob: -9.530110359191895
    10. '(book' → logprob: -11.905110359191895

Token 319: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.7958016991615295
    2. ' to' → logprob: -1.2958016395568848
    3. '_to' → logprob: -2.0458016395568848
    4. ',' → logprob: -3.0458016395568848
    5. '_book' → logprob: -3.6708016395568848
    6. 'book' → logprob: -4.420801639556885
    7. 'def' → logprob: -5.045801639556885
    8. ')' → logprob: -5.045801639556885
    9. ' ' → logprob: -5.420801639556885
    10. '_end' → logprob: -5.545801639556885

Token 320: ' MR' (ID: 50009)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.20557434856891632
    2. 'end' → logprob: -1.9555743932724
    3. ' the' → logprob: -3.2055742740631104
    4. ' end' → logprob: -5.5805745124816895
    5. '-' → logprob: -11.205574035644531
    6. '-end' → logprob: -12.330574035644531
    7. ' ' → logprob: -12.330574035644531
    8. '   ' → logprob: -12.705574035644531
    9. ' -' → logprob: -13.580574035644531
    10. 'last' → logprob: -14.080574035644531

Token 321: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -3.5358694731257856e-05
    2. 'end' → logprob: -11.000035285949707
    3. 'End' → logprob: -12.375035285949707
    4. '   ' → logprob: -12.625035285949707
    5. ' end' → logprob: -13.125035285949707
    6. 'u' → logprob: -13.750035285949707
    7. 'E' → logprob: -13.750035285949707
    8. '[end' → logprob: -13.875035285949707
    9. '       ' → logprob: -14.000035285949707
    10. '
' → logprob: -14.250035285949707

Token 322: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7112419009208679
    2. '       ' → logprob: -0.9612419009208679
    3. '<|end|>' → logprob: -2.7112419605255127
    4. '
' → logprob: -4.211241722106934
    5. '        
' → logprob: -4.211241722106934
    6. '    
' → logprob: -4.586241722106934
    7. '<|end|>' → logprob: -5.211241722106934
    8. 'def' → logprob: -5.336241722106934
    9. ':' → logprob: -6.461241722106934
    10. ' ' → logprob: -6.711241722106934

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2991503179073334
    2. '<|end|>' → logprob: -1.5491503477096558
    3. '   ' → logprob: -3.924150228500366
    4. '
' → logprob: -4.299150466918945
    5. '<|end|>' → logprob: -5.049150466918945
    6. '        
' → logprob: -5.299150466918945
    7. '    
' → logprob: -7.424150466918945
    8. '    ' → logprob: -9.049150466918945
    9. '        ' → logprob: -9.549150466918945
    10. '           ' → logprob: -9.799150466918945

Token 324: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04460511729121208
    2. '   ' → logprob: -3.919605016708374
    3. '<|end|>' → logprob: -3.919605016708374
    4. '        
' → logprob: -5.919605255126953
    5. '<|end|>' → logprob: -8.169605255126953
    6. '    
' → logprob: -8.294605255126953
    7. '
' → logprob: -9.294605255126953
    8. 'next' → logprob: -9.294605255126953
    9. '    ' → logprob: -9.794605255126953
    10. 'def' → logprob: -9.794605255126953

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.037464190274477005
    2. 'es' → logprob: -4.162464141845703
    3. 'esk' → logprob: -4.912464141845703
    4. '_' → logprob: -5.037464141845703
    5. 'e' → logprob: -5.037464141845703
    6. 'r' → logprob: -7.912464141845703
    7. '_r' → logprob: -9.787464141845703
    8. 'q' → logprob: -10.162464141845703
    9. '[' → logprob: -10.162464141845703
    10. 'l' → logprob: -10.287464141845703

Token 326: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.13515959680080414
    2. '_books' → logprob: -2.260159492492676
    3. '_L' → logprob: -4.260159492492676
    4. '_order' → logprob: -5.760159492492676
    5. '_usage' → logprob: -6.260159492492676
    6. '_lr' → logprob: -7.010159492492676
    7. '_queue' → logprob: -7.760159492492676
    8. '_list' → logprob: -7.885159492492676
    9. '_cache' → logprob: -8.010159492492676
    10. '_d' → logprob: -8.885159492492676

Token 327: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.009946145117282867
    2. 'r' → logprob: -4.759946346282959
    3. 'ist' → logprob: -7.259946346282959
    4. 'RU' → logprob: -8.0099458694458
    5. '_r' → logprob: -9.3849458694458
    6. '
' → logprob: -10.8849458694458
    7. '_ru' → logprob: -10.8849458694458
    8. 'ruk' → logprob: -11.0099458694458
    9. 'run' → logprob: -11.6349458694458
    10. 'ast' → logprob: -11.6349458694458

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283966153860092
    2. '=' → logprob: -2.237839698791504
    3. '=[]' → logprob: -12.112839698791504
    4. ' ' → logprob: -12.362839698791504
    5. '_' → logprob: -13.237839698791504
    6. '_list' → logprob: -13.862839698791504
    7. ')' → logprob: -14.112839698791504
    8. '   ' → logprob: -14.112839698791504
    9. '=list' → logprob: -14.612839698791504
    10. '_books' → logprob: -14.612839698791504

Token 329: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.03807041049003601
    2. '[]' → logprob: -3.2880704402923584
    3. ' deque' → logprob: -11.663070678710938
    4. ' []' → logprob: -11.913070678710938
    5. 'de' → logprob: -12.538070678710938
    6. 'Deque' → logprob: -12.663070678710938
    7. 'collections' → logprob: -12.913070678710938
    8. '[]}' → logprob: -13.163070678710938
    9. 'list' → logprob: -13.413070678710938
    10. '[]>' → logprob: -14.663070678710938

Token 330: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014847563579678535
    2. '([]' → logprob: -8.87514877319336
    3. '()
' → logprob: -12.37514877319336
    4. '[]' → logprob: -12.87514877319336
    5. '()]' → logprob: -14.37514877319336
    6. '(' → logprob: -15.25014877319336
    7. ' ()' → logprob: -15.37514877319336
    8. '()

' → logprob: -15.50014877319336
    9. '(),' → logprob: -16.50014877319336
    10. '()}' → logprob: -16.62514877319336

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05905088037252426
    2. '   ' → logprob: -3.4340507984161377
    3. '<|end|>' → logprob: -4.059051036834717
    4. '        
' → logprob: -6.434051036834717
    5. ' for' → logprob: -6.559051036834717
    6. '<|end|>' → logprob: -7.059051036834717
    7. '    
' → logprob: -7.184051036834717
    8. ')' → logprob: -7.434051036834717
    9. 'def' → logprob: -7.559051036834717
    10. 'for' → logprob: -7.934051036834717

Token 332: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33370333909988403
    2. ' for' → logprob: -1.9587032794952393
    3. 'for' → logprob: -2.5837032794952393
    4. '   ' → logprob: -2.8337032794952393
    5. 'while' → logprob: -6.333703517913818
    6. ' while' → logprob: -6.583703517913818
    7. '    ' → logprob: -6.708703517913818
    8. '        ' → logprob: -7.458703517913818
    9. '<|end|>' → logprob: -7.583703517913818
    10. 'token' → logprob: -7.708703517913818

Token 333: ' Queue' (ID: 35581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01817721500992775
    2. '       ' → logprob: -4.643177032470703
    3. ' for' → logprob: -6.143177032470703
    4. 'request' → logprob: -6.643177032470703
    5. 'requests' → logprob: -6.768177032470703
    6. 'book' → logprob: -7.268177032470703
    7. 'next' → logprob: -7.518177032470703
    8. '#' → logprob: -7.518177032470703
    9. 'requested' → logprob: -7.768177032470703
    10. 'books' → logprob: -7.893177032470703

Token 334: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07043540477752686
    2. '=' → logprob: -2.6954355239868164
    3. '<|end|>' → logprob: -8.945435523986816
    4. '<|end|>' → logprob: -9.445435523986816
    5. '=[]' → logprob: -9.570435523986816
    6. '_queue' → logprob: -10.195435523986816
    7. 'students' → logprob: -10.320435523986816
    8. 'queue' → logprob: -10.445435523986816
    9. '(queue' → logprob: -10.945435523986816
    10. 's' → logprob: -10.945435523986816

Token 335: ' students' (ID: 4501)
  Prédit: 'students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'students' → logprob: -0.03647308051586151
    2. ' students' → logprob: -4.036473274230957
    3. 'requests' → logprob: -4.786473274230957
    4. 'student' → logprob: -5.286473274230957
    5. 'books' → logprob: -6.536473274230957
    6. 'deque' → logprob: -7.911473274230957
    7. '(student' → logprob: -8.036473274230957
    8. 'requested' → logprob: -8.286473274230957
    9. '(st' → logprob: -8.536473274230957
    10. '(de' → logprob: -8.661473274230957

Token 336: ' indexes' (ID: 50739)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03936219960451126
    2. '=' → logprob: -3.2893621921539307
    3. '_queue' → logprob: -6.78936243057251
    4. 'queue' → logprob: -10.039361953735352
    5. 'q' → logprob: -10.414361953735352
    6. '=[]' → logprob: -10.914361953735352
    7. '<|end|>' → logprob: -11.289361953735352
    8. '       ' → logprob: -11.539361953735352
    9. '(queue' → logprob: -11.539361953735352
    10. 'students' → logprob: -11.664361953735352

Token 337: ' who' (ID: 1218)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06305336952209473
    2. '=' → logprob: -2.8130533695220947
    3. 'students' → logprob: -7.938053131103516
    4. ' students' → logprob: -8.563053131103516
    5. ',' → logprob: -9.563053131103516
    6. 'queue' → logprob: -9.813053131103516
    7. '(queue' → logprob: -9.938053131103516
    8. 'q' → logprob: -10.188053131103516
    9. '[]' → logprob: -10.188053131103516
    10. 'deque' → logprob: -10.188053131103516

Token 338: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.704143762588501
    2. ' have' → logprob: -0.829143762588501
    3. ' still' → logprob: -3.079143762588501
    4. ' are' → logprob: -4.829143524169922
    5. 'need' → logprob: -5.579143524169922
    6. 'still' → logprob: -5.704143524169922
    7. 'are' → logprob: -6.204143524169922
    8. ' need' → logprob: -6.454143524169922
    9. 'requested' → logprob: -7.329143524169922
    10. ' want' → logprob: -7.579143524169922

Token 339: ' outstanding' (ID: 19984)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.5405276417732239
    2. 'pending' → logprob: -2.415527582168579
    3. 'requests' → logprob: -2.540527582168579
    4. ' at' → logprob: -2.790527582168579
    5. ' books' → logprob: -3.290527582168579
    6. 'at' → logprob: -3.415527582168579
    7. 'non' → logprob: -3.540527582168579
    8. 'deque' → logprob: -4.290527820587158
    9. 'more' → logprob: -4.540527820587158
    10. 'not' → logprob: -4.540527820587158

Token 340: ' requests' (ID: 13782)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requests' → logprob: -0.09829527139663696
    2. ' requests' → logprob: -2.473295211791992
    3. 'books' → logprob: -5.098295211791992
    4. '_requests' → logprob: -7.473295211791992
    5. 'request' → logprob: -7.848295211791992
    6. 'book' → logprob: -7.973295211791992
    7. ')' → logprob: -8.098295211791992
    8. 'deque' → logprob: -8.223295211791992
    9. 'indexes' → logprob: -8.473295211791992
    10. 'tokens' → logprob: -8.473295211791992

Token 341: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005416604224592447
    2. '=' → logprob: -5.255416393280029
    3. '_queue' → logprob: -10.005416870117188
    4. ' ' → logprob: -10.505416870117188
    5. ',' → logprob: -11.130416870117188
    6. ':' → logprob: -11.630416870117188
    7. ' for' → logprob: -11.630416870117188
    8. 'queue' → logprob: -11.630416870117188
    9. '  ' → logprob: -11.755416870117188
    10. 'students' → logprob: -11.880416870117188

Token 342: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012905600480735302
    2. '=' → logprob: -4.887905597686768
    3. '       ' → logprob: -5.387905597686768
    4. '_queue' → logprob: -8.887906074523926
    5. 'queue' → logprob: -8.887906074523926
    6. ':' → logprob: -9.637906074523926
    7. ',' → logprob: -9.887906074523926
    8. '   ' → logprob: -10.262906074523926
    9. '(queue' → logprob: -10.512906074523926
    10. ' queue' → logprob: -10.512906074523926

Token 343: ' queue' (ID: 13661)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.21306343376636505
    2. ' deque' → logprob: -2.8380634784698486
    3. ' student' → logprob: -3.3380634784698486
    4. 'student' → logprob: -3.7130634784698486
    5. 'students' → logprob: -3.9630634784698486
    6. 'queue' (adapté à ' queue') → logprob: -3.9630634784698486
    7. ' queue' → logprob: -4.4630632400512695
    8. 'dq' → logprob: -4.5880632400512695
    9. ' students' → logprob: -5.3380632400512695
    10. 'q' → logprob: -5.4630632400512695

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022219270467758
    2. '=' → logprob: -2.350222110748291
    3. '=[]' → logprob: -11.47522258758545
    4. '<|end|>' → logprob: -13.22522258758545
    5. ' ' → logprob: -13.85022258758545
    6. '.append' → logprob: -14.60022258758545
    7. '.' → logprob: -15.22522258758545
    8. '	' → logprob: -15.35022258758545
    9. '<|end|>' → logprob: -15.85022258758545
    10. ':' → logprob: -15.97522258758545

Token 345: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0002036595979006961
    2. ' deque' → logprob: -8.500204086303711
    3. 'de' → logprob: -16.62520408630371
    4. 'list' → logprob: -17.37520408630371
    5. 'Deque' → logprob: -17.87520408630371
    6. '```' → logprob: -19.37520408630371
    7. '[' → logprob: -19.62520408630371
    8. '(de' → logprob: -20.00020408630371
    9. '   ' → logprob: -20.75020408630371
    10. 'queue' → logprob: -20.87520408630371

Token 346: '(i' (ID: 3649)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.002820920431986451
    2. '()' → logprob: -6.00282096862793
    3. '([' → logprob: -8.37782096862793
    4. '(list' → logprob: -9.75282096862793
    5. '(' → logprob: -10.12782096862793
    6. 'range' → logprob: -11.87782096862793
    7. '()
' → logprob: -12.37782096862793
    8. '(i' → logprob: -13.50282096862793
    9. '((' → logprob: -13.87782096862793
    10. '(student' → logprob: -14.37782096862793

Token 347: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05703290179371834
    2. 'for' → logprob: -2.932032823562622
    3. 'range' → logprob: -7.057033061981201
    4. '()' → logprob: -7.682033061981201
    5. ')' → logprob: -7.807033061981201
    6. '(range' → logprob: -9.432032585144043
    7. ' ' → logprob: -9.557032585144043
    8. 'n' → logprob: -9.557032585144043
    9. ' range' → logprob: -10.432032585144043
    10. 'x' → logprob: -10.557032585144043

Token 348: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16023966670036316
    2. 'range' → logprob: -1.9102396965026855
    3. ' in' → logprob: -11.535239219665527
    4. 'i' → logprob: -12.910239219665527
    5. ' i' → logprob: -13.410239219665527
    6. 'in' → logprob: -13.910239219665527
    7. '(range' → logprob: -14.785239219665527
    8. '_range' → logprob: -15.785239219665527
    9. '	range' → logprob: -16.035240173339844
    10. '_' → logprob: -16.410240173339844

Token 349: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10024290531873703
    2. 'in' → logprob: -2.350242853164673
    3. 'n' → logprob: -10.600242614746094
    4. ',' → logprob: -12.350242614746094
    5. 'range' → logprob: -12.350242614746094
    6. ' range' → logprob: -13.600242614746094
    7. ' ' → logprob: -14.475242614746094
    8. 's' → logprob: -15.350242614746094
    9. ')' → logprob: -15.600242614746094
    10. '_' → logprob: -16.225242614746094

Token 350: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024756586644798517
    2. ' range' → logprob: -6.002475738525391
    3. '	range' → logprob: -20.12747573852539
    4. '(range' → logprob: -20.62747573852539
    5. '   ' → logprob: -22.25247573852539
    6. ' ' → logprob: -22.62747573852539
    7. ')' → logprob: -22.75247573852539
    8. '  ' → logprob: -23.50247573852539
    9. 'n' → logprob: -23.62747573852539
    10. 'Range' → logprob: -24.00247573852539

Token 351: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.030283547937870026
    2. 'n' → logprob: -3.5302834510803223
    3. '(len' → logprob: -7.905283451080322
    4. 'len' → logprob: -8.90528392791748
    5. ')n' → logprob: -11.28028392791748
    6. ' n' → logprob: -11.65528392791748
    7. ' (' → logprob: -12.78028392791748
    8. ')' → logprob: -13.28028392791748
    9. '(' → logprob: -13.28028392791748
    10. '	n' → logprob: -15.65528392791748

Token 352: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2826831638813019
    2. '))' → logprob: -1.4076831340789795
    3. ' if' → logprob: -6.532683372497559
    4. 'if' → logprob: -10.657683372497559
    5. '))
' → logprob: -11.032683372497559
    6. ' )' → logprob: -11.282683372497559
    7. ')
' → logprob: -11.407683372497559
    8. ' ))' → logprob: -12.157683372497559
    9. ')))' → logprob: -12.657683372497559
    10. '),' → logprob: -14.032683372497559

Token 353: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016957100888248533
    2. '       ' → logprob: -9.50016975402832
    3. ' if' → logprob: -10.00016975402832
    4. ' )' → logprob: -10.25016975402832
    5. ')
' → logprob: -11.62516975402832
    6. '))' → logprob: -13.12516975402832
    7. '())' → logprob: -14.37516975402832
    8. 'if' → logprob: -14.50016975402832
    9. '<|end|>' → logprob: -14.62516975402832
    10. '   ' → logprob: -14.87516975402832

Token 354: ' students' (ID: 4501)
  Prédit: 'students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'students' → logprob: -0.18189935386180878
    2. 'len' → logprob: -1.8068993091583252
    3. ' students' → logprob: -6.431899547576904
    4. ' len' → logprob: -7.556899547576904
    5. 'st' → logprob: -12.181899070739746
    6. 'bool' → logprob: -12.306899070739746
    7. '(len' → logprob: -13.056899070739746
    8. '   ' → logprob: -13.306899070739746
    9. ' ' → logprob: -13.931899070739746
    10. '  ' → logprob: -14.306899070739746

Token 355: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.25
    3. 'i' → logprob: -18.125
    4. '(i' → logprob: -20.5
    5. ' [' → logprob: -20.625
    6. '[j' → logprob: -21.0
    7. '{i' → logprob: -21.0
    8. '\[' → logprob: -21.0
    9. ')' → logprob: -21.5
    10. '[I' → logprob: -21.5

Token 356: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1290365606546402
    2. ')' → logprob: -2.1290366649627686
    3. ']' → logprob: -6.5040364265441895
    4. '[' → logprob: -8.879036903381348
    5. ')]' → logprob: -9.004036903381348
    6. '])]' → logprob: -9.504036903381348
    7. ' and' → logprob: -9.754036903381348
    8. ')])' → logprob: -9.879036903381348
    9. '.' → logprob: -10.754036903381348
    10. ']])' → logprob: -11.004036903381348

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20809060335159302
    2. '   ' → logprob: -2.4580905437469482
    3. ')' → logprob: -3.4580905437469482
    4. '        
' → logprob: -3.7080905437469482
    5. '<|end|>' → logprob: -3.8330905437469482
    6. '    
' → logprob: -4.958090782165527
    7. 'while' → logprob: -5.833090782165527
    8. ' while' → logprob: -6.083090782165527
    9. '  
' → logprob: -6.208090782165527
    10. '<|end|>' → logprob: -6.583090782165527

Token 358: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3105466067790985
    2. 'while' → logprob: -1.560546636581421
    3. ' while' → logprob: -3.435546636581421
    4. '   ' → logprob: -3.810546636581421
    5. '        
' → logprob: -7.185546398162842
    6. '    ' → logprob: -7.685546398162842
    7. '	while' → logprob: -8.060546875
    8. '    
' → logprob: -8.685546875
    9. 'book' → logprob: -8.935546875
    10. ')' → logprob: -9.060546875

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003316980553790927
    2. '=' → logprob: -5.753316879272461
    3. ' +=' → logprob: -9.003316879272461
    4. ' ' → logprob: -11.503316879272461
    5. '_' → logprob: -13.628316879272461
    6. '  ' → logprob: -13.753316879272461
    7. ')' → logprob: -14.378316879272461
    8. 's' → logprob: -14.503316879272461
    9. ',' → logprob: -14.878316879272461
    10. '	' → logprob: -15.128316879272461

Token 360: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02057598903775215
    2. ' ' → logprob: -3.895576000213623
    3. 'total' → logprob: -10.645575523376465
    4. ' total' → logprob: -12.020575523376465
    5. '   ' → logprob: -12.770575523376465
    6. ' ' → logprob: -14.020575523376465
    7. '  ' → logprob: -15.833075523376465
    8. '1' → logprob: -16.14557647705078
    9. '(' → logprob: -17.14557647705078
    10. '       ' → logprob: -17.27057647705078

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. 'total' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.25000286102295
    4. '100' → logprob: -17.625001907348633
    5. '000' → logprob: -18.250001907348633
    6. '1' → logprob: -18.875001907348633
    7. 'sum' → logprob: -19.062501907348633
    8. '200' → logprob: -19.062501907348633
    9. 'len' → logprob: -19.375001907348633
    10. 'int' → logprob: -19.375001907348633

Token 362: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2869168519973755
    2. '
' → logprob: -1.9119168519973755
    3. '<|end|>' → logprob: -3.286916732788086
    4. '   ' → logprob: -3.411916732788086
    5. ' while' → logprob: -4.911916732788086
    6. '        
' → logprob: -5.286916732788086
    7. 'while' → logprob: -5.286916732788086
    8. '    
' → logprob: -5.411916732788086
    9. '<|end|>' → logprob: -5.536916732788086
    10. ' 
' → logprob: -6.411916732788086

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4157572388648987
    2. '    
' → logprob: -2.040757179260254
    3. '        
' → logprob: -2.540757179260254
    4. '   ' → logprob: -2.665757179260254
    5. '
' → logprob: -4.040757179260254
    6. ' 
' → logprob: -4.165757179260254
    7. '  
' → logprob: -4.790757179260254
    8. '<|end|>' → logprob: -5.165757179260254
    9. '\n' → logprob: -6.165757179260254
    10. '```' → logprob: -6.415757179260254

Token 364: ' def' (ID: 1056)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8065866827964783
    2. 'while' → logprob: -1.181586742401123
    3. '       ' → logprob: -1.431586742401123
    4. '   ' → logprob: -5.431586742401123
    5. 'for' → logprob: -6.556586742401123
    6. ' for' → logprob: -6.681586742401123
    7. 'book' → logprob: -8.306586265563965
    8. '	while' → logprob: -9.056586265563965
    9. '    ' → logprob: -9.181586265563965
    10. '        ' → logprob: -9.681586265563965

Token 365: ' access' (ID: 3158)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.3755725622177124
    2. ' process' → logprob: -1.6255725622177124
    3. 'request' → logprob: -3.250572681427002
    4. 'get' → logprob: -4.125572681427002
    5. ' request' → logprob: -4.500572681427002
    6. ' get' → logprob: -4.500572681427002
    7. 'access' → logprob: -4.750572681427002
    8. 'update' → logprob: -5.000572681427002
    9. 'use' → logprob: -5.250572681427002
    10. ' access' → logprob: -5.750572681427002

Token 366: '_d' (ID: 1565)
  Prédit: '(book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(book' → logprob: -0.28659486770629883
    2. '(' → logprob: -1.5365948677062988
    3. ' (' → logprob: -4.036594867706299
    4. '_book' → logprob: -4.536594867706299
    5. '_' → logprob: -6.036594867706299
    6. '(token' → logprob: -7.036594867706299
    7. '(_' → logprob: -7.536594867706299
    8. '):' → logprob: -7.536594867706299
    9. '():' → logprob: -8.03659439086914
    10. '_token' → logprob: -8.28659439086914

Token 367: 'esk' (ID: 22444)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012218352407217026
    2. 'esk' → logprob: -4.512218475341797
    3. 'e' → logprob: -7.387218475341797
    4. 'es' → logprob: -7.637218475341797
    5. '_' → logprob: -10.387218475341797
    6. '```' → logprob: -11.637218475341797
    7. 'book' → logprob: -12.512218475341797
    8. 'desk' → logprob: -12.762218475341797
    9. '   ' → logprob: -12.887218475341797
    10. '
' → logprob: -13.137218475341797

Token 368: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17906631529331207
    2. '(d' → logprob: -2.1790664196014404
    3. '0' → logprob: -3.3040664196014404
    4. '(book' → logprob: -4.679066181182861
    5. ' (' → logprob: -6.804066181182861
    6. '():' → logprob: -7.179066181182861
    7. '_' → logprob: -7.304066181182861
    8. '1' → logprob: -7.804066181182861
    9. '(des' → logprob: -7.929066181182861
    10. '[' → logprob: -8.55406665802002

Token 369: '):
' (ID: 1883)
  Prédit: 'esk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.5303398966789246
    2. ')' → logprob: -1.5303399562835693
    3. '_' → logprob: -1.9053399562835693
    4. '0' → logprob: -4.53033971786499
    5. '1' → logprob: -4.78033971786499
    6. '):' → logprob: -4.90533971786499
    7. 'sk' → logprob: -5.03033971786499
    8. ')_' → logprob: -5.65533971786499
    9. 'es' → logprob: -5.90533971786499
    10. '_)' → logprob: -6.53033971786499

Token 370: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.041317231953144073
    2. '():' → logprob: -3.7913172245025635
    3. ':
' → logprob: -4.666317462921143
    4. '   ' → logprob: -5.541317462921143
    5. '       ' → logprob: -6.416317462921143
    6. ' :' → logprob: -7.416317462921143
    7. '(' → logprob: -7.541317462921143
    8. '):' → logprob: -7.666317462921143
    9. '():
' → logprob: -8.041316986083984
    10. '<|end|>' → logprob: -8.166316986083984

Token 371: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7444709539413452
    2. '       ' → logprob: -0.7444709539413452
    3. '<|end|>' → logprob: -3.6194710731506348
    4. ' pass' → logprob: -4.369471073150635
    5. '    ' → logprob: -5.869471073150635
    6. 'pass' → logprob: -6.494471073150635
    7. '    
' → logprob: -7.244471073150635
    8. '           ' → logprob: -7.369471073150635
    9. ' if' → logprob: -7.619471073150635
    10. '	pass' → logprob: -7.744471073150635

Token 372: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.261189341545105
    2. '   ' → logprob: -1.761189341545105
    3. ' pass' → logprob: -1.886189341545105
    4. ' if' → logprob: -2.0111894607543945
    5. 'if' → logprob: -2.1361894607543945
    6. 'pass' → logprob: -2.5111894607543945
    7. 'd' → logprob: -4.2611894607543945
    8. 'for' → logprob: -4.5111894607543945
    9. ' for' → logprob: -5.1361894607543945
    10. '           ' → logprob: -5.2611894607543945

Token 373: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1249273344874382
    2. '+=' → logprob: -2.249927282333374
    3. '+' → logprob: -5.624927520751953
    4. '=' → logprob: -5.999927520751953
    5. ' =' → logprob: -6.124927520751953
    6. '   ' → logprob: -6.749927520751953
    7. ' ' → logprob: -7.249927520751953
    8. ' +' → logprob: -7.499927520751953
    9. ')' → logprob: -8.749927520751953
    10. '
' → logprob: -8.874927520751953

Token 374: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.434931755065918
    2. '1' → logprob: -1.434931755065918
    3. 'c' → logprob: -1.809931755065918
    4. ' ' → logprob: -2.059931755065918
    5. ' c' → logprob: -2.059931755065918
    6. 'len' → logprob: -3.309931755065918
    7. ' len' → logprob: -3.934931755065918
    8. 'cost' → logprob: -4.809931755065918
    9. '           ' → logprob: -5.184931755065918
    10. '2' → logprob: -5.184931755065918

Token 375: '+' (ID: 10)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006039070431143045
    2. ' ' → logprob: -7.750603675842285
    3. '2' → logprob: -9.750603675842285
    4. '   ' → logprob: -10.375603675842285
    5. '
' → logprob: -10.500603675842285
    6. 'd' → logprob: -11.375603675842285
    7. '"' → logprob: -11.500603675842285
    8. '+' → logprob: -11.625603675842285
    9. ' +' → logprob: -12.375603675842285
    10. '(' → logprob: -12.500603675842285

Token 377: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.574120283126831
    2. ')' → logprob: -1.449120283126831
    3. '+' → logprob: -2.699120283126831
    4. ' +' → logprob: -3.574120283126831
    5. '   ' → logprob: -3.949120283126831
    6. '<|end|>' → logprob: -4.44912052154541
    7. '*' → logprob: -4.69912052154541
    8. ',' → logprob: -4.82412052154541
    9. '**' → logprob: -4.94912052154541
    10. ' ' → logprob: -5.07412052154541

Token 378: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6347059011459351
    2. ')' → logprob: -1.509705901145935
    3. '<|end|>' → logprob: -2.1347060203552246
    4. ':' → logprob: -2.5097060203552246
    5. '       ' → logprob: -4.509706020355225
    6. '   ' → logprob: -4.509706020355225
    7. '\n' → logprob: -5.259706020355225
    8. ':
' → logprob: -5.384706020355225
    9. ':return' → logprob: -5.384706020355225
    10. '<|end|>' → logprob: -5.509706020355225

Token 379: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8158025145530701
    2. '       ' → logprob: -1.4408025741577148
    3. 'return' (adapté à ' return') → logprob: -2.065802574157715
    4. '   ' → logprob: -2.065802574157715
    5. '<|end|>' → logprob: -3.315802574157715
    6. '           ' → logprob: -4.315802574157715
    7. '	return' → logprob: -4.815802574157715
    8. ' cost' → logprob: -6.065802574157715
    9. ' pass' → logprob: -6.565802574157715
    10. '<|end|>' → logprob: -6.690802574157715

Token 380: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3872506022453308
    2. 'd' → logprob: -1.1372506618499756
    3. ' (' → logprob: -8.387250900268555
    4. '(d' → logprob: -8.887250900268555
    5. '(' → logprob: -12.387250900268555
    6. ' ' → logprob: -12.637250900268555
    7. '1' → logprob: -12.762250900268555
    8. ' ' → logprob: -13.262250900268555
    9. '   ' → logprob: -14.512250900268555
    10. '	d' → logprob: -14.637250900268555

Token 381: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5235050916671753
    2. ' +' → logprob: -0.8985050916671753
    3. '*' → logprob: -9.148505210876465
    4. ' +
' → logprob: -9.523505210876465
    5. ' *' → logprob: -9.773505210876465
    6. '+
' → logprob: -9.773505210876465
    7. '
' → logprob: -11.773505210876465
    8. 'def' → logprob: -11.773505210876465
    9. ' ' → logprob: -11.773505210876465
    10. ')' → logprob: -12.023505210876465

Token 382: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '<|end|>' → logprob: -17.12507438659668
    4. '   ' → logprob: -17.37507438659668
    5. '```' → logprob: -17.62507438659668
    6. '`' → logprob: -18.25007438659668
    7. '  ' → logprob: -19.25007438659668
    8. ')' → logprob: -20.00007438659668
    9. '       ' → logprob: -20.12507438659668
    10. '[' → logprob: -20.50007438659668

Token 383: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024228837341070175
    2. '<|end|>' → logprob: -3.774228811264038
    3. '       ' → logprob: -8.149229049682617
    4. '   ' → logprob: -8.649229049682617
    5. '<|end|>' → logprob: -8.649229049682617
    6. '    
' → logprob: -9.274229049682617
    7. '
' → logprob: -9.899229049682617
    8. '\n' → logprob: -10.149229049682617
    9. '  
' → logprob: -10.149229049682617
    10. '' → logprob: -10.649229049682617

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.176863893866539
    2. '
' → logprob: -2.6768639087677
    3. '   ' → logprob: -3.4268639087677
    4. '    
' → logprob: -3.9268639087677
    5. '        
' → logprob: -4.176863670349121
    6. '<|end|>' → logprob: -4.426863670349121
    7. '  
' → logprob: -4.676863670349121
    8. '<|end|>' → logprob: -7.676863670349121
    9. ' 
' → logprob: -7.801863670349121
    10. '    ' → logprob: -7.926863670349121

Token 385: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16418474912643433
    2. '   ' → logprob: -2.289184808731079
    3. 'while' → logprob: -3.539184808731079
    4. 'for' → logprob: -4.4141845703125
    5. ' while' → logprob: -5.4141845703125
    6. ' for' → logprob: -6.0391845703125
    7. '        
' → logprob: -7.2891845703125
    8. 'def' (adapté à ' def') → logprob: -7.6641845703125
    9. '
' → logprob: -8.2891845703125
    10. '    
' → logprob: -8.4141845703125

Token 386: ' access' (ID: 3158)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.5669065117835999
    2. 'access' → logprob: -1.191906452178955
    3. 'update' → logprob: -3.191906452178955
    4. 'move' → logprob: -3.691906452178955
    5. 'ev' → logprob: -4.066906452178955
    6. 'pop' → logprob: -4.566906452178955
    7. 'get' → logprob: -5.066906452178955
    8. ' process' → logprob: -5.316906452178955
    9. 'request' → logprob: -6.066906452178955
    10. ' access' → logprob: -6.066906452178955

Token 387: '_s' (ID: 1278)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.03093426674604416
    2. '_s' → logprob: -3.7809343338012695
    3. '_' → logprob: -5.7809343338012695
    4. '_book' → logprob: -7.0309343338012695
    5. '_c' → logprob: -7.7809343338012695
    6. '   ' → logprob: -7.7809343338012695
    7. '_books' → logprob: -7.9059343338012695
    8. 's' → logprob: -8.15593433380127
    9. 'd' → logprob: -8.28093433380127
    10. 'desk' → logprob: -8.40593433380127

Token 388: 'helf' (ID: 51433)
  Prédit: 'helf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helf' → logprob: -8.41866585687967e-06
    2. 'hel' → logprob: -12.125008583068848
    3. 'et' → logprob: -14.375008583068848
    4. 'h' → logprob: -14.500008583068848
    5. 'elf' → logprob: -14.750008583068848
    6. 't' → logprob: -14.750008583068848
    7. 'he' → logprob: -15.375008583068848
    8. 'helves' → logprob: -16.00000762939453
    9. '

' → logprob: -16.12500762939453
    10. '_' → logprob: -16.50000762939453

Token 389: '():
' (ID: 8595)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.009895386174321175
    2. '(' → logprob: -4.759895324707031
    3. ' (' → logprob: -7.384895324707031
    4. '():' → logprob: -8.009895324707031
    5. '(s' → logprob: -8.509895324707031
    6. '():
' → logprob: -9.634895324707031
    7. '(book' → logprob: -11.009895324707031
    8. '(b' → logprob: -11.134895324707031
    9. '()' → logprob: -11.259895324707031
    10. '(
' → logprob: -12.759895324707031

Token 390: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014084288850426674
    2. '           ' → logprob: -5.014084339141846
    3. ' return' → logprob: -5.764084339141846
    4. '       ' → logprob: -5.889084339141846
    5. '    
' → logprob: -7.264084339141846
    6. 'return' → logprob: -7.764084339141846
    7. '(' → logprob: -9.639083862304688
    8. '1' → logprob: -9.889083862304688
    9. ' ' → logprob: -10.389083862304688
    10. '    ' → logprob: -10.389083862304688

Token 391: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3360859453678131
    2. 'return' (adapté à ' return') → logprob: -1.9610859155654907
    3. '   ' → logprob: -3.0860860347747803
    4. ' return' → logprob: -3.3360860347747803
    5. '           ' → logprob: -3.5860860347747803
    6. ' ' → logprob: -3.8360860347747803
    7. '       ' → logprob: -4.961085796356201
    8. 'cost' → logprob: -5.836085796356201
    9. '2' → logprob: -6.586085796356201
    10. ' cost' → logprob: -7.211085796356201

Token 392: ' m' (ID: 284)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27468204498291016
    2. '10' → logprob: -2.14968204498291
    3. 'c' → logprob: -3.39968204498291
    4. '0' → logprob: -3.64968204498291
    5. '3' → logprob: -4.02468204498291
    6. 'm' → logprob: -4.52468204498291
    7. '2' → logprob: -4.52468204498291
    8. '5' → logprob: -4.64968204498291
    9. '60' → logprob: -6.02468204498291
    10. '4' → logprob: -6.14968204498291

Token 393: '+' (ID: 10)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48439082503318787
    2. '<|end|>' → logprob: -0.9843908548355103
    3. '<|end|>' → logprob: -5.484390735626221
    4. '       ' → logprob: -5.484390735626221
    5. '

' → logprob: -6.984390735626221
    6. '   ' → logprob: -7.609390735626221
    7. ')' → logprob: -8.734391212463379
    8. '
' → logprob: -9.234391212463379
    9. 'def' → logprob: -9.484391212463379
    10. '        
' → logprob: -10.234391212463379

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010771531378850341
    2. 'c' → logprob: -9.375107765197754
    3. '2' → logprob: -11.125107765197754
    4. '0' → logprob: -12.500107765197754
    5. 'm' → logprob: -13.000107765197754
    6. ' ' → logprob: -14.250107765197754
    7. '10' → logprob: -14.875107765197754
    8. '5' → logprob: -15.250107765197754
    9. '+' → logprob: -16.000106811523438
    10. '100' → logprob: -16.125106811523438

Token 395: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20356543362140656
    2. '<|end|>' → logprob: -1.7035654783248901
    3. '<|end|>' → logprob: -6.70356559753418
    4. '       ' → logprob: -7.32856559753418
    5. '

' → logprob: -8.82856559753418
    6. '
' → logprob: -10.70356559753418
    7. '        
' → logprob: -10.70356559753418
    8. '   ' → logprob: -11.20356559753418
    9. '    
' → logprob: -11.20356559753418
    10. '```' → logprob: -11.20356559753418

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48439258337020874
    2. '
' → logprob: -1.7343926429748535
    3. '   ' → logprob: -2.2343926429748535
    4. '        
' → logprob: -3.3593926429748535
    5. '    
' → logprob: -3.6093926429748535
    6. '<|end|>' → logprob: -3.6093926429748535
    7. '<|end|>' → logprob: -5.9843926429748535
    8. '  
' → logprob: -5.9843926429748535
    9. ' for' → logprob: -6.9843926429748535
    10. 'def' → logprob: -7.1093926429748535

Token 397: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03577813878655434
    2. 'while' → logprob: -3.660778045654297
    3. 'for' → logprob: -5.410778045654297
    4. '   ' → logprob: -5.660778045654297
    5. ' while' → logprob: -7.035778045654297
    6. ' for' → logprob: -8.285778045654297
    7. '        
' → logprob: -8.660778045654297
    8. '	while' → logprob: -9.535778045654297
    9. '    
' → logprob: -10.410778045654297
    10. '
' → logprob: -11.035778045654297

Token 398: ' put' (ID: 3006)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'access' → logprob: -0.7441028356552124
    2. 'process' → logprob: -0.9941028356552124
    3. 'main' → logprob: -3.369102954864502
    4. 'update' → logprob: -3.869102954864502
    5. 'move' → logprob: -4.119102954864502
    6. ' process' → logprob: -4.244102954864502
    7. 'solve' → logprob: -4.244102954864502
    8. ' access' → logprob: -4.244102954864502
    9. 'book' → logprob: -5.119102954864502
    10. 'ev' → logprob: -5.369102954864502

Token 399: '_book' (ID: 50583)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0858113765716553
    2. '_book' → logprob: -1.7108113765716553
    3. '(' → logprob: -2.0858113765716553
    4. '_d' → logprob: -2.3358113765716553
    5. '(d' → logprob: -2.3358113765716553
    6. '(_' → logprob: -3.0858113765716553
    7. '_back' → logprob: -3.2108113765716553
    8. '_on' → logprob: -3.3358113765716553
    9. ' (' → logprob: -4.585811614990234
    10. 'on' → logprob: -5.085811614990234

Token 400: '_on' (ID: 10053)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6339676380157471
    2. '_on' → logprob: -1.258967638015747
    3. '(d' → logprob: -2.508967638015747
    4. 'on' → logprob: -2.633967638015747
    5. '(_' → logprob: -4.383967399597168
    6. ' (' → logprob: -4.883967399597168
    7. '(on' → logprob: -6.133967399597168
    8. '_' → logprob: -6.258967399597168
    9. ' on' → logprob: -6.383967399597168
    10. '(s' → logprob: -6.883967399597168

Token 401: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.12979401648044586
    2. 'desk' → logprob: -2.129794120788574
    3. 'd' → logprob: -7.254794120788574
    4. ' desk' → logprob: -7.379794120788574
    5. 'des' → logprob: -7.879794120788574
    6. '(d' → logprob: -8.004794120788574
    7. '_des' → logprob: -8.129794120788574
    8. '_s' → logprob: -8.379794120788574
    9. 's' → logprob: -9.504794120788574
    10. 'Desk' → logprob: -10.004794120788574

Token 402: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.0005230080569162965
    2. 'es' → logprob: -8.37552261352539
    3. 'e' → logprob: -9.25052261352539
    4. '_' → logprob: -9.50052261352539
    5. '
' → logprob: -10.62552261352539
    6. ' esk' → logprob: -11.12552261352539
    7. '_e' → logprob: -11.25052261352539
    8. '[' → logprob: -11.50052261352539
    9. 'ek' → logprob: -11.87552261352539
    10. '

' → logprob: -12.00052261352539

Token 403: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.3271966278553009
    2. '(' → logprob: -1.3271965980529785
    3. ' (' → logprob: -4.3271965980529785
    4. '(_' → logprob: -8.327197074890137
    5. '_' → logprob: -9.077197074890137
    6. '(
' → logprob: -9.577197074890137
    7. '(des' → logprob: -9.702197074890137
    8. '(s' → logprob: -10.577197074890137
    9. '   ' → logprob: -10.702197074890137
    10. '_d' → logprob: -11.327197074890137

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01891607604920864
    2. ',d' → logprob: -4.268916130065918
    3. '(d' → logprob: -6.268916130065918
    4. ' ,' → logprob: -6.393916130065918
    5. ')' → logprob: -7.518916130065918
    6. '(' → logprob: -8.643916130065918
    7. '):' → logprob: -8.768916130065918
    8. 'd' → logprob: -9.143916130065918
    9. '):
' → logprob: -9.393916130065918
    10. '   ' → logprob: -10.143916130065918

Token 405: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5004395246505737
    2. 'book' → logprob: -1.0004395246505737
    3. ' b' → logprob: -4.125439643859863
    4. ' book' → logprob: -4.625439643859863
    5. 'bk' → logprob: -9.875439643859863
    6. '   ' → logprob: -12.000439643859863
    7. ' ' → logprob: -13.625439643859863
    8. ' bk' → logprob: -14.625439643859863
    9. '	book' → logprob: -14.750439643859863
    10. 'idx' → logprob: -14.875439643859863

Token 406: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.21096397936344147
    2. '):' → logprob: -1.7109639644622803
    3. ',' → logprob: -5.085964202880859
    4. '):
' → logprob: -6.460964202880859
    5. ')' → logprob: -7.085964202880859
    6. '):

' → logprob: -8.08596420288086
    7. '(d' → logprob: -8.08596420288086
    8. 'd' → logprob: -9.08596420288086
    9. ',d' → logprob: -9.46096420288086
    10. ' ):
' → logprob: -10.46096420288086

Token 407: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01965823955833912
    2. ' desks' → logprob: -4.769658088684082
    3. '   ' → logprob: -4.894658088684082
    4. '           ' → logprob: -6.019658088684082
    5. 'des' → logprob: -7.519658088684082
    6. ')' → logprob: -8.144658088684082
    7. '```' → logprob: -10.394658088684082
    8. '        
' → logprob: -10.394658088684082
    9. ' des' → logprob: -10.769658088684082
    10. ',' → logprob: -10.894658088684082

Token 408: ' desks' (ID: 109910)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7121244072914124
    2. 'des' → logprob: -0.9621244072914124
    3. ' desks' → logprob: -2.2121243476867676
    4. '   ' → logprob: -4.587124347686768
    5. 'if' → logprob: -5.962124347686768
    6. ' if' → logprob: -6.337124347686768
    7. ' des' → logprob: -6.462124347686768
    8. '           ' → logprob: -6.587124347686768
    9. '```' → logprob: -8.462124824523926
    10. 'desk' → logprob: -10.212124824523926

Token 409: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. 'd' → logprob: -15.625
    4. ' [' → logprob: -17.875
    5. ')[' → logprob: -19.625
    6. '
' → logprob: -20.0
    7. '```' → logprob: -20.0
    8. '\[' → logprob: -20.0
    9. '][' → logprob: -20.5
    10. '[
' → logprob: -20.5

Token 410: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0005242000916041434
    2. '.append' → logprob: -7.625524044036865
    3. ').' → logprob: -10.375524520874023
    4. ']' → logprob: -13.125524520874023
    5. ' ].' → logprob: -13.750524520874023
    6. 'append' → logprob: -14.125524520874023
    7. '.' → logprob: -14.750524520874023
    8. '   ' → logprob: -14.875524520874023
    9. ''].' → logprob: -16.000524520874023
    10. ']).' → logprob: -16.625524520874023

Token 411: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.5
    3. ' append' → logprob: -15.75
    4. '_append' → logprob: -20.125
    5. '	append' → logprob: -20.25
    6. 'Append' → logprob: -20.75
    7. 'app' → logprob: -20.875
    8. 'insert' → logprob: -21.125
    9. 'push' → logprob: -21.375
    10. 'appen' → logprob: -21.375

Token 412: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -4.990154047845863e-05
    2. '(' → logprob: -10.000049591064453
    3. 'b' → logprob: -12.375049591064453
    4. '(book' → logprob: -15.875049591064453
    5. ' (' → logprob: -16.750049591064453
    6. ' b' → logprob: -18.375049591064453
    7. '	b' → logprob: -18.875049591064453
    8. '((' → logprob: -20.000049591064453
    9. '(
' → logprob: -20.000049591064453
    10. '(B' → logprob: -20.625049591064453

Token 413: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004911953583359718
    2. ')
' → logprob: -7.625491142272949
    3. ' )' → logprob: -13.12549114227295
    4. ')return' → logprob: -14.75049114227295
    5. ')

' → logprob: -15.62549114227295
    6. '   ' → logprob: -16.125492095947266
    7. '<|end|>' → logprob: -16.125492095947266
    8. ')#' → logprob: -16.500492095947266
    9. '       ' → logprob: -16.500492095947266
    10. ')
' → logprob: -16.625492095947266

Token 414: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2576753497123718
    2. '<|end|>' → logprob: -1.5076754093170166
    3. '       ' → logprob: -5.8826751708984375
    4. '           ' → logprob: -6.1326751708984375
    5. '<|end|>' → logprob: -8.007675170898438
    6. '
' → logprob: -9.382675170898438
    7. ' 
' → logprob: -9.757675170898438
    8. ' ' → logprob: -10.132675170898438
    9. '  
' → logprob: -10.382675170898438
    10. ')' → logprob: -10.507675170898438

Token 415: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.001404040725901723
    2. '           ' → logprob: -7.12640380859375
    3. ' book' → logprob: -8.12640380859375
    4. '   ' → logprob: -8.50140380859375
    5. '       ' → logprob: -9.62640380859375
    6. 'if' → logprob: -11.25140380859375
    7. 's' → logprob: -11.37640380859375
    8. '	book' → logprob: -13.12640380859375
    9. 'books' → logprob: -13.37640380859375
    10. ' ' → logprob: -13.37640380859375

Token 416: '_location' (ID: 29811)
  Prédit: '_location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_location' → logprob: -2.816093228830141e-06
    2. '_locations' → logprob: -13.50000286102295
    3. '_' → logprob: -13.87500286102295
    4. '_position' → logprob: -15.37500286102295
    5. 'Location' → logprob: -15.75000286102295
    6. 'location' → logprob: -16.875001907348633
    7. '_LOCATION' → logprob: -18.250001907348633
    8. ' _' → logprob: -18.500001907348633
    9. '<Location' → logprob: -18.750001907348633
    10. '_presence' → logprob: -19.625001907348633

Token 417: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -11.000017166137695
    3. 'b' → logprob: -14.250017166137695
    4. '```' → logprob: -17.000017166137695
    5. '=b' → logprob: -17.500017166137695
    6. ' [' → logprob: -17.875017166137695
    7. '[B' → logprob: -18.250017166137695
    8. '\[' → logprob: -18.875017166137695
    9. '[u' → logprob: -19.000017166137695
    10. '[new' → logprob: -19.125017166137695

Token 418: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.061988864094018936
    2. '=' → logprob: -3.0619888305664062
    3. ']=' → logprob: -4.561988830566406
    4. ' =' → logprob: -5.936988830566406
    5. ' ]' → logprob: -8.436988830566406
    6. '[' → logprob: -11.811988830566406
    7. ')' → logprob: -12.436988830566406
    8. '[d' → logprob: -14.186988830566406
    9. '=d' → logprob: -14.561988830566406
    10. ')=' → logprob: -14.811988830566406

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804194927215576
    2. ' =' → logprob: -3.2880420684814453
    3. '=d' → logprob: -14.663042068481445
    4. '＝' → logprob: -18.663042068481445
    5. '=

' → logprob: -19.413042068481445
    6. '=s' → logprob: -19.538042068481445
    7. '=m' → logprob: -19.538042068481445
    8. '=f' → logprob: -19.913042068481445
    9. '=
' → logprob: -20.663042068481445
    10. '=b' → logprob: -21.038042068481445

Token 420: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.493430894101039e-05
    2. ' d' → logprob: -9.500075340270996
    3. '	d' → logprob: -21.25007438659668
    4. ')d' → logprob: -22.37507438659668
    5. '$d' → logprob: -23.62507438659668
    6. '_d' → logprob: -24.50007438659668
    7. '```' → logprob: -25.00007438659668
    8. '*d' → logprob: -25.25007438659668
    9. '"d' → logprob: -25.25007438659668
    10. '­d' → logprob: -25.37507438659668

Token 421: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17998084425926208
    2. '<|end|>' → logprob: -1.8049808740615845
    3. '<|end|>' → logprob: -8.554981231689453
    4. '
' → logprob: -10.804981231689453
    5. '\n' → logprob: -11.929981231689453
    6. ' 
' → logprob: -13.179981231689453
    7. '  
' → logprob: -13.179981231689453
    8. '   ' → logprob: -13.179981231689453
    9. ')' → logprob: -13.179981231689453
    10. '       ' → logprob: -13.304981231689453

Token 422: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14630839228630066
    2. 'def' (adapté à ' def') → logprob: -2.396308422088623
    3. '<|end|>' → logprob: -3.521308422088623
    4. '        
' → logprob: -5.271308422088623
    5. '   ' → logprob: -5.771308422088623
    6. '```' → logprob: -6.021308422088623
    7. '
' → logprob: -7.146308422088623
    8. '        ' → logprob: -7.146308422088623
    9. ')' → logprob: -7.646308422088623
    10. '    
' → logprob: -7.646308422088623

Token 424: ' remove' (ID: 6234)
  Prédit: ' remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remove' → logprob: -0.44080179929733276
    2. 'remove' → logprob: -1.1908018589019775
    3. 'put' → logprob: -4.315801620483398
    4. 'pop' → logprob: -4.315801620483398
    5. 'def' → logprob: -4.690801620483398
    6. ' pop' → logprob: -5.440801620483398
    7. ' put' → logprob: -5.565801620483398
    8. ' move' → logprob: -6.065801620483398
    9. 'move' → logprob: -6.315801620483398
    10. ' def' → logprob: -6.690801620483398

Token 425: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.004198186565190554
    2. 'from' → logprob: -6.12919807434082
    3. '_from' → logprob: -6.62919807434082
    4. '_' → logprob: -8.50419807434082
    5. '_b' → logprob: -8.62919807434082
    6. '_d' → logprob: -9.50419807434082
    7. '_last' → logprob: -9.62919807434082
    8. '_token' → logprob: -10.62919807434082
    9. 'a' → logprob: -10.75419807434082
    10. 'book' → logprob: -11.12919807434082

Token 426: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.03189712017774582
    2. '_on' → logprob: -3.7818970680236816
    3. 'from' → logprob: -5.406897068023682
    4. '(d' → logprob: -5.531897068023682
    5. '(' → logprob: -9.90689754486084
    6. ' =' → logprob: -10.53189754486084
    7. '_at' → logprob: -10.53189754486084
    8. '=' → logprob: -11.28189754486084
    9. 's' → logprob: -11.40689754486084
    10. '_' → logprob: -12.15689754486084

Token 427: '_d' (ID: 1565)
  Prédit: 'desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'desk' → logprob: -0.37020206451416016
    2. '_d' → logprob: -1.6202020645141602
    3. 'd' → logprob: -2.74520206451416
    4. ' desk' → logprob: -3.12020206451416
    5. 'des' → logprob: -6.99520206451416
    6. 'def' → logprob: -7.49520206451416
    7. '(d' → logprob: -7.74520206451416
    8. 'deck' → logprob: -8.12020206451416
    9. 's' → logprob: -8.24520206451416
    10. 'Desk' → logprob: -8.62020206451416

Token 428: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.0035024303942918777
    2. 'es' → logprob: -5.878502368927002
    3. 'sk' → logprob: -7.628502368927002
    4. '_' → logprob: -9.87850284576416
    5. 'esc' → logprob: -10.12850284576416
    6. 'desk' → logprob: -10.37850284576416
    7. 'ek' → logprob: -10.75350284576416
    8. 'est' → logprob: -11.50350284576416
    9. 's' → logprob: -11.50350284576416
    10. 'e' → logprob: -11.75350284576416

Token 429: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -9.388769103679806e-05
    2. '(' → logprob: -9.375093460083008
    3. ' (' → logprob: -11.875093460083008
    4. '(def' → logprob: -14.625093460083008
    5. '(des' → logprob: -14.625093460083008
    6. '(
' → logprob: -14.750093460083008
    7. '(s' → logprob: -15.125093460083008
    8. 'def' → logprob: -15.875093460083008
    9. '(b' → logprob: -16.500093460083008
    10. '(de' → logprob: -16.875093460083008

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023988401517271996
    2. ',b' → logprob: -6.62739896774292
    3. ' ,' → logprob: -6.87739896774292
    4. ',d' → logprob: -10.127398490905762
    5. '   ' → logprob: -14.627398490905762
    6. ',
' → logprob: -15.377398490905762
    7. ',p' → logprob: -16.127399444580078
    8. 'b' → logprob: -16.252399444580078
    9. '(b' → logprob: -16.377399444580078
    10. ',a' → logprob: -16.502399444580078

Token 431: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.160352885723114
    2. ' b' → logprob: -1.9103529453277588
    3. '):
' → logprob: -10.28535270690918
    4. 'book' → logprob: -10.41035270690918
    5. ' book' → logprob: -11.03535270690918
    6. ' idx' → logprob: -11.16035270690918
    7. 'idx' → logprob: -11.91035270690918
    8. ')' → logprob: -12.03535270690918
    9. ')b' → logprob: -12.53535270690918
    10. '   ' → logprob: -12.53535270690918

Token 432: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.576273500919342
    2. '):' → logprob: -0.826273500919342
    3. ')' → logprob: -8.576273918151855
    4. '):
' → logprob: -8.951273918151855
    5. '):

' → logprob: -11.826273918151855
    6. ',' → logprob: -13.076273918151855
    7. '():
' → logprob: -13.576273918151855
    8. ' ):' → logprob: -13.701273918151855
    9. '   ' → logprob: -13.951273918151855
    10. '(d' → logprob: -14.326273918151855

Token 433: '           ' (ID: 352)
  Prédit: ' desks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' desks' → logprob: -0.9319148063659668
    2. 'des' → logprob: -1.0569148063659668
    3. '       ' → logprob: -1.8069148063659668
    4. '   ' → logprob: -2.806914806365967
    5. ' des' → logprob: -3.556914806365967
    6. '           ' → logprob: -5.306914806365967
    7. '_des' → logprob: -8.681915283203125
    8. 'd' → logprob: -8.681915283203125
    9. 'Des' → logprob: -9.306915283203125
    10. ' desk' → logprob: -10.181915283203125

Token 434: ' desks' (ID: 109910)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.09174931794404984
    2. ' desks' → logprob: -2.591749429702759
    3. '   ' → logprob: -4.71674919128418
    4. '       ' → logprob: -5.71674919128418
    5. '           ' → logprob: -8.21674919128418
    6. 'desk' → logprob: -8.84174919128418
    7. ' des' → logprob: -9.71674919128418
    8. 'books' → logprob: -11.21674919128418
    9. ' desk' → logprob: -11.46674919128418
    10. 'd' → logprob: -11.71674919128418

Token 435: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -4.0722858102526516e-05
    2. 'd' → logprob: -10.125041007995605
    3. '[' → logprob: -14.500041007995605
    4. '=d' → logprob: -17.00004005432129
    5. '(d' → logprob: -17.12504005432129
    6. ')d' → logprob: -18.87504005432129
    7. '
' → logprob: -18.87504005432129
    8. ' [' → logprob: -18.87504005432129
    9. '[
' → logprob: -18.87504005432129
    10. '][' → logprob: -18.87504005432129

Token 436: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00016873658751137555
    2. '.remove' → logprob: -9.250168800354004
    3. ']' → logprob: -11.000168800354004
    4. ').' → logprob: -11.000168800354004
    5. ' ].' → logprob: -11.375168800354004
    6. '   ' → logprob: -11.625168800354004
    7. '[d' → logprob: -11.750168800354004
    8. 'd' → logprob: -12.000168800354004
    9. '=d' → logprob: -14.000168800354004
    10. '=' → logprob: -14.125168800354004

Token 437: 'remove' (ID: 4942)
  Prédit: 'remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.00043353010551072657
    2. '.remove' → logprob: -7.750433444976807
    3. ' remove' → logprob: -12.750433921813965
    4. '	remove' → logprob: -18.50043296813965
    5. '.' → logprob: -18.75043296813965
    6. '   ' → logprob: -19.12543296813965
    7. '
' → logprob: -19.37543296813965
    8. '_remove' → logprob: -20.50043296813965
    9. ' ' → logprob: -20.62543296813965
    10. '(remove' → logprob: -20.75043296813965

Token 438: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -9.088346359931165e-07
    2. 'b' → logprob: -14.125000953674316
    3. '(' → logprob: -16.75
    4. ' (' → logprob: -17.25
    5. '(book' → logprob: -19.875
    6. '(
' → logprob: -21.25
    7. ' b' → logprob: -21.625
    8. '	b' → logprob: -21.875
    9. '[b' → logprob: -22.75
    10. '(B' → logprob: -23.625

Token 439: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018113377154804766
    2. ')
' → logprob: -8.625181198120117
    3. ')

' → logprob: -14.750181198120117
    4. ')b' → logprob: -14.750181198120117
    5. '   ' → logprob: -15.875181198120117
    6. ',' → logprob: -16.125181198120117
    7. '       ' → logprob: -16.375181198120117
    8. ')
' → logprob: -16.375181198120117
    9. ' )' → logprob: -16.375181198120117
    10. '<|end|>' → logprob: -16.500181198120117

Token 440: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.01844220981001854
    2. 'del' → logprob: -4.018442153930664
    3. '           ' → logprob: -8.768442153930664
    4. 's' → logprob: -9.768442153930664
    5. '       ' → logprob: -10.393442153930664
    6. ' del' → logprob: -10.768442153930664
    7. '   ' → logprob: -11.393442153930664
    8. 'if' → logprob: -12.393442153930664
    9. ' book' → logprob: -12.768442153930664
    10. 'books' → logprob: -12.893442153930664

Token 442: '_location' (ID: 29811)
  Prédit: '_location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_location' → logprob: -9.849109119386412e-06
    2. 'location' → logprob: -11.750009536743164
    3. 'Location' → logprob: -13.875009536743164
    4. '_locations' → logprob: -14.000009536743164
    5. '_LOCATION' → logprob: -16.750009536743164
    6. ' location' → logprob: -18.250009536743164
    7. '_position' → logprob: -18.375009536743164
    8. '_' → logprob: -18.375009536743164
    9. '	location' → logprob: -18.500009536743164
    10. 'LOCATION' → logprob: -19.375009536743164

Token 443: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.004110815469175577
    2. '.pop' → logprob: -6.129110813140869
    3. 'b' → logprob: -7.004110813140869
    4. '[' → logprob: -7.379110813140869
    5. '[m' → logprob: -8.254111289978027
    6. '=' → logprob: -9.379111289978027
    7. '=b' → logprob: -11.129111289978027
    8. ' =' → logprob: -11.629111289978027
    9. 'pop' → logprob: -12.254111289978027
    10. '```' → logprob: -12.254111289978027

Token 444: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4464655816555023
    2. ']' → logprob: -1.1964656114578247
    3. ' =' → logprob: -3.196465492248535
    4. ']=' → logprob: -4.196465492248535
    5. ')' → logprob: -6.696465492248535
    6. '[m' → logprob: -8.071465492248535
    7. ')=' → logprob: -9.071465492248535
    8. '[b' → logprob: -9.696465492248535
    9. '=m' → logprob: -9.821465492248535
    10. '=b' → logprob: -10.446465492248535

Token 445: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12697356939315796
    2. ' =' → logprob: -2.1269736289978027
    3. '=m' → logprob: -10.001973152160645
    4. 'm' → logprob: -16.62697410583496
    5. '=s' → logprob: -17.75197410583496
    6. '=None' → logprob: -18.00197410583496
    7. '＝' → logprob: -18.37697410583496
    8. '=
' → logprob: -19.00197410583496
    9. '<|end|>' → logprob: -19.12697410583496
    10. '[m' → logprob: -19.37697410583496

Token 446: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.9361264946837764e-07
    2. ' m' → logprob: -16.375
    3. '	m' → logprob: -19.125
    4. '<|end|>' → logprob: -20.375
    5. 'м' → logprob: -20.875
    6. '   ' → logprob: -20.875
    7. '$m' → logprob: -22.0
    8. '_m' → logprob: -22.25
    9. 'None' → logprob: -22.375
    10. '{' → logprob: -22.875

Token 447: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 449: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013659057207405567
    2. 'while' → logprob: -4.7636590003967285
    3. 'def' (adapté à ' def') → logprob: -5.7636590003967285
    4. '   ' → logprob: -7.5136590003967285
    5. ' while' → logprob: -7.7636590003967285
    6. '```' → logprob: -7.7636590003967285
    7. 'for' → logprob: -8.513659477233887
    8. '        
' → logprob: -9.013659477233887
    9. '<|end|>' → logprob: -9.763659477233887
    10. ' for' → logprob: -10.763659477233887

Token 450: ' find' (ID: 1646)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.21959595382213593
    2. 'ev' → logprob: -3.2195959091186523
    3. 'pop' → logprob: -3.3445959091186523
    4. 'get' → logprob: -3.5945959091186523
    5. 'move' → logprob: -3.8445959091186523
    6. 'access' → logprob: -3.8445959091186523
    7. 'solve' → logprob: -4.594595909118652
    8. 'handle' → logprob: -4.969595909118652
    9. 'remove' → logprob: -5.094595909118652
    10. 'find' → logprob: -5.344595909118652

Token 451: '_non' (ID: 52193)
  Prédit: '_book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.20615099370479584
    2. '_d' → logprob: -3.081151008605957
    3. '_ev' → logprob: -3.081151008605957
    4. '_v' → logprob: -3.456151008605957
    5. '_l' → logprob: -3.581151008605957
    6. '_re' → logprob: -4.831151008605957
    7. '_le' → logprob: -5.206151008605957
    8. '_best' → logprob: -5.456151008605957
    9. '_candidate' → logprob: -5.706151008605957
    10. '_s' → logprob: -6.206151008605957

Token 452: 'full' (ID: 15393)
  Prédit: 'full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.6128419041633606
    2. 'empty' → logprob: -0.8628419041633606
    3. '_full' → logprob: -3.612841844558716
    4. '_empty' → logprob: -4.987842082977295
    5. '_d' → logprob: -7.112842082977295
    6. 'used' → logprob: -7.487842082977295
    7. '_l' → logprob: -8.237841606140137
    8. '_used' → logprob: -8.612841606140137
    9. 'd' → logprob: -8.862841606140137
    10. 'conf' → logprob: -9.487841606140137

Token 453: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0032220338471233845
    2. 'desk' → logprob: -6.3782219886779785
    3. '(d' → logprob: -6.8782219886779785
    4. '(' → logprob: -8.378222465515137
    5. '_' → logprob: -8.878222465515137
    6. '_des' → logprob: -9.503222465515137
    7. '()' → logprob: -11.503222465515137
    8. 'd' → logprob: -11.503222465515137
    9. '(_' → logprob: -11.628222465515137
    10. ' desk' → logprob: -12.378222465515137

Token 454: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.000477620807942003
    2. 'es' → logprob: -8.00047779083252
    3. 'e' → logprob: -9.12547779083252
    4. '
' → logprob: -11.50047779083252
    5. '_' → logprob: -12.50047779083252
    6. '[' → logprob: -12.87547779083252
    7. '(' → logprob: -13.12547779083252
    8. '

' → logprob: -13.12547779083252
    9. '{' → logprob: -13.50047779083252
    10. '_e' → logprob: -13.62547779083252

Token 455: '(start' (ID: 20008)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3870927095413208
    2. '():
' → logprob: -1.1370927095413208
    3. '()' → logprob: -9.012092590332031
    4. '():
' → logprob: -10.012092590332031
    5. ' ():' → logprob: -10.637092590332031
    6. '(' → logprob: -10.637092590332031
    7. '():

' → logprob: -12.262092590332031
    8. ' ()' → logprob: -14.762092590332031
    9. '(m' → logprob: -15.012092590332031
    10. '(s' → logprob: -15.887092590332031

Token 456: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3070932924747467
    2. ',' → logprob: -1.9320932626724243
    3. '):' → logprob: -2.682093381881714
    4. ')' → logprob: -4.182093143463135
    5. ',d' → logprob: -4.807093143463135
    6. '(' → logprob: -5.182093143463135
    7. '(d' → logprob: -5.432093143463135
    8. 'from' → logprob: -5.557093143463135
    9. '=d' → logprob: -5.682093143463135
    10. '):
' → logprob: -5.807093143463135

Token 457: ' exclude' (ID: 39566)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05847470834851265
    2. ' m' → logprob: -3.1834747791290283
    3. 'count' → logprob: -5.683474540710449
    4. 'start' → logprob: -5.933474540710449
    5. 'c' → logprob: -6.183474540710449
    6. 'end' → logprob: -6.808474540710449
    7. 'lambda' → logprob: -6.808474540710449
    8. ')' → logprob: -7.058474540710449
    9. ' lambda' → logprob: -7.308474540710449
    10. ' count' → logprob: -7.558474540710449

Token 458: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6536023020744324
    2. '):
' → logprob: -0.7786023020744324
    3. '=' → logprob: -4.278602123260498
    4. '=None' → logprob: -6.028602123260498
    5. '=[]' → logprob: -6.153602123260498
    6. 's' → logprob: -6.653602123260498
    7. 'd' → logprob: -7.653602123260498
    8. '):
' → logprob: -8.903602600097656
    9. '):

' → logprob: -9.153602600097656
    10. ',' → logprob: -9.153602600097656

Token 459: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.05971083790063858
    2. '-' → logprob: -2.934710741043091
    3. ' None' → logprob: -5.93471097946167
    4. '=None' → logprob: -7.43471097946167
    5. 'set' → logprob: -7.80971097946167
    6. '{' → logprob: -7.80971097946167
    7. '(None' → logprob: -8.309710502624512
    8. '):
' → logprob: -8.934710502624512
    9. ' -' → logprob: -9.559710502624512
    10. '{-' → logprob: -9.809710502624512

Token 460: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5497862100601196
    2. '):
' → logprob: -0.9247862100601196
    3. '):' → logprob: -3.67478609085083
    4. ',d' → logprob: -7.29978609085083
    5. ' ,' → logprob: -9.049786567687988
    6. '):

' → logprob: -10.174786567687988
    7. ',
' → logprob: -10.424786567687988
    8. '):
' → logprob: -10.424786567687988
    9. '   ' → logprob: -10.924786567687988
    10. ')' → logprob: -11.799786567687988

Token 461: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10412494838237762
    2. '       ' → logprob: -2.6041250228881836
    3. ' for' → logprob: -4.729125022888184
    4. '    
' → logprob: -5.979125022888184
    5. ',' → logprob: -6.229125022888184
    6. '(' → logprob: -6.354125022888184
    7. '```' → logprob: -6.354125022888184
    8. '    ' → logprob: -6.729125022888184
    9. '{' → logprob: -6.854125022888184
    10. 'for' → logprob: -6.979125022888184

Token 462: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2062276303768158
    2. 'for' → logprob: -1.7062276601791382
    3. '       ' → logprob: -5.706227779388428
    4. '   ' → logprob: -6.831227779388428
    5. ' range' → logprob: -8.58122730255127
    6. 'range' → logprob: -8.95622730255127
    7. '           ' → logprob: -10.45622730255127
    8. '```' → logprob: -11.08122730255127
    9. '	for' → logprob: -12.33122730255127
    10. ')' → logprob: -12.45622730255127

Token 463: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05124026909470558
    2. ' for' → logprob: -3.0512402057647705
    3. '   ' → logprob: -6.30124044418335
    4. '           ' → logprob: -7.17624044418335
    5. 'idx' → logprob: -10.301239967346191
    6. ' ' → logprob: -12.301239967346191
    7. '       ' → logprob: -12.551239967346191
    8. ' idx' → logprob: -12.676239967346191
    9. 'i' → logprob: -13.051239967346191
    10. 'd' → logprob: -14.301239967346191

Token 464: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5512896180152893
    2. ' =' → logprob: -2.0512895584106445
    3. ',' → logprob: -2.1762895584106445
    4. 'for' → logprob: -2.6762895584106445
    5. ' for' → logprob: -3.3012895584106445
    6. '+=' → logprob: -3.6762895584106445
    7. ')' → logprob: -4.4262895584106445
    8. 'from' → logprob: -4.5512895584106445
    9. ' +=' → logprob: -5.3012895584106445
    10. ' in' → logprob: -5.4262895584106445

Token 465: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19798138737678528
    2. 'start' → logprob: -2.197981357574463
    3. '(start' → logprob: -2.947981357574463
    4. '(' → logprob: -4.322981357574463
    5. 'd' → logprob: -7.572981357574463
    6. 'def' → logprob: -7.822981357574463
    7. ' (' → logprob: -7.822981357574463
    8. '1' → logprob: -8.072981834411621
    9. ' start' → logprob: -8.197981834411621
    10. '(s' → logprob: -8.572981834411621

Token 466: ' means' (ID: 4748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5846336483955383
    2. ' for' → logprob: -1.7096335887908936
    3. 'for' → logprob: -3.2096335887908936
    4. ')' → logprob: -3.2096335887908936
    5. ',m' → logprob: -3.7096335887908936
    6. ';' → logprob: -3.8346335887908936
    7. '           ' → logprob: -3.8346335887908936
    8. '
' → logprob: -3.9596335887908936
    9. '       ' → logprob: -4.084633827209473
    10. ',d' → logprob: -4.459633827209473

Token 467: ' from' (ID: 591)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.10543695837259293
    2. '0' → logprob: -3.2304370403289795
    3. ' start' → logprob: -3.6054370403289795
    4. '(start' → logprob: -4.3554368019104
    5. 'd' → logprob: -5.2304368019104
    6. 'search' → logprob: -5.4804368019104
    7. 'from' → logprob: -5.9804368019104
    8. 'm' → logprob: -6.2304368019104
    9. 'for' → logprob: -6.3554368019104
    10. ' for' → logprob: -7.3554368019104

Token 468: ' D' (ID: 415)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04024670273065567
    2. '0' → logprob: -3.4152467250823975
    3. ' start' → logprob: -5.040246486663818
    4. '(start' → logprob: -9.665246963500977
    5. 'def' → logprob: -11.540246963500977
    6. ' ' → logprob: -12.290246963500977
    7. '(' → logprob: -12.415246963500977
    8. 'd' → logprob: -12.540246963500977
    9. 's' → logprob: -12.540246963500977
    10. ')' → logprob: -12.790246963500977

Token 469: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9290395379066467
    2. '0' → logprob: -1.179039478302002
    3. 'start' → logprob: -1.429039478302002
    4. 'es' → logprob: -3.179039478302002
    5. '[start' → logprob: -5.804039478302002
    6. 'ef' → logprob: -6.179039478302002
    7. ',start' → logprob: -6.554039478302002
    8. 'esk' → logprob: -6.804039478302002
    9. '=start' → logprob: -6.804039478302002
    10. '=' → logprob: -6.929039478302002

Token 470: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9058493375778198
    2. ' for' → logprob: -1.2808493375778198
    3. 'd' → logprob: -2.5308494567871094
    4. 'for' → logprob: -3.0308494567871094
    5. '<|end|>' → logprob: -3.0308494567871094
    6. 'def' → logprob: -3.4058494567871094
    7. ')' → logprob: -4.030849456787109
    8. '
' → logprob: -4.405849456787109
    9. ';' → logprob: -4.405849456787109
    10. '       ' → logprob: -4.655849456787109

Token 471: ' D' (ID: 415)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.000992199289612472
    2. ' m' → logprob: -7.000992298126221
    3. 'len' → logprob: -9.500991821289062
    4. '   ' → logprob: -13.750991821289062
    5. 'end' → logprob: -13.750991821289062
    6. '
' → logprob: -13.875991821289062
    7. ' len' → logprob: -14.375991821289062
    8. '           ' → logprob: -15.000991821289062
    9. '(m' → logprob: -15.000991821289062
    10. ' ' → logprob: -15.250991821289062

Token 472: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0361054390668869
    2. ' m' → logprob: -3.5361053943634033
    3. '[m' → logprob: -5.911105632781982
    4. 'ef' → logprob: -7.286105632781982
    5. '(m' → logprob: -7.411105632781982
    6. ',m' → logprob: -7.786105632781982
    7. '_m' → logprob: -7.786105632781982
    8. ',' → logprob: -8.036105155944824
    9. 'es' → logprob: -8.286105155944824
    10. '   ' → logprob: -8.411105155944824

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6208285689353943
    2. ' for' → logprob: -1.370828628540039
    3. '   ' → logprob: -3.495828628540039
    4. ',
' → logprob: -3.620828628540039
    5. 'for' → logprob: -3.620828628540039
    6. '       ' → logprob: -3.995828628540039
    7. '           ' → logprob: -3.995828628540039
    8. 'def' → logprob: -4.495828628540039
    9. 'd' → logprob: -4.495828628540039
    10. '
' → logprob: -4.745828628540039

Token 474: ' but' (ID: 889)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46023380756378174
    2. ' m' → logprob: -1.4602338075637817
    3. 'm' → logprob: -2.960233688354492
    4. ' range' → logprob: -3.960233688354492
    5. 'd' → logprob: -4.210233688354492
    6. ' d' → logprob: -4.210233688354492
    7. 'for' → logprob: -4.835233688354492
    8. 'range' → logprob: -5.085233688354492
    9. ')' → logprob: -5.210233688354492
    10. ' start' → logprob: -5.585233688354492

Token 475: ' for' (ID: 395)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8042502403259277
    2. ' m' → logprob: -1.8042502403259277
    3. 'start' → logprob: -1.8042502403259277
    4. ' start' → logprob: -2.1792502403259277
    5. ' for' → logprob: -3.4292502403259277
    6. 'len' → logprob: -3.9292502403259277
    7. 'range' → logprob: -3.9292502403259277
    8. ' range' → logprob: -5.054250240325928
    9. 'for' → logprob: -5.554250240325928
    10. ' if' → logprob: -5.679250240325928

Token 476: ' temp' (ID: 5484)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2328062206506729
    2. ' d' → logprob: -2.1078062057495117
    3. 'start' → logprob: -3.9828062057495117
    4. 'range' → logprob: -4.107806205749512
    5. ' start' → logprob: -4.232806205749512
    6. 'i' → logprob: -4.357806205749512
    7. ' range' → logprob: -4.357806205749512
    8. ' i' → logprob: -4.982806205749512
    9. ' for' → logprob: -7.232806205749512
    10. '_' → logprob: -7.232806205749512

Token 477: ' placement' (ID: 29002)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6565653085708618
    2. '=' → logprob: -1.2815653085708618
    3. 'start' → logprob: -2.7815651893615723
    4. 'd' → logprob: -3.4065651893615723
    5. 'def' → logprob: -3.4065651893615723
    6. ' def' → logprob: -4.781565189361572
    7. ' start' → logprob: -5.156565189361572
    8. '(start' → logprob: -5.406565189361572
    9. ' d' → logprob: -5.531565189361572
    10. '_start' → logprob: -5.531565189361572

Token 478: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3382391035556793
    2. '(range' → logprob: -2.8382391929626465
    3. '(start' → logprob: -3.2132391929626465
    4. ' for' → logprob: -3.3382391929626465
    5. '           ' → logprob: -3.9632391929626465
    6. '(' → logprob: -3.9632391929626465
    7. 'd' → logprob: -4.0882391929626465
    8. '(d' → logprob: -4.0882391929626465
    9. '   ' → logprob: -4.0882391929626465
    10. 'range' → logprob: -4.3382391929626465

Token 479: '           ' (ID: 352)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5270071029663086
    2. ' start' → logprob: -1.0270071029663086
    3. '(start' → logprob: -3.9020071029663086
    4. 'd' → logprob: -4.402007102966309
    5. '           ' → logprob: -5.402007102966309
    6. ' d' → logprob: -5.777007102966309
    7. ' (' → logprob: -5.902007102966309
    8. ' for' → logprob: -6.152007102966309
    9. 'range' → logprob: -6.152007102966309
    10. '   ' → logprob: -6.777007102966309

Token 480: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0516560077667236
    2. 'start' → logprob: -1.1766560077667236
    3. ' start' → logprob: -1.9266560077667236
    4. 'for' → logprob: -2.3016560077667236
    5. 'd' → logprob: -3.3016560077667236
    6. 'range' → logprob: -3.5516560077667236
    7. ' range' → logprob: -4.6766557693481445
    8. ' d' → logprob: -5.1766557693481445
    9. ' i' → logprob: -5.4266557693481445
    10. '   ' → logprob: -5.9266557693481445

Token 481: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6573092937469482
    2. ' for' → logprob: -1.1573092937469482
    3. 'start' → logprob: -2.1573092937469482
    4. 'range' → logprob: -4.032309532165527
    5. 'return' → logprob: -4.407309532165527
    6. ' start' → logprob: -4.782309532165527
    7. 'd' → logprob: -5.532309532165527
    8. ' return' → logprob: -6.282309532165527
    9. '   ' → logprob: -6.407309532165527
    10. ' range' → logprob: -6.407309532165527

Token 482: ' want' (ID: 1682)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.977767825126648
    2. ' can' → logprob: -1.977767825126648
    3. 'return' → logprob: -2.4777679443359375
    4. 'find' → logprob: -3.1027679443359375
    5. 'start' → logprob: -3.2277679443359375
    6. 'continue' → logprob: -3.3527679443359375
    7. 'can' → logprob: -3.4777679443359375
    8. ')' → logprob: -3.6027679443359375
    9. 'search' → logprob: -3.7277679443359375
    10. ' find' → logprob: -3.8527679443359375

Token 483: ' closest' (ID: 31179)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2805984020233154
    2. ' for' → logprob: -1.6555984020233154
    3. 'for' → logprob: -1.9055984020233154
    4. 'i' → logprob: -2.1555984020233154
    5. ' d' → logprob: -2.7805984020233154
    6. 'range' → logprob: -2.9055984020233154
    7. ' i' → logprob: -3.0305984020233154
    8. 'start' → logprob: -3.4055984020233154
    9. ' range' → logprob: -3.6555984020233154
    10. ' start' → logprob: -4.7805986404418945

Token 484: ' to' (ID: 316)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.2496591806411743
    2. ' desk' → logprob: -1.6246591806411743
    3. 'd' → logprob: -1.7496591806411743
    4. 'def' → logprob: -1.9996591806411743
    5. 'desk' → logprob: -3.1246590614318848
    6. ' range' → logprob: -3.7496590614318848
    7. 'range' → logprob: -3.9996590614318848
    8. ',' → logprob: -4.124659061431885
    9. '(d' → logprob: -4.249659061431885
    10. ' for' → logprob: -4.249659061431885

Token 485: ' entrance' (ID: 27326)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.02535013109445572
    2. 'm' → logprob: -4.150350093841553
    3. '0' → logprob: -4.900350093841553
    4. ' start' → logprob: -6.650350093841553
    5. '(start' → logprob: -8.275350570678711
    6. 'd' → logprob: -9.025350570678711
    7. 'c' → logprob: -9.775350570678711
    8. 'end' → logprob: -10.650350570678711
    9. 'exclude' → logprob: -11.150350570678711
    10. '(' → logprob: -11.275350570678711

Token 486: ' that' (ID: 484)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.9102915525436401
    2. ' for' → logprob: -1.1602915525436401
    3. ',' → logprob: -2.4102916717529297
    4. ' (' → logprob: -3.0352916717529297
    5. ' if' → logprob: -3.0352916717529297
    6. '           ' → logprob: -3.6602916717529297
    7. '(range' → logprob: -4.03529167175293
    8. '(' → logprob: -4.78529167175293
    9. '(start' → logprob: -4.78529167175293
    10. 'd' → logprob: -5.28529167175293

Token 487: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9550718665122986
    2. '>=' → logprob: -1.3300719261169434
    3. ' >=' → logprob: -2.0800719261169434
    4. 'start' → logprob: -2.4550719261169434
    5. 'is' → logprob: -2.5800719261169434
    6. ' has' → logprob: -3.9550719261169434
    7. ' start' → logprob: -4.330071926116943
    8. 'has' → logprob: -4.705071926116943
    9. ' can' → logprob: -5.455071926116943
    10. ' in' → logprob: -5.830071926116943

Token 488: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20211394131183624
    2. 'start' → logprob: -2.8271138668060303
    3. ' not' → logprob: -2.9521138668060303
    4. '>=' → logprob: -3.4521138668060303
    5. 'full' → logprob: -3.9521138668060303
    6. 'available' → logprob: -4.702114105224609
    7. 'non' → logprob: -5.577114105224609
    8. ' start' → logprob: -5.952114105224609
    9. ' full' → logprob: -6.327114105224609
    10. ' >=' → logprob: -6.827114105224609

Token 489: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.03746384382247925
    2. ' full' → logprob: -3.412463903427124
    3. 'exclude' → logprob: -6.287463665008545
    4. 'None' → logprob: -7.037463665008545
    5. ' None' → logprob: -7.662463665008545
    6. 'excluded' → logprob: -8.412464141845703
    7. 'start' → logprob: -9.412464141845703
    8. ' exclude' → logprob: -9.787464141845703
    9. ' ' → logprob: -10.162464141845703
    10. '
' → logprob: -10.537464141845703

Token 490: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8261128067970276
    2. ' for' → logprob: -1.5761127471923828
    3. '           ' → logprob: -2.451112747192383
    4. '(d' → logprob: -2.576112747192383
    5. '<|end|>' → logprob: -2.826112747192383
    6. 'd' → logprob: -3.451112747192383
    7. ',d' → logprob: -4.201112747192383
    8. ' (' → logprob: -4.451112747192383
    9. 'for' → logprob: -4.576112747192383
    10. '<|end|>' → logprob: -4.701112747192383

Token 491: '           ' (ID: 352)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.793045163154602
    2. '(' → logprob: -1.043045163154602
    3. '(d' → logprob: -1.793045163154602
    4. ' (' → logprob: -4.5430450439453125
    5. 'd' → logprob: -5.1680450439453125
    6. 'def' → logprob: -6.4180450439453125
    7. '(s' → logprob: -6.5430450439453125
    8. ',' → logprob: -6.7930450439453125
    9. 'start' → logprob: -6.7930450439453125
    10. '(
' → logprob: -7.2930450439453125

Token 492: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.044148873537778854
    2. 'for' → logprob: -3.2941489219665527
    3. '           ' → logprob: -5.169148921966553
    4. '   ' → logprob: -8.669148445129395
    5. '       ' → logprob: -9.419148445129395
    6. '	for' → logprob: -10.544148445129395
    7. '<|end|>' → logprob: -10.794148445129395
    8. 'd' → logprob: -11.044148445129395
    9. '
' → logprob: -11.044148445129395
    10. '            
' → logprob: -11.169148445129395

Token 493: ' If' (ID: 1843)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3486925959587097
    2. 'for' → logprob: -1.2236926555633545
    3. '   ' → logprob: -8.848692893981934
    4. 'd' → logprob: -9.848692893981934
    5. '
' → logprob: -11.223692893981934
    6. '           ' → logprob: -11.348692893981934
    7. '	for' → logprob: -11.973692893981934
    8. 'n' → logprob: -12.973692893981934
    9. ' i' → logprob: -13.098692893981934
    10. ')' → logprob: -13.223692893981934

Token 494: ' exclude' (ID: 39566)
  Prédit: 'exclude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exclude' → logprob: -0.09402500092983246
    2. ' exclude' → logprob: -2.719024896621704
    3. 'start' → logprob: -3.969024896621704
    4. ' start' → logprob: -5.344025135040283
    5. 'd' → logprob: -10.219024658203125
    6. ' ' → logprob: -11.094024658203125
    7. ' d' → logprob: -11.219024658203125
    8. '
' → logprob: -11.344024658203125
    9. 'excluding' → logprob: -12.219024658203125
    10. 'ex' → logprob: -12.344024658203125

Token 495: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.006082614883780479
    2. 'is' → logprob: -5.256082534790039
    3. ')' → logprob: -7.756082534790039
    4. '=' → logprob: -9.131082534790039
    5. '==' → logprob: -9.131082534790039
    6. '=None' → logprob: -9.631082534790039
    7. '!=' → logprob: -10.006082534790039
    8. '):
' → logprob: -11.131082534790039
    9. 'and' → logprob: -11.131082534790039
    10. ')is' → logprob: -11.506082534790039

Token 496: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.17015837132930756
    2. 'None' → logprob: -2.1701583862304688
    3. ' not' → logprob: -3.1701583862304688
    4. ' None' → logprob: -8.670158386230469
    5. 'exclude' → logprob: -9.545158386230469
    6. 'd' → logprob: -10.420158386230469
    7. 'excluded' → logprob: -10.920158386230469
    8. '0' → logprob: -12.420158386230469
    9. '	not' → logprob: -12.420158386230469
    10. 'none' → logprob: -12.545158386230469

Token 497: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.3438327843905427e-05
    2. ' None' → logprob: -11.00002384185791
    3. 'none' → logprob: -12.12502384185791
    4. '=None' → logprob: -14.62502384185791
    5. 'excluded' → logprob: -15.12502384185791
    6. '_None' → logprob: -16.375022888183594
    7. '(None' → logprob: -16.750022888183594
    8. '_none' → logprob: -16.875022888183594
    9. '#' → logprob: -17.750022888183594
    10. 'provided' → logprob: -17.875022888183594

Token 498: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14005661010742188
    2. 'and' → logprob: -2.140056610107422
    3. ',' → logprob: -5.515056610107422
    4. ':
' → logprob: -5.765056610107422
    5. ' is' → logprob: -6.640056610107422
    6. ' None' → logprob: -6.640056610107422
    7. 'None' → logprob: -6.890056610107422
    8. ':' → logprob: -7.015056610107422
    9. '=None' → logprob: -7.015056610107422
    10. '=' → logprob: -9.140056610107422

Token 499: ' exclude' (ID: 39566)
  Prédit: ' exclude'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exclude' → logprob: -0.28361448645591736
    2. 'exclude' → logprob: -2.15861439704895
    3. '           ' → logprob: -2.90861439704895
    4. ' return' → logprob: -3.40861439704895
    5. ' if' → logprob: -4.783614635467529
    6. 'return' → logprob: -5.033614635467529
    7. 'def' → logprob: -5.408614635467529
    8. ' None' → logprob: -5.408614635467529
    9. ' d' → logprob: -5.783614635467529
    10. 'd' → logprob: -5.908614635467529

Token 500: ' that' (ID: 484)
  Prédit: 'exclude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exclude' → logprob: -0.007390928920358419
    2. ' exclude' → logprob: -6.007390975952148
    3. '=' → logprob: -6.507390975952148
    4. ')' → logprob: -6.882390975952148
    5. 'ex' → logprob: -7.382390975952148
    6. 'd' → logprob: -7.382390975952148
    7. '[' → logprob: -7.757390975952148
    8. 'start' → logprob: -8.757390975952148
    9. 'excluded' → logprob: -8.882390975952148
    10. '(ex' → logprob: -8.882390975952148

Token 501: ' desk' (ID: 20794)
  Prédit: 'desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'desk' → logprob: -0.47302085161209106
    2. 'd' → logprob: -1.8480207920074463
    3. ' desk' → logprob: -1.8480207920074463
    4. '<|end|>' → logprob: -2.8480207920074463
    5. 'des' → logprob: -6.723021030426025
    6. ')' → logprob: -6.848021030426025
    7. '=' → logprob: -8.223020553588867
    8. '==' → logprob: -8.348020553588867
    9. '_d' → logprob: -8.723020553588867
    10. '.' → logprob: -8.723020553588867

Token 502: ' index' (ID: 3472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32706382870674133
    2. '       ' → logprob: -2.702063798904419
    3. '):
' → logprob: -2.827063798904419
    4. ':
' → logprob: -3.327063798904419
    5. '
' → logprob: -4.077064037322998
    6. ' if' → logprob: -4.202064037322998
    7. '   ' → logprob: -4.327064037322998
    8. ',' → logprob: -4.327064037322998
    9. ':' → logprob: -4.452064037322998
    10. ')' → logprob: -4.827064037322998

Token 503: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4173164963722229
    2. ':
' → logprob: -1.9173164367675781
    3. ':' → logprob: -2.667316436767578
    4. ' if' → logprob: -3.417316436767578
    5. '
' → logprob: -3.542316436767578
    6. '   ' → logprob: -4.167316436767578
    7. '       ' → logprob: -4.542316436767578
    8. '):
' → logprob: -4.792316436767578
    9. ',' → logprob: -4.917316436767578
    10. ' and' → logprob: -5.292316436767578

Token 504: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8615075349807739
    2. '):
' → logprob: -1.611507534980774
    3. ':
' → logprob: -2.1115074157714844
    4. '           ' → logprob: -2.7365074157714844
    5. ' if' → logprob: -3.2365074157714844
    6. '
' → logprob: -3.7365074157714844
    7. ',' → logprob: -3.8615074157714844
    8. ':' → logprob: -3.9865074157714844
    9. 'd' → logprob: -4.361507415771484
    10. 'def' → logprob: -4.361507415771484

Token 505: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38031724095344543
    2. 'for' (adapté à ' for') → logprob: -2.130317211151123
    3. ':' → logprob: -2.880317211151123
    4. ' ' → logprob: -3.505317211151123
    5. '           ' → logprob: -3.630317211151123
    6. '   ' → logprob: -3.755317211151123
    7. '(' → logprob: -4.630317211151123
    8. ')' → logprob: -4.880317211151123
    9. '       ' → logprob: -4.880317211151123
    10. ' (' → logprob: -5.505317211151123

Token 506: ' i' (ID: 575)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3209247589111328
    2. 'i' → logprob: -1.5709247589111328
    3. ' d' → logprob: -3.320924758911133
    4. ' i' → logprob: -3.570924758911133
    5. 'desk' → logprob: -6.820924758911133
    6. 'idx' → logprob: -7.445924758911133
    7. ' desk' → logprob: -8.195924758911133
    8. ' idx' → logprob: -8.820924758911133
    9. '   ' → logprob: -8.820924758911133
    10. 'x' → logprob: -8.820924758911133

Token 507: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1603136956691742
    2. 'in' → logprob: -1.9103137254714966
    3. ',' → logprob: -9.535313606262207
    4. '	in' → logprob: -12.535313606262207
    5. '=' → logprob: -13.160313606262207
    6. ',start' → logprob: -13.285313606262207
    7. ' ' → logprob: -13.535313606262207
    8. 'import' → logprob: -13.660313606262207
    9. ' ,' → logprob: -13.660313606262207
    10. ')' → logprob: -13.660313606262207

Token 508: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02329649217426777
    2. ' range' → logprob: -3.773296594619751
    3. 'start' → logprob: -10.273296356201172
    4. '(range' → logprob: -11.148296356201172
    5. ' start' → logprob: -14.648296356201172
    6. '	range' → logprob: -15.023296356201172
    7. '[start' → logprob: -15.523296356201172
    8. 'in' → logprob: -15.898296356201172
    9. ' xrange' → logprob: -15.898296356201172
    10. '
' → logprob: -16.148296356201172

Token 509: '(m' (ID: 2145)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.25369179248809814
    2. '(start' → logprob: -1.5036917924880981
    3. ' start' → logprob: -6.378691673278809
    4. '[start' → logprob: -10.628691673278809
    5. 'm' → logprob: -10.753691673278809
    6. '(m' → logprob: -12.003691673278809
    7. ' (' → logprob: -12.628691673278809
    8. '(' → logprob: -12.878691673278809
    9. '=start' → logprob: -13.003691673278809
    10. '	start' → logprob: -13.378691673278809

Token 510: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3497561812400818
    2. '):' → logprob: -1.2247562408447266
    3. ',' → logprob: -7.099756240844727
    4. '       ' → logprob: -8.474756240844727
    5. '   ' → logprob: -9.724756240844727
    6. '):
' → logprob: -9.724756240844727
    7. '<|end|>' → logprob: -10.099756240844727
    8. '):

' → logprob: -11.099756240844727
    9. ',start' → logprob: -11.349756240844727
    10. ':' → logprob: -11.474756240844727

Token 511: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1068999245762825
    2. '               ' → logprob: -2.8568999767303467
    3. '       ' → logprob: -3.9818999767303467
    4. ' if' → logprob: -4.356899738311768
    5. '<|end|>' → logprob: -4.731899738311768
    6. ':
' → logprob: -7.481899738311768
    7. '<|end|>' → logprob: -7.606899738311768
    8. '   ' → logprob: -7.606899738311768
    9. ':' → logprob: -7.856899738311768
    10. '	       ' → logprob: -7.856899738311768

Token 512: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5822051763534546
    2. 'if' (adapté à ' if') → logprob: -0.8322051763534546
    3. '               ' → logprob: -5.082205295562744
    4. '                   ' → logprob: -11.582204818725586
    5. '   ' → logprob: -11.707204818725586
    6. '	if' → logprob: -12.082204818725586
    7. '           ' → logprob: -12.207204818725586
    8. '	           ' → logprob: -12.457204818725586
    9. '<|end|>' → logprob: -13.457204818725586
    10. ')' → logprob: -14.207204818725586

Token 513: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1359802931547165
    2. ' i' → logprob: -2.6359803676605225
    3. 'des' → logprob: -3.7609803676605225
    4. 'len' → logprob: -4.010980129241943
    5. '(i' → logprob: -4.885980129241943
    6. ' len' → logprob: -5.760980129241943
    7. ' (' → logprob: -6.635980129241943
    8. ' desks' → logprob: -7.510980129241943
    9. '(len' → logprob: -7.760980129241943
    10. 'exclude' → logprob: -7.885980129241943

Token 514: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.632689893245697
    2. '!=' → logprob: -0.882689893245697
    3. '<|end|>' → logprob: -3.882689952850342
    4. ' and' → logprob: -4.382689952850342
    5. ')' → logprob: -4.882689952850342
    6. 'and' → logprob: -5.132689952850342
    7. ')!=' → logprob: -6.257689952850342
    8. '==' → logprob: -6.632689952850342
    9. ' ==' → logprob: -6.757689952850342
    10. 'i' → logprob: -7.882689952850342

Token 515: ' exclude' (ID: 39566)
  Prédit: 'exclude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exclude' → logprob: -0.0009114635176956654
    2. ' exclude' → logprob: -7.000911235809326
    3. '.exclude' → logprob: -17.625911712646484
    4. 'ex' → logprob: -17.750911712646484
    5. '   ' → logprob: -18.250911712646484
    6. '=' → logprob: -18.500911712646484
    7. '
' → logprob: -19.250911712646484
    8. '	ex' → logprob: -19.375911712646484
    9. 'excluded' → logprob: -19.500911712646484
    10. ' ' → logprob: -19.875911712646484

Token 516: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20598840713500977
    2. ':' → logprob: -2.0809884071350098
    3. ' or' → logprob: -3.3309884071350098
    4. '                   ' → logprob: -3.9559884071350098
    5. '               ' → logprob: -6.08098840713501
    6. '                       ' → logprob: -6.33098840713501
    7. 'continue' → logprob: -7.20598840713501
    8. 'or' → logprob: -7.58098840713501
    9. '           ' → logprob: -7.83098840713501
    10. ' continue' → logprob: -8.705987930297852

Token 517: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.46665456891059875
    2. ':
' → logprob: -1.2166545391082764
    3. ':' → logprob: -3.7166545391082764
    4. '               ' → logprob: -3.9666545391082764
    5. '                       ' → logprob: -4.2166547775268555
    6. 'continue' → logprob: -4.2166547775268555
    7. ' continue' → logprob: -6.4666547775268555
    8. '           ' → logprob: -7.2166547775268555
    9. ' or' → logprob: -7.7166547775268555
    10. '                  ' → logprob: -8.091654777526855

Token 518: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.10605855286121368
    2. '                   ' → logprob: -2.3560585975646973
    3. ' continue' → logprob: -5.856058597564697
    4. '                       ' → logprob: -6.106058597564697
    5. '               ' → logprob: -7.356058597564697
    6. '	continue' → logprob: -9.606058120727539
    7. '
' → logprob: -11.106058120727539
    8. 'contin' → logprob: -12.356058120727539
    9. '   ' → logprob: -12.731058120727539
    10. '           ' → logprob: -13.106058120727539

Token 519: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004682288039475679
    2. ' and' → logprob: -5.7546820640563965
    3. '
' → logprob: -7.1296820640563965
    4. '<|end|>' → logprob: -8.379682540893555
    5. ' if' → logprob: -8.879682540893555
    6. 'and' → logprob: -9.504682540893555
    7. '                
' → logprob: -10.004682540893555
    8. '           ' → logprob: -10.129682540893555
    9. ':
' → logprob: -10.379682540893555
    10. '                   ' → logprob: -10.504682540893555

Token 520: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007856834563426673
    2. ' and' → logprob: -7.500785827636719
    3. 'and' → logprob: -10.125785827636719
    4. '
' → logprob: -10.125785827636719
    5. ' if' → logprob: -10.125785827636719
    6. '<|end|>' → logprob: -10.375785827636719
    7. 'if' → logprob: -10.750785827636719
    8. '           ' → logprob: -11.375785827636719
    9. '                   ' → logprob: -11.625785827636719
    10. '                
' → logprob: -11.625785827636719

Token 521: ' if' (ID: 538)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7665398716926575
    2. ' if' → logprob: -1.3915398120880127
    3. 'if' (adapté à ' if') → logprob: -1.8915398120880127
    4. '               ' → logprob: -2.2665398120880127
    5. 'and' → logprob: -3.6415398120880127
    6. '           ' → logprob: -5.391540050506592
    7. 'len' → logprob: -7.016540050506592
    8. ' len' → logprob: -8.766539573669434
    9. ' or' → logprob: -9.391539573669434
    10. ',' → logprob: -10.266539573669434

Token 522: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00020413640595506877
    2. ' len' → logprob: -8.500204086303711
    3. '(len' → logprob: -14.375204086303711
    4. '	len' → logprob: -17.62520408630371
    5. '<len' → logprob: -19.62520408630371
    6. '   ' → logprob: -19.62520408630371
    7. '=len' → logprob: -20.62520408630371
    8. '[len' → logprob: -21.00020408630371
    9. ' ' → logprob: -21.00020408630371
    10. ',len' → logprob: -21.62520408630371

Token 523: '(des' (ID: 61239)
  Prédit: '(des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(des' → logprob: -0.000561373308300972
    2. 'des' → logprob: -7.500561237335205
    3. '(' → logprob: -12.500561714172363
    4. '(d' → logprob: -12.625561714172363
    5. ' (' → logprob: -14.625561714172363
    6. ')' → logprob: -15.125561714172363
    7. '(dis' → logprob: -16.000560760498047
    8. '[' → logprob: -16.000560760498047
    9. '(
' → logprob: -16.125560760498047
    10. '```' → logprob: -16.125560760498047

Token 524: 'ks' (ID: 2484)
  Prédit: 'ks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -5.512236498361744e-07
    2. 'k' → logprob: -15.500000953674316
    3. 'cks' → logprob: -15.500000953674316
    4. 's' → logprob: -16.0
    5. ' ks' → logprob: -18.25
    6. 'ktops' → logprob: -19.625
    7. '[' → logprob: -19.875
    8. '.ks' → logprob: -20.125
    9. 'KS' → logprob: -20.5
    10. 'kses' → logprob: -20.75

Token 525: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. ')' → logprob: -13.125003814697266
    3. 'i' → logprob: -13.125003814697266
    4. '[' → logprob: -17.375003814697266
    5. '[
' → logprob: -17.875003814697266
    6. '   ' → logprob: -17.875003814697266
    7. ')[' → logprob: -18.000003814697266
    8. ' [' → logprob: -18.000003814697266
    9. '
' → logprob: -18.500003814697266
    10. '```' → logprob: -18.625003814697266

Token 526: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014320391230285168
    2. ')<' → logprob: -4.889320373535156
    3. '])' → logprob: -5.014320373535156
    4. '）' → logprob: -10.889320373535156
    5. ']<' → logprob: -11.139320373535156
    6. ' )' → logprob: -12.264320373535156
    7. ']' → logprob: -12.514320373535156
    8. '})' → logprob: -12.889320373535156
    9. '<' → logprob: -13.264320373535156
    10. ')]' → logprob: -14.389320373535156

Token 527: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.256564199924469
    2. ' <' → logprob: -1.5065641403198242
    3. '<m' → logprob: -6.131564140319824
    4. ')' → logprob: -6.631564140319824
    5. ')<' → logprob: -7.756564140319824
    6. '<len' → logprob: -8.506564140319824
    7. '<int' → logprob: -9.006564140319824
    8. '<size' → logprob: -9.256564140319824
    9. '<c' → logprob: -9.506564140319824
    10. '<n' → logprob: -9.881564140319824

Token 528: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007223221473395824
    2. ' c' → logprob: -7.250722408294678
    3. '   ' → logprob: -11.62572193145752
    4. '=' → logprob: -14.00072193145752
    5. '
' → logprob: -14.37572193145752
    6. '	c' → logprob: -14.87572193145752
    7. ' ' → logprob: -15.62572193145752
    8. '  ' → logprob: -15.62572193145752
    9. '=c' → logprob: -15.62572193145752
    10. '```' → logprob: -15.62572193145752

Token 529: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3883926570415497
    2. ':' → logprob: -1.138392686843872
    3. '):
' → logprob: -7.013392448425293
    4. ':return' → logprob: -8.388392448425293
    5. '):' → logprob: -8.638392448425293
    6. '               ' → logprob: -9.763392448425293
    7. '():
' → logprob: -9.888392448425293
    8. '           ' → logprob: -10.138392448425293
    9. '<|end|>' → logprob: -10.638392448425293
    10. ':
' → logprob: -11.513392448425293

Token 530: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05467541515827179
    2. ' return' → logprob: -3.804675340652466
    3. 'return' → logprob: -3.929675340652466
    4. '                       ' → logprob: -5.304675579071045
    5. '               ' → logprob: -5.554675579071045
    6. ':
' → logprob: -7.179675579071045
    7. ':return' → logprob: -7.429675579071045
    8. '           ' → logprob: -7.804675579071045
    9. '<|end|>' → logprob: -8.054675102233887
    10. ',' → logprob: -9.679675102233887

Token 531: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08560401201248169
    2. ' return' → logprob: -2.835603952407837
    3. '                   ' → logprob: -3.835603952407837
    4. '                       ' → logprob: -6.460604190826416
    5. '               ' → logprob: -8.585603713989258
    6. '	return' → logprob: -11.335603713989258
    7. ':return' → logprob: -12.960603713989258
    8. '{return' → logprob: -13.460603713989258
    9. '           ' → logprob: -13.835603713989258
    10. '   ' → logprob: -13.835603713989258

Token 532: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00861456897109747
    2. ' i' → logprob: -4.758614540100098
    3. '	i' → logprob: -19.508615493774414
    4. '[i' → logprob: -20.383615493774414
    5. '(i' → logprob: -22.008615493774414
    6. '{i' → logprob: -22.383615493774414
    7. ',i' → logprob: -22.633615493774414
    8. '=i' → logprob: -22.758615493774414
    9. '*i' → logprob: -22.758615493774414
    10. '_i' → logprob: -23.008615493774414

Token 533: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7556896209716797
    2. '<|end|>' → logprob: -0.8806896209716797
    3. 'None' → logprob: -2.7556896209716797
    4. 'return' → logprob: -3.7556896209716797
    5. ' return' → logprob: -4.63068962097168
    6. '           ' → logprob: -5.63068962097168
    7. ' None' → logprob: -6.13068962097168
    8. '        
' → logprob: -6.25568962097168
    9. '
' → logprob: -6.25568962097168
    10. '        ' → logprob: -6.50568962097168

Token 534: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 535: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6698637008666992
    2. 'None' → logprob: -0.9198637008666992
    3. '       ' → logprob: -2.919863700866699
    4. ' return' → logprob: -3.919863700866699
    5. ' None' → logprob: -4.669863700866699
    6. '   ' → logprob: -6.294863700866699
    7. '           ' → logprob: -6.669863700866699
    8. '<|end|>' → logprob: -6.794863700866699
    9. 'none' → logprob: -7.794863700866699
    10. '	return' → logprob: -8.0448637008667

Token 536: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004664193547796458
    2. '-' → logprob: -7.750466346740723
    3. ' None' → logprob: -10.250466346740723
    4. ' -' → logprob: -15.250466346740723
    5. '   ' → logprob: -16.37546730041504
    6. '_None' → logprob: -17.25046730041504
    7. 'm' → logprob: -18.50046730041504
    8. '-none' → logprob: -18.50046730041504
    9. 'none' → logprob: -18.87546730041504
    10. '(None' → logprob: -19.25046730041504

Token 537: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10843608528375626
    2. 'while' → logprob: -3.108436107635498
    3. '   ' → logprob: -3.733436107635498
    4. '<|end|>' → logprob: -4.483436107635498
    5. '        
' → logprob: -4.858436107635498
    6. 'def' → logprob: -5.108436107635498
    7. ' while' → logprob: -5.233436107635498
    8. '```' → logprob: -7.108436107635498
    9. '
' → logprob: -7.608436107635498
    10. '    
' → logprob: -7.608436107635498

Token 539: ' def' (ID: 1056)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.020857397466897964
    2. '       ' → logprob: -4.145857334136963
    3. ' while' → logprob: -5.395857334136963
    4. 'for' → logprob: -8.520857810974121
    5. '   ' → logprob: -10.520857810974121
    6. '	while' → logprob: -11.270857810974121
    7. '        
' → logprob: -11.395857810974121
    8. 'def' (adapté à ' def') → logprob: -11.645857810974121
    9. '```' → logprob: -11.895857810974121
    10. 'next' → logprob: -12.645857810974121

Token 540: ' find' (ID: 1646)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.8391097187995911
    2. 'process' → logprob: -0.9641097187995911
    3. ' solve' → logprob: -3.8391096591949463
    4. 'access' → logprob: -3.8391096591949463
    5. ' access' → logprob: -4.089109897613525
    6. 'ev' → logprob: -4.339109897613525
    7. ' get' → logprob: -4.464109897613525
    8. 'solve' → logprob: -4.464109897613525
    9. 'simulate' → logprob: -4.589109897613525
    10. 'get' → logprob: -4.714109897613525

Token 541: '_l' (ID: 1478)
  Prédit: '_non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.08483782410621643
    2. '_book' → logprob: -3.4598379135131836
    3. '_l' → logprob: -4.334837913513184
    4. '_d' → logprob: -5.334837913513184
    5. '_le' → logprob: -5.459837913513184
    6. '_empty' → logprob: -5.584837913513184
    7. '_s' → logprob: -5.834837913513184
    8. '_ev' → logprob: -5.834837913513184
    9. '_free' → logprob: -5.959837913513184
    10. '_re' → logprob: -6.334837913513184

Token 542: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.001360593712888658
    2. 'RU' → logprob: -7.5013604164123535
    3. 'r' → logprob: -7.7513604164123535
    4. 'ruk' → logprob: -9.251360893249512
    5. 'east' → logprob: -10.126360893249512
    6. 'e' → logprob: -10.501360893249512
    7. 'rw' → logprob: -10.876360893249512
    8. 'run' → logprob: -11.251360893249512
    9. '_ru' → logprob: -11.251360893249512
    10. '```' → logprob: -11.251360893249512

Token 543: '_on' (ID: 10053)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6168291568756104
    2. '_d' → logprob: -1.9918291568756104
    3. '(d' → logprob: -2.2418291568756104
    4. '()' → logprob: -2.4918291568756104
    5. '(' → logprob: -2.8668291568756104
    6. '():
' → logprob: -3.2418291568756104
    7. '_' → logprob: -3.4918291568756104
    8. '(D' → logprob: -6.241828918457031
    9. 'd' → logprob: -6.741828918457031
    10. '_book' → logprob: -6.866828918457031

Token 544: '_d' (ID: 1565)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6940212249755859
    2. '(' → logprob: -1.194021224975586
    3. '0' → logprob: -1.694021224975586
    4. '_d' → logprob: -4.819021224975586
    5. 'D' → logprob: -6.069021224975586
    6. 'desk' → logprob: -6.819021224975586
    7. ' d' → logprob: -7.069021224975586
    8. 'def' → logprob: -7.569021224975586
    9. '(d' → logprob: -8.819021224975586
    10. ' ' → logprob: -9.069021224975586

Token 545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0634695291519165
    2. 'esk' → logprob: -2.813469409942627
    3. 'sk' → logprob: -7.313469409942627
    4. 'es' → logprob: -7.438469409942627
    5. 'esc' → logprob: -9.563469886779785
    6. 'ek' → logprob: -10.313469886779785
    7. 'desk' → logprob: -10.438469886779785
    8. 'e' → logprob: -10.438469886779785
    9. 'ex' → logprob: -11.563469886779785
    10. 'eks' → logprob: -12.188469886779785

Token 546: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06203524023294449
    2. '():
' → logprob: -2.812035322189331
    3. '()' → logprob: -10.31203556060791
    4. ' ():' → logprob: -10.93703556060791
    5. '():
' → logprob: -12.06203556060791
    6. '():

' → logprob: -12.18703556060791
    7. '(' → logprob: -12.43703556060791
    8. '(d' → logprob: -14.56203556060791
    9. '):' → logprob: -14.93703556060791
    10. '()):
' → logprob: -15.43703556060791

Token 547: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1488240659236908
    2. '   ' → logprob: -2.1488239765167236
    3. ' return' → logprob: -4.398824214935303
    4. 'return' → logprob: -5.398824214935303
    5. '           ' → logprob: -6.398824214935303
    6. '    
' → logprob: -6.398824214935303
    7. '        
' → logprob: -7.773824214935303
    8. '	return' → logprob: -8.523823738098145
    9. '  
' → logprob: -9.023823738098145
    10. ' ' → logprob: -9.023823738098145

Token 548: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24688799679279327
    2. '   ' → logprob: -1.8718880414962769
    3. ' return' → logprob: -3.3718879222869873
    4. '       ' → logprob: -3.6218879222869873
    5. 'if' → logprob: -5.996888160705566
    6. 'for' → logprob: -7.871888160705566
    7. ' if' → logprob: -7.871888160705566
    8. '
' → logprob: -8.246888160705566
    9. '	return' → logprob: -8.621888160705566
    10. ' for' → logprob: -9.121888160705566

Token 549: ' L' (ID: 451)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08032192289829254
    2. '       ' → logprob: -3.455322027206421
    3. 'if' → logprob: -3.830322027206421
    4. ' return' → logprob: -4.205321788787842
    5. 'for' → logprob: -5.205321788787842
    6. ' if' → logprob: -6.955321788787842
    7. '   ' → logprob: -6.955321788787842
    8. 'while' → logprob: -7.080321788787842
    9. ' for' → logprob: -7.830321788787842
    10. '           ' → logprob: -8.205322265625

Token 550: 'RU' (ID: 63252)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.253930687904358
    2. 'RU' → logprob: -1.503930687904358
    3. 'if' → logprob: -1.878930687904358
    4. 'r' → logprob: -2.0039305686950684
    5. 'ru' → logprob: -2.0039305686950684
    6. '   ' → logprob: -3.5039305686950684
    7. 'R' → logprob: -4.628930568695068
    8. 'def' → logprob: -4.878930568695068
    9. '       ' → logprob: -5.128930568695068
    10. 'd' → logprob: -5.628930568695068

Token 551: ' book' (ID: 2392)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6445252299308777
    2. 'return' → logprob: -1.8945252895355225
    3. '=' → logprob: -2.2695252895355225
    4. 'd' → logprob: -3.3945252895355225
    5. ' return' → logprob: -3.6445252895355225
    6. '   ' → logprob: -3.7695252895355225
    7. '       ' → logprob: -3.8945252895355225
    8. '()' → logprob: -4.019525051116943
    9. '[' → logprob: -4.644525051116943
    10. ' if' → logprob: -4.644525051116943

Token 552: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4312910735607147
    2. '=' → logprob: -1.056291103363037
    3. 'return' → logprob: -6.556291103363037
    4. '           ' → logprob: -8.181290626525879
    5. ':' → logprob: -8.681290626525879
    6. ' return' → logprob: -8.931290626525879
    7. '   ' → logprob: -9.056290626525879
    8. ',' → logprob: -9.556290626525879
    9. '       ' → logprob: -9.681290626525879
    10. 'book' → logprob: -10.431290626525879

Token 553: ' left' (ID: 3561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12694627046585083
    2. ' d' → logprob: -2.126946210861206
    3. '   ' → logprob: -12.126946449279785
    4. '           ' → logprob: -12.876946449279785
    5. '       ' → logprob: -13.001946449279785
    6. ' ' → logprob: -13.126946449279785
    7. 'None' → logprob: -13.376946449279785
    8. ' None' → logprob: -13.501946449279785
    9. '    ' → logprob: -13.876946449279785
    10. '	d' → logprob: -14.626946449279785

Token 554: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.0879029631614685
    2. 'end' → logprob: -3.0879030227661133
    3. '0' → logprob: -3.8379030227661133
    4. '[' → logprob: -4.837903022766113
    5. ']' → logprob: -5.462903022766113
    6. ')' → logprob: -6.337903022766113
    7. '()' → logprob: -6.962903022766113
    8. '   ' → logprob: -7.087903022766113
    9. '```' → logprob: -8.212903022766113
    10. ' ' → logprob: -8.587903022766113

Token 555: ' in' (ID: 306)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6231957674026489
    2. 'd' → logprob: -0.9981957674026489
    3. ')' → logprob: -3.2481956481933594
    4. '(d' → logprob: -3.7481956481933594
    5. ' d' → logprob: -4.873195648193359
    6. '<|end|>' → logprob: -4.998195648193359
    7. ']' → logprob: -5.748195648193359
    8. ' in' → logprob: -5.873195648193359
    9. '()
' → logprob: -5.998195648193359
    10. '(' → logprob: -6.248195648193359

Token 556: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.1689596148207784e-05
    2. ' d' → logprob: -9.875051498413086
    3. '
' → logprob: -15.625051498413086
    4. '           ' → logprob: -17.625051498413086
    5. '   ' → logprob: -18.250051498413086
    6. '```' → logprob: -18.250051498413086
    7. '`' → logprob: -18.375051498413086
    8. 'the' → logprob: -18.625051498413086
    9. '	d' → logprob: -19.250051498413086
    10. '_d' → logprob: -19.250051498413086

Token 557: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024894187226891518
    2. 'l' → logprob: -3.8998942375183105
    3. '_l' → logprob: -5.5248942375183105
    4. 'd' → logprob: -8.399893760681152
    5. 'r' → logprob: -9.524893760681152
    6. '_' → logprob: -11.024893760681152
    7. 'f' → logprob: -11.649893760681152
    8. 'q' → logprob: -11.899893760681152
    9. '```' → logprob: -12.399893760681152
    10. '_r' → logprob: -12.399893760681152

Token 558: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.7596843838691711
    2. 'd' → logprob: -1.2596843242645264
    3. '_d' → logprob: -1.5096843242645264
    4. ')' → logprob: -4.2596845626831055
    5. '<|end|>' → logprob: -4.8846845626831055
    6. 'l' → logprob: -6.2596845626831055
    7. '   ' → logprob: -7.5096845626831055
    8. '[' → logprob: -7.5096845626831055
    9. 'def' → logprob: -7.7596845626831055
    10. ' ' → logprob: -8.134684562683105

Token 559: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0025106200482696295
    2. 'r' → logprob: -6.1275105476379395
    3. 'l' → logprob: -8.752511024475098
    4. 'rl' → logprob: -10.377511024475098
    5. 'RU' → logprob: -10.627511024475098
    6. 'd' → logprob: -11.127511024475098
    7. 'u' → logprob: -11.127511024475098
    8. 'ру' → logprob: -11.252511024475098
    9. 'lu' → logprob: -11.502511024475098
    10. 'fu' → logprob: -12.127511024475098

Token 560: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01726631075143814
    2. '<|end|>' → logprob: -4.267266273498535
    3. ' if' → logprob: -7.142266273498535
    4. '
' → logprob: -7.767266273498535
    5. '.peek' → logprob: -8.142266273498535
    6. ' ' → logprob: -8.267266273498535
    7. '   ' → logprob: -8.642266273498535
    8. '.p' → logprob: -8.642266273498535
    9. '<|end|>' → logprob: -9.017266273498535
    10. '```' → logprob: -9.392266273498535

Token 561: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9106845259666443
    2. '<|end|>' → logprob: -1.410684585571289
    3. '[' → logprob: -2.035684585571289
    4. '()' → logprob: -2.910684585571289
    5. '
' → logprob: -3.285684585571289
    6. '       ' → logprob: -3.410684585571289
    7. '           ' → logprob: -4.285684585571289
    8. 'return' → logprob: -4.535684585571289
    9. '<|end|>' → logprob: -4.535684585571289
    10. ' return' → logprob: -4.660684585571289

Token 562: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4993216097354889
    2. 'return' → logprob: -0.9993215799331665
    3. ' return' → logprob: -3.749321699142456
    4. 'if' (adapté à ' if') → logprob: -7.374321460723877
    5. ' if' → logprob: -7.374321460723877
    6. '       ' → logprob: -9.499321937561035
    7. '           ' → logprob: -9.999321937561035
    8. '
' → logprob: -11.624321937561035
    9. '	return' → logprob: -11.749321937561035
    10. ' ' → logprob: -13.499321937561035

Token 563: ' d' (ID: 272)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.926345705986023
    2. 'd' → logprob: -1.176345705986023
    3. 'len' → logprob: -2.0513458251953125
    4. 'not' → logprob: -2.5513458251953125
    5. ' d' → logprob: -3.0513458251953125
    6. ' len' → logprob: -3.1763458251953125
    7. '   ' → logprob: -11.551345825195312
    8. ' ' → logprob: -11.676345825195312
    9. '(len' → logprob: -13.051345825195312
    10. '  ' → logprob: -14.051345825195312

Token 564: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04154300317168236
    2. 'len' → logprob: -3.5415430068969727
    3. '_len' → logprob: -4.666543006896973
    4. 'l' → logprob: -7.791543006896973
    5. ' len' → logprob: -8.166543006896973
    6. '(len' → logprob: -8.416543006896973
    7. '_l' → logprob: -8.416543006896973
    8. '_' → logprob: -8.541543006896973
    9. '```' → logprob: -8.666543006896973
    10. '[len' → logprob: -8.916543006896973

Token 565: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.8789383830153383e-05
    2. '_len' → logprob: -11.250019073486328
    3. 'l' → logprob: -12.250019073486328
    4. 'len' → logprob: -14.750019073486328
    5. '_lr' → logprob: -15.500019073486328
    6. '_' → logprob: -16.625019073486328
    7. '   ' → logprob: -17.125019073486328
    8. '```' → logprob: -17.125019073486328
    9. '_L' → logprob: -17.250019073486328
    10. '_length' → logprob: -17.625019073486328

Token 566: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0017940625548362732
    2. 'r' → logprob: -6.75179386138916
    3. 'l' → logprob: -8.25179386138916
    4. 'u' → logprob: -8.62679386138916
    5. 'RU' → logprob: -10.25179386138916
    6. '_ru' → logprob: -11.12679386138916
    7. '_l' → logprob: -11.25179386138916
    8. 'rl' → logprob: -11.37679386138916
    9. 'ur' → logprob: -11.75179386138916
    10. 'en' → logprob: -11.75179386138916

Token 567: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08795154094696045
    2. '):' → logprob: -2.58795166015625
    3. ')' → logprob: -5.83795166015625
    4. '```' → logprob: -6.33795166015625
    5. 'len' → logprob: -6.46295166015625
    6. ':
' → logprob: -7.33795166015625
    7. ':return' → logprob: -7.33795166015625
    8. ']:' → logprob: -8.58795166015625
    9. 'else' → logprob: -8.71295166015625
    10. '[' → logprob: -9.08795166015625

Token 568: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1260538101196289
    2. '           ' → logprob: -2.501053810119629
    3. 'return' → logprob: -4.251053810119629
    4. ':
' → logprob: -4.626053810119629
    5. ' return' → logprob: -5.126053810119629
    6. ':' → logprob: -6.001053810119629
    7. '       ' → logprob: -6.251053810119629
    8. ':return' → logprob: -6.626053810119629
    9. '```' → logprob: -8.001053810119629
    10. '[' → logprob: -9.376053810119629

Token 569: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02357119880616665
    2. ' return' → logprob: -3.773571252822876
    3. '                   ' → logprob: -8.523571014404297
    4. '               ' → logprob: -9.148571014404297
    5. '           ' → logprob: -11.398571014404297
    6. '   ' → logprob: -12.523571014404297
    7. '	return' → logprob: -12.648571014404297
    8. ':return' → logprob: -13.523571014404297
    9. '{return' → logprob: -14.273571014404297
    10. '       ' → logprob: -15.898571014404297

Token 570: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006715370807796717
    2. ' d' → logprob: -5.006715297698975
    3. '	d' → logprob: -20.131715774536133
    4. '   ' → logprob: -21.006715774536133
    5. '_d' → logprob: -21.381715774536133
    6. ' ' → logprob: -21.506715774536133
    7. '(d' → logprob: -22.006715774536133
    8. 'None' → logprob: -22.006715774536133
    9. ')d' → logprob: -23.006715774536133
    10. '0' → logprob: -23.506715774536133

Token 571: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011047330917790532
    2. '[' → logprob: -7.126104831695557
    3. '0' → logprob: -8.876104354858398
    4. '_token' → logprob: -10.751104354858398
    5. ' ' → logprob: -10.751104354858398
    6. '_tokens' → logprob: -10.876104354858398
    7. 'd' → logprob: -11.126104354858398
    8. 'l' → logprob: -11.126104354858398
    9. '   ' → logprob: -11.501104354858398
    10. 'x' → logprob: -12.001104354858398

Token 572: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.5048530030981055e-06
    2. 'l' → logprob: -14.125001907348633
    3. '[' → logprob: -14.375001907348633
    4. '.l' → logprob: -17.625001907348633
    5. '._' → logprob: -17.875001907348633
    6. 'd' → logprob: -18.000001907348633
    7. '_lr' → logprob: -18.125001907348633
    8. '```' → logprob: -18.125001907348633
    9. '[-' → logprob: -18.500001907348633
    10. '_d' → logprob: -18.625001907348633

Token 573: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -9.253090865968261e-06
    2. 'ру' → logprob: -12.625009536743164
    3. '_ru' → logprob: -13.375009536743164
    4. 'rl' → logprob: -13.500009536743164
    5. 'r' → logprob: -13.500009536743164
    6. 'lu' → logprob: -14.625009536743164
    7. 'RU' → logprob: -14.875009536743164
    8. 'u' → logprob: -15.125009536743164
    9. ' ru' → logprob: -16.750009536743164
    10. '1' → logprob: -16.750009536743164

Token 574: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '.p' → logprob: -15.000000953674316
    3. '0' → logprob: -17.0
    4. 'p' → logprob: -17.625
    5. '   ' → logprob: -18.0
    6. '```' → logprob: -18.125
    7. ' [' → logprob: -18.625
    8. '[
' → logprob: -20.125
    9. 'left' → logprob: -20.25
    10. ' ' → logprob: -20.5

Token 575: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '[' → logprob: -16.500001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '```' → logprob: -17.875001907348633
    6. '00' → logprob: -18.750001907348633
    7. ']' → logprob: -19.187501907348633
    8. ')' → logprob: -19.687501907348633
    9. '۰' → logprob: -19.687501907348633
    10. '  ' → logprob: -19.687501907348633

Token 576: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015997765585780144
    2. ')' → logprob: -5.140997886657715
    3. '<|end|>' → logprob: -5.515997886657715
    4. '}' → logprob: -5.765997886657715
    5. ']
' → logprob: -6.015997886657715
    6. '']' → logprob: -9.015997886657715
    7. '<|end|>' → logprob: -9.140997886657715
    8. '()' → logprob: -10.015997886657715
    9. '   ' → logprob: -10.515997886657715
    10. '}
' → logprob: -10.640997886657715

Token 577: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 578: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09218316525220871
    2. '<|end|>' → logprob: -3.0921831130981445
    3. 'return' (adapté à ' return') → logprob: -3.9671831130981445
    4. '
' → logprob: -4.8421831130981445
    5. 'else' → logprob: -5.0921831130981445
    6. ' else' → logprob: -6.2171831130981445
    7. '<|end|>' → logprob: -6.7171831130981445
    8. '           ' → logprob: -6.8421831130981445
    9. '   ' → logprob: -6.8421831130981445
    10. '        
' → logprob: -7.0921831130981445

Token 579: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.128163257315464e-07
    2. ' None' → logprob: -15.25
    3. '(None' → logprob: -20.375
    4. '_None' → logprob: -21.625
    5. '   ' → logprob: -22.375
    6. 'none' → logprob: -22.5
    7. ',None' → logprob: -23.0
    8. '0' → logprob: -23.0
    9. '=None' → logprob: -23.5
    10. '[]' → logprob: -25.375

Token 580: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 581: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.38125962018966675
    2. '       ' → logprob: -1.3812596797943115
    3. '   ' → logprob: -3.1312596797943115
    4. 'for' → logprob: -4.756259441375732
    5. ' while' → logprob: -4.756259441375732
    6. 'def' → logprob: -5.381259441375732
    7. '```' → logprob: -9.63125991821289
    8. ' for' → logprob: -9.75625991821289
    9. '	while' → logprob: -10.50625991821289
    10. '           ' → logprob: -10.63125991821289

Token 582: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1501830369234085
    2. 'while' → logprob: -2.2751829624176025
    3. 'def' (adapté à ' def') → logprob: -3.9001829624176025
    4. ' while' → logprob: -4.650183200836182
    5. '   ' → logprob: -5.275183200836182
    6. 'for' → logprob: -7.025183200836182
    7. '        
' → logprob: -8.025182723999023
    8. '
' → logprob: -8.400182723999023
    9. ' for' → logprob: -9.400182723999023
    10. 'While' → logprob: -10.025182723999023

Token 583: ' update' (ID: 4027)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.31324777007102966
    2. 'update' → logprob: -1.438247799873352
    3. 'main' → logprob: -4.9382476806640625
    4. 'solve' → logprob: -4.9382476806640625
    5. 'move' → logprob: -5.3132476806640625
    6. ' process' → logprob: -5.6882476806640625
    7. 'request' → logprob: -6.5632476806640625
    8. ' update' → logprob: -6.9382476806640625
    9. 'access' → logprob: -7.1882476806640625
    10. 'remove' → logprob: -7.3132476806640625

Token 584: '_l' (ID: 1478)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.006631051655858755
    2. '_l' → logprob: -5.381630897521973
    3. 'd' → logprob: -7.256630897521973
    4. '_' → logprob: -7.756630897521973
    5. '_book' → logprob: -8.131630897521973
    6. '_access' → logprob: -8.631630897521973
    7. '_lr' → logprob: -8.881630897521973
    8. '_usage' → logprob: -9.756630897521973
    9. '(_' → logprob: -10.631630897521973
    10. '(d' → logprob: -10.631630897521973

Token 585: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.14332610368728638
    2. 'RU' → logprob: -2.0183260440826416
    3. '_ru' → logprob: -7.643326282501221
    4. 'r' → logprob: -9.143325805664062
    5. 'Ru' → logprob: -11.018325805664062
    6. 'R' → logprob: -11.143325805664062
    7. '_r' → logprob: -11.268325805664062
    8. '{' → logprob: -12.393325805664062
    9. '_' → logprob: -13.143325805664062
    10. '1' → logprob: -13.268325805664062

Token 586: '(book' (ID: 56932)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.11094062775373459
    2. '(book' → logprob: -2.36094069480896
    3. '(' → logprob: -4.860940456390381
    4. '(b' → logprob: -6.235940456390381
    5. '_d' → logprob: -7.860940456390381
    6. '_(' → logprob: -8.235940933227539
    7. '_' → logprob: -9.235940933227539
    8. '(_' → logprob: -9.360940933227539
    9. '_book' → logprob: -10.360940933227539
    10. ' (' → logprob: -10.485940933227539

Token 587: '):
' (ID: 1883)
  Prédit: '(book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(book' → logprob: -1.1520439386367798
    2. '(b' → logprob: -1.4020439386367798
    3. '_location' → logprob: -1.9020439386367798
    4. ')(' → logprob: -2.1520438194274902
    5. ')' → logprob: -2.5270438194274902
    6. '):
' → logprob: -3.5270438194274902
    7. ',' → logprob: -4.40204381942749
    8. '   ' → logprob: -4.52704381942749
    9. '):' → logprob: -4.90204381942749
    10. ')_' → logprob: -5.15204381942749

Token 588: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14647036790847778
    2. '():
' → logprob: -3.021470308303833
    3. ':
' → logprob: -3.396470308303833
    4. '       ' → logprob: -3.646470308303833
    5. ':' → logprob: -4.021470546722412
    6. '():' → logprob: -5.396470546722412
    7. '(d' → logprob: -6.521470546722412
    8. '):
' → logprob: -6.646470546722412
    9. 'd' → logprob: -7.271470546722412
    10. '(' → logprob: -7.271470546722412

Token 589: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2720690965652466
    2. 'if' → logprob: -2.022068977355957
    3. ' if' → logprob: -2.272068977355957
    4. '       ' → logprob: -6.022068977355957
    5. '           ' → logprob: -8.272068977355957
    6. 'try' → logprob: -10.522068977355957
    7. '
' → logprob: -12.272068977355957
    8. 'd' → logprob: -13.147068977355957
    9. '	if' → logprob: -13.397068977355957
    10. '```' → logprob: -14.022068977355957

Token 590: ' Move' (ID: 25485)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038734059780836105
    2. '   ' → logprob: -3.788733959197998
    3. '       ' → logprob: -4.288733959197998
    4. ' if' → logprob: -6.788733959197998
    5. '           ' → logprob: -7.788733959197998
    6. 'try' → logprob: -9.163734436035156
    7. '
' → logprob: -14.913734436035156
    8. '	if' → logprob: -15.163734436035156
    9. 'If' → logprob: -15.288734436035156
    10. ' ' → logprob: -15.413734436035156

Token 591: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.3191492557525635
    2. '(book' → logprob: -1.3191492557525635
    3. 'the' → logprob: -5.819149017333984
    4. ' book' → logprob: -6.069149017333984
    5. 'd' → logprob: -8.194149017333984
    6. '_book' → logprob: -9.069149017333984
    7. '	book' → logprob: -9.194149017333984
    8. 'b' → logprob: -10.944149017333984
    9. '(b' → logprob: -11.069149017333984
    10. 'to' → logprob: -11.319149017333984

Token 592: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.22022175788879395
    2. ' to' → logprob: -1.720221757888794
    3. '_to' → logprob: -4.720221519470215
    4. 'from' → logprob: -5.095221519470215
    5. '(book' → logprob: -5.845221519470215
    6. ' from' → logprob: -9.095221519470215
    7. '   ' → logprob: -9.095221519470215
    8. 'd' → logprob: -9.595221519470215
    9. 'book' → logprob: -9.845221519470215
    10. '           ' → logprob: -10.220221519470215

Token 593: ' MR' (ID: 50009)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.19685015082359314
    2. 'the' → logprob: -2.071850061416626
    3. ' the' → logprob: -3.571850061416626
    4. 'end' → logprob: -4.446850299835205
    5. ' d' → logprob: -4.571850299835205
    6. 'book' → logprob: -6.571850299835205
    7. ' ' → logprob: -7.571850299835205
    8. ' end' → logprob: -8.196849822998047
    9. '   ' → logprob: -9.696849822998047
    10. '(d' → logprob: -9.821849822998047

Token 594: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -3.128163257315464e-07
    2. ' U' → logprob: -16.375
    3. '(end' → logprob: -16.75
    4. ' end' → logprob: -16.875
    5. 'end' → logprob: -17.0
    6. '(' → logprob: -17.0
    7. '(U' → logprob: -17.0
    8. 'End' → logprob: -17.625
    9. 'E' → logprob: -17.625
    10. '_end' → logprob: -18.125

Token 595: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.190650075674057
    2. '(' → logprob: -2.06564998626709
    3. '   ' → logprob: -3.94064998626709
    4. 'd' → logprob: -4.94064998626709
    5. ' (' → logprob: -5.06564998626709
    6. '(
' → logprob: -5.81564998626709
    7. ',' → logprob: -6.19064998626709
    8. '(book' → logprob: -6.19064998626709
    9. ' if' → logprob: -6.44064998626709
    10. '       ' → logprob: -6.81564998626709

Token 596: 'end' (ID: 419)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5179990530014038
    2. 'd' → logprob: -1.2679990530014038
    3. ')
' → logprob: -2.8929991722106934
    4. 'end' → logprob: -4.267999172210693
    5. ')d' → logprob: -4.267999172210693
    6. ' d' → logprob: -4.892999172210693
    7. '):' → logprob: -5.267999172210693
    8. '):
' → logprob: -5.517999172210693
    9. ' ' → logprob: -5.642999172210693
    10. 'right' → logprob: -5.892999172210693

Token 597: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08711877465248108
    2. ')
' → logprob: -2.5871188640594482
    3. ' of' → logprob: -5.587118625640869
    4. '):
' → logprob: -5.962118625640869
    5. '           ' → logprob: -7.337118625640869
    6. '):' → logprob: -8.212119102478027
    7. '):

' → logprob: -8.962119102478027
    8. '       ' → logprob: -9.212119102478027
    9. '   ' → logprob: -9.212119102478027
    10. 'd' → logprob: -9.462119102478027

Token 598: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003248062450438738
    2. ' d' → logprob: -5.75324821472168
    3. 'deque' → logprob: -9.62824821472168
    4. ' the' → logprob: -13.37824821472168
    5. ' deque' → logprob: -14.00324821472168
    6. ')' → logprob: -14.25324821472168
    7. ')d' → logprob: -14.50324821472168
    8. 'the' → logprob: -15.62824821472168
    9. '   ' → logprob: -15.75324821472168
    10. '```' → logprob: -16.00324821472168

Token 599: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. '_l' → logprob: -13.375004768371582
    3. '_' → logprob: -13.750004768371582
    4. 'e' → logprob: -14.250004768371582
    5. 'l' → logprob: -14.500004768371582
    6. '```' → logprob: -15.750004768371582
    7. 'q' → logprob: -16.500003814697266
    8. '_e' → logprob: -16.625003814697266
    9. 'ec' → logprob: -16.812503814697266
    10. 'el' → logprob: -17.062503814697266

Token 600: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -5.200166469876422e-06
    2. 'l' → logprob: -12.250004768371582
    3. ')' → logprob: -15.125004768371582
    4. '_d' → logprob: -16.7500057220459
    5. '```' → logprob: -17.6250057220459
    6. '   ' → logprob: -17.7500057220459
    7. '_r' → logprob: -17.8750057220459
    8. '_' → logprob: -18.2500057220459
    9. '_lr' → logprob: -18.5000057220459
    10. 'd' → logprob: -19.2500057220459

Token 601: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -4.215330409351736e-05
    2. '_ru' → logprob: -10.750041961669922
    3. 'r' → logprob: -11.875041961669922
    4. 'RU' → logprob: -12.000041961669922
    5. 'ру' → logprob: -12.625041961669922
    6. 'rl' → logprob: -13.875041961669922
    7. '_r' → logprob: -14.625041961669922
    8. '{' → logprob: -15.000041961669922
    9. 'ruk' → logprob: -15.250041961669922
    10. 'u' → logprob: -15.250041961669922

Token 602: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6288984417915344
    2. '):
' → logprob: -1.0038983821868896
    3. ')' → logprob: -2.5038983821868896
    4. '   ' → logprob: -4.753898620605469
    5. '):' → logprob: -5.003898620605469
    6. ',' → logprob: -6.753898620605469
    7. '           ' → logprob: -7.003898620605469
    8. '       ' → logprob: -7.503898620605469
    9. '):

' → logprob: -9.128898620605469
    10. ').' → logprob: -9.878898620605469

Token 603: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042472160421311855
    2. '       ' → logprob: -5.754247188568115
    3. '<|end|>' → logprob: -7.879247188568115
    4. '    
' → logprob: -8.254247665405273
    5. '
' → logprob: -8.754247665405273
    6. '<|end|>' → logprob: -10.129247665405273
    7. 'if' → logprob: -10.504247665405273
    8. '        
' → logprob: -10.629247665405273
    9. '           ' → logprob: -10.754247665405273
    10. '```' → logprob: -10.754247665405273

Token 604: ' try' (ID: 2075)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20497794449329376
    2. '   ' → logprob: -1.7049779891967773
    3. ' if' → logprob: -5.954977989196777
    4. 'try' (adapté à ' try') → logprob: -7.204977989196777
    5. '       ' → logprob: -8.454977989196777
    6. '           ' → logprob: -11.704977989196777
    7. '	if' → logprob: -14.204977989196777
    8. 'd' → logprob: -15.454977989196777
    9. ' try' → logprob: -15.454977989196777
    10. ' ' → logprob: -15.704977989196777

Token 605: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0913509726524353
    2. ':
' → logprob: -2.46635103225708
    3. '   ' → logprob: -6.09135103225708
    4. '       ' → logprob: -9.841350555419922
    5. ':
' → logprob: -10.591350555419922
    6. '           ' → logprob: -10.716350555419922
    7. ' :' → logprob: -11.091350555419922
    8. '               ' → logprob: -11.216350555419922
    9. ':d' → logprob: -12.966350555419922
    10. ':

' → logprob: -13.216350555419922

Token 606: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09830521792173386
    2. ':' → logprob: -2.5983052253723145
    3. '       ' → logprob: -4.3483052253723145
    4. ':
' → logprob: -5.9733052253723145
    5. 'd' → logprob: -6.7233052253723145
    6. '           ' → logprob: -6.7233052253723145
    7. '               ' → logprob: -7.2233052253723145
    8. ':d' → logprob: -7.7233052253723145
    9. '	d' → logprob: -10.098304748535156
    10. ' ' → logprob: -10.348304748535156

Token 607: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.011703716591000557
    2. ' d' → logprob: -4.7617034912109375
    3. '                   ' → logprob: -6.1367034912109375
    4. '   ' → logprob: -7.0117034912109375
    5. '           ' → logprob: -11.761703491210938
    6. '               ' → logprob: -12.011703491210938
    7. '	d' → logprob: -12.761703491210938
    8. 'index' → logprob: -13.261703491210938
    9. '       ' → logprob: -13.511703491210938
    10. '                       ' → logprob: -15.136703491210938

Token 608: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'l' → logprob: -19.5
    3. '   ' → logprob: -20.125
    4. '１' → logprob: -20.125
    5. '```' → logprob: -20.125
    6. '
' → logprob: -20.25
    7. ' ' → logprob: -20.375
    8. '_l' → logprob: -20.6875
    9. 'd' → logprob: -20.75
    10. '_' → logprob: -20.8125

Token 609: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: 0.0
    2. 'l' → logprob: -19.375
    3. 'd' → logprob: -19.5
    4. '_' → logprob: -19.625
    5. '_d' → logprob: -19.875
    6. '.append' → logprob: -20.875
    7. '_lr' → logprob: -21.125
    8. '_tokens' → logprob: -21.25
    9. '_r' → logprob: -21.25
    10. 's' → logprob: -21.5

Token 610: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.00019817621796391904
    2. 'r' → logprob: -9.125198364257812
    3. 'rl' → logprob: -9.375198364257812
    4. 'l' → logprob: -12.500198364257812
    5. '_ru' → logprob: -15.625198364257812
    6. 'lu' → logprob: -16.000198364257812
    7. 'ру' → logprob: -16.250198364257812
    8. 'RU' → logprob: -16.500198364257812
    9. 'u' → logprob: -17.250198364257812
    10. '_l' → logprob: -17.750198364257812

Token 611: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.00023512568441219628
    2. '.' → logprob: -8.375235557556152
    3. 'remove' → logprob: -12.625235557556152
    4. '   ' → logprob: -14.250235557556152
    5. '.index' → logprob: -15.000235557556152
    6. '.rotate' → logprob: -17.000234603881836
    7. '.Remove' → logprob: -17.250234603881836
    8. '                   ' → logprob: -17.375234603881836
    9. '.extend' → logprob: -17.375234603881836
    10. ' .' → logprob: -17.500234603881836

Token 612: '(book' (ID: 56932)
  Prédit: '(book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(book' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.625000953674316
    3. 'book' → logprob: -15.125000953674316
    4. '(b' → logprob: -17.75
    5. '(Book' → logprob: -19.25
    6. '	book' → logprob: -19.25
    7. ' book' → logprob: -19.5
    8. '(ball' → logprob: -21.375
    9. '/book' → logprob: -21.375
    10. ' (' → logprob: -21.875

Token 613: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002511212369427085
    2. ')
' → logprob: -6.002511024475098
    3. ')
' → logprob: -11.002511024475098
    4. '           ' → logprob: -11.502511024475098
    5. '               ' → logprob: -11.752511024475098
    6. '       ' → logprob: -15.752511024475098
    7. '   ' → logprob: -16.002511978149414
    8. '                   ' → logprob: -16.127511978149414
    9. ' )' → logprob: -16.252511978149414
    10. '),' → logprob: -16.502511978149414

Token 614: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04217245429754257
    2. ' except' → logprob: -3.542172431945801
    3. 'except' → logprob: -4.417172431945801
    4. '               ' → logprob: -8.2921724319458
    5. '       ' → logprob: -12.1671724319458
    6. '	except' → logprob: -12.4171724319458
    7. 'Except' → logprob: -12.6671724319458
    8. '   ' → logprob: -12.9171724319458
    9. '
' → logprob: -12.9171724319458
    10. ',' → logprob: -13.1671724319458

Token 615: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12386393547058105
    2. ' except' → logprob: -2.623863935470581
    3. 'except' (adapté à ' except') → logprob: -3.623863935470581
    4. '               ' → logprob: -4.37386417388916
    5. '       ' → logprob: -5.62386417388916
    6. '   ' → logprob: -7.49886417388916
    7. '
' → logprob: -8.49886417388916
    8. '            
' → logprob: -9.49886417388916
    9. ')' → logprob: -10.12386417388916
    10. '                   ' → logprob: -10.24886417388916

Token 616: ':
' (ID: 734)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Value' → logprob: -5.598092684522271e-05
    2. '(Value' → logprob: -10.250056266784668
    3. ' Value' → logprob: -11.125056266784668
    4. '_value' → logprob: -13.125056266784668
    5. '	Value' → logprob: -13.500056266784668
    6. '.Value' → logprob: -14.125056266784668
    7. '<Value' → logprob: -14.375056266784668
    8. '_Value' → logprob: -14.625056266784668
    9. 'Exception' → logprob: -14.875056266784668
    10. 'value' → logprob: -15.750056266784668

Token 617: '               ' (ID: 506)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.07180534303188324
    2. ':' → logprob: -3.446805238723755
    3. '               ' → logprob: -4.071805477142334
    4. '           ' → logprob: -4.571805477142334
    5. 'pass' → logprob: -5.196805477142334
    6. '            ' → logprob: -6.071805477142334
    7. '	pass' → logprob: -7.321805477142334
    8. '                ' → logprob: -7.821805477142334
    9. ':
' → logprob: -8.321805000305176
    10. 'Pass' → logprob: -8.821805000305176

Token 618: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.042210277169942856
    2. ' pass' → logprob: -3.292210340499878
    3. 'None' → logprob: -5.542210102081299
    4. 'd' → logprob: -9.042210578918457
    5. ' None' → logprob: -9.167210578918457
    6. '   ' → logprob: -11.292210578918457
    7. ' d' → logprob: -12.292210578918457
    8. '	pass' → logprob: -13.667210578918457
    9. '           ' → logprob: -14.917210578918457
    10. 'Pass' → logprob: -15.167210578918457

Token 619: '
' (ID: 198)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.03105410747230053
    2. 'd' → logprob: -3.7810540199279785
    3. '
' → logprob: -5.5310540199279785
    4. '       ' → logprob: -6.0310540199279785
    5. '   ' → logprob: -7.5310540199279785
    6. '           ' → logprob: -8.031054496765137
    7. ' 
' → logprob: -8.031054496765137
    8. '	d' → logprob: -9.656054496765137
    9. '    
' → logprob: -10.406054496765137
    10. '_d' → logprob: -10.656054496765137

Token 620: '           ' (ID: 352)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22874516248703003
    2. '   ' → logprob: -2.103745222091675
    3. ' d' → logprob: -2.603745222091675
    4. '
' → logprob: -5.603744983673096
    5. '       ' → logprob: -6.103744983673096
    6. '```' → logprob: -6.478744983673096
    7. '           ' → logprob: -8.353745460510254
    8. '	d' → logprob: -8.478745460510254
    9. '    
' → logprob: -9.103745460510254
    10. ' 
' → logprob: -9.478745460510254

Token 621: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.011048408225178719
    2. ' d' → logprob: -4.511048316955566
    3. '       ' → logprob: -14.886048316955566
    4. '   ' → logprob: -16.011049270629883
    5. '           ' → logprob: -17.011049270629883
    6. '	d' → logprob: -17.386049270629883
    7. '
' → logprob: -18.636049270629883
    8. '_d' → logprob: -18.886049270629883
    9. 'if' → logprob: -19.886049270629883
    10. ' ' → logprob: -20.136049270629883

Token 622: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '_l' → logprob: -14.875
    3. 'l' → logprob: -17.5
    4. '_' → logprob: -17.625
    5. '１' → logprob: -19.3125
    6. 'el' → logprob: -19.4375
    7. ' ' → logprob: -20.125
    8. '```' → logprob: -20.375
    9. '۱' → logprob: -20.4375
    10. '__' → logprob: -20.5625

Token 623: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.4855663721391466e-05
    2. 'l' → logprob: -11.250015258789062
    3. '.append' → logprob: -13.875015258789062
    4. 'd' → logprob: -15.500015258789062
    5. '_d' → logprob: -15.500015258789062
    6. '._' → logprob: -15.500015258789062
    7. '\' → logprob: -17.125015258789062
    8. 'append' → logprob: -17.250015258789062
    9. '_lr' → logprob: -17.500015258789062
    10. '```' → logprob: -17.500015258789062

Token 624: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -2.5776860184123507e-06
    2. 'r' → logprob: -13.37500286102295
    3. 'rl' → logprob: -14.62500286102295
    4. 'ру' → logprob: -15.37500286102295
    5. '_ru' → logprob: -15.62500286102295
    6. 'lu' → logprob: -16.250001907348633
    7. 'RU' → logprob: -16.875001907348633
    8. 'u' → logprob: -18.625001907348633
    9. 'l' → logprob: -19.125001907348633
    10. 'ri' → logprob: -19.125001907348633

Token 625: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.607391408877447e-05
    2. '.' → logprob: -10.250036239624023
    3. ' .' → logprob: -14.625036239624023
    4. '.extend' → logprob: -15.625036239624023
    5. 'append' → logprob: -18.875036239624023
    6. '.app' → logprob: -19.500036239624023
    7. ' ' → logprob: -19.875036239624023
    8. '   ' → logprob: -20.250036239624023
    9. ' append' → logprob: -21.500036239624023
    10. '.Append' → logprob: -21.750036239624023

Token 626: '(book' (ID: 56932)
  Prédit: '(book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(book' → logprob: -6.704273118884885e-07
    2. 'left' → logprob: -15.375000953674316
    3. '(' → logprob: -15.500000953674316
    4. '(b' → logprob: -15.750000953674316
    5. '(product' → logprob: -18.625
    6. '(Book' → logprob: -18.875
    7. 'book' → logprob: -19.375
    8. '(blog' → logprob: -19.625
    9. '(ball' → logprob: -19.625
    10. '(block' → logprob: -20.125

Token 627: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. ')
' → logprob: -11.375012397766113
    3. ' )' → logprob: -14.500012397766113
    4. '<|end|>' → logprob: -15.125012397766113
    5. '       ' → logprob: -16.37501335144043
    6. '())' → logprob: -17.25001335144043
    7. '   ' → logprob: -17.25001335144043
    8. '),' → logprob: -17.25001335144043
    9. ')

' → logprob: -17.87501335144043
    10. '[' → logprob: -18.12501335144043

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8872424960136414
    2. '<|end|>' → logprob: -1.0122425556182861
    3. '
' → logprob: -1.6372425556182861
    4. '<|end|>' → logprob: -4.137242317199707
    5. '        
' → logprob: -5.512242317199707
    6. '   ' → logprob: -6.012242317199707
    7. 'while' → logprob: -6.012242317199707
    8. '    
' → logprob: -7.012242317199707
    9. ' while' → logprob: -7.137242317199707
    10. 'def' → logprob: -7.262242317199707

Token 629: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2782289981842041
    2. 'while' → logprob: -1.528228998184204
    3. '   ' → logprob: -3.778228998184204
    4. ' while' → logprob: -6.528228759765625
    5. 'for' (adapté à ' for') → logprob: -6.778228759765625
    6. 'def' → logprob: -8.653228759765625
    7. '        
' → logprob: -8.903228759765625
    8. '	while' → logprob: -9.903228759765625
    9. '    
' → logprob: -9.903228759765625
    10. '```' → logprob: -10.028228759765625

Token 630: ' _' (ID: 1175)
  Prédit: ' student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' student' → logprob: -0.7718862891197205
    2. ' i' → logprob: -1.5218863487243652
    3. 'student' → logprob: -1.8968863487243652
    4. ' _' → logprob: -2.0218863487243652
    5. '_' → logprob: -4.146886348724365
    6. 'i' → logprob: -4.271886348724365
    7. '_student' → logprob: -5.771886348724365
    8. ' idx' → logprob: -6.646886348724365
    9. '_i' → logprob: -6.896886348724365
    10. '_st' → logprob: -7.896886348724365

Token 631: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026359524577856064
    2. 'in' → logprob: -3.6513595581054688
    3. ' ' → logprob: -11.276359558105469
    4. 'range' → logprob: -11.651359558105469
    5. 'student' → logprob: -11.901359558105469
    6. 'i' → logprob: -11.901359558105469
    7. 'd' → logprob: -12.401359558105469
    8. '   ' → logprob: -12.776359558105469
    9. '  ' → logprob: -13.151359558105469
    10. 'index' → logprob: -13.276359558105469

Token 632: ' range' (ID: 3352)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.2524344325065613
    2. 'range' → logprob: -1.502434492111206
    3. 'students' → logprob: -8.377434730529785
    4. ' queue' → logprob: -8.877434730529785
    5. ' range' → logprob: -9.252434730529785
    6. '(queue' → logprob: -10.752434730529785
    7. '(' → logprob: -13.002434730529785
    8. 'iter' → logprob: -13.002434730529785
    9. 'que' → logprob: -13.252434730529785
    10. 'deque' → logprob: -13.377434730529785

Token 633: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.006296107079833746
    2. 'total' → logprob: -5.256296157836914
    3. '(len' → logprob: -7.756296157836914
    4. ' (' → logprob: -8.006296157836914
    5. ' total' → logprob: -8.506296157836914
    6. '(' → logprob: -9.506296157836914
    7. '(n' → logprob: -11.756296157836914
    8. '(sum' → logprob: -12.506296157836914
    9. 'len' → logprob: -13.131296157836914
    10. '(queue' → logprob: -13.256296157836914

Token 634: '_requests' (ID: 89627)
  Prédit: '_requests'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_requests' → logprob: -3.833878508885391e-05
    2. 'requests' → logprob: -10.625038146972656
    3. '_' → logprob: -12.875038146972656
    4. ')' → logprob: -13.125038146972656
    5. '_request' → logprob: -13.250038146972656
    6. '_students' → logprob: -13.625038146972656
    7. '   ' → logprob: -14.125038146972656
    8. 'Requests' → logprob: -14.250038146972656
    9. ' requests' → logprob: -14.750038146972656
    10. '_re' → logprob: -15.000038146972656

Token 635: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005223205778747797
    2. '):
' → logprob: -5.380223274230957
    3. ' ):' → logprob: -7.630223274230957
    4. '       ' → logprob: -9.755223274230957
    5. ':' → logprob: -11.130223274230957
    6. '   ' → logprob: -11.255223274230957
    7. '           ' → logprob: -11.505223274230957
    8. ')' → logprob: -11.880223274230957
    9. '):
' → logprob: -11.880223274230957
    10. ' ):
' → logprob: -12.880223274230957

Token 636: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014585700118914247
    2. '       ' → logprob: -7.376458644866943
    3. 'token' → logprob: -8.251458168029785
    4. '   ' → logprob: -8.751458168029785
    5. '            
' → logprob: -9.126458168029785
    6. '<|end|>' → logprob: -10.001458168029785
    7. 'tokens' → logprob: -10.001458168029785
    8. ' token' → logprob: -10.501458168029785
    9. ',' → logprob: -10.501458168029785
    10. '<|end|>' → logprob: -10.751458168029785

Token 637: ' i' (ID: 575)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.2202526479959488
    2. 'idx' → logprob: -2.720252752304077
    3. 'stu' → logprob: -2.720252752304077
    4. 'i' (adapté à ' i') → logprob: -3.470252752304077
    5. '   ' → logprob: -3.845252752304077
    6. 's' → logprob: -5.970252513885498
    7. '       ' → logprob: -5.970252513885498
    8. 'curr' → logprob: -6.095252513885498
    9. 'cur' → logprob: -6.345252513885498
    10. 'current' → logprob: -6.470252513885498

Token 638: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01854928955435753
    2. '=' → logprob: -4.01854944229126
    3. 'nd' → logprob: -8.143548965454102
    4. 'n' → logprob: -10.393548965454102
    5. ' ' → logprob: -11.018548965454102
    6. '   ' → logprob: -11.018548965454102
    7. 'd' → logprob: -11.518548965454102
    8. 's' → logprob: -11.768548965454102
    9. 'f' → logprob: -12.643548965454102
    10. 't' → logprob: -13.018548965454102

Token 639: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -2.7610454708337784e-05
    2. ' queue' → logprob: -10.500027656555176
    3. '(queue' → logprob: -19.00002670288086
    4. '	queue' → logprob: -19.37502670288086
    5. '   ' → logprob: -19.62502670288086
    6. ' ' → logprob: -19.75002670288086
    7. '  ' → logprob: -19.87502670288086
    8. 'que' → logprob: -19.87502670288086
    9. '0' → logprob: -20.37502670288086
    10. 'deque' → logprob: -21.87502670288086

Token 640: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.10021442919969559
    2. '[' → logprob: -2.3502144813537598
    3. 'p' → logprob: -12.225214004516602
    4. '.' → logprob: -12.850214004516602
    5. '   ' → logprob: -16.1002140045166
    6. '.pop' → logprob: -16.2252140045166
    7. '0' → logprob: -16.7252140045166
    8. '```' → logprob: -17.1002140045166
    9. 'opleft' → logprob: -17.8502140045166
    10. ' p' → logprob: -18.7252140045166

Token 641: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0005892522749491036
    2. 'op' → logprob: -7.500589370727539
    3. 'ople' → logprob: -10.250589370727539
    4. 'opl' → logprob: -14.250589370727539
    5. 'opf' → logprob: -16.25058937072754
    6. 'oplevel' → logprob: -16.62558937072754
    7. '[' → logprob: -17.25058937072754
    8. '```' → logprob: -17.25058937072754
    9. 'opt' → logprob: -17.50058937072754
    10. 'p' → logprob: -18.25058937072754

Token 642: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005949064157903194
    2. '<|end|>' → logprob: -6.505949020385742
    3. '   ' → logprob: -6.880949020385742
    4. '
' → logprob: -7.255949020385742
    5. '            
' → logprob: -7.505949020385742
    6. '       ' → logprob: -7.755949020385742
    7. '<|end|>' → logprob: -7.755949020385742
    8. '    
' → logprob: -8.130949020385742
    9. '		' → logprob: -8.505949020385742
    10. '	       ' → logprob: -9.255949020385742

Token 643: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027116762939840555
    2. 'book' → logprob: -7.002711772918701
    3. '       ' → logprob: -7.377711772918701
    4. 'if' → logprob: -7.627711772918701
    5. '   ' → logprob: -8.252711296081543
    6. 'requested' → logprob: -8.877711296081543
    7. 'req' → logprob: -9.002711296081543
    8. 'request' → logprob: -9.127711296081543
    9. 'b' → logprob: -10.877711296081543
    10. ' if' → logprob: -11.252711296081543

Token 644: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.7421440482139587
    2. '           ' → logprob: -1.1171441078186035
    3. 'b' → logprob: -2.3671441078186035
    4. 'req' → logprob: -2.7421441078186035
    5. 'if' → logprob: -4.4921441078186035
    6. 'requested' → logprob: -4.7421441078186035
    7. 'request' → logprob: -5.2421441078186035
    8. 'current' → logprob: -5.3671441078186035
    9. 'student' → logprob: -5.7421441078186035
    10. 'curr' → logprob: -5.9921441078186035

Token 645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021330706775188446
    2. '=' → logprob: -3.8963305950164795
    3. '_id' → logprob: -7.646330833435059
    4. 's' → logprob: -8.271330833435059
    5. '_requested' → logprob: -11.396330833435059
    6. '   ' → logprob: -11.646330833435059
    7. ' ' → logprob: -11.896330833435059
    8. '_' → logprob: -12.146330833435059
    9. '=request' → logprob: -12.896330833435059
    10. '_request' → logprob: -13.021330833435059

Token 646: ' students' (ID: 4501)
  Prédit: 'students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'students' → logprob: -0.03804275393486023
    2. ' students' → logprob: -3.2880427837371826
    3. '.students' → logprob: -14.538043022155762
    4. 'stud' → logprob: -14.663043022155762
    5. '   ' → logprob: -16.038042068481445
    6. 'udents' → logprob: -16.163042068481445
    7. '_students' → logprob: -16.788042068481445
    8. '           ' → logprob: -17.538042068481445
    9. ' ' → logprob: -18.038042068481445
    10. 'st' → logprob: -18.163042068481445

Token 647: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.000000953674316
    3. 'i' → logprob: -15.250000953674316
    4. '```' → logprob: -16.0
    5. '\[' → logprob: -18.0
    6. '[I' → logprob: -18.25
    7. '[user' → logprob: -18.25
    8. 's' → logprob: -18.625
    9. '[j' → logprob: -18.625
    10. '[u' → logprob: -19.0

Token 648: '].' (ID: 1651)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21329961717128754
    2. '.p' → logprob: -1.9632996320724487
    3. '[i' → logprob: -2.963299512863159
    4. '].' → logprob: -10.463299751281738
    5. '][' → logprob: -11.588299751281738
    6. '.i' → logprob: -13.088299751281738
    7. 'p' → logprob: -13.588299751281738
    8. ').' → logprob: -14.088299751281738
    9. '.' → logprob: -14.463299751281738
    10. '[p' → logprob: -15.088299751281738

Token 649: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.320199877838604e-07
    2. '.p' → logprob: -15.0
    3. ' p' → logprob: -17.375
    4. '[' → logprob: -18.75
    5. 'pop' → logprob: -20.125
    6. '_p' → logprob: -21.875
    7. '*p' → logprob: -22.375
    8. 'opleft' → logprob: -22.375
    9. '0' → logprob: -22.5
    10. '[p' → logprob: -22.625

Token 650: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -9.305326966568828e-05
    2. 'ople' → logprob: -9.375093460083008
    3. 'op' → logprob: -12.000093460083008
    4. 'opl' → logprob: -13.125093460083008
    5. 'oplevel' → logprob: -17.875093460083008
    6. 'ple' → logprob: -17.875093460083008
    7. 'opf' → logprob: -18.000093460083008
    8. 'opy' → logprob: -18.375093460083008
    9. '[' → logprob: -18.500093460083008
    10. 'ope' → logprob: -18.750093460083008

Token 651: '()

' (ID: 5874)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2944713234901428
    2. '<|end|>' → logprob: -1.544471263885498
    3. '
' → logprob: -4.294471263885498
    4. '            
' → logprob: -4.669471263885498
    5. '<|end|>' → logprob: -4.669471263885498
    6. '()' → logprob: -5.044471263885498
    7. ')' → logprob: -7.044471263885498
    8. '()
' → logprob: -7.669471263885498
    9. '#' → logprob: -9.044471740722656
    10. '            ' → logprob: -9.169471740722656

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002017620950937271
    2. '       ' → logprob: -7.252017498016357
    3. 'if' → logprob: -7.502017498016357
    4. '```' → logprob: -7.877017498016357
    5. ' if' → logprob: -8.877017974853516
    6. '<|end|>' → logprob: -9.002017974853516
    7. '            
' → logprob: -10.127017974853516
    8. '   ' → logprob: -10.377017974853516
    9. 'token' → logprob: -11.252017974853516
    10. '          ' → logprob: -11.627017974853516

Token 653: ' loc' (ID: 1539)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20367328822612762
    2. '           ' → logprob: -1.953673243522644
    3. 'loc' (adapté à ' loc') → logprob: -3.2036733627319336
    4. '#' → logprob: -6.953673362731934
    5. 'current' → logprob: -7.453673362731934
    6. 'location' → logprob: -8.578673362731934
    7. 'pos' → logprob: -10.078673362731934
    8. 'curr' → logprob: -10.078673362731934
    9. 'book' → logprob: -10.328673362731934
    10. '       ' → logprob: -11.078673362731934

Token 654: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868783116340637
    2. ' =' → logprob: -1.136878252029419
    3. '   ' → logprob: -13.01187801361084
    4. '_' → logprob: -14.01187801361084
    5. '=b' → logprob: -14.13687801361084
    6. '_book' → logprob: -14.13687801361084
    7. 'b' → logprob: -14.88687801361084
    8. 'ocation' → logprob: -15.01187801361084
    9. 'book' → logprob: -15.26187801361084
    10. '_=' → logprob: -15.38687801361084

Token 655: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -4.320199877838604e-07
    2. ' book' → logprob: -14.75
    3. '   ' → logprob: -20.625
    4. '	book' → logprob: -22.0
    5. ' ' → logprob: -22.5
    6. '(book' → logprob: -23.0
    7. 'Book' → logprob: -23.75
    8. '0' → logprob: -24.0
    9. 'card' → logprob: -24.25
    10. '  ' → logprob: -24.375

Token 656: '_location' (ID: 29811)
  Prédit: '_location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_location' → logprob: -0.000777707842644304
    2. '[' → logprob: -7.625777721405029
    3. '.get' → logprob: -8.375777244567871
    4. 'get' → logprob: -10.625777244567871
    5. 'location' → logprob: -11.250777244567871
    6. '_locations' → logprob: -11.750777244567871
    7. '_loc' → logprob: -12.750777244567871
    8. '_LOCATION' → logprob: -13.000777244567871
    9. '_book' → logprob: -13.750777244567871
    10. '[b' → logprob: -13.875777244567871

Token 657: '.get' (ID: 775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0381508506834507
    2. '.get' → logprob: -3.2881507873535156
    3. '(book' → logprob: -9.288150787353516
    4. '[b' → logprob: -11.788150787353516
    5. 'get' → logprob: -11.913150787353516
    6. 'book' → logprob: -13.288150787353516
    7. '=' → logprob: -15.163150787353516
    8. '.setdefault' → logprob: -15.788150787353516
    9. '(' → logprob: -15.913150787353516
    10. ' =' → logprob: -16.163150787353516

Token 658: '(book' (ID: 56932)
  Prédit: '(book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(book' → logprob: -1.9361264946837764e-07
    2. '(b' → logprob: -15.875
    3. 'book' → logprob: -17.875
    4. '(' → logprob: -18.625
    5. ' (' → logprob: -19.5
    6. '	book' → logprob: -19.5
    7. '(Book' → logprob: -19.625
    8. ' book' → logprob: -20.375
    9. '(ball' → logprob: -20.5
    10. '(
' → logprob: -22.375

Token 659: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09518063813447952
    2. ')' → logprob: -2.4701807498931885
    3. ')
' → logprob: -6.220180511474609
    4. ',m' → logprob: -6.220180511474609
    5. ',None' → logprob: -6.345180511474609
    6. ' ,' → logprob: -7.845180511474609
    7. '(),' → logprob: -11.22018051147461
    8. ' )' → logprob: -11.59518051147461
    9. ')m' → logprob: -11.59518051147461
    10. ',s' → logprob: -11.59518051147461

Token 660: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00013464801304508
    2. ' m' → logprob: -9.000134468078613
    3. 'None' → logprob: -11.625134468078613
    4. 's' → logprob: -13.375134468078613
    5. '   ' → logprob: -14.750134468078613
    6. '	m' → logprob: -16.12513542175293
    7. ' None' → logprob: -16.25013542175293
    8. ')m' → logprob: -16.25013542175293
    9. '$m' → logprob: -18.25013542175293
    10. ')' → logprob: -18.50013542175293

Token 661: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003669436788186431
    2. ')
' → logprob: -5.628669261932373
    3. '           ' → logprob: -10.253669738769531
    4. ' )' → logprob: -11.128669738769531
    5. ')

' → logprob: -11.253669738769531
    6. ')
' → logprob: -13.003669738769531
    7. '       ' → logprob: -13.378669738769531
    8. '+' → logprob: -14.753669738769531
    9. ')#' → logprob: -14.878669738769531
    10. ' )
' → logprob: -15.378669738769531

Token 662: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032221291214227676
    2. '<|end|>' → logprob: -3.5322213172912598
    3. '<|end|>' → logprob: -6.90722131729126
    4. ' if' → logprob: -7.15722131729126
    5. '            
' → logprob: -8.032220840454102
    6. 'if' → logprob: -9.532220840454102
    7. '
' → logprob: -9.657220840454102
    8. '       ' → logprob: -9.782220840454102
    9. '   ' → logprob: -10.157220840454102
    10. '          ' → logprob: -10.657220840454102

Token 663: ' default' (ID: 2787)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.696625292301178
    2. 'if' → logprob: -1.5716252326965332
    3. ' if' → logprob: -1.6966252326965332
    4. '#' → logprob: -2.696625232696533
    5. '            
' → logprob: -4.196625232696533
    6. '
' → logprob: -4.571625232696533
    7. '0' → logprob: -5.196625232696533
    8. 'm' → logprob: -6.196625232696533
    9. '<|end|>' → logprob: -6.196625232696533
    10. 'If' → logprob: -6.321625232696533

Token 664: ' shelf' (ID: 40978)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10766611248254776
    2. '<|end|>' → logprob: -2.357666015625
    3. '           ' → logprob: -6.232666015625
    4. '=' → logprob: -6.482666015625
    5. 'm' → logprob: -6.732666015625
    6. '<|end|>' → logprob: -6.982666015625
    7. '),' → logprob: -7.982666015625
    8. ')
' → logprob: -8.232666015625
    9. ' if' → logprob: -8.357666015625
    10. ' )' → logprob: -8.857666015625

Token 665: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010607946896925569
    2. '<|end|>' → logprob: -7.501060962677002
    3. ' if' → logprob: -8.251060485839844
    4. 'if' → logprob: -9.001060485839844
    5. '            
' → logprob: -9.751060485839844
    6. '<|end|>' → logprob: -10.626060485839844
    7. ',' → logprob: -11.626060485839844
    8. '          ' → logprob: -11.876060485839844
    9. '       ' → logprob: -11.876060485839844
    10. '
' → logprob: -12.501060485839844

Token 666: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005206239875406027
    2. ' if' → logprob: -8.500520706176758
    3. '<|end|>' → logprob: -8.750520706176758
    4. 'if' → logprob: -9.250520706176758
    5. '```' → logprob: -10.875520706176758
    6. '       ' → logprob: -11.500520706176758
    7. '            
' → logprob: -11.625520706176758
    8. '          ' → logprob: -11.750520706176758
    9. '<|end|>' → logprob: -12.125520706176758
    10. '   ' → logprob: -12.500520706176758

Token 667: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2536586821079254
    2. '           ' → logprob: -1.503658652305603
    3. ' if' → logprob: -6.753658771514893
    4. 'cost' → logprob: -8.003658294677734
    5. '       ' → logprob: -9.128658294677734
    6. '```' → logprob: -10.003658294677734
    7. 'token' → logprob: -10.128658294677734
    8. '            
' → logprob: -11.253658294677734
    9. '   ' → logprob: -11.378658294677734
    10. ' cost' → logprob: -12.878658294677734

Token 668: ' librarian' (ID: 144975)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004124111495912075
    2. '           ' → logprob: -5.504124164581299
    3. 'cost' → logprob: -10.50412368774414
    4. '```' → logprob: -11.50412368774414
    5. ' if' → logprob: -12.12912368774414
    6. '       ' → logprob: -13.25412368774414
    7. '``' → logprob: -14.62912368774414
    8. '   ' → logprob: -14.87912368774414
    9. 'token' → logprob: -15.50412368774414
    10. '               ' → logprob: -16.87912368774414

Token 669: ' finds' (ID: 22016)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7193111181259155
    2. ' if' → logprob: -1.7193111181259155
    3. 'if' → logprob: -1.9693111181259155
    4. ' =' → logprob: -2.219311237335205
    5. '=' → logprob: -3.219311237335205
    6. '            
' → logprob: -4.469311237335205
    7. ' cost' → logprob: -4.844311237335205
    8. '       ' → logprob: -5.094311237335205
    9. 'cost' → logprob: -5.344311237335205
    10. '   ' → logprob: -6.219311237335205

Token 670: ' book' (ID: 2392)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02623353712260723
    2. ' if' → logprob: -4.401233673095703
    3. '           ' → logprob: -5.026233673095703
    4. 'cost' → logprob: -5.151233673095703
    5. '               ' → logprob: -8.151233673095703
    6. 'the' → logprob: -8.651233673095703
    7. '#' → logprob: -8.651233673095703
    8. 'd' → logprob: -9.276233673095703
    9. ' cost' → logprob: -9.401233673095703
    10. 'next' → logprob: -9.776233673095703

Token 671: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07209775596857071
    2. ' if' → logprob: -3.3220977783203125
    3. ' at' → logprob: -3.9470977783203125
    4. ' and' → logprob: -5.5720977783203125
    5. 'if' → logprob: -5.6970977783203125
    6. '<|end|>' → logprob: -6.0720977783203125
    7. ' in' → logprob: -7.0720977783203125
    8. ',' → logprob: -7.3220977783203125
    9. '<|end|>' → logprob: -7.5720977783203125
    10. '            
' → logprob: -7.6970977783203125

Token 672: ' D' (ID: 415)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.038001537322998
    2. ' shelf' → logprob: -1.038001537322998
    3. 'loc' → logprob: -1.288001537322998
    4. ' loc' → logprob: -5.663001537322998
    5. '(loc' → logprob: -5.663001537322998
    6. 'location' → logprob: -5.788001537322998
    7. 'the' → logprob: -6.663001537322998
    8. 'desk' → logprob: -7.413001537322998
    9. '
' → logprob: -7.538001537322998
    10. '   ' → logprob: -8.038002014160156

Token 673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2183607518672943
    2. 'es' → logprob: -2.093360662460327
    3. 'esk' → logprob: -3.343360662460327
    4. 'loc' → logprob: -3.593360662460327
    5. 'esc' → logprob: -5.218360900878906
    6. 's' → logprob: -6.593360900878906
    7. '0' → logprob: -7.343360900878906
    8. '
' → logprob: -7.468360900878906
    9. '(loc' → logprob: -8.218360900878906
    10. 'ES' → logprob: -8.843360900878906

Token 674: '..' (ID: 485)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.25773337483406067
    2. ' if' → logprob: -1.8827333450317383
    3. 'if' → logprob: -3.8827333450317383
    4. ' and' → logprob: -4.007733345031738
    5. '<|end|>' → logprob: -4.257733345031738
    6. ',' → logprob: -4.882733345031738
    7. 'or' → logprob: -4.882733345031738
    8. ')' → logprob: -6.632733345031738
    9. ' (' → logprob: -7.382733345031738
    10. ' ' → logprob: -7.507733345031738

Token 675: 'Dm' (ID: 155065)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02346896380186081
    2. '...' → logprob: -4.023468971252441
    3. '..' → logprob: -6.523468971252441
    4. '0' → logprob: -7.148468971252441
    5. '   ' → logprob: -8.148468971252441
    6. '1' → logprob: -8.273468971252441
    7. '#m' → logprob: -8.273468971252441
    8. '
' → logprob: -8.398468971252441
    9. 'or' → logprob: -8.398468971252441
    10. '2' → logprob: -8.523468971252441

Token 676: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22244495153427124
    2. ' for' → logprob: -2.097445011138916
    3. ' or' → logprob: -3.847445011138916
    4. ' if' → logprob: -3.847445011138916
    5. ' and' → logprob: -4.722445011138916
    6. ',' → logprob: -4.847445011138916
    7. 'for' → logprob: -4.972445011138916
    8. '<|end|>' → logprob: -5.597445011138916
    9. 'if' → logprob: -7.097445011138916
    10. ' in' → logprob: -7.097445011138916

Token 677: ' then' (ID: 1815)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8038093447685242
    2. ' if' → logprob: -1.428809404373169
    3. '#' → logprob: -1.803809404373169
    4. '           ' → logprob: -2.178809404373169
    5. ' or' → logprob: -3.928809404373169
    6. 'or' → logprob: -5.67880916595459
    7. 'elif' → logprob: -5.67880916595459
    8. ' #' → logprob: -5.92880916595459
    9. 'else' → logprob: -6.67880916595459
    10. 'for' → logprob: -6.92880916595459

Token 678: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.221488818526268
    2. ' shelf' → logprob: -1.9714888334274292
    3. 'if' → logprob: -3.3464887142181396
    4. 'from' → logprob: -3.8464887142181396
    5. '(if' → logprob: -7.471488952636719
    6. 'Shelf' → logprob: -7.846488952636719
    7. ' if' → logprob: -8.096488952636719
    8. '   ' → logprob: -8.346488952636719
    9. '#' → logprob: -8.346488952636719
    10. 'else' → logprob: -8.971488952636719

Token 679: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022977324202656746
    2. ' if' → logprob: -4.647977352142334
    3. 'if' → logprob: -4.897977352142334
    4. ' for' → logprob: -6.397977352142334
    5. 'for' → logprob: -7.022977352142334
    6. ' found' → logprob: -7.147977352142334
    7. 'found' → logprob: -7.272977352142334
    8. '            
' → logprob: -7.647977352142334
    9. 'token' → logprob: -8.147976875305176
    10. '<|end|>' → logprob: -8.397976875305176

Token 680: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002555807586759329
    2. ' if' → logprob: -6.877555847167969
    3. '            
' → logprob: -7.252555847167969
    4. '<|end|>' → logprob: -8.502555847167969
    5. 'if' → logprob: -8.627555847167969
    6. '       ' → logprob: -9.002555847167969
    7. ',' → logprob: -9.877555847167969
    8. '          ' → logprob: -10.127555847167969
    9. '            ' → logprob: -10.252555847167969
    10. '<|end|>' → logprob: -10.502555847167969

Token 681: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04652104526758194
    2. '           ' → logprob: -3.671520948410034
    3. ' if' → logprob: -4.046521186828613
    4. 'for' → logprob: -7.046521186828613
    5. 'cost' → logprob: -7.296521186828613
    6. 'found' → logprob: -7.671521186828613
    7. '```' → logprob: -8.921521186828613
    8. '            
' → logprob: -9.171521186828613
    9. 'token' → logprob: -9.421521186828613
    10. 'while' → logprob: -10.671521186828613

Token 682: ' cost' (ID: 3097)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3892286717891693
    2. 'if' → logprob: -1.1392287015914917
    3. ' if' → logprob: -6.139228820800781
    4. 'token' → logprob: -8.889228820800781
    5. '```' → logprob: -10.889228820800781
    6. '            
' → logprob: -11.514228820800781
    7. '   ' → logprob: -11.514228820800781
    8. '<|end|>' → logprob: -12.139228820800781
    9. 'tokens' → logprob: -12.264228820800781
    10. 'If' → logprob: -13.014228820800781

Token 683: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5641197562217712
    2. '+=' → logprob: -1.064119815826416
    3. ' +=' → logprob: -2.814119815826416
    4. ' =' → logprob: -3.689119815826416
    5. 'if' → logprob: -6.939119815826416
    6. '+' → logprob: -9.939119338989258
    7. ' if' → logprob: -9.939119338989258
    8. '+=(' → logprob: -10.189119338989258
    9. '   ' → logprob: -11.564119338989258
    10. ']+=' → logprob: -12.439119338989258

Token 684: ' taking' (ID: 6167)
  Prédit: 'loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loc' → logprob: -0.04472161829471588
    2. 'access' → logprob: -3.7947216033935547
    3. '(loc' → logprob: -4.044721603393555
    4. ' loc' → logprob: -6.294721603393555
    5. 'getting' → logprob: -7.794721603393555
    6. 'book' → logprob: -8.419721603393555
    7. 'the' → logprob: -8.544721603393555
    8. 'location' → logprob: -8.794721603393555
    9. ' access' → logprob: -9.169721603393555
    10. 'finding' → logprob: -9.294721603393555

Token 685: ' book' (ID: 2392)
  Prédit: 'loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loc' → logprob: -0.01856870949268341
    2. 'from' → logprob: -4.518568515777588
    3. 'd' → logprob: -6.018568515777588
    4. '(loc' → logprob: -6.268568515777588
    5. 'book' → logprob: -7.018568515777588
    6. '=' → logprob: -7.268568515777588
    7. 'desk' → logprob: -7.393568515777588
    8. ' loc' → logprob: -8.268568992614746
    9. 'for' → logprob: -8.643568992614746
    10. ' =' → logprob: -9.393568992614746

Token 686: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1214151531457901
    2. ' =' → logprob: -2.246415138244629
    3. 'if' → logprob: -5.496415138244629
    4. '+=' → logprob: -6.871415138244629
    5. 'loc' → logprob: -7.246415138244629
    6. '(loc' → logprob: -7.246415138244629
    7. '           ' → logprob: -7.371415138244629
    8. ' +=' → logprob: -7.496415138244629
    9. ' if' → logprob: -8.371415138244629
    10. ' loc' → logprob: -9.121415138244629

Token 687: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11201658099889755
    2. '           ' → logprob: -2.8620166778564453
    3. ' if' → logprob: -3.2370166778564453
    4. 'cost' → logprob: -4.987016677856445
    5. '            
' → logprob: -7.112016677856445
    6. '```' → logprob: -7.362016677856445
    7. '
' → logprob: -7.612016677856445
    8. '``' → logprob: -8.362016677856445
    9. ' cost' → logprob: -8.987016677856445
    10. 'access' → logprob: -9.362016677856445

Token 688: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0760519877076149
    2. '           ' → logprob: -3.076051950454712
    3. 'cost' → logprob: -4.201052188873291
    4. ' if' → logprob: -4.451052188873291
    5. '```' → logprob: -8.451051712036133
    6. ' cost' → logprob: -9.576051712036133
    7. '
' → logprob: -10.201051712036133
    8. '   ' → logprob: -10.326051712036133
    9. '            
' → logprob: -10.576051712036133
    10. '``' → logprob: -11.076051712036133

Token 689: ' loc' (ID: 1539)
  Prédit: 'loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loc' → logprob: -2.927930654550437e-05
    2. ' loc' → logprob: -10.500029563903809
    3. '0' → logprob: -14.125029563903809
    4. 'book' → logprob: -14.500029563903809
    5. '	loc' → logprob: -15.500029563903809
    6. '(loc' → logprob: -16.250028610229492
    7. '   ' → logprob: -16.875028610229492
    8. ' ' → logprob: -17.375028610229492
    9. '.loc' → logprob: -17.500028610229492
    10. '1' → logprob: -17.625028610229492

Token 690: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.35814279317855835
    2. ' ==' → logprob: -1.2331428527832031
    3. '<' → logprob: -5.233142852783203
    4. '==-' → logprob: -6.858142852783203
    5. '>=' → logprob: -6.983142852783203
    6. '!=' → logprob: -7.108142852783203
    7. ' <' → logprob: -7.233142852783203
    8. ' !=' → logprob: -7.608142852783203
    9. ' >=' → logprob: -9.608142852783203
    10. '<=' → logprob: -9.733142852783203

Token 691: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.4121114822482923e-06
    2. ' m' → logprob: -13.500003814697266
    3. '0' → logprob: -13.750003814697266
    4. '   ' → logprob: -14.500003814697266
    5. 's' → logprob: -15.750003814697266
    6. '	m' → logprob: -16.500003814697266
    7. ' ' → logprob: -16.625003814697266
    8. '(m' → logprob: -17.125003814697266
    9. '  ' → logprob: -18.125003814697266
    10. 'd' → logprob: -18.125003814697266

Token 692: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.42890793085098267
    2. ':' → logprob: -1.053907871246338
    3. '           ' → logprob: -9.553908348083496
    4. ' :
' → logprob: -10.178908348083496
    5. ':
' → logprob: -10.178908348083496
    6. ' :' → logprob: -11.303908348083496
    7. '):
' → logprob: -11.303908348083496
    8. '               ' → logprob: -11.803908348083496
    9. ':

' → logprob: -12.303908348083496
    10. '       ' → logprob: -12.428908348083496

Token 693: '               ' (ID: 506)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5981121063232422
    2. '           ' → logprob: -0.8481121063232422
    3. ' cost' → logprob: -4.223112106323242
    4. '               ' → logprob: -4.973112106323242
    5. '   ' → logprob: -8.223112106323242
    6. '       ' → logprob: -9.598112106323242
    7. '```' → logprob: -11.723112106323242
    8. '                   ' → logprob: -12.848112106323242
    9. '(cost' → logprob: -13.723112106323242
    10. '
' → logprob: -13.973112106323242

Token 694: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.00017445837147533894
    2. ' cost' → logprob: -8.750174522399902
    3. '           ' → logprob: -11.250174522399902
    4. '               ' → logprob: -12.750174522399902
    5. '   ' → logprob: -16.625173568725586
    6. '```' → logprob: -18.125173568725586
    7. '                   ' → logprob: -18.250173568725586
    8. '       ' → logprob: -18.375173568725586
    9. '
' → logprob: -18.500173568725586
    10. '            
' → logprob: -18.875173568725586

Token 695: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0620221309363842
    2. ' +=' → logprob: -2.8120222091674805
    3. '           ' → logprob: -10.43702220916748
    4. '   ' → logprob: -11.56202220916748
    5. ']+=' → logprob: -12.06202220916748
    6. '       ' → logprob: -12.56202220916748
    7. '=' → logprob: -13.18702220916748
    8. '               ' → logprob: -13.43702220916748
    9. '+=(' → logprob: -14.06202220916748
    10. '                   ' → logprob: -14.56202220916748

Token 696: ' access' (ID: 3158)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'access' → logprob: -0.2819370925426483
    2. 'm' → logprob: -1.4069371223449707
    3. ' access' → logprob: -7.531937122344971
    4. ' m' → logprob: -8.531936645507812
    5. '(m' → logprob: -10.656936645507812
    6. '(access' → logprob: -10.906936645507812
    7. '   ' → logprob: -13.281936645507812
    8. 'Access' → logprob: -13.656936645507812
    9. 'アクセス' → logprob: -14.219436645507812
    10. '```' → logprob: -14.281936645507812

Token 697: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00033546582562848926
    2. 's' → logprob: -8.000335693359375
    3. '_d' → logprob: -21.250335693359375
    4. '_' → logprob: -21.625335693359375
    5. '\' → logprob: -22.500335693359375
    6. '(s' → logprob: -22.625335693359375
    7. 'Shelf' → logprob: -22.625335693359375
    8. ' shelf' → logprob: -23.250335693359375
    9. '_m' → logprob: -23.375335693359375
    10. '	s' → logprob: -23.500335693359375

Token 698: 'helf' (ID: 51433)
  Prédit: 'helf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helf' → logprob: -1.0280383548888494e-06
    2. 'hel' → logprob: -14.500000953674316
    3. 'elf' → logprob: -15.000000953674316
    4. 'h' → logprob: -17.125001907348633
    5. 'he' → logprob: -17.500001907348633
    6. 'e' → logprob: -19.250001907348633
    7. 'helves' → logprob: -20.125001907348633
    8. 'hell' → logprob: -20.500001907348633
    9. 't' → logprob: -20.500001907348633
    10. 's' → logprob: -20.625001907348633

Token 699: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5890306234359741
    2. '<|end|>' → logprob: -0.9640306234359741
    3. '+' → logprob: -3.9640307426452637
    4. '
' → logprob: -4.214030742645264
    5. ' +' → logprob: -4.964030742645264
    6. 'else' → logprob: -5.089030742645264
    7. '<|end|>' → logprob: -5.339030742645264
    8. '               ' → logprob: -5.589030742645264
    9. ' else' → logprob: -5.839030742645264
    10. ')' → logprob: -6.339030742645264

Token 700: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04568358138203621
    2. '
' → logprob: -4.04568338394165
    3. '<|end|>' → logprob: -4.04568338394165
    4. 'else' → logprob: -5.17068338394165
    5. ' else' → logprob: -6.92068338394165
    6. '            
' → logprob: -7.17068338394165
    7. 'elif' → logprob: -7.29568338394165
    8. '       ' → logprob: -7.79568338394165
    9. '               ' → logprob: -8.420683860778809
    10. '<|end|>' → logprob: -8.670683860778809

Token 701: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.44440287351608276
    2. '           ' → logprob: -1.0694029331207275
    3. ' else' → logprob: -4.694402694702148
    4. 'elif' → logprob: -5.069402694702148
    5. ' elif' → logprob: -9.694402694702148
    6. '               ' → logprob: -10.944402694702148
    7. '       ' → logprob: -10.944402694702148
    8. '<|end|>' → logprob: -11.444402694702148
    9. '.' → logprob: -12.069402694702148
    10. '	else' → logprob: -12.194402694702148

Token 702: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7023405432701111
    2. ':
' → logprob: -0.7023405432701111
    3. '               ' → logprob: -4.952340602874756
    4. '           ' → logprob: -6.327340602874756
    5. '       ' → logprob: -9.702340126037598
    6. '   ' → logprob: -10.077340126037598
    7. '{
' → logprob: -10.327340126037598
    8. '{' → logprob: -10.827340126037598
    9. '            ' → logprob: -10.952340126037598
    10. ':

' → logprob: -10.952340126037598

Token 703: '               ' (ID: 506)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.196320042014122
    2. ' cost' → logprob: -1.9463200569152832
    3. '               ' → logprob: -3.821320056915283
    4. '           ' → logprob: -4.321320056915283
    5. '   ' → logprob: -8.821319580078125
    6. '            ' → logprob: -9.821319580078125
    7. '```' → logprob: -10.946319580078125
    8. '                   ' → logprob: -11.071319580078125
    9. '(cost' → logprob: -11.696319580078125
    10. '             ' → logprob: -12.196319580078125

Token 704: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.0004307884373702109
    2. ' cost' → logprob: -7.750430583953857
    3. '           ' → logprob: -15.875431060791016
    4. '   ' → logprob: -18.125431060791016
    5. '               ' → logprob: -19.500431060791016
    6. '       ' → logprob: -21.375431060791016
    7. ' ' → logprob: -21.625431060791016
    8. '(cost' → logprob: -21.875431060791016
    9. '_cost' → logprob: -22.375431060791016
    10. '  ' → logprob: -23.375431060791016

Token 705: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759425163269043
    2. '+=' → logprob: -0.8259425163269043
    3. ']+=' → logprob: -13.450942993164062
    4. '   ' → logprob: -13.950942993164062
    5. '           ' → logprob: -15.575942993164062
    6. '=' → logprob: -16.575942993164062
    7. '```' → logprob: -16.575942993164062
    8. '    ' → logprob: -16.700942993164062
    9. '       ' → logprob: -16.700942993164062
    10. '+' → logprob: -16.700942993164062

Token 706: ' access' (ID: 3158)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'access' → logprob: -0.0002613358374219388
    2. ' access' → logprob: -8.250261306762695
    3. '(access' → logprob: -17.500261306762695
    4. ' ' → logprob: -20.625261306762695
    5. '   ' → logprob: -20.875261306762695
    6. '
' → logprob: -20.875261306762695
    7. ''access' → logprob: -20.875261306762695
    8. '.access' → logprob: -21.500261306762695
    9. '  ' → logprob: -21.625261306762695
    10. ' ' → logprob: -21.625261306762695

Token 707: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -4.60414821645827e-06
    2. 'desk' → logprob: -12.625004768371582
    3. '_s' → logprob: -14.375004768371582
    4. '_' → logprob: -14.875004768371582
    5. ' desk' → logprob: -16.750003814697266
    6. '_des' → logprob: -17.125003814697266
    7. '\' → logprob: -17.500003814697266
    8. '_l' → logprob: -17.625003814697266
    9. '=' → logprob: -17.750003814697266
    10. 'Desk' → logprob: -17.750003814697266

Token 708: 'esk' (ID: 22444)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' → logprob: -0.1270727813243866
    2. 'esk' → logprob: -2.127072811126709
    3. 's' → logprob: -9.37707233428955
    4. 'es' → logprob: -10.25207233428955
    5. 'ek' → logprob: -12.50207233428955
    6. 'k' → logprob: -12.75207233428955
    7. '[' → logprob: -13.12707233428955
    8. 'ask' → logprob: -13.25207233428955
    9. '
' → logprob: -13.50207233428955
    10. 'e' → logprob: -13.62707233428955

Token 709: '(loc' (ID: 41216)
  Prédit: '(loc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loc' → logprob: -1.6240566083070007e-06
    2. 'loc' → logprob: -13.500001907348633
    3. ' loc' → logprob: -16.000001907348633
    4. '(' → logprob: -16.375001907348633
    5. '	loc' → logprob: -19.125001907348633
    6. ' (' → logprob: -19.375001907348633
    7. '_loc' → logprob: -20.125001907348633
    8. '.loc' → logprob: -21.000001907348633
    9. 'LOC' → logprob: -21.250001907348633
    10. 'Loc' → logprob: -21.500001907348633

Token 710: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003623985394369811
    2. ')
' → logprob: -8.125362396240234
    3. '+' → logprob: -9.875362396240234
    4. ')+' → logprob: -11.750362396240234
    5. ' )' → logprob: -12.500362396240234
    6. ' +' → logprob: -14.000362396240234
    7. '           ' → logprob: -14.125362396240234
    8. ')

' → logprob: -15.250362396240234
    9. '))' → logprob: -15.375362396240234
    10. ')#' → logprob: -15.625362396240234

Token 711: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03469947353005409
    2. '
' → logprob: -3.6596994400024414
    3. '```' → logprob: -5.409699440002441
    4. '            
' → logprob: -6.534699440002441
    5. '<|end|>' → logprob: -6.534699440002441
    6. 'if' → logprob: -7.909699440002441
    7. ' if' → logprob: -8.159699440002441
    8. '       ' → logprob: -10.034699440002441
    9. '``' → logprob: -10.159699440002441
    10. '<|end|>' → logprob: -10.284699440002441

Token 712: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02185441181063652
    2. 'if' → logprob: -3.8968544006347656
    3. '
' → logprob: -6.896854400634766
    4. '            
' → logprob: -8.896854400634766
    5. '```' → logprob: -9.396854400634766
    6. ' if' → logprob: -10.146854400634766
    7. '#' (adapté à ' #') → logprob: -10.271854400634766
    8. '   ' → logprob: -13.521854400634766
    9. '       ' → logprob: -13.521854400634766
    10. '``' → logprob: -13.646854400634766

Token 713: ' After' (ID: 6311)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024768942967057228
    2. '           ' → logprob: -4.024768829345703
    3. '#' → logprob: -5.024768829345703
    4. '
' → logprob: -11.899768829345703
    5. '   ' → logprob: -12.149768829345703
    6. '       ' → logprob: -12.274768829345703
    7. ' if' → logprob: -12.774768829345703
    8. '```' → logprob: -13.149768829345703
    9. '            
' → logprob: -13.274768829345703
    10. '``' → logprob: -14.899768829345703

Token 714: ' taking' (ID: 6167)
  Prédit: 'taking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taking' → logprob: -0.06933923065662384
    2. 'getting' → logprob: -3.6943392753601074
    3. 'access' → logprob: -4.069339275360107
    4. 'this' → logprob: -5.069339275360107
    5. 'finding' → logprob: -5.319339275360107
    6. 'rem' → logprob: -5.694339275360107
    7. ' taking' → logprob: -5.944339275360107
    8. '#' → logprob: -6.194339275360107
    9. 'that' → logprob: -6.444339275360107
    10. 'retr' → logprob: -6.694339275360107

Token 715: ' book' (ID: 2392)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.16953995823860168
    2. 'book' → logprob: -2.0445399284362793
    3. ' the' → logprob: -3.9195399284362793
    4. 'a' → logprob: -5.669539928436279
    5. ' book' → logprob: -6.669539928436279
    6. 'out' → logprob: -7.794539928436279
    7. 'this' → logprob: -8.169540405273438
    8. 'it' → logprob: -8.294540405273438
    9. '#' → logprob: -8.544540405273438
    10. ' a' → logprob: -9.169540405273438

Token 716: ' out' (ID: 842)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7006534337997437
    2. '           ' → logprob: -0.7006534337997437
    3. '<|end|>' → logprob: -5.575653553009033
    4. ' if' → logprob: -7.075653553009033
    5. 'if' → logprob: -7.200653553009033
    6. ':' → logprob: -7.325653553009033
    7. '<|end|>' → logprob: -7.825653553009033
    8. ':
' → logprob: -8.575653076171875
    9. '   ' → logprob: -8.700653076171875
    10. '            
' → logprob: -8.825653076171875

Token 717: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10618451982736588
    2. ',' → logprob: -2.356184482574463
    3. 'from' → logprob: -6.231184482574463
    4. 'if' → logprob: -6.481184482574463
    5. '   ' → logprob: -6.856184482574463
    6. ' if' → logprob: -7.606184482574463
    7. ':' → logprob: -8.356184959411621
    8. ' from' → logprob: -8.731184959411621
    9. '            
' → logprob: -8.856184959411621
    10. '<|end|>' → logprob: -9.606184959411621

Token 718: ' book' (ID: 2392)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15117332339286804
    2. '#' → logprob: -2.1511733531951904
    3. '       ' → logprob: -3.9011733531951904
    4. ' if' → logprob: -6.151173114776611
    5. '           ' → logprob: -6.901173114776611
    6. '   ' → logprob: -7.901173114776611
    7. '
' → logprob: -9.15117359161377
    8. ' #' → logprob: -9.65117359161377
    9. 'book' → logprob: -10.27617359161377
    10. '               ' → logprob: -12.40117359161377

Token 719: ' is' (ID: 382)
  Prédit: '_location'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_location' → logprob: -0.00046868418576195836
    2. ' is' → logprob: -8.125468254089355
    3. 'location' → logprob: -9.625468254089355
    4. 'is' → logprob: -10.500468254089355
    5. 'Location' → logprob: -11.000468254089355
    6. '           ' → logprob: -11.250468254089355
    7. 'must' → logprob: -11.625468254089355
    8. '=' → logprob: -12.000468254089355
    9. '   ' → logprob: -12.125468254089355
    10. ' location' → logprob: -12.625468254089355

Token 720: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.1545361429452896
    2. 'out' → logprob: -3.529536247253418
    3. 'not' → logprob: -3.529536247253418
    4. 'None' → logprob: -3.904536247253418
    5. 'tempor' → logprob: -4.404536247253418
    6. ' removed' → logprob: -4.404536247253418
    7. 'book' → logprob: -4.529536247253418
    8. 'at' → logprob: -5.029536247253418
    9. ' None' → logprob: -5.154536247253418
    10. 'no' → logprob: -5.279536247253418

Token 721: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.697004497051239
    2. 'from' → logprob: -0.697004497051239
    3. ' from' → logprob: -5.572004318237305
    4. '   ' → logprob: -11.197004318237305
    5. '_from' → logprob: -11.322004318237305
    6. '.from' → logprob: -12.447004318237305
    7. 'if' → logprob: -12.697004318237305
    8. 'From' → logprob: -12.697004318237305
    9. '               ' → logprob: -13.072004318237305
    10. '       ' → logprob: -13.072004318237305

Token 722: ' its' (ID: 1617)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.876543402671814
    2. 'location' → logprob: -1.251543402671814
    3. 's' → logprob: -1.751543402671814
    4. 'where' → logprob: -3.1265435218811035
    5. 'current' → logprob: -3.5015435218811035
    6. 'desk' → logprob: -3.6265435218811035
    7. 'loc' → logprob: -5.2515435218811035
    8. 'its' → logprob: -5.7515435218811035
    9. 'books' → logprob: -5.7515435218811035
    10. 'locations' → logprob: -6.2515435218811035

Token 723: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0631294772028923
    2. 'location' → logprob: -2.813129425048828
    3. ' current' → logprob: -7.438129425048828
    4. 'place' → logprob: -8.313129425048828
    5. 'container' → logprob: -8.938129425048828
    6. 'storage' → logprob: -9.063129425048828
    7. 'previous' → logprob: -10.188129425048828
    8. ' location' → logprob: -11.563129425048828
    9. 'where' → logprob: -11.938129425048828
    10. 'loc' → logprob: -12.063129425048828

Token 724: ' location' (ID: 5100)
  Prédit: 'location'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'location' → logprob: -0.07996147125959396
    2. ' location' → logprob: -2.8299615383148193
    3. 'place' → logprob: -4.20496129989624
    4. ' place' → logprob: -5.95496129989624
    5. 'container' → logprob: -9.204961776733398
    6. 'position' → logprob: -9.829961776733398
    7. 'placement' → logprob: -9.954961776733398
    8. 'loc' → logprob: -10.329961776733398
    9. '_location' → logprob: -10.454961776733398
    10. 'storage' → logprob: -11.079961776733398

Token 725: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061478935182094574
    2. ' if' → logprob: -3.186478853225708
    3. 'if' → logprob: -4.061479091644287
    4. '       ' → logprob: -7.311479091644287
    5. '   ' → logprob: -8.936478614807129
    6. '```' → logprob: -9.561478614807129
    7. '<|end|>' → logprob: -9.686478614807129
    8. '            
' → logprob: -9.811478614807129
    9. ',' → logprob: -10.186478614807129
    10. '
' → logprob: -11.811478614807129

Token 726: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004478304646909237
    2. 'if' → logprob: -5.504478454589844
    3. ' if' → logprob: -7.879478454589844
    4. '            
' → logprob: -11.129478454589844
    5. '```' → logprob: -12.629478454589844
    6. '   ' → logprob: -12.879478454589844
    7. '       ' → logprob: -15.129478454589844
    8. '
' → logprob: -15.504478454589844
    9. '               ' → logprob: -16.504478454589844
    10. '          ' → logprob: -16.754478454589844

Token 727: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.387296587228775
    2. 'if' (adapté à ' if') → logprob: -1.1372965574264526
    3. ' if' → logprob: -8.012296676635742
    4. '       ' → logprob: -9.762296676635742
    5. '   ' → logprob: -10.387296676635742
    6. '            
' → logprob: -12.762296676635742
    7. 'book' → logprob: -13.137296676635742
    8. '```' → logprob: -14.512296676635742
    9. '               ' → logprob: -16.512296676635742
    10. '#' → logprob: -17.012296676635742

Token 728: ' loc' (ID: 1539)
  Prédit: 'loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loc' → logprob: -0.001929228543303907
    2. ' loc' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.75192928314209
    4. 'book' → logprob: -16.001928329467773
    5. '	loc' → logprob: -17.001928329467773
    6. '(loc' → logprob: -17.126928329467773
    7. 'location' → logprob: -18.251928329467773
    8. '.loc' → logprob: -18.876928329467773
    9. 'Loc' → logprob: -19.501928329467773
    10. ' ' → logprob: -19.501928329467773

Token 729: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.46679654717445374
    2. ' ==' → logprob: -1.3417965173721313
    3. '!=' → logprob: -2.716796636581421
    4. ' !=' → logprob: -3.091796636581421
    5. '<' → logprob: -10.966796875
    6. '==-' → logprob: -11.091796875
    7. '   ' → logprob: -11.216796875
    8. ' <' → logprob: -11.841796875
    9. '>=' → logprob: -11.841796875
    10. ')' → logprob: -11.966796875

Token 730: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.320199877838604e-07
    2. ' m' → logprob: -14.875
    3. '   ' → logprob: -17.25
    4. '	m' → logprob: -17.5
    5. 'd' → logprob: -18.625
    6. '0' → logprob: -18.75
    7. '(m' → logprob: -19.625
    8. ' ' → logprob: -20.0
    9. '  ' → logprob: -20.75
    10. '$m' → logprob: -20.875

Token 731: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22668986022472382
    2. ':' → logprob: -1.6016898155212402
    3. '               ' → logprob: -7.47668981552124
    4. '           ' → logprob: -7.60168981552124
    5. 's' → logprob: -10.101690292358398
    6. ':s' → logprob: -10.226690292358398
    7. ':
' → logprob: -10.351690292358398
    8. '   ' → logprob: -10.351690292358398
    9. '       ' → logprob: -10.726690292358398
    10. '):
' → logprob: -11.101690292358398

Token 732: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14507317543029785
    2. 's' → logprob: -2.020073175430298
    3. '       ' → logprob: -7.145072937011719
    4. '   ' → logprob: -7.145072937011719
    5. '               ' → logprob: -7.395072937011719
    6. ' shelf' → logprob: -9.770072937011719
    7. '#' → logprob: -10.020072937011719
    8. 'if' → logprob: -10.645072937011719
    9. '```' → logprob: -11.020072937011719
    10. '`s' → logprob: -11.770072937011719

Token 733: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011951349675655365
    2. '           ' → logprob: -4.886951446533203
    3. '#' → logprob: -6.386951446533203
    4. 'if' → logprob: -6.761951446533203
    5. 'pass' → logprob: -7.011951446533203
    6. '   ' → logprob: -7.761951446533203
    7. '               ' → logprob: -9.886951446533203
    8. ' shelf' → logprob: -10.261951446533203
    9. 'continue' → logprob: -10.886951446533203
    10. '       ' → logprob: -10.886951446533203

Token 734: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.00030817187507636845
    2. '.' → logprob: -8.2503080368042
    3. '.dis' → logprob: -10.0003080368042
    4. 'remove' → logprob: -13.6253080368042
    5. ' .' → logprob: -15.6253080368042
    6. '   ' → logprob: -16.875308990478516
    7. '.add' → logprob: -17.750308990478516
    8. '.Remove' → logprob: -18.500308990478516
    9. ' remove' → logprob: -19.250308990478516
    10. 'discard' → logprob: -19.375308990478516

Token 735: '(book' (ID: 56932)
  Prédit: '(book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(book' → logprob: -1.676292231422849e-05
    2. 'book' → logprob: -11.000017166137695
    3. '	book' → logprob: -18.375017166137695
    4. '(b' → logprob: -18.500017166137695
    5. ' book' → logprob: -19.000017166137695
    6. '(' → logprob: -20.125017166137695
    7. 'Book' → logprob: -21.250017166137695
    8. '(ball' → logprob: -21.375017166137695
    9. '(Book' → logprob: -21.625017166137695
    10. '/book' → logprob: -22.250017166137695

Token 736: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011148866266012192
    2. ')
' → logprob: -4.511148929595947
    3. '           ' → logprob: -9.386148452758789
    4. '               ' → logprob: -11.511148452758789
    5. ')
' → logprob: -12.636148452758789
    6. ')

' → logprob: -13.511148452758789
    7. '       ' → logprob: -14.261148452758789
    8. '<|end|>' → logprob: -14.511148452758789
    9. ' )' → logprob: -15.136148452758789
    10. '),' → logprob: -15.511148452758789

Token 737: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007208790630102158
    2. 'else' → logprob: -5.507208824157715
    3. '
' → logprob: -6.132208824157715
    4. ' else' → logprob: -7.507208824157715
    5. '```' → logprob: -9.132208824157715
    6. '            
' → logprob: -9.257208824157715
    7. '               ' → logprob: -9.507208824157715
    8. '       ' → logprob: -10.507208824157715
    9. 'elif' → logprob: -10.757208824157715
    10. ' 
' → logprob: -11.632208824157715

Token 738: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0010251892963424325
    2. '           ' → logprob: -7.251025199890137
    3. 'elif' → logprob: -8.251025199890137
    4. ' else' → logprob: -10.001025199890137
    5. 'if' → logprob: -12.376025199890137
    6. '       ' → logprob: -13.001025199890137
    7. '               ' → logprob: -13.501025199890137
    8. '```' → logprob: -14.126025199890137
    9. '   ' → logprob: -15.501025199890137
    10. '
' → logprob: -17.25102424621582

Token 739: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6918712258338928
    2. ':' → logprob: -1.566871166229248
    3. ':
' → logprob: -1.691871166229248
    4. 'remove' → logprob: -2.941871166229248
    5. '           ' → logprob: -3.066871166229248
    6. ' remove' → logprob: -5.191871166229248
    7. '):
' → logprob: -7.691871166229248
    8. '(remove' → logprob: -7.816871166229248
    9. '   ' → logprob: -8.191871643066406
    10. '.remove' → logprob: -9.066871643066406

Token 740: '               ' (ID: 506)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.1247057318687439
    2. '           ' → logprob: -2.7497057914733887
    3. '               ' → logprob: -3.7497057914733887
    4. '       ' → logprob: -3.7497057914733887
    5. ' remove' → logprob: -5.624705791473389
    6. '   ' → logprob: -5.999705791473389
    7. '	remove' → logprob: -8.99970531463623
    8. '```' → logprob: -11.12470531463623
    9. '.remove' → logprob: -12.12470531463623
    10. '(remove' → logprob: -12.24970531463623

Token 741: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' (adapté à ' remove') → logprob: -0.016176657751202583
    2. 'des' → logprob: -4.141176700592041
    3. ' remove' → logprob: -9.016176223754883
    4. 'books' → logprob: -12.266176223754883
    5. '   ' → logprob: -12.391176223754883
    6. 'rem' → logprob: -12.766176223754883
    7. 'desk' → logprob: -13.266176223754883
    8. '	remove' → logprob: -13.641176223754883
    9. '.remove' → logprob: -13.766176223754883
    10. 'removed' → logprob: -13.891176223754883

Token 742: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.010312446393072605
    2. 'from' → logprob: -4.760312557220459
    3. 'book' → logprob: -7.510312557220459
    4. '_d' → logprob: -7.885312557220459
    5. '(book' → logprob: -8.1353120803833
    6. '_from' → logprob: -8.2603120803833
    7. '(d' → logprob: -9.8853120803833
    8. '_' → logprob: -10.1353120803833
    9. '(loc' → logprob: -10.2603120803833
    10. '_books' → logprob: -10.6353120803833

Token 743: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.00020449401927180588
    2. 'from' → logprob: -8.500204086303711
    3. '(loc' → logprob: -14.250204086303711
    4. '_loc' → logprob: -17.00020408630371
    5. '_location' → logprob: -17.25020408630371
    6. 'From' → logprob: -17.25020408630371
    7. 's' → logprob: -17.37520408630371
    8. ' from' → logprob: -17.50020408630371
    9. '_book' → logprob: -17.50020408630371
    10. '(book' → logprob: -17.75020408630371

Token 744: '_d' (ID: 1565)
  Prédit: 'desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'desk' → logprob: -0.08604775369167328
    2. 'd' → logprob: -2.961047649383545
    3. 'loc' → logprob: -3.961047649383545
    4. '_d' → logprob: -4.961047649383545
    5. 'book' → logprob: -5.961047649383545
    6. 'des' → logprob: -7.086047649383545
    7. 'deck' → logprob: -8.086048126220703
    8. 'location' → logprob: -8.086048126220703
    9. ' desk' → logprob: -8.461048126220703
    10. '(loc' → logprob: -9.461048126220703

Token 745: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.0010490043787285686
    2. 'sk' → logprob: -6.876049041748047
    3. 'es' → logprob: -11.376049041748047
    4. 'ek' → logprob: -13.376049041748047
    5. 'k' → logprob: -14.501049041748047
    6. 'e' → logprob: -14.751049041748047
    7. '(' → logprob: -15.126049041748047
    8. ' esk' → logprob: -15.376049041748047
    9. 'esc' → logprob: -15.376049041748047
    10. 'ask' → logprob: -15.376049041748047

Token 746: '(loc' (ID: 41216)
  Prédit: '(loc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loc' → logprob: 0.0
    2. '(' → logprob: -18.0
    3. 'loc' → logprob: -18.875
    4. ' loc' → logprob: -19.5
    5. ' (' → logprob: -20.75
    6. '	loc' → logprob: -20.875
    7. '(
' → logprob: -21.875
    8. '.loc' → logprob: -22.125
    9. '(locator' → logprob: -22.625
    10. 'LOC' → logprob: -22.75

Token 747: ',' (ID: 11)
  Prédit: '(loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loc' → logprob: -0.260163813829422
    2. ',' → logprob: -1.5101637840270996
    3. ' loc' → logprob: -5.5101637840271
    4. 'loc' → logprob: -5.5101637840271
    5. ' ,' → logprob: -10.510164260864258
    6. ')' → logprob: -10.635164260864258
    7. '               ' → logprob: -11.010164260864258
    8. '           ' → logprob: -11.010164260864258
    9. '	loc' → logprob: -11.885164260864258
    10. ' (' → logprob: -12.010164260864258

Token 748: ' book' (ID: 2392)
  Prédit: 'loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loc' → logprob: -0.001502717612311244
    2. ' loc' → logprob: -6.501502513885498
    3. 'book' → logprob: -15.251502990722656
    4. '(loc' → logprob: -16.126502990722656
    5. '	loc' → logprob: -17.501502990722656
    6. '           ' → logprob: -18.626502990722656
    7. '               ' → logprob: -18.626502990722656
    8. 'location' → logprob: -19.251502990722656
    9. '_loc' → logprob: -19.251502990722656
    10. 'LOC' → logprob: -19.626502990722656

Token 749: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012105531059205532
    2. ')
' → logprob: -4.512105464935303
    3. ')

' → logprob: -7.387105464935303
    4. '           ' → logprob: -7.762105464935303
    5. ')
' → logprob: -12.012105941772461
    6. '               ' → logprob: -12.762105941772461
    7. '       ' → logprob: -14.137105941772461
    8. ' )' → logprob: -14.262105941772461
    9. ')

' → logprob: -14.387105941772461
    10. ')#' → logprob: -15.012105941772461

Token 750: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14495325088500977
    2. '```' → logprob: -2.0199532508850098
    3. ' if' → logprob: -7.51995325088501
    4. '            
' → logprob: -7.51995325088501
    5. '<|end|>' → logprob: -8.144952774047852
    6. '``' → logprob: -8.144952774047852
    7. 'if' → logprob: -8.394952774047852
    8. '       ' → logprob: -9.144952774047852
    9. '               ' → logprob: -9.519952774047852
    10. '
' → logprob: -10.144952774047852

Token 751: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004800464957952499
    2. 'update' → logprob: -6.004800319671631
    3. '           ' → logprob: -6.129800319671631
    4. '               ' → logprob: -9.879800796508789
    5. 'try' → logprob: -10.379800796508789
    6. '#' → logprob: -10.504800796508789
    7. ' if' → logprob: -11.004800796508789
    8. '   ' → logprob: -11.379800796508789
    9. '       ' → logprob: -12.379800796508789
    10. '                   ' → logprob: -13.879800796508789

Token 752: ' loc' (ID: 1539)
  Prédit: 'loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loc' → logprob: -0.3132629990577698
    2. ' loc' → logprob: -1.313262939453125
    3. '(loc' → logprob: -14.438262939453125
    4. '               ' → logprob: -14.688262939453125
    5. '                   ' → logprob: -15.688262939453125
    6. '	loc' → logprob: -16.063262939453125
    7. '           ' → logprob: -17.188262939453125
    8. '                           ' → logprob: -17.813262939453125
    9. '   ' → logprob: -17.813262939453125
    10. '_loc' → logprob: -18.688262939453125

Token 753: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3869130611419678
    2. ' ==' → logprob: -1.1369130611419678
    3. ' !=' → logprob: -11.761913299560547
    4. '==
' → logprob: -11.761913299560547
    5. '!=' → logprob: -11.886913299560547
    6. '()==' → logprob: -12.011913299560547
    7. '0' → logprob: -12.261913299560547
    8. ')==' → logprob: -12.636913299560547
    9. ']==' → logprob: -13.261913299560547
    10. ')' → logprob: -13.886913299560547

Token 754: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.7500057220459
    4. '           ' → logprob: -18.8750057220459
    5. '```' → logprob: -19.0000057220459
    6. '                   ' → logprob: -19.8750057220459
    7. '=' → logprob: -20.0000057220459
    8. '۰' → logprob: -20.0000057220459
    9. '               ' → logprob: -20.1250057220459
    10. '       ' → logprob: -20.1250057220459

Token 755: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '۰' → logprob: -19.625001907348633
    5. '```' → logprob: -20.125001907348633
    6. '=' → logprob: -20.375001907348633
    7. '[' → logprob: -20.750001907348633
    8. 'def' → logprob: -21.187501907348633
    9. '1' → logprob: -21.187501907348633
    10. '０' → logprob: -21.312501907348633

Token 756: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43040403723716736
    2. ':
' → logprob: -1.0554040670394897
    3. ' and' → logprob: -6.930404186248779
    4. '):
' → logprob: -8.180403709411621
    5. '           ' → logprob: -8.805403709411621
    6. '):' → logprob: -9.805403709411621
    7. '                   ' → logprob: -9.930403709411621
    8. ' :' → logprob: -10.180403709411621
    9. ' :
' → logprob: -10.305403709411621
    10. '               ' → logprob: -10.680403709411621

Token 757: '                   ' (ID: 699)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.5861548185348511
    2. '                   ' → logprob: -1.336154818534851
    3. ' update' → logprob: -2.0861549377441406
    4. '               ' → logprob: -2.9611549377441406
    5. '           ' → logprob: -5.836154937744141
    6. '   ' → logprob: -6.336154937744141
    7. '       ' → logprob: -9.96115493774414
    8. '                       ' → logprob: -11.33615493774414
    9. '	update' → logprob: -13.21115493774414
    10. '.update' → logprob: -13.58615493774414

Token 758: ' #' (ID: 1069)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.16870196163654327
    2. ' update' → logprob: -1.9187020063400269
    3. '                   ' → logprob: -4.918702125549316
    4. '   ' → logprob: -7.918702125549316
    5. '                       ' → logprob: -8.043702125549316
    6. '           ' → logprob: -8.418702125549316
    7. '               ' → logprob: -8.668702125549316
    8. '       ' → logprob: -10.543702125549316
    9. 'remove' → logprob: -11.918702125549316
    10. '	update' → logprob: -12.168702125549316

Token 759: ' removed' (ID: 11906)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.624483585357666
    2. 'd' → logprob: -1.124483585357666
    3. 'try' → logprob: -1.999483585357666
    4. '           ' → logprob: -6.124483585357666
    5. 'if' → logprob: -6.874483585357666
    6. '#' → logprob: -7.749483585357666
    7. '                   ' → logprob: -8.999483108520508
    8. 'remove' → logprob: -9.124483108520508
    9. '               ' → logprob: -9.249483108520508
    10. '   ' → logprob: -9.874483108520508

Token 760: ' from' (ID: 591)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.2620616555213928
    2. 'update' → logprob: -2.012061595916748
    3. '           ' → logprob: -2.887061595916748
    4. ' try' → logprob: -3.887061595916748
    5. 'd' → logprob: -4.512061595916748
    6. '                   ' → logprob: -5.637061595916748
    7. 'book' → logprob: -6.262061595916748
    8. '#' → logprob: -6.512061595916748
    9. '               ' → logprob: -6.887061595916748
    10. ' update' → logprob: -7.387061595916748

Token 761: ' D' (ID: 415)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1994775377388578e-05
    2. ' d' → logprob: -12.000012397766113
    3. 'the' → logprob: -12.875012397766113
    4. '_d' → logprob: -13.875012397766113
    5. '
' → logprob: -14.000012397766113
    6. '```' → logprob: -15.375012397766113
    7. 'book' → logprob: -15.500012397766113
    8. '#' → logprob: -15.500012397766113
    9. '	d' → logprob: -15.750012397766113
    10. 'l' → logprob: -16.375011444091797

Token 762: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.868328920158092e-05
    2. '_' → logprob: -10.625028610229492
    3. '
' → logprob: -13.250028610229492
    4. 'l' → logprob: -15.250028610229492
    5. '#' → logprob: -15.437528610229492
    6. '\xe2\x82' → logprob: -15.437528610229492
    7. 'd' → logprob: -15.500028610229492
    8. '```' → logprob: -15.687528610229492
    9. '_l' → logprob: -15.750028610229492
    10. '   ' → logprob: -15.875028610229492

Token 763: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7178577184677124
    2. '                   ' → logprob: -0.7178577184677124
    3. '               ' → logprob: -4.342857837677002
    4. 'update' → logprob: -4.592857837677002
    5. ' update' → logprob: -7.092857837677002
    6. '       ' → logprob: -8.592857360839844
    7. '   ' → logprob: -8.717857360839844
    8. '                       ' → logprob: -10.342857360839844
    9. '
' → logprob: -10.342857360839844
    10. '.update' → logprob: -11.842857360839844

Token 764: ' remove' (ID: 6234)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.15733660757541656
    2. 'try' → logprob: -2.407336711883545
    3. 'd' → logprob: -3.157336711883545
    4. '           ' → logprob: -4.657336711883545
    5. '                   ' → logprob: -6.657336711883545
    6. 'if' → logprob: -6.782336711883545
    7. '               ' → logprob: -7.782336711883545
    8. ' update' → logprob: -8.282336235046387
    9. '   ' → logprob: -8.907336235046387
    10. ' try' → logprob: -9.657336235046387

Token 765: ' from' (ID: 591)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.008952890522778034
    2. 'from' → logprob: -5.008953094482422
    3. '(book' → logprob: -6.758953094482422
    4. '_book' → logprob: -7.258953094482422
    5. ' book' → logprob: -8.258953094482422
    6. ' from' → logprob: -10.133953094482422
    7. 'the' → logprob: -10.883953094482422
    8. '   ' → logprob: -10.883953094482422
    9. '_l' → logprob: -11.633953094482422
    10. 'update' → logprob: -11.758953094482422

Token 766: ' L' (ID: 451)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.53050296427682e-05
    2. ' d' → logprob: -9.37508487701416
    3. '```' → logprob: -16.000085830688477
    4. '
' → logprob: -16.250085830688477
    5. 'update' → logprob: -16.875085830688477
    6. '   ' → logprob: -17.250085830688477
    7. '_d' → logprob: -17.250085830688477
    8. '       ' → logprob: -18.000085830688477
    9. '           ' → logprob: -18.000085830688477
    10. '	d' → logprob: -18.250085830688477

Token 767: 'RU' (ID: 63252)
  Prédit: 'RU'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RU' → logprob: -0.008188411593437195
    2. 'ru' → logprob: -4.883188247680664
    3. 'R' → logprob: -8.008188247680664
    4. '_ru' → logprob: -8.883188247680664
    5. 'r' → logprob: -9.883188247680664
    6. '1' → logprob: -11.008188247680664
    7. '_r' → logprob: -11.633188247680664
    8. ' RU' → logprob: -12.008188247680664
    9. '_' → logprob: -12.508188247680664
    10. '{' → logprob: -12.633188247680664

Token 768: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21977394819259644
    2. '           ' → logprob: -2.344774007797241
    3. 'update' → logprob: -2.344774007797241
    4. '               ' → logprob: -5.844773769378662
    5. ' update' → logprob: -6.094773769378662
    6. '       ' → logprob: -8.46977424621582
    7. '(update' → logprob: -9.84477424621582
    8. '.update' → logprob: -10.09477424621582
    9. '   ' → logprob: -10.34477424621582
    10. '                       ' → logprob: -10.46977424621582

Token 769: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004680037964135408
    2. 'update' → logprob: -5.879680156707764
    3. ' update' → logprob: -6.879680156707764
    4. '           ' → logprob: -7.754680156707764
    5. '               ' → logprob: -8.004679679870605
    6. '       ' → logprob: -10.129679679870605
    7. '   ' → logprob: -10.629679679870605
    8. '```' → logprob: -11.629679679870605
    9. '                       ' → logprob: -12.004679679870605
    10. '
' → logprob: -14.129679679870605

Token 770: ' try' (ID: 2075)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.03691377863287926
    2. ' update' → logprob: -3.5369138717651367
    3. '           ' → logprob: -5.036913871765137
    4. 'try' (adapté à ' try') → logprob: -7.661913871765137
    5. '   ' → logprob: -9.161913871765137
    6. ' try' → logprob: -10.286913871765137
    7. '               ' → logprob: -11.536913871765137
    8. 'd' → logprob: -12.036913871765137
    9. 'if' → logprob: -12.286913871765137
    10. '       ' → logprob: -12.411913871765137

Token 771: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3198350965976715
    2. ':
' → logprob: -1.4448350667953491
    3. '                       ' → logprob: -3.6948351860046387
    4. '                   ' → logprob: -4.569835186004639
    5. '   ' → logprob: -6.069835186004639
    6. '       ' → logprob: -8.69483470916748
    7. '           ' → logprob: -9.44483470916748
    8. '               ' → logprob: -9.94483470916748
    9. '```' → logprob: -10.06983470916748
    10. '{' → logprob: -11.19483470916748

Token 772: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007929784245789051
    2. '   ' → logprob: -5.257929801940918
    3. '       ' → logprob: -6.132929801940918
    4. '                   ' → logprob: -8.257929801940918
    5. '               ' → logprob: -9.257929801940918
    6. '                           ' → logprob: -9.382929801940918
    7. '           ' → logprob: -10.132929801940918
    8. ':' → logprob: -10.757929801940918
    9. '                               ' → logprob: -12.257929801940918
    10. '                      ' → logprob: -12.507929801940918

Token 773: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.008422375656664371
    2. '                       ' → logprob: -5.258422374725342
    3. ' d' → logprob: -5.883422374725342
    4. '                   ' → logprob: -8.0084228515625
    5. 'update' → logprob: -10.7584228515625
    6. '                           ' → logprob: -11.3834228515625
    7. '   ' → logprob: -11.3834228515625
    8. '               ' → logprob: -11.7584228515625
    9. '           ' → logprob: -11.8834228515625
    10. '       ' → logprob: -12.0084228515625

Token 774: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '                   ' → logprob: -17.0
    3. '           ' → logprob: -17.75
    4. '
' → logprob: -17.75
    5. '```' → logprob: -17.75
    6. '_' → logprob: -17.875
    7. '   ' → logprob: -17.875
    8. 'l' → logprob: -18.0
    9. 'd' → logprob: -18.75
    10. '_l' → logprob: -19.0

Token 775: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.0280383548888494e-06
    2. 'remove' → logprob: -14.500000953674316
    3. 'l' → logprob: -15.750000953674316
    4. 'd' → logprob: -15.750000953674316
    5. 'update' → logprob: -16.875001907348633
    6. '_d' → logprob: -17.375001907348633
    7. '.remove' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '_r' → logprob: -19.125001907348633
    10. 'L' → logprob: -19.250001907348633

Token 776: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0005349211278371513
    2. 'r' → logprob: -8.000535011291504
    3. 'l' → logprob: -9.250535011291504
    4. 'u' → logprob: -10.250535011291504
    5. 'rl' → logprob: -11.125535011291504
    6. 'd' → logprob: -11.125535011291504
    7. '_ru' → logprob: -11.125535011291504
    8. '_l' → logprob: -11.375535011291504
    9. 'RU' → logprob: -12.750535011291504
    10. 'lu' → logprob: -13.000535011291504

Token 777: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -3.857719275401905e-05
    2. '.' → logprob: -10.375038146972656
    3. 'remove' → logprob: -11.875038146972656
    4. ' .' → logprob: -15.750038146972656
    5. '   ' → logprob: -16.625038146972656
    6. '.Remove' → logprob: -17.750038146972656
    7. '	remove' → logprob: -18.125038146972656
    8. '(remove' → logprob: -18.125038146972656
    9. ' remove' → logprob: -18.375038146972656
    10. '_remove' → logprob: -18.500038146972656

Token 778: '(book' (ID: 56932)
  Prédit: '(book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(book' → logprob: -0.0001584850688232109
    2. 'book' → logprob: -8.750158309936523
    3. '	book' → logprob: -18.000158309936523
    4. '(b' → logprob: -18.500158309936523
    5. ' book' → logprob: -18.500158309936523
    6. 'Book' → logprob: -19.875158309936523
    7. '(' → logprob: -20.000158309936523
    8. '(Book' → logprob: -20.500158309936523
    9. '   ' → logprob: -20.625158309936523
    10. '/book' → logprob: -20.750158309936523

Token 779: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7775964140892029
    2. '                   ' → logprob: -0.7775964140892029
    3. ')' → logprob: -2.5275964736938477
    4. '                       ' → logprob: -7.277596473693848
    5. ')
' → logprob: -8.652596473693848
    6. 'except' → logprob: -8.902596473693848
    7. '           ' → logprob: -9.777596473693848
    8. '                           ' → logprob: -10.652596473693848
    9. '               ' → logprob: -10.902596473693848
    10. ' except' → logprob: -11.527596473693848

Token 780: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019150725565850735
    2. ' except' → logprob: -7.001914978027344
    3. 'except' → logprob: -7.001914978027344
    4. '               ' → logprob: -9.876914978027344
    5. '                       ' → logprob: -10.876914978027344
    6. '           ' → logprob: -11.001914978027344
    7. '       ' → logprob: -13.501914978027344
    8. '   ' → logprob: -13.626914978027344
    9. '
' → logprob: -14.501914978027344
    10. '```' → logprob: -14.626914978027344

Token 781: ' except' (ID: 6384)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0718294084072113
    2. 'except' (adapté à ' except') → logprob: -2.821829319000244
    3. ' except' → logprob: -4.696829319000244
    4. '                       ' → logprob: -7.446829319000244
    5. '               ' → logprob: -9.946829795837402
    6. '           ' → logprob: -10.696829795837402
    7. ':
' → logprob: -12.071829795837402
    8. '   ' → logprob: -12.196829795837402
    9. ':' → logprob: -12.321829795837402
    10. '	except' → logprob: -12.446829795837402

Token 782: ':
' (ID: 734)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.00789655651897192
    2. ':' → logprob: -4.882896423339844
    3. '(Value' → logprob: -9.257896423339844
    4. 'Exception' → logprob: -9.382896423339844
    5. 'Index' → logprob: -10.007896423339844
    6. ' Value' → logprob: -10.757896423339844
    7. ':
' → logprob: -11.257896423339844
    8. '<Value' → logprob: -11.382896423339844
    9. ':value' → logprob: -11.882896423339844
    10. '.Value' → logprob: -12.007896423339844

Token 783: '                       ' (ID: 968)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.4129279553890228
    2. 'pass' → logprob: -2.1629278659820557
    3. 'Key' → logprob: -2.1629278659820557
    4. 'Exception' → logprob: -2.5379278659820557
    5. 'Index' → logprob: -3.7879278659820557
    6. 'Pass' → logprob: -6.287928104400635
    7. '       ' → logprob: -6.662928104400635
    8. ':' → logprob: -6.787928104400635
    9. '           ' → logprob: -6.912928104400635
    10. ' pass' → logprob: -8.412927627563477

Token 784: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.25196465849876404
    2. 'pass' (adapté à ' pass') → logprob: -1.5019646883010864
    3. 'None' → logprob: -10.626964569091797
    4. ' None' → logprob: -12.501964569091797
    5. '                       ' → logprob: -12.876964569091797
    6. '               ' → logprob: -13.376964569091797
    7. '           ' → logprob: -13.501964569091797
    8. '                   ' → logprob: -14.001964569091797
    9. '	pass' → logprob: -14.251964569091797
    10. '0' → logprob: -14.751964569091797

Token 785: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4884105324745178
    2. '<|end|>' → logprob: -1.113410472869873
    3. '
' → logprob: -2.988410472869873
    4. '<|end|>' → logprob: -5.488410472869873
    5. '            
' → logprob: -6.488410472869873
    6. '```' → logprob: -7.863410472869873
    7. '               ' → logprob: -8.113410949707031
    8. '       ' → logprob: -8.738410949707031
    9. '  
' → logprob: -9.363410949707031
    10. 'else' → logprob: -9.488410949707031

Token 786: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0878252163529396
    2. '
' → logprob: -2.587825298309326
    3. '            
' → logprob: -5.212825298309326
    4. '```' → logprob: -6.337825298309326
    5. '               ' → logprob: -7.462825298309326
    6. ' if' → logprob: -7.712825298309326
    7. ' 
' → logprob: -8.712824821472168
    8. '                
' → logprob: -9.837824821472168
    9. ' ' → logprob: -9.837824821472168
    10. '       ' → logprob: -9.962824821472168

Token 787: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6294877529144287
    2. 'if' → logprob: -1.3794877529144287
    3. '#' (adapté à ' #') → logprob: -1.6294877529144287
    4. '```' → logprob: -4.129487991333008
    5. '``' → logprob: -6.379487991333008
    6. 'put' → logprob: -6.879487991333008
    7. ' if' → logprob: -9.254487991333008
    8. 'next' → logprob: -9.504487991333008
    9. '            
' → logprob: -9.504487991333008
    10. '       ' → logprob: -9.629487991333008

Token 788: ' After' (ID: 6311)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28442859649658203
    2. 'if' → logprob: -1.409428596496582
    3. '           ' → logprob: -5.909428596496582
    4. 'put' → logprob: -8.284428596496582
    5. '       ' → logprob: -9.659428596496582
    6. 'cost' → logprob: -9.909428596496582
    7. 'd' → logprob: -10.409428596496582
    8. 'If' → logprob: -10.534428596496582
    9. 'new' → logprob: -10.659428596496582
    10. 'place' → logprob: -11.034428596496582

Token 789: ' giving' (ID: 9874)
  Prédit: 'taking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taking' → logprob: -0.26782962679862976
    2. ' taking' → logprob: -1.7678296566009521
    3. 'if' → logprob: -4.267829418182373
    4. 'access' → logprob: -4.517829418182373
    5. 'getting' → logprob: -5.142829418182373
    6. 'rem' → logprob: -5.142829418182373
    7. '   ' → logprob: -5.642829418182373
    8. '#' → logprob: -5.767829418182373
    9. ' removing' → logprob: -5.892829418182373
    10. ' if' → logprob: -6.142829418182373

Token 790: ' copy' (ID: 5150)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8350601196289062
    2. 'book' → logprob: -1.2100601196289062
    3. ' the' → logprob: -2.2100601196289062
    4. 'out' → logprob: -2.4600601196289062
    5. ' out' → logprob: -3.3350601196289062
    6. ' book' → logprob: -3.5850601196289062
    7. '           ' → logprob: -5.835060119628906
    8. '_book' → logprob: -6.960060119628906
    9. '
' → logprob: -7.460060119628906
    10. 'student' → logprob: -7.585060119628906

Token 791: ',' (ID: 11)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4804130792617798
    2. ' to' → logprob: -0.9804130792617798
    3. '           ' → logprob: -5.85541296005249
    4. ',' → logprob: -6.85541296005249
    5. ' out' → logprob: -7.35541296005249
    6. 'of' → logprob: -7.48041296005249
    7. 'out' → logprob: -7.48041296005249
    8. ' of' → logprob: -7.48041296005249
    9. '               ' → logprob: -11.480413436889648
    10. 'away' → logprob: -11.480413436889648

Token 792: ' put' (ID: 3006)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7289126515388489
    2. '#' → logprob: -0.8539126515388489
    3. 'if' → logprob: -2.478912591934204
    4. ' #' → logprob: -5.603912830352783
    5. ' if' → logprob: -5.853912830352783
    6. '
' → logprob: -7.978912830352783
    7. 'cost' → logprob: -8.103912353515625
    8. '       ' → logprob: -8.728912353515625
    9. 'new' → logprob: -9.103912353515625
    10. '```' → logprob: -9.228912353515625

Token 793: ' book' (ID: 2392)
  Prédit: '_book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.18249468505382538
    2. 'book' → logprob: -2.432494640350342
    3. 'on' → logprob: -3.307494640350342
    4. 'the' → logprob: -3.682494640350342
    5. '           ' → logprob: -5.182494640350342
    6. '#' → logprob: -6.182494640350342
    7. '(book' → logprob: -6.307494640350342
    8. ' book' → logprob: -6.557494640350342
    9. 'it' → logprob: -6.682494640350342
    10. '_on' → logprob: -6.807494640350342

Token 794: ' back' (ID: 1602)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.640928328037262
    2. ' on' → logprob: -0.765928328037262
    3. '           ' → logprob: -5.765928268432617
    4. ' back' → logprob: -6.890928268432617
    5. 'back' → logprob: -6.890928268432617
    6. '(' → logprob: -7.140928268432617
    7. '_on' → logprob: -7.390928268432617
    8. ')' → logprob: -8.390928268432617
    9. '<|end|>' → logprob: -8.390928268432617
    10. '```' → logprob: -8.515928268432617

Token 795: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.670400857925415
    2. ' on' → logprob: -0.795400857925415
    3. 'on' → logprob: -3.545400857925415
    4. ' back' → logprob: -5.920400619506836
    5. '```' → logprob: -6.295400619506836
    6. '            
' → logprob: -7.545400619506836
    7. ' onto' → logprob: -7.795400619506836
    8. '            ' → logprob: -8.170400619506836
    9. '<|end|>' → logprob: -8.170400619506836
    10. ' if' → logprob: -8.170400619506836

Token 796: ' D' (ID: 415)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006316359154880047
    2. 'd' → logprob: -5.881316184997559
    3. 'des' → logprob: -6.381316184997559
    4. 's' → logprob: -7.631316184997559
    5. '1' → logprob: -7.631316184997559
    6. 'desk' → logprob: -7.756316184997559
    7. '(' → logprob: -8.631316184997559
    8. '#' → logprob: -10.006316184997559
    9. 'def' → logprob: -10.506316184997559
    10. ' ' → logprob: -10.881316184997559

Token 797: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. 'esk' → logprob: -11.625017166137695
    3. 'es' → logprob: -12.375017166137695
    4. '0' → logprob: -12.750017166137695
    5. ' ' → logprob: -14.250017166137695
    6. '_' → logprob: -16.375017166137695
    7. '```' → logprob: -17.125017166137695
    8. '   ' → logprob: -17.375017166137695
    9. '(' → logprob: -17.500017166137695
    10. '`' → logprob: -17.875017166137695

Token 798: ' according' (ID: 7065)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024135977029800415
    2. 'put' → logprob: -3.8991360664367676
    3. 'if' → logprob: -5.899136066436768
    4. ' put' → logprob: -7.899136066436768
    5. '            
' → logprob: -8.64913558959961
    6. ' if' → logprob: -8.89913558959961
    7. '[' → logprob: -10.52413558959961
    8. '
' → logprob: -10.64913558959961
    9. '.put' → logprob: -10.64913558959961
    10. '_put' → logprob: -11.27413558959961

Token 799: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.008408191613852978
    2. ' to' → logprob: -5.008408069610596
    3. '_to' → logprob: -7.133408069610596
    4. '           ' → logprob: -7.633408069610596
    5. '       ' → logprob: -9.383408546447754
    6. '```' → logprob: -9.508408546447754
    7. '   ' → logprob: -9.633408546447754
    8. 'def' → logprob: -10.508408546447754
    9. 'ly' → logprob: -11.008408546447754
    10. '        ' → logprob: -11.008408546447754

Token 800: ' rules' (ID: 9607)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.054636836051941
    2. ' the' → logprob: -1.304636836051941
    3. ' its' → logprob: -1.554636836051941
    4. 'its' → logprob: -3.5546369552612305
    5. ' your' → logprob: -4.0546369552612305
    6. ' whether' → logprob: -4.1796369552612305
    7. 'd' → logprob: -4.4296369552612305
    8. '#' → logprob: -4.6796369552612305
    9. 'your' → logprob: -4.8046369552612305
    10. 'whether' → logprob: -4.8046369552612305

Token 801: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017958412354346365
    2. '            
' → logprob: -9.375179290771484
    3. 'if' → logprob: -10.375179290771484
    4. '```' → logprob: -10.625179290771484
    5. '<|end|>' → logprob: -11.250179290771484
    6. ' if' → logprob: -11.375179290771484
    7. '
' → logprob: -11.500179290771484
    8. '          ' → logprob: -13.625179290771484
    9. '<|end|>' → logprob: -14.250179290771484
    10. '            ' → logprob: -14.625179290771484

Token 802: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007640030235052109
    2. 'if' → logprob: -7.375763893127441
    3. '```' → logprob: -9.125763893127441
    4. ' if' → logprob: -11.625763893127441
    5. '            
' → logprob: -11.625763893127441
    6. '       ' → logprob: -12.500763893127441
    7. '#' → logprob: -12.625763893127441
    8. '``' → logprob: -14.000763893127441
    9. '
' → logprob: -14.375763893127441
    10. 'while' → logprob: -14.625763893127441

Token 803: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2528076171875
    2. 'if' (adapté à ' if') → logprob: -1.5028076171875
    3. '```' → logprob: -7.6278076171875
    4. ' if' → logprob: -8.2528076171875
    5. '#' → logprob: -9.3778076171875
    6. 'd' → logprob: -10.8778076171875
    7. '``' → logprob: -12.0028076171875
    8. '            
' → logprob: -12.0028076171875
    9. 'put' → logprob: -13.0028076171875
    10. 'while' → logprob: -13.2528076171875

Token 804: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.06907114386558533
    2. '0' → logprob: -3.694071054458618
    3. 'book' → logprob: -4.069071292877197
    4. 'loc' → logprob: -4.944071292877197
    5. ' len' → logprob: -5.069071292877197
    6. 'des' → logprob: -5.194071292877197
    7. 'c' → logprob: -5.819071292877197
    8. 'books' → logprob: -7.319071292877197
    9. 'd' → logprob: -7.444071292877197
    10. ' ' → logprob: -8.069070816040039

Token 805: '(des' (ID: 61239)
  Prédit: '(des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(des' → logprob: -0.0025383250322192907
    2. 'des' → logprob: -6.002538204193115
    3. '(' → logprob: -10.002538681030273
    4. ' (' → logprob: -11.752538681030273
    5. '(d' → logprob: -12.127538681030273
    6. '[' → logprob: -12.877538681030273
    7. '(ds' → logprob: -14.627538681030273
    8. '([' → logprob: -15.127538681030273
    9. '(de' → logprob: -15.377538681030273
    10. '(dis' → logprob: -16.002538681030273

Token 806: 'ks' (ID: 2484)
  Prédit: 'ks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -9.610702363715973e-06
    2. 'k' → logprob: -11.625009536743164
    3. 's' → logprob: -14.500009536743164
    4. '(' → logprob: -16.375009536743164
    5. 'kes' → logprob: -17.875009536743164
    6. '1' → logprob: -18.000009536743164
    7. '0' → logprob: -18.125009536743164
    8. '[' → logprob: -18.125009536743164
    9. 'cks' → logprob: -18.625009536743164
    10. 'sk' → logprob: -19.250009536743164

Token 807: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.618001053633634e-05
    2. '0' → logprob: -10.625025749206543
    3. ')' → logprob: -13.875025749206543
    4. '(' → logprob: -15.625025749206543
    5. '```' → logprob: -15.625025749206543
    6. ' [' → logprob: -16.37502670288086
    7. '1' → logprob: -16.50002670288086
    8. ')==' → logprob: -16.62502670288086
    9. '==' → logprob: -16.75002670288086
    10. '[
' → logprob: -17.00002670288086

Token 808: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -14.000001907348633
    3. '[' → logprob: -14.500001907348633
    4. ' ' → logprob: -14.875001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '```' → logprob: -16.875001907348633
    7. '
' → logprob: -18.125001907348633
    8. '۰' → logprob: -18.500001907348633
    9. '#' → logprob: -18.875001907348633
    10. ')' → logprob: -18.875001907348633

Token 809: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14473038911819458
    2. '])' → logprob: -2.39473032951355
    3. ')<' → logprob: -3.14473032951355
    4. ')]' → logprob: -8.269730567932129
    5. ']<' → logprob: -9.644730567932129
    6. '）' → logprob: -10.144730567932129
    7. ']' → logprob: -10.394730567932129
    8. ' )' → logprob: -10.644730567932129
    9. '))' → logprob: -11.144730567932129
    10. '())' → logprob: -12.019730567932129

Token 810: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1432250738143921
    2. ' <' → logprob: -2.0182251930236816
    3. '==' → logprob: -8.643224716186523
    4. ' ==' → logprob: -9.643224716186523
    5. '<size' → logprob: -9.768224716186523
    6. '<int' → logprob: -10.018224716186523
    7. '<len' → logprob: -10.018224716186523
    8. '()<' → logprob: -10.518224716186523
    9. '<c' → logprob: -10.643224716186523
    10. ')<' → logprob: -10.768224716186523

Token 811: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.226628895296017e-06
    2. ' c' → logprob: -11.875007629394531
    3. '   ' → logprob: -16.50000762939453
    4. '<c' → logprob: -16.62500762939453
    5. '	c' → logprob: -17.00000762939453
    6. '0' → logprob: -17.50000762939453
    7. ')c' → logprob: -17.62500762939453
    8. '$c' → logprob: -19.87500762939453
    9. '
' → logprob: -20.00000762939453
    10. '_c' → logprob: -20.25000762939453

Token 812: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1428937166929245
    2. ':
' → logprob: -2.0178937911987305
    3. ' and' → logprob: -9.26789379119873
    4. ':
' → logprob: -10.14289379119873
    5. '):' → logprob: -10.76789379119873
    6. '):
' → logprob: -11.01789379119873
    7. ':

' → logprob: -11.51789379119873
    8. ',' → logprob: -11.76789379119873
    9. '           ' → logprob: -12.14289379119873
    10. ' :' → logprob: -12.26789379119873

Token 813: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47688648104667664
    2. '       ' → logprob: -1.851886510848999
    3. '           ' → logprob: -2.226886510848999
    4. 'put' → logprob: -2.476886510848999
    5. ' put' → logprob: -3.976886510848999
    6. '   ' → logprob: -5.60188627243042
    7. '	put' → logprob: -6.22688627243042
    8. '```' → logprob: -6.22688627243042
    9. '.put' → logprob: -6.85188627243042
    10. ':
' → logprob: -7.60188627243042

Token 814: ' #' (ID: 1069)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.004289353732019663
    2. '               ' → logprob: -6.254289150238037
    3. 'des' → logprob: -6.379289150238037
    4. '           ' → logprob: -8.004289627075195
    5. ' put' → logprob: -8.129289627075195
    6. '       ' → logprob: -11.504289627075195
    7. 'puts' → logprob: -11.754289627075195
    8. '	put' → logprob: -12.379289627075195
    9. '#' (adapté à ' #') → logprob: -13.004289627075195
    10. '   ' → logprob: -13.254289627075195

Token 815: ' put' (ID: 3006)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.0028243737760931253
    2. ' put' → logprob: -6.627824306488037
    3. '               ' → logprob: -6.877824306488037
    4. 'des' → logprob: -8.377824783325195
    5. '           ' → logprob: -8.502824783325195
    6. '       ' → logprob: -11.252824783325195
    7. '#' → logprob: -11.377824783325195
    8. 'puts' → logprob: -12.877824783325195
    9. '   ' → logprob: -13.502824783325195
    10. '	put' → logprob: -13.877824783325195

Token 816: ' requested' (ID: 17222)
  Prédit: '_book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.0050512333400547504
    2. 'book' → logprob: -5.505051136016846
    3. '_on' → logprob: -7.755051136016846
    4. 'on' → logprob: -8.005051612854004
    5. 'put' → logprob: -9.130051612854004
    6. '_put' → logprob: -10.630051612854004
    7. '(book' → logprob: -11.005051612854004
    8. 'the' → logprob: -11.255051612854004
    9. 'd' → logprob: -11.755051612854004
    10. '(' → logprob: -11.880051612854004

Token 817: ' book' (ID: 2392)
  Prédit: '_book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.3840675950050354
    2. 'book' → logprob: -1.2590675354003906
    3. ' book' → logprob: -4.009067535400391
    4. 'on' → logprob: -5.009067535400391
    5. '(book' → logprob: -5.259067535400391
    6. '_on' → logprob: -5.634067535400391
    7. ' on' → logprob: -7.259067535400391
    8. '               ' → logprob: -8.00906753540039
    9. '(' → logprob: -9.88406753540039
    10. '   ' → logprob: -10.00906753540039

Token 818: ' on' (ID: 402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5005818605422974
    2. 'on' → logprob: -1.6255818605422974
    3. ' on' → logprob: -2.375581741333008
    4. '               ' → logprob: -2.750581741333008
    5. '_on' → logprob: -3.625581741333008
    6. ' (' → logprob: -4.500581741333008
    7. '                   ' → logprob: -7.500581741333008
    8. '           ' → logprob: -7.875581741333008
    9. ')' → logprob: -8.125581741333008
    10. 'onto' → logprob: -8.875581741333008

Token 819: ' D' (ID: 415)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002036060905084014
    2. 'des' → logprob: -6.377036094665527
    3. ' ' → logprob: -8.252036094665527
    4. 'd' → logprob: -10.377036094665527
    5. '   ' → logprob: -11.377036094665527
    6. '[' → logprob: -11.877036094665527
    7. 'desk' → logprob: -12.002036094665527
    8. '               ' → logprob: -12.377036094665527
    9. '           ' → logprob: -13.002036094665527
    10. 'def' → logprob: -13.252036094665527

Token 820: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009286127984523773
    2. '[' → logprob: -4.884285926818848
    3. 'esk' → logprob: -7.259285926818848
    4. 'es' → logprob: -7.509285926818848
    5. '0' → logprob: -8.009285926818848
    6. '(' → logprob: -9.509285926818848
    7. ' ' → logprob: -12.384285926818848
    8. '```' → logprob: -12.509285926818848
    9. '   ' → logprob: -12.634285926818848
    10. 'esc' → logprob: -13.384285926818848

Token 821: ' directly' (ID: 8516)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008059044368565083
    2. '           ' → logprob: -5.758059024810791
    3. 'put' → logprob: -6.008059024810791
    4. ',' → logprob: -6.883059024810791
    5. '.put' → logprob: -7.758059024810791
    6. ')' → logprob: -8.25805950164795
    7. ' put' → logprob: -8.75805950164795
    8. '[' → logprob: -9.25805950164795
    9. '              ' → logprob: -9.50805950164795
    10. '_put' → logprob: -9.50805950164795

Token 822: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011154872365295887
    2. '           ' → logprob: -4.761154651641846
    3. 'put' → logprob: -7.511154651641846
    4. ' put' → logprob: -7.886154651641846
    5. ')' → logprob: -8.011155128479004
    6. '                   ' → logprob: -8.136155128479004
    7. ',' → logprob: -8.511155128479004
    8. '                ' → logprob: -8.636155128479004
    9. '                
' → logprob: -8.886155128479004
    10. '.put' → logprob: -9.261155128479004

Token 823: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10127782076597214
    2. 'put' → logprob: -2.3512778282165527
    3. ' put' → logprob: -7.351277828216553
    4. '           ' → logprob: -8.851277351379395
    5. '                   ' → logprob: -9.351277351379395
    6. '	put' → logprob: -9.851277351379395
    7. '.put' → logprob: -10.101277351379395
    8. '```' → logprob: -10.476277351379395
    9. '   ' → logprob: -10.976277351379395
    10. '       ' → logprob: -11.101277351379395

Token 824: ' put' (ID: 3006)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' (adapté à ' put') → logprob: -0.002581604989245534
    2. '               ' → logprob: -6.377581596374512
    3. ' put' → logprob: -7.502581596374512
    4. '           ' → logprob: -8.377581596374512
    5. 'des' → logprob: -9.627581596374512
    6. '       ' → logprob: -10.877581596374512
    7. 'puts' → logprob: -12.252581596374512
    8. '	put' → logprob: -12.627581596374512
    9. '   ' → logprob: -13.002581596374512
    10. '.put' → logprob: -14.752581596374512

Token 825: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -1.0280383548888494e-06
    2. ' _' → logprob: -15.500000953674316
    3. '_put' → logprob: -15.500000953674316
    4. '```' → logprob: -15.500000953674316
    5. 'book' → logprob: -15.875000953674316
    6. '_' → logprob: -16.500001907348633
    7. '_BOOK' → logprob: -16.625001907348633
    8. '_books' → logprob: -17.500001907348633
    9. '`' → logprob: -17.625001907348633
    10. '_b' → logprob: -17.875001907348633

Token 826: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.02987081930041313
    2. '_book' → logprob: -3.5298707485198975
    3. 'on' → logprob: -9.029870986938477
    4. '\' → logprob: -15.279870986938477
    5. '```' → logprob: -16.529870986938477
    6. 'book' → logprob: -16.904870986938477
    7. 's' → logprob: -17.029870986938477
    8. '_' → logprob: -17.029870986938477
    9. '__' → logprob: -17.279870986938477
    10. 'Book' → logprob: -17.654870986938477

Token 827: '_d' (ID: 1565)
  Prédit: 'desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'desk' → logprob: -0.713919460773468
    2. 'd' → logprob: -1.3389194011688232
    3. '_d' → logprob: -1.4639194011688232
    4. 'des' → logprob: -4.213919639587402
    5. '0' → logprob: -6.588919639587402
    6. '(' → logprob: -8.588919639587402
    7. '[' → logprob: -8.963919639587402
    8. 'desktop' → logprob: -9.713919639587402
    9. '   ' → logprob: -10.213919639587402
    10. 'Desk' → logprob: -10.463919639587402

Token 828: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.032400768250226974
    2. 'sk' → logprob: -3.5324008464813232
    3. 'es' → logprob: -6.407400608062744
    4. '0' → logprob: -8.282401084899902
    5. '1' → logprob: -8.532401084899902
    6. '(' → logprob: -8.782401084899902
    7. '[' → logprob: -9.282401084899902
    8. 'desk' → logprob: -9.532401084899902
    9. 'ek' → logprob: -9.657401084899902
    10. 'esc' → logprob: -10.157401084899902

Token 829: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.173704271830502e-06
    2. '0' → logprob: -12.87500286102295
    3. ' (' → logprob: -14.62500286102295
    4. '(
' → logprob: -16.000003814697266
    5. '[' → logprob: -19.750003814697266
    6. '```' → logprob: -20.250003814697266
    7. 'def' → logprob: -21.375003814697266
    8. 'd' → logprob: -22.125003814697266
    9. ' ' → logprob: -22.250003814697266
    10. '(

' → logprob: -22.375003814697266

Token 830: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '(' → logprob: -19.75
    4. '[' → logprob: -20.625
    5. '   ' → logprob: -20.75
    6. ')' → logprob: -20.875
    7. '```' → logprob: -21.875
    8. '`' → logprob: -23.0
    9. '
' → logprob: -23.625
    10. '۰' → logprob: -24.5

Token 831: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ' ,' → logprob: -12.375004768371582
    3. ',b' → logprob: -15.125004768371582
    4. '   ' → logprob: -16.125003814697266
    5. ')' → logprob: -18.000003814697266
    6. ',
' → logprob: -18.250003814697266
    7. '           ' → logprob: -18.250003814697266
    8. '       ' → logprob: -18.375003814697266
    9. '               ' → logprob: -18.625003814697266
    10. '```' → logprob: -18.875003814697266

Token 832: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -2.935296834039036e-06
    2. ' book' → logprob: -12.75000286102295
    3. 'b' → logprob: -20.625003814697266
    4. 'Book' → logprob: -21.375003814697266
    5. '	book' → logprob: -21.375003814697266
    6. '   ' → logprob: -21.500003814697266
    7. '(book' → logprob: -22.125003814697266
    8. 'books' → logprob: -23.125003814697266
    9. '_book' → logprob: -23.375003814697266
    10. ' ' → logprob: -24.000003814697266

Token 833: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.030757831409573555
    2. ')' → logprob: -3.5307579040527344
    3. '               ' → logprob: -7.155757904052734
    4. ')
' → logprob: -8.405757904052734
    5. '           ' → logprob: -13.155757904052734
    6. ')

' → logprob: -15.030757904052734
    7. '                   ' → logprob: -15.655757904052734
    8. ' )
' → logprob: -15.780757904052734
    9. ')`
' → logprob: -16.280757904052734
    10. '       ' → logprob: -16.655757904052734

Token 834: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12974146008491516
    2. '               ' → logprob: -2.1297414302825928
    3. 'else' → logprob: -6.879741668701172
    4. '```' → logprob: -7.254741668701172
    5. '<|end|>' → logprob: -8.379741668701172
    6. '       ' → logprob: -8.879741668701172
    7. ' else' → logprob: -8.879741668701172
    8. '            
' → logprob: -9.129741668701172
    9. '   ' → logprob: -9.504741668701172
    10. 'update' → logprob: -9.629741668701172

Token 835: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.00011522514978423715
    2. '               ' → logprob: -9.750115394592285
    3. '           ' → logprob: -10.375115394592285
    4. ' update' → logprob: -10.625115394592285
    5. '   ' → logprob: -14.000115394592285
    6. 'if' → logprob: -15.500115394592285
    7. 'cost' → logprob: -16.75011444091797
    8. '	update' → logprob: -16.75011444091797
    9. '                   ' → logprob: -16.87511444091797
    10. '       ' → logprob: -17.00011444091797

Token 836: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -5.5577775128767826e-06
    2. 'l' → logprob: -12.375005722045898
    3. 'd' → logprob: -13.750005722045898
    4. 'update' → logprob: -16.5000057220459
    5. 's' → logprob: -16.8750057220459
    6. '_lr' → logprob: -17.8750057220459
    7. '(update' → logprob: -18.6250057220459
    8. '_d' → logprob: -18.6250057220459
    9. 'L' → logprob: -18.7500057220459
    10. '```' → logprob: -19.0000057220459

Token 837: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.009779583662748337
    2. 'r' → logprob: -4.634779453277588
    3. 'd' → logprob: -12.009779930114746
    4. 'rl' → logprob: -12.634779930114746
    5. '1' → logprob: -12.759779930114746
    6. 'l' → logprob: -13.134779930114746
    7. '_ru' → logprob: -13.384779930114746
    8. 'ру' → logprob: -13.634779930114746
    9. 'uru' → logprob: -13.759779930114746
    10. 'RU' → logprob: -13.759779930114746

Token 838: '(book' (ID: 56932)
  Prédit: '(book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(book' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.875000953674316
    3. '(b' → logprob: -16.375001907348633
    4. ' (' → logprob: -16.500001907348633
    5. '(Book' → logprob: -16.875001907348633
    6. 'book' → logprob: -19.250001907348633
    7. '	book' → logprob: -19.500001907348633
    8. '()' → logprob: -20.250001907348633
    9. '((' → logprob: -20.250001907348633
    10. '(ball' → logprob: -20.500001907348633

Token 839: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04338565468788147
    2. ')
' → logprob: -3.1683857440948486
    3. '           ' → logprob: -7.9183855056762695
    4. ')
' → logprob: -11.29338550567627
    5. '               ' → logprob: -12.66838550567627
    6. ')

' → logprob: -13.04338550567627
    7. '       ' → logprob: -13.29338550567627
    8. '<|end|>' → logprob: -14.54338550567627
    9. ' )' → logprob: -14.91838550567627
    10. '),' → logprob: -15.29338550567627

Token 840: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2819642722606659
    2. 'else' → logprob: -1.4069643020629883
    3. '```' → logprob: -7.531964302062988
    4. ' else' → logprob: -8.531964302062988
    5. 'elif' → logprob: -9.781964302062988
    6. '       ' → logprob: -10.906964302062988
    7. '	else' → logprob: -12.906964302062988
    8. '#else' → logprob: -14.281964302062988
    9. 'Else' → logprob: -14.531964302062988
    10. '}else' → logprob: -14.781964302062988

Token 841: ' cost' (ID: 3097)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18031853437423706
    2. 'else' → logprob: -1.8053185939788818
    3. ' else' → logprob: -8.305318832397461
    4. 'elif' → logprob: -8.430318832397461
    5. '               ' → logprob: -9.555318832397461
    6. 'continue' → logprob: -10.680318832397461
    7. '       ' → logprob: -11.930318832397461
    8. 'queue' → logprob: -12.680318832397461
    9. '   ' → logprob: -13.555318832397461
    10. '```' → logprob: -14.055318832397461

Token 842: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47413933277130127
    2. ' +=' → logprob: -0.9741393327713013
    3. '+' → logprob: -11.099139213562012
    4. ']+=' → logprob: -11.099139213562012
    5. ' -=' → logprob: -11.599139213562012
    6. '   ' → logprob: -12.474139213562012
    7. '```' → logprob: -12.599139213562012
    8. '=' → logprob: -12.849139213562012
    9. '-=' → logprob: -12.974139213562012
    10. '+=(' → logprob: -13.474139213562012

Token 843: ' access' (ID: 3158)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11426316201686859
    2. 'access' → logprob: -2.2392630577087402
    3. '0' → logprob: -6.98926305770874
    4. '2' → logprob: -7.98926305770874
    5. '(' → logprob: -9.864263534545898
    6. '(access' → logprob: -10.114263534545898
    7. '3' → logprob: -10.489263534545898
    8. ' access' → logprob: -11.364263534545898
    9. '4' → logprob: -11.489263534545898
    10. '5' → logprob: -11.739263534545898

Token 844: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00033796546631492674
    2. '_s' → logprob: -8.000337600708008
    3. 'desk' → logprob: -13.750337600708008
    4. 's' → logprob: -14.125337600708008
    5. '_' → logprob: -14.875337600708008
    6. '_des' → logprob: -15.500337600708008
    7. '\' → logprob: -16.625337600708008
    8. ' desk' → logprob: -17.750337600708008
    9. '```' → logprob: -18.250337600708008
    10. 'd' → logprob: -18.375337600708008

Token 845: 'esk' (ID: 22444)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' → logprob: -0.0002738522016443312
    2. '1' → logprob: -8.250273704528809
    3. 'esk' → logprob: -11.875273704528809
    4. 's' → logprob: -12.375273704528809
    5. '(' → logprob: -15.500273704528809
    6. '_sk' → logprob: -15.750273704528809
    7. '_' → logprob: -16.000274658203125
    8. '(sk' → logprob: -16.125274658203125
    9. 'ask' → logprob: -16.250274658203125
    10. 'sh' → logprob: -16.375274658203125

Token 846: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.602024900028482e-05
    2. '0' → logprob: -9.375085830688477
    3. ' (' → logprob: -13.875085830688477
    4. '(
' → logprob: -16.125085830688477
    5. ' ' → logprob: -17.375085830688477
    6. '('' → logprob: -17.625085830688477
    7. '```' → logprob: -17.750085830688477
    8. '1' → logprob: -18.250085830688477
    9. '<|end|>' → logprob: -18.625085830688477
    10. '`' → logprob: -19.375085830688477

Token 847: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.250001907348633
    3. ' ' → logprob: -17.625001907348633
    4. '```' → logprob: -19.000001907348633
    5. ')' → logprob: -19.125001907348633
    6. '`' → logprob: -20.000001907348633
    7. '   ' → logprob: -20.750001907348633
    8. '０' → logprob: -21.750001907348633
    9. '۰' → logprob: -21.750001907348633
    10. '(
' → logprob: -22.125001907348633

Token 848: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01825237087905407
    2. ')
' → logprob: -4.018252372741699
    3. '+' → logprob: -9.6432523727417
    4. ' +' → logprob: -11.6432523727417
    5. '           ' → logprob: -12.1432523727417
    6. '       ' → logprob: -12.1432523727417
    7. ' )' → logprob: -12.2682523727417
    8. ')+' → logprob: -12.6432523727417
    9. '   ' → logprob: -13.0182523727417
    10. ')
' → logprob: -13.1432523727417

Token 849: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10240709781646729
    2. 'else' → logprob: -2.3524069786071777
    3. '```' → logprob: -6.352406978607178
    4. 'elif' → logprob: -8.352407455444336
    5. ' else' → logprob: -8.727407455444336
    6. '       ' → logprob: -9.977407455444336
    7. '<|end|>' → logprob: -12.602407455444336
    8. '#else' → logprob: -13.477407455444336
    9. '               ' → logprob: -13.602407455444336
    10. '	       ' → logprob: -13.977407455444336

Token 850: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10119152069091797
    2. '           ' → logprob: -2.351191520690918
    3. 'elif' → logprob: -7.101191520690918
    4. ' else' → logprob: -8.851191520690918
    5. '       ' → logprob: -11.101191520690918
    6. '```' → logprob: -14.226191520690918
    7. ' elif' → logprob: -15.226191520690918
    8. '	else' → logprob: -15.476191520690918
    9. '          ' → logprob: -15.601191520690918
    10. '         ' → logprob: -15.726191520690918

Token 851: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5993831157684326
    2. ':' → logprob: -0.9743831157684326
    3. '               ' → logprob: -2.9743831157684326
    4. '           ' → logprob: -3.8493831157684326
    5. ':

' → logprob: -8.349383354187012
    6. '       ' → logprob: -8.724383354187012
    7. '):
' → logprob: -9.099383354187012
    8. 'if' → logprob: -9.349383354187012
    9. 'else' → logprob: -9.724383354187012
    10. '{' → logprob: -9.974383354187012

Token 852: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024287715554237366
    2. '```' → logprob: -4.149287700653076
    3. '#' → logprob: -5.149287700653076
    4. 'if' → logprob: -6.899287700653076
    5. '           ' → logprob: -7.899287700653076
    6. 'temp' → logprob: -8.274288177490234
    7. '``' → logprob: -8.274288177490234
    8. 'prev' → logprob: -8.899288177490234
    9. ' if' → logprob: -10.024288177490234
    10. ' #' → logprob: -10.149288177490234

Token 853: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.17821341753005981
    2. '               ' → logprob: -2.303213357925415
    3. 'if' → logprob: -3.678213357925415
    4. 'pos' → logprob: -4.803213596343994
    5. 'l' → logprob: -5.303213596343994
    6. 'old' → logprob: -5.428213596343994
    7. 'd' → logprob: -5.678213596343994
    8. 'non' → logprob: -5.678213596343994
    9. 'temp' → logprob: -5.928213596343994
    10. 'idx' → logprob: -6.178213596343994

Token 854: ' D' (ID: 415)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32331568002700806
    2. 'l' → logprob: -1.5733156204223633
    3. '               ' → logprob: -3.3233156204223633
    4. 'old' → logprob: -4.073315620422363
    5. 'if' → logprob: -4.698315620422363
    6. '                   ' → logprob: -6.448315620422363
    7. 'LR' → logprob: -7.448315620422363
    8. 'book' → logprob: -7.698315620422363
    9. 'found' → logprob: -7.823315620422363
    10. 'd' → logprob: -7.823315620422363

Token 855: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002826627343893051
    2. '#' → logprob: -6.127826690673828
    3. 'else' → logprob: -8.252826690673828
    4. '   ' → logprob: -9.877826690673828
    5. '               ' → logprob: -10.127826690673828
    6. 'es' → logprob: -10.127826690673828
    7. 'elif' → logprob: -10.127826690673828
    8. '       ' → logprob: -10.252826690673828
    9. '           ' → logprob: -10.377826690673828
    10. ' #' → logprob: -10.752826690673828

Token 856: ' full' (ID: 3149)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.25265631079673767
    2. '_full' → logprob: -2.0026562213897705
    3. 'is' → logprob: -3.8776562213897705
    4. '_is' → logprob: -4.12765645980835
    5. '#' → logprob: -4.50265645980835
    6. '_books' → logprob: -5.12765645980835
    7. 'full' → logprob: -5.37765645980835
    8. '_book' → logprob: -5.37765645980835
    9. '                   ' → logprob: -5.50265645980835
    10. '               ' → logprob: -5.50265645980835

Token 857: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07786858081817627
    2. '                
' → logprob: -3.5778684616088867
    3. '#' → logprob: -3.9528684616088867
    4. '
' → logprob: -4.702868461608887
    5. ',' → logprob: -5.702868461608887
    6. 'if' → logprob: -5.827868461608887
    7. '```' → logprob: -6.077868461608887
    8. '                   ' → logprob: -6.327868461608887
    9. ':
' → logprob: -6.452868461608887
    10. ' if' → logprob: -6.452868461608887

Token 858: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10569074749946594
    2. '#' → logprob: -2.9806907176971436
    3. 'old' → logprob: -4.355690956115723
    4. 'temp' → logprob: -4.730690956115723
    5. 'book' → logprob: -5.105690956115723
    6. 'd' → logprob: -5.355690956115723
    7. '```' → logprob: -5.605690956115723
    8. '                
' → logprob: -5.980690956115723
    9. 'first' → logprob: -6.105690956115723
    10. '                   ' → logprob: -6.480690956115723

Token 859: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8169607520103455
    2. 'l' → logprob: -0.9419607520103455
    3. '               ' → logprob: -2.1919608116149902
    4. 'old' → logprob: -3.4419608116149902
    5. 'ev' → logprob: -4.94196081161499
    6. 'temp' → logprob: -5.19196081161499
    7. 'b' → logprob: -5.69196081161499
    8. '                   ' → logprob: -5.94196081161499
    9. ' #' → logprob: -6.44196081161499
    10. 'd' → logprob: -6.56696081161499

Token 860: ' temp' (ID: 5484)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0914347171783447
    2. 'ev' → logprob: -1.7164347171783447
    3. 'temp' → logprob: -1.7164347171783447
    4. 'old' → logprob: -1.8414347171783447
    5. 'l' → logprob: -2.8414347171783447
    6. 'b' → logprob: -3.2164347171783447
    7. ' #' → logprob: -5.091434478759766
    8. 'vict' → logprob: -5.466434478759766
    9. 'd' → logprob: -5.591434478759766
    10. '   ' → logprob: -5.591434478759766

Token 861: ' place' (ID: 2475)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.11940017342567444
    2. ' =' → logprob: -2.7444002628326416
    3. 'desk' → logprob: -3.4944002628326416
    4. '_pos' → logprob: -4.8694000244140625
    5. 'd' → logprob: -5.2444000244140625
    6. '=' → logprob: -6.8694000244140625
    7. '_place' → logprob: -6.8694000244140625
    8. '_sp' → logprob: -6.9944000244140625
    9. '_idx' → logprob: -7.2444000244140625
    10. 'pos' → logprob: -8.244400024414062

Token 862: ' requested' (ID: 17222)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4209577441215515
    2. 'desk' → logprob: -2.1709578037261963
    3. '               ' → logprob: -2.4209578037261963
    4. ' =' → logprob: -3.2959578037261963
    5. 'idx' → logprob: -3.6709578037261963
    6. '                   ' → logprob: -4.045957565307617
    7. '=' → logprob: -4.045957565307617
    8. ' desk' → logprob: -4.295957565307617
    9. 'found' → logprob: -5.545957565307617
    10. ' d' → logprob: -5.920957565307617

Token 863: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.7332133054733276
    2. '_book' → logprob: -0.7332133054733276
    3. '_d' → logprob: -3.608213424682617
    4. '_' → logprob: -5.108213424682617
    5. 'desk' → logprob: -6.358213424682617
    6. ' =' → logprob: -6.858213424682617
    7. 'on' → logprob: -7.358213424682617
    8. 'd' → logprob: -7.608213424682617
    9. ',' → logprob: -7.733213424682617
    10. '=' → logprob: -8.108213424682617

Token 864: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48935526609420776
    2. ' =' → logprob: -1.1143553256988525
    3. '=' → logprob: -4.114355087280273
    4. 'temp' → logprob: -4.239355087280273
    5. 'd' → logprob: -4.364355087280273
    6. ' on' → logprob: -6.239355087280273
    7. ',' → logprob: -6.239355087280273
    8. 'idx' → logprob: -6.239355087280273
    9. 'on' → logprob: -6.364355087280273
    10. '                   ' → logprob: -6.739355087280273

Token 865: ' closest' (ID: 31179)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.28705891966819763
    2. 's' → logprob: -2.0370588302612305
    3. '1' → logprob: -3.2870588302612305
    4. 'None' → logprob: -4.0370588302612305
    5. 'd' → logprob: -4.4120588302612305
    6. 'other' → logprob: -4.4120588302612305
    7. 'the' → logprob: -4.7870588302612305
    8. '0' → logprob: -5.4120588302612305
    9. 'm' → logprob: -5.4120588302612305
    10. 'a' → logprob: -5.5370588302612305

Token 866: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.5179481506347656
    2. 'to' → logprob: -1.2679481506347656
    3. '_non' → logprob: -3.1429481506347656
    4. '0' → logprob: -3.2679481506347656
    5. 'desk' → logprob: -3.8929481506347656
    6. 'def' → logprob: -4.767948150634766
    7. '_to' → logprob: -5.642948150634766
    8. 'for' → logprob: -6.392948150634766
    9. '(' → logprob: -6.642948150634766
    10. 'd' → logprob: -6.767948150634766

Token 867: '-full' (ID: 32536)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.00015097891446202993
    2. '0' → logprob: -9.500150680541992
    3. 'empty' → logprob: -10.125150680541992
    4. 'None' → logprob: -11.250150680541992
    5. 'null' → logprob: -11.875150680541992
    6. 'ful' → logprob: -13.125150680541992
    7. 'none' → logprob: -13.125150680541992
    8. ' full' → logprob: -13.250150680541992
    9. '-full' → logprob: -13.250150680541992
    10. '```' → logprob: -13.750150680541992

Token 868: ' desk' (ID: 20794)
  Prédit: 'desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'desk' → logprob: -0.002050574403256178
    2. ' desk' → logprob: -6.377050399780273
    3. 'd' → logprob: -8.252050399780273
    4. 'des' → logprob: -10.627050399780273
    5. 'def' → logprob: -11.252050399780273
    6. '0' → logprob: -11.252050399780273
    7. '_d' → logprob: -11.752050399780273
    8. '```' → logprob: -12.127050399780273
    9. 'deck' → logprob: -12.627050399780273
    10. 'desktop' → logprob: -12.752050399780273

Token 869: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4061609208583832
    2. 'temp' → logprob: -1.4061609506607056
    3. 'd' → logprob: -3.281160831451416
    4. 'other' → logprob: -4.406160831451416
    5. 't' → logprob: -4.531160831451416
    6. ' temp' → logprob: -4.906160831451416
    7. ',' → logprob: -5.281160831451416
    8. 'tmp' → logprob: -5.531160831451416
    9. ' =' → logprob: -5.656160831451416
    10. 'to' → logprob: -7.031160831451416

Token 870: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26901915669441223
    2. 'exclude' → logprob: -2.76901912689209
    3. 'None' → logprob: -2.76901912689209
    4. ' shelf' → logprob: -3.26901912689209
    5. 'find' → logprob: -3.39401912689209
    6. 'the' → logprob: -5.01901912689209
    7. 'on' → logprob: -5.51901912689209
    8. 'd' → logprob: -5.64401912689209
    9. 'if' → logprob: -5.89401912689209
    10. '#' → logprob: -6.14401912689209

Token 871: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25089094042778015
    2. 'temp' → logprob: -1.7508909702301025
    3. ' temp' → logprob: -4.250890731811523
    4. 'd' → logprob: -5.125890731811523
    5. '
' → logprob: -5.250890731811523
    6. ',' → logprob: -5.625890731811523
    7. 'else' → logprob: -6.000890731811523
    8. ' if' → logprob: -6.250890731811523
    9. '                
' → logprob: -6.375890731811523
    10. '(temp' → logprob: -6.500890731811523

Token 872: '               ' (ID: 506)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.875898540019989
    2. '()' → logprob: -1.5008985996246338
    3. '               ' → logprob: -1.7508985996246338
    4. ' =' → logprob: -2.875898599624634
    5. '()
' → logprob: -3.000898599624634
    6. '(
' → logprob: -4.375898361206055
    7. '(None' → logprob: -4.375898361206055
    8. ' (' → logprob: -5.125898361206055
    9. '=' → logprob: -5.125898361206055
    10. 'd' → logprob: -5.500898361206055

Token 873: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.7129859924316406
    2. 'pos' → logprob: -1.0879859924316406
    3. ' temp' → logprob: -3.0879859924316406
    4. 'idx' → logprob: -3.4629859924316406
    5. 't' → logprob: -3.8379859924316406
    6. 'tmp' → logprob: -3.9629859924316406
    7. ' pos' → logprob: -4.212985992431641
    8. 'd' → logprob: -4.837985992431641
    9. ' idx' → logprob: -5.337985992431641
    10. 'npos' → logprob: -5.712985992431641

Token 874: '_d' (ID: 1565)
  Prédit: '_place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -0.027076348662376404
    2. '_d' → logprob: -3.902076244354248
    3. '_pos' → logprob: -5.402076244354248
    4. '_' → logprob: -7.027076244354248
    5. ' =' → logprob: -7.402076244354248
    6. '_sp' → logprob: -9.152076721191406
    7. '_loc' → logprob: -9.527076721191406
    8. '=' → logprob: -9.652076721191406
    9. 'place' → logprob: -9.652076721191406
    10. '_idx' → logprob: -10.527076721191406

Token 875: ' =' (ID: 314)
  Prédit: 'esk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.05172080919146538
    2. ' =' → logprob: -3.1767208576202393
    3. 'es' → logprob: -5.67672061920166
    4. 'est' → logprob: -6.05172061920166
    5. '=' → logprob: -6.17672061920166
    6. 'esc' → logprob: -8.42672061920166
    7. 'place' → logprob: -8.92672061920166
    8. '_place' → logprob: -9.30172061920166
    9. 'sk' → logprob: -9.55172061920166
    10. 'e' → logprob: -10.05172061920166

Token 876: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.00020509003661572933
    2. ' find' → logprob: -8.500205039978027
    3. 'None' → logprob: -14.000205039978027
    4. '(find' → logprob: -15.375205039978027
    5. '   ' → logprob: -15.500205039978027
    6. '	find' → logprob: -15.750205039978027
    7. '  ' → logprob: -16.875205993652344
    8. '=find' → logprob: -17.125205993652344
    9. ' ' → logprob: -18.000205993652344
    10. 'next' → logprob: -18.250205993652344

Token 877: '_non' (ID: 52193)
  Prédit: '_non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.0001882823125924915
    2. 'non' → logprob: -8.625187873840332
    3. '_n' → logprob: -13.000187873840332
    4. '_not' → logprob: -13.625187873840332
    5. '\' → logprob: -14.000187873840332
    6. 'Non' → logprob: -14.125187873840332
    7. '
' → logprob: -14.250187873840332
    8. '_' → logprob: -14.750187873840332
    9. 'a' → logprob: -15.250187873840332
    10. '非' → logprob: -15.625187873840332

Token 878: 'full' (ID: 15393)
  Prédit: 'full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -3.7697225252486533e-06
    2. '_full' → logprob: -13.000003814697266
    3. 'ful' → logprob: -13.875003814697266
    4. '0' → logprob: -15.875003814697266
    5. 'f' → logprob: -16.000003814697266
    6. ' full' → logprob: -16.125003814697266
    7. '-full' → logprob: -16.875003814697266
    8. '(full' → logprob: -16.875003814697266
    9. '	full' → logprob: -17.125003814697266
    10. 'Full' → logprob: -17.750003814697266

Token 879: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.4034345187828876e-05
    2. '(' → logprob: -11.12502384185791
    3. 'desk' → logprob: -12.62502384185791
    4. '_des' → logprob: -13.00002384185791
    5. '(_' → logprob: -14.00002384185791
    6. '(d' → logprob: -14.12502384185791
    7. 'd' → logprob: -14.62502384185791
    8. '_' → logprob: -15.25002384185791
    9. 'des' → logprob: -15.75002384185791
    10. ')' → logprob: -15.87502384185791

Token 880: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.3035229444503784
    2. 'sk' → logprob: -1.4285229444503784
    3. 'desk' → logprob: -4.428523063659668
    4. '_d' → logprob: -5.678523063659668
    5. 'd' → logprob: -5.803523063659668
    6. '(' → logprob: -6.803523063659668
    7. '(d' → logprob: -7.178523063659668
    8. 's' → logprob: -7.678523063659668
    9. 'es' → logprob: -8.553523063659668
    10. 'ask' → logprob: -8.803523063659668

Token 881: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002130514243617654
    2. '(None' → logprob: -6.377130508422852
    3. '(-' → logprob: -8.877130508422852
    4. '()' → logprob: -8.877130508422852
    5. '0' → logprob: -9.252130508422852
    6. '(start' → logprob: -10.627130508422852
    7. 'None' → logprob: -11.377130508422852
    8. '(temp' → logprob: -12.752130508422852
    9. ' (' → logprob: -13.127130508422852
    10. '()
' → logprob: -13.252130508422852

Token 882: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006508402875624597
    2. '1' → logprob: -7.375650882720947
    3. '(' → logprob: -11.250650405883789
    4. 'm' → logprob: -12.250650405883789
    5. ')' → logprob: -13.125650405883789
    6. ' ' → logprob: -13.500650405883789
    7. '-' → logprob: -14.625650405883789
    8. 'd' → logprob: -14.750650405883789
    9. 'start' → logprob: -14.750650405883789
    10. 'None' → logprob: -15.063150405883789

Token 883: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18117323517799377
    2. ')
' → logprob: -1.8061732053756714
    3. ',' → logprob: -6.681173324584961
    4. ')

' → logprob: -9.556173324584961
    5. ')
' → logprob: -10.306173324584961
    6. '0' → logprob: -10.431173324584961
    7. '(' → logprob: -10.931173324584961
    8. ' )' → logprob: -12.306173324584961
    9. ')#' → logprob: -12.806173324584961
    10. ' )
' → logprob: -13.181173324584961

Token 884: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12797796726226807
    2. 'if' → logprob: -2.1279778480529785
    3. '<|end|>' → logprob: -8.002978324890137
    4. '               ' → logprob: -8.752978324890137
    5. '
' → logprob: -8.752978324890137
    6. '```' → logprob: -9.002978324890137
    7. 'If' → logprob: -9.252978324890137
    8. '           ' → logprob: -10.502978324890137
    9. 'None' → logprob: -10.627978324890137
    10. ';if' → logprob: -11.002978324890137

Token 885: ' temp' (ID: 5484)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00036275613820180297
    2. '               ' → logprob: -8.750362396240234
    3. '           ' → logprob: -8.750362396240234
    4. ' if' → logprob: -10.000362396240234
    5. 'If' → logprob: -15.125362396240234
    6. 'token' → logprob: -16.000362396240234
    7. '	if' → logprob: -17.000362396240234
    8. '                   ' → logprob: -17.000362396240234
    9. 'temp' (adapté à ' temp') → logprob: -17.250362396240234
    10. 'cost' → logprob: -17.750362396240234

Token 886: '_on' (ID: 10053)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.003178901970386505
    2. '_tokens' → logprob: -6.37817907333374
    3. '_token' → logprob: -7.00317907333374
    4. '_' → logprob: -8.628178596496582
    5. ' =' → logprob: -9.503178596496582
    6. 'if' → logprob: -9.503178596496582
    7. '_place' → logprob: -9.753178596496582
    8. 'd' → logprob: -9.878178596496582
    9. '=' → logprob: -10.003178596496582
    10. ' +=' → logprob: -11.253178596496582

Token 887: '_s' (ID: 1278)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5013590455055237
    2. 'None' → logprob: -1.876358985900879
    3. '_s' → logprob: -3.001358985900879
    4. 's' → logprob: -3.251358985900879
    5. 'es' → logprob: -3.376358985900879
    6. '=' → logprob: -3.501358985900879
    7. '_d' → logprob: -3.501358985900879
    8. ' =' → logprob: -3.626358985900879
    9. 'temp' → logprob: -4.126358985900879
    10. 'd' → logprob: -5.251358985900879

Token 888: 'helf' (ID: 51433)
  Prédit: 'helf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helf' → logprob: -1.676292231422849e-05
    2. 'elf' → logprob: -11.750017166137695
    3. 'hel' → logprob: -13.000017166137695
    4. 'et' → logprob: -13.125017166137695
    5. 'h' → logprob: -13.625017166137695
    6. '=' → logprob: -14.500017166137695
    7. 'he' → logprob: -14.750017166137695
    8. '_' → logprob: -15.000017166137695
    9. 't' → logprob: -15.125017166137695
    10. 'e' → logprob: -15.250017166137695

Token 889: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788937583565712
    2. ' =' → logprob: -2.5788936614990234
    3. '=None' → logprob: -12.953893661499023
    4. '=True' → logprob: -14.203893661499023
    5. '=False' → logprob: -14.328893661499023
    6. 'if' → logprob: -15.453893661499023
    7. ' if' → logprob: -17.203893661499023
    8. ' ' → logprob: -17.703893661499023
    9. '==' → logprob: -18.953893661499023
    10. '＝' → logprob: -19.203893661499023

Token 890: ' False' (ID: 7983)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6269949078559875
    2. 'False' → logprob: -0.8769949078559875
    3. ' temp' → logprob: -3.2519948482513428
    4. 'True' → logprob: -5.501995086669922
    5. ' False' → logprob: -5.751995086669922
    6. '(temp' → logprob: -6.251995086669922
    7. 'None' → logprob: -6.501995086669922
    8. '(False' → logprob: -8.376995086669922
    9. '(True' → logprob: -10.376995086669922
    10. ' True' → logprob: -10.626995086669922

Token 891: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9916048049926758
    2. 'if' → logprob: -1.1166048049926758
    3. '               ' → logprob: -1.2416048049926758
    4. '           ' → logprob: -4.991604804992676
    5. '<|end|>' → logprob: -5.866604804992676
    6. '	if' → logprob: -6.616604804992676
    7. '       ' → logprob: -7.491604804992676
    8. '                   ' → logprob: -8.366604804992676
    9. ';if' → logprob: -8.741604804992676
    10. '
' → logprob: -9.116604804992676

Token 892: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3355938792228699
    2. 'if' → logprob: -1.3355939388275146
    3. '               ' → logprob: -4.2105937004089355
    4. '           ' → logprob: -5.0855937004089355
    5. '	if' → logprob: -7.3355937004089355
    6. '       ' → logprob: -8.460594177246094
    7. '<|end|>' → logprob: -9.960594177246094
    8. '   ' → logprob: -10.460594177246094
    9. '                   ' → logprob: -10.710594177246094
    10. '
' → logprob: -10.710594177246094

Token 893: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0026826607063412666
    2. ' if' → logprob: -6.002682685852051
    3. '           ' → logprob: -8.62768268585205
    4. '               ' → logprob: -10.50268268585205
    5. 'If' → logprob: -15.25268268585205
    6. '	if' → logprob: -16.002681732177734
    7. ';if' → logprob: -17.877681732177734
    8. '   ' → logprob: -18.002681732177734
    9. '       ' → logprob: -18.377681732177734
    10. '```' → logprob: -18.752681732177734

Token 894: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.02975071594119072
    2. ' temp' → logprob: -3.5297508239746094
    3. '                   ' → logprob: -16.02975082397461
    4. '               ' → logprob: -17.40475082397461
    5. '	temp' → logprob: -17.40475082397461
    6. 'tem' → logprob: -17.65475082397461
    7. '(temp' → logprob: -17.90475082397461
    8. 'tmp' → logprob: -18.65475082397461
    9. '   ' → logprob: -18.77975082397461
    10. '           ' → logprob: -19.40475082397461

Token 895: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -6.182190554682165e-05
    2. ' is' → logprob: -9.875061988830566
    3. 'is' → logprob: -12.500061988830566
    4. 'd' → logprob: -12.625061988830566
    5. '_is' → logprob: -14.000061988830566
    6. '==' → logprob: -14.250061988830566
    7. '_' → logprob: -14.375061988830566
    8. ' ==' → logprob: -15.000061988830566
    9. '_on' → logprob: -15.875061988830566
    10. 'on' → logprob: -16.37506103515625

Token 896: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.061970487236976624
    2. 'is' → logprob: -2.8119704723358154
    3. '==' → logprob: -13.561970710754395
    4. '	is' → logprob: -14.436970710754395
    5. 'None' → logprob: -15.311970710754395
    6. '=' → logprob: -16.186969757080078
    7. 'Is' → logprob: -16.186969757080078
    8. '===' → logprob: -16.436969757080078
    9. ' ==' → logprob: -16.436969757080078
    10. ' None' → logprob: -16.561969757080078

Token 897: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001234428636962548
    2. ' None' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.750123977661133
    4. '=None' → logprob: -19.375123977661133
    5. '_None' → logprob: -19.750123977661133
    6. '           ' → logprob: -20.875123977661133
    7. '(None' → logprob: -20.875123977661133
    8. 'none' → logprob: -21.125123977661133
    9. '                   ' → logprob: -21.250123977661133
    10. ',None' → logprob: -21.625123977661133

Token 898: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.011187640018761158
    2. ':' → logprob: -4.511187553405762
    3. '                   ' → logprob: -9.011187553405762
    4. '               ' → logprob: -11.761187553405762
    5. ':

' → logprob: -13.011187553405762
    6. '):
' → logprob: -13.261187553405762
    7. ' or' → logprob: -13.261187553405762
    8. '           ' → logprob: -13.886187553405762
    9. ':
' → logprob: -13.886187553405762
    10. '():
' → logprob: -13.886187553405762

Token 899: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6521085500717163
    2. 'temp' → logprob: -1.2771085500717163
    3. '               ' → logprob: -1.9021085500717163
    4. ' temp' → logprob: -3.152108669281006
    5. '           ' → logprob: -5.277108669281006
    6. '   ' → logprob: -6.152108669281006
    7. '
' → logprob: -8.027108192443848
    8. '```' → logprob: -8.652108192443848
    9. '                       ' → logprob: -9.152108192443848
    10. '       ' → logprob: -9.277108192443848

Token 900: ' #' (ID: 1069)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.004420028533786535
    2. ' temp' → logprob: -6.129419803619385
    3. '                   ' → logprob: -6.379419803619385
    4. '               ' → logprob: -8.004420280456543
    5. 'cost' → logprob: -8.754420280456543
    6. '#' (adapté à ' #') → logprob: -10.629420280456543
    7. '                       ' → logprob: -11.879420280456543
    8. '   ' → logprob: -12.254420280456543
    9. ' cost' → logprob: -12.504420280456543
    10. '           ' → logprob: -13.629420280456543

Token 901: ' all' (ID: 722)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0025754175148904324
    2. ' temp' → logprob: -6.502575397491455
    3. 'cost' → logprob: -7.377575397491455
    4. '#' → logprob: -8.127575874328613
    5. '                   ' → logprob: -9.127575874328613
    6. '               ' → logprob: -10.252575874328613
    7. ' cost' → logprob: -12.752575874328613
    8. ' #' → logprob: -13.377575874328613
    9. 'tmp' → logprob: -14.252575874328613
    10. '                       ' → logprob: -14.377575874328613

Token 902: ' desks' (ID: 109910)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.03505693003535271
    2. 'des' → logprob: -4.035057067871094
    3. 's' → logprob: -5.785057067871094
    4. ' books' → logprob: -5.785057067871094
    5. 'on' → logprob: -5.910057067871094
    6. 'full' → logprob: -6.035057067871094
    7. ' desks' → logprob: -6.910057067871094
    8. 'm' → logprob: -7.285057067871094
    9. 'd' → logprob: -7.535057067871094
    10. ' on' → logprob: -7.910057067871094

Token 903: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.16124336421489716
    2. 'are' → logprob: -1.9112433195114136
    3. '   ' → logprob: -8.286243438720703
    4. ' full' → logprob: -8.536243438720703
    5. ' are' → logprob: -8.786243438720703
    6. '
' → logprob: -9.661243438720703
    7. '                   ' → logprob: -9.911243438720703
    8. '           ' → logprob: -10.161243438720703
    9. '==' → logprob: -10.161243438720703
    10. 'filled' → logprob: -10.286243438720703

Token 904: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07059726864099503
    2. 'temp' → logprob: -2.9455971717834473
    3. '               ' → logprob: -4.945597171783447
    4. ' temp' → logprob: -6.195597171783447
    5. ':
' → logprob: -6.320597171783447
    6. '                       ' → logprob: -6.695597171783447
    7. '
' → logprob: -6.820597171783447
    8. ':' → logprob: -7.445597171783447
    9. '   ' → logprob: -7.570597171783447
    10. ',' → logprob: -7.945597171783447

Token 905: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014518508687615395
    2. '
' → logprob: -4.764518737792969
    3. '               ' → logprob: -5.514518737792969
    4. '                       ' → logprob: -7.264518737792969
    5. '           ' → logprob: -8.014518737792969
    6. ',' → logprob: -8.139518737792969
    7. '   ' → logprob: -8.139518737792969
    8. '                    
' → logprob: -9.639518737792969
    9. '       ' → logprob: -10.014518737792969
    10. '    
' → logprob: -10.389518737792969

Token 906: ' shelf' (ID: 40978)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5616211891174316
    2. 'temp' → logprob: -1.0616211891174316
    3. ' cost' → logprob: -3.3116211891174316
    4. '                   ' → logprob: -3.4366211891174316
    5. '               ' → logprob: -4.936621189117432
    6. ' temp' → logprob: -4.936621189117432
    7. '#' → logprob: -7.936621189117432
    8. '   ' → logprob: -8.686620712280273
    9. 's' → logprob: -9.311620712280273
    10. '                       ' → logprob: -9.686620712280273

Token 907: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0007248217007145286
    2. '.' → logprob: -7.250724792480469
    3. '.remove' → logprob: -12.250724792480469
    4. ' .' → logprob: -12.750724792480469
    5. '                   ' → logprob: -13.375724792480469
    6. 'add' → logprob: -13.750724792480469
    7. '                           ' → logprob: -13.875724792480469
    8. '                                   ' → logprob: -14.000724792480469
    9. '.append' → logprob: -14.125724792480469
    10. '                       ' → logprob: -14.375724792480469

Token 908: '(book' (ID: 56932)
  Prédit: '(book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(book' → logprob: -0.06208845600485802
    2. 'book' → logprob: -2.8120884895324707
    3. ' book' → logprob: -9.062088012695312
    4. '	book' → logprob: -12.812088012695312
    5. ' (' → logprob: -13.687088012695312
    6. 'temp' → logprob: -15.562088012695312
    7. '   ' → logprob: -15.687088012695312
    8. '(' → logprob: -15.812088012695312
    9. '               ' → logprob: -16.187088012695312
    10. 'Book' → logprob: -16.312088012695312

Token 909: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5766978859901428
    2. ')
' → logprob: -0.8266978859901428
    3. '               ' → logprob: -7.951697826385498
    4. ')
' → logprob: -8.451698303222656
    5. '                   ' → logprob: -8.701698303222656
    6. ')

' → logprob: -11.951698303222656
    7. ' )
' → logprob: -12.451698303222656
    8. '           ' → logprob: -12.701698303222656
    9. '                       ' → logprob: -12.826698303222656
    10. ' )' → logprob: -13.076698303222656

Token 910: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01703171245753765
    2. '               ' → logprob: -4.392031669616699
    3. '
' → logprob: -5.517031669616699
    4. '           ' → logprob: -9.0170316696167
    5. 'temp' → logprob: -9.5170316696167
    6. '                  ' → logprob: -9.7670316696167
    7. '                       ' → logprob: -9.8920316696167
    8. '                    ' → logprob: -10.1420316696167
    9. '```' → logprob: -10.5170316696167
    10. '                ' → logprob: -10.5170316696167

Token 911: ' book' (ID: 2392)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.01245950162410736
    2. 'temp' → logprob: -5.0124592781066895
    3. ' cost' → logprob: -5.5124592781066895
    4. '               ' → logprob: -6.8874592781066895
    5. '                   ' → logprob: -7.3874592781066895
    6. '           ' → logprob: -10.137459754943848
    7. ' temp' → logprob: -11.762459754943848
    8. '   ' → logprob: -13.012459754943848
    9. '                       ' → logprob: -14.387459754943848
    10. '                ' → logprob: -14.887459754943848

Token 912: '_location' (ID: 29811)
  Prédit: '_location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_location' → logprob: -4.246537173457909e-06
    2. '_locations' → logprob: -13.250003814697266
    3. '_' → logprob: -14.125003814697266
    4. '_position' → logprob: -14.625003814697266
    5. 'Location' → logprob: -14.625003814697266
    6. '```' → logprob: -15.625003814697266
    7. ' _' → logprob: -16.000003814697266
    8. '_LOCATION' → logprob: -16.750003814697266
    9. ''_' → logprob: -16.875003814697266
    10. 'location' → logprob: -17.000003814697266

Token 913: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011752246646210551
    2. '[b' → logprob: -6.751175403594971
    3. '```' → logprob: -13.626174926757812
    4. ' [' → logprob: -13.751174926757812
    5. '=' → logprob: -13.876174926757812
    6. '   ' → logprob: -14.501174926757812
    7. '                   ' → logprob: -15.876174926757812
    8. '[m' → logprob: -15.876174926757812
    9. '               ' → logprob: -16.001174926757812
    10. '
' → logprob: -16.126174926757812

Token 914: 'book' (ID: 3092)
  Prédit: 'book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -3.4285862057004124e-05
    2. '[' → logprob: -10.62503433227539
    3. ' book' → logprob: -11.87503433227539
    4. 'b' → logprob: -13.37503433227539
    5. '(book' → logprob: -13.62503433227539
    6. ' ' → logprob: -16.37503433227539
    7. '	book' → logprob: -18.12503433227539
    8. '[b' → logprob: -19.25003433227539
    9. '.book' → logprob: -19.75003433227539
    10. '```' → logprob: -19.87503433227539

Token 915: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760908722877502
    2. ' =' → logprob: -0.8260908722877502
    3. '=m' → logprob: -9.201090812683105
    4. ']' → logprob: -10.326090812683105
    5. ')' → logprob: -11.701090812683105
    6. ']=' → logprob: -11.826090812683105
    7. ')=' → logprob: -14.076090812683105
    8. ' =
' → logprob: -14.576090812683105
    9. '=
' → logprob: -14.576090812683105
    10. ' ' → logprob: -16.326091766357422

Token 916: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520250976085663
    2. ' =' → logprob: -1.5020251274108887
    3. '=m' → logprob: -9.25202465057373
    4. '＝' → logprob: -17.377025604248047
    5. '=s' → logprob: -17.877025604248047
    6. '=M' → logprob: -18.752025604248047
    7. ' ' → logprob: -18.877025604248047
    8. '=
' → logprob: -19.002025604248047
    9. '=

' → logprob: -19.002025604248047
    10. '=b' → logprob: -19.002025604248047

Token 917: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.5048530030981055e-06
    2. ' m' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '	m' → logprob: -17.875001907348633
    5. '    ' → logprob: -20.750001907348633
    6. '$m' → logprob: -21.625001907348633
    7. '  ' → logprob: -21.875001907348633
    8. ' ' → logprob: -22.250001907348633
    9. '_m' → logprob: -22.375001907348633
    10. '       ' → logprob: -22.500001907348633

Token 918: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2502448558807373
    2. '
' → logprob: -1.6252448558807373
    3. '               ' → logprob: -3.7502448558807373
    4. '           ' → logprob: -7.750245094299316
    5. '                    
' → logprob: -9.000245094299316
    6. '<|end|>' → logprob: -9.375245094299316
    7. ')' → logprob: -10.000245094299316
    8. '                  ' → logprob: -10.125245094299316
    9. '                    ' → logprob: -10.250245094299316
    10. '                       ' → logprob: -10.375245094299316

Token 919: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011403822340071201
    2. '               ' → logprob: -4.511404037475586
    3. '
' → logprob: -8.636404037475586
    4. '           ' → logprob: -9.511404037475586
    5. '                       ' → logprob: -10.636404037475586
    6. '                  ' → logprob: -10.886404037475586
    7. '                    ' → logprob: -11.636404037475586
    8. '                ' → logprob: -11.761404037475586
    9. 'cost' → logprob: -11.761404037475586
    10. '```' → logprob: -12.261404037475586

Token 920: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.10332409292459488
    2. ' cost' → logprob: -2.9783241748809814
    3. '                   ' → logprob: -3.1033241748809814
    4. '               ' → logprob: -6.103323936462402
    5. 'continue' → logprob: -9.853323936462402
    6. '           ' → logprob: -10.478323936462402
    7. '                    ' → logprob: -11.353323936462402
    8. 'temp' → logprob: -11.478323936462402
    9. '                       ' → logprob: -11.603323936462402
    10. '
' → logprob: -11.603323936462402

Token 921: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5760082006454468
    2. ' +=' → logprob: -0.8260082006454468
    3. '+' → logprob: -10.076007843017578
    4. ']+=' → logprob: -11.826007843017578
    5. '   ' → logprob: -12.076007843017578
    6. '           ' → logprob: -12.951007843017578
    7. '            ' → logprob: -13.201007843017578
    8. '                   ' → logprob: -13.201007843017578
    9. '```' → logprob: -13.451007843017578
    10. '       ' → logprob: -14.076007843017578

Token 922: ' access' (ID: 3158)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'access' → logprob: -0.000473091087769717
    2. 'm' → logprob: -7.8754730224609375
    3. ' access' → logprob: -9.375473022460938
    4. '(access' → logprob: -12.500473022460938
    5. '(m' → logprob: -13.375473022460938
    6. ' m' → logprob: -13.625473022460938
    7. ' ' → logprob: -15.375473022460938
    8. '   ' → logprob: -15.500473022460938
    9. 'ac' → logprob: -15.875473022460938
    10. 'accept' → logprob: -16.062973022460938

Token 923: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0015023599844425917
    2. 's' → logprob: -6.501502513885498
    3. '_m' → logprob: -17.501502990722656
    4. 'm' → logprob: -17.501502990722656
    5. '(s' → logprob: -17.626502990722656
    6. '(m' → logprob: -18.251502990722656
    7. '_' → logprob: -18.626502990722656
    8. '(' → logprob: -19.251502990722656
    9. '_d' → logprob: -19.626502990722656
    10. '=' → logprob: -20.001502990722656

Token 924: 'helf' (ID: 51433)
  Prédit: 'helf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helf' → logprob: -3.4121114822482923e-06
    2. 'hel' → logprob: -13.375003814697266
    3. 'elf' → logprob: -13.750003814697266
    4. 'he' → logprob: -15.000003814697266
    5. 'h' → logprob: -15.625003814697266
    6. 'e' → logprob: -16.500003814697266
    7. 's' → logprob: -16.500003814697266
    8. 'c' → logprob: -17.750003814697266
    9. 'help' → logprob: -18.125003814697266
    10. 'helves' → logprob: -18.250003814697266

Token 925: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1694623231887817
    2. '
' → logprob: -1.2944623231887817
    3. '<|end|>' → logprob: -1.5444623231887817
    4. ')' → logprob: -2.419462203979492
    5. '           ' → logprob: -3.044462203979492
    6. 'else' → logprob: -3.794462203979492
    7. '                   ' → logprob: -4.294462203979492
    8. ' else' → logprob: -5.044462203979492
    9. '()' → logprob: -5.169462203979492
    10. '<|end|>' → logprob: -6.044462203979492

Token 926: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29290810227394104
    2. '                   ' → logprob: -2.042908191680908
    3. 'else' → logprob: -2.542908191680908
    4. ' else' → logprob: -3.792908191680908
    5. '           ' → logprob: -4.417908191680908
    6. '```' → logprob: -4.917908191680908
    7. '
' → logprob: -6.792908191680908
    8. 'continue' → logprob: -7.042908191680908
    9. '<|end|>' → logprob: -7.542908191680908
    10. ')' → logprob: -8.66790771484375

Token 927: ' temp' (ID: 5484)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.14784575998783112
    2. '               ' → logprob: -2.39784574508667
    3. 'else' → logprob: -3.39784574508667
    4. '                   ' → logprob: -4.52284574508667
    5. '           ' → logprob: -6.52284574508667
    6. ' continue' → logprob: -7.89784574508667
    7. 'temp' (adapté à ' temp') → logprob: -8.647846221923828
    8. 'pass' → logprob: -10.147846221923828
    9. '   ' → logprob: -10.522846221923828
    10. '       ' → logprob: -10.772846221923828

Token 928: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.008681111969053745
    2. '_d' → logprob: -4.758681297302246
    3. '_' → logprob: -10.258681297302246
    4. 'on' → logprob: -10.883681297302246
    5. '_temp' → logprob: -13.008681297302246
    6. 'd' → logprob: -13.258681297302246
    7. '   ' → logprob: -13.758681297302246
    8. ' =' → logprob: -13.758681297302246
    9. '_out' → logprob: -14.258681297302246
    10. '\' → logprob: -14.258681297302246

Token 929: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07893374562263489
    2. '_s' → logprob: -2.5789337158203125
    3. 'book' → logprob: -10.828933715820312
    4. 'True' → logprob: -11.328933715820312
    5. 'False' → logprob: -11.453933715820312
    6. '=True' → logprob: -15.078933715820312
    7. 'on' → logprob: -15.828933715820312
    8. '=False' → logprob: -15.828933715820312
    9. 'None' → logprob: -15.953933715820312
    10. '_' → logprob: -16.453933715820312

Token 930: 'helf' (ID: 51433)
  Prédit: 'helf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helf' → logprob: -0.0014484523562714458
    2. 'elf' → logprob: -6.626448631286621
    3. 'hel' → logprob: -9.126448631286621
    4. 'h' → logprob: -12.751448631286621
    5. 's' → logprob: -12.751448631286621
    6. '_' → logprob: -13.251448631286621
    7. '[' → logprob: -14.001448631286621
    8. 'he' → logprob: -14.126448631286621
    9. '   ' → logprob: -15.001448631286621
    10. 'e' → logprob: -15.001448631286621

Token 931: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014176442287862301
    2. ' =' → logprob: -4.264176368713379
    3. '=True' → logprob: -11.264176368713379
    4. '=False' → logprob: -16.889177322387695
    5. '+=' → logprob: -18.389177322387695
    6. ' ' → logprob: -18.764177322387695
    7. '   ' → logprob: -19.014177322387695
    8. '()' → logprob: -19.014177322387695
    9. '=true' → logprob: -19.514177322387695
    10. '    ' → logprob: -19.889177322387695

Token 932: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.842555426876061e-06
    2. ' True' → logprob: -12.250004768371582
    3. 'False' → logprob: -18.3750057220459
    4. '   ' → logprob: -19.0000057220459
    5. '(True' → logprob: -20.2500057220459
    6. '=True' → logprob: -21.1250057220459
    7. '	' → logprob: -22.6250057220459
    8. 'true' → logprob: -22.8750057220459
    9. ' ' → logprob: -23.8750057220459
    10. '       ' → logprob: -24.0000057220459

Token 933: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26842954754829407
    2. 'else' → logprob: -1.5184295177459717
    3. ' else' → logprob: -4.143429756164551
    4. 'elif' → logprob: -9.01842975616455
    5. '
' → logprob: -9.26842975616455
    6. '           ' → logprob: -9.76842975616455
    7. '                   ' → logprob: -9.89342975616455
    8. '```' → logprob: -10.26842975616455
    9. ')' → logprob: -10.51842975616455
    10. '<|end|>' → logprob: -10.51842975616455

Token 934: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028365256264805794
    2. 'else' → logprob: -4.028365135192871
    3. ' else' → logprob: -4.653365135192871
    4. '```' → logprob: -7.778365135192871
    5. '           ' → logprob: -9.278365135192871
    6. '                   ' → logprob: -9.403365135192871
    7. '
' → logprob: -12.028365135192871
    8. '                ' → logprob: -12.278365135192871
    9. 'elif' → logprob: -12.278365135192871
    10. '       ' → logprob: -12.403365135192871

Token 935: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07153648138046265
    2. '               ' → logprob: -2.8215365409851074
    3. ' else' → logprob: -4.696536540985107
    4. '           ' → logprob: -7.946536540985107
    5. '              ' → logprob: -11.32153606414795
    6. '       ' → logprob: -11.69653606414795
    7. '	else' → logprob: -11.94653606414795
    8. '```' → logprob: -12.32153606414795
    9. '                ' → logprob: -12.57153606414795
    10. '            ' → logprob: -13.57153606414795

Token 936: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2730756103992462
    2. ':' → logprob: -2.148075580596924
    3. '                   ' → logprob: -2.523075580596924
    4. '               ' → logprob: -3.273075580596924
    5. '{
' → logprob: -6.398075580596924
    6. '{' → logprob: -7.398075580596924
    7. '):
' → logprob: -7.523075580596924
    8. '           ' → logprob: -8.273076057434082
    9. '                       ' → logprob: -8.773076057434082
    10. 'put' → logprob: -9.023076057434082

Token 937: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40231987833976746
    2. 'put' → logprob: -1.1523199081420898
    3. '                   ' → logprob: -4.52731990814209
    4. 'temp' → logprob: -6.27731990814209
    5. 'cost' → logprob: -6.52731990814209
    6. ' put' → logprob: -7.65231990814209
    7. '   ' → logprob: -7.77731990814209
    8. '           ' → logprob: -8.65231990814209
    9. '#' → logprob: -10.02731990814209
    10. '	put' → logprob: -11.02731990814209

Token 938: ' put' (ID: 3006)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' (adapté à ' put') → logprob: -0.0003166353271808475
    2. '               ' → logprob: -8.250316619873047
    3. ' put' → logprob: -9.875316619873047
    4. '                   ' → logprob: -13.250316619873047
    5. '           ' → logprob: -13.625316619873047
    6. 'cost' → logprob: -15.125316619873047
    7. '	put' → logprob: -15.625316619873047
    8. 'temp' → logprob: -16.000316619873047
    9. '   ' → logprob: -16.250316619873047
    10. '              ' → logprob: -16.625316619873047

Token 939: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.04306233674287796
    2. '_on' → logprob: -3.168062448501587
    3. '_code' → logprob: -10.543062210083008
    4. '_put' → logprob: -11.293062210083008
    5. 'on' → logprob: -11.668062210083008
    6. '_token' → logprob: -12.543062210083008
    7. '_' → logprob: -12.918062210083008
    8. '_books' → logprob: -13.168062210083008
    9. '(_' → logprob: -13.918062210083008
    10. 'd' → logprob: -14.043062210083008

Token 940: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -1.0921942703134846e-05
    2. 'on' → logprob: -11.50001049041748
    3. 'On' → logprob: -14.50001049041748
    4. '```' → logprob: -16.250011444091797
    5. '=' → logprob: -17.500011444091797
    6. '
' → logprob: -17.625011444091797
    7. '   ' → logprob: -17.875011444091797
    8. ')' → logprob: -18.375011444091797
    9. '_book' → logprob: -18.375011444091797
    10. '_' → logprob: -18.500011444091797

Token 941: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.08544269949197769
    2. 'd' → logprob: -3.2104427814483643
    3. 'desk' → logprob: -3.3354427814483643
    4. 'des' → logprob: -5.460442543029785
    5. 'temp' → logprob: -6.585442543029785
    6. '_des' → logprob: -9.210442543029785
    7. 'Desk' → logprob: -10.085442543029785
    8. '(temp' → logprob: -10.585442543029785
    9. 'the' → logprob: -10.585442543029785
    10. 's' → logprob: -10.835442543029785

Token 942: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.0006744279526174068
    2. 'sk' → logprob: -8.0006742477417
    3. 'desk' → logprob: -8.2506742477417
    4. 'es' → logprob: -10.7506742477417
    5. '_d' → logprob: -11.8756742477417
    6. 'temp' → logprob: -11.8756742477417
    7. 'esc' → logprob: -12.2506742477417
    8. '_' → logprob: -12.3756742477417
    9. '(' → logprob: -12.3756742477417
    10. 'ask' → logprob: -12.6256742477417

Token 943: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -7.600714161526412e-05
    2. 'temp' → logprob: -9.500076293945312
    3. ' temp' → logprob: -14.750076293945312
    4. '(' → logprob: -15.125076293945312
    5. '[temp' → logprob: -15.625076293945312
    6. ',temp' → logprob: -16.250076293945312
    7. '(tmp' → logprob: -16.250076293945312
    8. '	temp' → logprob: -18.125076293945312
    9. '$temp' → logprob: -18.375076293945312
    10. '_temp' → logprob: -18.875076293945312

Token 944: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.004198067355901003
    2. '(temp' → logprob: -5.62919807434082
    3. 'd' → logprob: -8.12919807434082
    4. 'temp' → logprob: -8.25419807434082
    5. '[temp' → logprob: -10.37919807434082
    6. '(' → logprob: -12.37919807434082
    7. '```' → logprob: -13.50419807434082
    8. '_on' → logprob: -14.12919807434082
    9. '_temp' → logprob: -14.25419807434082
    10. '(d' → logprob: -14.25419807434082

Token 945: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003080505644902587
    2. ',temp' → logprob: -5.878080368041992
    3. ' ,' → logprob: -8.253080368041992
    4. '(temp' → logprob: -12.378080368041992
    5. ',t' → logprob: -12.503080368041992
    6. ',b' → logprob: -12.878080368041992
    7. 'temp' → logprob: -13.253080368041992
    8. ',d' → logprob: -14.003080368041992
    9. '                   ' → logprob: -14.128080368041992
    10. ',
' → logprob: -15.628080368041992

Token 946: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.014163628220558167
    2. ' book' → logprob: -4.264163494110107
    3. 'temp' → logprob: -16.639163970947266
    4. 'b' → logprob: -16.889163970947266
    5. '	book' → logprob: -18.139163970947266
    6. '    ' → logprob: -18.889163970947266
    7. '   ' → logprob: -19.139163970947266
    8. ' ' → logprob: -19.389163970947266
    9. '(book' → logprob: -19.764163970947266
    10. 'Book' → logprob: -19.764163970947266

Token 947: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01620938628911972
    2. ')
' → logprob: -4.141209602355957
    3. '<|end|>' → logprob: -9.141209602355957
    4. '                   ' → logprob: -9.766209602355957
    5. '<|end|>' → logprob: -12.516209602355957
    6. '               ' → logprob: -13.891209602355957
    7. ')

' → logprob: -14.016209602355957
    8. ')#' → logprob: -14.141209602355957
    9. ',' → logprob: -14.266209602355957
    10. ' )' → logprob: -14.391209602355957

Token 948: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008571784012019634
    2. 'cost' → logprob: -5.758571624755859
    3. '               ' → logprob: -6.383571624755859
    4. '```' → logprob: -7.133571624755859
    5. ' cost' → logprob: -7.258571624755859
    6. '           ' → logprob: -7.258571624755859
    7. '                    
' → logprob: -7.883571624755859
    8. '   ' → logprob: -8.13357162475586
    9. '
' → logprob: -8.13357162475586
    10. '<|end|>' → logprob: -8.75857162475586

Token 949: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.001941130612976849
    2. ' cost' → logprob: -6.251941204071045
    3. 'update' → logprob: -12.001940727233887
    4. '                   ' → logprob: -12.501940727233887
    5. '
' → logprob: -13.501940727233887
    6. '               ' → logprob: -14.876940727233887
    7. '   ' → logprob: -15.126940727233887
    8. 'temp' → logprob: -15.126940727233887
    9. '           ' → logprob: -15.251940727233887
    10. 'access' → logprob: -16.876941680908203

Token 950: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16022513806819916
    2. '+=' → logprob: -1.9102251529693604
    3. ']+=' → logprob: -14.910224914550781
    4. '            ' → logprob: -16.03522491455078
    5. '+' → logprob: -16.41022491455078
    6. '```' → logprob: -16.53522491455078
    7. '+="' → logprob: -17.03522491455078
    8. '    ' → logprob: -17.16022491455078
    9. '   ' → logprob: -17.53522491455078
    10. '                        ' → logprob: -17.66022491455078

Token 951: ' access' (ID: 3158)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'access' → logprob: -3.547789674485102e-05
    2. ' access' → logprob: -10.250035285949707
    3. '
' → logprob: -17.625036239624023
    4. '(access' → logprob: -18.250036239624023
    5. '   ' → logprob: -18.875036239624023
    6. ' ' → logprob: -19.250036239624023
    7. 'accept' → logprob: -19.625036239624023
    8. '1' → logprob: -19.750036239624023
    9. 'answer' → logprob: -19.750036239624023
    10. '  ' → logprob: -20.250036239624023

Token 952: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0006660910439677536
    2. '_s' → logprob: -7.37566614151001
    3. 's' → logprob: -10.750665664672852
    4. 'desk' → logprob: -11.000665664672852
    5. 'd' → logprob: -14.375665664672852
    6. '=' → logprob: -15.625665664672852
    7. '_des' → logprob: -15.625665664672852
    8. ' desk' → logprob: -15.625665664672852
    9. 'Desk' → logprob: -16.37566566467285
    10. '_' → logprob: -16.75066566467285

Token 953: 'esk' (ID: 22444)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' → logprob: -0.10104250907897949
    2. 'esk' → logprob: -2.3510425090789795
    3. 's' → logprob: -7.476042747497559
    4. 'desk' → logprob: -8.851042747497559
    5. 'ask' → logprob: -10.851042747497559
    6. 'd' → logprob: -10.976042747497559
    7. 'sek' → logprob: -11.101042747497559
    8. 't' → logprob: -11.726042747497559
    9. '_d' → logprob: -12.101042747497559
    10. 'es' → logprob: -12.226042747497559

Token 954: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -7.827200897736475e-05
    2. 'temp' → logprob: -9.500078201293945
    3. '(' → logprob: -12.875078201293945
    4. ' temp' → logprob: -14.625078201293945
    5. '(tmp' → logprob: -16.250078201293945
    6. '[temp' → logprob: -16.625078201293945
    7. ' (' → logprob: -16.875078201293945
    8. '$temp' → logprob: -17.250078201293945
    9. ',temp' → logprob: -17.625078201293945
    10. '	temp' → logprob: -18.000078201293945

Token 955: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00543059641495347
    2. '(temp' → logprob: -5.505430698394775
    3. ')' → logprob: -7.130430698394775
    4. '[temp' → logprob: -7.880430698394775
    5. '(' → logprob: -9.755430221557617
    6. 'on' → logprob: -10.255430221557617
    7. '_on' → logprob: -11.005430221557617
    8. '[' → logprob: -11.880430221557617
    9. ')+' → logprob: -12.380430221557617
    10. '=temp' → logprob: -12.380430221557617

Token 956: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032349901739507914
    2. ')
' → logprob: -5.75323486328125
    3. ' )' → logprob: -11.37823486328125
    4. '())' → logprob: -11.37823486328125
    5. '()' → logprob: -11.62823486328125
    6. ')\' → logprob: -12.37823486328125
    7. '           ' → logprob: -12.62823486328125
    8. '(' → logprob: -12.87823486328125
    9. '))' → logprob: -13.37823486328125
    10. '       ' → logprob: -13.37823486328125

Token 957: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2704935073852539
    2. '               ' → logprob: -1.645493507385254
    3. '```' → logprob: -4.645493507385254
    4. '           ' → logprob: -4.895493507385254
    5. 'if' → logprob: -4.895493507385254
    6. ' if' → logprob: -5.270493507385254
    7. '                   ' → logprob: -5.770493507385254
    8. 'else' → logprob: -6.270493507385254
    9. '<|end|>' → logprob: -6.270493507385254
    10. '                
' → logprob: -6.395493507385254

Token 958: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.312397837638855
    2. '               ' → logprob: -1.937397837638855
    3. '           ' → logprob: -3.3123979568481445
    4. 'while' → logprob: -3.3123979568481445
    5. '#' (adapté à ' #') → logprob: -3.8123979568481445
    6. ' if' → logprob: -4.5623979568481445
    7. '
' → logprob: -5.0623979568481445
    8. 'else' → logprob: -5.3123979568481445
    9. '```' → logprob: -5.3123979568481445
    10. ' while' → logprob: -7.6873979568481445

Token 959: ' find' (ID: 1646)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03577974811196327
    2. '#' → logprob: -3.4107797145843506
    3. '               ' → logprob: -7.53577995300293
    4. 'if' → logprob: -7.78577995300293
    5. '                   ' → logprob: -8.28577995300293
    6. 'ev' → logprob: -8.66077995300293
    7. 'lr' → logprob: -9.03577995300293
    8. 'old' → logprob: -9.16077995300293
    9. ' l' → logprob: -9.41077995300293
    10. 'LR' → logprob: -9.53577995300293

Token 960: ' L' (ID: 451)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0019946584943681955
    2. 'lr' → logprob: -7.501994609832764
    3. 'book' → logprob: -7.501994609832764
    4. ' l' → logprob: -8.001995086669922
    5. 'LR' → logprob: -9.376995086669922
    6. 'b' → logprob: -9.626995086669922
    7. '_l' → logprob: -9.751995086669922
    8. '#' → logprob: -9.751995086669922
    9. 'old' → logprob: -10.126995086669922
    10. '```' → logprob: -10.126995086669922

Token 961: 'RU' (ID: 63252)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0077852471731603146
    2. 'r' → logprob: -4.882785320281982
    3. 'ruk' → logprob: -9.632784843444824
    4. 'RU' → logprob: -9.882784843444824
    5. '   ' → logprob: -11.007784843444824
    6. '```' → logprob: -11.257784843444824
    7. '       ' → logprob: -11.382784843444824
    8. 'rb' → logprob: -12.882784843444824
    9. 'rv' → logprob: -13.132784843444824
    10. '#' → logprob: -13.382784843444824

Token 962: ' book' (ID: 2392)
  Prédit: '_book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.09895879775285721
    2. 'book' → logprob: -2.598958730697632
    3. '_on' → logprob: -4.348958969116211
    4. '               ' → logprob: -5.973958969116211
    5. 'on' → logprob: -6.098958969116211
    6. ' =' → logprob: -7.348958969116211
    7. '_l' → logprob: -7.473958969116211
    8. '           ' → logprob: -8.348958969116211
    9. '_b' → logprob: -8.598958969116211
    10. ' on' → logprob: -9.223958969116211

Token 963: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2588396966457367
    2. '               ' → logprob: -1.758839726448059
    3. '_l' → logprob: -3.5088396072387695
    4. 'l' → logprob: -4.5088396072387695
    5. '=' → logprob: -5.5088396072387695
    6. '=l' → logprob: -5.5088396072387695
    7. 'on' → logprob: -6.0088396072387695
    8. ' on' → logprob: -6.1338396072387695
    9. ',l' → logprob: -7.7588396072387695
    10. ' l' → logprob: -7.8838396072387695

Token 964: ' D' (ID: 415)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031339896377176046
    2. '1' → logprob: -6.253133773803711
    3. 'd' → logprob: -6.878133773803711
    4. '(' → logprob: -9.503133773803711
    5. '```' → logprob: -9.878133773803711
    6. 'D' → logprob: -10.128133773803711
    7. ' ' → logprob: -12.878133773803711
    8. '[' → logprob: -13.003133773803711
    9. '_d' → logprob: -13.628133773803711
    10. 'def' → logprob: -14.253133773803711

Token 965: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.750000953674316
    3. '[' → logprob: -16.0
    4. ' ' → logprob: -16.375
    5. '１' → logprob: -16.75
    6. '```' → logprob: -17.75
    7. '(' → logprob: -18.125
    8. '0' → logprob: -18.375
    9. '۱' → logprob: -18.5
    10. '' → logprob: -18.625

Token 966: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005442093592137098
    2. 'l' → logprob: -5.755442142486572
    3. ' l' → logprob: -6.380442142486572
    4. ',l' → logprob: -8.630441665649414
    5. ',' → logprob: -9.255441665649414
    6. '```' → logprob: -9.755441665649414
    7. '           ' → logprob: -9.880441665649414
    8. 'old' → logprob: -10.505441665649414
    9. '_l' → logprob: -10.755441665649414
    10. 'd' → logprob: -10.880441665649414

Token 967: ' take' (ID: 2304)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.33258116245269775
    2. '               ' → logprob: -1.9575811624526978
    3. ' l' → logprob: -2.957581043243408
    4. 'd' → logprob: -3.457581043243408
    5. 'remove' → logprob: -4.082581043243408
    6. 'old' → logprob: -4.332581043243408
    7. '                   ' → logprob: -4.707581043243408
    8. '#' → logprob: -5.707581043243408
    9. 'if' → logprob: -5.957581043243408
    10. '```' → logprob: -5.957581043243408

Token 968: ' it' (ID: 480)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.39832478761672974
    2. '_l' → logprob: -1.773324728012085
    3. 'out' → logprob: -3.523324728012085
    4. '_d' → logprob: -3.648324728012085
    5. '_book' → logprob: -4.273324966430664
    6. 'book' → logprob: -4.398324966430664
    7. '()' → logprob: -4.523324966430664
    8. '                   ' → logprob: -4.523324966430664
    9. 'l' → logprob: -4.773324966430664
    10. '(' → logprob: -4.898324966430664

Token 969: ' out' (ID: 842)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0035131184849888086
    2. 'l' → logprob: -6.503513336181641
    3. ' l' → logprob: -7.878513336181641
    4. 'd' → logprob: -8.00351333618164
    5. '```' → logprob: -8.00351333618164
    6. ',l' → logprob: -8.62851333618164
    7. '           ' → logprob: -8.75351333618164
    8. '_l' → logprob: -9.00351333618164
    9. 'from' → logprob: -9.25351333618164
    10. ',' → logprob: -9.25351333618164

Token 970: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007711516227573156
    2. ' l' → logprob: -8.500771522521973
    3. 'l' → logprob: -8.625771522521973
    4. '<|end|>' → logprob: -9.250771522521973
    5. ',' → logprob: -9.375771522521973
    6. '```' → logprob: -9.500771522521973
    7. ',l' → logprob: -10.125771522521973
    8. '<|end|>' → logprob: -11.250771522521973
    9. '           ' → logprob: -11.500771522521973
    10. '_l' → logprob: -11.875771522521973

Token 971: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01628796011209488
    2. '           ' → logprob: -4.891287803649902
    3. 'l' → logprob: -5.141287803649902
    4. '```' → logprob: -6.516287803649902
    5. ' l' → logprob: -7.016287803649902
    6. '<|end|>' → logprob: -8.891287803649902
    7. 'd' → logprob: -9.766287803649902
    8. '``' → logprob: -10.016287803649902
    9. ',l' → logprob: -10.766287803649902
    10. 'token' → logprob: -10.891287803649902

Token 972: ' l' (ID: 305)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6768357157707214
    2. 'l' (adapté à ' l') → logprob: -0.8018357157707214
    3. ' l' → logprob: -3.176835775375366
    4. '           ' → logprob: -6.926835536956787
    5. 'old' → logprob: -8.301836013793945
    6. 'lr' → logprob: -9.051836013793945
    7. 'd' → logprob: -10.301836013793945
    8. '	l' → logprob: -10.301836013793945
    9. '```' → logprob: -10.926836013793945
    10. 'ltr' → logprob: -11.301836013793945

Token 973: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.10043870657682419
    2. 'r' → logprob: -2.3504385948181152
    3. 'l' → logprob: -9.475439071655273
    4. '   ' → logprob: -9.600439071655273
    5. 'rv' → logprob: -10.975439071655273
    6. '#' → logprob: -11.475439071655273
    7. '```' → logprob: -11.475439071655273
    8. '1' → logprob: -11.600439071655273
    9. 'RU' → logprob: -12.100439071655273
    10. '       ' → logprob: -12.225439071655273

Token 974: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.0012014202075079083
    2. ' =' → logprob: -7.001201629638672
    3. 'book' → logprob: -8.876201629638672
    4. '=' → logprob: -9.376201629638672
    5. '_' → logprob: -9.876201629638672
    6. 'Book' → logprob: -12.876201629638672
    7. '=_' → logprob: -12.876201629638672
    8. '_b' → logprob: -13.001201629638672
    9. '	book' → logprob: -13.251201629638672
    10. '_books' → logprob: -13.626201629638672

Token 975: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.201463520526886
    2. '=' → logprob: -1.7014634609222412
    3. '=d' → logprob: -9.95146369934082
    4. ' ' → logprob: -13.95146369934082
    5. ',' → logprob: -14.45146369934082
    6. ')' → logprob: -14.95146369934082
    7. 'd' → logprob: -15.07646369934082
    8. ' ' → logprob: -15.45146369934082
    9. '=l' → logprob: -16.32646369934082
    10. 's' → logprob: -16.95146369934082

Token 976: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.12150298804044724
    2. ' find' → logprob: -2.2465028762817383
    3. 'd' → logprob: -4.871502876281738
    4. ' d' → logprob: -6.996502876281738
    5. '(find' → logprob: -10.371502876281738
    6. 'None' → logprob: -10.996502876281738
    7. ' None' → logprob: -11.746502876281738
    8. ' ' → logprob: -12.871502876281738
    9. '   ' → logprob: -13.246502876281738
    10. '	find' → logprob: -13.246502876281738

Token 977: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.03368915617465973
    2. '_non' → logprob: -3.408689260482788
    3. 'non' → logprob: -10.658689498901367
    4. 'l' → logprob: -11.033689498901367
    5. '\' → logprob: -13.908689498901367
    6. '_n' → logprob: -14.158689498901367
    7. '_low' → logprob: -15.283689498901367
    8. '_not' → logprob: -15.283689498901367
    9. '_L' → logprob: -15.533689498901367
    10. '```' → logprob: -15.783689498901367

Token 978: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0342036597430706
    2. 'r' → logprob: -3.4092037677764893
    3. 'd' → logprob: -8.03420352935791
    4. 'u' → logprob: -9.40920352935791
    5. '1' → logprob: -9.40920352935791
    6. 'l' → logprob: -10.40920352935791
    7. 'ro' → logprob: -12.15920352935791
    8. '_ru' → logprob: -12.28420352935791
    9. '```' → logprob: -12.53420352935791
    10. 'ру' → logprob: -12.65920352935791

Token 979: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.00027599421446211636
    2. 'on' → logprob: -8.250275611877441
    3. '(' → logprob: -11.625275611877441
    4. '()' → logprob: -12.750275611877441
    5. 'On' → logprob: -14.125275611877441
    6. '_' → logprob: -14.875275611877441
    7. '_d' → logprob: -15.125275611877441
    8. '```' → logprob: -15.250275611877441
    9. 'd' → logprob: -15.500275611877441
    10. ' on' → logprob: -15.625275611877441

Token 980: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.6693280935287476
    2. '1' → logprob: -1.4193280935287476
    3. 'd' → logprob: -1.4193280935287476
    4. '_' → logprob: -5.544328212738037
    5. '(' → logprob: -9.419327735900879
    6. 'D' → logprob: -9.419327735900879
    7. '```' → logprob: -9.544327735900879
    8. '0' → logprob: -11.544327735900879
    9. '[' → logprob: -11.919327735900879
    10. ' ' → logprob: -12.294327735900879

Token 981: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. 'd' → logprob: -14.000000953674316
    3. '_' → logprob: -16.125001907348633
    4. '(' → logprob: -16.500001907348633
    5. ' ' → logprob: -16.750001907348633
    6. '[' → logprob: -16.875001907348633
    7. '```' → logprob: -17.250001907348633
    8. 'l' → logprob: -17.500001907348633
    9. '_d' → logprob: -17.625001907348633
    10. '１' → logprob: -18.062501907348633

Token 982: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03809312731027603
    2. '()
' → logprob: -3.288093090057373
    3. '()

' → logprob: -10.663093566894531
    4. '()\' → logprob: -11.413093566894531
    5. '()
' → logprob: -11.663093566894531
    6. '()`' → logprob: -12.788093566894531
    7. '();' → logprob: -13.288093566894531
    8. '()[' → logprob: -13.663093566894531
    9. '()<' → logprob: -15.288093566894531
    10. '()]' → logprob: -15.288093566894531

Token 983: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022472037002444267
    2. 'if' → logprob: -4.147471904754639
    3. '           ' → logprob: -5.397471904754639
    4. ' if' → logprob: -6.522471904754639
    5. '```' → logprob: -8.772472381591797
    6. 'update' → logprob: -9.272472381591797
    7. 'd' → logprob: -9.647472381591797
    8. 'remove' → logprob: -9.897472381591797
    9. '       ' → logprob: -11.147472381591797
    10. ',' → logprob: -11.772472381591797

Token 984: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5371394753456116
    2. 'if' → logprob: -1.0371394157409668
    3. 'remove' → logprob: -3.287139415740967
    4. ' if' → logprob: -3.912139415740967
    5. '           ' → logprob: -6.287139415740967
    6. 'update' → logprob: -6.912139415740967
    7. 'd' → logprob: -8.037139892578125
    8. ' remove' → logprob: -8.912139892578125
    9. 'assert' → logprob: -9.037139892578125
    10. '       ' → logprob: -9.412139892578125

Token 985: ' remove' (ID: 6234)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06422722339630127
    2. 'remove' → logprob: -2.8142271041870117
    3. 'update' → logprob: -7.314227104187012
    4. 'd' → logprob: -7.439227104187012
    5. ' if' → logprob: -8.064227104187012
    6. '               ' → logprob: -8.439227104187012
    7. 'put' → logprob: -8.689227104187012
    8. '           ' → logprob: -8.814227104187012
    9. 'assert' → logprob: -9.689227104187012
    10. '       ' → logprob: -10.689227104187012

Token 986: ' l' (ID: 305)
  Prédit: '_book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.7631596326828003
    2. 'Book' → logprob: -1.6381596326828003
    3. 'remove' → logprob: -1.8881596326828003
    4. '               ' → logprob: -2.01315975189209
    5. 'if' → logprob: -3.63815975189209
    6. '_l' → logprob: -5.01315975189209
    7. ' remove' → logprob: -5.63815975189209
    8. '```' → logprob: -5.88815975189209
    9. '                   ' → logprob: -6.01315975189209
    10. 'from' → logprob: -6.01315975189209

Token 987: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.005372610874474049
    2. '1' → logprob: -5.380372524261475
    3. 'r' → logprob: -7.630372524261475
    4. 'RU' → logprob: -9.880373001098633
    5. '   ' → logprob: -10.130373001098633
    6. '       ' → logprob: -10.130373001098633
    7. 'uru' → logprob: -11.005373001098633
    8. 'from' → logprob: -11.130373001098633
    9. 'ру' → logprob: -11.380373001098633
    10. '               ' → logprob: -11.755373001098633

Token 988: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.0003430912329349667
    2. '               ' → logprob: -8.375343322753906
    3. '                   ' → logprob: -10.250343322753906
    4. 'book' → logprob: -10.500343322753906
    5. '_b' → logprob: -11.375343322753906
    6. 'Book' → logprob: -11.375343322753906
    7. '_books' → logprob: -12.250343322753906
    8. '           ' → logprob: -12.625343322753906
    9. '                       ' → logprob: -12.625343322753906
    10. 'if' → logprob: -12.750343322753906

Token 989: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.296668142080307
    2. '(' → logprob: -1.9216681718826294
    3. '               ' → logprob: -2.29666805267334
    4. 'if' → logprob: -5.67166805267334
    5. ' from' → logprob: -6.17166805267334
    6. '_from' → logprob: -6.54666805267334
    7. '()' → logprob: -7.17166805267334
    8. '()
' → logprob: -7.54666805267334
    9. 'd' → logprob: -8.17166805267334
    10. 'From' → logprob: -8.42166805267334

Token 990: ' D' (ID: 415)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.5866358876228333
    2. '0' → logprob: -1.4616358280181885
    3. 'd' → logprob: -1.5866358280181885
    4. ' d' → logprob: -5.211636066436768
    5. 'desk' → logprob: -7.461636066436768
    6. ' desks' → logprob: -7.586636066436768
    7. ' ' → logprob: -7.711636066436768
    8. ' des' → logprob: -9.33663558959961
    9. '```' → logprob: -9.71163558959961
    10. ' desk' → logprob: -10.21163558959961

Token 991: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021617230959236622
    2. 'esk' → logprob: -9.250216484069824
    3. 'es' → logprob: -9.875216484069824
    4. '[' → logprob: -9.875216484069824
    5. '_' → logprob: -12.375216484069824
    6. '```' → logprob: -12.500216484069824
    7. '0' → logprob: -13.125216484069824
    8. 'ek' → logprob: -13.500216484069824
    9. 'e' → logprob: -13.875216484069824
    10. 'sk' → logprob: -14.125216484069824

Token 992: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005099745467305183
    2. 'remove' → logprob: -5.880099773406982
    3. '(' → logprob: -6.880099773406982
    4. '(remove' → logprob: -7.755099773406982
    5. 'd' → logprob: -7.880099773406982
    6. '           ' → logprob: -9.630099296569824
    7. '
' → logprob: -9.880099296569824
    8. '()
' → logprob: -9.880099296569824
    9. '()' → logprob: -10.005099296569824
    10. '.remove' → logprob: -10.130099296569824

Token 993: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011208388954401016
    2. 'remove' → logprob: -4.511208534240723
    3. '           ' → logprob: -9.761208534240723
    4. '(remove' → logprob: -10.261208534240723
    5. 'd' → logprob: -11.136208534240723
    6. '.remove' → logprob: -11.511208534240723
    7. ',' → logprob: -11.886208534240723
    8. '              ' → logprob: -12.136208534240723
    9. ' remove' → logprob: -12.136208534240723
    10. '                   ' → logprob: -12.261208534240723

Token 994: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' (adapté à ' remove') → logprob: -0.09233979880809784
    2. '               ' → logprob: -2.9673397541046143
    3. 'if' → logprob: -3.3423397541046143
    4. 'put' → logprob: -7.217339992523193
    5. ' remove' → logprob: -7.717339992523193
    6. ' if' → logprob: -9.217339515686035
    7. '```' → logprob: -9.342339515686035
    8. '           ' → logprob: -10.842339515686035
    9. '(remove' → logprob: -12.592339515686035
    10. '                   ' → logprob: -12.592339515686035

Token 995: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -2.641841820150148e-05
    2. '_d' → logprob: -10.75002670288086
    3. '_books' → logprob: -13.25002670288086
    4. '_' → logprob: -13.75002670288086
    5. '(_' → logprob: -14.62502670288086
    6. 'Book' → logprob: -14.75002670288086
    7. '```' → logprob: -14.75002670288086
    8. '_des' → logprob: -15.25002670288086
    9. '_from' → logprob: -15.50002670288086
    10. '_BOOK' → logprob: -16.00002670288086

Token 996: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -8.756989700486884e-05
    2. 'from' → logprob: -9.37508773803711
    3. '(' → logprob: -13.00008773803711
    4. '_on' → logprob: -15.75008773803711
    5. '_book' → logprob: -16.00008773803711
    6. 'From' → logprob: -16.37508773803711
    7. '```' → logprob: -17.25008773803711
    8. '_FROM' → logprob: -19.00008773803711
    9. '从' → logprob: -19.25008773803711
    10. ' from' → logprob: -19.25008773803711

Token 997: '_d' (ID: 1565)
  Prédit: 'desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'desk' → logprob: -0.010951608419418335
    2. '_d' → logprob: -5.385951519012451
    3. 'd' → logprob: -5.510951519012451
    4. 'des' → logprob: -6.260951519012451
    5. '(d' → logprob: -8.76095199584961
    6. ' desk' → logprob: -9.63595199584961
    7. 'deck' → logprob: -10.38595199584961
    8. '(' → logprob: -10.76095199584961
    9. 'esk' → logprob: -10.88595199584961
    10. 'Desk' → logprob: -11.01095199584961

Token 998: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.07986285537481308
    2. '1' → logprob: -2.8298628330230713
    3. 'sk' → logprob: -4.07986307144165
    4. 'es' → logprob: -8.079862594604492
    5. '0' → logprob: -9.204862594604492
    6. 'ask' → logprob: -9.454862594604492
    7. 'ek' → logprob: -9.704862594604492
    8. '_' → logprob: -9.829862594604492
    9. 'esc' → logprob: -10.329862594604492
    10. '[' → logprob: -10.829862594604492

Token 999: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -14.875000953674316
    3. '(
' → logprob: -15.375000953674316
    4. ' (' → logprob: -17.0
    5. '```' → logprob: -20.625
    6. '[' → logprob: -22.25
    7. 'def' → logprob: -22.25
    8. '((' → logprob: -22.75
    9. ' ' → logprob: -22.75
    10. '(

' → logprob: -23.125

Token 1000: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.875
    3. ' ' → logprob: -16.875
    4. '```' → logprob: -18.125
    5. '   ' → logprob: -20.25
    6. '`' → logprob: -20.625
    7. '[' → logprob: -20.875
    8. ')' → logprob: -21.25
    9. '(
' → logprob: -21.625
    10. '``' → logprob: -21.75

Token 1001: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015102163888514042
    2. ',l' → logprob: -6.501510143280029
    3. ' ,' → logprob: -12.251510620117188
    4. 'l' → logprob: -13.376510620117188
    5. ',
' → logprob: -13.626510620117188
    6. ')' → logprob: -16.251510620117188
    7. ' l' → logprob: -17.251510620117188
    8. '```' → logprob: -17.376510620117188
    9. '   ' → logprob: -17.751510620117188
    10. '           ' → logprob: -17.751510620117188

Token 1002: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004078401252627373
    2. ' l' → logprob: -5.504078388214111
    3. '	l' → logprob: -18.004077911376953
    4. '           ' → logprob: -19.504077911376953
    5. '       ' → logprob: -20.629077911376953
    6. '   ' → logprob: -21.254077911376953
    7. '    ' → logprob: -21.254077911376953
    8. '               ' → logprob: -21.879077911376953
    9. ')' → logprob: -22.129077911376953
    10. '        ' → logprob: -22.254077911376953

Token 1003: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -3.531315314830863e-06
    2. 'ру' → logprob: -12.875003814697266
    3. 'r' → logprob: -14.500003814697266
    4. 'RU' → logprob: -15.125003814697266
    5. '1' → logprob: -17.625003814697266
    6. '_ru' → logprob: -17.750003814697266
    7. 'ur' → logprob: -17.875003814697266
    8. '[' → logprob: -18.250003814697266
    9. '{' → logprob: -18.250003814697266
    10. 'ro' → logprob: -18.500003814697266

Token 1004: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.003762667067348957
    2. 'u' → logprob: -5.628762722015381
    3. 'ook' → logprob: -10.378762245178223
    4. '_BOOK' → logprob: -10.503762245178223
    5. '_' → logprob: -10.628762245178223
    6. '_u' → logprob: -11.128762245178223
    7. '_books' → logprob: -11.253762245178223
    8. ')_' → logprob: -11.253762245178223
    9. ')' → logprob: -11.378762245178223
    10. '   ' → logprob: -12.753762245178223

Token 1005: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932852268218994
    2. ')
' → logprob: -0.6932852268218994
    3. '               ' → logprob: -10.06828498840332
    4. ')
' → logprob: -10.06828498840332
    5. ',' → logprob: -10.19328498840332
    6. '                   ' → logprob: -12.69328498840332
    7. '           ' → logprob: -12.69328498840332
    8. '),' → logprob: -12.94328498840332
    9. ')

' → logprob: -12.94328498840332
    10. '       ' → logprob: -13.81828498840332

Token 1006: '               ' (ID: 506)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.1671592891216278
    2. '           ' → logprob: -1.9171593189239502
    3. '               ' → logprob: -5.667159080505371
    4. '```' → logprob: -6.292159080505371
    5. ' update' → logprob: -7.417159080505371
    6. '(update' → logprob: -7.792159080505371
    7. '                   ' → logprob: -9.167159080505371
    8. '``' → logprob: -9.417159080505371
    9. 'remove' → logprob: -9.667159080505371
    10. '   ' → logprob: -9.917159080505371

Token 1007: ' d' (ID: 272)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.005615296773612499
    2. 'if' → logprob: -5.880615234375
    3. ' update' → logprob: -6.630615234375
    4. '               ' → logprob: -7.255615234375
    5. '           ' → logprob: -8.130615234375
    6. 'try' → logprob: -9.130615234375
    7. 'cost' → logprob: -9.255615234375
    8. '
' → logprob: -9.630615234375
    9. ' if' → logprob: -9.880615234375
    10. '                   ' → logprob: -10.130615234375

Token 1008: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'l' → logprob: -15.625
    3. '_' → logprob: -16.75
    4. '_l' → logprob: -17.0
    5. '   ' → logprob: -18.5
    6. '```' → logprob: -18.625
    7. 'el' → logprob: -19.375
    8. '１' → logprob: -19.8125
    9. 'e' → logprob: -20.0
    10. '
' → logprob: -20.1875

Token 1009: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -6.704273118884885e-07
    2. 'l' → logprob: -14.375000953674316
    3. '```' → logprob: -18.625
    4. '_r' → logprob: -18.75
    5. '\' → logprob: -18.75
    6. '_lr' → logprob: -18.875
    7. 'L' → logprob: -19.25
    8. 'd' → logprob: -19.75
    9. '1' → logprob: -20.375
    10. '	l' → logprob: -21.25

Token 1010: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -7.44574936106801e-05
    2. 'r' → logprob: -9.62507438659668
    3. 'u' → logprob: -12.25007438659668
    4. 'rl' → logprob: -13.75007438659668
    5. '_ru' → logprob: -14.00007438659668
    6. 'lu' → logprob: -14.50007438659668
    7. 'l' → logprob: -14.87507438659668
    8. 'ру' → logprob: -15.25007438659668
    9. 'RU' → logprob: -16.12507438659668
    10. 're' → logprob: -16.25007438659668

Token 1011: '.p' (ID: 1201)
  Prédit: '.remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.07430262863636017
    2. '.p' → logprob: -2.6993026733398438
    3. '.append' → logprob: -5.824302673339844
    4. 'remove' → logprob: -6.699302673339844
    5. '.' → logprob: -9.824302673339844
    6. '.rotate' → logprob: -9.824302673339844
    7. '.pop' → logprob: -10.949302673339844
    8. '_remove' → logprob: -11.324302673339844
    9. '.extend' → logprob: -11.324302673339844
    10. '_.' → logprob: -12.324302673339844

Token 1012: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.004081485792994499
    2. 'op' → logprob: -5.5040812492370605
    3. 'remove' → logprob: -13.129081726074219
    4. 'opup' → logprob: -15.629081726074219
    5. 'opped' → logprob: -15.879081726074219
    6. 'p' → logprob: -15.879081726074219
    7. 'opy' → logprob: -16.12908172607422
    8. 'append' → logprob: -16.50408172607422
    9. 'opp' → logprob: -16.75408172607422
    10. 'pop' → logprob: -16.87908172607422

Token 1013: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.38870900869369507
    2. '()' → logprob: -1.1387090682983398
    3. '               ' → logprob: -6.88870906829834
    4. '()

' → logprob: -7.51370906829834
    5. 'update' → logprob: -9.26370906829834
    6. '<|end|>' → logprob: -9.88870906829834
    7. '
' → logprob: -10.01370906829834
    8. '()\' → logprob: -11.01370906829834
    9. '           ' → logprob: -11.26370906829834
    10. '()
' → logprob: -11.76370906829834

Token 1014: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010680265724658966
    2. 'if' → logprob: -4.885680198669434
    3. '                
' → logprob: -7.010680198669434
    4. 'cost' → logprob: -7.010680198669434
    5. '```' → logprob: -7.385680198669434
    6. 'put' → logprob: -9.135680198669434
    7. '``' → logprob: -9.260680198669434
    8. '           ' → logprob: -9.510680198669434
    9. ' if' → logprob: -9.510680198669434
    10. '
' → logprob: -9.885680198669434

Token 1015: ' cost' (ID: 3097)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02275489829480648
    2. '#' → logprob: -4.397754669189453
    3. 'cost' (adapté à ' cost') → logprob: -5.647754669189453
    4. '               ' → logprob: -5.772754669189453
    5. 'put' → logprob: -6.397754669189453
    6. '
' → logprob: -7.147754669189453
    7. '```' → logprob: -8.147754669189453
    8. 'queue' → logprob: -8.522754669189453
    9. '                
' → logprob: -8.647754669189453
    10. 'book' → logprob: -9.022754669189453

Token 1016: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20144587755203247
    2. '+=' → logprob: -1.7014458179473877
    3. ' -=' → logprob: -11.451445579528809
    4. '   ' → logprob: -11.826445579528809
    5. '+' → logprob: -12.701445579528809
    6. '=' → logprob: -13.076445579528809
    7. '            ' → logprob: -13.451445579528809
    8. '    ' → logprob: -13.576445579528809
    9. ']+=' → logprob: -13.701445579528809
    10. '+=(' → logprob: -13.951445579528809

Token 1017: ' access' (ID: 3158)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'access' → logprob: -0.00039504567394033074
    2. '1' → logprob: -7.875394821166992
    3. ' access' → logprob: -11.500394821166992
    4. '(access' → logprob: -13.250394821166992
    5. '0' → logprob: -13.500394821166992
    6. 'm' → logprob: -14.625394821166992
    7. '2' → logprob: -15.375394821166992
    8. 'ac' → logprob: -15.875394821166992
    9. '3' → logprob: -16.125394821166992
    10. ' ' → logprob: -16.500394821166992

Token 1018: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -6.384836888173595e-05
    2. '_s' → logprob: -9.7500638961792
    3. 'desk' → logprob: -12.3750638961792
    4. 's' → logprob: -14.5000638961792
    5. '=' → logprob: -15.2500638961792
    6. 'd' → logprob: -15.7500638961792
    7. '(d' → logprob: -15.8750638961792
    8. '(' → logprob: -16.250062942504883
    9. '_des' → logprob: -16.875062942504883
    10. '_' → logprob: -17.500062942504883

Token 1019: 'esk' (ID: 22444)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' → logprob: -1.2113979209971149e-05
    2. '1' → logprob: -12.375012397766113
    3. 'esk' → logprob: -12.375012397766113
    4. 's' → logprob: -13.500012397766113
    5. '(' → logprob: -14.125012397766113
    6. '(sk' → logprob: -15.250012397766113
    7. '[' → logprob: -15.375012397766113
    8. '_sk' → logprob: -16.000011444091797
    9. 'ask' → logprob: -16.125011444091797
    10. '0' → logprob: -16.250011444091797

Token 1020: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1756367712223437e-05
    2. '0' → logprob: -11.375011444091797
    3. ' (' → logprob: -15.125011444091797
    4. '(
' → logprob: -18.000011444091797
    5. '(-' → logprob: -18.250011444091797
    6. '((' → logprob: -18.625011444091797
    7. '```' → logprob: -18.875011444091797
    8. '`' → logprob: -19.375011444091797
    9. '(len' → logprob: -19.875011444091797
    10. '(l' → logprob: -19.875011444091797

Token 1021: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. 'l' → logprob: -11.50001335144043
    3. '(' → logprob: -13.00001335144043
    4. ' ' → logprob: -15.87501335144043
    5. '(l' → logprob: -15.87501335144043
    6. '
' → logprob: -16.12501335144043
    7. '

' → logprob: -16.93751335144043
    8. 'len' → logprob: -17.18751335144043
    9. '1' → logprob: -17.62501335144043
    10. '-' → logprob: -17.68751335144043

Token 1022: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01816609688103199
    2. ')
' → logprob: -4.0181660652160645
    3. '+' → logprob: -12.268166542053223
    4. ')

' → logprob: -12.268166542053223
    5. ')
' → logprob: -13.268166542053223
    6. '<|end|>' → logprob: -13.643166542053223
    7. ')#' → logprob: -14.018166542053223
    8. ')+' → logprob: -14.143166542053223
    9. '               ' → logprob: -14.393166542053223
    10. ' +' → logprob: -15.143166542053223

Token 1023: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009387221187353134
    2. 'if' → logprob: -5.384387016296387
    3. '                
' → logprob: -5.509387016296387
    4. '
' → logprob: -7.634387016296387
    5. '```' → logprob: -9.634387016296387
    6. ' if' → logprob: -9.884387016296387
    7. '``' → logprob: -10.759387016296387
    8. '           ' → logprob: -11.259387016296387
    9. '  
' → logprob: -11.509387016296387
    10. '              ' → logprob: -11.634387016296387

Token 1024: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008650857023894787
    2. 'if' → logprob: -4.758650779724121
    3. '#' (adapté à ' #') → logprob: -11.008650779724121
    4. '                
' → logprob: -11.633650779724121
    5. '
' → logprob: -11.883650779724121
    6. ' if' → logprob: -12.883650779724121
    7. '           ' → logprob: -14.508650779724121
    8. '              ' → logprob: -15.508650779724121
    9. '```' → logprob: -15.883650779724121
    10. '       ' → logprob: -16.133651733398438

Token 1025: ' put' (ID: 3006)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002904847264289856
    2. 'put' → logprob: -6.377904891967773
    3. '#' → logprob: -6.877904891967773
    4. '               ' → logprob: -8.752904891967773
    5. '           ' → logprob: -12.377904891967773
    6. ' if' → logprob: -12.752904891967773
    7. '```' → logprob: -13.127904891967773
    8. '
' → logprob: -13.752904891967773
    9. 'book' → logprob: -14.127904891967773
    10. '                   ' → logprob: -14.127904891967773

Token 1026: ' l' (ID: 305)
  Prédit: '_book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.3811817169189453
    2. '(l' → logprob: -1.6311817169189453
    3. 'book' → logprob: -2.6311817169189453
    4. 'l' → logprob: -3.3811817169189453
    5. '               ' → logprob: -5.631181716918945
    6. '(' → logprob: -6.131181716918945
    7. 'temp' → logprob: -6.256181716918945
    8. 'on' → logprob: -6.506181716918945
    9. 'the' → logprob: -6.631181716918945
    10. '_l' → logprob: -6.631181716918945

Token 1027: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -2.45848218582978e-06
    2. 'r' → logprob: -13.12500286102295
    3. 'ру' → logprob: -15.50000286102295
    4. 'RU' → logprob: -15.75000286102295
    5. 'uru' → logprob: -18.375001907348633
    6. 'ruh' → logprob: -18.375001907348633
    7. 'ro' → logprob: -18.625001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '_ru' → logprob: -18.625001907348633
    10. '```' → logprob: -18.625001907348633

Token 1028: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -1.7954958821064793e-05
    2. '```' → logprob: -12.000018119812012
    3. '_books' → logprob: -12.375018119812012
    4. '
' → logprob: -13.375018119812012
    5. '_on' → logprob: -13.875018119812012
    6. ')_' → logprob: -14.000018119812012
    7. ' _' → logprob: -14.375018119812012
    8. '_BOOK' → logprob: -14.500018119812012
    9. '_b' → logprob: -14.625018119812012
    10. ']_' → logprob: -15.000018119812012

Token 1029: ' on' (ID: 402)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.8350732326507568
    2. 'on' → logprob: -1.0850732326507568
    3. '_back' → logprob: -2.585073232650757
    4. '               ' → logprob: -3.210073232650757
    5. '_on' → logprob: -3.460073232650757
    6. ' back' → logprob: -3.835073232650757
    7. ' on' → logprob: -4.085073471069336
    8. '(' → logprob: -4.085073471069336
    9. ',' → logprob: -4.585073471069336
    10. '                   ' → logprob: -5.460073471069336

Token 1030: ' closest' (ID: 31179)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0012072573881596327
    2. '(temp' → logprob: -7.12620735168457
    3. ' temp' → logprob: -9.00120735168457
    4. 's' → logprob: -9.12620735168457
    5. '(' → logprob: -9.25120735168457
    6. '0' → logprob: -9.75120735168457
    7. 'tmp' → logprob: -12.25120735168457
    8. '   ' → logprob: -12.87620735168457
    9. 'des' → logprob: -13.37620735168457
    10. 'tem' → logprob: -13.50120735168457

Token 1031: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.07890355587005615
    2. '_non' → logprob: -2.5789036750793457
    3. '(' → logprob: -11.703903198242188
    4. ' non' → logprob: -13.203903198242188
    5. '(non' → logprob: -13.703903198242188
    6. '```' → logprob: -14.078903198242188
    7. 'def' → logprob: -14.703903198242188
    8. 'Non' → logprob: -15.078903198242188
    9. '_d' → logprob: -15.578903198242188
    10. 'n' → logprob: -15.828903198242188

Token 1032: '-full' (ID: 32536)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -4.008129963040119e-06
    2. '_full' → logprob: -13.375003814697266
    3. 'ful' → logprob: -14.000003814697266
    4. '-full' → logprob: -14.625003814697266
    5. 'empty' → logprob: -15.000003814697266
    6. ' full' → logprob: -15.375003814697266
    7. '(full' → logprob: -16.375003814697266
    8. 'null' → logprob: -16.500003814697266
    9. '
' → logprob: -16.500003814697266
    10. '	full' → logprob: -16.750003814697266

Token 1033: ' desk' (ID: 20794)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.47425225377082825
    2. 'desk' → logprob: -0.9742522239685059
    3. ' desk' → logprob: -8.849252700805664
    4. 'd' → logprob: -10.849252700805664
    5. '(' → logprob: -12.224252700805664
    6. 'Desk' → logprob: -12.974252700805664
    7. '(d' → logprob: -13.474252700805664
    8. '```' → logprob: -13.724252700805664
    9. 'deck' → logprob: -14.099252700805664
    10. 'def' → logprob: -14.474252700805664

Token 1034: ' except' (ID: 6384)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.039344318211078644
    2. '               ' → logprob: -3.414344310760498
    3. ',' → logprob: -5.789344310760498
    4. '```' → logprob: -7.664344310760498
    5. ' or' → logprob: -7.789344310760498
    6. ' (' → logprob: -7.789344310760498
    7. '(None' → logprob: -8.039344787597656
    8. 'or' → logprob: -8.164344787597656
    9. ' =' → logprob: -8.164344787597656
    10. '(temp' → logprob: -9.539344787597656

Token 1035: ' D' (ID: 415)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5766995549201965
    2. '(' → logprob: -0.8266995549201965
    3. 'None' → logprob: -7.701699733734131
    4. '(None' → logprob: -8.826699256896973
    5. 'temp' → logprob: -9.076699256896973
    6. '```' → logprob: -10.701699256896973
    7. '(temp' → logprob: -11.951699256896973
    8. '
' → logprob: -12.201699256896973
    9. '(-' → logprob: -12.201699256896973
    10. ' (' → logprob: -13.326699256896973

Token 1036: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025169195141643286
    2. '0' → logprob: -6.002516746520996
    3. '```' → logprob: -10.877516746520996
    4. 'es' → logprob: -11.627516746520996
    5. '(' → logprob: -11.877516746520996
    6. 'esk' → logprob: -13.002516746520996
    7. '[' → logprob: -13.502516746520996
    8. '_' → logprob: -14.002516746520996
    9. ' ' → logprob: -15.127516746520996
    10. '=' → logprob: -15.502516746520996

Token 1037: ' or' (ID: 503)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004071971052326262
    2. '               ' → logprob: -7.8754072189331055
    3. ' (' → logprob: -11.625407218933105
    4. '(
' → logprob: -11.750407218933105
    5. ',' → logprob: -12.250407218933105
    6. '(None' → logprob: -13.375407218933105
    7. '```' → logprob: -13.750407218933105
    8. '                   ' → logprob: -14.000407218933105
    9. '0' → logprob: -15.000407218933105
    10. '(_,' → logprob: -15.625407218933105

Token 1038: ' shelf' (ID: 40978)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3134705722332001
    2. 'temp' → logprob: -1.3134706020355225
    3. ' temp' → logprob: -9.688470840454102
    4. 'None' → logprob: -9.938470840454102
    5. 'exclude' → logprob: -10.938470840454102
    6. 's' → logprob: -11.063470840454102
    7. '(' → logprob: -11.188470840454102
    8. 'tmp' → logprob: -11.438470840454102
    9. '(temp' → logprob: -11.563470840454102
    10. '
' → logprob: -11.563470840454102

Token 1039: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03929835557937622
    2. ' =' → logprob: -4.4142985343933105
    3. '(' → logprob: -4.5392985343933105
    4. ',' → logprob: -5.5392985343933105
    5. 'temp' → logprob: -5.6642985343933105
    6. '(temp' → logprob: -6.2892985343933105
    7. ' or' → logprob: -6.6642985343933105
    8. '=' → logprob: -7.1642985343933105
    9. '```' → logprob: -7.4142985343933105
    10. '_except' → logprob: -7.5392985343933105

Token 1040: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015141816809773445
    2. '```' → logprob: -5.01514196395874
    3. '(' → logprob: -5.26514196395874
    4. ',' → logprob: -6.76514196395874
    5. '(find' → logprob: -7.76514196395874
    6. ' =' → logprob: -7.76514196395874
    7. '``' → logprob: -8.140141487121582
    8. 'temp' → logprob: -9.515141487121582
    9. 'find' → logprob: -9.640141487121582
    10. '       ' → logprob: -9.765141487121582

Token 1041: ' l' (ID: 305)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.8457763195037842
    2. '               ' → logprob: -1.5957763195037842
    3. 'd' → logprob: -1.7207763195037842
    4. 'new' → logprob: -2.845776319503784
    5. 'closest' → logprob: -3.095776319503784
    6. 'desk' → logprob: -4.470776557922363
    7. 'other' → logprob: -4.470776557922363
    8. 'find' → logprob: -4.470776557922363
    9. 'for' → logprob: -4.720776557922363
    10. 'found' → logprob: -5.470776557922363

Token 1042: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.28848227858543396
    2. 'temp' → logprob: -2.163482189178467
    3. 'r' → logprob: -3.038482189178467
    4. '   ' → logprob: -3.663482189178467
    5. 'non' → logprob: -3.913482189178467
    6. 'd' → logprob: -4.538482189178467
    7. 'for' → logprob: -5.163482189178467
    8. '       ' → logprob: -5.913482189178467
    9. 'rl' → logprob: -6.163482189178467
    10. 'l' → logprob: -6.288482189178467

Token 1043: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.20540060102939606
    2. '_book' → logprob: -1.7054005861282349
    3. '_books' → logprob: -6.205400466918945
    4. '_on' → logprob: -7.580400466918945
    5. ' =' → logprob: -8.455400466918945
    6. '_des' → logprob: -9.080400466918945
    7. '_place' → logprob: -9.205400466918945
    8. '_' → logprob: -9.330400466918945
    9. '```' → logprob: -9.330400466918945
    10. 'd' → logprob: -9.455400466918945

Token 1044: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07089059799909592
    2. '=' → logprob: -2.6958906650543213
    3. '=find' → logprob: -7.195890426635742
    4. 'ex' → logprob: -9.445890426635742
    5. '=None' → logprob: -10.820890426635742
    6. 'ef' → logprob: -11.070890426635742
    7. '=_' → logprob: -11.195890426635742
    8. '   ' → logprob: -11.195890426635742
    9. '_' → logprob: -11.320890426635742
    10. '_idx' → logprob: -11.695890426635742

Token 1045: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.06197440251708031
    2. ' find' → logprob: -2.811974287033081
    3. '(find' → logprob: -12.56197452545166
    4. 'None' → logprob: -13.56197452545166
    5. '	find' → logprob: -13.56197452545166
    6. '=find' → logprob: -15.18697452545166
    7. '.find' → logprob: -15.81197452545166
    8. ' None' → logprob: -15.93697452545166
    9. ')find' → logprob: -16.686973571777344
    10. '0' → logprob: -17.686973571777344

Token 1046: '_non' (ID: 52193)
  Prédit: '_non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.0001818489981815219
    2. 'non' → logprob: -8.625182151794434
    3. 'Non' → logprob: -13.250182151794434
    4. 'def' → logprob: -16.500181198120117
    5. '(' → logprob: -16.875181198120117
    6. '非' → logprob: -17.000181198120117
    7. '_NON' → logprob: -17.000181198120117
    8. '(non' → logprob: -17.250181198120117
    9. '_n' → logprob: -17.375181198120117
    10. '_not' → logprob: -17.500181198120117

Token 1047: 'full' (ID: 15393)
  Prédit: 'full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -1.580929347255733e-05
    2. '0' → logprob: -11.625016212463379
    3. '_full' → logprob: -12.875016212463379
    4. '1' → logprob: -12.875016212463379
    5. 'ful' → logprob: -14.000016212463379
    6. 'f' → logprob: -14.750016212463379
    7. 'first' → logprob: -15.875016212463379
    8. ' full' → logprob: -16.625015258789062
    9. '	full' → logprob: -16.875015258789062
    10. '
' → logprob: -17.500015258789062

Token 1048: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00041005798266269267
    2. '(' → logprob: -7.875410079956055
    3. '_s' → logprob: -11.125410079956055
    4. 'Desk' → logprob: -11.750410079956055
    5. 'desk' → logprob: -12.500410079956055
    6. '_des' → logprob: -13.000410079956055
    7. ' desk' → logprob: -14.625410079956055
    8. 's' → logprob: -14.750410079956055
    9. 'd' → logprob: -15.875410079956055
    10. '(d' → logprob: -16.750410079956055

Token 1049: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.04946613311767578
    2. '_d' → logprob: -3.299466133117676
    3. '(' → logprob: -4.799466133117676
    4. 'sk' → logprob: -6.924466133117676
    5. '(d' → logprob: -7.049466133117676
    6. 'desk' → logprob: -7.424466133117676
    7. 'es' → logprob: -8.924466133117676
    8. 'd' → logprob: -9.049466133117676
    9. '1' → logprob: -9.174466133117676
    10. '_' → logprob: -9.799466133117676

Token 1050: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3306015716807451e-05
    2. '0' → logprob: -11.37501335144043
    3. '(
' → logprob: -14.62501335144043
    4. '```' → logprob: -14.75001335144043
    5. '(None' → logprob: -14.75001335144043
    6. '1' → logprob: -15.12501335144043
    7. '(-' → logprob: -15.75001335144043
    8. ' (' → logprob: -15.75001335144043
    9. 'def' → logprob: -18.50001335144043
    10. '((' → logprob: -18.62501335144043

Token 1051: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25285425782203674
    2. '1' → logprob: -1.5028542280197144
    3. '(' → logprob: -7.002854347229004
    4. ' ' → logprob: -11.877854347229004
    5. '   ' → logprob: -13.502854347229004
    6. 'l' → logprob: -13.627854347229004
    7. 'temp' → logprob: -13.627854347229004
    8. '2' → logprob: -14.127854347229004
    9. '```' → logprob: -14.377854347229004
    10. '       ' → logprob: -14.752854347229004

Token 1052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024512779782526195
    2. ',l' → logprob: -9.125245094299316
    3. ')
' → logprob: -10.000245094299316
    4. ',temp' → logprob: -10.750245094299316
    5. 'exclude' → logprob: -11.375245094299316
    6. '(ex' → logprob: -11.375245094299316
    7. ',None' → logprob: -11.750245094299316
    8. ')' → logprob: -11.750245094299316
    9. ',start' → logprob: -12.125245094299316
    10. ' ,' → logprob: -12.500245094299316

Token 1053: ' exclude' (ID: 39566)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45850175619125366
    2. 'exclude' → logprob: -1.2085018157958984
    3. 'None' → logprob: -2.7085018157958984
    4. 'l' → logprob: -7.333501815795898
    5. 'm' → logprob: -7.833501815795898
    6. '   ' → logprob: -8.083501815795898
    7. ' exclude' → logprob: -8.458501815795898
    8. ' ' → logprob: -8.833501815795898
    9. ')' → logprob: -8.958501815795898
    10. '-' → logprob: -9.208501815795898

Token 1054: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004093358293175697
    2. '0' → logprob: -5.504093170166016
    3. '=None' → logprob: -11.379093170166016
    4. '1' → logprob: -13.629093170166016
    5. ')' → logprob: -14.254093170166016
    6. '```' → logprob: -14.379093170166016
    7. 'None' → logprob: -15.004093170166016
    8. '   ' → logprob: -15.879093170166016
    9. ' =' → logprob: -16.254093170166016
    10. '=True' → logprob: -16.629093170166016

Token 1055: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. 'None' → logprob: -14.250000953674316
    3. ' ' → logprob: -16.625
    4. '
' → logprob: -17.0
    5. '```' → logprob: -17.125
    6. '1' → logprob: -17.5
    7. '[' → logprob: -17.625
    8. '-' → logprob: -17.9375
    9. '{' → logprob: -18.0625
    10. '`' → logprob: -18.5625

Token 1056: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3868953287601471
    2. ')' → logprob: -1.1368952989578247
    3. ')
' → logprob: -11.636895179748535
    4. ')

' → logprob: -12.636895179748535
    5. ',' → logprob: -12.886895179748535
    6. '())
' → logprob: -13.011895179748535
    7. '               ' → logprob: -13.261895179748535
    8. ')`
' → logprob: -13.886895179748535
    9. ' )
' → logprob: -14.386895179748535
    10. '0' → logprob: -14.511895179748535

Token 1057: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09211805462837219
    2. 'if' → logprob: -2.71711802482605
    3. ' if' → logprob: -4.342118263244629
    4. '```' → logprob: -4.842118263244629
    5. '``' → logprob: -7.967118263244629
    6. '<|end|>' → logprob: -8.592118263244629
    7. ',' → logprob: -9.217118263244629
    8. '           ' → logprob: -9.217118263244629
    9. '                   ' → logprob: -9.717118263244629
    10. '       ' → logprob: -9.967118263244629

Token 1058: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01927337422966957
    2. '               ' → logprob: -4.144273281097412
    3. ' if' → logprob: -5.769273281097412
    4. '```' → logprob: -9.39427375793457
    5. '``' → logprob: -11.76927375793457
    6. '           ' → logprob: -12.14427375793457
    7. 'If' → logprob: -12.14427375793457
    8. ';if' → logprob: -13.01927375793457
    9. '       ' → logprob: -13.26927375793457
    10. '                   ' → logprob: -13.51927375793457

Token 1059: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006716317031532526
    2. ' l' → logprob: -5.006716251373291
    3. '                   ' → logprob: -14.88171672821045
    4. '   ' → logprob: -15.25671672821045
    5. '	l' → logprob: -15.63171672821045
    6. '               ' → logprob: -15.75671672821045
    7. '           ' → logprob: -17.131715774536133
    8. 'len' → logprob: -17.631715774536133
    9. '(l' → logprob: -18.756715774536133
    10. '  ' → logprob: -18.881715774536133

Token 1060: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.00036655968870036304
    2. 'r' → logprob: -8.0003662109375
    3. 'rl' → logprob: -11.8753662109375
    4. '_ru' → logprob: -12.1253662109375
    5. ''r' → logprob: -13.3753662109375
    6. 'ri' → logprob: -13.5003662109375
    7. 'l' → logprob: -13.5003662109375
    8. 'u' → logprob: -13.6253662109375
    9. 'ру' → logprob: -13.7503662109375
    10. ''' → logprob: -13.8753662109375

Token 1061: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -5.512236498361744e-07
    2. 'd' → logprob: -15.125000953674316
    3. '   ' → logprob: -16.5
    4. '_' → logprob: -18.375
    5. '```' → logprob: -18.375
    6. ' _' → logprob: -18.625
    7. '_l' → logprob: -18.625
    8. '\' → logprob: -18.75
    9. 's' → logprob: -18.875
    10. '
' → logprob: -18.875

Token 1062: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04859680309891701
    2. 'is' → logprob: -3.0485968589782715
    3. '==' → logprob: -12.673596382141113
    4. ')' → logprob: -12.798596382141113
    5. ')is' → logprob: -14.048596382141113
    6. 'Is' → logprob: -14.173596382141113
    7. '<|end|>' → logprob: -14.298596382141113
    8. '	is' → logprob: -15.173596382141113
    9. '!=' → logprob: -15.298596382141113
    10. ' ==' → logprob: -15.298596382141113

Token 1063: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2559088468551636
    2. 'not' → logprob: -1.5059088468551636
    3. ' not' → logprob: -5.880908966064453
    4. ' None' → logprob: -6.755908966064453
    5. 'Not' → logprob: -11.505908966064453
    6. '=None' → logprob: -12.880908966064453
    7. 'none' → logprob: -13.755908966064453
    8. '_None' → logprob: -14.380908966064453
    9. '	not' → logprob: -14.880908966064453
    10. '(None' → logprob: -14.880908966064453

Token 1064: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35367506742477417
    2. ':
' → logprob: -1.228675127029419
    3. '                   ' → logprob: -5.35367488861084
    4. 's' → logprob: -8.85367488861084
    5. '               ' → logprob: -8.97867488861084
    6. ':s' → logprob: -9.85367488861084
    7. '=' → logprob: -9.97867488861084
    8. ' or' → logprob: -10.35367488861084
    9. ':

' → logprob: -11.10367488861084
    10. '):
' → logprob: -11.85367488861084

Token 1065: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09005846083164215
    2. 's' → logprob: -3.3400585651397705
    3. '```' → logprob: -3.7150585651397705
    4. '               ' → logprob: -3.8400585651397705
    5. '                       ' → logprob: -5.840058326721191
    6. '                           ' → logprob: -7.715058326721191
    7. '   ' → logprob: -8.215058326721191
    8. '                               ' → logprob: -8.340058326721191
    9. '``' → logprob: -8.465058326721191
    10. '                    
' → logprob: -8.965058326721191

Token 1066: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1416587233543396
    2. '               ' → logprob: -2.7666587829589844
    3. '                   ' → logprob: -3.0166587829589844
    4. '```' → logprob: -4.141658782958984
    5. '{
' → logprob: -6.516658782958984
    6. '``' → logprob: -6.641658782958984
    7. '   ' → logprob: -7.641658782958984
    8. '                       ' → logprob: -8.016658782958984
    9. '       ' → logprob: -8.141658782958984
    10. ' shelf' → logprob: -8.766658782958984

Token 1067: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.652451464906335e-05
    2. '.' → logprob: -11.125016212463379
    3. 'add' → logprob: -13.375016212463379
    4. '_add' → logprob: -16.875017166137695
    5. '.remove' → logprob: -17.250017166137695
    6. '.update' → logprob: -17.500017166137695
    7. ' .' → logprob: -17.500017166137695
    8. ')add' → logprob: -17.500017166137695
    9. '.clear' → logprob: -17.625017166137695
    10. '.Add' → logprob: -17.625017166137695

Token 1068: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -2.5776860184123507e-06
    2. 'l' → logprob: -13.00000286102295
    3. '(' → logprob: -16.125001907348633
    4. '	l' → logprob: -17.125001907348633
    5. ' (' → logprob: -17.500001907348633
    6. ' l' → logprob: -17.625001907348633
    7. '               ' → logprob: -18.250001907348633
    8. '           ' → logprob: -18.250001907348633
    9. ',l' → logprob: -18.375001907348633
    10. '[l' → logprob: -19.250001907348633

Token 1069: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21732395887374878
    2. 'book' → logprob: -2.2173240184783936
    3. 'ru' → logprob: -2.4673240184783936
    4. ')' → logprob: -7.7173237800598145
    5. 'u' → logprob: -8.592324256896973
    6. ' book' → logprob: -8.592324256896973
    7. 'l' → logprob: -8.967324256896973
    8. 'rl' → logprob: -9.092324256896973
    9. 'ro' → logprob: -9.717324256896973
    10. '```' → logprob: -9.717324256896973

Token 1070: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.026934906840324402
    2. '_d' → logprob: -3.651934862136841
    3. '_l' → logprob: -8.776934623718262
    4. 'd' → logprob: -8.901934623718262
    5. '_books' → logprob: -9.151934623718262
    6. 'book' → logprob: -10.026934623718262
    7. 'Book' → logprob: -10.151934623718262
    8. '   ' → logprob: -10.151934623718262
    9. ')' → logprob: -10.651934623718262
    10. '[' → logprob: -11.276934623718262

Token 1071: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6328590512275696
    2. ')
' → logprob: -0.7578590512275696
    3. '                   ' → logprob: -8.632859230041504
    4. ' )
' → logprob: -11.132859230041504
    5. '               ' → logprob: -11.257859230041504
    6. ')
' → logprob: -11.632859230041504
    7. ')

' → logprob: -11.882859230041504
    8. ' )' → logprob: -12.132859230041504
    9. '```' → logprob: -12.132859230041504
    10. ')#' → logprob: -12.632859230041504

Token 1072: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11165404319763184
    2. '```' → logprob: -2.986654043197632
    3. '               ' → logprob: -3.611654043197632
    4. '<|end|>' → logprob: -4.736654281616211
    5. '[' → logprob: -5.861654281616211
    6. ')' → logprob: -5.861654281616211
    7. '   ' → logprob: -5.861654281616211
    8. '``' → logprob: -6.111654281616211
    9. '                       ' → logprob: -6.611654281616211
    10. '           ' → logprob: -6.736654281616211

Token 1073: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.00037859921576455235
    2. ' book' → logprob: -8.750378608703613
    3. 'cost' → logprob: -9.500378608703613
    4. '                   ' → logprob: -9.750378608703613
    5. 'l' → logprob: -10.000378608703613
    6. '   ' → logprob: -11.375378608703613
    7. '```' → logprob: -11.625378608703613
    8. '           ' → logprob: -11.625378608703613
    9. '               ' → logprob: -12.000378608703613
    10. ' l' → logprob: -13.375378608703613

Token 1074: '_location' (ID: 29811)
  Prédit: '_location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_location' → logprob: -1.0280383548888494e-06
    2. 'Location' → logprob: -14.500000953674316
    3. 'location' → logprob: -16.000001907348633
    4. '_locations' → logprob: -16.125001907348633
    5. '_LOCATION' → logprob: -16.500001907348633
    6. '```' → logprob: -16.750001907348633
    7. '_position' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.750001907348633
    9. 'LOCATION' → logprob: -18.750001907348633
    10. '           ' → logprob: -18.875001907348633

Token 1075: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.750000953674316
    3. '```' → logprob: -15.875000953674316
    4. '=l' → logprob: -17.125
    5. '[b' → logprob: -17.5
    6. '   ' → logprob: -17.875
    7. ' [' → logprob: -18.25
    8. 'l' → logprob: -18.375
    9. '\[' → logprob: -18.5
    10. '                   ' → logprob: -19.125

Token 1076: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05340959504246712
    2. 'ru' → logprob: -3.4284095764160156
    3. '[l' → logprob: -4.178409576416016
    4. 'l' → logprob: -5.928409576416016
    5. '[r' → logprob: -7.553409576416016
    6. 'rl' → logprob: -7.803409576416016
    7. '[u' → logprob: -8.178409576416016
    8. '[' → logprob: -8.678409576416016
    9. 'u' → logprob: -9.803409576416016
    10. '{' → logprob: -10.803409576416016

Token 1077: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.19601866602897644
    2. '_l' → logprob: -1.8210186958312988
    3. '[l' → logprob: -4.696018695831299
    4. '_d' → logprob: -5.696018695831299
    5. 'l' → logprob: -6.446018695831299
    6. 'Book' → logprob: -7.696018695831299
    7. ']' → logprob: -7.946018695831299
    8. '[' → logprob: -8.19601821899414
    9. 'd' → logprob: -8.44601821899414
    10. '_BOOK' → logprob: -9.19601821899414

Token 1078: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16314923763275146
    2. '=' → logprob: -2.163149356842041
    3. ' =' → logprob: -3.413149356842041
    4. ']=' → logprob: -6.038149356842041
    5. '=m' → logprob: -8.788148880004883
    6. ' ]' → logprob: -9.538148880004883
    7. ')' → logprob: -11.038148880004883
    8. '=b' → logprob: -12.538148880004883
    9. '[m' → logprob: -13.038148880004883
    10. '   ' → logprob: -13.913148880004883

Token 1079: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47442156076431274
    2. ' =' → logprob: -0.9744215607643127
    3. '=m' → logprob: -7.974421501159668
    4. '=b' → logprob: -16.724422454833984
    5. ' ' → logprob: -17.099422454833984
    6. '＝' → logprob: -17.099422454833984
    7. '   ' → logprob: -17.474422454833984
    8. '=
' → logprob: -18.224422454833984
    9. '```' → logprob: -18.224422454833984
    10. ']' → logprob: -18.599422454833984

Token 1080: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.6240566083070007e-06
    2. ' m' → logprob: -13.375001907348633
    3. '   ' → logprob: -20.375001907348633
    4. '	m' → logprob: -21.250001907348633
    5. '_m' → logprob: -23.500001907348633
    6. 'м' → logprob: -23.750001907348633
    7. '#m' → logprob: -23.750001907348633
    8. '```' → logprob: -23.750001907348633
    9. '           ' → logprob: -23.875001907348633
    10. '    ' → logprob: -24.125001907348633

Token 1081: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016793901100754738
    2. '               ' → logprob: -4.516793727874756
    3. '```' → logprob: -5.766793727874756
    4. '           ' → logprob: -6.516793727874756
    5. '``' → logprob: -8.266794204711914
    6. '<|end|>' → logprob: -8.766794204711914
    7. '                    
' → logprob: -9.141794204711914
    8. '       ' → logprob: -9.391794204711914
    9. '
' → logprob: -9.391794204711914
    10. '                  ' → logprob: -9.516794204711914

Token 1082: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03306344524025917
    2. '```' → logprob: -3.9080634117126465
    3. '               ' → logprob: -4.7830634117126465
    4. '``' → logprob: -7.2830634117126465
    5. '                    ' → logprob: -7.6580634117126465
    6. '                    
' → logprob: -7.6580634117126465
    7. '   ' → logprob: -7.7830634117126465
    8. '                  ' → logprob: -8.158063888549805
    9. '           ' → logprob: -8.158063888549805
    10. '
' → logprob: -8.408063888549805

Token 1083: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.062171246856451035
    2. ' cost' → logprob: -2.812171220779419
    3. '                   ' → logprob: -8.81217098236084
    4. '               ' → logprob: -10.68717098236084
    5. '```' → logprob: -11.56217098236084
    6. '           ' → logprob: -11.81217098236084
    7. '
' → logprob: -11.93717098236084
    8. '                           ' → logprob: -13.43717098236084
    9. '``' → logprob: -13.68717098236084
    10. '(cost' → logprob: -13.93717098236084

Token 1084: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759633779525757
    2. ' +=' → logprob: -0.8259633779525757
    3. '+' → logprob: -10.950963020324707
    4. ']+=' → logprob: -12.700963020324707
    5. '```' → logprob: -13.325963020324707
    6. ' +' → logprob: -14.575963020324707
    7. '+=(' → logprob: -15.200963020324707
    8. '+="' → logprob: -15.325963020324707
    9. '+='' → logprob: -15.575963020324707
    10. '=' → logprob: -15.825963020324707

Token 1085: ' access' (ID: 3158)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'access' → logprob: -0.0004307884373702109
    2. ' access' → logprob: -7.750430583953857
    3. 'm' → logprob: -17.375431060791016
    4. '   ' → logprob: -18.125431060791016
    5. '
' → logprob: -19.500431060791016
    6. '(access' → logprob: -19.500431060791016
    7. ' m' → logprob: -20.625431060791016
    8. 'accept' → logprob: -20.750431060791016
    9. ' ' → logprob: -20.875431060791016
    10. ''access' → logprob: -21.000431060791016

Token 1086: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.004080897197127342
    2. 's' → logprob: -5.504080772399902
    3. 'm' → logprob: -13.129080772399902
    4. '_m' → logprob: -15.629080772399902
    5. 'access' → logprob: -15.879080772399902
    6. '(m' → logprob: -15.879080772399902
    7. '(s' → logprob: -17.87908172607422
    8. '(' → logprob: -18.12908172607422
    9. '(access' → logprob: -18.75408172607422
    10. '_access' → logprob: -19.00408172607422

Token 1087: 'helf' (ID: 51433)
  Prédit: 'helf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helf' → logprob: -2.975612187583465e-05
    2. 'hel' → logprob: -10.875029563903809
    3. 'h' → logprob: -12.000029563903809
    4. 'he' → logprob: -13.750029563903809
    5. 'elf' → logprob: -14.000029563903809
    6. 'c' → logprob: -14.500029563903809
    7. 'helves' → logprob: -14.500029563903809
    8. 'help' → logprob: -15.375029563903809
    9. '(' → logprob: -15.500029563903809
    10. '[' → logprob: -16.375030517578125

Token 1088: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12434746325016022
    2. '               ' → logprob: -2.499347448348999
    3. '()
' → logprob: -4.124347686767578
    4. '<|end|>' → logprob: -4.874347686767578
    5. ')' → logprob: -5.374347686767578
    6. '()+' → logprob: -6.374347686767578
    7. '(' → logprob: -6.999347686767578
    8. '(
' → logprob: -7.124347686767578
    9. '+' → logprob: -7.624347686767578
    10. '())' → logprob: -7.874347686767578

Token 1089: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1857329159975052
    2. 'else' → logprob: -2.185732841491699
    3. '```' → logprob: -3.060732841491699
    4. ' else' → logprob: -4.935732841491699
    5. '<|end|>' → logprob: -6.185732841491699
    6. '``' → logprob: -8.1857328414917
    7. '
' → logprob: -8.4357328414917
    8. '                   ' → logprob: -8.6857328414917
    9. '           ' → logprob: -9.0607328414917
    10. '              ' → logprob: -10.0607328414917

Token 1090: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26069915294647217
    2. 'else' (adapté à ' else') → logprob: -1.5106991529464722
    3. ' else' → logprob: -4.760699272155762
    4. '```' → logprob: -9.260699272155762
    5. '           ' → logprob: -9.760699272155762
    6. '              ' → logprob: -12.260699272155762
    7. '       ' → logprob: -12.635699272155762
    8. '                   ' → logprob: -13.010699272155762
    9. '	else' → logprob: -13.385699272155762
    10. ':
' → logprob: -13.760699272155762

Token 1091: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4856136739253998
    2. ':
' → logprob: -1.1106137037277222
    3. ':' → logprob: -3.2356135845184326
    4. ' put' → logprob: -4.860613822937012
    5. '               ' → logprob: -5.735613822937012
    6. 'put' → logprob: -6.485613822937012
    7. '                       ' → logprob: -7.360613822937012
    8. '	put' → logprob: -7.360613822937012
    9. '.put' → logprob: -7.860613822937012
    10. '```' → logprob: -8.110613822937012

Token 1092: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5919926762580872
    2. 'put' → logprob: -0.8419926762580872
    3. '               ' → logprob: -4.3419928550720215
    4. ' put' → logprob: -6.2169928550720215
    5. '                       ' → logprob: -8.216992378234863
    6. '	put' → logprob: -8.216992378234863
    7. '```' → logprob: -8.966992378234863
    8. '   ' → logprob: -9.466992378234863
    9. '                    ' → logprob: -9.966992378234863
    10. '           ' → logprob: -10.466992378234863

Token 1093: ' put' (ID: 3006)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' (adapté à ' put') → logprob: -4.8351892473874614e-05
    2. ' put' → logprob: -10.125048637390137
    3. '               ' → logprob: -12.250048637390137
    4. '                   ' → logprob: -12.750048637390137
    5. '	put' → logprob: -15.125048637390137
    6. '```' → logprob: -15.875048637390137
    7. '           ' → logprob: -16.50004768371582
    8. '.put' → logprob: -17.37504768371582
    9. '
' → logprob: -18.00004768371582
    10. '   ' → logprob: -18.25004768371582

Token 1094: '_book' (ID: 50583)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.002904847264289856
    2. '_book' → logprob: -6.127904891967773
    3. 'on' → logprob: -7.252904891967773
    4. '```' → logprob: -12.377904891967773
    5. 'On' → logprob: -13.252904891967773
    6. '_put' → logprob: -14.127904891967773
    7. '(' → logprob: -14.377904891967773
    8. '``' → logprob: -14.377904891967773
    9. '(_' → logprob: -14.377904891967773
    10. '`' → logprob: -14.502904891967773

Token 1095: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -2.2127087504486553e-05
    2. 'on' → logprob: -10.750021934509277
    3. 'On' → logprob: -14.500021934509277
    4. '-on' → logprob: -17.375022888183594
    5. '```' → logprob: -17.500022888183594
    6. ''on' → logprob: -18.125022888183594
    7. '(on' → logprob: -18.375022888183594
    8. '   ' → logprob: -18.500022888183594
    9. '_book' → logprob: -18.500022888183594
    10. '	on' → logprob: -18.875022888183594

Token 1096: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.21914200484752655
    2. 'desk' → logprob: -1.719141960144043
    3. 'd' → logprob: -4.094141960144043
    4. 'des' → logprob: -7.094141960144043
    5. 'Desk' → logprob: -10.844141960144043
    6. 'desktop' → logprob: -11.469141960144043
    7. 'deck' → logprob: -11.594141960144043
    8. ' desk' → logprob: -11.844141960144043
    9. 'l' → logprob: -11.969141960144043
    10. 'esk' → logprob: -12.219141960144043

Token 1097: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.001084971008822322
    2. 'sk' → logprob: -7.376084804534912
    3. 'desk' → logprob: -8.87608528137207
    4. 'l' → logprob: -9.12608528137207
    5. 'es' → logprob: -9.62608528137207
    6. 'd' → logprob: -10.25108528137207
    7. '_d' → logprob: -10.50108528137207
    8. 'ask' → logprob: -11.25108528137207
    9. 'esc' → logprob: -11.25108528137207
    10. '(d' → logprob: -12.50108528137207

Token 1098: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -6.704273118884885e-07
    2. 'l' → logprob: -14.500000953674316
    3. '(' → logprob: -16.625
    4. '	l' → logprob: -18.625
    5. '(
' → logprob: -18.625
    6. ' (' → logprob: -18.75
    7. ' l' → logprob: -19.625
    8. ',l' → logprob: -20.75
    9. '/l' → logprob: -22.0
    10. '   ' → logprob: -22.125

Token 1099: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9986559152603149
    2. '(l' → logprob: -0.9986559152603149
    3. 'l' → logprob: -1.373655915260315
    4. '1' → logprob: -5.998655796051025
    5. 'd' → logprob: -6.248655796051025
    6. 'lr' → logprob: -6.373655796051025
    7. 'ru' → logprob: -6.748655796051025
    8. '(' → logprob: -7.623655796051025
    9. 'ur' → logprob: -7.623655796051025
    10. 'u' → logprob: -7.873655796051025

Token 1100: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00010008628305513412
    2. '(l' → logprob: -9.875100135803223
    3. '_l' → logprob: -10.125100135803223
    4. 'd' → logprob: -12.250100135803223
    5. 's' → logprob: -14.250100135803223
    6. '[l' → logprob: -14.375100135803223
    7. 'l' → logprob: -14.625100135803223
    8. '(d' → logprob: -14.625100135803223
    9. '   ' → logprob: -15.000100135803223
    10. ',l' → logprob: -15.875100135803223

Token 1101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1413036584854126
    2. ',l' → logprob: -2.141303539276123
    3. '(l' → logprob: -4.266303539276123
    4. 'l' → logprob: -9.141304016113281
    5. '(' → logprob: -9.391304016113281
    6. ')' → logprob: -10.266304016113281
    7. ' ,' → logprob: -12.141304016113281
    8. '),' → logprob: -12.891304016113281
    9. ' (' → logprob: -13.391304016113281
    10. ' l' → logprob: -13.766304016113281

Token 1102: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.676292231422849e-05
    2. ' l' → logprob: -11.000017166137695
    3. '	l' → logprob: -18.750017166137695
    4. '(l' → logprob: -19.375017166137695
    5. '   ' → logprob: -20.375017166137695
    6. '                   ' → logprob: -21.375017166137695
    7. '           ' → logprob: -21.375017166137695
    8. '0' → logprob: -21.625017166137695
    9. 'lr' → logprob: -22.125017166137695
    10. '       ' → logprob: -22.375017166137695

Token 1103: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.16718904674053192
    2. 'r' → logprob: -2.042189121246338
    3. 'find' → logprob: -4.292189121246338
    4. '(find' → logprob: -5.667189121246338
    5. '0' → logprob: -6.792189121246338
    6. ')' → logprob: -7.167189121246338
    7. 'n' → logprob: -7.417189121246338
    8. '(' → logprob: -7.792189121246338
    9. 'en' → logprob: -8.16718864440918
    10. '('' → logprob: -8.29218864440918

Token 1104: '_book' (ID: 50583)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00013154871703591198
    2. ')' → logprob: -10.000131607055664
    3. 'd' → logprob: -10.250131607055664
    4. '_book' → logprob: -10.750131607055664
    5. ']' → logprob: -11.250131607055664
    6. 'ook' → logprob: -12.625131607055664
    7. '   ' → logprob: -13.375131607055664
    8. '_books' → logprob: -13.500131607055664
    9. '])' → logprob: -13.625131607055664
    10. 'ooks' → logprob: -13.750131607055664

Token 1105: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043134383857250214
    2. ')
' → logprob: -3.5431344509124756
    3. '                   ' → logprob: -4.4181342124938965
    4. '<|end|>' → logprob: -7.0431342124938965
    5. '               ' → logprob: -8.793134689331055
    6. '```' → logprob: -9.668134689331055
    7. '<|end|>' → logprob: -10.168134689331055
    8. '   ' → logprob: -10.793134689331055
    9. '           ' → logprob: -10.918134689331055
    10. ',' → logprob: -11.668134689331055

Token 1106: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1107: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.03366610035300255
    2. ' cost' → logprob: -3.4086661338806152
    3. '                   ' → logprob: -11.783665657043457
    4. '
' → logprob: -12.658665657043457
    5. '```' → logprob: -12.908665657043457
    6. '           ' → logprob: -13.533665657043457
    7. '(cost' → logprob: -13.908665657043457
    8. '   ' → logprob: -14.283665657043457
    9. '                           ' → logprob: -14.408665657043457
    10. '               ' → logprob: -14.533665657043457

Token 1108: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38692569732666016
    2. '+=' → logprob: -1.1369256973266602
    3. '```' → logprob: -10.76192569732666
    4. ']+=' → logprob: -11.88692569732666
    5. '+' → logprob: -12.01192569732666
    6. '[' → logprob: -12.13692569732666
    7. '          ' → logprob: -12.76192569732666
    8. '            ' → logprob: -12.88692569732666
    9. '    ' → logprob: -13.26192569732666
    10. '   ' → logprob: -13.76192569732666

Token 1109: ' access' (ID: 3158)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'access' → logprob: -0.005233763717114925
    2. ' access' → logprob: -5.2552337646484375
    3. '   ' → logprob: -19.505233764648438
    4. ' ' → logprob: -20.630233764648438
    5. '(access' → logprob: -20.630233764648438
    6. '_access' → logprob: -20.880233764648438
    7. 'Access' → logprob: -21.255233764648438
    8. '```' → logprob: -21.255233764648438
    9. '.access' → logprob: -21.630233764648438
    10. '访问' → logprob: -21.630233764648438

Token 1110: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00017159747949335724
    2. '_s' → logprob: -9.375171661376953
    3. '_l' → logprob: -10.125171661376953
    4. 'desk' → logprob: -10.250171661376953
    5. '_des' → logprob: -12.500171661376953
    6. 's' → logprob: -13.250171661376953
    7. 'des' → logprob: -13.625171661376953
    8. 'Desk' → logprob: -13.875171661376953
    9. 'd' → logprob: -14.000171661376953
    10. '(d' → logprob: -14.000171661376953

Token 1111: 'esk' (ID: 22444)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' → logprob: -0.0017144508892670274
    2. 'esk' → logprob: -6.37671422958374
    3. 'ask' → logprob: -12.251714706420898
    4. 's' → logprob: -12.501714706420898
    5. 'osk' → logprob: -13.501714706420898
    6. '_sk' → logprob: -13.501714706420898
    7. 'k' → logprob: -15.626714706420898
    8. '_d' → logprob: -15.876714706420898
    9. 'ск' → logprob: -16.1267147064209
    10. 'sch' → logprob: -16.1267147064209

Token 1112: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.9361264946837764e-07
    2. 'l' → logprob: -16.5
    3. '(' → logprob: -17.0
    4. '(
' → logprob: -18.75
    5. ' (' → logprob: -19.0
    6. '	l' → logprob: -19.125
    7. ' l' → logprob: -20.0
    8. '```' → logprob: -20.375
    9. '   ' → logprob: -21.125
    10. ',l' → logprob: -21.625

Token 1113: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.030180959030985832
    2. 'r' → logprob: -3.9051809310913086
    3. 'rl' → logprob: -4.655180931091309
    4. '1' → logprob: -11.405180931091309
    5. 'u' → logprob: -11.530180931091309
    6. 'ri' → logprob: -11.905180931091309
    7. '0' → logprob: -12.280180931091309
    8. '   ' → logprob: -12.405180931091309
    9. 'ur' → logprob: -12.405180931091309
    10. 'rr' → logprob: -12.530180931091309

Token 1114: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.08125700801610947
    2. '_l' → logprob: -2.5812571048736572
    3. '(l' → logprob: -7.081256866455078
    4. '_r' → logprob: -7.081256866455078
    5. 's' → logprob: -8.581256866455078
    6. 'r' → logprob: -8.706256866455078
    7. 'l' → logprob: -9.206256866455078
    8. ')' → logprob: -9.831256866455078
    9. '(_' → logprob: -10.206256866455078
    10. 'd' → logprob: -10.956256866455078

Token 1115: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001137947037932463
    2. ')
' → logprob: -9.125113487243652
    3. ' )' → logprob: -13.750113487243652
    4. '())' → logprob: -14.125113487243652
    5. '))' → logprob: -14.375113487243652
    6. '()' → logprob: -14.375113487243652
    7. '+' → logprob: -14.625113487243652
    8. ')return' → logprob: -15.375113487243652
    9. '<|end|>' → logprob: -15.500113487243652
    10. ')#' → logprob: -15.750113487243652

Token 1116: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036889128386974335
    2. 'if' → logprob: -6.253688812255859
    3. 'queue' → logprob: -7.253688812255859
    4. '       ' → logprob: -7.503688812255859
    5. '               ' → logprob: -8.37868881225586
    6. '```' → logprob: -8.75368881225586
    7. '   ' → logprob: -10.12868881225586
    8. '<|end|>' → logprob: -10.62868881225586
    9. '                   ' → logprob: -11.50368881225586
    10. ' if' → logprob: -11.62868881225586

Token 1117: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2967516779899597
    2. 'if' → logprob: -1.4217517375946045
    3. '           ' → logprob: -4.921751499176025
    4. ' if' → logprob: -5.296751499176025
    5. 'update' → logprob: -6.921751499176025
    6. '<|end|>' → logprob: -7.171751499176025
    7. '```' → logprob: -7.546751499176025
    8. 'continue' → logprob: -8.671751976013184
    9. '       ' → logprob: -8.921751976013184
    10. 'cost' → logprob: -8.921751976013184

Token 1118: ' finally' (ID: 8486)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30684995651245117
    2. 'put' → logprob: -2.056849956512451
    3. '#' → logprob: -2.431849956512451
    4. 'remove' → logprob: -3.306849956512451
    5. '               ' → logprob: -4.556849956512451
    6. 'cost' → logprob: -7.931849956512451
    7. '           ' → logprob: -8.05685043334961
    8. 'update' → logprob: -8.18185043334961
    9. ' if' → logprob: -9.68185043334961
    10. 'des' → logprob: -9.68185043334961

Token 1119: ' take' (ID: 2304)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.6815904974937439
    2. '               ' → logprob: -1.4315905570983887
    3. ' put' → logprob: -1.8065905570983887
    4. 'if' → logprob: -3.0565905570983887
    5. ' if' → logprob: -3.3065905570983887
    6. 'update' → logprob: -5.556590557098389
    7. 'remove' → logprob: -6.681590557098389
    8. ' update' → logprob: -6.931590557098389
    9. '#' → logprob: -7.056590557098389
    10. ' remove' → logprob: -8.80659008026123

Token 1120: ' requested' (ID: 17222)
  Prédit: '_book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.3608502149581909
    2. '               ' → logprob: -1.985850214958191
    3. 'book' → logprob: -2.7358503341674805
    4. 'put' → logprob: -3.3608503341674805
    5. 'out' → logprob: -3.3608503341674805
    6. '#' → logprob: -4.6108503341674805
    7. 'token' → logprob: -5.1108503341674805
    8. '                   ' → logprob: -5.7358503341674805
    9. 'off' → logprob: -6.2358503341674805
    10. '           ' → logprob: -6.3608503341674805

Token 1121: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.43145692348480225
    2. '_book' → logprob: -1.0564569234848022
    3. '_d' → logprob: -6.806457042694092
    4. ' book' → logprob: -7.556457042694092
    5. 'token' → logprob: -7.931457042694092
    6. '_token' → logprob: -8.306456565856934
    7. '```' → logprob: -8.806456565856934
    8. '_' → logprob: -9.556456565856934
    9. '_des' → logprob: -9.806456565856934
    10. '_books' → logprob: -10.181456565856934

Token 1122: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.672026515007019
    2. ' off' → logprob: -1.047026515007019
    3. ' from' → logprob: -2.4220266342163086
    4. 'off' → logprob: -4.047026634216309
    5. '               ' → logprob: -4.672026634216309
    6. '_off' → logprob: -5.547026634216309
    7. '_from' → logprob: -5.672026634216309
    8. '(' → logprob: -6.422026634216309
    9. 'on' → logprob: -6.422026634216309
    10. ' back' → logprob: -6.547026634216309

Token 1123: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.02605595625936985
    2. 's' → logprob: -4.901055812835693
    3. 'des' → logprob: -4.901055812835693
    4. '(temp' → logprob: -6.026055812835693
    5. 'tmp' → logprob: -6.026055812835693
    6. ' temp' → logprob: -6.401055812835693
    7. '(' → logprob: -6.526055812835693
    8. 'd' → logprob: -6.776055812835693
    9. 'temporary' → logprob: -7.651055812835693
    10. 'desk' → logprob: -7.776055812835693

Token 1124: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.645941972732544
    2. '_d' → logprob: -0.770941972732544
    3. 'd' → logprob: -5.645941734313965
    4. 'token' → logprob: -6.395941734313965
    5. '                
' → logprob: -7.020941734313965
    6. ' place' → logprob: -7.270941734313965
    7. '_place' → logprob: -7.270941734313965
    8. 'placement' → logprob: -7.395941734313965
    9. ' desk' → logprob: -7.395941734313965
    10. '_' → logprob: -7.645941734313965

Token 1125: ' put' (ID: 3006)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.403308629989624
    2. 'des' → logprob: -2.153308629989624
    3. 'put' → logprob: -2.278308629989624
    4. 'remove' → logprob: -2.528308629989624
    5. '
' → logprob: -3.903308629989624
    6. '#' → logprob: -5.153308868408203
    7. 'cost' → logprob: -6.403308868408203
    8. '```' → logprob: -6.778308868408203
    9. 'del' → logprob: -6.903308868408203
    10. ' if' → logprob: -7.153308868408203

Token 1126: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.4288635551929474
    2. '(' → logprob: -1.178863525390625
    3. '_on' → logprob: -3.428863525390625
    4. 'back' → logprob: -5.178863525390625
    5. '_back' → logprob: -6.803863525390625
    6. '```' → logprob: -7.053863525390625
    7. ' on' → logprob: -8.053863525390625
    8. 'ont' → logprob: -8.303863525390625
    9. '``' → logprob: -8.803863525390625
    10. 'onto' → logprob: -9.553863525390625

Token 1127: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.24956278502941132
    2. '0' → logprob: -2.3745627403259277
    3. 'd' → logprob: -2.7495627403259277
    4. '(' → logprob: -3.6245627403259277
    5. ' D' → logprob: -3.8745627403259277
    6. 'desk' → logprob: -4.999562740325928
    7. ' ' → logprob: -5.499562740325928
    8. '```' → logprob: -6.374562740325928
    9. ' desk' → logprob: -6.624562740325928
    10. ' d' → logprob: -7.249562740325928

Token 1128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004348821938037872
    2. '[' → logprob: -5.5043487548828125
    3. '0' → logprob: -8.754348754882812
    4. 'esk' → logprob: -9.504348754882812
    5. 'es' → logprob: -10.629348754882812
    6. '```' → logprob: -12.004348754882812
    7. '(' → logprob: -12.754348754882812
    8. ' ' → logprob: -13.254348754882812
    9. '   ' → logprob: -14.504348754882812
    10. '_' → logprob: -14.879348754882812

Token 1129: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.044243764132261276
    2. 'remove' → logprob: -3.544243812561035
    3. '                
' → logprob: -4.794243812561035
    4. '(remove' → logprob: -5.669243812561035
    5. ' if' → logprob: -7.169243812561035
    6. 'if' → logprob: -7.544243812561035
    7. ' remove' → logprob: -8.794243812561035
    8. '
' → logprob: -9.044243812561035
    9. '                   ' → logprob: -9.294243812561035
    10. '.remove' → logprob: -9.419243812561035

Token 1130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02283751592040062
    2. '(remove' → logprob: -4.2728376388549805
    3. 'remove' → logprob: -5.1478376388549805
    4. '                
' → logprob: -7.1478376388549805
    5. ' remove' → logprob: -7.1478376388549805
    6. '```' → logprob: -7.3978376388549805
    7. '.remove' → logprob: -8.64783763885498
    8. '                   ' → logprob: -8.89783763885498
    9. '``' → logprob: -9.39783763885498
    10. '(' → logprob: -10.64783763885498

Token 1131: ' if' (ID: 538)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.16402074694633484
    2. ' remove' → logprob: -1.9140207767486572
    3. '               ' → logprob: -5.789020538330078
    4. '                   ' → logprob: -8.539020538330078
    5. ' if' → logprob: -8.789020538330078
    6. '(remove' → logprob: -9.039020538330078
    7. '                
' → logprob: -9.164020538330078
    8. 'if' (adapté à ' if') → logprob: -10.414020538330078
    9. '.remove' → logprob: -10.789020538330078
    10. '                ' → logprob: -10.789020538330078

Token 1132: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.751849889755249
    2. 'temp' → logprob: -0.751849889755249
    3. ' not' → logprob: -3.251849889755249
    4. 'not' → logprob: -4.001850128173828
    5. '   ' → logprob: -11.251850128173828
    6. '               ' → logprob: -12.126850128173828
    7. '                   ' → logprob: -12.751850128173828
    8. '	temp' → logprob: -13.251850128173828
    9. '           ' → logprob: -13.376850128173828
    10. '$temp' → logprob: -14.626850128173828

Token 1133: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -6.253713218029588e-05
    2. '_d' → logprob: -9.875062942504883
    3. 'on' → logprob: -11.500062942504883
    4. 'd' → logprob: -14.750062942504883
    5. 'On' → logprob: -15.750062942504883
    6. '_not' → logprob: -16.125062942504883
    7. '
' → logprob: -16.500062942504883
    8. '\' → logprob: -16.875062942504883
    9. '_' → logprob: -17.500062942504883
    10. '_is' → logprob: -18.000062942504883

Token 1134: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.004892992787063122
    2. '_d' → logprob: -5.504892826080322
    3. 's' → logprob: -7.129892826080322
    4. 'd' → logprob: -12.37989330291748
    5. 'e' → logprob: -12.62989330291748
    6. '_' → logprob: -12.87989330291748
    7. 'es' → logprob: -14.00489330291748
    8. 'on' → logprob: -14.12989330291748
    9. '=' → logprob: -15.00489330291748
    10. '_f' → logprob: -15.12989330291748

Token 1135: 'helf' (ID: 51433)
  Prédit: 'helf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helf' → logprob: -0.0001049736310960725
    2. 'hel' → logprob: -9.750104904174805
    3. 'elf' → logprob: -10.250104904174805
    4. 'h' → logprob: -12.375104904174805
    5. 't' → logprob: -13.625104904174805
    6. '_' → logprob: -13.750104904174805
    7. '1' → logprob: -13.750104904174805
    8. 'he' → logprob: -14.250104904174805
    9. '   ' → logprob: -14.500104904174805
    10. '
' → logprob: -14.875104904174805

Token 1136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3152449131011963
    2. ':
' → logprob: -1.3152449131011963
    3. '==' → logprob: -6.565244674682617
    4. ' ==' → logprob: -7.690244674682617
    5. '{' → logprob: -10.065244674682617
    6. ':

' → logprob: -11.565244674682617
    7. '=' → logprob: -11.565244674682617
    8. ' =' → logprob: -11.940244674682617
    9. ':
' → logprob: -11.940244674682617
    10. '{
' → logprob: -12.065244674682617

Token 1137: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.047528475522994995
    2. '               ' → logprob: -3.5475285053253174
    3. '```' → logprob: -4.547528266906738
    4. 's' → logprob: -5.422528266906738
    5. '``' → logprob: -7.297528266906738
    6. '                       ' → logprob: -7.672528266906738
    7. '{
' → logprob: -8.047528266906738
    8. '           ' → logprob: -8.172528266906738
    9. '                    
' → logprob: -8.672528266906738
    10. '                        
' → logprob: -9.422528266906738

Token 1138: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03151832893490791
    2. 'cost' → logprob: -4.531518459320068
    3. ' shelf' → logprob: -4.781518459320068
    4. '               ' → logprob: -5.156518459320068
    5. '                   ' → logprob: -5.781518459320068
    6. 'book' → logprob: -7.031518459320068
    7. '   ' → logprob: -7.281518459320068
    8. 'remove' → logprob: -7.781518459320068
    9. '#' (adapté à ' #') → logprob: -8.03151798248291
    10. 'temp' → logprob: -8.53151798248291

Token 1139: ' remove' (ID: 6234)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006418232340365648
    2. '#' → logprob: -5.131418228149414
    3. ' shelf' → logprob: -8.256418228149414
    4. 'cost' → logprob: -8.881418228149414
    5. '   ' → logprob: -10.131418228149414
    6. '           ' → logprob: -11.506418228149414
    7. 'remove' → logprob: -11.881418228149414
    8. '
' → logprob: -12.006418228149414
    9. '                   ' → logprob: -12.006418228149414
    10. 'book' → logprob: -12.131418228149414

Token 1140: ' from' (ID: 591)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.05687255412340164
    2. '(book' → logprob: -3.056872606277466
    3. ' book' → logprob: -4.806872367858887
    4. 's' → logprob: -9.931872367858887
    5. '(s' → logprob: -11.556872367858887
    6. '(' → logprob: -11.806872367858887
    7. ' (' → logprob: -12.681872367858887
    8. '	book' → logprob: -13.181872367858887
    9. '               ' → logprob: -13.681872367858887
    10. '   ' → logprob: -13.681872367858887

Token 1141: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20142211019992828
    2. ' shelf' → logprob: -1.701422095298767
    3. '   ' → logprob: -13.076421737670898
    4. '```' → logprob: -13.326421737670898
    5. 'Shelf' → logprob: -13.326421737670898
    6. '`s' → logprob: -13.951421737670898
    7. ' shel' → logprob: -14.201421737670898
    8. '	s' → logprob: -15.201421737670898
    9. '
' → logprob: -15.201421737670898
    10. ' s' → logprob: -15.326421737670898

Token 1142: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.42095938324928284
    2. ' shelf' → logprob: -2.29595947265625
    3. '```' → logprob: -2.42095947265625
    4. '                           ' → logprob: -3.04595947265625
    5. '                       ' → logprob: -3.79595947265625
    6. ' book' → logprob: -3.79595947265625
    7. '   ' → logprob: -4.17095947265625
    8. '(book' → logprob: -4.17095947265625
    9. '``' → logprob: -5.04595947265625
    10. 's' → logprob: -5.42095947265625

Token 1143: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005414942745119333
    2. 's' → logprob: -6.005414962768555
    3. '                       ' → logprob: -7.130414962768555
    4. '(s' → logprob: -7.255414962768555
    5. '.remove' → logprob: -7.880414962768555
    6. '   ' → logprob: -8.005414962768555
    7. '                           ' → logprob: -9.255414962768555
    8. '```' → logprob: -9.255414962768555
    9. '[s' → logprob: -9.255414962768555
    10. '               ' → logprob: -9.380414962768555

Token 1144: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05707591399550438
    2. ' shelf' → logprob: -3.3070759773254395
    3. '                   ' → logprob: -4.1820759773254395
    4. '                       ' → logprob: -5.8070759773254395
    5. '   ' → logprob: -7.9320759773254395
    6. '                           ' → logprob: -9.682075500488281
    7. '               ' → logprob: -9.932075500488281
    8. '```' → logprob: -10.807075500488281
    9. ',s' → logprob: -11.057075500488281
    10. '`s' → logprob: -11.182075500488281

Token 1145: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0005558936391025782
    2. '.' → logprob: -7.500555992126465
    3. 'remove' → logprob: -13.125555992126465
    4. '                   ' → logprob: -14.875555992126465
    5. '.dis' → logprob: -15.125555992126465
    6. '   ' → logprob: -15.250555992126465
    7. '                       ' → logprob: -17.00055503845215
    8. '                           ' → logprob: -17.75055503845215
    9. ' .' → logprob: -17.87555503845215
    10. '.Remove' → logprob: -18.00055503845215

Token 1146: '(book' (ID: 56932)
  Prédit: '(book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(book' → logprob: -0.00020520923135336488
    2. 'book' → logprob: -8.500205039978027
    3. '(' → logprob: -14.250205039978027
    4. ' book' → logprob: -14.375205039978027
    5. ' (' → logprob: -14.875205039978027
    6. '	book' → logprob: -17.125205993652344
    7. '                   ' → logprob: -18.000205993652344
    8. '               ' → logprob: -18.500205993652344
    9. '(Book' → logprob: -19.125205993652344
    10. '(b' → logprob: -20.000205993652344

Token 1147: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07900677621364594
    2. ')' → logprob: -2.5790066719055176
    3. ')
' → logprob: -9.329007148742676
    4. '                   ' → logprob: -10.829007148742676
    5. '               ' → logprob: -12.579007148742676
    6. ')

' → logprob: -12.704007148742676
    7. ' )
' → logprob: -13.704007148742676
    8. '                       ' → logprob: -16.07900619506836
    9. '```' → logprob: -16.32900619506836
    10. '           ' → logprob: -16.45400619506836

Token 1148: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.179054856300354
    2. '               ' → logprob: -2.4290547370910645
    3. '```' → logprob: -3.4290547370910645
    4. '                    
' → logprob: -4.6790547370910645
    5. '<|end|>' → logprob: -4.6790547370910645
    6. '                    ' → logprob: -5.6790547370910645
    7. ' 
' → logprob: -6.0540547370910645
    8. '                
' → logprob: -6.1790547370910645
    9. '                        
' → logprob: -6.1790547370910645
    10. '[' → logprob: -6.3040547370910645

Token 1149: ' cost' (ID: 3097)
  Prédit: ' put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' put' → logprob: -0.2572978138923645
    2. 'put' → logprob: -1.5072977542877197
    3. '                   ' → logprob: -5.507297992706299
    4. ' cost' → logprob: -7.382297992706299
    5. '               ' → logprob: -8.25729751586914
    6. 'cost' (adapté à ' cost') → logprob: -8.63229751586914
    7. ' temp' → logprob: -10.00729751586914
    8. 'temp' → logprob: -10.38229751586914
    9. '                    ' → logprob: -10.50729751586914
    10. '                       ' → logprob: -10.63229751586914

Token 1150: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023256659507751465
    2. '+=' → logprob: -3.773256778717041
    3. '```' → logprob: -12.273256301879883
    4. '+' → logprob: -13.398256301879883
    5. '    ' → logprob: -13.398256301879883
    6. ' -=' → logprob: -14.273256301879883
    7. '            ' → logprob: -14.523256301879883
    8. ']+=' → logprob: -14.648256301879883
    9. ' +' → logprob: -14.773256301879883
    10. '   ' → logprob: -15.023256301879883

Token 1151: ' access' (ID: 3158)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'access' → logprob: -0.0009931529639288783
    2. ' access' → logprob: -7.000993251800537
    3. 'm' → logprob: -9.500992774963379
    4. '   ' → logprob: -12.625992774963379
    5. ' m' → logprob: -13.750992774963379
    6. ' ' → logprob: -14.625992774963379
    7. '  ' → logprob: -15.000992774963379
    8. 'accept' → logprob: -15.125992774963379
    9. 's' → logprob: -15.375992774963379
    10. '(access' → logprob: -15.375992774963379

Token 1152: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.07923191040754318
    2. 's' → logprob: -2.5792319774627686
    3. '_d' → logprob: -8.204232215881348
    4. '_m' → logprob: -10.204232215881348
    5. 'm' → logprob: -10.704232215881348
    6. 'd' → logprob: -12.329232215881348
    7. 'desk' → logprob: -13.204232215881348
    8. '(m' → logprob: -14.204232215881348
    9. 'Shelf' → logprob: -14.704232215881348
    10. '   ' → logprob: -15.079232215881348

Token 1153: 'helf' (ID: 51433)
  Prédit: 'helf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helf' → logprob: -8.208653162000701e-05
    2. 'hel' → logprob: -10.000082015991211
    3. 'elf' → logprob: -11.000082015991211
    4. 'h' → logprob: -11.625082015991211
    5. 'he' → logprob: -12.125082015991211
    6. 'c' → logprob: -14.250082015991211
    7. 'help' → logprob: -14.375082015991211
    8. 's' → logprob: -14.500082015991211
    9. '(' → logprob: -14.875082015991211
    10. '_' → logprob: -15.125082015991211

Token 1154: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4598425626754761
    2. '                   ' → logprob: -1.209842562675476
    3. ')' → logprob: -3.2098426818847656
    4. '<|end|>' → logprob: -4.459842681884766
    5. '
' → logprob: -5.459842681884766
    6. ')
' → logprob: -5.959842681884766
    7. '```' → logprob: -6.209842681884766
    8. '                    
' → logprob: -6.709842681884766
    9. '           ' → logprob: -6.959842681884766
    10. '    
' → logprob: -6.959842681884766

Token 1155: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19730177521705627
    2. '                   ' → logprob: -1.8223017454147339
    3. 'put' → logprob: -5.197301864624023
    4. '```' → logprob: -5.572301864624023
    5. '``' → logprob: -6.447301864624023
    6. '
' → logprob: -6.822301864624023
    7. '           ' → logprob: -7.447301864624023
    8. '<|end|>' → logprob: -7.572301864624023
    9. '                    
' → logprob: -7.697301864624023
    10. '   ' → logprob: -7.947301864624023

Token 1156: ' else' (ID: 1203)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.2651061415672302
    2. '               ' → logprob: -1.515106201171875
    3. 'remove' → logprob: -4.890106201171875
    4. ' put' → logprob: -5.265106201171875
    5. '                   ' → logprob: -8.265106201171875
    6. '	put' → logprob: -10.140106201171875
    7. '                
' → logprob: -10.515106201171875
    8. '           ' → logprob: -11.015106201171875
    9. '.put' → logprob: -11.765106201171875
    10. ' remove' → logprob: -11.890106201171875

Token 1157: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.311615914106369
    2. ':
' → logprob: -1.6866159439086914
    3. ':' → logprob: -2.5616159439086914
    4. '               ' → logprob: -5.936615943908691
    5. 'remove' → logprob: -6.561615943908691
    6. '                       ' → logprob: -8.186615943908691
    7. ' remove' → logprob: -8.311615943908691
    8. '{
' → logprob: -8.936615943908691
    9. '{' → logprob: -9.061615943908691
    10. '.remove' → logprob: -9.436615943908691

Token 1158: '                   ' (ID: 699)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.3566910922527313
    2. '                   ' → logprob: -1.6066911220550537
    3. ' remove' → logprob: -2.3566911220550537
    4. '               ' → logprob: -5.606690883636475
    5. '```' → logprob: -7.356690883636475
    6. '{
' → logprob: -8.856691360473633
    7. '                       ' → logprob: -9.356691360473633
    8. '	remove' → logprob: -9.981691360473633
    9. '``' → logprob: -10.106691360473633
    10. '.remove' → logprob: -10.731691360473633

Token 1159: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' (adapté à ' remove') → logprob: -0.0006364276050589979
    2. ' remove' → logprob: -8.125636100769043
    3. 'des' → logprob: -8.250636100769043
    4. '           ' → logprob: -10.250636100769043
    5. '               ' → logprob: -10.875636100769043
    6. '   ' → logprob: -11.750636100769043
    7. '       ' → logprob: -11.875636100769043
    8. '                   ' → logprob: -12.875636100769043
    9. '#' → logprob: -13.000636100769043
    10. '	remove' → logprob: -13.750636100769043

Token 1160: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -5.438573680294212e-06
    2. 'Book' → logprob: -13.125005722045898
    3. 'from' → logprob: -13.875005722045898
    4. 'book' → logprob: -14.500005722045898
    5. '_code' → logprob: -14.625005722045898
    6. '```' → logprob: -14.875005722045898
    7. '(_' → logprob: -15.500005722045898
    8. '`' → logprob: -15.500005722045898
    9. '_books' → logprob: -15.750005722045898
    10. '_from' → logprob: -15.875005722045898

Token 1161: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -5.5577775128767826e-06
    2. 'from' → logprob: -12.125005722045898
    3. '_on' → logprob: -17.8750057220459
    4. '从' → logprob: -18.0000057220459
    5. '```' → logprob: -18.6250057220459
    6. '_FROM' → logprob: -20.0000057220459
    7. 'From' → logprob: -20.3750057220459
    8. '從' → logprob: -21.6250057220459
    9. ')_' → logprob: -21.7500057220459
    10. '_for' → logprob: -22.0000057220459

Token 1162: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.5790839791297913
    2. 'desk' → logprob: -0.8290839791297913
    3. 'd' → logprob: -5.8290839195251465
    4. 'des' → logprob: -8.704084396362305
    5. ' desk' → logprob: -10.954084396362305
    6. 'Desk' → logprob: -11.954084396362305
    7. 'deck' → logprob: -12.329084396362305
    8. '_s' → logprob: -14.204084396362305
    9. '_des' → logprob: -14.454084396362305
    10. 'desktop' → logprob: -14.579084396362305

Token 1163: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.005392295774072409
    2. 'sk' → logprob: -5.255392074584961
    3. 'es' → logprob: -9.505392074584961
    4. 's' → logprob: -10.505392074584961
    5. 'ek' → logprob: -10.630392074584961
    6. 'e' → logprob: -12.255392074584961
    7. '
' → logprob: -12.505392074584961
    8. 'k' → logprob: -12.880392074584961
    9. '_' → logprob: -13.130392074584961
    10. 'ck' → logprob: -13.255392074584961

Token 1164: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.00012403888104017824
    2. 'temp' → logprob: -9.000123977661133
    3. '(tmp' → logprob: -15.000123977661133
    4. ' temp' → logprob: -16.750123977661133
    5. '[temp' → logprob: -16.750123977661133
    6. ',temp' → logprob: -17.625123977661133
    7. '(' → logprob: -18.000123977661133
    8. '=temp' → logprob: -18.875123977661133
    9. '	temp' → logprob: -19.125123977661133
    10. '$temp' → logprob: -19.375123977661133

Token 1165: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -7.896309739408025e-07
    2. 'd' → logprob: -14.750000953674316
    3. '_on' → logprob: -16.125
    4. ')' → logprob: -16.875
    5. '_' → logprob: -17.0
    6. '_t' → logprob: -18.125
    7. '[' → logprob: -18.25
    8. '\' → logprob: -18.375
    9. 'book' → logprob: -18.875
    10. 'on' → logprob: -19.0

Token 1166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31423380970954895
    2. ',temp' → logprob: -1.3142337799072266
    3. '(temp' → logprob: -7.064233779907227
    4. ' ,' → logprob: -9.189233779907227
    5. '(' → logprob: -12.314233779907227
    6. 'temp' → logprob: -12.314233779907227
    7. '[temp' → logprob: -13.439233779907227
    8. '                   ' → logprob: -13.939233779907227
    9. ' (' → logprob: -14.314233779907227
    10. ',tmp' → logprob: -14.439233779907227

Token 1167: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.014286790043115616
    2. ' book' → logprob: -4.264286994934082
    3. 'temp' → logprob: -9.014286994934082
    4. ' temp' → logprob: -13.764286994934082
    5. ' ' → logprob: -15.514286994934082
    6. 'b' → logprob: -16.139286041259766
    7. '	book' → logprob: -16.264286041259766
    8. '   ' → logprob: -16.514286041259766
    9. '(book' → logprob: -16.514286041259766
    10. 'token' → logprob: -17.139286041259766

Token 1168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020630061626434326
    2. ')
' → logprob: -3.895630121231079
    3. ',' → logprob: -10.5206298828125
    4. '                   ' → logprob: -10.7706298828125
    5. ')

' → logprob: -10.8956298828125
    6. '               ' → logprob: -11.8956298828125
    7. ')
' → logprob: -12.5206298828125
    8. '),' → logprob: -13.1456298828125
    9. ')#' → logprob: -13.1456298828125
    10. '()' → logprob: -13.5206298828125

Token 1169: '                   ' (ID: 699)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.8388761281967163
    2. '               ' → logprob: -1.3388761281967163
    3. ' put' → logprob: -1.9638761281967163
    4. '```' → logprob: -2.463876247406006
    5. '                   ' → logprob: -3.713876247406006
    6. '	put' → logprob: -4.213876247406006
    7. '                
' → logprob: -4.338876247406006
    8. '``' → logprob: -4.838876247406006
    9. '   ' → logprob: -5.963876247406006
    10. '                    
' → logprob: -6.088876247406006

Token 1170: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.029754191637039185
    2. ' cost' → logprob: -3.529754161834717
    3. 'access' → logprob: -14.279754638671875
    4. '                   ' → logprob: -14.404754638671875
    5. 'Cost' → logprob: -14.529754638671875
    6. '_cost' → logprob: -14.779754638671875
    7. '(cost' → logprob: -15.154754638671875
    8. 'code' → logprob: -15.404754638671875
    9. '```' → logprob: -15.404754638671875
    10. '           ' → logprob: -15.779754638671875

Token 1171: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12879732251167297
    2. ' +=' → logprob: -2.1287972927093506
    3. '-=' → logprob: -6.87879753112793
    4. ' -=' → logprob: -7.50379753112793
    5. '   ' → logprob: -9.00379753112793
    6. '           ' → logprob: -10.00379753112793
    7. '            ' → logprob: -10.62879753112793
    8. '       ' → logprob: -10.75379753112793
    9. '    ' → logprob: -11.12879753112793
    10. '        ' → logprob: -11.37879753112793

Token 1172: ' access' (ID: 3158)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'access' → logprob: -0.001170225441455841
    2. ' access' → logprob: -6.7511701583862305
    3. '(access' → logprob: -19.001171112060547
    4. '   ' → logprob: -19.251171112060547
    5. ' ' → logprob: -19.876171112060547
    6. ''access' → logprob: -19.876171112060547
    7. '
' → logprob: -20.001171112060547
    8. '```' → logprob: -20.251171112060547
    9. '.access' → logprob: -20.376171112060547
    10. '_access' → logprob: -20.626171112060547

Token 1173: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.020692652091383934
    2. '_s' → logprob: -3.8956925868988037
    3. '_des' → logprob: -9.770692825317383
    4. '_' → logprob: -9.770692825317383
    5. 's' → logprob: -10.645692825317383
    6. 'desk' → logprob: -12.270692825317383
    7. '```' → logprob: -13.270692825317383
    8. 'des' → logprob: -13.895692825317383
    9. 'd' → logprob: -13.895692825317383
    10. '(_' → logprob: -14.145692825317383

Token 1174: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.016122816130518913
    2. 'sk' → logprob: -4.141122817993164
    3. 'es' → logprob: -10.516122817993164
    4. 'ask' → logprob: -11.141122817993164
    5. '_sk' → logprob: -11.391122817993164
    6. 'desk' → logprob: -11.641122817993164
    7. 's' → logprob: -12.141122817993164
    8. 'ek' → logprob: -12.391122817993164
    9. '_d' → logprob: -12.891122817993164
    10. '_s' → logprob: -13.016122817993164

Token 1175: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -7.584239938296378e-06
    2. 'temp' → logprob: -12.000007629394531
    3. '(' → logprob: -13.750007629394531
    4. '(tmp' → logprob: -15.625007629394531
    5. '[temp' → logprob: -16.75000762939453
    6. '(
' → logprob: -17.50000762939453
    7. ' (' → logprob: -17.62500762939453
    8. ' temp' → logprob: -17.87500762939453
    9. ',temp' → logprob: -18.37500762939453
    10. '$temp' → logprob: -18.37500762939453

Token 1176: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.1756367712223437e-05
    2. 'd' → logprob: -11.625011444091797
    3. 's' → logprob: -14.250011444091797
    4. '[' → logprob: -14.750011444091797
    5. '_t' → logprob: -14.750011444091797
    6. 't' → logprob: -15.875011444091797
    7. '_' → logprob: -16.125011444091797
    8. ')' → logprob: -16.375011444091797
    9. '\' → logprob: -16.500011444091797
    10. '_on' → logprob: -16.500011444091797

Token 1177: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09604043513536453
    2. ')' → logprob: -2.5960404872894287
    3. '               ' → logprob: -4.09604024887085
    4. '           ' → logprob: -8.471040725708008
    5. ')

' → logprob: -9.596040725708008
    6. '                   ' → logprob: -9.971040725708008
    7. ' )
' → logprob: -10.971040725708008
    8. ')
' → logprob: -11.596040725708008
    9. '       ' → logprob: -12.346040725708008
    10. '   ' → logprob: -12.846040725708008

Token 1178: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2545800507068634
    2. 'put' → logprob: -1.504580020904541
    3. ' put' → logprob: -6.754580020904541
    4. '```' → logprob: -7.129580020904541
    5. '           ' → logprob: -8.2545804977417
    6. '	put' → logprob: -8.5045804977417
    7. '                   ' → logprob: -9.3795804977417
    8. '``' → logprob: -9.6295804977417
    9. '                
' → logprob: -10.5045804977417
    10. '   ' → logprob: -11.1295804977417

Token 1179: ' put' (ID: 3006)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' (adapté à ' put') → logprob: -0.0399148054420948
    2. '               ' → logprob: -3.289914846420288
    3. ' put' → logprob: -6.289914608001709
    4. '	put' → logprob: -12.289915084838867
    5. '           ' → logprob: -12.414915084838867
    6. '
' → logprob: -13.039915084838867
    7. '.put' → logprob: -13.414915084838867
    8. '   ' → logprob: -13.539915084838867
    9. '```' → logprob: -14.289915084838867
    10. '       ' → logprob: -14.789915084838867

Token 1180: '_book' (ID: 50583)
  Prédit: '_book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -9.794061770662665e-05
    2. '_on' → logprob: -9.75009822845459
    3. '_put' → logprob: -10.25009822845459
    4. '_books' → logprob: -13.87509822845459
    5. '```' → logprob: -13.87509822845459
    6. 'on' → logprob: -14.25009822845459
    7. ' _' → logprob: -15.12509822845459
    8. '_code' → logprob: -15.25009822845459
    9. '(_' → logprob: -15.25009822845459
    10. '_BOOK' → logprob: -15.37509822845459

Token 1181: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -9.088346359931165e-07
    2. ' _' → logprob: -15.375000953674316
    3. '```' → logprob: -15.500000953674316
    4. 'on' → logprob: -15.750000953674316
    5. ')_' → logprob: -16.0
    6. '(_' → logprob: -17.25
    7. '\' → logprob: -17.375
    8. '_put' → logprob: -17.75
    9. '   ' → logprob: -18.125
    10. '
' → logprob: -18.375

Token 1182: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.005299692507833242
    2. 'desk' → logprob: -5.2552995681762695
    3. 'des' → logprob: -10.50529956817627
    4. '_des' → logprob: -10.88029956817627
    5. 'd' → logprob: -11.25529956817627
    6. ' desk' → logprob: -12.63029956817627
    7. 'Desk' → logprob: -13.13029956817627
    8. 'def' → logprob: -15.00529956817627
    9. 's' → logprob: -15.50529956817627
    10. 'esk' → logprob: -15.63029956817627

Token 1183: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -2.7491250875755213e-05
    2. 'es' → logprob: -11.000027656555176
    3. 'sk' → logprob: -13.125027656555176
    4. 'desk' → logprob: -13.250027656555176
    5. 'e' → logprob: -13.500027656555176
    6. '(' → logprob: -13.875027656555176
    7. '_' → logprob: -14.000027656555176
    8. 'esc' → logprob: -14.000027656555176
    9. '1' → logprob: -14.250027656555176
    10. 'ek' → logprob: -14.750027656555176

Token 1184: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -15.875
    3. ' (' → logprob: -16.75
    4. '(
' → logprob: -18.125
    5. '```' → logprob: -19.625
    6. 'def' → logprob: -22.25
    7. '[' → logprob: -23.0
    8. '   ' → logprob: -23.5
    9. '((' → logprob: -23.625
    10. ' ' → logprob: -23.875

Token 1185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.125
    3. ' ' → logprob: -18.625
    4. '```' → logprob: -21.5
    5. '[' → logprob: -22.0
    6. ')' → logprob: -22.375
    7. '
' → logprob: -22.875
    8. '   ' → logprob: -23.25
    9. '`' → logprob: -24.0
    10. '۰' → logprob: -24.875

Token 1186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ' ,' → logprob: -14.000000953674316
    3. ',b' → logprob: -17.125
    4. '   ' → logprob: -18.0
    5. ',
' → logprob: -18.5
    6. 'book' → logprob: -20.0
    7. '           ' → logprob: -20.25
    8. ',user' → logprob: -20.625
    9. '(book' → logprob: -20.625
    10. ')' → logprob: -21.125

Token 1187: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.005233763717114925
    2. ' book' → logprob: -5.2552337646484375
    3. 'b' → logprob: -17.380233764648438
    4. '	book' → logprob: -18.880233764648438
    5. '(book' → logprob: -19.130233764648438
    6. ' ' → logprob: -20.505233764648438
    7. 'books' → logprob: -21.130233764648438
    8. 'Book' → logprob: -21.130233764648438
    9. '   ' → logprob: -21.505233764648438
    10. 'token' → logprob: -21.755233764648438

Token 1188: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06199502944946289
    2. ')' → logprob: -2.811995029449463
    3. ')
' → logprob: -11.811994552612305
    4. '               ' → logprob: -12.186994552612305
    5. '()
' → logprob: -12.311994552612305
    6. '())
' → logprob: -12.936994552612305
    7. '()' → logprob: -13.061994552612305
    8. '           ' → logprob: -13.186994552612305
    9. ' )
' → logprob: -13.561994552612305
    10. ')

' → logprob: -14.561994552612305

Token 1189: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.485602617263794
    2. ' 
' → logprob: -1.860602617263794
    3. ' cost' → logprob: -1.860602617263794
    4. '```' → logprob: -2.360602617263794
    5. '<|end|>' → logprob: -2.610602617263794
    6. '
' → logprob: -2.610602617263794
    7. '               ' → logprob: -3.360602617263794
    8. '                   ' → logprob: -3.610602617263794
    9. '            
' → logprob: -3.610602617263794
    10. 'cost' → logprob: -3.735602617263794

Token 1190: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.3168030083179474
    2. 'update' (adapté à ' update') → logprob: -1.441802978515625
    3. ' cost' → logprob: -3.566802978515625
    4. 'cost' → logprob: -5.316802978515625
    5. '(update' → logprob: -6.816802978515625
    6. '```' → logprob: -7.941802978515625
    7. ' 
' → logprob: -8.691802978515625
    8. '[' → logprob: -9.941802978515625
    9. '_update' → logprob: -9.941802978515625
    10. '.update' → logprob: -10.316802978515625

Token 1191: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.9361264946837764e-07
    2. '_d' → logprob: -15.875
    3. '_lr' → logprob: -17.875
    4. 'd' → logprob: -18.625
    5. '_L' → logprob: -18.875
    6. '(update' → logprob: -20.625
    7. '(' → logprob: -20.875
    8. '_' → logprob: -21.125
    9. '_r' → logprob: -21.75
    10. '_tokens' → logprob: -21.875

Token 1192: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.005999894347041845
    2. 'r' → logprob: -5.13100004196167
    3. 'rl' → logprob: -10.755999565124512
    4. 'u' → logprob: -11.380999565124512
    5. 'l' → logprob: -11.755999565124512
    6. '_ru' → logprob: -12.255999565124512
    7. 'ру' → logprob: -12.380999565124512
    8. '_r' → logprob: -12.880999565124512
    9. '1' → logprob: -12.880999565124512
    10. '{' → logprob: -13.005999565124512

Token 1193: '(book' (ID: 56932)
  Prédit: '(book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(book' → logprob: -0.0003862245939671993
    2. '(' → logprob: -7.8753862380981445
    3. '(b' → logprob: -12.875386238098145
    4. ' (' → logprob: -13.375386238098145
    5. '(Book' → logprob: -13.375386238098145
    6. '(token' → logprob: -15.875386238098145
    7. '(word' → logprob: -16.250385284423828
    8. '(user' → logprob: -16.500385284423828
    9. '<Book' → logprob: -17.125385284423828
    10. '(code' → logprob: -17.250385284423828

Token 1194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6242501139640808
    2. ')
' → logprob: -1.6242501735687256
    3. '()' → logprob: -1.6242501735687256
    4. '()
' → logprob: -3.3742501735687256
    5. '               ' → logprob: -3.3742501735687256
    6. '())' → logprob: -7.3742499351501465
    7. '())
' → logprob: -7.4992499351501465
    8. '           ' → logprob: -8.374250411987305
    9. '<|end|>' → logprob: -8.749250411987305
    10. '                   ' → logprob: -10.749250411987305

Token 1195: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.20358945429325104
    2. '``' → logprob: -2.82858943939209
    3. '               ' → logprob: -3.32858943939209
    4. '           ' → logprob: -3.57858943939209
    5. '   ' → logprob: -4.20358943939209
    6. '
' → logprob: -4.57858943939209
    7. '<|end|>' → logprob: -5.07858943939209
    8. '                   ' → logprob: -5.32858943939209
    9. '       ' → logprob: -5.57858943939209
    10. ' 
' → logprob: -5.82858943939209

Token 1196: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.1005823165178299
    2. ' cost' → logprob: -2.3505823612213135
    3. '           ' → logprob: -8.600582122802734
    4. '               ' → logprob: -8.975582122802734
    5. '   ' → logprob: -10.725582122802734
    6. '                   ' → logprob: -11.225582122802734
    7. '```' → logprob: -11.350582122802734
    8. '
' → logprob: -12.350582122802734
    9. '(cost' → logprob: -12.350582122802734
    10. '            ' → logprob: -13.225582122802734

Token 1197: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31326499581336975
    2. ' +=' → logprob: -1.3132649660110474
    3. '   ' → logprob: -13.313264846801758
    4. ']+=' → logprob: -13.938264846801758
    5. '+=(' → logprob: -15.813264846801758
    6. '       ' → logprob: -16.063264846801758
    7. '    ' → logprob: -16.188264846801758
    8. ' ' → logprob: -16.438264846801758
    9. '        ' → logprob: -16.938264846801758
    10. '```' → logprob: -16.938264846801758

Token 1198: ' access' (ID: 3158)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'access' → logprob: -0.03804171830415726
    2. ' access' → logprob: -3.288041830062866
    3. '(access' → logprob: -16.163042068481445
    4. '   ' → logprob: -16.538042068481445
    5. ' ' → logprob: -16.663042068481445
    6. 'Access' → logprob: -18.163042068481445
    7. '  ' → logprob: -18.413042068481445
    8. '_access' → logprob: -18.413042068481445
    9. '
' → logprob: -18.788042068481445
    10. '```' → logprob: -18.788042068481445

Token 1199: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0007176732178777456
    2. '_s' → logprob: -7.250717639923096
    3. '_des' → logprob: -12.250718116760254
    4. '```' → logprob: -13.875718116760254
    5. ' _' → logprob: -14.250718116760254
    6. '\' → logprob: -14.625718116760254
    7. 's' → logprob: -14.750718116760254
    8. 'desk' → logprob: -16.125717163085938
    9. '_' → logprob: -16.500717163085938
    10. '_b' → logprob: -17.000717163085938

Token 1200: 'esk' (ID: 22444)
  Prédit: 'esk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.00022487416572403163
    2. '(' → logprob: -8.750225067138672
    3. 'sk' → logprob: -9.875225067138672
    4. 'es' → logprob: -12.625225067138672
    5. '_' → logprob: -13.250225067138672
    6. 'e' → logprob: -13.625225067138672
    7. '1' → logprob: -14.000225067138672
    8. 'ask' → logprob: -14.000225067138672
    9. ' esk' → logprob: -14.125225067138672
    10. '0' → logprob: -14.125225067138672

Token 1201: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.127333340875339e-06
    2. ' (' → logprob: -12.500003814697266
    3. '0' → logprob: -15.875003814697266
    4. '(
' → logprob: -16.125003814697266
    5. '```' → logprob: -16.500003814697266
    6. '`' → logprob: -18.625003814697266
    7. '((' → logprob: -19.625003814697266
    8. '(-' → logprob: -20.500003814697266
    9. '
' → logprob: -20.875003814697266
    10. '   ' → logprob: -21.125003814697266

Token 1202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.000006675720215
    3. ' ' → logprob: -16.1250057220459
    4. ')' → logprob: -18.0000057220459
    5. '   ' → logprob: -18.8750057220459
    6. '```' → logprob: -19.0000057220459
    7. '۰' → logprob: -20.1250057220459
    8. '[' → logprob: -20.8750057220459
    9. '       ' → logprob: -21.2500057220459
    10. '           ' → logprob: -21.3125057220459

Token 1203: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028322190046310425
    2. ')
' → logprob: -5.877832412719727
    3. '
' → logprob: -12.127832412719727
    4. '<|end|>' → logprob: -12.252832412719727
    5. '       ' → logprob: -12.502832412719727
    6. '   ' → logprob: -13.252832412719727
    7. '())' → logprob: -13.252832412719727
    8. ')return' → logprob: -13.377832412719727
    9. '           ' → logprob: -13.502832412719727
    10. ')

' → logprob: -13.752832412719727

Token 1204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.609001100063324
    2. '       ' → logprob: -0.984001100063324
    3. '```' → logprob: -2.7340011596679688
    4. '   ' → logprob: -4.609001159667969
    5. '<|end|>' → logprob: -5.734001159667969
    6. 'print' → logprob: -6.359001159667969
    7. 'if' → logprob: -6.984001159667969
    8. '
' → logprob: -6.984001159667969
    9. '``' → logprob: -8.609001159667969
    10. 'queue' → logprob: -8.609001159667969

Token 1205: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002999216318130493
    2. 'if' → logprob: -6.252999305725098
    3. '       ' → logprob: -7.752999305725098
    4. 'queue' → logprob: -8.127999305725098
    5. 'print' → logprob: -9.377999305725098
    6. '   ' → logprob: -9.502999305725098
    7. '```' → logprob: -9.877999305725098
    8. '
' → logprob: -10.127999305725098
    9. '            
' → logprob: -10.502999305725098
    10. ' if' → logprob: -10.502999305725098

Token 1206: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002856497303582728
    2. '           ' → logprob: -8.250286102294922
    3. ' if' → logprob: -11.625286102294922
    4. '
' → logprob: -12.125286102294922
    5. '```' → logprob: -12.125286102294922
    6. '       ' → logprob: -13.500286102294922
    7. '            
' → logprob: -13.500286102294922
    8. 'queue' → logprob: -13.750286102294922
    9. '   ' → logprob: -14.500286102294922
    10. '#' → logprob: -15.375286102294922

Token 1207: ' student' (ID: 6760)
  Prédit: 'students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'students' → logprob: -0.0880313366651535
    2. ' students' → logprob: -2.58803129196167
    3. 'len' → logprob: -4.83803129196167
    4. ' len' → logprob: -6.83803129196167
    5. '   ' → logprob: -9.963031768798828
    6. '       ' → logprob: -11.213031768798828
    7. ' ' → logprob: -11.338031768798828
    8. '  ' → logprob: -11.713031768798828
    9. 'i' → logprob: -11.963031768798828
    10. '           ' → logprob: -12.213031768798828

Token 1208: ' has' (ID: 853)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0342423915863037
    2. '           ' → logprob: -1.1592423915863037
    3. ' if' → logprob: -1.6592423915863037
    4. 'students' → logprob: -2.5342423915863037
    5. '       ' → logprob: -4.534242630004883
    6. '[i' → logprob: -4.659242630004883
    7. '.students' → logprob: -4.784242630004883
    8. '               ' → logprob: -5.284242630004883
    9. '   ' → logprob: -5.284242630004883
    10. ' students' → logprob: -5.534242630004883

Token 1209: ' more' (ID: 945)
  Prédit: 'students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'students' → logprob: -0.0676724836230278
    2. ' students' → logprob: -2.8176724910736084
    3. 'books' → logprob: -5.817672252655029
    4. 'requests' → logprob: -6.067672252655029
    5. ' requests' → logprob: -9.067672729492188
    6. ' books' → logprob: -9.192672729492188
    7. 'len' → logprob: -10.067672729492188
    8. '(' → logprob: -10.317672729492188
    9. 'book' → logprob: -10.317672729492188
    10. '(len' → logprob: -11.692672729492188

Token 1210: ' requests' (ID: 13782)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requests' → logprob: -0.05634468421339989
    2. '           ' → logprob: -3.931344747543335
    3. 'books' → logprob: -4.431344509124756
    4. '_requests' → logprob: -4.681344509124756
    5. ' requests' → logprob: -5.306344509124756
    6. '               ' → logprob: -5.681344509124756
    7. 'if' → logprob: -6.806344509124756
    8. '       ' → logprob: -7.181344509124756
    9. 'book' → logprob: -7.431344509124756
    10. ':' → logprob: -7.431344509124756

Token 1211: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19805747270584106
    2. '       ' → logprob: -2.9480574131011963
    3. '   ' → logprob: -3.1980574131011963
    4. ':' → logprob: -3.4480574131011963
    5. ' and' → logprob: -3.8230574131011963
    6. ':
' → logprob: -4.198057651519775
    7. ',' → logprob: -4.948057651519775
    8. '<|end|>' → logprob: -5.323057651519775
    9. ' if' → logprob: -6.073057651519775
    10. '<|end|>' → logprob: -7.073057651519775

Token 1212: ' go' (ID: 810)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.24384960532188416
    2. 'if' → logprob: -2.118849515914917
    3. '           ' → logprob: -2.993849515914917
    4. ' queue' → logprob: -3.493849515914917
    5. ' if' → logprob: -4.243849754333496
    6. '   ' → logprob: -7.243849754333496
    7. '```' → logprob: -8.243849754333496
    8. '       ' → logprob: -8.618849754333496
    9. '	queue' → logprob: -9.243849754333496
    10. '               ' → logprob: -9.493849754333496

Token 1213: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05536479875445366
    2. 'to' → logprob: -4.555364608764648
    3. 'queue' → logprob: -5.055364608764648
    4. '```' → logprob: -5.180364608764648
    5. '(queue' → logprob: -5.430364608764648
    6. 'again' → logprob: -5.805364608764648
    7. '               ' → logprob: -6.305364608764648
    8. 'back' → logprob: -6.305364608764648
    9. 'ahead' → logprob: -6.430364608764648
    10. '.append' → logprob: -6.680364608764648

Token 1214: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0067764767445623875
    2. ' queue' → logprob: -5.756776332855225
    3. 'the' → logprob: -5.756776332855225
    4. '           ' → logprob: -8.256776809692383
    5. '	queue' → logprob: -9.381776809692383
    6. ' the' → logprob: -10.506776809692383
    7. '   ' → logprob: -11.131776809692383
    8. '(queue' → logprob: -11.381776809692383
    9. 'end' → logprob: -11.631776809692383
    10. '
' → logprob: -12.506776809692383

Token 1215: ' end' (ID: 1268)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023323044180870056
    2. '```' → logprob: -4.398323059082031
    3. 'if' → logprob: -5.148323059082031
    4. ' if' → logprob: -5.898323059082031
    5. '   ' → logprob: -7.148323059082031
    6. '       ' → logprob: -7.648323059082031
    7. '``' → logprob: -8.148323059082031
    8. '	if' → logprob: -8.898323059082031
    9. '            
' → logprob: -9.023323059082031
    10. '		' → logprob: -9.273323059082031

Token 1216: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009151478880085051
    2. '```' → logprob: -8.25091552734375
    3. '   ' → logprob: -8.37591552734375
    4. 'if' → logprob: -8.62591552734375
    5. ' if' → logprob: -9.12591552734375
    6. '		' → logprob: -10.25091552734375
    7. '            
' → logprob: -10.62591552734375
    8. '       ' → logprob: -10.75091552734375
    9. '<|end|>' → logprob: -11.00091552734375
    10. '``' → logprob: -11.37591552734375

Token 1217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.053153716027736664
    2. '```' → logprob: -3.0531537532806396
    3. '``' → logprob: -6.5531535148620605
    4. '       ' → logprob: -7.0531535148620605
    5. '   ' → logprob: -7.1781535148620605
    6. 'if' → logprob: -7.1781535148620605
    7. ' if' → logprob: -7.4281535148620605
    8. '            
' → logprob: -10.053153991699219
    9. '               ' → logprob: -10.178153991699219
    10. ' ' → logprob: -11.303153991699219

Token 1218: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.300526887178421
    2. 'if' (adapté à ' if') → logprob: -1.6755268573760986
    3. ' if' → logprob: -2.8005268573760986
    4. '```' → logprob: -4.550527095794678
    5. '       ' → logprob: -7.925527095794678
    6. '   ' → logprob: -7.925527095794678
    7. '``' → logprob: -9.05052661895752
    8. '            
' → logprob: -9.92552661895752
    9. ' ' → logprob: -10.67552661895752
    10. '               ' → logprob: -10.80052661895752

Token 1219: ' students' (ID: 4501)
  Prédit: 'students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'students' → logprob: -0.1029542088508606
    2. ' students' → logprob: -2.352954149246216
    3. 'len' → logprob: -5.977954387664795
    4. ' len' → logprob: -8.602953910827637
    5. '   ' → logprob: -10.852953910827637
    6. ' ' → logprob: -12.977953910827637
    7. '  ' → logprob: -13.602953910827637
    8. '           ' → logprob: -14.227953910827637
    9. '       ' → logprob: -14.352953910827637
    10. '.students' → logprob: -14.727953910827637

Token 1220: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.875
    3. ' [' → logprob: -17.875
    4. 'i' → logprob: -18.125
    5. '[
' → logprob: -18.125
    6. '```' → logprob: -18.25
    7. '   ' → logprob: -18.375
    8. '[I' → logprob: -18.75
    9. '[j' → logprob: -19.5
    10. '       ' → logprob: -19.875

Token 1221: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0693014860153198
    2. ':' → logprob: -1.1943014860153198
    3. ']:' → logprob: -1.3193014860153198
    4. '.append' → logprob: -4.194301605224609
    5. ']:
' → logprob: -4.319301605224609
    6. '):
' → logprob: -4.319301605224609
    7. '[' → logprob: -4.569301605224609
    8. ':
' → logprob: -4.944301605224609
    9. ']' → logprob: -5.194301605224609
    10. '```' → logprob: -5.194301605224609

Token 1222: '               ' (ID: 506)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.6483891606330872
    2. 'queue' → logprob: -1.3983891010284424
    3. '       ' → logprob: -2.5233891010284424
    4. '               ' → logprob: -2.6483891010284424
    5. '           ' → logprob: -3.1483891010284424
    6. '   ' → logprob: -4.0233893394470215
    7. '	queue' → logprob: -4.5233893394470215
    8. '```' → logprob: -5.3983893394470215
    9. '(queue' → logprob: -6.5233893394470215
    10. '	       ' → logprob: -7.5233893394470215

Token 1223: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.0043748170137405396
    2. ' queue' → logprob: -5.504374980926514
    3. '	queue' → logprob: -9.129374504089355
    4. '   ' → logprob: -9.629374504089355
    5. '               ' → logprob: -9.629374504089355
    6. '           ' → logprob: -10.254374504089355
    7. '       ' → logprob: -11.754374504089355
    8. '                   ' → logprob: -11.879374504089355
    9. '```' → logprob: -12.754374504089355
    10. '(queue' → logprob: -13.129374504089355

Token 1224: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.65707261255011e-06
    2. '.' → logprob: -12.000008583068848
    3. ' .' → logprob: -14.375008583068848
    4. '.enqueue' → logprob: -14.750008583068848
    5. '.extend' → logprob: -14.875008583068848
    6. 'append' → logprob: -15.000008583068848
    7. '   ' → logprob: -15.250008583068848
    8. '```' → logprob: -15.625008583068848
    9. '().' → logprob: -15.750008583068848
    10. ').' → logprob: -16.000009536743164

Token 1225: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. 'i' → logprob: -19.25
    3. 'left' → logprob: -19.875
    4. '(' → logprob: -20.5
    5. ' (' → logprob: -22.125
    6. '(
' → logprob: -22.25
    7. '[i' → logprob: -22.625
    8. '((' → logprob: -22.75
    9. ' i' → logprob: -23.375
    10. ',i' → logprob: -23.5

Token 1226: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.4192871175473556e-05
    2. ' )' → logprob: -10.750054359436035
    3. ')
' → logprob: -10.875054359436035
    4. '())' → logprob: -12.000054359436035
    5. '<|end|>' → logprob: -13.125054359436035
    6. '()' → logprob: -13.625054359436035
    7. '       ' → logprob: -14.125054359436035
    8. '           ' → logprob: -14.500054359436035
    9. '))' → logprob: -14.875054359436035
    10. ']' → logprob: -15.125054359436035

Token 1227: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.223736971616745
    2. 'print' → logprob: -2.7237370014190674
    3. '       ' → logprob: -2.9737370014190674
    4. '<|end|>' → logprob: -3.2237370014190674
    5. '```' → logprob: -3.5987370014190674
    6. 'return' → logprob: -4.598736763000488
    7. '
' → logprob: -5.348736763000488
    8. ')' → logprob: -7.098736763000488
    9. '    
' → logprob: -8.348736763000488
    10. '        
' → logprob: -9.223736763000488

Token 1228: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1632733792066574
    2. '   ' → logprob: -2.163273334503174
    3. '```' → logprob: -3.538273334503174
    4. '       ' → logprob: -5.038273334503174
    5. ' print' → logprob: -9.913273811340332
    6. '``' → logprob: -10.163273811340332
    7. '
' → logprob: -10.913273811340332
    8. '        
' → logprob: -11.288273811340332
    9. '    
' → logprob: -11.788273811340332
    10. '	print' → logprob: -12.163273811340332

Token 1229: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -1.306760805164231e-05
    2. 'cost' → logprob: -11.87501335144043
    3. '(' → logprob: -12.25001335144043
    4. '()' → logprob: -14.12501335144043
    5. '(f' → logprob: -15.50001335144043
    6. ' (' → logprob: -15.62501335144043
    7. '(score' → logprob: -17.37501335144043
    8. '((' → logprob: -17.62501335144043
    9. '('' → logprob: -17.87501335144043
    10. '(total' → logprob: -18.12501335144043

Token 1230: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014155926182866096
    2. '())' → logprob: -6.626415729522705
    3. '()' → logprob: -9.376415252685547
    4. ')
' → logprob: -13.626415252685547
    5. '   ' → logprob: -13.626415252685547
    6. ' )' → logprob: -13.751415252685547
    7. '       ' → logprob: -14.626415252685547
    8. '(' → logprob: -15.251415252685547
    9. '`)' → logprob: -16.001415252685547
    10. ')}' → logprob: -16.126415252685547

Token 1231: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1232: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0059363823384046555
    2. '__' → logprob: -5.130936145782471
    3. ' ' → logprob: -12.505936622619629
    4. '_' → logprob: -13.755936622619629
    5. '___' → logprob: -14.130936622619629
    6. '  ' → logprob: -14.505936622619629
    7. ''' → logprob: -14.755936622619629
    8. ' ___' → logprob: -15.005936622619629
    9. ' ' → logprob: -15.255936622619629
    10. '_name' → logprob: -15.630936622619629

Token 1233: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08763249218463898
    2. ' ==' → logprob: -2.837632417678833
    3. '==' → logprob: -3.962632417678833
    4. 'name' → logprob: -5.962632656097412
    5. '=="' → logprob: -6.712632656097412
    6. '__.__' → logprob: -7.087632656097412
    7. '```' → logprob: -7.712632656097412
    8. '.__' → logprob: -8.212632179260254
    9. '()==' → logprob: -8.712632179260254
    10. ' __' → logprob: -8.837632179260254

Token 1234: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006466790568083525
    2. '=="' → logprob: -5.631466865539551
    3. '==' → logprob: -6.381466865539551
    4. '__.__' → logprob: -7.506466865539551
    5. ' ==' → logprob: -8.00646686553955
    6. '=='' → logprob: -8.63146686553955
    7. '__.' → logprob: -10.25646686553955
    8. '```' → logprob: -10.25646686553955
    9. '__('' → logprob: -12.00646686553955
    10. '__":
' → logprob: -12.00646686553955

Token 1235: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11400941014289856
    2. '==' → logprob: -3.114009380340576
    3. ' ==' → logprob: -3.239009380340576
    4. '=="' → logprob: -3.989009380340576
    5. '=='' → logprob: -5.239009380340576
    6. '__.__' → logprob: -8.614009857177734
    7. '```' → logprob: -10.364009857177734
    8. '.__' → logprob: -11.239009857177734
    9. '__('' → logprob: -11.989009857177734
    10. '__":
' → logprob: -11.989009857177734

Token 1236: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19272764027118683
    2. '"' → logprob: -1.9427276849746704
    3. ''' → logprob: -3.442727565765381
    4. 'main' → logprob: -13.067728042602539
    5. ' "__' → logprob: -13.942728042602539
    6. '___' → logprob: -16.19272804260254
    7. '   ' → logprob: -16.31772804260254
    8. '"name' → logprob: -16.56772804260254
    9. ' __' → logprob: -16.94272804260254
    10. '/__' → logprob: -17.56772804260254

Token 1237: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.7610454708337784e-05
    2. 'name' → logprob: -10.500027656555176
    3. ' main' → logprob: -17.62502670288086
    4. '"' → logprob: -19.25002670288086
    5. '_main' → logprob: -19.37502670288086
    6. '__' → logprob: -19.75002670288086
    7. 'm' → logprob: -20.50002670288086
    8. '(main' → logprob: -20.50002670288086
    9. '	main' → logprob: -21.25002670288086
    10. '-main' → logprob: -22.37502670288086

Token 1238: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16073483228683472
    2. '__' → logprob: -1.9107348918914795
    3. '__':
' → logprob: -7.7857346534729
    4. '__
' → logprob: -10.285735130310059
    5. '__["' → logprob: -10.785735130310059
    6. '__:' → logprob: -11.285735130310059
    7. '__.__' → logprob: -11.535735130310059
    8. '__.' → logprob: -12.535735130310059
    9. '__
' → logprob: -13.035735130310059
    10. ':
' → logprob: -13.285735130310059

Token 1239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036287005059421062
    2. '```' → logprob: -6.503628730773926
    3. 'solve' → logprob: -6.878628730773926
    4. ' solve' → logprob: -7.378628730773926
    5. '    
' → logprob: -8.378628730773926
    6. '.solve' → logprob: -9.253628730773926
    7. '	s' → logprob: -9.378628730773926
    8. '``' → logprob: -11.253628730773926
    9. '>' → logprob: -11.503628730773926
    10. '
' → logprob: -11.628628730773926

Token 1240: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -9.253090865968261e-06
    2. '   ' → logprob: -11.750009536743164
    3. ' solve' → logprob: -13.750009536743164
    4. '.solve' → logprob: -15.750009536743164
    5. '    
' → logprob: -18.125009536743164
    6. 'import' → logprob: -18.125009536743164
    7. '```' → logprob: -18.375009536743164
    8. 'resolve' → logprob: -18.500009536743164
    9. 's' → logprob: -20.375009536743164
    10. '	s' → logprob: -20.500009536743164

Token 1241: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006995492614805698
    2. '<|end|>' → logprob: -5.506995677947998
    3. '(' → logprob: -6.756995677947998
    4. '```' → logprob: -7.256995677947998
    5. '()
' → logprob: -7.506995677947998
    6. '
' → logprob: -8.75699520111084
    7. '(
' → logprob: -9.13199520111084
    8. '()\' → logprob: -9.63199520111084
    9. '();' → logprob: -9.75699520111084
    10. '#' → logprob: -11.00699520111084


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1239
Tokens correctement prédits (1ère position, stricte): 453
Tokens correctement prédits (1ère position, avec adaptation): 499
Tokens correctement prédits (top 10): 941
Précision stricte (1ère position): 36.56%
Précision adaptée (1ère position): 40.27%
Précision (top 10): 75.95%
================================================================================
