================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    w = int(input())
    if w == -1:
        break
    base = 1150
    charge = base
    if w <= 10:
        pass
    elif w <= 20:
        charge += (w -10) * 125
    elif w <= 30:
        charge += 10 * 125
        charge += (w -20) * 140
    else:
        charge += 10 * 125
        charge += 10 * 140
        charge += (w -30) * 160
    diff = 4280 - charge
    print(diff)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' w' (ID: 286)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09453163295984268
    2. 'hile' → logprob: -2.469531536102295
    3. 'i' → logprob: -5.344531536102295
    4. '   ' → logprob: -7.969531536102295
    5. '```' → logprob: -8.719532012939453
    6. '=' → logprob: -9.594532012939453
    7. 'e' → logprob: -10.094532012939453
    8. ' h' → logprob: -10.094532012939453
    9. 'a' → logprob: -10.219532012939453
    10. ' ' → logprob: -10.469532012939453

Token 6: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.23073124885559082
    2. 'input' → logprob: -1.9807312488555908
    3. ' w' → logprob: -3.355731248855591
    4. 'w' → logprob: -4.980731010437012
    5. ' ' → logprob: -5.105731010437012
    6. '   ' → logprob: -6.105731010437012
    7. ' word' → logprob: -6.105731010437012
    8. ' i' → logprob: -6.355731010437012
    9. 'i' → logprob: -6.418231010437012
    10. ' get' → logprob: -6.918231010437012

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00045926711754873395
    2. '(input' → logprob: -8.000459671020508
    3. '(w' → logprob: -9.250459671020508
    4. ' (' → logprob: -11.750459671020508
    5. '()' → logprob: -12.250459671020508
    6. '(
' → logprob: -12.500459671020508
    7. '('' → logprob: -12.750459671020508
    8. '(open' → logprob: -13.500459671020508
    9. 'w' → logprob: -13.875459671020508
    10. '(

' → logprob: -14.375459671020508

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07466399669647217
    2. '()' → logprob: -3.1996641159057617
    3. '())' → logprob: -4.199664115905762
    4. ')' → logprob: -4.324664115905762
    5. '('' → logprob: -6.824664115905762
    6. '(()' → logprob: -8.074664115905762
    7. '("("' → logprob: -8.074664115905762
    8. '(
' → logprob: -8.324664115905762
    9. '(""))' → logprob: -8.324664115905762
    10. '```' → logprob: -9.324664115905762

Token 9: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9027715921401978
    2. ' if' → logprob: -1.7777715921401978
    3. ' ' → logprob: -2.027771472930908
    4. '<|end|>' → logprob: -2.152771472930908
    5. '+' → logprob: -3.027771472930908
    6. '%' → logprob: -3.152771472930908
    7. '   ' → logprob: -3.527771472930908
    8. '  ' → logprob: -4.652771472930908
    9. ':' → logprob: -4.902771472930908
    10. ',' → logprob: -5.277771472930908

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7328722476959229
    2. '%' → logprob: -1.8578722476959229
    3. ' if' → logprob: -1.9828722476959229
    4. '   ' → logprob: -2.482872247695923
    5. ')' → logprob: -2.982872247695923
    6. '+' → logprob: -4.232872009277344
    7. '<|end|>' → logprob: -4.232872009277344
    8. '  ' → logprob: -4.232872009277344
    9. 'if' (adapté à ' if') → logprob: -4.357872009277344
    10. ':' → logprob: -4.857872009277344

Token 11: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.09225001931190491
    2. ' ' → logprob: -2.467250108718872
    3. 'w' → logprob: -5.842249870300293
    4. ' not' → logprob: -7.967249870300293
    5. '  ' → logprob: -10.717249870300293
    6. ' ' → logprob: -10.842249870300293
    7. ' (' → logprob: -12.717249870300293
    8. ')' → logprob: -12.967249870300293
    9. 'not' → logprob: -13.717249870300293
    10. '<|end|>' → logprob: -14.029749870300293

Token 12: ' ==' (ID: 951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.015145566314458847
    2. '%' → logprob: -4.390145778656006
    3. ' ' → logprob: -6.265145778656006
    4. ' >' → logprob: -7.390145778656006
    5. '>' → logprob: -10.140145301818848
    6. ' >=' → logprob: -10.265145301818848
    7. ' <=' → logprob: -10.765145301818848
    8. '  ' → logprob: -12.140145301818848
    9. ' ==' → logprob: -12.640145301818848
    10. ' ' → logprob: -13.390145301818848

Token 13: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2677842080593109
    2. '0' → logprob: -1.5177842378616333
    3. '2' → logprob: -4.642784118652344
    4. '1' → logprob: -5.642784118652344
    5. '20' → logprob: -7.142784118652344
    6. '32' → logprob: -7.767784118652344
    7. '4' → logprob: -8.517784118652344
    8. '=' → logprob: -8.767784118652344
    9. '40' → logprob: -8.767784118652344
    10. '10' → logprob: -8.892784118652344

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026050140149891376
    2. ' ' → logprob: -8.375260353088379
    3. '-' → logprob: -11.625260353088379
    4. '2' → logprob: -11.750260353088379
    5. '0' → logprob: -12.000260353088379
    6. '9' → logprob: -13.250260353088379
    7. '3' → logprob: -14.437760353088379
    8. '  ' → logprob: -14.812760353088379
    9. '4' → logprob: -14.875260353088379
    10. '100' → logprob: -14.937760353088379

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018208740220870823
    2. ' :' → logprob: -8.750182151794434
    3. '):' → logprob: -11.500182151794434
    4. ':
' → logprob: -11.750182151794434
    5. '   ' → logprob: -13.000182151794434
    6. ' or' → logprob: -14.375182151794434
    7. ':return' → logprob: -14.375182151794434
    8. '    ' → logprob: -14.875182151794434
    9. '       ' → logprob: -15.000182151794434
    10. ' and' → logprob: -15.000182151794434

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013534489553421736
    2. ':' → logprob: -7.1263532638549805
    3. '<|end|>' → logprob: -8.37635326385498
    4. '   ' → logprob: -9.37635326385498
    5. ' break' → logprob: -9.62635326385498
    6. '\n' → logprob: -10.62635326385498
    7. '    ' → logprob: -10.75135326385498
    8. '\' → logprob: -11.00135326385498
    9. ' ' → logprob: -11.12635326385498
    10. ':
' → logprob: -11.25135326385498

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.04639017954468727
    2. '       ' → logprob: -3.1713902950286865
    3. 'break' (adapté à ' break') → logprob: -6.171390056610107
    4. '   ' → logprob: -7.046390056610107
    5. '    ' → logprob: -8.796390533447266
    6. '	break' → logprob: -8.921390533447266
    7. ' brake' → logprob: -10.421390533447266
    8. ' ' → logprob: -10.796390533447266
    9. ' bre' → logprob: -10.921390533447266
    10. '_break' → logprob: -11.046390533447266

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16943873465061188
    2. '<|end|>' → logprob: -2.4194388389587402
    3. ':' → logprob: -3.4194388389587402
    4. '    
' → logprob: -4.16943883895874
    5. ')' → logprob: -4.66943883895874
    6. '
' → logprob: -6.16943883895874
    7. ' ' → logprob: -6.41943883895874
    8. '  
' → logprob: -7.29443883895874
    9. '<|end|>' → logprob: -7.29443883895874
    10. '    ' → logprob: -7.29443883895874

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4886755645275116
    2. ':' → logprob: -0.988675594329834
    3. ')' → logprob: -4.863675594329834
    4. '```' → logprob: -6.238675594329834
    5. '<|end|>' → logprob: -7.113675594329834
    6. '#' → logprob: -7.363675594329834
    7. ' ' → logprob: -7.363675594329834
    8. '    
' → logprob: -7.488675594329834
    9. '  ' → logprob: -8.363675117492676
    10. '>' → logprob: -8.613675117492676

Token 20: ' base' (ID: 3611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04265028238296509
    2. ' ' → logprob: -3.6676502227783203
    3. '    
' → logprob: -5.04265022277832
    4. ' if' → logprob: -6.04265022277832
    5. '    ' → logprob: -6.16765022277832
    6. ':' → logprob: -6.91765022277832
    7. ')' → logprob: -7.41765022277832
    8. ' 
' → logprob: -7.54265022277832
    9. '<|end|>' → logprob: -7.54265022277832
    10. 'if' → logprob: -8.04265022277832

Token 21: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4022882282733917
    2. ' **' → logprob: -1.9022881984710693
    3. ' ' → logprob: -2.6522881984710693
    4. ' =' → logprob: -3.2772881984710693
    5. '**' → logprob: -4.152288436889648
    6. '=' → logprob: -4.402288436889648
    7. ' *' → logprob: -4.902288436889648
    8. '2' → logprob: -5.027288436889648
    9. '6' → logprob: -5.527288436889648
    10. ' _' → logprob: -6.027288436889648

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5400415062904358
    2. '2' → logprob: -1.415041446685791
    3. '10' → logprob: -2.915041446685791
    4. ' int' → logprob: -3.040041446685791
    5. 'int' → logprob: -3.540041446685791
    6. ' w' → logprob: -4.165041446685791
    7. 'w' → logprob: -5.290041446685791
    8. '16' → logprob: -5.540041446685791
    9. '1' → logprob: -5.790041446685791
    10. '0' → logprob: -5.915041446685791

Token 23: '115' (ID: 11999)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7674738168716431
    2. 'int' → logprob: -1.267473816871643
    3. 'w' → logprob: -2.1424736976623535
    4. '10' → logprob: -2.7674736976623535
    5. 'float' → logprob: -4.0174736976623535
    6. ' int' → logprob: -4.7674736976623535
    7. '3' → logprob: -4.8924736976623535
    8. '1' → logprob: -4.8924736976623535
    9. ' ' → logprob: -4.8924736976623535
    10. 'input' → logprob: -5.5174736976623535

Token 24: '0' (ID: 15)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.256684422492981
    2. '*' → logprob: -1.756684422492981
    3. '0' → logprob: -1.881684422492981
    4. ' **' → logprob: -2.0066843032836914
    5. ' *' → logprob: -2.0066843032836914
    6. '2' → logprob: -4.006684303283691
    7. ' +' → logprob: -4.131684303283691
    8. '   ' → logprob: -4.131684303283691
    9. ')' → logprob: -4.256684303283691
    10. '7' → logprob: -4.381684303283691

Token 25: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7582491040229797
    2. '*' → logprob: -1.258249044418335
    3. '<|end|>' → logprob: -2.633249044418335
    4. ' *' → logprob: -3.008249044418335
    5. ' +' → logprob: -3.008249044418335
    6. '-' → logprob: -3.758249044418335
    7. '   ' → logprob: -5.008249282836914
    8. '0' → logprob: -5.008249282836914
    9. ')' → logprob: -5.008249282836914
    10. '**' → logprob: -5.133249282836914

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23211979866027832
    2. '+' → logprob: -2.1071197986602783
    3. '<|end|>' → logprob: -3.9821197986602783
    4. ' ' → logprob: -4.107119560241699
    5. '    
' → logprob: -4.607119560241699
    6. '*' → logprob: -4.607119560241699
    7. '    ' → logprob: -5.232119560241699
    8. ' if' → logprob: -5.607119560241699
    9. ' +' → logprob: -5.607119560241699
    10. ':' → logprob: -5.982119560241699

Token 27: ' charge' (ID: 8363)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4440377354621887
    2. '   ' → logprob: -1.694037675857544
    3. 'if' → logprob: -2.319037675857544
    4. '+' → logprob: -3.319037675857544
    5. '*' → logprob: -4.319037914276123
    6. 'weight' → logprob: -5.694037914276123
    7. ' weight' → logprob: -5.694037914276123
    8. ' +' → logprob: -6.444037914276123
    9. '    ' → logprob: -6.444037914276123
    10. ' *' → logprob: -6.944037914276123

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2587120831012726
    2. '=' → logprob: -1.5087120532989502
    3. ' ' → logprob: -6.008712291717529
    4. 's' → logprob: -6.258712291717529
    5. '_' → logprob: -6.758712291717529
    6. ' +=' → logprob: -7.008712291717529
    7. '_per' → logprob: -9.633711814880371
    8. '+=' → logprob: -10.008711814880371
    9. ' *=' → logprob: -10.133711814880371
    10. '   ' → logprob: -10.508711814880371

Token 29: ' base' (ID: 3611)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.4105463027954102
    2. ' base' → logprob: -1.5355463027954102
    3. ' max' → logprob: -1.6605463027954102
    4. ' ' → logprob: -1.6605463027954102
    5. '0' → logprob: -2.91054630279541
    6. ' (' → logprob: -3.28554630279541
    7. 'base' → logprob: -3.91054630279541
    8. 'w' → logprob: -4.41054630279541
    9. 'max' → logprob: -4.91054630279541
    10. '10' → logprob: -5.53554630279541

Token 30: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6488256454467773
    2. ' +' → logprob: -0.7738256454467773
    3. ' if' → logprob: -5.023825645446777
    4. '*' → logprob: -5.773825645446777
    5. '<|end|>' → logprob: -5.898825645446777
    6. ' *' → logprob: -6.273825645446777
    7. 'if' → logprob: -6.773825645446777
    8. '<|end|>' → logprob: -8.398825645446777
    9. '
' → logprob: -9.898825645446777
    10. '+(' → logprob: -9.898825645446777

Token 31: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4154316186904907
    2. 'if' → logprob: -1.7904316186904907
    3. ' if' → logprob: -2.165431499481201
    4. ' +' → logprob: -3.165431499481201
    5. '<|end|>' → logprob: -5.040431499481201
    6. '+
' → logprob: -5.665431499481201
    7. '   ' → logprob: -6.290431499481201
    8. '*' → logprob: -6.415431499481201
    9. '	if' → logprob: -7.165431499481201
    10. '<|end|>' → logprob: -7.915431499481201

Token 32: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5178950428962708
    2. '+' → logprob: -1.517894983291626
    3. ' +' → logprob: -2.267894983291626
    4. 'if' (adapté à ' if') → logprob: -3.017894983291626
    5. '<|end|>' → logprob: -4.892895221710205
    6. '-' → logprob: -5.517895221710205
    7. '*' → logprob: -5.517895221710205
    8. '+
' → logprob: -5.767895221710205
    9. '
' → logprob: -5.892895221710205
    10. ' +
' → logprob: -6.267895221710205

Token 33: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0067872474901378155
    2. 'w' → logprob: -5.006787300109863
    3. ' ' → logprob: -9.881787300109863
    4. ' (' → logprob: -12.506787300109863
    5. ' ' → logprob: -12.631787300109863
    6. '(w' → logprob: -12.631787300109863
    7. '(' → logprob: -13.131787300109863
    8. '    ' → logprob: -13.131787300109863
    9. ' not' → logprob: -13.631787300109863
    10. '	w' → logprob: -13.819287300109863

Token 34: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05080277845263481
    2. '>' → logprob: -3.800802707672119
    3. ' <=' → logprob: -4.050802707672119
    4. ' ' → logprob: -4.925802707672119
    5. ' <' → logprob: -6.675802707672119
    6. '<=' → logprob: -7.925802707672119
    7. ' %' → logprob: -8.300803184509277
    8. '%' → logprob: -8.425803184509277
    9. ' >=' → logprob: -8.550803184509277
    10. '<' → logprob: -9.175803184509277

Token 35: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3038034737110138
    2. '5' → logprob: -2.0538034439086914
    3. '10' → logprob: -2.6788034439086914
    4. '20' → logprob: -3.8038034439086914
    5. '15' → logprob: -4.678803443908691
    6. '2' → logprob: -5.053803443908691
    7. '3' → logprob: -5.303803443908691
    8. '50' → logprob: -5.303803443908691
    9. '100' → logprob: -5.803803443908691
    10. '1' → logprob: -6.178803443908691

Token 36: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.7486045360565186
    2. '50' → logprob: -1.7486045360565186
    3. '5' → logprob: -2.2486045360565186
    4. '3' → logprob: -2.3736045360565186
    5. '20' → logprob: -2.3736045360565186
    6. '100' → logprob: -2.8736045360565186
    7. '40' → logprob: -2.8736045360565186
    8. '30' → logprob: -2.9986045360565186
    9. '60' → logprob: -3.4986045360565186
    10. '15' → logprob: -3.6236045360565186

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012247511185705662
    2. ':
' → logprob: -7.251224517822266
    3. '   ' → logprob: -8.626224517822266
    4. '+' → logprob: -8.876224517822266
    5. '*' → logprob: -9.876224517822266
    6. ' and' → logprob: -10.251224517822266
    7. ' :' → logprob: -10.626224517822266
    8. '-' → logprob: -11.376224517822266
    9. ' *' → logprob: -11.501224517822266
    10. '**' → logprob: -11.751224517822266

Token 38: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055453673005104065
    2. '   ' → logprob: -3.5554537773132324
    3. ':
' → logprob: -3.8054537773132324
    4. '       ' → logprob: -6.930453777313232
    5. ' and' → logprob: -7.305453777313232
    6. '*' → logprob: -7.430453777313232
    7. '.' → logprob: -8.805453300476074
    8. '    ' → logprob: -8.805453300476074
    9. ' *' → logprob: -8.930453300476074
    10. '+' → logprob: -9.055453300476074

Token 39: ' pass' (ID: 1853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8473584651947021
    2. ':' → logprob: -0.9723584651947021
    3. 'charge' → logprob: -2.722358465194702
    4. ' charge' → logprob: -3.347358465194702
    5. 'pass' (adapté à ' pass') → logprob: -3.597358465194702
    6. '       ' → logprob: -3.972358465194702
    7. ' pass' → logprob: -4.972358703613281
    8. '*' → logprob: -4.972358703613281
    9. ':
' → logprob: -5.097358703613281
    10. '    ' → logprob: -5.222358703613281

Token 40: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3484269380569458
    2. 'else' → logprob: -1.7234269380569458
    3. ' else' → logprob: -2.3484268188476562
    4. 'elif' → logprob: -4.223426818847656
    5. ' elif' → logprob: -6.098426818847656
    6. '	else' → logprob: -6.973426818847656
    7. '<|end|>' → logprob: -6.973426818847656
    8. '	elif' → logprob: -7.848426818847656
    9. '<|end|>' → logprob: -8.598426818847656
    10. '_else' → logprob: -8.973426818847656

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46446889638900757
    2. 'else' → logprob: -1.5894689559936523
    3. ' else' → logprob: -2.2144689559936523
    4. '<|end|>' → logprob: -3.4644689559936523
    5. 'elif' → logprob: -3.8394689559936523
    6. ' elif' → logprob: -6.214468955993652
    7. '<|end|>' → logprob: -6.339468955993652
    8. '	else' → logprob: -7.714468955993652
    9. '	elif' → logprob: -8.214468955993652
    10. '    
' → logprob: -8.589468955993652

Token 42: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2595140039920807
    2. 'elif' (adapté à ' elif') → logprob: -1.8845139741897583
    3. ' else' → logprob: -2.759514093399048
    4. '   ' → logprob: -5.259513854980469
    5. '<|end|>' → logprob: -5.259513854980469
    6. ' elif' → logprob: -6.134513854980469
    7. '<|end|>' → logprob: -8.009513854980469
    8. '	elif' → logprob: -9.009513854980469
    9. '	else' → logprob: -9.259513854980469
    10. '.' → logprob: -10.009513854980469

Token 43: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.03959712013602257
    2. ' ' → logprob: -3.6645970344543457
    3. 'w' → logprob: -4.414597034454346
    4. '10' → logprob: -7.539597034454346
    5. '20' → logprob: -9.039597511291504
    6. '18' → logprob: -9.789597511291504
    7. '5' → logprob: -10.414597511291504
    8. '0' → logprob: -10.414597511291504
    9. '30' → logprob: -10.414597511291504
    10. '7' → logprob: -10.539597511291504

Token 44: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08078824728727341
    2. ' >' → logprob: -2.8307881355285645
    3. '<=' → logprob: -4.2057881355285645
    4. '>' → logprob: -6.2057881355285645
    5. ' ' → logprob: -6.5807881355285645
    6. ' <' → logprob: -8.580788612365723
    7. '*' → logprob: -9.955788612365723
    8. '<' → logprob: -10.705788612365723
    9. ' *' → logprob: -10.955788612365723
    10. ' >=' → logprob: -11.205788612365723

Token 45: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.0893679857254028
    2. '30' → logprob: -1.2143679857254028
    3. ' ' → logprob: -1.5893679857254028
    4. '50' → logprob: -2.3393678665161133
    5. '60' → logprob: -3.7143678665161133
    6. '15' → logprob: -4.089367866516113
    7. '25' → logprob: -4.589367866516113
    8. '40' → logprob: -5.089367866516113
    9. '100' → logprob: -5.589367866516113
    10. '29' → logprob: -7.589367866516113

Token 46: '20' (ID: 455)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.36978679895401
    2. '20' → logprob: -1.7447867393493652
    3. '50' → logprob: -2.4947867393493652
    4. '25' → logprob: -4.369786739349365
    5. '40' → logprob: -4.619786739349365
    6. '60' → logprob: -4.744786739349365
    7. '15' → logprob: -4.869786739349365
    8. '100' → logprob: -5.494786739349365
    9. '29' → logprob: -6.369786739349365
    10. '35' → logprob: -6.744786739349365

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001775618875399232
    2. ':
' → logprob: -6.376775741577148
    3. '   ' → logprob: -9.751775741577148
    4. ' :' → logprob: -12.001775741577148
    5. '       ' → logprob: -12.626775741577148
    6. '):' → logprob: -14.001775741577148
    7. ':

' → logprob: -14.251775741577148
    8. ':
' → logprob: -14.251775741577148
    9. '    ' → logprob: -15.126775741577148
    10. '-' → logprob: -15.251775741577148

Token 48: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014004005119204521
    2. ':
' → logprob: -5.014004230499268
    3. '       ' → logprob: -5.264004230499268
    4. '   ' → logprob: -6.264004230499268
    5. '    ' → logprob: -9.88900375366211
    6. ' charge' → logprob: -10.26400375366211
    7. ' :' → logprob: -10.88900375366211
    8. 'charge' → logprob: -11.26400375366211
    9. '     ' → logprob: -11.63900375366211
    10. ' ' → logprob: -11.76400375366211

Token 49: ' charge' (ID: 8363)
  Prédit: ' charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' charge' → logprob: -0.32627978920936584
    2. 'charge' (adapté à ' charge') → logprob: -1.7012797594070435
    3. '   ' → logprob: -2.576279878616333
    4. '       ' → logprob: -4.701279640197754
    5. '+' → logprob: -5.951279640197754
    6. ' ' → logprob: -6.201279640197754
    7. '           ' → logprob: -6.951279640197754
    8. ':' → logprob: -7.076279640197754
    9. '    ' → logprob: -7.076279640197754
    10. ' +' → logprob: -7.513779640197754

Token 50: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.011329447850584984
    2. '+=' → logprob: -4.511329650878906
    3. ' =' → logprob: -8.511329650878906
    4. '=' → logprob: -9.886329650878906
    5. ' -=' → logprob: -11.386329650878906
    6. ' *=' → logprob: -12.136329650878906
    7. ' +' → logprob: -12.261329650878906
    8. '+' → logprob: -12.511329650878906
    9. ' ' → logprob: -13.011329650878906
    10. '+=(' → logprob: -13.886329650878906

Token 51: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6812442541122437
    2. '(w' → logprob: -1.0562442541122437
    3. ' ' → logprob: -3.181244373321533
    4. '(' → logprob: -3.681244373321533
    5. '50' → logprob: -4.181244373321533
    6. '10' → logprob: -4.431244373321533
    7. '100' → logprob: -5.056244373321533
    8. '5' → logprob: -5.181244373321533
    9. '20' → logprob: -5.431244373321533
    10. '15' → logprob: -5.681244373321533

Token 52: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4246273934841156
    2. ' w' → logprob: -1.299627423286438
    3. ' (' → logprob: -3.4246273040771484
    4. '(w' → logprob: -3.4246273040771484
    5. ' ' → logprob: -6.174627304077148
    6. '10' → logprob: -6.299627304077148
    7. '   ' → logprob: -6.299627304077148
    8. '5' → logprob: -7.674627304077148
    9. '    ' → logprob: -8.049627304077148
    10. '15' → logprob: -8.174627304077148

Token 53: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05555922910571098
    2. '-' → logprob: -2.9305591583251953
    3. ' ' → logprob: -7.430559158325195
    4. '   ' → logprob: -9.805559158325195
    5. ')' → logprob: -11.305559158325195
    6. '    ' → logprob: -12.305559158325195
    7. '  ' → logprob: -12.305559158325195
    8. ' ' → logprob: -12.805559158325195
    9. '	' → logprob: -14.180559158325195
    10. ' )' → logprob: -14.680559158325195

Token 54: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012511172099038959
    2. ' ' → logprob: -9.00012493133545
    3. '11' → logprob: -14.81262493133545
    4. '1' → logprob: -14.81262493133545
    5. ')' → logprob: -15.93762493133545
    6. '   ' → logprob: -16.250125885009766
    7. '<|end|>' → logprob: -16.375125885009766
    8. '```' → logprob: -16.812625885009766
    9. '۱۰' → logprob: -16.875125885009766
    10. '20' → logprob: -17.000125885009766

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029096845537424088
    2. ')*' → logprob: -4.029097080230713
    3. ' )' → logprob: -4.529097080230713
    4. '*' → logprob: -10.529096603393555
    5. '0' → logprob: -10.654096603393555
    6. '   ' → logprob: -11.154096603393555
    7. ' ' → logprob: -11.654096603393555
    8. ' *' → logprob: -12.779096603393555
    9. '*)' → logprob: -12.904096603393555
    10. '    ' → logprob: -13.029096603393555

Token 56: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08230683207511902
    2. ' *' → logprob: -2.7073068618774414
    3. '20' → logprob: -5.832306861877441
    4. '50' → logprob: -6.207306861877441
    5. '30' → logprob: -6.832306861877441
    6. '60' → logprob: -7.332306861877441
    7. '10' → logprob: -7.332306861877441
    8. '0' → logprob: -7.332306861877441
    9. '40' → logprob: -7.457306861877441
    10. ' ' → logprob: -7.832306861877441

Token 57: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.1777981519699097
    2. ' ' → logprob: -2.177798271179199
    3. '80' → logprob: -2.802798271179199
    4. '50' → logprob: -3.052798271179199
    5. '90' → logprob: -3.052798271179199
    6. '60' → logprob: -3.302798271179199
    7. '8' → logprob: -3.427798271179199
    8. '75' → logprob: -3.552798271179199
    9. '10' → logprob: -3.802798271179199
    10. '105' → logprob: -3.802798271179199

Token 58: '125' (ID: 10676)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -1.4843462705612183
    2. '50' → logprob: -2.234346389770508
    3. '75' → logprob: -2.734346389770508
    4. '60' → logprob: -2.859346389770508
    5. '90' → logprob: -2.984346389770508
    6. '70' → logprob: -3.109346389770508
    7. '80' → logprob: -3.109346389770508
    8. '65' → logprob: -3.359346389770508
    9. '150' → logprob: -3.609346389770508
    10. '85' → logprob: -3.734346389770508

Token 59: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31463441252708435
    2. '<|end|>' → logprob: -1.4396344423294067
    3. '
' → logprob: -4.314634323120117
    4. '   ' → logprob: -4.439634323120117
    5. '<|end|>' → logprob: -6.314634323120117
    6. 'else' → logprob: -6.314634323120117
    7. ' else' → logprob: -7.189634323120117
    8. 'elif' → logprob: -7.314634323120117
    9. '+' → logprob: -7.814634323120117
    10. '    
' → logprob: -8.064634323120117

Token 60: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.1537706851959229
    2. 'else' → logprob: -1.2787706851959229
    3. '   ' → logprob: -1.6537706851959229
    4. '<|end|>' → logprob: -2.153770685195923
    5. ' else' → logprob: -2.778770685195923
    6. ' elif' → logprob: -4.028770446777344
    7. '
' → logprob: -5.528770446777344
    8. '	elif' → logprob: -5.528770446777344
    9. '<|end|>' → logprob: -5.778770446777344
    10. ')' → logprob: -6.278770446777344

Token 61: ' elif' (ID: 9497)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8562732934951782
    2. 'else' → logprob: -0.9812732934951782
    3. 'elif' (adapté à ' elif') → logprob: -2.1062731742858887
    4. '   ' → logprob: -2.9812731742858887
    5. ' elif' → logprob: -3.6062731742858887
    6. '	elif' → logprob: -8.106273651123047
    7. '	else' → logprob: -8.356273651123047
    8. '\n' → logprob: -9.106273651123047
    9. ')' → logprob: -10.231273651123047
    10. ' ' → logprob: -10.356273651123047

Token 62: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0054056961089372635
    2. 'w' → logprob: -5.255405902862549
    3. ' ' → logprob: -9.13040542602539
    4. '20' → logprob: -10.38040542602539
    5. ' ' → logprob: -11.88040542602539
    6. '30' → logprob: -12.25540542602539
    7. '24' → logprob: -12.63040542602539
    8. '25' → logprob: -12.75540542602539
    9. '22' → logprob: -13.38040542602539
    10. '28' → logprob: -13.63040542602539

Token 63: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.12918616831302643
    2. ' >' → logprob: -2.3791861534118652
    3. '<=' → logprob: -3.8791861534118652
    4. '>' → logprob: -4.879186153411865
    5. ' ' → logprob: -8.254186630249023
    6. ' <' → logprob: -11.879186630249023
    7. '<' → logprob: -12.004186630249023
    8. ' ≤' → logprob: -12.629186630249023
    9. ' ' → logprob: -13.254186630249023
    10. ' >=' → logprob: -13.379186630249023

Token 64: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.7168939113616943
    2. '40' → logprob: -1.4668939113616943
    3. ' ' → logprob: -1.7168939113616943
    4. '50' → logprob: -2.3418939113616943
    5. '35' → logprob: -6.091894149780273
    6. '60' → logprob: -7.216894149780273
    7. '100' → logprob: -7.341894149780273
    8. '25' → logprob: -7.591894149780273
    9. '45' → logprob: -8.091894149780273
    10. '70' → logprob: -9.529394149780273

Token 65: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.3226732313632965
    2. '40' → logprob: -1.9476732015609741
    3. '50' → logprob: -2.0726733207702637
    4. '35' → logprob: -5.822673320770264
    5. '25' → logprob: -7.072673320770264
    6. ' ' → logprob: -7.197673320770264
    7. '60' → logprob: -7.322673320770264
    8. '100' → logprob: -7.447673320770264
    9. '45' → logprob: -8.072672843933105
    10. '70' → logprob: -8.822672843933105

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0621119923889637
    2. ':
' → logprob: -2.8121120929718018
    3. ':

' → logprob: -9.937111854553223
    4. '   ' → logprob: -10.187111854553223
    5. '       ' → logprob: -10.812111854553223
    6. ':
' → logprob: -11.187111854553223
    7. '):
' → logprob: -11.687111854553223
    8. '<|end|>' → logprob: -12.187111854553223
    9. '):' → logprob: -13.687111854553223
    10. ' :
' → logprob: -13.937111854553223

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045845821499824524
    2. ':' → logprob: -3.5458457469940186
    3. '   ' → logprob: -4.795845985412598
    4. ':
' → logprob: -5.295845985412598
    5. ' +' → logprob: -7.670845985412598
    6. 'charge' → logprob: -8.045845985412598
    7. '+' → logprob: -8.545845985412598
    8. '	' → logprob: -8.670845985412598
    9. '        
' → logprob: -8.795845985412598
    10. '
' → logprob: -8.795845985412598

Token 68: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' (adapté à ' charge') → logprob: -0.13588279485702515
    2. ' charge' → logprob: -2.13588285446167
    3. '   ' → logprob: -5.63588285446167
    4. '
' → logprob: -5.88588285446167
    5. '       ' → logprob: -6.38588285446167
    6. ' ' → logprob: -7.38588285446167
    7. '           ' → logprob: -10.135882377624512
    8. '  ' → logprob: -10.260882377624512
    9. '_charge' → logprob: -10.698382377624512
    10. '    ' → logprob: -11.010882377624512

Token 69: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01818576641380787
    2. '+=' → logprob: -4.018185615539551
    3. '+=(' → logprob: -11.26818561553955
    4. ' ' → logprob: -12.01818561553955
    5. '+' → logprob: -12.14318561553955
    6. ' +' → logprob: -12.51818561553955
    7. '=' → logprob: -13.26818561553955
    8. ' =' → logprob: -13.39318561553955
    9. ']+=' → logprob: -13.51818561553955
    10. '	' → logprob: -13.64318561553955

Token 70: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8790486454963684
    2. '10' → logprob: -1.1290485858917236
    3. '125' → logprob: -2.1290485858917236
    4. ' ' → logprob: -2.3790485858917236
    5. ' (' → logprob: -3.1290485858917236
    6. '15' → logprob: -6.129048824310303
    7. '   ' → logprob: -6.754048824310303
    8. '250' → logprob: -7.004048824310303
    9. '115' → logprob: -7.129048824310303
    10. '20' → logprob: -8.379048347473145

Token 71: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7143276333808899
    2. '(' → logprob: -0.8393276333808899
    3. '125' → logprob: -2.714327573776245
    4. ' ' → logprob: -5.089327812194824
    5. ' (' → logprob: -5.339327812194824
    6. '   ' → logprob: -8.214327812194824
    7. '250' → logprob: -8.339327812194824
    8. '15' → logprob: -8.714327812194824
    9. '100' → logprob: -9.089327812194824
    10. '20' → logprob: -9.464327812194824

Token 72: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6339921355247498
    2. ' *' → logprob: -0.7589921355247498
    3. ' ' → logprob: -7.2589921951293945
    4. '0' → logprob: -8.133992195129395
    5. '   ' → logprob: -8.258992195129395
    6. '    ' → logprob: -10.508992195129395
    7. '125' → logprob: -10.633992195129395
    8. '5' → logprob: -11.133992195129395
    9. ' ' → logprob: -11.258992195129395
    10. '  ' → logprob: -11.258992195129395

Token 73: ' ' (ID: 220)
  Prédit: '125'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '125' → logprob: -0.026360562071204185
    2. ' ' → logprob: -3.651360511779785
    3. '1' → logprob: -10.401360511779785
    4. '12' → logprob: -11.463860511779785
    5. '135' → logprob: -12.088860511779785
    6. '126' → logprob: -12.651360511779785
    7. '   ' → logprob: -13.463860511779785
    8. '175' → logprob: -13.963860511779785
    9. '  ' → logprob: -14.026360511779785
    10. '120' → logprob: -14.276360511779785

Token 74: '125' (ID: 10676)
  Prédit: '125'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '125' → logprob: -5.7530574849806726e-05
    2. ' ' → logprob: -10.500057220458984
    3. '12' → logprob: -11.875057220458984
    4. '1' → logprob: -11.875057220458984
    5. '100' → logprob: -13.000057220458984
    6. '115' → logprob: -13.125057220458984
    7. '150' → logprob: -13.437557220458984
    8. '120' → logprob: -13.437557220458984
    9. '135' → logprob: -13.500057220458984
    10. '250' → logprob: -13.812557220458984

Token 75: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.015728501603007317
    2. '+' → logprob: -4.26572847366333
    3. '   ' → logprob: -6.64072847366333
    4. ' ' → logprob: -9.765728950500488
    5. ' +
' → logprob: -9.765728950500488
    6. ' +(' → logprob: -10.015728950500488
    7. '+(' → logprob: -10.140728950500488
    8. '       ' → logprob: -10.515728950500488
    9. '+
' → logprob: -11.515728950500488
    10. '<|end|>' → logprob: -12.015728950500488

Token 76: '       ' (ID: 309)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.24270237982273102
    2. '+' → logprob: -1.8677023649215698
    3. '   ' → logprob: -2.8677024841308594
    4. ' +
' → logprob: -6.492702484130859
    5. '+
' → logprob: -6.617702484130859
    6. '<|end|>' → logprob: -7.117702484130859
    7. '       ' → logprob: -8.61770248413086
    8. '+(' → logprob: -9.49270248413086
    9. ')' → logprob: -9.74270248413086
    10. '```' → logprob: -10.36770248413086

Token 77: ' charge' (ID: 8363)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.442862868309021
    2. ' +' → logprob: -1.067862868309021
    3. '+(' → logprob: -4.3178629875183105
    4. ' +(' → logprob: -7.8178629875183105
    5. '(' → logprob: -9.317862510681152
    6. '```' → logprob: -9.442862510681152
    7. '+
' → logprob: -9.942862510681152
    8. '   ' → logprob: -10.817862510681152
    9. '+=(' → logprob: -11.192862510681152
    10. ' (' → logprob: -11.317862510681152

Token 78: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.012658325023949146
    2. '+=' → logprob: -4.38765811920166
    3. '+' → logprob: -9.76265811920166
    4. ' +' → logprob: -10.01265811920166
    5. ' ' → logprob: -10.88765811920166
    6. '   ' → logprob: -11.88765811920166
    7. '    ' → logprob: -12.13765811920166
    8. '+=(' → logprob: -12.13765811920166
    9. '```' → logprob: -12.88765811920166
    10. '  ' → logprob: -13.38765811920166

Token 79: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10042145848274231
    2. '(w' → logprob: -2.35042142868042
    3. ' ' → logprob: -9.225421905517578
    4. '(' → logprob: -9.350421905517578
    5. '   ' → logprob: -11.475421905517578
    6. '    ' → logprob: -12.350421905517578
    7. '(W' → logprob: -12.475421905517578
    8. '  ' → logprob: -12.850421905517578
    9. '        ' → logprob: -13.850421905517578
    10. '((' → logprob: -14.475421905517578

Token 80: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.004092647228389978
    2. ' w' → logprob: -5.504092693328857
    3. '(w' → logprob: -11.5040922164917
    4. '   ' → logprob: -13.7540922164917
    5. ' (' → logprob: -13.8790922164917
    6. '	w' → logprob: -14.1290922164917
    7. ' ' → logprob: -14.2540922164917
    8. '    ' → logprob: -15.0040922164917
    9. '30' → logprob: -16.379093170166016
    10. '[w' → logprob: -16.754093170166016

Token 81: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011114437133073807
    2. '-' → logprob: -4.511114597320557
    3. ' ' → logprob: -9.636114120483398
    4. '   ' → logprob: -14.761114120483398
    5. '  ' → logprob: -15.386114120483398
    6. ' ' → logprob: -15.511114120483398
    7. '<|end|>' → logprob: -16.1361141204834
    8. '30' → logprob: -16.5111141204834
    9. '	' → logprob: -16.8861141204834
    10. ')' → logprob: -17.0736141204834

Token 82: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -2.8206473871250637e-05
    2. ' ' → logprob: -10.500028610229492
    3. '2' → logprob: -15.375028610229492
    4. '   ' → logprob: -15.562528610229492
    5. '30' → logprob: -16.437528610229492
    6. '>' → logprob: -17.375028610229492
    7. '  ' → logprob: -17.500028610229492
    8. '২০' → logprob: -17.625028610229492
    9. '２０' → logprob: -17.625028610229492
    10. '۲۰' → logprob: -17.750028610229492

Token 83: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005203855689615011
    2. ' )' → logprob: -8.000520706176758
    3. ')*' → logprob: -8.625520706176758
    4. '*)' → logprob: -13.375520706176758
    5. '*' → logprob: -14.375520706176758
    6. ' ' → logprob: -14.500520706176758
    7. '）' → logprob: -14.875520706176758
    8. '   ' → logprob: -14.875520706176758
    9. '')' → logprob: -15.250520706176758
    10. '0' → logprob: -15.250520706176758

Token 84: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12816652655601501
    2. ' *' → logprob: -2.128166437149048
    3. '50' → logprob: -8.003166198730469
    4. ' ' → logprob: -8.878166198730469
    5. '25' → logprob: -9.128166198730469
    6. '20' → logprob: -9.503166198730469
    7. '100' → logprob: -9.753166198730469
    8. '0' → logprob: -9.878166198730469
    9. '125' → logprob: -9.878166198730469
    10. '60' → logprob: -10.003166198730469

Token 85: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6718837022781372
    2. '100' → logprob: -1.6718837022781372
    3. '105' → logprob: -2.1718835830688477
    4. '175' → logprob: -2.7968835830688477
    5. '110' → logprob: -3.2968835830688477
    6. '150' → logprob: -3.5468835830688477
    7. '165' → logprob: -4.171883583068848
    8. '160' → logprob: -4.921883583068848
    9. '85' → logprob: -5.046883583068848
    10. '115' → logprob: -5.171883583068848

Token 86: '140' (ID: 10165)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6658890247344971
    2. '105' → logprob: -1.665889024734497
    3. '110' → logprob: -2.665889024734497
    4. '175' → logprob: -2.790889024734497
    5. '85' → logprob: -3.290889024734497
    6. '150' → logprob: -3.915889024734497
    7. '75' → logprob: -4.165888786315918
    8. '115' → logprob: -4.290888786315918
    9. '165' → logprob: -4.790888786315918
    10. '135' → logprob: -4.790888786315918

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00618947995826602
    2. 'else' → logprob: -5.756189346313477
    3. '<|end|>' → logprob: -6.131189346313477
    4. ' else' → logprob: -7.631189346313477
    5. 'elif' → logprob: -8.881189346313477
    6. '```' → logprob: -9.256189346313477
    7. '<|end|>' → logprob: -10.006189346313477
    8. '
' → logprob: -10.756189346313477
    9. '	else' → logprob: -10.881189346313477
    10. '  ' → logprob: -11.756189346313477

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4000142812728882
    2. 'else' → logprob: -1.1500142812728882
    3. 'elif' → logprob: -4.525014400482178
    4. ' else' → logprob: -6.150014400482178
    5. '	else' → logprob: -10.52501392364502
    6. ' elif' → logprob: -10.52501392364502
    7. '<|end|>' → logprob: -11.15001392364502
    8. '```' → logprob: -11.77501392364502
    9. '	elif' → logprob: -12.02501392364502
    10. '...' → logprob: -13.27501392364502

Token 89: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2618441581726074
    2. '   ' → logprob: -1.5118441581726074
    3. 'elif' → logprob: -5.011844158172607
    4. ' else' → logprob: -5.761844158172607
    5. '	else' → logprob: -10.761844635009766
    6. '```' → logprob: -11.386844635009766
    7. ' elif' → logprob: -11.761844635009766
    8. '<|end|>' → logprob: -11.886844635009766
    9. '...' → logprob: -12.511844635009766
    10. 'print' → logprob: -12.886844635009766

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029782891273498535
    2. ':
' → logprob: -3.529782772064209
    3. '   ' → logprob: -11.029783248901367
    4. ' :' → logprob: -11.904783248901367
    5. ' :
' → logprob: -12.779783248901367
    6. '{' → logprob: -12.904783248901367
    7. ':

' → logprob: -13.404783248901367
    8. ':
' → logprob: -13.779783248901367
    9. '       ' → logprob: -14.904783248901367
    10. '```' → logprob: -14.904783248901367

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8454561233520508
    2. 'charge' → logprob: -1.2204561233520508
    3. '   ' → logprob: -1.4704561233520508
    4. ' charge' → logprob: -3.095456123352051
    5. ' ' → logprob: -8.72045612335205
    6. '     ' → logprob: -9.34545612335205
    7. '    ' → logprob: -9.59545612335205
    8. '      ' → logprob: -10.34545612335205
    9. '  ' → logprob: -10.47045612335205
    10. '```' → logprob: -10.84545612335205

Token 92: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' (adapté à ' charge') → logprob: -0.16062518954277039
    2. ' charge' → logprob: -1.9106252193450928
    3. '   ' → logprob: -7.910624980926514
    4. ' ' → logprob: -11.160625457763672
    5. 'base' → logprob: -13.035625457763672
    6. '  ' → logprob: -13.285625457763672
    7. '       ' → logprob: -13.285625457763672
    8. '
' → logprob: -13.285625457763672
    9. 'ch' → logprob: -13.660625457763672
    10. ' base' → logprob: -13.785625457763672

Token 93: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2014322429895401
    2. '+=' → logprob: -1.701432228088379
    3. '+' → logprob: -11.326432228088379
    4. '+=(' → logprob: -12.451432228088379
    5. '=' → logprob: -13.326432228088379
    6. ' =' → logprob: -14.826432228088379
    7. ' +' → logprob: -15.201432228088379
    8. ' ' → logprob: -15.326432228088379
    9. ']+=' → logprob: -15.826432228088379
    10. '+="' → logprob: -16.201433181762695

Token 94: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26033931970596313
    2. '10' → logprob: -1.8853392601013184
    3. '20' → logprob: -2.6353392601013184
    4. '15' → logprob: -5.510339260101318
    5. '30' → logprob: -7.135339260101318
    6. '(' → logprob: -8.135339736938477
    7. '100' → logprob: -8.760339736938477
    8. '150' → logprob: -9.572839736938477
    9. '200' → logprob: -9.885339736938477
    10. '25' → logprob: -10.010339736938477

Token 95: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009223000961355865
    2. '100' → logprob: -7.750922203063965
    3. ' ' → logprob: -9.063422203063965
    4. '(' → logprob: -9.188422203063965
    5. '20' → logprob: -9.688422203063965
    6. '15' → logprob: -9.938422203063965
    7. '115' → logprob: -11.000922203063965
    8. '125' → logprob: -11.063422203063965
    9. '30' → logprob: -11.063422203063965
    10. '50' → logprob: -11.813422203063965

Token 96: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3485448956489563
    2. '*' → logprob: -1.2235448360443115
    3. '00' → logprob: -10.22354507446289
    4. '0' → logprob: -11.22354507446289
    5. ' ' → logprob: -11.47354507446289
    6. ' ' → logprob: -12.09854507446289
    7. '50' → logprob: -12.22354507446289
    8. '000' → logprob: -12.47354507446289
    9. '125' → logprob: -12.59854507446289
    10. '**' → logprob: -12.59854507446289

Token 97: ' ' (ID: 220)
  Prédit: '125'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '125' → logprob: -0.03367336094379425
    2. ' ' → logprob: -3.4086732864379883
    3. '135' → logprob: -12.221173286437988
    4. '140' → logprob: -12.346173286437988
    5. '120' → logprob: -12.346173286437988
    6. '126' → logprob: -12.783673286437988
    7. '130' → logprob: -13.408673286437988
    8. '1' → logprob: -13.596173286437988
    9. '150' → logprob: -13.846173286437988
    10. '   ' → logprob: -13.971173286437988

Token 98: '125' (ID: 10676)
  Prédit: '125'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '125' → logprob: -1.9862216504407115e-05
    2. ' ' → logprob: -11.000020027160645
    3. '140' → logprob: -14.125020027160645
    4. '120' → logprob: -14.375020027160645
    5. '135' → logprob: -14.812520027160645
    6. '126' → logprob: -15.187520027160645
    7. '1' → logprob: -15.312520027160645
    8. '130' → logprob: -15.562520027160645
    9. '150' → logprob: -15.687520027160645
    10. '115' → logprob: -16.000019073486328

Token 99: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6865243911743164
    2. '
' → logprob: -1.3115243911743164
    3. '   ' → logprob: -1.5615243911743164
    4. 'charge' → logprob: -4.311524391174316
    5. '\n' → logprob: -6.561524391174316
    6. '    
' → logprob: -6.936524391174316
    7. '```' → logprob: -8.061524391174316
    8. ' charge' → logprob: -8.061524391174316
    9. '``' → logprob: -8.311524391174316
    10. '        
' → logprob: -8.686524391174316

Token 100: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23442833125591278
    2. '       ' → logprob: -2.1094284057617188
    3. 'charge' → logprob: -2.9844284057617188
    4. '
' → logprob: -3.4844284057617188
    5. '    
' → logprob: -6.234428405761719
    6. '```' → logprob: -6.609428405761719
    7. '``' → logprob: -6.609428405761719
    8. ' charge' → logprob: -7.234428405761719
    9. '\
' → logprob: -8.234428405761719
    10. '\n' → logprob: -8.484428405761719

Token 101: ' charge' (ID: 8363)
  Prédit: ' charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' charge' → logprob: -0.2530423700809479
    2. 'charge' (adapté à ' charge') → logprob: -1.5030423402786255
    3. ' ' → logprob: -7.253042221069336
    4. '   ' → logprob: -8.253042221069336
    5. '140' → logprob: -10.378042221069336
    6. '125' → logprob: -11.128042221069336
    7. '40' → logprob: -11.253042221069336
    8. '       ' → logprob: -11.503042221069336
    9. '```' → logprob: -11.628042221069336
    10. '10' → logprob: -11.753042221069336

Token 102: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0892646387219429
    2. '+=' → logprob: -2.7142646312713623
    3. '+' → logprob: -4.214264869689941
    4. ' +' → logprob: -5.464264869689941
    5. ' ' → logprob: -9.589264869689941
    6. '+="' → logprob: -11.214264869689941
    7. '```' → logprob: -11.839264869689941
    8. '+='' → logprob: -11.964264869689941
    9. '   ' → logprob: -12.214264869689941
    10. '`' → logprob: -12.714264869689941

Token 103: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3486535847187042
    2. ' ' → logprob: -1.2236535549163818
    3. '100' → logprob: -9.098653793334961
    4. '(' → logprob: -9.473653793334961
    5. '140' → logprob: -11.973653793334961
    6. '20' → logprob: -12.348653793334961
    7. ' (' → logprob: -12.723653793334961
    8. '110' → logprob: -14.348653793334961
    9. '104' → logprob: -14.598653793334961
    10. '```' → logprob: -14.661153793334961

Token 104: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.05373365804553032
    2. ' ' → logprob: -3.4287335872650146
    3. '140' → logprob: -4.178733825683594
    4. '100' → logprob: -5.928733825683594
    5. '(' → logprob: -6.303733825683594
    6. '20' → logprob: -11.303733825683594
    7. '14' → logprob: -11.678733825683594
    8. ' (' → logprob: -11.866233825683594
    9. '110' → logprob: -11.866233825683594
    10. '```' → logprob: -11.991233825683594

Token 105: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004100604448467493
    2. '*' → logprob: -5.504100799560547
    3. ' ' → logprob: -11.379100799560547
    4. ' ' → logprob: -11.629100799560547
    5. '	' → logprob: -15.004100799560547
    6. '`' → logprob: -15.129100799560547
    7. ' **' → logprob: -15.254100799560547
    8. '**' → logprob: -15.629100799560547
    9. '0' → logprob: -15.754100799560547
    10. ''' → logprob: -15.754100799560547

Token 106: ' ' (ID: 220)
  Prédit: '140'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '140' → logprob: -0.06994176656007767
    2. ' ' → logprob: -2.694941759109497
    3. ' ' → logprob: -14.007441520690918
    4. '130' → logprob: -14.132441520690918
    5. '150' → logprob: -14.632441520690918
    6. '```' → logprob: -14.694941520690918
    7. '145' → logprob: -14.944941520690918
    8. '1' → logprob: -15.069941520690918
    9. '14' → logprob: -15.444941520690918
    10. '160' → logprob: -15.507441520690918

Token 107: '140' (ID: 10165)
  Prédit: '140'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '140' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -15.750008583068848
    4. '1' → logprob: -16.68750762939453
    5. '14' → logprob: -16.75000762939453
    6. '130' → logprob: -16.93750762939453
    7. '150' → logprob: -18.37500762939453
    8. '145' → logprob: -18.56250762939453
    9. '141' → logprob: -18.68750762939453
    10. '135' → logprob: -18.81250762939453

Token 108: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11115462332963943
    2. 'charge' → logprob: -2.486154556274414
    3. '   ' → logprob: -4.236154556274414
    4. '
' → logprob: -5.361154556274414
    5. ' charge' → logprob: -6.236154556274414
    6. '```' → logprob: -8.111154556274414
    7. '+' → logprob: -8.861154556274414
    8. '+
' → logprob: -8.986154556274414
    9. ' +' → logprob: -9.736154556274414
    10. '    
' → logprob: -9.861154556274414

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11704254150390625
    2. 'charge' → logprob: -2.7420425415039062
    3. '   ' → logprob: -3.1170425415039062
    4. ' charge' → logprob: -6.992042541503906
    5. '
' → logprob: -8.117042541503906
    6. ' +' → logprob: -8.867042541503906
    7. '+' → logprob: -9.617042541503906
    8. '```' → logprob: -9.617042541503906
    9. '    
' → logprob: -10.117042541503906
    10. '           ' → logprob: -10.117042541503906

Token 110: ' charge' (ID: 8363)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0011228336952626705
    2. ' (' → logprob: -7.126122951507568
    3. '(' → logprob: -8.75112247467041
    4. 'charge' (adapté à ' charge') → logprob: -9.75112247467041
    5. '   ' → logprob: -10.75112247467041
    6. '60' → logprob: -11.37612247467041
    7. '140' → logprob: -11.75112247467041
    8. '130' → logprob: -11.87612247467041
    9. '((' → logprob: -12.00112247467041
    10. '125' → logprob: -12.25112247467041

Token 111: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25221240520477295
    2. ' +=' → logprob: -1.502212405204773
    3. '+' → logprob: -8.252212524414062
    4. '+=(' → logprob: -12.252212524414062
    5. '+="' → logprob: -12.377212524414062
    6. '```' → logprob: -12.627212524414062
    7. '   ' → logprob: -13.127212524414062
    8. '+='' → logprob: -13.127212524414062
    9. ']+=' → logprob: -13.377212524414062
    10. '=' → logprob: -13.377212524414062

Token 112: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5761817693710327
    2. '(w' → logprob: -0.8261817693710327
    3. '(' → logprob: -8.576181411743164
    4. ' ' → logprob: -10.076181411743164
    5. '40' → logprob: -13.451181411743164
    6. '140' → logprob: -13.701181411743164
    7. '   ' → logprob: -14.263681411743164
    8. '((' → logprob: -14.576181411743164
    9. '(W' → logprob: -14.576181411743164
    10. ' ((' → logprob: -14.763681411743164

Token 113: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.020545389503240585
    2. ' w' → logprob: -3.895545482635498
    3. '(w' → logprob: -13.14554500579834
    4. '   ' → logprob: -14.52054500579834
    5. '	w' → logprob: -14.77054500579834
    6. ' ' → logprob: -14.89554500579834
    7. ' (' → logprob: -16.270545959472656
    8. '[w' → logprob: -17.270545959472656
    9. ''w' → logprob: -17.770545959472656
    10. '    ' → logprob: -17.770545959472656

Token 114: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28130999207496643
    2. '-' → logprob: -1.406309962272644
    3. ' ' → logprob: -8.781310081481934
    4. '30' → logprob: -12.906310081481934
    5. ')' → logprob: -13.406310081481934
    6. '   ' → logprob: -14.281310081481934
    7. '  ' → logprob: -14.656310081481934
    8. '40' → logprob: -15.031310081481934
    9. '>' → logprob: -15.781310081481934
    10. '20' → logprob: -15.906310081481934

Token 115: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -8.64970643306151e-05
    2. ' ' → logprob: -9.375086784362793
    3. '۳۰' → logprob: -14.750086784362793
    4. '3' → logprob: -14.875086784362793
    5. '３０' → logprob: -15.375086784362793
    6. '300' → logprob: -15.937586784362793
    7. '३०' → logprob: -16.125085830688477
    8. '৩০' → logprob: -16.625085830688477
    9. '40' → logprob: -17.000085830688477
    10. '>' → logprob: -17.062585830688477

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004734486574307084
    2. ' )' → logprob: -7.875473499298096
    3. ')*' → logprob: -9.375473022460938
    4. '*' → logprob: -12.750473022460938
    5. '   ' → logprob: -12.875473022460938
    6. ' ' → logprob: -13.750473022460938
    7. '*)' → logprob: -14.375473022460938
    8. '	' → logprob: -15.250473022460938
    9. '）' → logprob: -15.500473022460938
    10. '")' → logprob: -15.500473022460938

Token 117: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.010620702058076859
    2. ' *' → logprob: -4.635620594024658
    3. '60' → logprob: -7.885620594024658
    4. ' ' → logprob: -9.385621070861816
    5. '50' → logprob: -9.760621070861816
    6. '70' → logprob: -10.135621070861816
    7. '80' → logprob: -10.510621070861816
    8. '100' → logprob: -10.635621070861816
    9. '40' → logprob: -10.760621070861816
    10. '20' → logprob: -10.885621070861816

Token 118: ' ' (ID: 220)
  Prédit: '165'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '165' → logprob: -0.8498183488845825
    2. '160' → logprob: -1.4748183488845825
    3. '155' → logprob: -1.4748183488845825
    4. '175' → logprob: -2.974818229675293
    5. '170' → logprob: -3.849818229675293
    6. ' ' → logprob: -4.224818229675293
    7. '150' → logprob: -4.974818229675293
    8. '180' → logprob: -5.099818229675293
    9. '200' → logprob: -5.474818229675293
    10. '185' → logprob: -5.599818229675293

Token 119: '160' (ID: 9444)
  Prédit: '165'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '165' → logprob: -1.1198501586914062
    2. '155' → logprob: -1.1198501586914062
    3. '160' → logprob: -1.6198501586914062
    4. '175' → logprob: -2.6198501586914062
    5. '170' → logprob: -3.3698501586914062
    6. '150' → logprob: -4.244850158691406
    7. '180' → logprob: -4.869850158691406
    8. '185' → logprob: -5.244850158691406
    9. '200' → logprob: -5.494850158691406
    10. '145' → logprob: -6.244850158691406

Token 120: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7122791409492493
    2. 'print' → logprob: -0.7122791409492493
    3. '    
' → logprob: -4.712279319763184
    4. '
' → logprob: -5.087279319763184
    5. ' print' → logprob: -5.962279319763184
    6. '<|end|>' → logprob: -7.837279319763184
    7. '```' → logprob: -8.087279319763184
    8. '  
' → logprob: -8.712279319763184
    9. '        
' → logprob: -9.712279319763184
    10. '\n' → logprob: -9.837279319763184

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7018614411354065
    2. 'print' → logprob: -0.7018614411354065
    3. ' print' → logprob: -5.576861381530762
    4. '```' → logprob: -5.951861381530762
    5. '
' → logprob: -6.201861381530762
    6. '    
' → logprob: -8.576861381530762
    7. '\n' → logprob: -10.576861381530762
    8. '``' → logprob: -10.701861381530762
    9. '	print' → logprob: -11.701861381530762
    10. '  
' → logprob: -12.576861381530762

Token 122: ' diff' (ID: 8868)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05795016512274742
    2. '   ' → logprob: -3.307950258255005
    3. ' print' → logprob: -3.932950258255005
    4. '```' → logprob: -9.057950019836426
    5. '    
' → logprob: -12.682950019836426
    6. '``' → logprob: -13.307950019836426
    7. '
' → logprob: -13.307950019836426
    8. '	print' → logprob: -13.432950019836426
    9. '`' → logprob: -14.682950019836426
    10. ' 
' → logprob: -15.682950019836426

Token 123: ' =' (ID: 314)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0810805931687355
    2. ' =' → logprob: -3.081080675125122
    3. '=' → logprob: -3.456080675125122
    4. 'ference' → logprob: -8.331080436706543
    5. 'rence' → logprob: -9.706080436706543
    6. 'ere' → logprob: -10.706080436706543
    7. ' ' → logprob: -11.456080436706543
    8. '_' → logprob: -11.706080436706543
    9. 'fer' → logprob: -12.206080436706543
    10. 'eren' → logprob: -12.206080436706543

Token 124: ' ' (ID: 220)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.1868181675672531
    2. 'abs' → logprob: -2.3118181228637695
    3. ' charge' → logprob: -2.9368181228637695
    4. 'w' → logprob: -4.5618181228637695
    5. ' abs' → logprob: -5.5618181228637695
    6. ' w' → logprob: -6.8118181228637695
    7. 'base' → logprob: -7.5618181228637695
    8. 'int' → logprob: -7.6868181228637695
    9. '   ' → logprob: -8.31181812286377
    10. 'max' → logprob: -8.56181812286377

Token 125: '428' (ID: 36950)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.07142815738916397
    2. 'w' → logprob: -3.196428060531616
    3. 'abs' → logprob: -3.821428060531616
    4. ' charge' → logprob: -5.821428298950195
    5. 'base' → logprob: -7.071428298950195
    6. 'int' → logprob: -7.821428298950195
    7. 'max' → logprob: -8.321428298950195
    8. ' w' → logprob: -8.571428298950195
    9. '100' → logprob: -8.821428298950195
    10. '   ' → logprob: -8.821428298950195

Token 126: '0' (ID: 15)
  Prédit: '-charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-charge' → logprob: -0.8601570129394531
    2. ' -' → logprob: -1.2351570129394531
    3. '-' → logprob: -1.3601570129394531
    4. 'charge' → logprob: -3.735157012939453
    5. '0' → logprob: -5.735157012939453
    6. ' charge' → logprob: -7.235157012939453
    7. '7' → logprob: -8.110157012939453
    8. '
' → logprob: -8.110157012939453
    9. ' =' → logprob: -8.860157012939453
    10. '   ' → logprob: -8.860157012939453

Token 127: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4040949046611786
    2. ' -' → logprob: -1.154094934463501
    3. '-charge' → logprob: -4.404094696044922
    4. '-
' → logprob: -5.904094696044922
    5. '   ' → logprob: -7.279094696044922
    6. ' -
' → logprob: -7.529094696044922
    7. '
' → logprob: -7.654094696044922
    8. 'charge' → logprob: -9.654094696044922
    9. '-if' → logprob: -10.279094696044922
    10. 'if' → logprob: -10.279094696044922

Token 128: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.02630401775240898
    2. ' charge' → logprob: -3.651304006576538
    3. '   ' → logprob: -13.651304244995117
    4. ' ' → logprob: -14.776304244995117
    5. 'charged' → logprob: -15.026304244995117
    6. 'charges' → logprob: -15.026304244995117
    7. 'int' → logprob: -15.776304244995117
    8. '_charge' → logprob: -15.776304244995117
    9. 'base' → logprob: -15.901304244995117
    10. 'charg' → logprob: -16.026304244995117

Token 129: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06112239882349968
    2. 'print' → logprob: -3.811122417449951
    3. '
' → logprob: -4.061122417449951
    4. 'if' → logprob: -4.311122417449951
    5. ' if' → logprob: -5.311122417449951
    6. ' print' → logprob: -7.186122417449951
    7. '<|end|>' → logprob: -8.061121940612793
    8. '    
' → logprob: -8.186121940612793
    9. '	if' → logprob: -9.811121940612793
    10. '	print' → logprob: -10.186121940612793

Token 130: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4920136332511902
    2. '   ' → logprob: -1.617013692855835
    3. '
' → logprob: -1.742013692855835
    4. 'if' → logprob: -4.867013454437256
    5. ' print' → logprob: -6.242013454437256
    6. '    
' → logprob: -6.242013454437256
    7. ' if' → logprob: -6.242013454437256
    8. '<|end|>' → logprob: -7.742013454437256
    9. '```' → logprob: -8.617013931274414
    10. ')' → logprob: -8.742013931274414

Token 131: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16002607345581055
    2. 'if' → logprob: -2.1600260734558105
    3. '   ' → logprob: -4.0350260734558105
    4. ' print' → logprob: -4.9100260734558105
    5. ' if' → logprob: -5.1600260734558105
    6. 'percent' → logprob: -7.2850260734558105
    7. 'percentage' → logprob: -8.035026550292969
    8. '
' → logprob: -8.910026550292969
    9. '    
' → logprob: -9.160026550292969
    10. 'discount' → logprob: -9.785026550292969

Token 132: '(diff' (ID: 84195)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5200387239456177
    2. '(diff' → logprob: -1.0200387239456177
    3. '("' → logprob: -3.520038604736328
    4. '('' → logprob: -5.145038604736328
    5. '(f' → logprob: -5.520038604736328
    6. '()' → logprob: -5.645038604736328
    7. '("("' → logprob: -7.145038604736328
    8. '(char' → logprob: -7.520038604736328
    9. '(abs' → logprob: -8.145038604736328
    10. 'diff' → logprob: -9.395038604736328

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ' )' → logprob: -12.750003814697266
    3. ')`' → logprob: -15.375003814697266
    4. '))' → logprob: -15.750003814697266
    5. ')
' → logprob: -17.000003814697266
    6. ')}' → logprob: -17.250003814697266
    7. '   ' → logprob: -17.750003814697266
    8. ')#' → logprob: -18.375003814697266
    9. '+' → logprob: -18.500003814697266
    10. ',)' → logprob: -18.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 131
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 114
Précision stricte (1ère position): 43.51%
Précision adaptée (1ère position): 46.56%
Précision (top 10): 87.02%
================================================================================
