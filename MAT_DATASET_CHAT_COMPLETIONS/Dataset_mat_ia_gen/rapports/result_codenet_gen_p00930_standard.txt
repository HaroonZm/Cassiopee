================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

class Node:
    __slots__ = ['l', 'r', 'tsum', 'minpre']
    def __init__(self, l=0, r=0, tsum=0, minpre=0):
        self.l = l
        self.r = r
        self.tsum = tsum
        self.minpre = minpre

def combine(a, b):
    c = Node()
    c.l = a.l
    c.r = b.r
    c.tsum = a.tsum + b.tsum
    c.minpre = min(a.minpre, a.tsum + b.minpre)
    return c

def build(a, v, i, j):
    if i == j:
        val = 1 if a[i-1] == '(' else -1
        v[i] = Node(i, j, val, min(0, val))
        return v[i]
    m = (i+j)//2
    left = build(a, v, i, m)
    right = build(a, v, m+1, j)
    v[i] = combine(left, right)
    v[i].l = i
    v[i].r = j
    return v[i]

def update(pos, v, i, j):
    if i == j:
        val = -v[i].tsum
        v[i] = Node(i, j, val, min(0, val))
        return v[i]
    m = (i+j)//2
    if pos <= m:
        left = update(pos, v, i, m)
        right = v[2*i+1]
    else:
        left = v[2*i]
        right = update(pos, v, m+1, j)
    v[i] = combine(left, right)
    v[i].l = i
    v[i].r = j
    return v[i]

def query(v, i, j, n):
    res = v[1]
    if res.tsum == 0 and res.minpre >=0:  # already balanced
        return -1
    # find leftmost position where flip corrects balance
    idx = 1
    l, r = 1, n
    pre = 0
    while l < r:
        m = (l+r)//2
        left = v[2*idx]
        right = v[2*idx+1]
        if left.minpre + pre < 0:
            idx = 2*idx
            r = m
        else:
            pre += left.tsum
            idx = 2*idx+1
            l = m+1
    return l

def main():
    n, q = map(int, input().split())
    s = list(input().rstrip())
    size = 1
    while size < n:
        size <<=1
    v = [Node() for _ in range(4*size)]
    build(s, v, 1, n)
    for _ in range(q):
        p = int(input())
        update(p, v, 1, n)
        pos = query(v, 1, n, n)
        print(pos)
        if pos != -1:
            update(pos, v, 1, n)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0016044863732531667
    2. 'ursive' → logprob: -6.7516045570373535
    3. 'ision' → logprob: -9.501604080200195
    4. 'urs' → logprob: -9.626604080200195
    5. 'set' → logprob: -9.751604080200195
    6. 'alc' → logprob: -10.376604080200195
    7. 'ursor' → logprob: -10.376604080200195
    8. '_limit' → logprob: -10.876604080200195
    9. 'ursively' → logprob: -11.001604080200195
    10. 'sys' → logprob: -11.126604080200195

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.48665714263916016
    2. 'limit' → logprob: -0.9866571426391602
    3. '_depth' → logprob: -4.48665714263916
    4. 'depth' → logprob: -7.48665714263916
    5. '_' → logprob: -8.36165714263916
    6. '_rate' → logprob: -9.98665714263916
    7. 'lim' → logprob: -10.23665714263916
    8. '(' → logprob: -10.36165714263916
    9. '_factor' → logprob: -10.48665714263916
    10. '_stack' → logprob: -10.61165714263916

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.157197043299675
    2. '000' → logprob: -2.2821969985961914
    3. '00' → logprob: -3.1571969985961914
    4. '4' → logprob: -7.407196998596191
    5. '6' → logprob: -8.782196998596191
    6. '**' → logprob: -9.907196998596191
    7. '2' → logprob: -11.282196998596191
    8. '5' → logprob: -11.657196998596191
    9. '```' → logprob: -11.907196998596191
    10. '3' → logprob: -12.032196998596191

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0016072244616225362
    2. '6' → logprob: -6.876607418060303
    3. '9' → logprob: -7.501607418060303
    4. '8' → logprob: -10.751606941223145
    5. ' ' → logprob: -15.126606941223145
    6. '(' → logprob: -15.126606941223145
    7. '```' → logprob: -16.75160789489746
    8. '3' → logprob: -17.75160789489746
    9. '4' → logprob: -18.12660789489746
    10. '5' → logprob: -18.37660789489746

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.37501335144043

Token 13: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4381265938282013
    2. '\' → logprob: -2.063126564025879
    3. '\n' → logprob: -2.188126564025879
    4. '' → logprob: -3.813126564025879
    5. ')' → logprob: -3.813126564025879
    6. '

' → logprob: -3.938126564025879
    7. '
' → logprob: -3.938126564025879
    8. '(' → logprob: -4.313126564025879
    9. '```' → logprob: -4.813126564025879
    10. '#' → logprob: -5.938126564025879

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.054386552423238754
    2. '()' → logprob: -3.054386615753174
    3. '.' → logprob: -6.054386615753174
    4. ')' → logprob: -6.554386615753174
    5. '().' → logprob: -7.679386615753174
    6. '('' → logprob: -7.929386615753174
    7. '40' → logprob: -8.304386138916016
    8. '```' → logprob: -8.554386138916016
    9. '("("' → logprob: -8.929386138916016
    10. ''' → logprob: -9.429386138916016

Token 15: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2551126778125763
    2. ' input' → logprob: -1.505112648010254
    3. ' sys' → logprob: -6.505112648010254
    4. 'sys' → logprob: -6.505112648010254
    5. 'lambda' → logprob: -10.255112648010254
    6. '=input' → logprob: -10.630112648010254
    7. ' lambda' → logprob: -10.755112648010254
    8. '```' → logprob: -10.880112648010254
    9. 'open' → logprob: -11.130112648010254
    10. 'int' → logprob: -11.380112648010254

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.269283652305603
    2. '.stdin' → logprob: -1.894283652305603
    3. '.readline' → logprob: -2.5192837715148926
    4. ' .' → logprob: -5.644283771514893
    5. '.stdout' → logprob: -7.269283771514893
    6. '.argv' → logprob: -8.144283294677734
    7. '.input' → logprob: -8.644283294677734
    8. '.stderr' → logprob: -10.019283294677734
    9. '.get' → logprob: -10.394283294677734
    10. '.​' → logprob: -10.394283294677734

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00881617795675993
    2. '.read' → logprob: -4.883816242218018
    3. '.' → logprob: -6.758816242218018
    4. '.buffer' → logprob: -10.25881576538086
    5. '.readlines' → logprob: -11.50881576538086
    6. '.Read' → logprob: -13.38381576538086
    7. 'read' → logprob: -14.00881576538086
    8. '.stdin' → logprob: -14.88381576538086
    9. ' .' → logprob: -15.38381576538086
    10. ').' → logprob: -16.00881576538086

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22604051232337952
    2. '(' → logprob: -2.2260406017303467
    3. 'def' → logprob: -3.6010406017303467
    4. '\n' → logprob: -3.9760406017303467
    5. '()
' → logprob: -4.226040363311768
    6. '()

' → logprob: -4.851040363311768
    7. '(
' → logprob: -5.101040363311768
    8. '```' → logprob: -5.351040363311768
    9. '
' → logprob: -5.726040363311768
    10. '()\' → logprob: -5.851040363311768

Token 19: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03820282593369484
    2. 'n' → logprob: -3.2882027626037598
    3. 'class' → logprob: -9.538203239440918
    4. 'N' → logprob: -10.538203239440918
    5. '```' → logprob: -10.913203239440918
    6. '\' → logprob: -11.038203239440918
    7. 'd' → logprob: -11.538203239440918
    8. 'for' → logprob: -11.788203239440918
    9. 'from' → logprob: -13.038203239440918
    10. '\n' → logprob: -13.163203239440918

Token 20: ' Node' (ID: 10882)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.6276494264602661
    2. ' Node' → logprob: -1.6276494264602661
    3. ' Trie' → logprob: -2.1276493072509766
    4. ' Tree' → logprob: -3.1276493072509766
    5. ' Segment' → logprob: -3.2526493072509766
    6. ' Binary' → logprob: -3.6276493072509766
    7. ' DFS' → logprob: -4.377649307250977
    8. ' ' → logprob: -4.377649307250977
    9. ' Union' → logprob: -5.627649307250977
    10. ' Factor' → logprob: -6.002649307250977

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006479830481112003
    2. '(' → logprob: -7.500648021697998
    3. ' :' → logprob: -9.50064754486084
    4. ':
' → logprob: -12.25064754486084
    5. '():' → logprob: -12.37564754486084
    6. '<|end|>' → logprob: -12.50064754486084
    7. '):' → logprob: -13.50064754486084
    8. '(object' → logprob: -13.50064754486084
    9. ':**' → logprob: -13.62564754486084
    10. '.' → logprob: -14.25064754486084

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2361370474100113
    2. ' def' → logprob: -1.61113703250885
    3. 'def' → logprob: -4.8611369132995605
    4. '    ' → logprob: -6.7361369132995605
    5. ' ' → logprob: -7.1111369132995605
    6. '	def' → logprob: -7.6111369132995605
    7. '  ' → logprob: -9.111137390136719
    8. ' pass' → logprob: -9.361137390136719
    9. '<|end|>' → logprob: -9.861137390136719
    10. ':' → logprob: -10.361137390136719

Token 23: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38688623905181885
    2. ' def' → logprob: -1.1368862390518188
    3. '   ' → logprob: -11.261886596679688
    4. '__' (adapté à ' __') → logprob: -13.886886596679688
    5. 'class' → logprob: -14.761886596679688
    6. ' __' → logprob: -15.011886596679688
    7. '	def' → logprob: -15.386886596679688
    8. ' ' → logprob: -15.636886596679688
    9. '```' → logprob: -15.886886596679688
    10. ':def' → logprob: -16.886886596679688

Token 24: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.023298820480704308
    2. 'slots' → logprob: -3.773298740386963
    3. '_init' → logprob: -10.398299217224121
    4. '_slots' → logprob: -11.648299217224121
    5. ' slots' → logprob: -12.273299217224121
    6. 'slot' → logprob: -12.523299217224121
    7. ' init' → logprob: -12.523299217224121
    8. 'int' → logprob: -13.398299217224121
    9. '_' → logprob: -15.148299217224121
    10. '_slot' → logprob: -16.398298263549805

Token 25: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012655500322580338
    2. '=' → logprob: -4.387655735015869
    3. '=['' → logprob: -9.137655258178711
    4. '__('' → logprob: -10.762655258178711
    5. ' =' → logprob: -12.012655258178711
    6. '___' → logprob: -12.262655258178711
    7. '=('' → logprob: -13.387655258178711
    8. '__.' → logprob: -13.512655258178711
    9. '__["' → logprob: -14.512655258178711
    10. '__[' → logprob: -14.512655258178711

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39312681555747986
    2. ' =' → logprob: -1.1431268453598022
    3. '=['' → logprob: -5.393126964569092
    4. '__' → logprob: -6.518126964569092
    5. ' =[' → logprob: -9.643126487731934
    6. '['' → logprob: -10.018126487731934
    7. '=('' → logprob: -10.268126487731934
    8. '_=' → logprob: -11.143126487731934
    9. '=[' → logprob: -11.268126487731934
    10. '[' → logprob: -11.518126487731934

Token 27: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.14732244610786438
    2. ''' → logprob: -3.272322416305542
    3. '('' → logprob: -3.647322416305542
    4. '['_' → logprob: -3.772322416305542
    5. '('__' → logprob: -4.147322654724121
    6. '('_' → logprob: -4.522322654724121
    7. ''s' → logprob: -4.772322654724121
    8. '["' → logprob: -5.147322654724121
    9. '[' → logprob: -5.647322654724121
    10. ' ' → logprob: -7.147322654724121

Token 28: 'l' (ID: 75)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5253177285194397
    2. 'value' → logprob: -1.150317668914795
    3. 'left' → logprob: -3.275317668914795
    4. 'key' → logprob: -3.775317668914795
    5. 'children' → logprob: -3.900317668914795
    6. 'data' → logprob: -4.650317668914795
    7. '_val' → logprob: -8.025318145751953
    8. 'name' → logprob: -8.150318145751953
    9. '_value' → logprob: -8.775318145751953
    10. '__' → logprob: -8.775318145751953

Token 29: '',' (ID: 787)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.39682382345199585
    2. '',' → logprob: -1.3968238830566406
    3. 'child' → logprob: -2.7718238830566406
    4. '','' → logprob: -4.396823883056641
    5. 'e' → logprob: -6.271823883056641
    6. '']' → logprob: -6.896823883056641
    7. 'ch' → logprob: -7.146823883056641
    8. 'ink' → logprob: -7.396823883056641
    9. 'azy' → logprob: -8.27182388305664
    10. 'ef' → logprob: -8.77182388305664

Token 30: ' '' (ID: 461)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10552063584327698
    2. ' r' → logprob: -2.355520725250244
    3. ''r' → logprob: -5.480520725250244
    4. ' '' → logprob: -6.980520725250244
    5. ''' → logprob: -9.605520248413086
    6. '   ' → logprob: -9.980520248413086
    7. ' ' → logprob: -10.730520248413086
    8. '	r' → logprob: -11.105520248413086
    9. ''value' → logprob: -11.105520248413086
    10. 'data' → logprob: -11.980520248413086

Token 31: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00011033779446734115
    2. 'val' → logprob: -9.750110626220703
    3. 'value' → logprob: -11.625110626220703
    4. ' r' → logprob: -11.750110626220703
    5. 'm' → logprob: -12.000110626220703
    6. 'data' → logprob: -12.500110626220703
    7. 'v' → logprob: -12.750110626220703
    8. 'x' → logprob: -12.875110626220703
    9. 'c' → logprob: -13.437610626220703
    10. 'key' → logprob: -13.500110626220703

Token 32: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.09322787821292877
    2. '']' → logprob: -2.4682278633117676
    3. ',' → logprob: -5.468227863311768
    4. ''' → logprob: -10.843228340148926
    5. ']' → logprob: -11.093228340148926
    6. '','' → logprob: -11.343228340148926
    7. ' ',' → logprob: -11.718228340148926
    8. ' ']' → logprob: -12.968228340148926
    9. '   ' → logprob: -14.968228340148926
    10. ' ,' → logprob: -14.968228340148926

Token 33: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.12368708848953247
    2. ''value' → logprob: -2.6236870288848877
    3. ''' → logprob: -3.4986870288848877
    4. ''s' → logprob: -5.748687267303467
    5. ''t' → logprob: -6.123687267303467
    6. ''m' → logprob: -6.748687267303467
    7. ''d' → logprob: -6.873687267303467
    8. '   ' → logprob: -6.998687267303467
    9. ''p' → logprob: -7.373687267303467
    10. ''y' → logprob: -7.623687267303467

Token 34: 'ts' (ID: 1561)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.05985771119594574
    2. 'v' → logprob: -3.8098576068878174
    3. 'value' → logprob: -4.3098578453063965
    4. 'left' → logprob: -5.1848578453063965
    5. 'sum' → logprob: -5.4348578453063965
    6. 'count' → logprob: -6.3098578453063965
    7. 'mid' → logprob: -6.4348578453063965
    8. 'm' → logprob: -6.4348578453063965
    9. 'cnt' → logprob: -6.5598578453063965
    10. 'data' → logprob: -6.6848578453063965

Token 35: 'um' (ID: 394)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.6259899735450745
    2. 'z' → logprob: -1.3759899139404297
    3. 'ize' → logprob: -2.3759899139404297
    4. '',' → logprob: -2.8759899139404297
    5. 'um' → logprob: -3.5009899139404297
    6. ',' → logprob: -3.7509899139404297
    7. 'u' → logprob: -5.37598991394043
    8. '','' → logprob: -6.87598991394043
    9. 'iz' → logprob: -7.12598991394043
    10. ']' → logprob: -7.75098991394043

Token 36: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.2544797956943512
    2. '']' → logprob: -1.5044797658920288
    3. ',' → logprob: -6.004479885101318
    4. ''' → logprob: -10.50447940826416
    5. '','' → logprob: -10.87947940826416
    6. ']' → logprob: -11.25447940826416
    7. ' ',' → logprob: -11.62947940826416
    8. ' ']' → logprob: -12.25447940826416
    9. '   ' → logprob: -13.75447940826416
    10. '(',' → logprob: -13.87947940826416

Token 37: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.08922941237688065
    2. ''' → logprob: -2.9642293453216553
    3. ''m' → logprob: -4.964229583740234
    4. ''s' → logprob: -5.464229583740234
    5. ''t' → logprob: -5.589229583740234
    6. ''l' → logprob: -5.714229583740234
    7. '   ' → logprob: -6.089229583740234
    8. ''id' → logprob: -6.714229583740234
    9. ' ' → logprob: -6.839229583740234
    10. ''p' → logprob: -6.839229583740234

Token 38: 'min' (ID: 1493)
  Prédit: 'lazy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lazy' → logprob: -0.9188545346260071
    2. 'lz' → logprob: -1.9188544750213623
    3. 'cnt' → logprob: -2.4188544750213623
    4. 'left' → logprob: -2.9188544750213623
    5. 'add' → logprob: -3.1688544750213623
    6. 'mx' → logprob: -3.2938544750213623
    7. 'l' → logprob: -3.9188544750213623
    8. 'tag' → logprob: -4.043854713439941
    9. 'count' → logprob: -4.168854713439941
    10. 'size' → logprob: -4.168854713439941

Token 39: 'pre' (ID: 2235)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6379538178443909
    2. '_val' → logprob: -1.512953758239746
    3. '_' → logprob: -1.887953758239746
    4. 'val' → logprob: -3.137953758239746
    5. '_value' → logprob: -3.512953758239746
    6. '_v' → logprob: -4.887953758239746
    7. '']' → logprob: -4.887953758239746
    8. ']' → logprob: -5.637953758239746
    9. '_]' → logprob: -5.637953758239746
    10. 'value' → logprob: -6.512953758239746

Token 40: '']
' (ID: 9756)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9070475101470947
    2. '']' → logprob: -1.1570475101470947
    3. ',' → logprob: -2.1570475101470947
    4. 'sum' → logprob: -2.1570475101470947
    5. 's' → logprob: -3.7820475101470947
    6. 'fix' → logprob: -4.282047271728516
    7. 'f' → logprob: -5.907047271728516
    8. 'min' → logprob: -5.907047271728516
    9. 'x' → logprob: -6.407047271728516
    10. '"]' → logprob: -6.907047271728516

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5282193422317505
    2. '=' → logprob: -1.4032193422317505
    3. ' =' → logprob: -2.153219223022461
    4. ',' → logprob: -3.778219223022461
    5. 'def' → logprob: -4.028219223022461
    6. ' def' → logprob: -5.153219223022461
    7. ':' → logprob: -7.653219223022461
    8. 'l' → logprob: -8.278219223022461
    9. ' ' → logprob: -8.403219223022461
    10. ']' → logprob: -8.403219223022461

Token 42: ' def' (ID: 1056)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5154741406440735
    2. ' =' → logprob: -1.3904740810394287
    3. 'def' (adapté à ' def') → logprob: -2.5154740810394287
    4. ' def' → logprob: -3.0154740810394287
    5. '   ' → logprob: -4.140474319458008
    6. ':' → logprob: -4.890474319458008
    7. ',' → logprob: -8.765474319458008
    8. '	def' → logprob: -9.390474319458008
    9. '__' → logprob: -9.765474319458008
    10. '=
' → logprob: -10.015474319458008

Token 43: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5268373489379883
    2. 'def' → logprob: -2.0268373489379883
    3. ' __' → logprob: -2.1518373489379883
    4. 'init' → logprob: -2.1518373489379883
    5. '__' → logprob: -3.7768373489379883
    6. ' init' → logprob: -3.9018373489379883
    7. '_init' → logprob: -6.526837348937988
    8. '   ' → logprob: -8.651837348937988
    9. 'inite' → logprob: -9.776837348937988
    10. 'in' → logprob: -9.901837348937988

Token 44: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0015029559144750237
    2. 'slots' → logprob: -6.501502990722656
    3. 'slot' → logprob: -14.751502990722656
    4. ' init' → logprob: -16.876502990722656
    5. '_slots' → logprob: -17.001502990722656
    6. 'ini' → logprob: -17.376502990722656
    7. '_init' → logprob: -17.376502990722656
    8. 'new' → logprob: -17.876502990722656
    9. 'lt' → logprob: -18.001502990722656
    10. 'sl' → logprob: -18.251502990722656

Token 45: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.05495867505669594
    2. '(' → logprob: -3.5549585819244385
    3. '(self' → logprob: -3.8049585819244385
    4. '__' → logprob: -6.554958820343018
    5. '_(' → logprob: -7.929958820343018
    6. '__((' → logprob: -8.17995834350586
    7. '__(
' → logprob: -9.17995834350586
    8. ' (' → logprob: -9.67995834350586
    9. '_' → logprob: -9.92995834350586
    10. '__(*' → logprob: -9.92995834350586

Token 46: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.9795445849886164e-05
    2. ' self' → logprob: -9.750060081481934
    3. ')' → logprob: -14.625060081481934
    4. '(self' → logprob: -14.750060081481934
    5. '	self' → logprob: -16.125059127807617
    6. '0' → logprob: -16.375059127807617
    7. '   ' → logprob: -16.500059127807617
    8. 'l' → logprob: -16.625059127807617
    9. '_self' → logprob: -16.625059127807617
    10. 's' → logprob: -16.750059127807617

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013126113452017307
    2. ' ,' → logprob: -4.388125896453857
    3. 'self' → logprob: -7.638125896453857
    4. '):' → logprob: -9.263126373291016
    5. ' self' → logprob: -11.888126373291016
    6. ',self' → logprob: -12.013126373291016
    7. ')' → logprob: -12.138126373291016
    8. ',l' → logprob: -12.263126373291016
    9. ' ):' → logprob: -12.638126373291016
    10. '(self' → logprob: -13.388126373291016

Token 48: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02306913398206234
    2. 'l' → logprob: -4.023068904876709
    3. ' self' → logprob: -5.648068904876709
    4. '   ' → logprob: -6.773068904876709
    5. ' l' → logprob: -8.523069381713867
    6. 'left' → logprob: -11.398069381713867
    7. '       ' → logprob: -12.023069381713867
    8. '	self' → logprob: -12.398069381713867
    9. '    ' → logprob: -12.773069381713867
    10. 's' → logprob: -12.773069381713867

Token 49: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001011015148833394
    2. '=' → logprob: -7.626010894775391
    3. ' ,' → logprob: -8.00101089477539
    4. '=None' → logprob: -8.62601089477539
    5. '):' → logprob: -12.12601089477539
    6. ')' → logprob: -13.50101089477539
    7. ':' → logprob: -15.00101089477539
    8. '‌,' → logprob: -15.37601089477539
    9. ' =' → logprob: -15.50101089477539
    10. ' ' → logprob: -15.62601089477539

Token 50: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3200581669807434
    2. '0' → logprob: -1.8200581073760986
    3. ' None' → logprob: -2.1950581073760986
    4. ' ' → logprob: -7.695058345794678
    5. '=None' → logprob: -10.19505786895752
    6. '-' → logprob: -10.69505786895752
    7. ' -' → logprob: -12.44505786895752
    8. '_None' → logprob: -13.19505786895752
    9. '(None' → logprob: -13.57005786895752
    10. '   ' → logprob: -14.32005786895752

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006120019243098795
    2. ',r' → logprob: -7.750611782073975
    3. ' ,' → logprob: -8.625612258911133
    4. 'r' → logprob: -14.000612258911133
    5. ' ' → logprob: -15.000612258911133
    6. ' r' → logprob: -15.750612258911133
    7. '‌,' → logprob: -15.750612258911133
    8. ',
' → logprob: -16.125612258911133
    9. '   ' → logprob: -16.625612258911133
    10. ',l' → logprob: -17.000612258911133

Token 52: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03804149478673935
    2. ' r' → logprob: -3.288041591644287
    3. '   ' → logprob: -17.163042068481445
    4. '	r' → logprob: -17.538042068481445
    5. '0' → logprob: -17.663042068481445
    6. ' ' → logprob: -17.788042068481445
    7. 'None' → logprob: -17.788042068481445
    8. 'l' → logprob: -18.788042068481445
    9. '```' → logprob: -19.413042068481445
    10. '    ' → logprob: -19.538042068481445

Token 53: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.56233171664644e-05
    2. '=None' → logprob: -9.875055313110352
    3. '0' → logprob: -12.875055313110352
    4. ',' → logprob: -14.250055313110352
    5. ')' → logprob: -15.250055313110352
    6. '=-' → logprob: -15.500055313110352
    7. ' ' → logprob: -15.625055313110352
    8. ' =' → logprob: -15.875055313110352
    9. ')=' → logprob: -16.25005531311035
    10. '):' → logprob: -18.12505531311035

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017231269157491624
    2. 'None' → logprob: -8.87517261505127
    3. ' ' → logprob: -10.50017261505127
    4. '-' → logprob: -13.75017261505127
    5. ')' → logprob: -13.75017261505127
    6. ' None' → logprob: -14.00017261505127
    7. '10' → logprob: -14.50017261505127
    8. '100' → logprob: -15.25017261505127
    9. '1' → logprob: -15.62517261505127
    10. 'r' → logprob: -16.000171661376953

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004927450208924711
    2. ' ,' → logprob: -7.750492572784424
    3. '):' → logprob: -9.750493049621582
    4. ')' → logprob: -13.125493049621582
    5. ',l' → logprob: -14.875493049621582
    6. ' ):' → logprob: -15.250493049621582
    7. ',n' → logprob: -15.625493049621582
    8. ',
' → logprob: -15.875493049621582
    9. ',r' → logprob: -15.875493049621582
    10. ',line' → logprob: -16.125492095947266

Token 56: ' tsum' (ID: 120900)
  Prédit: ' tsum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tsum' → logprob: -0.003947317600250244
    2. 'ts' → logprob: -5.8789472579956055
    3. '0' → logprob: -7.1289472579956055
    4. ' ts' → logprob: -8.628947257995605
    5. ' ' → logprob: -9.378947257995605
    6. ' isum' → logprob: -10.628947257995605
    7. 'sum' → logprob: -11.253947257995605
    8. '	ts' → logprob: -11.253947257995605
    9. ' tsim' → logprob: -11.378947257995605
    10. 'psum' → logprob: -12.878947257995605

Token 57: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.641841820150148e-05
    2. ',' → logprob: -11.12502670288086
    3. ' =' → logprob: -11.87502670288086
    4. '=None' → logprob: -12.75002670288086
    5. '0' → logprob: -14.12502670288086
    6. ')' → logprob: -14.62502670288086
    7. ' ' → logprob: -14.87502670288086
    8. ')=' → logprob: -16.12502670288086
    9. '):' → logprob: -16.87502670288086
    10. ' ,' → logprob: -18.00002670288086

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008060562540777028
    2. ' ' → logprob: -7.125805854797363
    3. 'float' → logprob: -14.625805854797363
    4. '=' → logprob: -15.000805854797363
    5. ')' → logprob: -15.250805854797363
    6. '-' → logprob: -15.375805854797363
    7. 'int' → logprob: -16.12580680847168
    8. ',' → logprob: -16.12580680847168
    9. '1' → logprob: -17.06330680847168
    10. '00' → logprob: -17.18830680847168

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020628207130357623
    2. ' ,' → logprob: -8.500205993652344
    3. ',min' → logprob: -13.625205993652344
    4. '):' → logprob: -14.875205993652344
    5. '   ' → logprob: -15.250205993652344
    6. ')' → logprob: -15.375205993652344
    7. ',r' → logprob: -15.625205993652344
    8. ',
' → logprob: -16.125205993652344
    9. '‌,' → logprob: -16.500205993652344
    10. ',line' → logprob: -16.750205993652344

Token 60: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6404493451118469
    2. ' min' → logprob: -0.7654493451118469
    3. '0' → logprob: -4.890449523925781
    4. ' ' → logprob: -8.265449523925781
    5. '	min' → logprob: -11.390449523925781
    6. 'inf' → logprob: -11.765449523925781
    7. ' inf' → logprob: -12.515449523925781
    8. ' minimum' → logprob: -12.640449523925781
    9. 'm' → logprob: -13.265449523925781
    10. '   ' → logprob: -13.515449523925781

Token 61: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -3.531315314830863e-06
    2. 'pr' → logprob: -13.125003814697266
    3. 'p' → logprob: -14.500003814697266
    4. '_pre' → logprob: -15.500003814697266
    5. 'per' → logprob: -15.625003814697266
    6. 'prev' → logprob: -16.000003814697266
    7. '(pre' → logprob: -16.000003814697266
    8. 'preter' → logprob: -16.000003814697266
    9. 'prem' → logprob: -16.250003814697266
    10. ' pre' → logprob: -17.125003814697266

Token 62: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003268831642344594
    2. '=-' → logprob: -8.250327110290527
    3. '=float' → logprob: -9.875327110290527
    4. '=None' → logprob: -11.375327110290527
    5. ' =' → logprob: -14.500327110290527
    6. 'pre' → logprob: -14.750327110290527
    7. ')' → logprob: -15.125327110290527
    8. '=sys' → logprob: -15.500327110290527
    9. 'float' → logprob: -16.25032615661621
    10. ')=' → logprob: -16.25032615661621

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.75001335144043
    3. 'float' → logprob: -12.87501335144043
    4. '10' → logprob: -13.87501335144043
    5. '999' → logprob: -14.25001335144043
    6. '1' → logprob: -14.75001335144043
    7. 'int' → logprob: -14.87501335144043
    8. '100' → logprob: -15.87501335144043
    9. ')' → logprob: -16.25001335144043
    10. '000' → logprob: -17.00001335144043

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019471932318992913
    2. ')' → logprob: -8.875194549560547
    3. ',' → logprob: -10.000194549560547
    4. ' ):' → logprob: -12.125194549560547
    5. '):
' → logprob: -13.000194549560547
    6. ':' → logprob: -13.875194549560547
    7. '   ' → logprob: -15.000194549560547
    8. ''):' → logprob: -15.375194549560547
    9. '):
' → logprob: -16.625194549560547
    10. '),' → logprob: -17.375194549560547

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007065945537760854
    2. 'self' → logprob: -8.000706672668457
    3. '<|end|>' → logprob: -9.250706672668457
    4. ' self' → logprob: -9.625706672668457
    5. '	' → logprob: -9.750706672668457
    6. ':' → logprob: -10.125706672668457
    7. '   ' → logprob: -10.625706672668457
    8. '):' → logprob: -11.000706672668457
    9. ')' → logprob: -11.250706672668457
    10. ',' → logprob: -11.750706672668457

Token 66: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001981333363801241
    2. ' self' → logprob: -6.251981258392334
    3. '       ' → logprob: -9.876981735229492
    4. '   ' → logprob: -13.876981735229492
    5. '	self' → logprob: -14.751981735229492
    6. '           ' → logprob: -18.126981735229492
    7. '```' → logprob: -18.126981735229492
    8. 'l' → logprob: -18.251981735229492
    9. ' ' → logprob: -18.501981735229492
    10. '        ' → logprob: -18.626981735229492

Token 67: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.0008165352046489716
    2. '.' → logprob: -7.125816345214844
    3. ' .' → logprob: -11.625816345214844
    4. ' =' → logprob: -13.500816345214844
    5. '.=' → logprob: -14.125816345214844
    6. '.t' → logprob: -15.375816345214844
    7. 'l' → logprob: -15.750816345214844
    8. '=' → logprob: -15.750816345214844
    9. '.r' → logprob: -15.750816345214844
    10. '·l' → logprob: -16.500816345214844

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1005903035402298
    2. '=' → logprob: -2.350590229034424
    3. '=l' → logprob: -8.350590705871582
    4. ',' → logprob: -8.850590705871582
    5. ',l' → logprob: -12.725590705871582
    6. ' ' → logprob: -14.850590705871582
    7. ' ,' → logprob: -15.100590705871582
    8. ' l' → logprob: -16.975589752197266
    9. '=int' → logprob: -17.225589752197266
    10. '=r' → logprob: -17.350589752197266

Token 69: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0067154900170862675
    2. ' l' → logprob: -5.006715297698975
    3. '	l' → logprob: -15.631715774536133
    4. ' ' → logprob: -17.006715774536133
    5. '_l' → logprob: -17.381715774536133
    6. '0' → logprob: -18.506715774536133
    7. 'r' → logprob: -19.006715774536133
    8. '<|end|>' → logprob: -19.006715774536133
    9. ' ' → logprob: -20.006715774536133
    10. '$l' → logprob: -20.131715774536133

Token 70: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02359122596681118
    2. '<|end|>' → logprob: -4.398591041564941
    3. '
' → logprob: -4.773591041564941
    4. '<|end|>' → logprob: -6.398591041564941
    5. 'r' → logprob: -8.148591041564941
    6. '           ' → logprob: -8.648591041564941
    7. '   ' → logprob: -8.773591041564941
    8. '        ' → logprob: -9.273591041564941
    9. '               ' → logprob: -10.398591041564941
    10. 'self' → logprob: -10.523591041564941

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004021168686449528
    2. '<|end|>' → logprob: -6.254021167755127
    3. 'r' → logprob: -7.129021167755127
    4. '<|end|>' → logprob: -7.254021167755127
    5. '   ' → logprob: -8.379021644592285
    6. 'self' → logprob: -8.879021644592285
    7. '           ' → logprob: -9.379021644592285
    8. '        ' → logprob: -10.004021644592285
    9. ',' → logprob: -11.129021644592285
    10. '      ' → logprob: -11.254021644592285

Token 72: ' self' (ID: 1051)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06340698152780533
    2. 'self' (adapté à ' self') → logprob: -2.8134069442749023
    3. ' self' → logprob: -6.938406944274902
    4. ' r' → logprob: -7.813406944274902
    5. '       ' → logprob: -9.688406944274902
    6. '   ' → logprob: -13.813406944274902
    7. '(self' → logprob: -15.438406944274902
    8. '_r' → logprob: -15.438406944274902
    9. '	self' → logprob: -15.813406944274902
    10. 's' → logprob: -15.813406944274902

Token 73: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.31900325417518616
    2. '.' → logprob: -1.3190032243728638
    3. 'r' → logprob: -5.194003105163574
    4. '.l' → logprob: -9.694003105163574
    5. '=' → logprob: -9.944003105163574
    6. '<|end|>' → logprob: -10.694003105163574
    7. ' =' → logprob: -11.819003105163574
    8. '.t' → logprob: -12.444003105163574
    9. '=r' → logprob: -12.569003105163574
    10. '   ' → logprob: -12.694003105163574

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602485030889511
    2. '=' → logprob: -1.9102485179901123
    3. '<|end|>' → logprob: -11.285248756408691
    4. '<|end|>' → logprob: -11.785248756408691
    5. ' ' → logprob: -13.660248756408691
    6. ',' → logprob: -13.910248756408691
    7. ' =
' → logprob: -13.910248756408691
    8. ' =)' → logprob: -15.160248756408691
    9. ' ,' → logprob: -15.285248756408691
    10. '=r' → logprob: -15.785248756408691

Token 75: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004078758880496025
    2. ' r' → logprob: -5.5040788650512695
    3. ' ' → logprob: -16.254077911376953
    4. '0' → logprob: -16.629077911376953
    5. '	r' → logprob: -17.004077911376953
    6. 'l' → logprob: -19.191577911376953
    7. '(r' → logprob: -19.316577911376953
    8. ' ' → logprob: -19.566577911376953
    9. '   ' → logprob: -19.754077911376953
    10. '1' → logprob: -19.816577911376953

Token 76: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028255043434910476
    2. 'self' → logprob: -8.375282287597656
    3. '<|end|>' → logprob: -10.750282287597656
    4. ' self' → logprob: -11.250282287597656
    5. '	' → logprob: -12.375282287597656
    6. '   ' → logprob: -12.625282287597656
    7. ',' → logprob: -13.000282287597656
    8. '           ' → logprob: -13.500282287597656
    9. '<|end|>' → logprob: -13.625282287597656
    10. '
' → logprob: -13.625282287597656

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014772482682019472
    2. 'self' → logprob: -6.751477241516113
    3. '	' → logprob: -8.626477241516113
    4. ' self' → logprob: -10.376477241516113
    5. '   ' → logprob: -11.001477241516113
    6. '<|end|>' → logprob: -11.251477241516113
    7. ',' → logprob: -11.501477241516113
    8. '           ' → logprob: -11.751477241516113
    9. '
' → logprob: -11.876477241516113
    10. ' ' → logprob: -12.001477241516113

Token 78: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08804040402173996
    2. '       ' → logprob: -2.588040351867676
    3. ' self' → logprob: -4.713040351867676
    4. '   ' → logprob: -10.213040351867676
    5. '	self' → logprob: -10.463040351867676
    6. '           ' → logprob: -11.463040351867676
    7. 's' → logprob: -11.463040351867676
    8. '0' → logprob: -11.463040351867676
    9. 'ts' → logprob: -11.963040351867676
    10. '
' → logprob: -12.338040351867676

Token 79: '.t' (ID: 1370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6381662487983704
    2. '=' → logprob: -1.5131661891937256
    3. ' =' → logprob: -1.6381661891937256
    4. '.ts' → logprob: -2.8881661891937256
    5. '.=' → logprob: -7.513166427612305
    6. '.tsv' → logprob: -8.263166427612305
    7. '	ts' → logprob: -8.263166427612305
    8. '.t' → logprob: -8.513166427612305
    9. '   ' → logprob: -9.638166427612305
    10. 's' → logprob: -10.263166427612305

Token 80: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -4.7755875129951164e-05
    2. 's' → logprob: -10.00004768371582
    3. 'um' → logprob: -14.12504768371582
    4. 'su' → logprob: -14.12504768371582
    5. 'psum' → logprob: -14.37504768371582
    6. 'summ' → logprob: -16.00004768371582
    7. ' sum' → logprob: -16.75004768371582
    8. '_sum' → logprob: -16.87504768371582
    9. 'umsum' → logprob: -17.37504768371582
    10. 'sup' → logprob: -17.37504768371582

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5936878323554993
    2. '=' → logprob: -0.8436878323554993
    3. '+' → logprob: -4.593688011169434
    4. ' +' → logprob: -5.218688011169434
    5. ' +=' → logprob: -6.468688011169434
    6. '+=' → logprob: -7.593688011169434
    7. '<|end|>' → logprob: -12.718688011169434
    8. ' ' → logprob: -12.968688011169434
    9. ')' → logprob: -14.843688011169434
    10. ' ,' → logprob: -15.093688011169434

Token 82: ' tsum' (ID: 120900)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.012711179442703724
    2. ' tsum' → logprob: -4.512711048126221
    3. '0' → logprob: -6.512711048126221
    4. ' ts' → logprob: -9.762711524963379
    5. 't' → logprob: -10.262711524963379
    6. 'sum' → logprob: -10.262711524963379
    7. '	ts' → logprob: -11.012711524963379
    8. ' ' → logprob: -11.012711524963379
    9. 'tsam' → logprob: -12.762711524963379
    10. 'tm' → logprob: -13.637711524963379

Token 83: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002678920282050967
    2. 'self' → logprob: -9.12526798248291
    3. ',' → logprob: -9.25026798248291
    4. '
' → logprob: -11.00026798248291
    5. ' self' → logprob: -11.25026798248291
    6. '<|end|>' → logprob: -11.25026798248291
    7. '   ' → logprob: -12.37526798248291
    8. '	' → logprob: -12.87526798248291
    9. '        
' → logprob: -13.12526798248291
    10. '      ' → logprob: -13.25026798248291

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015753143816255033
    2. 'self' → logprob: -9.000157356262207
    3. ' self' → logprob: -10.500157356262207
    4. ',' → logprob: -13.250157356262207
    5. '   ' → logprob: -13.750157356262207
    6. '        
' → logprob: -13.750157356262207
    7. '	' → logprob: -13.875157356262207
    8. '      ' → logprob: -14.875157356262207
    9. '
' → logprob: -15.000157356262207
    10. '<|end|>' → logprob: -15.250157356262207

Token 85: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4748114049434662
    2. 'self' (adapté à ' self') → logprob: -0.9748114347457886
    3. ' self' → logprob: -7.224811553955078
    4. '	self' → logprob: -12.849811553955078
    5. '   ' → logprob: -13.224811553955078
    6. '	' → logprob: -14.849811553955078
    7. '      ' → logprob: -15.599811553955078
    8. '               ' → logprob: -15.849811553955078
    9. ' ' → logprob: -16.099811553955078
    10. '           ' → logprob: -16.099811553955078

Token 86: '.min' (ID: 8649)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.31348103284835815
    2. '.min' → logprob: -1.313481092453003
    3. '.m' → logprob: -9.438481330871582
    4. ' .' → logprob: -9.688481330871582
    5. '.minimum' → logprob: -9.688481330871582
    6. 'min' → logprob: -12.313481330871582
    7. '	min' → logprob: -13.063481330871582
    8. '.Min' → logprob: -13.688481330871582
    9. '.MIN' → logprob: -13.688481330871582
    10. '.r' → logprob: -14.188481330871582

Token 87: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.4140441635390744e-05
    2. 'pr' → logprob: -11.250014305114746
    3. 'p' → logprob: -14.125014305114746
    4. 'per' → logprob: -15.875014305114746
    5. 'preter' → logprob: -17.25001335144043
    6. 'prem' → logprob: -17.37501335144043
    7. 'prev' → logprob: -17.50001335144043
    8. '_pre' → logprob: -17.62501335144043
    9. 'pres' → logprob: -18.12501335144043
    10. '(pre' → logprob: -18.12501335144043

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519303858280182
    2. ' =' → logprob: -1.5019303560256958
    3. ' ' → logprob: -14.876930236816406
    4. ',' → logprob: -15.626930236816406
    5. '   ' → logprob: -15.751930236816406
    6. '＝' → logprob: -16.251930236816406
    7. '=min' → logprob: -16.376930236816406
    8. '=None' → logprob: -16.501930236816406
    9. ')' → logprob: -16.501930236816406
    10. '=

' → logprob: -17.001930236816406

Token 89: ' min' (ID: 1349)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3899143636226654
    2. 'min' → logprob: -1.8899143934249878
    3. 'ts' → logprob: -2.5149142742156982
    4. ' tsum' → logprob: -2.6399142742156982
    5. ' min' → logprob: -4.514914512634277
    6. ' ts' → logprob: -5.264914512634277
    7. ' ' → logprob: -5.764914512634277
    8. 'float' → logprob: -9.514914512634277
    9. 'sum' → logprob: -9.639914512634277
    10. ' float' → logprob: -10.639914512634277

Token 90: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.0004723795282188803
    2. 'pr' → logprob: -7.750472545623779
    3. '0' → logprob: -11.375472068786621
    4. 'p' → logprob: -11.875472068786621
    5. '(pre' → logprob: -11.875472068786621
    6. 'pres' → logprob: -13.000472068786621
    7. 'per' → logprob: -13.000472068786621
    8. '(' → logprob: -13.125472068786621
    9. 'int' → logprob: -13.875472068786621
    10. ')' → logprob: -14.000472068786621

Token 91: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44731780886650085
    2. '<|end|>' → logprob: -1.1973178386688232
    3. '   ' → logprob: -3.0723178386688232
    4. 'def' → logprob: -5.697317600250244
    5. '<|end|>' → logprob: -5.947317600250244
    6. '    
' → logprob: -6.572317600250244
    7. '\n' → logprob: -7.197317600250244
    8. '#' → logprob: -7.447317600250244
    9. ')' → logprob: -7.447317600250244
    10. ' ' → logprob: -7.822317600250244

Token 92: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32044994831085205
    2. 'class' → logprob: -1.570449948310852
    3. '
' → logprob: -3.1954498291015625
    4. ')' → logprob: -4.6954498291015625
    5. '   ' → logprob: -5.3204498291015625
    6. ' ' → logprob: -5.6954498291015625
    7. '#' → logprob: -6.1954498291015625
    8. ' def' → logprob: -6.3204498291015625
    9. ']' → logprob: -6.8204498291015625
    10. ',' → logprob: -7.9454498291015625

Token 93: ' combine' (ID: 21700)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.014407116919755936
    2. ' update' → logprob: -5.514407157897949
    3. ' segment' → logprob: -6.139407157897949
    4. ' main' → logprob: -6.264407157897949
    5. ' seg' → logprob: -6.514407157897949
    6. ' ' → logprob: -6.889407157897949
    7. ' dfs' → logprob: -6.889407157897949
    8. ' b' → logprob: -7.764407157897949
    9. ' solve' → logprob: -8.01440715789795
    10. ' create' → logprob: -8.38940715789795

Token 94: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23238112032413483
    2. '(a' → logprob: -1.9823811054229736
    3. '(node' → logprob: -3.3573811054229736
    4. '(n' → logprob: -3.6073811054229736
    5. '(left' → logprob: -5.107381343841553
    6. '(x' → logprob: -7.982381343841553
    7. '(N' → logprob: -8.107380867004395
    8. '(nodes' → logprob: -8.107380867004395
    9. '(l' → logprob: -8.607380867004395
    10. '(lhs' → logprob: -8.857380867004395

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3557529857498594e-05
    2. ' ,' → logprob: -10.75002384185791
    3. ',b' → logprob: -13.62502384185791
    4. ',a' → logprob: -14.37502384185791
    5. ')' → logprob: -16.125022888183594
    6. ',
' → logprob: -16.375022888183594
    7. ':' → logprob: -16.625022888183594
    8. '):' → logprob: -17.750022888183594
    9. 'a' → logprob: -19.125022888183594
    10. ',n' → logprob: -19.500022888183594

Token 96: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4740821421146393
    2. 'b' → logprob: -0.9740821123123169
    3. ' ' → logprob: -12.474081993103027
    4. ')b' → logprob: -14.849081993103027
    5. '<|end|>' → logprob: -14.974081993103027
    6. ' ' → logprob: -15.974081993103027
    7. ')' → logprob: -16.099082946777344
    8. ',' → logprob: -16.474082946777344
    9. '	b' → logprob: -16.474082946777344
    10. ',b' → logprob: -16.599082946777344

Token 97: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00024822709383443
    2. ')' → logprob: -8.625247955322266
    3. ':' → logprob: -10.000247955322266
    4. '):
' → logprob: -10.875247955322266
    5. ' ):' → logprob: -12.875247955322266
    6. ',' → logprob: -13.375247955322266
    7. '}:' → logprob: -17.125247955322266
    8. '):
' → logprob: -17.250247955322266
    9. ']:' → logprob: -17.375247955322266
    10. ')：' → logprob: -17.625247955322266

Token 98: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006167085841298103
    2. '):' → logprob: -5.256166934967041
    3. ' :' → logprob: -7.381166934967041
    4. '():' → logprob: -9.1311674118042
    5. ':
' → logprob: -9.5061674118042
    6. '   ' → logprob: -9.7561674118042
    7. ':return' → logprob: -10.6311674118042
    8. ',' → logprob: -11.3811674118042
    9. '<|end|>' → logprob: -11.8811674118042
    10. '}:' → logprob: -12.0061674118042

Token 99: ' c' (ID: 274)
  Prédit: ' Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Node' → logprob: -0.2150559425354004
    2. 'Node' → logprob: -3.2150559425354004
    3. '   ' → logprob: -3.3400559425354004
    4. ' new' → logprob: -3.9650559425354004
    5. ' if' → logprob: -3.9650559425354004
    6. ' None' → logprob: -4.0900559425354
    7. ' node' → logprob: -4.5900559425354
    8. ' ' → logprob: -4.5900559425354
    9. ' return' → logprob: -4.7150559425354
    10. '    ' → logprob: -4.8400559425354

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806202858686447
    2. '=' → logprob: -3.28806209564209
    3. ' ' → logprob: -11.16306209564209
    4. '.' → logprob: -13.03806209564209
    5. ')' → logprob: -13.53806209564209
    6. ',' → logprob: -13.91306209564209
    7. ' =
' → logprob: -14.41306209564209
    8. '  ' → logprob: -14.78806209564209
    9. 'space' → logprob: -14.91306209564209
    10. ' =)' → logprob: -15.28806209564209

Token 101: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.10020969063043594
    2. ' Node' → logprob: -2.3502097129821777
    3. ' ' → logprob: -12.85020923614502
    4. '	Node' → logprob: -15.35020923614502
    5. '  ' → logprob: -16.350210189819336
    6. '   ' → logprob: -16.975210189819336
    7. 'N' → logprob: -17.600210189819336
    8. 'None' → logprob: -18.225210189819336
    9. ' Nod' → logprob: -19.100210189819336
    10. '_Node' → logprob: -19.600210189819336

Token 102: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003715662460308522
    2. '(' → logprob: -8.375371932983398
    3. '()
' → logprob: -8.875371932983398
    4. '()\' → logprob: -14.875371932983398
    5. '()

' → logprob: -15.250371932983398
    6. ' ()' → logprob: -15.500371932983398
    7. 'a' → logprob: -16.1253719329834
    8. '();' → logprob: -16.3753719329834
    9. '()
' → logprob: -16.8753719329834
    10. '(a' → logprob: -17.0003719329834

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11832402646541595
    2. '
' → logprob: -2.493324041366577
    3. '<|end|>' → logprob: -3.993324041366577
    4. '    
' → logprob: -5.743323802947998
    5. 'c' → logprob: -5.743323802947998
    6. ' ' → logprob: -6.743323802947998
    7. ')' → logprob: -7.493323802947998
    8. ' c' → logprob: -7.493323802947998
    9. '  
' → logprob: -7.743323802947998
    10. ' 
' → logprob: -7.868323802947998

Token 104: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.3578377366065979
    2. ' c' → logprob: -1.4828376770019531
    3. '   ' → logprob: -2.607837677001953
    4. '
' → logprob: -9.357837677001953
    5. '	c' → logprob: -10.857837677001953
    6. ' if' → logprob: -11.982837677001953
    7. 'if' → logprob: -12.732837677001953
    8. ' ' → logprob: -12.857837677001953
    9. '    
' → logprob: -12.857837677001953
    10. '```' → logprob: -13.357837677001953

Token 105: '.l' (ID: 1000)
  Prédit: '.t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.06956643611192703
    2. '.l' → logprob: -3.444566488265991
    3. '.' → logprob: -4.194566249847412
    4. '.ts' → logprob: -4.444566249847412
    5. '.tsv' → logprob: -4.819566249847412
    6. ' .' → logprob: -8.69456672668457
    7. '.s' → logprob: -9.56956672668457
    8. '.te' → logprob: -10.69456672668457
    9. '.ll' → logprob: -10.94456672668457
    10. '.r' → logprob: -10.94456672668457

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14277921617031097
    2. '=' → logprob: -2.0177791118621826
    3. ',' → logprob: -9.642779350280762
    4. '=a' → logprob: -11.392779350280762
    5. ' ' → logprob: -12.017779350280762
    6. 'a' → logprob: -12.017779350280762
    7. '   ' → logprob: -12.142779350280762
    8. 'c' → logprob: -12.767779350280762
    9. '=b' → logprob: -13.017779350280762
    10. '=c' → logprob: -13.517779350280762

Token 107: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.8087270038668066e-05
    2. ' a' → logprob: -10.500027656555176
    3. '0' → logprob: -15.500027656555176
    4. '   ' → logprob: -15.625027656555176
    5. ' ' → logprob: -16.750028610229492
    6. '1' → logprob: -17.625028610229492
    7. '  ' → logprob: -18.000028610229492
    8. '	a' → logprob: -19.000028610229492
    9. '_a' → logprob: -20.750028610229492
    10. 'b' → logprob: -20.875028610229492

Token 108: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.00012606535165105015
    2. '.' → logprob: -9.000125885009766
    3. 'l' → logprob: -13.250125885009766
    4. '.r' → logprob: -15.750125885009766
    5. ' .' → logprob: -16.000125885009766
    6. '+l' → logprob: -16.250125885009766
    7. '	l' → logprob: -16.375125885009766
    8. ' l' → logprob: -16.875125885009766
    9. ',l' → logprob: -17.000125885009766
    10. '.ll' → logprob: -17.125125885009766

Token 109: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5563308000564575
    2. '+' → logprob: -1.0563308000564575
    3. '+b' → logprob: -3.431330680847168
    4. '+c' → logprob: -3.681330680847168
    5. ' +' → logprob: -4.181330680847168
    6. '+a' → logprob: -5.931330680847168
    7. 'b' → logprob: -7.181330680847168
    8. '<|end|>' → logprob: -7.431330680847168
    9. ',' → logprob: -7.931330680847168
    10. 'and' → logprob: -8.056330680847168

Token 110: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7945839166641235
    2. '   ' → logprob: -0.7945839166641235
    3. ' +' → logprob: -2.544583797454834
    4. '+b' → logprob: -4.169583797454834
    5. '+c' → logprob: -6.794583797454834
    6. '+a' → logprob: -7.294583797454834
    7. 'b' → logprob: -8.169584274291992
    8. '+r' → logprob: -9.294584274291992
    9. '+n' → logprob: -10.294584274291992
    10. '+l' → logprob: -10.294584274291992

Token 111: ' c' (ID: 274)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9542979598045349
    2. '+' → logprob: -1.3292980194091797
    3. 'b' → logprob: -2.0792980194091797
    4. '   ' → logprob: -2.3292980194091797
    5. '+b' → logprob: -2.3292980194091797
    6. 'c' (adapté à ' c') → logprob: -5.20429801940918
    7. 'r' → logprob: -5.20429801940918
    8. ' b' → logprob: -5.20429801940918
    9. '+c' → logprob: -5.45429801940918
    10. '+r' → logprob: -5.45429801940918

Token 112: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.1879582703113556
    2. '.' → logprob: -3.062958240509033
    3. '=' → logprob: -3.437958240509033
    4. ' =' → logprob: -3.562958240509033
    5. '+' → logprob: -3.812958240509033
    6. '.b' → logprob: -4.312958240509033
    7. '+=' → logprob: -4.937958240509033
    8. '.c' → logprob: -5.312958240509033
    9. ' +' → logprob: -5.437958240509033
    10. ' +=' → logprob: -5.687958240509033

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04861098527908325
    2. '=' → logprob: -3.0486109256744385
    3. 'b' → logprob: -12.04861068725586
    4. '=b' → logprob: -12.04861068725586
    5. ' ' → logprob: -12.17361068725586
    6. '+' → logprob: -13.54861068725586
    7. 'a' → logprob: -13.79861068725586
    8. ' +' → logprob: -13.79861068725586
    9. ',' → logprob: -13.79861068725586
    10. ' +=' → logprob: -14.42361068725586

Token 114: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06996189057826996
    2. ' b' → logprob: -2.6949617862701416
    3. ' ' → logprob: -10.944961547851562
    4. '   ' → logprob: -11.944961547851562
    5. '  ' → logprob: -14.194961547851562
    6. '	b' → logprob: -14.944961547851562
    7. 'a' → logprob: -15.319961547851562
    8. '    ' → logprob: -16.819961547851562
    9. ' a' → logprob: -17.694961547851562
    10. '>b' → logprob: -17.694961547851562

Token 115: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.00029148702742531896
    2. '.' → logprob: -8.25029182434082
    3. '.l' → logprob: -10.62529182434082
    4. 'r' → logprob: -12.25029182434082
    5. ' .' → logprob: -13.75029182434082
    6. '	r' → logprob: -17.62529182434082
    7. ' r' → logprob: -18.12529182434082
    8. '.rl' → logprob: -18.12529182434082
    9. ' ' → logprob: -18.50029182434082
    10. '.q' → logprob: -19.50029182434082

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5876932144165039
    2. 'c' → logprob: -1.087693214416504
    3. '
' → logprob: -2.337693214416504
    4. ' c' → logprob: -4.587693214416504
    5. '    
' → logprob: -8.087693214416504
    6. '	c' → logprob: -8.337693214416504
    7. ' 
' → logprob: -10.337693214416504
    8. '  
' → logprob: -10.462693214416504
    9. ' ' → logprob: -10.962693214416504
    10. '
' → logprob: -11.087693214416504

Token 117: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7047085762023926
    2. '   ' → logprob: -0.7047085762023926
    3. ' c' → logprob: -4.829708576202393
    4. '
' → logprob: -5.704708576202393
    5. '    
' → logprob: -9.579708099365234
    6. ' ' → logprob: -10.454708099365234
    7. '	c' → logprob: -10.829708099365234
    8. ' 
' → logprob: -11.329708099365234
    9. '```' → logprob: -11.329708099365234
    10. '  
' → logprob: -11.454708099365234

Token 118: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.4492313861846924
    2. ' c' → logprob: -1.4492313861846924
    3. '   ' → logprob: -2.0742313861846924
    4. '
' → logprob: -7.074231147766113
    5. ' ' → logprob: -7.824231147766113
    6. '	c' → logprob: -9.199231147766113
    7. '  ' → logprob: -10.074231147766113
    8. '```' → logprob: -10.699231147766113
    9. '    
' → logprob: -11.199231147766113
    10. ' 
' → logprob: -11.324231147766113

Token 119: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.17770425975322723
    2. '.ts' → logprob: -2.052704334259033
    3. '.tsv' → logprob: -3.427704334259033
    4. '.' → logprob: -6.302704334259033
    5. '	ts' → logprob: -10.427703857421875
    6. '.s' → logprob: -10.677703857421875
    7. ' .' → logprob: -10.802703857421875
    8. '.te' → logprob: -11.552703857421875
    9. '.sum' → logprob: -11.677703857421875
    10. '.tt' → logprob: -12.177703857421875

Token 120: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00010103991371579468
    2. 'um' → logprob: -9.750101089477539
    3. 's' → logprob: -10.250101089477539
    4. 'su' → logprob: -13.000101089477539
    5. ' sum' → logprob: -13.750101089477539
    6. '   ' → logprob: -14.250101089477539
    7. 'psum' → logprob: -14.375101089477539
    8. 'summ' → logprob: -14.375101089477539
    9. 'umsum' → logprob: -15.125101089477539
    10. '  ' → logprob: -15.250101089477539

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931489109992981
    2. ' =' → logprob: -0.6931489109992981
    3. '=a' → logprob: -13.693148612976074
    4. ' +=' → logprob: -15.193148612976074
    5. '+=' → logprob: -15.568148612976074
    6. ' ' → logprob: -17.19314956665039
    7. '＝' → logprob: -17.44314956665039
    8. '+' → logprob: -18.19314956665039
    9. 'a' → logprob: -18.56814956665039
    10. 's' → logprob: -19.44314956665039

Token 122: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03804344683885574
    2. ' a' → logprob: -3.28804349899292
    3. '   ' → logprob: -14.038043022155762
    4. '(a' → logprob: -14.413043022155762
    5. ' ' → logprob: -14.913043022155762
    6. '	a' → logprob: -15.788043022155762
    7. '
' → logprob: -16.913043975830078
    8. '  ' → logprob: -17.288043975830078
    9. ' (' → logprob: -17.288043975830078
    10. '(' → logprob: -17.913043975830078

Token 123: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0031201988458633423
    2. '.ts' → logprob: -6.378120422363281
    3. '.tsv' → logprob: -6.628120422363281
    4. '.' → logprob: -9.378120422363281
    5. ' tsum' → logprob: -12.753120422363281
    6. '	ts' → logprob: -12.878120422363281
    7. '.s' → logprob: -13.753120422363281
    8. ' .' → logprob: -14.253120422363281
    9. '.sum' → logprob: -14.378120422363281
    10. '.tt' → logprob: -15.128120422363281

Token 124: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.004325076472014189
    2. 's' → logprob: -5.504324913024902
    3. 'summ' → logprob: -9.129324913024902
    4. 'psum' → logprob: -9.754324913024902
    5. 'su' → logprob: -10.629324913024902
    6. 'ts' → logprob: -11.254324913024902
    7. 'ss' → logprob: -11.754324913024902
    8. 'sup' → logprob: -11.754324913024902
    9. '.sum' → logprob: -12.129324913024902
    10. 'sm' → logprob: -12.129324913024902

Token 125: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11302929371595383
    2. ' +' → logprob: -2.3630292415618896
    3. '+b' → logprob: -4.363029479980469
    4. '+a' → logprob: -14.863029479980469
    5. '+
' → logprob: -15.363029479980469
    6. '＋' → logprob: -15.988029479980469
    7. '+B' → logprob: -16.48802947998047
    8. '+c' → logprob: -16.61302947998047
    9. ' ' → logprob: -16.98802947998047
    10. '+s' → logprob: -17.23802947998047

Token 126: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2519296407699585
    2. 'b' → logprob: -1.5019296407699585
    3. ' ' → logprob: -14.62692928314209
    4. ' ' → logprob: -17.251930236816406
    5. '	b' → logprob: -18.126930236816406
    6. '(b' → logprob: -18.126930236816406
    7. ' б' → logprob: -18.376930236816406
    8. ')b' → logprob: -18.876930236816406
    9. '   ' → logprob: -19.001930236816406
    10. '  ' → logprob: -19.001930236816406

Token 127: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -2.4153549020411447e-05
    2. '.tsv' → logprob: -10.87502384185791
    3. '.ts' → logprob: -12.87502384185791
    4. '.' → logprob: -13.12502384185791
    5. '`.' → logprob: -15.50002384185791
    6. '	ts' → logprob: -15.75002384185791
    7. '".' → logprob: -16.375024795532227
    8. ''.' → logprob: -16.375024795532227
    9. '```' → logprob: -16.625024795532227
    10. ' tsum' → logprob: -17.250024795532227

Token 128: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0018353492487221956
    2. 's' → logprob: -6.376835346221924
    3. 'ts' → logprob: -10.001835823059082
    4. '.sum' → logprob: -10.501835823059082
    5. 'psum' → logprob: -10.876835823059082
    6. 'su' → logprob: -11.751835823059082
    7. 'ss' → logprob: -11.876835823059082
    8. '.s' → logprob: -12.251835823059082
    9. ' tsum' → logprob: -12.251835823059082
    10. 'summ' → logprob: -12.251835823059082

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9313152432441711
    2. 'c' → logprob: -1.0563151836395264
    3. '   ' → logprob: -1.4313151836395264
    4. ' c' → logprob: -4.0563154220581055
    5. ' 
' → logprob: -7.3063154220581055
    6. '    
' → logprob: -7.3063154220581055
    7. ',' → logprob: -8.556315422058105
    8. '  
' → logprob: -9.056315422058105
    9. '	c' → logprob: -9.056315422058105
    10. ',c' → logprob: -10.181315422058105

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08669376373291016
    2. '
' → logprob: -3.33669376373291
    3. 'c' → logprob: -3.46169376373291
    4. ' c' → logprob: -4.21169376373291
    5. '    
' → logprob: -7.46169376373291
    6. '  
' → logprob: -8.46169376373291
    7. ' 
' → logprob: -8.46169376373291
    8. '	c' → logprob: -8.58669376373291
    9. ' ' → logprob: -10.33669376373291
    10. '   
' → logprob: -10.83669376373291

Token 131: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.003388741286471486
    2. '   ' → logprob: -6.00338888168335
    3. ' c' → logprob: -7.00338888168335
    4. 'if' → logprob: -13.503388404846191
    5. ' ' → logprob: -13.878388404846191
    6. '	c' → logprob: -14.378388404846191
    7. '
' → logprob: -14.878388404846191
    8. '  ' → logprob: -15.378388404846191
    9. 'import' → logprob: -15.378388404846191
    10. ' if' → logprob: -16.503389358520508

Token 132: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.0001601539261173457
    2. '.' → logprob: -9.125160217285156
    3. '.m' → logprob: -10.125160217285156
    4. '.minimum' → logprob: -11.625160217285156
    5. '.max' → logprob: -14.000160217285156
    6. ' .' → logprob: -14.750160217285156
    7. '.Min' → logprob: -15.625160217285156
    8. 'min' → logprob: -16.000160217285156
    9. '.ma' → logprob: -16.250160217285156
    10. '	min' → logprob: -16.375160217285156

Token 133: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.1637164789135568e-05
    2. '(pre' → logprob: -11.875011444091797
    3. 'pr' → logprob: -13.125011444091797
    4. '(' → logprob: -14.375011444091797
    5. 'min' → logprob: -14.625011444091797
    6. 'p' → logprob: -15.125011444091797
    7. 'per' → logprob: -15.250011444091797
    8. 'pres' → logprob: -15.375011444091797
    9. 'preter' → logprob: -15.625011444091797
    10. '(c' → logprob: -16.000011444091797

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029753848910331726
    2. ' =' → logprob: -3.5297539234161377
    3. '=min' → logprob: -12.654753684997559
    4. 'min' → logprob: -16.154754638671875
    5. ' ' → logprob: -18.029754638671875
    6. ',' → logprob: -18.154754638671875
    7. ')' → logprob: -18.279754638671875
    8. '=

' → logprob: -18.404754638671875
    9. '＝' → logprob: -18.529754638671875
    10. '=
' → logprob: -18.654754638671875

Token 135: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.10021573305130005
    2. 'min' → logprob: -2.3502156734466553
    3. '	min' → logprob: -12.225215911865234
    4. '   ' → logprob: -13.600215911865234
    5. ' ' → logprob: -13.975215911865234
    6. '(min' → logprob: -14.100215911865234
    7. '=min' → logprob: -14.600215911865234
    8. '[min' → logprob: -14.850215911865234
    9. '  ' → logprob: -16.100215911865234
    10. '
' → logprob: -16.600215911865234

Token 136: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. 'a' → logprob: -15.62501049041748
    4. '(
' → logprob: -16.625009536743164
    5. '((' → logprob: -19.250009536743164
    6. '(

' → logprob: -19.250009536743164
    7. '(c' → logprob: -21.125009536743164
    8. '()' → logprob: -21.125009536743164
    9. '(b' → logprob: -21.250009536743164
    10. ' (' → logprob: -21.875009536743164

Token 137: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -1.0087516784551553e-05
    2. '.m' → logprob: -12.25001049041748
    3. 'min' → logprob: -13.25001049041748
    4. ' .' → logprob: -13.62501049041748
    5. '.minimum' → logprob: -14.12501049041748
    6. '.pre' → logprob: -14.50001049041748
    7. '.' → logprob: -15.00001049041748
    8. '.max' → logprob: -15.25001049041748
    9. ').' → logprob: -15.75001049041748
    10. '.t' → logprob: -16.250009536743164

Token 138: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.981667537620524e-06
    2. 'c' → logprob: -13.875001907348633
    3. 'min' → logprob: -14.625001907348633
    4. 'a' → logprob: -15.875001907348633
    5. '(pre' → logprob: -16.000001907348633
    6. '(a' → logprob: -16.625001907348633
    7. 'per' → logprob: -16.750001907348633
    8. '(c' → logprob: -17.875001907348633
    9. 'preter' → logprob: -18.125001907348633
    10. 'pr' → logprob: -18.875001907348633

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022368174046278
    2. ' ,' → logprob: -4.39736795425415
    3. ',b' → logprob: -4.77236795425415
    4. ' b' → logprob: -7.02236795425415
    5. 'b' → logprob: -7.77236795425415
    6. ',min' → logprob: -11.022368431091309
    7. ',a' → logprob: -11.022368431091309
    8. ' ' → logprob: -13.897368431091309
    9. ' a' → logprob: -13.897368431091309
    10. 'a' → logprob: -14.147368431091309

Token 140: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5231839418411255
    2. ' a' → logprob: -0.8981839418411255
    3. ' ' → logprob: -11.398183822631836
    4. '(a' → logprob: -11.523183822631836
    5. '	a' → logprob: -11.648183822631836
    6. ')a' → logprob: -11.898183822631836
    7. '[a' → logprob: -12.023183822631836
    8. 'b' → logprob: -12.898183822631836
    9. ')' → logprob: -13.023183822631836
    10. ' b' → logprob: -13.273183822631836

Token 141: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0011079480173066258
    2. '.ts' → logprob: -6.876108169555664
    3. '.min' → logprob: -9.626108169555664
    4. 'min' → logprob: -12.501108169555664
    5. '.tsv' → logprob: -12.626108169555664
    6. '.' → logprob: -13.626108169555664
    7. ' .' → logprob: -14.876108169555664
    8. 'ts' → logprob: -15.876108169555664
    9. ' tsum' → logprob: -16.251108169555664
    10. '	ts' → logprob: -16.251108169555664

Token 142: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0012393947690725327
    2. 's' → logprob: -7.12623929977417
    3. '.sum' → logprob: -8.751239776611328
    4. 'psum' → logprob: -9.001239776611328
    5. 'sup' → logprob: -9.876239776611328
    6. 'su' → logprob: -9.876239776611328
    7. 'summ' → logprob: -10.751239776611328
    8. 'um' → logprob: -11.626239776611328
    9. '.s' → logprob: -12.501239776611328
    10. 'ts' → logprob: -13.126239776611328

Token 143: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5782356858253479
    2. '+' → logprob: -0.8282356858253479
    3. '+b' → logprob: -6.078235626220703
    4. '+c' → logprob: -14.328235626220703
    5. '+a' → logprob: -15.203235626220703
    6. 'b' → logprob: -15.453235626220703
    7. ' b' → logprob: -16.578235626220703
    8. '＋' → logprob: -16.703235626220703
    9. ' ' → logprob: -16.828235626220703
    10. ' ' → logprob: -17.328235626220703

Token 144: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759445428848267
    2. 'b' → logprob: -0.8259445428848267
    3. ' ' → logprob: -12.325944900512695
    4. ')b' → logprob: -15.325944900512695
    5. ')' → logprob: -16.575944900512695
    6. '	b' → logprob: -16.950944900512695
    7. ''' → logprob: -17.075944900512695
    8. '(b' → logprob: -17.325944900512695
    9. '  ' → logprob: -17.450944900512695
    10. ''b' → logprob: -17.700944900512695

Token 145: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.00018577903392724693
    2. '.' → logprob: -8.6251859664917
    3. '.m' → logprob: -12.7501859664917
    4. ' .' → logprob: -13.6251859664917
    5. '.minimum' → logprob: -14.2501859664917
    6. 'min' → logprob: -14.2501859664917
    7. ''.' → logprob: -16.000185012817383
    8. '".' → logprob: -16.500185012817383
    9. '	min' → logprob: -16.500185012817383
    10. '.pre' → logprob: -16.500185012817383

Token 146: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -3.128163257315464e-07
    2. 'pr' → logprob: -15.5
    3. '(pre' → logprob: -18.125
    4. '_pre' → logprob: -18.375
    5. ' pre' → logprob: -18.375
    6. '	pre' → logprob: -18.375
    7. 'per' → logprob: -18.5
    8. 'preter' → logprob: -18.75
    9. 'prem' → logprob: -18.75
    10. 'pres' → logprob: -18.75

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019355426775291562
    2. ')
' → logprob: -6.2519354820251465
    3. ' )' → logprob: -12.126935958862305
    4. '   ' → logprob: -13.751935958862305
    5. ')return' → logprob: -15.501935958862305
    6. ')
' → logprob: -15.626935958862305
    7. ' )
' → logprob: -16.376935958862305
    8. ')

' → logprob: -18.001935958862305
    9. ' ' → logprob: -19.251935958862305
    10. 'return' → logprob: -19.251935958862305

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01640816405415535
    2. 'return' → logprob: -4.5164079666137695
    3. ' return' → logprob: -5.3914079666137695
    4. '	return' → logprob: -7.5164079666137695
    5. '
' → logprob: -8.64140796661377
    6. '    
' → logprob: -10.51640796661377
    7. ':return' → logprob: -11.64140796661377
    8. ' ' → logprob: -12.01640796661377
    9. '\n' → logprob: -12.39140796661377
    10. ')' → logprob: -12.39140796661377

Token 149: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41180312633514404
    2. 'return' (adapté à ' return') → logprob: -1.411803126335144
    3. ' return' → logprob: -2.4118032455444336
    4. '	return' → logprob: -5.786803245544434
    5. '
' → logprob: -6.911803245544434
    6. ' ' → logprob: -9.536803245544434
    7. ':return' → logprob: -10.536803245544434
    8. '    
' → logprob: -11.911803245544434
    9. '  ' → logprob: -12.161803245544434
    10. '```' → logprob: -12.536803245544434

Token 150: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01416350994259119
    2. ' c' → logprob: -4.264163494110107
    3. '	c' → logprob: -19.514163970947266
    4. ')c' → logprob: -22.639163970947266
    5. '(c' → logprob: -23.389163970947266
    6. '_c' → logprob: -23.639163970947266
    7. ' ' → logprob: -24.014163970947266
    8. '<c' → logprob: -24.639163970947266
    9. '*c' → logprob: -24.889163970947266
    10. '$c' → logprob: -25.389163970947266

Token 151: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.055705927312374115
    2. '<|end|>' → logprob: -3.805706024169922
    3. 'def' → logprob: -3.930706024169922
    4. '

' → logprob: -4.680706024169922
    5. 'class' → logprob: -6.430706024169922
    6. '#' → logprob: -8.055706024169922
    7. '<|end|>' → logprob: -8.555706024169922
    8. '```' → logprob: -8.680706024169922
    9. ' 
' → logprob: -8.930706024169922
    10. '  
' → logprob: -9.305706024169922

Token 152: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5967363119125366
    2. 'def' → logprob: -0.9717363119125366
    3. '
' → logprob: -3.471736431121826
    4. '<|end|>' → logprob: -3.971736431121826
    5. '#' → logprob: -4.721736431121826
    6. ' 
' → logprob: -5.221736431121826
    7. 'import' → logprob: -6.721736431121826
    8. '  
' → logprob: -6.846736431121826
    9. '    
' → logprob: -6.971736431121826
    10. 'n' → logprob: -7.471736431121826

Token 153: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.013107990846037865
    2. 'build' → logprob: -4.513107776641846
    3. ' update' → logprob: -6.638107776641846
    4. ' solve' → logprob: -8.513108253479004
    5. ' main' → logprob: -8.888108253479004
    6. ' segment' → logprob: -9.138108253479004
    7. '_build' → logprob: -10.013108253479004
    8. ' seg' → logprob: -10.138108253479004
    9. ' init' → logprob: -10.138108253479004
    10. 'update' → logprob: -10.513108253479004

Token 154: '(a' (ID: 6271)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.032037168741226196
    2. '(a' → logprob: -3.5320372581481934
    3. '(node' → logprob: -6.782037258148193
    4. '(' → logprob: -8.032036781311035
    5. '(l' → logprob: -8.032036781311035
    6. '(tree' → logprob: -8.657036781311035
    7. '(array' → logprob: -9.407036781311035
    8. '(seg' → logprob: -9.407036781311035
    9. '(lst' → logprob: -10.782036781311035
    10. '(nodes' → logprob: -10.907036781311035

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.664371848164592e-05
    2. ' ,' → logprob: -11.250016212463379
    3. ',n' → logprob: -13.500016212463379
    4. ',a' → logprob: -14.250016212463379
    5. ',node' → logprob: -14.625016212463379
    6. ',v' → logprob: -15.250016212463379
    7. ',l' → logprob: -15.375016212463379
    8. ',i' → logprob: -16.250017166137695
    9. '):' → logprob: -16.250017166137695
    10. ',pos' → logprob: -16.500017166137695

Token 156: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.972989559173584
    2. ' v' → logprob: -1.722989559173584
    3. 'l' → logprob: -1.847989559173584
    4. 'idx' → logprob: -2.847989559173584
    5. ' l' → logprob: -3.347989559173584
    6. 's' → logprob: -3.347989559173584
    7. 'i' → logprob: -3.347989559173584
    8. 'b' → logprob: -3.472989559173584
    9. 't' → logprob: -4.097989559173584
    10. ' idx' → logprob: -4.597989559173584

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002233245177194476
    2. ' ,' → logprob: -9.250223159790039
    3. 'ector' → logprob: -10.000223159790039
    4. ',i' → logprob: -10.375223159790039
    5. 'al' → logprob: -11.500223159790039
    6. ',int' → logprob: -11.500223159790039
    7. ',a' → logprob: -12.000223159790039
    8. ',l' → logprob: -12.375223159790039
    9. 'o' → logprob: -12.750223159790039
    10. '[],' → logprob: -13.000223159790039

Token 158: ' i' (ID: 575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18376290798187256
    2. 'idx' → logprob: -2.433763027191162
    3. 'i' → logprob: -3.433763027191162
    4. ' l' → logprob: -4.308763027191162
    5. '0' → logprob: -4.558763027191162
    6. 'tl' → logprob: -5.058763027191162
    7. 's' → logprob: -5.308763027191162
    8. 't' → logprob: -5.808763027191162
    9. 'pos' → logprob: -6.058763027191162
    10. ' idx' → logprob: -6.183763027191162

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00806294847279787
    2. 'x' → logprob: -5.008062839508057
    3. ' ,' → logprob: -7.258062839508057
    4. 'ex' → logprob: -8.258063316345215
    5. 'dx' → logprob: -9.133063316345215
    6. 'nd' → logprob: -9.383063316345215
    7. 'dex' → logprob: -9.633063316345215
    8. 'nt' → logprob: -9.883063316345215
    9. 'n' → logprob: -11.008063316345215
    10. 'r' → logprob: -11.508063316345215

Token 160: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.17099203169345856
    2. 'l' → logprob: -1.9209920167922974
    3. ' j' → logprob: -4.920991897583008
    4. 'r' → logprob: -6.920991897583008
    5. ' l' → logprob: -7.045991897583008
    6. 'tl' → logprob: -7.420991897583008
    7. 't' → logprob: -8.170991897583008
    8. 's' → logprob: -8.420991897583008
    9. 'b' → logprob: -8.920991897583008
    10. 'L' → logprob: -9.420991897583008

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009238460334017873
    2. ')' → logprob: -7.0009236335754395
    3. '):
' → logprob: -11.750924110412598
    4. ' ):' → logprob: -12.500924110412598
    5. ':' → logprob: -14.375924110412598
    6. '):
' → logprob: -16.37592315673828
    7. '):

' → logprob: -17.25092315673828
    8. ',' → logprob: -17.87592315673828
    9. ')：' → logprob: -17.87592315673828
    10. ' ' → logprob: -18.75092315673828

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11665786057710648
    2. 'if' → logprob: -2.3666579723358154
    3. ' if' → logprob: -4.116657733917236
    4. '	if' → logprob: -10.991658210754395
    5. ' ' → logprob: -14.741658210754395
    6. '  ' → logprob: -15.241658210754395
    7. '   ' → logprob: -15.741658210754395
    8. '    ' → logprob: -16.366657257080078
    9. '       ' → logprob: -17.991657257080078
    10. 'If' → logprob: -18.491657257080078

Token 163: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15643569827079773
    2. ' if' → logprob: -2.40643572807312
    3. '   ' → logprob: -2.90643572807312
    4. '	if' → logprob: -12.0314359664917
    5. ' ' → logprob: -14.6564359664917
    6. '    ' → logprob: -15.0314359664917
    7. '  ' → logprob: -15.1564359664917
    8. ';if' → logprob: -16.031435012817383
    9. 'If' → logprob: -16.906435012817383
    10. '```' → logprob: -17.281435012817383

Token 164: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05643989518284798
    2. 'i' → logprob: -2.9314398765563965
    3. ' j' → logprob: -6.6814398765563965
    4. 'j' → logprob: -8.931440353393555
    5. '	i' → logprob: -9.431440353393555
    6. ' ' → logprob: -9.681440353393555
    7. '   ' → logprob: -10.681440353393555
    8. '  ' → logprob: -12.806440353393555
    9. ' ' → logprob: -14.056440353393555
    10. '	j' → logprob: -15.056440353393555

Token 165: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1661636084318161
    2. ' ==' → logprob: -1.9161635637283325
    3. '>' → logprob: -5.791163444519043
    4. ' >' → logprob: -6.666163444519043
    5. '>=' → logprob: -6.916163444519043
    6. '+' → logprob: -8.166163444519043
    7. ' >=' → logprob: -8.666163444519043
    8. '=' → logprob: -9.041163444519043
    9. '[' → logprob: -11.916163444519043
    10. '<=' → logprob: -12.416163444519043

Token 166: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12693408131599426
    2. ' j' → logprob: -2.126934051513672
    3. '   ' → logprob: -12.501934051513672
    4. '    ' → logprob: -13.751934051513672
    5. '	j' → logprob: -14.001934051513672
    6. ' ' → logprob: -15.126934051513672
    7. '  ' → logprob: -16.251934051513672
    8. 'v' → logprob: -17.376934051513672
    9. '=j' → logprob: -18.001934051513672
    10. ':j' → logprob: -18.001934051513672

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007613374851644039
    2. ':
' → logprob: -4.882613182067871
    3. ':return' → logprob: -13.007613182067871
    4. ' :' → logprob: -13.132613182067871
    5. ':
' → logprob: -13.757613182067871
    6. '   ' → logprob: -14.507613182067871
    7. '):' → logprob: -14.757613182067871
    8. ':

' → logprob: -15.007613182067871
    9. ' :
' → logprob: -15.382613182067871
    10. ':\' → logprob: -15.507613182067871

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04735749214887619
    2. ':' → logprob: -3.9223575592041016
    3. ':
' → logprob: -4.422357559204102
    4. 'v' → logprob: -4.922357559204102
    5. ' v' → logprob: -5.547357559204102
    6. '   ' → logprob: -6.047357559204102
    7. '
' → logprob: -8.172357559204102
    8. ',' → logprob: -8.672357559204102
    9. '[v' → logprob: -9.422357559204102
    10. '        
' → logprob: -10.422357559204102

Token 169: ' val' (ID: 1459)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4598847031593323
    2. ' v' → logprob: -1.3348846435546875
    3. '   ' → logprob: -2.7098846435546875
    4. 'a' → logprob: -3.8348846435546875
    5. '       ' → logprob: -4.9598846435546875
    6. '
' → logprob: -5.2098846435546875
    7. ' a' → logprob: -5.4598846435546875
    8. '	v' → logprob: -8.959884643554688
    9. '    
' → logprob: -9.459884643554688
    10. ' node' → logprob: -9.459884643554688

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20643936097621918
    2. '=' → logprob: -1.7064393758773804
    3. 'ue' → logprob: -5.33143949508667
    4. '   ' → logprob: -9.956439018249512
    5. '=v' → logprob: -10.581439018249512
    6. 'u' → logprob: -10.706439018249512
    7. 'e' → logprob: -10.831439018249512
    8. 'ues' → logprob: -11.206439018249512
    9. 'alue' → logprob: -12.331439018249512
    10. ' ' → logprob: -12.331439018249512

Token 171: ' ' (ID: 220)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.597108006477356
    2. 'a' → logprob: -0.847108006477356
    3. 'v' → logprob: -4.597107887268066
    4. ' v' → logprob: -4.847107887268066
    5. ' ' → logprob: -7.097107887268066
    6. '0' → logprob: -7.097107887268066
    7. '1' → logprob: -7.472107887268066
    8. ' Node' → logprob: -7.972107887268066
    9. 'Node' → logprob: -8.722107887268066
    10. ' [' → logprob: -9.972107887268066

Token 172: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6084498763084412
    2. '1' → logprob: -0.8584498763084412
    3. 'v' → logprob: -3.608449935913086
    4. '-' → logprob: -6.233449935913086
    5. '(' → logprob: -7.233449935913086
    6. '0' → logprob: -7.733449935913086
    7. 'int' → logprob: -7.733449935913086
    8. ' ' → logprob: -7.858449935913086
    9. '(a' → logprob: -7.858449935913086
    10. ' a' → logprob: -8.608449935913086

Token 173: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07889088988304138
    2. 'if' → logprob: -2.578890800476074
    3. '
' → logprob: -14.953890800476074
    4. '-' → logprob: -15.453890800476074
    5. 's' → logprob: -16.20389175415039
    6. 'i' → logprob: -16.45389175415039
    7. '```' → logprob: -16.57889175415039
    8. ' ' → logprob: -16.82889175415039
    9. '<<' → logprob: -16.95389175415039
    10. '	if' → logprob: -16.95389175415039

Token 174: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1135774701833725
    2. 'a' → logprob: -2.238577365875244
    3. ' v' → logprob: -7.488577365875244
    4. 'v' → logprob: -8.613577842712402
    5. ' ' → logprob: -12.363577842712402
    6. '(a' → logprob: -12.988577842712402
    7. '	a' → logprob: -13.426077842712402
    8. '_a' → logprob: -13.988577842712402
    9. ' (' → logprob: -14.113577842712402
    10. ' ' → logprob: -14.238577842712402

Token 175: '[i' (ID: 1768)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.001453686272725463
    2. '[i' → logprob: -6.626453876495361
    3. '[' → logprob: -9.126453399658203
    4. 'v' → logprob: -11.501453399658203
    5. ' v' → logprob: -13.001453399658203
    6. ' [' → logprob: -13.376453399658203
    7. '[j' → logprob: -13.626453399658203
    8. '[val' → logprob: -14.001453399658203
    9. '[
' → logprob: -14.376453399658203
    10. '[u' → logprob: -14.751453399658203

Token 176: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05050439387559891
    2. ']==' → logprob: -3.175504446029663
    3. '[i' → logprob: -5.425504207611084
    4. ' ]' → logprob: -6.550504207611084
    5. ']=='' → logprob: -7.425504207611084
    6. '[' → logprob: -8.175504684448242
    7. '==' → logprob: -9.050504684448242
    8. ' ' → logprob: -9.050504684448242
    9. '][' → logprob: -9.175504684448242
    10. '(i' → logprob: -9.800504684448242

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010126473382115364
    2. '0' → logprob: -5.01012659072876
    3. ']' → logprob: -7.01012659072876
    4. ' ' → logprob: -7.13512659072876
    5. 'v' → logprob: -7.26012659072876
    6. '-' → logprob: -7.88512659072876
    7. ']==' → logprob: -8.510126113891602
    8. ')' → logprob: -9.385126113891602
    9. 'i' → logprob: -9.510126113891602
    10. 'val' → logprob: -9.635126113891602

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1480218768119812
    2. ']==' → logprob: -2.523021936416626
    3. ' ==' → logprob: -3.648021936416626
    4. '==' → logprob: -4.023021697998047
    5. ' ]' → logprob: -5.273021697998047
    6. ']=='' → logprob: -5.523021697998047
    7. ' ' → logprob: -6.523021697998047
    8. ')' → logprob: -7.398021697998047
    9. '=='' → logprob: -8.023021697998047
    10. ' else' → logprob: -8.023021697998047

Token 179: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7057122588157654
    2. ' ==' → logprob: -0.7057122588157654
    3. 'else' → logprob: -5.58071231842041
    4. ' else' → logprob: -5.83071231842041
    5. '=='' → logprob: -6.58071231842041
    6. '>' → logprob: -6.83071231842041
    7. ' ' → logprob: -6.95571231842041
    8. '[' → logprob: -7.33071231842041
    9. '=' → logprob: -8.08071231842041
    10. '(' → logprob: -8.33071231842041

Token 180: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009619263932108879
    2. '"' → logprob: -4.884619235992432
    3. ' '('' → logprob: -6.259619235992432
    4. '')' → logprob: -10.50961971282959
    5. '"+"' → logprob: -10.75961971282959
    6. ''"' → logprob: -11.63461971282959
    7. ''+' → logprob: -11.88461971282959
    8. ' "("' → logprob: -12.50961971282959
    9. ''-' → logprob: -12.50961971282959
    10. ''b' → logprob: -12.75961971282959

Token 181: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.011048054322600365
    2. 'else' → logprob: -4.511047840118408
    3. '	else' → logprob: -16.63604736328125
    4. ' ' → logprob: -16.76104736328125
    5. '-' → logprob: -18.01104736328125
    6. ' els' → logprob: -18.26104736328125
    7. ')' → logprob: -18.76104736328125
    8. '        ' → logprob: -18.76104736328125
    9. '    ' → logprob: -19.38604736328125
    10. ' ' → logprob: -19.38604736328125

Token 182: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006722233723849058
    2. ' -' → logprob: -5.006722450256348
    3. '0' → logprob: -12.881722450256348
    4. ' ' → logprob: -13.256722450256348
    5. '   ' → logprob: -14.256722450256348
    6. '1' → logprob: -14.631722450256348
    7. '(-' → logprob: -14.756722450256348
    8. ')' → logprob: -16.00672149658203
    9. '  ' → logprob: -16.13172149658203
    10. '	' → logprob: -16.44422149658203

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.12500286102295
    3. '<|end|>' → logprob: -14.62500286102295
    4. '  ' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '<|end|>' → logprob: -18.750001907348633
    7. '
' → logprob: -19.000001907348633
    8. ')' → logprob: -19.000001907348633
    9. '```' → logprob: -19.125001907348633
    10. '0' → logprob: -19.312501907348633

Token 184: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.000477620807942003
    2. '
' → logprob: -8.37547779083252
    3. ')
' → logprob: -9.12547779083252
    4. ' 
' → logprob: -9.25047779083252
    5. '    
' → logprob: -11.25047779083252
    6. '        
' → logprob: -12.12547779083252
    7. '       ' → logprob: -12.25047779083252
    8. '\n' → logprob: -12.75047779083252
    9. 'def' → logprob: -12.75047779083252
    10. 'c' → logprob: -13.00047779083252

Token 185: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20317217707633972
    2. '       ' → logprob: -1.703172206878662
    3. '
' → logprob: -6.953172206878662
    4. ' c' → logprob: -8.453171730041504
    5. 'c' → logprob: -9.078171730041504
    6. '        
' → logprob: -9.078171730041504
    7. ',' → logprob: -9.328171730041504
    8. ' 
' → logprob: -9.953171730041504
    9. '   ' → logprob: -10.078171730041504
    10. 'v' → logprob: -10.578171730041504

Token 186: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.027790462598204613
    2. ' v' → logprob: -4.027790546417236
    3. 'return' → logprob: -5.402790546417236
    4. 'a' → logprob: -6.277790546417236
    5. 'node' → logprob: -6.652790546417236
    6. '   ' → logprob: -6.902790546417236
    7. ' return' → logprob: -8.152790069580078
    8. 'tree' → logprob: -9.152790069580078
    9. '
' → logprob: -9.277790069580078
    10. 't' → logprob: -9.277790069580078

Token 187: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.921253225300461e-05
    2. '[' → logprob: -9.750069618225098
    3. '.i' → logprob: -12.375069618225098
    4. '.' → logprob: -12.750069618225098
    5. '[node' → logprob: -13.625069618225098
    6. '[l' → logprob: -14.375069618225098
    7. '[j' → logprob: -15.375069618225098
    8. 'i' → logprob: -15.375069618225098
    9. '.append' → logprob: -15.500069618225098
    10. '[v' → logprob: -15.625069618225098

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02726278081536293
    2. '][' → logprob: -4.1522626876831055
    3. '].' → logprob: -4.9022626876831055
    4. ']=' → logprob: -5.9022626876831055
    5. ' ]' → logprob: -7.4022626876831055
    6. '[i' → logprob: -8.652262687683105
    7. ' ' → logprob: -9.902262687683105
    8. '[' → logprob: -10.152262687683105
    9. ' ].' → logprob: -10.527262687683105
    10. ' ][' → logprob: -10.652262687683105

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31507015228271484
    2. '=' → logprob: -1.3150701522827148
    3. '.' → logprob: -7.065070152282715
    4. '.v' → logprob: -9.065070152282715
    5. '=i' → logprob: -9.315070152282715
    6. '.i' → logprob: -9.440070152282715
    7. '[' → logprob: -9.565070152282715
    8. '[i' → logprob: -9.565070152282715
    9. '.val' → logprob: -9.690070152282715
    10. '.set' → logprob: -9.690070152282715

Token 190: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.0619983896613121
    2. ' Node' → logprob: -2.8119983673095703
    3. '   ' → logprob: -11.06199836730957
    4. '	Node' → logprob: -11.56199836730957
    5. ' ' → logprob: -12.81199836730957
    6. '  ' → logprob: -14.18699836730957
    7. '(Node' → logprob: -14.31199836730957
    8. '_Node' → logprob: -14.56199836730957
    9. '_node' → logprob: -15.43699836730957
    10. '.Node' → logprob: -15.56199836730957

Token 191: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41610097885131836
    2. '(i' → logprob: -1.7911009788513184
    3. '(l' → logprob: -2.2911009788513184
    4. '()' → logprob: -2.6661009788513184
    5. '(None' → logprob: -6.041100978851318
    6. '(n' → logprob: -8.666101455688477
    7. '(
' → logprob: -9.291101455688477
    8. '(v' → logprob: -10.166101455688477
    9. '()(' → logprob: -10.166101455688477
    10. '((' → logprob: -10.416101455688477

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002144431695342064
    2. ',i' → logprob: -6.5021443367004395
    3. ' ,' → logprob: -7.3771443367004395
    4. '   ' → logprob: -11.877144813537598
    5. ' ' → logprob: -12.127144813537598
    6. ')' → logprob: -13.252144813537598
    7. ',j' → logprob: -13.752144813537598
    8. ',
' → logprob: -14.252144813537598
    9. 'i' → logprob: -15.627144813537598
    10. ' i' → logprob: -15.627144813537598

Token 193: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07892085611820221
    2. 'j' → logprob: -2.578920841217041
    3. ' i' → logprob: -10.5789213180542
    4. ' j' → logprob: -12.8289213180542
    5. '	i' → logprob: -13.8289213180542
    6. '   ' → logprob: -14.4539213180542
    7. '  ' → logprob: -15.2039213180542
    8. '_i' → logprob: -15.3289213180542
    9. ' ' → logprob: -15.5789213180542
    10. '	j' → logprob: -15.8289213180542

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005586025770753622
    2. ' ,' → logprob: -5.38058614730835
    3. ',val' → logprob: -7.00558614730835
    4. ')' → logprob: -10.755585670471191
    5. '   ' → logprob: -11.255585670471191
    6. ',
' → logprob: -11.755585670471191
    7. 'val' → logprob: -12.630585670471191
    8. ',v' → logprob: -12.630585670471191
    9. '       ' → logprob: -13.380585670471191
    10. ' ' → logprob: -13.505585670471191

Token 195: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0019318510312587023
    2. ' val' → logprob: -6.251931667327881
    3. '	val' → logprob: -13.751932144165039
    4. '[val' → logprob: -14.001932144165039
    5. ',val' → logprob: -14.126932144165039
    6. '(val' → logprob: -15.626932144165039
    7. '<|end|>' → logprob: -16.25193214416504
    8. ' ' → logprob: -16.37693214416504
    9. '   ' → logprob: -16.37693214416504
    10. '_val' → logprob: -17.12693214416504

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02144308015704155
    2. ',val' → logprob: -4.146442890167236
    3. ' ,' → logprob: -5.271442890167236
    4. 'val' → logprob: -8.396443367004395
    5. '[val' → logprob: -11.396443367004395
    6. ' val' → logprob: -11.521443367004395
    7. '   ' → logprob: -12.271443367004395
    8. ')' → logprob: -13.271443367004395
    9. '(val' → logprob: -14.021443367004395
    10. ',
' → logprob: -14.396443367004395

Token 197: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08285059779882431
    2. 'val' → logprob: -2.832850694656372
    3. ' min' → logprob: -3.957850694656372
    4. ' val' → logprob: -6.582850456237793
    5. 'max' → logprob: -10.082850456237793
    6. '0' → logprob: -10.457850456237793
    7. '=min' → logprob: -10.832850456237793
    8. '	min' → logprob: -10.957850456237793
    9. 'minimum' → logprob: -11.332850456237793
    10. ' ' → logprob: -11.332850456237793

Token 198: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12926170229911804
    2. '(val' → logprob: -2.1292617321014404
    3. 'val' → logprob: -6.129261493682861
    4. '0' → logprob: -8.87926197052002
    5. '(v' → logprob: -13.00426197052002
    6. ' val' → logprob: -13.00426197052002
    7. '	val' → logprob: -13.37926197052002
    8. '(
' → logprob: -13.75426197052002
    9. '[val' → logprob: -13.87926197052002
    10. '(min' → logprob: -14.00426197052002

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06780773401260376
    2. 'val' → logprob: -2.942807674407959
    3. '(' → logprob: -4.442807674407959
    4. '(val' → logprob: -6.942807674407959
    5. ' ' → logprob: -10.692808151245117
    6. ')' → logprob: -10.942808151245117
    7. ' val' → logprob: -11.192808151245117
    8. '_val' → logprob: -11.567808151245117
    9. '	val' → logprob: -11.817808151245117
    10. '[val' → logprob: -11.817808151245117

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12701316177845
    2. ',val' → logprob: -2.1270132064819336
    3. ' ,' → logprob: -9.627013206481934
    4. ',v' → logprob: -11.502013206481934
    5. 'val' → logprob: -12.377013206481934
    6. ',
' → logprob: -13.002013206481934
    7. ',value' → logprob: -14.002013206481934
    8. ',

' → logprob: -15.127013206481934
    9. ',int' → logprob: -16.127012252807617
    10. '

' → logprob: -16.252012252807617

Token 201: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.06196993216872215
    2. ' val' → logprob: -2.8119699954986572
    3. '	val' → logprob: -13.436969757080078
    4. '   ' → logprob: -15.186969757080078
    5. ' ' → logprob: -15.311969757080078
    6. '  ' → logprob: -16.061969757080078
    7. '(val' → logprob: -16.311969757080078
    8. '[val' → logprob: -17.186969757080078
    9. '_val' → logprob: -17.436969757080078
    10. '<|end|>' → logprob: -17.561969757080078

Token 202: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.11946132034063339
    2. '))
' → logprob: -2.2444612979888916
    3. ' ))' → logprob: -5.369461536407471
    4. ' ))
' → logprob: -6.494461536407471
    5. ')' → logprob: -8.119461059570312
    6. '))
' → logprob: -9.744461059570312
    7. ')
' → logprob: -10.369461059570312
    8. '   ' → logprob: -10.369461059570312
    9. ' )' → logprob: -11.869461059570312
    10. ' ' → logprob: -11.994461059570312

Token 203: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039575349539518356
    2. '       ' → logprob: -3.4145753383636475
    3. '	return' → logprob: -5.289575576782227
    4. 'return' → logprob: -7.664575576782227
    5. '	' → logprob: -9.289575576782227
    6. ' return' → logprob: -9.289575576782227
    7. '
' → logprob: -10.039575576782227
    8. '	else' → logprob: -10.414575576782227
    9. '	elif' → logprob: -10.789575576782227
    10. '<|end|>' → logprob: -10.789575576782227

Token 204: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.22187648713588715
    2. '   ' → logprob: -2.096876382827759
    3. '       ' → logprob: -2.721876382827759
    4. ' return' → logprob: -4.596876621246338
    5. '	return' → logprob: -8.59687614440918
    6. ' ' → logprob: -10.72187614440918
    7. '    ' → logprob: -10.72187614440918
    8. 'else' → logprob: -10.84687614440918
    9. '     ' → logprob: -11.34687614440918
    10. '           ' → logprob: -11.47187614440918

Token 205: ' v' (ID: 323)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8879404664039612
    2. 'v' → logprob: -1.5129404067993164
    3. 'build' → logprob: -2.0129404067993164
    4. ' v' → logprob: -3.1379404067993164
    5. 'i' → logprob: -3.1379404067993164
    6. ' 
' → logprob: -3.2629404067993164
    7. 'None' → logprob: -3.2629404067993164
    8. ' build' → logprob: -3.8879404067993164
    9. ' None' → logprob: -3.8879404067993164
    10. ' i' → logprob: -4.887940406799316

Token 206: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23842085897922516
    2. ' i' → logprob: -1.613420844078064
    3. '[i' → logprob: -4.3634209632873535
    4. ' ' → logprob: -9.863420486450195
    5. 'v' → logprob: -10.488420486450195
    6. '(i' → logprob: -10.613420486450195
    7. ' v' → logprob: -11.113420486450195
    8. 'j' → logprob: -11.238420486450195
    9. '[' → logprob: -11.738420486450195
    10. ' j' → logprob: -11.863420486450195

Token 207: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006129555404186249
    2. ']' → logprob: -8.50061321258545
    3. '])' → logprob: -8.62561321258545
    4. ' )' → logprob: -9.12561321258545
    5. ')
' → logprob: -10.00061321258545
    6. '[i' → logprob: -10.12561321258545
    7. ')i' → logprob: -11.12561321258545
    8. ')]' → logprob: -12.75061321258545
    9. ' ' → logprob: -12.75061321258545
    10. '   ' → logprob: -12.87561321258545

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13503389060497284
    2. '<|end|>' → logprob: -2.2600338459014893
    3. '    
' → logprob: -4.260034084320068
    4. '
' → logprob: -6.385034084320068
    5. '	
' → logprob: -6.510034084320068
    6. '<|end|>' → logprob: -6.885034084320068
    7. 'v' → logprob: -7.135034084320068
    8. '```' → logprob: -8.38503360748291
    9. '[' → logprob: -8.51003360748291
    10. '  
' → logprob: -8.51003360748291

Token 209: ' m' (ID: 284)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.9507191181182861
    2. 'm' (adapté à ' m') → logprob: -1.2007191181182861
    3. 'mid' → logprob: -1.4507191181182861
    4. ' m' → logprob: -2.575719118118286
    5. '   ' → logprob: -6.200718879699707
    6. '	m' → logprob: -11.325718879699707
    7. '
' → logprob: -11.950718879699707
    8. '    
' → logprob: -12.825718879699707
    9. ' ' → logprob: -13.200718879699707
    10. ' 
' → logprob: -13.825718879699707

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20157042145729065
    2. '=' → logprob: -1.7015703916549683
    3. ' ' → logprob: -9.326570510864258
    4. 'iddle' → logprob: -10.576570510864258
    5. 'id' → logprob: -11.576570510864258
    6. '=(' → logprob: -11.701570510864258
    7. '=int' → logprob: -12.076570510864258
    8. ',' → logprob: -12.201570510864258
    9. '   ' → logprob: -12.451570510864258
    10. '=i' → logprob: -13.076570510864258

Token 211: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.029752805829048157
    2. ' (' → logprob: -3.529752731323242
    3. ' ' → logprob: -13.779752731323242
    4. '   ' → logprob: -14.154752731323242
    5. 'i' → logprob: -15.279752731323242
    6. '(I' → logprob: -15.904752731323242
    7. '(' → logprob: -16.404752731323242
    8. ' i' → logprob: -16.529752731323242
    9. '
' → logprob: -17.279752731323242
    10. '(ii' → logprob: -18.529752731323242

Token 212: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.961759259458631e-06
    2. ' i' → logprob: -12.250004768371582
    3. '(i' → logprob: -16.5000057220459
    4. '	i' → logprob: -17.7500057220459
    5. '   ' → logprob: -18.1250057220459
    6. ' ' → logprob: -20.3750057220459
    7. '_i' → logprob: -20.7500057220459
    8. '[i' → logprob: -20.7500057220459
    9. ')i' → logprob: -20.8750057220459
    10. '{i' → logprob: -21.3750057220459

Token 213: '+j' (ID: 71365)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12274152785539627
    2. ' +' → logprob: -2.622741460800171
    3. '+i' → logprob: -3.497741460800171
    4. '+j' → logprob: -4.37274169921875
    5. '+
' → logprob: -11.74774169921875
    6. ' ' → logprob: -12.24774169921875
    7. '+m' → logprob: -12.49774169921875
    8. '+r' → logprob: -14.12274169921875
    9. '＋' → logprob: -14.37274169921875
    10. '+n' → logprob: -14.49774169921875

Token 214: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31470611691474915
    2. ')//' → logprob: -1.3147060871124268
    3. ')>>' → logprob: -6.564706325531006
    4. ' )' → logprob: -10.314705848693848
    5. ')
' → logprob: -13.939705848693848
    6. '>>' → logprob: -17.439706802368164
    7. ')#' → logprob: -17.564706802368164
    8. '//' → logprob: -17.689706802368164
    9. ' ' → logprob: -18.189706802368164
    10. ')<<' → logprob: -18.564706802368164

Token 215: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.500036239624023
    4. '۲' → logprob: -19.125036239624023
    5. '  ' → logprob: -19.875036239624023
    6. '２' → logprob: -20.000036239624023
    7. '२' → logprob: -20.250036239624023
    8. '```' → logprob: -20.375036239624023
    9. '3' → logprob: -20.437536239624023
    10. '{' → logprob: -20.625036239624023

Token 216: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2080825567245483
    2. 'left' → logprob: -1.2080825567245483
    3. ' left' → logprob: -1.7080825567245483
    4. 'a' → logprob: -2.208082675933838
    5. ' v' → logprob: -3.083082675933838
    6. 'l' → logprob: -3.458082675933838
    7. ' a' → logprob: -4.333082675933838
    8. '   ' → logprob: -4.583082675933838
    9. ' l' → logprob: -5.083082675933838
    10. 'u' → logprob: -7.333082675933838

Token 217: '   ' (ID: 271)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.20486877858638763
    2. 'a' → logprob: -2.579868793487549
    3. ' left' → logprob: -2.954868793487549
    4. 'v' → logprob: -3.204868793487549
    5. 'l' → logprob: -4.954868793487549
    6. 'lv' → logprob: -5.079868793487549
    7. 'vl' → logprob: -6.704868793487549
    8. 'va' → logprob: -7.704868793487549
    9. ' a' → logprob: -8.07986831665039
    10. ' v' → logprob: -8.45486831665039

Token 218: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.025835027918219566
    2. 'lv' → logprob: -4.275835037231445
    3. 'a' → logprob: -5.400835037231445
    4. 'l' → logprob: -5.650835037231445
    5. ' left' → logprob: -7.025835037231445
    6. 'v' → logprob: -7.275835037231445
    7. 'vl' → logprob: -7.275835037231445
    8. 'la' → logprob: -7.900835037231445
    9. 'le' → logprob: -8.900835037231445
    10. 'x' → logprob: -9.025835037231445

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004430947359651327
    2. '=' → logprob: -5.504430770874023
    3. '_node' → logprob: -8.129430770874023
    4. 'v' → logprob: -10.504430770874023
    5. 'node' → logprob: -11.504430770874023
    6. ' ' → logprob: -11.754430770874023
    7. ',' → logprob: -12.379430770874023
    8. 'Node' → logprob: -12.879430770874023
    9. '_' → logprob: -13.504430770874023
    10. '_child' → logprob: -13.754430770874023

Token 220: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.048587825149297714
    2. ' build' → logprob: -3.0485877990722656
    3. '	build' → logprob: -15.173587799072266
    4. '(build' → logprob: -15.923587799072266
    5. '   ' → logprob: -17.298587799072266
    6. ' buil' → logprob: -18.173587799072266
    7. 'b' → logprob: -18.548587799072266
    8. '.build' → logprob: -19.048587799072266
    9. ' ' → logprob: -19.298587799072266
    10. '
' → logprob: -19.423587799072266

Token 221: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.225939872208983e-05
    2. 'a' → logprob: -10.375032424926758
    3. '(' → logprob: -14.000032424926758
    4. '(v' → logprob: -16.750032424926758
    5. ' a' → logprob: -18.500032424926758
    6. 'v' → logprob: -18.875032424926758
    7. '(
' → logprob: -19.250032424926758
    8. '```' → logprob: -19.750032424926758
    9. '#a' → logprob: -20.750032424926758
    10. ' (' → logprob: -21.250032424926758

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006555621512234211
    2. ',v' → logprob: -5.131555557250977
    3. ' ,' → logprob: -8.006555557250977
    4. 'v' → logprob: -8.631555557250977
    5. '(v' → logprob: -9.506555557250977
    6. ' v' → logprob: -10.131555557250977
    7. '   ' → logprob: -14.256555557250977
    8. '	v' → logprob: -16.131555557250977
    9. ',
' → logprob: -16.506555557250977
    10. '(' → logprob: -16.756555557250977

Token 223: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0031777136027812958
    2. ' v' → logprob: -5.753177642822266
    3. '	v' → logprob: -17.003177642822266
    4. ' ' → logprob: -20.253177642822266
    5. '   ' → logprob: -20.753177642822266
    6. '
' → logprob: -20.878177642822266
    7. ')v' → logprob: -21.503177642822266
    8. '_v' → logprob: -22.003177642822266
    9. ',v' → logprob: -22.253177642822266
    10. '    ' → logprob: -22.753177642822266

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.596781946020201e-05
    2. ' ,' → logprob: -10.000045776367188
    3. ',v' → logprob: -15.625045776367188
    4. ',i' → logprob: -16.000045776367188
    5. ',left' → logprob: -16.375045776367188
    6. ',m' → logprob: -16.625045776367188
    7. '   ' → logprob: -16.875045776367188
    8. 'v' → logprob: -18.375045776367188
    9. ',
' → logprob: -18.750045776367188
    10. '_,' → logprob: -18.875045776367188

Token 225: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.15310683415737e-05
    2. ' i' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.50002098083496
    4. '	i' → logprob: -19.12502098083496
    5. ' ' → logprob: -19.25002098083496
    6. '(i' → logprob: -20.37502098083496
    7. '```' → logprob: -20.50002098083496
    8. '  ' → logprob: -20.75002098083496
    9. '{i' → logprob: -21.00002098083496
    10. '    ' → logprob: -21.12502098083496

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018446780450176448
    2. ',m' → logprob: -8.875184059143066
    3. ' ,' → logprob: -10.125184059143066
    4. 'm' → logprob: -12.375184059143066
    5. '	' → logprob: -15.875184059143066
    6. ',
' → logprob: -16.750185012817383
    7. '	m' → logprob: -17.125185012817383
    8. '   ' → logprob: -17.250185012817383
    9. ' m' → logprob: -17.375185012817383
    10. ' ' → logprob: -17.750185012817383

Token 227: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.627176768844947e-05
    2. ' m' → logprob: -9.250096321105957
    3. '	m' → logprob: -16.37509536743164
    4. '   ' → logprob: -18.62509536743164
    5. ' ' → logprob: -20.12509536743164
    6. ')m' → logprob: -20.12509536743164
    7. '[m' → logprob: -20.25009536743164
    8. '
' → logprob: -21.00009536743164
    9. '    ' → logprob: -21.12509536743164
    10. ',m' → logprob: -21.50009536743164

Token 228: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20161008834838867
    2. ')' → logprob: -1.7016100883483887
    3. ')
' → logprob: -9.201610565185547
    4. ' )
' → logprob: -9.576610565185547
    5. '   ' → logprob: -11.076610565185547
    6. ' )' → logprob: -11.951610565185547
    7. ',' → logprob: -13.076610565185547
    8. ' ' → logprob: -13.951610565185547
    9. ')

' → logprob: -14.201610565185547
    10. ')b' → logprob: -15.701610565185547

Token 229: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.12709660828113556
    2. ' right' → logprob: -2.127096652984619
    3. '   ' → logprob: -8.752096176147461
    4. '	right' → logprob: -11.877096176147461
    5. 'r' → logprob: -14.002096176147461
    6. '.right' → logprob: -14.252096176147461
    7. 'Right' → logprob: -14.377096176147461
    8. '
' → logprob: -14.877096176147461
    9. '[right' → logprob: -15.002096176147461
    10. ',right' → logprob: -15.002096176147461

Token 230: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.006719520781189203
    2. ' right' → logprob: -5.006719589233398
    3. '   ' → logprob: -13.131719589233398
    4. 'r' → logprob: -13.256719589233398
    5. '	right' → logprob: -15.756719589233398
    6. 'Right' → logprob: -16.0067195892334
    7. 'rig' → logprob: -17.1317195892334
    8. '.right' → logprob: -17.5067195892334
    9. '
' → logprob: -17.7567195892334
    10. '[right' → logprob: -17.8817195892334

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020828247070312
    2. '=' → logprob: -2.350208282470703
    3. ')' → logprob: -13.975208282470703
    4. ' ' → logprob: -14.475208282470703
    5. ',' → logprob: -15.850208282470703
    6. '   ' → logprob: -16.850208282470703
    7. ' =)' → logprob: -17.100208282470703
    8. '  ' → logprob: -17.350208282470703
    9. ' =
' → logprob: -17.600208282470703
    10. '(' → logprob: -17.725208282470703

Token 232: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.1269569844007492
    2. ' build' → logprob: -2.1269569396972656
    3. 'combine' → logprob: -11.001956939697266
    4. '(build' → logprob: -11.501956939697266
    5. '	build' → logprob: -14.001956939697266
    6. ' combine' → logprob: -14.626956939697266
    7. 'b' → logprob: -15.626956939697266
    8. ' buil' → logprob: -15.876956939697266
    9. '   ' → logprob: -16.001956939697266
    10. '.build' → logprob: -16.126956939697266

Token 233: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.128163257315464e-07
    2. 'a' → logprob: -15.875
    3. '(' → logprob: -16.125
    4. ' (' → logprob: -19.5
    5. '(v' → logprob: -20.5
    6. ' a' → logprob: -20.625
    7. '```' → logprob: -20.625
    8. '(
' → logprob: -21.0
    9. '<a' → logprob: -23.0
    10. '(A' → logprob: -23.125

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029224453028291464
    2. '(v' → logprob: -6.252922534942627
    3. ',v' → logprob: -7.127922534942627
    4. '(a' → logprob: -8.877922058105469
    5. ' ,' → logprob: -10.627922058105469
    6. 'a' → logprob: -11.252922058105469
    7. ',a' → logprob: -12.252922058105469
    8. '(' → logprob: -12.377922058105469
    9. 'v' → logprob: -12.502922058105469
    10. ' a' → logprob: -14.377922058105469

Token 235: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006715370807796717
    2. ' v' → logprob: -5.006715297698975
    3. '	v' → logprob: -17.131715774536133
    4. 'a' → logprob: -18.131715774536133
    5. ' ' → logprob: -18.631715774536133
    6. '   ' → logprob: -18.756715774536133
    7. ')v' → logprob: -19.006715774536133
    8. 'vj' → logprob: -19.506715774536133
    9. ',v' → logprob: -20.006715774536133
    10. ' ' → logprob: -20.381715774536133

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.388769103679806e-05
    2. ' ,' → logprob: -9.500093460083008
    3. ',v' → logprob: -10.875093460083008
    4. '   ' → logprob: -17.375093460083008
    5. 'v' → logprob: -17.375093460083008
    6. ',
' → logprob: -17.875093460083008
    7. ')' → logprob: -18.125093460083008
    8. ',i' → logprob: -18.125093460083008
    9. ' v' → logprob: -18.375093460083008
    10. ' ' → logprob: -18.375093460083008

Token 237: ' m' (ID: 284)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06488870829343796
    2. ' v' → logprob: -2.8148887157440186
    3. 'm' → logprob: -6.4398884773254395
    4. ' m' → logprob: -6.6898884773254395
    5. 'i' → logprob: -10.689888954162598
    6. ' ' → logprob: -11.189888954162598
    7. '   ' → logprob: -11.564888954162598
    8. ' i' → logprob: -11.689888954162598
    9. ',' → logprob: -11.814888954162598
    10. 'j' → logprob: -12.189888954162598

Token 238: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003806257154792547
    2. ' +' → logprob: -7.875380516052246
    3. '+j' → logprob: -15.750380516052246
    4. '+
' → logprob: -16.125381469726562
    5. '
' → logprob: -16.375381469726562
    6. 'plus' → logprob: -17.000381469726562
    7. '＋' → logprob: -17.125381469726562
    8. '1' → logprob: -17.750381469726562
    9. '```' → logprob: -18.125381469726562
    10. '+m' → logprob: -18.250381469726562

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048601455986499786
    2. 'j' → logprob: -3.0486013889312744
    3. ' j' → logprob: -11.298601150512695
    4. ' ' → logprob: -13.423601150512695
    5. ',' → logprob: -16.173601150512695
    6. '```' → logprob: -16.673601150512695
    7. '
' → logprob: -16.798601150512695
    8. ',j' → logprob: -16.923601150512695
    9. ')' → logprob: -17.798601150512695
    10. '	j' → logprob: -18.548601150512695

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024037064576987177
    2. ')' → logprob: -8.625240325927734
    3. ' ,' → logprob: -10.375240325927734
    4. ',j' → logprob: -10.750240325927734
    5. ',v' → logprob: -12.250240325927734
    6. ',
' → logprob: -13.750240325927734
    7. ',b' → logprob: -14.375240325927734
    8. ',right' → logprob: -15.250240325927734
    9. '   ' → logprob: -15.750240325927734
    10. '```' → logprob: -15.750240325927734

Token 241: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005932236090302467
    2. ' j' → logprob: -5.130932331085205
    3. '   ' → logprob: -13.505931854248047
    4. '	j' → logprob: -13.755931854248047
    5. '_j' → logprob: -15.130931854248047
    6. ',' → logprob: -15.380931854248047
    7. ' ' → logprob: -15.880931854248047
    8. ',j' → logprob: -16.255931854248047
    9. '```' → logprob: -16.380931854248047
    10. 'v' → logprob: -16.505931854248047

Token 242: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38690683245658875
    2. ')' → logprob: -1.1369068622589111
    3. '   ' → logprob: -10.761906623840332
    4. ')
' → logprob: -11.761906623840332
    5. ' )
' → logprob: -12.386906623840332
    6. ')v' → logprob: -13.761906623840332
    7. ' )' → logprob: -13.886906623840332
    8. ')

' → logprob: -14.886906623840332
    9. 'v' → logprob: -16.63690757751465
    10. ')`
' → logprob: -16.76190757751465

Token 243: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04993867501616478
    2. ' v' → logprob: -3.049938678741455
    3. '   ' → logprob: -6.674938678741455
    4. 'return' → logprob: -9.924938201904297
    5. ' return' → logprob: -11.424938201904297
    6. '	v' → logprob: -12.049938201904297
    7. 'res' → logprob: -12.174938201904297
    8. 'node' → logprob: -12.549938201904297
    9. 'result' → logprob: -12.549938201904297
    10. ' node' → logprob: -13.174938201904297

Token 244: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0068527162075042725
    2. ' v' → logprob: -5.006852626800537
    3. 'res' → logprob: -9.881853103637695
    4. '   ' → logprob: -10.631853103637695
    5. 'return' → logprob: -10.756853103637695
    6. 'node' → logprob: -10.881853103637695
    7. 'result' → logprob: -12.131853103637695
    8. 'val' → logprob: -12.881853103637695
    9. ' node' → logprob: -13.006853103637695
    10. ' res' → logprob: -13.131853103637695

Token 245: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.787507714354433e-05
    2. '[' → logprob: -10.12504768371582
    3. '[v' → logprob: -12.50004768371582
    4. '[j' → logprob: -13.87504768371582
    5. 'i' → logprob: -14.50004768371582
    6. ' [' → logprob: -14.62504768371582
    7. '[m' → logprob: -15.12504768371582
    8. '[I' → logprob: -15.50004768371582
    9. '```' → logprob: -15.62504768371582
    10. '[(' → logprob: -15.75004768371582

Token 246: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013133054599165916
    2. '[i' → logprob: -4.5131330490112305
    3. ']=' → logprob: -6.2631330490112305
    4. ' ]' → logprob: -9.88813304901123
    5. '[' → logprob: -9.88813304901123
    6. ')' → logprob: -11.01313304901123
    7. '][' → logprob: -11.38813304901123
    8. '[m' → logprob: -11.88813304901123
    9. '(i' → logprob: -12.13813304901123
    10. '=' → logprob: -12.13813304901123

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761909484863281
    2. '=' → logprob: -0.8261909484863281
    3. '[i' → logprob: -9.076190948486328
    4. ' ' → logprob: -9.326190948486328
    5. '[' → logprob: -10.201190948486328
    6. ']' → logprob: -12.201190948486328
    7. ')' → logprob: -13.826190948486328
    8. '[node' → logprob: -14.076190948486328
    9. '   ' → logprob: -14.576190948486328
    10. '.' → logprob: -14.701190948486328

Token 248: ' combine' (ID: 21700)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combine' → logprob: -0.0009117019944824278
    2. ' combine' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.125911712646484
    4. 'com' → logprob: -16.500911712646484
    5. '  ' → logprob: -17.125911712646484
    6. 'comb' → logprob: -17.375911712646484
    7. '.combine' → logprob: -17.625911712646484
    8. ' ' → logprob: -18.375911712646484
    9. 'Node' → logprob: -18.625911712646484
    10. 'combined' → logprob: -18.875911712646484

Token 249: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -8.602024900028482e-05
    2. '(' → logprob: -9.375085830688477
    3. 'left' → logprob: -14.375085830688477
    4. '(le' → logprob: -15.375085830688477
    5. '(
' → logprob: -15.750085830688477
    6. '[left' → logprob: -17.000085830688477
    7. ' (' → logprob: -17.500085830688477
    8. '(lhs' → logprob: -17.875085830688477
    9. '(right' → logprob: -18.000085830688477
    10. '(line' → logprob: -18.250085830688477

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021208771504461765
    2. ',right' → logprob: -6.7521209716796875
    3. ' ,' → logprob: -7.2521209716796875
    4. 'right' → logprob: -8.377120971679688
    5. ' right' → logprob: -11.502120971679688
    6. '(right' → logprob: -13.752120971679688
    7. ',
' → logprob: -15.627120971679688
    8. '[right' → logprob: -16.252120971679688
    9. 's' → logprob: -18.002120971679688
    10. '(),' → logprob: -18.627120971679688

Token 251: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.10020710527896881
    2. ' right' → logprob: -2.3502070903778076
    3. 'rig' → logprob: -15.600207328796387
    4. '
' → logprob: -16.35020637512207
    5. '	right' → logprob: -16.47520637512207
    6. 'r' → logprob: -17.22520637512207
    7. '(right' → logprob: -17.72520637512207
    8. '[right' → logprob: -18.10020637512207
    9. ' ' → logprob: -18.60020637512207
    10. ',right' → logprob: -18.72520637512207

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3438327843905427e-05
    2. ')
' → logprob: -11.62502384185791
    3. ' )' → logprob: -11.75002384185791
    4. '   ' → logprob: -12.37502384185791
    5. ')return' → logprob: -13.50002384185791
    6. '<|end|>' → logprob: -14.25002384185791
    7. ' ' → logprob: -16.875022888183594
    8. ')i' → logprob: -17.375022888183594
    9. '}' → logprob: -17.500022888183594
    10. ')v' → logprob: -17.500022888183594

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003331233514472842
    2. 'return' → logprob: -5.753331184387207
    3. '	return' → logprob: -9.503331184387207
    4. ' return' → logprob: -9.753331184387207
    5. '<|end|>' → logprob: -11.753331184387207
    6. '  ' → logprob: -13.128331184387207
    7. ':return' → logprob: -13.128331184387207
    8. '       ' → logprob: -13.378331184387207
    9. '   ' → logprob: -13.503331184387207
    10. ' ' → logprob: -13.503331184387207

Token 254: ' v' (ID: 323)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0011732018319889903
    2. ' return' → logprob: -7.25117301940918
    3. '   ' → logprob: -7.75117301940918
    4. '	return' → logprob: -10.37617301940918
    5. 'v' (adapté à ' v') → logprob: -14.62617301940918
    6. 'ret' → logprob: -14.87617301940918
    7. ':return' → logprob: -15.12617301940918
    8. 'eturn' → logprob: -15.62617301940918
    9. '  ' → logprob: -16.12617301940918
    10. ' ' → logprob: -16.25117301940918

Token 255: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011274790158495307
    2. '[' → logprob: -7.876127243041992
    3. 'return' → logprob: -7.876127243041992
    4. 'i' → logprob: -9.751127243041992
    5. '.' → logprob: -10.001127243041992
    6. ' return' → logprob: -10.251127243041992
    7. '[j' → logprob: -10.876127243041992
    8. '```' → logprob: -10.876127243041992
    9. '[v' → logprob: -11.126127243041992
    10. 'v' → logprob: -11.376127243041992

Token 256: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04601512849330902
    2. ')' → logprob: -4.17101526260376
    3. '.i' → logprob: -4.92101526260376
    4. '.' → logprob: -5.67101526260376
    5. '.r' → logprob: -5.67101526260376
    6. ']=' → logprob: -6.04601526260376
    7. '[i' → logprob: -6.17101526260376
    8. 'return' → logprob: -6.42101526260376
    9. ',' → logprob: -6.42101526260376
    10. '].' → logprob: -7.04601526260376

Token 257: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04212067276239395
    2. 'r' → logprob: -3.2921206951141357
    3. 'return' → logprob: -6.167120456695557
    4. 'ts' → logprob: -6.667120456695557
    5. 'min' → logprob: -7.667120456695557
    6. '__' → logprob: -9.542120933532715
    7. 't' → logprob: -10.167120933532715
    8. ' l' → logprob: -11.167120933532715
    9. 'set' → logprob: -11.292120933532715
    10. '.l' → logprob: -11.667120933532715

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3874804377555847
    2. '=' → logprob: -1.1374804973602295
    3. ' ' → logprob: -8.012480735778809
    4. ',' → logprob: -8.762480735778809
    5. '=i' → logprob: -9.137480735778809
    6. ' ,' → logprob: -12.137480735778809
    7. '<|end|>' → logprob: -12.762480735778809
    8. '=v' → logprob: -13.887480735778809
    9. ',i' → logprob: -14.012480735778809
    10. '	' → logprob: -14.762480735778809

Token 259: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.718606891809031e-05
    2. 'left' → logprob: -9.750066757202148
    3. ' i' → logprob: -11.750066757202148
    4. 'l' → logprob: -14.125066757202148
    5. 'v' → logprob: -15.750066757202148
    6. '	i' → logprob: -16.37506675720215
    7. '   ' → logprob: -16.75006675720215
    8. ' left' → logprob: -17.75006675720215
    9. '  ' → logprob: -17.87506675720215
    10. ' ' → logprob: -18.12506675720215

Token 260: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038241837173700333
    2. '
' → logprob: -5.753824234008789
    3. '<|end|>' → logprob: -8.253824234008789
    4. 'v' → logprob: -8.378824234008789
    5. ',' → logprob: -10.003824234008789
    6. ' ' → logprob: -10.628824234008789
    7. '<|end|>' → logprob: -10.628824234008789
    8. '	v' → logprob: -10.753824234008789
    9. ' v' → logprob: -11.253824234008789
    10. '  ' → logprob: -12.003824234008789

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16024799644947052
    2. 'v' → logprob: -1.910248041152954
    3. ' v' → logprob: -10.910247802734375
    4. '	v' → logprob: -12.535247802734375
    5. ' ' → logprob: -14.285247802734375
    6. 'return' → logprob: -14.785247802734375
    7. '```' → logprob: -15.285247802734375
    8. '  ' → logprob: -15.535247802734375
    9. '       ' → logprob: -15.910247802734375
    10. '   ' → logprob: -16.660247802734375

Token 262: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0011922525009140372
    2. '   ' → logprob: -6.751192092895508
    3. ' v' → logprob: -11.001192092895508
    4. '	v' → logprob: -12.876192092895508
    5. 'j' → logprob: -13.876192092895508
    6. '  ' → logprob: -14.126192092895508
    7. 'vj' → logprob: -15.376192092895508
    8. ' ' → logprob: -15.501192092895508
    9. '
' → logprob: -15.626192092895508
    10. '    ' → logprob: -15.751192092895508

Token 263: '[i' (ID: 1768)
  Prédit: '.r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.3588557243347168
    2. '.' → logprob: -1.8588557243347168
    3. '.i' → logprob: -2.608855724334717
    4. '.v' → logprob: -2.983855724334717
    5. ' .' → logprob: -3.983855724334717
    6. '   ' → logprob: -7.233855724334717
    7. '.j' → logprob: -7.358855724334717
    8. '`.' → logprob: -8.108856201171875
    9. '[i' → logprob: -8.358856201171875
    10. '].' → logprob: -8.608856201171875

Token 264: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5285077095031738
    2. '.r' → logprob: -1.5285077095031738
    3. '   ' → logprob: -2.903507709503174
    4. ',' → logprob: -3.153507709503174
    5. '=' → logprob: -3.403507709503174
    6. ' .' → logprob: -4.153507709503174
    7. ' =' → logprob: -4.403507709503174
    8. 'r' → logprob: -4.903507709503174
    9. '].' → logprob: -5.278507709503174
    10. ']' → logprob: -5.528507709503174

Token 265: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.016045158728957176
    2. 'j' → logprob: -4.141045093536377
    3. ' r' → logprob: -11.641045570373535
    4. ' j' → logprob: -14.391045570373535
    5. '   ' → logprob: -14.766045570373535
    6. '	r' → logprob: -15.016045570373535
    7. ' ' → logprob: -15.641045570373535
    8. 'v' → logprob: -16.14104461669922
    9. '  ' → logprob: -16.14104461669922
    10. '	j' → logprob: -16.64104461669922

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759631395339966
    2. ' =' → logprob: -0.8259631395339966
    3. '=j' → logprob: -10.700963020324707
    4. ' ' → logprob: -14.200963020324707
    5. 'j' → logprob: -15.075963020324707
    6. ' j' → logprob: -15.950963020324707
    7. '   ' → logprob: -16.825963973999023
    8. '    ' → logprob: -17.200963973999023
    9. ',' → logprob: -17.950963973999023
    10. '	' → logprob: -18.200963973999023

Token 267: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013298832345753908
    2. ' j' → logprob: -6.6263298988342285
    3. '	j' → logprob: -13.00132942199707
    4. '   ' → logprob: -13.37632942199707
    5. ' ' → logprob: -16.12632942199707
    6. '  ' → logprob: -17.12632942199707
    7. '$j' → logprob: -17.37632942199707
    8. '[j' → logprob: -17.75132942199707
    9. '_j' → logprob: -17.75132942199707
    10. '    ' → logprob: -18.12632942199707

Token 268: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004324573092162609
    2. '	return' → logprob: -7.87543249130249
    3. 'return' → logprob: -10.375432014465332
    4. ' return' → logprob: -11.500432014465332
    5. '
' → logprob: -12.500432014465332
    6. '   ' → logprob: -12.875432014465332
    7. '<|end|>' → logprob: -13.625432014465332
    8. '       ' → logprob: -14.500432014465332
    9. '    
' → logprob: -14.500432014465332
    10. ':return' → logprob: -14.750432014465332

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013779717264696956
    2. '	return' → logprob: -6.751378059387207
    3. '   ' → logprob: -9.876378059387207
    4. ' return' → logprob: -10.126378059387207
    5. '<|end|>' → logprob: -10.251378059387207
    6. ')' → logprob: -11.251378059387207
    7. 'return' → logprob: -11.376378059387207
    8. '\t' → logprob: -11.376378059387207
    9. '    
' → logprob: -11.751378059387207
    10. '   ' → logprob: -12.251378059387207

Token 270: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03852279111742973
    2. '   ' → logprob: -3.288522720336914
    3. ' return' → logprob: -7.788522720336914
    4. '	return' → logprob: -9.663522720336914
    5. 'v' → logprob: -13.913522720336914
    6. ':return' → logprob: -14.288522720336914
    7. '  ' → logprob: -14.413522720336914
    8. ' ' → logprob: -14.663522720336914
    9. 'eturn' → logprob: -15.663522720336914
    10. '
' → logprob: -15.913522720336914

Token 271: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007100477814674377
    2. ' v' → logprob: -7.2507100105285645
    3. '	v' → logprob: -16.000709533691406
    4. '   ' → logprob: -20.375709533691406
    5. '(v' → logprob: -21.000709533691406
    6. ' ' → logprob: -21.750709533691406
    7. ')v' → logprob: -21.875709533691406
    8. ' ' → logprob: -22.125709533691406
    9. '
' → logprob: -22.250709533691406
    10. '_v' → logprob: -22.500709533691406

Token 272: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07352974265813828
    2. '<|end|>' → logprob: -3.5735297203063965
    3. 'v' → logprob: -3.9485297203063965
    4. '[v' → logprob: -4.6985297203063965
    5. '[' → logprob: -4.9485297203063965
    6. ']' → logprob: -5.9485297203063965
    7. '[
' → logprob: -6.0735297203063965
    8. ')' → logprob: -7.6985297203063965
    9. '.' → logprob: -8.073530197143555
    10. '.v' → logprob: -8.198530197143555

Token 273: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.750436007976532e-05
    2. ')
' → logprob: -10.25003719329834
    3. '<|end|>' → logprob: -14.00003719329834
    4. '}' → logprob: -14.12503719329834
    5. ' )' → logprob: -15.37503719329834
    6. ')

' → logprob: -16.500038146972656
    7. ']' → logprob: -16.750038146972656
    8. '')' → logprob: -17.500038146972656
    9. '),' → logprob: -17.500038146972656
    10. ')}' → logprob: -17.625038146972656

Token 274: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33194392919540405
    2. '<|end|>' → logprob: -2.206943988800049
    3. 'def' → logprob: -2.831943988800049
    4. '[]' → logprob: -3.206943988800049
    5. ' ' → logprob: -3.956943988800049
    6. '#' → logprob: -4.206943988800049
    7. 'v' → logprob: -4.331943988800049
    8. ']' → logprob: -5.206943988800049
    9. '   ' → logprob: -5.831943988800049
    10. '[i' → logprob: -6.206943988800049

Token 275: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.10494152456521988
    2. 'update' → logprob: -3.3549416065216064
    3. ' query' → logprob: -3.7299416065216064
    4. ' main' → logprob: -3.8549416065216064
    5. ' solve' → logprob: -4.229941368103027
    6. ' build' → logprob: -6.854941368103027
    7. 'solve' → logprob: -6.979941368103027
    8. 'query' → logprob: -7.104941368103027
    9. ' seg' → logprob: -7.229941368103027
    10. ' segment' → logprob: -7.479941368103027

Token 276: '(pos' (ID: 24566)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.016289133578538895
    2. '(v' → logprob: -4.141289234161377
    3. '(' → logprob: -8.391288757324219
    4. '(node' → logprob: -11.766288757324219
    5. '(i' → logprob: -12.016288757324219
    6. ' (' → logprob: -12.766288757324219
    7. 'a' → logprob: -12.891288757324219
    8. '(tree' → logprob: -13.016288757324219
    9. '(arr' → logprob: -13.516288757324219
    10. '(n' → logprob: -14.391288757324219

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000698376854415983
    2. ' ,' → logprob: -7.375698566436768
    3. ',v' → logprob: -9.75069808959961
    4. '):' → logprob: -11.87569808959961
    5. ',a' → logprob: -14.00069808959961
    6. ')' → logprob: -14.12569808959961
    7. 'v' → logprob: -14.12569808959961
    8. ',
' → logprob: -14.12569808959961
    9. '   ' → logprob: -14.37569808959961
    10. ' v' → logprob: -14.75069808959961

Token 278: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7118501663208008
    2. ' v' → logprob: -1.3368501663208008
    3. 'val' → logprob: -1.9618501663208008
    4. ' val' → logprob: -2.711850166320801
    5. 'a' → logprob: -4.336850166320801
    6. 'i' → logprob: -5.086850166320801
    7. 'value' → logprob: -5.211850166320801
    8. ' a' → logprob: -5.586850166320801
    9. 'l' → logprob: -6.086850166320801
    10. ' value' → logprob: -6.461850166320801

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016325322212651372
    2. ' ,' → logprob: -9.375163078308105
    3. ',pos' → logprob: -10.000163078308105
    4. '[pos' → logprob: -10.750163078308105
    5. '):' → logprob: -12.625163078308105
    6. '[],' → logprob: -13.000163078308105
    7. '   ' → logprob: -13.875163078308105
    8. '[' → logprob: -14.250163078308105
    9. 'pos' → logprob: -14.875163078308105
    10. '[int' → logprob: -14.937663078308105

Token 280: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1227061003446579
    2. ' i' → logprob: -2.872706174850464
    3. 'pos' → logprob: -4.372705936431885
    4. '0' → logprob: -4.747705936431885
    5. '1' → logprob: -4.747705936431885
    6. 'idx' → logprob: -4.747705936431885
    7. 'v' → logprob: -5.497705936431885
    8. 'a' → logprob: -5.747705936431885
    9. 'index' → logprob: -6.122705936431885
    10. 'val' → logprob: -6.247705936431885

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002142650482710451
    2. ' ,' → logprob: -8.500214576721191
    3. ',j' → logprob: -12.750214576721191
    4. '   ' → logprob: -13.375214576721191
    5. ' ' → logprob: -14.000214576721191
    6. ',i' → logprob: -14.500214576721191
    7. ',int' → logprob: -14.625214576721191
    8. ')' → logprob: -14.625214576721191
    9. ',pos' → logprob: -14.875214576721191
    10. ',v' → logprob: -15.000214576721191

Token 282: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0052398028783500195
    2. ' j' → logprob: -5.255239963531494
    3. '   ' → logprob: -12.630239486694336
    4. '  ' → logprob: -14.005239486694336
    5. '    ' → logprob: -14.505239486694336
    6. '	j' → logprob: -14.630239486694336
    7. ' ' → logprob: -15.005239486694336
    8. 'i' → logprob: -15.630239486694336
    9. '     ' → logprob: -16.380239486694336
    10. 'r' → logprob: -16.505239486694336

Token 283: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011148273944854736
    2. '):' → logprob: -4.511148452758789
    3. '):
' → logprob: -9.886148452758789
    4. '   ' → logprob: -10.511148452758789
    5. ')' → logprob: -11.386148452758789
    6. ' ,' → logprob: -11.761148452758789
    7. ' ):' → logprob: -14.136148452758789
    8. ':' → logprob: -14.386148452758789
    9. '):

' → logprob: -15.011148452758789
    10. ',
' → logprob: -15.261148452758789

Token 284: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35979363322257996
    2. '   ' → logprob: -1.3597936630249023
    3. ' if' → logprob: -3.2347936630249023
    4. 'm' → logprob: -5.109793663024902
    5. ' m' → logprob: -10.859793663024902
    6. '	if' → logprob: -11.109793663024902
    7. '  ' → logprob: -11.734793663024902
    8. '```' → logprob: -12.234793663024902
    9. ' ' → logprob: -12.359793663024902
    10. '    ' → logprob: -12.609793663024902

Token 285: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0013564289547502995
    2. '   ' → logprob: -7.501356601715088
    3. 'm' → logprob: -7.751356601715088
    4. ' if' → logprob: -8.00135612487793
    5. 'val' → logprob: -10.25135612487793
    6. 'i' → logprob: -13.87635612487793
    7. '	if' → logprob: -14.62635612487793
    8. '```' → logprob: -14.75135612487793
    9. 'mid' → logprob: -15.50135612487793
    10. 'v' → logprob: -15.62635612487793

Token 286: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.348518967628479
    2. ' i' → logprob: -1.223518967628479
    3. 'pos' → logprob: -10.473519325256348
    4. '   ' → logprob: -10.598519325256348
    5. '	i' → logprob: -11.848519325256348
    6. ' pos' → logprob: -11.848519325256348
    7. ' ' → logprob: -12.473519325256348
    8. '  ' → logprob: -13.473519325256348
    9. ' ' → logprob: -14.223519325256348
    10. '    ' → logprob: -15.348519325256348

Token 287: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25438863039016724
    2. ' ==' → logprob: -1.5043885707855225
    3. '=' → logprob: -6.504388809204102
    4. '>' → logprob: -7.379388809204102
    5. ' >' → logprob: -8.129388809204102
    6. '==
' → logprob: -10.754388809204102
    7. ' =' → logprob: -11.754388809204102
    8. '<|end|>' → logprob: -13.129388809204102
    9. '>=' → logprob: -13.254388809204102
    10. '===' → logprob: -13.254388809204102

Token 288: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012531078420579433
    2. ' j' → logprob: -4.387531280517578
    3. '   ' → logprob: -11.012531280517578
    4. '	j' → logprob: -13.512531280517578
    5. '    ' → logprob: -13.637531280517578
    6. '  ' → logprob: -13.762531280517578
    7. ' ' → logprob: -14.137531280517578
    8. '```' → logprob: -15.762531280517578
    9. '_j' → logprob: -16.450031280517578
    10. '     ' → logprob: -17.012531280517578

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14299550652503967
    2. ':
' → logprob: -2.017995595932007
    3. '   ' → logprob: -9.017995834350586
    4. ',' → logprob: -9.642995834350586
    5. '       ' → logprob: -9.767995834350586
    6. '):
' → logprob: -11.142995834350586
    7. '=' → logprob: -11.517995834350586
    8. ' and' → logprob: -11.517995834350586
    9. ':

' → logprob: -11.767995834350586
    10. ':
' → logprob: -11.892995834350586

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2665104269981384
    2. 'val' → logprob: -2.391510486602783
    3. 'v' → logprob: -2.891510486602783
    4. ' val' → logprob: -3.016510486602783
    5. ' v' → logprob: -3.391510486602783
    6. '   ' → logprob: -6.391510486602783
    7. '	val' → logprob: -7.766510486602783
    8. '{
' → logprob: -8.016510009765625
    9. '{' → logprob: -8.141510009765625
    10. ',' → logprob: -8.391510009765625

Token 291: ' val' (ID: 1459)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11603391170501709
    2. 'val' (adapté à ' val') → logprob: -2.2410340309143066
    3. ' v' → logprob: -6.741034030914307
    4. '   ' → logprob: -7.366034030914307
    5. ' val' → logprob: -7.366034030914307
    6. '       ' → logprob: -7.741034030914307
    7. 'node' → logprob: -9.366033554077148
    8. 'if' → logprob: -9.616033554077148
    9. '	v' → logprob: -10.491033554077148
    10. '	val' → logprob: -10.866033554077148

Token 292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38691848516464233
    2. ' =' → logprob: -1.136918544769287
    3. ' ' → logprob: -10.886918067932129
    4. '   ' → logprob: -11.386918067932129
    5. ',' → logprob: -12.386918067932129
    6. '	' → logprob: -12.761918067932129
    7. '    ' → logprob: -13.136918067932129
    8. '=
' → logprob: -13.261918067932129
    9. ' =
' → logprob: -13.761918067932129
    10. ')' → logprob: -14.136918067932129

Token 293: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5569992661476135
    2. '-val' → logprob: -1.4319992065429688
    3. '-v' → logprob: -2.6819992065429688
    4. '1' → logprob: -2.6819992065429688
    5. '-node' → logprob: -3.6819992065429688
    6. ' -' → logprob: -4.306999206542969
    7. 'val' → logprob: -5.431999206542969
    8. '-Val' → logprob: -6.181999206542969
    9. ' ' → logprob: -6.306999206542969
    10. '0' → logprob: -6.806999206542969

Token 294: 'v' (ID: 85)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6190184354782104
    2. 'v' → logprob: -0.8690184354782104
    3. 'val' → logprob: -3.2440185546875
    4. '(' → logprob: -6.2440185546875
    5. ' v' → logprob: -7.8690185546875
    6. ' ' → logprob: -8.1190185546875
    7. '(v' → logprob: -8.7440185546875
    8. ' val' → logprob: -9.3690185546875
    9. ' (' → logprob: -9.4940185546875
    10. '   ' → logprob: -10.2440185546875

Token 295: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000712670327629894
    2. '[pos' → logprob: -8.000712394714355
    3. '[v' → logprob: -8.375712394714355
    4. 'v' → logprob: -9.500712394714355
    5. '[' → logprob: -10.250712394714355
    6. 'i' → logprob: -11.250712394714355
    7. '[j' → logprob: -11.500712394714355
    8. 'pos' → logprob: -12.250712394714355
    9. '```' → logprob: -13.250712394714355
    10. ' ' → logprob: -13.375712394714355

Token 296: '].' (ID: 1651)
  Prédit: '.val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.4585878252983093
    2. '.t' → logprob: -1.708587884902954
    3. '].' → logprob: -1.833587884902954
    4. '.ts' → logprob: -4.833587646484375
    5. '.v' → logprob: -5.333587646484375
    6. '.' → logprob: -5.833587646484375
    7. '}.' → logprob: -5.958587646484375
    8. '.tsv' → logprob: -6.083587646484375
    9. ').' → logprob: -6.208587646484375
    10. '.value' → logprob: -6.583587646484375

Token 297: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -7.97024549683556e-05
    2. 'val' → logprob: -9.500080108642578
    3. ' tsum' → logprob: -13.500080108642578
    4. 't' → logprob: -13.750080108642578
    5. '	ts' → logprob: -14.375080108642578
    6. '   ' → logprob: -14.625080108642578
    7. '1' → logprob: -15.125080108642578
    8. '  ' → logprob: -15.375080108642578
    9. '```' → logprob: -15.625080108642578
    10. ' ts' → logprob: -16.125080108642578

Token 298: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0004271004581823945
    2. 'sum' → logprob: -7.87542724609375
    3. 'u' → logprob: -10.62542724609375
    4. 'ум' → logprob: -11.50042724609375
    5. 'val' → logprob: -12.75042724609375
    6. '1' → logprob: -13.50042724609375
    7. 's' → logprob: -13.62542724609375
    8. 'uml' → logprob: -14.00042724609375
    9. 'ums' → logprob: -14.62542724609375
    10. '   ' → logprob: -14.62542724609375

Token 299: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002242558402940631
    2. 'v' → logprob: -6.627242565155029
    3. ' v' → logprob: -8.252242088317871
    4. ',' → logprob: -8.502242088317871
    5. '<|end|>' → logprob: -9.002242088317871
    6. '
' → logprob: -9.377242088317871
    7. '	' → logprob: -9.502242088317871
    8. '	v' → logprob: -10.002242088317871
    9. '   ' → logprob: -10.002242088317871
    10. ',v' → logprob: -10.752242088317871

Token 301: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.00010449681576574221
    2. ' v' → logprob: -9.625104904174805
    3. '       ' → logprob: -10.250104904174805
    4. 'val' → logprob: -13.250104904174805
    5. '   ' → logprob: -14.000104904174805
    6. '	v' → logprob: -15.750104904174805
    7. '
' → logprob: -15.875104904174805
    8. '           ' → logprob: -16.375104904174805
    9. '_v' → logprob: -18.625104904174805
    10. ' ' → logprob: -18.875104904174805

Token 302: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4060561776859686e-05
    2. '[pos' → logprob: -10.125043869018555
    3. '[' → logprob: -12.625043869018555
    4. '[j' → logprob: -15.500043869018555
    5. '[I' → logprob: -15.875043869018555
    6. '[v' → logprob: -16.625043869018555
    7. 'i' → logprob: -17.125043869018555
    8. '[
' → logprob: -17.250043869018555
    9. '[index' → logprob: -17.625043869018555
    10. '[int' → logprob: -17.875043869018555

Token 303: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.1463480293750763
    2. ']' → logprob: -2.021347999572754
    3. ']=' → logprob: -6.521347999572754
    4. '.' → logprob: -7.021347999572754
    5. '=' → logprob: -7.146347999572754
    6. ').' → logprob: -8.896347999572754
    7. '.]' → logprob: -9.396347999572754
    8. ' ].' → logprob: -9.521347999572754
    9. ' =' → logprob: -9.896347999572754
    10. ')' → logprob: -10.771347999572754

Token 304: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12812773883342743
    2. ' =' → logprob: -2.1281278133392334
    3. '.ts' → logprob: -7.253127574920654
    4. '.t' → logprob: -7.878127574920654
    5. '.=' → logprob: -9.753128051757812
    6. '.' → logprob: -10.128128051757812
    7. '   ' → logprob: -12.253128051757812
    8. 'ts' → logprob: -13.253128051757812
    9. ' ' → logprob: -13.253128051757812
    10. ' ts' → logprob: -13.878128051757812

Token 305: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.02975141443312168
    2. ' Node' → logprob: -3.5297513008117676
    3. '	Node' → logprob: -14.529751777648926
    4. ' ' → logprob: -15.654751777648926
    5. '.Node' → logprob: -16.40475082397461
    6. '(Node' → logprob: -16.90475082397461
    7. '<Node' → logprob: -17.52975082397461
    8. '   ' → logprob: -17.77975082397461
    9. '_Node' → logprob: -18.02975082397461
    10. '
' → logprob: -18.27975082397461

Token 306: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.87500286102295
    3. '(j' → logprob: -15.50000286102295
    4. ' (' → logprob: -16.500003814697266
    5. '(
' → logprob: -18.625003814697266
    6. '(I' → logprob: -19.250003814697266
    7. 'i' → logprob: -19.250003814697266
    8. '(pos' → logprob: -19.625003814697266
    9. ' i' → logprob: -20.125003814697266
    10. '(l' → logprob: -20.375003814697266

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010715120006352663
    2. ',j' → logprob: -6.876071453094482
    3. ' ,' → logprob: -10.37607192993164
    4. 'j' → logprob: -12.12607192993164
    5. ',i' → logprob: -14.00107192993164
    6. ',
' → logprob: -14.62607192993164
    7. ' j' → logprob: -15.37607192993164
    8. '<|end|>' → logprob: -15.62607192993164
    9. '   ' → logprob: -15.87607192993164
    10. ')' → logprob: -16.62607192993164

Token 308: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00022165567497722805
    2. 'i' → logprob: -9.125221252441406
    3. ' j' → logprob: -9.125221252441406
    4. '   ' → logprob: -13.375221252441406
    5. '	j' → logprob: -13.625221252441406
    6. ' ' → logprob: -15.125221252441406
    7. '  ' → logprob: -15.625221252441406
    8. '    ' → logprob: -15.875221252441406
    9. ' i' → logprob: -16.250221252441406
    10. '```' → logprob: -16.250221252441406

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026848804554902017
    2. ',val' → logprob: -8.250268936157227
    3. ' ,' → logprob: -12.125268936157227
    4. 'val' → logprob: -14.500268936157227
    5. ' val' → logprob: -14.625268936157227
    6. ',
' → logprob: -15.000268936157227
    7. ')' → logprob: -15.750268936157227
    8. '[val' → logprob: -15.875268936157227
    9. '‌,' → logprob: -16.875268936157227
    10. '```' → logprob: -17.125268936157227

Token 310: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.023247109726071358
    2. ' val' → logprob: -3.773247003555298
    3. '	val' → logprob: -13.773246765136719
    4. '[val' → logprob: -15.273246765136719
    5. ',val' → logprob: -15.773246765136719
    6. '           ' → logprob: -16.64824676513672
    7. '   ' → logprob: -16.64824676513672
    8. '(val' → logprob: -17.02324676513672
    9. '.val' → logprob: -17.39824676513672
    10. '_val' → logprob: -18.14824676513672

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018947436183225363
    2. ' ,' → logprob: -9.125189781188965
    3. ',val' → logprob: -9.500189781188965
    4. 'val' → logprob: -12.750189781188965
    5. ',
' → logprob: -13.750189781188965
    6. '   ' → logprob: -14.375189781188965
    7. ')' → logprob: -14.875189781188965
    8. ',v' → logprob: -15.625189781188965
    9. ' val' → logprob: -15.750189781188965
    10. '),' → logprob: -16.12518882751465

Token 312: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.061985280364751816
    2. ' min' → logprob: -2.8119852542877197
    3. 'val' → logprob: -11.56198501586914
    4. '   ' → logprob: -13.18698501586914
    5. '	min' → logprob: -13.18698501586914
    6. ' val' → logprob: -13.56198501586914
    7. '(min' → logprob: -14.68698501586914
    8. '=min' → logprob: -14.93698501586914
    9. '0' → logprob: -15.06198501586914
    10. ')' → logprob: -15.18698501586914

Token 313: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016098834748845547
    2. '0' → logprob: -8.750161170959473
    3. ' (' → logprob: -13.375161170959473
    4. '(
' → logprob: -15.000161170959473
    5. ')' → logprob: -15.375161170959473
    6. ' ' → logprob: -15.750161170959473
    7. ')(' → logprob: -16.625160217285156
    8. '<|end|>' → logprob: -16.625160217285156
    9. '```' → logprob: -17.500160217285156
    10. 'val' → logprob: -17.625160217285156

Token 314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009176511666737497
    2. '(' → logprob: -7.000917434692383
    3. ' ' → logprob: -12.500917434692383
    4. ')' → logprob: -13.250917434692383
    5. 'val' → logprob: -14.750917434692383
    6. '[' → logprob: -16.000917434692383
    7. '<|end|>' → logprob: -16.250917434692383
    8. ')(' → logprob: -17.250917434692383
    9. '۰' → logprob: -17.500917434692383
    10. '```' → logprob: -17.500917434692383

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004680511076003313
    2. ',val' → logprob: -5.379680633544922
    3. ' ,' → logprob: -9.879680633544922
    4. ',v' → logprob: -11.879680633544922
    5. ',value' → logprob: -14.004680633544922
    6. ',
' → logprob: -14.504680633544922
    7. '<|end|>' → logprob: -15.754680633544922
    8. '‌,' → logprob: -16.129680633544922
    9. ' val' → logprob: -16.379680633544922
    10. ',var' → logprob: -16.879680633544922

Token 316: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.014163747429847717
    2. ' val' → logprob: -4.264163970947266
    3. '	val' → logprob: -16.264163970947266
    4. '   ' → logprob: -17.514163970947266
    5. '(val' → logprob: -17.514163970947266
    6. '[val' → logprob: -18.514163970947266
    7. ')' → logprob: -19.014163970947266
    8. ',val' → logprob: -19.639163970947266
    9. '_val' → logprob: -19.889163970947266
    10. '  ' → logprob: -20.139163970947266

Token 317: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0846768319606781
    2. '))' → logprob: -2.584676742553711
    3. '))
' → logprob: -5.709676742553711
    4. ')
' → logprob: -6.084676742553711
    5. '   ' → logprob: -8.834676742553711
    6. '       ' → logprob: -10.459676742553711
    7. ' )' → logprob: -13.709676742553711
    8. ')))' → logprob: -13.834676742553711
    9. ')
' → logprob: -14.084676742553711
    10. '))
' → logprob: -14.334676742553711

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5765628814697266
    2. '   ' → logprob: -0.8265628814697266
    3. '	return' → logprob: -7.576562881469727
    4. ' return' → logprob: -9.701562881469727
    5. '	   ' → logprob: -11.076562881469727
    6. 'return' → logprob: -11.326562881469727
    7. '<|end|>' → logprob: -12.076562881469727
    8. '   ' → logprob: -12.576562881469727
    9. '     ' → logprob: -12.701562881469727
    10. '	' → logprob: -12.826562881469727

Token 319: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16094981133937836
    2. '   ' → logprob: -1.9109498262405396
    3. ' return' → logprob: -7.28594970703125
    4. '       ' → logprob: -10.28594970703125
    5. '	return' → logprob: -12.41094970703125
    6. ' ' → logprob: -14.41094970703125
    7. 'v' → logprob: -14.53594970703125
    8. '  ' → logprob: -15.28594970703125
    9. '   ' → logprob: -15.28594970703125
    10. '    ' → logprob: -15.53594970703125

Token 320: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07660897076129913
    2. ' v' → logprob: -2.826608896255493
    3. 'None' → logprob: -5.076609134674072
    4. '
' → logprob: -5.701609134674072
    5. 'update' → logprob: -6.951609134674072
    6. ' None' → logprob: -7.076609134674072
    7. 'combine' → logprob: -7.201609134674072
    8. 'True' → logprob: -7.326609134674072
    9. 'i' → logprob: -7.701609134674072
    10. 'False' → logprob: -8.076608657836914

Token 321: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023298001906368881
    2. '[' → logprob: -8.500232696533203
    3. 'i' → logprob: -11.250232696533203
    4. '[v' → logprob: -11.750232696533203
    5. '[
' → logprob: -12.750232696533203
    6. ',i' → logprob: -13.375232696533203
    7. '<|end|>' → logprob: -13.375232696533203
    8. '[I' → logprob: -14.875232696533203
    9. 'v' → logprob: -15.250232696533203
    10. '[j' → logprob: -15.500232696533203

Token 322: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.946405094116926e-05
    2. ')
' → logprob: -9.500079154968262
    3. '   ' → logprob: -12.625079154968262
    4. ' )' → logprob: -13.750079154968262
    5. '}' → logprob: -16.875080108642578
    6. ']' → logprob: -17.000080108642578
    7. '),' → logprob: -17.875080108642578
    8. ' ' → logprob: -18.000080108642578
    9. ')

' → logprob: -18.000080108642578
    10. '))' → logprob: -18.000080108642578

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0790158063173294
    2. 'm' → logprob: -2.5790157318115234
    3. ' m' → logprob: -9.204015731811523
    4. '	m' → logprob: -10.829015731811523
    5. '```' → logprob: -12.704015731811523
    6. 'if' → logprob: -13.329015731811523
    7. 'def' → logprob: -15.829015731811523
    8. '  ' → logprob: -16.079015731811523
    9. ' if' → logprob: -16.079015731811523
    10. 'mid' → logprob: -16.204015731811523

Token 324: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.00020354038861114532
    2. ' m' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.87520408630371
    4. '	m' → logprob: -17.37520408630371
    5. 'mid' → logprob: -21.00020408630371
    6. ' ' → logprob: -21.25020408630371
    7. 'if' → logprob: -21.37520408630371
    8. '  ' → logprob: -22.12520408630371
    9. '```' → logprob: -22.37520408630371
    10. '    ' → logprob: -23.00020408630371

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008617172949016094
    2. '=' → logprob: -4.758617401123047
    3. ' =(' → logprob: -13.258617401123047
    4. '=(' → logprob: -14.258617401123047
    5. ' ' → logprob: -15.633617401123047
    6. ',' → logprob: -17.883617401123047
    7. ')' → logprob: -19.008617401123047
    8. '   ' → logprob: -19.258617401123047
    9. ' (' → logprob: -19.508617401123047
    10. ' =
' → logprob: -19.508617401123047

Token 326: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2519512474536896
    2. '(i' → logprob: -1.5019512176513672
    3. '(j' → logprob: -10.876951217651367
    4. '(m' → logprob: -13.126951217651367
    5. ' ' → logprob: -14.126951217651367
    6. '   ' → logprob: -15.001951217651367
    7. '(ii' → logprob: -15.626951217651367
    8. '(I' → logprob: -17.251951217651367
    9. ',' → logprob: -18.001951217651367
    10. '(' → logprob: -18.126951217651367

Token 327: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003374886582605541
    2. '(i' → logprob: -8.000337600708008
    3. ' i' → logprob: -13.125337600708008
    4. 'ij' → logprob: -18.500337600708008
    5. ' (' → logprob: -19.000337600708008
    6. 'j' → logprob: -19.000337600708008
    7. '   ' → logprob: -19.250337600708008
    8. '{i' → logprob: -19.250337600708008
    9. '	i' → logprob: -19.375337600708008
    10. '_i' → logprob: -20.000337600708008

Token 328: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.0667988732457161
    2. '+m' → logprob: -3.1917989253997803
    3. '+' → logprob: -3.9417989253997803
    4. ' +' → logprob: -5.566798686981201
    5. '+i' → logprob: -8.94179916381836
    6. '+
' → logprob: -8.94179916381836
    7. '+(' → logprob: -12.69179916381836
    8. 'j' → logprob: -12.94179916381836
    9. '+r' → logprob: -13.19179916381836
    10. ' +
' → logprob: -13.44179916381836

Token 329: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.04860293120145798
    2. ')' → logprob: -3.048602819442749
    3. ')>>' → logprob: -11.673603057861328
    4. ' )' → logprob: -12.548603057861328
    5. ')
' → logprob: -13.548603057861328
    6. '//' → logprob: -13.798603057861328
    7. ')#' → logprob: -14.048603057861328
    8. '   ' → logprob: -15.173603057861328
    9. '}//' → logprob: -17.548603057861328
    10. ' ' → logprob: -18.173603057861328

Token 330: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. 'm' → logprob: -19.875
    4. '26' → logprob: -20.5
    5. '   ' → logprob: -21.625
    6. '3' → logprob: -21.625
    7. '1' → logprob: -21.75
    8. '%' → logprob: -22.125
    9. 'j' → logprob: -22.375
    10. '２' → logprob: -22.625

Token 331: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03882808983325958
    2. '   ' → logprob: -3.538828134536743
    3. ' if' → logprob: -5.038827896118164
    4. 'left' → logprob: -6.038827896118164
    5. '	if' → logprob: -9.038827896118164
    6. ' left' → logprob: -11.288827896118164
    7. '	left' → logprob: -11.788827896118164
    8. '[left' → logprob: -11.788827896118164
    9. '```' → logprob: -11.913827896118164
    10. 'l' → logprob: -12.538827896118164

Token 332: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009134702384471893
    2. '   ' → logprob: -4.884134769439697
    3. ' if' → logprob: -6.509134769439697
    4. '	if' → logprob: -10.759134292602539
    5. 'left' → logprob: -11.634134292602539
    6. 'If' → logprob: -13.134134292602539
    7. '```' → logprob: -13.634134292602539
    8. ' ' → logprob: -14.009134292602539
    9. '<|end|>' → logprob: -14.134134292602539
    10. '[' → logprob: -14.259134292602539

Token 333: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -5.8961017202818766e-05
    2. ' if' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.375059127807617
    4. 'left' → logprob: -17.875059127807617
    5. 'i' → logprob: -18.125059127807617
    6. '	if' → logprob: -18.250059127807617
    7. 'If' → logprob: -19.750059127807617
    8. '```' → logprob: -20.250059127807617
    9. 'return' → logprob: -20.375059127807617
    10. '
' → logprob: -20.375059127807617

Token 334: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.06196858361363411
    2. ' pos' → logprob: -2.8119685649871826
    3. '	pos' → logprob: -14.061968803405762
    4. '   ' → logprob: -16.811967849731445
    5. '(pos' → logprob: -18.061967849731445
    6. ' ' → logprob: -18.811967849731445
    7. '[pos' → logprob: -18.936967849731445
    8. '_pos' → logprob: -19.561967849731445
    9. ',pos' → logprob: -20.686967849731445
    10. 'position' → logprob: -21.436967849731445

Token 335: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4740773141384125
    2. ' <=' → logprob: -0.9740773439407349
    3. '   ' → logprob: -16.099077224731445
    4. ')<=' → logprob: -16.849077224731445
    5. ']<=' → logprob: -16.974077224731445
    6. '≤' → logprob: -17.224077224731445
    7. '<' → logprob: -17.349077224731445
    8. ' ≤' → logprob: -17.474077224731445
    9. '	' → logprob: -17.599077224731445
    10. '>=' → logprob: -17.724077224731445

Token 336: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00012356207298580557
    2. ' m' → logprob: -9.000123977661133
    3. '	m' → logprob: -16.375123977661133
    4. '   ' → logprob: -19.375123977661133
    5. ' ' → logprob: -21.125123977661133
    6. '_m' → logprob: -23.000123977661133
    7. '[m' → logprob: -24.000123977661133
    8. '  ' → logprob: -24.125123977661133
    9. ' ' → logprob: -24.125123977661133
    10. ' м' → logprob: -24.875123977661133

Token 337: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1603350192308426
    2. ':' → logprob: -1.9103350639343262
    3. ' :
' → logprob: -9.660334587097168
    4. '   ' → logprob: -10.410334587097168
    5. '       ' → logprob: -11.785334587097168
    6. ':
' → logprob: -12.785334587097168
    7. ' :' → logprob: -12.910334587097168
    8. ',' → logprob: -13.285334587097168
    9. '	' → logprob: -14.285334587097168
    10. '):
' → logprob: -14.785334587097168

Token 338: '       ' (ID: 309)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.5757908821105957
    2. 'update' → logprob: -1.7007908821105957
    3. ' v' → logprob: -1.8257908821105957
    4. 'v' → logprob: -2.9507908821105957
    5. ' left' → logprob: -3.8257908821105957
    6. '       ' → logprob: -4.700790882110596
    7. 'left' → logprob: -5.075790882110596
    8. '   ' → logprob: -5.450790882110596
    9. ' return' → logprob: -9.325790405273438
    10. 'return' → logprob: -9.450790405273438

Token 339: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0726114884018898
    2. 'update' → logprob: -3.4476115703582764
    3. ' left' → logprob: -3.8226115703582764
    4. 'v' → logprob: -4.197611331939697
    5. ' update' → logprob: -7.322611331939697
    6. ' v' → logprob: -7.447611331939697
    7. '   ' → logprob: -10.072611808776855
    8. 'updated' → logprob: -11.572611808776855
    9. '	left' → logprob: -11.697611808776855
    10. 'l' → logprob: -13.447611808776855

Token 340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889540493488312
    2. '=' → logprob: -2.578895330429077
    3. 'update' → logprob: -12.828895568847656
    4. ' ' → logprob: -13.703895568847656
    5. '   ' → logprob: -14.328895568847656
    6. 'updated' → logprob: -15.328895568847656
    7. ' update' → logprob: -15.703895568847656
    8. ',' → logprob: -15.703895568847656
    9. '    ' → logprob: -15.703895568847656
    10. '.update' → logprob: -16.078895568847656

Token 341: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.16022463142871857
    2. ' update' → logprob: -1.9102246761322021
    3. '	update' → logprob: -15.035224914550781
    4. '(update' → logprob: -15.910224914550781
    5. '   ' → logprob: -16.16022491455078
    6. '.update' → logprob: -19.03522491455078
    7. ' ' → logprob: -19.03522491455078
    8. ' ' → logprob: -19.41022491455078
    9. '
' → logprob: -20.41022491455078
    10. 'build' → logprob: -20.41022491455078

Token 342: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -3.5716304410016164e-05
    2. 'pos' → logprob: -10.250035285949707
    3. ' pos' → logprob: -15.625035285949707
    4. '(' → logprob: -17.125036239624023
    5. '[pos' → logprob: -17.375036239624023
    6. ',pos' → logprob: -17.625036239624023
    7. ' (' → logprob: -19.500036239624023
    8. '	pos' → logprob: -19.500036239624023
    9. '(p' → logprob: -20.500036239624023
    10. '(position' → logprob: -20.625036239624023

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003029167652130127
    2. ' ,' → logprob: -6.3780293464660645
    3. ',v' → logprob: -6.6280293464660645
    4. '(v' → logprob: -13.378028869628906
    5. '   ' → logprob: -14.003028869628906
    6. ' v' → logprob: -15.003028869628906
    7. '    ' → logprob: -15.378028869628906
    8. 'v' → logprob: -15.753028869628906
    9. ',pos' → logprob: -16.503028869628906
    10. ' ' → logprob: -17.378028869628906

Token 344: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01604926772415638
    2. ' v' → logprob: -4.141049385070801
    3. '	v' → logprob: -12.5160493850708
    4. 's' → logprob: -12.6410493850708
    5. ')v' → logprob: -12.6410493850708
    6. 'b' → logprob: -13.2660493850708
    7. ')' → logprob: -14.6410493850708
    8. 'a' → logprob: -14.8910493850708
    9. '(v' → logprob: -15.2660493850708
    10. '_v' → logprob: -15.5160493850708

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023643692838959396
    2. ' ,' → logprob: -8.375236511230469
    3. '   ' → logprob: -12.875236511230469
    4. ',i' → logprob: -13.375236511230469
    5. ' ' → logprob: -14.750236511230469
    6. ',left' → logprob: -15.125236511230469
    7. ',v' → logprob: -15.250236511230469
    8. '	' → logprob: -15.500236511230469
    9. '  ' → logprob: -15.625236511230469
    10. '    ' → logprob: -15.750236511230469

Token 346: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.15310683415737e-05
    2. ' i' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.25002098083496
    4. '	i' → logprob: -20.00002098083496
    5. '    ' → logprob: -20.62502098083496
    6. '  ' → logprob: -20.75002098083496
    7. ' ' → logprob: -22.00002098083496
    8. '     ' → logprob: -22.37502098083496
    9. '2' → logprob: -23.12502098083496
    10. '```' → logprob: -23.12502098083496

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.85366350505501e-05
    2. ',m' → logprob: -9.50009822845459
    3. ' ,' → logprob: -10.87509822845459
    4. 'm' → logprob: -12.37509822845459
    5. '   ' → logprob: -15.62509822845459
    6. ',
' → logprob: -16.250099182128906
    7. ' m' → logprob: -16.375099182128906
    8. '	' → logprob: -17.375099182128906
    9. ' ' → logprob: -17.500099182128906
    10. '	m' → logprob: -17.750099182128906

Token 348: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0206720617134124e-05
    2. ' m' → logprob: -11.50001049041748
    3. '	m' → logprob: -17.500009536743164
    4. '   ' → logprob: -18.250009536743164
    5. ' ' → logprob: -19.000009536743164
    6. '[m' → logprob: -19.500009536743164
    7. '```' → logprob: -19.875009536743164
    8. '     ' → logprob: -21.625009536743164
    9. '    ' → logprob: -21.625009536743164
    10. '<m' → logprob: -21.750009536743164

Token 349: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04861631989479065
    2. ')
' → logprob: -3.048616409301758
    3. '   ' → logprob: -10.673616409301758
    4. ')
' → logprob: -12.423616409301758
    5. ')

' → logprob: -14.173616409301758
    6. ' ' → logprob: -14.798616409301758
    7. ' )' → logprob: -15.673616409301758
    8. '       ' → logprob: -16.173616409301758
    9. ',' → logprob: -16.548616409301758
    10. ' )
' → logprob: -16.798616409301758

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7231438755989075
    2. 'right' → logprob: -0.7231438755989075
    3. '   ' → logprob: -3.9731438159942627
    4. ' right' → logprob: -4.598144054412842
    5. 'else' → logprob: -7.973144054412842
    6. '	right' → logprob: -8.473143577575684
    7. ',right' → logprob: -9.723143577575684
    8. ')' → logprob: -12.098143577575684
    9. ' else' → logprob: -12.098143577575684
    10. ',' → logprob: -12.223143577575684

Token 351: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.04585891589522362
    2. ' right' → logprob: -3.170858860015869
    3. '       ' → logprob: -5.920858860015869
    4. '   ' → logprob: -9.670859336853027
    5. 'v' → logprob: -9.920859336853027
    6. ' v' → logprob: -10.920859336853027
    7. '
' → logprob: -11.045859336853027
    8. 'r' → logprob: -11.670859336853027
    9. 'left' → logprob: -11.920859336853027
    10. '	right' → logprob: -12.295859336853027

Token 352: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193527340888977
    2. '=' → logprob: -1.5019352436065674
    3. '=v' → logprob: -12.376935005187988
    4. ' ' → logprob: -13.626935005187988
    5. '   ' → logprob: -14.376935005187988
    6. ',' → logprob: -15.626935005187988
    7. ')' → logprob: -17.501935958862305
    8. '    ' → logprob: -17.626935958862305
    9. ' v' → logprob: -17.751935958862305
    10. '  ' → logprob: -17.876935958862305

Token 353: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.34872162342071533
    2. ' v' → logprob: -1.2237216234207153
    3. 'update' → logprob: -9.223721504211426
    4. ' update' → logprob: -9.598721504211426
    5. '   ' → logprob: -10.348721504211426
    6. 'combine' → logprob: -10.723721504211426
    7. ' build' → logprob: -11.598721504211426
    8. 'build' → logprob: -11.598721504211426
    9. ' combine' → logprob: -11.598721504211426
    10. '	v' → logprob: -11.723721504211426

Token 354: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.013685869053006172
    2. '[j' → logprob: -4.888685703277588
    3. '[m' → logprob: -5.513685703277588
    4. 'i' → logprob: -6.388685703277588
    5. 'j' → logprob: -9.138686180114746
    6. '[v' → logprob: -9.263686180114746
    7. 'm' → logprob: -10.138686180114746
    8. '[' → logprob: -10.138686180114746
    9. '[(' → logprob: -11.138686180114746
    10. '.get' → logprob: -11.263686180114746

Token 355: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02783961407840252
    2. '[i' → logprob: -3.9028396606445312
    3. 'j' → logprob: -5.527839660644531
    4. 'm' → logprob: -6.277839660644531
    5. '[m' → logprob: -7.777839660644531
    6. ' i' → logprob: -8.277839660644531
    7. '[j' → logprob: -8.527839660644531
    8. 'v' → logprob: -8.652839660644531
    9. '(i' → logprob: -9.402839660644531
    10. ']' → logprob: -9.777839660644531

Token 356: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.4232327342033386
    2. 'i' → logprob: -1.1732327938079834
    3. ']' → logprob: -3.4232327938079834
    4. ' *' → logprob: -6.923232555389404
    5. ' i' → logprob: -7.423232555389404
    6. '*' → logprob: -7.423232555389404
    7. '][' → logprob: -8.423233032226562
    8. '[i' → logprob: -8.548233032226562
    9. '+i' → logprob: -9.298233032226562
    10. '*v' → logprob: -9.548233032226562

Token 357: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06835240125656128
    2. ']' → logprob: -3.068352460861206
    3. ' +' → logprob: -3.943352460861206
    4. '+i' → logprob: -8.818352699279785
    5. ']
' → logprob: -11.568352699279785
    6. '+j' → logprob: -11.568352699279785
    7. ']+' → logprob: -13.068352699279785
    8. '][' → logprob: -13.068352699279785
    9. ']

' → logprob: -13.193352699279785
    10. ' ' → logprob: -13.193352699279785

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07926681637763977
    2. '2' → logprob: -2.5792667865753174
    3. ' ' → logprob: -7.9542670249938965
    4. '   ' → logprob: -10.954266548156738
    5. '0' → logprob: -12.454266548156738
    6. '  ' → logprob: -13.454266548156738
    7. '    ' → logprob: -14.329266548156738
    8. '3' → logprob: -15.016766548156738
    9. ']' → logprob: -15.266766548156738
    10. '```' → logprob: -15.391766548156738

Token 359: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004082078114151955
    2. ' ]' → logprob: -5.504082202911377
    3. ')]' → logprob: -13.879081726074219
    4. '()]' → logprob: -14.004081726074219
    5. ']
' → logprob: -14.629081726074219
    6. '`]' → logprob: -14.754081726074219
    7. '   ' → logprob: -15.629081726074219
    8. ' ' → logprob: -15.754081726074219
    9. '']' → logprob: -16.37908172607422
    10. ']

' → logprob: -16.37908172607422

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011278649792075157
    2. '       ' → logprob: -4.7612786293029785
    3. 'else' → logprob: -6.3862786293029785
    4. ',' → logprob: -8.011279106140137
    5. ' else' → logprob: -8.261279106140137
    6. ')' → logprob: -8.761279106140137
    7. '<|end|>' → logprob: -9.761279106140137
    8. '	else' → logprob: -9.886279106140137
    9. '```' → logprob: -11.261279106140137
    10. '+' → logprob: -11.636279106140137

Token 361: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.22920159995555878
    2. '   ' → logprob: -1.7292015552520752
    3. ' else' → logprob: -3.604201555252075
    4. '	else' → logprob: -8.979201316833496
    5. 'elif' → logprob: -11.104201316833496
    6. '       ' → logprob: -11.229201316833496
    7. '    
' → logprob: -11.479201316833496
    8. ',' → logprob: -12.479201316833496
    9. '
' → logprob: -12.479201316833496
    10. '[' → logprob: -12.604201316833496

Token 362: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14624835550785065
    2. ':' → logprob: -2.0212483406066895
    3. '       ' → logprob: -5.7712483406066895
    4. '   ' → logprob: -7.7712483406066895
    5. '    ' → logprob: -11.896248817443848
    6. ':
' → logprob: -12.021248817443848
    7. '```' → logprob: -12.896248817443848
    8. '      ' → logprob: -13.271248817443848
    9. ':

' → logprob: -13.271248817443848
    10. '{
' → logprob: -13.396248817443848

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16390469670295715
    2. ' left' → logprob: -2.7889046669006348
    3. 'left' → logprob: -3.0389046669006348
    4. ' right' → logprob: -3.6639046669006348
    5. 'right' → logprob: -4.163904666900635
    6. '	left' → logprob: -8.538905143737793
    7. '   ' → logprob: -8.663905143737793
    8. '	right' → logprob: -9.038905143737793
    9. '
' → logprob: -10.288905143737793
    10. '	' → logprob: -11.038905143737793

Token 364: ' left' (ID: 3561)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3323099613189697
    2. ' right' → logprob: -1.5823099613189697
    3. 'left' (adapté à ' left') → logprob: -2.7073099613189697
    4. ' left' → logprob: -4.582309722900391
    5. '   ' → logprob: -8.45730972290039
    6. '	right' → logprob: -10.08230972290039
    7. '       ' → logprob: -11.08230972290039
    8. '	left' → logprob: -12.08230972290039
    9. '    ' → logprob: -12.45730972290039
    10. ' ' → logprob: -13.08230972290039

Token 365: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38745105266571045
    2. '=' → logprob: -1.1374510526657104
    3. ',' → logprob: -7.512451171875
    4. '=v' → logprob: -11.012451171875
    5. ' ,' → logprob: -11.887451171875
    6. ' ' → logprob: -12.262451171875
    7. ',v' → logprob: -12.762451171875
    8. '   ' → logprob: -13.887451171875
    9. 'v' → logprob: -15.012451171875
    10. 's' → logprob: -15.449951171875

Token 366: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029756737872958183
    2. ' v' → logprob: -3.529756784439087
    3. '   ' → logprob: -12.279756546020508
    4. '  ' → logprob: -14.529756546020508
    5. '	v' → logprob: -14.654756546020508
    6. '2' → logprob: -15.154756546020508
    7. ' ' → logprob: -15.279756546020508
    8. '    ' → logprob: -15.529756546020508
    9. '       ' → logprob: -16.904756546020508
    10. '_v' → logprob: -18.279756546020508

Token 367: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02054632641375065
    2. '2' → logprob: -3.8955464363098145
    3. '[i' → logprob: -13.145545959472656
    4. ' ' → logprob: -14.520545959472656
    5. '   ' → logprob: -14.770545959472656
    6. '[
' → logprob: -14.895545959472656
    7. '(' → logprob: -15.520545959472656
    8. '  ' → logprob: -15.520545959472656
    9. ' [' → logprob: -15.520545959472656
    10. '
' → logprob: -16.020545959472656

Token 368: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010413920972496271
    2. ' ' → logprob: -9.250103950500488
    3. 'i' → logprob: -13.250103950500488
    4. '(' → logprob: -13.250103950500488
    5. '[' → logprob: -13.375103950500488
    6. '   ' → logprob: -13.500103950500488
    7. '  ' → logprob: -14.250103950500488
    8. '     ' → logprob: -16.437604904174805
    9. '```' → logprob: -16.437604904174805
    10. '    ' → logprob: -16.500104904174805

Token 369: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.011066683568060398
    2. 'i' → logprob: -4.511066913604736
    3. '*' → logprob: -11.011066436767578
    4. ' *' → logprob: -13.386066436767578
    5. '*j' → logprob: -15.011066436767578
    6. ' i' → logprob: -15.511066436767578
    7. '```' → logprob: -16.011066436767578
    8. '
' → logprob: -16.886066436767578
    9. '	i' → logprob: -17.136066436767578
    10. '[i' → logprob: -17.511066436767578

Token 370: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -2.856408536899835e-05
    2. ' +' → logprob: -10.625028610229492
    3. ']+' → logprob: -14.125028610229492
    4. '+r' → logprob: -14.125028610229492
    5. '+k' → logprob: -14.500028610229492
    6. '+i' → logprob: -14.500028610229492
    7. ']' → logprob: -14.500028610229492
    8. '+j' → logprob: -14.625028610229492
    9. '+
' → logprob: -15.500028610229492
    10. '-' → logprob: -15.625028610229492

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9200648665428162
    2. 'right' → logprob: -1.295064926147461
    3. ' right' → logprob: -1.920064926147461
    4. '   ' → logprob: -2.670064926147461
    5. ' =' → logprob: -3.170064926147461
    6. '=' → logprob: -3.545064926147461
    7. ',right' → logprob: -4.420064926147461
    8. '
' → logprob: -4.545064926147461
    9. '	right' → logprob: -4.545064926147461
    10. '[right' → logprob: -6.170064926147461

Token 372: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0024801772087812424
    2. ' right' → logprob: -6.0024800300598145
    3. '   ' → logprob: -12.627480506896973
    4. '	right' → logprob: -13.752480506896973
    5. '       ' → logprob: -16.627479553222656
    6. '[right' → logprob: -16.752479553222656
    7. '
' → logprob: -17.627479553222656
    8. ',right' → logprob: -17.877479553222656
    9. '.right' → logprob: -18.127479553222656
    10. 'Right' → logprob: -18.127479553222656

Token 373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020969063043594
    2. ' =' → logprob: -2.3502097129821777
    3. '[' → logprob: -13.10020923614502
    4. '   ' → logprob: -14.35020923614502
    5. 'update' → logprob: -15.47520923614502
    6. ' ' → logprob: -16.100210189819336
    7. ' update' → logprob: -17.100210189819336
    8. '```' → logprob: -17.725210189819336
    9. ',' → logprob: -17.975210189819336
    10. '	' → logprob: -18.225210189819336

Token 374: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.00861468818038702
    2. ' update' → logprob: -4.758614540100098
    3. '(update' → logprob: -17.133615493774414
    4. '	update' → logprob: -17.258615493774414
    5. '   ' → logprob: -18.758615493774414
    6. '.update' → logprob: -19.258615493774414
    7. '
' → logprob: -20.508615493774414
    8. ' ' → logprob: -20.508615493774414
    9. '```' → logprob: -20.633615493774414
    10. '  ' → logprob: -21.383615493774414

Token 375: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -5.512236498361744e-07
    2. 'pos' → logprob: -14.625000953674316
    3. '[pos' → logprob: -17.375
    4. ',pos' → logprob: -18.375
    5. '(' → logprob: -19.0
    6. ' pos' → logprob: -19.125
    7. '	pos' → logprob: -20.0
    8. '_pos' → logprob: -20.625
    9. 'Pos' → logprob: -21.5
    10. '(position' → logprob: -21.75

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2723104848410003e-05
    2. ',v' → logprob: -11.000022888183594
    3. ' ,' → logprob: -12.750022888183594
    4. ',pos' → logprob: -12.875022888183594
    5. '(v' → logprob: -15.250022888183594
    6. '(pos' → logprob: -15.500022888183594
    7. '```' → logprob: -16.875022888183594
    8. '(' → logprob: -17.250022888183594
    9. 'pos' → logprob: -17.250022888183594
    10. 'v' → logprob: -17.375022888183594

Token 377: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0040823169983923435
    2. ' v' → logprob: -5.504082202911377
    3. 'pos' → logprob: -12.504082679748535
    4. '	v' → logprob: -16.25408172607422
    5. ' pos' → logprob: -17.12908172607422
    6. ',v' → logprob: -17.75408172607422
    7. ')v' → logprob: -19.00408172607422
    8. ' ' → logprob: -19.37908172607422
    9. '   ' → logprob: -19.50408172607422
    10. ',' → logprob: -19.87908172607422

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. ',v' → logprob: -11.375027656555176
    3. ' ,' → logprob: -11.750027656555176
    4. 'v' → logprob: -12.625027656555176
    5. '2' → logprob: -12.625027656555176
    6. ',i' → logprob: -13.875027656555176
    7. ' v' → logprob: -15.625027656555176
    8. ' ' → logprob: -15.875027656555176
    9. '   ' → logprob: -16.375028610229492
    10. '3' → logprob: -16.875028610229492

Token 379: ' m' (ID: 284)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.32061266899108887
    2. '2' → logprob: -2.195612668991089
    3. 'm' → logprob: -2.195612668991089
    4. 'i' → logprob: -3.320612668991089
    5. 'pos' → logprob: -4.820612907409668
    6. ' m' → logprob: -6.195612907409668
    7. ' v' → logprob: -6.320612907409668
    8. ' ' → logprob: -6.695612907409668
    9. '   ' → logprob: -7.195612907409668
    10. ' i' → logprob: -7.320612907409668

Token 380: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.8889261304575484e-06
    2. ' +' → logprob: -12.500003814697266
    3. ')+' → logprob: -17.500003814697266
    4. '+
' → logprob: -17.500003814697266
    5. '2' → logprob: -17.875003814697266
    6. '+j' → logprob: -18.000003814697266
    7. '```' → logprob: -18.000003814697266
    8. '
' → logprob: -19.125003814697266
    9. ''+' → logprob: -19.250003814697266
    10. '()+' → logprob: -19.375003814697266

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.37501335144043
    3. '+' → logprob: -14.18751335144043
    4. '```' → logprob: -15.87501335144043
    5. '0' → logprob: -15.93751335144043
    6. '
' → logprob: -16.00001335144043
    7. ',' → logprob: -16.12501335144043
    8. '   ' → logprob: -16.43751335144043
    9. '4' → logprob: -16.87501335144043
    10. '<|end|>' → logprob: -17.06251335144043

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004003722686320543
    2. 'j' → logprob: -5.629003524780273
    3. ',j' → logprob: -8.129003524780273
    4. ' j' → logprob: -9.504003524780273
    5. ' ,' → logprob: -10.379003524780273
    6. '   ' → logprob: -14.504003524780273
    7. ' ' → logprob: -14.629003524780273
    8. '[j' → logprob: -14.629003524780273
    9. '```' → logprob: -14.754003524780273
    10. '2' → logprob: -15.379003524780273

Token 383: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00071553117595613
    2. ' j' → logprob: -7.250715732574463
    3. '   ' → logprob: -13.125715255737305
    4. '	j' → logprob: -13.625715255737305
    5. '2' → logprob: -14.125715255737305
    6. '```' → logprob: -14.375715255737305
    7. 'v' → logprob: -14.625715255737305
    8. ' ' → logprob: -15.625715255737305
    9. '    ' → logprob: -16.375715255737305
    10. '$j' → logprob: -16.500715255737305

Token 384: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5862231254577637
    2. ')' → logprob: -0.8362231254577637
    3. '   ' → logprob: -4.586223125457764
    4. ')
' → logprob: -10.461223602294922
    5. ' ' → logprob: -12.086223602294922
    6. ' )
' → logprob: -13.336223602294922
    7. '  ' → logprob: -13.586223602294922
    8. '       ' → logprob: -13.836223602294922
    9. ' )' → logprob: -14.211223602294922
    10. ')

' → logprob: -14.961223602294922

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002650690032169223
    2. '	v' → logprob: -7.252650737762451
    3. '```' → logprob: -7.502650737762451
    4. 'v' → logprob: -7.877650737762451
    5. '[' → logprob: -8.127650260925293
    6. ',' → logprob: -8.877650260925293
    7. '	c' → logprob: -9.127650260925293
    8. '<|end|>' → logprob: -9.252650260925293
    9. ' v' → logprob: -9.627650260925293
    10. ' ' → logprob: -10.127650260925293

Token 386: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.013566632755100727
    2. '   ' → logprob: -5.013566493988037
    3. ' v' → logprob: -5.013566493988037
    4. '	v' → logprob: -9.638566970825195
    5. 'c' → logprob: -10.013566970825195
    6. 'node' → logprob: -11.263566970825195
    7. ' ' → logprob: -11.388566970825195
    8. 'res' → logprob: -12.013566970825195
    9. 'return' → logprob: -12.138566970825195
    10. 'token' → logprob: -12.263566970825195

Token 387: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.517272024415433e-05
    2. '[' → logprob: -9.500075340270996
    3. 'i' → logprob: -16.75007438659668
    4. '[v' → logprob: -16.87507438659668
    5. '[I' → logprob: -16.87507438659668
    6. '```' → logprob: -17.50007438659668
    7. '[u' → logprob: -18.25007438659668
    8. ' [' → logprob: -18.37507438659668
    9. '[a' → logprob: -18.50007438659668
    10. '2' → logprob: -18.87507438659668

Token 388: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009632694418542087
    2. ']=' → logprob: -7.37596321105957
    3. ')' → logprob: -8.62596321105957
    4. '=' → logprob: -8.87596321105957
    5. ' ]' → logprob: -11.25096321105957
    6. ' =' → logprob: -12.75096321105957
    7. ')=' → logprob: -14.37596321105957
    8. '].' → logprob: -15.12596321105957
    9. '])' → logprob: -15.75096321105957
    10. '']' → logprob: -16.25096321105957

Token 389: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193002820014954
    2. ' =' → logprob: -1.5019299983978271
    3. ')' → logprob: -14.501930236816406
    4. '.=' → logprob: -15.751930236816406
    5. ' ' → logprob: -15.876930236816406
    6. '.' → logprob: -16.876930236816406
    7. ')=' → logprob: -17.001930236816406
    8. '＝' → logprob: -17.251930236816406
    9. ']' → logprob: -18.001930236816406
    10. '  ' → logprob: -18.251930236816406

Token 390: ' combine' (ID: 21700)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combine' → logprob: -0.001502598519437015
    2. ' combine' → logprob: -6.501502513885498
    3. 'Node' → logprob: -16.126502990722656
    4. 'com' → logprob: -16.626502990722656
    5. 'comb' → logprob: -17.251502990722656
    6. '.combine' → logprob: -17.751502990722656
    7. 'combined' → logprob: -18.751502990722656
    8. ' ' → logprob: -19.001502990722656
    9. '  ' → logprob: -19.376502990722656
    10. ' Node' → logprob: -19.376502990722656

Token 391: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. '(le' → logprob: -15.75000286102295
    4. '(
' → logprob: -17.875001907348633
    5. '(lhs' → logprob: -17.875001907348633
    6. ',left' → logprob: -18.750001907348633
    7. '(line' → logprob: -19.500001907348633
    8. '[left' → logprob: -19.625001907348633
    9. 'left' → logprob: -20.250001907348633
    10. ' (' → logprob: -20.750001907348633

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001725511101540178
    2. ',right' → logprob: -8.75017261505127
    3. ' ,' → logprob: -11.25017261505127
    4. 'right' → logprob: -14.12517261505127
    5. '(right' → logprob: -15.25017261505127
    6. ',left' → logprob: -18.250171661376953
    7. ' right' → logprob: -18.500171661376953
    8. '[right' → logprob: -18.500171661376953
    9. '(' → logprob: -18.875171661376953
    10. ',b' → logprob: -19.875171661376953

Token 393: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0002613358374219388
    2. ' right' → logprob: -8.250261306762695
    3. '	right' → logprob: -20.500261306762695
    4. '(right' → logprob: -20.750261306762695
    5. '[right' → logprob: -21.125261306762695
    6. ',right' → logprob: -21.125261306762695
    7. 'r' → logprob: -22.000261306762695
    8. ' ' → logprob: -23.125261306762695
    9. '   ' → logprob: -23.625261306762695
    10. 'rig' → logprob: -23.750261306762695

Token 394: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036186007782816887
    2. ')
' → logprob: -5.6286187171936035
    3. '   ' → logprob: -11.503618240356445
    4. ')i' → logprob: -12.378618240356445
    5. ' )' → logprob: -13.503618240356445
    6. ',' → logprob: -13.878618240356445
    7. ')
' → logprob: -14.628618240356445
    8. ')v' → logprob: -15.128618240356445
    9. '<|end|>' → logprob: -15.628618240356445
    10. ')#' → logprob: -15.753618240356445

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00857781246304512
    2. 'v' → logprob: -6.133577823638916
    3. ' v' → logprob: -6.258577823638916
    4. '    
' → logprob: -7.133577823638916
    5. '[i' → logprob: -7.133577823638916
    6. '\n' → logprob: -7.758577823638916
    7. '	v' → logprob: -7.758577823638916
    8. ' return' → logprob: -7.883577823638916
    9. '	return' → logprob: -7.883577823638916
    10. ' i' → logprob: -7.883577823638916

Token 396: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.00022046364028938115
    2. ' v' → logprob: -8.62522029876709
    3. '   ' → logprob: -10.12522029876709
    4. '	v' → logprob: -15.37522029876709
    5. ' ' → logprob: -15.50022029876709
    6. 'i' → logprob: -15.75022029876709
    7. '
' → logprob: -16.875221252441406
    8. '[i' → logprob: -16.875221252441406
    9. '  ' → logprob: -17.625221252441406
    10. '    
' → logprob: -18.000221252441406

Token 397: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.750001907348633
    3. '[I' → logprob: -14.625001907348633
    4. '```' → logprob: -16.000001907348633
    5. 'i' → logprob: -16.250001907348633
    6. '\[' → logprob: -16.750001907348633
    7. '.i' → logprob: -17.250001907348633
    8. '[
' → logprob: -17.500001907348633
    9. '[v' → logprob: -18.000001907348633
    10. ')[' → logprob: -18.750001907348633

Token 398: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.12926390767097473
    2. '.l' → logprob: -2.6292638778686523
    3. '.' → logprob: -3.1292638778686523
    4. ' .' → logprob: -6.004263877868652
    5. ').' → logprob: -6.754263877868652
    6. '.i' → logprob: -6.879263877868652
    7. '}.' → logprob: -7.629263877868652
    8. ']' → logprob: -9.754263877868652
    9. ' ].' → logprob: -9.879263877868652
    10. '.r' → logprob: -10.504263877868652

Token 399: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.13287942111492157
    2. 'ts' → logprob: -2.1328794956207275
    3. 'min' → logprob: -5.382879257202148
    4. 'ls' → logprob: -6.757879257202148
    5. 'r' → logprob: -9.257879257202148
    6. 'lts' → logprob: -10.132879257202148
    7. ' l' → logprob: -11.257879257202148
    8. 'sum' → logprob: -11.632879257202148
    9. ' tsum' → logprob: -13.507879257202148
    10. '```' → logprob: -13.632879257202148

Token 400: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868931531906128
    2. '=' → logprob: -1.1368931531906128
    3. ' ' → logprob: -11.011893272399902
    4. ',' → logprob: -12.761893272399902
    5. '=i' → logprob: -13.136893272399902
    6. ')' → logprob: -16.261892318725586
    7. ' =
' → logprob: -16.636892318725586
    8. ' ,' → logprob: -16.636892318725586
    9. ' =)' → logprob: -16.761892318725586
    10. '<|end|>' → logprob: -16.886892318725586

Token 401: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004078401252627373
    2. ' i' → logprob: -5.504078388214111
    3. '	i' → logprob: -18.504077911376953
    4. '_i' → logprob: -19.504077911376953
    5. ' ' → logprob: -19.879077911376953
    6. '   ' → logprob: -20.254077911376953
    7. '1' → logprob: -21.004077911376953
    8. '  ' → logprob: -21.129077911376953
    9. ' ' → logprob: -22.004077911376953
    10. '[i' → logprob: -22.254077911376953

Token 402: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024809064343571663
    2. '   ' → logprob: -4.274808883666992
    3. ' j' → logprob: -5.524808883666992
    4. 'j' → logprob: -5.649808883666992
    5. '<|end|>' → logprob: -6.024808883666992
    6. ' ' → logprob: -8.399808883666992
    7. ',' → logprob: -8.524808883666992
    8. '
' → logprob: -9.524808883666992
    9. ',j' → logprob: -9.774808883666992
    10. '  ' → logprob: -10.649808883666992

Token 403: '   ' (ID: 271)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7805681824684143
    2. ' j' → logprob: -1.1555681228637695
    3. '   ' → logprob: -1.5305681228637695
    4. '	j' → logprob: -5.6555681228637695
    5. ' ' → logprob: -6.1555681228637695
    6. ',' → logprob: -6.5305681228637695
    7. '
' → logprob: -6.7805681228637695
    8. ',j' → logprob: -7.0305681228637695
    9. '<|end|>' → logprob: -7.4055681228637695
    10. '  ' → logprob: -8.03056812286377

Token 404: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.015379087999463081
    2. ' v' → logprob: -4.515378952026367
    3. '   ' → logprob: -5.890378952026367
    4. 'j' → logprob: -6.515378952026367
    5. ' j' → logprob: -9.890378952026367
    6. 'i' → logprob: -11.015378952026367
    7. '  ' → logprob: -12.765378952026367
    8. ' ' → logprob: -12.890378952026367
    9. ' i' → logprob: -13.515378952026367
    10. '	v' → logprob: -13.640378952026367

Token 405: '[i' (ID: 1768)
  Prédit: '.r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.048883020877838135
    2. '.' → logprob: -3.0488829612731934
    3. '[' → logprob: -9.048883438110352
    4. '   ' → logprob: -9.173883438110352
    5. ' .' → logprob: -10.923883438110352
    6. '[r' → logprob: -11.298883438110352
    7. '	' → logprob: -11.548883438110352
    8. '.i' → logprob: -11.923883438110352
    9. 'r' → logprob: -12.673883438110352
    10. '.rstrip' → logprob: -12.673883438110352

Token 406: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.7002297639846802
    2. '.r' → logprob: -1.3252297639846802
    3. '.' → logprob: -1.4502297639846802
    4. ' .' → logprob: -7.200229644775391
    5. '>.' → logprob: -7.325229644775391
    6. ').' → logprob: -7.950229644775391
    7. ']' → logprob: -8.07522964477539
    8. '   ' → logprob: -8.57522964477539
    9. '}.' → logprob: -8.57522964477539
    10. '[' → logprob: -8.70022964477539

Token 407: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004620830062776804
    2. 'j' → logprob: -5.3796210289001465
    3. ' r' → logprob: -15.004620552062988
    4. ' ' → logprob: -15.754620552062988
    5. '   ' → logprob: -16.629621505737305
    6. '  ' → logprob: -17.129621505737305
    7. '2' → logprob: -17.254621505737305
    8. '
' → logprob: -17.754621505737305
    9. ' j' → logprob: -18.004621505737305
    10. '7' → logprob: -18.004621505737305

Token 408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141607522964478
    2. ' =' → logprob: -1.701416015625
    3. '=j' → logprob: -13.451416015625
    4. ' ' → logprob: -14.826416015625
    5. '   ' → logprob: -15.451416015625
    6. ',' → logprob: -15.451416015625
    7. 'j' → logprob: -15.701416015625
    8. '<|end|>' → logprob: -15.826416015625
    9. '[' → logprob: -16.326416015625
    10. ' j' → logprob: -16.951416015625

Token 409: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008048642775975168
    2. ' j' → logprob: -7.125804901123047
    3. '	j' → logprob: -14.750804901123047
    4. '<|end|>' → logprob: -16.250804901123047
    5. '$j' → logprob: -17.875804901123047
    6. '_j' → logprob: -18.000804901123047
    7. '[j' → logprob: -18.375804901123047
    8. '   ' → logprob: -18.375804901123047
    9. ',j' → logprob: -19.750804901123047
    10. ':j' → logprob: -19.750804901123047

Token 410: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004207682330161333
    2. '	return' → logprob: -5.504207611083984
    3. 'return' → logprob: -9.754207611083984
    4. ' return' → logprob: -9.879207611083984
    5. '<|end|>' → logprob: -11.629207611083984
    6. '
' → logprob: -12.629207611083984
    7. '   ' → logprob: -13.129207611083984
    8. ':return' → logprob: -13.129207611083984
    9. '       ' → logprob: -14.379207611083984
    10. '\t' → logprob: -14.379207611083984

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03858025744557381
    2. 'return' → logprob: -3.2885801792144775
    3. '	return' → logprob: -8.163579940795898
    4. ' return' → logprob: -8.288579940795898
    5. '```' → logprob: -13.288579940795898
    6. ':return' → logprob: -14.913579940795898
    7. '   ' → logprob: -15.788579940795898
    8. '       ' → logprob: -16.6635799407959
    9. ' ' → logprob: -16.9135799407959
    10. '  ' → logprob: -16.9135799407959

Token 412: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07956631481647491
    2. '   ' → logprob: -2.579566240310669
    3. ' return' → logprob: -7.329566478729248
    4. '	return' → logprob: -10.82956600189209
    5. ' ' → logprob: -14.82956600189209
    6. '  ' → logprob: -15.70456600189209
    7. ':return' → logprob: -17.204566955566406
    8. '       ' → logprob: -17.329566955566406
    9. 'eturn' → logprob: -17.454566955566406
    10. '{return' → logprob: -18.079566955566406

Token 413: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0206720617134124e-05
    2. ' v' → logprob: -11.50001049041748
    3. '	v' → logprob: -20.125009536743164
    4. '
' → logprob: -21.875009536743164
    5. '   ' → logprob: -22.000009536743164
    6. '```' → logprob: -23.250009536743164
    7. ' ' → logprob: -23.500009536743164
    8. '[v' → logprob: -23.625009536743164
    9. '(v' → logprob: -24.250009536743164
    10. ' ' → logprob: -24.375009536743164

Token 414: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. '[v' → logprob: -17.125001907348633
    4. '[
' → logprob: -17.875001907348633
    5. '<|end|>' → logprob: -18.250001907348633
    6. 'i' → logprob: -18.500001907348633
    7. '```' → logprob: -18.875001907348633
    8. '[I' → logprob: -19.125001907348633
    9. 'v' → logprob: -19.500001907348633
    10. '
' → logprob: -19.625001907348633

Token 415: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3544423381972592e-05
    2. ']' → logprob: -12.62501335144043
    3. ')
' → logprob: -12.62501335144043
    4. '[i' → logprob: -12.62501335144043
    5. '}' → logprob: -13.12501335144043
    6. '[' → logprob: -14.00001335144043
    7. '<|end|>' → logprob: -15.12501335144043
    8. ')i' → logprob: -15.25001335144043
    9. ' )' → logprob: -16.50001335144043
    10. ')}' → logprob: -16.62501335144043

Token 416: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03250151127576828
    2. ' ' → logprob: -4.532501697540283
    3. 'v' → logprob: -4.907501697540283
    4. '<|end|>' → logprob: -5.282501697540283
    5. '(' → logprob: -6.282501697540283
    6. '[
' → logprob: -6.657501697540283
    7. '[v' → logprob: -6.782501697540283
    8. '[]' → logprob: -7.157501697540283
    9. '```' → logprob: -7.157501697540283
    10. ',' → logprob: -7.907501697540283

Token 417: ' query' (ID: 5703)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.13207991421222687
    2. ' main' → logprob: -2.132079839706421
    3. 'solve' → logprob: -5.382080078125
    4. 'process' → logprob: -8.132080078125
    5. ' solve' → logprob: -9.257080078125
    6. 'query' → logprob: -9.507080078125
    7. 'segment' → logprob: -10.882080078125
    8. 'balanced' → logprob: -11.382080078125
    9. 'solution' → logprob: -11.632080078125
    10. 'parse' → logprob: -12.007080078125

Token 418: '(v' (ID: 6932)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.6343756318092346
    2. '(i' → logprob: -0.8843756318092346
    3. '(' → logprob: -3.50937557220459
    4. '(v' → logprob: -3.63437557220459
    5. '(q' → logprob: -9.63437557220459
    6. ' (' → logprob: -9.88437557220459
    7. '(node' → logprob: -9.88437557220459
    8. '(index' → logprob: -10.00937557220459
    9. '(s' → logprob: -10.00937557220459
    10. '(l' → logprob: -10.25937557220459

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7994282795116305e-05
    2. ',i' → logprob: -10.37504768371582
    3. ' ,' → logprob: -11.25004768371582
    4. 'def' → logprob: -13.37504768371582
    5. ',v' → logprob: -14.87504768371582
    6. '[i' → logprob: -15.25004768371582
    7. '<|end|>' → logprob: -15.50004768371582
    8. ',index' → logprob: -15.75004768371582
    9. '[],' → logprob: -16.00004768371582
    10. ',pos' → logprob: -16.00004768371582

Token 420: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020553220063447952
    2. '1' → logprob: -4.520553112030029
    3. ' i' → logprob: -4.895553112030029
    4. 'l' → logprob: -6.770553112030029
    5. '0' → logprob: -7.770553112030029
    6. 'a' → logprob: -10.020553588867188
    7. ' l' → logprob: -10.020553588867188
    8. ' ' → logprob: -10.145553588867188
    9. 'v' → logprob: -10.270553588867188
    10. 'k' → logprob: -10.270553588867188

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015133652777876705
    2. ',i' → logprob: -9.750151634216309
    3. 'def' → logprob: -10.250151634216309
    4. ' ,' → logprob: -10.250151634216309
    5. ',v' → logprob: -11.625151634216309
    6. '[],' → logprob: -13.000151634216309
    7. '[' → logprob: -13.250151634216309
    8. ',int' → logprob: -13.500151634216309
    9. '   ' → logprob: -13.875151634216309
    10. ',n' → logprob: -14.000151634216309

Token 422: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22342707216739655
    2. '0' → logprob: -1.9734270572662354
    3. '1' → logprob: -3.3484270572662354
    4. 'l' → logprob: -4.2234272956848145
    5. 'i' → logprob: -5.8484272956848145
    6. ' j' → logprob: -6.0984272956848145
    7. 'def' → logprob: -6.0984272956848145
    8. 'n' → logprob: -6.4734272956848145
    9. ',' → logprob: -7.2234272956848145
    10. ' ' → logprob: -7.5984272956848145

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.690834273584187e-05
    2. '):' → logprob: -10.37503719329834
    3. ' ,' → logprob: -12.75003719329834
    4. ',v' → logprob: -14.12503719329834
    5. '):
' → logprob: -14.37503719329834
    6. 'def' → logprob: -14.75003719329834
    7. ',i' → logprob: -14.87503719329834
    8. '   ' → logprob: -16.000036239624023
    9. ')' → logprob: -16.125036239624023
    10. ',n' → logprob: -16.625036239624023

Token 424: ' n' (ID: 297)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.511222243309021
    2. ' l' → logprob: -1.636222243309021
    3. ' q' → logprob: -2.2612223625183105
    4. 'q' → logprob: -2.5112223625183105
    5. 'ql' → logprob: -4.5112223625183105
    6. 'k' → logprob: -5.8862223625183105
    7. ' k' → logprob: -7.1362223625183105
    8. 'left' → logprob: -7.1362223625183105
    9. ' left' → logprob: -7.1362223625183105
    10. 'L' → logprob: -7.2612223625183105

Token 425: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006424744613468647
    2. '):' → logprob: -5.131424903869629
    3. '):
' → logprob: -7.881424903869629
    4. ')' → logprob: -9.631424903869629
    5. ' ,' → logprob: -10.756424903869629
    6. 'def' → logprob: -11.756424903869629
    7. '=' → logprob: -12.131424903869629
    8. '):

' → logprob: -12.506424903869629
    9. ',
' → logprob: -13.006424903869629
    10. '   ' → logprob: -13.256424903869629

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008499808609485626
    2. ' if' → logprob: -5.008499622344971
    3. '<|end|>' → logprob: -7.008499622344971
    4. 'if' → logprob: -7.508499622344971
    5. '#' → logprob: -8.633500099182129
    6. 'def' → logprob: -10.633500099182129
    7. '```' → logprob: -10.883500099182129
    8. '    ' → logprob: -11.258500099182129
    9. '[' → logprob: -11.258500099182129
    10. ' ' → logprob: -11.508500099182129

Token 427: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3683607280254364
    2. 'return' → logprob: -1.2433607578277588
    3. 'res' (adapté à ' res') → logprob: -5.74336051940918
    4. 'v' → logprob: -5.86836051940918
    5. 'i' → logprob: -6.11836051940918
    6. 'node' → logprob: -6.11836051940918
    7. 'c' → logprob: -6.24336051940918
    8. ' if' → logprob: -6.24336051940918
    9. 'result' → logprob: -6.61836051940918
    10. 'r' → logprob: -7.11836051940918

Token 428: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231597423553467
    2. '=' → logprob: -0.8981597423553467
    3. ' ' → logprob: -10.648159980773926
    4. ',' → logprob: -12.148159980773926
    5. '  ' → logprob: -13.398159980773926
    6. 'v' → logprob: -13.398159980773926
    7. ':' → logprob: -14.023159980773926
    8. ')' → logprob: -14.273159980773926
    9. '[' → logprob: -15.148159980773926
    10. '   ' → logprob: -15.148159980773926

Token 429: ' v' (ID: 323)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.03003174252808094
    2. 'v' → logprob: -3.905031681060791
    3. 'None' → logprob: -5.030031681060791
    4. ' Node' → logprob: -5.905031681060791
    5. ' v' → logprob: -9.03003215789795
    6. ' None' → logprob: -10.28003215789795
    7. '0' → logprob: -11.65503215789795
    8. '	Node' → logprob: -12.15503215789795
    9. '(Node' → logprob: -12.65503215789795
    10. 'VNode' → logprob: -12.90503215789795

Token 430: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011430216021835804
    2. '[i' → logprob: -4.511430263519287
    3. '1' → logprob: -7.886430263519287
    4. 'i' → logprob: -13.011429786682129
    5. '[v' → logprob: -13.636429786682129
    6. ' [' → logprob: -14.636429786682129
    7. '[
' → logprob: -14.886429786682129
    8. '[n' → logprob: -14.886429786682129
    9. '[j' → logprob: -15.011429786682129
    10. '(' → logprob: -15.011429786682129

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026646157493814826
    2. '0' → logprob: -8.875266075134277
    3. 'i' → logprob: -9.000266075134277
    4. ' ' → logprob: -13.875266075134277
    5. 'n' → logprob: -14.500266075134277
    6. '
' → logprob: -14.625266075134277
    7. '[' → logprob: -14.625266075134277
    8. '   ' → logprob: -15.750266075134277
    9. '2' → logprob: -15.875266075134277
    10. '(' → logprob: -16.125267028808594

Token 432: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00238016527146101
    2. ']
' → logprob: -6.25238037109375
    3. '].' → logprob: -8.50238037109375
    4. ' ]' → logprob: -9.25238037109375
    5. '
' → logprob: -10.00238037109375
    6. ']

' → logprob: -10.37738037109375
    7. '];' → logprob: -11.25238037109375
    8. '1' → logprob: -12.12738037109375
    9. ']
' → logprob: -12.25238037109375
    10. '])' → logprob: -12.50238037109375

Token 433: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6025402545928955
    2. '<|end|>' → logprob: -1.3525402545928955
    3. '   ' → logprob: -1.7275402545928955
    4. ' if' → logprob: -4.977540016174316
    5. ' ' → logprob: -5.977540016174316
    6. '[' → logprob: -6.727540016174316
    7. '<|end|>' → logprob: -6.977540016174316
    8. ' 
' → logprob: -7.227540016174316
    9. ' for' → logprob: -7.352540016174316
    10. '.' → logprob: -7.352540016174316

Token 434: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6188006401062012
    2. 'if' (adapté à ' if') → logprob: -1.1188006401062012
    3. 'for' → logprob: -2.618800640106201
    4. 'return' → logprob: -2.868800640106201
    5. 'i' → logprob: -6.618800640106201
    6. '   ' → logprob: -7.118800640106201
    7. ' if' → logprob: -7.493800640106201
    8. '```' → logprob: -8.24380111694336
    9. ' for' → logprob: -8.36880111694336
    10. 'def' → logprob: -8.49380111694336

Token 435: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.1359410583972931
    2. 'res' → logprob: -2.6359410285949707
    3. ' n' → logprob: -4.010941028594971
    4. ' v' → logprob: -4.510941028594971
    5. ' j' → logprob: -4.760941028594971
    6. ' i' → logprob: -5.260941028594971
    7. ' not' → logprob: -5.385941028594971
    8. 'n' → logprob: -5.885941028594971
    9. 'v' → logprob: -6.510941028594971
    10. 'j' → logprob: -7.135941028594971

Token 436: '.t' (ID: 1370)
  Prédit: '.min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.002876676619052887
    2. '.t' → logprob: -6.3778767585754395
    3. '.ts' → logprob: -6.8778767585754395
    4. '.' → logprob: -9.252876281738281
    5. '.l' → logprob: -11.252876281738281
    6. '.tsv' → logprob: -11.752876281738281
    7. '.minimum' → logprob: -11.752876281738281
    8. ' .' → logprob: -12.002876281738281
    9. '.is' → logprob: -12.752876281738281
    10. '.m' → logprob: -13.252876281738281

Token 437: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -8.256334695033729e-05
    2. 's' → logprob: -10.125082969665527
    3. 'sup' → logprob: -11.375082969665527
    4. '=sum' → logprob: -12.500082969665527
    5. 'summ' → logprob: -12.625082969665527
    6. 'res' → logprob: -12.625082969665527
    7. '```' → logprob: -12.875082969665527
    8. 'sm' → logprob: -13.000082969665527
    9. 'val' → logprob: -13.125082969665527
    10. 'su' → logprob: -13.250082969665527

Token 438: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9265376329421997
    2. ' ==' → logprob: -1.0515376329421997
    3. ' !=' → logprob: -1.8015376329421997
    4. '!=' → logprob: -2.42653751373291
    5. '=' → logprob: -7.42653751373291
    6. '[' → logprob: -8.42653751373291
    7. ' ' → logprob: -9.05153751373291
    8. '0' → logprob: -9.05153751373291
    9. '```' → logprob: -9.92653751373291
    10. ' ' → logprob: -10.80153751373291

Token 439: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894077688455582
    2. ' ' → logprob: -2.4639408588409424
    3. ' ' → logprob: -14.463940620422363
    4. '  ' → logprob: -15.151440620422363
    5. '1' → logprob: -16.46394157409668
    6. '<|end|>' → logprob: -16.83894157409668
    7. '   ' → logprob: -16.90144157409668
    8. '100' → logprob: -16.96394157409668
    9. 'res' → logprob: -17.02644157409668
    10. '۰' → logprob: -17.65144157409668

Token 440: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078878089785576
    2. ' ' → logprob: -5.5040788650512695
    3. '  ' → logprob: -16.004079818725586
    4. '   ' → logprob: -16.754079818725586
    5. '۰' → logprob: -17.066579818725586
    6. ' ' → logprob: -17.254079818725586
    7. '<|end|>' → logprob: -17.441579818725586
    8. '1' → logprob: -17.629079818725586
    9. 'zero' → logprob: -17.941579818725586
    10. '00' → logprob: -18.254079818725586

Token 441: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014169031754136086
    2. 'and' → logprob: -4.264169216156006
    3. ' ' → logprob: -12.139168739318848
    4. '	and' → logprob: -16.264169692993164
    5. ' ' → logprob: -16.639169692993164
    6. '<|end|>' → logprob: -18.014169692993164
    7. ' an' → logprob: -18.139169692993164
    8. ',' → logprob: -18.514169692993164
    9. ')' → logprob: -18.639169692993164
    10. ' a' → logprob: -18.889169692993164

Token 442: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00671584764495492
    2. ' res' → logprob: -5.006715774536133
    3. '(res' → logprob: -15.131715774536133
    4. '   ' → logprob: -15.881715774536133
    5. '
' → logprob: -16.756715774536133
    6. ' ' → logprob: -17.131715774536133
    7. '	res' → logprob: -17.381715774536133
    8. '.res' → logprob: -17.631715774536133
    9. '  ' → logprob: -18.631715774536133
    10. '=res' → logprob: -18.881715774536133

Token 443: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -1.4140441635390744e-05
    2. '.' → logprob: -11.500014305114746
    3. '.minimum' → logprob: -13.250014305114746
    4. '.m' → logprob: -13.875014305114746
    5. ' .' → logprob: -14.250014305114746
    6. '.max' → logprob: -14.500014305114746
    7. 'min' → logprob: -17.50001335144043
    8. '.Min' → logprob: -18.12501335144043
    9. '[min' → logprob: -18.37501335144043
    10. ':min' → logprob: -18.50001335144043

Token 444: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.5048530030981055e-06
    2. '(pre' → logprob: -14.000001907348633
    3. '>=' → logprob: -15.125001907348633
    4. '_pre' → logprob: -16.000001907348633
    5. '0' → logprob: -17.000001907348633
    6. '	pre' → logprob: -17.250001907348633
    7. 'pr' → logprob: -18.125001907348633
    8. ' pre' → logprob: -18.125001907348633
    9. '
' → logprob: -18.250001907348633
    10. '_' → logprob: -18.625001907348633

Token 445: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0005969968624413013
    2. ' >=' → logprob: -7.50059700012207
    3. ']>=' → logprob: -10.87559700012207
    4. '==' → logprob: -12.00059700012207
    5. 'ge' → logprob: -12.12559700012207
    6. ')>=' → logprob: -12.12559700012207
    7. '>' → logprob: -12.75059700012207
    8. '[' → logprob: -13.50059700012207
    9. '≥' → logprob: -13.50059700012207
    10. '=' → logprob: -15.00059700012207

Token 446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -20.250015258789062
    4. '۰' → logprob: -20.500015258789062
    5. '  ' → logprob: -21.500015258789062
    6. '00' → logprob: -21.875015258789062
    7. ' ' → logprob: -21.875015258789062
    8. '０' → logprob: -22.375015258789062
    9. '=' → logprob: -22.625015258789062
    10. '000' → logprob: -23.000015258789062

Token 447: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07045784592628479
    2. ':
' → logprob: -2.695457935333252
    3. ' and' → logprob: -7.695457935333252
    4. ' :' → logprob: -10.695457458496094
    5. ':return' → logprob: -10.945457458496094
    6. '   ' → logprob: -11.945457458496094
    7. ' :
' → logprob: -12.195457458496094
    8. '):' → logprob: -12.570457458496094
    9. '):
' → logprob: -12.695457458496094
    10. ',' → logprob: -12.820457458496094

Token 448: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019971922039985657
    2. ' return' → logprob: -4.14497184753418
    3. ' print' → logprob: -6.39497184753418
    4. 'return' → logprob: -6.51997184753418
    5. 'print' → logprob: -7.51997184753418
    6. '           ' → logprob: -8.76997184753418
    7. '   ' → logprob: -9.64497184753418
    8. ' True' → logprob: -12.39497184753418
    9. '	return' → logprob: -12.76997184753418
    10. '      ' → logprob: -12.89497184753418

Token 449: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0821889191865921
    2. 'print' → logprob: -3.332188844680786
    3. 'return' → logprob: -3.332188844680786
    4. ' return' → logprob: -5.457189083099365
    5. '   ' → logprob: -6.332189083099365
    6. ' print' → logprob: -6.832189083099365
    7. '
' → logprob: -8.707188606262207
    8. '           ' → logprob: -9.457188606262207
    9. '	return' → logprob: -10.707188606262207
    10. ' ' → logprob: -11.707188606262207

Token 450: ' already' (ID: 4279)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.678386390209198
    2. ' return' → logprob: -1.1783864498138428
    3. 'print' → logprob: -1.9283864498138428
    4. ' print' → logprob: -3.8033864498138428
    5. '       ' → logprob: -4.803386211395264
    6. ' True' → logprob: -6.053386211395264
    7. 'True' → logprob: -6.053386211395264
    8. '
' → logprob: -6.553386211395264
    9. '   ' → logprob: -6.678386211395264
    10. '           ' → logprob: -6.928386211395264

Token 451: ' balanced' (ID: 32879)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.4577122926712036
    2. 'balanced' → logprob: -1.5827122926712036
    3. 'print' → logprob: -1.7077122926712036
    4. ' return' → logprob: -2.457712173461914
    5. ' True' → logprob: -2.457712173461914
    6. 'valid' → logprob: -2.957712173461914
    7. 'True' → logprob: -3.082712173461914
    8. ' valid' → logprob: -3.582712173461914
    9. ' balanced' → logprob: -3.582712173461914
    10. ' print' → logprob: -3.832712173461914

Token 452: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5308153033256531
    2. '       ' → logprob: -1.5308153629302979
    3. '   ' → logprob: -2.030815362930298
    4. ':' → logprob: -3.030815362930298
    5. ':return' → logprob: -4.655815124511719
    6. ' return' → logprob: -6.030815124511719
    7. '
' → logprob: -6.655815124511719
    8. ' and' → logprob: -7.405815124511719
    9. ',' → logprob: -7.780815124511719
    10. '.' → logprob: -7.905815124511719

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011945136357098818
    2. ' return' → logprob: -7.876194477081299
    3. '   ' → logprob: -8.251194953918457
    4. 'return' → logprob: -8.626194953918457
    5. ':
' → logprob: -9.876194953918457
    6. '
' → logprob: -9.876194953918457
    7. ':' → logprob: -10.251194953918457
    8. '	return' → logprob: -10.501194953918457
    9. '           ' → logprob: -10.626194953918457
    10. '<|end|>' → logprob: -10.751194953918457

Token 454: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7330502271652222
    2. 'print' → logprob: -0.7330502271652222
    3. '       ' → logprob: -3.9830503463745117
    4. ' return' → logprob: -4.608050346374512
    5. '   ' → logprob: -5.233050346374512
    6. ' print' → logprob: -5.358050346374512
    7. '
' → logprob: -8.358050346374512
    8. '           ' → logprob: -9.358050346374512
    9. '	return' → logprob: -10.608050346374512
    10. 'sys' → logprob: -10.983050346374512

Token 455: ' -' (ID: 533)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.11963213235139847
    2. '0' → logprob: -3.2446322441101074
    3. '1' → logprob: -3.3696322441101074
    4. '"' → logprob: -3.9946322441101074
    5. 'res' → logprob: -5.244632244110107
    6. ''' → logprob: -5.244632244110107
    7. ' True' → logprob: -5.619632244110107
    8. '-' → logprob: -6.619632244110107
    9. 'len' → logprob: -6.619632244110107
    10. 'n' → logprob: -6.744632244110107

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.957014556974173e-05
    2. '2' → logprob: -10.125069618225098
    3. ' ' → logprob: -12.000069618225098
    4. 'res' → logprob: -12.000069618225098
    5. '0' → logprob: -12.500069618225098
    6. '-' → logprob: -12.500069618225098
    7. '(' → logprob: -13.125069618225098
    8. 'sys' → logprob: -14.000069618225098
    9. '100' → logprob: -14.250069618225098
    10. 'j' → logprob: -14.250069618225098

Token 457: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0228671096265316
    2. '<|end|>' → logprob: -4.522867202758789
    3. '\n' → logprob: -4.647867202758789
    4. '   ' → logprob: -6.897867202758789
    5. ' 
' → logprob: -8.397867202758789
    6. ')' → logprob: -8.397867202758789
    7. '  
' → logprob: -8.522867202758789
    8. '    
' → logprob: -9.022867202758789
    9. ' ' → logprob: -9.522867202758789
    10. ')
' → logprob: -10.022867202758789

Token 458: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11017043888568878
    2. '   ' → logprob: -2.735170364379883
    3. ' ' → logprob: -4.735170364379883
    4. '<|end|>' → logprob: -4.860170364379883
    5. ' 
' → logprob: -5.235170364379883
    6. ')' → logprob: -5.485170364379883
    7. '\n' → logprob: -5.735170364379883
    8. '  
' → logprob: -5.735170364379883
    9. '    
' → logprob: -5.860170364379883
    10. '' → logprob: -7.360170364379883

Token 459: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44631531834602356
    2. 'low' → logprob: -1.6963152885437012
    3. 'l' → logprob: -2.571315288543701
    4. 'left' → logprob: -3.446315288543701
    5. 'lo' → logprob: -3.821315288543701
    6. 'pos' → logprob: -4.321315288543701
    7. 'res' → logprob: -4.696315288543701
    8. 'stack' → logprob: -5.321315288543701
    9. 'return' → logprob: -5.571315288543701
    10. 'q' → logprob: -5.821315288543701

Token 460: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30895596742630005
    2. 'l' → logprob: -2.5589559078216553
    3. 'low' → logprob: -2.6839559078216553
    4. 'stack' → logprob: -2.8089559078216553
    5. 'lo' → logprob: -3.8089559078216553
    6. 'left' → logprob: -4.433956146240234
    7. 'res' → logprob: -4.933956146240234
    8. 'from' → logprob: -5.558956146240234
    9. 'pos' → logprob: -6.058956146240234
    10. '#' → logprob: -6.183956146240234

Token 461: ' left' (ID: 3561)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.180679202079773
    2. 'pos' → logprob: -1.680679202079773
    3. 'the' → logprob: -1.805679202079773
    4. ' i' → logprob: -2.6806793212890625
    5. 'res' → logprob: -3.0556793212890625
    6. 'i' → logprob: -3.3056793212890625
    7. 'left' → logprob: -3.3056793212890625
    8. ' res' → logprob: -3.4306793212890625
    9. ' left' → logprob: -4.1806793212890625
    10. ' l' → logprob: -4.1806793212890625

Token 462: 'most' (ID: 5309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8611674308776855
    2. ',' → logprob: -0.9861674308776855
    3. ' =' → logprob: -2.1111674308776855
    4. '<|end|>' → logprob: -3.6111674308776855
    5. ',right' → logprob: -3.8611674308776855
    6. 'bound' → logprob: -4.9861674308776855
    7. 'right' → logprob: -5.4861674308776855
    8. 'def' → logprob: -5.7361674308776855
    9. 'most' → logprob: -5.7361674308776855
    10. 'i' → logprob: -6.1111674308776855

Token 463: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7150706052780151
    2. ' i' → logprob: -1.3400706052780151
    3. ' node' → logprob: -3.0900707244873047
    4. 'def' → logprob: -3.3400707244873047
    5. 'pos' → logprob: -3.7150707244873047
    6. '<|end|>' → logprob: -3.9650707244873047
    7. ' res' → logprob: -4.465070724487305
    8. 'node' → logprob: -4.465070724487305
    9. ' valid' → logprob: -4.465070724487305
    10. 'res' → logprob: -4.840070724487305

Token 464: ' where' (ID: 1919)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.117018461227417
    2. 'i' → logprob: -1.742018461227417
    3. 'def' → logprob: -1.867018461227417
    4. '   ' → logprob: -2.617018461227417
    5. ' ' → logprob: -3.117018461227417
    6. ' =' → logprob: -3.867018461227417
    7. ' v' → logprob: -3.867018461227417
    8. 'import' → logprob: -3.992018461227417
    9. ' for' → logprob: -3.992018461227417
    10. ' in' → logprob: -3.992018461227417

Token 465: ' flip' (ID: 29130)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0931486114859581
    2. 'v' → logprob: -2.843148708343506
    3. ' res' → logprob: -3.968148708343506
    4. ' v' → logprob: -5.343148708343506
    5. 'min' → logprob: -5.843148708343506
    6. 'the' → logprob: -5.968148708343506
    7. ' the' → logprob: -7.218148708343506
    8. '(res' → logprob: -8.593148231506348
    9. 'balance' → logprob: -9.218148231506348
    10. ' min' → logprob: -10.093148231506348

Token 466: ' correct' (ID: 6145)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.40030404925346375
    2. 's' → logprob: -2.025304079055786
    3. 'res' → logprob: -2.525304079055786
    4. 'pos' → logprob: -4.275303840637207
    5. ' causes' → logprob: -4.525303840637207
    6. 'needed' → logprob: -4.525303840637207
    7. '(res' → logprob: -4.775303840637207
    8. ' occurs' → logprob: -4.775303840637207
    9. 'is' → logprob: -5.150303840637207
    10. ' can' → logprob: -5.275303840637207

Token 467: 's' (ID: 82)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2187358140945435
    2. ':' → logprob: -1.8437358140945435
    3. '(' → logprob: -2.343735694885254
    4. ' =' → logprob: -2.968735694885254
    5. 'def' → logprob: -2.968735694885254
    6. 'res' → logprob: -3.093735694885254
    7. 'pos' → logprob: -3.093735694885254
    8. ' ' → logprob: -3.343735694885254
    9. ',' → logprob: -3.718735694885254
    10. '=' → logprob: -3.843735694885254

Token 468: ' balance' (ID: 10636)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7927709221839905
    2. ' res' → logprob: -1.2927708625793457
    3. 'res' → logprob: -2.6677708625793457
    4. '<|end|>' → logprob: -3.1677708625793457
    5. ' pos' → logprob: -3.5427708625793457
    6. 'return' → logprob: -4.167770862579346
    7. ')' → logprob: -4.417770862579346
    8. 'def' → logprob: -4.417770862579346
    9. ' for' → logprob: -4.542770862579346
    10. '   ' → logprob: -4.667770862579346

Token 469: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.720637857913971
    2. '
' → logprob: -2.220637798309326
    3. ' ' → logprob: -2.220637798309326
    4. ':' → logprob: -2.345637798309326
    5. '<|end|>' → logprob: -2.470637798309326
    6. ',' → logprob: -3.720637798309326
    7. 'def' → logprob: -3.720637798309326
    8. '  ' → logprob: -4.970637798309326
    9. ' def' → logprob: -5.345637798309326
    10. '    ' → logprob: -5.470637798309326

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8386768698692322
    2. ' m' → logprob: -0.9636768698692322
    3. ' i' → logprob: -2.963676929473877
    4. 'm' → logprob: -3.588676929473877
    5. ' def' → logprob: -3.713676929473877
    6. ' for' → logprob: -4.088676929473877
    7. 'def' → logprob: -4.088676929473877
    8. ' if' → logprob: -5.088676929473877
    9. ' pos' → logprob: -5.213676929473877
    10. '
' → logprob: -5.588676929473877

Token 471: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.43477657437324524
    2. 'm' → logprob: -2.309776544570923
    3. 'def' → logprob: -2.434776544570923
    4. 'stack' → logprob: -2.559776544570923
    5. ' stack' → logprob: -3.684776544570923
    6. 'for' → logprob: -4.184776782989502
    7. '#' → logprob: -4.559776782989502
    8. 'mid' → logprob: -4.934776782989502
    9. ' for' → logprob: -5.059776782989502
    10. ' pos' → logprob: -5.309776782989502

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14336524903774261
    2. '=' → logprob: -2.0183651447296143
    3. ',' → logprob: -7.393365383148193
    4. ' ' → logprob: -10.268364906311035
    5. '  ' → logprob: -10.768364906311035
    6. ' ,' → logprob: -12.018364906311035
    7. ')' → logprob: -12.768364906311035
    8. 'import' → logprob: -13.393364906311035
    9. '=i' → logprob: -13.643364906311035
    10. '   ' → logprob: -13.893364906311035

Token 473: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025649022310972214
    2. '-' → logprob: -3.775649070739746
    3. '0' → logprob: -6.525649070739746
    4. ' ' → logprob: -7.775649070739746
    5. 'None' → logprob: -8.275649070739746
    6. ' -' → logprob: -8.900649070739746
    7. '2' → logprob: -9.400649070739746
    8. 'v' → logprob: -11.525649070739746
    9. 'i' → logprob: -11.900649070739746
    10. 'j' → logprob: -11.900649070739746

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004749915096908808
    2. '-' → logprob: -5.629749774932861
    3. '0' → logprob: -7.004749774932861
    4. '2' → logprob: -9.00475025177002
    5. 'None' → logprob: -9.37975025177002
    6. 'i' → logprob: -11.50475025177002
    7. 'j' → logprob: -11.87975025177002
    8. 'v' → logprob: -12.37975025177002
    9. '[]' → logprob: -12.62975025177002
    10. ' ' → logprob: -13.12975025177002

Token 475: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04247308894991875
    2. 'while' → logprob: -3.917473077774048
    3. ' while' → logprob: -4.792473316192627
    4. '<|end|>' → logprob: -5.167473316192627
    5. '   ' → logprob: -5.667473316192627
    6. ',' → logprob: -5.917473316192627
    7. '	while' → logprob: -7.042473316192627
    8. 'def' → logprob: -8.917472839355469
    9. '<|end|>' → logprob: -9.292472839355469
    10. ',
' → logprob: -9.542472839355469

Token 476: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.821367084980011
    2. '
' → logprob: -1.4463670253753662
    3. 'while' → logprob: -1.6963670253753662
    4. '<|end|>' → logprob: -2.071367025375366
    5. '	while' → logprob: -5.196367263793945
    6. '   ' → logprob: -5.446367263793945
    7. ',' → logprob: -6.071367263793945
    8. ' 
' → logprob: -6.946367263793945
    9. '<|end|>' → logprob: -7.071367263793945
    10. 'def' → logprob: -8.321367263793945

Token 477: ' l' (ID: 305)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06925447285175323
    2. ' while' → logprob: -3.8192543983459473
    3. 'current' → logprob: -4.444254398345947
    4. 'l' (adapté à ' l') → logprob: -5.444254398345947
    5. 'curr' → logprob: -5.444254398345947
    6. 'stack' → logprob: -5.694254398345947
    7. 'balance' → logprob: -5.819254398345947
    8. '
' → logprob: -5.819254398345947
    9. 'prefix' → logprob: -6.069254398345947
    10. 'res' → logprob: -6.194254398345947

Token 478: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42348340153694153
    2. ',' → logprob: -1.2984833717346191
    3. ' =' → logprob: -2.673483371734619
    4. 'while' → logprob: -7.548483371734619
    5. 'idx' → logprob: -7.673483371734619
    6. ' ,' → logprob: -7.923483371734619
    7. 'e' → logprob: -7.923483371734619
    8. '<=' → logprob: -8.798483848571777
    9. '   ' → logprob: -8.923483848571777
    10. 'def' → logprob: -8.923483848571777

Token 479: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008616226725280285
    2. ' r' → logprob: -4.7586164474487305
    3. ' =' → logprob: -14.38361644744873
    4. '=' → logprob: -15.00861644744873
    5. '   ' → logprob: -15.50861644744873
    6. '_r' → logprob: -16.008615493774414
    7. '
' → logprob: -16.133615493774414
    8. '=r' → logprob: -16.633615493774414
    9. ' ' → logprob: -16.883615493774414
    10. 'n' → logprob: -16.883615493774414

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006718925200402737
    2. ' =' → logprob: -5.00671911239624
    3. ',' → logprob: -12.631718635559082
    4. ' ' → logprob: -16.0067195892334
    5. 'idx' → logprob: -16.3817195892334
    6. '=
' → logprob: -17.5067195892334
    7. '   ' → logprob: -18.3817195892334
    8. '=}' → logprob: -18.8817195892334
    9. '=index' → logprob: -19.0067195892334
    10. '=

' → logprob: -19.1317195892334

Token 481: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00645162770524621
    2. 'i' → logprob: -5.256451606750488
    3. ' ' → logprob: -7.006451606750488
    4. 'v' → logprob: -8.756451606750488
    5. '0' → logprob: -9.381451606750488
    6. ' i' → logprob: -10.506451606750488
    7. 'idx' → logprob: -10.756451606750488
    8. '   ' → logprob: -11.881451606750488
    9. '2' → logprob: -12.881451606750488
    10. 'sys' → logprob: -13.006451606750488

Token 482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04812066629528999
    2. 'i' → logprob: -3.1731207370758057
    3. 'v' → logprob: -5.423120498657227
    4. '0' → logprob: -8.048120498657227
    5. 'idx' → logprob: -8.423120498657227
    6. ' ' → logprob: -9.548120498657227
    7. 'res' → logprob: -10.423120498657227
    8. 'l' → logprob: -10.923120498657227
    9. ' i' → logprob: -11.298120498657227
    10. '(' → logprob: -12.298120498657227

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016455493168905377
    2. ' ,' → logprob: -7.001645565032959
    3. ',n' → logprob: -7.251645565032959
    4. ',
' → logprob: -11.5016450881958
    5. ',len' → logprob: -12.0016450881958
    6. 'n' → logprob: -12.3766450881958
    7. ',j' → logprob: -13.7516450881958
    8. ',r' → logprob: -14.1266450881958
    9. '
' → logprob: -14.5016450881958
    10. ' n' → logprob: -14.7516450881958

Token 484: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00038467496051453054
    2. ' n' → logprob: -8.125384330749512
    3. 'len' → logprob: -9.625384330749512
    4. 'j' → logprob: -11.625384330749512
    5. 'r' → logprob: -12.375384330749512
    6. '   ' → logprob: -12.625384330749512
    7. '
' → logprob: -13.750384330749512
    8. '	n' → logprob: -14.125384330749512
    9. '2' → logprob: -14.250384330749512
    10. '(n' → logprob: -14.500384330749512

Token 485: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13842299580574036
    2. 'while' → logprob: -2.388422966003418
    3. ' while' → logprob: -4.388422966003418
    4. '   ' → logprob: -4.513422966003418
    5. '<|end|>' → logprob: -5.388422966003418
    6. '    
' → logprob: -5.638422966003418
    7. ' 
' → logprob: -6.263422966003418
    8. '  
' → logprob: -6.513422966003418
    9. ',' → logprob: -7.013422966003418
    10. '```' → logprob: -7.638422966003418

Token 486: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5791107416152954
    2. '   ' → logprob: -1.3291107416152954
    3. ' while' → logprob: -1.8291107416152954
    4. '
' → logprob: -4.329110622406006
    5. '	while' → logprob: -8.204111099243164
    6. '    
' → logprob: -8.204111099243164
    7. '```' → logprob: -8.329111099243164
    8. ',' → logprob: -9.079111099243164
    9. '<|end|>' → logprob: -9.079111099243164
    10. 'mid' → logprob: -10.579111099243164

Token 487: ' pre' (ID: 876)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0016237606760114431
    2. ' while' → logprob: -6.876623630523682
    3. '   ' → logprob: -8.25162410736084
    4. 'mid' → logprob: -8.50162410736084
    5. 'res' → logprob: -9.75162410736084
    6. '```' → logprob: -10.37662410736084
    7. '
' → logprob: -10.75162410736084
    8. 'stack' → logprob: -11.87662410736084
    9. 'pos' → logprob: -13.00162410736084
    10. '	while' → logprob: -13.50162410736084

Token 488: ' =' (ID: 314)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.46732789278030396
    2. '=' → logprob: -1.3423278331756592
    3. '_sum' → logprob: -2.717327833175659
    4. ' =' → logprob: -3.217327833175659
    5. '=sum' → logprob: -5.467328071594238
    6. 'fix' → logprob: -7.717328071594238
    7. 's' → logprob: -7.967328071594238
    8. ' sum' → logprob: -7.967328071594238
    9. 'f' → logprob: -8.342328071594238
    10. ',' → logprob: -9.717328071594238

Token 489: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. 'res' → logprob: -15.875123977661133
    4. 'v' → logprob: -17.125123977661133
    5. 'Node' → logprob: -17.750123977661133
    6. 'sys' → logprob: -19.250123977661133
    7. '00' → logprob: -19.375123977661133
    8. '   ' → logprob: -19.875123977661133
    9. '۰' → logprob: -19.875123977661133
    10. '1' → logprob: -20.000123977661133

Token 490: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.500006675720215
    3. 'res' → logprob: -13.125006675720215
    4. 'v' → logprob: -14.375006675720215
    5. 'Node' → logprob: -15.125006675720215
    6. 'sys' → logprob: -17.2500057220459
    7. 'None' → logprob: -18.2500057220459
    8. '۰' → logprob: -18.8750057220459
    9. 'node' → logprob: -19.4375057220459
    10. '０' → logprob: -19.4375057220459

Token 491: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8000568747520447
    2. '   ' → logprob: -1.0500569343566895
    3. ' while' → logprob: -2.0500569343566895
    4. '<|end|>' → logprob: -3.3000569343566895
    5. 'while' → logprob: -3.9250569343566895
    6. '	while' → logprob: -4.6750569343566895
    7. '    
' → logprob: -6.6750569343566895
    8. ' 
' → logprob: -6.8000569343566895
    9. ',' → logprob: -7.0500569343566895
    10. '  
' → logprob: -7.1750569343566895

Token 492: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5418750047683716
    2. '   ' → logprob: -1.1668750047683716
    3. ' while' → logprob: -2.291874885559082
    4. '	while' → logprob: -5.541874885559082
    5. '
' → logprob: -6.416874885559082
    6. '<|end|>' → logprob: -8.541874885559082
    7. '    
' → logprob: -10.166874885559082
    8. ' 
' → logprob: -10.416874885559082
    9. '```' → logprob: -10.416874885559082
    10. ' ' → logprob: -10.666874885559082

Token 493: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0001628956088097766
    2. ' while' → logprob: -8.750163078308105
    3. '   ' → logprob: -12.750163078308105
    4. '	while' → logprob: -14.000163078308105
    5. '
' → logprob: -15.125163078308105
    6. '```' → logprob: -15.500163078308105
    7. 'While' → logprob: -16.12516212463379
    8. 'import' → logprob: -18.25016212463379
    9. 'res' → logprob: -18.62516212463379
    10. 'for' → logprob: -19.37516212463379

Token 494: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00034964739461429417
    2. ' l' → logprob: -8.375349998474121
    3. 'idx' → logprob: -9.375349998474121
    4. 'True' → logprob: -10.375349998474121
    5. 'r' → logprob: -13.875349998474121
    6. ' True' → logprob: -14.500349998474121
    7. ' idx' → logprob: -14.500349998474121
    8. 'i' → logprob: -14.875349998474121
    9. '	l' → logprob: -15.125349998474121
    10. '   ' → logprob: -15.250349998474121

Token 495: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3448878526687622
    2. '<' → logprob: -1.3448878526687622
    3. '!=' → logprob: -3.5948877334594727
    4. ' <=' → logprob: -5.969887733459473
    5. ' <' → logprob: -7.844887733459473
    6. ' !=' → logprob: -7.969887733459473
    7. '<|end|>' → logprob: -9.094887733459473
    8. '<n' → logprob: -9.844887733459473
    9. '<len' → logprob: -10.094887733459473
    10. '=' → logprob: -10.219887733459473

Token 496: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000431861262768507
    2. ' r' → logprob: -7.750432014465332
    3. ' ' → logprob: -14.375432014465332
    4. '   ' → logprob: -15.500432014465332
    5. '=r' → logprob: -15.500432014465332
    6. '=' → logprob: -16.875431060791016
    7. '  ' → logprob: -17.000431060791016
    8. '	r' → logprob: -17.250431060791016
    9. '_r' → logprob: -17.375431060791016
    10. 'idx' → logprob: -17.875431060791016

Token 497: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3136560618877411
    2. ':' → logprob: -1.3136560916900635
    3. ' :
' → logprob: -8.313655853271484
    4. '   ' → logprob: -9.563655853271484
    5. ' :' → logprob: -10.813655853271484
    6. ',' → logprob: -11.188655853271484
    7. '):
' → logprob: -11.313655853271484
    8. '       ' → logprob: -11.313655853271484
    9. ':

' → logprob: -11.563655853271484
    10. ' and' → logprob: -12.313655853271484

Token 498: '       ' (ID: 309)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.9866982102394104
    2. 'm' → logprob: -1.1116981506347656
    3. '   ' → logprob: -1.7366981506347656
    4. '       ' → logprob: -2.1116981506347656
    5. '    ' → logprob: -7.861698150634766
    6. '	m' → logprob: -8.111698150634766
    7. '```' → logprob: -8.236698150634766
    8. '[m' → logprob: -11.111698150634766
    9. '     ' → logprob: -11.361698150634766
    10. '	' → logprob: -11.486698150634766

Token 499: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -1.9743012671824545e-05
    2. ' m' → logprob: -10.875020027160645
    3. 'mid' → logprob: -15.000020027160645
    4. '   ' → logprob: -15.375020027160645
    5. '	m' → logprob: -15.375020027160645
    6. '       ' → logprob: -17.250019073486328
    7. '
' → logprob: -18.625019073486328
    8. '```' → logprob: -19.250019073486328
    9. ' mid' → logprob: -20.625019073486328
    10. ' ' → logprob: -21.125019073486328

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132937550544739
    2. '=' → logprob: -1.313293695449829
    3. '=(' → logprob: -10.93829345703125
    4. ',' → logprob: -11.56329345703125
    5. ' =(' → logprob: -13.18829345703125
    6. ' ' → logprob: -13.93829345703125
    7. '=int' → logprob: -14.56329345703125
    8. ')' → logprob: -14.68829345703125
    9. '=l' → logprob: -15.43829345703125
    10. '=
' → logprob: -15.56329345703125

Token 501: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0021939214784651995
    2. ' (' → logprob: -6.127193927764893
    3. '(' → logprob: -12.252193450927734
    4. '(L' → logprob: -13.002193450927734
    5. '   ' → logprob: -14.252193450927734
    6. '(m' → logprob: -14.752193450927734
    7. ' ' → logprob: -14.877193450927734
    8. 'l' → logprob: -16.377193450927734
    9. '(r' → logprob: -16.752193450927734
    10. '(left' → logprob: -16.877193450927734

Token 502: 'l' (ID: 75)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.4288046061992645
    2. 'l' → logprob: -1.053804636001587
    3. ' (' → logprob: -10.178804397583008
    4. '   ' → logprob: -10.428804397583008
    5. ' l' → logprob: -11.053804397583008
    6. '	l' → logprob: -11.428804397583008
    7. ' ' → logprob: -13.303804397583008
    8. '(' → logprob: -13.428804397583008
    9. '_l' → logprob: -13.678804397583008
    10. '[l' → logprob: -13.803804397583008

Token 503: '+r' (ID: 133712)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7179123163223267
    2. '+r' → logprob: -0.7179123163223267
    3. ' +' → logprob: -3.717912197113037
    4. '+m' → logprob: -9.467912673950195
    5. '+l' → logprob: -9.592912673950195
    6. '+
' → logprob: -11.217912673950195
    7. '+t' → logprob: -11.842912673950195
    8. '+k' → logprob: -12.717912673950195
    9. '+s' → logprob: -13.842912673950195
    10. '+x' → logprob: -13.967912673950195

Token 504: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.5786393284797668
    2. ')' → logprob: -0.8286393284797668
    3. ')>>' → logprob: -5.953639507293701
    4. ' )' → logprob: -9.953639030456543
    5. '+' → logprob: -10.703639030456543
    6. ')
' → logprob: -11.078639030456543
    7. '//' → logprob: -11.578639030456543
    8. ')#' → logprob: -13.828639030456543
    9. '```' → logprob: -13.828639030456543
    10. '>>' → logprob: -14.078639030456543

Token 505: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '1' → logprob: -24.6250057220459
    4. '۲' → logprob: -24.6250057220459
    5. '   ' → logprob: -24.7500057220459
    6. '２' → logprob: -24.7500057220459
    7. '```' → logprob: -24.7500057220459
    8. '=' → logprob: -25.3750057220459
    9. '  ' → logprob: -25.5000057220459
    10. '3' → logprob: -25.8750057220459

Token 506: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1079367846250534
    2. '
' → logprob: -2.6079368591308594
    3. ' if' → logprob: -3.9829368591308594
    4. 'if' → logprob: -5.482936859130859
    5. ',' → logprob: -6.607936859130859
    6. '   ' → logprob: -6.732936859130859
    7. '        
' → logprob: -6.857936859130859
    8. '<|end|>' → logprob: -6.982936859130859
    9. '```' → logprob: -8.98293685913086
    10. 'token' → logprob: -9.10793685913086

Token 507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1610117107629776
    2. ' if' → logprob: -2.6610116958618164
    3. '
' → logprob: -3.2860116958618164
    4. 'if' → logprob: -3.4110116958618164
    5. 'left' → logprob: -5.411011695861816
    6. ' left' → logprob: -6.161011695861816
    7. '        
' → logprob: -7.536011695861816
    8. '   ' → logprob: -7.661011695861816
    9. ',' → logprob: -8.286011695861816
    10. 'token' → logprob: -9.161011695861816

Token 508: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.029961753636598587
    2. 'if' → logprob: -3.5299618244171143
    3. 'mid' → logprob: -9.404961585998535
    4. 'vl' → logprob: -10.529961585998535
    5. ' left' → logprob: -10.654961585998535
    6. 'lc' → logprob: -10.904961585998535
    7. 'c' → logprob: -11.154961585998535
    8. 'cur' → logprob: -11.779961585998535
    9. 'right' → logprob: -12.404961585998535
    10. 'val' → logprob: -12.654961585998535

Token 509: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11455372720956802
    2. '=' → logprob: -2.739553689956665
    3. '_node' → logprob: -3.239553689956665
    4. 'node' → logprob: -5.614553928375244
    5. 'Node' → logprob: -7.739553928375244
    6. '=node' → logprob: -8.739553451538086
    7. '_child' → logprob: -9.364553451538086
    8. 'child' → logprob: -10.864553451538086
    9. '_val' → logprob: -11.239553451538086
    10. 'sub' → logprob: -11.364553451538086

Token 510: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02054586075246334
    2. ' v' → logprob: -3.8955459594726562
    3. '2' → logprob: -13.770545959472656
    4. ' ' → logprob: -13.895545959472656
    5. '   ' → logprob: -14.395545959472656
    6. '	v' → logprob: -15.145545959472656
    7. '  ' → logprob: -15.145545959472656
    8. 'combine' → logprob: -15.145545959472656
    9. '    ' → logprob: -16.583045959472656
    10. ' ' → logprob: -16.770545959472656

Token 511: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017576448153704405
    2. '[idx' → logprob: -6.876757621765137
    3. '2' → logprob: -7.251757621765137
    4. 'idx' → logprob: -11.876757621765137
    5. '[i' → logprob: -13.126757621765137
    6. '   ' → logprob: -13.626757621765137
    7. '[left' → logprob: -13.751757621765137
    8. ' ' → logprob: -14.126757621765137
    9. '[
' → logprob: -14.501757621765137
    10. '*' → logprob: -14.876757621765137

Token 512: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013124977704137564
    2. 'idx' → logprob: -7.126312732696533
    3. '[' → logprob: -7.751312732696533
    4. '[idx' → logprob: -9.501312255859375
    5. ' ' → logprob: -13.876312255859375
    6. ' idx' → logprob: -14.126312255859375
    7. '
' → logprob: -15.626312255859375
    8. '   ' → logprob: -15.751312255859375
    9. '(idx' → logprob: -16.313812255859375
    10. '  ' → logprob: -16.376312255859375

Token 513: '*' (ID: 9)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06481452286243439
    2. '*' → logprob: -3.314814567565918
    3. 'i' → logprob: -3.689814567565918
    4. '[idx' → logprob: -7.439814567565918
    5. '*i' → logprob: -7.564814567565918
    6. ' idx' → logprob: -8.564814567565918
    7. '	idx' → logprob: -9.064814567565918
    8. '(idx' → logprob: -11.314814567565918
    9. '_idx' → logprob: -11.564814567565918
    10. ' *' → logprob: -13.314814567565918

Token 514: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0007275633979588747
    2. 'i' → logprob: -7.250727653503418
    3. ' idx' → logprob: -11.250727653503418
    4. '	idx' → logprob: -12.875727653503418
    5. '[idx' → logprob: -13.750727653503418
    6. '(idx' → logprob: -15.125727653503418
    7. 'index' → logprob: -15.375727653503418
    8. '
' → logprob: -16.2507266998291
    9. '```' → logprob: -16.6257266998291
    10. '_idx' → logprob: -16.6257266998291

Token 515: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006881369277834892
    2. ']
' → logprob: -5.006881237030029
    3. ' ]' → logprob: -9.631881713867188
    4. '+' → logprob: -9.756881713867188
    5. ']
' → logprob: -11.631881713867188
    6. '   ' → logprob: -11.881881713867188
    7. ']

' → logprob: -12.131881713867188
    8. '<|end|>' → logprob: -12.381881713867188
    9. '];' → logprob: -13.131881713867188
    10. ' +' → logprob: -13.256881713867188

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34298303723335266
    2. 'pre' → logprob: -2.2179830074310303
    3. ' if' → logprob: -2.5929830074310303
    4. 'if' → logprob: -2.5929830074310303
    5. '
' → logprob: -4.592983245849609
    6. 'left' → logprob: -5.467983245849609
    7. ',' → logprob: -5.592983245849609
    8. ' pre' → logprob: -5.842983245849609
    9. 'prev' → logprob: -6.092983245849609
    10. '<|end|>' → logprob: -6.092983245849609

Token 517: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.5043545961380005
    2. 'if' → logprob: -1.0043545961380005
    3. 'left' → logprob: -4.129354476928711
    4. 'pre' → logprob: -4.879354476928711
    5. ' right' → logprob: -6.754354476928711
    6. '       ' → logprob: -6.879354476928711
    7. ' if' → logprob: -7.129354476928711
    8. 'curr' → logprob: -7.629354476928711
    9. 'prefix' → logprob: -7.754354476928711
    10. 'pref' → logprob: -8.254354476928711

Token 518: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.127020925283432
    2. ' =' → logprob: -2.127020835876465
    3. '[' → logprob: -10.377020835876465
    4. '=
' → logprob: -10.627020835876465
    5. '=v' → logprob: -11.752020835876465
    6. '   ' → logprob: -11.877020835876465
    7. '[idx' → logprob: -12.502020835876465
    8. 'v' → logprob: -12.752020835876465
    9. 'idx' → logprob: -13.002020835876465
    10. ' ' → logprob: -13.752020835876465

Token 519: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06998545676469803
    2. ' v' → logprob: -2.6949853897094727
    3. '   ' → logprob: -10.319985389709473
    4. '  ' → logprob: -12.319985389709473
    5. '	v' → logprob: -12.444985389709473
    6. ' ' → logprob: -12.819985389709473
    7. '    ' → logprob: -13.319985389709473
    8. '       ' → logprob: -14.194985389709473
    9. '2' → logprob: -14.944985389709473
    10. '[v' → logprob: -14.944985389709473

Token 520: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014804595848545432
    2. '2' → logprob: -6.751480579376221
    3. '[idx' → logprob: -8.126480102539062
    4. 'idx' → logprob: -11.751480102539062
    5. ' [' → logprob: -14.001480102539062
    6. '(' → logprob: -14.001480102539062
    7. ' ' → logprob: -14.126480102539062
    8. '
' → logprob: -14.251480102539062
    9. '   ' → logprob: -14.501480102539062
    10. 'x' → logprob: -15.001480102539062

Token 521: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0027290289290249348
    2. 'idx' → logprob: -6.0027289390563965
    3. '(' → logprob: -8.627729415893555
    4. '
' → logprob: -10.252729415893555
    5. ' ' → logprob: -11.252729415893555
    6. '(idx' → logprob: -12.252729415893555
    7. '```' → logprob: -12.627729415893555
    8. '1' → logprob: -12.752729415893555
    9. ' idx' → logprob: -13.002729415893555
    10. '

' → logprob: -13.252729415893555

Token 522: '*' (ID: 9)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.023628490045666695
    2. 'x' → logprob: -3.7736284732818604
    3. 'dx' → logprob: -8.773628234863281
    4. '*' → logprob: -9.023628234863281
    5. ' idx' → logprob: -10.023628234863281
    6. '[idx' → logprob: -10.898628234863281
    7. '
' → logprob: -11.523628234863281
    8. '_idx' → logprob: -11.648628234863281
    9. '(idx' → logprob: -11.898628234863281
    10. 's' → logprob: -12.898628234863281

Token 523: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0002649119414854795
    2. '(' → logprob: -9.000265121459961
    3. '2' → logprob: -9.625265121459961
    4. '(idx' → logprob: -9.750265121459961
    5. ' idx' → logprob: -11.750265121459961
    6. ' (' → logprob: -13.000265121459961
    7. '
' → logprob: -13.125265121459961
    8. '   ' → logprob: -13.750265121459961
    9. '	idx' → logprob: -14.125265121459961
    10. '  ' → logprob: -14.250265121459961

Token 524: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006085684522986412
    2. ']' → logprob: -5.2560858726501465
    3. ' +' → logprob: -7.1310858726501465
    4. '1' → logprob: -11.131085395812988
    5. '+]' → logprob: -11.131085395812988
    6. ']
' → logprob: -12.256085395812988
    7. ']+' → logprob: -12.631085395812988
    8. '+
' → logprob: -12.881085395812988
    9. 'idx' → logprob: -12.881085395812988
    10. '   ' → logprob: -13.256085395812988

Token 525: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.750000953674316
    3. '
' → logprob: -15.250000953674316
    4. '0' → logprob: -16.5
    5. 'idx' → logprob: -17.875
    6. '   ' → logprob: -18.5
    7. '2' → logprob: -18.75
    8. ']' → logprob: -18.875
    9. '```' → logprob: -19.0
    10. '

' → logprob: -19.625

Token 526: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6088218092918396
    2. ']' → logprob: -1.4838218688964844
    3. '       ' → logprob: -2.1088218688964844
    4. '
' → logprob: -2.6088218688964844
    5. ')
' → logprob: -4.233821868896484
    6. ')' → logprob: -4.358821868896484
    7. '   ' → logprob: -5.608821868896484
    8. '<|end|>' → logprob: -6.608821868896484
    9. '```' → logprob: -7.733821868896484
    10. ' ]
' → logprob: -8.108821868896484

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2455068677663803
    2. ' if' → logprob: -2.245506763458252
    3. 'if' → logprob: -3.120506763458252
    4. 'pre' → logprob: -3.745506763458252
    5. ' pre' → logprob: -3.995506763458252
    6. '
' → logprob: -4.120506763458252
    7. '   ' → logprob: -5.120506763458252
    8. '```' → logprob: -6.120506763458252
    9. '        
' → logprob: -8.12050724029541
    10. ',' → logprob: -8.99550724029541

Token 528: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011746838688850403
    2. 'pre' → logprob: -5.011746883392334
    3. ' if' → logprob: -6.261746883392334
    4. 'total' → logprob: -7.636746883392334
    5. 'sum' → logprob: -7.761746883392334
    6. 'prefix' → logprob: -7.886746883392334
    7. 'combined' → logprob: -8.011746406555176
    8. 'cur' → logprob: -8.261746406555176
    9. 'left' → logprob: -8.386746406555176
    10. '       ' → logprob: -8.386746406555176

Token 529: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.09380676597356796
    2. 'pre' → logprob: -2.468806743621826
    3. '(pre' → logprob: -6.218806743621826
    4. ' left' → logprob: -6.718806743621826
    5. '(left' → logprob: -6.718806743621826
    6. ' pre' → logprob: -9.218807220458984
    7. '(' → logprob: -9.468807220458984
    8. 'right' → logprob: -9.468807220458984
    9. ' (' → logprob: -9.968807220458984
    10. '   ' → logprob: -10.468807220458984

Token 530: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.0016085283132269979
    2. '.t' → logprob: -6.626608371734619
    3. '.ts' → logprob: -9.001608848571777
    4. '.' → logprob: -10.126608848571777
    5. 'min' → logprob: -10.251608848571777
    6. '.r' → logprob: -10.876608848571777
    7. '.l' → logprob: -11.501608848571777
    8. ' .' → logprob: -11.626608848571777
    9. '.pre' → logprob: -11.751608848571777
    10. '.m' → logprob: -11.876608848571777

Token 531: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -3.128163257315464e-07
    2. ' pre' → logprob: -16.25
    3. '<' → logprob: -16.625
    4. 'pr' → logprob: -17.5
    5. '_pre' → logprob: -17.625
    6. '
' → logprob: -17.75
    7. '(pre' → logprob: -18.0
    8. '	pre' → logprob: -18.625
    9. '0' → logprob: -19.0
    10. '   ' → logprob: -19.125

Token 532: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14569875597953796
    2. '<' → logprob: -3.0206987857818604
    3. '-' → logprob: -3.3956987857818604
    4. ' +' → logprob: -3.7706987857818604
    5. ' <' → logprob: -3.8956987857818604
    6. '+' → logprob: -5.020698547363281
    7. '-pre' → logprob: -6.020698547363281
    8. ' ' → logprob: -8.020698547363281
    9. '>=' → logprob: -8.895698547363281
    10. 'pre' → logprob: -9.145698547363281

Token 533: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -8.85235276655294e-05
    2. ' pre' → logprob: -9.375088691711426
    3. '(pre' → logprob: -13.500088691711426
    4. '0' → logprob: -14.375088691711426
    5. '   ' → logprob: -15.125088691711426
    6. 'p' → logprob: -15.750088691711426
    7. 'left' → logprob: -15.875088691711426
    8. 'pread' → logprob: -15.875088691711426
    9. '	pre' → logprob: -15.875088691711426
    10. '=' → logprob: -16.00008773803711

Token 534: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5331592559814453
    2. '<' → logprob: -0.9081592559814453
    3. '>=' → logprob: -5.658159255981445
    4. ' >=' → logprob: -5.783159255981445
    5. ' <=' → logprob: -6.283159255981445
    6. '<=' → logprob: -6.783159255981445
    7. ' ' → logprob: -8.033159255981445
    8. '>' → logprob: -10.783159255981445
    9. '[' → logprob: -10.908159255981445
    10. ')' → logprob: -11.283159255981445

Token 535: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008197537390515208
    2. ' ' → logprob: -7.125819683074951
    3. 'left' → logprob: -12.12582015991211
    4. 'pre' → logprob: -12.75082015991211
    5. '1' → logprob: -12.87582015991211
    6. 'right' → logprob: -13.68832015991211
    7. '=' → logprob: -14.50082015991211
    8. '-' → logprob: -14.68832015991211
    9. ' -' → logprob: -15.31332015991211
    10. ' left' → logprob: -15.37582015991211

Token 536: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008158236742019653
    2. ' ' → logprob: -7.1258158683776855
    3. 'left' → logprob: -12.000815391540527
    4. '1' → logprob: -12.750815391540527
    5. 'pre' → logprob: -14.000815391540527
    6. 'right' → logprob: -14.625815391540527
    7. ' left' → logprob: -15.813315391540527
    8. '-' → logprob: -16.188316345214844
    9. ' -' → logprob: -16.313316345214844
    10. '=' → logprob: -16.563316345214844

Token 537: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5259958505630493
    2. ':' → logprob: -0.9009958505630493
    3. '       ' → logprob: -6.77599573135376
    4. '):
' → logprob: -7.15099573135376
    5. ' :
' → logprob: -7.65099573135376
    6. ' :' → logprob: -8.525996208190918
    7. ' and' → logprob: -9.275996208190918
    8. '):' → logprob: -9.900996208190918
    9. ',' → logprob: -10.400996208190918
    10. ':

' → logprob: -10.775996208190918

Token 538: '           ' (ID: 352)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.11981149762868881
    2. ' idx' → logprob: -2.494811534881592
    3. '       ' → logprob: -3.619811534881592
    4. '           ' → logprob: -6.619811534881592
    5. '	idx' → logprob: -6.619811534881592
    6. '
' → logprob: -7.369811534881592
    7. '   ' → logprob: -8.994811058044434
    8. '(idx' → logprob: -9.994811058044434
    9. '[idx' → logprob: -10.119811058044434
    10. '```' → logprob: -10.369811058044434

Token 539: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -7.93448489275761e-05
    2. '           ' → logprob: -10.500079154968262
    3. ' idx' → logprob: -10.500079154968262
    4. '
' → logprob: -11.125079154968262
    5. '	idx' → logprob: -11.875079154968262
    6. 'index' → logprob: -14.625079154968262
    7. '```' → logprob: -14.625079154968262
    8. '(idx' → logprob: -14.750079154968262
    9. '2' → logprob: -14.875079154968262
    10. '[idx' → logprob: -15.500079154968262

Token 540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0040818434208631516
    2. ' =' → logprob: -5.504081726074219
    3. '*=' → logprob: -12.754081726074219
    4. ',' → logprob: -14.629081726074219
    5. ' *=' → logprob: -17.37908172607422
    6. ' ' → logprob: -18.00408172607422
    7. '=

' → logprob: -18.62908172607422
    8. '＝' → logprob: -18.87908172607422
    9. '=
' → logprob: -19.00408172607422
    10. '.=' → logprob: -19.00408172607422

Token 541: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.179569077678025e-05
    2. ' ' → logprob: -10.125041961669922
    3. 'idx' → logprob: -13.875041961669922
    4. '```' → logprob: -15.125041961669922
    5. '   ' → logprob: -15.250041961669922
    6. '[' → logprob: -16.750041961669922
    7. '`' → logprob: -17.437541961669922
    8. '  ' → logprob: -17.625041961669922
    9. '(' → logprob: -18.187541961669922
    10. '``' → logprob: -18.312541961669922

Token 542: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.259079363080673e-05
    2. 'idx' → logprob: -11.750012397766113
    3. ' ' → logprob: -12.375012397766113
    4. '```' → logprob: -16.00001335144043
    5. '   ' → logprob: -16.25001335144043
    6. '`' → logprob: -17.37501335144043
    7. '  ' → logprob: -17.62501335144043
    8. '[' → logprob: -17.87501335144043
    9. '(' → logprob: -18.12501335144043
    10. '' → logprob: -18.37501335144043

Token 543: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0010665126610547304
    2. 'idx' → logprob: -6.8760666847229
    3. '[idx' → logprob: -10.376066207885742
    4. ' *' → logprob: -13.251066207885742
    5. '(idx' → logprob: -14.376066207885742
    6. ' idx' → logprob: -16.751066207885742
    7. '<|end|>' → logprob: -16.751066207885742
    8. '	idx' → logprob: -17.376066207885742
    9. '**' → logprob: -17.876066207885742
    10. '[' → logprob: -18.251066207885742

Token 544: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -5.512236498361744e-07
    2. ' idx' → logprob: -14.750000953674316
    3. '	idx' → logprob: -17.0
    4. '[idx' → logprob: -17.75
    5. '(idx' → logprob: -18.375
    6. '_idx' → logprob: -20.625
    7. 'index' → logprob: -20.625
    8. '<|end|>' → logprob: -20.75
    9. 'id' → logprob: -21.125
    10. ' ' → logprob: -22.125

Token 545: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 546: '           ' (ID: 352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01935439556837082
    2. '   ' → logprob: -4.394354343414307
    3. '
' → logprob: -6.144354343414307
    4. '           ' → logprob: -6.519354343414307
    5. '       ' → logprob: -6.519354343414307
    6. ' r' → logprob: -6.769354343414307
    7. ',' → logprob: -7.894354343414307
    8. 'l' → logprob: -8.894354820251465
    9. ',r' → logprob: -10.644354820251465
    10. '     ' → logprob: -12.144354820251465

Token 547: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.00027337539358995855
    2. '   ' → logprob: -8.625273704528809
    3. ' r' → logprob: -9.875273704528809
    4. 'l' → logprob: -10.125273704528809
    5. '           ' → logprob: -13.875273704528809
    6. '    ' → logprob: -14.875273704528809
    7. '       ' → logprob: -15.000273704528809
    8. '  ' → logprob: -15.125273704528809
    9. ' ' → logprob: -15.625273704528809
    10. '	r' → logprob: -15.875273704528809

Token 548: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009193199803121388
    2. ' =' → logprob: -7.000919342041016
    3. '=m' → logprob: -11.875919342041016
    4. 'm' → logprob: -14.000919342041016
    5. ' m' → logprob: -18.125919342041016
    6. '=
' → logprob: -18.250919342041016
    7. ' ' → logprob: -20.375919342041016
    8. '.=' → logprob: -21.000919342041016
    9. '＝' → logprob: -21.250919342041016
    10. '=}' → logprob: -21.250919342041016

Token 549: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0036022020503878593
    2. ' m' → logprob: -5.628602027893066
    3. '	m' → logprob: -13.253602027893066
    4. '   ' → logprob: -16.003602981567383
    5. ' ' → logprob: -16.003602981567383
    6. '           ' → logprob: -16.128602981567383
    7. ' ' → logprob: -17.003602981567383
    8. '       ' → logprob: -17.003602981567383
    9. '<m' → logprob: -18.378602981567383
    10. ')m' → logprob: -18.503602981567383

Token 550: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36619704961776733
    2. 'else' → logprob: -1.366197109222412
    3. ' else' → logprob: -2.991197109222412
    4. '<|end|>' → logprob: -7.491197109222412
    5. '	else' → logprob: -7.741197109222412
    6. '
' → logprob: -9.241196632385254
    7. 'elif' → logprob: -9.366196632385254
    8. '	' → logprob: -9.741196632385254
    9. '   ' → logprob: -10.491196632385254
    10. '#else' → logprob: -11.116196632385254

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.334043949842453
    2. 'else' → logprob: -1.3340439796447754
    3. ' else' → logprob: -4.459043979644775
    4. '<|end|>' → logprob: -5.709043979644775
    5. '           ' → logprob: -6.209043979644775
    6. '
' → logprob: -6.209043979644775
    7. '```' → logprob: -6.709043979644775
    8. '   ' → logprob: -9.084043502807617
    9. 'elif' → logprob: -9.459043502807617
    10. '#else' → logprob: -9.584043502807617

Token 552: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1363871544599533
    2. ' else' → logprob: -2.6363871097564697
    3. '       ' → logprob: -2.8863871097564697
    4. '	else' → logprob: -9.88638687133789
    5. '   ' → logprob: -10.51138687133789
    6. 'elif' → logprob: -11.63638687133789
    7. '	' → logprob: -12.38638687133789
    8. '
' → logprob: -12.76138687133789
    9. '```' → logprob: -13.26138687133789
    10. '           ' → logprob: -14.88638687133789

Token 553: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4328937828540802
    2. '           ' → logprob: -1.0578937530517578
    3. 'pre' → logprob: -5.807893753051758
    4. ':' → logprob: -8.182893753051758
    5. '   ' → logprob: -8.557893753051758
    6. ' pre' → logprob: -8.682893753051758
    7. ':
' → logprob: -8.807893753051758
    8. '	pre' → logprob: -9.182893753051758
    9. '(pre' → logprob: -9.807893753051758
    10. '```' → logprob: -9.807893753051758

Token 554: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14644360542297363
    2. 'pre' → logprob: -2.2714436054229736
    3. '           ' → logprob: -4.1464433670043945
    4. ' pre' → logprob: -4.5214433670043945
    5. 'l' → logprob: -5.7714433670043945
    6. ' l' → logprob: -6.1464433670043945
    7. 'idx' → logprob: -7.5214433670043945
    8. ' idx' → logprob: -8.271443367004395
    9. '   ' → logprob: -9.021443367004395
    10. '	pre' → logprob: -9.646443367004395

Token 555: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' (adapté à ' pre') → logprob: -0.0024827925954014063
    2. '           ' → logprob: -6.252482891082764
    3. 'idx' → logprob: -7.752482891082764
    4. ' pre' → logprob: -9.502482414245605
    5. '	pre' → logprob: -11.252482414245605
    6. '       ' → logprob: -11.627482414245605
    7. '   ' → logprob: -11.752482414245605
    8. '
' → logprob: -11.877482414245605
    9. 'l' → logprob: -12.627482414245605
    10. 'left' → logprob: -13.002482414245605

Token 556: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014495131559669971
    2. ' +=' → logprob: -4.264494895935059
    3. '=' → logprob: -8.014494895935059
    4. ' =' → logprob: -14.639494895935059
    5. ']+=' → logprob: -15.514494895935059
    6. '+' → logprob: -15.889494895935059
    7. '   ' → logprob: -16.639495849609375
    8. '+=(' → logprob: -17.389495849609375
    9. '
' → logprob: -17.639495849609375
    10. '	' → logprob: -17.764495849609375

Token 557: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0002649119414854795
    2. ' left' → logprob: -8.250265121459961
    3. '	left' → logprob: -13.750265121459961
    4. '   ' → logprob: -13.875265121459961
    5. '[left' → logprob: -14.000265121459961
    6. '           ' → logprob: -15.500265121459961
    7. 'right' → logprob: -16.00026512145996
    8. '
' → logprob: -16.12526512145996
    9. '(left' → logprob: -16.37526512145996
    10. '       ' → logprob: -16.50026512145996

Token 558: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0010092307347804308
    2. '.tsv' → logprob: -7.001009464263916
    3. '.ts' → logprob: -9.751008987426758
    4. 'ts' → logprob: -11.251008987426758
    5. ' tsum' → logprob: -11.376008987426758
    6. '	ts' → logprob: -12.001008987426758
    7. '.' → logprob: -13.376008987426758
    8. ' .' → logprob: -13.751008987426758
    9. '```' → logprob: -13.876008987426758
    10. '`.' → logprob: -13.876008987426758

Token 559: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0802738870552275e-05
    2. 's' → logprob: -12.25001049041748
    3. 'summ' → logprob: -12.62501049041748
    4. 'sup' → logprob: -13.25001049041748
    5. 'su' → logprob: -15.25001049041748
    6. 'psum' → logprob: -15.37501049041748
    7. 'um' → logprob: -16.000011444091797
    8. '.sum' → logprob: -16.500011444091797
    9. 'sm' → logprob: -16.875011444091797
    10. '_sum' → logprob: -17.250011444091797

Token 560: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03003232553601265
    2. 'idx' → logprob: -4.030032157897949
    3. ' idx' → logprob: -5.030032157897949
    4. '
' → logprob: -5.905032157897949
    5. '       ' → logprob: -6.655032157897949
    6. '[idx' → logprob: -7.655032157897949
    7. '   ' → logprob: -8.15503215789795
    8. ',' → logprob: -9.03003215789795
    9. '	idx' → logprob: -9.28003215789795
    10. '               ' → logprob: -9.53003215789795

Token 561: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31490886211395264
    2. 'idx' → logprob: -1.8149088621139526
    3. ' idx' → logprob: -2.314908981323242
    4. '       ' → logprob: -5.314908981323242
    5. '   ' → logprob: -5.939908981323242
    6. '[idx' → logprob: -7.939908981323242
    7. '(idx' → logprob: -8.814908981323242
    8. '	idx' → logprob: -8.814908981323242
    9. '
' → logprob: -9.064908981323242
    10. '```' → logprob: -9.814908981323242

Token 562: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -5.0020742492051795e-05
    2. ' idx' → logprob: -10.125049591064453
    3. '           ' → logprob: -11.750049591064453
    4. 'l' → logprob: -13.625049591064453
    5. '	idx' → logprob: -15.000049591064453
    6. '       ' → logprob: -15.375049591064453
    7. '
' → logprob: -16.000049591064453
    8. '   ' → logprob: -17.125049591064453
    9. '(idx' → logprob: -17.125049591064453
    10. 'index' → logprob: -17.125049591064453

Token 563: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. '+=' → logprob: -17.22520637512207
    4. '*=' → logprob: -17.97520637512207
    5. '.=' → logprob: -18.72520637512207
    6. ' +=' → logprob: -19.10020637512207
    7. ' ' → logprob: -20.10020637512207
    8. ' *=' → logprob: -20.35020637512207
    9. '＝' → logprob: -20.35020637512207
    10. '2' → logprob: -20.72520637512207

Token 564: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000182921823579818
    2. ' ' → logprob: -8.62518310546875
    3. '   ' → logprob: -12.62518310546875
    4. '(' → logprob: -17.37518310546875
    5. '  ' → logprob: -17.37518310546875
    6. '       ' → logprob: -17.75018310546875
    7. '２' → logprob: -17.87518310546875
    8. '    ' → logprob: -18.25018310546875
    9. '۲' → logprob: -18.50018310546875
    10. '```' → logprob: -18.50018310546875

Token 565: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.875
    4. '```' → logprob: -18.125
    5. '`' → logprob: -18.625
    6. '(' → logprob: -18.75
    7. '２' → logprob: -19.375
    8. '
' → logprob: -19.5
    9. '[' → logprob: -19.5
    10. '>' → logprob: -20.25

Token 566: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -7.703443770878948e-06
    2. 'idx' → logprob: -11.875007629394531
    3. '[idx' → logprob: -14.375007629394531
    4. ' idx' → logprob: -17.50000762939453
    5. ' *' → logprob: -17.62500762939453
    6. '(idx' → logprob: -17.87500762939453
    7. '```' → logprob: -18.62500762939453
    8. '
' → logprob: -18.75000762939453
    9. '＊' → logprob: -19.25000762939453
    10. '**' → logprob: -19.37500762939453

Token 567: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -7.3458322731312364e-06
    2. ' idx' → logprob: -11.875007629394531
    3. 'id' → logprob: -15.875007629394531
    4. '	idx' → logprob: -16.00000762939453
    5. '(idx' → logprob: -16.75000762939453
    6. '[idx' → logprob: -17.75000762939453
    7. ' ' → logprob: -18.00000762939453
    8. 'indx' → logprob: -18.50000762939453
    9. '_idx' → logprob: -19.00000762939453
    10. 'i' → logprob: -19.12500762939453

Token 568: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002613358374219388
    2. ' +' → logprob: -8.250261306762695
    3. '1' → logprob: -17.125261306762695
    4. '   ' → logprob: -18.875261306762695
    5. '+
' → logprob: -19.750261306762695
    6. '＋' → logprob: -20.000261306762695
    7. '
' → logprob: -20.625261306762695
    8. '```' → logprob: -20.750261306762695
    9. ' ' → logprob: -21.000261306762695
    10. '           ' → logprob: -21.250261306762695

Token 569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -21.25
    4. '0' → logprob: -22.25
    5. '<|end|>' → logprob: -22.375
    6. '۱' → logprob: -22.5
    7. '```' → logprob: -22.625
    8. '+' → logprob: -22.75
    9. '１' → logprob: -23.125
    10. '  ' → logprob: -23.25

Token 570: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008731092675589025
    2. '   ' → logprob: -7.62587308883667
    3. '       ' → logprob: -8.625873565673828
    4. '
' → logprob: -8.875873565673828
    5. 'l' → logprob: -11.125873565673828
    6. '		' → logprob: -11.375873565673828
    7. '```' → logprob: -11.875873565673828
    8. '<|end|>' → logprob: -12.000873565673828
    9. ',' → logprob: -12.375873565673828
    10. 'd' → logprob: -12.625873565673828

Token 571: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013790446100756526
    2. '   ' → logprob: -7.126379013061523
    3. '       ' → logprob: -7.751379013061523
    4. ' l' → logprob: -9.126379013061523
    5. '		' → logprob: -11.126379013061523
    6. 'l' → logprob: -11.376379013061523
    7. '```' → logprob: -12.251379013061523
    8. '
' → logprob: -13.876379013061523
    9. '               ' → logprob: -14.126379013061523
    10. '	l' → logprob: -14.876379013061523

Token 572: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -8.077528764260933e-05
    2. ' l' → logprob: -9.500081062316895
    3. '   ' → logprob: -12.750081062316895
    4. '	l' → logprob: -13.625081062316895
    5. '       ' → logprob: -13.750081062316895
    6. '           ' → logprob: -15.000081062316895
    7. '    ' → logprob: -15.750081062316895
    8. '```' → logprob: -16.375080108642578
    9. '     ' → logprob: -17.250080108642578
    10. '  ' → logprob: -17.875080108642578

Token 573: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759405493736267
    2. '=' → logprob: -0.8259405493736267
    3. ' ' → logprob: -13.950940132141113
    4. '+=' → logprob: -16.82594108581543
    5. '=l' → logprob: -16.95094108581543
    6. ' +=' → logprob: -17.20094108581543
    7. '>' → logprob: -17.20094108581543
    8. '.=' → logprob: -17.57594108581543
    9. ')' → logprob: -17.70094108581543
    10. '```' → logprob: -18.45094108581543

Token 574: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.31326204538345337
    2. ' m' → logprob: -1.3132619857788086
    3. '	m' → logprob: -15.938261985778809
    4. ' ' → logprob: -16.063262939453125
    5. '   ' → logprob: -17.063262939453125
    6. '[m' → logprob: -18.438262939453125
    7. '+m' → logprob: -18.813262939453125
    8. '(m' → logprob: -18.938262939453125
    9. ' м' → logprob: -19.313262939453125
    10. ' ' → logprob: -19.438262939453125

Token 575: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00976564921438694
    2. ' +' → logprob: -4.634765625
    3. '+
' → logprob: -11.634765625
    4. '+r' → logprob: -15.384765625
    5. ' +
' → logprob: -15.509765625
    6. ' ' → logprob: -15.884765625
    7. '＋' → logprob: -16.384765625
    8. '+l' → logprob: -16.509765625
    9. 'plus' → logprob: -16.759765625
    10. ' plus' → logprob: -17.009765625

Token 576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -19.75
    4. '<|end|>' → logprob: -21.25
    5. '0' → logprob: -21.375
    6. '۱' → logprob: -23.5
    7. '   ' → logprob: -23.625
    8. '`' → logprob: -24.0
    9. '2' → logprob: -24.375
    10. '100' → logprob: -24.8125

Token 577: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12150595337152481
    2. '
' → logprob: -2.2465059757232666
    3. '	return' → logprob: -6.2465057373046875
    4. '<|end|>' → logprob: -6.2465057373046875
    5. 'return' → logprob: -6.6215057373046875
    6. ' return' → logprob: -6.7465057373046875
    7. '       ' → logprob: -7.3715057373046875
    8. '  
' → logprob: -7.3715057373046875
    9. '    
' → logprob: -7.7465057373046875
    10. ')' → logprob: -8.621505737304688

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22343125939369202
    2. 'return' → logprob: -1.7234312295913696
    3. '
' → logprob: -4.09843111038208
    4. ' return' → logprob: -5.34843111038208
    5. '	return' → logprob: -8.473431587219238
    6. '```' → logprob: -9.848431587219238
    7. '       ' → logprob: -9.973431587219238
    8. ')' → logprob: -10.473431587219238
    9. ':return' → logprob: -10.973431587219238
    10. ')
' → logprob: -11.473431587219238

Token 579: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00048524985322728753
    2. ' return' → logprob: -7.750485420227051
    3. '   ' → logprob: -10.37548542022705
    4. 'pos' → logprob: -11.00048542022705
    5. 'if' → logprob: -12.37548542022705
    6. '```' → logprob: -14.12548542022705
    7. '	return' → logprob: -14.37548542022705
    8. 'eturn' → logprob: -14.87548542022705
    9. 'print' → logprob: -15.50048542022705
    10. '    ' → logprob: -16.250484466552734

Token 580: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.572941179503687e-05
    2. ' l' → logprob: -10.000045776367188
    3. 'idx' → logprob: -15.250045776367188
    4. '(l' → logprob: -17.750045776367188
    5. '	l' → logprob: -18.000045776367188
    6. '   ' → logprob: -18.250045776367188
    7. 'r' → logprob: -18.250045776367188
    8. ' ' → logprob: -18.625045776367188
    9. '[l' → logprob: -19.375045776367188
    10. '`' → logprob: -19.625045776367188

Token 581: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 583: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.030743030831217766
    2. 'main' → logprob: -3.53074312210083
    3. ' solve' → logprob: -7.15574312210083
    4. 'solve' → logprob: -8.655742645263672
    5. ' process' → logprob: -11.530742645263672
    6. ' solution' → logprob: -12.030742645263672
    7. 'process' → logprob: -12.405742645263672
    8. 'solution' → logprob: -13.280742645263672
    9. ' balanced' → logprob: -13.280742645263672
    10. '	main' → logprob: -13.405742645263672

Token 584: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.2987729102605954e-05
    2. '():
' → logprob: -10.250042915344238
    3. ' ():' → logprob: -12.125042915344238
    4. '()' → logprob: -13.250042915344238
    5. '():
' → logprob: -15.750042915344238
    6. '(' → logprob: -16.250043869018555
    7. '():

' → logprob: -17.250043869018555
    8. '()>' → logprob: -18.250043869018555
    9. '(":' → logprob: -18.500043869018555
    10. '().' → logprob: -18.500043869018555

Token 585: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.26094263792037964
    2. 'n' → logprob: -1.5109426975250244
    3. '   ' → logprob: -4.760942459106445
    4. '	n' → logprob: -7.885942459106445
    5. '```' → logprob: -10.885942459106445
    6. ',n' → logprob: -11.885942459106445
    7. 'import' → logprob: -11.885942459106445
    8. '_n' → logprob: -12.760942459106445
    9. ' import' → logprob: -13.760942459106445
    10. ' ' → logprob: -14.010942459106445

Token 586: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.35058799386024475
    2. ' n' → logprob: -1.2255879640579224
    3. '   ' → logprob: -6.225587844848633
    4. 'import' → logprob: -10.225587844848633
    5. 't' → logprob: -10.350587844848633
    6. ' t' → logprob: -10.600587844848633
    7. '	n' → logprob: -10.850587844848633
    8. 'N' → logprob: -10.975587844848633
    9. ' ' → logprob: -11.225587844848633
    10. ' import' → logprob: -12.225587844848633

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09194017201662064
    2. ' =' → logprob: -2.46694016456604
    3. ' ,' → logprob: -6.091940402984619
    4. '=' → logprob: -7.591940402984619
    5. ' ' → logprob: -9.091939926147461
    6. ',k' → logprob: -10.091939926147461
    7. ',n' → logprob: -10.466939926147461
    8. '=int' → logprob: -11.716939926147461
    9. '<|end|>' → logprob: -12.466939926147461
    10. ',s' → logprob: -12.591939926147461

Token 588: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2716950476169586
    2. ' q' → logprob: -1.5216950178146362
    3. 'm' → logprob: -5.021695137023926
    4. 'k' → logprob: -5.521695137023926
    5. ' =' → logprob: -5.646695137023926
    6. '=' → logprob: -6.021695137023926
    7. ' m' → logprob: -6.771695137023926
    8. ' k' → logprob: -7.021695137023926
    9. 't' → logprob: -8.146695137023926
    10. 'Q' → logprob: -8.771695137023926

Token 589: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193482637405396
    2. ' =' → logprob: -1.5019347667694092
    3. ',' → logprob: -12.376935005187988
    4. '=input' → logprob: -14.126935005187988
    5. ' ' → logprob: -15.876935005187988
    6. '=int' → logprob: -16.001934051513672
    7. ')' → logprob: -16.376934051513672
    8. ' =
' → logprob: -16.376934051513672
    9. ')=' → logprob: -16.376934051513672
    10. '=sys' → logprob: -16.626934051513672

Token 590: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.023246292024850845
    2. 'map' → logprob: -3.7732462882995605
    3. '	map' → logprob: -15.523246765136719
    4. ' list' → logprob: -16.02324676513672
    5. ' sys' → logprob: -16.14824676513672
    6. ' ' → logprob: -16.39824676513672
    7. 'm' → logprob: -16.39824676513672
    8. '[' → logprob: -16.52324676513672
    9. 'list' → logprob: -17.52324676513672
    10. '(map' → logprob: -17.77324676513672

Token 591: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004991455469280481
    2. '(' → logprob: -5.37999153137207
    3. '(lambda' → logprob: -9.00499153137207
    4. '(str' → logprob: -9.25499153137207
    5. '(input' → logprob: -9.25499153137207
    6. 'int' → logprob: -10.50499153137207
    7. '(list' → logprob: -12.12999153137207
    8. '=int' → logprob: -12.25499153137207
    9. '()' → logprob: -12.37999153137207
    10. '<int' → logprob: -12.62999153137207

Token 592: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7934322357177734
    2. '(),' → logprob: -1.5434322357177734
    3. '().' → logprob: -1.9184322357177734
    4. '()' → logprob: -3.0434322357177734
    5. '(sys' → logprob: -3.0434322357177734
    6. ',input' → logprob: -3.5434322357177734
    7. '=input' → logprob: -3.7934322357177734
    8. 'input' → logprob: -4.418432235717773
    9. '(' → logprob: -4.793432235717773
    10. '())' → logprob: -5.418432235717773

Token 593: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009976353496313095
    2. ' input' → logprob: -5.009976387023926
    3. 'sys' → logprob: -5.759976387023926
    4. ' sys' → logprob: -9.259976387023926
    5. 'str' → logprob: -11.759976387023926
    6. 'int' → logprob: -14.134976387023926
    7. '   ' → logprob: -15.134976387023926
    8. 'stdin' → logprob: -16.25997543334961
    9. 'map' → logprob: -16.63497543334961
    10. '0' → logprob: -16.75997543334961

Token 594: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007114782347343862
    2. '()' → logprob: -7.250711441040039
    3. '())' → logprob: -13.625711441040039
    4. '()
' → logprob: -16.00071144104004
    5. ' ().' → logprob: -16.62571144104004
    6. '()[' → logprob: -16.75071144104004
    7. '()).' → logprob: -16.87571144104004
    8. ')' → logprob: -17.12571144104004
    9. '().'' → logprob: -17.50071144104004
    10. '(' → logprob: -18.00071144104004

Token 595: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.048649366945028305
    2. 'strip' → logprob: -3.048649311065674
    3. 'rstrip' → logprob: -9.798649787902832
    4. 'read' → logprob: -12.173649787902832
    5. ' split' → logprob: -14.673649787902832
    6. '().' → logprob: -15.173649787902832
    7. '(split' → logprob: -15.298649787902832
    8. 'decode' → logprob: -15.923649787902832
    9. ' strip' → logprob: -16.173648834228516
    10. ')' → logprob: -16.173648834228516

Token 596: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4805460572242737
    2. ')' → logprob: -0.9805460572242737
    3. '()' → logprob: -5.230545997619629
    4. '())
' → logprob: -6.980545997619629
    5. ')
' → logprob: -8.980545997619629
    6. '()
' → logprob: -11.855545997619629
    7. '(' → logprob: -12.105545997619629
    8. '')' → logprob: -12.105545997619629
    9. '(),' → logprob: -12.230545997619629
    10. ')\' → logprob: -13.105545997619629

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03608313575387001
    2. 'a' → logprob: -3.911083221435547
    3. ' a' → logprob: -4.786083221435547
    4. 'v' → logprob: -5.161083221435547
    5. ' v' → logprob: -6.911083221435547
    6. '```' → logprob: -8.786083221435547
    7. '	a' → logprob: -9.911083221435547
    8. '    
' → logprob: -10.161083221435547
    9. '
' → logprob: -10.536083221435547
    10. 'n' → logprob: -11.036083221435547

Token 598: ' s' (ID: 265)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012125321663916111
    2. ' a' → logprob: -5.137125492095947
    3. 's' (adapté à ' s') → logprob: -5.262125492095947
    4. '   ' → logprob: -7.262125492095947
    5. ' s' → logprob: -8.262125015258789
    6. 'v' → logprob: -11.637125015258789
    7. ' ' → logprob: -12.262125015258789
    8. '```' → logprob: -12.262125015258789
    9. '    
' → logprob: -12.387125015258789
    10. '	a' → logprob: -13.137125015258789

Token 599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326448917388916
    2. ' =' → logprob: -1.3132644891738892
    3. ',' → logprob: -13.938264846801758
    4. '=input' → logprob: -14.313264846801758
    5. ' ' → logprob: -15.063264846801758
    6. ' ' → logprob: -15.563264846801758
    7. ')' → logprob: -16.063264846801758
    8. '   ' → logprob: -16.188264846801758
    9. '=
' → logprob: -16.438264846801758
    10. '[' → logprob: -16.938264846801758

Token 600: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11774607002735138
    2. 'list' → logprob: -2.617746114730835
    3. ' input' → logprob: -3.367746114730835
    4. ' list' → logprob: -5.617745876312256
    5. '[input' → logprob: -11.867746353149414
    6. '<input' → logprob: -14.367746353149414
    7. '   ' → logprob: -14.617746353149414
    8. '(input' → logprob: -14.742746353149414
    9. '[' → logprob: -14.867746353149414
    10. ' ' → logprob: -14.992746353149414

Token 601: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001434690784662962
    2. '(' → logprob: -9.125143051147461
    3. 'input' → logprob: -10.375143051147461
    4. '()' → logprob: -13.250143051147461
    5. '(str' → logprob: -14.375143051147461
    6. '(s' → logprob: -14.750143051147461
    7. '=input' → logprob: -15.500143051147461
    8. '(sys' → logprob: -16.12514305114746
    9. '(in' → logprob: -16.75014305114746
    10. ',input' → logprob: -17.62514305114746

Token 602: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006918314844369888
    2. '())' → logprob: -5.006918430328369
    3. '()' → logprob: -8.506917953491211
    4. '()[' → logprob: -15.506917953491211
    5. '()))' → logprob: -15.756917953491211
    6. '();)' → logprob: -15.881917953491211
    7. '()]' → logprob: -16.63191795349121
    8. ')' → logprob: -16.88191795349121
    9. ' ().' → logprob: -17.25691795349121
    10. '()
' → logprob: -17.25691795349121

Token 603: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.018155446276068687
    2. 'rstrip' → logprob: -4.018155574798584
    3. ' strip' → logprob: -12.893155097961426
    4. 'read' → logprob: -13.018155097961426
    5. 'split' → logprob: -14.768155097961426
    6. 'r' → logprob: -15.768155097961426
    7. '_strip' → logprob: -16.268156051635742
    8. '(strip' → logprob: -16.643156051635742
    9. '-strip' → logprob: -18.143156051635742
    10. '().' → logprob: -18.393156051635742

Token 604: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.050709858536720276
    2. '())
' → logprob: -3.0507099628448486
    3. '()' → logprob: -6.4257097244262695
    4. ')' → logprob: -7.9257097244262695
    5. '('\' → logprob: -9.92570972442627
    6. '()\' → logprob: -10.42570972442627
    7. '()
' → logprob: -10.67570972442627
    8. '())

' → logprob: -11.05070972442627
    9. '(' → logprob: -11.80070972442627
    10. ')
' → logprob: -12.17570972442627

Token 605: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05136813223361969
    2. ' v' → logprob: -3.426368236541748
    3. 'v' → logprob: -4.051368236541748
    4. '	v' → logprob: -9.42636775970459
    5. '```' → logprob: -9.55136775970459
    6. '
' → logprob: -11.80136775970459
    7. ' ' → logprob: -13.30136775970459
    8. ' n' → logprob: -13.42636775970459
    9. 'n' → logprob: -13.55136775970459
    10. '    
' → logprob: -13.80136775970459

Token 606: ' size' (ID: 2349)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3254401981830597
    2. ' v' → logprob: -1.5754401683807373
    3. '   ' → logprob: -2.8254401683807373
    4. ' size' → logprob: -4.825440406799316
    5. 'size' (adapté à ' size') → logprob: -5.825440406799316
    6. 'n' → logprob: -8.700440406799316
    7. ' n' → logprob: -8.825440406799316
    8. 'm' → logprob: -9.700440406799316
    9. '
' → logprob: -10.075440406799316
    10. ' m' → logprob: -10.325440406799316

Token 607: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007613725494593382
    2. '=' → logprob: -4.882613658905029
    3. 's' → logprob: -12.382614135742188
    4. ' ' → logprob: -13.382614135742188
    5. ',' → logprob: -14.007614135742188
    6. ' =[' → logprob: -15.257614135742188
    7. '<|end|>' → logprob: -15.882614135742188
    8. ' ' → logprob: -16.507614135742188
    9. '	' → logprob: -16.632614135742188
    10. ' =
' → logprob: -16.632614135742188

Token 608: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04933541640639305
    2. '4' → logprob: -3.549335479736328
    3. ' ' → logprob: -4.799335479736328
    4. 'n' → logprob: -5.049335479736328
    5. '2' → logprob: -5.424335479736328
    6. ' n' → logprob: -8.674335479736328
    7. '   ' → logprob: -9.799335479736328
    8. '(' → logprob: -9.799335479736328
    9. 'size' → logprob: -10.549335479736328
    10. 'len' → logprob: -11.549335479736328

Token 609: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5180886387825012
    2. '1' → logprob: -1.0180885791778564
    3. '(' → logprob: -3.3930885791778564
    4. '2' → logprob: -5.1430888175964355
    5. 'n' → logprob: -5.6430888175964355
    6. '(n' → logprob: -10.268088340759277
    7. ' ' → logprob: -11.268088340759277
    8. 'len' → logprob: -12.143088340759277
    9. '   ' → logprob: -12.143088340759277
    10. ' (' → logprob: -12.143088340759277

Token 610: '
' (ID: 198)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.32478824257850647
    2. '
' → logprob: -1.699788212776184
    3. ' <<' → logprob: -2.4497883319854736
    4. '<<(' → logprob: -4.9497880935668945
    5. '  
' → logprob: -7.8247880935668945
    6. ' <<=' → logprob: -7.9497880935668945
    7. ' ' → logprob: -8.699788093566895
    8. '   ' → logprob: -9.199788093566895
    9. ' 
' → logprob: -10.074788093566895
    10. '1' → logprob: -10.449788093566895

Token 611: '   ' (ID: 271)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.3824285566806793
    2. '
' → logprob: -1.757428526878357
    3. ' <<' → logprob: -2.1324286460876465
    4. '<<(' → logprob: -5.0074286460876465
    5. ' while' → logprob: -5.2574286460876465
    6. 'while' → logprob: -5.3824286460876465
    7. ' <<=' → logprob: -5.8824286460876465
    8. ' 
' → logprob: -6.5074286460876465
    9. '   ' → logprob: -6.6324286460876465
    10. '    
' → logprob: -7.0074286460876465

Token 612: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0032630343921482563
    2. '
' → logprob: -6.003262996673584
    3. '   ' → logprob: -7.753262996673584
    4. ' while' → logprob: -8.003263473510742
    5. '	while' → logprob: -10.753263473510742
    6. 'While' → logprob: -14.253263473510742
    7. '    
' → logprob: -15.378263473510742
    8. 'size' → logprob: -15.628263473510742
    9. '  ' → logprob: -15.878263473510742
    10. '2' → logprob: -15.878263473510742

Token 613: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.07889485359191895
    2. ' size' → logprob: -2.578894853591919
    3. '   ' → logprob: -12.32889461517334
    4. '(size' → logprob: -14.82889461517334
    5. ' ' → logprob: -16.328895568847656
    6. '	size' → logprob: -16.453895568847656
    7. '<size' → logprob: -16.953895568847656
    8. '[size' → logprob: -17.703895568847656
    9. '  ' → logprob: -18.953895568847656
    10. '
' → logprob: -18.953895568847656

Token 614: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.018224041908979416
    2. '<size' → logprob: -4.768224239349365
    3. ' <' → logprob: -5.018224239349365
    4. '<n' → logprob: -6.018224239349365
    5. '<=' → logprob: -7.893224239349365
    6. ' <<=' → logprob: -9.393223762512207
    7. '<len' → logprob: -11.143223762512207
    8. '<<' → logprob: -11.143223762512207
    9. ' <=' → logprob: -11.643223762512207
    10. '<num' → logprob: -11.893223762512207

Token 615: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012082771718269214
    2. ' n' → logprob: -9.625121116638184
    3. '2' → logprob: -9.875121116638184
    4. '   ' → logprob: -13.375121116638184
    5. '	n' → logprob: -14.375121116638184
    6. '
' → logprob: -14.875121116638184
    7. '=' → logprob: -15.750121116638184
    8. ' ' → logprob: -15.750121116638184
    9. '=n' → logprob: -16.750120162963867
    10. '(n' → logprob: -16.750120162963867

Token 616: ':
' (ID: 734)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.3748230040073395
    2. ':
' → logprob: -2.1248230934143066
    3. ':' → logprob: -2.6248230934143066
    4. '<<' → logprob: -2.9998230934143066
    5. '*' → logprob: -3.3748230934143066
    6. '<size' → logprob: -3.8748230934143066
    7. '   ' → logprob: -5.249823093414307
    8. 'size' → logprob: -5.999823093414307
    9. '<' → logprob: -6.374823093414307
    10. ' ' → logprob: -6.624823093414307

Token 617: '       ' (ID: 309)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.120183564722538
    2. '       ' → logprob: -2.3701834678649902
    3. ' size' → logprob: -4.37018346786499
    4. '   ' → logprob: -4.99518346786499
    5. '	size' → logprob: -7.99518346786499
    6. '```' → logprob: -12.120183944702148
    7. '<size' → logprob: -12.495183944702148
    8. '    ' → logprob: -13.370183944702148
    9. ':size' → logprob: -13.745183944702148
    10. ',size' → logprob: -13.745183944702148

Token 618: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' (adapté à ' size') → logprob: -0.0004825081559829414
    2. ' size' → logprob: -7.750482559204102
    3. '       ' → logprob: -10.125482559204102
    4. '   ' → logprob: -11.625482559204102
    5. '	size' → logprob: -13.125482559204102
    6. '
' → logprob: -14.625482559204102
    7. '```' → logprob: -15.875482559204102
    8. '<size' → logprob: -16.3754825592041
    9. '_size' → logprob: -16.5004825592041
    10. 'sizei' → logprob: -17.7504825592041

Token 619: ' <<=' (ID: 134025)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.6496000289916992
    2. '<<' → logprob: -0.8996000289916992
    3. ' <<=' → logprob: -2.649600028991699
    4. '=' → logprob: -8.3996000289917
    5. '<' → logprob: -9.7746000289917
    6. ' *=' → logprob: -10.6496000289917
    7. '   ' → logprob: -10.7746000289917
    8. '	' → logprob: -13.2746000289917
    9. '```' → logprob: -13.6496000289917
    10. '\' → logprob: -13.7746000289917

Token 620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -17.5
    4. '
' → logprob: -18.875
    5. '```' → logprob: -19.625
    6. '2' → logprob: -20.0
    7. '0' → logprob: -20.375
    8. '6' → logprob: -21.3125
    9. 'size' → logprob: -21.5625
    10. '`' → logprob: -21.5625

Token 621: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2726363241672516
    2. '
' → logprob: -1.5226362943649292
    3. 'v' → logprob: -4.897636413574219
    4. 'size' → logprob: -4.897636413574219
    5. 's' → logprob: -5.397636413574219
    6. '    
' → logprob: -8.022636413574219
    7. ' size' → logprob: -8.272636413574219
    8. ' s' → logprob: -9.147636413574219
    9. 'n' → logprob: -9.647636413574219
    10. '       ' → logprob: -10.022636413574219

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01159649807959795
    2. 'v' → logprob: -4.7615966796875
    3. '
' → logprob: -6.6365966796875
    4. ' v' → logprob: -6.8865966796875
    5. 's' → logprob: -8.0115966796875
    6. ' s' → logprob: -8.8865966796875
    7. 'size' → logprob: -9.2615966796875
    8. ' size' → logprob: -10.0115966796875
    9. '    
' → logprob: -11.3865966796875
    10. '	v' → logprob: -11.7615966796875

Token 623: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.009295931085944176
    2. ' v' → logprob: -5.25929594039917
    3. '   ' → logprob: -5.50929594039917
    4. 'size' → logprob: -13.134295463562012
    5. '	v' → logprob: -13.509295463562012
    6. ' ' → logprob: -15.009295463562012
    7. 'tree' → logprob: -15.009295463562012
    8. '
' → logprob: -15.259295463562012
    9. '  ' → logprob: -15.884295463562012
    10. ' size' → logprob: -15.884295463562012

Token 624: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06213461607694626
    2. '=' → logprob: -2.8121345043182373
    3. '=[' → logprob: -8.812134742736816
    4. ' =[' → logprob: -11.062134742736816
    5. '=v' → logprob: -13.937134742736816
    6. 'v' → logprob: -14.437134742736816
    7. '[' → logprob: -15.312134742736816
    8. '=[]' → logprob: -15.312134742736816
    9. ' ' → logprob: -16.1871337890625
    10. ',' → logprob: -16.4371337890625

Token 625: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0040793512016534805
    2. ' [' → logprob: -5.504079341888428
    3. '[N' → logprob: -14.629079818725586
    4. '[node' → logprob: -14.879079818725586
    5. '[n' → logprob: -15.754079818725586
    6. '[v' → logprob: -17.004079818725586
    7. '[int' → logprob: -18.004079818725586
    8. '{' → logprob: -18.254079818725586
    9. '{}' → logprob: -18.379079818725586
    10. '[new' → logprob: -18.504079818725586

Token 626: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.10020861029624939
    2. 'None' → logprob: -2.3502085208892822
    3. ' Node' → logprob: -13.475208282470703
    4. ' None' → logprob: -14.725208282470703
    5. '	Node' → logprob: -15.850208282470703
    6. '0' → logprob: -18.350208282470703
    7. '<Node' → logprob: -18.350208282470703
    8. 'No' → logprob: -18.600208282470703
    9. 'Nodo' → logprob: -19.225208282470703
    10. '(Node' → logprob: -19.475208282470703

Token 627: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005699523026123643
    2. '()]' → logprob: -8.000570297241211
    3. '(' → logprob: -8.375570297241211
    4. ']' → logprob: -13.125570297241211
    5. '0' → logprob: -14.000570297241211
    6. 'for' → logprob: -14.875570297241211
    7. '()*' → logprob: -15.375570297241211
    8. '()
' → logprob: -15.625570297241211
    9. '(size' → logprob: -16.37557029724121
    10. ']()' → logprob: -16.50057029724121

Token 628: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20345057547092438
    2. 'for' → logprob: -1.7034505605697632
    3. '()' → logprob: -6.453450679779053
    4. '(size' → logprob: -8.328450202941895
    5. ']' → logprob: -8.578450202941895
    6. '(' → logprob: -11.828450202941895
    7. '   ' → logprob: -11.828450202941895
    8. '	for' → logprob: -11.953450202941895
    9. ']*(' → logprob: -12.953450202941895
    10. ' ' → logprob: -13.578450202941895

Token 629: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005862758844159544
    2. ' _' → logprob: -7.50058650970459
    3. '_range' → logprob: -11.00058650970459
    4. '_v' → logprob: -11.87558650970459
    5. '_i' → logprob: -12.87558650970459
    6. '_size' → logprob: -13.25058650970459
    7. '_in' → logprob: -13.50058650970459
    8. '_x' → logprob: -13.75058650970459
    9. ' ' → logprob: -14.00058650970459
    10. ' in' → logprob: -14.62558650970459

Token 630: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.36268261075019836
    2. 'in' → logprob: -1.612682580947876
    3. ' in' → logprob: -2.362682580947876
    4. ' range' → logprob: -4.612682819366455
    5. '_' → logprob: -7.862682819366455
    6. ' ' → logprob: -9.362682342529297
    7. 'i' → logprob: -9.487682342529297
    8. 'x' → logprob: -9.862682342529297
    9. '0' → logprob: -9.862682342529297
    10. '(range' → logprob: -10.112682342529297

Token 631: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012368128227535635
    2. ' range' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.750123977661133
    4. '(range' → logprob: -16.500123977661133
    5. '	range' → logprob: -17.125123977661133
    6. ' ' → logprob: -18.000123977661133
    7. '  ' → logprob: -19.250123977661133
    8. '
' → logprob: -20.125123977661133
    9. 'ran' → logprob: -20.625123977661133
    10. 'r' → logprob: -20.625123977661133

Token 632: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.313431978225708
    2. '(size' → logprob: -1.313431978225708
    3. '((' → logprob: -8.813431739807129
    4. ' (' → logprob: -11.563431739807129
    5. 'size' → logprob: -11.813431739807129
    6. '2' → logprob: -12.688431739807129
    7. '<size' → logprob: -14.813431739807129
    8. '(sz' → logprob: -15.563431739807129
    9. '   ' → logprob: -15.938431739807129
    10. '0' → logprob: -15.938431739807129

Token 633: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21783645451068878
    2. 'size' → logprob: -1.9678364992141724
    3. '(' → logprob: -2.967836380004883
    4. '(size' → logprob: -5.467836380004883
    5. '4' → logprob: -8.092836380004883
    6. ' size' → logprob: -11.092836380004883
    7. ' ' → logprob: -11.717836380004883
    8. '0' → logprob: -12.217836380004883
    9. ' (' → logprob: -12.592836380004883
    10. '[size' → logprob: -12.717836380004883

Token 634: '*' (ID: 9)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.014720446430146694
    2. '*' → logprob: -4.764720439910889
    3. ' *' → logprob: -5.264720439910889
    4. 'n' → logprob: -7.014720439910889
    5. '*(' → logprob: -12.014720916748047
    6. '*v' → logprob: -13.264720916748047
    7. '   ' → logprob: -13.389720916748047
    8. '*s' → logprob: -13.389720916748047
    9. '*N' → logprob: -13.764720916748047
    10. '000' → logprob: -13.764720916748047

Token 635: 'size' (ID: 4461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08903031796216965
    2. 'size' → logprob: -2.4640302658081055
    3. ' n' → logprob: -10.464030265808105
    4. '(n' → logprob: -10.589030265808105
    5. ' size' → logprob: -10.839030265808105
    6. '(size' → logprob: -11.714030265808105
    7. '   ' → logprob: -12.839030265808105
    8. '(' → logprob: -13.589030265808105
    9. '
' → logprob: -13.589030265808105
    10. 'v' → logprob: -13.714030265808105

Token 636: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.246537173457909e-06
    2. ' )' → logprob: -13.250003814697266
    3. '+' → logprob: -14.125003814697266
    4. ')' → logprob: -14.250003814697266
    5. ')]
' → logprob: -14.375003814697266
    6. ']' → logprob: -15.625003814697266
    7. ')]

' → logprob: -16.125003814697266
    8. ')])' → logprob: -16.750003814697266
    9. '')]' → logprob: -16.875003814697266
    10. ')]
' → logprob: -17.500003814697266

Token 637: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23276381194591522
    2. 'build' → logprob: -1.9827637672424316
    3. ' build' → logprob: -2.7327637672424316
    4. 'v' → logprob: -5.982763767242432
    5. ' v' → logprob: -6.357763767242432
    6. ' for' → logprob: -8.35776424407959
    7. 'for' → logprob: -9.48276424407959
    8. 'root' → logprob: -9.60776424407959
    9. ' root' → logprob: -9.60776424407959
    10. '	build' → logprob: -9.60776424407959

Token 638: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' (adapté à ' build') → logprob: -0.010581295005977154
    2. 'root' → logprob: -5.0105814933776855
    3. ' build' → logprob: -5.6355814933776855
    4. '   ' → logprob: -9.135581016540527
    5. 'v' → logprob: -9.760581016540527
    6. ' root' → logprob: -10.135581016540527
    7. '_' → logprob: -10.885581016540527
    8. 'tree' → logprob: -10.885581016540527
    9. 'b' → logprob: -11.260581016540527
    10. 'for' → logprob: -11.510581016540527

Token 639: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.5776860184123507e-06
    2. 's' → logprob: -13.62500286102295
    3. ' (' → logprob: -14.00000286102295
    4. '(' → logprob: -14.75000286102295
    5. '(a' → logprob: -18.875001907348633
    6. '(n' → logprob: -19.625001907348633
    7. '(
' → logprob: -19.625001907348633
    8. '((' → logprob: -20.000001907348633
    9. '```' → logprob: -20.000001907348633
    10. '(v' → logprob: -21.625001907348633

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017395552713423967
    2. ',v' → logprob: -6.376739501953125
    3. ' ,' → logprob: -10.376739501953125
    4. 'v' → logprob: -12.501739501953125
    5. '(v' → logprob: -13.376739501953125
    6. ',
' → logprob: -14.876739501953125
    7. ',s' → logprob: -15.626739501953125
    8. ' v' → logprob: -16.126739501953125
    9. '(' → logprob: -16.501739501953125
    10. '   ' → logprob: -17.126739501953125

Token 641: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002475777640938759
    2. ' v' → logprob: -6.002475738525391
    3. '	v' → logprob: -16.25247573852539
    4. '4' → logprob: -17.12747573852539
    5. '_v' → logprob: -18.62747573852539
    6. '   ' → logprob: -19.62747573852539
    7. '1' → logprob: -19.62747573852539
    8. ',v' → logprob: -20.00247573852539
    9. ' ' → logprob: -20.25247573852539
    10. '2' → logprob: -20.62747573852539

Token 642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.703443770878948e-06
    2. ' ,' → logprob: -12.250007629394531
    3. '1' → logprob: -12.875007629394531
    4. 'v' → logprob: -16.00000762939453
    5. '[' → logprob: -16.75000762939453
    6. ',
' → logprob: -16.87500762939453
    7. '0' → logprob: -17.50000762939453
    8. '   ' → logprob: -17.75000762939453
    9. '2' → logprob: -17.87500762939453
    10. '(' → logprob: -17.87500762939453

Token 643: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -22.625
    5. 'size' → logprob: -23.0
    6. '１' → logprob: -24.0
    7. 'def' → logprob: -24.125
    8. '
' → logprob: -24.125
    9. '۱' → logprob: -25.125
    10. ')' → logprob: -25.25

Token 644: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.25
    3. 'size' → logprob: -19.375
    4. '   ' → logprob: -19.625
    5. '```' → logprob: -22.125
    6. '１' → logprob: -22.25
    7. '۱' → logprob: -22.375
    8. 's' → logprob: -23.4375
    9. '১' → logprob: -23.5
    10. 'index' → logprob: -23.5

Token 645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.598092684522271e-05
    2. ',n' → logprob: -10.125056266784668
    3. ' ,' → logprob: -11.125056266784668
    4. 'n' → logprob: -14.000056266784668
    5. '```' → logprob: -15.875056266784668
    6. '   ' → logprob: -16.37505531311035
    7. ',
' → logprob: -16.75005531311035
    8. ',size' → logprob: -16.87505531311035
    9. ' n' → logprob: -18.12505531311035
    10. '‌,' → logprob: -19.12505531311035

Token 646: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.992775888647884e-05
    2. ' n' → logprob: -9.750069618225098
    3. 'size' → logprob: -11.375069618225098
    4. ' size' → logprob: -16.125070571899414
    5. '	n' → logprob: -17.500070571899414
    6. '   ' → logprob: -20.000070571899414
    7. '_n' → logprob: -20.125070571899414
    8. 'len' → logprob: -21.375070571899414
    9. ')n' → logprob: -21.875070571899414
    10. 'length' → logprob: -22.875070571899414

Token 647: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -16.25
    3. ' )' → logprob: -16.625
    4. '))' → logprob: -19.75
    5. '   ' → logprob: -20.0
    6. ')n' → logprob: -20.0
    7. '),' → logprob: -20.125
    8. ')

' → logprob: -20.25
    9. ');' → logprob: -20.375
    10. ')
' → logprob: -20.75

Token 648: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32563912868499756
    2. '   ' → logprob: -1.8256391286849976
    3. ' for' → logprob: -2.200639247894287
    4. '```' → logprob: -5.325639247894287
    5. '<|end|>' → logprob: -7.075639247894287
    6. '	for' → logprob: -8.075638771057129
    7. 'while' → logprob: -10.950638771057129
    8. ' ' → logprob: -11.200638771057129
    9. '  ' → logprob: -11.325638771057129
    10. 'i' → logprob: -11.575638771057129

Token 649: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001462107611587271
    2. ' for' → logprob: -9.00014591217041
    3. '   ' → logprob: -10.75014591217041
    4. '```' → logprob: -13.75014591217041
    5. '	for' → logprob: -15.12514591217041
    6. 'import' → logprob: -17.750146865844727
    7. 'print' → logprob: -18.625146865844727
    8. 'from' → logprob: -19.500146865844727
    9. '
' → logprob: -20.125146865844727
    10. '``' → logprob: -20.250146865844727

Token 650: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0380416102707386
    2. ' _' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.038042068481445
    4. '_i' → logprob: -17.163042068481445
    5. ' in' → logprob: -17.413042068481445
    6. '__' → logprob: -17.413042068481445
    7. '_q' → logprob: -17.788042068481445
    8. '_=' → logprob: -17.788042068481445
    9. '_in' → logprob: -17.913042068481445
    10. '_

' → logprob: -18.413042068481445

Token 651: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3136434257030487
    2. ' in' → logprob: -1.313643455505371
    3. '_' → logprob: -8.313643455505371
    4. 'range' → logprob: -9.313643455505371
    5. ' ' → logprob: -10.688643455505371
    6. ' _' → logprob: -11.688643455505371
    7. ',' → logprob: -12.438643455505371
    8. ' range' → logprob: -12.438643455505371
    9. '_in' → logprob: -13.063643455505371
    10. 'n' → logprob: -13.313643455505371

Token 652: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -18.87507438659668
    4. '	range' → logprob: -19.62507438659668
    5. 'r' → logprob: -20.12507438659668
    6. 'ange' → logprob: -20.37507438659668
    7. 'rang' → logprob: -21.62507438659668
    8. '   ' → logprob: -21.75007438659668
    9. 'ra' → logprob: -21.75007438659668
    10. 'input' → logprob: -22.00007438659668

Token 653: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.05182811990380287
    2. 'q' → logprob: -3.301828145980835
    3. ' q' → logprob: -4.301827907562256
    4. ' (' → logprob: -9.176828384399414
    5. '(' → logprob: -10.551828384399414
    6. '	q' → logprob: -11.176828384399414
    7. ',' → logprob: -13.301828384399414
    8. ',q' → logprob: -13.301828384399414
    9. '_q' → logprob: -13.801828384399414
    10. '   ' → logprob: -15.926828384399414

Token 654: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01191730983555317
    2. ':' → logprob: -5.1369171142578125
    3. '):
' → logprob: -5.2619171142578125
    4. ',' → logprob: -7.8869171142578125
    5. ')' → logprob: -8.761917114257812
    6. '():' → logprob: -8.761917114257812
    7. ' ):' → logprob: -10.511917114257812
    8. '=' → logprob: -11.386917114257812
    9. '   ' → logprob: -11.511917114257812
    10. '():
' → logprob: -11.511917114257812

Token 655: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013790446100756526
    2. '	' → logprob: -7.876379013061523
    3. '```' → logprob: -7.876379013061523
    4. '   ' → logprob: -8.251379013061523
    5. '	   ' → logprob: -8.751379013061523
    6. 'pos' → logprob: -9.501379013061523
    7. ',' → logprob: -10.626379013061523
    8. ' pos' → logprob: -10.876379013061523
    9. '
' → logprob: -11.501379013061523
    10. '	pos' → logprob: -11.876379013061523

Token 656: ' p' (ID: 275)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.17531046271324158
    2. 'p' (adapté à ' p') → logprob: -2.4253103733062744
    3. '   ' → logprob: -3.3003103733062744
    4. ' pos' → logprob: -4.0503106117248535
    5. 'x' → logprob: -4.3003106117248535
    6. ' p' → logprob: -6.0503106117248535
    7. '       ' → logprob: -6.8003106117248535
    8. 'k' → logprob: -7.4253106117248535
    9. ' x' → logprob: -8.550310134887695
    10. 'idx' → logprob: -9.050310134887695

Token 657: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3531820476055145
    2. '=' → logprob: -1.228182077407837
    3. '=int' → logprob: -5.478181838989258
    4. '=os' → logprob: -8.228181838989258
    5. 'os' → logprob: -8.978181838989258
    6. '<|end|>' → logprob: -10.603181838989258
    7. ',' → logprob: -10.853181838989258
    8. ')' → logprob: -11.103181838989258
    9. '=p' → logprob: -11.103181838989258
    10. 'r' → logprob: -11.603181838989258

Token 658: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.615255839889869e-05
    2. ' int' → logprob: -9.250096321105957
    3. '(int' → logprob: -19.25009536743164
    4. '<int' → logprob: -20.75009536743164
    5. '   ' → logprob: -21.25009536743164
    6. '	int' → logprob: -21.25009536743164
    7. '[int' → logprob: -21.25009536743164
    8. 'ints' → logprob: -21.87509536743164
    9. '=int' → logprob: -21.87509536743164
    10. '
' → logprob: -22.87509536743164

Token 659: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0006314247148111463
    2. '(' → logprob: -7.625631332397461
    3. '()' → logprob: -9.125631332397461
    4. 'input' → logprob: -10.375631332397461
    5. '=input' → logprob: -13.250631332397461
    6. '(
' → logprob: -14.125631332397461
    7. '(in' → logprob: -15.375631332397461
    8. ' input' → logprob: -15.875631332397461
    9. ' (' → logprob: -16.75063133239746
    10. ',input' → logprob: -16.75063133239746

Token 660: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17579352855682373
    2. '()' → logprob: -1.9257935285568237
    3. '().' → logprob: -4.300793647766113
    4. '())
' → logprob: -6.550793647766113
    5. '()
' → logprob: -8.800793647766113
    6. ')' → logprob: -9.175793647766113
    7. '()[' → logprob: -9.300793647766113
    8. '(' → logprob: -10.050793647766113
    9. '()-' → logprob: -10.175793647766113
    10. ' ())' → logprob: -11.425793647766113

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007039420772343874
    2. '
' → logprob: -5.757039546966553
    3. '	' → logprob: -6.382039546966553
    4. '<|end|>' → logprob: -6.507039546966553
    5. '        
' → logprob: -8.382039070129395
    6. '   ' → logprob: -9.007039070129395
    7. '		
' → logprob: -9.757039070129395
    8. '  
' → logprob: -9.882039070129395
    9. '<|end|>' → logprob: -9.882039070129395
    10. ',' → logprob: -10.882039070129395

Token 662: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.0008958588587120175
    2. '       ' → logprob: -7.625895977020264
    3. ' update' → logprob: -8.000895500183105
    4. 'p' → logprob: -10.125895500183105
    5. 'pos' → logprob: -11.750895500183105
    6. '   ' → logprob: -11.750895500183105
    7. 'print' → logprob: -12.000895500183105
    8. 'result' → logprob: -13.000895500183105
    9. 'res' → logprob: -13.250895500183105
    10. 'if' → logprob: -13.250895500183105

Token 663: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.967624019831419e-05
    2. '(' → logprob: -9.875060081481934
    3. ' (' → logprob: -12.375060081481934
    4. '(
' → logprob: -12.875060081481934
    5. '(pos' → logprob: -14.750060081481934
    6. '(v' → logprob: -15.500060081481934
    7. '(abs' → logprob: -15.625060081481934
    8. '((' → logprob: -15.875060081481934
    9. '(position' → logprob: -16.500059127807617
    10. '(py' → logprob: -16.875059127807617

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025044360663741827
    2. ',v' → logprob: -6.002504348754883
    3. ' ,' → logprob: -10.502504348754883
    4. 'v' → logprob: -14.127504348754883
    5. '(v' → logprob: -15.002504348754883
    6. ')' → logprob: -16.502504348754883
    7. ',
' → logprob: -17.127504348754883
    8. '   ' → logprob: -17.127504348754883
    9. '```' → logprob: -17.127504348754883
    10. '(' → logprob: -17.377504348754883

Token 665: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005233882926404476
    2. ' v' → logprob: -5.2552337646484375
    3. '	v' → logprob: -16.630233764648438
    4. ')v' → logprob: -18.630233764648438
    5. '_v' → logprob: -19.630233764648438
    6. ',v' → logprob: -20.005233764648438
    7. '[v' → logprob: -21.130233764648438
    8. '$v' → logprob: -21.380233764648438
    9. '*v' → logprob: -21.505233764648438
    10. '   ' → logprob: -21.505233764648438

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001319063303526491
    2. ' ,' → logprob: -9.125131607055664
    3. '1' → logprob: -10.750131607055664
    4. '[' → logprob: -14.250131607055664
    5. '   ' → logprob: -15.500131607055664
    6. ' ' → logprob: -15.625131607055664
    7. ')' → logprob: -16.250131607055664
    8. 'p' → logprob: -16.625131607055664
    9. '2' → logprob: -16.750131607055664
    10. '0' → logprob: -16.875131607055664

Token 667: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.5000057220459
    4. '<|end|>' → logprob: -18.6250057220459
    5. '```' → logprob: -20.1250057220459
    6. ')' → logprob: -20.6250057220459
    7. '  ' → logprob: -20.7500057220459
    8. '[' → logprob: -20.8750057220459
    9. '۱' → logprob: -21.0625057220459
    10. '１' → logprob: -21.1250057220459

Token 668: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '<|end|>' → logprob: -20.375
    4. '   ' → logprob: -21.0
    5. '```' → logprob: -21.5
    6. '۱' → logprob: -22.375
    7. '(' → logprob: -22.5
    8. '[' → logprob: -22.5
    9. '  ' → logprob: -23.0
    10. '১' → logprob: -23.0

Token 669: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009500489104539156
    2. ',n' → logprob: -7.000949859619141
    3. ' ,' → logprob: -10.37594985961914
    4. 'n' → logprob: -11.87594985961914
    5. ' n' → logprob: -15.87594985961914
    6. ',size' → logprob: -15.87594985961914
    7. '   ' → logprob: -16.12594985961914
    8. ',
' → logprob: -16.62594985961914
    9. '```' → logprob: -17.87594985961914
    10. '<|end|>' → logprob: -18.00094985961914

Token 670: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.13388703338569e-06
    2. ' n' → logprob: -11.625009536743164
    3. '	n' → logprob: -16.500009536743164
    4. '_n' → logprob: -17.875009536743164
    5. ')n' → logprob: -17.875009536743164
    6. '   ' → logprob: -18.625009536743164
    7. 'size' → logprob: -18.875009536743164
    8. '<|end|>' → logprob: -19.125009536743164
    9. ',n' → logprob: -20.250009536743164
    10. 'len' → logprob: -20.625009536743164

Token 671: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001249925117008388
    2. ')
' → logprob: -9.00012493133545
    3. ' )' → logprob: -14.37512493133545
    4. '   ' → logprob: -15.12512493133545
    5. '       ' → logprob: -15.75012493133545
    6. '[' → logprob: -15.75012493133545
    7. '<|end|>' → logprob: -15.75012493133545
    8. '))' → logprob: -16.375125885009766
    9. ',' → logprob: -16.375125885009766
    10. ')
' → logprob: -17.125125885009766

Token 672: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01219632662832737
    2. 'print' → logprob: -4.8871965408325195
    3. 'result' → logprob: -5.6371965408325195
    4. '```' → logprob: -7.8871965408325195
    5. '   ' → logprob: -8.51219654083252
    6. '<|end|>' → logprob: -9.38719654083252
    7. ' result' → logprob: -9.63719654083252
    8. ' print' → logprob: -9.88719654083252
    9. 'res' → logprob: -9.88719654083252
    10. 'v' → logprob: -10.76219654083252

Token 673: ' pos' (ID: 1253)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2007883671903983e-05
    2. 'res' → logprob: -10.875021934509277
    3. ' print' → logprob: -13.625021934509277
    4. 'pr' → logprob: -14.250021934509277
    5. 'ans' → logprob: -14.750021934509277
    6. '   ' → logprob: -15.250021934509277
    7. 'pos' (adapté à ' pos') → logprob: -15.625021934509277
    8. '
' → logprob: -16.000022888183594
    9. 'r' → logprob: -16.750022888183594
    10. '    
' → logprob: -17.250022888183594

Token 674: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08966029435396194
    2. '=' → logprob: -2.464660406112671
    3. ' ' → logprob: -7.839660167694092
    4. ')' → logprob: -9.21466064453125
    5. '<|end|>' → logprob: -9.58966064453125
    6. 's' → logprob: -10.21466064453125
    7. '(' → logprob: -10.33966064453125
    8. '  ' → logprob: -11.08966064453125
    9. '=p' → logprob: -11.08966064453125
    10. '(p' → logprob: -11.46466064453125

Token 675: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.38687199354171753
    2. ' query' → logprob: -1.1368720531463623
    3. '(query' → logprob: -14.136872291564941
    4. '=query' → logprob: -15.386872291564941
    5. '	query' → logprob: -16.511871337890625
    6. '_query' → logprob: -19.261871337890625
    7. '.query' → logprob: -19.386871337890625
    8. '$query' → logprob: -19.761871337890625
    9. 'quer' → logprob: -19.886871337890625
    10. '   ' → logprob: -20.386871337890625

Token 676: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.1888679839321412e-05
    2. ' (' → logprob: -11.000021934509277
    3. '(' → logprob: -12.250021934509277
    4. 'v' → logprob: -15.625021934509277
    5. '```' → logprob: -16.37502098083496
    6. ',v' → logprob: -17.62502098083496
    7. '?v' → logprob: -18.37502098083496
    8. '(
' → logprob: -18.50002098083496
    9. ',' → logprob: -18.87502098083496
    10. '	v' → logprob: -19.00002098083496

Token 677: ',' (ID: 11)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.1325417160987854
    2. ',' → logprob: -2.1325416564941406
    3. ',v' → logprob: -5.382541656494141
    4. '(' → logprob: -7.382541656494141
    5. ')' → logprob: -8.63254165649414
    6. ' ,' → logprob: -8.88254165649414
    7. ' (' → logprob: -9.75754165649414
    8. 'v' → logprob: -13.63254165649414
    9. ' v' → logprob: -14.38254165649414
    10. ',
' → logprob: -14.88254165649414

Token 678: ' ' (ID: 220)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008614926598966122
    2. ' v' → logprob: -4.758615016937256
    3. '	v' → logprob: -15.258614540100098
    4. ')v' → logprob: -15.883614540100098
    5. ')' → logprob: -17.633615493774414
    6. '<|end|>' → logprob: -18.008615493774414
    7. '_v' → logprob: -18.383615493774414
    8. ',v' → logprob: -18.383615493774414
    9. '(v' → logprob: -19.383615493774414
    10. '?v' → logprob: -19.383615493774414

Token 679: '1' (ID: 16)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0021895181853324175
    2. '1' → logprob: -6.127189636230469
    3. ' v' → logprob: -12.377189636230469
    4. '	v' → logprob: -16.25218963623047
    5. '0' → logprob: -16.62718963623047
    6. ' ' → logprob: -17.50218963623047
    7. ')' → logprob: -17.62718963623047
    8. '_v' → logprob: -18.37718963623047
    9. '```' → logprob: -18.37718963623047
    10. ')v' → logprob: -18.75218963623047

Token 680: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004195906512904912
    2. ' ,' → logprob: -8.000419616699219
    3. ',n' → logprob: -9.875419616699219
    4. ',v' → logprob: -10.375419616699219
    5. '```' → logprob: -14.625419616699219
    6. 'v' → logprob: -15.500419616699219
    7. '   ' → logprob: -15.625419616699219
    8. ')' → logprob: -16.37541961669922
    9. 'n' → logprob: -16.62541961669922
    10. '	' → logprob: -16.62541961669922

Token 681: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.027817590162158012
    2. '1' → logprob: -3.777817487716675
    3. '4' → logprob: -5.527817726135254
    4. ' n' → logprob: -7.527817726135254
    5. ' ' → logprob: -11.277817726135254
    6. 'len' → logprob: -11.277817726135254
    7. 'v' → logprob: -11.777817726135254
    8. '0' → logprob: -12.027817726135254
    9. '2' → logprob: -13.277817726135254
    10. '```' → logprob: -13.527817726135254

Token 682: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013488641707226634
    2. ',v' → logprob: -9.500134468078613
    3. ')' → logprob: -10.000134468078613
    4. ' ,' → logprob: -11.375134468078613
    5. ',n' → logprob: -13.375134468078613
    6. 'v' → logprob: -14.500134468078613
    7. '```' → logprob: -15.625134468078613
    8. '   ' → logprob: -15.750134468078613
    9. ',p' → logprob: -15.875134468078613
    10. ',
' → logprob: -16.37513542175293

Token 683: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.547789674485102e-05
    2. ' n' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.875036239624023
    4. '	n' → logprob: -18.875036239624023
    5. ')n' → logprob: -19.000036239624023
    6. 'size' → logprob: -19.250036239624023
    7. 'len' → logprob: -21.375036239624023
    8. ')' → logprob: -22.250036239624023
    9. '    ' → logprob: -23.000036239624023
    10. '
' → logprob: -23.000036239624023

Token 684: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0486019104719162
    2. ')' → logprob: -3.0486018657684326
    3. ')
' → logprob: -11.173602104187012
    4. '   ' → logprob: -14.798602104187012
    5. ' )
' → logprob: -16.798601150512695
    6. ')`
' → logprob: -16.798601150512695
    7. ')

' → logprob: -17.173601150512695
    8. '))
' → logprob: -19.673601150512695
    9. ' ' → logprob: -19.923601150512695
    10. ' )' → logprob: -20.048601150512695

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005547255277633667
    2. 'print' → logprob: -5.255547046661377
    3. '```' → logprob: -8.880547523498535
    4. '
' → logprob: -9.505547523498535
    5. '<|end|>' → logprob: -10.005547523498535
    6. ' print' → logprob: -10.630547523498535
    7. '        
' → logprob: -11.505547523498535
    8. '   ' → logprob: -11.755547523498535
    9. '	' → logprob: -12.380547523498535
    10. '           ' → logprob: -13.505547523498535

Token 686: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.786196975852363e-05
    2. '       ' → logprob: -10.500038146972656
    3. ' print' → logprob: -11.750038146972656
    4. 'if' → logprob: -13.375038146972656
    5. '```' → logprob: -14.000038146972656
    6. '   ' → logprob: -17.625038146972656
    7. '	print' → logprob: -18.500038146972656
    8. '``' → logprob: -18.500038146972656
    9. 'pr' → logprob: -18.875038146972656
    10. 'printf' → logprob: -18.875038146972656

Token 687: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -1.3306015716807451e-05
    2. 'pos' → logprob: -11.25001335144043
    3. '(' → logprob: -15.50001335144043
    4. '('' → logprob: -17.62501335144043
    5. '((' → logprob: -18.25001335144043
    6. '()' → logprob: -18.62501335144043
    7. ' pos' → logprob: -19.00001335144043
    8. ' (' → logprob: -19.12501335144043
    9. '(p' → logprob: -19.62501335144043
    10. '(f' → logprob: -19.75001335144043

Token 688: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')`' → logprob: -14.375001907348633
    3. '`)' → logprob: -14.750001907348633
    4. ')
' → logprob: -15.375001907348633
    5. ' )' → logprob: -15.625001907348633
    6. '))' → logprob: -16.125001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '')' → logprob: -17.625001907348633
    9. '())' → logprob: -17.875001907348633
    10. ')")' → logprob: -18.125001907348633

Token 689: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.40998875699006e-05
    2. '
' → logprob: -10.37507438659668
    3. ' if' → logprob: -11.25007438659668
    4. '<|end|>' → logprob: -11.37507438659668
    5. '```' → logprob: -11.62507438659668
    6. 'main' → logprob: -12.12507438659668
    7. '#' → logprob: -13.62507438659668
    8. '\' → logprob: -14.25007438659668
    9. 'for' → logprob: -14.50007438659668
    10. '\n' → logprob: -14.87507438659668

Token 690: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02816164121031761
    2. '<|end|>' → logprob: -3.6531615257263184
    3. '
' → logprob: -7.028161525726318
    4. '```' → logprob: -8.153162002563477
    5. ' if' → logprob: -8.528162002563477
    6. 'main' → logprob: -8.528162002563477
    7. 'return' → logprob: -9.028162002563477
    8. '#' → logprob: -10.278162002563477
    9. '\n' → logprob: -10.528162002563477
    10. '<|end|>' → logprob: -11.278162002563477

Token 691: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.8033590912818909
    2. 'pos' → logprob: -1.053359031677246
    3. ' p' → logprob: -2.428359031677246
    4. 'p' → logprob: -3.053359031677246
    5. ' s' → logprob: -3.053359031677246
    6. 's' → logprob: -4.428359031677246
    7. ' not' → logprob: -6.303359031677246
    8. ' False' → logprob: -6.303359031677246
    9. 'False' → logprob: -6.553359031677246
    10. ' n' → logprob: -6.928359031677246

Token 692: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5135834813117981
    2. '==' → logprob: -1.0135834217071533
    3. ' !=' → logprob: -3.5135834217071533
    4. '!=' → logprob: -5.263583660125732
    5. '>' → logprob: -6.013583660125732
    6. ' >' → logprob: -7.263583660125732
    7. '==-' → logprob: -8.263583183288574
    8. ' ' → logprob: -8.763583183288574
    9. ':' → logprob: -9.638583183288574
    10. '=' → logprob: -10.013583183288574

Token 693: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006446453626267612
    2. ' -' → logprob: -7.375644683837891
    3. '-p' → logprob: -11.00064468383789
    4. '0' → logprob: -14.12564468383789
    5. ' ' → logprob: -14.87564468383789
    6. 'p' → logprob: -15.25064468383789
    7. '   ' → logprob: -17.00064468383789
    8. ' p' → logprob: -17.00064468383789
    9. '-pos' → logprob: -18.00064468383789
    10. '1' → logprob: -18.12564468383789

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '-' → logprob: -20.5
    4. '=' → logprob: -21.375
    5. '```' → logprob: -21.625
    6. '１' → logprob: -21.75
    7. ' -' → logprob: -21.75
    8. ' ' → logprob: -21.875
    9. '2' → logprob: -21.875
    10. ',' → logprob: -22.625

Token 695: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04443773627281189
    2. ':
' → logprob: -3.4194376468658447
    3. '           ' → logprob: -4.919437885284424
    4. ' and' → logprob: -6.419437885284424
    5. ',' → logprob: -6.794437885284424
    6. '   ' → logprob: -8.544437408447266
    7. ' :' → logprob: -8.919437408447266
    8. '       ' → logprob: -9.044437408447266
    9. '=' → logprob: -9.794437408447266
    10. ' =' → logprob: -10.669437408447266

Token 696: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4361584484577179
    2. '       ' → logprob: -1.5611584186553955
    3. 's' → logprob: -2.4361584186553955
    4. 'update' → logprob: -3.0611584186553955
    5. ' s' → logprob: -5.311158657073975
    6. ' update' → logprob: -5.686158657073975
    7. '   ' → logprob: -7.686158657073975
    8. 'v' → logprob: -8.186158180236816
    9. 'print' → logprob: -9.936158180236816
    10. '.update' → logprob: -10.686158180236816

Token 697: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.018560871481895447
    2. '_' → logprob: -4.518560886383057
    3. 'p' → logprob: -5.268560886383057
    4. 'v' → logprob: -6.768560886383057
    5. 's' → logprob: -7.393560886383057
    6. 'print' → logprob: -8.643560409545898
    7. '_update' → logprob: -9.143560409545898
    8. '           ' → logprob: -9.643560409545898
    9. ' update' → logprob: -9.768560409545898
    10. 'pos' → logprob: -9.893560409545898

Token 698: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.750004768371582
    3. '(p' → logprob: -13.375004768371582
    4. 'pos' → logprob: -14.875004768371582
    5. '(
' → logprob: -16.5000057220459
    6. ' pos' → logprob: -17.3750057220459
    7. ' (' → logprob: -18.0000057220459
    8. ',pos' → logprob: -18.2500057220459
    9. '[pos' → logprob: -18.7500057220459
    10. '	pos' → logprob: -18.7500057220459

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0058376723900437355
    2. '(pos' → logprob: -5.880837440490723
    3. '(p' → logprob: -6.005837440490723
    4. ' ,' → logprob: -8.755837440490723
    5. ',pos' → logprob: -8.880837440490723
    6. ',p' → logprob: -9.130837440490723
    7. '(' → logprob: -9.630837440490723
    8. '(v' → logprob: -9.755837440490723
    9. ')' → logprob: -11.630837440490723
    10. ' (' → logprob: -11.880837440490723

Token 700: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014163628220558167
    2. ' v' → logprob: -4.264163494110107
    3. '	v' → logprob: -17.264163970947266
    4. ')v' → logprob: -17.264163970947266
    5. ',v' → logprob: -17.764163970947266
    6. 's' → logprob: -18.389163970947266
    7. '_v' → logprob: -18.639163970947266
    8. '-v' → logprob: -18.764163970947266
    9. 'pos' → logprob: -19.389163970947266
    10. '   ' → logprob: -19.639163970947266

Token 701: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.183501293184236e-05
    2. ' ,' → logprob: -10.12507152557373
    3. ',v' → logprob: -10.50007152557373
    4. '[' → logprob: -13.00007152557373
    5. ',p' → logprob: -14.75007152557373
    6. ')' → logprob: -15.12507152557373
    7. '<|end|>' → logprob: -15.12507152557373
    8. ',pos' → logprob: -15.50007152557373
    9. ',s' → logprob: -15.87507152557373
    10. '   ' → logprob: -16.500072479248047

Token 702: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007898556068539619
    2. 'pos' → logprob: -7.625789642333984
    3. ' ' → logprob: -8.125789642333984
    4. 'p' → logprob: -12.750789642333984
    5. ' pos' → logprob: -13.125789642333984
    6. '   ' → logprob: -14.875789642333984
    7. 'v' → logprob: -14.875789642333984
    8. '```' → logprob: -16.188289642333984
    9. ',' → logprob: -16.625789642333984
    10. '  ' → logprob: -16.813289642333984

Token 703: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.25000286102295
    3. 'pos' → logprob: -14.12500286102295
    4. 'p' → logprob: -15.31250286102295
    5. ',' → logprob: -16.187503814697266
    6. '```' → logprob: -16.437503814697266
    7. 'n' → logprob: -17.062503814697266
    8. '   ' → logprob: -17.500003814697266
    9. 's' → logprob: -17.812503814697266
    10. ')' → logprob: -18.562503814697266

Token 704: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017083751736208797
    2. ',n' → logprob: -6.751708507537842
    3. 'n' → logprob: -7.626708507537842
    4. ')' → logprob: -10.501708030700684
    5. '+' → logprob: -11.251708030700684
    6. ' ,' → logprob: -13.376708030700684
    7. '```' → logprob: -13.626708030700684
    8. 'pos' → logprob: -13.626708030700684
    9. '<n' → logprob: -13.876708030700684
    10. 'def' → logprob: -14.376708030700684

Token 705: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9385402993066236e-05
    2. ' n' → logprob: -11.000019073486328
    3. '1' → logprob: -13.375019073486328
    4. 'pos' → logprob: -14.125019073486328
    5. '```' → logprob: -15.875019073486328
    6. '   ' → logprob: -16.000019073486328
    7. 'p' → logprob: -16.375019073486328
    8. '
' → logprob: -17.750019073486328
    9. '	n' → logprob: -17.875019073486328
    10. ' ' → logprob: -17.875019073486328

Token 706: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.44443862256594e-05
    2. '<|end|>' → logprob: -10.125064849853516
    3. ')
' → logprob: -10.875064849853516
    4. '())' → logprob: -13.875064849853516
    5. ')return' → logprob: -14.000064849853516
    6. '()' → logprob: -14.000064849853516
    7. '       ' → logprob: -14.625064849853516
    8. ' )' → logprob: -14.625064849853516
    9. ')#' → logprob: -14.875064849853516
    10. ')}' → logprob: -15.250064849853516

Token 707: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31528353691101074
    2. '<|end|>' → logprob: -1.5652835369110107
    3. '```' → logprob: -2.9402835369110107
    4. '
' → logprob: -5.19028377532959
    5. '#' → logprob: -6.81528377532959
    6. ' if' → logprob: -7.56528377532959
    7. '\' → logprob: -8.19028377532959
    8. '[' → logprob: -8.56528377532959
    9. 'main' → logprob: -9.06528377532959
    10. '\n' → logprob: -9.19028377532959

Token 708: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4809023141860962
    2. ' __' → logprob: -0.9809023141860962
    3. '_' → logprob: -5.355902194976807
    4. '_name' → logprob: -6.480902194976807
    5. '___' → logprob: -7.730902194976807
    6. 'name' → logprob: -10.730902671813965
    7. '  ' → logprob: -10.855902671813965
    8. ' _' → logprob: -10.980902671813965
    9. ' ' → logprob: -11.855902671813965
    10. '____' → logprob: -12.230902671813965

Token 709: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00085678935283795
    2. '__.__' → logprob: -8.000856399536133
    3. '__.' → logprob: -8.750856399536133
    4. '==' → logprob: -9.125856399536133
    5. '.__' → logprob: -9.375856399536133
    6. '_' → logprob: -10.250856399536133
    7. '___' → logprob: -10.625856399536133
    8. ' __' → logprob: -10.750856399536133
    9. '____' → logprob: -11.250856399536133
    10. ' ==' → logprob: -11.375856399536133

Token 710: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004158652853220701
    2. '__.__' → logprob: -5.5041584968566895
    3. '__.' → logprob: -9.754158973693848
    4. '==' → logprob: -11.129158973693848
    5. '__["' → logprob: -12.254158973693848
    6. '__('' → logprob: -14.129158973693848
    7. '=="' → logprob: -15.004158973693848
    8. '__
' → logprob: -15.254158973693848
    9. '__.'/' → logprob: -15.254158973693848
    10. '__[' → logprob: -15.379158973693848

Token 711: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07445001602172852
    2. '==' → logprob: -2.6994500160217285
    3. '=="' → logprob: -6.4494500160217285
    4. ' ==' → logprob: -6.8244500160217285
    5. '__.__' → logprob: -7.0744500160217285
    6. '=='' → logprob: -7.5744500160217285
    7. '.__' → logprob: -9.07444953918457
    8. '.' → logprob: -9.69944953918457
    9. '_' → logprob: -9.69944953918457
    10. '==
' → logprob: -10.44944953918457

Token 712: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023249903693795204
    2. ''' → logprob: -3.773249864578247
    3. '__' → logprob: -12.773249626159668
    4. ' "__' → logprob: -13.523249626159668
    5. '"user' → logprob: -15.773249626159668
    6. ''"' → logprob: -17.273250579833984
    7. ' '__' → logprob: -17.523250579833984
    8. '"name' → logprob: -17.773250579833984
    9. '"class' → logprob: -18.273250579833984
    10. '("__' → logprob: -18.273250579833984

Token 713: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.0126840758603066e-05
    2. '__' → logprob: -10.250040054321289
    3. '"' → logprob: -12.625040054321289
    4. 'name' → logprob: -13.625040054321289
    5. '_main' → logprob: -16.37504005432129
    6. ''' → logprob: -16.62504005432129
    7. ' main' → logprob: -16.62504005432129
    8. 'built' → logprob: -17.62504005432129
    9. '(main' → logprob: -18.50004005432129
    10. '__":
' → logprob: -18.62504005432129

Token 714: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.026277542114257812
    2. '__' → logprob: -3.776277542114258
    3. '__':
' → logprob: -6.026277542114258
    4. '__.__' → logprob: -8.401277542114258
    5. '__.' → logprob: -8.651277542114258
    6. '.' → logprob: -9.276277542114258
    7. '__["' → logprob: -9.526277542114258
    8. '__()
' → logprob: -11.901277542114258
    9. '():
' → logprob: -12.151277542114258
    10. '.__' → logprob: -12.276277542114258

Token 715: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0758193731307983
    2. '	main' → logprob: -1.0758193731307983
    3. ' main' → logprob: -1.3258193731307983
    4. '   ' → logprob: -2.950819492340088
    5. '_main' → logprob: -11.07581901550293
    6. '<|end|>' → logprob: -11.07581901550293
    7. '(main' → logprob: -11.57581901550293
    8. '	Main' → logprob: -11.70081901550293
    9. '   ' → logprob: -11.82581901550293
    10. ' ' → logprob: -12.07581901550293

Token 716: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.2664456789934775e-06
    2. '	main' → logprob: -14.250000953674316
    3. ' main' → logprob: -14.500000953674316
    4. '   ' → logprob: -17.750001907348633
    5. 'import' → logprob: -18.000001907348633
    6. '_main' → logprob: -19.750001907348633
    7. '(main' → logprob: -20.375001907348633
    8. '```' → logprob: -21.125001907348633
    9. '.main' → logprob: -21.250001907348633
    10. 'm' → logprob: -23.375001907348633

Token 717: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 715
Tokens correctement prédits (1ère position, stricte): 315
Tokens correctement prédits (1ère position, avec adaptation): 365
Tokens correctement prédits (top 10): 658
Précision stricte (1ère position): 44.06%
Précision adaptée (1ère position): 51.05%
Précision (top 10): 92.03%
================================================================================
