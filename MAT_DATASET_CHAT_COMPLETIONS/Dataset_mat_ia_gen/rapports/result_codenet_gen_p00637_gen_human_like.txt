================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    pages = list(map(int, input().split()))
    result = []
    start = pages[0]
    prev = pages[0]
    for i in range(1, n):
        if pages[i] == prev + 1:
            prev = pages[i]
        else:
            if start == prev:
                result.append(str(start))
            else:
                result.append(f"{start}-{prev}")
            start = pages[i]
            prev = pages[i]
    # last range
    if start == prev:
        result.append(str(start))
    else:
        result.append(f"{start}-{prev}")
    print(" ".join(result))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5927022099494934
    2. '\' → logprob: -2.2177021503448486
    3. ' ' → logprob: -2.4677021503448486
    4. '```' → logprob: -2.8427021503448486
    5. '    ' → logprob: -2.9677021503448486
    6. '    
' → logprob: -3.2177021503448486
    7. '\n' → logprob: -3.8427021503448486
    8. ' 
' → logprob: -3.8427021503448486
    9. '<|end|>' → logprob: -3.9677021503448486
    10. '  
' → logprob: -5.092702388763428

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24706147611141205
    2. '    ' → logprob: -1.8720614910125732
    3. '```' → logprob: -3.3720614910125732
    4. ' ' → logprob: -3.9970614910125732
    5. '    
' → logprob: -6.122061252593994
    6. ' pass' → logprob: -6.497061252593994
    7. '  ' → logprob: -6.622061252593994
    8. '       ' → logprob: -6.872061252593994
    9. 'pass' → logprob: -6.997061252593994
    10. '\' → logprob: -7.872061252593994

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9141917824745178
    2. 'u' → logprob: -1.664191722869873
    3. '=' → logprob: -2.039191722869873
    4. '+' → logprob: -2.289191722869873
    5. 'o' → logprob: -2.789191722869873
    6. '   ' → logprob: -3.664191722869873
    7. '_' → logprob: -4.289191722869873
    8. '.' → logprob: -4.414191722869873
    9. '%' → logprob: -4.539191722869873
    10. ' =' → logprob: -4.789191722869873

Token 6: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5945659875869751
    2. ' int' → logprob: -0.9695659875869751
    3. 'input' → logprob: -2.8445658683776855
    4. 'int' → logprob: -4.5945658683776855
    5. ' ' → logprob: -8.219566345214844
    6. ' n' → logprob: -8.594566345214844
    7. ' s' → logprob: -10.594566345214844
    8. ' eval' → logprob: -10.844566345214844
    9. 'n' → logprob: -11.094566345214844
    10. '1' → logprob: -11.094566345214844

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036237118765711784
    2. '(input' → logprob: -5.6286234855651855
    3. '()' → logprob: -12.128623962402344
    4. '('' → logprob: -12.253623962402344
    5. ' (' → logprob: -12.503623962402344
    6. '(n' → logprob: -12.628623962402344
    7. '(
' → logprob: -13.503623962402344
    8. 'input' → logprob: -13.503623962402344
    9. '(`' → logprob: -14.378623962402344
    10. '```' → logprob: -15.253623962402344

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43355119228363037
    2. ')' → logprob: -1.6835511922836304
    3. '()' → logprob: -2.05855131149292
    4. '())' → logprob: -3.43355131149292
    5. '))' → logprob: -6.05855131149292
    6. '('' → logprob: -6.80855131149292
    7. '()))' → logprob: -7.43355131149292
    8. ' ' → logprob: -7.68355131149292
    9. '(
' → logprob: -8.183550834655762
    10. '')' → logprob: -8.683550834655762

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1366939544677734
    2. ' if' → logprob: -1.1366939544677734
    3. ' ' → logprob: -1.6366939544677734
    4. '<|end|>' → logprob: -2.6366939544677734
    5. 'if' → logprob: -4.261693954467773
    6. '    ' → logprob: -4.261693954467773
    7. ')' → logprob: -4.261693954467773
    8. '  ' → logprob: -4.636693954467773
    9. ':' → logprob: -4.636693954467773
    10. '```' → logprob: -5.011693954467773

Token 10: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7105682492256165
    2. '   ' → logprob: -1.0855681896209717
    3. ' ' → logprob: -2.7105681896209717
    4. '    ' → logprob: -3.4605681896209717
    5. 'if' (adapté à ' if') → logprob: -3.4605681896209717
    6. ')' → logprob: -4.460568428039551
    7. '  ' → logprob: -4.835568428039551
    8. ':' → logprob: -5.835568428039551
    9. '\n' → logprob: -6.210568428039551
    10. ' )' → logprob: -6.335568428039551

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007577050942927599
    2. ' ' → logprob: -5.007576942443848
    3. ' not' → logprob: -7.757576942443848
    4. 'n' → logprob: -7.757576942443848
    5. ' ' → logprob: -12.632576942443848
    6. '  ' → logprob: -14.132576942443848
    7. 'not' → logprob: -14.132576942443848
    8. ' (' → logprob: -15.132576942443848
    9. '<|end|>' → logprob: -15.257576942443848
    10. '	n' → logprob: -15.507576942443848

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3133403956890106
    2. ' >' → logprob: -1.813340425491333
    3. ' <=' → logprob: -2.813340425491333
    4. ' <' → logprob: -4.188340187072754
    5. '==' → logprob: -4.438340187072754
    6. ' ' → logprob: -4.438340187072754
    7. '>' → logprob: -5.688340187072754
    8. ')' → logprob: -7.063340187072754
    9. '<|end|>' → logprob: -7.063340187072754
    10. '  ' → logprob: -7.813340187072754

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1797505021095276
    2. '0' → logprob: -1.8047504425048828
    3. '1' → logprob: -13.929750442504883
    4. ' ' → logprob: -13.929750442504883
    5. '  ' → logprob: -14.179750442504883
    6. ')' → logprob: -15.179750442504883
    7. '100' → logprob: -15.242250442504883
    8. ' -' → logprob: -15.304750442504883
    9. '20' → logprob: -15.429750442504883
    10. '<|end|>' → logprob: -15.617250442504883

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002513592829927802
    2. ' ' → logprob: -6.002513408660889
    3. '-' → logprob: -10.377513885498047
    4. ' -' → logprob: -13.002513885498047
    5. '1' → logprob: -13.252513885498047
    6. '   ' → logprob: -14.127513885498047
    7. '42' → logprob: -14.752513885498047
    8. '```' → logprob: -14.877513885498047
    9. '  ' → logprob: -15.002513885498047
    10. '4' → logprob: -15.252513885498047

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.076218025758862e-05
    2. ':
' → logprob: -10.375070571899414
    3. ' :' → logprob: -10.625070571899414
    4. '   ' → logprob: -12.375070571899414
    5. ':\' → logprob: -12.875070571899414
    6. ':return' → logprob: -12.875070571899414
    7. '):' → logprob: -13.250070571899414
    8. '       ' → logprob: -13.875070571899414
    9. '    ' → logprob: -14.000070571899414
    10. ':**' → logprob: -14.750070571899414

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028660334646701813
    2. ' break' → logprob: -8.750287055969238
    3. '   ' → logprob: -10.000287055969238
    4. '    ' → logprob: -10.250287055969238
    5. '        ' → logprob: -11.375287055969238
    6. '      ' → logprob: -11.750287055969238
    7. '\n' → logprob: -12.375287055969238
    8. '```' → logprob: -12.375287055969238
    9. '	break' → logprob: -12.625287055969238
    10. '     ' → logprob: -12.750287055969238

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.011935565620660782
    2. '       ' → logprob: -4.761935710906982
    3. 'break' (adapté à ' break') → logprob: -5.886935710906982
    4. '	break' → logprob: -8.511935234069824
    5. '   ' → logprob: -8.886935234069824
    6. '\n' → logprob: -9.386935234069824
    7. '_break' → logprob: -10.011935234069824
    8. ' \' → logprob: -11.136935234069824
    9. '    ' → logprob: -11.511935234069824
    10. '```' → logprob: -11.761935234069824

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2312391996383667
    2. '\n' → logprob: -1.2312391996383667
    3. '
' → logprob: -2.2312393188476562
    4. '    
' → logprob: -2.4812393188476562
    5. '<|end|>' → logprob: -2.4812393188476562
    6. ':' → logprob: -2.8562393188476562
    7. '```' → logprob: -3.6062393188476562
    8. '\' → logprob: -3.8562393188476562
    9. ')' → logprob: -5.106239318847656
    10. '#' → logprob: -5.356239318847656

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1724497526884079
    2. '    
' → logprob: -3.297449827194214
    3. '<|end|>' → logprob: -3.297449827194214
    4. '\n' → logprob: -3.547449827194214
    5. '
' → logprob: -3.797449827194214
    6. '```' → logprob: -4.297449588775635
    7. 'n' → logprob: -5.547449588775635
    8. '\' → logprob: -5.547449588775635
    9. '#' → logprob: -5.797449588775635
    10. ')' → logprob: -6.422449588775635

Token 20: ' pages' (ID: 8537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2020852118730545
    2. ' ' → logprob: -2.327085256576538
    3. '    ' → logprob: -3.827085256576538
    4. 'n' → logprob: -4.452085018157959
    5. 'print' → logprob: -5.077085018157959
    6. ')' → logprob: -5.202085018157959
    7. '[' → logprob: -5.327085018157959
    8. '```' → logprob: -5.452085018157959
    9. '\' → logprob: -5.702085018157959
    10. 'a' → logprob: -5.827085018157959

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5425799489021301
    2. '[' → logprob: -1.4175798892974854
    3. '=' → logprob: -2.2925798892974854
    4. '_' → logprob: -3.1675798892974854
    5. ' ' → logprob: -4.5425801277160645
    6. '   ' → logprob: -5.5425801277160645
    7. ')' → logprob: -5.5425801277160645
    8. '.' → logprob: -5.9175801277160645
    9. '    ' → logprob: -6.0425801277160645
    10. '[]' → logprob: -6.5425801277160645

Token 22: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.15686123073101044
    2. ' n' → logprob: -2.9068613052368164
    3. ' {}' → logprob: -3.4068613052368164
    4. ' [' → logprob: -3.6568613052368164
    5. ' ' → logprob: -4.781861305236816
    6. 'n' → logprob: -4.906861305236816
    7. '[]' → logprob: -5.531861305236816
    8. ' int' → logprob: -6.281861305236816
    9. ' input' → logprob: -6.281861305236816
    10. ' map' → logprob: -6.656861305236816

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010343570029363036
    2. '(range' → logprob: -7.251034259796143
    3. '(p' → logprob: -8.2510347366333
    4. '()' → logprob: -11.0010347366333
    5. '(map' → logprob: -12.5010347366333
    6. '(int' → logprob: -12.6260347366333
    7. '<|end|>' → logprob: -12.8760347366333
    8. '(n' → logprob: -13.0010347366333
    9. '(input' → logprob: -13.1260347366333
    10. '(s' → logprob: -13.1260347366333

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006775407586246729
    2. '(' → logprob: -5.006775379180908
    3. 'int' → logprob: -10.881775856018066
    4. '(str' → logprob: -11.131775856018066
    5. '(lambda' → logprob: -11.256775856018066
    6. '(input' → logprob: -12.381775856018066
    7. ')' → logprob: -12.631775856018066
    8. '(
' → logprob: -13.131775856018066
    9. '<int' → logprob: -13.631775856018066
    10. '=int' → logprob: -13.756775856018066

Token 25: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01098026055842638
    2. '(' → logprob: -5.135980129241943
    3. ',input' → logprob: -5.510980129241943
    4. 'input' → logprob: -7.635980129241943
    5. ',' → logprob: -8.260980606079102
    6. ')' → logprob: -8.885980606079102
    7. ' input' → logprob: -10.010980606079102
    8. '=input' → logprob: -10.510980606079102
    9. '(
' → logprob: -11.385980606079102
    10. '))' → logprob: -11.510980606079102

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.28117862343788147
    2. ' input' → logprob: -1.406178593635559
    3. ')' → logprob: -11.15617847442627
    4. ',input' → logprob: -12.40617847442627
    5. '(input' → logprob: -12.53117847442627
    6. '[input' → logprob: -13.53117847442627
    7. 'range' → logprob: -14.28117847442627
    8. ' )' → logprob: -14.28117847442627
    9. '=input' → logprob: -14.40617847442627
    10. '	input' → logprob: -14.53117847442627

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06854121387004852
    2. '()' → logprob: -3.1935412883758545
    3. '()))' → logprob: -4.318541049957275
    4. '())' → logprob: -4.818541049957275
    5. '(' → logprob: -5.693541049957275
    6. '()));' → logprob: -8.693541526794434
    7. '()>' → logprob: -9.568541526794434
    8. '())))' → logprob: -9.693541526794434
    9. '());' → logprob: -10.443541526794434
    10. ')' → logprob: -10.943541526794434

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005629229708574712
    2. 'strip' → logprob: -7.500563144683838
    3. 'rstrip' → logprob: -11.87556266784668
    4. ' split' → logprob: -12.87556266784668
    5. '(split' → logprob: -15.25056266784668
    6. 'spl' → logprob: -17.12556266784668
    7. ' strip' → logprob: -18.00056266784668
    8. ')' → logprob: -18.25056266784668
    9. '.split' → logprob: -18.75056266784668
    10. 's' → logprob: -19.00056266784668

Token 29: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.05227354168891907
    2. '())' → logprob: -3.5522735118865967
    3. '))' → logprob: -4.302273750305176
    4. '()' → logprob: -4.927273750305176
    5. '(' → logprob: -7.552273750305176
    6. '())))' → logprob: -7.802273750305176
    7. ')' → logprob: -8.052273750305176
    8. ')))' → logprob: -9.427273750305176
    9. '()))
' → logprob: -9.677273750305176
    10. '('' → logprob: -10.677273750305176

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07890917360782623
    2. ')' → logprob: -4.078909397125244
    3. '[' → logprob: -4.328909397125244
    4. '    
' → logprob: -4.453909397125244
    5. ' ' → logprob: -4.578909397125244
    6. '    ' → logprob: -5.453909397125244
    7. '\n' → logprob: -5.453909397125244
    8. '
' → logprob: -6.078909397125244
    9. ' 
' → logprob: -6.078909397125244
    10. '  ' → logprob: -6.703909397125244

Token 31: ' result' (ID: 1534)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.147743582725525
    2. 'c' → logprob: -2.0227437019348145
    3. 'i' → logprob: -2.1477437019348145
    4. 'max' → logprob: -2.7727437019348145
    5. 's' → logprob: -3.5227437019348145
    6. 'n' → logprob: -3.5227437019348145
    7. 'pages' → logprob: -3.5227437019348145
    8. '   ' → logprob: -3.6477437019348145
    9. 'count' → logprob: -3.7727437019348145
    10. 'r' → logprob: -3.7727437019348145

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0775095596909523
    2. '=' → logprob: -3.077509641647339
    3. '.' → logprob: -4.45250940322876
    4. '_' → logprob: -5.20250940322876
    5. '.append' → logprob: -5.70250940322876
    6. '[:]' → logprob: -5.82750940322876
    7. '[' → logprob: -6.07750940322876
    8. ' ' → logprob: -7.20250940322876
    9. '(' → logprob: -7.32750940322876
    10. 's' → logprob: -7.82750940322876

Token 33: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0810285806655884
    2. ' []' → logprob: -1.3310285806655884
    3. '0' → logprob: -1.9560285806655884
    4. ' max' → logprob: -2.331028461456299
    5. 'max' → logprob: -3.081028461456299
    6. 'sum' → logprob: -3.831028461456299
    7. ' pages' → logprob: -3.956028461456299
    8. ' sum' → logprob: -4.456028461456299
    9. 'pages' → logprob: -4.831028461456299
    10. 'min' → logprob: -4.956028461456299

Token 34: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6125267148017883
    2. '   ' → logprob: -1.2375266551971436
    3. 'for' → logprob: -2.3625266551971436
    4. ' ' → logprob: -3.4875266551971436
    5. ' 
' → logprob: -3.9875266551971436
    6. '    ' → logprob: -5.237526893615723
    7. '    
' → logprob: -5.237526893615723
    8. ' i' → logprob: -5.487526893615723
    9. '     
' → logprob: -6.237526893615723
    10. 'i' → logprob: -6.737526893615723

Token 35: ' start' (ID: 1604)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5697946548461914
    2. 'for' → logprob: -1.1947946548461914
    3. '   ' → logprob: -2.8197946548461914
    4. 'p' → logprob: -4.069794654846191
    5. ' i' → logprob: -4.069794654846191
    6. ' p' → logprob: -4.819794654846191
    7. 'i' → logprob: -4.944794654846191
    8. '[' → logprob: -5.569794654846191
    9. ' ' → logprob: -5.694794654846191
    10. '    ' → logprob: -6.319794654846191

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5311453938484192
    2. '=' → logprob: -1.0311453342437744
    3. '_' → logprob: -2.9061453342437744
    4. ' ' → logprob: -8.406145095825195
    5. '<|end|>' → logprob: -8.906145095825195
    6. ',' → logprob: -9.156145095825195
    7. '_=' → logprob: -9.781145095825195
    8. '_token' → logprob: -9.906145095825195
    9. ')' → logprob: -10.031145095825195
    10. ' _' → logprob: -10.281145095825195

Token 37: ' pages' (ID: 8537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12583552300930023
    2. ' ' → logprob: -3.000835418701172
    3. 'pages' → logprob: -3.125835418701172
    4. ' pages' → logprob: -4.125835418701172
    5. '1' → logprob: -4.875835418701172
    6. '-' → logprob: -7.750835418701172
    7. ' -' → logprob: -8.375835418701172
    8. ' None' → logprob: -10.063335418701172
    9. '   ' → logprob: -10.938335418701172
    10. 'None' → logprob: -11.313335418701172

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007772310636937618
    2. '[:]' → logprob: -8.375777244567871
    3. '.' → logprob: -8.750777244567871
    4. '[:' → logprob: -9.125777244567871
    5. '[-' → logprob: -9.125777244567871
    6. ' [' → logprob: -9.500777244567871
    7. '.index' → logprob: -10.500777244567871
    8. '0' → logprob: -10.875777244567871
    9. ' ' → logprob: -12.000777244567871
    10. '-' → logprob: -12.000777244567871

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.764977686339989e-05
    2. ' ' → logprob: -10.375057220458984
    3. '-' → logprob: -10.750057220458984
    4. '   ' → logprob: -13.375057220458984
    5. ']' → logprob: -14.062557220458984
    6. ')' → logprob: -14.937557220458984
    7. '1' → logprob: -14.937557220458984
    8. ' -' → logprob: -15.250057220458984
    9. '[' → logprob: -15.562557220458984
    10. ':' → logprob: -16.125057220458984

Token 40: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00937565229833126
    2. '+' → logprob: -5.50937557220459
    3. '   ' → logprob: -6.25937557220459
    4. ' )' → logprob: -6.63437557220459
    5. '-' → logprob: -7.63437557220459
    6. ']' → logprob: -8.00937557220459
    7. ' +' → logprob: -8.25937557220459
    8. '<|end|>' → logprob: -8.75937557220459
    9. ')
' → logprob: -9.00937557220459
    10. ',' → logprob: -9.00937557220459

Token 41: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.339930772781372
    2. '   ' → logprob: -1.589930772781372
    3. ' 
' → logprob: -1.839930772781372
    4. '<|end|>' → logprob: -2.089930772781372
    5. '    ' → logprob: -2.964930772781372
    6. ''' → logprob: -2.964930772781372
    7. '     
' → logprob: -3.589930772781372
    8. '    
' → logprob: -3.714930772781372
    9. '   
' → logprob: -3.964930772781372
    10. ' for' → logprob: -4.089930534362793

Token 42: ' prev' (ID: 10258)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.137227177619934
    2. ',' → logprob: -1.387227177619934
    3. ' for' → logprob: -1.512227177619934
    4. ' ,' → logprob: -2.3872270584106445
    5. 'for' → logprob: -3.5122270584106445
    6. '<|end|>' → logprob: -3.6372270584106445
    7. ''' → logprob: -4.3872270584106445
    8. '    ' → logprob: -4.3872270584106445
    9. '   ' → logprob: -4.7622270584106445
    10. '  ' → logprob: -6.1372270584106445

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04475102946162224
    2. '=' → logprob: -3.419750928878784
    3. ' ' → logprob: -5.169751167297363
    4. '_' → logprob: -5.419751167297363
    5. ',' → logprob: -7.919751167297363
    6. '<|end|>' → logprob: -7.919751167297363
    7. '    ' → logprob: -10.669751167297363
    8. '  ' → logprob: -10.669751167297363
    9. '+' → logprob: -10.919751167297363
    10. ' _' → logprob: -11.169751167297363

Token 44: ' pages' (ID: 8537)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.15222406387329102
    2. ' pages' → logprob: -2.402224063873291
    3. 'start' → logprob: -3.027224063873291
    4. 'pages' → logprob: -6.277224063873291
    5. ' ' → logprob: -8.027223587036133
    6. ' ' → logprob: -12.402223587036133
    7. '	start' → logprob: -12.527223587036133
    8. '[start' → logprob: -12.777223587036133
    9. ' spaces' → logprob: -12.902223587036133
    10. '(start' → logprob: -13.027223587036133

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017292065313085914
    2. '0' → logprob: -6.3767290115356445
    3. ' [' → logprob: -11.251729011535645
    4. ' ' → logprob: -11.876729011535645
    5. '[-' → logprob: -12.376729011535645
    6. '[
' → logprob: -13.376729011535645
    7. '-' → logprob: -14.751729011535645
    8. '```' → logprob: -15.251729011535645
    9. '   ' → logprob: -15.626729011535645
    10. 's' → logprob: -16.12672996520996

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003323665587231517
    2. '-' → logprob: -8.125332832336426
    3. ' ' → logprob: -10.500332832336426
    4. '   ' → logprob: -13.000332832336426
    5. '1' → logprob: -13.062832832336426
    6. ']' → logprob: -13.437832832336426
    7. ' -' → logprob: -13.812832832336426
    8. '```' → logprob: -15.000332832336426
    9. '  ' → logprob: -15.250332832336426
    10. '[' → logprob: -15.625332832336426

Token 47: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015087566338479519
    2. '   ' → logprob: -4.890087604522705
    3. '<|end|>' → logprob: -5.640087604522705
    4. ' )' → logprob: -6.890087604522705
    5. ')
' → logprob: -7.265087604522705
    6. '+' → logprob: -7.390087604522705
    7. '
' → logprob: -7.640087604522705
    8. '<|end|>' → logprob: -7.765087604522705
    9. ']' → logprob: -8.765087127685547
    10. ' ' → logprob: -9.390087127685547

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37616288661956787
    2. '\n' → logprob: -1.5011628866195679
    3. ' 
' → logprob: -3.5011630058288574
    4. ' for' → logprob: -4.251163005828857
    5. '    
' → logprob: -4.626163005828857
    6. '
' → logprob: -5.001163005828857
    7. '```' → logprob: -5.251163005828857
    8. 'for' → logprob: -5.376163005828857
    9. '\r' → logprob: -5.751163005828857
    10. '\' → logprob: -5.751163005828857

Token 49: ' for' (ID: 395)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7212367057800293
    2. ' for' → logprob: -0.9712367057800293
    3. 'for' (adapté à ' for') → logprob: -2.8462367057800293
    4. '\' → logprob: -3.7212367057800293
    5. '   ' → logprob: -4.346236705780029
    6. '
' → logprob: -4.596236705780029
    7. '\r' → logprob: -4.596236705780029
    8. '```' → logprob: -5.096236705780029
    9. '<|end|>' → logprob: -5.221236705780029
    10. ' 
' → logprob: -5.596236705780029

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2031223475933075
    2. ' page' → logprob: -1.8281223773956299
    3. ' p' → logprob: -4.203122138977051
    4. 'page' → logprob: -5.328122138977051
    5. 'i' → logprob: -6.203122138977051
    6. ' num' → logprob: -7.703122138977051
    7. ' ' → logprob: -7.953122138977051
    8. ' x' → logprob: -8.45312213897705
    9. 'p' → logprob: -9.20312213897705
    10. '   ' → logprob: -10.45312213897705

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0063427649438381195
    2. 'in' → logprob: -5.131342887878418
    3. ' ' → logprob: -7.881342887878418
    4. '  ' → logprob: -10.881342887878418
    5. '	in' → logprob: -11.506342887878418
    6. ',' → logprob: -12.881342887878418
    7. '   ' → logprob: -13.381342887878418
    8. '    ' → logprob: -13.881342887878418
    9. '+' → logprob: -14.756342887878418
    10. ' i' → logprob: -15.006342887878418

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011173728853464127
    2. 'range' → logprob: -4.511173725128174
    3. ' pages' → logprob: -9.011174201965332
    4. ' ' → logprob: -13.511174201965332
    5. 'pages' → logprob: -13.511174201965332
    6. '	range' → logprob: -15.136174201965332
    7. '(range' → logprob: -15.636174201965332
    8. '   ' → logprob: -15.761174201965332
    9. ' xrange' → logprob: -15.886174201965332
    10. 'ange' → logprob: -15.886174201965332

Token 53: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010723850573413074
    2. '(len' → logprob: -9.625106811523438
    3. '1' → logprob: -10.625106811523438
    4. ' (' → logprob: -11.625106811523438
    5. '   ' → logprob: -12.500106811523438
    6. ' ' → logprob: -12.875106811523438
    7. '	' → logprob: -14.250106811523438
    8. 'len' → logprob: -15.000106811523438
    9. ' len' → logprob: -15.500106811523438
    10. '    ' → logprob: -16.000106811523438

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.015305552864447e-05
    2. '   ' → logprob: -10.000060081481934
    3. 'len' → logprob: -11.625060081481934
    4. ' ' → logprob: -12.125060081481934
    5. '    ' → logprob: -16.00006103515625
    6. '  ' → logprob: -16.25006103515625
    7. '       ' → logprob: -16.87506103515625
    8. '(' → logprob: -17.25006103515625
    9. ' len' → logprob: -17.87506103515625
    10. '	' → logprob: -18.25006103515625

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5768252611160278
    2. ',len' → logprob: -1.8268252611160278
    3. ' ,' → logprob: -2.3268251419067383
    4. ' len' → logprob: -2.4518251419067383
    5. ' ' → logprob: -3.0768251419067383
    6. '(len' → logprob: -3.2018251419067383
    7. '<len' → logprob: -6.326825141906738
    8. ' )' → logprob: -6.701825141906738
    9. '=len' → logprob: -7.201825141906738
    10. ')' → logprob: -7.326825141906738

Token 56: ' n' (ID: 297)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5339361429214478
    2. ' n' → logprob: -1.0339361429214478
    3. 'len' → logprob: -3.158936023712158
    4. 'n' → logprob: -4.158936023712158
    5. ' ' → logprob: -12.658936500549316
    6. '   ' → logprob: -12.908936500549316
    7. '	len' → logprob: -14.283936500549316
    8. '    ' → logprob: -14.908936500549316
    9. '(len' → logprob: -15.158936500549316
    10. '  ' → logprob: -15.158936500549316

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015157493180595338
    2. '):
' → logprob: -9.125151634216309
    3. ':' → logprob: -10.875151634216309
    4. ' ):' → logprob: -11.125151634216309
    5. ')' → logprob: -11.750151634216309
    6. '   ' → logprob: -15.500151634216309
    7. '+' → logprob: -15.625151634216309
    8. '}:' → logprob: -15.750151634216309
    9. '):
' → logprob: -16.000150680541992
    10. ',' → logprob: -16.750150680541992

Token 58: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5169875025749207
    2. '       ' → logprob: -1.8919875621795654
    3. '<|end|>' → logprob: -2.0169875621795654
    4. ':' → logprob: -2.3919875621795654
    5. '    ' → logprob: -4.766987323760986
    6. ' ' → logprob: -4.891987323760986
    7. ' if' → logprob: -6.391987323760986
    8. '  ' → logprob: -6.391987323760986
    9. '<|end|>' → logprob: -6.516987323760986
    10. '    
' → logprob: -6.766987323760986

Token 59: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1424224078655243
    2. ' ' → logprob: -3.0174224376678467
    3. '<|end|>' → logprob: -3.5174224376678467
    4. ' 
' → logprob: -3.7674224376678467
    5. '```' → logprob: -4.267422199249268
    6. 'if' (adapté à ' if') → logprob: -5.017422199249268
    7. '       ' → logprob: -5.517422199249268
    8. '    ' → logprob: -6.017422199249268
    9. ' ```' → logprob: -6.892422199249268
    10. ' ' → logprob: -7.642422199249268

Token 60: ' pages' (ID: 8537)
  Prédit: ' pages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pages' → logprob: -0.0009513601544313133
    2. ' ' → logprob: -7.500951290130615
    3. 'pages' → logprob: -8.250951766967773
    4. ' abs' → logprob: -9.125951766967773
    5. ' prev' → logprob: -11.250951766967773
    6. ' (' → logprob: -12.250951766967773
    7. ' page' → logprob: -12.750951766967773
    8. '    ' → logprob: -13.250951766967773
    9. ' p' → logprob: -13.375951766967773
    10. 'abs' → logprob: -14.250951766967773

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4974866644479334e-05
    2. '[' → logprob: -11.125015258789062
    3. '[index' → logprob: -16.250015258789062
    4. '[I' → logprob: -16.875015258789062
    5. ' [' → logprob: -17.000015258789062
    6. '[
' → logprob: -17.875015258789062
    7. '[j' → logprob: -18.125015258789062
    8. '[ii' → logprob: -18.750015258789062
    9. ' ' → logprob: -18.875015258789062
    10. '[idx' → logprob: -19.125015258789062

Token 62: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.26528701186180115
    2. '==' → logprob: -1.5152870416641235
    3. '-' → logprob: -5.015286922454834
    4. ' -' → logprob: -5.140286922454834
    5. ')' → logprob: -8.265287399291992
    6. ')==' → logprob: -8.390287399291992
    7. ']==' → logprob: -9.140287399291992
    8. '>' → logprob: -10.140287399291992
    9. ' !=' → logprob: -10.265287399291992
    10. ' ' → logprob: -10.640287399291992

Token 63: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.35454198718070984
    2. ' ==' → logprob: -1.2295420169830322
    3. '-' → logprob: -5.479541778564453
    4. ' -' → logprob: -6.479541778564453
    5. '=' → logprob: -8.354541778564453
    6. ')==' → logprob: -10.854541778564453
    7. ' ' → logprob: -10.979541778564453
    8. '>' → logprob: -11.229541778564453
    9. '==-' → logprob: -11.229541778564453
    10. '```' → logprob: -11.479541778564453

Token 64: ' prev' (ID: 10258)
  Prédit: ' prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.1272989958524704
    2. 'prev' → logprob: -2.1272990703582764
    3. '	prev' → logprob: -8.127299308776855
    4. ' ' → logprob: -9.752299308776855
    5. '(prev' → logprob: -11.127299308776855
    6. '```' → logprob: -14.377299308776855
    7. '    ' → logprob: -15.002299308776855
    8. ' pages' → logprob: -15.002299308776855
    9. '_prev' → logprob: -15.127299308776855
    10. '   ' → logprob: -15.127299308776855

Token 65: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06198998540639877
    2. '+' → logprob: -2.8119900226593018
    3. '    ' → logprob: -11.311989784240723
    4. ' ' → logprob: -12.061989784240723
    5. '   ' → logprob: -12.936989784240723
    6. '1' → logprob: -14.561989784240723
    7. '+i' → logprob: -14.936989784240723
    8. ' ' → logprob: -15.436989784240723
    9. ' +
' → logprob: -15.561989784240723
    10. ' plus' → logprob: -15.561989784240723

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033655840903520584
    2. ' ' → logprob: -3.408655881881714
    3. '   ' → logprob: -11.783656120300293
    4. '<|end|>' → logprob: -13.783656120300293
    5. '    ' → logprob: -14.533656120300293
    6. '  ' → logprob: -14.658656120300293
    7. '```' → logprob: -15.658656120300293
    8. ' ' → logprob: -16.408655166625977
    9. ' one' → logprob: -16.658655166625977
    10. '<|end|>' → logprob: -16.658655166625977

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -15.000027656555176
    4. '```' → logprob: -17.250028610229492
    5. '  ' → logprob: -17.500028610229492
    6. '   ' → logprob: -17.625028610229492
    7. '-' → logprob: -18.500028610229492
    8. '<|end|>' → logprob: -19.250028610229492
    9. '    ' → logprob: -19.875028610229492
    10. '۱' → logprob: -20.500028610229492

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004763330332934856
    2. '       ' → logprob: -5.629763126373291
    3. ':
' → logprob: -7.129763126373291
    4. '):' → logprob: -8.50476360321045
    5. '<|end|>' → logprob: -9.62976360321045
    6. ',' → logprob: -10.75476360321045
    7. '           ' → logprob: -11.12976360321045
    8. ')' → logprob: -11.25476360321045
    9. '   ' → logprob: -11.62976360321045
    10. '<|end|>' → logprob: -11.62976360321045

Token 69: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16376402974128723
    2. '           ' → logprob: -1.9137639999389648
    3. 'prev' → logprob: -6.663763999938965
    4. ':' → logprob: -7.038763999938965
    5. ' prev' → logprob: -7.413763999938965
    6. '<|end|>' → logprob: -8.913763999938965
    7. '```' → logprob: -8.913763999938965
    8. '   ' → logprob: -9.038763999938965
    9. '(prev' → logprob: -9.413763999938965
    10. ',' → logprob: -9.538763999938965

Token 70: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.03484420105814934
    2. ' prev' → logprob: -3.659844160079956
    3. '           ' → logprob: -4.909844398498535
    4. '       ' → logprob: -7.534844398498535
    5. '	prev' → logprob: -7.534844398498535
    6. '(prev' → logprob: -10.534844398498535
    7. '.prev' → logprob: -11.284844398498535
    8. '_prev' → logprob: -11.534844398498535
    9. '```' → logprob: -12.534844398498535
    10. '               ' → logprob: -12.659844398498535

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0233379527926445
    2. '=' → logprob: -3.7733378410339355
    3. ' +=' → logprob: -9.398338317871094
    4. ' ' → logprob: -11.898338317871094
    5. '<|end|>' → logprob: -13.898338317871094
    6. '+=' → logprob: -14.023338317871094
    7. '    ' → logprob: -15.273338317871094
    8. ' =)' → logprob: -15.398338317871094
    9. ',' → logprob: -16.523338317871094
    10. '=end' → logprob: -16.523338317871094

Token 72: ' pages' (ID: 8537)
  Prédit: ' pages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pages' → logprob: -0.5759419202804565
    2. 'pages' → logprob: -0.8259419202804565
    3. '.pages' → logprob: -14.575942039489746
    4. 'prev' → logprob: -14.825942039489746
    5. 'page' → logprob: -15.075942039489746
    6. ' ' → logprob: -15.450942039489746
    7. 'p' → logprob: -15.450942039489746
    8. ' prev' → logprob: -15.700942039489746
    9. '_pages' → logprob: -16.20094108581543
    10. ' page' → logprob: -16.45094108581543

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001882823125924915
    2. '[' → logprob: -8.625187873840332
    3. 'i' → logprob: -12.000187873840332
    4. '```' → logprob: -14.000187873840332
    5. '[
' → logprob: -14.625187873840332
    6. '[I' → logprob: -14.875187873840332
    7. ' ' → logprob: -15.375187873840332
    8. ' [' → logprob: -15.625187873840332
    9. '`' → logprob: -16.37518882751465
    10. ']' → logprob: -16.87518882751465

Token 74: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08917435258626938
    2. '       ' → logprob: -2.589174270629883
    3. '<|end|>' → logprob: -5.214174270629883
    4. ')
' → logprob: -5.839174270629883
    5. '   ' → logprob: -7.214174270629883
    6. '<|end|>' → logprob: -7.839174270629883
    7. ' else' → logprob: -8.589174270629883
    8. '           ' → logprob: -9.214174270629883
    9. '```' → logprob: -9.214174270629883
    10. 'else' → logprob: -9.589174270629883

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005637581925839186
    2. 'else' → logprob: -6.1306376457214355
    3. '   ' → logprob: -6.6306376457214355
    4. ' else' → logprob: -7.0056376457214355
    5. '```' → logprob: -7.0056376457214355
    6. 'elif' → logprob: -8.755637168884277
    7. '<|end|>' → logprob: -9.880637168884277
    8. ' elif' → logprob: -11.005637168884277
    9. '           ' → logprob: -11.005637168884277
    10. 'continue' → logprob: -11.380637168884277

Token 76: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21870078146457672
    2. ' else' → logprob: -2.218700885772705
    3. 'else' (adapté à ' else') → logprob: -2.468700885772705
    4. '   ' → logprob: -6.468700885772705
    5. 'elif' → logprob: -7.218700885772705
    6. '```' → logprob: -7.718700885772705
    7. ' elif' → logprob: -8.593700408935547
    8. '	else' → logprob: -10.343700408935547
    9. ')' → logprob: -11.468700408935547
    10. '	elif' → logprob: -12.343700408935547

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06303311139345169
    2. ':
' → logprob: -2.938033103942871
    3. '           ' → logprob: -5.438033103942871
    4. '       ' → logprob: -5.813033103942871
    5. '<|end|>' → logprob: -8.313033103942871
    6. '):
' → logprob: -9.063033103942871
    7. ' :
' → logprob: -9.313033103942871
    8. ' :' → logprob: -9.313033103942871
    9. '   ' → logprob: -9.563033103942871
    10. '<|end|>' → logprob: -9.813033103942871

Token 78: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04735306277871132
    2. '           ' → logprob: -3.1723530292510986
    3. '```' → logprob: -6.172353267669678
    4. ' result' → logprob: -6.922353267669678
    5. 'result' → logprob: -7.422353267669678
    6. ' if' → logprob: -8.29735279083252
    7. ' for' → logprob: -8.67235279083252
    8. '   ' → logprob: -9.17235279083252
    9. '        ' → logprob: -10.54735279083252
    10. '``' → logprob: -11.17235279083252

Token 79: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15815944969654083
    2. '       ' → logprob: -2.9081594944000244
    3. '           ' → logprob: -3.1581594944000244
    4. ' result' → logprob: -3.4081594944000244
    5. 'if' (adapté à ' if') → logprob: -5.408159255981445
    6. 'result' → logprob: -5.783159255981445
    7. '            ' → logprob: -6.033159255981445
    8. ' ' → logprob: -6.033159255981445
    9. '        ' → logprob: -6.783159255981445
    10. '```' → logprob: -7.408159255981445

Token 80: ' start' (ID: 1604)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.38769838213920593
    2. ' start' → logprob: -1.6376984119415283
    3. 'prev' → logprob: -2.5126984119415283
    4. 'start' → logprob: -3.1376984119415283
    5. ' abs' → logprob: -6.762698173522949
    6. ' end' → logprob: -7.137698173522949
    7. 'end' → logprob: -8.88769817352295
    8. 'abs' → logprob: -8.88769817352295
    9. '(prev' → logprob: -9.38769817352295
    10. ' ' → logprob: -9.51269817352295

Token 81: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5816866755485535
    2. '==' → logprob: -0.8316866755485535
    3. ' !=' → logprob: -6.581686496734619
    4. '<' → logprob: -6.956686496734619
    5. ' <=' → logprob: -7.081686496734619
    6. ' <' → logprob: -7.331686496734619
    7. '<=' → logprob: -7.331686496734619
    8. '<|end|>' → logprob: -7.581686496734619
    9. '!=' → logprob: -7.956686496734619
    10. '=' → logprob: -9.081686973571777

Token 82: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.16022585332393646
    2. ' prev' → logprob: -1.9102258682250977
    3. '	prev' → logprob: -13.535225868225098
    4. '(prev' → logprob: -15.535225868225098
    5. '   ' → logprob: -16.16022491455078
    6. ' ' → logprob: -17.03522491455078
    7. '    ' → logprob: -18.53522491455078
    8. '.prev' → logprob: -18.66022491455078
    9. '_prev' → logprob: -18.66022491455078
    10. '```' → logprob: -18.78522491455078

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006496397312730551
    2. ':
' → logprob: -5.131496429443359
    3. '           ' → logprob: -8.00649642944336
    4. ' :' → logprob: -10.00649642944336
    5. '<|end|>' → logprob: -10.25649642944336
    6. '       ' → logprob: -10.63149642944336
    7. '   ' → logprob: -10.75649642944336
    8. ' and' → logprob: -11.13149642944336
    9. ':return' → logprob: -11.25649642944336
    10. '<|end|>' → logprob: -11.63149642944336

Token 84: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02753094770014286
    2. '           ' → logprob: -3.6525309085845947
    3. '```' → logprob: -7.652531147003174
    4. '       ' → logprob: -8.277530670166016
    5. ':
' → logprob: -8.902530670166016
    6. '   ' → logprob: -9.527530670166016
    7. '<|end|>' → logprob: -9.527530670166016
    8. '                
' → logprob: -10.777530670166016
    9. 'result' → logprob: -10.777530670166016
    10. '``' → logprob: -11.027530670166016

Token 85: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.9934606552124023
    2. '           ' → logprob: -1.4934606552124023
    3. ' result' → logprob: -1.4934606552124023
    4. '               ' → logprob: -2.3684606552124023
    5. '                   ' → logprob: -2.4934606552124023
    6. '   ' → logprob: -6.618460655212402
    7. '```' → logprob: -6.618460655212402
    8. '       ' → logprob: -7.493460655212402
    9. '                ' → logprob: -8.368460655212402
    10. '``' → logprob: -8.618460655212402

Token 86: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005638178437948227
    2. '.' → logprob: -5.255638122558594
    3. '.extend' → logprob: -7.880638122558594
    4. ' .' → logprob: -10.755638122558594
    5. '.add' → logprob: -12.880638122558594
    6. '<|end|>' → logprob: -14.130638122558594
    7. '.app' → logprob: -14.630638122558594
    8. '.Append' → logprob: -14.755638122558594
    9. '.ap' → logprob: -15.505638122558594
    10. 'append' → logprob: -15.755638122558594

Token 87: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.7017115950584412
    2. '(start' → logprob: -0.9517115950584412
    3. '(' → logprob: -2.201711654663086
    4. '(f' → logprob: -5.201711654663086
    5. '('' → logprob: -6.826711654663086
    6. '((' → logprob: -7.201711654663086
    7. '([' → logprob: -8.701711654663086
    8. '("("' → logprob: -11.076711654663086
    9. 'start' → logprob: -11.451711654663086
    10. ' (' → logprob: -11.701711654663086

Token 88: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0006116442382335663
    2. '(' → logprob: -7.500611782073975
    3. 'start' → logprob: -9.750611305236816
    4. '(
' → logprob: -16.500612258911133
    5. '(prev' → logprob: -16.500612258911133
    6. '[start' → logprob: -16.500612258911133
    7. ' start' → logprob: -16.500612258911133
    8. ',start' → logprob: -16.750612258911133
    9. ' (' → logprob: -17.375612258911133
    10. '	start' → logprob: -17.625612258911133

Token 89: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03893793746829033
    2. ')' → logprob: -3.288938045501709
    3. '))
' → logprob: -7.288938045501709
    4. '+' → logprob: -9.78893756866455
    5. '               ' → logprob: -9.91393756866455
    6. '           ' → logprob: -10.03893756866455
    7. '                   ' → logprob: -11.41393756866455
    8. ')))' → logprob: -11.53893756866455
    9. ' ))' → logprob: -11.91393756866455
    10. ')+' → logprob: -11.91393756866455

Token 90: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.859237790107727
    2. ' else' → logprob: -1.109237790107727
    3. '           ' → logprob: -1.484237790107727
    4. '       ' → logprob: -5.1092376708984375
    5. 'elif' → logprob: -5.1092376708984375
    6. '\n' → logprob: -5.4842376708984375
    7. '   ' → logprob: -6.3592376708984375
    8. ' elif' → logprob: -7.3592376708984375
    9. '            
' → logprob: -7.8592376708984375
    10. '               ' → logprob: -8.109237670898438

Token 91: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.35794490575790405
    2. ' else' → logprob: -1.2329449653625488
    3. 'elif' → logprob: -4.857944965362549
    4. '       ' → logprob: -7.857944965362549
    5. '	else' → logprob: -7.982944965362549
    6. '           ' → logprob: -7.982944965362549
    7. ' elif' → logprob: -8.23294448852539
    8. '   ' → logprob: -8.98294448852539
    9. '<|end|>' → logprob: -9.35794448852539
    10. '               ' → logprob: -10.10794448852539

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01736542023718357
    2. '           ' → logprob: -4.767365455627441
    3. '               ' → logprob: -5.267365455627441
    4. ':
' → logprob: -5.892365455627441
    5. '<|end|>' → logprob: -8.767365455627441
    6. ' :' → logprob: -9.017365455627441
    7. '   ' → logprob: -9.142365455627441
    8. '       ' → logprob: -9.392365455627441
    9. '{' → logprob: -9.767365455627441
    10. '[' → logprob: -10.142365455627441

Token 93: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.486343115568161
    2. '               ' → logprob: -1.1113431453704834
    3. ' result' → logprob: -3.1113431453704834
    4. 'result' → logprob: -4.611342906951904
    5. ' f' → logprob: -6.736342906951904
    6. '       ' → logprob: -9.736343383789062
    7. '   ' → logprob: -9.986343383789062
    8. '            ' → logprob: -10.361343383789062
    9. '{' → logprob: -10.611343383789062
    10. 'f' → logprob: -10.611343383789062

Token 94: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.653947651386261
    2. ' result' → logprob: -1.1539475917816162
    3. ' f' → logprob: -2.028947591781616
    4. '           ' → logprob: -4.403947830200195
    5. 'f' → logprob: -4.653947830200195
    6. '               ' → logprob: -4.778947830200195
    7. '   ' → logprob: -6.903947830200195
    8. '                   ' → logprob: -7.028947830200195
    9. ' ' → logprob: -7.903947830200195
    10. '"' → logprob: -8.153947830200195

Token 95: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.233804303221405e-05
    2. '.' → logprob: -9.875092506408691
    3. '.extend' → logprob: -10.125092506408691
    4. 'append' → logprob: -15.125092506408691
    5. '.app' → logprob: -15.375092506408691
    6. ' .' → logprob: -16.500091552734375
    7. '.Append' → logprob: -16.625091552734375
    8. '.setdefault' → logprob: -17.250091552734375
    9. '	append' → logprob: -17.625091552734375
    10. '.ap' → logprob: -17.875091552734375

Token 96: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.03145734220743179
    2. '(str' → logprob: -3.5314574241638184
    3. '(' → logprob: -6.781457424163818
    4. '("{}' → logprob: -7.656457424163818
    5. '("' → logprob: -10.03145694732666
    6. '('{}' → logprob: -10.53145694732666
    7. '('' → logprob: -11.03145694732666
    8. 'f' → logprob: -12.53145694732666
    9. '("("' → logprob: -12.78145694732666
    10. '("-' → logprob: -13.40645694732666

Token 97: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -9.627176768844947e-05
    2. ''{' → logprob: -9.250096321105957
    3. '{' → logprob: -16.50009536743164
    4. '"' → logprob: -17.12509536743164
    5. ' "{' → logprob: -19.75009536743164
    6. '""' → logprob: -20.12509536743164
    7. 'f' → logprob: -20.25009536743164
    8. '("{' → logprob: -20.87509536743164
    9. '   ' → logprob: -21.25009536743164
    10. '`' → logprob: -23.00009536743164

Token 98: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.9361264946837764e-07
    2. ' start' → logprob: -16.5
    3. 'str' → logprob: -20.625
    4. '   ' → logprob: -22.25
    5. '[start' → logprob: -22.25
    6. 'star' → logprob: -22.5
    7. '	start' → logprob: -22.5
    8. 'st' → logprob: -22.75
    9. '{' → logprob: -23.375
    10. 's' → logprob: -23.5

Token 99: '}-{' (ID: 173471)
  Prédit: '}-{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}-{' → logprob: -0.3605785071849823
    2. '-' → logprob: -1.2355785369873047
    3. '}-' → logprob: -4.860578536987305
    4. '}' → logprob: -5.860578536987305
    5. '...' → logprob: -7.235578536987305
    6. '–' → logprob: -7.610578536987305
    7. '}-${' → logprob: -9.610578536987305
    8. '-{' → logprob: -10.360578536987305
    9. '"}' → logprob: -10.610578536987305
    10. '..' → logprob: -10.860578536987305

Token 100: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -2.339278580620885e-06
    2. ' prev' → logprob: -13.000001907348633
    3. '(prev' → logprob: -17.875001907348633
    4. '	prev' → logprob: -18.500001907348633
    5. '{' → logprob: -19.000001907348633
    6. '   ' → logprob: -21.375001907348633
    7. '.prev' → logprob: -21.625001907348633
    8. '           ' → logprob: -21.875001907348633
    9. 'Prev' → logprob: -22.250001907348633
    10. '_prev' → logprob: -22.500001907348633

Token 101: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3168811500072479
    2. '}")' → logprob: -1.5668811798095703
    3. '")
' → logprob: -3.1918811798095703
    4. '}")
' → logprob: -3.9418811798095703
    5. '")
' → logprob: -6.19188117980957
    6. '}")
' → logprob: -9.06688117980957
    7. '}' → logprob: -9.31688117980957
    8. ')")' → logprob: -10.19188117980957
    9. '"}' → logprob: -10.56688117980957
    10. '"' → logprob: -11.06688117980957

Token 102: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09585815668106079
    2. 'start' → logprob: -3.095858097076416
    3. '           ' → logprob: -3.595858097076416
    4. '   ' → logprob: -5.095858097076416
    5. '        
' → logprob: -5.095858097076416
    6. '
' → logprob: -5.595858097076416
    7. '    
' → logprob: -7.220858097076416
    8. ' start' → logprob: -7.595858097076416
    9. '```' → logprob: -7.845858097076416
    10. '            
' → logprob: -7.970858097076416

Token 103: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.053174398839473724
    2. ' start' → logprob: -3.0531744956970215
    3. '
' → logprob: -6.0531744956970215
    4. '\n' → logprob: -6.8031744956970215
    5. ' 
' → logprob: -7.4281744956970215
    6. '           ' → logprob: -8.303174018859863
    7. '``' → logprob: -9.428174018859863
    8. '```' → logprob: -9.803174018859863
    9. '`
' → logprob: -10.303174018859863
    10. '   ' → logprob: -10.678174018859863

Token 104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. '=

' → logprob: -15.663042068481445
    4. '＝' → logprob: -16.163042068481445
    5. '=end' → logprob: -17.288042068481445
    6. '=}' → logprob: -17.663042068481445
    7. '=n' → logprob: -17.913042068481445
    8. '=p' → logprob: -18.038042068481445
    9. '=
' → logprob: -18.663042068481445
    10. '==' → logprob: -18.788042068481445

Token 105: ' pages' (ID: 8537)
  Prédit: 'pages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pages' → logprob: -0.06196858361363411
    2. ' pages' → logprob: -2.8119685649871826
    3. 'prev' → logprob: -15.561968803405762
    4. '.pages' → logprob: -15.686968803405762
    5. 'spaces' → logprob: -16.061967849731445
    6. '   ' → logprob: -16.436967849731445
    7. 'page' → logprob: -16.561967849731445
    8. 'p' → logprob: -16.561967849731445
    9. '_pages' → logprob: -16.936967849731445
    10. ' ' → logprob: -17.311967849731445

Token 106: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0206720617134124e-05
    2. '[' → logprob: -11.50001049041748
    3. 'i' → logprob: -17.500009536743164
    4. '```' → logprob: -17.500009536743164
    5. '[I' → logprob: -19.375009536743164
    6. '\[' → logprob: -20.750009536743164
    7. '`' → logprob: -21.000009536743164
    8. '[index' → logprob: -21.500009536743164
    9. '[ii' → logprob: -21.500009536743164
    10. '   ' → logprob: -21.500009536743164

Token 107: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '           ' (ID: 352)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.2695305049419403
    2. '       ' → logprob: -2.1445305347442627
    3. '   ' → logprob: -2.3945305347442627
    4. '           ' → logprob: -4.019530296325684
    5. ' prev' → logprob: -5.394530296325684
    6. '	prev' → logprob: -5.894530296325684
    7. '```' → logprob: -6.644530296325684
    8. '
' → logprob: -7.644530296325684
    9. '    
' → logprob: -8.269530296325684
    10. '_prev' → logprob: -8.519530296325684

Token 109: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -6.034592388459714e-06
    2. ' prev' → logprob: -12.500005722045898
    3. '           ' → logprob: -13.000005722045898
    4. '       ' → logprob: -17.0000057220459
    5. '	prev' → logprob: -18.3750057220459
    6. '   ' → logprob: -20.2500057220459
    7. '```' → logprob: -20.7500057220459
    8. '.prev' → logprob: -20.8750057220459
    9. '(prev' → logprob: -20.8750057220459
    10. '_prev' → logprob: -23.0000057220459

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38698285818099976
    2. '=' → logprob: -1.1369829177856445
    3. '<|end|>' → logprob: -9.136982917785645
    4. ' ' → logprob: -12.886982917785645
    5. '<|end|>' → logprob: -14.761982917785645
    6. ')' → logprob: -15.511982917785645
    7. ' +=' → logprob: -16.136981964111328
    8. ' =
' → logprob: -16.136981964111328
    9. ' =)' → logprob: -16.136981964111328
    10. '＝' → logprob: -16.386981964111328

Token 111: ' pages' (ID: 8537)
  Prédit: ' pages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pages' → logprob: -0.6931505799293518
    2. 'pages' → logprob: -0.6931505799293518
    3. '.pages' → logprob: -13.693150520324707
    4. 'start' → logprob: -14.318150520324707
    5. ' ' → logprob: -14.818150520324707
    6. '   ' → logprob: -15.068150520324707
    7. 'spaces' → logprob: -15.068150520324707
    8. ' ' → logprob: -16.318151473999023
    9. '_pages' → logprob: -16.443151473999023
    10. '/pages' → logprob: -16.443151473999023

Token 112: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.375000953674316
    3. 'i' → logprob: -14.750000953674316
    4. '[I' → logprob: -18.500001907348633
    5. '```' → logprob: -18.750001907348633
    6. '{i' → logprob: -20.375001907348633
    7. ' [' → logprob: -20.625001907348633
    8. '   ' → logprob: -21.000001907348633
    9. ' i' → logprob: -21.125001907348633
    10. '(i' → logprob: -21.375001907348633

Token 113: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.273621405242011e-05
    2. '   ' → logprob: -11.250032424926758
    3. '}' → logprob: -12.250032424926758
    4. ']' → logprob: -12.250032424926758
    5. '<|end|>' → logprob: -12.625032424926758
    6. ' )' → logprob: -13.000032424926758
    7. ')
' → logprob: -13.875032424926758
    8. '       ' → logprob: -14.000032424926758
    9. '）' → logprob: -15.000032424926758
    10. '})' → logprob: -15.000032424926758

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005313089117407799
    2. 'for' → logprob: -6.130312919616699
    3. '
' → logprob: -6.255312919616699
    4. 'if' → logprob: -7.005312919616699
    5. '    
' → logprob: -9.1303129196167
    6. ' for' → logprob: -9.5053129196167
    7. '```' → logprob: -10.1303129196167
    8. 'while' → logprob: -10.5053129196167
    9. ' if' → logprob: -11.5053129196167
    10. 'else' → logprob: -11.5053129196167

Token 115: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7371791005134583
    2. 'if' → logprob: -0.7371791005134583
    3. ' if' → logprob: -3.3621790409088135
    4. '
' → logprob: -5.112179279327393
    5. '#' (adapté à ' #') → logprob: -6.737179279327393
    6. '```' → logprob: -7.862179279327393
    7. '    
' → logprob: -8.237178802490234
    8. 'for' → logprob: -8.612178802490234
    9. ')' → logprob: -9.237178802490234
    10. ' 
' → logprob: -9.737178802490234

Token 116: ' last' (ID: 2174)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01704542525112629
    2. ' if' → logprob: -4.142045497894287
    3. '#' → logprob: -7.142045497894287
    4. '   ' → logprob: -8.767045021057129
    5. 'while' → logprob: -10.517045021057129
    6. 'for' → logprob: -11.392045021057129
    7. ' #' → logprob: -12.142045021057129
    8. ' at' → logprob: -12.892045021057129
    9. 'At' → logprob: -13.017045021057129
    10. ' ' → logprob: -13.017045021057129

Token 117: ' range' (ID: 3352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17573434114456177
    2. ' if' → logprob: -1.925734281539917
    3. '   ' → logprob: -4.175734519958496
    4. 'else' → logprob: -11.300734519958496
    5. '  ' → logprob: -12.925734519958496
    6. '    
' → logprob: -13.175734519958496
    7. ':' → logprob: -13.300734519958496
    8. ' ' → logprob: -13.425734519958496
    9. '    ' → logprob: -13.425734519958496
    10. '	if' → logprob: -13.675734519958496

Token 118: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011412895284593105
    2. 'if' → logprob: -4.761413097381592
    3. ' if' → logprob: -5.886413097381592
    4. '    
' → logprob: -11.636412620544434
    5. '
' → logprob: -13.011412620544434
    6. '```' → logprob: -13.011412620544434
    7. '<|end|>' → logprob: -13.261412620544434
    8. '	if' → logprob: -14.511412620544434
    9. '    ' → logprob: -14.761412620544434
    10. '       ' → logprob: -14.886412620544434

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039054419845342636
    2. 'if' → logprob: -3.2890543937683105
    3. ' if' → logprob: -6.9140543937683105
    4. '    
' → logprob: -11.789054870605469
    5. '```' → logprob: -12.039054870605469
    6. '
' → logprob: -12.414054870605469
    7. '	if' → logprob: -15.414054870605469
    8. '#' → logprob: -15.539054870605469
    9. '    ' → logprob: -15.664054870605469
    10. '       ' → logprob: -15.789054870605469

Token 120: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001373445731587708
    2. ' if' → logprob: -6.751373291015625
    3. '   ' → logprob: -8.501373291015625
    4. '```' → logprob: -18.251373291015625
    5. '  ' → logprob: -18.626373291015625
    6. ' ' → logprob: -19.126373291015625
    7. '	if' → logprob: -19.126373291015625
    8. '       ' → logprob: -19.376373291015625
    9. 'If' → logprob: -19.751373291015625
    10. '    ' → logprob: -20.751373291015625

Token 121: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.000912774819880724
    2. 'start' → logprob: -7.000912666320801
    3. ' ' → logprob: -13.8759126663208
    4. '	start' → logprob: -16.125913619995117
    5. '(start' → logprob: -16.250913619995117
    6. '[start' → logprob: -16.625913619995117
    7. '<|end|>' → logprob: -18.000913619995117
    8. ' ' → logprob: -18.750913619995117
    9. '  ' → logprob: -19.250913619995117
    10. '=start' → logprob: -19.375913619995117

Token 122: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519367039203644
    2. '==' → logprob: -1.501936674118042
    3. ' ' → logprob: -13.001936912536621
    4. ' !=' → logprob: -13.126936912536621
    5. '=' → logprob: -13.501936912536621
    6. ' ' → logprob: -14.251936912536621
    7. '!=' → logprob: -14.876936912536621
    8. ' =' → logprob: -16.001935958862305
    9. '==
' → logprob: -16.001935958862305
    10. ' <=' → logprob: -16.001935958862305

Token 123: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.006716079078614712
    2. ' prev' → logprob: -5.006716251373291
    3. '	prev' → logprob: -14.381715774536133
    4. '(prev' → logprob: -16.006715774536133
    5. '   ' → logprob: -17.631715774536133
    6. '.prev' → logprob: -18.381715774536133
    7. ' ' → logprob: -18.506715774536133
    8. '_prev' → logprob: -19.006715774536133
    9. 'Prev' → logprob: -19.881715774536133
    10. '    ' → logprob: -20.256715774536133

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008940599858760834
    2. ':
' → logprob: -4.758940696716309
    3. '       ' → logprob: -8.133940696716309
    4. '   ' → logprob: -11.258940696716309
    5. '<|end|>' → logprob: -11.633940696716309
    6. ':

' → logprob: -12.883940696716309
    7. '):' → logprob: -13.133940696716309
    8. '==' → logprob: -13.383940696716309
    9. ' :' → logprob: -13.508940696716309
    10. '):
' → logprob: -14.008940696716309

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004286030773073435
    2. ':' → logprob: -5.87928581237793
    3. '   ' → logprob: -6.62928581237793
    4. ':
' → logprob: -9.00428581237793
    5. 'result' → logprob: -11.62928581237793
    6. ' result' → logprob: -12.12928581237793
    7. ')' → logprob: -12.12928581237793
    8. '<|end|>' → logprob: -12.62928581237793
    9. '           ' → logprob: -12.75428581237793
    10. '):' → logprob: -13.12928581237793

Token 126: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.47699153423309326
    2. ' result' → logprob: -0.9769915342330933
    3. '       ' → logprob: -6.226991653442383
    4. '   ' → logprob: -6.976991653442383
    5. '	result' → logprob: -13.601991653442383
    6. ' ' → logprob: -15.851991653442383
    7. '  ' → logprob: -16.101991653442383
    8. '           ' → logprob: -16.601991653442383
    9. ',result' → logprob: -17.101991653442383
    10. '    ' → logprob: -17.226991653442383

Token 127: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.590104698669165e-05
    2. '.' → logprob: -9.375085830688477
    3. '.extend' → logprob: -14.125085830688477
    4. '.app' → logprob: -16.250085830688477
    5. '.Append' → logprob: -16.750085830688477
    6. 'append' → logprob: -16.875085830688477
    7. '.setdefault' → logprob: -16.875085830688477
    8. '.add' → logprob: -18.000085830688477
    9. ' .' → logprob: -18.375085830688477
    10. ').' → logprob: -18.500085830688477

Token 128: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -1.0564331205387134e-05
    2. 'str' → logprob: -11.50001049041748
    3. '(f' → logprob: -15.37501049041748
    4. '(' → logprob: -16.125011444091797
    5. '[str' → logprob: -17.125011444091797
    6. 'f' → logprob: -19.000011444091797
    7. '=str' → logprob: -19.250011444091797
    8. ' (' → logprob: -19.500011444091797
    9. ' str' → logprob: -19.500011444091797
    10. '(s' → logprob: -21.125011444091797

Token 129: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.008631822653114796
    2. '(prev' → logprob: -4.758631706237793
    3. 'start' → logprob: -11.008631706237793
    4. '(' → logprob: -14.883631706237793
    5. 'prev' → logprob: -16.13363265991211
    6. ' start' → logprob: -16.63363265991211
    7. '(end' → logprob: -17.00863265991211
    8. '[start' → logprob: -18.00863265991211
    9. '(p' → logprob: -18.13363265991211
    10. '(previous' → logprob: -18.13363265991211

Token 130: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009874384850263596
    2. '))' → logprob: -7.000987529754639
    3. ')
' → logprob: -9.50098705291748
    4. '))
' → logprob: -14.62598705291748
    5. '   ' → logprob: -15.62598705291748
    6. ' )' → logprob: -16.250988006591797
    7. ')}' → logprob: -16.500988006591797
    8. ')")' → logprob: -16.500988006591797
    9. '})' → logprob: -16.625988006591797
    10. ')`' → logprob: -16.750988006591797

Token 131: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25411343574523926
    2. '   ' → logprob: -1.5041134357452393
    3. ' else' → logprob: -6.12911319732666
    4. '```' → logprob: -13.25411319732666
    5. '	else' → logprob: -13.75411319732666
    6. '}else' → logprob: -16.129114151000977
    7. '  ' → logprob: -16.254114151000977
    8. ')' → logprob: -16.254114151000977
    9. '    
' → logprob: -16.379114151000977
    10. 'elif' → logprob: -17.129114151000977

Token 132: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.00408801669254899
    2. ' else' → logprob: -5.754087924957275
    3. '   ' → logprob: -7.004087924957275
    4. '	else' → logprob: -13.504088401794434
    5. '```' → logprob: -16.004087448120117
    6. '       ' → logprob: -16.629087448120117
    7. '  ' → logprob: -16.879087448120117
    8. 'elif' → logprob: -17.129087448120117
    9. ')' → logprob: -17.879087448120117
    10. '}else' → logprob: -18.129087448120117

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0678156316280365
    2. '       ' → logprob: -3.1928155422210693
    3. ':
' → logprob: -4.317815780639648
    4. '{' → logprob: -4.567815780639648
    5. '   ' → logprob: -7.567815780639648
    6. '{
' → logprob: -8.567815780639648
    7. '           ' → logprob: -10.817815780639648
    8. ' {' → logprob: -10.942815780639648
    9. '               ' → logprob: -11.067815780639648
    10. ' :' → logprob: -11.567815780639648

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013274075172375888
    2. '               ' → logprob: -10.00013256072998
    3. 'result' → logprob: -10.25013256072998
    4. ' result' → logprob: -10.37513256072998
    5. ' f' → logprob: -11.87513256072998
    6. '   ' → logprob: -12.00013256072998
    7. 'f' → logprob: -12.62513256072998
    8. '           ' → logprob: -13.75013256072998
    9. '```' → logprob: -13.75013256072998
    10. '	result' → logprob: -14.62513256072998

Token 135: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -4.961759259458631e-06
    2. ' result' → logprob: -12.250004768371582
    3. '       ' → logprob: -16.2500057220459
    4. '   ' → logprob: -17.2500057220459
    5. '           ' → logprob: -18.2500057220459
    6. '	result' → logprob: -20.0000057220459
    7. '```' → logprob: -20.7500057220459
    8. 'f' → logprob: -21.6250057220459
    9. '
' → logprob: -22.3750057220459
    10. '$result' → logprob: -22.5000057220459

Token 136: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -13.25000286102295
    3. 'append' → logprob: -13.75000286102295
    4. '.extend' → logprob: -17.250003814697266
    5. '.app' → logprob: -18.875003814697266
    6. 'app' → logprob: -20.750003814697266
    7. ' .' → logprob: -20.750003814697266
    8. '.Append' → logprob: -20.875003814697266
    9. ' append' → logprob: -21.750003814697266
    10. '_append' → logprob: -22.125003814697266

Token 137: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.011048642918467522
    2. 'f' → logprob: -4.511048793792725
    3. ' f' → logprob: -14.511048316955566
    4. ' (' → logprob: -16.261049270629883
    5. '   ' → logprob: -16.886049270629883
    6. '```' → logprob: -17.386049270629883
    7. '	f' → logprob: -17.886049270629883
    8. '(' → logprob: -17.886049270629883
    9. '[f' → logprob: -17.886049270629883
    10. 'F' → logprob: -18.386049270629883

Token 138: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -1.7432603272027336e-06
    2. 'f' → logprob: -14.125001907348633
    3. '("{' → logprob: -14.625001907348633
    4. '{' → logprob: -14.875001907348633
    5. ' "{' → logprob: -15.625001907348633
    6. '"' → logprob: -17.500001907348633
    7. ''{' → logprob: -18.625001907348633
    8. ' f' → logprob: -18.875001907348633
    9. '""' → logprob: -19.500001907348633
    10. '(f' → logprob: -19.750001907348633

Token 139: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -9.088346359931165e-07
    2. '{' → logprob: -14.500000953674316
    3. '"{' → logprob: -15.125000953674316
    4. ' start' → logprob: -15.625000953674316
    5. '(start' → logprob: -19.25
    6. '	start' → logprob: -20.75
    7. '[start' → logprob: -21.125
    8. 'prev' → logprob: -21.375
    9. '"' → logprob: -21.625
    10. 'f' → logprob: -22.0

Token 140: '}-{' (ID: 173471)
  Prédit: '}-{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}-{' → logprob: -0.00011212585377506912
    2. '-{' → logprob: -9.250112533569336
    3. '-' → logprob: -11.750112533569336
    4. '}' → logprob: -12.250112533569336
    5. '}-' → logprob: -13.750112533569336
    6. ' }' → logprob: -14.000112533569336
    7. '}-${' → logprob: -14.125112533569336
    8. '}{' → logprob: -15.625112533569336
    9. '"}' → logprob: -16.250112533569336
    10. '   ' → logprob: -16.375112533569336

Token 141: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -6.2729995988775045e-06
    2. ' prev' → logprob: -12.000006675720215
    3. '(prev' → logprob: -18.5000057220459
    4. '	prev' → logprob: -19.5000057220459
    5. '   ' → logprob: -19.7500057220459
    6. '.prev' → logprob: -21.1250057220459
    7. '       ' → logprob: -22.5000057220459
    8. ')' → logprob: -22.5000057220459
    9. ' ' → logprob: -22.7500057220459
    10. 'pr' → logprob: -22.8750057220459

Token 142: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -8.256334695033729e-05
    2. '")' → logprob: -10.000082969665527
    3. '}")
' → logprob: -10.250082969665527
    4. '}"' → logprob: -14.250082969665527
    5. '"}' → logprob: -14.875082969665527
    6. ')")' → logprob: -14.875082969665527
    7. '}")

' → logprob: -15.625082969665527
    8. '}")
' → logprob: -16.12508201599121
    9. '})' → logprob: -16.87508201599121
    10. '}' → logprob: -17.00008201599121

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02865351177752018
    2. 'print' → logprob: -3.653653621673584
    3. '    
' → logprob: -6.653653621673584
    4. ' print' → logprob: -7.278653621673584
    5. '
' → logprob: -8.028653144836426
    6. '```' → logprob: -10.403653144836426
    7. ' 
' → logprob: -12.403653144836426
    8. '  
' → logprob: -12.903653144836426
    9. '        
' → logprob: -13.153653144836426
    10. '   
' → logprob: -13.528653144836426

Token 144: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01564893312752247
    2. '   ' → logprob: -4.26564884185791
    3. ' print' → logprob: -6.51564884185791
    4. '    
' → logprob: -13.14064884185791
    5. '```' → logprob: -13.64064884185791
    6. '
' → logprob: -14.51564884185791
    7. '	print' → logprob: -14.89064884185791
    8. 'for' → logprob: -15.76564884185791
    9. 'output' → logprob: -17.265649795532227
    10. '#print' → logprob: -17.515649795532227

Token 145: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7015963792800903
    2. '('' → logprob: -0.7015963792800903
    3. '(' → logprob: -4.826596260070801
    4. '("("' → logprob: -8.7015962600708
    5. '(",' → logprob: -9.2015962600708
    6. '(',' → logprob: -10.0765962600708
    7. '(","' → logprob: -10.3265962600708
    8. '"' → logprob: -10.7015962600708
    9. ' ("' → logprob: -11.2015962600708
    10. '(f' → logprob: -11.3265962600708

Token 146: ' ".' (ID: 11730)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031963700894266367
    2. '",' → logprob: -6.6281962394714355
    3. '","' → logprob: -6.7531962394714355
    4. ',",' → logprob: -8.128196716308594
    5. ',"' → logprob: -8.253196716308594
    6. '",".' → logprob: -9.878196716308594
    7. '',' → logprob: -10.503196716308594
    8. ' ,' → logprob: -11.128196716308594
    9. '','.' → logprob: -11.378196716308594
    10. ',
' → logprob: -11.503196716308594

Token 147: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.5048530030981055e-06
    2. ' join' → logprob: -14.125001907348633
    3. 'jo' → logprob: -14.625001907348633
    4. 'j' → logprob: -15.375001907348633
    5. 'print' → logprob: -17.875001907348633
    6. '(join' → logprob: -19.375001907348633
    7. '1' → logprob: -20.125001907348633
    8. 'joins' → logprob: -20.375001907348633
    9. ' ' → logprob: -20.750001907348633
    10. '.join' → logprob: -21.250001907348633

Token 148: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0007142199319787323
    2. 'result' → logprob: -7.250714302062988
    3. '(' → logprob: -12.750714302062988
    4. '[result' → logprob: -14.375714302062988
    5. ')' → logprob: -14.875714302062988
    6. ',result' → logprob: -15.125714302062988
    7. ' result' → logprob: -16.375713348388672
    8. '=result' → logprob: -17.000713348388672
    9. ' (' → logprob: -17.250713348388672
    10. '(results' → logprob: -17.375713348388672

Token 149: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47408103942871094
    2. ')' → logprob: -0.9740810394287109
    3. ')))' → logprob: -13.349081039428711
    4. '())' → logprob: -13.974081039428711
    5. '()))' → logprob: -14.599081039428711
    6. '))
' → logprob: -14.849081039428711
    7. '()' → logprob: -15.224081039428711
    8. ')
' → logprob: -15.349081039428711
    9. '})' → logprob: -16.34908103942871
    10. '])' → logprob: -16.34908103942871


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 147
Tokens correctement prédits (1ère position, stricte): 75
Tokens correctement prédits (1ère position, avec adaptation): 86
Tokens correctement prédits (top 10): 130
Précision stricte (1ère position): 51.02%
Précision adaptée (1ère position): 58.50%
Précision (top 10): 88.44%
================================================================================
