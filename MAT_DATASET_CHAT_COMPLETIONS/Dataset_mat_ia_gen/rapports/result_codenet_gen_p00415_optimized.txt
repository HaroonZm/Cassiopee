================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N,K=map(int,input().split())
a=list(map(int,input().split()))
to_pick=N-K
stack=[]
for x in a:
    while stack and K>0 and stack[-1]<x:
        stack.pop()
        K-=1
    stack.append(x)
print(''.join(map(str,stack[:to_pick])))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',K' (ID: 107147)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5702646970748901
    2. 'map' → logprob: -1.3202646970748901
    3. 'int' → logprob: -2.6952648162841797
    4. ' map' → logprob: -3.0702648162841797
    5. '0' → logprob: -3.9452648162841797
    6. ' input' → logprob: -4.32026481628418
    7. '10' → logprob: -4.82026481628418
    8. ' ' → logprob: -4.94526481628418
    9. ' int' → logprob: -6.19526481628418
    10. 'list' → logprob: -7.07026481628418

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002853255718946457
    2. '<|end|>' → logprob: -6.7528533935546875
    3. '```' → logprob: -7.1278533935546875
    4. '(int' → logprob: -8.002853393554688
    5. '(lambda' → logprob: -8.502853393554688
    6. '(str' → logprob: -10.002853393554688
    7. '[' → logprob: -10.127853393554688
    8. ')' → logprob: -10.252853393554688
    9. '(
' → logprob: -10.627853393554688
    10. '[int' → logprob: -10.627853393554688

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012068906798958778
    2. 'input' → logprob: -5.512068748474121
    3. ',input' → logprob: -5.762068748474121
    4. ')' → logprob: -6.012068748474121
    5. '(' → logprob: -6.137068748474121
    6. ' input' → logprob: -9.262068748474121
    7. '=input' → logprob: -10.137068748474121
    8. ',' → logprob: -11.012068748474121
    9. '[input' → logprob: -11.387068748474121
    10. '(int' → logprob: -11.387068748474121

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6037107706069946
    2. '()' → logprob: -0.8537107706069946
    3. '().' → logprob: -3.978710651397705
    4. ')' → logprob: -6.353710651397705
    5. '();)' → logprob: -6.478710651397705
    6. '());' → logprob: -6.603710651397705
    7. '()>' → logprob: -6.978710651397705
    8. '(' → logprob: -6.978710651397705
    9. '('' → logprob: -7.978710651397705
    10. '()">' → logprob: -8.103711128234863

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00024358915106859058
    2. 'strip' → logprob: -8.375243186950684
    3. ' split' → logprob: -11.500243186950684
    4. ')' → logprob: -13.375243186950684
    5. 'rstrip' → logprob: -14.375243186950684
    6. '(split' → logprob: -14.500243186950684
    7. 'spl' → logprob: -15.750243186950684
    8. 'replace' → logprob: -16.875244140625
    9. 'read' → logprob: -17.000244140625
    10. 'startswith' → logprob: -18.125244140625

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10007886588573456
    2. '())' → logprob: -2.475078821182251
    3. '))' → logprob: -4.72507905960083
    4. '()' → logprob: -6.60007905960083
    5. '`)' → logprob: -7.72507905960083
    6. '()))' → logprob: -8.600078582763672
    7. '(' → logprob: -9.100078582763672
    8. '```' → logprob: -11.225078582763672
    9. ')`' → logprob: -11.350078582763672
    10. '）' → logprob: -11.850078582763672

Token 9: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03876616805791855
    2. 'A' → logprob: -4.663766384124756
    3. 's' → logprob: -4.913766384124756
    4. 'for' → logprob: -5.163766384124756
    5. 'x' → logprob: -6.038766384124756
    6. '#' → logprob: -6.288766384124756
    7. '```' → logprob: -6.288766384124756
    8. 'if' → logprob: -6.413766384124756
    9. '`' → logprob: -6.663766384124756
    10. 'd' → logprob: -6.788766384124756

Token 10: '=list' (ID: 93413)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007854487630538642
    2. '[a' → logprob: -7.8757853507995605
    3. '[i' → logprob: -9.000785827636719
    4. '\[' → logprob: -9.375785827636719
    5. '.' → logprob: -9.500785827636719
    6. '=' → logprob: -10.125785827636719
    7. '[]' → logprob: -10.875785827636719
    8. '[:]' → logprob: -11.250785827636719
    9. 'a' → logprob: -11.375785827636719
    10. '[...]' → logprob: -11.750785827636719

Token 11: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019123381935060024
    2. '(a' → logprob: -6.5019121170043945
    3. '(range' → logprob: -8.001912117004395
    4. '(
' → logprob: -11.251912117004395
    5. '(input' → logprob: -11.251912117004395
    6. '(int' → logprob: -11.626912117004395
    7. 'a' → logprob: -12.251912117004395
    8. '((' → logprob: -12.376912117004395
    9. '(map' → logprob: -12.876912117004395
    10. '(

' → logprob: -12.876912117004395

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004687987733632326
    2. '(' → logprob: -5.379687786102295
    3. '(str' → logprob: -10.754688262939453
    4. '<int' → logprob: -11.004688262939453
    5. '(input' → logprob: -11.379688262939453
    6. 'int' → logprob: -12.754688262939453
    7. '(
' → logprob: -12.754688262939453
    8. '[int' → logprob: -13.004688262939453
    9. '=int' → logprob: -13.004688262939453
    10. '(eval' → logprob: -13.504688262939453

Token 13: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03673350065946579
    2. ',input' → logprob: -3.661733388900757
    3. '(' → logprob: -4.786733627319336
    4. '(int' → logprob: -6.536733627319336
    5. ',' → logprob: -8.286733627319336
    6. ',int' → logprob: -9.161733627319336
    7. ')' → logprob: -9.536733627319336
    8. '=input' → logprob: -9.786733627319336
    9. ' (' → logprob: -9.911733627319336
    10. '<input' → logprob: -11.786733627319336

Token 14: '().' (ID: 1454)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.7675248980522156
    2. '(' → logprob: -1.0175249576568604
    3. '().' → logprob: -3.0175249576568604
    4. '()' → logprob: -3.1425249576568604
    5. '())' → logprob: -3.1425249576568604
    6. '(input' → logprob: -4.267524719238281
    7. '()))' → logprob: -4.517524719238281
    8. ')' → logprob: -5.017524719238281
    9. '))' → logprob: -6.892524719238281
    10. '(len' → logprob: -7.142524719238281

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5776860184123507e-06
    2. ' split' → logprob: -13.75000286102295
    3. '(split' → logprob: -14.12500286102295
    4. 'strip' → logprob: -14.37500286102295
    5. 'spl' → logprob: -16.750001907348633
    6. 'rstrip' → logprob: -18.125001907348633
    7. 'plit' → logprob: -19.750001907348633
    8. ')' → logprob: -20.000001907348633
    9. 's' → logprob: -20.875001907348633
    10. '_split' → logprob: -21.375001907348633

Token 16: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -1.0626685619354248
    2. '()))' → logprob: -1.1876685619354248
    3. ')' → logprob: -1.6876685619354248
    4. '(' → logprob: -2.437668561935425
    5. '())' → logprob: -2.687668561935425
    6. '('' → logprob: -5.562668800354004
    7. '()' → logprob: -5.812668800354004
    8. ')))' → logprob: -7.937668800354004
    9. '`' → logprob: -8.312668800354004
    10. '())))' → logprob: -8.437668800354004

Token 17: 'to' (ID: 935)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5199970006942749
    2. 's' → logprob: -1.644997000694275
    3. 'b' → logprob: -2.7699971199035645
    4. 'd' → logprob: -2.8949971199035645
    5. 'for' → logprob: -3.3949971199035645
    6. 'a' → logprob: -3.5199971199035645
    7. 'count' → logprob: -4.5199971199035645
    8. 'dp' → logprob: -5.3949971199035645
    9. 'result' → logprob: -5.7699971199035645
    10. 'x' → logprob: -6.1449971199035645

Token 18: '_pick' (ID: 139233)
  Prédit: 'tal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tal' → logprob: -0.30894431471824646
    2. 't' → logprob: -1.4339443445205688
    3. 'p' → logprob: -5.058944225311279
    4. 'al' → logprob: -5.433944225311279
    5. '=' → logprob: -5.933944225311279
    6. 'r' → logprob: -6.058944225311279
    7. '_' → logprob: -6.558944225311279
    8. 'u' → logprob: -6.683944225311279
    9. 'uch' → logprob: -7.058944225311279
    10. 'd' → logprob: -7.183944225311279

Token 19: '=N' (ID: 143132)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018886012956500053
    2. '_' → logprob: -4.393886089324951
    3. ' =' → logprob: -5.268886089324951
    4. '_=' → logprob: -7.518886089324951
    5. '=_' → logprob: -8.268885612487793
    6. 's' → logprob: -8.893885612487793
    7. '=int' → logprob: -9.518885612487793
    8. '(' → logprob: -9.768885612487793
    9. '_count' → logprob: -10.018885612487793
    10. '_s' → logprob: -10.893885612487793

Token 20: '-K' (ID: 12249)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27052658796310425
    2. '<|end|>' → logprob: -2.270526647567749
    3. '-' → logprob: -2.895526647567749
    4. '[' → logprob: -4.27052640914917
    5. '*' → logprob: -4.39552640914917
    6. '%' → logprob: -4.77052640914917
    7. '```' → logprob: -5.02052640914917
    8. '\' → logprob: -5.02052640914917
    9. ')' → logprob: -5.39552640914917
    10. ' 
' → logprob: -5.52052640914917

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5621853470802307
    2. '<|end|>' → logprob: -1.312185287475586
    3. '\n' → logprob: -2.687185287475586
    4. '*' → logprob: -3.062185287475586
    5. ' 
' → logprob: -4.937185287475586
    6. '```' → logprob: -5.187185287475586
    7. '
' → logprob: -5.437185287475586
    8. '' → logprob: -5.437185287475586
    9. '[' → logprob: -5.812185287475586
    10. ')' → logprob: -5.812185287475586

Token 22: 'stack' (ID: 15145)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06752350926399231
    2. ' a' → logprob: -3.69252347946167
    3. ' ' → logprob: -4.69252347946167
    4. '.' → logprob: -4.81752347946167
    5. ')' → logprob: -5.31752347946167
    6. ',' → logprob: -6.06752347946167
    7. '=' → logprob: -6.31752347946167
    8. '_' → logprob: -6.44252347946167
    9. '[' → logprob: -6.56752347946167
    10. '\' → logprob: -6.94252347946167

Token 23: '=[]
' (ID: 63466)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1007443219423294
    2. '.append' → logprob: -2.4757442474365234
    3. '=[]' → logprob: -5.350744247436523
    4. ' =' → logprob: -5.725744247436523
    5. '=' → logprob: -5.850744247436523
    6. '.pop' → logprob: -7.850744247436523
    7. '[' → logprob: -9.100744247436523
    8. '=[]
' → logprob: -9.725744247436523
    9. '.push' → logprob: -9.850744247436523
    10. '.setdefault' → logprob: -9.975744247436523

Token 24: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2492147833108902
    2. ' for' → logprob: -1.624214768409729
    3. ' ' → logprob: -4.9992146492004395
    4. '.' → logprob: -5.1242146492004395
    5. '=' → logprob: -5.2492146492004395
    6. '_' → logprob: -6.6242146492004395
    7. ':' → logprob: -7.1242146492004395
    8. '<|end|>' → logprob: -7.1242146492004395
    9. '\' → logprob: -7.4992146492004395
    10. '[' → logprob: -7.9992146492004395

Token 25: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8068335056304932
    2. ' i' → logprob: -0.9318335056304932
    3. 'x' → logprob: -2.806833505630493
    4. 'i' → logprob: -3.306833505630493
    5. ' num' → logprob: -3.431833505630493
    6. ' a' → logprob: -4.306833267211914
    7. ' ' → logprob: -5.681833267211914
    8. 'a' → logprob: -5.681833267211914
    9. 'num' → logprob: -5.681833267211914
    10. ' ai' → logprob: -5.806833267211914

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011096273548901081
    2. 'in' → logprob: -4.511096477508545
    3. ' ' → logprob: -10.136096000671387
    4. '  ' → logprob: -12.511096000671387
    5. 'import' → logprob: -13.511096000671387
    6. '	in' → logprob: -13.636096000671387
    7. '   ' → logprob: -14.386096000671387
    8. 'In' → logprob: -14.886096000671387
    9. 's' → logprob: -15.261096000671387
    10. ' ' → logprob: -15.636096000671387

Token 27: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011048170737922192
    2. ' a' → logprob: -4.511048316955566
    3. 'range' → logprob: -15.636048316955566
    4. '	a' → logprob: -16.26104736328125
    5. ' range' → logprob: -17.01104736328125
    6. ' ' → logprob: -17.26104736328125
    7. '(a' → logprob: -18.38604736328125
    8. '[a' → logprob: -18.63604736328125
    9. '_a' → logprob: -18.63604736328125
    10. '   ' → logprob: -18.88604736328125

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.5491004129871726e-05
    2. ' :' → logprob: -10.375045776367188
    3. '):' → logprob: -12.125045776367188
    4. ':**' → logprob: -12.625045776367188
    5. ':
' → logprob: -12.875045776367188
    6. '>:' → logprob: -14.750045776367188
    7. ',:' → logprob: -15.250045776367188
    8. ')' → logprob: -15.375045776367188
    9. '+:' → logprob: -15.500045776367188
    10. '>' → logprob: -15.875045776367188

Token 29: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.04364495724439621
    2. ' ' → logprob: -3.543644905090332
    3. '<|end|>' → logprob: -4.793644905090332
    4. 'while' → logprob: -6.418644905090332
    5. '   ' → logprob: -6.418644905090332
    6. '	while' → logprob: -7.793644905090332
    7. '  ' → logprob: -8.293644905090332
    8. '    ' → logprob: -8.543644905090332
    9. 'While' → logprob: -8.793644905090332
    10. '```' → logprob: -8.918644905090332

Token 30: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.019687818363308907
    2. ' ' → logprob: -4.644687652587891
    3. 'while' (adapté à ' while') → logprob: -4.644687652587891
    4. '    ' → logprob: -8.64468765258789
    5. ''' → logprob: -11.14468765258789
    6. ' While' → logprob: -11.26968765258789
    7. '  ' → logprob: -11.26968765258789
    8. '   ' → logprob: -11.39468765258789
    9. ' 
' → logprob: -11.89468765258789
    10. '<|end|>' → logprob: -12.01968765258789

Token 31: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.07914578914642334
    2. 'stack' → logprob: -2.579145908355713
    3. ' len' → logprob: -8.704145431518555
    4. '(stack' → logprob: -9.954145431518555
    5. '	stack' → logprob: -10.954145431518555
    6. ' ' → logprob: -11.204145431518555
    7. ' not' → logprob: -12.579145431518555
    8. 'len' → logprob: -12.954145431518555
    9. ' to' → logprob: -13.079145431518555
    10. 'to' → logprob: -13.704145431518555

Token 32: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06995077431201935
    2. 'and' → logprob: -2.694950819015503
    3. '	and' → logprob: -11.819951057434082
    4. ' ' → logprob: -13.069951057434082
    5. 'a' → logprob: -13.194951057434082
    6. ' a' → logprob: -14.069951057434082
    7. '[-' → logprob: -14.194951057434082
    8. '  ' → logprob: -15.319951057434082
    9. '   ' → logprob: -15.444951057434082
    10. ' an' → logprob: -15.819951057434082

Token 33: ' K' (ID: 658)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.26162809133529663
    2. 'stack' → logprob: -2.1366281509399414
    3. ' to' → logprob: -3.0116281509399414
    4. ' x' → logprob: -3.8866281509399414
    5. 'x' → logprob: -4.011628150939941
    6. 'to' → logprob: -4.261628150939941
    7. ' K' → logprob: -5.261628150939941
    8. ' len' → logprob: -6.261628150939941
    9. 'K' → logprob: -6.511628150939941
    10. ' a' → logprob: -7.261628150939941

Token 34: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6466960906982422
    2. ' and' → logprob: -1.1466960906982422
    3. 'and' → logprob: -1.8966960906982422
    4. ' >' → logprob: -4.771696090698242
    5. ' ' → logprob: -13.021696090698242
    6. '```' → logprob: -13.021696090698242
    7. '-' → logprob: -13.521696090698242
    8. ' ' → logprob: -13.646696090698242
    9. '&gt' → logprob: -13.646696090698242
    10. '＞' → logprob: -14.021696090698242

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024839844554662704
    2. ' ' → logprob: -6.00248384475708
    3. ' and' → logprob: -12.502484321594238
    4. 'and' → logprob: -13.002484321594238
    5. '>' → logprob: -14.127484321594238
    6. ' stack' → logprob: -14.502484321594238
    7. '  ' → logprob: -15.377484321594238
    8. 'stack' → logprob: -15.502484321594238
    9. '<|end|>' → logprob: -15.752484321594238
    10. '```' → logprob: -15.877484321594238

Token 36: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.020545274019241333
    2. 'and' → logprob: -3.895545244216919
    3. ' ' → logprob: -13.02054500579834
    4. '	and' → logprob: -14.52054500579834
    5. '<|end|>' → logprob: -15.02054500579834
    6. ' &&' → logprob: -16.520545959472656
    7. '    ' → logprob: -16.645545959472656
    8. ' и' → logprob: -17.395545959472656
    9. '```' → logprob: -17.770545959472656
    10. ' &' → logprob: -17.895545959472656

Token 37: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.1270650178194046
    2. 'stack' → logprob: -2.1270649433135986
    3. 'x' → logprob: -10.00206470489502
    4. ' x' → logprob: -10.00206470489502
    5. '(stack' → logprob: -11.25206470489502
    6. ' a' → logprob: -11.25206470489502
    7. ' ' → logprob: -11.87706470489502
    8. 'a' → logprob: -12.12706470489502
    9. '	stack' → logprob: -12.12706470489502
    10. '_stack' → logprob: -14.37706470489502

Token 38: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.643152740551159e-05
    2. ' and' → logprob: -10.250036239624023
    3. ' [-' → logprob: -14.375036239624023
    4. '```' → logprob: -15.625036239624023
    5. 'and' → logprob: -16.000036239624023
    6. '-' → logprob: -16.250036239624023
    7. '>' → logprob: -16.875036239624023
    8. '.pop' → logprob: -17.875036239624023
    9. '][-' → logprob: -18.125036239624023
    10. ' ' → logprob: -18.500036239624023

Token 39: '1' (ID: 16)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -1.7968515157699585
    2. '()>' → logprob: -1.7968515157699585
    3. '>' → logprob: -1.9218515157699585
    4. ']' → logprob: -2.046851634979248
    5. '()<' → logprob: -2.171851634979248
    6. ']>' → logprob: -2.671851634979248
    7. '()' → logprob: -2.796851634979248
    8. '0' → logprob: -3.671851634979248
    9. ']<' → logprob: -3.796851634979248
    10. '-' → logprob: -4.296851634979248

Token 40: ']<' (ID: 80424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.33479952812194824
    2. '<' → logprob: -1.3347995281219482
    3. ' >' → logprob: -4.334799766540527
    4. ' <' → logprob: -5.084799766540527
    5. '>x' → logprob: -6.709799766540527
    6. '<x' → logprob: -7.334799766540527
    7. ' ' → logprob: -9.959799766540527
    8. '><' → logprob: -10.584799766540527
    9. '```' → logprob: -10.834799766540527
    10. '<int' → logprob: -11.459799766540527

Token 41: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004882152716163546
    2. ' x' → logprob: -7.62548828125
    3. '	x' → logprob: -16.50048828125
    4. '>x' → logprob: -17.75048828125
    5. ''x' → logprob: -18.75048828125
    6. '<x' → logprob: -19.00048828125
    7. ')x' → logprob: -19.25048828125
    8. '"x' → logprob: -19.37548828125
    9. '$x' → logprob: -19.62548828125
    10. ' ' → logprob: -19.62548828125

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08904601633548737
    2. ':
' → logprob: -2.464046001434326
    3. '):
' → logprob: -10.089046478271484
    4. ':
' → logprob: -10.589046478271484
    5. '):' → logprob: -10.964046478271484
    6. 'stack' → logprob: -12.339046478271484
    7. ' stack' → logprob: -12.589046478271484
    8. ':

' → logprob: -13.089046478271484
    9. '   ' → logprob: -13.089046478271484
    10. '_stack' → logprob: -13.339046478271484

Token 43: '       ' (ID: 309)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.5216103792190552
    2. ' stack' → logprob: -1.5216103792190552
    3. '<|end|>' → logprob: -2.5216102600097656
    4. ' 
' → logprob: -3.0216102600097656
    5. ' ' → logprob: -3.6466102600097656
    6. '(stack' → logprob: -4.771610260009766
    7. '   ' → logprob: -5.271610260009766
    8. 'stack' → logprob: -5.521610260009766
    9. '	stack' → logprob: -5.521610260009766
    10. '    ' → logprob: -6.021610260009766

Token 44: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.2152327299118042
    2. ' stack' → logprob: -2.0902328491210938
    3. 'K' → logprob: -3.0902328491210938
    4. ' K' → logprob: -3.7152328491210938
    5. '	stack' → logprob: -9.465232849121094
    6. '   ' → logprob: -11.215232849121094
    7. '(stack' → logprob: -11.590232849121094
    8. '```' → logprob: -12.215232849121094
    9. '    ' → logprob: -12.340232849121094
    10. '`' → logprob: -12.465232849121094

Token 45: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00012523093027994037
    2. '.' → logprob: -9.62512493133545
    3. 'pop' → logprob: -9.75012493133545
    4. ' .' → logprob: -14.75012493133545
    5. '_pop' → logprob: -15.12512493133545
    6. '.append' → logprob: -16.875125885009766
    7. ' pop' → logprob: -16.875125885009766
    8. '.Pop' → logprob: -17.375125885009766
    9. '-pop' → logprob: -18.375125885009766
    10. '.p' → logprob: -18.500125885009766

Token 46: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.12127808178775e-05
    2. '()
' → logprob: -10.000051498413086
    3. '()

' → logprob: -12.625051498413086
    4. '(' → logprob: -14.125051498413086
    5. '()]' → logprob: -14.625051498413086
    6. '()
' → logprob: -14.625051498413086
    7. '()`' → logprob: -15.250051498413086
    8. '();' → logprob: -15.875051498413086
    9. ']()' → logprob: -16.250051498413086
    10. '())' → logprob: -16.500051498413086

Token 47: '       ' (ID: 309)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.0005728095420636237
    2. ' 
' → logprob: -7.875572681427002
    3. 'K' → logprob: -9.12557315826416
    4. ' ' → logprob: -10.25057315826416
    5. '<|end|>' → logprob: -11.12557315826416
    6. '       ' → logprob: -11.37557315826416
    7. '        
' → logprob: -12.37557315826416
    8. '     
' → logprob: -13.00057315826416
    9. '    
' → logprob: -13.25057315826416
    10. ' space' → logprob: -13.75057315826416

Token 48: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' (adapté à ' K') → logprob: -0.0001584850688232109
    2. ' K' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.500158309936523
    4. ' ' → logprob: -18.750158309936523
    5. '  ' → logprob: -19.375158309936523
    6. 'k' → logprob: -19.750158309936523
    7. '>K' → logprob: -19.875158309936523
    8. '	K' → logprob: -19.875158309936523
    9. '    ' → logprob: -20.000158309936523
    10. '1' → logprob: -20.000158309936523

Token 49: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.023961998522281647
    2. '-' → logprob: -3.7739620208740234
    3. ' -=' → logprob: -7.273962020874023
    4. '=' → logprob: -10.898962020874023
    5. '```' → logprob: -12.648962020874023
    6. '<|end|>' → logprob: -14.648962020874023
    7. '+=' → logprob: -15.148962020874023
    8. '–' → logprob: -15.773962020874023
    9. '   ' → logprob: -16.898962020874023
    10. '>' → logprob: -17.148962020874023

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -19.625001907348633
    4. '-' → logprob: -21.000001907348633
    5. '```' → logprob: -21.875001907348633
    6. '۱' → logprob: -21.875001907348633
    7. '１' → logprob: -22.250001907348633
    8. '   ' → logprob: -22.625001907348633
    9. '১' → logprob: -23.000001907348633
    10. '१' → logprob: -23.125001907348633

Token 51: '
' (ID: 198)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.6106414794921875
    2. 'stack' → logprob: -1.7356414794921875
    3. '	stack' → logprob: -2.3606414794921875
    4. '.stack' → logprob: -2.4856414794921875
    5. '```' → logprob: -3.4856414794921875
    6. '(stack' → logprob: -3.7356414794921875
    7. '_stack' → logprob: -3.8606414794921875
    8. '   ' → logprob: -4.4856414794921875
    9. '<|end|>' → logprob: -5.3606414794921875
    10. ')' → logprob: -5.6106414794921875

Token 52: '   ' (ID: 271)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.9218209981918335
    2. ' stack' → logprob: -1.5468209981918335
    3. '```' → logprob: -1.6718209981918335
    4. '   ' → logprob: -2.421821117401123
    5. ')' → logprob: -3.171821117401123
    6. '	stack' → logprob: -3.546821117401123
    7. '.stack' → logprob: -4.671821117401123
    8. '(stack' → logprob: -4.671821117401123
    9. '<|end|>' → logprob: -4.671821117401123
    10. '_stack' → logprob: -5.171821117401123

Token 53: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.001774307806044817
    2. ' stack' → logprob: -6.376774311065674
    3. '.stack' → logprob: -10.126773834228516
    4. '   ' → logprob: -11.251773834228516
    5. '	stack' → logprob: -11.376773834228516
    6. '(stack' → logprob: -12.876773834228516
    7. '_stack' → logprob: -12.876773834228516
    8. '```' → logprob: -13.876773834228516
    9. 'Stack' → logprob: -14.501773834228516
    10. '-stack' → logprob: -14.626773834228516

Token 54: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.215330409351736e-05
    2. '.' → logprob: -10.125041961669922
    3. '.app' → logprob: -13.750041961669922
    4. 'append' → logprob: -15.125041961669922
    5. ' .' → logprob: -15.250041961669922
    6. '.push' → logprob: -15.500041961669922
    7. '.extend' → logprob: -15.625041961669922
    8. '.ap' → logprob: -16.125041961669922
    9. '_append' → logprob: -18.125041961669922
    10. '.Append' → logprob: -18.250041961669922

Token 55: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004078758880496025
    2. '(' → logprob: -5.5040788650512695
    3. ' (' → logprob: -15.87907886505127
    4. 'x' → logprob: -16.379077911376953
    5. '((' → logprob: -17.004077911376953
    6. '(
' → logprob: -17.879077911376953
    7. '()' → logprob: -18.504077911376953
    8. '(token' → logprob: -18.879077911376953
    9. '(value' → logprob: -19.004077911376953
    10. '```' → logprob: -19.254077911376953

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -12.625005722045898
    3. ' )' → logprob: -12.875005722045898
    4. ')return' → logprob: -15.875005722045898
    5. ')

' → logprob: -17.2500057220459
    6. '`)' → logprob: -18.2500057220459
    7. '）' → logprob: -18.5000057220459
    8. '')' → logprob: -18.7500057220459
    9. '))' → logprob: -18.8750057220459
    10. '<|end|>' → logprob: -18.8750057220459

Token 57: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2576794624328613
    2. '```' → logprob: -1.2576794624328613
    3. 'print' → logprob: -1.6326794624328613
    4. ' if' → logprob: -2.7576794624328613
    5. '<|end|>' → logprob: -3.1326794624328613
    6. 'stack' → logprob: -3.6326794624328613
    7. 'for' → logprob: -3.8826794624328613
    8. '[' → logprob: -4.257679462432861
    9. 'while' → logprob: -4.257679462432861
    10. ' 
' → logprob: -4.507679462432861

Token 58: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5062825083732605
    2. '(' → logprob: -1.0062825679779053
    3. '("' → logprob: -4.131282329559326
    4. '(*' → logprob: -4.256282329559326
    5. '(stack' → logprob: -7.006282329559326
    6. '(int' → logprob: -7.631282329559326
    7. 'stack' → logprob: -11.381282806396484
    8. '(str' → logprob: -11.881282806396484
    9. '(*(' → logprob: -11.881282806396484
    10. '((' → logprob: -12.256282806396484

Token 59: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.27858588099479675
    2. ''' → logprob: -1.7785859107971191
    3. ''.' → logprob: -2.653585910797119
    4. ' ''.' → logprob: -5.778585910797119
    5. ' '.' → logprob: -8.028585433959961
    6. '"' → logprob: -8.903585433959961
    7. '*' → logprob: -8.903585433959961
    8. '''' → logprob: -9.903585433959961
    9. ''*' → logprob: -10.028585433959961
    10. ' '' → logprob: -11.153585433959961

Token 60: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.313314952421933e-05
    2. 'j' → logprob: -9.875062942504883
    3. 'jo' → logprob: -11.375062942504883
    4. ' join' → logprob: -17.625062942504883
    5. '```' → logprob: -18.000062942504883
    6. 'joint' → logprob: -18.125062942504883
    7. '/j' → logprob: -18.125062942504883
    8. 'jon' → logprob: -18.125062942504883
    9. '.join' → logprob: -19.000062942504883
    10. 'concat' → logprob: -19.125062942504883

Token 61: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00044175516813993454
    2. 'map' → logprob: -7.750441551208496
    3. '(str' → logprob: -11.625441551208496
    4. '(' → logprob: -14.250441551208496
    5. '(list' → logprob: -14.875441551208496
    6. ',map' → logprob: -14.875441551208496
    7. ')' → logprob: -15.125441551208496
    8. '(stack' → logprob: -15.375441551208496
    9. ' map' → logprob: -15.625441551208496
    10. '```' → logprob: -16.750442504882812

Token 62: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0011790355201810598
    2. 'str' → logprob: -6.751179218292236
    3. '=str' → logprob: -12.376178741455078
    4. '[str' → logprob: -13.126178741455078
    5. ':str' → logprob: -14.001178741455078
    6. ' str' → logprob: -14.626178741455078
    7. ',str' → logprob: -14.876178741455078
    8. '	str' → logprob: -14.876178741455078
    9. '```' → logprob: -15.251178741455078
    10. '(' → logprob: -15.501178741455078

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04911661893129349
    2. '(stack' → logprob: -3.049116611480713
    3. 'stack' → logprob: -7.799116611480713
    4. ',(' → logprob: -10.299117088317871
    5. '(' → logprob: -10.424117088317871
    6. ' stack' → logprob: -10.549117088317871
    7. ' ,' → logprob: -10.924117088317871
    8. '	stack' → logprob: -12.549117088317871
    9. ' (' → logprob: -13.549117088317871
    10. '(Stack' → logprob: -14.049117088317871

Token 64: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0032215642277151346
    2. ' stack' → logprob: -5.75322151184082
    3. '(stack' → logprob: -10.12822151184082
    4. ')' → logprob: -13.62822151184082
    5. '	stack' → logprob: -13.87822151184082
    6. 'st' → logprob: -14.25322151184082
    7. '))' → logprob: -14.25322151184082
    8. 'stackoverflow' → logprob: -15.87822151184082
    9. '.stack' → logprob: -16.37822151184082
    10. ' ' → logprob: -16.50322151184082

Token 65: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0103439437225461
    2. '[to' → logprob: -4.7603440284729
    3. '[:-' → logprob: -6.5103440284729
    4. '[' → logprob: -8.385343551635742
    5. '[-' → logprob: -11.885343551635742
    6. '))' → logprob: -13.260343551635742
    7. '[:]' → logprob: -13.260343551635742
    8. ')))' → logprob: -14.010343551635742
    9. 'to' → logprob: -15.135343551635742
    10. '[from' → logprob: -17.135343551635742

Token 66: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -2.451116051815916e-05
    2. ' to' → logprob: -10.625024795532227
    3. ')' → logprob: -16.375024795532227
    4. '-to' → logprob: -17.250024795532227
    5. 't' → logprob: -18.000024795532227
    6. '[to' → logprob: -18.500024795532227
    7. ' ' → logprob: -19.250024795532227
    8. '))' → logprob: -19.375024795532227
    9. '	to' → logprob: -19.750024795532227
    10. 'N' → logprob: -19.750024795532227

Token 67: '_pick' (ID: 139233)
  Prédit: '_pick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pick' → logprob: -0.00041398804751224816
    2. '_p' → logprob: -7.87541389465332
    3. 'pick' → logprob: -11.50041389465332
    4. '_' → logprob: -12.12541389465332
    5. '-p' → logprob: -12.50041389465332
    6. '_pickle' → logprob: -12.75041389465332
    7. '_pi' → logprob: -12.87541389465332
    8. '_to' → logprob: -13.25041389465332
    9. '_pic' → logprob: -13.37541389465332
    10. '_PICK' → logprob: -14.00041389465332

Token 68: '])))' (ID: 196150)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.007257912307977676
    2. '))' → logprob: -5.50725793838501
    3. ')' → logprob: -5.75725793838501
    4. ']))' → logprob: -11.382257461547852
    5. '))))' → logprob: -13.257257461547852
    6. ')))
' → logprob: -14.382257461547852
    7. '}))' → logprob: -14.882257461547852
    8. ')])' → logprob: -16.50725746154785
    9. '')))' → logprob: -16.50725746154785
    10. '']))' → logprob: -16.63225746154785


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 66
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 46.97%
Précision adaptée (1ère position): 51.52%
Précision (top 10): 80.30%
================================================================================
