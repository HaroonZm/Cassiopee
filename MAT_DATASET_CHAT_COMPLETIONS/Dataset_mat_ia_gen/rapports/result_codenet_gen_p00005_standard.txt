================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

for line in sys.stdin:
    if not line.strip():
        continue
    a, b = map(int, line.split())
    g = math.gcd(a, b)
    l = a // g * b
    print(g, l)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3480074107646942
    2. '\n' → logprob: -2.3480074405670166
    3. 'import' → logprob: -2.7230074405670166
    4. '
' → logprob: -2.9730074405670166
    5. '\' → logprob: -3.2230074405670166
    6. '```' → logprob: -4.2230072021484375
    7. '

' → logprob: -4.5980072021484375
    8. ',' → logprob: -5.7230072021484375
    9. '' → logprob: -5.7230072021484375
    10. '<|end|>' → logprob: -5.8480072021484375

Token 6: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1160240173339844
    2. '.' → logprob: -1.6160240173339844
    3. '\' → logprob: -1.6160240173339844
    4. '```' → logprob: -2.2410240173339844
    5. 'import' → logprob: -2.3660240173339844
    6. 'def' → logprob: -3.6160240173339844
    7. '
' → logprob: -3.7410240173339844
    8. ',' → logprob: -5.241024017333984
    9. '`' → logprob: -5.366024017333984
    10. '#' → logprob: -6.491024017333984

Token 7: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0010865206131711602
    2. '  ' → logprob: -7.001086711883545
    3. ' i' → logprob: -8.751086235046387
    4. ' space' → logprob: -12.876086235046387
    5. ' ```' → logprob: -13.001086235046387
    6. ' ‌' → logprob: -13.626086235046387
    7. '_' → logprob: -13.751086235046387
    8. ' ﻿' → logprob: -13.876086235046387
    9. ' )' → logprob: -14.001086235046387
    10. ' ' → logprob: -14.001086235046387

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.031881414353847504
    2. 'in' → logprob: -3.531881332397461
    3. '[' → logprob: -7.656881332397461
    4. ':' → logprob: -7.781881332397461
    5. '<|end|>' → logprob: -8.531881332397461
    6. 's' → logprob: -8.781881332397461
    7. ' ' → logprob: -8.906881332397461
    8. '(' → logprob: -9.031881332397461
    9. ' =' → logprob: -9.156881332397461
    10. ' :' → logprob: -9.156881332397461

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.006931454874575138
    2. 'sys' → logprob: -5.006931304931641
    3. '=sys' → logprob: -9.13193130493164
    4. ' ' → logprob: -10.63193130493164
    5. '(sys' → logprob: -10.88193130493164
    6. '	sys' → logprob: -10.88193130493164
    7. ' iter' → logprob: -11.25693130493164
    8. 's' → logprob: -11.75693130493164
    9. ' in' → logprob: -12.25693130493164
    10. ' open' → logprob: -12.38193130493164

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.6966567039489746
    2. '.' → logprob: -0.8216567039489746
    3. '.argv' → logprob: -3.6966567039489746
    4. ' .' → logprob: -4.196656703948975
    5. '.readline' → logprob: -4.196656703948975
    6. '.stdout' → logprob: -5.071656703948975
    7. '.input' → logprob: -8.571657180786133
    8. '.stderr' → logprob: -8.946657180786133
    9. '.import' → logprob: -8.946657180786133
    10. '.readlines' → logprob: -9.571657180786133

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012495197588577867
    2. '.readline' → logprob: -7.251249313354492
    3. '.' → logprob: -8.376249313354492
    4. ':
' → logprob: -8.626249313354492
    5. ' :' → logprob: -10.501249313354492
    6. '):' → logprob: -11.126249313354492
    7. ':**' → logprob: -11.126249313354492
    8. '.readlines' → logprob: -11.126249313354492
    9. '[:]' → logprob: -11.751249313354492
    10. '>:' → logprob: -12.251249313354492

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001234399271197617
    2. '    
' → logprob: -7.251234531402588
    3. '    ' → logprob: -8.75123405456543
    4. ' if' → logprob: -9.25123405456543
    5. ' readline' → logprob: -9.62623405456543
    6. ' ' → logprob: -10.12623405456543
    7. '```' → logprob: -10.50123405456543
    8. ' print' → logprob: -10.50123405456543
    9. ' line' → logprob: -11.12623405456543
    10. '   ' → logprob: -11.12623405456543

Token 13: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004146899562329054
    2. ' line' → logprob: -5.629147052764893
    3. ' if' → logprob: -8.504146575927734
    4. '    ' → logprob: -9.504146575927734
    5. ' stripped' → logprob: -9.629146575927734
    6. 'line' → logprob: -9.754146575927734
    7. ' print' → logprob: -10.129146575927734
    8. '    
' → logprob: -10.754146575927734
    9. 'print' → logprob: -10.754146575927734
    10. '```' → logprob: -11.754146575927734

Token 14: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.24986273050308228
    2. ' not' → logprob: -1.6248626708984375
    3. ' ' → logprob: -3.8748626708984375
    4. 'line' → logprob: -5.9998626708984375
    5. ' len' → logprob: -7.7498626708984375
    6. ''' → logprob: -8.624862670898438
    7. 'not' → logprob: -8.749862670898438
    8. ' ' → logprob: -9.874862670898438
    9. '"' → logprob: -9.999862670898438
    10. '	line' → logprob: -11.374862670898438

Token 15: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0005075189401395619
    2. 'line' → logprob: -7.625507354736328
    3. ' ' → logprob: -11.000507354736328
    4. '	line' → logprob: -13.500507354736328
    5. '(line' → logprob: -14.750507354736328
    6. '=line' → logprob: -15.000507354736328
    7. ' ' → logprob: -15.125507354736328
    8. '#line' → logprob: -16.500507354736328
    9. '[line' → logprob: -16.625507354736328
    10. ' lines' → logprob: -16.750507354736328

Token 16: '.strip' (ID: 40613)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08034117519855499
    2. '.strip' → logprob: -2.580341100692749
    3. '.rstrip' → logprob: -6.830341339111328
    4. '.startswith' → logprob: -8.205341339111328
    5. ' .' → logprob: -9.455341339111328
    6. '.endswith' → logprob: -12.455341339111328
    7. '.readline' → logprob: -12.705341339111328
    8. '   ' → logprob: -12.830341339111328
    9. 'rstrip' → logprob: -13.455341339111328
    10. 'strip' → logprob: -13.580341339111328

Token 17: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06248496472835541
    2. ':' → logprob: -2.8124849796295166
    3. ' ():' → logprob: -8.187484741210938
    4. ' :' → logprob: -9.187484741210938
    5. '():
' → logprob: -9.687484741210938
    6. '()' → logprob: -10.187484741210938
    7. ':return' → logprob: -11.562484741210938
    8. '):' → logprob: -11.937484741210938
    9. '.:' → logprob: -12.937484741210938
    10. '.' → logprob: -13.062484741210938

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017446136102080345
    2. ' continue' → logprob: -4.142446041107178
    3. '   ' → logprob: -7.142446041107178
    4. 'continue' → logprob: -7.517446041107178
    5. ' break' → logprob: -10.267446517944336
    6. ' continues' → logprob: -11.517446517944336
    7. '	continue' → logprob: -11.767446517944336
    8. '    ' → logprob: -12.267446517944336
    9. '_continue' → logprob: -12.767446517944336
    10. '<|end|>' → logprob: -12.767446517944336

Token 19: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6476861834526062
    2. ' break' → logprob: -0.8976861834526062
    3. '   ' → logprob: -2.772686243057251
    4. 'break' → logprob: -5.147686004638672
    5. ' continue' → logprob: -7.272686004638672
    6. '```' → logprob: -9.522686004638672
    7. 'continue' (adapté à ' continue') → logprob: -9.772686004638672
    8. ' ' → logprob: -9.897686004638672
    9. '	break' → logprob: -10.397686004638672
    10. '    ' → logprob: -11.772686004638672

Token 20: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006864794064313173
    2. '    
' → logprob: -5.00686502456665
    3. '        
' → logprob: -10.006864547729492
    4. '
' → logprob: -10.131864547729492
    5. '```' → logprob: -10.881864547729492
    6. '       ' → logprob: -12.006864547729492
    7. '     
' → logprob: -12.131864547729492
    8. '    ' → logprob: -12.256864547729492
    9. '   
' → logprob: -12.381864547729492
    10. '    
    
' → logprob: -12.381864547729492

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000521577603649348
    2. '    
' → logprob: -7.750521659851074
    3. '```' → logprob: -9.625521659851074
    4. ':' → logprob: -11.250521659851074
    5. '
' → logprob: -12.375521659851074
    6. 'print' → logprob: -13.375521659851074
    7. '       ' → logprob: -13.500521659851074
    8. '        
' → logprob: -14.250521659851074
    9. 'for' → logprob: -14.750521659851074
    10. '   
' → logprob: -14.875521659851074

Token 22: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021360700950026512
    2. 'data' → logprob: -4.521360874176025
    3. 'tokens' → logprob: -5.771360874176025
    4. 'value' → logprob: -6.521360874176025
    5. 'values' → logprob: -7.021360874176025
    6. ' data' → logprob: -7.146360874176025
    7. 'result' → logprob: -7.521360874176025
    8. ' tokens' → logprob: -7.646360874176025
    9. 'numbers' → logprob: -7.646360874176025
    10. ' numbers' → logprob: -7.771360874176025

Token 23: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5659976601600647
    2. ',' → logprob: -1.06599760055542
    3. '=' → logprob: -2.94099760055542
    4. ' ' → logprob: -3.94099760055542
    5. ' ,' → logprob: -4.44099760055542
    6. 'r' → logprob: -6.94099760055542
    7. ',b' → logprob: -7.06599760055542
    8. 'dd' → logprob: -8.565998077392578
    9. ',d' → logprob: -8.565998077392578
    10. '   ' → logprob: -8.815998077392578

Token 24: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1658974289894104
    2. 'b' → logprob: -1.9158973693847656
    3. ' ' → logprob: -5.290897369384766
    4. ' =' → logprob: -8.540897369384766
    5. ' line' → logprob: -8.665897369384766
    6. '=' → logprob: -8.790897369384766
    7. '=line' → logprob: -10.290897369384766
    8. 'line' → logprob: -11.665897369384766
    9. '<|end|>' → logprob: -11.790897369384766
    10. '=b' → logprob: -12.165897369384766

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03809128701686859
    2. '=' → logprob: -3.2880911827087402
    3. ',' → logprob: -10.038091659545898
    4. ' ' → logprob: -13.163091659545898
    5. ')' → logprob: -13.288091659545898
    6. ' ,' → logprob: -14.538091659545898
    7. '=line' → logprob: -14.663091659545898
    8. ' =
' → logprob: -14.913091659545898
    9. '  ' → logprob: -15.538091659545898
    10. '<|end|>' → logprob: -15.788091659545898

Token 26: ' map' (ID: 4014)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.2652499675750732
    2. ' map' → logprob: -1.3902499675750732
    3. 'map' → logprob: -1.3902499675750732
    4. 'line' → logprob: -1.5152499675750732
    5. '[line' → logprob: -11.015250205993652
    6. ' ' → logprob: -11.140250205993652
    7. '[' → logprob: -12.015250205993652
    8. ' [' → logprob: -12.390250205993652
    9. '(line' → logprob: -13.015250205993652
    10. '   ' → logprob: -13.265250205993652

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5243970155715942
    2. '(' → logprob: -1.0243970155715942
    3. '(str' → logprob: -3.0243968963623047
    4. '(float' → logprob: -8.274396896362305
    5. '(lambda' → logprob: -8.774396896362305
    6. '(
' → logprob: -10.774396896362305
    7. '(eval' → logprob: -11.024396896362305
    8. '(list' → logprob: -11.149396896362305
    9. 'int' → logprob: -12.149396896362305
    10. '(tuple' → logprob: -12.274396896362305

Token 28: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.04844246059656143
    2. ')' → logprob: -3.5484423637390137
    3. ',line' → logprob: -4.798442363739014
    4. ',' → logprob: -5.298442363739014
    5. ' line' → logprob: -5.548442363739014
    6. 'line' → logprob: -6.798442363739014
    7. '[line' → logprob: -9.173442840576172
    8. '=line' → logprob: -9.548442840576172
    9. '	line' → logprob: -10.173442840576172
    10. '#line' → logprob: -10.798442840576172

Token 29: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.31326788663864136
    2. 'line' → logprob: -1.3132679462432861
    3. '(line' → logprob: -13.188267707824707
    4. '	line' → logprob: -13.563267707824707
    5. '   ' → logprob: -13.938267707824707
    6. '[line' → logprob: -14.188267707824707
    7. ' ' → logprob: -14.438267707824707
    8. '=line' → logprob: -14.938267707824707
    9. ')' → logprob: -15.563267707824707
    10. '#line' → logprob: -16.063268661499023

Token 30: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.16240283846855164
    2. '.split' → logprob: -1.912402868270874
    3. '.' → logprob: -6.162402629852295
    4. '.rstrip' → logprob: -9.912403106689453
    5. ' .' → logprob: -11.912403106689453
    6. ').' → logprob: -12.162403106689453
    7. '().' → logprob: -12.787403106689453
    8. '.readline' → logprob: -12.912403106689453
    9. ')' → logprob: -13.412403106689453
    10. 'strip' → logprob: -14.787403106689453

Token 31: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.08321133255958557
    2. '())' → logprob: -2.5832114219665527
    3. '(','' → logprob: -6.083211421966553
    4. '()' → logprob: -6.583211421966553
    5. '(' → logprob: -7.833211421966553
    6. '("' → logprob: -9.083210945129395
    7. ')' → logprob: -9.833210945129395
    8. '(',' → logprob: -10.458210945129395
    9. '("("' → logprob: -10.958210945129395
    10. '()))' → logprob: -10.958210945129395

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11441722512245178
    2. '
' → logprob: -2.989417314529419
    3. ':' → logprob: -3.989417314529419
    4. '    
' → logprob: -4.23941707611084
    5. '<|end|>' → logprob: -4.73941707611084
    6. ' if' → logprob: -5.98941707611084
    7. '   
' → logprob: -6.11441707611084
    8. '  
' → logprob: -6.11441707611084
    9. ',' → logprob: -6.23941707611084
    10. ':
' → logprob: -6.73941707611084

Token 33: ' g' (ID: 329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10254686325788498
    2. '    
' → logprob: -2.7275469303131104
    3. ' if' → logprob: -4.852546691894531
    4. 'print' → logprob: -5.352546691894531
    5. '
' → logprob: -5.602546691894531
    6. 'result' → logprob: -5.852546691894531
    7. ' result' → logprob: -5.977546691894531
    8. ' print' → logprob: -6.102546691894531
    9. ' 
' → logprob: -6.352546691894531
    10. '     
' → logprob: -6.477546691894531

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2331179678440094
    2. '=' → logprob: -1.983117938041687
    3. 'cd' → logprob: -2.7331180572509766
    4. '=g' → logprob: -5.608118057250977
    5. '=a' → logprob: -7.733118057250977
    6. ' ' → logprob: -7.733118057250977
    7. 'a' → logprob: -8.358118057250977
    8. 'c' → logprob: -8.858118057250977
    9. '=int' → logprob: -8.983118057250977
    10. 'g' → logprob: -9.358118057250977

Token 35: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.02630157396197319
    2. 'math' → logprob: -3.651301622390747
    3. ' ' → logprob: -14.526301383972168
    4. '(math' → logprob: -15.026301383972168
    5. '   ' → logprob: -15.776301383972168
    6. ' a' → logprob: -16.276302337646484
    7. 'a' → logprob: -16.526302337646484
    8. '.math' → logprob: -17.026302337646484
    9. ' gcd' → logprob: -17.026302337646484
    10. 'g' → logprob: -18.151302337646484

Token 36: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.011536635458469391
    2. '.' → logprob: -4.761536598205566
    3. '.sqrt' → logprob: -5.886536598205566
    4. '.ceil' → logprob: -10.261536598205566
    5. '.atan' → logprob: -10.511536598205566
    6. ' gcd' → logprob: -10.886536598205566
    7. ' .' → logprob: -11.386536598205566
    8. '.com' → logprob: -11.511536598205566
    9. '.factor' → logprob: -12.136536598205566
    10. '.floor' → logprob: -12.511536598205566

Token 37: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -3.2020991056924686e-05
    2. 'cf' → logprob: -11.625032424926758
    3. 'cdn' → logprob: -12.250032424926758
    4. 'cdf' → logprob: -12.500032424926758
    5. 'g' → logprob: -12.875032424926758
    6. '```' → logprob: -13.500032424926758
    7. 'a' → logprob: -13.750032424926758
    8. 'CD' → logprob: -14.125032424926758
    9. 'cm' → logprob: -14.250032424926758
    10. 'st' → logprob: -14.250032424926758

Token 38: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.52919222577475e-05
    2. '(' → logprob: -9.500075340270996
    3. 'a' → logprob: -15.375075340270996
    4. '(
' → logprob: -16.00007438659668
    5. ' (' → logprob: -17.50007438659668
    6. '((' → logprob: -18.12507438659668
    7. '(abs' → logprob: -18.62507438659668
    8. ')' → logprob: -19.00007438659668
    9. '(g' → logprob: -19.37507438659668
    10. '(b' → logprob: -19.75007438659668

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009357105940580368
    2. ',b' → logprob: -4.75935697555542
    3. ' ,' → logprob: -7.38435697555542
    4. 'b' → logprob: -9.134357452392578
    5. ',g' → logprob: -12.259357452392578
    6. ' b' → logprob: -12.384357452392578
    7. ',
' → logprob: -12.759357452392578
    8. ' ' → logprob: -14.384357452392578
    9. 'g' → logprob: -15.384357452392578
    10. ')' → logprob: -15.509357452392578

Token 40: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0889434963464737
    2. ' b' → logprob: -2.4639434814453125
    3. ')b' → logprob: -13.088943481445312
    4. ' ' → logprob: -14.088943481445312
    5. '   ' → logprob: -14.463943481445312
    6. ')' → logprob: -15.338943481445312
    7. '    ' → logprob: -16.338943481445312
    8. '	b' → logprob: -16.588943481445312
    9. ' ' → logprob: -16.901443481445312
    10. '  ' → logprob: -16.963943481445312

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009282566024921834
    2. ')
' → logprob: -7.0009284019470215
    3. '   ' → logprob: -11.750927925109863
    4. '))' → logprob: -12.250927925109863
    5. ')
' → logprob: -13.875927925109863
    6. ',' → logprob: -14.125927925109863
    7. ')

' → logprob: -14.500927925109863
    8. ' )' → logprob: -14.750927925109863
    9. '),' → logprob: -15.125927925109863
    10. ')a' → logprob: -15.875927925109863

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06750345230102539
    2. '    
' → logprob: -3.6925034523010254
    3. 'print' → logprob: -3.8175034523010254
    4. '
' → logprob: -4.317503452301025
    5. '\n' → logprob: -5.942503452301025
    6. '```' → logprob: -7.067503452301025
    7. ' print' → logprob: -7.192503452301025
    8. '   
' → logprob: -9.067502975463867
    9. 'if' → logprob: -9.317502975463867
    10. '     
' → logprob: -9.317502975463867

Token 43: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10344459861516953
    2. 'print' → logprob: -3.1034445762634277
    3. '    
' → logprob: -3.7284445762634277
    4. ' print' → logprob: -4.228444576263428
    5. '     
' → logprob: -5.728444576263428
    6. ' 
' → logprob: -6.353444576263428
    7. '```' → logprob: -6.603444576263428
    8. '    ' → logprob: -6.728444576263428
    9. '\n' → logprob: -6.728444576263428
    10. '
' → logprob: -6.853444576263428

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759928226470947
    2. ' =' → logprob: -0.8259928226470947
    3. ',' → logprob: -10.575992584228516
    4. 'cm' → logprob: -11.825992584228516
    5. ' ' → logprob: -12.450992584228516
    6. '   ' → logprob: -13.075992584228516
    7. 'l' → logprob: -13.325992584228516
    8. '=int' → logprob: -13.575992584228516
    9. '=l' → logprob: -13.825992584228516
    10. 's' → logprob: -13.825992584228516

Token 45: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.33141735196113586
    2. 'a' → logprob: -1.7064173221588135
    3. ' (' → logprob: -2.5814173221588135
    4. '(a' → logprob: -3.7064173221588135
    5. '(' → logprob: -8.581417083740234
    6. ' ' → logprob: -9.081417083740234
    7. ' abs' → logprob: -10.456417083740234
    8. '(abs' → logprob: -12.456417083740234
    9. 'abs' → logprob: -12.706417083740234
    10. '	a' → logprob: -13.331417083740234

Token 46: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9078077673912048
    2. '//' → logprob: -1.0328078269958496
    3. '*' → logprob: -1.9078078269958496
    4. ' //' → logprob: -2.4078078269958496
    5. '*b' → logprob: -6.53280782699585
    6. '*l' → logprob: -7.65780782699585
    7. ' ' → logprob: -9.032807350158691
    8. '<|end|>' → logprob: -10.407807350158691
    9. ' ' → logprob: -11.282807350158691
    10. '**' → logprob: -11.407807350158691

Token 47: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -7.896309739408025e-07
    2. ' g' → logprob: -14.125000953674316
    3. ' ' → logprob: -20.625
    4. '	g' → logprob: -21.375
    5. 'b' → logprob: -21.75
    6. '_g' → logprob: -21.75
    7. '   ' → logprob: -22.125
    8. '  ' → logprob: -22.375
    9. '/g' → logprob: -22.75
    10. ''g' → logprob: -23.0

Token 48: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11665860563516617
    2. '*' → logprob: -2.3666586875915527
    3. '*b' → logprob: -4.116658687591553
    4. ' ' → logprob: -11.866658210754395
    5. '*l' → logprob: -12.366658210754395
    6. '*g' → logprob: -12.741658210754395
    7. ' b' → logprob: -13.616658210754395
    8. 'b' → logprob: -14.241658210754395
    9. '**' → logprob: -15.116658210754395
    10. ',' → logprob: -15.241658210754395

Token 49: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020473242329899222
    2. ' b' → logprob: -8.500205039978027
    3. '(b' → logprob: -13.750205039978027
    4. ' (' → logprob: -16.37520408630371
    5. '(' → logprob: -17.00020408630371
    6. '   ' → logprob: -19.25020408630371
    7. '	b' → logprob: -20.12520408630371
    8. '  ' → logprob: -20.12520408630371
    9. ' ' → logprob: -20.37520408630371
    10. '_b' → logprob: -21.25020408630371

Token 50: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25056472420692444
    2. 'print' → logprob: -2.3755648136138916
    3. '
' → logprob: -2.5005648136138916
    4. ' print' → logprob: -4.0005645751953125
    5. '    
' → logprob: -4.0005645751953125
    6. ' 
' → logprob: -6.3755645751953125
    7. ')' → logprob: -6.6255645751953125
    8. '  
' → logprob: -6.6255645751953125
    9. '
' → logprob: -7.1255645751953125
    10. '\n' → logprob: -7.1255645751953125

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3760474920272827
    2. 'print' → logprob: -1.3760474920272827
    3. '
' → logprob: -3.1260476112365723
    4. ' print' → logprob: -5.376047611236572
    5. '    
' → logprob: -5.376047611236572
    6. ')' → logprob: -6.251047611236572
    7. '<|end|>' → logprob: -6.501047611236572
    8. '  
' → logprob: -7.126047611236572
    9. ' 
' → logprob: -7.501047611236572
    10. ' ' → logprob: -7.751047611236572

Token 52: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.488980770111084
    2. '   ' → logprob: -0.988980770111084
    3. ' print' → logprob: -4.238980770111084
    4. '    
' → logprob: -8.613981246948242
    5. '
' → logprob: -9.988981246948242
    6. '	print' → logprob: -10.488981246948242
    7. '```' → logprob: -10.738981246948242
    8. ')' → logprob: -10.988981246948242
    9. '.print' → logprob: -11.363981246948242
    10. ',' → logprob: -11.613981246948242

Token 53: '(g' (ID: 7791)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0016573284519836307
    2. '(' → logprob: -6.501657485961914
    3. '(g' → logprob: -9.126657485961914
    4. '(f' → logprob: -10.251657485961914
    5. '(a' → logprob: -12.501657485961914
    6. 'l' → logprob: -12.876657485961914
    7. ' (' → logprob: -13.001657485961914
    8. '()' → logprob: -13.251657485961914
    9. '((' → logprob: -15.501657485961914
    10. '(ll' → logprob: -16.251657485961914

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004528150428086519
    2. ',l' → logprob: -6.129528045654297
    3. ')' → logprob: -6.379528045654297
    4. ' ,' → logprob: -7.379528045654297
    5. ',)' → logprob: -12.004528045654297
    6. ',g' → logprob: -12.629528045654297
    7. ' ' → logprob: -12.754528045654297
    8. ' )' → logprob: -13.379528045654297
    9. ',
' → logprob: -13.879528045654297
    10. ',ll' → logprob: -14.004528045654297

Token 55: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001937558175995946
    2. ' l' → logprob: -6.251937389373779
    3. ')' → logprob: -12.501937866210938
    4. ',' → logprob: -12.626937866210938
    5. ',l' → logprob: -13.626937866210938
    6. ' ' → logprob: -15.376937866210938
    7. ' ,' → logprob: -16.126937866210938
    8. '"' → logprob: -16.376937866210938
    9. '   ' → logprob: -16.876937866210938
    10. ' )' → logprob: -17.001937866210938

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.500001907348633
    4. '))' → logprob: -16.375001907348633
    5. ')`' → logprob: -16.625001907348633
    6. '')' → logprob: -18.375001907348633
    7. ')")' → logprob: -18.625001907348633
    8. '),' → logprob: -18.625001907348633
    9. ')**' → logprob: -18.750001907348633
    10. '   ' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 54
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 48
Précision stricte (1ère position): 44.44%
Précision adaptée (1ère position): 46.30%
Précision (top 10): 88.89%
================================================================================
