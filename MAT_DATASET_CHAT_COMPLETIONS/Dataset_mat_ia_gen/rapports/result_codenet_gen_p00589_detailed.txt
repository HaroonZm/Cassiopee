================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Définition des mappings des touches vers leurs caractères correspondants
# Chaque bouton (1 à 9) est associé à une chaîne de caractères cycle, la position dans cette chaîne
# dépend du nombre de pressions consécutives sur la même touche.
# Le bouton 0 est un cas spécial géré à part.
BUTTON_MAP = {
    '1': "',.?!' ",  # Bouton 1 cycle sur les caractères ',.?!'
    '2': "abcABC",
    '3': "defDEF",
    '4': "ghiGHI",
    '5': "jklJKL",
    '6': "mnoMNO",
    '7': "pqrsPQRS",
    '8': "tuvTUV",
    '9': "wxyzWXYZ"
}

def decode_line(line):
    """
    Décode une ligne de séquence de bouton en texte lisible selon les règles du problème.
    """
    result = []
    i = 0
    n = len(line)

    while i < n:
        current_char = line[i]

        if current_char == '0':
            # Cas du bouton 0
            # On compte le nombre de 0 consécutifs
            zero_count = 1
            i += 1
            while i < n and line[i] == '0':
                zero_count += 1
                i += 1
            # Si plusieurs 0 consécutifs, on affiche (zero_count -1) espaces
            # Sinon un seul 0 isolé n'arrive pas selon l'énoncé (jamais au début)
            # donc ici toujours >=1
            if zero_count == 1:
                # un seul 0, ce cas n'est pas censé arriver selon l'énoncé (il ne pousse jamais 0 au début)
                # mais si cela arrive, on considère que ça active la saisie continue
                # => on ne produit pas de caractère immédiat, on poursuit
                pass
            else:
                spaces_count = zero_count -1
                result.append(' ' * spaces_count)
        else:
            # Boutons 1 à 9
            # Compter le nombre de pressions consécutives sur la même touche
            count = 1
            i += 1
            while i < n and line[i] == current_char:
                count += 1
                i += 1

            # Si la touche précédente est la même que la touche courante,
            # on doit gérer la saisie continue activée par le bouton 0.
            # Or l'énoncé précise que 0 permet d'entrer plusieurs fois la même touche en série.

            # Donc sans 0 entre deux séries de la même touche, on a un seul groupe.
            # Ici on décode simplement en utilisant le nombre de pressions modulo la longueur
            chars = BUTTON_MAP[current_char]
            length = len(chars)
            # La position du caractère est (count-1) modulo la longueur du cycle
            pos = (count - 1) % length
            result.append(chars[pos])

    return ''.join(result)

import sys

for line in sys.stdin:
    line = line.strip()
    if not line:
        continue
    # Ligne décodée
    decoded = decode_line(line)
    print(decoded)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dé' (ID: 27247)
  → Token d'amorce (pas de prédiction)

Token 2: 'fin' (ID: 6994)
  → Token d'amorce (pas de prédiction)

Token 3: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.02890322357416153
    2. 'i' → logprob: -4.403903007507324
    3. 'ition' → logprob: -5.153903007507324
    4. 't' → logprob: -6.528903007507324
    5. 'ini' → logprob: -6.528903007507324
    6. 'ine' → logprob: -6.528903007507324
    7. '#' → logprob: -6.778903007507324
    8. 'in' → logprob: -7.403903007507324
    9. 'init' → logprob: -7.653903007507324
    10. '```' → logprob: -7.778903007507324

Token 4: ' des' (ID: 731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18563023209571838
    2. ' :' → logprob: -2.6856303215026855
    3. 's' → logprob: -3.1856303215026855
    4. ' ' → logprob: -4.3106303215026855
    5. '```' → logprob: -4.5606303215026855
    6. ' d' → logprob: -4.5606303215026855
    7. '_' → logprob: -5.3106303215026855
    8. '(' → logprob: -5.4356303215026855
    9. '=' → logprob: -5.5606303215026855
    10. ' de' → logprob: -5.5606303215026855

Token 5: ' mappings' (ID: 96933)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.7846707105636597
    2. 'fon' → logprob: -1.0346707105636597
    3. 'variables' → logprob: -2.409670829772949
    4. 'fonction' → logprob: -2.909670829772949
    5. 'types' → logprob: -4.659670829772949
    6. ' classes' → logprob: -4.784670829772949
    7. ' fonctions' → logprob: -5.034670829772949
    8. 'class' → logprob: -5.534670829772949
    9. '_' → logprob: -5.784670829772949
    10. 'f' → logprob: -5.909670829772949

Token 6: ' des' (ID: 731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7735561728477478
    2. 'm' → logprob: -1.3985562324523926
    3. 'mapping' → logprob: -2.3985562324523926
    4. '_' → logprob: -3.0235562324523926
    5. '_mapping' → logprob: -3.3985562324523926
    6. '=' → logprob: -3.6485562324523926
    7. '#' → logprob: -3.7735562324523926
    8. '```' → logprob: -4.148556232452393
    9. ' :' → logprob: -4.523556232452393
    10. '[' → logprob: -4.773556232452393

Token 7: ' touches' (ID: 45060)
  Prédit: 'types'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'types' → logprob: -0.364914208650589
    2. 't' → logprob: -2.6149141788482666
    3. 'm' → logprob: -3.1149141788482666
    4. 'car' → logprob: -3.3649141788482666
    5. 'ch' → logprob: -3.9899141788482666
    6. 'variables' → logprob: -3.9899141788482666
    7. 'c' → logprob: -4.114914417266846
    8. 'tokens' → logprob: -4.239914417266846
    9. 'cl' → logprob: -4.364914417266846
    10. 'type' → logprob: -4.864914417266846

Token 8: ' vers' (ID: 3640)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.23235966265201569
    2. ':' → logprob: -2.9823596477508545
    3. 't' → logprob: -3.6073596477508545
    4. ' =' → logprob: -3.9823596477508545
    5. '=' → logprob: -4.107359886169434
    6. 'key' → logprob: -4.357359886169434
    7. 'mapping' → logprob: -4.357359886169434
    8. '#' → logprob: -4.607359886169434
    9. '_' → logprob: -4.607359886169434
    10. 'M' → logprob: -4.857359886169434

Token 9: ' leurs' (ID: 16348)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.660793125629425
    2. ' leurs' → logprob: -1.0357930660247803
    3. 'leurs' → logprob: -3.0357930660247803
    4. ' actions' → logprob: -4.035793304443359
    5. 'des' → logprob: -4.410793304443359
    6. 'leur' → logprob: -4.535793304443359
    7. 'actions' → logprob: -5.160793304443359
    8. ' ' → logprob: -5.410793304443359
    9. ' la' → logprob: -5.535793304443359
    10. '#' → logprob: -5.660793304443359

Token 10: ' caractères' (ID: 183106)
  Prédit: 'actions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actions' → logprob: -0.3611765503883362
    2. 'fon' → logprob: -1.8611764907836914
    3. ' actions' → logprob: -2.8611764907836914
    4. ' fonctions' → logprob: -2.9861764907836914
    5. 'fonction' → logprob: -3.4861764907836914
    6. 'command' → logprob: -6.611176490783691
    7. ' caractères' → logprob: -6.861176490783691
    8. 'sign' → logprob: -7.111176490783691
    9. ' commandes' → logprob: -7.361176490783691
    10. 'codes' → logprob: -7.361176490783691

Token 11: ' correspond' (ID: 11095)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.30340775847435
    2. 't' → logprob: -2.178407669067383
    3. '```' → logprob: -3.053407669067383
    4. 'mapping' → logprob: -3.428407669067383
    5. '_' → logprob: -3.553407669067383
    6. 'key' → logprob: -4.678407669067383
    7. 'keys' → logprob: -5.553407669067383
    8. '_mapping' → logprob: -5.928407669067383
    9. 'space' → logprob: -6.053407669067383
    10. '#' → logprob: -6.053407669067383

Token 12: 'ants' (ID: 2027)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5355560183525085
    2. 'ance' → logprob: -1.4105560779571533
    3. 'ents' → logprob: -2.9105560779571533
    4. 'ants' → logprob: -3.1605560779571533
    5. 'ances' → logprob: -3.6605560779571533
    6. 'an' → logprob: -4.035555839538574
    7. 'é' → logprob: -4.410555839538574
    8. '```' → logprob: -5.160555839538574
    9. 'anç' → logprob: -5.285555839538574
    10. 'á' → logprob: -6.535555839538574

Token 13: '
' (ID: 198)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6104475855827332
    2. '_' → logprob: -1.735447645187378
    3. 't' → logprob: -2.485447645187378
    4. 'space' → logprob: -2.985447645187378
    5. 's' → logprob: -3.360447645187378
    6. '```' → logprob: -3.360447645187378
    7. 'mapping' → logprob: -3.985447645187378
    8. 'key' → logprob: -4.985447406768799
    9. 'a' → logprob: -5.360447406768799
    10. ''' → logprob: -5.735447406768799

Token 14: '#' (ID: 2)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7288029193878174
    2. '_' → logprob: -1.4788029193878174
    3. 't' → logprob: -2.3538029193878174
    4. 'a' → logprob: -2.6038029193878174
    5. 's' → logprob: -3.8538029193878174
    6. '```' → logprob: -3.8538029193878174
    7. '[' → logprob: -4.353802680969238
    8. ' ' → logprob: -4.978802680969238
    9. 'T' → logprob: -5.353802680969238
    10. 'e' → logprob: -5.478802680969238

Token 15: ' Chaque' (ID: 94758)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.3069689273834229
    2. 'a' → logprob: -1.4319689273834229
    3. 't' → logprob: -2.431968927383423
    4. ' ' → logprob: -2.931968927383423
    5. '_' → logprob: -3.181968927383423
    6. 'mapping' → logprob: -3.556968927383423
    7. ' _' → logprob: -3.806968927383423
    8. ' #' → logprob: -3.806968927383423
    9. ' m' → logprob: -3.806968927383423
    10. ' ```' → logprob: -3.931968927383423

Token 16: ' bouton' (ID: 80635)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9801029562950134
    2. ' touche' → logprob: -1.4801030158996582
    3. ' mapping' → logprob: -1.7301030158996582
    4. 'mapping' → logprob: -2.730103015899658
    5. 'ligne' → logprob: -3.355103015899658
    6. ' lettre' → logprob: -3.730103015899658
    7. 'lett' → logprob: -4.355103015899658
    8. ' ligne' → logprob: -4.355103015899658
    9. 'car' → logprob: -4.605103015899658
    10. 'touch' → logprob: -4.980103015899658

Token 17: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5783765316009521
    2. ' ' → logprob: -1.3283765316009521
    3. 's' → logprob: -3.203376531600952
    4. ' est' → logprob: -3.828376531600952
    5. ' :' → logprob: -4.078376770019531
    6. ' =' → logprob: -4.328376770019531
    7. ' a' → logprob: -4.578376770019531
    8. ',' → logprob: -4.578376770019531
    9. '_button' → logprob: -4.953376770019531
    10. ' correspond' → logprob: -5.453376770019531

Token 18: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16337615251541138
    2. ' )' → logprob: -2.5383760929107666
    3. 's' → logprob: -3.6633760929107666
    4. ' ' → logprob: -4.663376331329346
    5. ',' → logprob: -4.913376331329346
    6. '#' → logprob: -5.288376331329346
    7. '_' → logprob: -5.788376331329346
    8. ' bouton' → logprob: -6.163376331329346
    9. ' est' → logprob: -6.288376331329346
    10. ' clavier' → logprob: -6.538376331329346

Token 19: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6076245307922363
    2. '0' → logprob: -1.2326245307922363
    3. ',' → logprob: -2.2326245307922363
    4. ' )' → logprob: -3.6076245307922363
    5. ' à' → logprob: -5.232624530792236
    6. '2' → logprob: -5.482624530792236
    7. ' ' → logprob: -5.732624530792236
    8. ' ,' → logprob: -5.982624530792236
    9. '-' → logprob: -6.232624530792236
    10. 'er' → logprob: -6.357624530792236

Token 20: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.10279203951358795
    2. ' ' → logprob: -3.2277920246124268
    3. '4' → logprob: -4.102792263031006
    4. '6' → logprob: -4.227792263031006
    5. '3' → logprob: -4.727792263031006
    6. '5' → logprob: -5.227792263031006
    7. '16' → logprob: -5.477792263031006
    8. '12' → logprob: -6.102792263031006
    9. '36' → logprob: -7.227792263031006
    10. '20' → logprob: -7.352792263031006

Token 21: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.09753821045160294
    2. '4' → logprob: -3.8475382328033447
    3. '16' → logprob: -3.8475382328033447
    4. '3' → logprob: -4.472537994384766
    5. '5' → logprob: -4.597537994384766
    6. '12' → logprob: -4.597537994384766
    7. '6' → logprob: -4.722537994384766
    8. '20' → logprob: -6.097537994384766
    9. '10' → logprob: -6.597537994384766
    10. '8' → logprob: -6.722537994384766

Token 22: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04853740334510803
    2. ' )' → logprob: -3.673537492752075
    3. ',' → logprob: -3.923537492752075
    4. ' ,' → logprob: -6.673537254333496
    5. ' ' → logprob: -8.298537254333496
    6. '#' → logprob: -8.923537254333496
    7. ' ' → logprob: -9.423537254333496
    8. ' et' → logprob: -9.923537254333496
    9. ' est' → logprob: -9.923537254333496
    10. ' a' → logprob: -10.423537254333496

Token 23: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25467753410339355
    2. ' ' → logprob: -2.1296775341033936
    3. ' =' → logprob: -4.379677772521973
    4. ' :' → logprob: -4.379677772521973
    5. '_mapping' → logprob: -4.379677772521973
    6. ':' → logprob: -4.754677772521973
    7. ' est' → logprob: -4.754677772521973
    8. 's' → logprob: -5.004677772521973
    9. ')' → logprob: -5.004677772521973
    10. ' _' → logprob: -5.129677772521973

Token 24: ' associé' (ID: 152099)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.11554062366485596
    2. 'm' → logprob: -2.7405405044555664
    3. ' associé' → logprob: -3.3655405044555664
    4. ' un' → logprob: -6.365540504455566
    5. '```' → logprob: -6.990540504455566
    6. 'assign' → logprob: -7.115540504455566
    7. 'ass' → logprob: -7.240540504455566
    8. ' associ' → logprob: -7.365540504455566
    9. 'un' → logprob: -7.740540504455566
    10. 'mapped' → logprob: -7.865540504455566

Token 25: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.010928144678473473
    2. 'à' → logprob: -5.260928153991699
    3. ' au' → logprob: -6.010928153991699
    4. ' aux' → logprob: -6.385928153991699
    5. ' a' → logprob: -7.510928153991699
    6. ''à' → logprob: -7.885928153991699
    7. '```' → logprob: -8.8859281539917
    8. 'e' → logprob: -9.1359281539917
    9. 'au' → logprob: -9.2609281539917
    10. 's' → logprob: -10.0109281539917

Token 26: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5791014432907104
    2. ' une' → logprob: -1.2041014432907104
    3. 'une' → logprob: -2.8291015625
    4. 'un' → logprob: -3.3291015625
    5. ''un' → logprob: -4.7041015625
    6. 'a' → logprob: -4.8291015625
    7. ' a' → logprob: -4.9541015625
    8. 'son' → logprob: -5.4541015625
    9. ''une' → logprob: -5.4541015625
    10. ' son' → logprob: -5.5791015625

Token 27: ' chaîne' (ID: 89288)
  Prédit: ' lettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lettre' → logprob: -0.38843098282814026
    2. ' liste' → logprob: -2.0134310722351074
    3. ' chaîne' → logprob: -2.2634310722351074
    4. 'lett' → logprob: -3.1384310722351074
    5. 'liste' → logprob: -4.388431072235107
    6. 'chaine' → logprob: -4.888431072235107
    7. ' chaine' → logprob: -6.013431072235107
    8. 'fonction' → logprob: -6.138431072235107
    9. 'ch' → logprob: -6.263431072235107
    10. ' fonction' → logprob: -6.388431072235107

Token 28: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.16472357511520386
    2. '_' → logprob: -2.7897236347198486
    3. 'de' → logprob: -3.4147236347198486
    4. 'vide' → logprob: -3.4147236347198486
    5. ' =' → logprob: -5.4147233963012695
    6. '"' → logprob: -5.6647233963012695
    7. 's' → logprob: -5.7897233963012695
    8. ' :' → logprob: -6.7897233963012695
    9. ' vide' → logprob: -6.7897233963012695
    10. '_de' → logprob: -7.0397233963012695

Token 29: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6362147927284241
    2. ' caractères' → logprob: -0.7612147927284241
    3. 'chars' → logprob: -6.761214733123779
    4. '```' → logprob: -7.261214733123779
    5. 'char' → logprob: -8.386215209960938
    6. 'characters' → logprob: -8.636215209960938
    7. ' caracteres' → logprob: -8.886215209960938
    8. 'texte' → logprob: -9.136215209960938
    9. 'text' → logprob: -9.136215209960938
    10. ' ' → logprob: -9.136215209960938

Token 30: ' cycle' (ID: 15839)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3301701545715332
    2. 's' → logprob: -1.4551701545715332
    3. ',' → logprob: -2.080170154571533
    4. '_' → logprob: -2.205170154571533
    5. ' :' → logprob: -2.455170154571533
    6. '[' → logprob: -3.455170154571533
    7. ' ,' → logprob: -3.955170154571533
    8. '.' → logprob: -4.080170154571533
    9. '\' → logprob: -4.205170154571533
    10. ' =' → logprob: -4.330170154571533

Token 31: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4382949471473694
    2. '_' → logprob: -1.3132948875427246
    3. 'e' → logprob: -4.063294887542725
    4. 'd' → logprob: -4.438294887542725
    5. ':' → logprob: -4.688294887542725
    6. ' =' → logprob: -4.813294887542725
    7. 'r' → logprob: -4.938294887542725
    8. '"' → logprob: -5.188294887542725
    9. ',' → logprob: -5.313294887542725
    10. 'es' → logprob: -5.813294887542725

Token 32: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1316975355148315
    2. ' ' → logprob: -2.381697654724121
    3. ''' → logprob: -2.631697654724121
    4. 'e' → logprob: -2.756697654724121
    5. '```' → logprob: -2.756697654724121
    6. 'es' → logprob: -2.881697654724121
    7. '#' → logprob: -3.131697654724121
    8. ',' → logprob: -3.381697654724121
    9. ' '' → logprob: -3.506697654724121
    10. '"' → logprob: -3.506697654724121

Token 33: ' position' (ID: 4010)
  Prédit: 'quelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quelle' → logprob: -0.17386934161186218
    2. 's' → logprob: -3.1738693714141846
    3. 'qu' → logprob: -3.2988693714141846
    4. ' ' → logprob: -3.5488693714141846
    5. 'quel' → logprob: -3.5488693714141846
    6. '#' → logprob: -5.0488691329956055
    7. ' première' → logprob: -5.7988691329956055
    8. ' quelle' → logprob: -5.7988691329956055
    9. '  ' → logprob: -6.6738691329956055
    10. ' #' → logprob: -7.0488691329956055

Token 34: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0702681839466095
    2. 's' → logprob: -3.945268154144287
    3. ' actuelle' → logprob: -4.320268154144287
    4. '_act' → logprob: -4.445268154144287
    5. ' _' → logprob: -5.195268154144287
    6. ' ' → logprob: -5.195268154144287
    7. '_current' → logprob: -5.570268154144287
    8. '_s' → logprob: -5.945268154144287
    9. ' suivante' → logprob: -6.195268154144287
    10. ')' → logprob: -7.820268154144287

Token 35: ' cette' (ID: 7696)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4590545892715454
    2. ' cette' → logprob: -1.8340545892715454
    3. ' la' → logprob: -1.9590545892715454
    4. 'c' → logprob: -4.334054470062256
    5. 'le' → logprob: -4.334054470062256
    6. 'celle' → logprob: -4.584054470062256
    7. ' laquelle' → logprob: -5.209054470062256
    8. '```' → logprob: -6.146554470062256
    9. 'l' → logprob: -6.334054470062256
    10. ' celle' → logprob: -6.334054470062256

Token 36: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.043212246149778366
    2. 'chaine' → logprob: -3.6682121753692627
    3. ' chaine' → logprob: -5.043212413787842
    4. ' ' → logprob: -5.418212413787842
    5. 'cha' → logprob: -6.293212413787842
    6. 's' → logprob: -7.480712413787842
    7. '#' → logprob: -7.730712413787842
    8. ' string' → logprob: -8.043211936950684
    9. ' liste' → logprob: -8.168211936950684
    10. ' cycle' → logprob: -8.293211936950684

Token 37: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9262449145317078
    2. ' ' → logprob: -1.8012449741363525
    3. '.' → logprob: -2.5512449741363525
    4. ',' → logprob: -3.0512449741363525
    5. ' ,' → logprob: -3.1762449741363525
    6. ''' → logprob: -3.3012449741363525
    7. ')' → logprob: -3.5512449741363525
    8. 'es' → logprob: -3.8012449741363525
    9. '<|end|>' → logprob: -3.8012449741363525
    10. '[' → logprob: -3.9262449741363525

Token 38: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7513553500175476
    2. 's' → logprob: -2.3763554096221924
    3. ' est' → logprob: -2.7513554096221924
    4. ',' → logprob: -2.8763554096221924
    5. ' ,' → logprob: -3.0013554096221924
    6. '_' → logprob: -3.0013554096221924
    7. ')' → logprob: -3.1263554096221924
    8. ' correspond' → logprob: -3.6263554096221924
    9. ' =' → logprob: -3.7513554096221924
    10. 'es' → logprob: -4.376355171203613

Token 39: ' dépend' (ID: 68660)
  Prédit: ' correspond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.2953451871871948
    2. ' ' → logprob: -2.1703453063964844
    3. ' est' → logprob: -2.9203453063964844
    4. ' indique' → logprob: -3.9203453063964844
    5. ' représente' → logprob: -4.045345306396484
    6. ' #' → logprob: -5.045345306396484
    7. ' corresponds' → logprob: -5.420345306396484
    8. ' de' → logprob: -5.545345306396484
    9. 'cor' → logprob: -5.670345306396484
    10. 's' → logprob: -5.670345306396484

Token 40: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1415785253047943
    2. ' du' → logprob: -2.141578435897827
    3. ' des' → logprob: -4.766578674316406
    4. 'ra' → logprob: -5.891578674316406
    5. ' ' → logprob: -7.016578674316406
    6. 'du' → logprob: -7.516578674316406
    7. 's' → logprob: -7.766578674316406
    8. ' d' → logprob: -7.891578674316406
    9. 'de' → logprob: -7.891578674316406
    10. ' ' → logprob: -9.391578674316406

Token 41: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.7092933058738708
    2. 'nombre' → logprob: -0.8342933058738708
    3. 'press' → logprob: -4.834293365478516
    4. ' app' → logprob: -5.084293365478516
    5. ' code' → logprob: -5.209293365478516
    6. 'app' → logprob: -5.209293365478516
    7. 'pression' → logprob: -5.459293365478516
    8. ' cycle' → logprob: -5.459293365478516
    9. 'clic' → logprob: -5.459293365478516
    10. ' contexte' → logprob: -5.709293365478516

Token 42: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5273838639259338
    2. ' d' → logprob: -2.277383804321289
    3. ' de' → logprob: -2.527383804321289
    4. 's' → logprob: -2.902383804321289
    5. ' ' → logprob: -3.027383804321289
    6. '_de' → logprob: -3.277383804321289
    7. '_d' → logprob: -3.402383804321289
    8. '_app' → logprob: -4.402383804321289
    9. ' _' → logprob: -5.027383804321289
    10. '_s' → logprob: -5.652383804321289

Token 43: ' press' (ID: 4989)
  Prédit: ' press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' press' → logprob: -0.7180378437042236
    2. ' app' → logprob: -0.8430378437042236
    3. ' ' → logprob: -3.9680378437042236
    4. 'press' → logprob: -4.0930376052856445
    5. 'app' → logprob: -4.3430376052856445
    6. ' presses' → logprob: -4.3430376052856445
    7. 'pressions' → logprob: -5.5930376052856445
    8. ' frapp' → logprob: -5.5930376052856445
    9. ' ' → logprob: -5.9680376052856445
    10. ' pression' → logprob: -5.9680376052856445

Token 44: 'ions' (ID: 756)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.5884581208229065
    2. 'ions' → logprob: -0.8384581208229065
    3. 'i' → logprob: -4.713458061218262
    4. 'e' → logprob: -6.088458061218262
    5. 'es' → logprob: -7.713458061218262
    6. 'é' → logprob: -8.088458061218262
    7. 'ionn' → logprob: -9.463458061218262
    8. 'és' → logprob: -9.588458061218262
    9. 'io' → logprob: -9.838458061218262
    10. 'iom' → logprob: -10.213458061218262

Token 45: ' cons' (ID: 1473)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28380292654037476
    2. ':' → logprob: -2.2838029861450195
    3. '[' → logprob: -3.0338029861450195
    4. ' ' → logprob: -3.5338029861450195
    5. 's' → logprob: -4.0338029861450195
    6. ' :' → logprob: -4.1588029861450195
    7. '```' → logprob: -5.0338029861450195
    8. ',' → logprob: -5.1588029861450195
    9. '\' → logprob: -5.6588029861450195
    10. 'es' → logprob: -6.0338029861450195

Token 46: 'écut' (ID: 96392)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.1384003758430481
    2. 'écut' → logprob: -2.1384003162384033
    3. 'éc' → logprob: -5.513400554656982
    4. 'è' → logprob: -6.388400554656982
    5. 'ér' → logprob: -6.888400554656982
    6. 't' → logprob: -7.388400554656982
    7. 'ç' → logprob: -7.513400554656982
    8. 'écution' → logprob: -8.013400077819824
    9. 'e' → logprob: -8.138400077819824
    10. '#' → logprob: -8.263400077819824

Token 47: 'ives' (ID: 2264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6434696316719055
    2. '_' → logprob: -1.6434695720672607
    3. 's' → logprob: -2.0184695720672607
    4. 'es' → logprob: -2.7684695720672607
    5. '.' → logprob: -4.01846981048584
    6. 'e' → logprob: -4.14346981048584
    7. ',' → logprob: -4.14346981048584
    8. 'u' → logprob: -5.51846981048584
    9. ' (' → logprob: -5.64346981048584
    10. ' ,' → logprob: -5.64346981048584

Token 48: ' sur' (ID: 1512)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09846219420433044
    2. ':' → logprob: -3.4734621047973633
    3. ' ' → logprob: -3.9734621047973633
    4. '[' → logprob: -4.223462104797363
    5. ' :' → logprob: -4.973462104797363
    6. ',' → logprob: -5.223462104797363
    7. 's' → logprob: -5.598462104797363
    8. '```' → logprob: -6.348462104797363
    9. '.' → logprob: -6.473462104797363
    10. 'e' → logprob: -6.723462104797363

Token 49: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.027235521003603935
    2. 'la' → logprob: -3.902235507965088
    3. ' le' → logprob: -5.902235507965088
    4. 'une' → logprob: -6.527235507965088
    5. ' une' → logprob: -6.902235507965088
    6. 'le' → logprob: -7.277235507965088
    7. ' ' → logprob: -7.527235507965088
    8. ' ' → logprob: -10.027235984802246
    9. ' cette' → logprob: -10.152235984802246
    10. ' chaque' → logprob: -10.152235984802246

Token 50: ' même' (ID: 9679)
  Prédit: ' touche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' touche' → logprob: -0.442533016204834
    2. ' même' → logprob: -1.192533016204834
    3. 't' → logprob: -4.067533016204834
    4. ' bouton' → logprob: -4.067533016204834
    5. 'bout' → logprob: -4.567533016204834
    6. ' ' → logprob: -5.442533016204834
    7. ' ' → logprob: -6.192533016204834
    8. 'm' → logprob: -6.692533016204834
    9. ' t' → logprob: -7.442533016204834
    10. ' touches' → logprob: -7.942533016204834

Token 51: ' touche' (ID: 77303)
  Prédit: ' touche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' touche' → logprob: -0.5323795676231384
    2. 't' → logprob: -0.9073795676231384
    3. ' bouton' → logprob: -6.282379627227783
    4. 'touch' → logprob: -6.532379627227783
    5. ' ' → logprob: -6.782379627227783
    6. 'bout' → logprob: -6.782379627227783
    7. ' ' → logprob: -6.907379627227783
    8. '```' → logprob: -7.032379627227783
    9. 'ligne' → logprob: -7.407379627227783
    10. ' t' → logprob: -8.407379150390625

Token 52: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022853245958685875
    2. '[' → logprob: -5.022853374481201
    3. ' ' → logprob: -5.647853374481201
    4. 's' → logprob: -5.897853374481201
    5. ':' → logprob: -6.147853374481201
    6. ',' → logprob: -6.272853374481201
    7. ' =' → logprob: -7.272853374481201
    8. ' _' → logprob: -7.522853374481201
    9. '```' → logprob: -7.647853374481201
    10. '#' → logprob: -8.022852897644043

Token 53: '#' (ID: 2)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10758978128433228
    2. ' ' → logprob: -3.8575897216796875
    3. 't' → logprob: -4.2325897216796875
    4. '```' → logprob: -4.3575897216796875
    5. 'a' → logprob: -4.7325897216796875
    6. 'm' → logprob: -4.9825897216796875
    7. ' :' → logprob: -5.4825897216796875
    8. 's' → logprob: -5.6075897216796875
    9. ':' → logprob: -5.6075897216796875
    10. 'space' → logprob: -5.7325897216796875

Token 54: ' Le' (ID: 2018)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0295225381851196
    2. '_' → logprob: -1.6545225381851196
    3. ' ' → logprob: -1.7795225381851196
    4. 'm' → logprob: -1.9045225381851196
    5. 'a' → logprob: -2.90452241897583
    6. 'space' → logprob: -4.52952241897583
    7. 'c' → logprob: -5.02952241897583
    8. '[' → logprob: -5.15452241897583
    9. ' _' → logprob: -5.15452241897583
    10. 'mapping' → logprob: -5.27952241897583

Token 55: ' bouton' (ID: 80635)
  Prédit: ' mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mapping' → logprob: -0.8261547088623047
    2. ' code' → logprob: -1.3261547088623047
    3. 's' → logprob: -2.9511547088623047
    4. ' mappings' → logprob: -2.9511547088623047
    5. '_' → logprob: -3.4511547088623047
    6. 'm' → logprob: -3.9511547088623047
    7. 'mapping' → logprob: -3.9511547088623047
    8. ' ' → logprob: -4.201154708862305
    9. ' espace' → logprob: -4.326154708862305
    10. 'c' → logprob: -4.576154708862305

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7287176251411438
    2. '1' → logprob: -1.353717565536499
    3. 's' → logprob: -1.853717565536499
    4. ' est' → logprob: -3.978717565536499
    5. '```' → logprob: -4.353717803955078
    6. ' (' → logprob: -4.728717803955078
    7. '(' → logprob: -4.978717803955078
    8. ' '' → logprob: -4.978717803955078
    9. ''' → logprob: -5.228717803955078
    10. ' "' → logprob: -5.478717803955078

Token 57: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32722800970077515
    2. ''' → logprob: -1.45222806930542
    3. '"' → logprob: -4.07722806930542
    4. '0' → logprob: -4.70222806930542
    5. ' '' → logprob: -4.82722806930542
    6. ' ' → logprob: -5.32722806930542
    7. '2' → logprob: -5.95222806930542
    8. ''app' → logprob: -7.32722806930542
    9. ''est' → logprob: -7.70222806930542
    10. '`' → logprob: -8.077227592468262

Token 58: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.13032394647598267
    2. ' correspond' → logprob: -2.505323886871338
    3. ' ' → logprob: -4.130323886871338
    4. 'est' → logprob: -5.380323886871338
    5. ''' → logprob: -6.005323886871338
    6. '#' → logprob: -6.380323886871338
    7. ' représente' → logprob: -6.505323886871338
    8. ' permet' → logprob: -6.630323886871338
    9. '```' → logprob: -6.630323886871338
    10. ''est' → logprob: -6.755323886871338

Token 59: ' un' (ID: 537)
  Prédit: ' associé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' associé' → logprob: -0.15955229103565216
    2. ' utilisé' → logprob: -3.0345523357391357
    3. ' m' → logprob: -3.1595523357391357
    4. ' ' → logprob: -4.659552097320557
    5. ' lié' → logprob: -4.784552097320557
    6. ' l' → logprob: -5.659552097320557
    7. ' associ' → logprob: -5.659552097320557
    8. ' espace' → logprob: -5.909552097320557
    9. ' mapped' → logprob: -6.034552097320557
    10. '"' → logprob: -6.034552097320557

Token 60: ' cas' (ID: 2108)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.5422104001045227
    2. 'es' → logprob: -0.9172104001045227
    3. ''espace' → logprob: -4.917210578918457
    4. 'esp' → logprob: -5.042210578918457
    5. ' caractère' → logprob: -7.167210578918457
    6. ' sépar' → logprob: -7.292210578918457
    7. '_' → logprob: -7.667210578918457
    8. 'space' → logprob: -7.792210578918457
    9. ' espaces' → logprob: -8.292210578918457
    10. ' "' → logprob: -8.417210578918457

Token 61: ' spécial' (ID: 40397)
  Prédit: ' particulier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' particulier' → logprob: -0.48924264311790466
    2. 'part' → logprob: -1.989242672920227
    3. '```' → logprob: -2.3642425537109375
    4. 'à' → logprob: -2.7392425537109375
    5. ' à' → logprob: -3.1142425537109375
    6. ' spécial' → logprob: -4.1142425537109375
    7. 'sp' → logprob: -4.3642425537109375
    8. ' ' → logprob: -5.4892425537109375
    9. 'special' → logprob: -5.6142425537109375
    10. ' ' → logprob: -5.7392425537109375

Token 62: ' g' (ID: 329)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.040496181696653366
    2. ' ' → logprob: -4.415496349334717
    3. ' _' → logprob: -5.290496349334717
    4. '```' → logprob: -6.040496349334717
    5. '_mapping' → logprob: -6.040496349334717
    6. ':' → logprob: -6.165496349334717
    7. '[' → logprob: -6.290496349334717
    8. '\' → logprob: -6.290496349334717
    9. ' =' → logprob: -6.415496349334717
    10. ' :' → logprob: -6.540496349334717

Token 63: 'éré' (ID: 33338)
  Prédit: 'éré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -1.358862042427063
    2. 'é' → logprob: -1.733862042427063
    3. 'ère' → logprob: -1.858862042427063
    4. 'e' → logprob: -1.858862042427063
    5. 'estion' → logprob: -2.6088619232177734
    6. 'érée' → logprob: -3.3588619232177734
    7. 'én' → logprob: -3.7338619232177734
    8. 'érant' → logprob: -3.8588619232177734
    9. 'est' → logprob: -4.233861923217773
    10. 'ér' → logprob: -4.233861923217773

Token 64: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5865302085876465
    2. '=' → logprob: -2.7115302085876465
    3. ' :' → logprob: -2.7115302085876465
    4. '_' → logprob: -2.9615302085876465
    5. '.' → logprob: -3.0865302085876465
    6. ',' → logprob: -3.2115302085876465
    7. ':' → logprob: -3.3365302085876465
    8. ' ' → logprob: -3.4615302085876465
    9. '```' → logprob: -3.5865302085876465
    10. '[' → logprob: -3.9615302085876465

Token 65: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.3912765681743622
    2. 'part' → logprob: -1.1412765979766846
    3. 'l' → logprob: -6.8912763595581055
    4. 'la' → logprob: -7.0162763595581055
    5. ' la' → logprob: -7.5162763595581055
    6. '```' → logprob: -7.7662763595581055
    7. 'une' → logprob: -8.266276359558105
    8. ' ' → logprob: -8.891276359558105
    9. '_part' → logprob: -9.141276359558105
    10. ' un' → logprob: -9.266276359558105

Token 66: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7041308283805847
    2. ' ' → logprob: -1.3291308879852295
    3. ',' → logprob: -3.0791308879852295
    4. '[' → logprob: -3.2041308879852295
    5. '\' → logprob: -3.7041308879852295
    6. ':' → logprob: -3.8291308879852295
    7. ' ,' → logprob: -3.9541308879852295
    8. ' :' → logprob: -4.32913064956665
    9. ' =' → logprob: -4.70413064956665
    10. 'e' → logprob: -5.07913064956665

Token 67: 'BUTTON' (ID: 92038)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.28431493043899536
    2. 'mapping' → logprob: -2.4093148708343506
    3. 't' → logprob: -2.6593148708343506
    4. 'space' → logprob: -3.5343148708343506
    5. '#' → logprob: -4.65931510925293
    6. '```' → logprob: -5.03431510925293
    7. ':' → logprob: -5.28431510925293
    8. '_' → logprob: -5.40931510925293
    9. 'touch' → logprob: -5.90931510925293
    10. 'map' → logprob: -5.90931510925293

Token 68: '_MAP' (ID: 36685)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.9912620186805725
    2. '_M' → logprob: -0.9912620186805725
    3. '_MAPPING' → logprob: -2.4912619590759277
    4. '_MAP' → logprob: -2.6162619590759277
    5. '_TO' → logprob: -2.7412619590759277
    6. '_CHAR' → logprob: -3.8662619590759277
    7. '_' → logprob: -5.241261959075928
    8. '_S' → logprob: -5.241261959075928
    9. '_CH' → logprob: -5.866261959075928
    10. '_C' → logprob: -7.241261959075928

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026589157059788704
    2. '=' → logprob: -3.6515891551971436
    3. 'S' → logprob: -8.776589393615723
    4. '_' → logprob: -9.776589393615723
    5. 's' → logprob: -9.901589393615723
    6. ':' → logprob: -11.276589393615723
    7. ' =
' → logprob: -12.276589393615723
    8. ' ' → logprob: -12.651589393615723
    9. ' :' → logprob: -14.401589393615723
    10. 'E' → logprob: -14.526589393615723

Token 70: ' {
' (ID: 405)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3790220618247986
    2. '{
' → logprob: -1.6290221214294434
    3. ' {' → logprob: -2.2540221214294434
    4. ' {
' → logprob: -4.254022121429443
    5. '[' → logprob: -9.754021644592285
    6. '['' → logprob: -10.629021644592285
    7. '[
' → logprob: -11.129021644592285
    8. '{'' → logprob: -11.504021644592285
    9. '["' → logprob: -11.754021644592285
    10. ' ['' → logprob: -11.754021644592285

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031999874860048294
    2. '1' → logprob: -3.7819998264312744
    3. ''' → logprob: -5.2820000648498535
    4. ' '' → logprob: -5.6570000648498535
    5. ' ' → logprob: -9.406999588012695
    6. '"' → logprob: -10.656999588012695
    7. '0' → logprob: -11.656999588012695
    8. '   ' → logprob: -11.906999588012695
    9. ' "' → logprob: -12.031999588012695
    10. '2' → logprob: -12.531999588012695

Token 72: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.5198147296905518
    2. '1' → logprob: -1.2698147296905518
    3. '   ' → logprob: -2.1448147296905518
    4. ' '' → logprob: -5.394814491271973
    5. ' ' → logprob: -6.269814491271973
    6. '"' → logprob: -7.019814491271973
    7. '0' → logprob: -10.394814491271973
    8. '  ' → logprob: -11.019814491271973
    9. ' "' → logprob: -12.394814491271973
    10. '`' → logprob: -12.769814491271973

Token 73: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3490959405899048
    2. '1' → logprob: -1.3490959405899048
    3. '2' → logprob: -3.3490958213806152
    4. '"' → logprob: -10.474096298217773
    5. ' '' → logprob: -10.849096298217773
    6. '0' → logprob: -11.224096298217773
    7. '```' → logprob: -12.599096298217773
    8. ''a' → logprob: -12.849096298217773
    9. ' ' → logprob: -12.849096298217773
    10. '`' → logprob: -13.724096298217773

Token 74: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.000924561289139092
    2. ''' → logprob: -7.000924587249756
    3. '":' → logprob: -11.625924110412598
    4. ':' → logprob: -13.500924110412598
    5. '':'' → logprob: -13.875924110412598
    6. ' ':' → logprob: -14.375924110412598
    7. '':['' → logprob: -14.875924110412598
    8. '0' → logprob: -15.250924110412598
    9. '"' → logprob: -15.250924110412598
    10. '1' → logprob: -16.875925064086914

Token 75: ' "',' (ID: 64528)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7853009700775146
    2. ''' → logprob: -1.0353009700775146
    3. ''.' → logprob: -2.2853009700775146
    4. '".' → logprob: -2.9103009700775146
    5. ' '' → logprob: -3.9103009700775146
    6. ' "' → logprob: -5.160301208496094
    7. '''' → logprob: -5.410301208496094
    8. '""' → logprob: -7.160301208496094
    9. ' '.' → logprob: -8.535301208496094
    10. ' ".' → logprob: -8.535301208496094

Token 76: '.' (ID: 13)
  Prédit: '".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.40667879581451416
    2. ''.' → logprob: -1.2816787958145142
    3. '.' → logprob: -3.4066786766052246
    4. '"' → logprob: -4.281678676605225
    5. ''' → logprob: -5.156678676605225
    6. '.,' → logprob: -7.156678676605225
    7. '.!' → logprob: -7.406678676605225
    8. '"."' → logprob: -7.406678676605225
    9. '.@' → logprob: -7.781678676605225
    10. '."' → logprob: -8.406679153442383

Token 77: '?!' (ID: 25309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.368801236152649
    2. ' "' → logprob: -1.618801236152649
    3. ''' → logprob: -2.2438011169433594
    4. '-' → logprob: -2.6188011169433594
    5. '!' → logprob: -2.6188011169433594
    6. ';' → logprob: -3.1188011169433594
    7. '?' → logprob: -3.1188011169433594
    8. ':' → logprob: -3.3688011169433594
    9. '?!' → logprob: -3.3688011169433594
    10. ''"' → logprob: -3.6188011169433594

Token 78: ''' (ID: 6)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.6659138798713684
    2. '"' → logprob: -2.0409138202667236
    3. ''' → logprob: -2.0409138202667236
    4. '\"' → logprob: -2.1659138202667236
    5. ':' → logprob: -3.6659138202667236
    6. ' '' → logprob: -3.7909138202667236
    7. ''"' → logprob: -4.165914058685303
    8. '-' → logprob: -4.165914058685303
    9. ' \"' → logprob: -4.915914058685303
    10. ' '"' → logprob: -5.290914058685303

Token 79: ' ",' (ID: 6813)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2576812505722046
    2. ',' → logprob: -2.882681369781494
    3. '",' → logprob: -3.257681369781494
    4. ' "' → logprob: -3.382681369781494
    5. ''' → logprob: -3.757681369781494
    6. ':' → logprob: -4.382681369781494
    7. ' ,' → logprob: -4.632681369781494
    8. '":' → logprob: -4.882681369781494
    9. ' ' → logprob: -5.257681369781494
    10. ''"' → logprob: -5.257681369781494

Token 80: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31617972254753113
    2. '"' → logprob: -2.1911797523498535
    3. ' ' → logprob: -3.0661797523498535
    4. ''a' → logprob: -3.8161797523498535
    5. ' '' → logprob: -3.8161797523498535
    6. '   ' → logprob: -3.9411797523498535
    7. '"'' → logprob: -4.4411797523498535
    8. ''"' → logprob: -4.6911797523498535
    9. '',' → logprob: -5.3161797523498535
    10. ' "'' → logprob: -5.4411797523498535

Token 81: ' #' (ID: 1069)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.29530632495880127
    2. '"' → logprob: -2.2953062057495117
    3. ' ' → logprob: -3.0453062057495117
    4. ''a' → logprob: -3.5453062057495117
    5. '   ' → logprob: -3.6703062057495117
    6. '"'' → logprob: -4.045306205749512
    7. ''"' → logprob: -4.795306205749512
    8. '}' → logprob: -5.170306205749512
    9. ' '' → logprob: -5.545306205749512
    10. ''s' → logprob: -6.045306205749512

Token 82: ' Bout' (ID: 62675)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.49382689595222473
    2. ' ' → logprob: -1.9938268661499023
    3. '"' → logprob: -2.1188268661499023
    4. '1' → logprob: -2.8688268661499023
    5. ''"' → logprob: -3.7438268661499023
    6. ' '' → logprob: -4.368826866149902
    7. '0' → logprob: -4.868826866149902
    8. ' "' → logprob: -5.493826866149902
    9. '.' → logprob: -5.618826866149902
    10. '123' → logprob: -5.993826866149902

Token 83: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.01425082329660654
    2. 'o' → logprob: -4.639250755310059
    3. 'e' → logprob: -6.264250755310059
    4. 'ons' → logprob: -7.139250755310059
    5. 'ton' → logprob: -7.639250755310059
    6. '```' → logprob: -8.451750755310059
    7. 'on's' → logprob: -8.889250755310059
    8. '#' → logprob: -8.951750755310059
    9. ''s' → logprob: -9.764250755310059
    10. '"""' → logprob: -10.014250755310059

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4158004820346832
    2. ' ' → logprob: -1.5408004522323608
    3. ''' → logprob: -3.4158005714416504
    4. '"' → logprob: -3.7908005714416504
    5. ' '' → logprob: -3.7908005714416504
    6. ' "' → logprob: -3.9158005714416504
    7. '0' → logprob: -5.04080057144165
    8. '2' → logprob: -5.54080057144165
    9. '.' → logprob: -5.91580057144165
    10. 'space' → logprob: -5.91580057144165

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02597825974225998
    2. ''' → logprob: -4.150978088378906
    3. '"' → logprob: -5.775978088378906
    4. ' '' → logprob: -5.900978088378906
    5. ' ' → logprob: -5.900978088378906
    6. '.' → logprob: -8.025978088378906
    7. ''"' → logprob: -8.400978088378906
    8. ' "' → logprob: -8.525978088378906
    9. '2' → logprob: -8.775978088378906
    10. '123' → logprob: -9.650978088378906

Token 86: ' cycle' (ID: 15839)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9122710824012756
    2. ''' → logprob: -1.1622710227966309
    3. '',' → logprob: -2.162271022796631
    4. '}' → logprob: -2.662271022796631
    5. '   ' → logprob: -3.162271022796631
    6. ',
' → logprob: -3.537271022796631
    7. ' ' → logprob: -4.037271022796631
    8. '"' → logprob: -5.787271022796631
    9. ',
' → logprob: -6.287271022796631
    10. ' ,' → logprob: -6.912271022796631

Token 87: ' sur' (ID: 1512)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15563622117042542
    2. '',' → logprob: -2.1556363105773926
    3. ' ' → logprob: -4.780636310577393
    4. ',' → logprob: -4.905636310577393
    5. '"' → logprob: -5.530636310577393
    6. '}' → logprob: -6.030636310577393
    7. ' ',' → logprob: -7.030636310577393
    8. ' '' → logprob: -7.155636310577393
    9. '",' → logprob: -7.280636310577393
    10. '',
' → logprob: -7.530636310577393

Token 88: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6021838784217834
    2. ' ,' → logprob: -2.2271838188171387
    3. ' ' → logprob: -2.7271838188171387
    4. '',' → logprob: -2.8521838188171387
    5. '"' → logprob: -2.9771838188171387
    6. ' la' → logprob: -3.2271838188171387
    7. ' '' → logprob: -3.8521838188171387
    8. ''.' → logprob: -3.8521838188171387
    9. ' ',' → logprob: -4.477183818817139
    10. ',' → logprob: -4.477183818817139

Token 89: ' caractères' (ID: 183106)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'esp' → logprob: -1.3204700946807861
    2. 'es' → logprob: -2.070470094680786
    3. ' espaces' → logprob: -2.195470094680786
    4. ' ' → logprob: -2.445470094680786
    5. ''' → logprob: -2.570470094680786
    6. ' '' → logprob: -2.695470094680786
    7. ' ,' → logprob: -2.945470094680786
    8. ''"' → logprob: -3.695470094680786
    9. 'ch' → logprob: -3.695470094680786
    10. '"' → logprob: -3.820470094680786

Token 90: ' ',' (ID: 14089)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2896304726600647
    2. '"' → logprob: -2.16463041305542
    3. ' ' → logprob: -2.91463041305542
    4. ''"' → logprob: -3.28963041305542
    5. '',' → logprob: -4.03963041305542
    6. ' '' → logprob: -5.28963041305542
    7. '"'' → logprob: -6.03963041305542
    8. '   ' → logprob: -6.28963041305542
    9. '.' → logprob: -6.41463041305542
    10. '}' → logprob: -6.53963041305542

Token 91: '.' (ID: 13)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.586624026298523
    2. ';' → logprob: -1.711624026298523
    3. ''' → logprob: -2.7116241455078125
    4. ' ' → logprob: -3.2116241455078125
    5. ''"' → logprob: -3.4616241455078125
    6. '.' → logprob: -3.8366241455078125
    7. ':' → logprob: -4.0866241455078125
    8. ' "' → logprob: -4.3366241455078125
    9. ')' → logprob: -4.4616241455078125
    10. ' ;' → logprob: -4.7116241455078125

Token 92: '?!' (ID: 25309)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!' → logprob: -1.301681637763977
    2. '?!' → logprob: -1.676681637763977
    3. '?' → logprob: -1.801681637763977
    4. '"' → logprob: -2.8016815185546875
    5. ' !' → logprob: -2.8016815185546875
    6. ''' → logprob: -3.1766815185546875
    7. ' ' → logprob: -3.3016815185546875
    8. ' ?' → logprob: -3.5516815185546875
    9. '!?' → logprob: -3.5516815185546875
    10. ' "' → logprob: -3.9266815185546875

Token 93: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7838846445083618
    2. ' "' → logprob: -1.1588846445083618
    3. '"' → logprob: -2.4088845252990723
    4. ' '' → logprob: -2.7838845252990723
    5. ''"' → logprob: -3.0338845252990723
    6. ' ' → logprob: -4.158884525299072
    7. ' '"' → logprob: -5.533884525299072
    8. ' ",' → logprob: -5.783884525299072
    9. '"'' → logprob: -7.033884525299072
    10. ' ',' → logprob: -7.408884525299072

Token 94: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12546660006046295
    2. '',' → logprob: -2.7504665851593018
    3. ' ' → logprob: -3.8754665851593018
    4. '"' → logprob: -4.625466823577881
    5. '   ' → logprob: -4.875466823577881
    6. ',' → logprob: -5.375466823577881
    7. ' '' → logprob: -5.875466823577881
    8. '}' → logprob: -6.000466823577881
    9. ' ',' → logprob: -6.750466823577881
    10. '",' → logprob: -7.125466823577881

Token 95: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.12127240002155304
    2. '   ' → logprob: -2.246272325515747
    3. ' ' → logprob: -5.621272563934326
    4. '}' → logprob: -6.496272563934326
    5. ''
' → logprob: -6.621272563934326
    6. ' '' → logprob: -7.871272563934326
    7. ''s' → logprob: -7.871272563934326
    8. '"' → logprob: -8.496272087097168
    9. ',' → logprob: -8.871272087097168
    10. '2' → logprob: -8.871272087097168

Token 96: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03815406188368797
    2. ''' → logprob: -3.288154125213623
    3. ''a' → logprob: -9.663153648376465
    4. 'a' → logprob: -11.163153648376465
    5. ' '' → logprob: -11.538153648376465
    6. ''A' → logprob: -12.163153648376465
    7. ' ' → logprob: -12.163153648376465
    8. '"' → logprob: -12.538153648376465
    9. 'abc' → logprob: -13.913153648376465
    10. ''s' → logprob: -13.913153648376465

Token 97: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.003902788506820798
    2. '":' → logprob: -6.003902912139893
    3. ''' → logprob: -7.378902912139893
    4. ' ':' → logprob: -7.753902912139893
    5. ':' → logprob: -8.003902435302734
    6. '':'' → logprob: -11.253902435302734
    7. '"' → logprob: -11.503902435302734
    8. ' :' → logprob: -12.753902435302734
    9. ' ":' → logprob: -13.128902435302734
    10. 'abc' → logprob: -13.378902435302734

Token 98: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5792998671531677
    2. '"' → logprob: -0.8292998671531677
    3. ' '' → logprob: -6.7042999267578125
    4. ''a' → logprob: -6.8292999267578125
    5. ''ab' → logprob: -7.3292999267578125
    6. ' "' → logprob: -8.579299926757812
    7. 'abc' → logprob: -9.454299926757812
    8. '"a' → logprob: -10.329299926757812
    9. '   ' → logprob: -10.954299926757812
    10. ''A' → logprob: -11.079299926757812

Token 99: 'abc' (ID: 26682)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.39935582876205444
    2. 'abc' → logprob: -1.1493558883666992
    3. '"' → logprob: -4.649355888366699
    4. 'ABC' → logprob: -6.649355888366699
    5. ''a' → logprob: -7.024355888366699
    6. ''ab' → logprob: -8.1493558883667
    7. ' abc' → logprob: -9.0243558883667
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.3993558883667
    9. ' '' → logprob: -10.5243558883667
    10. '   ' → logprob: -10.5243558883667

Token 100: 'ABC' (ID: 44197)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6321696043014526
    2. 'def' → logprob: -0.8821696043014526
    3. '"' → logprob: -3.257169723510742
    4. ''"' → logprob: -5.007169723510742
    5. 'abc' → logprob: -5.507169723510742
    6. '',' → logprob: -5.882169723510742
    7. ' def' → logprob: -7.007169723510742
    8. '",' → logprob: -7.132169723510742
    9. ''",' → logprob: -7.882169723510742
    10. ''",
' → logprob: -9.007169723510742

Token 101: '",
' (ID: 1150)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5896451473236084
    2. '",' → logprob: -1.2146451473236084
    3. ''' → logprob: -2.4646451473236084
    4. 'def' → logprob: -3.4646451473236084
    5. '',' → logprob: -4.2146453857421875
    6. 'abc' → logprob: -4.5896453857421875
    7. ''",' → logprob: -5.5896453857421875
    8. ''"' → logprob: -5.9646453857421875
    9. '",'' → logprob: -8.214645385742188
    10. '"',' → logprob: -8.339645385742188

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5949652791023254
    2. ''' → logprob: -0.8449652791023254
    3. ' '' → logprob: -4.46996545791626
    4. ' ' → logprob: -5.96996545791626
    5. '  ' → logprob: -6.71996545791626
    6. '}' → logprob: -6.96996545791626
    7. ''a' → logprob: -7.21996545791626
    8. '"' → logprob: -7.34496545791626
    9. ''s' → logprob: -7.46996545791626
    10. ',' → logprob: -8.344964981079102

Token 103: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.07901448756456375
    2. '3' → logprob: -3.454014539718628
    3. '   ' → logprob: -3.704014539718628
    4. '"' → logprob: -4.954014301300049
    5. '',' → logprob: -5.079014301300049
    6. ' '' → logprob: -6.204014301300049
    7. ' ' → logprob: -6.829014301300049
    8. ''s' → logprob: -7.079014301300049
    9. '  ' → logprob: -7.579014301300049
    10. '",' → logprob: -7.829014301300049

Token 104: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.771655115589965e-05
    2. ''' → logprob: -11.000018119812012
    3. '345' → logprob: -15.000018119812012
    4. ' ' → logprob: -15.375018119812012
    5. '34' → logprob: -15.750018119812012
    6. '"' → logprob: -16.625017166137695
    7. '2' → logprob: -16.875017166137695
    8. '33' → logprob: -17.375017166137695
    9. 'def' → logprob: -17.875017166137695
    10. ''s' → logprob: -18.000017166137695

Token 105: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.10368405282497406
    2. '":' → logprob: -2.3536839485168457
    3. ''' → logprob: -6.103683948516846
    4. 'def' → logprob: -7.228683948516846
    5. ':' → logprob: -8.103684425354004
    6. '"' → logprob: -9.353684425354004
    7. '':'' → logprob: -9.478684425354004
    8. ' ':' → logprob: -10.353684425354004
    9. 'abc' → logprob: -12.853684425354004
    10. '»:' → logprob: -13.603684425354004

Token 106: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0003657362540252507
    2. ' "' → logprob: -8.5003662109375
    3. 'def' → logprob: -9.3753662109375
    4. ''' → logprob: -9.5003662109375
    5. ''d' → logprob: -13.3753662109375
    6. ' def' → logprob: -14.8753662109375
    7. ' ' → logprob: -14.8753662109375
    8. '```' → logprob: -16.0003662109375
    9. '   ' → logprob: -16.7503662109375
    10. '	def' → logprob: -17.0003662109375

Token 107: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9266199160483666e-05
    2. 'dé' → logprob: -11.375019073486328
    3. '"' → logprob: -12.000019073486328
    4. ''' → logprob: -14.125019073486328
    5. ' def' → logprob: -15.125019073486328
    6. 'DEF' → logprob: -15.625019073486328
    7. '	def' → logprob: -15.875019073486328
    8. '(def' → logprob: -16.375019073486328
    9. 'de' → logprob: -16.875019073486328
    10. ' déf' → logprob: -17.125019073486328

Token 108: 'DEF' (ID: 36563)
  Prédit: 'DEF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEF' → logprob: -0.006875330116599798
    2. 'def' → logprob: -5.006875514984131
    3. 'Def' → logprob: -8.881875038146973
    4. ' DEF' → logprob: -11.506875038146973
    5. '_DEF' → logprob: -12.131875038146973
    6. '.DEF' → logprob: -12.756875038146973
    7. '_def' → logprob: -13.381875038146973
    8. 'ghi' → logprob: -14.881875038146973
    9. ''''' → logprob: -15.756875038146973
    10. '''' → logprob: -16.13187599182129

Token 109: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.037601858377456665
    2. '"' → logprob: -3.662601947784424
    3. '',' → logprob: -4.787601947784424
    4. '",
' → logprob: -6.162601947784424
    5. '",'' → logprob: -8.412601470947266
    6. ''' → logprob: -8.537601470947266
    7. '",
' → logprob: -9.162601470947266
    8. ''",' → logprob: -9.287601470947266
    9. '',"' → logprob: -9.787601470947266
    10. ''"' → logprob: -9.787601470947266

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16936366260051727
    2. ''' → logprob: -2.0443637371063232
    3. ',' → logprob: -3.9193637371063232
    4. '4' → logprob: -5.669363498687744
    5. ',
' → logprob: -6.919363498687744
    6. ' ' → logprob: -6.919363498687744
    7. '',' → logprob: -7.919363498687744
    8. '  ' → logprob: -8.044363975524902
    9. '}' → logprob: -8.794363975524902
    10. ' '' → logprob: -9.794363975524902

Token 111: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.07896491885185242
    2. '   ' → logprob: -2.578964948654175
    3. ' '' → logprob: -10.078965187072754
    4. '4' → logprob: -10.953965187072754
    5. ' ' → logprob: -11.453965187072754
    6. '  ' → logprob: -12.578965187072754
    7. '"' → logprob: -14.078965187072754
    8. '	' → logprob: -15.203965187072754
    9. '}' → logprob: -15.453965187072754
    10. '    ' → logprob: -15.953965187072754

Token 112: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.988221684878226e-06
    2. ''' → logprob: -11.875006675720215
    3. ' ' → logprob: -17.75000762939453
    4. '"' → logprob: -18.25000762939453
    5. '۴' → logprob: -18.50000762939453
    6. '456' → logprob: -19.50000762939453
    7. '```' → logprob: -19.62500762939453
    8. '４' → logprob: -19.75000762939453
    9. '٤' → logprob: -20.00000762939453
    10. '' → logprob: -20.62500762939453

Token 113: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.026145268231630325
    2. '":' → logprob: -3.7761452198028564
    3. ':' → logprob: -5.9011454582214355
    4. ''' → logprob: -9.026144981384277
    5. ' ':' → logprob: -10.651144981384277
    6. '"' → logprob: -11.651144981384277
    7. ' :' → logprob: -13.526144981384277
    8. '':'' → logprob: -13.651144981384277
    9. '»:' → logprob: -13.901144981384277
    10. '   ' → logprob: -14.151144981384277

Token 114: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01822930946946144
    2. ' "' → logprob: -4.0182294845581055
    3. '"G' → logprob: -9.768229484558105
    4. ''' → logprob: -10.893229484558105
    5. ' ghi' → logprob: -14.018229484558105
    6. '"h' → logprob: -14.143229484558105
    7. 'ghi' → logprob: -14.393229484558105
    8. '   ' → logprob: -14.518229484558105
    9. ' ' → logprob: -14.893229484558105
    10. '"go' → logprob: -15.393229484558105

Token 115: 'ghi' (ID: 75124)
  Prédit: 'ghi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghi' → logprob: -0.00026503115077503026
    2. 'gh' → logprob: -8.250265121459961
    3. 'j' → logprob: -13.625265121459961
    4. 'g' → logprob: -13.750265121459961
    5. 'pq' → logprob: -14.875265121459961
    6. 'G' → logprob: -15.125265121459961
    7. ' ghi' → logprob: -15.500265121459961
    8. '"' → logprob: -15.500265121459961
    9. ''' → logprob: -15.875265121459961
    10. 'gj' → logprob: -16.87526512145996

Token 116: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0019501789938658476
    2. 'ghi' → logprob: -6.251950263977051
    3. ' G' → logprob: -11.75195026397705
    4. 'gh' → logprob: -12.00195026397705
    5. 'GH' → logprob: -12.75195026397705
    6. ' ghi' → logprob: -13.25195026397705
    7. '"G' → logprob: -13.25195026397705
    8. 'abc' → logprob: -15.50195026397705
    9. 'j' → logprob: -15.62695026397705
    10. ',G' → logprob: -16.126949310302734

Token 117: 'HI' (ID: 36525)
  Prédit: 'HI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HI' → logprob: -0.17375923693180084
    2. 'H' → logprob: -2.2987592220306396
    3. 'h' → logprob: -3.7987592220306396
    4. 'JK' → logprob: -3.9237592220306396
    5. 'hi' → logprob: -4.923759460449219
    6. 'HJ' → logprob: -5.298759460449219
    7. 'j' → logprob: -6.173759460449219
    8. 'JKLM' → logprob: -7.048759460449219
    9. 'hj' → logprob: -7.298759460449219
    10. 'Hi' → logprob: -7.673759460449219

Token 118: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.6214364767074585
    2. '",' → logprob: -0.8714364767074585
    3. '',' → logprob: -3.746436595916748
    4. '',
' → logprob: -4.496436595916748
    5. '"' → logprob: -4.871436595916748
    6. ''' → logprob: -6.871436595916748
    7. '",
' → logprob: -7.621436595916748
    8. ''",
' → logprob: -7.996436595916748
    9. '",'' → logprob: -9.24643611907959
    10. '",

' → logprob: -11.12143611907959

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038209252059459686
    2. ''' → logprob: -3.2882091999053955
    3. ',' → logprob: -8.913208961486816
    4. ' '' → logprob: -11.913208961486816
    5. ' ' → logprob: -12.288208961486816
    6. '  ' → logprob: -12.413208961486816
    7. '5' → logprob: -12.413208961486816
    8. '}' → logprob: -12.913208961486816
    9. '```' → logprob: -12.913208961486816
    10. '"' → logprob: -13.413208961486816

Token 120: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.014207468368113041
    2. '   ' → logprob: -4.264207363128662
    3. ' '' → logprob: -10.38920783996582
    4. '5' → logprob: -12.13920783996582
    5. ' ' → logprob: -12.26420783996582
    6. '"' → logprob: -13.51420783996582
    7. '  ' → logprob: -13.88920783996582
    8. '}' → logprob: -15.63920783996582
    9. '	' → logprob: -15.88920783996582
    10. '```' → logprob: -16.01420783996582

Token 121: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0028057026211172342
    2. ''' → logprob: -5.877805709838867
    3. '"' → logprob: -15.252805709838867
    4. ' ' → logprob: -15.377805709838867
    5. ' '' → logprob: -16.002805709838867
    6. '567' → logprob: -16.377805709838867
    7. '   ' → logprob: -17.502805709838867
    8. '56' → logprob: -17.627805709838867
    9. '4' → logprob: -17.752805709838867
    10. '  ' → logprob: -17.877805709838867

Token 122: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.45833608508110046
    2. ':' → logprob: -1.2083361148834229
    3. '":' → logprob: -3.333336114883423
    4. ''' → logprob: -3.458336114883423
    5. '"' → logprob: -6.958335876464844
    6. 'j' → logprob: -7.833335876464844
    7. '   ' → logprob: -9.333335876464844
    8. ' :' → logprob: -9.458335876464844
    9. ':'' → logprob: -9.458335876464844
    10. 'JKLMNOP' → logprob: -9.833335876464844

Token 123: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00013834332639817148
    2. ' "' → logprob: -9.250138282775879
    3. ''' → logprob: -10.250138282775879
    4. 'j' → logprob: -12.375138282775879
    5. '   ' → logprob: -13.000138282775879
    6. '	j' → logprob: -16.375139236450195
    7. '```' → logprob: -16.625139236450195
    8. '  ' → logprob: -17.375139236450195
    9. '    ' → logprob: -17.625139236450195
    10. ' ' → logprob: -17.875139236450195

Token 124: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.688212614681106e-05
    2. 'jk' → logprob: -11.750017166137695
    3. 'kl' → logprob: -13.125017166137695
    4. '	j' → logprob: -13.500017166137695
    5. ''' → logprob: -13.500017166137695
    6. '[j' → logprob: -13.625017166137695
    7. ' j' → logprob: -14.125017166137695
    8. 'jl' → logprob: -14.625017166137695
    9. '   ' → logprob: -15.250017166137695
    10. '"' → logprob: -15.375017166137695

Token 125: 'kl' (ID: 4586)
  Prédit: 'kl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kl' → logprob: -5.157039049663581e-05
    2. 'k' → logprob: -10.000051498413086
    3. 'j' → logprob: -12.125051498413086
    4. 'km' → logprob: -15.000051498413086
    5. 'klu' → logprob: -16.125051498413086
    6. 'KL' → logprob: -16.375051498413086
    7. '-kl' → logprob: -17.125051498413086
    8. ' kl' → logprob: -17.375051498413086
    9. 'kj' → logprob: -17.625051498413086
    10. 'kla' → logprob: -17.625051498413086

Token 126: 'JK' (ID: 54230)
  Prédit: 'JK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'JK' → logprob: -0.0002941095153801143
    2. 'j' → logprob: -8.250293731689453
    3. 'JKLMNOP' → logprob: -11.000293731689453
    4. 'JKLM' → logprob: -11.125293731689453
    5. '.j' → logprob: -15.250293731689453
    6. '.J' → logprob: -15.375293731689453
    7. '_j' → logprob: -15.625293731689453
    8. '-j' → logprob: -16.125293731689453
    9. '-J' → logprob: -16.250293731689453
    10. ''' → logprob: -16.375293731689453

Token 127: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.31344541907310486
    2. 'LM' → logprob: -1.3134454488754272
    3. ''L' → logprob: -9.813445091247559
    4. ''' → logprob: -10.063445091247559
    5. 'M' → logprob: -10.563445091247559
    6. 'Lm' → logprob: -10.688445091247559
    7. '"L' → logprob: -11.063445091247559
    8. ' LM' → logprob: -11.938445091247559
    9. '"' → logprob: -11.938445091247559
    10. 'l' → logprob: -12.813445091247559

Token 128: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.03988135978579521
    2. '',
' → logprob: -3.789881467819214
    3. '",' → logprob: -4.289881229400635
    4. '',' → logprob: -6.539881229400635
    5. ''",
' → logprob: -7.414881229400635
    6. '",
' → logprob: -7.664881229400635
    7. ''' → logprob: -8.914881706237793
    8. '"' → logprob: -9.164881706237793
    9. '6' → logprob: -11.289881706237793
    10. '',
' → logprob: -12.039881706237793

Token 129: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16025379300117493
    2. '   ' → logprob: -1.9102537631988525
    3. ' '' → logprob: -10.910253524780273
    4. ' ' → logprob: -12.410253524780273
    5. '6' → logprob: -12.660253524780273
    6. '  ' → logprob: -12.910253524780273
    7. '	' → logprob: -14.535253524780273
    8. '"' → logprob: -14.660253524780273
    9. ''s' → logprob: -15.535253524780273
    10. '```' → logprob: -15.785253524780273

Token 130: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.000839046377222985
    2. '   ' → logprob: -7.1258392333984375
    3. ' '' → logprob: -10.375839233398438
    4. ' ' → logprob: -13.125839233398438
    5. '"' → logprob: -14.000839233398438
    6. '  ' → logprob: -15.125839233398438
    7. '6' → logprob: -15.625839233398438
    8. '	' → logprob: -17.000839233398438
    9. ''s' → logprob: -17.125839233398438
    10. '
' → logprob: -17.750839233398438

Token 131: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.100211963057518
    2. ''' → logprob: -2.3502118587493896
    3. '"' → logprob: -12.975212097167969
    4. ' ' → logprob: -13.225212097167969
    5. ' '' → logprob: -13.975212097167969
    6. '67' → logprob: -16.22521209716797
    7. '   ' → logprob: -16.35021209716797
    8. '678' → logprob: -16.47521209716797
    9. '٦' → logprob: -17.22521209716797
    10. '۶' → logprob: -17.85021209716797

Token 132: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3654041290283203
    2. '':' → logprob: -1.2404041290283203
    3. '":' → logprob: -4.11540412902832
    4. ''' → logprob: -8.24040412902832
    5. ' :' → logprob: -8.86540412902832
    6. ' ':' → logprob: -10.24040412902832
    7. '"' → logprob: -10.99040412902832
    8. ':'' → logprob: -11.86540412902832
    9. '   ' → logprob: -12.24040412902832
    10. '':'' → logprob: -12.36540412902832

Token 133: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.050194937735795975
    2. ' "' → logprob: -3.0501949787139893
    3. ''m' → logprob: -6.55019474029541
    4. 'm' → logprob: -9.17519474029541
    5. '"M' → logprob: -10.55019474029541
    6. ' mno' → logprob: -10.67519474029541
    7. ' ' → logprob: -11.55019474029541
    8. '   ' → logprob: -11.67519474029541
    9. '```' → logprob: -13.55019474029541
    10. '  ' → logprob: -13.55019474029541

Token 134: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.282920129597187e-05
    2. ''m' → logprob: -12.000012397766113
    3. ' mno' → logprob: -12.500012397766113
    4. '"' → logprob: -13.875012397766113
    5. 'mn' → logprob: -14.375012397766113
    6. 'mnop' → logprob: -14.375012397766113
    7. '.m' → logprob: -16.00001335144043
    8. '	m' → logprob: -16.37501335144043
    9. '_m' → logprob: -16.50001335144043
    10. 'mon' → logprob: -16.50001335144043

Token 135: 'no' (ID: 1750)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07618013024330139
    2. 'no' → logprob: -2.8261802196502686
    3. 'mn' → logprob: -5.2011799812316895
    4. 'mnop' → logprob: -5.8261799812316895
    5. 'nop' → logprob: -6.2011799812316895
    6. 'mnopqrstuvwxyz' → logprob: -6.3261799812316895
    7. ' mno' → logprob: -6.5761799812316895
    8. 'mnopqrst' → logprob: -9.201180458068848
    9. ''m' → logprob: -9.451180458068848
    10. 'M' → logprob: -9.576180458068848

Token 136: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -9.567575034452602e-05
    2. '"M' → logprob: -9.62509536743164
    3. ''M' → logprob: -11.37509536743164
    4. 'm' → logprob: -11.75009536743164
    5. 'MN' → logprob: -11.87509536743164
    6. '\M' → logprob: -14.00009536743164
    7. '''' → logprob: -14.25009536743164
    8. ''' → logprob: -14.50009536743164
    9. '"' → logprob: -14.75009536743164
    10. ' mno' → logprob: -15.50009536743164

Token 137: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.0015347393928095698
    2. 'NOP' → logprob: -6.501534938812256
    3. 'N' → logprob: -10.501534461975098
    4. 'no' → logprob: -12.501534461975098
    5. 'No' → logprob: -13.751534461975098
    6. 'NOR' → logprob: -16.751535415649414
    7. 'ON' → logprob: -17.001535415649414
    8. 'NOS' → logprob: -17.251535415649414
    9. 'MN' → logprob: -17.376535415649414
    10. 'M' → logprob: -17.501535415649414

Token 138: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.23200353980064392
    2. '",' → logprob: -1.7320035696029663
    3. '',
' → logprob: -4.107003688812256
    4. '',' → logprob: -4.732003688812256
    5. '",
' → logprob: -5.732003688812256
    6. '"' → logprob: -6.732003688812256
    7. '7' → logprob: -8.982003211975098
    8. ''' → logprob: -9.107003211975098
    9. ''",
' → logprob: -9.732003211975098
    10. '',
' → logprob: -10.107003211975098

Token 139: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47739601135253906
    2. '   ' → logprob: -0.9773960113525391
    3. ',' → logprob: -6.102396011352539
    4. '7' → logprob: -8.102396011352539
    5. ' '' → logprob: -8.227396011352539
    6. ' ' → logprob: -8.477396011352539
    7. '',' → logprob: -9.352396011352539
    8. ',
' → logprob: -9.727396011352539
    9. ''s' → logprob: -10.227396011352539
    10. '  ' → logprob: -10.227396011352539

Token 140: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.004451127722859383
    2. '   ' → logprob: -5.629451274871826
    3. '7' → logprob: -7.379451274871826
    4. ' '' → logprob: -8.879450798034668
    5. ' ' → logprob: -10.254450798034668
    6. '"' → logprob: -11.004450798034668
    7. '  ' → logprob: -11.879450798034668
    8. ',
' → logprob: -12.004450798034668
    9. '',' → logprob: -12.254450798034668
    10. '
' → logprob: -12.504450798034668

Token 141: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.03964145854115486
    2. ''' → logprob: -3.2896413803100586
    3. ''p' → logprob: -6.664641380310059
    4. '789' → logprob: -9.164641380310059
    5. 'p' → logprob: -9.414641380310059
    6. 'pq' → logprob: -9.539641380310059
    7. '"' → logprob: -10.164641380310059
    8. ' ' → logprob: -11.039641380310059
    9. ''op' → logprob: -12.664641380310059
    10. ' '' → logprob: -13.289641380310059

Token 142: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.1659124791622162
    2. ':' → logprob: -2.165912389755249
    3. '":' → logprob: -3.415912389755249
    4. ''' → logprob: -5.290912628173828
    5. '"' → logprob: -9.165912628173828
    6. ' :' → logprob: -9.540912628173828
    7. ' ':' → logprob: -10.540912628173828
    8. '':'' → logprob: -11.040912628173828
    9. '7' → logprob: -11.165912628173828
    10. ''s' → logprob: -11.415912628173828

Token 143: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006023838184773922
    2. ' "' → logprob: -5.13102388381958
    3. ''' → logprob: -9.506023406982422
    4. '   ' → logprob: -11.381023406982422
    5. 'pq' → logprob: -12.256023406982422
    6. ''p' → logprob: -13.631023406982422
    7. '"P' → logprob: -13.881023406982422
    8. ' ' → logprob: -14.756023406982422
    9. '"'' → logprob: -15.131023406982422
    10. ' '' → logprob: -15.506023406982422

Token 144: 'pq' (ID: 124147)
  Prédit: 'pq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -2.2127087504486553e-05
    2. ' pq' → logprob: -11.125021934509277
    3. '"' → logprob: -12.000021934509277
    4. ''' → logprob: -14.500021934509277
    5. 'p' → logprob: -15.125021934509277
    6. ''p' → logprob: -15.625021934509277
    7. 'prs' → logprob: -16.000022888183594
    8. 'PQ' → logprob: -16.875022888183594
    9. 'q' → logprob: -17.875022888183594
    10. '   ' → logprob: -17.875022888183594

Token 145: 'rs' (ID: 6435)
  Prédit: 'rst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rst' → logprob: -0.0795549750328064
    2. 'rs' → logprob: -2.579555034637451
    3. 'r' → logprob: -7.329555034637451
    4. ' rst' → logprob: -12.454554557800293
    5. '_rst' → logprob: -13.079554557800293
    6. 'RST' → logprob: -13.329554557800293
    7. 'rsp' → logprob: -14.454554557800293
    8. 'qrst' → logprob: -14.704554557800293
    9. 'RS' → logprob: -15.954554557800293
    10. 'q' → logprob: -16.70455551147461

Token 146: 'PQ' (ID: 145795)
  Prédit: 'PQ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PQ' → logprob: -0.0001468067930545658
    2. 'pq' → logprob: -9.375146865844727
    3. ''' → logprob: -10.125146865844727
    4. ' PQ' → logprob: -11.375146865844727
    5. 'P' → logprob: -11.750146865844727
    6. '"' → logprob: -13.125146865844727
    7. 'QRST' → logprob: -15.250146865844727
    8. 'p' → logprob: -16.125146865844727
    9. '"P' → logprob: -16.500146865844727
    10. ''p' → logprob: -16.500146865844727

Token 147: 'RS' (ID: 17190)
  Prédit: 'RS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RS' → logprob: -0.07063303887844086
    2. 'RST' → logprob: -3.4456329345703125
    3. 'R' → logprob: -4.3206329345703125
    4. 'r' → logprob: -4.6956329345703125
    5. 'T' → logprob: -5.0706329345703125
    6. 'rs' → logprob: -5.5706329345703125
    7. 't' → logprob: -6.9456329345703125
    8. 'RT' → logprob: -7.3206329345703125
    9. '7' → logprob: -7.5706329345703125
    10. ''' → logprob: -7.8206329345703125

Token 148: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.4511157274246216
    2. '',' → logprob: -1.5761157274246216
    3. '"' → logprob: -2.201115608215332
    4. '",
' → logprob: -3.701115608215332
    5. '',"' → logprob: -5.076115608215332
    6. '',
' → logprob: -5.326115608215332
    7. '",
' → logprob: -5.701115608215332
    8. ''",' → logprob: -6.326115608215332
    9. ''",
' → logprob: -6.451115608215332
    10. ''"' → logprob: -6.701115608215332

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030213458463549614
    2. ''' → logprob: -3.5302133560180664
    3. ',' → logprob: -7.905213356018066
    4. ' ' → logprob: -10.155213356018066
    5. '}' → logprob: -10.655213356018066
    6. '  ' → logprob: -11.280213356018066
    7. ' '' → logprob: -11.780213356018066
    8. '8' → logprob: -12.155213356018066
    9. '	' → logprob: -13.905213356018066
    10. '',' → logprob: -14.030213356018066

Token 150: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.5761656165122986
    2. '   ' → logprob: -0.8261656165122986
    3. '}' → logprob: -9.576165199279785
    4. ',' → logprob: -9.701165199279785
    5. ' ' → logprob: -9.826165199279785
    6. ' '' → logprob: -10.951165199279785
    7. '  ' → logprob: -11.076165199279785
    8. '8' → logprob: -13.076165199279785
    9. '	' → logprob: -13.576165199279785
    10. ''s' → logprob: -13.826165199279785

Token 151: '8' (ID: 23)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007261329446919262
    2. '8' → logprob: -7.250726222991943
    3. ' '' → logprob: -11.625725746154785
    4. '"' → logprob: -11.875725746154785
    5. ' ' → logprob: -15.375725746154785
    6. '  ' → logprob: -16.8757266998291
    7. '   ' → logprob: -16.8757266998291
    8. '
' → logprob: -17.1257266998291
    9. '`' → logprob: -17.2507266998291
    10. ''
' → logprob: -19.6257266998291

Token 152: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.005940532311797142
    2. ':' → logprob: -5.5059404373168945
    3. '":' → logprob: -6.6309404373168945
    4. ''' → logprob: -7.6309404373168945
    5. ' ':' → logprob: -10.005940437316895
    6. ' :' → logprob: -12.505940437316895
    7. '':'' → logprob: -13.005940437316895
    8. '"' → logprob: -13.255940437316895
    9. '   ' → logprob: -13.755940437316895
    10. '='' → logprob: -15.130940437316895

Token 153: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03843435272574425
    2. ' "' → logprob: -3.2884342670440674
    3. ''t' → logprob: -8.288434028625488
    4. ''' → logprob: -9.788434028625488
    5. '"T' → logprob: -9.788434028625488
    6. 't' → logprob: -10.788434028625488
    7. ' '' → logprob: -12.663434028625488
    8. ' tuv' → logprob: -13.538434028625488
    9. '	t' → logprob: -13.913434028625488
    10. ' ' → logprob: -14.288434028625488

Token 154: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0024428353644907475
    2. '"' → logprob: -6.627442836761475
    3. ' tuv' → logprob: -7.127442836761475
    4. ''t' → logprob: -8.627442359924316
    5. ''' → logprob: -9.627442359924316
    6. '	t' → logprob: -11.002442359924316
    7. '"T' → logprob: -11.002442359924316
    8. '`t' → logprob: -11.252442359924316
    9. 'uvw' → logprob: -12.502442359924316
    10. '_t' → logprob: -12.502442359924316

Token 155: 'uv' (ID: 6992)
  Prédit: 'uv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uv' → logprob: -0.21114112436771393
    2. 'uvw' → logprob: -2.3361411094665527
    3. 't' → logprob: -2.9611411094665527
    4. 'u' → logprob: -4.211141109466553
    5. 'uvwxyz' → logprob: -4.211141109466553
    6. 'tu' → logprob: -4.836141109466553
    7. 'T' → logprob: -5.586141109466553
    8. ' tuv' → logprob: -8.336141586303711
    9. '"' → logprob: -9.961141586303711
    10. 'Tu' → logprob: -9.961141586303711

Token 156: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -2.7133641196996905e-05
    2. 't' → logprob: -11.12502670288086
    3. '"T' → logprob: -12.00002670288086
    4. ' T' → logprob: -12.12502670288086
    5. 'TU' → logprob: -14.75002670288086
    6. 'UV' → logprob: -15.75002670288086
    7. ''T' → logprob: -16.12502670288086
    8. 'UVW' → logprob: -16.62502670288086
    9. '	T' → logprob: -17.00002670288086
    10. ''' → logprob: -18.12502670288086

Token 157: 'UV' (ID: 29203)
  Prédit: 'UV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UV' → logprob: -0.023420866578817368
    2. 'UVW' → logprob: -3.773420810699463
    3. 'U' → logprob: -9.273421287536621
    4. 'T' → logprob: -9.648421287536621
    5. 'uv' → logprob: -11.773421287536621
    6. ' UV' → logprob: -12.023421287536621
    7. 'Uv' → logprob: -13.273421287536621
    8. 'uvw' → logprob: -14.398421287536621
    9. 'V' → logprob: -15.523421287536621
    10. 'W' → logprob: -15.523421287536621

Token 158: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.08981874585151672
    2. '",' → logprob: -2.5898187160491943
    3. '',
' → logprob: -5.464818954467773
    4. '"' → logprob: -6.089818954467773
    5. '',' → logprob: -6.464818954467773
    6. ''",
' → logprob: -6.839818954467773
    7. ''' → logprob: -6.964818954467773
    8. '",
' → logprob: -7.464818954467773
    9. '9' → logprob: -8.714818954467773
    10. '"',
' → logprob: -11.089818954467773

Token 159: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08036857098340988
    2. '   ' → logprob: -2.5803685188293457
    3. ' '' → logprob: -6.580368518829346
    4. ' ' → logprob: -9.580368995666504
    5. '9' → logprob: -10.830368995666504
    6. '  ' → logprob: -14.080368995666504
    7. '	' → logprob: -15.205368995666504
    8. '"' → logprob: -15.205368995666504
    9. '    ' → logprob: -16.080368041992188
    10. '```' → logprob: -16.830368041992188

Token 160: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.00047952806926332414
    2. ' '' → logprob: -7.875479698181152
    3. '   ' → logprob: -9.250479698181152
    4. ' ' → logprob: -13.250479698181152
    5. '9' → logprob: -13.875479698181152
    6. '"' → logprob: -15.000479698181152
    7. '	' → logprob: -15.625479698181152
    8. '  ' → logprob: -17.500478744506836
    9. '    ' → logprob: -18.000478744506836
    10. '       ' → logprob: -18.250478744506836

Token 161: '9' (ID: 24)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14350074529647827
    2. '9' → logprob: -2.018500804901123
    3. ' '' → logprob: -7.268500804901123
    4. '"' → logprob: -9.143500328063965
    5. ' ' → logprob: -10.893500328063965
    6. '   ' → logprob: -13.518500328063965
    7. '  ' → logprob: -14.643500328063965
    8. '7' → logprob: -15.268500328063965
    9. '`' → logprob: -15.643500328063965
    10. '('' → logprob: -15.768500328063965

Token 162: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.004454685840755701
    2. '":' → logprob: -5.504454612731934
    3. ''' → logprob: -8.004454612731934
    4. ':' → logprob: -10.879454612731934
    5. ' ':' → logprob: -11.129454612731934
    6. '7' → logprob: -12.629454612731934
    7. '"' → logprob: -12.879454612731934
    8. '':'' → logprob: -13.379454612731934
    9. ''s' → logprob: -14.629454612731934
    10. '```' → logprob: -15.879454612731934

Token 163: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014542583376169205
    2. ''w' → logprob: -4.264542579650879
    3. '"W' → logprob: -8.514542579650879
    4. 'w' → logprob: -9.014542579650879
    5. ' "' → logprob: -10.139542579650879
    6. ''' → logprob: -11.639542579650879
    7. '	w' → logprob: -12.889542579650879
    8. '   ' → logprob: -13.139542579650879
    9. '?w' → logprob: -14.014542579650879
    10. '<w' → logprob: -14.139542579650879

Token 164: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.003053288906812668
    2. ''w' → logprob: -5.878053188323975
    3. ' w' → logprob: -9.003053665161133
    4. 'wx' → logprob: -10.253053665161133
    5. '"' → logprob: -10.378053665161133
    6. 'wy' → logprob: -10.503053665161133
    7. '	w' → logprob: -11.378053665161133
    8. '#w' → logprob: -11.628053665161133
    9. '.w' → logprob: -12.753053665161133
    10. ''' → logprob: -12.878053665161133

Token 165: 'xyz' (ID: 51089)
  Prédit: 'xyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xyz' → logprob: -8.804671233519912e-05
    2. 'xy' → logprob: -9.50008773803711
    3. 'x' → logprob: -11.75008773803711
    4. 'w' → logprob: -12.25008773803711
    5. 'wx' → logprob: -15.00008773803711
    6. ' xyz' → logprob: -16.62508773803711
    7. 'www' → logprob: -16.87508773803711
    8. '
' → logprob: -17.25008773803711
    9. 'yz' → logprob: -17.37508773803711
    10. '.xyz' → logprob: -18.37508773803711

Token 166: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0006445261533372104
    2. '"W' → logprob: -7.500644683837891
    3. 'w' → logprob: -9.75064468383789
    4. 'WX' → logprob: -10.75064468383789
    5. ''w' → logprob: -11.62564468383789
    6. ''' → logprob: -13.75064468383789
    7. ' W' → logprob: -13.87564468383789
    8. 'XYZ' → logprob: -15.37564468383789
    9. '.W' → logprob: -15.62564468383789
    10. 'WY' → logprob: -15.87564468383789

Token 167: 'XYZ' (ID: 68227)
  Prédit: 'XYZ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XYZ' → logprob: -6.034592388459714e-06
    2. 'W' → logprob: -13.000005722045898
    3. 'X' → logprob: -13.375005722045898
    4. 'XY' → logprob: -13.625005722045898
    5. 'xyz' → logprob: -14.375005722045898
    6. ' XYZ' → logprob: -15.250005722045898
    7. 'w' → logprob: -16.5000057220459
    8. 'YZ' → logprob: -17.5000057220459
    9. '-' → logprob: -18.3750057220459
    10. 'Y' → logprob: -18.3750057220459

Token 168: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7939736843109131
    2. '",' → logprob: -0.7939736843109131
    3. '",
' → logprob: -2.418973684310913
    4. '',' → logprob: -5.918973922729492
    5. '",
' → logprob: -6.793973922729492
    6. '"}' → logprob: -7.043973922729492
    7. ''' → logprob: -7.168973922729492
    8. '',
' → logprob: -7.418973922729492
    9. '"
' → logprob: -8.418973922729492
    10. '}' → logprob: -8.543973922729492

Token 169: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.006844899617135525
    2. ',' → logprob: -5.006844997406006
    3. ',
' → logprob: -9.006844520568848
    4. ' }' → logprob: -12.631844520568848
    5. ','' → logprob: -13.756844520568848
    6. ''}' → logprob: -13.756844520568848
    7. '   ' → logprob: -14.631844520568848
    8. '}
' → logprob: -15.006844520568848
    9. '},' → logprob: -15.256844520568848
    10. '',' → logprob: -15.756844520568848

Token 170: 'def' (ID: 1314)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.48604971170425415
    2. '0' → logprob: -0.9860497117042542
    3. ' ' → logprob: -5.736049652099609
    4. '#' → logprob: -5.861049652099609
    5. '}' → logprob: -6.486049652099609
    6. ',' → logprob: -6.986049652099609
    7. '  
' → logprob: -7.486049652099609
    8. '[' → logprob: -7.986049652099609
    9. '
' → logprob: -7.986049652099609
    10. '```' → logprob: -8.11104965209961

Token 171: ' decode' (ID: 32043)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.9688045978546143
    2. ' press' → logprob: -1.0938045978546143
    3. ' decode' → logprob: -2.0938045978546143
    4. ' translate' → logprob: -2.5938045978546143
    5. ' text' → logprob: -4.093804359436035
    6. ' button' → logprob: -4.343804359436035
    7. ' convert' → logprob: -4.343804359436035
    8. ' process' → logprob: -5.343804359436035
    9. ' interpret' → logprob: -5.468804359436035
    10. ' char' → logprob: -5.718804359436035

Token 172: '_line' (ID: 14418)
  Prédit: '_message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_message' → logprob: -0.7353895902633667
    2. '_sequence' → logprob: -2.1103897094726562
    3. '_key' → logprob: -2.3603897094726562
    4. '_text' → logprob: -2.4853897094726562
    5. '_character' → logprob: -2.6103897094726562
    6. '_digit' → logprob: -3.4853897094726562
    7. '_press' → logprob: -3.7353897094726562
    8. '_button' → logprob: -3.9853897094726562
    9. '_char' → logprob: -4.110389709472656
    10. '_sms' → logprob: -4.360389709472656

Token 173: '(line' (ID: 18178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013411503285169601
    2. '(line' → logprob: -4.388411521911621
    3. '_' → logprob: -8.638411521911621
    4. '('' → logprob: -8.888411521911621
    5. '():' → logprob: -9.138411521911621
    6. '_line' → logprob: -9.263411521911621
    7. '("("' → logprob: -9.388411521911621
    8. ':' → logprob: -9.638411521911621
    9. '(input' → logprob: -10.513411521911621
    10. '(text' → logprob: -10.513411521911621

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11450005322694778
    2. ',' → logprob: -2.239500045776367
    3. ':' → logprob: -6.989500045776367
    4. ')' → logprob: -7.989500045776367
    5. '):
' → logprob: -8.114500045776367
    6. '   ' → logprob: -9.489500045776367
    7. ' ):' → logprob: -11.614500045776367
    8. ' ,' → logprob: -11.989500045776367
    9. '}:' → logprob: -13.114500045776367
    10. '[' → logprob: -13.239500045776367

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024965754710137844
    2. 'tokens' → logprob: -9.625249862670898
    3. ':' → logprob: -9.750249862670898
    4. ' tokens' → logprob: -10.375249862670898
    5. '   ' → logprob: -10.750249862670898
    6. ',' → logprob: -11.875249862670898
    7. 'decoded' → logprob: -12.000249862670898
    8. 'index' → logprob: -12.125249862670898
    9. ' decoded' → logprob: -12.250249862670898
    10. '    
' → logprob: -12.375249862670898

Token 176: ' """
' (ID: 7037)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -1.081321120262146
    2. ' result' → logprob: -1.206321120262146
    3. 'result' → logprob: -1.831321120262146
    4. ' decoded' → logprob: -2.2063212394714355
    5. '   ' → logprob: -2.7063212394714355
    6. ' i' → logprob: -5.3313212394714355
    7. ' if' → logprob: -5.5813212394714355
    8. ' output' → logprob: -5.7063212394714355
    9. ' from' → logprob: -6.4563212394714355
    10. ' current' → logprob: -6.4563212394714355

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2521611750125885
    2. '#' → logprob: -2.1271612644195557
    3. '"""
' → logprob: -3.6271612644195557
    4. 'result' → logprob: -3.8771612644195557
    5. 'current' → logprob: -4.502161026000977
    6. 'decoded' → logprob: -4.877161026000977
    7. '"""' → logprob: -5.002161026000977
    8. 'pressed' → logprob: -5.002161026000977
    9. 'def' → logprob: -5.627161026000977
    10. 'lines' → logprob: -6.127161026000977

Token 178: ' Dé' (ID: 27247)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3770749270915985
    2. ' tokens' → logprob: -2.252074956893921
    3. ' lines' → logprob: -2.877074956893921
    4. 'tokens' → logprob: -3.377074956893921
    5. ' """' → logprob: -3.502074956893921
    6. ' result' → logprob: -3.877074956893921
    7. ' decoded' → logprob: -4.377074718475342
    8. 'result' → logprob: -4.377074718475342
    9. '#' → logprob: -4.502074718475342
    10. 'decoded' → logprob: -5.002074718475342

Token 179: 'code' (ID: 3056)
  Prédit: 'code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.5460902452468872
    2. 'f' → logprob: -0.9210902452468872
    3. '   ' → logprob: -4.046090126037598
    4. 'coder' → logprob: -6.546090126037598
    5. '"""
' → logprob: -6.921090126037598
    6. 'cod' → logprob: -7.046090126037598
    7. 'crypt' → logprob: -7.171090126037598
    8. 'c' → logprob: -8.671090126037598
    9. 'codec' → logprob: -8.796090126037598
    10. '#' → logprob: -8.921090126037598

Token 180: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33425238728523254
    2. '   ' → logprob: -1.9592523574829102
    3. '<|end|>' → logprob: -3.20925235748291
    4. ' the' → logprob: -4.33425235748291
    5. 'token' → logprob: -4.45925235748291
    6. '  ' → logprob: -4.45925235748291
    7. ' line' → logprob: -4.95925235748291
    8. ')' → logprob: -5.08425235748291
    9. ' a' → logprob: -5.20925235748291
    10. 's' → logprob: -5.58425235748291

Token 181: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6571768522262573
    2. ' sé' → logprob: -1.7821768522262573
    3. ' ' → logprob: -3.032176971435547
    4. ' pression' → logprob: -3.282176971435547
    5. 'pression' → logprob: -3.407176971435547
    6. ' touche' → logprob: -3.532176971435547
    7. ' ligne' → logprob: -3.532176971435547
    8. 'chaine' → logprob: -3.657176971435547
    9. '   ' → logprob: -3.782176971435547
    10. ' chaine' → logprob: -3.907176971435547

Token 182: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019447119906544685
    2. ',' → logprob: -5.519447326660156
    3. ' du' → logprob: -5.519447326660156
    4. ' (' → logprob: -6.394447326660156
    5. ' des' → logprob: -6.519447326660156
    6. ' de' → logprob: -6.769447326660156
    7. ':' → logprob: -6.894447326660156
    8. '    ' → logprob: -7.394447326660156
    9. '(line' → logprob: -7.519447326660156
    10. ')' → logprob: -7.644447326660156

Token 183: ' sé' (ID: 7462)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.5770763158798218
    2. 'code' → logprob: -1.7020763158798218
    3. 'texte' → logprob: -1.7020763158798218
    4. 'bout' → logprob: -2.7020764350891113
    5. 'input' → logprob: -2.9520764350891113
    6. 'press' → logprob: -3.3270764350891113
    7. ' input' → logprob: -3.4520764350891113
    8. ' code' → logprob: -3.5770764350891113
    9. 'codes' → logprob: -3.7020764350891113
    10. 'text' → logprob: -3.7020764350891113

Token 184: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.2553882598876953
    2. 'quences' → logprob: -1.5053882598876953
    3. 'ries' → logprob: -6.255388259887695
    4. 'rie' → logprob: -6.755388259887695
    5. 'lection' → logprob: -8.630388259887695
    6. 'r' → logprob: -9.380388259887695
    7. 'ance' → logprob: -10.380388259887695
    8. 'qu' → logprob: -11.255388259887695
    9. 'quent' → logprob: -11.380388259887695
    10. 'q' → logprob: -11.755388259887695

Token 185: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07126709073781967
    2. 'de' → logprob: -3.8212671279907227
    3. '   ' → logprob: -4.321267127990723
    4. ' ' → logprob: -4.696267127990723
    5. ' d' → logprob: -5.571267127990723
    6. ')' → logprob: -5.696267127990723
    7. 's' → logprob: -5.696267127990723
    8. ' )' → logprob: -5.821267127990723
    9. '_' → logprob: -6.571267127990723
    10. ',' → logprob: -6.821267127990723

Token 186: ' bouton' (ID: 80635)
  Prédit: ' touches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' touches' → logprob: -0.8920500874519348
    2. 'touch' → logprob: -1.14205002784729
    3. 't' → logprob: -1.51705002784729
    4. 'bout' → logprob: -3.89205002784729
    5. 'press' → logprob: -4.517050266265869
    6. 'pression' → logprob: -6.017050266265869
    7. ' boutons' → logprob: -6.142050266265869
    8. 'clic' → logprob: -6.142050266265869
    9. '   ' → logprob: -6.392050266265869
    10. ' ' → logprob: -6.642050266265869

Token 187: ' en' (ID: 469)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7277852296829224
    2. ' presses' → logprob: -1.3527852296829224
    3. 'press' → logprob: -2.227785110473633
    4. 'es' → logprob: -2.852785110473633
    5. 'pressed' → logprob: -3.852785110473633
    6. ' pressed' → logprob: -4.102785110473633
    7. '_press' → logprob: -4.352785110473633
    8. '_pressed' → logprob: -4.602785110473633
    9. ' press' → logprob: -4.852785110473633
    10. ' ' → logprob: -5.227785110473633

Token 188: ' texte' (ID: 53492)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -1.047961711883545
    2. 'texte' → logprob: -1.297961711883545
    3. ' texte' → logprob: -1.547961711883545
    4. 'un' → logprob: -3.172961711883545
    5. 'une' → logprob: -3.422961711883545
    6. ' une' → logprob: -3.547961711883545
    7. ' un' → logprob: -3.797961711883545
    8. 'chaine' → logprob: -4.297961711883545
    9. ' chaîne' → logprob: -5.297961711883545
    10. 'text' → logprob: -5.672961711883545

Token 189: ' lis' (ID: 20784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10280440002679825
    2. ' :' → logprob: -3.72780442237854
    3. ':' → logprob: -4.102804183959961
    4. '):' → logprob: -4.227804183959961
    5. '):
' → logprob: -4.227804183959961
    6. ',' → logprob: -4.727804183959961
    7. '.' → logprob: -4.852804183959961
    8. ')' → logprob: -5.852804183959961
    9. ':
' → logprob: -6.352804183959961
    10. '```' → logprob: -6.602804183959961

Token 190: 'ible' (ID: 1430)
  Prédit: 'ible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.00032879042555578053
    2. 'ble' → logprob: -8.12532901763916
    3. 'b' → logprob: -10.75032901763916
    4. 'ib' → logprob: -12.00032901763916
    5. 'ibble' → logprob: -13.12532901763916
    6. 'ibles' → logprob: -14.62532901763916
    7. 'ibre' → logprob: -14.62532901763916
    8. 'ibile' → logprob: -14.75032901763916
    9. 'sible' → logprob: -15.00032901763916
    10. 'i' → logprob: -15.12532901763916

Token 191: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03015517070889473
    2. ',' → logprob: -4.405155181884766
    3. '.' → logprob: -4.405155181884766
    4. ':' → logprob: -6.280155181884766
    5. ' :' → logprob: -7.030155181884766
    6. ')' → logprob: -7.780155181884766
    7. '):' → logprob: -7.780155181884766
    8. '\n' → logprob: -7.905155181884766
    9. '):
' → logprob: -8.030155181884766
    10. ' ' → logprob: -9.155155181884766

Token 192: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5245783925056458
    2. ' le' → logprob: -1.774578332901001
    3. ' les' → logprob: -2.274578332901001
    4. 'la' → logprob: -2.524578332901001
    5. 'le' → logprob: -3.274578332901001
    6. 'les' → logprob: -4.52457857131958
    7. '   ' → logprob: -5.52457857131958
    8. 'l' → logprob: -6.77457857131958
    9. '#' → logprob: -8.024578094482422
    10. ' l' → logprob: -8.024578094482422

Token 193: ' règles' (ID: 67042)
  Prédit: ' règles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' règles' → logprob: -0.6699001789093018
    2. 'm' → logprob: -1.6699001789093018
    3. ' mappings' → logprob: -2.2949001789093018
    4. 'mapping' → logprob: -2.6699001789093018
    5. 'press' → logprob: -3.5449001789093018
    6. 'BUTTON' → logprob: -3.6699001789093018
    7. 'rules' → logprob: -4.169899940490723
    8. '#' → logprob: -4.419899940490723
    9. ' rules' → logprob: -5.294899940490723
    10. ' mapping' → logprob: -5.419899940490723

Token 194: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.7508655190467834
    2. '   ' → logprob: -0.8758655190467834
    3. ' de' → logprob: -2.6258654594421387
    4. ' des' → logprob: -4.375865459442139
    5. ' ' → logprob: -5.000865459442139
    6. ' d' → logprob: -5.375865459442139
    7. 'du' → logprob: -5.750865459442139
    8. 'def' → logprob: -5.875865459442139
    9. 'de' → logprob: -5.875865459442139
    10. ' suivantes' → logprob: -6.625865459442139

Token 195: ' problème' (ID: 35630)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3370930552482605
    2. 'cl' → logprob: -2.8370931148529053
    3. 'multi' → logprob: -2.9620931148529053
    4. ' téléphone' → logprob: -3.4620931148529053
    5. 'texte' → logprob: -3.9620931148529053
    6. 'phone' → logprob: -4.337092876434326
    7. ' clavier' → logprob: -4.462092876434326
    8. 'sms' → logprob: -4.587092876434326
    9. 'old' → logprob: -4.587092876434326
    10. 'T' → logprob: -4.712092876434326

Token 196: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027075118850916624
    2. ':' → logprob: -6.252707481384277
    3. ' :' → logprob: -8.127707481384277
    4. ')' → logprob: -8.877707481384277
    5. '):' → logprob: -9.127707481384277
    6. ',' → logprob: -9.377707481384277
    7. '.' → logprob: -9.752707481384277
    8. '    
' → logprob: -10.002707481384277
    9. '):
' → logprob: -12.002707481384277
    10. '    ' → logprob: -12.127707481384277

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005787697155028582
    2. ')' → logprob: -8.625578880310059
    3. '    ' → logprob: -8.875578880310059
    4. '    
' → logprob: -9.375578880310059
    5. '```' → logprob: -10.125578880310059
    6. ' 
' → logprob: -10.250578880310059
    7. '#' → logprob: -11.125578880310059
    8. '\n' → logprob: -11.500578880310059
    9. ' )' → logprob: -11.500578880310059
    10. 'def' → logprob: -11.625578880310059

Token 198: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004644076805561781
    2. '```' → logprob: -6.50464391708374
    3. '    ' → logprob: -7.00464391708374
    4. ')' → logprob: -7.12964391708374
    5. '    
' → logprob: -7.87964391708374
    6. '\n' → logprob: -8.629644393920898
    7. '
' → logprob: -8.879644393920898
    8. ' 
' → logprob: -9.254644393920898
    9. 'def' → logprob: -9.254644393920898
    10. ':' → logprob: -9.504644393920898

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015317666111513972
    2. ' tokens' → logprob: -7.626531600952148
    3. ' result' → logprob: -7.751531600952148
    4. ' decoded' → logprob: -8.626531600952148
    5. ' lines' → logprob: -9.126531600952148
    6. 'decoded' → logprob: -9.751531600952148
    7. ' i' → logprob: -10.001531600952148
    8. 'tokens' → logprob: -10.001531600952148
    9. 'result' → logprob: -10.751531600952148
    10. ' def' → logprob: -10.751531600952148

Token 200: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.6199643015861511
    2. 'decoded' → logprob: -1.119964361190796
    3. ' result' → logprob: -2.369964361190796
    4. ' if' → logprob: -4.369964122772217
    5. ' decoded' → logprob: -4.369964122772217
    6. 'if' → logprob: -4.494964122772217
    7. '   ' → logprob: -6.119964122772217
    8. 'output' → logprob: -6.869964122772217
    9. 'current' → logprob: -7.494964122772217
    10. ' output' → logprob: -7.994964122772217

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0086253322660923
    2. '=' → logprob: -4.758625507354736
    3. '_' → logprob: -12.758625030517578
    4. ' ' → logprob: -13.258625030517578
    5. '=[]' → logprob: -13.258625030517578
    6. '[]' → logprob: -13.508625030517578
    7. '[' → logprob: -14.633625030517578
    8. ' +=' → logprob: -14.633625030517578
    9. '=""' → logprob: -14.883625030517578
    10. 's' → logprob: -14.883625030517578

Token 202: ' []
' (ID: 8911)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.03316931426525116
    2. '[]' → logprob: -3.7831692695617676
    3. '''' → logprob: -4.783169269561768
    4. '"' → logprob: -6.533169269561768
    5. ''' → logprob: -10.283169746398926
    6. ' ""' → logprob: -11.658169746398926
    7. ' []' → logprob: -12.158169746398926
    8. '[]
' → logprob: -13.158169746398926
    9. '["' → logprob: -15.658169746398926
    10. '[' → logprob: -15.783169746398926

Token 203: '   ' (ID: 271)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.8666202425956726
    2. '   ' → logprob: -1.3666203022003174
    3. ' i' → logprob: -1.8666203022003174
    4. 'current' → logprob: -2.1166203022003174
    5. 'i' → logprob: -3.7416203022003174
    6. ' index' → logprob: -4.616620063781738
    7. ' last' → logprob: -5.116620063781738
    8. 'index' → logprob: -5.741620063781738
    9. 'pressed' → logprob: -6.741620063781738
    10. ' previous' → logprob: -6.991620063781738

Token 204: ' i' (ID: 575)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8314474821090698
    2. 'i' (adapté à ' i') → logprob: -1.0814474821090698
    3. 'prev' → logprob: -2.0814476013183594
    4. 'last' → logprob: -3.2064476013183594
    5. 'previous' → logprob: -3.4564476013183594
    6. 'pressed' → logprob: -4.581447601318359
    7. 'if' → logprob: -5.081447601318359
    8. 'press' → logprob: -5.706447601318359
    9. 'buffer' → logprob: -5.956447601318359
    10. 'index' → logprob: -6.331447601318359

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43018269538879395
    2. ' =' → logprob: -1.055182695388794
    3. ' +=' → logprob: -6.805182456970215
    4. ' ' → logprob: -8.930182456970215
    5. '+' → logprob: -9.055182456970215
    6. '+=' → logprob: -9.305182456970215
    7. 'n' → logprob: -11.930182456970215
    8. ')' → logprob: -12.805182456970215
    9. ' =
' → logprob: -12.805182456970215
    10. '0' → logprob: -13.305182456970215

Token 206: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620472434908152
    2. ' ' → logprob: -5.379620552062988
    3. '1' → logprob: -16.129619598388672
    4. '   ' → logprob: -16.879619598388672
    5. '۰' → logprob: -18.129619598388672
    6. '```' → logprob: -18.317119598388672
    7. 'len' → logprob: -18.567119598388672
    8. '  ' → logprob: -18.754619598388672
    9. '=' → logprob: -19.192119598388672
    10. 'int' → logprob: -19.504619598388672

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -19.500011444091797
    4. '1' → logprob: -19.625011444091797
    5. '۰' → logprob: -19.750011444091797
    6. '=' → logprob: -19.875011444091797
    7. '```' → logprob: -20.687511444091797
    8. '[' → logprob: -21.000011444091797
    9. 'int' → logprob: -21.437511444091797
    10. 'len' → logprob: -21.625011444091797

Token 208: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1511452198028564
    2. ' while' → logprob: -1.1511452198028564
    3. 'while' → logprob: -1.4011452198028564
    4. ' 
' → logprob: -2.9011452198028564
    5. ' ' → logprob: -3.5261452198028564
    6. '   ' → logprob: -4.151144981384277
    7. '<|end|>' → logprob: -5.151144981384277
    8. ')' → logprob: -5.276144981384277
    9. '    
' → logprob: -5.651144981384277
    10. '  
' → logprob: -6.276144981384277

Token 210: ' n' (ID: 297)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7201456427574158
    2. 'while' → logprob: -0.8451456427574158
    3. 'n' (adapté à ' n') → logprob: -2.5951457023620605
    4. ' n' → logprob: -4.8451457023620605
    5. 'length' → logprob: -7.9701457023620605
    6. 'len' → logprob: -7.9701457023620605
    7. ' length' → logprob: -8.345145225524902
    8. '   ' → logprob: -8.720145225524902
    9. ' len' → logprob: -9.845145225524902
    10. ' 
' → logprob: -9.845145225524902

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34869226813316345
    2. ' =' → logprob: -1.2236922979354858
    3. '=len' → logprob: -8.973691940307617
    4. ' ' → logprob: -9.473691940307617
    5. '   ' → logprob: -10.973691940307617
    6. ' =
' → logprob: -11.473691940307617
    7. ')' → logprob: -11.973691940307617
    8. '=
' → logprob: -13.348691940307617
    9. '=int' → logprob: -13.348691940307617
    10. '  ' → logprob: -13.348691940307617

Token 212: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.061967797577381134
    2. ' len' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.811967849731445
    4. '(len' → logprob: -17.186967849731445
    5. '=len' → logprob: -17.686967849731445
    6. '[len' → logprob: -18.436967849731445
    7. '	len' → logprob: -18.436967849731445
    8. '<len' → logprob: -20.311967849731445
    9. ',len' → logprob: -20.436967849731445
    10. ' ' → logprob: -20.936967849731445

Token 213: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -8.661626634420827e-05
    2. '(' → logprob: -9.625086784362793
    3. 'line' → logprob: -10.875086784362793
    4. ' line' → logprob: -13.750086784362793
    5. '=line' → logprob: -15.875086784362793
    6. ' (' → logprob: -16.000085830688477
    7. '[line' → logprob: -16.875085830688477
    8. ')' → logprob: -16.875085830688477
    9. ',line' → logprob: -17.250085830688477
    10. '(
' → logprob: -17.250085830688477

Token 214: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6166903151315637e-05
    2. ')
' → logprob: -11.250016212463379
    3. ' )' → logprob: -12.875016212463379
    4. '   ' → logprob: -15.125016212463379
    5. ')

' → logprob: -16.750015258789062
    6. '')' → logprob: -17.875015258789062
    7. '))' → logprob: -17.875015258789062
    8. ' ' → logprob: -18.125015258789062
    9. '),' → logprob: -18.375015258789062
    10. '")' → logprob: -18.875015258789062

Token 215: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4800677001476288
    2. '   ' → logprob: -1.4800677299499512
    3. 'while' → logprob: -1.9800677299499512
    4. '    
' → logprob: -4.605067729949951
    5. '
' → logprob: -5.730067729949951
    6. ' 
' → logprob: -6.980067729949951
    7. '```' → logprob: -7.605067729949951
    8. '  
' → logprob: -8.105067253112793
    9. '   
' → logprob: -8.480067253112793
    10. ' ' → logprob: -8.480067253112793

Token 216: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.014312764629721642
    2. ' while' → logprob: -4.264312744140625
    3. '   ' → logprob: -9.139312744140625
    4. 'current' → logprob: -10.889312744140625
    5. 'prev' → logprob: -11.264312744140625
    6. 'last' → logprob: -12.514312744140625
    7. 'previous' → logprob: -12.514312744140625
    8. '```' → logprob: -13.889312744140625
    9. 'While' → logprob: -14.889312744140625
    10. '	while' → logprob: -15.139312744140625

Token 217: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006802406162023544
    2. 'i' → logprob: -5.006802558898926
    3. ' ' → logprob: -9.381802558898926
    4. '   ' → logprob: -13.631802558898926
    5. '	i' → logprob: -14.131802558898926
    6. '  ' → logprob: -14.756802558898926
    7. ' ' → logprob: -15.631802558898926
    8. '(i' → logprob: -16.13180160522461
    9. ' n' → logprob: -16.25680160522461
    10. '_i' → logprob: -16.75680160522461

Token 218: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06208409368991852
    2. '<' → logprob: -2.812084197998047
    3. ' ' → logprob: -9.937084197998047
    4. '<len' → logprob: -9.937084197998047
    5. '<n' → logprob: -11.312084197998047
    6. ' <
' → logprob: -12.937084197998047
    7. '<num' → logprob: -13.937084197998047
    8. '<class' → logprob: -14.687084197998047
    9. '<s' → logprob: -14.937084197998047
    10. '<size' → logprob: -14.937084197998047

Token 219: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.201426699757576
    2. ' n' → logprob: -1.7014267444610596
    3. 'len' → logprob: -11.32642650604248
    4. ' len' → logprob: -13.95142650604248
    5. ' ' → logprob: -15.07642650604248
    6. '   ' → logprob: -16.576427459716797
    7. '	n' → logprob: -16.826427459716797
    8. ')n' → logprob: -17.826427459716797
    9. '_n' → logprob: -17.951427459716797
    10. '```' → logprob: -18.326427459716797

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008657831698656082
    2. ':
' → logprob: -5.258657932281494
    3. ' and' → logprob: -5.758657932281494
    4. 'and' → logprob: -9.133657455444336
    5. '   ' → logprob: -9.758657455444336
    6. ' :' → logprob: -10.008657455444336
    7. '):' → logprob: -10.383657455444336
    8. ')' → logprob: -11.508657455444336
    9. '):
' → logprob: -12.383657455444336
    10. ' :
' → logprob: -13.508657455444336

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0065806047059595585
    2. '   ' → logprob: -6.256580829620361
    3. '    ' → logprob: -6.506580829620361
    4. ' if' → logprob: -6.506580829620361
    5. '        
' → logprob: -8.006580352783203
    6. ' 
' → logprob: -8.506580352783203
    7. 'if' → logprob: -8.506580352783203
    8. ' ' → logprob: -8.506580352783203
    9. '     
' → logprob: -9.256580352783203
    10. '    
' → logprob: -9.381580352783203

Token 222: ' current' (ID: 2208)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4805794060230255
    2. 'current' (adapté à ' current') → logprob: -1.7305793762207031
    3. 'count' → logprob: -2.605579376220703
    4. '   ' → logprob: -2.855579376220703
    5. ' j' → logprob: -3.730579376220703
    6. ' current' → logprob: -3.855579376220703
    7. 'char' → logprob: -4.230579376220703
    8. 'ch' → logprob: -4.855579376220703
    9. 'if' → logprob: -6.480579376220703
    10. 'button' → logprob: -7.480579376220703

Token 223: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.005078871734440327
    2. '_button' → logprob: -5.3800787925720215
    3. ' =' → logprob: -8.63007926940918
    4. '_key' → logprob: -8.75507926940918
    5. '_btn' → logprob: -10.00507926940918
    6. 'char' → logprob: -10.50507926940918
    7. '_' → logprob: -10.75507926940918
    8. '=' → logprob: -11.75507926940918
    9. '_digit' → logprob: -11.75507926940918
    10. '_ch' → logprob: -12.50507926940918

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132646679878235
    2. '=' → logprob: -1.3132646083831787
    3. ' ' → logprob: -13.313264846801758
    4. 's' → logprob: -15.313264846801758
    5. '   ' → logprob: -15.563264846801758
    6. ')' → logprob: -15.563264846801758
    7. ',' → logprob: -15.813264846801758
    8. '=line' → logprob: -16.313264846801758
    9. '='' → logprob: -16.438264846801758
    10. '=s' → logprob: -16.938264846801758

Token 225: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.06197037547826767
    2. 'line' → logprob: -2.8119704723358154
    3. ' ' → logprob: -13.936970710754395
    4. '	line' → logprob: -14.186970710754395
    5. '   ' → logprob: -14.686970710754395
    6. '#line' → logprob: -15.561970710754395
    7. '[line' → logprob: -15.686970710754395
    8. '(line' → logprob: -15.936970710754395
    9. '=line' → logprob: -16.936969757080078
    10. 'Line' → logprob: -17.061969757080078

Token 226: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010354673489928246
    2. ']' → logprob: -5.010354518890381
    3. '       ' → logprob: -6.260354518890381
    4. '   ' → logprob: -7.135354518890381
    5. ' =' → logprob: -8.260354995727539
    6. '[' → logprob: -8.385354995727539
    7. '[
' → logprob: -9.010354995727539
    8. '
' → logprob: -10.135354995727539
    9. ']
' → logprob: -10.385354995727539
    10. ')' → logprob: -10.760354995727539

Token 227: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08664653450250626
    2. ')
' → logprob: -2.711646556854248
    3. '')' → logprob: -4.211646556854248
    4. '       ' → logprob: -7.336646556854248
    5. ']' → logprob: -7.711646556854248
    6. '')
' → logprob: -8.33664608001709
    7. ''' → logprob: -8.96164608001709
    8. ' )' → logprob: -8.96164608001709
    9. ' )
' → logprob: -10.46164608001709
    10. '']' → logprob: -10.58664608001709

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05125068873167038
    2. ' if' → logprob: -3.301250696182251
    3. 'if' → logprob: -4.801250457763672
    4. '        
' → logprob: -5.801250457763672
    5. '#' → logprob: -7.426250457763672
    6. '
' → logprob: -8.301250457763672
    7. 'j' → logprob: -8.676250457763672
    8. '   ' → logprob: -8.676250457763672
    9. '+' → logprob: -9.301250457763672
    10. ' 
' → logprob: -9.551250457763672

Token 229: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1324741691350937
    2. 'count' → logprob: -2.132474184036255
    3. ' if' → logprob: -6.382473945617676
    4. '       ' → logprob: -6.382473945617676
    5. 'j' → logprob: -6.507473945617676
    6. 'press' → logprob: -8.382473945617676
    7. '   ' → logprob: -8.507473945617676
    8. '#' → logprob: -8.882473945617676
    9. ' count' → logprob: -10.132473945617676
    10. '```' → logprob: -11.382473945617676

Token 230: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.0890359878540039
    2. 'current' → logprob: -2.464035987854004
    3. ' not' → logprob: -10.339035987854004
    4. ' ' → logprob: -10.839035987854004
    5. ' line' → logprob: -11.464035987854004
    6. 'line' → logprob: -11.714035987854004
    7. ' i' → logprob: -12.089035987854004
    8. '(current' → logprob: -12.464035987854004
    9. 'urrent' → logprob: -12.714035987854004
    10. 'i' → logprob: -13.089035987854004

Token 231: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -2.069664333248511e-05
    2. 'char' → logprob: -11.500020980834961
    3. ''_' → logprob: -12.625020980834961
    4. '_' → logprob: -12.750020980834961
    5. '_chars' → logprob: -13.500020980834961
    6. ' ==' → logprob: -14.125020980834961
    7. '==' → logprob: -14.625020980834961
    8. 'Char' → logprob: -14.750020980834961
    9. '_CHAR' → logprob: -15.125020980834961
    10. ' _' → logprob: -15.250020980834961

Token 232: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04452405869960785
    2. '==' → logprob: -3.1695239543914795
    3. '=='' → logprob: -7.544524192810059
    4. ' in' → logprob: -7.669524192810059
    5. ' =='' → logprob: -8.169524192810059
    6. ' not' → logprob: -9.419524192810059
    7. ''' → logprob: -9.794524192810059
    8. ' '' → logprob: -9.919524192810059
    9. ' ' → logprob: -10.169524192810059
    10. '.' → logprob: -12.669524192810059

Token 233: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002533452119678259
    2. ' '' → logprob: -6.002533435821533
    3. '"' → logprob: -11.002533912658691
    4. '0' → logprob: -11.377533912658691
    5. ' ' → logprob: -11.877533912658691
    6. '   ' → logprob: -12.252533912658691
    7. ''i' → logprob: -12.627533912658691
    8. ''O' → logprob: -13.627533912658691
    9. ''a' → logprob: -13.752533912658691
    10. ''\' → logprob: -13.752533912658691

Token 234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.040594398975372314
    2. ''' → logprob: -3.2905943393707275
    3. ' '' → logprob: -6.040594577789307
    4. ' ' → logprob: -9.290594100952148
    5. '':' → logprob: -10.540594100952148
    6. '"' → logprob: -11.290594100952148
    7. '1' → logprob: -12.040594100952148
    8. ' ':' → logprob: -12.165594100952148
    9. ' ')' → logprob: -12.415594100952148
    10. ''\' → logprob: -12.790594100952148

Token 235: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.4763449728488922
    2. '':' → logprob: -0.9763449430465698
    3. ':' → logprob: -6.851345062255859
    4. ''' → logprob: -7.601345062255859
    5. ':
' → logprob: -7.601345062255859
    6. '':
' → logprob: -8.97634506225586
    7. ''):
' → logprob: -10.72634506225586
    8. '':

' → logprob: -10.85134506225586
    9. ' '' → logprob: -11.35134506225586
    10. '       ' → logprob: -11.47634506225586

Token 236: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02376074157655239
    2. '       ' → logprob: -4.523760795593262
    3. '
' → logprob: -4.648760795593262
    4. '#' → logprob: -7.273760795593262
    5. '            
' → logprob: -7.523760795593262
    6. 'result' → logprob: -8.023760795593262
    7. '        
' → logprob: -8.023760795593262
    8. ':' → logprob: -8.523760795593262
    9. ' #' → logprob: -8.773760795593262
    10. ':
' → logprob: -9.023760795593262

Token 237: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02463565580546856
    2. '           ' → logprob: -4.6496357917785645
    3. '
' → logprob: -4.8996357917785645
    4. ' result' → logprob: -5.0246357917785645
    5. '#' (adapté à ' #') → logprob: -8.649635314941406
    6. '            
' → logprob: -8.774635314941406
    7. 'if' → logprob: -8.774635314941406
    8. '       ' → logprob: -8.899635314941406
    9. '        
' → logprob: -10.649635314941406
    10. ' if' → logprob: -11.149635314941406

Token 238: ' Cas' (ID: 8066)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2823255658149719
    2. ' result' → logprob: -1.4073255062103271
    3. '       ' → logprob: -7.532325744628906
    4. '           ' → logprob: -8.157325744628906
    5. '#' → logprob: -8.907325744628906
    6. 'if' → logprob: -9.282325744628906
    7. ' if' → logprob: -9.907325744628906
    8. ' #' → logprob: -10.407325744628906
    9. '
' → logprob: -11.782325744628906
    10. 'space' → logprob: -12.032325744628906

Token 239: ' du' (ID: 1462)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4029386043548584
    2. ' '' → logprob: -1.6529386043548584
    3. ''' → logprob: -3.1529386043548584
    4. ''s' → logprob: -3.6529386043548584
    5. '       ' → logprob: -4.1529388427734375
    6. ' '\' → logprob: -4.2779388427734375
    7. ''\' → logprob: -5.2779388427734375
    8. ' ' → logprob: -5.2779388427734375
    9. '0' → logprob: -5.4029388427734375
    10. '\n' → logprob: -5.4029388427734375

Token 240: ' bouton' (ID: 80635)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.224532961845398
    2. 'es' → logprob: -1.349532961845398
    3. ' espace' → logprob: -1.849532961845398
    4. ''espace' → logprob: -1.974532961845398
    5. 'space' → logprob: -2.3495330810546875
    6. ''s' → logprob: -4.4745330810546875
    7. ' '' → logprob: -4.5995330810546875
    8. ' space' → logprob: -4.5995330810546875
    9. 'result' → logprob: -4.8495330810546875
    10. 'esp' → logprob: -5.0995330810546875

Token 241: ' ' (ID: 220)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5019776225090027
    2. ''' → logprob: -1.0019776821136475
    3. ' espace' → logprob: -4.376977443695068
    4. ''s' → logprob: -5.626977443695068
    5. ''espace' → logprob: -6.126977443695068
    6. '0' → logprob: -6.126977443695068
    7. ' ' → logprob: -7.001977443695068
    8. 's' → logprob: -7.126977443695068
    9. 'es' → logprob: -7.626977443695068
    10. '```' → logprob: -7.626977443695068

Token 242: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04753825441002846
    2. '0' → logprob: -3.1725382804870605
    3. ''s' → logprob: -6.4225382804870605
    4. ''espace' → logprob: -6.7975382804870605
    5. ' '' → logprob: -7.4225382804870605
    6. ' ' → logprob: -7.6725382804870605
    7. 'es' → logprob: -8.797537803649902
    8. ''esp' → logprob: -8.922537803649902
    9. ' espace' → logprob: -9.672537803649902
    10. 'esp' → logprob: -9.797537803649902

Token 243: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016923654824495316
    2. '
' → logprob: -4.766923427581787
    3. ':
' → logprob: -5.891923427581787
    4. ':' → logprob: -6.141923427581787
    5. 'result' → logprob: -6.266923427581787
    6. '            
' → logprob: -7.266923427581787
    7. ',' → logprob: -8.266923904418945
    8. '=' → logprob: -9.266923904418945
    9. ' result' → logprob: -9.891923904418945
    10. ' =' → logprob: -10.016923904418945

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01025391835719347
    2. '            
' → logprob: -5.88525390625
    3. 'result' → logprob: -6.01025390625
    4. '
' → logprob: -6.13525390625
    5. ':' → logprob: -6.63525390625
    6. ':
' → logprob: -7.51025390625
    7. '#' → logprob: -8.38525390625
    8. '```' → logprob: -9.38525390625
    9. '       ' → logprob: -9.63525390625
    10. '.' → logprob: -9.76025390625

Token 245: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01198139414191246
    2. ' result' → logprob: -4.63698148727417
    3. '           ' → logprob: -7.13698148727417
    4. 'if' → logprob: -7.13698148727417
    5. '       ' → logprob: -8.886981010437012
    6. '            
' → logprob: -9.011981010437012
    7. ' if' → logprob: -9.386981010437012
    8. '
' → logprob: -9.511981010437012
    9. '        
' → logprob: -10.011981010437012
    10. 'space' → logprob: -10.261981010437012

Token 246: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.032236527651548386
    2. ' result' → logprob: -3.7822365760803223
    3. '           ' → logprob: -5.282236576080322
    4. 'count' → logprob: -6.407236576080322
    5. 'i' → logprob: -7.532236576080322
    6. 'if' → logprob: -7.657236576080322
    7. '       ' → logprob: -8.407236099243164
    8. 'space' → logprob: -8.407236099243164
    9. 'j' → logprob: -8.657236099243164
    10. '#' → logprob: -9.157236099243164

Token 247: ' compte' (ID: 19657)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3296305239200592
    2. ' result' → logprob: -1.7046304941177368
    3. 'if' → logprob: -3.5796306133270264
    4. 'i' → logprob: -3.7046306133270264
    5. 'append' → logprob: -3.9546306133270264
    6. ' i' → logprob: -4.704630374908447
    7. ' append' → logprob: -5.579630374908447
    8. '           ' → logprob: -6.079630374908447
    9. ' if' → logprob: -6.204630374908447
    10. '       ' → logprob: -6.329630374908447

Token 248: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.1830182075500488
    2. ' j' → logprob: -1.5580182075500488
    3. 'le' → logprob: -2.058018207550049
    4. 'les' → logprob: -2.058018207550049
    5. ' la' → logprob: -2.683018207550049
    6. ' combien' → logprob: -3.183018207550049
    7. ' ' → logprob: -3.558018207550049
    8. ' les' → logprob: -4.058018207550049
    9. '   ' → logprob: -4.308018207550049
    10. 'j' → logprob: -4.558018207550049

Token 249: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.1997738480567932
    2. 'i' → logprob: -2.6997737884521484
    3. '1' → logprob: -3.3247737884521484
    4. ' nombre' → logprob: -3.9497737884521484
    5. 'j' → logprob: -4.074773788452148
    6. 'nb' → logprob: -4.324773788452148
    7. '0' → logprob: -5.199773788452148
    8. 'esp' → logprob: -5.699773788452148
    9. 'while' → logprob: -5.949773788452148
    10. '```' → logprob: -6.199773788452148

Token 250: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6896775364875793
    2. '_' → logprob: -1.3146774768829346
    3. ' ' → logprob: -2.4396774768829346
    4. ' d' → logprob: -2.8146774768829346
    5. 'de' → logprob: -3.4396774768829346
    6. 'd' → logprob: -3.5646774768829346
    7. '=' → logprob: -5.064677715301514
    8. ' ' → logprob: -6.189677715301514
    9. '+' → logprob: -6.439677715301514
    10. '0' → logprob: -6.564677715301514

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03615269437432289
    2. ''' → logprob: -4.2861528396606445
    3. 'i' → logprob: -4.2861528396606445
    4. ' ' → logprob: -5.9111528396606445
    5. ' i' → logprob: -6.1611528396606445
    6. 'zeros' → logprob: -7.5361528396606445
    7. '1' → logprob: -7.6611528396606445
    8. ''app' → logprob: -7.7861528396606445
    9. ''i' → logprob: -7.9111528396606445
    10. ' '' → logprob: -8.536152839660645

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008265151642262936
    2. ''' → logprob: -5.383265018463135
    3. 'i' → logprob: -5.883265018463135
    4. ''i' → logprob: -8.258265495300293
    5. 'current' → logprob: -9.258265495300293
    6. ' ' → logprob: -9.383265495300293
    7. 'z' → logprob: -9.383265495300293
    8. 'press' → logprob: -9.883265495300293
    9. 'zeros' → logprob: -10.258265495300293
    10. '1' → logprob: -10.258265495300293

Token 253: ' cons' (ID: 1473)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6004320979118347
    2. 'j' → logprob: -1.3504321575164795
    3. 's' → logprob: -2.1004321575164795
    4. '   ' → logprob: -3.6004321575164795
    5. 'while' → logprob: -3.7254321575164795
    6. ' while' → logprob: -4.9754319190979
    7. 'count' → logprob: -5.1004319190979
    8. ' cons' → logprob: -6.4754319190979
    9. ' consecutive' → logprob: -6.7254319190979
    10. ' ' → logprob: -7.3504319190979

Token 254: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.00882444903254509
    2. 'ecut' → logprob: -4.758824348449707
    3. 'éc' → logprob: -9.258824348449707
    4. 'é' → logprob: -9.508824348449707
    5. '0' → logprob: -11.383824348449707
    6. '{' → logprob: -12.383824348449707
    7. '\'' → logprob: -12.383824348449707
    8. 'secut' → logprob: -12.508824348449707
    9. 'e' → logprob: -12.508824348449707
    10. '```' → logprob: -13.258824348449707

Token 255: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.007586629595607519
    2. 'if' → logprob: -6.007586479187012
    3. 'i' → logprob: -6.132586479187012
    4. 'ives' → logprob: -6.507586479187012
    5. 's' → logprob: -7.882586479187012
    6. '   ' → logprob: -8.382586479187012
    7. 'ive' → logprob: -8.382586479187012
    8. 'ivs' → logprob: -8.882586479187012
    9. 'iv' → logprob: -9.507586479187012
    10. '```' → logprob: -9.632586479187012

Token 256: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1963358074426651
    2. ' j' → logprob: -2.446335792541504
    3. 'j' → logprob: -2.571335792541504
    4. 'count' → logprob: -4.321335792541504
    5. '0' → logprob: -7.446335792541504
    6. ',' → logprob: -7.946335792541504
    7. '
' → logprob: -8.446335792541504
    8. ' count' → logprob: -8.696335792541504
    9. ',j' → logprob: -8.821335792541504
    10. '            
' → logprob: -8.946335792541504

Token 257: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009583894861862063
    2. 'j' → logprob: -7.375958442687988
    3. 'count' → logprob: -9.750958442687988
    4. '
' → logprob: -9.875958442687988
    5. ' j' → logprob: -9.875958442687988
    6. '0' → logprob: -10.125958442687988
    7. '       ' → logprob: -10.375958442687988
    8. ',' → logprob: -10.375958442687988
    9. '            
' → logprob: -10.375958442687988
    10. ' =' → logprob: -11.875958442687988

Token 258: ' zero' (ID: 12421)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04066856950521469
    2. 'j' → logprob: -3.415668487548828
    3. '           ' → logprob: -5.915668487548828
    4. ' count' → logprob: -6.040668487548828
    5. ' j' → logprob: -6.915668487548828
    6. 'start' → logprob: -7.665668487548828
    7. '0' → logprob: -8.290668487548828
    8. '   ' → logprob: -9.165668487548828
    9. 'zero' (adapté à ' zero') → logprob: -9.790668487548828
    10. '       ' → logprob: -11.165668487548828

Token 259: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.21634554862976074
    2. 's' → logprob: -1.7163455486297607
    3. 'count' → logprob: -4.21634578704834
    4. 'es' → logprob: -10.46634578704834
    5. 'Count' → logprob: -11.71634578704834
    6. '_len' → logprob: -11.96634578704834
    7. '_seq' → logprob: -12.21634578704834
    8. '_cnt' → logprob: -12.21634578704834
    9. '_start' → logprob: -12.46634578704834
    10. '_' → logprob: -12.84134578704834

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002078503370285
    2. '=' → logprob: -2.350207805633545
    3. '   ' → logprob: -14.225208282470703
    4. ' ' → logprob: -14.600208282470703
    5. '  ' → logprob: -18.350208282470703
    6. ' +=' → logprob: -18.600208282470703
    7. '    ' → logprob: -18.725208282470703
    8. 's' → logprob: -18.725208282470703
    9. ' ' → logprob: -19.225208282470703
    10. '=i' → logprob: -19.225208282470703

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022658880800008774
    2. '0' → logprob: -4.272658824920654
    3. ' ' → logprob: -4.772658824920654
    4. '   ' → logprob: -13.647659301757812
    5. 'line' → logprob: -15.147659301757812
    6. '```' → logprob: -16.397659301757812
    7. '  ' → logprob: -17.147659301757812
    8. 'i' → logprob: -17.585159301757812
    9. ' ' → logprob: -17.772659301757812
    10. ' line' → logprob: -18.022659301757812

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02057131566107273
    2. '0' → logprob: -3.895571231842041
    3. ' ' → logprob: -10.5205717086792
    4. 'line' → logprob: -13.0205717086792
    5. 'i' → logprob: -15.7705717086792
    6. '   ' → logprob: -17.145570755004883
    7. '```' → logprob: -17.520570755004883
    8. 'while' → logprob: -17.770570755004883
    9. '
' → logprob: -18.770570755004883
    10. 'len' → logprob: -19.020570755004883

Token 263: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0901527926325798
    2. '       ' → logprob: -2.8401527404785156
    3. '           ' → logprob: -3.7151527404785156
    4. 'while' → logprob: -5.715152740478516
    5. '
' → logprob: -9.465152740478516
    6. 'i' → logprob: -10.590152740478516
    7. ' while' → logprob: -10.965152740478516
    8. '        
' → logprob: -12.215152740478516
    9. ')
' → logprob: -12.465152740478516
    10. ',' → logprob: -13.215152740478516

Token 264: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08648353815078735
    2. '       ' → logprob: -2.5864834785461426
    3. 'while' → logprob: -4.961483478546143
    4. '           ' → logprob: -8.3364839553833
    5. 'i' → logprob: -8.9614839553833
    6. '
' → logprob: -9.7114839553833
    7. ' while' → logprob: -9.8364839553833
    8. '        
' → logprob: -10.9614839553833
    9. '<|end|>' → logprob: -11.2114839553833
    10. ' 
' → logprob: -11.8364839553833

Token 265: ' i' (ID: 575)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.28200939297676086
    2. 'i' (adapté à ' i') → logprob: -1.5320093631744385
    3. ' while' → logprob: -4.157009601593018
    4. '           ' → logprob: -4.407009601593018
    5. 'j' → logprob: -6.532009601593018
    6. ' i' → logprob: -8.15700912475586
    7. '       ' → logprob: -10.90700912475586
    8. '            
' → logprob: -11.78200912475586
    9. '
' → logprob: -12.03200912475586
    10. '```' → logprob: -12.65700912475586

Token 266: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12796474993228912
    2. ' +=' → logprob: -2.127964735031128
    3. '+' → logprob: -6.877964973449707
    4. '=' → logprob: -12.502964973449707
    5. 'import' → logprob: -14.502964973449707
    6. 'while' → logprob: -14.877964973449707
    7. ']+=' → logprob: -15.002964973449707
    8. ' +' → logprob: -15.627964973449707
    9. 'def' → logprob: -16.00296401977539
    10. '```' → logprob: -16.12796401977539

Token 267: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.126928329467773
    4. '  ' → logprob: -18.626928329467773
    5. '```' → logprob: -19.251928329467773
    6. ' ' → logprob: -19.376928329467773
    7. '0' → logprob: -20.064428329467773
    8. '１' → logprob: -21.376928329467773
    9. '+' → logprob: -21.626928329467773
    10. '
' → logprob: -21.751928329467773

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.125003814697266
    4. '```' → logprob: -18.125003814697266
    5. '0' → logprob: -19.125003814697266
    6. '  ' → logprob: -20.937503814697266
    7. '
' → logprob: -21.062503814697266
    8. '۱' → logprob: -21.250003814697266
    9. '１' → logprob: -21.375003814697266
    10. '2' → logprob: -21.437503814697266

Token 269: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8305357098579407
    2. '
' → logprob: -1.080535650253296
    3. '           ' → logprob: -1.705535650253296
    4. ' while' → logprob: -3.580535650253296
    5. '       ' → logprob: -4.330535888671875
    6. '            
' → logprob: -6.955535888671875
    7. ' 
' → logprob: -8.330535888671875
    8. '	while' → logprob: -8.455535888671875
    9. '   ' → logprob: -8.705535888671875
    10. '<|end|>' → logprob: -8.955535888671875

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7880050539970398
    2. '       ' → logprob: -1.2880051136016846
    3. 'while' → logprob: -1.4130051136016846
    4. ' while' → logprob: -3.6630051136016846
    5. '	while' → logprob: -8.913004875183105
    6. '   ' → logprob: -9.038004875183105
    7. '
' → logprob: -10.038004875183105
    8. '	       ' → logprob: -11.663004875183105
    9. '     ' → logprob: -12.288004875183105
    10. '        ' → logprob: -12.288004875183105

Token 271: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0025719713885337114
    2. ' while' → logprob: -6.002572059631348
    3. '           ' → logprob: -9.252572059631348
    4. '	while' → logprob: -16.00257110595703
    5. '            ' → logprob: -16.25257110595703
    6. '
' → logprob: -17.00257110595703
    7. '       ' → logprob: -17.00257110595703
    8. '```' → logprob: -17.00257110595703
    9. '            
' → logprob: -17.12757110595703
    10. 'While' → logprob: -17.25257110595703

Token 272: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007607458624988794
    2. ' i' → logprob: -4.882607460021973
    3. '	i' → logprob: -14.632607460021973
    4. ' ' → logprob: -15.257607460021973
    5. ' ' → logprob: -15.257607460021973
    6. '(i' → logprob: -15.507607460021973
    7. 'line' → logprob: -16.382606506347656
    8. '   ' → logprob: -16.632606506347656
    9. ' line' → logprob: -17.132606506347656
    10. '0' → logprob: -18.757606506347656

Token 273: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5035229325294495
    2. '<n' → logprob: -1.5035228729248047
    3. ' <' → logprob: -1.7535228729248047
    4. '<len' → logprob: -9.503522872924805
    5. 'n' → logprob: -11.253522872924805
    6. '<num' → logprob: -13.628522872924805
    7. '<N' → logprob: -14.003522872924805
    8. '<i' → logprob: -14.253522872924805
    9. '<m' → logprob: -14.378522872924805
    10. '[n' → logprob: -14.628522872924805

Token 274: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010329303331673145
    2. ' n' → logprob: -6.876032829284668
    3. '	n' → logprob: -16.876033782958984
    4. '   ' → logprob: -17.001033782958984
    5. 'len' → logprob: -18.126033782958984
    6. '```' → logprob: -18.376033782958984
    7. '_n' → logprob: -19.251033782958984
    8. 'line' → logprob: -19.376033782958984
    9. ' ' → logprob: -19.376033782958984
    10. ')n' → logprob: -19.501033782958984

Token 275: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4740806519985199
    2. 'and' → logprob: -0.9740806818008423
    3. '           ' → logprob: -13.099081039428711
    4. '       ' → logprob: -14.599081039428711
    5. ' ' → logprob: -15.099081039428711
    6. '   ' → logprob: -15.599081039428711
    7. '    ' → logprob: -15.724081039428711
    8. '        ' → logprob: -15.724081039428711
    9. '      ' → logprob: -16.59908103942871
    10. '     ' → logprob: -16.59908103942871

Token 276: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.023245712742209435
    2. ' line' → logprob: -3.7732458114624023
    3. '[line' → logprob: -17.023244857788086
    4. '	line' → logprob: -17.398244857788086
    5. '   ' → logprob: -17.648244857788086
    6. '(line' → logprob: -17.773244857788086
    7. '#line' → logprob: -18.523244857788086
    8. ' ' → logprob: -19.023244857788086
    9. '=line' → logprob: -19.273244857788086
    10. '```' → logprob: -20.273244857788086

Token 277: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. ' [' → logprob: -16.875
    4. '```' → logprob: -16.875
    5. 'i' → logprob: -17.0
    6. '   ' → logprob: -19.0
    7. '[
' → logprob: -19.0
    8. '[I' → logprob: -19.875
    9. '[j' → logprob: -20.125
    10. '           ' → logprob: -20.625

Token 278: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.543828547000885
    2. ' ==' → logprob: -1.0438284873962402
    3. ']' → logprob: -2.9188284873962402
    4. ']==' → logprob: -4.91882848739624
    5. '=='' → logprob: -5.54382848739624
    6. ''' → logprob: -6.41882848739624
    7. '']' → logprob: -8.043828964233398
    8. ']=='' → logprob: -9.293828964233398
    9. '']=='' → logprob: -10.793828964233398
    10. '']==' → logprob: -11.043828964233398

Token 279: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25657331943511963
    2. ' ==' → logprob: -1.5065733194351196
    3. '=='' → logprob: -5.38157320022583
    4. '=' → logprob: -11.006573677062988
    5. ''' → logprob: -11.881573677062988
    6. '==
' → logprob: -12.756573677062988
    7. ' =='' → logprob: -13.381573677062988
    8. '=="' → logprob: -13.506573677062988
    9. '```' → logprob: -13.631573677062988
    10. '0' → logprob: -14.381573677062988

Token 280: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0008082019630819559
    2. ' '' → logprob: -7.125808238983154
    3. '"' → logprob: -12.750807762145996
    4. '0' → logprob: -14.250807762145996
    5. ' ' → logprob: -16.250808715820312
    6. '   ' → logprob: -17.000808715820312
    7. '`' → logprob: -17.375808715820312
    8. '‘' → logprob: -18.250808715820312
    9. '('' → logprob: -18.250808715820312
    10. '’' → logprob: -18.625808715820312

Token 281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011047814972698689
    2. ''' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.88604736328125
    4. '"' → logprob: -18.26104736328125
    5. ' '' → logprob: -18.38604736328125
    6. '''' → logprob: -19.51104736328125
    7. ''''' → logprob: -19.88604736328125
    8. '۰' → logprob: -20.13604736328125
    9. '```' → logprob: -20.13604736328125
    10. '`' → logprob: -20.51104736328125

Token 282: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.0014426150592043996
    2. '':' → logprob: -7.1264424324035645
    3. ''' → logprob: -7.5014424324035645
    4. '':
' → logprob: -10.751442909240723
    5. ':
' → logprob: -10.876442909240723
    6. '           ' → logprob: -11.001442909240723
    7. '0' → logprob: -11.126442909240723
    8. ''):
' → logprob: -12.501442909240723
    9. '               ' → logprob: -12.626442909240723
    10. '):
' → logprob: -13.126442909240723

Token 283: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006189241539686918
    2. ' zero' → logprob: -6.131189346313477
    3. 'zero' → logprob: -6.381189346313477
    4. '           ' → logprob: -6.631189346313477
    5. '0' → logprob: -7.131189346313477
    6. '              ' → logprob: -9.631189346313477
    7. '```' → logprob: -10.631189346313477
    8. '   ' → logprob: -10.631189346313477
    9. '
' → logprob: -11.506189346313477
    10. '{
' → logprob: -11.881189346313477

Token 284: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' (adapté à ' zero') → logprob: -0.014463752508163452
    2. ' zero' → logprob: -4.264463901519775
    3. '               ' → logprob: -8.139463424682617
    4. '0' → logprob: -12.264463424682617
    5. 'i' → logprob: -13.639463424682617
    6. '   ' → logprob: -14.514463424682617
    7. '           ' → logprob: -14.514463424682617
    8. '                   ' → logprob: -14.639463424682617
    9. ' zéro' → logprob: -14.889463424682617
    10. '                ' → logprob: -15.889463424682617

Token 285: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. 'count' → logprob: -16.875
    3. ' _' → logprob: -16.875
    4. '_' → logprob: -17.375
    5. '_c' → logprob: -18.75
    6. '   ' → logprob: -18.75
    7. '_counts' → logprob: -18.875
    8. '_cont' → logprob: -19.125
    9. 's' → logprob: -19.25
    10. 'i' → logprob: -19.875

Token 286: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2519339919090271
    2. ' +=' → logprob: -1.5019340515136719
    3. ']+=' → logprob: -13.001934051513672
    4. '               ' → logprob: -13.501934051513672
    5. '           ' → logprob: -14.251934051513672
    6. '   ' → logprob: -15.376934051513672
    7. '=' → logprob: -16.126934051513672
    8. '            ' → logprob: -16.501934051513672
    9. '                   ' → logprob: -16.751934051513672
    10. '                ' → logprob: -17.001934051513672

Token 287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -18.50006675720215
    4. ' ' → logprob: -21.87506675720215
    5. '  ' → logprob: -22.25006675720215
    6. '<|end|>' → logprob: -22.37506675720215
    7. '۱' → logprob: -22.50006675720215
    8. '１' → logprob: -22.87506675720215
    9. '```' → logprob: -22.87506675720215
    10. '           ' → logprob: -23.06256675720215

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.125003814697266
    4. '  ' → logprob: -21.875003814697266
    5. '
' → logprob: -21.875003814697266
    6. '0' → logprob: -21.875003814697266
    7. '           ' → logprob: -22.000003814697266
    8. '       ' → logprob: -22.250003814697266
    9. '```' → logprob: -22.250003814697266
    10. '１' → logprob: -22.375003814697266

Token 289: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001035787514410913
    2. 'i' → logprob: -7.376035690307617
    3. '           ' → logprob: -8.001035690307617
    4. '   ' → logprob: -10.626035690307617
    5. '                   ' → logprob: -10.751035690307617
    6. ',' → logprob: -11.501035690307617
    7. ' i' → logprob: -11.626035690307617
    8. '       ' → logprob: -13.001035690307617
    9. '
' → logprob: -13.126035690307617
    10. ',i' → logprob: -13.251035690307617

Token 290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001105683040805161
    2. 'i' → logprob: -7.251105785369873
    3. ' i' → logprob: -8.626105308532715
    4. '           ' → logprob: -8.751105308532715
    5. '   ' → logprob: -10.751105308532715
    6. '                   ' → logprob: -11.376105308532715
    7. ',' → logprob: -11.376105308532715
    8. '       ' → logprob: -12.126105308532715
    9. ',i' → logprob: -13.376105308532715
    10. '0' → logprob: -13.626105308532715

Token 291: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0002075933152809739
    2. ' i' → logprob: -8.500207901000977
    3. '               ' → logprob: -12.625207901000977
    4. '           ' → logprob: -14.625207901000977
    5. '   ' → logprob: -15.000207901000977
    6. '                   ' → logprob: -17.875207901000977
    7. ' ' → logprob: -18.375207901000977
    8. '	i' → logprob: -18.625207901000977
    9. '       ' → logprob: -18.875207901000977
    10. '  ' → logprob: -20.125207901000977

Token 292: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25193649530410767
    2. ' +=' → logprob: -1.501936435699463
    3. '+' → logprob: -12.626936912536621
    4. '=' → logprob: -13.751936912536621
    5. '           ' → logprob: -13.876936912536621
    6. ']+=' → logprob: -13.876936912536621
    7. '   ' → logprob: -14.626936912536621
    8. ')' → logprob: -15.126936912536621
    9. '```' → logprob: -16.376935958862305
    10. '       ' → logprob: -16.751935958862305

Token 293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017030329909175634
    2. ' ' → logprob: -6.376703262329102
    3. '   ' → logprob: -15.001703262329102
    4. '```' → logprob: -15.126703262329102
    5. ' ' → logprob: -16.8142032623291
    6. '
' → logprob: -17.2517032623291
    7. '           ' → logprob: -17.8142032623291
    8. '0' → logprob: -17.9392032623291
    9. '  ' → logprob: -18.1892032623291
    10. '۱' → logprob: -18.5642032623291

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '0' → logprob: -17.125011444091797
    4. '   ' → logprob: -17.375011444091797
    5. '```' → logprob: -17.500011444091797
    6. '۱' → logprob: -19.750011444091797
    7. '<|end|>' → logprob: -20.000011444091797
    8. '           ' → logprob: -20.125011444091797
    9. '
' → logprob: -20.125011444091797
    10. '１' → logprob: -20.312511444091797

Token 295: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11412788927555084
    2. '           ' → logprob: -2.2391278743743896
    3. '            
' → logprob: -7.489128112792969
    4. ' 
' → logprob: -8.239128112792969
    5. '
' → logprob: -8.489128112792969
    6. 'if' → logprob: -9.739128112792969
    7. '
            
' → logprob: -10.239128112792969
    8. '#' → logprob: -10.239128112792969
    9. '\n' → logprob: -10.614128112792969
    10. '  
' → logprob: -10.739128112792969

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.058405667543411255
    2. '
' → logprob: -3.058405637741089
    3. '            
' → logprob: -4.933405876159668
    4. ' 
' → logprob: -6.683405876159668
    5. ' if' → logprob: -7.808405876159668
    6. 'result' → logprob: -8.183405876159668
    7. 'if' → logprob: -8.808405876159668
    8. '#' → logprob: -9.558405876159668
    9. '
            
' → logprob: -9.808405876159668
    10. '\n' → logprob: -10.183405876159668

Token 297: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16534781455993652
    2. '           ' → logprob: -2.1653478145599365
    3. ' result' → logprob: -3.9153478145599365
    4. '
' → logprob: -4.165348052978516
    5. 'if' → logprob: -6.665348052978516
    6. '            
' → logprob: -8.165348052978516
    7. ' if' → logprob: -8.165348052978516
    8. '#' (adapté à ' #') → logprob: -9.040348052978516
    9. 'space' → logprob: -9.415348052978516
    10. ' 
' → logprob: -10.415348052978516

Token 298: ' Si' (ID: 7832)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.003755544312298298
    2. ' result' → logprob: -5.628755569458008
    3. 'if' → logprob: -9.878755569458008
    4. 'space' → logprob: -10.003755569458008
    5. '           ' → logprob: -11.003755569458008
    6. 'spaces' → logprob: -11.378755569458008
    7. 'for' → logprob: -11.628755569458008
    8. 'res' → logprob: -12.128755569458008
    9. '
' → logprob: -13.003755569458008
    10. '#' → logprob: -13.253755569458008

Token 299: ' plusieurs' (ID: 20875)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.009871418587863445
    2. 'zero' → logprob: -4.634871482849121
    3. ' zéro' → logprob: -9.759871482849121
    4. ' current' → logprob: -10.884871482849121
    5. ' result' → logprob: -11.259871482849121
    6. ' len' → logprob: -11.384871482849121
    7. 'result' → logprob: -12.884871482849121
    8. ' i' → logprob: -13.009871482849121
    9. ' ' → logprob: -13.509871482849121
    10. 'len' → logprob: -13.759871482849121

Token 300: ' ' (ID: 220)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.6423439383506775
    2. 'esp' → logprob: -1.2673439979553223
    3. '0' → logprob: -3.0173439979553223
    4. '_' → logprob: -3.3923439979553223
    5. 'es' → logprob: -3.5173439979553223
    6. ''' → logprob: -4.017343997955322
    7. 'spaces' → logprob: -4.392343997955322
    8. ''esp' → logprob: -4.642343997955322
    9. ' '' → logprob: -4.767343997955322
    10. ''app' → logprob: -5.142343997955322

Token 301: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.6539860963821411
    2. '0' → logprob: -1.6539860963821411
    3. 'zero' → logprob: -1.6539860963821411
    4. ''\' → logprob: -1.7789860963821411
    5. ''s' → logprob: -2.7789859771728516
    6. 'z' → logprob: -3.0289859771728516
    7. 'esp' → logprob: -3.4039859771728516
    8. 'zeros' → logprob: -3.7789859771728516
    9. ''esp' → logprob: -3.9039859771728516
    10. '\n' → logprob: -4.028985977172852

Token 302: ' cons' (ID: 1473)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20062504708766937
    2. 's' → logprob: -1.8256250619888306
    3. ' ,' → logprob: -4.700624942779541
    4. ' s' → logprob: -5.700624942779541
    5. '           ' → logprob: -6.325624942779541
    6. ' sont' → logprob: -7.200624942779541
    7. '   ' → logprob: -7.325624942779541
    8. ',
' → logprob: -7.450624942779541
    9. ' =' → logprob: -7.575624942779541
    10. 'print' → logprob: -7.825624942779541

Token 303: 'écut' (ID: 96392)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8562816977500916
    2. 'ent' → logprob: -2.3562817573547363
    3. 'tt' → logprob: -2.3562817573547363
    4. 'tent' → logprob: -2.3562817573547363
    5. 'urent' → logprob: -3.3562817573547363
    6. 'ut' → logprob: -3.6062817573547363
    7. 'itent' → logprob: -3.7312817573547363
    8. 'aient' → logprob: -3.8562817573547363
    9. 'tat' → logprob: -4.231281757354736
    10. 'trent' → logprob: -4.606281757354736

Token 304: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.001826192601583898
    2. 'if' → logprob: -6.626826286315918
    3. 's' → logprob: -8.751826286315918
    4. '   ' → logprob: -9.501826286315918
    5. 'ents' → logprob: -9.626826286315918
    6. '
' → logprob: -9.876826286315918
    7. '```' → logprob: -9.876826286315918
    8. '#' → logprob: -10.626826286315918
    9. '

' → logprob: -11.126826286315918
    10. 'i' → logprob: -11.626826286315918

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8480743169784546
    2. ':' → logprob: -1.5980743169784546
    3. '==' → logprob: -1.8480743169784546
    4. ':
' → logprob: -2.348074436187744
    5. ' ==' → logprob: -2.973074436187744
    6. '           ' → logprob: -3.473074436187744
    7. '>' → logprob: -4.098074436187744
    8. ' ,' → logprob: -5.848074436187744
    9. '>=' → logprob: -5.848074436187744
    10. '               ' → logprob: -5.973074436187744

Token 306: ' on' (ID: 402)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07055016607046127
    2. ' result' → logprob: -2.6955502033233643
    3. '           ' → logprob: -7.695549964904785
    4. '#' → logprob: -9.570549964904785
    5. '               ' → logprob: -10.445549964904785
    6. '   ' → logprob: -10.820549964904785
    7. 'if' → logprob: -11.695549964904785
    8. ' #' → logprob: -12.070549964904785
    9. 'for' → logprob: -12.445549964904785
    10. ' if' → logprob: -12.945549964904785

Token 307: ' affiche' (ID: 127479)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.4543919265270233
    2. 'aj' → logprob: -2.2043919563293457
    3. ' ajoute' → logprob: -2.4543919563293457
    4. 'result' → logprob: -2.7043919563293457
    5. ' append' → logprob: -3.2043919563293457
    6. '.append' → logprob: -3.7043919563293457
    7. ' result' → logprob: -4.329391956329346
    8. '           ' → logprob: -4.329391956329346
    9. 'app' → logprob: -6.204391956329346
    10. ' ajout' → logprob: -6.704391956329346

Token 308: ' (' (ID: 350)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.4426040053367615
    2. ''' → logprob: -1.0676040649414062
    3. ''\' → logprob: -5.567604064941406
    4. ''une' → logprob: -5.817604064941406
    5. ''a' → logprob: -6.067604064941406
    6. ''s' → logprob: -6.067604064941406
    7. '"' → logprob: -7.567604064941406
    8. 'un' → logprob: -7.942604064941406
    9. ''espace' → logprob: -7.942604064941406
    10. ' '' → logprob: -8.192604064941406

Token 309: 'zero' (ID: 29221)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016997728496789932
    2. ''\' → logprob: -4.516997814178467
    3. ''un' → logprob: -6.016997814178467
    4. '"' → logprob: -6.766997814178467
    5. ' '' → logprob: -6.891997814178467
    6. ''n' → logprob: -8.391997337341309
    7. ''s' → logprob: -8.391997337341309
    8. ''une' → logprob: -8.516997337341309
    9. ''a' → logprob: -8.891997337341309
    10. ')' → logprob: -9.016997337341309

Token 310: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0010968804126605392
    2. ''' → logprob: -7.501096725463867
    3. 'count' → logprob: -8.376096725463867
    4. '_' → logprob: -8.876096725463867
    5. '"' → logprob: -10.501096725463867
    6. ''\' → logprob: -10.626096725463867
    7. '_counts' → logprob: -11.126096725463867
    8. '```' → logprob: -11.251096725463867
    9. ''_' → logprob: -11.376096725463867
    10. '`' → logprob: -11.501096725463867

Token 311: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9857963919639587
    2. ' *' → logprob: -1.3607964515686035
    3. '-' → logprob: -1.4857964515686035
    4. ')' → logprob: -2.9857964515686035
    5. '*' → logprob: -3.6107964515686035
    6. ' //' → logprob: -3.9857964515686035
    7. '   ' → logprob: -4.6107964515686035
    8. ''' → logprob: -4.8607964515686035
    9. ' +' → logprob: -4.9857964515686035
    10. ' %' → logprob: -5.4857964515686035

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005691178957931697
    2. ' ' → logprob: -7.5005693435668945
    3. ')' → logprob: -11.625569343566895
    4. '   ' → logprob: -12.250569343566895
    5. ''' → logprob: -13.875569343566895
    6. ' ' → logprob: -14.750569343566895
    7. '')' → logprob: -15.375569343566895
    8. ' )' → logprob: -16.125568389892578
    9. '  ' → logprob: -16.438068389892578
    10. 'len' → logprob: -16.625568389892578

Token 313: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013513708487153053
    2. ')*' → logprob: -4.388513565063477
    3. ')'' → logprob: -8.263513565063477
    4. ' )' → logprob: -8.638513565063477
    5. '*' → logprob: -8.763513565063477
    6. ')\' → logprob: -8.888513565063477
    7. '+' → logprob: -10.388513565063477
    8. ''' → logprob: -10.513513565063477
    9. ')+'' → logprob: -10.763513565063477
    10. '),' → logprob: -10.888513565063477

Token 314: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.808497428894043
    2. '*' → logprob: -0.933497428894043
    3. ''' → logprob: -2.058497428894043
    4. ' *' → logprob: -4.933497428894043
    5. ' spaces' → logprob: -5.058497428894043
    6. 'spaces' → logprob: -5.683497428894043
    7. ' espace' → logprob: -5.808497428894043
    8. ''esp' → logprob: -6.058497428894043
    9. ' '' → logprob: -6.183497428894043
    10. 'es' → logprob: -6.433497428894043

Token 315: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003153480589389801
    2. 'result' → logprob: -6.253153324127197
    3. '               ' → logprob: -7.378153324127197
    4. '       ' → logprob: -8.628153800964355
    5. ' result' → logprob: -9.128153800964355
    6. ',' → logprob: -9.378153800964355
    7. '            
' → logprob: -10.503153800964355
    8. ' for' → logprob: -10.753153800964355
    9. '                   ' → logprob: -10.878153800964355
    10. ' ,' → logprob: -10.878153800964355

Token 316: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002166491176467389
    2. ' for' → logprob: -9.750216484069824
    3. '       ' → logprob: -9.750216484069824
    4. '               ' → logprob: -10.375216484069824
    5. 'result' → logprob: -11.000216484069824
    6. ',' → logprob: -11.250216484069824
    7. '            
' → logprob: -12.000216484069824
    8. '		' → logprob: -12.250216484069824
    9. 'for' → logprob: -12.625216484069824
    10. ' result' → logprob: -12.750216484069824

Token 317: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5365622043609619
    2. '           ' → logprob: -1.036562204360962
    3. ' result' → logprob: -3.036562204360962
    4. ' if' → logprob: -5.161561965942383
    5. 'if' → logprob: -5.161561965942383
    6. '            ' → logprob: -8.286561965942383
    7. '            
' → logprob: -8.536561965942383
    8. '               ' → logprob: -8.536561965942383
    9. 'for' → logprob: -8.661561965942383
    10. ' for' → logprob: -8.911561965942383

Token 318: ' Sinon' (ID: 154924)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.30196425318717957
    2. ' result' → logprob: -1.551964282989502
    3. '           ' → logprob: -3.551964282989502
    4. ' if' → logprob: -4.551964282989502
    5. 'if' → logprob: -4.801964282989502
    6. 'for' → logprob: -7.801964282989502
    7. ' for' → logprob: -7.926964282989502
    8. '               ' → logprob: -8.926963806152344
    9. '   ' → logprob: -9.301963806152344
    10. ' spaces' → logprob: -9.551963806152344

Token 319: ' un' (ID: 537)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8209506869316101
    2. ' result' → logprob: -1.5709507465362549
    3. ',' → logprob: -1.9459507465362549
    4. ':' → logprob: -2.070950746536255
    5. '           ' → logprob: -2.945950746536255
    6. ' if' → logprob: -4.820950508117676
    7. ':
' → logprob: -4.945950508117676
    8. ' ,' → logprob: -6.070950508117676
    9. 'if' → logprob: -6.070950508117676
    10. '            ' → logprob: -6.195950508117676

Token 320: ' seul' (ID: 33041)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.15320058166980743
    2. 'es' → logprob: -2.528200626373291
    3. 'space' → logprob: -3.903200626373291
    4. ' space' → logprob: -4.153200626373291
    5. ''' → logprob: -4.653200626373291
    6. 'e' → logprob: -5.028200626373291
    7. ''espace' → logprob: -5.028200626373291
    8. 'esp' → logprob: -6.528200626373291
    9. ' ' → logprob: -7.153200626373291
    10. ' seul' → logprob: -8.278200149536133

Token 321: ' ' (ID: 220)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.036738332360982895
    2. 'es' → logprob: -4.161738395690918
    3. ''' → logprob: -4.786738395690918
    4. ''espace' → logprob: -5.286738395690918
    5. 'space' → logprob: -5.536738395690918
    6. ' space' → logprob: -6.911738395690918
    7. ' '' → logprob: -7.161738395690918
    8. ' ' → logprob: -7.286738395690918
    9. 'esp' → logprob: -8.411738395690918
    10. '"' → logprob: -9.286738395690918

Token 322: '0' (ID: 15)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.9278169274330139
    2. ' espace' → logprob: -1.1778168678283691
    3. 'es' → logprob: -1.9278168678283691
    4. ''' → logprob: -2.302816867828369
    5. ''espace' → logprob: -3.177816867828369
    6. ' ' → logprob: -5.552816867828369
    7. ' space' → logprob: -6.302816867828369
    8. 'esp' → logprob: -6.552816867828369
    9. '"' → logprob: -6.927816867828369
    10. ' '' → logprob: -8.052817344665527

Token 323: ' isol' (ID: 16651)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11964387446641922
    2. ' if' → logprob: -2.8696439266204834
    3. '       ' → logprob: -3.3696439266204834
    4. 'if' → logprob: -4.619643688201904
    5. ''' → logprob: -5.994643688201904
    6. '            
' → logprob: -6.369643688201904
    7. ',' → logprob: -6.744643688201904
    8. ' ' → logprob: -7.119643688201904
    9. '            ' → logprob: -7.244643688201904
    10. ' 
' → logprob: -7.244643688201904

Token 324: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.021820127964019775
    2. 'e' → logprob: -4.146820068359375
    3. '0' → logprob: -5.271820068359375
    4. ''' → logprob: -8.146820068359375
    5. '   ' → logprob: -9.396820068359375
    6. 't' → logprob: -9.646820068359375
    7. 'u' → logprob: -9.896820068359375
    8. 'i' → logprob: -11.146820068359375
    9. 'ément' → logprob: -11.271820068359375
    10. '```' → logprob: -11.271820068359375

Token 325: ' n' (ID: 297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02407034859061241
    2. ' if' → logprob: -5.0240702629089355
    3. '               ' → logprob: -5.5240702629089355
    4. ',' → logprob: -5.6490702629089355
    5. ' result' → logprob: -5.7740702629089355
    6. 'result' → logprob: -5.8990702629089355
    7. '            
' → logprob: -7.5240702629089355
    8. '       ' → logprob: -7.5240702629089355
    9. ' 
' → logprob: -7.6490702629089355
    10. '
' → logprob: -8.274070739746094

Token 326: ''arrive' (ID: 173309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9439888596534729
    2. ''est' → logprob: -1.4439888000488281
    3. 'e' → logprob: -1.5689888000488281
    4. 'result' → logprob: -2.943988800048828
    5. ''aj' → logprob: -3.443988800048828
    6. ''ap' → logprob: -4.193988800048828
    7. 'append' → logprob: -4.693988800048828
    8. 'é' → logprob: -4.818988800048828
    9. ''aff' → logprob: -5.318988800048828
    10. 'est' → logprob: -5.318988800048828

Token 327: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.5557574033737183
    2. ' jamais' → logprob: -1.4307574033737183
    3. ' pas' → logprob: -1.6807574033737183
    4. 's' → logprob: -8.055757522583008
    5. 'jam' → logprob: -8.180757522583008
    6. ' ' → logprob: -9.180757522583008
    7. '_pas' → logprob: -9.930757522583008
    8. '```' → logprob: -10.055757522583008
    9. 'à' → logprob: -10.180757522583008
    10. 'p' → logprob: -10.305757522583008

Token 328: ' selon' (ID: 27571)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7017667889595032
    2. ' à' → logprob: -1.7017667293548584
    3. ' ' → logprob: -2.3267667293548584
    4. ' pas' → logprob: -2.5767667293548584
    5. 'à' → logprob: -3.2017667293548584
    6. ',' → logprob: -3.5767667293548584
    7. 'pas' → logprob: -3.9517667293548584
    8. '.' → logprob: -4.2017669677734375
    9. ')' → logprob: -4.9517669677734375
    10. 's' → logprob: -5.0767669677734375

Token 329: ' l' (ID: 305)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8275420665740967
    2. 'la' → logprob: -1.3275420665740967
    3. 'l' → logprob: -1.7025420665740967
    4. 'le' → logprob: -2.3275420665740967
    5. ' la' → logprob: -4.452542304992676
    6. ' les' → logprob: -5.577542304992676
    7. ' l' → logprob: -6.827542304992676
    8. ' le' → logprob: -7.577542304992676
    9. '```' → logprob: -8.327542304992676
    10. 'len' → logprob: -8.452542304992676

Token 330: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3651951551437378
    2. ''' → logprob: -1.8651951551437378
    3. 'e' → logprob: -2.3651952743530273
    4. 'es' → logprob: -3.8651952743530273
    5. 'la' → logprob: -4.990195274353027
    6. 'u' → logprob: -5.115195274353027
    7. '#' → logprob: -5.990195274353027
    8. ''en' → logprob: -6.240195274353027
    9. '```' → logprob: -6.240195274353027
    10. 'en' → logprob: -6.365195274353027

Token 331: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.020812444388866425
    2. 'en' → logprob: -4.020812511444092
    3. 'é' → logprob: -6.270812511444092
    4. '```' → logprob: -9.395812034606934
    5. 'ex' → logprob: -9.520812034606934
    6. ''' → logprob: -9.645812034606934
    7. 'instructions' → logprob: -9.770812034606934
    8. 'instruction' → logprob: -10.020812034606934
    9. 'description' → logprob: -10.145812034606934
    10. 'input' → logprob: -10.520812034606934

Token 332: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.02615119330585003
    2. 'onc' → logprob: -4.151151180267334
    3. 'non' → logprob: -4.776151180267334
    4. 'on' → logprob: -6.776151180267334
    5. 'once' → logprob: -8.151151657104492
    6. 'oncer' → logprob: -8.901151657104492
    7. 'nonce' → logprob: -11.026151657104492
    8. 'um' → logprob: -12.276151657104492
    9. '```' → logprob: -12.276151657104492
    10. 'onné' → logprob: -12.401151657104492

Token 333: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04262572154402733
    2. '       ' → logprob: -3.542625665664673
    3. '            
' → logprob: -5.292625904083252
    4. '               ' → logprob: -5.917625904083252
    5. ' 
' → logprob: -7.167625904083252
    6. ' if' → logprob: -7.417625904083252
    7. ',' → logprob: -7.667625904083252
    8. '        
' → logprob: -7.667625904083252
    9. ' elif' → logprob: -7.917625904083252
    10. '   ' → logprob: -8.167625427246094

Token 334: 'jam' (ID: 24395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1705780178308487
    2. '           ' → logprob: -2.6705780029296875
    3. 'continue' → logprob: -3.0455780029296875
    4. ' continue' → logprob: -4.1705780029296875
    5. ' )' → logprob: -4.9205780029296875
    6. '               ' → logprob: -5.6705780029296875
    7. '),' → logprob: -6.1705780029296875
    8. 'pass' → logprob: -6.1705780029296875
    9. ' but' → logprob: -6.6705780029296875
    10. ')
' → logprob: -6.7955780029296875

Token 335: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.0003001888981088996
    2. 'ai' → logprob: -8.750300407409668
    3. 'a' → logprob: -9.250300407409668
    4. 'e' → logprob: -10.875300407409668
    5. 'aise' → logprob: -12.125300407409668
    6. 'aisi' → logprob: -12.125300407409668
    7. 'al' → logprob: -12.500300407409668
    8. ''ai' → logprob: -12.500300407409668
    9. 'es' → logprob: -13.125300407409668
    10. 'mais' → logprob: -13.625300407409668

Token 336: ' au' (ID: 2791)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8841890096664429
    2. 'se' → logprob: -2.0091891288757324
    3. 'enc' → logprob: -2.1341891288757324
    4. ' rencontré' → logprob: -2.1341891288757324
    5. ')' → logprob: -2.3841891288757324
    6. ''' → logprob: -2.8841891288757324
    7. '')' → logprob: -3.5091891288757324
    8. 'arr' → logprob: -3.5091891288757324
    9. 'util' → logprob: -3.6341891288757324
    10. 's' → logprob: -3.8841891288757324

Token 337: ' début' (ID: 29589)
  Prédit: 'mil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mil' → logprob: -0.6995915174484253
    2. 'dé' → logprob: -0.6995915174484253
    3. 'd' → logprob: -6.449591636657715
    4. 'deb' → logprob: -7.074591636657715
    5. 'fin' → logprob: -7.074591636657715
    6. 'bout' → logprob: -7.324591636657715
    7. 'de' → logprob: -8.324591636657715
    8. 'b' → logprob: -8.324591636657715
    9. '   ' → logprob: -8.449591636657715
    10. 'm' → logprob: -8.574591636657715

Token 338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14884904026985168
    2. '           ' → logprob: -2.3988490104675293
    3. ',' → logprob: -4.148849010467529
    4. ' or' → logprob: -4.398849010467529
    5. ' ou' → logprob: -4.898849010467529
    6. ' )' → logprob: -5.648849010467529
    7. '       ' → logprob: -5.773849010467529
    8. '),' → logprob: -5.898849010467529
    9. '               ' → logprob: -7.398849010467529
    10. ' ' → logprob: -7.648849010467529

Token 339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014778443146497011
    2. '               ' → logprob: -7.3764777183532715
    3. '            
' → logprob: -8.12647819519043
    4. '       ' → logprob: -8.50147819519043
    5. ',' → logprob: -9.25147819519043
    6. 'if' → logprob: -10.25147819519043
    7. ' 
' → logprob: -10.62647819519043
    8. ' if' → logprob: -10.75147819519043
    9. 'result' → logprob: -11.00147819519043
    10. ' or' → logprob: -11.12647819519043

Token 340: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26956120133399963
    2. ' if' → logprob: -2.269561290740967
    3. 'if' → logprob: -2.644561290740967
    4. 'result' → logprob: -3.019561290740967
    5. ' result' → logprob: -4.894561290740967
    6. '            
' → logprob: -5.519561290740967
    7. '            ' → logprob: -8.019560813903809
    8. '               ' → logprob: -8.019560813903809
    9. '       ' → logprob: -8.394560813903809
    10. ' for' → logprob: -9.144560813903809

Token 341: ' donc' (ID: 14206)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.30685409903526306
    2. ' result' → logprob: -1.5568541288375854
    3. '           ' → logprob: -3.056854009628296
    4. ' if' → logprob: -6.306854248046875
    5. 'if' → logprob: -6.431854248046875
    6. ' for' → logprob: -6.806854248046875
    7. 'for' → logprob: -6.931854248046875
    8. ' continue' → logprob: -8.181854248046875
    9. 'continue' → logprob: -8.431854248046875
    10. '               ' → logprob: -9.306854248046875

Token 342: ' ici' (ID: 27994)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.2117878198623657
    2. '           ' → logprob: -1.5867878198623657
    3. 'result' → logprob: -1.5867878198623657
    4. ' continue' → logprob: -1.7117878198623657
    5. ' result' → logprob: -2.711787700653076
    6. 'pass' → logprob: -3.961787700653076
    7. '   ' → logprob: -4.711787700653076
    8. '            ' → logprob: -5.711787700653076
    9. ' pass' → logprob: -5.836787700653076
    10. 'for' → logprob: -6.086787700653076

Token 343: ' toujours' (ID: 16867)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9808877110481262
    2. 'continue' → logprob: -1.4808876514434814
    3. '               ' → logprob: -1.6058876514434814
    4. ' continue' → logprob: -1.7308876514434814
    5. 'result' → logprob: -4.7308878898620605
    6. 'pass' → logprob: -6.4808878898620605
    7. '       ' → logprob: -6.6058878898620605
    8. ' ' → logprob: -6.8558878898620605
    9. '   ' → logprob: -7.2308878898620605
    10. ' result' → logprob: -7.3558878898620605

Token 344: ' >=' (ID: 5064)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.4510505199432373
    2. 'result' → logprob: -1.5760505199432373
    3. 'un' → logprob: -2.2010505199432373
    4. 'i' → logprob: -2.2010505199432373
    5. ' ajouter' → logprob: -2.5760505199432373
    6. 'space' → logprob: -2.8260505199432373
    7. ' i' → logprob: -3.3260505199432373
    8. ' result' → logprob: -4.076050758361816
    9. '   ' → logprob: -4.326050758361816
    10. 'aj' → logprob: -4.451050758361816

Token 345: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9445931315422058
    2. '1' → logprob: -1.0695931911468506
    3. '2' → logprob: -1.3195931911468506
    4. '0' → logprob: -8.06959342956543
    5. ' zero' → logprob: -8.44459342956543
    6. '```' → logprob: -9.56959342956543
    7. 'zero' → logprob: -9.69459342956543
    8. ' ' → logprob: -10.19459342956543
    9. '   ' → logprob: -10.31959342956543
    10. ' zéro' → logprob: -11.88209342956543

Token 346: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017189908772706985
    2. ' if' → logprob: -4.392189979553223
    3. 'if' → logprob: -5.642189979553223
    4. '       ' → logprob: -8.017189979553223
    5. '            
' → logprob: -8.017189979553223
    6. 'result' → logprob: -8.642189979553223
    7. '               ' → logprob: -8.892189979553223
    8. '            ' → logprob: -11.017189979553223
    9. ' ' → logprob: -11.267189979553223
    10. ' result' → logprob: -11.392189979553223

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027159531600773335
    2. ' if' → logprob: -6.752716064453125
    3. 'if' → logprob: -7.002716064453125
    4. '            
' → logprob: -8.002716064453125
    5. 'result' → logprob: -8.752716064453125
    6. '       ' → logprob: -9.252716064453125
    7. ' result' → logprob: -11.127716064453125
    8. '               ' → logprob: -12.127716064453125
    9. '        
' → logprob: -12.502716064453125
    10. '```' → logprob: -12.502716064453125

Token 348: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.28378966450691223
    2. ' result' → logprob: -1.6587896347045898
    3. '           ' → logprob: -2.90878963470459
    4. ' if' → logprob: -6.53378963470459
    5. 'if' (adapté à ' if') → logprob: -7.53378963470459
    6. '            
' → logprob: -10.15878963470459
    7. '               ' → logprob: -10.40878963470459
    8. '            ' → logprob: -10.53378963470459
    9. '   ' → logprob: -10.65878963470459
    10. '       ' → logprob: -10.90878963470459

Token 349: ' zero' (ID: 12421)
  Prédit: ' zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.002476724097505212
    2. 'zero' → logprob: -6.002476692199707
    3. ' ' → logprob: -15.252476692199707
    4. '   ' → logprob: -15.627476692199707
    5. ' zéro' → logprob: -15.627476692199707
    6. ' ' → logprob: -16.127477645874023
    7. '0' → logprob: -16.752477645874023
    8. '零' → logprob: -16.877477645874023
    9. ' cero' → logprob: -17.252477645874023
    10. '_zero' → logprob: -17.502477645874023

Token 350: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.816093228830141e-06
    2. ' _' → logprob: -13.62500286102295
    3. '_counts' → logprob: -13.62500286102295
    4. '_' → logprob: -15.00000286102295
    5. '>' → logprob: -17.750001907348633
    6. 'count' → logprob: -17.875001907348633
    7. '_c' → logprob: -18.125001907348633
    8. '_code' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.500001907348633
    10. '_cont' → logprob: -18.875001907348633

Token 351: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04354441165924072
    2. '>' → logprob: -3.168544292449951
    3. ' ==' → logprob: -7.918544292449951
    4. '==' → logprob: -9.16854476928711
    5. ' ' → logprob: -9.66854476928711
    6. ' >=' → logprob: -12.54354476928711
    7. ' <=' → logprob: -12.54354476928711
    8. '   ' → logprob: -13.16854476928711
    9. ' <' → logprob: -13.66854476928711
    10. '>=' → logprob: -14.04354476928711

Token 352: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.874882430769503e-05
    2. '2' → logprob: -10.000079154968262
    3. ' ' → logprob: -10.375079154968262
    4. '   ' → logprob: -14.500079154968262
    5. '0' → logprob: -14.687579154968262
    6. '１' → logprob: -16.062578201293945
    7. '```' → logprob: -16.187578201293945
    8. ')' → logprob: -16.375078201293945
    9. '۱' → logprob: -16.625078201293945
    10. '  ' → logprob: -16.625078201293945

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007245833403430879
    2. '2' → logprob: -7.625724792480469
    3. ' ' → logprob: -8.375724792480469
    4. '0' → logprob: -12.500724792480469
    5. '   ' → logprob: -14.563224792480469
    6. '>' → logprob: -14.875724792480469
    7. ''' → logprob: -15.000724792480469
    8. ')' → logprob: -15.625724792480469
    9. '  ' → logprob: -16.00072479248047
    10. '3' → logprob: -16.25072479248047

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5780560970306396
    2. ':
' → logprob: -0.8280560970306396
    3. '           ' → logprob: -6.453056335449219
    4. '               ' → logprob: -8.078056335449219
    5. ':
' → logprob: -9.203056335449219
    6. ')' → logprob: -10.078056335449219
    7. ' :' → logprob: -11.203056335449219
    8. '):
' → logprob: -11.328056335449219
    9. ':return' → logprob: -11.703056335449219
    10. ' :
' → logprob: -11.703056335449219

Token 355: '               ' (ID: 506)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7226783633232117
    2. '           ' → logprob: -1.3476784229278564
    3. '               ' → logprob: -1.8476784229278564
    4. ' result' → logprob: -2.3476784229278564
    5. '            
' → logprob: -8.222678184509277
    6. '                
' → logprob: -8.347678184509277
    7. '	       ' → logprob: -9.222678184509277
    8. ''' → logprob: -9.347678184509277
    9. ' ' → logprob: -9.347678184509277
    10. ',result' → logprob: -9.472678184509277

Token 356: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05498778074979782
    2. ' result' → logprob: -2.929987668991089
    3. '                   ' → logprob: -10.679987907409668
    4. '   ' → logprob: -10.929987907409668
    5. '               ' → logprob: -11.179987907409668
    6. 'pass' → logprob: -11.429987907409668
    7. ' pass' → logprob: -12.304987907409668
    8. '                
' → logprob: -12.429987907409668
    9. '           ' → logprob: -12.679987907409668
    10. '                    
' → logprob: -12.679987907409668

Token 357: ' un' (ID: 537)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00040910433745011687
    2. ' result' → logprob: -8.000409126281738
    3. 'pass' → logprob: -10.250409126281738
    4. '#' → logprob: -11.500409126281738
    5. 'space' → logprob: -12.125409126281738
    6. '0' → logprob: -12.250409126281738
    7. '   ' → logprob: -12.625409126281738
    8. 'continue' → logprob: -13.125409126281738
    9. ' ' → logprob: -13.375409126281738
    10. '  ' → logprob: -14.125409126281738

Token 358: ' seul' (ID: 33041)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.90965735912323
    2. 'es' → logprob: -1.15965735912323
    3. 'space' → logprob: -1.78465735912323
    4. ''espace' → logprob: -3.4096574783325195
    5. ''' → logprob: -3.6596574783325195
    6. ' space' → logprob: -4.2846574783325195
    7. ''\' → logprob: -4.9096574783325195
    8. 'result' → logprob: -4.9096574783325195
    9. 'e' → logprob: -5.0346574783325195
    10. 'esp' → logprob: -5.2846574783325195

Token 359: ' ' (ID: 220)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.19415277242660522
    2. ''' → logprob: -2.81915283203125
    3. ' result' → logprob: -3.06915283203125
    4. 'space' → logprob: -3.31915283203125
    5. '0' → logprob: -4.19415283203125
    6. ' '' → logprob: -4.81915283203125
    7. ' espace' → logprob: -5.81915283203125
    8. ' space' → logprob: -6.31915283203125
    9. ' ' → logprob: -6.31915283203125
    10. ''s' → logprob: -7.19415283203125

Token 360: '0' (ID: 15)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.5850323438644409
    2. ''' → logprob: -1.460032343864441
    3. '0' → logprob: -2.3350324630737305
    4. 'result' → logprob: -2.9600324630737305
    5. 'es' → logprob: -3.4600324630737305
    6. ''espace' → logprob: -4.2100324630737305
    7. ' espace' → logprob: -5.7100324630737305
    8. ''s' → logprob: -5.8350324630737305
    9. 'esp' → logprob: -6.0850324630737305
    10. ' ' → logprob: -6.2100324630737305

Token 361: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9410279393196106
    2. 'result' → logprob: -1.1910278797149658
    3. '+=' → logprob: -2.691027879714966
    4. '
' → logprob: -2.816027879714966
    5. ' =' → logprob: -3.691027879714966
    6. '.append' → logprob: -3.816027879714966
    7. '#' → logprob: -4.066028118133545
    8. ')' → logprob: -4.191028118133545
    9. '           ' → logprob: -4.566028118133545
    10. ' ' → logprob: -4.691028118133545

Token 362: ' ce' (ID: 2357)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08909694105386734
    2. ' result' → logprob: -2.464097023010254
    3. '   ' → logprob: -10.214097023010254
    4. 'pass' → logprob: -10.214097023010254
    5. ' pass' → logprob: -10.464097023010254
    6. '#' → logprob: -10.964097023010254
    7. '           ' → logprob: -11.589097023010254
    8. ' #' → logprob: -12.339097023010254
    9. '  ' → logprob: -12.964097023010254
    10. ' ' → logprob: -12.964097023010254

Token 363: ' cas' (ID: 2108)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7055193781852722
    2. 's' → logprob: -1.955519437789917
    3. 'result' → logprob: -2.330519437789917
    4. ' result' → logprob: -2.955519437789917
    5. ' n' → logprob: -3.330519437789917
    6. ''' → logprob: -3.455519437789917
    7. 'space' → logprob: -3.580519437789917
    8. '#' → logprob: -3.955519437789917
    9. 'st' → logprob: -4.330519199371338
    10. ''s' → logprob: -5.080519199371338

Token 364: ' n' (ID: 297)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6626042127609253
    2. 'continue' → logprob: -2.037604331970215
    3. ' n' → logprob: -2.537604331970215
    4. ':' → logprob: -3.037604331970215
    5. ' continues' → logprob: -3.037604331970215
    6. '               ' → logprob: -3.162604331970215
    7. 'contin' → logprob: -3.537604331970215
    8. '           ' → logprob: -3.787604331970215
    9. ' =' → logprob: -4.162604331970215
    10. ' est' → logprob: -4.662604331970215

Token 365: ''est' (ID: 6616)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.8214321732521057
    2. ''est' → logprob: -1.071432113647461
    3. 'pas' → logprob: -2.821432113647461
    4. 'n' → logprob: -3.446432113647461
    5. '#' → logprob: -3.696432113647461
    6. '       ' → logprob: -4.446432113647461
    7. ''' → logprob: -4.446432113647461
    8. '           ' → logprob: -4.446432113647461
    9. ' n' → logprob: -4.446432113647461
    10. 'elif' → logprob: -4.571432113647461

Token 366: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.005628935527056456
    2. ' pas' → logprob: -5.505629062652588
    3. ' jamais' → logprob: -7.130629062652588
    4. 'jam' → logprob: -8.25562858581543
    5. 'app' → logprob: -8.63062858581543
    6. ' normalement' → logprob: -9.50562858581543
    7. '#' → logprob: -10.13062858581543
    8. ' app' → logprob: -10.50562858581543
    9. '```' → logprob: -10.63062858581543
    10. 'prob' → logprob: -10.88062858581543

Token 367: ' cens' (ID: 55288)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6059529781341553
    2. 'possible' → logprob: -1.9809529781341553
    3. 'prés' → logprob: -2.7309529781341553
    4. 'util' → logprob: -2.7309529781341553
    5. 'trait' → logprob: -3.3559529781341553
    6. ' g' → logprob: -3.6059529781341553
    7. 'handled' → logprob: -4.480953216552734
    8. 'pré' → logprob: -4.480953216552734
    9. 'enc' → logprob: -4.605953216552734
    10. 're' → logprob: -4.605953216552734

Token 368: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.03864116221666336
    2. 'u' → logprob: -3.4136412143707275
    3. 'ée' → logprob: -7.038640975952148
    4. 'és' → logprob: -7.663640975952148
    5. 'éré' → logprob: -7.663640975952148
    6. 'supp' → logprob: -8.038640975952148
    7. 'uré' → logprob: -8.163640975952148
    8. 'sens' → logprob: -8.288640975952148
    9. ''u' → logprob: -8.538640975952148
    10. 'us' → logprob: -8.788640975952148

Token 369: ' arriver' (ID: 78302)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6854565143585205
    2. 'arr' → logprob: -0.9354565143585205
    3. 'se' → logprob: -2.4354565143585205
    4. ' arriver' → logprob: -5.060456275939941
    5. ' se' → logprob: -5.310456275939941
    6. ''arr' → logprob: -6.435456275939941
    7. 'être' → logprob: -7.185456275939941
    8. 'occur' → logprob: -7.560456275939941
    9. ''ex' → logprob: -7.685456275939941
    10. ' ' → logprob: -7.685456275939941

Token 370: ' selon' (ID: 27571)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21423031389713287
    2. '               ' → logprob: -1.9642302989959717
    3. ':
' → logprob: -4.464230537414551
    4. ':' → logprob: -4.714230537414551
    5. '                   ' → logprob: -4.714230537414551
    6. ',' → logprob: -4.839230537414551
    7. '
' → logprob: -6.214230537414551
    8. '.' → logprob: -6.339230537414551
    9. '   ' → logprob: -6.339230537414551
    10. '       ' → logprob: -6.339230537414551

Token 371: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8135020732879639
    2. 'l' → logprob: -1.4385020732879639
    3. ' la' → logprob: -1.6885020732879639
    4. ' les' → logprob: -3.188502073287964
    5. ' le' → logprob: -3.438502073287964
    6. 'le' → logprob: -3.938502073287964
    7. ' the' → logprob: -4.313502311706543
    8. '```' → logprob: -4.938502311706543
    9. 'the' → logprob: -5.063502311706543
    10. 'la' → logprob: -5.188502311706543

Token 372: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10844475030899048
    2. 'én' → logprob: -2.7334446907043457
    3. '#' → logprob: -3.9834446907043457
    4. 'é' → logprob: -5.233444690704346
    5. ''é' → logprob: -5.858444690704346
    6. ''#' → logprob: -5.983444690704346
    7. 'i' → logprob: -6.358444690704346
    8. ''en' → logprob: -6.608444690704346
    9. ''utilisateur' → logprob: -6.858444690704346
    10. ''ex' → logprob: -7.608444690704346

Token 373: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.004719664808362722
    2. 'é' → logprob: -5.7547197341918945
    3. 'en' → logprob: -7.1297197341918945
    4. '#' → logprob: -8.129719734191895
    5. 'else' → logprob: -9.129719734191895
    6. 'assert' → logprob: -9.379719734191895
    7. 'elif' → logprob: -9.879719734191895
    8. '"""' → logprob: -10.129719734191895
    9. ''' → logprob: -11.004719734191895
    10. '```' → logprob: -11.004719734191895

Token 374: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.008596135303378105
    2. 'acé' → logprob: -5.758595943450928
    3. 'cé' → logprob: -5.883595943450928
    4. 'unt' → logprob: -8.133596420288086
    5. 'été' → logprob: -8.133596420288086
    6. 'umé' → logprob: -8.133596420288086
    7. 'até' → logprob: -8.258596420288086
    8. 'eté' → logprob: -8.633596420288086
    9. 'é' → logprob: -8.758596420288086
    10. 'ent' → logprob: -8.758596420288086

Token 375: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2615463137626648
    2. '               ' → logprob: -1.6365463733673096
    3. ':' → logprob: -4.5115461349487305
    4. '0' → logprob: -5.3865461349487305
    5. ':
' → logprob: -5.6365461349487305
    6. '                   ' → logprob: -5.8865461349487305
    7. 'continue' → logprob: -5.8865461349487305
    8. ' continue' → logprob: -6.0115461349487305
    9. '
' → logprob: -6.5115461349487305
    10. '.' → logprob: -7.0115461349487305

Token 376: 'il' (ID: 311)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.30892446637153625
    2. ' pass' → logprob: -1.5589244365692139
    3. 'return' → logprob: -3.683924436569214
    4. ' return' → logprob: -4.183924674987793
    5. ')' → logprob: -5.183924674987793
    6. 'continue' → logprob: -5.308924674987793
    7. ')
' → logprob: -6.683924674987793
    8. ' continue' → logprob: -6.683924674987793
    9. '               ' → logprob: -7.183924674987793
    10. '#' → logprob: -7.933924674987793

Token 377: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7865077257156372
    2. ')' → logprob: -0.9115077257156372
    3. 'continue' → logprob: -2.7865076065063477
    4. ' n' → logprob: -3.6615076065063477
    5. '#' → logprob: -4.286507606506348
    6. '           ' → logprob: -4.786507606506348
    7. ' est' → logprob: -5.161507606506348
    8. 'n' → logprob: -5.286507606506348
    9. '               ' → logprob: -5.661507606506348
    10. ')
' → logprob: -6.036507606506348

Token 378: ' pousse' (ID: 167099)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.50082528591156
    2. 's' → logprob: -1.62582528591156
    3. ''arrive' → logprob: -2.2508254051208496
    4. 'should' → logprob: -2.5008254051208496
    5. 'pas' → logprob: -2.6258254051208496
    6. ')' → logprob: -3.1258254051208496
    7. 'f' → logprob: -3.6258254051208496
    8. ' n' → logprob: -4.00082540512085
    9. 'est' → logprob: -4.00082540512085
    10. 'arr' → logprob: -4.00082540512085

Token 379: ' jamais' (ID: 23077)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.18223929405212402
    2. 'pas' → logprob: -1.932239294052124
    3. 's' → logprob: -5.182239532470703
    4. ' jamais' → logprob: -5.182239532470703
    5. 'r' → logprob: -5.307239532470703
    6. ' rien' → logprob: -6.307239532470703
    7. '   ' → logprob: -7.307239532470703
    8. ' aucun' → logprob: -7.807239532470703
    9. ')' → logprob: -7.932239532470703
    10. ' plus' → logprob: -8.057239532470703

Token 380: ' ' (ID: 220)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.275068461894989
    2. ' sur' → logprob: -3.275068521499634
    3. ' ' → logprob: -3.400068521499634
    4. ' un' → logprob: -3.525068521499634
    5. ' )' → logprob: -3.900068521499634
    6. 'sur' → logprob: -3.900068521499634
    7. ')' → logprob: -4.150068283081055
    8. 'l' → logprob: -4.400068283081055
    9. ' plus' → logprob: -4.650068283081055
    10. ' a' → logprob: -4.650068283081055

Token 381: '0' (ID: 15)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.2553102374076843
    2. 'à' → logprob: -2.380310297012329
    3. 'plus' → logprob: -3.505310297012329
    4. 'un' → logprob: -3.630310297012329
    5. 'au' → logprob: -4.63031005859375
    6. 'une' → logprob: -4.88031005859375
    7. 'de' → logprob: -5.00531005859375
    8. ')' → logprob: -5.13031005859375
    9. ' sur' → logprob: -5.13031005859375
    10. 'pas' → logprob: -5.25531005859375

Token 382: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1564668416976929
    2. ' à' → logprob: -1.4064668416976929
    3. 's' → logprob: -2.0314669609069824
    4. '')' → logprob: -2.1564669609069824
    5. ''' → logprob: -3.7814669609069824
    6. ' )' → logprob: -3.7814669609069824
    7. ''à' → logprob: -3.9064669609069824
    8. ' '' → logprob: -4.156466960906982
    9. ' au' → logprob: -4.781466960906982
    10. 'à' → logprob: -4.781466960906982

Token 383: ' début' (ID: 29589)
  Prédit: 'mil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mil' → logprob: -0.03270077705383301
    2. 'dé' → logprob: -4.032700538635254
    3. 'bout' → logprob: -5.657700538635254
    4. 'del' → logprob: -6.657700538635254
    5. ' milieu' → logprob: -6.782700538635254
    6. 'moins' → logprob: -6.907700538635254
    7. 'm' → logprob: -7.157700538635254
    8. 'code' → logprob: -7.532700538635254
    9. 'mi' → logprob: -7.532700538635254
    10. 'd' → logprob: -7.532700538635254

Token 384: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12420628219842911
    2. '           ' → logprob: -2.499206304550171
    3. ')
' → logprob: -3.999206304550171
    4. '),' → logprob: -4.999206066131592
    5. '               ' → logprob: -5.124206066131592
    6. ',' → logprob: -6.124206066131592
    7. '')' → logprob: -7.874206066131592
    8. '):
' → logprob: -8.49920654296875
    9. '       ' → logprob: -8.87420654296875
    10. ' )' → logprob: -8.87420654296875

Token 385: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3522384762763977
    2. '           ' → logprob: -1.477238416671753
    3. ')' → logprob: -4.227238655090332
    4. '                
' → logprob: -4.477238655090332
    5. '                   ' → logprob: -4.727238655090332
    6. '            
' → logprob: -5.102238655090332
    7. '       ' → logprob: -5.977238655090332
    8. ':' → logprob: -5.977238655090332
    9. ' ' → logprob: -6.102238655090332
    10. '#' → logprob: -6.227238655090332

Token 386: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3165349960327148
    2. 'pass' → logprob: -1.3165349960327148
    3. ' pass' → logprob: -1.5665349960327148
    4. '               ' → logprob: -2.691534996032715
    5. 'continue' → logprob: -2.941534996032715
    6. ' continue' → logprob: -3.316534996032715
    7. '           ' → logprob: -3.566534996032715
    8. ' result' → logprob: -3.691534996032715
    9. '                   ' → logprob: -3.941534996032715
    10. 'return' → logprob: -4.941534996032715

Token 387: ' mais' (ID: 2899)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.22260725498199463
    2. 'result' → logprob: -1.8476072549819946
    3. 'continue' → logprob: -3.847607135772705
    4. ' pass' → logprob: -4.222607135772705
    5. 'i' → logprob: -6.347607135772705
    6. '           ' → logprob: -6.472607135772705
    7. '#' → logprob: -7.097607135772705
    8. ' continue' → logprob: -7.847607135772705
    9. 'return' → logprob: -8.222607612609863
    10. ' result' → logprob: -8.347607612609863

Token 388: ' si' (ID: 1784)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5897530913352966
    2. ' continue' → logprob: -1.8397531509399414
    3. 'pass' → logprob: -1.8397531509399414
    4. ' result' → logprob: -2.7147531509399414
    5. 'result' → logprob: -3.7147531509399414
    6. 'continue' → logprob: -4.214753150939941
    7. '           ' → logprob: -4.589753150939941
    8. '   ' → logprob: -5.589753150939941
    9. '               ' → logprob: -5.964753150939941
    10. '    ' → logprob: -6.464753150939941

Token 389: ' cela' (ID: 17542)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.661439061164856
    2. 'zero' → logprob: -0.911439061164856
    3. ' True' → logprob: -3.4114389419555664
    4. 'True' → logprob: -3.6614389419555664
    5. ' ' → logprob: -5.036438941955566
    6. ' False' → logprob: -5.536438941955566
    7. 'False' → logprob: -5.536438941955566
    8. '0' → logprob: -6.286438941955566
    9. ' zéro' → logprob: -6.411438941955566
    10. ' on' → logprob: -6.536438941955566

Token 390: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.03295041248202324
    2. ' se' → logprob: -4.532950401306152
    3. ' arrive' → logprob: -4.782950401306152
    4. ' arriv' → logprob: -5.532950401306152
    5. '   ' → logprob: -6.407950401306152
    6. 'se' → logprob: -6.407950401306152
    7. 'sur' → logprob: -6.532950401306152
    8. '           ' → logprob: -7.157950401306152
    9. ' arrives' → logprob: -7.157950401306152
    10. ''arrive' → logprob: -7.157950401306152

Token 391: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7567110657691956
    2. ',' → logprob: -1.8817110061645508
    3. ':' → logprob: -2.006711006164551
    4. '                   ' → logprob: -2.006711006164551
    5. '           ' → logprob: -2.756711006164551
    6. ':
' → logprob: -3.506711006164551
    7. ' :' → logprob: -5.631711006164551
    8. ' continue' → logprob: -6.006711006164551
    9. 'result' → logprob: -6.381711006164551
    10. ' ,' → logprob: -6.381711006164551

Token 392: ' on' (ID: 402)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3148784041404724
    2. ' result' → logprob: -1.3148784637451172
    3. '               ' → logprob: -7.314878463745117
    4. '                   ' → logprob: -7.939878463745117
    5. 'pass' → logprob: -8.689878463745117
    6. ' pass' → logprob: -8.939878463745117
    7. '           ' → logprob: -9.439878463745117
    8. 'return' → logprob: -10.064878463745117
    9. 'continue' → logprob: -10.189878463745117
    10. ' continue' → logprob: -10.689878463745117

Token 393: ' considère' (ID: 176437)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5783946514129639
    2. ' append' → logprob: -1.0783946514129639
    3. 'append' → logprob: -2.953394651412964
    4. 'continue' → logprob: -3.828394651412964
    5. ' result' → logprob: -4.453394889831543
    6. ' ajoute' → logprob: -6.203394889831543
    7. 'result' → logprob: -6.578394889831543
    8. '.append' → logprob: -6.578394889831543
    9. ' pass' → logprob: -6.703394889831543
    10. '           ' → logprob: -7.203394889831543

Token 394: ' que' (ID: 661)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8076324462890625
    2. ''' → logprob: -1.3076324462890625
    3. ' result' → logprob: -1.4326324462890625
    4. ' '' → logprob: -3.4326324462890625
    5. ''un' → logprob: -5.3076324462890625
    6. ' ' → logprob: -6.0576324462890625
    7. ''s' → logprob: -6.6826324462890625
    8. '   ' → logprob: -6.9326324462890625
    9. '"' → logprob: -8.057632446289062
    10. ' le' → logprob: -8.182632446289062

Token 395: ' ça' (ID: 13590)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.03370783105492592
    2. ' result' → logprob: -3.408707857131958
    3. 'pass' → logprob: -10.533707618713379
    4. '   ' → logprob: -11.908707618713379
    5. '#' → logprob: -12.658707618713379
    6. ' ' → logprob: -12.658707618713379
    7. ''' → logprob: -12.908707618713379
    8. ' resultat' → logprob: -13.033707618713379
    9. ' résultat' → logprob: -13.533707618713379
    10. 'space' → logprob: -13.533707618713379

Token 396: ' active' (ID: 6725)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.857559084892273
    2. ' result' → logprob: -0.982559084892273
    3. ' append' → logprob: -3.2325592041015625
    4. ' ajoute' → logprob: -3.4825592041015625
    5. ' continue' → logprob: -3.7325592041015625
    6. 'append' → logprob: -3.8575592041015625
    7. ' print' → logprob: -3.9825592041015625
    8. ' s' → logprob: -4.1075592041015625
    9. 's' → logprob: -4.4825592041015625
    10. 'print' → logprob: -4.9825592041015625

Token 397: ' la' (ID: 557)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6043736338615417
    2. ' '' → logprob: -2.1043736934661865
    3. ' a' → logprob: -2.3543736934661865
    4. ' l' → logprob: -3.1043736934661865
    5. ' un' → logprob: -3.1043736934661865
    6. ' le' → logprob: -3.3543736934661865
    7. ''un' → logprob: -3.6043736934661865
    8. ' la' → logprob: -3.6043736934661865
    9. 'a' → logprob: -4.104373455047607
    10. ' une' → logprob: -4.354373455047607

Token 398: ' sais' (ID: 30010)
  Prédit: 'pause'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pause' → logprob: -1.3046512603759766
    2. ' fin' → logprob: -1.9296512603759766
    3. 'fin' → logprob: -1.9296512603759766
    4. ' pause' → logprob: -2.4296512603759766
    5. 'space' → logprob: -3.0546512603759766
    6. 's' → logprob: -3.1796512603759766
    7. 'es' → logprob: -3.6796512603759766
    8. ' touche' → logprob: -3.6796512603759766
    9. 'case' → logprob: -3.8046512603759766
    10. 'c' → logprob: -3.8046512603759766

Token 399: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.006075029727071524
    2. 'e' → logprob: -5.131074905395508
    3. 'is' → logprob: -9.631074905395508
    4. ' ie' → logprob: -10.256074905395508
    5. 'sie' → logprob: -10.506074905395508
    6. 'ies' → logprob: -12.881074905395508
    7. 'le' → logprob: -13.131074905395508
    8. ' e' → logprob: -13.256074905395508
    9. 's' → logprob: -13.381074905395508
    10. 'es' → logprob: -13.381074905395508

Token 400: ' continue' (ID: 4901)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.042510561645030975
    2. 'd' → logprob: -3.542510509490967
    3. ' ' → logprob: -5.167510509490967
    4. ''' → logprob: -6.167510509490967
    5. ' de' → logprob: -7.042510509490967
    6. ' '' → logprob: -7.292510509490967
    7. 'e' → logprob: -7.417510509490967
    8. ' espace' → logprob: -7.667510509490967
    9. ' a' → logprob: -7.792510509490967
    10. '_' → logprob: -8.417510986328125

Token 401: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6756857633590698
    2. ' ' → logprob: -2.1756858825683594
    3. ' (' → logprob: -2.4256858825683594
    4. ',' → logprob: -3.1756858825683594
    5. ')' → logprob: -3.6756858825683594
    6. ''' → logprob: -3.6756858825683594
    7. '...' → logprob: -3.6756858825683594
    8. ' =' → logprob: -4.175685882568359
    9. '   ' → logprob: -4.675685882568359
    10. ' .' → logprob: -4.800685882568359

Token 402: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11440639197826385
    2. '           ' → logprob: -2.3644063472747803
    3. '                
' → logprob: -4.989406585693359
    4. '            
' → logprob: -5.614406585693359
    5. '                   ' → logprob: -7.364406585693359
    6. '\n' → logprob: -7.489406585693359
    7. '.' → logprob: -7.614406585693359
    8. ' (' → logprob: -7.739406585693359
    9. ' 
' → logprob: -8.73940658569336
    10. ',' → logprob: -9.23940658569336

Token 403: ' #' (ID: 1069)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -1.0385572910308838
    2. 'result' → logprob: -1.5385572910308838
    3. 'i' → logprob: -2.038557291030884
    4. 'pass' → logprob: -2.288557291030884
    5. ' i' → logprob: -2.663557291030884
    6. ' result' → logprob: -3.038557291030884
    7. 'continue' → logprob: -3.288557291030884
    8. ' continue' → logprob: -3.663557291030884
    9. '   ' → logprob: -5.163557052612305
    10. '       ' → logprob: -5.413557052612305

Token 404: ' =>' (ID: 871)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7449247241020203
    2. 'pass' → logprob: -1.744924783706665
    3. 'result' → logprob: -1.869924783706665
    4. 'i' → logprob: -1.869924783706665
    5. '#' → logprob: -3.744924783706665
    6. '   ' → logprob: -5.244924545288086
    7. ' pass' → logprob: -5.869924545288086
    8. ' continue' → logprob: -5.994924545288086
    9. ' i' → logprob: -6.494924545288086
    10. 'return' → logprob: -6.494924545288086

Token 405: ' on' (ID: 402)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05928683280944824
    2. 'continue' → logprob: -3.5592868328094482
    3. ' result' → logprob: -4.059287071228027
    4. 'pass' → logprob: -5.059287071228027
    5. ' continue' → logprob: -5.809287071228027
    6. ' pass' → logprob: -6.809287071228027
    7. '#' → logprob: -7.309287071228027
    8. 'None' → logprob: -9.059287071228027
    9. ' #' → logprob: -9.309287071228027
    10. ''' → logprob: -9.309287071228027

Token 406: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8469463586807251
    2. 'continue' → logprob: -0.8469463586807251
    3. 'append' → logprob: -2.4719462394714355
    4. ' append' → logprob: -3.7219462394714355
    5. '.append' → logprob: -4.0969462394714355
    6. 'result' → logprob: -4.8469462394714355
    7. 'contin' → logprob: -5.3469462394714355
    8. ' result' → logprob: -5.8469462394714355
    9. ' continuer' → logprob: -8.221946716308594
    10. 's' → logprob: -8.721946716308594

Token 407: ' produit' (ID: 29429)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6094539761543274
    2. ' continue' → logprob: -1.1094539165496826
    3. 'append' → logprob: -2.4844539165496826
    4. 'pas' → logprob: -4.359454154968262
    5. 'pass' → logprob: -4.859454154968262
    6. ' append' → logprob: -4.984454154968262
    7. 'break' → logprob: -4.984454154968262
    8. 'contin' → logprob: -5.109454154968262
    9. ' pas' → logprob: -7.359454154968262
    10. ' pass' → logprob: -7.484454154968262

Token 408: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.0826969146728516
    2. 'r' → logprob: -1.2076969146728516
    3. ' aucun' → logprob: -1.3326969146728516
    4. ' rien' → logprob: -3.0826969146728516
    5. 'auc' → logprob: -3.2076969146728516
    6. ' pas' → logprob: -5.332696914672852
    7. ' aucune' → logprob: -5.832696914672852
    8. '<|end|>' → logprob: -6.582696914672852
    9. '''' → logprob: -6.832696914672852
    10. 'nothing' → logprob: -7.832696914672852

Token 409: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.030911266803741455
    2. 'de' → logprob: -4.405911445617676
    3. ''' → logprob: -5.405911445617676
    4. ' ' → logprob: -5.780911445617676
    5. 'token' → logprob: -6.030911445617676
    6. ' a' → logprob: -7.030911445617676
    7. 'result' → logprob: -7.155911445617676
    8. 'r' → logprob: -7.280911445617676
    9. 'output' → logprob: -7.405911445617676
    10. 'd' → logprob: -7.530911445617676

Token 410: ' caractère' (ID: 80509)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7558004260063171
    2. 'car' → logprob: -1.005800485610962
    3. 'es' → logprob: -2.255800485610962
    4. 'texte' → logprob: -4.755800247192383
    5. ' espace' → logprob: -5.005800247192383
    6. ' caractère' → logprob: -5.005800247192383
    7. '_' → logprob: -5.130800247192383
    8. '"' → logprob: -5.130800247192383
    9. 'r' → logprob: -5.255800247192383
    10. ''espace' → logprob: -5.505800247192383

Token 411: ' immédi' (ID: 69896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46780338883399963
    2. '
' → logprob: -1.5928033590316772
    3. '\n' → logprob: -2.342803478240967
    4. '       ' → logprob: -3.092803478240967
    5. '               ' → logprob: -4.717803478240967
    6. '            
' → logprob: -5.342803478240967
    7. 'continue' → logprob: -5.592803478240967
    8. ' continue' → logprob: -6.592803478240967
    9. '<|end|>' → logprob: -6.592803478240967
    10. ',' → logprob: -6.967803478240967

Token 412: 'at' (ID: 266)
  Prédit: 'atement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atement' → logprob: -0.09103919565677643
    2. 'at' → logprob: -2.5910391807556152
    3. 'ément' → logprob: -5.466039180755615
    4. 'ate' → logprob: -6.591039180755615
    5. 'ent' → logprob: -6.591039180755615
    6. 'ement' → logprob: -6.841039180755615
    7. 't' → logprob: -7.341039180755615
    8. ')' → logprob: -7.341039180755615
    9. 'ment' → logprob: -7.591039180755615
    10. 'e' → logprob: -8.216039657592773

Token 413: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4828357696533203
    2. '
' → logprob: -1.1078357696533203
    3. '               ' → logprob: -3.3578357696533203
    4. '\n' → logprob: -4.73283576965332
    5. ',' → logprob: -6.48283576965332
    6. '            
' → logprob: -6.48283576965332
    7. 'continue' → logprob: -6.60783576965332
    8. '       ' → logprob: -6.73283576965332
    9. ')' → logprob: -7.60783576965332
    10. ' continue' → logprob: -7.73283576965332

Token 414: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15004606544971466
    2. ' i' → logprob: -2.1500461101531982
    3. ' pass' → logprob: -4.900045871734619
    4. 'pass' → logprob: -5.025045871734619
    5. '               ' → logprob: -5.650045871734619
    6. '           ' → logprob: -6.025045871734619
    7. 'continue' → logprob: -6.900045871734619
    8. 'result' → logprob: -7.650045871734619
    9. '                   ' → logprob: -7.775045871734619
    10. ' continue' → logprob: -7.900045871734619

Token 415: ' poursuit' (ID: 154304)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.0625382736325264
    2. 'continue' → logprob: -2.8125383853912354
    3. 'contin' → logprob: -8.312538146972656
    4. ' pass' → logprob: -8.687538146972656
    5. ' continuer' → logprob: -9.562538146972656
    6. 'pass' → logprob: -10.187538146972656
    7. '_continue' → logprob: -11.312538146972656
    8. ' continu' → logprob: -11.437538146972656
    9. ' continues' → logprob: -12.937538146972656
    10. 'continu' → logprob: -13.062538146972656

Token 416: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5564340949058533
    2. '           ' → logprob: -1.056434154510498
    3. 'continue' → logprob: -2.931434154510498
    4. '                   ' → logprob: -4.681434154510498
    5. '
' → logprob: -5.306434154510498
    6. '       ' → logprob: -5.431434154510498
    7. 'i' → logprob: -6.056434154510498
    8. '   ' → logprob: -6.306434154510498
    9. ' continue' → logprob: -7.806434154510498
    10. '            
' → logprob: -8.05643367767334

Token 417: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1549278497695923
    2. '           ' → logprob: -1.1549278497695923
    3. '               ' → logprob: -1.1549278497695923
    4. '            
' → logprob: -3.9049277305603027
    5. '\n' → logprob: -4.154927730560303
    6. '                
' → logprob: -4.654927730560303
    7. '    
' → logprob: -6.154927730560303
    8. '                   ' → logprob: -6.654927730560303
    9. '
' → logprob: -6.654927730560303
    10. ' 
' → logprob: -6.904927730560303

Token 418: ' pass' (ID: 1853)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3245581090450287
    2. 'i' → logprob: -1.824558138847351
    3. '           ' → logprob: -2.9495580196380615
    4. '               ' → logprob: -3.8245580196380615
    5. 'pass' (adapté à ' pass') → logprob: -3.8245580196380615
    6. ' continue' → logprob: -4.324558258056641
    7. '                   ' → logprob: -5.824558258056641
    8. ' i' → logprob: -5.949558258056641
    9. ' pass' → logprob: -7.949558258056641
    10. '```' → logprob: -8.57455825805664

Token 419: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6467962861061096
    2. '
' → logprob: -1.6467962265014648
    3. '           ' → logprob: -2.021796226501465
    4. '<|end|>' → logprob: -2.521796226501465
    5. '\n' → logprob: -2.896796226501465
    6. '<|end|>' → logprob: -5.646796226501465
    7. 'elif' → logprob: -5.896796226501465
    8. '        
' → logprob: -6.021796226501465
    9. 'else' → logprob: -6.396796226501465
    10. '            
' → logprob: -6.771796226501465

Token 420: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.528942346572876
    2. '           ' → logprob: -0.903942346572876
    3. 'else' → logprob: -5.778942108154297
    4. '\n' → logprob: -7.028942108154297
    5. 'elif' → logprob: -7.528942108154297
    6. '
' → logprob: -7.778942108154297
    7. ' else' → logprob: -8.528942108154297
    8. '<|end|>' → logprob: -8.653942108154297
    9. '        
' → logprob: -9.028942108154297
    10. '            
' → logprob: -9.403942108154297

Token 421: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7438495755195618
    2. '       ' → logprob: -0.8688495755195618
    3. 'else' (adapté à ' else') → logprob: -2.368849515914917
    4. ' else' → logprob: -4.493849754333496
    5. 'elif' → logprob: -7.868849754333496
    6. '0' → logprob: -10.743849754333496
    7. '
' → logprob: -11.368849754333496
    8. '          ' → logprob: -11.368849754333496
    9. ' elif' → logprob: -11.368849754333496
    10. 'continue' → logprob: -11.493849754333496

Token 422: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.48663169145584106
    2. ':' → logprob: -0.9866316914558411
    3. '               ' → logprob: -4.861631870269775
    4. '           ' → logprob: -5.486631870269775
    5. ' :' → logprob: -8.111631393432617
    6. ' :
' → logprob: -8.486631393432617
    7. ':
' → logprob: -10.486631393432617
    8. '       ' → logprob: -10.861631393432617
    9. '                   ' → logprob: -11.361631393432617
    10. '            ' → logprob: -11.611631393432617

Token 423: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016954708844423294
    2. '           ' → logprob: -4.7669548988342285
    3. ' result' → logprob: -5.3919548988342285
    4. 'result' → logprob: -5.7669548988342285
    5. ' for' → logprob: -7.6419548988342285
    6. 'for' → logprob: -9.89195442199707
    7. ' #' → logprob: -11.01695442199707
    8. '                   ' → logprob: -11.14195442199707
    9. ' ' → logprob: -11.14195442199707
    10. '   ' → logprob: -11.76695442199707

Token 424: ' spaces' (ID: 18608)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3145064413547516
    2. ' result' → logprob: -1.3145064115524292
    3. '               ' → logprob: -6.939506530761719
    4. '           ' → logprob: -8.439506530761719
    5. '   ' → logprob: -10.064506530761719
    6. '                   ' → logprob: -12.439506530761719
    7. ' ' → logprob: -12.689506530761719
    8. '	result' → logprob: -12.814506530761719
    9. ' ' → logprob: -13.189506530761719
    10. '       ' → logprob: -13.314506530761719

Token 425: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05098268389701843
    2. '=' → logprob: -3.050982713699341
    3. ' +=' → logprob: -6.925982475280762
    4. '.append' → logprob: -7.175982475280762
    5. '   ' → logprob: -7.675982475280762
    6. ' ' → logprob: -10.050982475280762
    7. '    ' → logprob: -10.175982475280762
    8. '           ' → logprob: -10.800982475280762
    9. '+=' → logprob: -11.175982475280762
    10. '_count' → logprob: -11.300982475280762

Token 426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692947685718536
    2. '=' → logprob: -2.126929521560669
    3. '   ' → logprob: -14.12692928314209
    4. ' ' → logprob: -15.00192928314209
    5. ' +=' → logprob: -15.87692928314209
    6. '               ' → logprob: -16.501930236816406
    7. '                   ' → logprob: -16.876930236816406
    8. '                ' → logprob: -17.376930236816406
    9. '           ' → logprob: -17.626930236816406
    10. '    ' → logprob: -17.626930236816406

Token 427: ' zero' (ID: 12421)
  Prédit: ' zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.03804252669215202
    2. 'zero' → logprob: -3.2880425453186035
    3. '0' → logprob: -14.413042068481445
    4. '                ' → logprob: -16.038042068481445
    5. '               ' → logprob: -16.288042068481445
    6. ' ' → logprob: -16.663042068481445
    7. ' (' → logprob: -17.038042068481445
    8. '            ' → logprob: -17.163042068481445
    9. ' ' → logprob: -17.413042068481445
    10. '   ' → logprob: -17.538042068481445

Token 428: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.842555426876061e-06
    2. 'count' → logprob: -12.625004768371582
    3. '_' → logprob: -13.750004768371582
    4. ' _' → logprob: -15.625004768371582
    5. 's' → logprob: -15.875004768371582
    6. '_counts' → logprob: -17.8750057220459
    7. '_cont' → logprob: -18.3750057220459
    8. '_cnt' → logprob: -19.0000057220459
    9. '   ' → logprob: -19.2500057220459
    10. '_c' → logprob: -19.2500057220459

Token 429: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759477615356445
    2. '-' → logprob: -0.8259477615356445
    3. '               ' → logprob: -12.200947761535645
    4. '                   ' → logprob: -13.325947761535645
    5. ' ' → logprob: -13.950947761535645
    6. '   ' → logprob: -14.950947761535645
    7. '           ' → logprob: -15.950947761535645
    8. ')' → logprob: -16.450946807861328
    9. '                ' → logprob: -16.450946807861328
    10. ' ' → logprob: -16.575946807861328

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -15.500000953674316
    4. '```' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '<|end|>' → logprob: -18.375001907348633
    7. '۱' → logprob: -19.500001907348633
    8. '`' → logprob: -20.625001907348633
    9. '১' → logprob: -20.937501907348633

Token 431: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015796435996890068
    2. '           ' → logprob: -5.140796661376953
    3. 'result' → logprob: -5.265796661376953
    4. ' result' → logprob: -5.390796661376953
    5. ' for' → logprob: -10.765796661376953
    6. '                
' → logprob: -10.765796661376953
    7. '       ' → logprob: -11.140796661376953
    8. '
' → logprob: -11.265796661376953
    9. ')' → logprob: -12.015796661376953
    10. '                   ' → logprob: -12.890796661376953

Token 432: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.031074795871973038
    2. '           ' → logprob: -3.9060747623443604
    3. ' result' → logprob: -5.2810750007629395
    4. 'result' → logprob: -5.5310750007629395
    5. ' for' → logprob: -6.9060750007629395
    6. '       ' → logprob: -8.531074523925781
    7. 'for' → logprob: -9.156074523925781
    8. '                   ' → logprob: -9.781074523925781
    9. ' ' → logprob: -11.281074523925781
    10. '```' → logprob: -11.531074523925781

Token 433: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.005257118493318558
    2. ' result' → logprob: -5.2552571296691895
    3. '               ' → logprob: -10.755256652832031
    4. '           ' → logprob: -13.255256652832031
    5. '   ' → logprob: -15.880256652832031
    6. '                   ' → logprob: -16.38025665283203
    7. '	result' → logprob: -17.88025665283203
    8. 'for' → logprob: -18.00525665283203
    9. '       ' → logprob: -18.88025665283203
    10. '_result' → logprob: -19.38025665283203

Token 434: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.5797210335731506
    2. '.append' → logprob: -0.8297210335731506
    3. '.' → logprob: -5.579720973968506
    4. ' .' → logprob: -15.204721450805664
    5. ' +=' → logprob: -15.579721450805664
    6. 'extend' → logprob: -15.579721450805664
    7. 'append' → logprob: -16.579721450805664
    8. '   ' → logprob: -16.954721450805664
    9. '+=' → logprob: -17.579721450805664
    10. '.Append' → logprob: -18.329721450805664

Token 435: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0010804448975250125
    2. ''' → logprob: -7.126080513000488
    3. '("' → logprob: -8.251080513000488
    4. '"' → logprob: -11.751080513000488
    5. '(' → logprob: -11.876080513000488
    6. ' '' → logprob: -16.751079559326172
    7. ''s' → logprob: -17.376079559326172
    8. ' ('' → logprob: -17.751079559326172
    9. '   ' → logprob: -17.876079559326172
    10. '(('' → logprob: -18.251079559326172

Token 436: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.33143341541290283
    2. ''' → logprob: -1.5814334154129028
    3. ' ')' → logprob: -2.5814332962036133
    4. '')' → logprob: -8.331433296203613
    5. ' spaces' → logprob: -8.831433296203613
    6. 'spaces' → logprob: -8.956433296203613
    7. ' ')
' → logprob: -9.206433296203613
    8. ''*' → logprob: -10.206433296203613
    9. 'space' → logprob: -10.581433296203613
    10. ' ")' → logprob: -11.206433296203613

Token 437: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.948577880859375
    2. '*' → logprob: -1.073577880859375
    3. ')' → logprob: -1.323577880859375
    4. ''' → logprob: -5.448577880859375
    5. '"' → logprob: -8.198577880859375
    6. '')' → logprob: -10.448577880859375
    7. '))' → logprob: -10.823577880859375
    8. ')
' → logprob: -10.823577880859375
    9. '   ' → logprob: -10.948577880859375
    10. '       ' → logprob: -11.198577880859375

Token 438: ' spaces' (ID: 18608)
  Prédit: 'spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spaces' → logprob: -1.676292231422849e-05
    2. ' spaces' → logprob: -11.000017166137695
    3. 'Spaces' → logprob: -19.875017166137695
    4. 'space' → logprob: -19.875017166137695
    5. 'sp' → logprob: -20.500017166137695
    6. '   ' → logprob: -20.750017166137695
    7. '_spaces' → logprob: -21.125017166137695
    8. 'paces' → logprob: -21.250017166137695
    9. '(' → logprob: -22.000017166137695
    10. '(sp' → logprob: -22.625017166137695

Token 439: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.002833053469657898
    2. 'count' → logprob: -5.877832889556885
    3. 'ount' → logprob: -11.752833366394043
    4. ')' → logprob: -12.752833366394043
    5. 'Count' → logprob: -12.752833366394043
    6. 'paces' → logprob: -12.752833366394043
    7. 's' → logprob: -13.002833366394043
    8. '   ' → logprob: -13.627833366394043
    9. 'spaces' → logprob: -13.752833366394043
    10. 'es' → logprob: -14.127833366394043

Token 440: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31494584679603577
    2. ')
' → logprob: -1.3149458169937134
    3. '           ' → logprob: -6.564945697784424
    4. '       ' → logprob: -8.314946174621582
    5. ')
' → logprob: -10.689946174621582
    6. '               ' → logprob: -12.939946174621582
    7. '')' → logprob: -13.814946174621582
    8. '')
' → logprob: -14.689946174621582
    9. ')

' → logprob: -14.814946174621582
    10. '   ' → logprob: -14.939946174621582

Token 441: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3179188370704651
    2. '       ' → logprob: -1.3179187774658203
    3. '<|end|>' → logprob: -6.19291877746582
    4. '\n' → logprob: -6.56791877746582
    5. '
' → logprob: -7.69291877746582
    6. '<|end|>' → logprob: -8.44291877746582
    7. '               ' → logprob: -9.06791877746582
    8. ')' → logprob: -9.31791877746582
    9. '```' → logprob: -9.69291877746582
    10. '        
' → logprob: -9.81791877746582

Token 442: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04251628369092941
    2. '           ' → logprob: -3.2925162315368652
    3. 'else' (adapté à ' else') → logprob: -6.042516231536865
    4. 'continue' → logprob: -7.167516231536865
    5. ' else' → logprob: -7.417516231536865
    6. ' continue' → logprob: -7.667516231536865
    7. '   ' → logprob: -9.667516708374023
    8. '               ' → logprob: -9.917516708374023
    9. 'elif' → logprob: -10.292516708374023
    10. '        
' → logprob: -11.042516708374023

Token 443: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3169110119342804
    2. ':
' → logprob: -1.316910982131958
    3. '           ' → logprob: -5.941911220550537
    4. '       ' → logprob: -7.066911220550537
    5. ' :' → logprob: -10.191910743713379
    6. '   ' → logprob: -10.691910743713379
    7. '{' → logprob: -11.191910743713379
    8. ' :
' → logprob: -11.191910743713379
    9. ' if' → logprob: -11.316910743713379
    10. ',' → logprob: -11.316910743713379

Token 444: '           ' (ID: 352)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0598714351654053
    2. '       ' → logprob: -1.1848714351654053
    3. '           ' → logprob: -1.1848714351654053
    4. 'press' → logprob: -4.059871673583984
    5. '#' → logprob: -4.184871673583984
    6. 'j' → logprob: -5.559871673583984
    7. 'pressed' → logprob: -6.559871673583984
    8. 'group' → logprob: -6.934871673583984
    9. ' count' → logprob: -7.559871673583984
    10. '```' → logprob: -7.809871673583984

Token 445: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3337382376194
    2. 'press' → logprob: -1.4587382078170776
    3. '#' (adapté à ' #') → logprob: -3.583738327026367
    4. 'start' → logprob: -4.833738327026367
    5. '       ' → logprob: -5.208738327026367
    6. 'j' → logprob: -5.333738327026367
    7. '           ' → logprob: -6.583738327026367
    8. ' press' → logprob: -6.958738327026367
    9. ' count' → logprob: -7.333738327026367
    10. '   ' → logprob: -7.333738327026367

Token 446: ' Bout' (ID: 62675)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.396992951631546
    2. 'press' → logprob: -2.1469929218292236
    3. 'start' → logprob: -2.2719929218292236
    4. '#' → logprob: -3.1469929218292236
    5. 'j' → logprob: -3.1469929218292236
    6. 'seq' → logprob: -4.521993160247803
    7. ' count' → logprob: -6.146993160247803
    8. '   ' → logprob: -6.521993160247803
    9. ' j' → logprob: -6.521993160247803
    10. ' press' → logprob: -6.646993160247803

Token 447: 'ons' (ID: 1808)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.00029160623671486974
    2. 'ton' → logprob: -8.37529182434082
    3. '           ' → logprob: -10.37529182434082
    4. '       ' → logprob: -11.50029182434082
    5. 'ons' → logprob: -11.50029182434082
    6. 'on's' → logprob: -12.25029182434082
    7. 'ont' → logprob: -13.87529182434082
    8. ' on' → logprob: -14.50029182434082
    9. '   ' → logprob: -14.75029182434082
    10. 'onn' → logprob: -15.12529182434082

Token 448: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1321049928665161
    2. 'count' → logprob: -1.3821049928665161
    3. '=' → logprob: -1.6321049928665161
    4. ''' → logprob: -2.2571048736572266
    5. 'pressed' → logprob: -3.2571048736572266
    6. ' pressed' → logprob: -4.382104873657227
    7. '_count' → logprob: -4.507104873657227
    8. ' press' → logprob: -5.007104873657227
    9. ' count' → logprob: -5.007104873657227
    10. 'press' → logprob: -5.132104873657227

Token 449: '1' (ID: 16)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.3338921070098877
    2. 'in' → logprob: -1.5838921070098877
    3. 'elif' → logprob: -2.2088921070098877
    4. 'pressed' → logprob: -2.8338921070098877
    5. '=' → logprob: -3.0838921070098877
    6. 'num' → logprob: -3.2088921070098877
    7. 'else' → logprob: -3.4588921070098877
    8. 'count' → logprob: -3.5838921070098877
    9. ''' → logprob: -3.5838921070098877
    10. 'i' → logprob: -3.7088921070098877

Token 450: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8355060815811157
    2. ' or' → logprob: -1.0855060815811157
    3. '       ' → logprob: -2.835505962371826
    4. 'elif' → logprob: -2.835505962371826
    5. '   ' → logprob: -3.960505962371826
    6. 'or' → logprob: -4.085505962371826
    7. 'else' → logprob: -4.210505962371826
    8. ',' → logprob: -4.585505962371826
    9. '           ' → logprob: -4.710505962371826
    10. ' elif' → logprob: -4.960505962371826

Token 451: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00015121731848921627
    2. ' ' → logprob: -9.375151634216309
    3. ''' → logprob: -9.625151634216309
    4. ' '' → logprob: -15.625151634216309
    5. '   ' → logprob: -16.500150680541992
    6. '９' → logprob: -18.500150680541992
    7. '  ' → logprob: -19.250150680541992
    8. '९' → logprob: -19.250150680541992
    9. '987' → logprob: -19.250150680541992
    10. '999' → logprob: -19.375150680541992

Token 452: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00014096579980105162
    2. ''' → logprob: -8.875141143798828
    3. ' ' → logprob: -13.875141143798828
    4. ' '' → logprob: -17.000141143798828
    5. '   ' → logprob: -17.750141143798828
    6. '９' → logprob: -18.875141143798828
    7. '99' → logprob: -19.125141143798828
    8. '"' → logprob: -19.375141143798828
    9. ''''' → logprob: -19.500141143798828
    10. '('' → logprob: -19.625141143798828

Token 453: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07771815359592438
    2. 'count' → logprob: -2.9527182579040527
    3. ':' → logprob: -4.952718257904053
    4. '       ' → logprob: -5.577718257904053
    5. '```' → logprob: -6.202718257904053
    6. '#' → logprob: -6.327718257904053
    7. 'button' → logprob: -6.577718257904053
    8. ':
' → logprob: -6.952718257904053
    9. 'pressed' → logprob: -7.452718257904053
    10. '   ' → logprob: -7.577718257904053

Token 454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05130515620112419
    2. 'count' → logprob: -3.051305055618286
    3. 'j' → logprob: -7.176305294036865
    4. '#' → logprob: -7.801305294036865
    5. ' count' → logprob: -8.051304817199707
    6. '       ' → logprob: -8.051304817199707
    7. 'press' → logprob: -8.426304817199707
    8. 'start' → logprob: -9.426304817199707
    9. 'pressed' → logprob: -9.551304817199707
    10. '```' → logprob: -9.676304817199707

Token 455: ' #' (ID: 1069)
  Prédit: 'press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.4817851185798645
    2. 'count' → logprob: -0.9817851185798645
    3. '#' (adapté à ' #') → logprob: -5.606785297393799
    4. ' press' → logprob: -6.356785297393799
    5. 'j' → logprob: -7.231785297393799
    6. '   ' → logprob: -7.606785297393799
    7. 'start' → logprob: -7.856785297393799
    8. ' count' → logprob: -8.35678482055664
    9. 'seq' → logprob: -9.23178482055664
    10. 'btn' → logprob: -9.85678482055664

Token 456: ' Comp' (ID: 5211)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3248939514160156
    2. 'press' → logprob: -1.4498939514160156
    3. 'start' → logprob: -3.9498939514160156
    4. '#' → logprob: -4.824893951416016
    5. ' count' → logprob: -5.574893951416016
    6. 'j' → logprob: -5.574893951416016
    7. 'seq' → logprob: -5.824893951416016
    8. ' press' → logprob: -6.074893951416016
    9. '   ' → logprob: -7.324893951416016
    10. 'btn' → logprob: -8.324893951416016

Token 457: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.28315457701683044
    2. 't' → logprob: -1.7831546068191528
    3. 'te' → logprob: -3.4081544876098633
    4. 'ont' → logprob: -4.783154487609863
    5. 'onter' → logprob: -4.908154487609863
    6. '#' → logprob: -5.533154487609863
    7. 'uter' → logprob: -5.658154487609863
    8. 'tent' → logprob: -5.908154487609863
    9. '       ' → logprob: -6.033154487609863
    10. 'on' → logprob: -6.158154487609863

Token 458: ' le' (ID: 505)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.35719388723373413
    2. 'press' → logprob: -1.857193946838379
    3. ' count' → logprob: -2.482193946838379
    4. ' press' → logprob: -3.732193946838379
    5. '   ' → logprob: -4.357193946838379
    6. ' j' → logprob: -4.482193946838379
    7. ' ' → logprob: -4.982193946838379
    8. 'j' → logprob: -5.732193946838379
    9. ' presses' → logprob: -7.232193946838379
    10. 'repeat' → logprob: -7.857193946838379

Token 459: ' nombre' (ID: 9733)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4408944845199585
    2. 'nombre' → logprob: -1.1908944845199585
    3. ' nombre' → logprob: -4.190894603729248
    4. 'nb' → logprob: -4.440894603729248
    5. 'press' → logprob: -4.565894603729248
    6. ' count' → logprob: -4.940894603729248
    7. 'same' → logprob: -6.065894603729248
    8. 'number' → logprob: -6.815894603729248
    9. 'num' → logprob: -6.940894603729248
    10. ' press' → logprob: -7.190894603729248

Token 460: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4972345530986786
    2. '=' → logprob: -2.372234582901001
    3. '_de' → logprob: -2.872234582901001
    4. 'press' → logprob: -2.997234582901001
    5. 'con' → logprob: -3.497234582901001
    6. '_' → logprob: -3.622234582901001
    7. 'des' → logprob: -3.872234582901001
    8. ' =' → logprob: -4.122234344482422
    9. ' de' → logprob: -4.122234344482422
    10. '_press' → logprob: -4.122234344482422

Token 461: ' press' (ID: 4989)
  Prédit: 'press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.3713274598121643
    2. 'app' → logprob: -2.1213274002075195
    3. 'pressions' → logprob: -2.3713274002075195
    4. 'i' → logprob: -3.2463274002075195
    5. ' ' → logprob: -4.4963274002075195
    6. ' press' → logprob: -5.1213274002075195
    7. 'fois' → logprob: -5.1213274002075195
    8. ' fois' → logprob: -5.2463274002075195
    9. '   ' → logprob: -5.2463274002075195
    10. 're' → logprob: -5.8713274002075195

Token 462: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.0004331725067459047
    2. 'es' → logprob: -7.875432968139648
    3. 'és' → logprob: -10.375432968139648
    4. 'ion' → logprob: -12.000432968139648
    5. 's' → logprob: -12.125432968139648
    6. 'é' → logprob: -12.625432968139648
    7. 'ons' → logprob: -13.250432968139648
    8. 'ées' → logprob: -13.500432968139648
    9. 'essions' → logprob: -14.250432968139648
    10. 'i' → logprob: -14.375432968139648

Token 463: ' cons' (ID: 1473)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.58428955078125
    2. 'press' → logprob: -1.33428955078125
    3. '           ' → logprob: -2.20928955078125
    4. 'con' → logprob: -3.08428955078125
    5. '=' → logprob: -4.83428955078125
    6. ' =' → logprob: -5.33428955078125
    7. 'j' → logprob: -6.20928955078125
    8. 'same' → logprob: -6.33428955078125
    9. ' j' → logprob: -6.70928955078125
    10. 'pressed' → logprob: -6.95928955078125

Token 464: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.003857316682115197
    2. 'ecut' → logprob: -5.878857135772705
    3. 'éc' → logprob: -7.378857135772705
    4. 'é' → logprob: -8.253857612609863
    5. 'équ' → logprob: -9.628857612609863
    6. 'e' → logprob: -10.878857612609863
    7. 'secut' → logprob: -11.128857612609863
    8. 'cut' → logprob: -11.253857612609863
    9. '```' → logprob: -11.753857612609863
    10. '   ' → logprob: -11.878857612609863

Token 465: 'ives' (ID: 2264)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.6347212195396423
    2. 's' → logprob: -1.634721279144287
    3. '   ' → logprob: -1.759721279144287
    4. '       ' → logprob: -3.009721279144287
    5. 'ives' → logprob: -3.884721279144287
    6. 'es' → logprob: -4.134721279144287
    7. 'ées' → logprob: -5.759721279144287
    8. '```' → logprob: -5.884721279144287
    9. 'iv' → logprob: -6.009721279144287
    10. 'su' → logprob: -6.884721279144287

Token 466: ' sur' (ID: 1512)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2171945422887802
    2. '           ' → logprob: -1.7171945571899414
    3. 'press' → logprob: -4.592194557189941
    4. ' count' → logprob: -6.092194557189941
    5. 'j' → logprob: -6.467194557189941
    6. 'same' → logprob: -7.342194557189941
    7. '=' → logprob: -8.467194557189941
    8. ' j' → logprob: -8.842194557189941
    9. 'start' → logprob: -9.092194557189941
    10. 'num' → logprob: -9.342194557189941

Token 467: ' la' (ID: 557)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03724243864417076
    2. 'la' → logprob: -3.6622424125671387
    3. 'le' → logprob: -5.037242412567139
    4. ' current' → logprob: -5.662242412567139
    5. ' la' → logprob: -7.537242412567139
    6. 'the' → logprob: -8.662242889404297
    7. 'same' → logprob: -9.287242889404297
    8. ' le' → logprob: -10.162242889404297
    9. '```' → logprob: -10.787242889404297
    10. 'c' → logprob: -11.287242889404297

Token 468: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0006671638693660498
    2. 'current' → logprob: -7.500667095184326
    3. ' même' → logprob: -9.625667572021484
    4. 'same' → logprob: -10.500667572021484
    5. 'mem' → logprob: -11.625667572021484
    6. '```' → logprob: -12.125667572021484
    7. 'mé' → logprob: -12.750667572021484
    8. 'even' → logprob: -13.500667572021484
    9. 'Même' → logprob: -13.750667572021484
    10. 'mm' → logprob: -15.375667572021484

Token 469: ' touche' (ID: 77303)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.32500436902046204
    2. 'current' → logprob: -1.4500043392181396
    3. 'char' → logprob: -4.325004577636719
    4. ' touche' → logprob: -4.700004577636719
    5. 'touch' → logprob: -4.700004577636719
    6. '_char' → logprob: -5.200004577636719
    7. ' current' → logprob: -5.700004577636719
    8. 'button' → logprob: -7.200004577636719
    9. 'car' → logprob: -7.575004577636719
    10. 'key' → logprob: -7.700004577636719

Token 470: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7027691602706909
    2. 'count' → logprob: -0.7027691602706909
    3. 'press' → logprob: -5.0777692794799805
    4. 'j' → logprob: -6.0777692794799805
    5. ' count' → logprob: -7.4527692794799805
    6. 'pressed' → logprob: -9.57776927947998
    7. 'num' → logprob: -9.82776927947998
    8. ' j' → logprob: -9.95276927947998
    9. 'start' → logprob: -10.07776927947998
    10. '=' → logprob: -10.20276927947998

Token 471: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08411259204149246
    2. 'count' → logprob: -2.5841126441955566
    3. 'press' → logprob: -5.709112644195557
    4. '=' → logprob: -8.209112167358398
    5. ' count' → logprob: -8.209112167358398
    6. 'pressed' → logprob: -8.334112167358398
    7. 'j' → logprob: -8.709112167358398
    8. '       ' → logprob: -8.834112167358398
    9. ' press' → logprob: -9.084112167358398
    10. '            
' → logprob: -9.209112167358398

Token 472: ' count' (ID: 3605)
  Prédit: 'press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.1076013371348381
    2. 'count' (adapté à ' count') → logprob: -2.3576014041900635
    3. ' press' → logprob: -5.482601165771484
    4. '           ' → logprob: -5.857601165771484
    5. ' count' → logprob: -8.357601165771484
    6. ' presses' → logprob: -9.857601165771484
    7. '   ' → logprob: -10.857601165771484
    8. 'j' → logprob: -11.232601165771484
    9. 'pressure' → logprob: -11.732601165771484
    10. 'pressed' → logprob: -12.107601165771484

Token 473: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141451060771942
    2. '=' → logprob: -1.7014144659042358
    3. '   ' → logprob: -14.326414108276367
    4. ' ' → logprob: -14.576414108276367
    5. '  ' → logprob: -17.576414108276367
    6. ' +=' → logprob: -17.576414108276367
    7. '```' → logprob: -17.576414108276367
    8. '       ' → logprob: -17.701414108276367
    9. '    ' → logprob: -17.701414108276367
    10. ' ' → logprob: -18.076414108276367

Token 474: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003178306156769395
    2. ' ' → logprob: -5.753178119659424
    3. '   ' → logprob: -14.378178596496582
    4. '```' → logprob: -18.003177642822266
    5. '0' → logprob: -18.128177642822266
    6. '  ' → logprob: -18.503177642822266
    7. ' ' → logprob: -18.503177642822266
    8. '       ' → logprob: -20.065677642822266
    9. '۱' → logprob: -20.253177642822266
    10. '１' → logprob: -20.315677642822266

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '0' → logprob: -18.25
    4. '```' → logprob: -18.5
    5. '   ' → logprob: -19.25
    6. '2' → logprob: -20.75
    7. '１' → logprob: -20.8125
    8. '۱' → logprob: -21.25
    9. '
' → logprob: -21.875
    10. '`' → logprob: -22.0

Token 476: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008714404539205134
    2. '
' → logprob: -7.500871658325195
    3. 'i' → logprob: -8.875871658325195
    4. 'while' → logprob: -9.500871658325195
    5. ' while' → logprob: -10.625871658325195
    6. '            
' → logprob: -10.750871658325195
    7. ',' → logprob: -10.875871658325195
    8. '       ' → logprob: -11.500871658325195
    9. '               ' → logprob: -11.625871658325195
    10. '```' → logprob: -12.750871658325195

Token 477: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003458945080637932
    2. 'i' → logprob: -5.7534589767456055
    3. '
' → logprob: -9.628458976745605
    4. ' i' → logprob: -9.628458976745605
    5. '       ' → logprob: -10.128458976745605
    6. '	       ' → logprob: -10.253458976745605
    7. '   ' → logprob: -11.128458976745605
    8. '		' → logprob: -11.878458976745605
    9. 'while' → logprob: -12.128458976745605
    10. ' while' → logprob: -12.128458976745605

Token 478: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00399232329800725
    2. '           ' → logprob: -5.878992557525635
    3. ' i' → logprob: -7.253992557525635
    4. 'j' → logprob: -7.753992557525635
    5. 'while' → logprob: -10.253992080688477
    6. '```' → logprob: -12.128992080688477
    7. '   ' → logprob: -12.503992080688477
    8. '       ' → logprob: -13.753992080688477
    9. 'idx' → logprob: -13.878992080688477
    10. ' while' → logprob: -14.003992080688477

Token 479: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3868791460990906
    2. '+=' → logprob: -1.1368792057037354
    3. '+' → logprob: -11.886878967285156
    4. '=' → logprob: -14.386878967285156
    5. '```' → logprob: -15.511878967285156
    6. '   ' → logprob: -15.886878967285156
    7. '    ' → logprob: -16.136878967285156
    8. ']+=' → logprob: -16.386878967285156
    9. '           ' → logprob: -16.761878967285156
    10. ' +' → logprob: -17.011878967285156

Token 480: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.87520408630371
    4. '```' → logprob: -19.87520408630371
    5. '0' → logprob: -21.87520408630371
    6. ' ' → logprob: -22.50020408630371
    7. '  ' → logprob: -22.62520408630371
    8. '１' → logprob: -22.75020408630371
    9. '+' → logprob: -22.87520408630371
    10. '۱' → logprob: -23.25020408630371

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '0' → logprob: -18.1250057220459
    4. '   ' → logprob: -18.3750057220459
    5. '```' → logprob: -19.2500057220459
    6. '+' → logprob: -21.2500057220459
    7. '  ' → logprob: -21.7500057220459
    8. '
' → logprob: -22.0000057220459
    9. 'while' → logprob: -22.3750057220459
    10. '`' → logprob: -22.8750057220459

Token 482: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036801211535930634
    2. 'while' → logprob: -5.628680229187012
    3. ' while' → logprob: -9.878680229187012
    4. '       ' → logprob: -10.628680229187012
    5. '		' → logprob: -13.378680229187012
    6. '	while' → logprob: -14.128680229187012
    7. '	       ' → logprob: -14.253680229187012
    8. '```' → logprob: -14.253680229187012
    9. '   ' → logprob: -15.003680229187012
    10. '               ' → logprob: -15.503680229187012

Token 483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08810435980558395
    2. 'while' → logprob: -2.588104248046875
    3. '       ' → logprob: -4.838104248046875
    4. ' while' → logprob: -6.713104248046875
    5. '   ' → logprob: -10.963104248046875
    6. '	while' → logprob: -11.588104248046875
    7. '```' → logprob: -12.338104248046875
    8. '	   ' → logprob: -13.463104248046875
    9. '		' → logprob: -13.838104248046875
    10. 'While' → logprob: -14.338104248046875

Token 484: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0005396892665885389
    2. ' while' → logprob: -8.000539779663086
    3. '           ' → logprob: -8.500539779663086
    4. '```' → logprob: -14.000539779663086
    5. 'While' → logprob: -16.750539779663086
    6. '	while' → logprob: -16.875539779663086
    7. '       ' → logprob: -17.125539779663086
    8. '``' → logprob: -19.500539779663086
    9. '   ' → logprob: -19.625539779663086
    10. '            
' → logprob: -20.625539779663086

Token 485: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01815345324575901
    2. ' i' → logprob: -4.018153667449951
    3. '(i' → logprob: -13.518153190612793
    4. 'line' → logprob: -14.268153190612793
    5. '   ' → logprob: -14.768153190612793
    6. '	i' → logprob: -15.018153190612793
    7. ' ' → logprob: -15.268153190612793
    8. ' line' → logprob: -15.643153190612793
    9. ' ' → logprob: -16.01815414428711
    10. ' (' → logprob: -16.01815414428711

Token 486: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0919903963804245
    2. '<' → logprob: -2.5919904708862305
    3. '<n' → logprob: -4.3419904708862305
    4. '<len' → logprob: -12.59199047088623
    5. '<N' → logprob: -14.46699047088623
    6. '<m' → logprob: -16.091989517211914
    7. '<size' → logprob: -16.341989517211914
    8. '<num' → logprob: -16.716989517211914
    9. '<s' → logprob: -16.716989517211914
    10. '<i' → logprob: -16.966989517211914

Token 487: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014163628220558167
    2. ' n' → logprob: -4.264163494110107
    3. '	n' → logprob: -16.764163970947266
    4. 'len' → logprob: -17.389163970947266
    5. '<n' → logprob: -18.514163970947266
    6. '_n' → logprob: -19.139163970947266
    7. ')n' → logprob: -19.264163970947266
    8. '```' → logprob: -19.389163970947266
    9. '(n' → logprob: -19.764163970947266
    10. ' ' → logprob: -20.139163970947266

Token 488: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.25192928314208984
    2. ' and' → logprob: -1.5019292831420898
    3. '           ' → logprob: -16.126930236816406
    4. '	and' → logprob: -16.751930236816406
    5. '   ' → logprob: -17.626930236816406
    6. ' ' → logprob: -17.751930236816406
    7. '       ' → logprob: -18.876930236816406
    8. '          ' → logprob: -19.376930236816406
    9. ' ' → logprob: -19.501930236816406
    10. ' и' → logprob: -19.626930236816406

Token 489: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03804286941885948
    2. ' line' → logprob: -3.2880427837371826
    3. 'current' → logprob: -14.663043022155762
    4. '(line' → logprob: -14.913043022155762
    5. '   ' → logprob: -15.413043022155762
    6. '[line' → logprob: -15.538043022155762
    7. '	line' → logprob: -16.663042068481445
    8. ' current' → logprob: -17.413042068481445
    9. '```' → logprob: -17.663042068481445
    10. ' ' → logprob: -17.663042068481445

Token 490: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.125001907348633
    3. '```' → logprob: -14.875001907348633
    4. ' [' → logprob: -15.250001907348633
    5. '[j' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.625001907348633
    7. 'i' → logprob: -17.125001907348633
    8. '[e' → logprob: -17.125001907348633
    9. '[line' → logprob: -17.375001907348633
    10. '[
' → logprob: -17.750001907348633

Token 491: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12693524360656738
    2. '==' → logprob: -2.1269352436065674
    3. ']==' → logprob: -12.751935005187988
    4. '=' → logprob: -13.126935005187988
    5. ')' → logprob: -14.126935005187988
    6. ')==' → logprob: -14.501935005187988
    7. ']' → logprob: -15.251935005187988
    8. ' ' → logprob: -15.251935005187988
    9. '===' → logprob: -15.876935005187988
    10. '==
' → logprob: -16.001935958862305

Token 492: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3868768811225891
    2. ' ==' → logprob: -1.1368768215179443
    3. '=' → logprob: -12.511877059936523
    4. '[' → logprob: -14.386877059936523
    5. '==
' → logprob: -14.761877059936523
    6. ']==' → logprob: -14.886877059936523
    7. ' ' → logprob: -15.261877059936523
    8. '===' → logprob: -15.386877059936523
    9. ''' → logprob: -15.636877059936523
    10. ')==' → logprob: -16.011877059936523

Token 493: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0024756586644798517
    2. ' current' → logprob: -6.002475738525391
    3. '[current' → logprob: -18.37747573852539
    4. '$current' → logprob: -18.37747573852539
    5. '=current' → logprob: -18.50247573852539
    6. '	current' → logprob: -18.50247573852539
    7. '(current' → logprob: -18.62747573852539
    8. ' ' → logprob: -19.75247573852539
    9. '   ' → logprob: -19.75247573852539
    10. 'Current' → logprob: -19.87747573852539

Token 494: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -1.3856492842023727e-06
    2. 'char' → logprob: -13.625000953674316
    3. '_' → logprob: -16.375001907348633
    4. '_CHAR' → logprob: -17.375001907348633
    5. ' _' → logprob: -18.250001907348633
    6. '_chars' → logprob: -18.625001907348633
    7. '_c' → logprob: -18.750001907348633
    8. '_token' → logprob: -19.000001907348633
    9. '_
' → logprob: -19.250001907348633
    10. ''_' → logprob: -19.375001907348633

Token 495: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.27654364705085754
    2. ':' → logprob: -2.026543617248535
    3. '               ' → logprob: -2.651543617248535
    4. ' and' → logprob: -3.526543617248535
    5. '           ' → logprob: -5.401543617248535
    6. 'and' → logprob: -6.401543617248535
    7. '       ' → logprob: -6.526543617248535
    8. '   ' → logprob: -6.526543617248535
    9. '                   ' → logprob: -8.026543617248535
    10. '):
' → logprob: -8.651543617248535

Token 496: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08347202837467194
    2. 'count' → logprob: -2.5834720134735107
    3. ' count' → logprob: -5.58347225189209
    4. '   ' → logprob: -8.33347225189209
    5. '           ' → logprob: -8.33347225189209
    6. '[count' → logprob: -9.83347225189209
    7. '```' → logprob: -10.08347225189209
    8. '	count' → logprob: -10.08347225189209
    9. '                
' → logprob: -10.20847225189209
    10. '{
' → logprob: -10.33347225189209

Token 497: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.00689534330740571
    2. ' count' → logprob: -5.006895542144775
    3. '               ' → logprob: -8.631895065307617
    4. '	count' → logprob: -14.631895065307617
    5. '                   ' → logprob: -14.756895065307617
    6. '[count' → logprob: -15.631895065307617
    7. '                ' → logprob: -16.006895065307617
    8. '           ' → logprob: -16.131895065307617
    9. '_count' → logprob: -16.381895065307617
    10. ' ' → logprob: -16.506895065307617

Token 498: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07890818268060684
    2. '+=' → logprob: -2.5789082050323486
    3. '               ' → logprob: -11.82890796661377
    4. '                ' → logprob: -12.07890796661377
    5. '                   ' → logprob: -12.82890796661377
    6. '            ' → logprob: -13.70390796661377
    7. '+' → logprob: -14.70390796661377
    8. '           ' → logprob: -15.20390796661377
    9. ']+=' → logprob: -15.57890796661377
    10. '=' → logprob: -15.57890796661377

Token 499: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -18.000804901123047
    4. '```' → logprob: -19.125804901123047
    5. ' ' → logprob: -20.125804901123047
    6. '１' → logprob: -21.625804901123047
    7. '۱' → logprob: -22.000804901123047
    8. '+' → logprob: -22.813304901123047
    9. '<|end|>' → logprob: -22.813304901123047
    10. '  ' → logprob: -23.000804901123047

Token 500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -21.125
    4. '```' → logprob: -22.25
    5. '۱' → logprob: -23.625
    6. '１' → logprob: -23.75
    7. '
' → logprob: -24.25
    8. '१' → logprob: -24.25
    9. '2' → logprob: -24.625
    10. '১' → logprob: -24.75

Token 501: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011075903894379735
    2. '           ' → logprob: -7.126107692718506
    3. '<|end|>' → logprob: -9.001107215881348
    4. '<|end|>' → logprob: -10.001107215881348
    5. 'i' → logprob: -10.251107215881348
    6. '                   ' → logprob: -10.876107215881348
    7. '   ' → logprob: -11.001107215881348
    8. ',' → logprob: -11.126107215881348
    9. ' i' → logprob: -11.501107215881348
    10. '       ' → logprob: -11.751107215881348

Token 502: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012852331856265664
    2. 'i' → logprob: -7.251285076141357
    3. '           ' → logprob: -7.751285076141357
    4. ' i' → logprob: -9.501285552978516
    5. '   ' → logprob: -10.376285552978516
    6. '       ' → logprob: -11.251285552978516
    7. '```' → logprob: -11.376285552978516
    8. '                   ' → logprob: -11.876285552978516
    9. ' ' → logprob: -13.501285552978516
    10. ',i' → logprob: -13.751285552978516

Token 503: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0016263832803815603
    2. ' i' → logprob: -6.501626491546631
    3. '               ' → logprob: -9.126626014709473
    4. '           ' → logprob: -11.376626014709473
    5. '   ' → logprob: -13.126626014709473
    6. '                   ' → logprob: -13.751626014709473
    7. '       ' → logprob: -15.126626014709473
    8. ' ' → logprob: -15.501626014709473
    9. '```' → logprob: -15.751626014709473
    10. '	i' → logprob: -17.37662696838379

Token 504: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759522914886475
    2. '+=' → logprob: -0.8259522914886475
    3. '+' → logprob: -12.200952529907227
    4. '           ' → logprob: -12.825952529907227
    5. ']+=' → logprob: -13.450952529907227
    6. '```' → logprob: -13.450952529907227
    7. ')' → logprob: -14.575952529907227
    8. '=' → logprob: -15.075952529907227
    9. '<' → logprob: -15.200952529907227
    10. '   ' → logprob: -15.325952529907227

Token 505: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '```' → logprob: -15.12548828125
    4. '   ' → logprob: -16.50048828125
    5. '           ' → logprob: -18.62548828125
    6. ' ' → logprob: -18.75048828125
    7. '               ' → logprob: -18.75048828125
    8. '                   ' → logprob: -19.43798828125
    9. '１' → logprob: -19.93798828125
    10. '۱' → logprob: -20.12548828125

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -17.5
    4. '   ' → logprob: -19.75
    5. '
' → logprob: -21.125
    6. '۱' → logprob: -21.5
    7. '１' → logprob: -21.5
    8. '           ' → logprob: -22.125
    9. '2' → logprob: -22.1875
    10. '0' → logprob: -22.5

Token 507: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009335381910204887
    2. '
' → logprob: -5.134335517883301
    3. ' cycle' → logprob: -6.884335517883301
    4. 'cycle' → logprob: -6.884335517883301
    5. '```' → logprob: -7.384335517883301
    6. '            
' → logprob: -8.8843355178833
    7. 'char' → logprob: -9.2593355178833
    8. 'button' → logprob: -9.3843355178833
    9. '       ' → logprob: -9.3843355178833
    10. 'token' → logprob: -9.8843355178833

Token 508: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010466516017913818
    2. '```' → logprob: -6.135466575622559
    3. 'cycle' → logprob: -6.510466575622559
    4. 'button' → logprob: -6.510466575622559
    5. '       ' → logprob: -6.760466575622559
    6. 'char' → logprob: -6.885466575622559
    7. 'mapping' → logprob: -7.135466575622559
    8. 'chars' → logprob: -7.510466575622559
    9. ' cycle' → logprob: -7.510466575622559
    10. 'key' → logprob: -8.510466575622559

Token 509: ' #' (ID: 1069)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.5833134055137634
    2. 'chars' → logprob: -1.5833134651184082
    3. 'mapping' → logprob: -1.7083134651184082
    4. 'char' → logprob: -3.708313465118408
    5. ' cycle' → logprob: -4.833313465118408
    6. '           ' → logprob: -4.833313465118408
    7. 'characters' → logprob: -5.833313465118408
    8. 'index' → logprob: -5.958313465118408
    9. 'cycles' → logprob: -6.208313465118408
    10. 'sequence' → logprob: -6.333313465118408

Token 510: ' Si' (ID: 7832)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.5881513357162476
    2. 'chars' → logprob: -1.2131513357162476
    3. 'mapping' → logprob: -2.713151454925537
    4. 'char' → logprob: -2.838151454925537
    5. 'sequence' → logprob: -5.588151454925537
    6. 'cycles' → logprob: -5.713151454925537
    7. 'characters' → logprob: -5.838151454925537
    8. 'key' → logprob: -6.213151454925537
    9. ' cycle' → logprob: -6.338151454925537
    10. 'mapped' → logprob: -6.963151454925537

Token 511: ' la' (ID: 557)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.38711050152778625
    2. 'current' → logprob: -1.1371104717254639
    3. 'count' → logprob: -8.762110710144043
    4. ' count' → logprob: -9.887110710144043
    5. '(current' → logprob: -12.012110710144043
    6. ' actuel' → logprob: -12.012110710144043
    7. ' i' → logprob: -12.762110710144043
    8. '	current' → logprob: -13.137110710144043
    9. ' ' → logprob: -13.262110710144043
    10. ' len' → logprob: -13.387110710144043

Token 512: ' touche' (ID: 77303)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.011558439582586288
    2. ' current' → logprob: -4.511558532714844
    3. 'count' → logprob: -8.386558532714844
    4. 'char' → logprob: -8.386558532714844
    5. 'car' → logprob: -11.386558532714844
    6. 'key' → logprob: -12.136558532714844
    7. 'button' → logprob: -12.136558532714844
    8. 'len' → logprob: -12.261558532714844
    9. 'character' → logprob: -12.511558532714844
    10. '#' → logprob: -13.136558532714844

Token 513: ' précédente' (ID: 177319)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0083348751068115
    2. ' current' → logprob: -1.1333348751068115
    3. 'current' → logprob: -1.2583348751068115
    4. 'in' → logprob: -4.133335113525391
    5. ' est' → logprob: -5.008335113525391
    6. ' is' → logprob: -5.633335113525391
    7. 'est' → logprob: -6.258335113525391
    8. '[current' → logprob: -8.50833511352539
    9. ' n' → logprob: -9.13333511352539
    10. ' a' → logprob: -9.13333511352539

Token 514: ' est' (ID: 893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03930443152785301
    2. ' est' → logprob: -4.164304256439209
    3. 'in' → logprob: -4.289304256439209
    4. ' is' → logprob: -5.539304256439209
    5. ' a' → logprob: -6.164304256439209
    6. ' ==' → logprob: -7.039304256439209
    7. ' was' → logprob: -7.539304256439209
    8. '==' → logprob: -8.039304733276367
    9. 'est' → logprob: -8.164304733276367
    10. ' était' → logprob: -8.289304733276367

Token 515: ' la' (ID: 557)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.17658966779708862
    2. 'dans' → logprob: -2.6765897274017334
    3. ' current' → logprob: -2.9265897274017334
    4. 'la' → logprob: -4.676589488983154
    5. ''' → logprob: -5.051589488983154
    6. 'same' → logprob: -5.301589488983154
    7. 'in' → logprob: -5.551589488983154
    8. ' dans' → logprob: -5.801589488983154
    9. ' la' → logprob: -5.801589488983154
    10. ' in' → logprob: -5.926589488983154

Token 516: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4106946885585785
    2. ' même' → logprob: -1.7856947183609009
    3. 'same' → logprob: -2.2856945991516113
    4. 'current' → logprob: -2.9106945991516113
    5. ' current' → logprob: -5.660694599151611
    6. 'mé' → logprob: -5.785694599151611
    7. ' same' → logprob: -5.910694599151611
    8. 'Même' → logprob: -6.910694599151611
    9. 'mm' → logprob: -8.16069507598877
    10. ''m' → logprob: -8.41069507598877

Token 517: ' que' (ID: 661)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7419561743736267
    2. ' and' → logprob: -1.4919562339782715
    3. ':' → logprob: -1.7419562339782715
    4. '           ' → logprob: -3.2419562339782715
    5. 'and' → logprob: -3.6169562339782715
    6. '               ' → logprob: -4.3669562339782715
    7. ',' → logprob: -4.4919562339782715
    8. ':
' → logprob: -4.8669562339782715
    9. ' ou' → logprob: -5.2419562339782715
    10. 'or' → logprob: -5.3669562339782715

Token 518: ' la' (ID: 557)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0013908311957493424
    2. ' current' → logprob: -6.7513909339904785
    3. 'line' → logprob: -9.00139045715332
    4. ''' → logprob: -10.25139045715332
    5. '''' → logprob: -10.50139045715332
    6. 'None' → logprob: -11.75139045715332
    7. '   ' → logprob: -12.62639045715332
    8. ''#' → logprob: -12.62639045715332
    9. '$current' → logprob: -12.87639045715332
    10. 'la' → logprob: -13.12639045715332

Token 519: ' touche' (ID: 77303)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.021630918607115746
    2. 't' → logprob: -4.271630764007568
    3. 'cour' → logprob: -5.271630764007568
    4. 'pr' → logprob: -7.396630764007568
    5. 'act' → logprob: -7.646630764007568
    6. 'clé' → logprob: -8.521631240844727
    7. 'der' → logprob: -8.771631240844727
    8. 'cur' → logprob: -9.021631240844727
    9. 'curr' → logprob: -9.271631240844727
    10. ' current' → logprob: -9.396631240844727

Token 520: ' cour' (ID: 2871)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.7377915978431702
    2. 'cour' → logprob: -0.9877915978431702
    3. 'current' → logprob: -2.3627915382385254
    4. '           ' → logprob: -4.237791538238525
    5. 'act' → logprob: -4.862791538238525
    6. 'su' → logprob: -5.112791538238525
    7. 'preced' → logprob: -5.612791538238525
    8. 'enc' → logprob: -5.737791538238525
    9. '               ' → logprob: -5.737791538238525
    10. '       ' → logprob: -5.862791538238525

Token 521: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.035547610372304916
    2. 'r' → logprob: -3.5355474948883057
    3. 'ant' → logprob: -5.160547733306885
    4. '#' → logprob: -11.535547256469727
    5. 'rant' → logprob: -12.035547256469727
    6. '```' → logprob: -12.660547256469727
    7. 'a' → logprob: -12.785547256469727
    8. 'rent' → logprob: -12.785547256469727
    9. '   ' → logprob: -13.035547256469727
    10. '...' → logprob: -13.410547256469727

Token 522: ',
' (ID: 412)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09488774091005325
    2. 'and' → logprob: -2.4698877334594727
    3. ':' → logprob: -5.969887733459473
    4. ',' → logprob: -6.594887733459473
    5. '           ' → logprob: -6.719887733459473
    6. '               ' → logprob: -7.969887733459473
    7. ' or' → logprob: -9.094887733459473
    8. '            ' → logprob: -9.719887733459473
    9. ' ' → logprob: -10.219887733459473
    10. ':
' → logprob: -10.469887733459473

Token 523: '           ' (ID: 352)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7941192984580994
    2. '           ' → logprob: -1.1691193580627441
    3. ' #' → logprob: -2.044119358062744
    4. '               ' → logprob: -3.044119358062744
    5. ' continue' → logprob: -4.044119358062744
    6. '```' → logprob: -4.544119358062744
    7. ' index' → logprob: -4.919119358062744
    8. 'continue' → logprob: -5.294119358062744
    9. 'index' → logprob: -5.544119358062744
    10. '#index' → logprob: -5.669119358062744

Token 524: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9701901078224182
    2. ' #' → logprob: -1.5951900482177734
    3. ' index' → logprob: -1.5951900482177734
    4. '           ' → logprob: -2.3451900482177734
    5. '               ' → logprob: -3.4701900482177734
    6. 'index' → logprob: -3.9701900482177734
    7. ' continue' → logprob: -4.220190048217773
    8. ' token' → logprob: -4.845190048217773
    9. ' pass' → logprob: -5.095190048217773
    10. '```' → logprob: -5.095190048217773

Token 525: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48590436577796936
    2. ' #' → logprob: -1.485904335975647
    3. 'pass' → logprob: -3.3609044551849365
    4. ' pass' → logprob: -3.6109044551849365
    5. '           ' → logprob: -3.6109044551849365
    6. ' continue' → logprob: -3.7359044551849365
    7. '               ' → logprob: -3.9859044551849365
    8. 'continue' → logprob: -4.985904216766357
    9. ' if' → logprob: -5.110904216766357
    10. '```' → logprob: -5.860904216766357

Token 526: ' doit' (ID: 21822)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2728377878665924
    2. 'continue' → logprob: -1.89783775806427
    3. '#' → logprob: -3.1478378772735596
    4. '           ' → logprob: -4.1478376388549805
    5. ' #' → logprob: -4.5228376388549805
    6. ' doit' → logprob: -5.6478376388549805
    7. ' suppose' → logprob: -6.3978376388549805
    8. ' assume' → logprob: -6.5228376388549805
    9. 'contin' → logprob: -6.5228376388549805
    10. ' ignore' → logprob: -6.8978376388549805

Token 527: ' gérer' (ID: 86786)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.24225914478302
    2. 'continue' → logprob: -1.74225914478302
    3. '#' → logprob: -1.86725914478302
    4. ' continuer' → logprob: -2.6172590255737305
    5. 'util' → logprob: -2.9922590255737305
    6. 'calcul' → logprob: -3.2422590255737305
    7. 'append' → logprob: -3.6172590255737305
    8. 'dé' → logprob: -3.7422590255737305
    9. 'pass' → logprob: -3.8672590255737305
    10. ' utiliser' → logprob: -3.8672590255737305

Token 528: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.205801010131836
    2. ' le' → logprob: -1.205801010131836
    3. ' la' → logprob: -2.455801010131836
    4. '#' → logprob: -2.705801010131836
    5. ' the' → logprob: -3.205801010131836
    6. ' continue' → logprob: -3.455801010131836
    7. 'le' → logprob: -3.580801010131836
    8. ' #' → logprob: -3.580801010131836
    9. 'continue' → logprob: -4.205801010131836
    10. ' if' → logprob: -4.705801010131836

Token 529: ' sais' (ID: 30010)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.8256707191467285
    2. ' passage' → logprob: -1.4506707191467285
    3. '#' → logprob: -2.4506707191467285
    4. 'cycle' → logprob: -2.4506707191467285
    5. 's' → logprob: -4.0756707191467285
    6. 'mode' → logprob: -4.4506707191467285
    7. '```' → logprob: -4.7006707191467285
    8. ' mode' → logprob: -4.8256707191467285
    9. 'dé' → logprob: -4.9506707191467285
    10. 'pass' → logprob: -5.0756707191467285

Token 530: 'ie' (ID: 396)
  Prédit: 'sie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sie' → logprob: -0.6381022930145264
    2. 'ie' → logprob: -1.0131022930145264
    3. 'e' → logprob: -2.8881022930145264
    4. 's' → logprob: -3.0131022930145264
    5. 'ss' → logprob: -7.0131025314331055
    6. 'is' → logprob: -7.3881025314331055
    7. 'ies' → logprob: -7.7631025314331055
    8. 'isie' → logprob: -8.013102531433105
    9. 'i' → logprob: -8.138102531433105
    10. 'se' → logprob: -8.263102531433105

Token 531: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6485926508903503
    2. 'continue' → logprob: -1.0235927104949951
    3. '_continue' → logprob: -2.273592710494995
    4. ' continues' → logprob: -5.648592472076416
    5. 'contin' → logprob: -6.148592472076416
    6. 'continu' → logprob: -6.148592472076416
    7. ' continu' → logprob: -6.398592472076416
    8. ' en' → logprob: -6.773592472076416
    9. '_' → logprob: -7.273592472076416
    10. '_cont' → logprob: -7.898592472076416

Token 532: ' activ' (ID: 4155)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025932613760232925
    2. ',' → logprob: -5.025932788848877
    3. '               ' → logprob: -5.900932788848877
    4. '       ' → logprob: -5.900932788848877
    5. ' if' → logprob: -6.025932788848877
    6. '<|end|>' → logprob: -6.025932788848877
    7. '            
' → logprob: -6.525932788848877
    8. ' and' → logprob: -6.650932788848877
    9. ' (' → logprob: -7.025932788848877
    10. '.' → logprob: -7.650932788848877

Token 533: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.014397254213690758
    2. 'é' → logprob: -4.389397144317627
    3. 'e' → logprob: -6.889397144317627
    4. 'ee' → logprob: -7.639397144317627
    5. 'ed' → logprob: -8.389397621154785
    6. 'ated' → logprob: -9.514397621154785
    7. '   ' → logprob: -11.014397621154785
    8. '```' → logprob: -11.514397621154785
    9. 'ées' → logprob: -11.639397621154785
    10. '       ' → logprob: -12.014397621154785

Token 534: ' par' (ID: 686)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09022282809019089
    2. ',' → logprob: -3.8402228355407715
    3. ':' → logprob: -4.5902228355407715
    4. ' and' → logprob: -4.8402228355407715
    5. '               ' → logprob: -4.8402228355407715
    6. '.' → logprob: -4.9652228355407715
    7. ' (' → logprob: -5.2152228355407715
    8. ':
' → logprob: -5.5902228355407715
    9. 'else' → logprob: -5.5902228355407715
    10. '       ' → logprob: -5.9652228355407715

Token 535: ' le' (ID: 505)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4963935911655426
    2. 'current' → logprob: -1.3713935613632202
    3. 'result' → logprob: -3.2463936805725098
    4. '0' → logprob: -3.4963936805725098
    5. 'previous' → logprob: -4.37139368057251
    6. ' current' → logprob: -4.49639368057251
    7. 'line' → logprob: -5.24639368057251
    8. ' result' → logprob: -5.62139368057251
    9. ''s' → logprob: -5.74639368057251
    10. ''un' → logprob: -5.87139368057251

Token 536: ' bouton' (ID: 80635)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02928510122001171
    2. '0' → logprob: -5.029284954071045
    3. ''s' → logprob: -5.279284954071045
    4. ''espace' → logprob: -5.654284954071045
    5. '```' → logprob: -5.904284954071045
    6. 'current' → logprob: -5.904284954071045
    7. 'space' → logprob: -6.029284954071045
    8. 'previous' → logprob: -6.904284954071045
    9. '`' → logprob: -7.404284954071045
    10. ''app' → logprob: -7.404284954071045

Token 537: ' ' (ID: 220)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3283526599407196
    2. ' current' → logprob: -2.328352689743042
    3. ''' → logprob: -2.828352689743042
    4. 'previous' → logprob: -3.578352689743042
    5. '0' → logprob: -3.828352689743042
    6. ' précédent' → logprob: -3.828352689743042
    7. 'preced' → logprob: -4.453352451324463
    8. '   ' → logprob: -4.453352451324463
    9. ' previous' → logprob: -4.953352451324463
    10. 'pressed' → logprob: -5.078352451324463

Token 538: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20154929161071777
    2. ''' → logprob: -1.7015492916107178
    3. ' '' → logprob: -9.576549530029297
    4. ' ' → logprob: -10.201549530029297
    5. 'current' → logprob: -11.326549530029297
    6. '`' → logprob: -11.826549530029297
    7. '"' → logprob: -13.076549530029297
    8. '   ' → logprob: -13.701549530029297
    9. '1' → logprob: -13.951549530029297
    10. ''s' → logprob: -14.451549530029297

Token 539: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020357346162199974
    2. '       ' → logprob: -4.895357131958008
    3. '            
' → logprob: -5.770357131958008
    4. ' if' → logprob: -5.895357131958008
    5. '
' → logprob: -6.770357131958008
    6. '               ' → logprob: -7.145357131958008
    7. 'if' → logprob: -7.145357131958008
    8. '<|end|>' → logprob: -7.520357131958008
    9. 'else' → logprob: -7.895357131958008
    10. '          ' → logprob: -8.145357131958008

Token 540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07536514103412628
    2. ' if' → logprob: -3.7003650665283203
    3. 'if' → logprob: -3.7003650665283203
    4. '```' → logprob: -4.57536506652832
    5. '       ' → logprob: -5.20036506652832
    6. '            
' → logprob: -6.32536506652832
    7. 'continue' → logprob: -6.82536506652832
    8. '#' → logprob: -7.57536506652832
    9. 'token' → logprob: -7.57536506652832
    10. 'index' → logprob: -7.82536506652832

Token 541: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29595592617988586
    2. ' if' → logprob: -1.7959558963775635
    3. 'if' → logprob: -3.4209558963775635
    4. '#' (adapté à ' #') → logprob: -3.5459558963775635
    5. 'index' → logprob: -4.795956134796143
    6. ' #' → logprob: -4.920956134796143
    7. '```' → logprob: -5.420956134796143
    8. ' index' → logprob: -6.045956134796143
    9. '            
' → logprob: -6.920956134796143
    10. '       ' → logprob: -7.045956134796143

Token 542: ' Or' (ID: 2604)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3602738380432129
    2. 'index' → logprob: -1.985273838043213
    3. '#' → logprob: -2.985273838043213
    4. 'if' → logprob: -3.235273838043213
    5. ' index' → logprob: -3.735273838043213
    6. ' if' → logprob: -3.735273838043213
    7. ' #' → logprob: -5.235273838043213
    8. 'char' → logprob: -5.235273838043213
    9. 'cycle' → logprob: -6.235273838043213
    10. ' cycle' → logprob: -6.360273838043213

Token 543: ' l' (ID: 305)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.6841530799865723
    2. ' i' → logprob: -1.9341530799865723
    3. ''' → logprob: -2.0591530799865723
    4. 'current' → logprob: -2.1841530799865723
    5. ' current' → logprob: -2.1841530799865723
    6. ' len' → logprob: -2.5591530799865723
    7. 'i' → logprob: -2.9341530799865723
    8. 'len' → logprob: -3.3091530799865723
    9. ' not' → logprob: -3.6841530799865723
    10. ' False' → logprob: -3.6841530799865723

Token 544: ''' (ID: 6)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.9162558317184448
    2. '#' → logprob: -1.6662558317184448
    3. 'current' → logprob: -2.4162559509277344
    4. ' previous' → logprob: -2.7912559509277344
    5. 'i' → logprob: -2.9162559509277344
    6. ''' → logprob: -3.1662559509277344
    7. ' i' → logprob: -3.5412559509277344
    8. 'e' → logprob: -3.5412559509277344
    9. ' #' → logprob: -3.9162559509277344
    10. 'if' → logprob: -4.416255950927734

Token 545: 'én' (ID: 3289)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8060347437858582
    2. 'i' → logprob: -1.431034803390503
    3. 'len' → logprob: -2.181034803390503
    4. ''' → logprob: -3.056034803390503
    5. ''i' → logprob: -3.306034803390503
    6. 'code' → logprob: -3.556034803390503
    7. '#' → logprob: -4.181034564971924
    8. 'not' → logprob: -4.431034564971924
    9. 'if' → logprob: -4.681034564971924
    10. 'last' → logprob: -4.931034564971924

Token 546: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.7432547807693481
    2. 'code' → logprob: -1.2432547807693481
    3. 'continue' → logprob: -3.1182546615600586
    4. '#' → logprob: -3.6182546615600586
    5. 'e' → logprob: -3.9932546615600586
    6. 'cé' → logprob: -4.118254661560059
    7. 'i' → logprob: -4.243254661560059
    8. 'igne' → logprob: -4.493254661560059
    9. 'iné' → logprob: -4.743254661560059
    10. 'a' → logprob: -4.743254661560059

Token 547: ' précise' (ID: 95250)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -1.1416826248168945
    2. ' says' → logprob: -1.7666826248168945
    3. ' continue' → logprob: -2.1416826248168945
    4. '#' → logprob: -2.2666826248168945
    5. 'continue' → logprob: -2.8916826248168945
    6. ':' → logprob: -3.2666826248168945
    7. ' indique' → logprob: -3.3916826248168945
    8. ',' → logprob: -3.5166826248168945
    9. 's' → logprob: -3.7666826248168945
    10. ' n' → logprob: -4.5166826248168945

Token 548: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.04440513625741005
    2. ' that' → logprob: -3.794405221939087
    3. '           ' → logprob: -5.044404983520508
    4. '               ' → logprob: -5.294404983520508
    5. 'that' → logprob: -6.044404983520508
    6. ' qu' → logprob: -6.294404983520508
    7. ',' → logprob: -6.419404983520508
    8. ':' → logprob: -6.669404983520508
    9. '#' → logprob: -8.169404983520508
    10. '                   ' → logprob: -8.294404983520508

Token 549: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4098848104476929
    2. ' le' → logprob: -1.6598848104476929
    3. ' la' → logprob: -2.0348849296569824
    4. 'le' → logprob: -2.2848849296569824
    5. ' the' → logprob: -2.5348849296569824
    6. 'the' → logprob: -2.9098849296569824
    7. '#' → logprob: -2.9098849296569824
    8. 'if' → logprob: -3.5348849296569824
    9. 'la' → logprob: -3.7848849296569824
    10. ' on' → logprob: -4.534884929656982

Token 550: '0' (ID: 15)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5244370102882385
    2. 'i' → logprob: -1.7744369506835938
    3. ''' → logprob: -2.3994369506835938
    4. 'False' → logprob: -2.8994369506835938
    5. 'count' → logprob: -3.5244369506835938
    6. 'result' → logprob: -4.274436950683594
    7. 'not' → logprob: -4.524436950683594
    8. ''i' → logprob: -4.774436950683594
    9. '#' → logprob: -5.024436950683594
    10. 'True' → logprob: -5.149436950683594

Token 551: ' permet' (ID: 11798)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7050838470458984
    2. 'n' → logprob: -0.9550838470458984
    3. ' sert' → logprob: -3.7050838470458984
    4. ' est' → logprob: -3.8300838470458984
    5. ' ne' → logprob: -3.9550838470458984
    6. ' is' → logprob: -4.455083847045898
    7. ' permet' → logprob: -5.455083847045898
    8. '   ' → logprob: -5.580083847045898
    9. 's' → logprob: -5.705083847045898
    10. '#' → logprob: -5.955083847045898

Token 552: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9007545709609985
    2. 'de' → logprob: -1.2757545709609985
    3. 'd' → logprob: -1.6507545709609985
    4. ' d' → logprob: -2.400754451751709
    5. ' la' → logprob: -4.025754451751709
    6. 't' → logprob: -5.025754451751709
    7. 'la' → logprob: -5.650754451751709
    8. ' ' → logprob: -7.650754451751709
    9. 'trait' → logprob: -7.900754451751709
    10. ' ' → logprob: -8.025754928588867

Token 553: ''' (ID: 6)
  Prédit: 'éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -1.3662320375442505
    2. 'e' → logprob: -1.7412320375442505
    3. ''inter' → logprob: -2.366231918334961
    4. ''act' → logprob: -2.616231918334961
    5. ''ins' → logprob: -2.741231918334961
    6. 'ec' → logprob: -2.991231918334961
    7. 'é' → logprob: -3.116231918334961
    8. ''effect' → logprob: -3.241231918334961
    9. 'is' → logprob: -3.366231918334961
    10. ''' → logprob: -3.366231918334961

Token 554: 'entr' (ID: 12792)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.3469766676425934
    2. 'act' → logprob: -1.596976637840271
    3. 'sé' → logprob: -3.3469767570495605
    4. ''inter' → logprob: -4.5969767570495605
    5. 'esp' → logprob: -4.8469767570495605
    6. 'interp' → logprob: -5.5969767570495605
    7. 'interrupt' → logprob: -5.5969767570495605
    8. 'év' → logprob: -5.7219767570495605
    9. 'in' → logprob: -5.8469767570495605
    10. ' interrom' → logprob: -6.2219767570495605

Token 555: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0004317420825827867
    2. 'érer' → logprob: -8.375432014465332
    3. 'éer' → logprob: -9.500432014465332
    4. 'erer' → logprob: -9.875432014465332
    5. 'e' → logprob: -11.000432014465332
    6. 'errer' → logprob: -11.750432014465332
    7. 'ér' → logprob: -11.875432014465332
    8. 'rer' → logprob: -12.000432014465332
    9. 'é' → logprob: -12.000432014465332
    10. 'oyer' → logprob: -12.500432014465332

Token 556: ' plusieurs' (ID: 20875)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.3726813793182373
    2. 'la' → logprob: -1.6226813793182373
    3. ' une' → logprob: -2.1226813793182373
    4. ' la' → logprob: -2.1226813793182373
    5. 'de' → logprob: -2.8726813793182373
    6. 'à' → logprob: -3.2476813793182373
    7. 'le' → logprob: -3.3726813793182373
    8. ' de' → logprob: -3.4976813793182373
    9. 'd' → logprob: -3.8726813793182373
    10. 'un' → logprob: -4.247681617736816

Token 557: ' fois' (ID: 14697)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.0158677101135254
    2. ' caractères' → logprob: -1.1408677101135254
    3. ' fois' → logprob: -2.6408677101135254
    4. 't' → logprob: -3.1408677101135254
    5. '```' → logprob: -3.7658677101135254
    6. ' car' → logprob: -4.140867710113525
    7. 'fois' → logprob: -4.140867710113525
    8. 'cycles' → logprob: -4.265867710113525
    9. ' mots' → logprob: -4.390867710113525
    10. ' lettres' → logprob: -4.515867710113525

Token 558: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.2758169174194336
    2. 'current' → logprob: -1.2758169174194336
    3. ' la' → logprob: -2.0258169174194336
    4. 'la' → logprob: -2.0258169174194336
    5. 'sur' → logprob: -2.5258169174194336
    6. ' le' → logprob: -3.2758169174194336
    7. ' current' → logprob: -3.5258169174194336
    8. ' sur' → logprob: -4.525816917419434
    9. 'the' → logprob: -5.275816917419434
    10. ' the' → logprob: -6.150816917419434

Token 559: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.477784663438797
    2. ' même' → logprob: -1.1027846336364746
    3. 'car' → logprob: -3.7277846336364746
    4. 'lett' → logprob: -3.9777846336364746
    5. 't' → logprob: -6.477784633636475
    6. 'chaine' → logprob: -7.602784633636475
    7. 'same' → logprob: -7.977784633636475
    8. ' caractère' → logprob: -8.102785110473633
    9. ' lettre' → logprob: -8.227785110473633
    10. ' mêmes' → logprob: -8.602785110473633

Token 560: ' touche' (ID: 77303)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1635153442621231
    2. ' touche' → logprob: -1.913515329360962
    3. 'touch' → logprob: -7.163515567779541
    4. ' ' → logprob: -7.288515567779541
    5. 'lett' → logprob: -7.288515567779541
    6. ' t' → logprob: -8.413515090942383
    7. '_t' → logprob: -8.413515090942383
    8. '_' → logprob: -9.288515090942383
    9. 'car' → logprob: -9.288515090942383
    10. '   ' → logprob: -9.538515090942383

Token 561: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025697477161884308
    2. ',' → logprob: -4.275697708129883
    3. '.' → logprob: -5.525697708129883
    4. '            
' → logprob: -5.775697708129883
    5. '       ' → logprob: -7.275697708129883
    6. ' (' → logprob: -7.525697708129883
    7. ' sans' → logprob: -7.650697708129883
    8. '#' → logprob: -7.900697708129883
    9. ' without' → logprob: -7.900697708129883
    10. '.
' → logprob: -8.025697708129883

Token 562: ' série' (ID: 22079)
  Prédit: 'mode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mode' → logprob: -0.9068223237991333
    2. 'sé' → logprob: -1.5318223237991333
    3. 'continu' → logprob: -1.7818223237991333
    4. 'chaine' → logprob: -3.2818222045898438
    5. 'suite' → logprob: -3.5318222045898438
    6. 'contin' → logprob: -3.6568222045898438
    7. 'su' → logprob: -3.6568222045898438
    8. ' mode' → logprob: -3.7818222045898438
    9. 'continue' → logprob: -3.7818222045898438
    10. 's' → logprob: -5.031822204589844

Token 563: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06955820322036743
    2. ' sans' → logprob: -3.8195581436157227
    3. ' without' → logprob: -3.9445581436157227
    4. ',' → logprob: -4.069558143615723
    5. '.' → logprob: -5.944558143615723
    6. 'without' → logprob: -5.944558143615723
    7. 'sans' → logprob: -6.944558143615723
    8. ' (' → logprob: -7.694558143615723
    9. '               ' → logprob: -8.069558143615723
    10. '.
' → logprob: -8.069558143615723

Token 564: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023364273831248283
    2. '```' → logprob: -5.273364067077637
    3. 'token' → logprob: -5.398364067077637
    4. '
' → logprob: -5.523364067077637
    5. 'index' → logprob: -5.648364067077637
    6. '{
' → logprob: -6.773364067077637
    7. '       ' → logprob: -7.148364067077637
    8. '#' → logprob: -7.523364067077637
    9. 'char' → logprob: -7.523364067077637
    10. '            
' → logprob: -7.648364067077637

Token 565: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10241936892271042
    2. 'cycle' → logprob: -2.852419376373291
    3. 'char' → logprob: -4.602419376373291
    4. '
' → logprob: -5.102419376373291
    5. 'chars' → logprob: -5.352419376373291
    6. ' cycle' → logprob: -5.352419376373291
    7. 'mapping' → logprob: -5.477419376373291
    8. 'key' → logprob: -5.727419376373291
    9. 'index' → logprob: -6.602419376373291
    10. 'button' → logprob: -6.852419376373291

Token 566: ' Donc' (ID: 88837)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.25243720412254333
    2. '           ' → logprob: -2.877437114715576
    3. 'char' → logprob: -3.002437114715576
    4. 'key' → logprob: -3.252437114715576
    5. 'chars' → logprob: -3.502437114715576
    6. ' cycle' → logprob: -4.252437114715576
    7. 'mapping' → logprob: -4.502437114715576
    8. '#' → logprob: -5.127437114715576
    9. 'index' → logprob: -5.252437114715576
    10. 'cycles' → logprob: -5.752437114715576

Token 567: ' sans' (ID: 9828)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.9422308206558228
    2. 'cycle' → logprob: -1.1922308206558228
    3. '           ' → logprob: -2.192230701446533
    4. ' key' → logprob: -3.192230701446533
    5. 'char' → logprob: -3.192230701446533
    6. 'chars' → logprob: -3.442230701446533
    7. 'key' → logprob: -3.942230701446533
    8. 'index' → logprob: -4.817230701446533
    9. 'mapping' → logprob: -4.942230701446533
    10. ' chars' → logprob: -5.067230701446533

Token 568: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4134219884872437
    2. 'inter' → logprob: -1.6634219884872437
    3. 'gestion' → logprob: -2.038422107696533
    4. 'la' → logprob: -2.538422107696533
    5. 's' → logprob: -2.538422107696533
    6. 'l' → logprob: -3.538422107696533
    7. '#' → logprob: -3.788422107696533
    8. 'un' → logprob: -4.038422107696533
    9. 'une' → logprob: -4.038422107696533
    10. 'reset' → logprob: -4.038422107696533

Token 569: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.369559645652771
    2. 'continue' → logprob: -2.7445597648620605
    3. ''' → logprob: -2.8695597648620605
    4. 'un' → logprob: -3.1195597648620605
    5. 'break' → logprob: -3.9945597648620605
    6. 'inter' → logprob: -4.1195597648620605
    7. 'la' → logprob: -4.3695597648620605
    8. 'gestion' → logprob: -4.3695597648620605
    9. 'une' → logprob: -4.4945597648620605
    10. 'contin' → logprob: -4.8695597648620605

Token 570: ' entre' (ID: 3853)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5113381743431091
    2. ',' → logprob: -1.636338233947754
    3. '           ' → logprob: -1.886338233947754
    4. 'continue' → logprob: -3.886338233947754
    5. ' continue' → logprob: -5.136338233947754
    6. ':
' → logprob: -5.386338233947754
    7. '.' → logprob: -5.386338233947754
    8. '       ' → logprob: -5.636338233947754
    9. '               ' → logprob: -5.761338233947754
    10. '#' → logprob: -6.511338233947754

Token 571: ' deux' (ID: 10301)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.561447262763977
    2. 'les' → logprob: -1.186447262763977
    3. 'la' → logprob: -2.5614471435546875
    4. 'le' → logprob: -3.5614471435546875
    5. ',' → logprob: -5.1864471435546875
    6. '(current' → logprob: -5.9364471435546875
    7. '```' → logprob: -6.4364471435546875
    8. ''' → logprob: -6.9364471435546875
    9. ' les' → logprob: -7.0614471435546875
    10. '   ' → logprob: -7.0614471435546875

Token 572: ' séries' (ID: 96868)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7656773924827576
    2. 'app' → logprob: -2.0156774520874023
    3. 'pressions' → logprob: -2.2656774520874023
    4. 'press' → logprob: -2.3906774520874023
    5. 'touch' → logprob: -2.6406774520874023
    6. '   ' → logprob: -3.7656774520874023
    7. '_' → logprob: -3.8906774520874023
    8. ' touches' → logprob: -4.015677452087402
    9. ''app' → logprob: -4.765677452087402
    10. 'pression' → logprob: -5.015677452087402

Token 573: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5309622287750244
    2. ',' → logprob: -0.9059622287750244
    3. ':
' → logprob: -5.405961990356445
    4. '           ' → logprob: -6.530961990356445
    5. ',
' → logprob: -7.905961990356445
    6. '               ' → logprob: -8.030961990356445
    7. '   ' → logprob: -8.405961990356445
    8. '#' → logprob: -8.530961990356445
    9. ' :' → logprob: -8.655961990356445
    10. ' on' → logprob: -9.030961990356445

Token 574: ' la' (ID: 557)
  Prédit: 'press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.666549026966095
    2. 't' → logprob: -1.7915489673614502
    3. 'touch' → logprob: -2.04154896736145
    4. 'pressions' → logprob: -2.79154896736145
    5. 'la' → logprob: -3.04154896736145
    6. 'm' → logprob: -3.29154896736145
    7. 'pression' → logprob: -4.666549205780029
    8. 'bout' → logprob: -4.791549205780029
    9. '```' → logprob: -5.166549205780029
    10. 'clic' → logprob: -5.666549205780029

Token 575: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011977734975516796
    2. ' même' → logprob: -5.136977672576904
    3. 'same' → logprob: -6.261977672576904
    4. ' mêmes' → logprob: -6.511977672576904
    5. 't' → logprob: -6.761977672576904
    6. 'bout' → logprob: -7.886977672576904
    7. 'Même' → logprob: -8.886978149414062
    8. 'touch' → logprob: -8.886978149414062
    9. '```' → logprob: -9.136978149414062
    10. ' ' → logprob: -9.261978149414062

Token 576: ' touche' (ID: 77303)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.028629647567868233
    2. ' touche' → logprob: -3.9036295413970947
    3. '_t' → logprob: -5.403629779815674
    4. '_' → logprob: -6.528629779815674
    5. '_char' → logprob: -7.153629779815674
    6. 'touch' → logprob: -7.653629779815674
    7. ' ' → logprob: -8.653629302978516
    8. '_touch' → logprob: -9.028629302978516
    9. ' t' → logprob: -9.528629302978516
    10. '   ' → logprob: -9.528629302978516

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43993839621543884
    2. ':' → logprob: -1.0649384260177612
    3. ':
' → logprob: -5.189938545227051
    4. '           ' → logprob: -5.564938545227051
    5. '{' → logprob: -8.43993854522705
    6. '               ' → logprob: -8.43993854522705
    7. '.' → logprob: -8.43993854522705
    8. '   ' → logprob: -8.56493854522705
    9. ',
' → logprob: -8.81493854522705
    10. 'current' → logprob: -8.93993854522705

Token 578: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7492293119430542
    2. 'pass' → logprob: -1.4992293119430542
    3. 'continue' → logprob: -2.3742294311523438
    4. '           ' → logprob: -2.6242294311523438
    5. ' on' → logprob: -2.9992294311523438
    6. 'index' → logprob: -4.249229431152344
    7. ' #' → logprob: -4.499229431152344
    8. ' continue' → logprob: -4.624229431152344
    9. 'count' → logprob: -4.749229431152344
    10. 'on' → logprob: -4.749229431152344

Token 579: ' a' (ID: 261)
  Prédit: ' ignore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ignore' → logprob: -0.9151731133460999
    2. 'ignore' → logprob: -0.9151731133460999
    3. 'continue' → logprob: -2.540173053741455
    4. 'do' → logprob: -3.540173053741455
    5. 'ne' → logprob: -3.915173053741455
    6. ' continue' → logprob: -4.040173053741455
    7. ' considère' → logprob: -4.540173053741455
    8. ' ne' → logprob: -5.040173053741455
    9. 'n' → logprob: -5.165173053741455
    10. 'skip' → logprob: -5.415173053741455

Token 580: ' un' (ID: 537)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7928576469421387
    2. 'un' → logprob: -1.7928576469421387
    3. 'une' → logprob: -2.1678576469421387
    4. ' une' → logprob: -2.4178576469421387
    5. 'to' → logprob: -2.6678576469421387
    6. ' to' → logprob: -3.1678576469421387
    7. 'cycle' → logprob: -3.1678576469421387
    8. 'le' → logprob: -3.4178576469421387
    9. ' un' → logprob: -3.4178576469421387
    10. 'a' → logprob: -3.4178576469421387

Token 581: ' seul' (ID: 33041)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.27505025267601013
    2. 'cycle' → logprob: -1.9000502824783325
    3. ' overflow' → logprob: -3.775050163269043
    4. ' problème' → logprob: -3.775050163269043
    5. 'cycl' → logprob: -5.025050163269043
    6. 'dé' → logprob: -5.150050163269043
    7. ' seul' → logprob: -5.900050163269043
    8. 'car' → logprob: -5.900050163269043
    9. 'overflow' → logprob: -6.150050163269043
    10. 'd' → logprob: -6.275050163269043

Token 582: ' groupe' (ID: 29494)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.14456698298454285
    2. ' cycle' → logprob: -2.5195670127868652
    3. 'car' → logprob: -3.2695670127868652
    4. 'char' → logprob: -5.394567012786865
    5. 'c' → logprob: -6.144567012786865
    6. 'bloc' → logprob: -6.269567012786865
    7. 'character' → logprob: -6.769567012786865
    8. 'token' → logprob: -7.019567012786865
    9. ' caractère' → logprob: -7.269567012786865
    10. '```' → logprob: -7.269567012786865

Token 583: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3218502998352051
    2. '       ' → logprob: -2.196850299835205
    3. '.' → logprob: -3.071850299835205
    4. '<|end|>' → logprob: -3.196850299835205
    5. '            
' → logprob: -3.946850299835205
    6. ',' → logprob: -4.571850299835205
    7. '
' → logprob: -4.946850299835205
    8. '               ' → logprob: -5.071850299835205
    9. '   ' → logprob: -5.571850299835205
    10. ',
' → logprob: -5.946850299835205

Token 584: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24995733797550201
    2. 'index' → logprob: -2.124957323074341
    3. 'token' → logprob: -3.499957323074341
    4. 'position' → logprob: -4.12495756149292
    5. ' index' → logprob: -4.37495756149292
    6. 'pos' → logprob: -4.87495756149292
    7. 'cycle' → logprob: -4.99995756149292
    8. '#' → logprob: -5.24995756149292
    9. ' cycle' → logprob: -5.37495756149292
    10. '
' → logprob: -5.74995756149292

Token 585: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30170202255249023
    2. 'token' → logprob: -1.9267020225524902
    3. 'index' → logprob: -3.8017020225524902
    4. '#' (adapté à ' #') → logprob: -4.55170202255249
    5. 'cycle' → logprob: -4.67670202255249
    6. 'char' → logprob: -5.05170202255249
    7. '```' → logprob: -5.05170202255249
    8. 'button' → logprob: -5.17670202255249
    9. 'continue' → logprob: -5.17670202255249
    10. ' token' → logprob: -5.17670202255249

Token 586: ' Ici' (ID: 145754)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0544064044952393
    2. 'cycle' → logprob: -1.3044064044952393
    3. 'char' → logprob: -2.1794064044952393
    4. 'token' → logprob: -2.8044064044952393
    5. 'index' → logprob: -2.8044064044952393
    6. ' cycle' → logprob: -3.4294064044952393
    7. 'key' → logprob: -3.5544064044952393
    8. 'button' → logprob: -3.6794064044952393
    9. 'mapping' → logprob: -3.9294064044952393
    10. 'character' → logprob: -5.42940616607666

Token 587: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27767908573150635
    2. 'index' → logprob: -2.152678966522217
    3. ' index' → logprob: -3.152678966522217
    4. '#' → logprob: -3.402678966522217
    5. 'continue' → logprob: -5.277678966522217
    6. 'token' → logprob: -5.402678966522217
    7. ',' → logprob: -5.527678966522217
    8. ' #' → logprob: -5.652678966522217
    9. 'position' → logprob: -5.652678966522217
    10. ' cycle' → logprob: -5.777678966522217

Token 588: ' dé' (ID: 2393)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8455521464347839
    2. ' continue' → logprob: -0.9705521464347839
    3. 'continue' → logprob: -1.9705522060394287
    4. ' doit' → logprob: -3.9705522060394287
    5. '       ' → logprob: -4.47055196762085
    6. 'append' → logprob: -5.47055196762085
    7. '#' → logprob: -6.09555196762085
    8. ' append' → logprob: -6.22055196762085
    9. 'contin' → logprob: -6.34555196762085
    10. ' calc' → logprob: -6.72055196762085

Token 589: 'code' (ID: 3056)
  Prédit: 'tect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tect' → logprob: -0.2523738741874695
    2. 'f' → logprob: -1.8773739337921143
    3. 'term' → logprob: -3.7523739337921143
    4. 'c' → logprob: -3.7523739337921143
    5. 'code' → logprob: -4.252373695373535
    6. '```' → logprob: -6.127373695373535
    7. '#' → logprob: -6.502373695373535
    8. '}' → logprob: -6.877373695373535
    9. '   ' → logprob: -7.502373695373535
    10. 'compose' → logprob: -7.627373695373535

Token 590: ' simplement' (ID: 45065)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2576753497123718
    2. 'token' → logprob: -2.3826754093170166
    3. ' le' → logprob: -3.3826754093170166
    4. ' token' → logprob: -3.6326754093170166
    5. 'le' → logprob: -4.3826751708984375
    6. ' la' → logprob: -4.6326751708984375
    7. ' the' → logprob: -5.2576751708984375
    8. ' index' → logprob: -5.3826751708984375
    9. 'current' → logprob: -5.5076751708984375
    10. 'char' → logprob: -5.5076751708984375

Token 591: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22003063559532166
    2. 'le' → logprob: -2.8450305461883545
    3. 'token' → logprob: -3.3450305461883545
    4. ' le' → logprob: -3.4700305461883545
    5. 'char' → logprob: -4.220030784606934
    6. ' cycle' → logprob: -4.345030784606934
    7. ' la' → logprob: -4.470030784606934
    8. 'cycle' → logprob: -4.845030784606934
    9. ' token' → logprob: -5.345030784606934
    10. 'character' → logprob: -6.220030784606934

Token 592: ' utilisant' (ID: 92474)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.1806347370147705
    2. 'cho' → logprob: -1.9306347370147705
    3. ' prenant' → logprob: -2.0556347370147705
    4. 'util' → logprob: -2.0556347370147705
    5. ' utilisant' → logprob: -2.4306347370147705
    6. 'app' → logprob: -3.0556347370147705
    7. 'index' → logprob: -3.8056347370147705
    8. 's' → logprob: -4.055634498596191
    9. 'select' → logprob: -4.180634498596191
    10. ' chois' → logprob: -4.180634498596191

Token 593: ' le' (ID: 505)
  Prédit: 'BUTTON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'BUTTON' → logprob: -0.6570267081260681
    2. 'count' → logprob: -0.7820267081260681
    3. ' BUTTON' → logprob: -4.532026767730713
    4. ' count' → logprob: -5.157026767730713
    5. 'the' → logprob: -6.657026767730713
    6. 'len' → logprob: -6.782026767730713
    7. '```' → logprob: -6.782026767730713
    8. ' modulo' → logprob: -7.032026767730713
    9. 'mod' → logprob: -7.532026767730713
    10. '   ' → logprob: -7.532026767730713

Token 594: ' nombre' (ID: 9733)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7106245756149292
    2. 'BUTTON' → logprob: -0.9606245756149292
    3. ' BUTTON' → logprob: -3.2106246948242188
    4. ' count' → logprob: -3.3356246948242188
    5. ' modulo' → logprob: -4.085624694824219
    6. 'mod' → logprob: -4.710624694824219
    7. ' cycle' → logprob: -5.460624694824219
    8. 'cycle' → logprob: -5.585624694824219
    9. '```' → logprob: -5.835624694824219
    10. ' modulus' → logprob: -6.710624694824219

Token 595: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7795336842536926
    2. 'count' → logprob: -1.7795336246490479
    3. '           ' → logprob: -1.9045336246490479
    4. 'de' → logprob: -2.654533624649048
    5. ' count' → logprob: -2.904533624649048
    6. ' d' → logprob: -4.404533863067627
    7. '[count' → logprob: -4.404533863067627
    8. '               ' → logprob: -4.529533863067627
    9. '=count' → logprob: -4.654533863067627
    10. '_de' → logprob: -4.779533863067627

Token 596: ' press' (ID: 4989)
  Prédit: 'press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.07390092313289642
    2. 'count' → logprob: -3.5739009380340576
    3. 'pressions' → logprob: -3.6989009380340576
    4. ' press' → logprob: -4.9489006996154785
    5. 'app' → logprob: -5.1989006996154785
    6. ' presses' → logprob: -5.8239006996154785
    7. ' ' → logprob: -8.073901176452637
    8. ' app' → logprob: -8.073901176452637
    9. 'counts' → logprob: -8.198901176452637
    10. 'pression' → logprob: -8.198901176452637

Token 597: 'ions' (ID: 756)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.2816571593284607
    2. 'ions' → logprob: -1.4066572189331055
    3. 'és' → logprob: -8.281657218933105
    4. 'ons' → logprob: -9.656657218933105
    5. 'essions' → logprob: -9.906657218933105
    6. 'ion' → logprob: -10.281657218933105
    7. 'ections' → logprob: -10.656657218933105
    8. 'ses' → logprob: -11.531657218933105
    9. 'ées' → logprob: -11.656657218933105
    10. 'ess' → logprob: -11.656657218933105

Token 598: ' modulo' (ID: 112372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.178167924284935
    2. 'sur' → logprob: -3.0531678199768066
    3. ' sur' → logprob: -3.1781678199768066
    4. ' %' → logprob: -4.428167819976807
    5. '       ' → logprob: -4.803167819976807
    6. '               ' → logprob: -4.803167819976807
    7. ' current' → logprob: -5.303167819976807
    8. ',' → logprob: -5.553167819976807
    9. 'current' → logprob: -5.553167819976807
    10. '%' → logprob: -5.553167819976807

Token 599: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11698092520236969
    2. ' len' → logprob: -2.366981029510498
    3. '(len' → logprob: -4.116981029510498
    4. '=len' → logprob: -8.36698055267334
    5. ' (' → logprob: -9.99198055267334
    6. '[len' → logprob: -10.74198055267334
    7. ',len' → logprob: -11.49198055267334
    8. 'length' → logprob: -11.86698055267334
    9. '   ' → logprob: -12.24198055267334
    10. '	len' → logprob: -12.36698055267334

Token 600: ' longueur' (ID: 104613)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00012809180771000683
    2. ' len' → logprob: -9.625127792358398
    3. '(len' → logprob: -10.000127792358398
    4. 'length' → logprob: -11.375127792358398
    5. 'long' → logprob: -12.500127792358398
    6. ' longueur' → logprob: -14.875127792358398
    7. '   ' → logprob: -15.375127792358398
    8. '=len' → logprob: -15.500127792358398
    9. '[len' → logprob: -15.625127792358398
    10. '```' → logprob: -16.1251277923584

Token 601: '
' (ID: 198)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08632204681634903
    2. 'de' → logprob: -2.711322069168091
    3. ' du' → logprob: -5.211321830749512
    4. ' of' → logprob: -5.461321830749512
    5. '   ' → logprob: -5.586321830749512
    6. ' des' → logprob: -7.086321830749512
    7. 'du' → logprob: -7.336321830749512
    8. '=' → logprob: -8.336321830749512
    9. ')' → logprob: -8.836321830749512
    10. 'of' → logprob: -9.211321830749512

Token 602: '           ' (ID: 352)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.7157893180847168
    2. 'BUTTON' → logprob: -1.5907893180847168
    3. '(B' → logprob: -2.590789318084717
    4. '=' → logprob: -2.965789318084717
    5. ' of' → logprob: -3.215789318084717
    6. 'current' → logprob: -3.590789318084717
    7. '   ' → logprob: -3.715789318084717
    8. '(current' → logprob: -3.965789318084717
    9. '(' → logprob: -4.215789318084717
    10. '```' → logprob: -4.715789318084717

Token 603: ' chars' (ID: 47991)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.05656898021698
    2. ' =' → logprob: -1.55656898021698
    3. '=' → logprob: -2.1815690994262695
    4. '   ' → logprob: -2.5565690994262695
    5. 'de' → logprob: -2.5565690994262695
    6. ' of' → logprob: -2.9315690994262695
    7. 'BUTTON' → logprob: -3.6815690994262695
    8. ' cycle' → logprob: -4.4315690994262695
    9. ' du' → logprob: -4.9315690994262695
    10. 'cycle' → logprob: -5.0565690994262695

Token 604: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42893344163894653
    2. '=' → logprob: -1.0539333820343018
    3. '   ' → logprob: -9.928933143615723
    4. '=current' → logprob: -9.928933143615723
    5. '_cycle' → logprob: -10.428933143615723
    6. 's' → logprob: -10.928933143615723
    7. '_length' → logprob: -11.303933143615723
    8. '[current' → logprob: -11.303933143615723
    9. '_len' → logprob: -11.553933143615723
    10. '_current' → logprob: -11.928933143615723

Token 605: ' BUTTON' (ID: 92820)
  Prédit: 'BUTTON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BUTTON' → logprob: -0.023248272016644478
    2. ' BUTTON' → logprob: -3.7732481956481934
    3. ' ' → logprob: -13.273248672485352
    4. '   ' → logprob: -14.398248672485352
    5. '.BUTTON' → logprob: -15.523248672485352
    6. '_BUTTON' → logprob: -16.02324867248535
    7. '  ' → logprob: -16.39824867248535
    8. '```' → logprob: -16.52324867248535
    9. '<Button' → logprob: -17.02324867248535
    10. 'Button' → logprob: -17.39824867248535

Token 606: '_MAP' (ID: 36685)
  Prédit: '_MAP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MAP' → logprob: -1.4259644558478612e-05
    2. '_map' → logprob: -11.250014305114746
    3. '_Map' → logprob: -14.375014305114746
    4. ''_' → logprob: -15.000014305114746
    5. '[_' → logprob: -16.37501335144043
    6. '_' → logprob: -16.50001335144043
    7. ' _' → logprob: -17.00001335144043
    8. '\' → logprob: -17.00001335144043
    9. '"_' → logprob: -17.37501335144043
    10. 'MAP' → logprob: -17.50001335144043

Token 607: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -4.60414821645827e-06
    2. 'current' → logprob: -13.000004768371582
    3. '.get' → logprob: -13.500004768371582
    4. '[' → logprob: -14.875004768371582
    5. '[cur' → logprob: -15.250004768371582
    6. '[curr' → logprob: -16.625003814697266
    7. ' [' → logprob: -16.750003814697266
    8. '[get' → logprob: -16.750003814697266
    9. 'get' → logprob: -18.375003814697266
    10. '=current' → logprob: -19.000003814697266

Token 608: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -5.319370302458992e-06
    2. 'char' → logprob: -12.250005722045898
    3. '_CHAR' → logprob: -15.625005722045898
    4. '_chars' → logprob: -15.625005722045898
    5. 'Char' → logprob: -17.3750057220459
    6. '_key' → logprob: -17.8750057220459
    7. '[' → logprob: -18.1250057220459
    8. '<char' → logprob: -18.1250057220459
    9. '-char' → logprob: -18.6250057220459
    10. '```' → logprob: -19.0000057220459

Token 609: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1639876663684845
    2. ']
' → logprob: -1.913987636566162
    3. '][' → logprob: -5.663987636566162
    4. ']
' → logprob: -8.53898811340332
    5. ']

' → logprob: -9.41398811340332
    6. '[(' → logprob: -11.91398811340332
    7. '[count' → logprob: -14.03898811340332
    8. '[' → logprob: -14.53898811340332
    9. ']

' → logprob: -14.53898811340332
    10. '[
' → logprob: -14.78898811340332

Token 610: '           ' (ID: 352)
  Prédit: '[count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[count' → logprob: -0.004778160713613033
    2. '[(' → logprob: -5.6297783851623535
    3. '[' → logprob: -7.2547783851623535
    4. 'count' → logprob: -8.004777908325195
    5. '[
' → logprob: -9.879777908325195
    6. '[len' → logprob: -10.004777908325195
    7. '       ' → logprob: -11.754777908325195
    8. '           ' → logprob: -12.004777908325195
    9. '[min' → logprob: -12.254777908325195
    10. '(count' → logprob: -12.379777908325195

Token 611: ' length' (ID: 5517)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.1962023824453354
    2. 'pos' → logprob: -2.321202278137207
    3. 'position' → logprob: -3.446202278137207
    4. 'token' → logprob: -4.446202278137207
    5. 'idx' → logprob: -4.696202278137207
    6. 'result' → logprob: -4.821202278137207
    7. ' index' → logprob: -5.071202278137207
    8. '[position' → logprob: -5.946202278137207
    9. 'selected' → logprob: -6.071202278137207
    10. '[token' → logprob: -6.571202278137207

Token 612: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47540342807769775
    2. '=' → logprob: -0.9754034280776978
    3. '_chars' → logprob: -6.975403308868408
    4. '_mod' → logprob: -8.975403785705566
    5. '_len' → logprob: -9.350403785705566
    6. '=len' → logprob: -9.975403785705566
    7. '(chars' → logprob: -10.850403785705566
    8. '   ' → logprob: -11.100403785705566
    9. '_' → logprob: -11.100403785705566
    10. '_length' → logprob: -11.225403785705566

Token 613: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2014141082763672
    2. ' len' → logprob: -1.7014141082763672
    3. '(len' → logprob: -14.076414108276367
    4. '	len' → logprob: -16.951414108276367
    5. '[len' → logprob: -17.451414108276367
    6. '=len' → logprob: -17.576414108276367
    7. ',len' → logprob: -19.326414108276367
    8. 'length' → logprob: -20.076414108276367
    9. '6' → logprob: -20.326414108276367
    10. '```' → logprob: -20.576414108276367

Token 614: '(chars' (ID: 168140)
  Prédit: '(chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chars' → logprob: -1.700132997939363e-05
    2. 'chars' → logprob: -11.000017166137695
    3. '(' → logprob: -15.250017166137695
    4. ' chars' → logprob: -18.625017166137695
    5. '(button' → logprob: -18.750017166137695
    6. '(char' → logprob: -18.750017166137695
    7. '(B' → logprob: -18.875017166137695
    8. '(ch' → logprob: -19.875017166137695
    9. '(cols' → logprob: -19.875017166137695
    10. '(cards' → logprob: -20.250017166137695

Token 615: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007607339881360531
    2. ')
' → logprob: -4.882607460021973
    3. ')

' → logprob: -14.757607460021973
    4. ')
' → logprob: -14.882607460021973
    5. ' )' → logprob: -15.507607460021973
    6. '   ' → logprob: -16.257606506347656
    7. '           ' → logprob: -16.882606506347656
    8. ']' → logprob: -17.007606506347656
    9. '),' → logprob: -18.132606506347656
    10. '')' → logprob: -18.132606506347656

Token 616: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9589163661003113
    2. '[count' → logprob: -1.833916425704956
    3. '%' → logprob: -1.958916425704956
    4. 'index' → logprob: -2.708916425704956
    5. ' %' → logprob: -2.833916425704956
    6. 'count' → logprob: -2.958916425704956
    7. '
' → logprob: -3.958916425704956
    8. ' index' → logprob: -4.083916187286377
    9. 'idx' → logprob: -4.208916187286377
    10. '[token' → logprob: -4.833916187286377

Token 617: ' #' (ID: 1069)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.172510027885437
    2. 'result' → logprob: -1.172510027885437
    3. 'token' → logprob: -2.2975101470947266
    4. '           ' → logprob: -3.0475101470947266
    5. ' result' → logprob: -3.1725101470947266
    6. ' index' → logprob: -3.1725101470947266
    7. ' token' → logprob: -3.6725101470947266
    8. 'selected' → logprob: -3.9225101470947266
    9. 'position' → logprob: -3.9225101470947266
    10. 'char' → logprob: -4.422510147094727

Token 618: ' La' (ID: 3038)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.06971786916255951
    2. 'pos' → logprob: -3.3197178840637207
    3. 'result' → logprob: -4.194717884063721
    4. 'position' → logprob: -5.069717884063721
    5. ' index' → logprob: -5.569717884063721
    6. 'char' → logprob: -5.819717884063721
    7. 'idx' → logprob: -6.569717884063721
    8. 'selected' → logprob: -6.694717884063721
    9. ' pos' → logprob: -9.069717407226562
    10. '   ' → logprob: -9.694717407226562

Token 619: ' position' (ID: 4010)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.8187876343727112
    2. 'position' → logprob: -1.6937875747680664
    3. 'char' → logprob: -1.8187875747680664
    4. 'pos' → logprob: -2.1937875747680664
    5. ' index' → logprob: -2.9437875747680664
    6. 'selected' → logprob: -4.568787574768066
    7. ' char' → logprob: -4.568787574768066
    8. 'result' → logprob: -5.068787574768066
    9. ' position' → logprob: -5.068787574768066
    10. 'character' → logprob: -5.568787574768066

Token 620: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133820593357086
    2. '=' → logprob: -1.3133820295333862
    3. 'pos' → logprob: -10.188382148742676
    4. 'position' → logprob: -10.938382148742676
    5. '_index' → logprob: -11.188382148742676
    6. 'index' → logprob: -11.188382148742676
    7. '_pos' → logprob: -12.188382148742676
    8. ')' → logprob: -12.438382148742676
    9. '           ' → logprob: -12.563382148742676
    10. 'idx' → logprob: -12.813382148742676

Token 621: ' caractère' (ID: 80509)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0688459873199463
    2. 'car' → logprob: -1.4438459873199463
    3. 'chars' → logprob: -1.5688459873199463
    4. 'token' → logprob: -2.6938459873199463
    5. 'character' → logprob: -3.0688459873199463
    6. '(count' → logprob: -3.3188459873199463
    7. 'char' → logprob: -3.9438459873199463
    8. '(chars' → logprob: -4.318845748901367
    9. ' caractère' → logprob: -4.818845748901367
    10. 'index' → logprob: -5.943845748901367

Token 622: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07518967986106873
    2. '=' → logprob: -2.7001895904541016
    3. 'index' → logprob: -5.825189590454102
    4. 'selected' → logprob: -7.325189590454102
    5. '=index' → logprob: -8.075189590454102
    6. 'token' → logprob: -8.200189590454102
    7. '_index' → logprob: -8.450189590454102
    8. 'idx' → logprob: -8.825189590454102
    9. ' index' → logprob: -9.450189590454102
    10. 'in' → logprob: -9.575189590454102

Token 623: ' (' (ID: 350)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.14348764717578888
    2. ' (' → logprob: -2.0184876918792725
    3. 'count' → logprob: -7.268487453460693
    4. ' count' → logprob: -9.893487930297852
    5. '   ' → logprob: -10.643487930297852
    6. '[count' → logprob: -11.393487930297852
    7. '(c' → logprob: -12.143487930297852
    8. '(chars' → logprob: -12.518487930297852
    9. '(position' → logprob: -12.643487930297852
    10. '(index' → logprob: -13.143487930297852

Token 624: 'count' (ID: 5420)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.02141670696437359
    2. 'count' → logprob: -4.021416664123535
    3. ' (' → logprob: -5.771416664123535
    4. ' count' → logprob: -9.896416664123535
    5. '   ' → logprob: -10.271416664123535
    6. '[count' → logprob: -11.146416664123535
    7. '(c' → logprob: -11.771416664123535
    8. '(cnt' → logprob: -12.021416664123535
    9. ' ' → logprob: -12.271416664123535
    10. ')' → logprob: -12.396416664123535

Token 625: '-' (ID: 12)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5580010414123535
    2. ' -' → logprob: -1.1830010414123535
    3. '-' → logprob: -2.6830010414123535
    4. '%' → logprob: -3.4330010414123535
    5. ')' → logprob: -3.9330010414123535
    6. ' ' → logprob: -7.1830010414123535
    7. ' ' → logprob: -8.808000564575195
    8. '   ' → logprob: -10.558000564575195
    9. ')%' → logprob: -10.808000564575195
    10. '```' → logprob: -11.058000564575195

Token 626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. ')' → logprob: -16.250003814697266
    4. '```' → logprob: -16.500003814697266
    5. '   ' → logprob: -16.750003814697266
    6. '
' → logprob: -18.500003814697266
    7. '           ' → logprob: -18.875003814697266
    8. '۱' → logprob: -20.750003814697266
    9. ' ' → logprob: -21.000003814697266
    10. '       ' → logprob: -21.125003814697266

Token 627: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034714414505288005
    2. '%' → logprob: -8.625347137451172
    3. ')%' → logprob: -9.000347137451172
    4. ' %' → logprob: -10.625347137451172
    5. ' )' → logprob: -10.875347137451172
    6. ')
' → logprob: -14.750347137451172
    7. ' ' → logprob: -15.500347137451172
    8. '%)' → logprob: -16.000347137451172
    9. ']' → logprob: -16.750347137451172
    10. '```' → logprob: -17.125347137451172

Token 628: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4742110073566437
    2. '%' → logprob: -0.9742109775543213
    3. ')' → logprob: -8.974210739135742
    4. ')%' → logprob: -13.224210739135742
    5. ' ' → logprob: -13.349210739135742
    6. ']' → logprob: -13.974210739135742
    7. ' ' → logprob: -14.099210739135742
    8. '%i' → logprob: -14.849210739135742
    9. '%c' → logprob: -14.849210739135742
    10. '%d' → logprob: -15.349210739135742

Token 629: ' la' (ID: 557)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.02975199744105339
    2. ' length' → logprob: -3.529752016067505
    3. '(length' → logprob: -13.404751777648926
    4. 'len' → logprob: -17.529752731323242
    5. '[length' → logprob: -17.779752731323242
    6. '	length' → logprob: -17.904752731323242
    7. ',length' → logprob: -17.904752731323242
    8. 'leng' → logprob: -18.779752731323242
    9. ' lenght' → logprob: -19.279752731323242
    10. '```' → logprob: -19.654752731323242

Token 630: ' longueur' (ID: 104613)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0009149204124696553
    2. ' length' → logprob: -7.000915050506592
    3. 'len' → logprob: -12.625914573669434
    4. 'leng' → logprob: -16.75091552734375
    5. '(length' → logprob: -16.87591552734375
    6. '`' → logprob: -17.87591552734375
    7. '[length' → logprob: -18.25091552734375
    8. '```' → logprob: -18.75091552734375
    9. 'long' → logprob: -19.12591552734375
    10. '	length' → logprob: -19.50091552734375

Token 631: ' du' (ID: 1462)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8580217957496643
    2. ' %' → logprob: -0.8580217957496643
    3. ')' → logprob: -2.1080217361450195
    4. 'length' → logprob: -4.7330217361450195
    5. '           ' → logprob: -5.2330217361450195
    6. '(length' → logprob: -5.9830217361450195
    7. '(chars' → logprob: -5.9830217361450195
    8. ']' → logprob: -6.3580217361450195
    9. ')%' → logprob: -7.1080217361450195
    10. '(count' → logprob: -7.1080217361450195

Token 632: ' cycle' (ID: 15839)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.018480949103832245
    2. 'length' → logprob: -4.0184807777404785
    3. ' chars' → logprob: -8.393481254577637
    4. ' length' → logprob: -10.018481254577637
    5. 'string' → logprob: -10.768481254577637
    6. 'chaine' → logprob: -10.768481254577637
    7. '(chars' → logprob: -12.018481254577637
    8. 'characters' → logprob: -12.518481254577637
    9. '`' → logprob: -13.143481254577637
    10. '```' → logprob: -13.768481254577637

Token 633: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6276876330375671
    2. ')' → logprob: -1.627687692642212
    3. '%' → logprob: -2.377687692642212
    4. ' %' → logprob: -2.752687692642212
    5. 'position' → logprob: -3.127687692642212
    6. 'tokens' → logprob: -4.502687454223633
    7. ']' → logprob: -5.002687454223633
    8. 'token' → logprob: -5.127687454223633
    9. 'index' → logprob: -5.377687454223633
    10. '       ' → logprob: -5.502687454223633

Token 634: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6404039859771729
    2. '           ' → logprob: -1.0154039859771729
    3. ']' → logprob: -3.140403985977173
    4. '%' → logprob: -3.890403985977173
    5. ' %' → logprob: -4.390403747558594
    6. 'result' → logprob: -5.390403747558594
    7. ' +' → logprob: -5.640403747558594
    8. 'tokens' → logprob: -5.640403747558594
    9. '       ' → logprob: -5.890403747558594
    10. '+' → logprob: -6.390403747558594

Token 635: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.5546548962593079
    2. 'position' → logprob: -1.929654836654663
    3. 'result' → logprob: -2.179654836654663
    4. ' pos' → logprob: -2.179654836654663
    5. ' result' → logprob: -3.929654836654663
    6. 'index' → logprob: -4.429655075073242
    7. ' position' → logprob: -5.054655075073242
    8. 'char' → logprob: -5.179655075073242
    9. 'token' → logprob: -5.679655075073242
    10. ' char' → logprob: -6.304655075073242

Token 636: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141665637493134
    2. '=' → logprob: -1.7014166116714478
    3. ' ' → logprob: -13.451416969299316
    4. ')' → logprob: -14.201416969299316
    5. 's' → logprob: -14.826416969299316
    6. '=(' → logprob: -15.576416969299316
    7. ' ' → logprob: -15.701416969299316
    8. ' %' → logprob: -16.201416015625
    9. '%' → logprob: -16.576416015625
    10. ' =(' → logprob: -16.701416015625

Token 637: ' (' (ID: 350)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.3132784366607666
    2. ' (' → logprob: -1.3132784366607666
    3. 'count' → logprob: -12.188278198242188
    4. '   ' → logprob: -12.563278198242188
    5. ' count' → logprob: -13.188278198242188
    6. ' ' → logprob: -13.313278198242188
    7. '[count' → logprob: -13.688278198242188
    8. '(cnt' → logprob: -13.938278198242188
    9. '(code' → logprob: -14.938278198242188
    10. '(c' → logprob: -15.188278198242188

Token 638: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.320199877838604e-07
    2. ' count' → logprob: -15.5
    3. '(count' → logprob: -16.25
    4. '   ' → logprob: -17.25
    5. 'c' → logprob: -19.625
    6. ' ' → logprob: -20.125
    7. '[count' → logprob: -21.5
    8. 'co' → logprob: -22.375
    9. '	count' → logprob: -22.375
    10. '           ' → logprob: -22.375

Token 639: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07890686392784119
    2. '-' → logprob: -2.578906774520874
    3. ')' → logprob: -11.828907012939453
    4. ' ' → logprob: -12.453907012939453
    5. ' %' → logprob: -12.578907012939453
    6. '%' → logprob: -13.703907012939453
    7. '   ' → logprob: -14.328907012939453
    8. '[' → logprob: -15.828907012939453
    9. '1' → logprob: -15.953907012939453
    10. ' ' → logprob: -16.328907012939453

Token 640: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.5000057220459
    4. '<|end|>' → logprob: -18.8750057220459
    5. '```' → logprob: -19.0000057220459
    6. ')' → logprob: -20.6250057220459
    7. '۱' → logprob: -21.2500057220459
    8. '１' → logprob: -21.3750057220459
    9. '  ' → logprob: -21.8750057220459
    10. '[' → logprob: -21.9375057220459

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -19.25
    4. '<|end|>' → logprob: -20.25
    5. ')' → logprob: -20.375
    6. '
' → logprob: -21.25
    7. '۱' → logprob: -21.75
    8. '   ' → logprob: -21.8125
    9. '১' → logprob: -22.5625
    10. '0' → logprob: -22.6875

Token 642: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.3226136767771095e-05
    2. ')%' → logprob: -10.375042915344238
    3. ' )' → logprob: -11.750042915344238
    4. '%' → logprob: -12.750042915344238
    5. ' %' → logprob: -13.750042915344238
    6. ')
' → logprob: -16.875043869018555
    7. ']' → logprob: -17.750043869018555
    8. '%)' → logprob: -18.250043869018555
    9. '）' → logprob: -18.625043869018555
    10. ' ' → logprob: -19.250043869018555

Token 643: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.029751529917120934
    2. '%' → logprob: -3.5297515392303467
    3. ')' → logprob: -14.404751777648926
    4. ' ' → logprob: -15.279751777648926
    5. '
' → logprob: -16.65475082397461
    6. ' %
' → logprob: -17.27975082397461
    7. ' ' → logprob: -17.40475082397461
    8. '```' → logprob: -17.65475082397461
    9. '%d' → logprob: -18.15475082397461
    10. ']' → logprob: -18.15475082397461

Token 644: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0001584850688232109
    2. ' length' → logprob: -8.750158309936523
    3. '(length' → logprob: -18.875158309936523
    4. 'len' → logprob: -19.125158309936523
    5. 'leng' → logprob: -23.750158309936523
    6. '[length' → logprob: -23.875158309936523
    7. ',length' → logprob: -24.625158309936523
    8. '	length' → logprob: -24.625158309936523
    9. 'Length' → logprob: -25.250158309936523
    10. ' ' → logprob: -25.375158309936523

Token 645: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2973977029323578
    2. '           ' → logprob: -2.0473976135253906
    3. ')' → logprob: -2.9223976135253906
    4. '
' → logprob: -3.0473976135253906
    5. '       ' → logprob: -4.297397613525391
    6. ' result' → logprob: -5.047397613525391
    7. ')
' → logprob: -5.547397613525391
    8. '   ' → logprob: -7.422397613525391
    9. '            
' → logprob: -7.547397613525391
    10. '```' → logprob: -7.922397613525391

Token 646: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07577720284461975
    2. '       ' → logprob: -3.200777292251587
    3. 'result' → logprob: -4.075777053833008
    4. '
' → logprob: -4.450777053833008
    5. ')' → logprob: -6.950777053833008
    6. 'token' → logprob: -7.325777053833008
    7. '            
' → logprob: -7.325777053833008
    8. ' result' → logprob: -8.075777053833008
    9. '               ' → logprob: -8.450777053833008
    10. ')
' → logprob: -9.075777053833008

Token 647: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.09268386662006378
    2. '           ' → logprob: -2.842683792114258
    3. '
' → logprob: -4.092683792114258
    4. ' result' → logprob: -5.717683792114258
    5. '       ' → logprob: -6.092683792114258
    6. 'char' → logprob: -6.217683792114258
    7. ')' → logprob: -6.217683792114258
    8. 'token' → logprob: -6.592683792114258
    9. '            
' → logprob: -7.467683792114258
    10. '```' → logprob: -8.217683792114258

Token 648: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009134899592027068
    2. '.' → logprob: -7.000913619995117
    3. 'append' → logprob: -13.625913619995117
    4. '.app' → logprob: -15.250913619995117
    5. '.Append' → logprob: -15.500913619995117
    6. '.extend' → logprob: -16.250913619995117
    7. ' .' → logprob: -16.375913619995117
    8. ').' → logprob: -16.750913619995117
    9. '_append' → logprob: -17.375913619995117
    10. '].' → logprob: -17.750913619995117

Token 649: '(chars' (ID: 168140)
  Prédit: '(chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chars' → logprob: -1.1472419600977446e-06
    2. 'chars' → logprob: -14.125000953674316
    3. '(' → logprob: -15.000000953674316
    4. '(chr' → logprob: -19.125001907348633
    5. '(cols' → logprob: -19.875001907348633
    6. '(char' → logprob: -20.875001907348633
    7. ' chars' → logprob: -21.125001907348633
    8. '(
' → logprob: -21.375001907348633
    9. '(classes' → logprob: -21.500001907348633
    10. '(ch' → logprob: -21.500001907348633

Token 650: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -7.896309739408025e-07
    2. ')[' → logprob: -14.875000953674316
    3. '[' → logprob: -15.250000953674316
    4. ')' → logprob: -16.375
    5. '[position' → logprob: -18.125
    6. '```' → logprob: -18.625
    7. ' [' → logprob: -19.0
    8. '][' → logprob: -19.25
    9. 'pos' → logprob: -19.375
    10. '[
' → logprob: -20.25

Token 651: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0009280181839130819
    2. ']' → logprob: -7.625927925109863
    3. ')' → logprob: -7.750927925109863
    4. '])
' → logprob: -12.125927925109863
    5. ')]' → logprob: -13.500927925109863
    6. ''])' → logprob: -13.875927925109863
    7. '))' → logprob: -14.125927925109863
    8. ')])' → logprob: -14.875927925109863
    9. ' ])' → logprob: -15.125927925109863
    10. '])

' → logprob: -16.62592887878418

Token 652: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0909537076950073
    2. 'return' → logprob: -1.0909537076950073
    3. '\n' → logprob: -2.340953826904297
    4. ' return' → logprob: -2.465953826904297
    5. '       ' → logprob: -2.590953826904297
    6. '
' → logprob: -3.590953826904297
    7. '    
' → logprob: -4.465953826904297
    8. '```' → logprob: -4.590953826904297
    9. '	return' → logprob: -4.715953826904297
    10. '  
' → logprob: -5.465953826904297

Token 653: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2580040991306305
    2. '   ' → logprob: -1.758004069328308
    3. ' return' → logprob: -3.0080041885375977
    4. '
' → logprob: -6.008004188537598
    5. '       ' → logprob: -6.133004188537598
    6. '    
' → logprob: -7.508004188537598
    7. '	return' → logprob: -8.133004188537598
    8. '```' → logprob: -9.758004188537598
    9. ':return' → logprob: -10.508004188537598
    10. '        
' → logprob: -11.133004188537598

Token 654: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.005462136119604111
    2. ' ''.' → logprob: -5.255462169647217
    3. '"' → logprob: -8.505461692810059
    4. ''' → logprob: -11.255461692810059
    5. ' "".' → logprob: -11.505461692810059
    6. '''' → logprob: -12.755461692810059
    7. ''',' → logprob: -17.755462646484375
    8. ' '' → logprob: -18.130462646484375
    9. ' ' → logprob: -18.255462646484375
    10. 'result' → logprob: -18.755462646484375

Token 655: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0009648191626183689
    2. '''.' → logprob: -7.000964641571045
    3. ' join' → logprob: -10.625965118408203
    4. ' ''.' → logprob: -11.750965118408203
    5. '```' → logprob: -11.750965118408203
    6. ''' → logprob: -12.375965118408203
    7. '"' → logprob: -12.750965118408203
    8. '('' → logprob: -13.375965118408203
    9. '   ' → logprob: -14.250965118408203
    10. '``' → logprob: -14.250965118408203

Token 656: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0007101670489646494
    2. 'result' → logprob: -7.2507100105285645
    3. '(' → logprob: -15.875710487365723
    4. ' result' → logprob: -16.000709533691406
    5. '[result' → logprob: -18.000709533691406
    6. ',result' → logprob: -19.125709533691406
    7. '=result' → logprob: -19.250709533691406
    8. '```' → logprob: -19.250709533691406
    9. '(results' → logprob: -19.625709533691406
    10. '(res' → logprob: -20.125709533691406

Token 657: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001328095211647451
    2. '<|end|>' → logprob: -6.751327991485596
    3. '')' → logprob: -10.251328468322754
    4. '[' → logprob: -10.376328468322754
    5. '<|end|>' → logprob: -10.626328468322754
    6. ']' → logprob: -11.501328468322754
    7. '```' → logprob: -11.626328468322754
    8. '[i' → logprob: -12.001328468322754
    9. '   ' → logprob: -12.126328468322754
    10. ')
' → logprob: -12.126328468322754

Token 658: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 659: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1374313235282898
    2. ' re' → logprob: -2.1374313831329346
    3. 'sys' → logprob: -5.1374311447143555
    4. 're' → logprob: -5.3874311447143555
    5. ' os' → logprob: -14.012431144714355
    6. ' time' → logprob: -15.137431144714355
    7. ' string' → logprob: -16.012432098388672
    8. ' itertools' → logprob: -16.262432098388672
    9. ' json' → logprob: -16.387432098388672
    10. '=sys' → logprob: -16.512432098388672

Token 660: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04360798001289368
    2. ' for' → logprob: -3.5436079502105713
    3. '
' → logprob: -4.41860818862915
    4. '```' → logprob: -6.66860818862915
    5. '<|end|>' → logprob: -9.293607711791992
    6. 'def' → logprob: -9.418607711791992
    7. '[' → logprob: -10.043607711791992
    8. ' line' → logprob: -10.043607711791992
    9. '[line' → logprob: -10.168607711791992
    10. ' 
' → logprob: -10.418607711791992

Token 661: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.200166469876422e-06
    2. 'line' → logprob: -12.750004768371582
    3. ' for' → logprob: -13.250004768371582
    4. 'def' → logprob: -15.125004768371582
    5. '```' → logprob: -16.2500057220459
    6. 'input' → logprob: -18.0000057220459
    7. '
' → logprob: -18.1250057220459
    8. 'text' → logprob: -20.1250057220459
    9. 'if' → logprob: -20.2500057220459
    10. 'lines' → logprob: -20.6250057220459

Token 662: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -5.5577775128767826e-06
    2. 'line' → logprob: -12.250005722045898
    3. '	line' → logprob: -15.125005722045898
    4. ' ' → logprob: -15.375005722045898
    5. ' ' → logprob: -15.500005722045898
    6. ' ligne' → logprob: -16.6250057220459
    7. '=line' → logprob: -19.2500057220459
    8. '_line' → logprob: -19.3750057220459
    9. ' linha' → logprob: -19.5000057220459
    10. ' l' → logprob: -19.7500057220459

Token 663: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004113662056624889
    2. 'in' → logprob: -5.504113674163818
    3. ' ' → logprob: -10.62911319732666
    4. ' ' → logprob: -12.62911319732666
    5. 'import' → logprob: -13.12911319732666
    6. 's' → logprob: -13.37911319732666
    7. '_' → logprob: -13.50411319732666
    8. 'line' → logprob: -14.50411319732666
    9. '	in' → logprob: -14.50411319732666
    10. '  ' → logprob: -15.12911319732666

Token 664: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011047935113310814
    2. ' sys' → logprob: -4.511047840118408
    3. '=sys' → logprob: -16.13604736328125
    4. '(sys' → logprob: -16.76104736328125
    5. '	sys' → logprob: -17.13604736328125
    6. '```' → logprob: -18.76104736328125
    7. 'input' → logprob: -19.51104736328125
    8. 'import' → logprob: -19.88604736328125
    9. 'stdin' → logprob: -20.26104736328125
    10. 'iter' → logprob: -20.38604736328125

Token 665: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0010454319417476654
    2. 'stdin' → logprob: -6.876045227050781
    3. '(stdin' → logprob: -12.501045227050781
    4. '.readline' → logprob: -13.251045227050781
    5. '.argv' → logprob: -13.376045227050781
    6. 'import' → logprob: -13.501045227050781
    7. '.stdout' → logprob: -13.501045227050781
    8. '.' → logprob: -13.751045227050781
    9. '.std' → logprob: -14.126045227050781
    10. '```' → logprob: -14.626045227050781

Token 666: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7136517763137817
    2. '.readline' → logprob: -0.7136517763137817
    3. ':
' → logprob: -4.588651657104492
    4. '.readlines' → logprob: -5.088651657104492
    5. ' in' → logprob: -6.338651657104492
    6. '.' → logprob: -6.463651657104492
    7. '```' → logprob: -8.588651657104492
    8. '<|end|>' → logprob: -9.838651657104492
    9. 'read' → logprob: -10.213651657104492
    10. 'in' → logprob: -10.713651657104492

Token 667: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0043130917474627495
    2. ' line' → logprob: -5.504312992095947
    3. 'line' → logprob: -8.629313468933105
    4. '	line' → logprob: -11.129313468933105
    5. '    
' → logprob: -11.754313468933105
    6. '(line' → logprob: -12.379313468933105
    7. 'decoded' → logprob: -12.504313468933105
    8. '   ' → logprob: -12.504313468933105
    9. '=line' → logprob: -12.504313468933105
    10. ' decoded' → logprob: -12.629313468933105

Token 668: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.002574590500444174
    2. 'decoded' → logprob: -6.502574443817139
    3. ' line' → logprob: -7.252574443817139
    4. '   ' → logprob: -8.002574920654297
    5. 'text' → logprob: -10.877574920654297
    6. 'print' → logprob: -12.377574920654297
    7. 'ligne' → logprob: -13.127574920654297
    8. ' decoded' → logprob: -13.377574920654297
    9. 'output' → logprob: -14.002574920654297
    10. '	line' → logprob: -14.627574920654297

Token 669: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1064172238111496
    2. '=line' → logprob: -2.606417179107666
    3. ' =' → logprob: -3.606417179107666
    4. 'rstrip' → logprob: -13.731417655944824
    5. '=
' → logprob: -14.481417655944824
    6. 'line' → logprob: -15.106417655944824
    7. '_strip' → logprob: -15.231417655944824
    8. 'strip' → logprob: -15.481417655944824
    9. '.strip' → logprob: -15.731417655944824
    10. '.rstrip' → logprob: -16.106416702270508

Token 670: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.339278580620885e-06
    2. ' line' → logprob: -13.000001907348633
    3. '=line' → logprob: -19.625001907348633
    4. '#line' → logprob: -21.375001907348633
    5. 'ligne' → logprob: -22.250001907348633
    6. '	line' → logprob: -22.375001907348633
    7. '(line' → logprob: -23.250001907348633
    8. 'lin' → logprob: -23.500001907348633
    9. '[line' → logprob: -23.750001907348633
    10. 'lines' → logprob: -25.000001907348633

Token 671: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.10090534389019012
    2. '.rstrip' → logprob: -2.350905418395996
    3. 'strip' → logprob: -7.475905418395996
    4. 'rstrip' → logprob: -8.975905418395996
    5. '_strip' → logprob: -12.725905418395996
    6. '[:-' → logprob: -14.475905418395996
    7. '.readline' → logprob: -14.475905418395996
    8. '(strip' → logprob: -14.725905418395996
    9. '.replace' → logprob: -15.350905418395996
    10. ' strip' → logprob: -15.475905418395996

Token 672: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009947795420885086
    2. '()
' → logprob: -4.634947776794434
    3. '   ' → logprob: -9.759947776794434
    4. '()\' → logprob: -10.509947776794434
    5. '())' → logprob: -11.009947776794434
    6. '():
' → logprob: -11.509947776794434
    7. '<|end|>' → logprob: -11.509947776794434
    8. '()`' → logprob: -11.634947776794434
    9. ')' → logprob: -11.759947776794434
    10. '()

' → logprob: -12.009947776794434

Token 673: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7561957240104675
    2. 'print' → logprob: -1.2561957836151123
    3. 'decoded' → logprob: -2.0061957836151123
    4. 'if' → logprob: -3.0061957836151123
    5. ' if' → logprob: -3.1311957836151123
    6. ' decoded' → logprob: -4.506195545196533
    7. ' print' → logprob: -5.381195545196533
    8. 'result' → logprob: -6.631195545196533
    9. 'text' → logprob: -7.631195545196533
    10. 'output' → logprob: -8.631196022033691

Token 674: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.621285080909729
    2. 'if' (adapté à ' if') → logprob: -0.871285080909729
    3. 'decoded' → logprob: -3.1212849617004395
    4. 'text' → logprob: -8.996285438537598
    5. 'output' → logprob: -9.496285438537598
    6. ' if' → logprob: -11.371285438537598
    7. '   ' → logprob: -11.621285438537598
    8. 'result' → logprob: -11.871285438537598
    9. ' print' → logprob: -13.121285438537598
    10. ' decoded' → logprob: -13.371285438537598

Token 675: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2784907817840576
    2. 'not' → logprob: -1.5284907817840576
    3. 'line' → logprob: -4.028491020202637
    4. ' line' → logprob: -4.778491020202637
    5. 'len' → logprob: -14.153491020202637
    6. '   ' → logprob: -14.903491020202637
    7. ' ' → logprob: -15.153491020202637
    8. '```' → logprob: -15.278491020202637
    9. ' len' → logprob: -15.903491020202637
    10. '#line' → logprob: -16.02849006652832

Token 676: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00861456897109747
    2. ' line' → logprob: -4.758614540100098
    3. ' ' → logprob: -18.133615493774414
    4. '	line' → logprob: -19.383615493774414
    5. 'ligne' → logprob: -20.133615493774414
    6. '#line' → logprob: -20.633615493774414
    7. '   ' → logprob: -21.133615493774414
    8. 'len' → logprob: -21.258615493774414
    9. '(line' → logprob: -21.258615493774414
    10. ' ligne' → logprob: -21.383615493774414

Token 677: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08952288329601288
    2. ':
' → logprob: -2.4645228385925293
    3. ':return' → logprob: -8.464523315429688
    4. '   ' → logprob: -8.589523315429688
    5. ' or' → logprob: -9.339523315429688
    6. '==' → logprob: -10.714523315429688
    7. 'continue' → logprob: -10.839523315429688
    8. '):' → logprob: -11.839523315429688
    9. '():
' → logprob: -11.839523315429688
    10. '):
' → logprob: -11.839523315429688

Token 678: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003844255581498146
    2. '   ' → logprob: -5.628844261169434
    3. ' continue' → logprob: -9.128844261169434
    4. ':' → logprob: -9.878844261169434
    5. 'continue' → logprob: -10.003844261169434
    6. '```' → logprob: -11.128844261169434
    7. ':
' → logprob: -11.378844261169434
    8. '	continue' → logprob: -12.628844261169434
    9. ' continues' → logprob: -12.878844261169434
    10. ',' → logprob: -13.503844261169434

Token 679: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.01604258082807064
    2. ' break' → logprob: -4.266042709350586
    3. '   ' → logprob: -6.766042709350586
    4. 'continue' (adapté à ' continue') → logprob: -8.016042709350586
    5. '       ' → logprob: -8.141042709350586
    6. '	break' → logprob: -9.391042709350586
    7. '```' → logprob: -11.016042709350586
    8. ' continue' → logprob: -12.891042709350586
    9. '_break' → logprob: -14.016042709350586
    10. '	continue' → logprob: -16.016042709350586

Token 680: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002204855205491185
    2. 'print' → logprob: -6.377204895019531
    3. 'decoded' → logprob: -8.377204895019531
    4. ' print' → logprob: -9.002204895019531
    5. ' decoded' → logprob: -10.002204895019531
    6. '    
' → logprob: -10.002204895019531
    7. '```' → logprob: -10.502204895019531
    8. 'result' → logprob: -12.002204895019531
    9. 'output' → logprob: -12.627204895019531
    10. 'for' → logprob: -12.627204895019531

Token 681: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14617305994033813
    2. 'print' → logprob: -2.0211730003356934
    3. 'decoded' → logprob: -5.896173000335693
    4. ' print' → logprob: -8.021173477172852
    5. 'output' → logprob: -8.771173477172852
    6. 'result' → logprob: -9.021173477172852
    7. ' decoded' → logprob: -9.271173477172852
    8. '    
' → logprob: -11.021173477172852
    9. 'response' → logprob: -12.896173477172852
    10. 'for' → logprob: -12.896173477172852

Token 682: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004533369559794664
    2. ' print' → logprob: -6.004533290863037
    3. 'decoded' → logprob: -6.629533290863037
    4. '   ' → logprob: -7.629533290863037
    5. 'output' → logprob: -9.004533767700195
    6. 'text' → logprob: -9.254533767700195
    7. ' decoded' → logprob: -10.629533767700195
    8. 'result' → logprob: -12.879533767700195
    9. ' output' → logprob: -13.254533767700195
    10. 'texte' → logprob: -14.129533767700195

Token 683: ' Ligne' (ID: 127787)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03164757043123245
    2. 'decoded' → logprob: -3.7816476821899414
    3. 'output' → logprob: -5.656647682189941
    4. ' print' → logprob: -5.906647682189941
    5. 'text' → logprob: -6.531647682189941
    6. ' decoded' → logprob: -8.281647682189941
    7. '   ' → logprob: -8.531647682189941
    8. 'result' → logprob: -8.781647682189941
    9. ' output' → logprob: -9.781647682189941
    10. 'texte' → logprob: -10.656647682189941

Token 684: ' déc' (ID: 8498)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.4204033315181732
    2. '_dec' → logprob: -1.5454033613204956
    3. ' =' → logprob: -2.920403242111206
    4. '_decode' → logprob: -4.045403480529785
    5. '_text' → logprob: -4.545403480529785
    6. 'dec' → logprob: -5.295403480529785
    7. '=' → logprob: -5.420403480529785
    8. 'decode' → logprob: -5.420403480529785
    9. '_chars' → logprob: -5.420403480529785
    10. '   ' → logprob: -5.545403480529785

Token 685: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.58363938331604
    2. 'ode' → logprob: -0.83363938331604
    3. 'oded' → logprob: -5.333639144897461
    4. 'oder' → logprob: -6.958639144897461
    5. 'om' → logprob: -7.333639144897461
    6. '#' → logprob: -8.208639144897461
    7. 'omp' → logprob: -8.708639144897461
    8. 'odable' → logprob: -9.583639144897461
    9. '   ' → logprob: -9.708639144897461
    10. 'onte' → logprob: -9.833639144897461

Token 686: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.22850492596626282
    2. 'e' → logprob: -2.3535048961639404
    3. 'ed' → logprob: -3.2285048961639404
    4. '   ' → logprob: -3.6035048961639404
    5. 'é' → logprob: -3.8535048961639404
    6. 'if' → logprob: -4.9785051345825195
    7. '=' → logprob: -5.8535051345825195
    8. ' =' → logprob: -5.9785051345825195
    9. 'ifiée' → logprob: -5.9785051345825195
    10. 'age' → logprob: -6.1035051345825195

Token 687: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7875582575798035
    2. ' =' → logprob: -1.0375583171844482
    3. 'decoded' → logprob: -1.7875583171844482
    4. ' decoded' → logprob: -4.037558078765869
    5. '=' → logprob: -5.537558078765869
    6. '(decoded' → logprob: -7.412558078765869
    7. 'print' → logprob: -8.037558555603027
    8. ',' → logprob: -8.662558555603027
    9. 'decode' → logprob: -8.912558555603027
    10. 'result' → logprob: -8.912558555603027

Token 688: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2323175072669983
    2. 'decoded' → logprob: -1.6073174476623535
    3. 'print' → logprob: -5.4823174476623535
    4. ' decoded' → logprob: -6.1073174476623535
    5. ' =' → logprob: -8.732317924499512
    6. '(decoded' → logprob: -9.732317924499512
    7. '```' → logprob: -9.732317924499512
    8. 'result' → logprob: -9.982317924499512
    9. '=' → logprob: -10.107317924499512
    10. ' print' → logprob: -10.482317924499512

Token 689: ' decoded' (ID: 58891)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decoded' (adapté à ' decoded') → logprob: -0.06375522166490555
    2. 'print' → logprob: -2.8137552738189697
    3. 'output' → logprob: -7.313755035400391
    4. ' decoded' → logprob: -7.563755035400391
    5. 'text' → logprob: -7.563755035400391
    6. 'texte' → logprob: -10.31375503540039
    7. ' print' → logprob: -10.43875503540039
    8. '   ' → logprob: -11.56375503540039
    9. 'message' → logprob: -12.56375503540039
    10. 'result' → logprob: -13.06375503540039

Token 690: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.4985828101634979
    2. ' =' → logprob: -0.9985828399658203
    3. '=' → logprob: -4.12358283996582
    4. '_text' → logprob: -4.99858283996582
    5. '_' → logprob: -7.12358283996582
    6. '_output' → logprob: -8.49858283996582
    7. '=line' → logprob: -8.49858283996582
    8. '_message' → logprob: -11.37358283996582
    9. '_str' → logprob: -11.62358283996582
    10. '_l' → logprob: -11.87358283996582

Token 691: ' decode' (ID: 32043)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -7.493430894101039e-05
    2. ' decode' → logprob: -9.500075340270996
    3. 'decoded' → logprob: -19.75007438659668
    4. '.decode' → logprob: -22.50007438659668
    5. 'decoder' → logprob: -22.75007438659668
    6. 'dec' → logprob: -23.75007438659668
    7. 'encode' → logprob: -24.12507438659668
    8. '_decode' → logprob: -24.62507438659668
    9. 'decrypt' → logprob: -25.00007438659668
    10. 'debug' → logprob: -26.87507438659668

Token 692: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -4.320199877838604e-07
    2. 'line' → logprob: -14.875
    3. '_LINE' → logprob: -17.5
    4. '_' → logprob: -17.75
    5. '(line' → logprob: -18.5
    6. '[line' → logprob: -19.0
    7. ' line' → logprob: -19.375
    8. 'Line' → logprob: -19.75
    9. 'decoded' → logprob: -19.75
    10. '_lines' → logprob: -19.875

Token 693: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.21330231428146362
    2. '(decoded' → logprob: -1.7133023738861084
    3. 'decoded' → logprob: -4.463302135467529
    4. 'line' → logprob: -8.713302612304688
    5. '[line' → logprob: -9.713302612304688
    6. '(' → logprob: -10.213302612304688
    7. '_line' → logprob: -11.588302612304688
    8. 'decode' → logprob: -11.838302612304688
    9. ' decoded' → logprob: -12.838302612304688
    10. '(
' → logprob: -12.963302612304688

Token 694: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10142765939235687
    2. ')
' → logprob: -2.3514275550842285
    3. '   ' → logprob: -6.7264275550842285
    4. ')
' → logprob: -10.851428031921387
    5. ' )' → logprob: -14.476428031921387
    6. ' ' → logprob: -15.226428031921387
    7. ' )
' → logprob: -15.351428031921387
    8. ')`
' → logprob: -15.351428031921387
    9. ')

' → logprob: -15.601428031921387
    10. '[' → logprob: -16.22642707824707

Token 695: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1604386866092682
    2. 'print' → logprob: -1.9104386568069458
    3. ' print' → logprob: -8.535438537597656
    4. '```' → logprob: -11.160438537597656
    5. '
' → logprob: -12.785438537597656
    6. '	print' → logprob: -14.035438537597656
    7. '    
' → logprob: -16.910438537597656
    8. '       ' → logprob: -17.035438537597656
    9. '<|end|>' → logprob: -17.160438537597656
    10. '.print' → logprob: -17.285438537597656

Token 696: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019301822176203132
    2. '   ' → logprob: -6.251930236816406
    3. ' print' → logprob: -13.501930236816406
    4. '```' → logprob: -16.251930236816406
    5. '	print' → logprob: -18.751930236816406
    6. '
' → logprob: -19.626930236816406
    7. '#print' → logprob: -20.876930236816406
    8. '(print' → logprob: -22.376930236816406
    9. '_print' → logprob: -22.501930236816406
    10. '.print' → logprob: -22.501930236816406

Token 697: '(decoded' (ID: 189285)
  Prédit: '(decoded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(decoded' → logprob: -3.8889261304575484e-06
    2. 'decoded' → logprob: -12.500003814697266
    3. '(' → logprob: -16.250003814697266
    4. '(dec' → logprob: -18.250003814697266
    5. '(parsed' → logprob: -19.500003814697266
    6. '(encoded' → logprob: -19.625003814697266
    7. ' decoded' → logprob: -19.750003814697266
    8. ' (' → logprob: -21.125003814697266
    9. '(decimal' → logprob: -21.375003814697266
    10. '(f' → logprob: -21.500003814697266

Token 698: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '')' → logprob: -15.500000953674316
    3. '())' → logprob: -15.625000953674316
    4. ' )' → logprob: -16.0
    5. '()' → logprob: -16.375
    6. '))' → logprob: -16.625
    7. ')
' → logprob: -16.75
    8. ')`' → logprob: -17.25
    9. '")' → logprob: -17.875
    10. '   ' → logprob: -18.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 696
Tokens correctement prédits (1ère position, stricte): 228
Tokens correctement prédits (1ère position, avec adaptation): 255
Tokens correctement prédits (top 10): 479
Précision stricte (1ère position): 32.76%
Précision adaptée (1ère position): 36.64%
Précision (top 10): 68.82%
================================================================================
