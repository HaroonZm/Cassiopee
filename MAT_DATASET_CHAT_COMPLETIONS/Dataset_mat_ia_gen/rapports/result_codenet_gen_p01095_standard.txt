================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def prime_factors(n):
    factors = []
    for p in [2,3,5]:
        count = 0
        while n % p == 0:
            n //= p
            count += 1
        if count:
            factors.append((p,count))
    f = 7
    inc = [4,2,4,2,4,6,2,6]
    i = 0
    while f*f <= n:
        count = 0
        while n % f == 0:
            n //= f
            count += 1
        if count:
            factors.append((f,count))
        f += inc[i]
        i = (i+1)%8
    if n > 1:
        factors.append((n,1))
    return factors

def divisor_count(n):
    res = 1
    for _, c in prime_factors(n):
        res *= (c+1)
    return res

for line in sys.stdin:
    if line.strip()=='': continue
    m,n= map(int,line.split())
    if m==0 and n==0:
        break
    # find largest x >= m s.t divisor_count(x) <= n
    # upper bound for x can be m+n*log(m) for search
    # but here we do binary search between m and a large number
    left, right = m, 10**9
    ans = m
    while left <= right:
        mid = (left+right)//2
        if divisor_count(mid) <= n:
            ans = mid
            left = mid+1
        else:
            right = mid-1
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3441300094127655
    2. '.' → logprob: -1.594130039215088
    3. '<|end|>' → logprob: -2.969130039215088
    4. '\' → logprob: -4.469130039215088
    5. 'import' → logprob: -5.094130039215088
    6. 'newline' → logprob: -5.094130039215088
    7. '' → logprob: -5.844130039215088
    8. '<|end|>' → logprob: -5.969130039215088
    9. '\r' → logprob: -6.094130039215088
    10. '
' → logprob: -6.344130039215088

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10131704062223434
    2. '\' → logprob: -3.6013169288635254
    3. '\n' → logprob: -3.9763169288635254
    4. 'import' → logprob: -4.351316928863525
    5. '<|end|>' → logprob: -4.601316928863525
    6. '```' → logprob: -4.726316928863525
    7. '
' → logprob: -4.976316928863525
    8. '

' → logprob: -5.476316928863525
    9. '<|end|>' → logprob: -6.601316928863525
    10. '' → logprob: -6.601316928863525

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1420094966888428
    2. '\' → logprob: -1.3920094966888428
    3. 'import' → logprob: -2.1420094966888428
    4. '\n' → logprob: -2.1420094966888428
    5. '```' → logprob: -2.3920094966888428
    6. 'def' → logprob: -3.2670094966888428
    7. '
' → logprob: -4.142009735107422
    8. ',' → logprob: -4.642009735107422
    9. '`' → logprob: -4.892009735107422
    10. '*' → logprob: -4.892009735107422

Token 7: ' prime' (ID: 9197)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003968097735196352
    2. ' calculate' → logprob: -5.878968238830566
    3. ' space' → logprob: -7.628968238830566
    4. '_' → logprob: -8.253968238830566
    5. ' factorial' → logprob: -9.003968238830566
    6. ' compute' → logprob: -9.628968238830566
    7. ' add' → logprob: -10.753968238830566
    8. ' math' → logprob: -10.753968238830566
    9. ' ```' → logprob: -11.003968238830566
    10. ' my' → logprob: -11.003968238830566

Token 8: '_f' (ID: 1337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1138649582862854
    2. '(' → logprob: -2.9888648986816406
    3. 's' → logprob: -2.9888648986816406
    4. '_s' → logprob: -5.613864898681641
    5. '_(' → logprob: -6.488864898681641
    6. '(_' → logprob: -7.238864898681641
    7. '_factor' → logprob: -8.23886489868164
    8. 'r' → logprob: -8.48886489868164
    9. '```' → logprob: -8.98886489868164
    10. '(n' → logprob: -9.48886489868164

Token 9: 'actors' (ID: 37126)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.18040622770786285
    2. 'actors' → logprob: -1.9304062128067017
    3. '_' → logprob: -4.680406093597412
    4. 'inder' → logprob: -5.305406093597412
    5. 'i' → logprob: -6.180406093597412
    6. '```' → logprob: -6.680406093597412
    7. 'acto' → logprob: -7.555406093597412
    8. '_actor' → logprob: -7.805406093597412
    9. 'unction' → logprob: -8.05540657043457
    10. 'a' → logprob: -8.18040657043457

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00030197695014066994
    2. ' (' → logprob: -8.6253023147583
    3. '(n' → logprob: -10.1253023147583
    4. '_' → logprob: -10.8753023147583
    5. '```' → logprob: -11.6253023147583
    6. '("("' → logprob: -11.7503023147583
    7. '(x' → logprob: -12.0003023147583
    8. '('' → logprob: -12.6253023147583
    9. '(user' → logprob: -12.6253023147583
    10. ':' → logprob: -12.7503023147583

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006847030483186245
    2. ')' → logprob: -5.006846904754639
    3. ' ):' → logprob: -9.506847381591797
    4. ':' → logprob: -10.006847381591797
    5. '(' → logprob: -12.506847381591797
    6. '):
' → logprob: -13.381847381591797
    7. '[' → logprob: -13.756847381591797
    8. ',' → logprob: -13.756847381591797
    9. '(n' → logprob: -14.131847381591797
    10. ' )' → logprob: -14.506847381591797

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20828743278980255
    2. '   ' → logprob: -2.583287477493286
    3. ' :' → logprob: -2.833287477493286
    4. ' ' → logprob: -4.083287239074707
    5. '```' → logprob: -4.333287239074707
    6. '    ' → logprob: -5.333287239074707
    7. '):' → logprob: -5.583287239074707
    8. '[' → logprob: -6.208287239074707
    9. ' 
' → logprob: -6.458287239074707
    10. ':
' → logprob: -6.583287239074707

Token 13: ' factors' (ID: 11652)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4176301062107086
    2. '    ' → logprob: -2.167630195617676
    3. '   ' → logprob: -2.292630195617676
    4. ''' → logprob: -3.792630195617676
    5. ':' → logprob: -3.917630195617676
    6. '```' → logprob: -3.917630195617676
    7. ' :' → logprob: -4.542630195617676
    8. ' []' → logprob: -4.792630195617676
    9. '"' → logprob: -5.042630195617676
    10. ' 
' → logprob: -5.542630195617676

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07023683935403824
    2. '=' → logprob: -2.820236921310425
    3. ' ' → logprob: -5.320236682891846
    4. '.append' → logprob: -6.695236682891846
    5. '.' → logprob: -7.195236682891846
    6. '[:]' → logprob: -8.320237159729004
    7. '   ' → logprob: -8.445237159729004
    8. '_' → logprob: -8.695237159729004
    9. ')' → logprob: -8.820237159729004
    10. '=[]' → logprob: -9.070237159729004

Token 15: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.023259572684764862
    2. '[]' → logprob: -3.7732596397399902
    3. ' ' → logprob: -11.398259162902832
    4. ' set' → logprob: -14.148259162902832
    5. '[' → logprob: -14.273259162902832
    6. ' []
' → logprob: -14.523259162902832
    7. ' [' → logprob: -14.648259162902832
    8. ' {}' → logprob: -15.148259162902832
    9. 'set' → logprob: -16.27326011657715
    10. '{}' → logprob: -16.64826011657715

Token 16: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11721950769424438
    2. ' for' → logprob: -3.3672194480895996
    3. ' 
' → logprob: -3.4922194480895996
    4. '   ' → logprob: -3.9922194480895996
    5. 'for' → logprob: -4.9922194480896
    6. '    ' → logprob: -5.1172194480896
    7. '    
' → logprob: -5.7422194480896
    8. ' if' → logprob: -6.3672194480896
    9. ' i' → logprob: -6.6172194480896
    10. 'i' → logprob: -6.7422194480896

Token 17: ' for' (ID: 395)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3192570209503174
    2. ' for' → logprob: -2.1942570209503174
    3. '   ' → logprob: -2.5692570209503174
    4. '    ' → logprob: -3.9442570209503174
    5. 'while' → logprob: -4.194256782531738
    6. ' i' → logprob: -4.194256782531738
    7. ' ' → logprob: -4.194256782531738
    8. 'for' (adapté à ' for') → logprob: -4.944256782531738
    9. '```' → logprob: -5.319256782531738
    10. '    
' → logprob: -5.944256782531738

Token 18: ' p' (ID: 275)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.253014475107193
    2. ' ' → logprob: -1.5030144453048706
    3. 'i' → logprob: -6.87801456451416
    4. ' p' → logprob: -11.75301456451416
    5. ' range' → logprob: -11.75301456451416
    6. ' ```' → logprob: -11.75301456451416
    7. '  ' → logprob: -12.25301456451416
    8. ' _' → logprob: -12.37801456451416
    9. '```' → logprob: -12.37801456451416
    10. ' factor' → logprob: -12.87801456451416

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008026995696127415
    2. ' ' → logprob: -4.883027076721191
    3. 'in' → logprob: -8.008027076721191
    4. 'range' → logprob: -10.758027076721191
    5. ' p' → logprob: -11.008027076721191
    6. 'r' → logprob: -11.258027076721191
    7. '   ' → logprob: -11.633027076721191
    8. ' i' → logprob: -11.883027076721191
    9. '  ' → logprob: -12.258027076721191
    10. 'i' → logprob: -12.508027076721191

Token 20: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014166564680635929
    2. 'range' → logprob: -4.264166355133057
    3. '	range' → logprob: -13.764166831970215
    4. '(range' → logprob: -14.139166831970215
    5. ' ' → logprob: -14.639166831970215
    6. '[' → logprob: -15.139166831970215
    7. ' xrange' → logprob: -15.764166831970215
    8. '2' → logprob: -16.6391658782959
    9. 'Range' → logprob: -16.7641658782959
    10. '.range' → logprob: -16.8891658782959

Token 21: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009312293259426951
    2. ' ' → logprob: -7.000931262969971
    3. 'i' → logprob: -11.625930786132812
    4. '   ' → logprob: -11.875930786132812
    5. 'x' → logprob: -13.625930786132812
    6. ' i' → logprob: -13.625930786132812
    7. 'range' → logprob: -15.250930786132812
    8. '     ' → logprob: -15.375930786132812
    9. '  ' → logprob: -15.625930786132812
    10. '       ' → logprob: -15.875930786132812

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004638030659407377
    2. ' ,' → logprob: -5.379638195037842
    3. ',
' → logprob: -11.754637718200684
    4. ',p' → logprob: -12.379637718200684
    5. ' ' → logprob: -13.004637718200684
    6. ']' → logprob: -13.129637718200684
    7. ' ]' → logprob: -15.129637718200684
    8. '2' → logprob: -15.379637718200684
    9. ',...' → logprob: -15.379637718200684
    10. ' ,
' → logprob: -15.504637718200684

Token 23: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3868970274925232
    2. ' ' → logprob: -1.136897087097168
    3. ' ]' → logprob: -11.761897087097168
    4. ']' → logprob: -12.261897087097168
    5. ' ' → logprob: -12.636897087097168
    6. '   ' → logprob: -13.011897087097168
    7. '    ' → logprob: -13.261897087097168
    8. ' 
' → logprob: -13.386897087097168
    9. '```' → logprob: -13.886897087097168
    10. '  ' → logprob: -13.886897087097168

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0067836930975317955
    2. ' ,' → logprob: -5.006783485412598
    3. ' ' → logprob: -10.381783485412598
    4. ']' → logprob: -11.256783485412598
    5. ' ]' → logprob: -11.881783485412598
    6. '2' → logprob: -12.881783485412598
    7. '4' → logprob: -13.131783485412598
    8. ',,' → logprob: -13.131783485412598
    9. '5' → logprob: -13.256783485412598
    10. ',p' → logprob: -13.381783485412598

Token 25: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.054886117577552795
    2. ' ' → logprob: -2.9298861026763916
    3. '4' → logprob: -13.554885864257812
    4. ']' → logprob: -14.304885864257812
    5. ' ]' → logprob: -14.929885864257812
    6. '```' → logprob: -15.054885864257812
    7. '  ' → logprob: -15.179885864257812
    8. '2' → logprob: -15.679885864257812
    9. ' 
' → logprob: -16.242385864257812
    10. '   ' → logprob: -16.367385864257812

Token 26: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001441303757019341
    2. ' ,' → logprob: -6.876441478729248
    3. ']:' → logprob: -8.00144100189209
    4. ' ]' → logprob: -10.37644100189209
    5. ']' → logprob: -11.00144100189209
    6. ' ' → logprob: -12.25144100189209
    7. ',p' → logprob: -12.50144100189209
    8. ',...' → logprob: -12.62644100189209
    9. '   ' → logprob: -12.75144100189209
    10. ':' → logprob: -14.00144100189209

Token 27: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06438002735376358
    2. ' :' → logprob: -3.564379930496216
    3. '   ' → logprob: -4.064380168914795
    4. '    ' → logprob: -4.689380168914795
    5. ' if' → logprob: -5.689380168914795
    6. ',' → logprob: -6.064380168914795
    7. '       ' → logprob: -7.189380168914795
    8. ':
' → logprob: -8.189379692077637
    9. 'if' → logprob: -8.189379692077637
    10. ' ,' → logprob: -8.939379692077637

Token 28: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7613815069198608
    2. ' :' → logprob: -1.3863815069198608
    3. '    ' → logprob: -1.6363815069198608
    4. ':' → logprob: -3.3863816261291504
    5. ' if' → logprob: -3.7613816261291504
    6. ' while' → logprob: -4.26138162612915
    7. 'if' → logprob: -5.01138162612915
    8. '   ' → logprob: -6.13638162612915
    9. ' :
' → logprob: -6.13638162612915
    10. '     
' → logprob: -6.51138162612915

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04414237663149834
    2. '=' → logprob: -3.669142484664917
    3. ' ' → logprob: -4.669142246246338
    4. ' +=' → logprob: -4.919142246246338
    5. ')' → logprob: -8.669142723083496
    6. '  ' → logprob: -8.669142723083496
    7. ' >' → logprob: -8.919142723083496
    8. '   ' → logprob: -9.044142723083496
    9. ',' → logprob: -9.669142723083496
    10. 's' → logprob: -9.794142723083496

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12737372517585754
    2. '0' → logprob: -2.127373695373535
    3. ' n' → logprob: -7.752373695373535
    4. 'n' → logprob: -11.377373695373535
    5. ' ' → logprob: -13.377373695373535
    6. '1' → logprob: -13.627373695373535
    7. ' p' → logprob: -15.002373695373535
    8. '  ' → logprob: -15.127373695373535
    9. ' (' → logprob: -16.37737464904785
    10. '`' → logprob: -16.43987464904785

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1009451150894165
    2. ' ' → logprob: -2.350944995880127
    3. ' n' → logprob: -7.475944995880127
    4. 'n' → logprob: -8.725945472717285
    5. '1' → logprob: -12.225945472717285
    6. '   ' → logprob: -13.975945472717285
    7. '  ' → logprob: -14.163445472717285
    8. ' p' → logprob: -14.850945472717285
    9. ' ' → logprob: -15.100945472717285
    10. '```' → logprob: -15.538445472717285

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2928255498409271
    2. '   ' → logprob: -1.9178255796432495
    3. '<|end|>' → logprob: -3.79282546043396
    4. ' while' → logprob: -4.292825698852539
    5. '    ' → logprob: -4.542825698852539
    6. '    
' → logprob: -4.667825698852539
    7. '
' → logprob: -4.667825698852539
    8. ':' → logprob: -4.792825698852539
    9. 'while' → logprob: -5.042825698852539
    10. ' ' → logprob: -5.417825698852539

Token 34: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.18194368481636047
    2. 'while' (adapté à ' while') → logprob: -1.806943655014038
    3. '        ' → logprob: -7.306943893432617
    4. '    ' → logprob: -7.931943893432617
    5. '       ' → logprob: -8.306943893432617
    6. ' if' → logprob: -8.306943893432617
    7. 'if' → logprob: -8.556943893432617
    8. ' ' → logprob: -8.931943893432617
    9. ' for' → logprob: -9.056943893432617
    10. '   ' → logprob: -9.431943893432617

Token 35: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04859168455004692
    2. 'n' → logprob: -3.0485916137695312
    3. '(n' → logprob: -13.298591613769531
    4. ' p' → logprob: -14.298591613769531
    5. ' (' → logprob: -14.423591613769531
    6. ' ' → logprob: -14.548591613769531
    7. '	n' → logprob: -14.923591613769531
    8. 'p' → logprob: -15.548591613769531
    9. '```' → logprob: -15.798591613769531
    10. ' ' → logprob: -15.923591613769531

Token 36: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07890433073043823
    2. '%' → logprob: -2.578904390335083
    3. '%i' → logprob: -11.953904151916504
    4. ' ' → logprob: -12.703904151916504
    5. ' ' → logprob: -12.953904151916504
    6. '%s' → logprob: -13.578904151916504
    7. '%e' → logprob: -14.828904151916504
    8. '%d' → logprob: -14.953904151916504
    9. '```' → logprob: -15.703904151916504
    10. '%n' → logprob: -15.828904151916504

Token 37: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6931490898132324
    2. ' p' → logprob: -0.6931490898132324
    3. ' ' → logprob: -13.69314956665039
    4. '2' → logprob: -15.94314956665039
    5. '	p' → logprob: -16.06814956665039
    6. '<p' → logprob: -16.19314956665039
    7. ' ' → logprob: -16.31814956665039
    8. '(p' → logprob: -16.31814956665039
    9. '<|end|>' → logprob: -16.94314956665039
    10. ' п' → logprob: -17.06814956665039

Token 38: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014207934960722923
    2. '==' → logprob: -4.26420783996582
    3. ' ' → logprob: -10.38920783996582
    4. '=' → logprob: -12.38920783996582
    5. ' ===' → logprob: -12.76420783996582
    6. ')==' → logprob: -13.01420783996582
    7. '===' → logprob: -13.01420783996582
    8. ' =' → logprob: -14.26420783996582
    9. ']==' → logprob: -14.26420783996582
    10. '```' → logprob: -15.13920783996582

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141343772411346
    2. ' ' → logprob: -1.7014133930206299
    3. '  ' → logprob: -16.701414108276367
    4. '```' → logprob: -16.826414108276367
    5. '<|end|>' → logprob: -17.951414108276367
    6. ' ' → logprob: -18.076414108276367
    7. '۰' → logprob: -18.451414108276367
    8. '   ' → logprob: -18.951414108276367
    9. '00' → logprob: -19.576414108276367
    10. '    ' → logprob: -19.826414108276367

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '```' → logprob: -20.250295639038086
    4. '   ' → logprob: -20.500295639038086
    5. '۰' → logprob: -20.625295639038086
    6. '  ' → logprob: -21.000295639038086
    7. '00' → logprob: -21.375295639038086
    8. ' ' → logprob: -21.375295639038086
    9. '

' → logprob: -21.875295639038086
    10. ' ' → logprob: -22.000295639038086

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006417636293917894
    2. ':
' → logprob: -5.131417751312256
    3. '):' → logprob: -8.756417274475098
    4. '       ' → logprob: -9.131417274475098
    5. '           ' → logprob: -9.506417274475098
    6. ' and' → logprob: -10.006417274475098
    7. '<|end|>' → logprob: -10.506417274475098
    8. ' :' → logprob: -11.006417274475098
    9. '):
' → logprob: -11.131417274475098
    10. ',' → logprob: -11.131417274475098

Token 42: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020664624869823456
    2. 'n' → logprob: -4.145664691925049
    3. '\n' → logprob: -6.395664691925049
    4. ' n' → logprob: -7.145664691925049
    5. '            
' → logprob: -7.145664691925049
    6. ' 
' → logprob: -7.895664691925049
    7. '\' → logprob: -8.64566421508789
    8. '            ' → logprob: -9.02066421508789
    9. '```' → logprob: -9.02066421508789
    10. '       ' → logprob: -9.02066421508789

Token 43: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.8674296736717224
    2. ' n' → logprob: -1.3674297332763672
    3. '            ' → logprob: -1.8674297332763672
    4. '           ' → logprob: -2.117429733276367
    5. ' factors' → logprob: -3.742429733276367
    6. ' count' → logprob: -4.617429733276367
    7. 'count' → logprob: -4.617429733276367
    8. '               ' → logprob: -5.867429733276367
    9. ' 
' → logprob: -6.992429733276367
    10. '```' → logprob: -7.617429733276367

Token 44: ' //' (ID: 602)
  Prédit: ' /='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /=' → logprob: -0.05894221365451813
    2. ' =' → logprob: -3.3089423179626465
    3. '=' → logprob: -4.5589423179626465
    4. ' /' → logprob: -5.5589423179626465
    5. ' //' → logprob: -6.3089423179626465
    6. '//=' → logprob: -6.5589423179626465
    7. ' ' → logprob: -6.8089423179626465
    8. '/=' → logprob: -7.1839423179626465
    9. ' >>=' → logprob: -7.4339423179626465
    10. '/' → logprob: -8.183941841125488

Token 45: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.703443770878948e-06
    2. '=p' → logprob: -11.875007629394531
    3. '=_' → logprob: -14.875007629394531
    4. '_=' → logprob: -16.12500762939453
    5. '=}' → logprob: -16.37500762939453
    6. '=

' → logprob: -17.12500762939453
    7. '=n' → logprob: -17.50000762939453
    8. ' =' → logprob: -17.75000762939453
    9. '=.' → logprob: -17.87500762939453
    10. '='' → logprob: -18.00000762939453

Token 46: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12692810595035553
    2. ' p' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.001928329467773
    4. '	p' → logprob: -17.876928329467773
    5. '<p' → logprob: -19.126928329467773
    6. '2' → logprob: -19.376928329467773
    7. '*p' → logprob: -19.626928329467773
    8. '_p' → logprob: -19.751928329467773
    9. ' п' → logprob: -20.001928329467773
    10. '```' → logprob: -20.126928329467773

Token 47: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3247326612472534
    2. 'count' → logprob: -1.8247326612472534
    3. '
' → logprob: -2.824732780456543
    4. '               ' → logprob: -4.199732780456543
    5. '<|end|>' → logprob: -4.449732780456543
    6. '```' → logprob: -4.699732780456543
    7. '            
' → logprob: -5.074732780456543
    8. '*' → logprob: -6.324732780456543
    9. ' 
' → logprob: -6.574732780456543
    10. '       ' → logprob: -6.574732780456543

Token 48: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034260391257703304
    2. 'count' → logprob: -5.7534260749816895
    3. '```' → logprob: -9.628425598144531
    4. '            
' → logprob: -9.753425598144531
    5. '               ' → logprob: -10.378425598144531
    6. '            ' → logprob: -10.878425598144531
    7. ' count' → logprob: -11.253425598144531
    8. '[count' → logprob: -11.253425598144531
    9. '       ' → logprob: -11.253425598144531
    10. '
' → logprob: -12.128425598144531

Token 49: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.07965747267007828
    2. ' count' → logprob: -2.579657554626465
    3. '           ' → logprob: -7.204657554626465
    4. '            ' → logprob: -11.704657554626465
    5. '1' → logprob: -12.829657554626465
    6. '               ' → logprob: -13.204657554626465
    7. '	count' → logprob: -13.204657554626465
    8. '```' → logprob: -13.204657554626465
    9. '[count' → logprob: -13.454657554626465
    10. 'factor' → logprob: -13.579657554626465

Token 50: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47415152192115784
    2. '+=' → logprob: -0.9741514921188354
    3. '+' → logprob: -9.849151611328125
    4. '=' → logprob: -10.974151611328125
    5. ']+=' → logprob: -12.724151611328125
    6. ' +' → logprob: -14.974151611328125
    7. ' =' → logprob: -15.099151611328125
    8. '<|end|>' → logprob: -15.349151611328125
    9. '+='' → logprob: -15.724151611328125
    10. '            ' → logprob: -15.724151611328125

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04299920052289963
    2. ' ' → logprob: -3.167999267578125
    3. ' ' → logprob: -17.792999267578125
    4. '   ' → logprob: -18.042999267578125
    5. '```' → logprob: -18.042999267578125
    6. '۱' → logprob: -18.730499267578125
    7. '    ' → logprob: -19.042999267578125
    8. '１' → logprob: -19.167999267578125
    9. '<|end|>' → logprob: -19.417999267578125
    10. '  ' → logprob: -20.105499267578125

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.875015258789062
    4. '```' → logprob: -19.625015258789062
    5. '۱' → logprob: -21.187515258789062
    6. '１' → logprob: -21.812515258789062
    7. '  ' → logprob: -21.937515258789062
    8. 'count' → logprob: -22.250015258789062
    9. '<|end|>' → logprob: -22.250015258789062
    10. '`' → logprob: -22.437515258789062

Token 53: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05068017914891243
    2. '
' → logprob: -3.300680160522461
    3. '<|end|>' → logprob: -5.550680160522461
    4. '   ' → logprob: -5.925680160522461
    5. '```' → logprob: -5.925680160522461
    6. '           ' → logprob: -6.300680160522461
    7. '        
' → logprob: -7.925680160522461
    8. '    
' → logprob: -8.050680160522461
    9. '<|end|>' → logprob: -8.425680160522461
    10. '\n' → logprob: -8.675680160522461

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007096939254552126
    2. '   ' → logprob: -5.882096767425537
    3. '           ' → logprob: -6.382096767425537
    4. '
' → logprob: -6.757096767425537
    5. '<|end|>' → logprob: -7.257096767425537
    6. '```' → logprob: -7.757096767425537
    7. ',' → logprob: -9.507097244262695
    8. '<|end|>' → logprob: -9.632097244262695
    9. '        
' → logprob: -10.132097244262695
    10. '    
' → logprob: -10.382097244262695

Token 55: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06208454445004463
    2. ' if' → logprob: -3.187084436416626
    3. 'if' (adapté à ' if') → logprob: -4.312084674835205
    4. '   ' → logprob: -5.812084674835205
    5. '```' → logprob: -7.187084674835205
    6. ' factors' → logprob: -7.312084674835205
    7. '           ' → logprob: -7.687084674835205
    8. 'f' → logprob: -7.812084674835205
    9. 'factor' → logprob: -9.937084197998047
    10. '<|end|>' → logprob: -10.062084197998047

Token 56: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.009761283174157143
    2. 'count' → logprob: -4.634761333465576
    3. '(count' → logprob: -12.634760856628418
    4. ' ' → logprob: -14.009760856628418
    5. '	count' → logprob: -14.134760856628418
    6. '<count' → logprob: -15.259760856628418
    7. '[count' → logprob: -15.759760856628418
    8. ' counts' → logprob: -16.259761810302734
    9. '$count' → logprob: -16.759761810302734
    10. '=count' → logprob: -17.509761810302734

Token 57: ':
' (ID: 734)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10027492046356201
    2. '>' → logprob: -2.3502750396728516
    3. ':' → logprob: -10.100275039672852
    4. '<|end|>' → logprob: -11.475275039672852
    5. '   ' → logprob: -12.475275039672852
    6. ' ' → logprob: -12.850275039672852
    7. ' ' → logprob: -12.975275039672852
    8. ')>' → logprob: -13.100275039672852
    9. '<|end|>' → logprob: -13.725275039672852
    10. '()>' → logprob: -14.100275039672852

Token 58: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010580590926110744
    2. ' factors' → logprob: -4.635580539703369
    3. '       ' → logprob: -8.010581016540527
    4. 'f' → logprob: -8.385581016540527
    5. ' f' → logprob: -10.010581016540527
    6. '<|end|>' → logprob: -10.260581016540527
    7. '<|end|>' → logprob: -10.385581016540527
    8. '	       ' → logprob: -10.885581016540527
    9. ':' → logprob: -11.010581016540527
    10. ',' → logprob: -11.010581016540527

Token 59: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.029394950717687607
    2. 'f' → logprob: -3.9043948650360107
    3. '           ' → logprob: -5.15439510345459
    4. '       ' → logprob: -5.90439510345459
    5. ' f' → logprob: -8.52939510345459
    6. ' factores' → logprob: -11.02939510345459
    7. '   ' → logprob: -11.27939510345459
    8. ' ' → logprob: -11.52939510345459
    9. 'Factors' → logprob: -11.65439510345459
    10. '               ' → logprob: -11.77939510345459

Token 60: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0025127585977315903
    2. '.' → logprob: -6.0025129318237305
    3. '.extend' → logprob: -10.62751293182373
    4. ' .' → logprob: -11.75251293182373
    5. '.add' → logprob: -13.62751293182373
    6. '.Append' → logprob: -14.00251293182373
    7. '.push' → logprob: -14.37751293182373
    8. '.ap' → logprob: -14.62751293182373
    9. '.py' → logprob: -14.75251293182373
    10. '.app' → logprob: -14.75251293182373

Token 61: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0015305745182558894
    2. '(' → logprob: -6.501530647277832
    3. '(p' → logprob: -10.501530647277832
    4. '([' → logprob: -14.751530647277832
    5. '(
' → logprob: -15.751530647277832
    6. '(f' → logprob: -15.876530647277832
    7. '(([' → logprob: -17.251529693603516
    8. '(((' → logprob: -17.751529693603516
    9. ' ((' → logprob: -18.001529693603516
    10. '(

' → logprob: -18.251529693603516

Token 62: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.107425062713446e-06
    2. ' p' → logprob: -11.875006675720215
    3. '(p' → logprob: -17.62500762939453
    4. ')p' → logprob: -17.87500762939453
    5. '<p' → logprob: -18.00000762939453
    6. '   ' → logprob: -18.00000762939453
    7. ' ' → logprob: -18.62500762939453
    8. '_p' → logprob: -18.62500762939453
    9. ''p' → logprob: -18.62500762939453
    10. '	p' → logprob: -19.12500762939453

Token 63: ',count' (ID: 139747)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005980697460472584
    2. ',count' → logprob: -7.500597953796387
    3. ' ,' → logprob: -10.750597953796387
    4. ',f' → logprob: -11.375597953796387
    5. ',
' → logprob: -12.625597953796387
    6. ',p' → logprob: -13.000597953796387
    7. ',c' → logprob: -13.625597953796387
    8. ',num' → logprob: -14.375597953796387
    9. ',n' → logprob: -14.625597953796387
    10. ',int' → logprob: -14.625597953796387

Token 64: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02325514331459999
    2. ')' → logprob: -3.7732551097869873
    3. '),' → logprob: -12.523255348205566
    4. '))
' → logprob: -12.898255348205566
    5. ')))' → logprob: -13.023255348205566
    6. ' ))' → logprob: -14.023255348205566
    7. ')
' → logprob: -15.898255348205566
    8. ',' → logprob: -16.14825439453125
    9. '   ' → logprob: -16.89825439453125
    10. ')),' → logprob: -17.02325439453125

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24535289406776428
    2. '```' → logprob: -2.3703529834747314
    3. '    
' → logprob: -2.8703529834747314
    4. '
' → logprob: -3.7453529834747314
    5. '<|end|>' → logprob: -3.8703529834747314
    6. '  
' → logprob: -4.870352745056152
    7. ' 
' → logprob: -4.995352745056152
    8. ')' → logprob: -6.370352745056152
    9. '   
' → logprob: -6.495352745056152
    10. '``' → logprob: -6.495352745056152

Token 66: ' f' (ID: 285)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1747361570596695
    2. '   ' → logprob: -2.049736261367798
    3. 'for' → logprob: -3.674736261367798
    4. '```' → logprob: -6.049736022949219
    5. '
' → logprob: -6.799736022949219
    6. '<|end|>' → logprob: -7.174736022949219
    7. '    
' → logprob: -7.799736022949219
    8. ' if' → logprob: -7.924736022949219
    9. 'import' → logprob: -8.424736022949219
    10. ' while' → logprob: -8.424736022949219

Token 67: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0006494098342955112
    2. 'rom' → logprob: -8.500649452209473
    3. 'actors' → logprob: -8.625649452209473
    4. 'actor' → logprob: -9.000649452209473
    5. ' or' → logprob: -9.250649452209473
    6. 'for' → logprob: -10.625649452209473
    7. ' for' → logprob: -12.250649452209473
    8. 'pr' → logprob: -12.625649452209473
    9. '   ' → logprob: -12.750649452209473
    10. 'def' → logprob: -13.125649452209473

Token 68: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.6478124856948853
    2. ' []' → logprob: -1.7728124856948853
    3. 'n' → logprob: -1.8978124856948853
    4. ' [' → logprob: -2.2728123664855957
    5. '[' → logprob: -2.6478123664855957
    6. ' int' → logprob: -2.6478123664855957
    7. '[]' → logprob: -2.7728123664855957
    8. ' ' → logprob: -3.5228123664855957
    9. 'int' → logprob: -3.5228123664855957
    10. '2' → logprob: -3.7728123664855957

Token 69: '7' (ID: 22)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2777171730995178
    2. '2' → logprob: -2.152717113494873
    3. 'math' → logprob: -2.902717113494873
    4. '7' → logprob: -4.027717113494873
    5. '[' → logprob: -4.277717113494873
    6. 'n' → logprob: -4.402717113494873
    7. '[int' → logprob: -4.402717113494873
    8. '[]' → logprob: -5.277717113494873
    9. '6' → logprob: -6.027717113494873
    10. '[n' → logprob: -6.777717113494873

Token 70: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' inc' (ID: 4570)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.042447272688150406
    2. ' while' → logprob: -3.667447328567505
    3. '<|end|>' → logprob: -4.292447090148926
    4. '   ' → logprob: -6.292447090148926
    5. '	while' → logprob: -9.042447090148926
    6. 'import' → logprob: -9.042447090148926
    7. '<|end|>' → logprob: -9.417447090148926
    8. '```' → logprob: -9.667447090148926
    9. ' ' → logprob: -10.792447090148926
    10. '    
' → logprob: -11.167447090148926

Token 73: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0029598698019981384
    2. ' =' → logprob: -5.877959728240967
    3. 'rement' → logprob: -8.877960205078125
    4. 'ement' → logprob: -12.127960205078125
    5. 'e' → logprob: -12.252960205078125
    6. 'ements' → logprob: -13.877960205078125
    7. '_=' → logprob: -14.002960205078125
    8. 'r' → logprob: -14.627960205078125
    9. '=[]' → logprob: -15.002960205078125
    10. 'er' → logprob: -15.002960205078125

Token 74: ' [' (ID: 723)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0022006903309375048
    2. ' ' → logprob: -6.502200603485107
    3. '[' → logprob: -7.377200603485107
    4. ' [' → logprob: -10.127201080322266
    5. '2' → logprob: -10.627201080322266
    6. '0' → logprob: -12.627201080322266
    7. '   ' → logprob: -13.377201080322266
    8. '{' → logprob: -13.377201080322266
    9. '(' → logprob: -13.627201080322266
    10. '```' → logprob: -14.877201080322266

Token 75: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.003851262852549553
    2. '2' → logprob: -6.003851413726807
    3. ' ' → logprob: -6.628851413726807
    4. '   ' → logprob: -10.378850936889648
    5. '  ' → logprob: -12.253850936889648
    6. '{' → logprob: -12.378850936889648
    7. '0' → logprob: -12.628850936889648
    8. '```' → logprob: -13.253850936889648
    9. '6' → logprob: -13.503850936889648
    10. ']' → logprob: -14.503850936889648

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040302498382516205
    2. ' ,' → logprob: -8.12540340423584
    3. '2' → logprob: -9.37540340423584
    4. '6' → logprob: -10.75040340423584
    5. ' ' → logprob: -14.50040340423584
    6. ',
' → logprob: -16.375402450561523
    7. '，' → logprob: -16.500402450561523
    8. ',,' → logprob: -17.625402450561523
    9. '

' → logprob: -17.750402450561523
    10. '' → logprob: -18.000402450561523

Token 77: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00044008632539771497
    2. '6' → logprob: -8.125439643859863
    3. ' ' → logprob: -8.875439643859863
    4. '```' → logprob: -13.375439643859863
    5. '

' → logprob: -14.125439643859863
    6. ']' → logprob: -14.375439643859863
    7. '   ' → logprob: -15.000439643859863
    8. '﻿' → logprob: -16.00044059753418
    9. '  ' → logprob: -16.31294059753418
    10. '​' → logprob: -16.56294059753418

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008096250821836293
    2. ' ,' → logprob: -7.125809669494629
    3. '4' → logprob: -12.625809669494629
    4. '6' → logprob: -13.625809669494629
    5. ']' → logprob: -15.125809669494629
    6. ' ' → logprob: -15.875809669494629
    7. '7' → logprob: -16.500808715820312
    8. '2' → logprob: -16.875808715820312
    9. '3' → logprob: -17.125808715820312
    10. '，' → logprob: -17.375808715820312

Token 79: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0003500050224829465
    2. ' ' → logprob: -8.000349998474121
    3. '```' → logprob: -11.625349998474121
    4. ']' → logprob: -13.125349998474121
    5. '   ' → logprob: -13.750349998474121
    6. '  ' → logprob: -14.125349998474121
    7. '

' → logprob: -15.375349998474121
    8. '...' → logprob: -15.375349998474121
    9. '' → logprob: -15.437849998474121
    10. '۴' → logprob: -15.500349998474121

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.800739018013701e-05
    2. ' ,' → logprob: -10.0000581741333
    3. '2' → logprob: -11.3750581741333
    4. '6' → logprob: -15.2500581741333
    5. '4' → logprob: -15.3750581741333
    6. '7' → logprob: -15.6250581741333
    7. ' ' → logprob: -15.8750581741333
    8. '8' → logprob: -16.000057220458984
    9. ']' → logprob: -16.125057220458984
    10. '1' → logprob: -16.875057220458984

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005064461147412658
    2. ' ' → logprob: -7.625506401062012
    3. '```' → logprob: -11.875506401062012
    4. ']' → logprob: -13.000506401062012
    5. '6' → logprob: -13.000506401062012
    6. '...' → logprob: -13.500506401062012
    7. '   ' → logprob: -13.813006401062012
    8. '

' → logprob: -14.625506401062012
    9. '  ' → logprob: -14.625506401062012
    10. '8' → logprob: -14.813006401062012

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044532763422466815
    2. ' ,' → logprob: -7.750445365905762
    3. '4' → logprob: -11.875445365905762
    4. ']' → logprob: -12.000445365905762
    5. '6' → logprob: -14.875445365905762
    6. '3' → logprob: -15.250445365905762
    7. '7' → logprob: -15.250445365905762
    8. ' ' → logprob: -15.375445365905762
    9. '1' → logprob: -15.500445365905762
    10. '8' → logprob: -15.750445365905762

Token 83: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0003643058007583022
    2. '```' → logprob: -8.500364303588867
    3. ' ' → logprob: -9.000364303588867
    4. ']' → logprob: -11.500364303588867
    5. '   ' → logprob: -12.125364303588867
    6. '

' → logprob: -12.562864303588867
    7. '``' → logprob: -12.937864303588867
    8. '{' → logprob: -13.000364303588867
    9. '  ' → logprob: -13.062864303588867
    10. '...' → logprob: -13.187864303588867

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ' ,' → logprob: -12.250007629394531
    3. '4' → logprob: -12.750007629394531
    4. '2' → logprob: -15.875007629394531
    5. ' ' → logprob: -15.875007629394531
    6. '6' → logprob: -16.62500762939453
    7. ']' → logprob: -16.87500762939453
    8. '1' → logprob: -18.00000762939453
    9. '3' → logprob: -18.62500762939453
    10. '7' → logprob: -19.12500762939453

Token 85: '6' (ID: 21)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0014949804171919823
    2. '2' → logprob: -7.001494884490967
    3. ' ' → logprob: -7.501494884490967
    4. '<|end|>' → logprob: -11.251495361328125
    5. '```' → logprob: -11.876495361328125
    6. '...' → logprob: -12.501495361328125
    7. '6' → logprob: -12.626495361328125
    8. ']' → logprob: -13.876495361328125
    9. '<|end|>' → logprob: -14.688995361328125
    10. '۴' → logprob: -15.126495361328125

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006658526253886521
    2. '4' → logprob: -7.750665664672852
    3. ' ,' → logprob: -8.375665664672852
    4. '2' → logprob: -13.125665664672852
    5. ' ' → logprob: -13.250665664672852
    6. '8' → logprob: -15.000665664672852
    7. '6' → logprob: -15.000665664672852
    8. ']' → logprob: -15.750665664672852
    9. '1' → logprob: -16.75066566467285
    10. '0' → logprob: -17.37566566467285

Token 87: '2' (ID: 17)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.07757531106472015
    2. '2' → logprob: -2.702575206756592
    3. ' ' → logprob: -5.577575206756592
    4. '4' → logprob: -5.952575206756592
    5. '```' → logprob: -6.952575206756592
    6. ']' → logprob: -9.57757568359375
    7. '_' → logprob: -9.70257568359375
    8. '...' → logprob: -10.51507568359375
    9. '0' → logprob: -10.95257568359375
    10. '  ' → logprob: -11.32757568359375

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3226136767771095e-05
    2. '4' → logprob: -10.375042915344238
    3. ' ,' → logprob: -11.375042915344238
    4. ' ' → logprob: -15.250042915344238
    5. '6' → logprob: -16.750043869018555
    6. ']' → logprob: -16.875043869018555
    7. '1' → logprob: -17.875043869018555
    8. '8' → logprob: -18.250043869018555
    9. '```' → logprob: -18.625043869018555
    10. '<|end|>' → logprob: -18.812543869018555

Token 89: '6' (ID: 21)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5238016247749329
    2. '6' → logprob: -0.8988016247749329
    3. '```' → logprob: -7.773801803588867
    4. ' ' → logprob: -8.898801803588867
    5. '``' → logprob: -11.086301803588867
    6. ']' → logprob: -11.148801803588867
    7. '{' → logprob: -11.711301803588867
    8. '   ' → logprob: -11.836301803588867
    9. '' → logprob: -11.836301803588867
    10. '<|end|>' → logprob: -12.148801803588867

Token 90: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1609378308057785
    2. ']
' → logprob: -1.910937786102295
    3. ']
' → logprob: -7.410937786102295
    4. ']

' → logprob: -9.535938262939453
    5. ' ]
' → logprob: -11.285938262939453
    6. ' ]' → logprob: -11.410938262939453
    7. '   ' → logprob: -11.535938262939453
    8. ']

' → logprob: -14.160938262939453
    9. ' ' → logprob: -14.910938262939453
    10. ',' → logprob: -15.160938262939453

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027085863053798676
    2. 'while' → logprob: -3.652085781097412
    3. ' while' → logprob: -7.277085781097412
    4. '```' → logprob: -9.65208625793457
    5. '<|end|>' → logprob: -11.65208625793457
    6. '	while' → logprob: -11.77708625793457
    7. '    
' → logprob: -11.90208625793457
    8. '       ' → logprob: -12.90208625793457
    9. 'While' → logprob: -13.90208625793457
    10. '  ' → logprob: -14.65208625793457

Token 92: ' i' (ID: 575)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04636365920305252
    2. '   ' → logprob: -3.671363592147827
    3. ' while' → logprob: -3.921363592147827
    4. 'for' → logprob: -10.796363830566406
    5. 'i' (adapté à ' i') → logprob: -11.296363830566406
    6. '```' → logprob: -11.921363830566406
    7. '	while' → logprob: -12.296363830566406
    8. '    
' → logprob: -13.671363830566406
    9. 'While' → logprob: -13.921363830566406
    10. '
' → logprob: -14.546363830566406

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38955026865005493
    2. ' =' → logprob: -1.1395502090454102
    3. 'nd' → logprob: -6.01455020904541
    4. 'n' → logprob: -8.63955020904541
    5. 'f' → logprob: -10.51455020904541
    6. 'x' → logprob: -11.51455020904541
    7. 'd' → logprob: -12.26455020904541
    8. 'nt' → logprob: -12.38955020904541
    9. 'dx' → logprob: -13.13955020904541
    10. 't' → logprob: -13.63955020904541

Token 94: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026336227892898023
    2. ' ' → logprob: -8.250263214111328
    3. '1' → logprob: -14.000263214111328
    4. '7' → logprob: -14.250263214111328
    5. '4' → logprob: -16.187763214111328
    6. '  ' → logprob: -16.437763214111328
    7. '8' → logprob: -16.500263214111328
    8. '2' → logprob: -16.562763214111328
    9. '3' → logprob: -16.750263214111328
    10. '۰' → logprob: -17.000263214111328

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024370834580622613
    2. ' ' → logprob: -8.375244140625
    3. '1' → logprob: -11.500244140625
    4. '7' → logprob: -13.625244140625
    5. '   ' → logprob: -14.500244140625
    6. '3' → logprob: -14.875244140625
    7. '  ' → logprob: -15.000244140625
    8. '8' → logprob: -15.875244140625
    9. '4' → logprob: -16.000244140625
    10. '5' → logprob: -16.250244140625

Token 96: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.43917742371559143
    2. '   ' → logprob: -1.689177393913269
    3. ' while' → logprob: -1.814177393913269
    4. '
' → logprob: -5.064177513122559
    5. '<|end|>' → logprob: -7.439177513122559
    6. '	while' → logprob: -7.814177513122559
    7. '```' → logprob: -7.939177513122559
    8. 'While' → logprob: -10.064177513122559
    9. '    
' → logprob: -10.814177513122559
    10. '<|end|>' → logprob: -11.064177513122559

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.322282075881958
    2. 'while' → logprob: -1.447282075881958
    3. ' while' → logprob: -3.322282075881958
    4. '
' → logprob: -6.322281837463379
    5. '<|end|>' → logprob: -6.572281837463379
    6. '```' → logprob: -7.322281837463379
    7. '	while' → logprob: -8.697281837463379
    8. '    
' → logprob: -9.697281837463379
    9. 'While' → logprob: -10.447281837463379
    10. '<|end|>' → logprob: -10.697281837463379

Token 98: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.015651868656277657
    2. ' while' → logprob: -4.265651702880859
    3. '   ' → logprob: -6.515651702880859
    4. '```' → logprob: -12.39065170288086
    5. '
' → logprob: -13.51565170288086
    6. '	while' → logprob: -13.64065170288086
    7. 'While' → logprob: -15.26565170288086
    8. '``' → logprob: -16.64065170288086
    9. '  ' → logprob: -16.89065170288086
    10. '    
' → logprob: -17.01565170288086

Token 99: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.474366158246994
    2. 'f' → logprob: -0.9743661880493164
    3. ' n' → logprob: -8.849366188049316
    4. 'n' → logprob: -8.974366188049316
    5. '(f' → logprob: -11.724366188049316
    6. '	f' → logprob: -12.099366188049316
    7. '   ' → logprob: -13.474366188049316
    8. ' math' → logprob: -13.474366188049316
    9. ' ' → logprob: -13.724366188049316
    10. ' (' → logprob: -14.599366188049316

Token 100: '*f' (ID: 103126)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.351987361907959
    2. '*f' → logprob: -1.601987361907959
    3. '*' → logprob: -2.351987361907959
    4. '*p' → logprob: -11.726987838745117
    5. '<=' → logprob: -11.851987838745117
    6. '*i' → logprob: -12.101987838745117
    7. '*q' → logprob: -12.601987838745117
    8. ' <=' → logprob: -12.851987838745117
    9. '*s' → logprob: -12.976987838745117
    10. '*y' → logprob: -13.976987838745117

Token 101: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5759417414665222
    2. '<=' → logprob: -0.8259417414665222
    3. ']<=' → logprob: -13.950942039489746
    4. ')<=' → logprob: -14.075942039489746
    5. '<|end|>' → logprob: -15.200942039489746
    6. ' ' → logprob: -15.950942039489746
    7. ' ≤' → logprob: -16.70094108581543
    8. '≤' → logprob: -16.82594108581543
    9. '<|end|>' → logprob: -17.20094108581543
    10. 'le' → logprob: -17.32594108581543

Token 102: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16022899746894836
    2. ' n' → logprob: -1.910228967666626
    3. '	n' → logprob: -13.035228729248047
    4. '   ' → logprob: -13.160228729248047
    5. ' ' → logprob: -15.285228729248047
    6. 'int' → logprob: -16.160228729248047
    7. '```' → logprob: -16.160228729248047
    8. '_n' → logprob: -16.410228729248047
    9. '    ' → logprob: -16.535228729248047
    10. '(n' → logprob: -16.910228729248047

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0624326728284359
    2. ':
' → logprob: -2.8124327659606934
    3. ' and' → logprob: -7.812432765960693
    4. ' :' → logprob: -10.312432289123535
    5. ' :
' → logprob: -11.062432289123535
    6. 'and' → logprob: -12.687432289123535
    7. ':

' → logprob: -12.687432289123535
    8. ':
' → logprob: -12.687432289123535
    9. '   ' → logprob: -13.312432289123535
    10. '):
' → logprob: -16.06243324279785

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032483008690178394
    2. ' if' → logprob: -6.50324821472168
    3. '   ' → logprob: -6.62824821472168
    4. ' while' → logprob: -8.75324821472168
    5. 'if' → logprob: -8.87824821472168
    6. 'while' → logprob: -9.75324821472168
    7. '```' → logprob: -10.62824821472168
    8. '    ' → logprob: -11.12824821472168
    9. '	   ' → logprob: -12.12824821472168
    10. '        
' → logprob: -12.50324821472168

Token 105: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.08809442818164825
    2. ' count' → logprob: -2.838094472885132
    3. '       ' → logprob: -3.838094472885132
    4. 'while' → logprob: -6.213094234466553
    5. ' while' → logprob: -7.213094234466553
    6. '   ' → logprob: -7.338094234466553
    7. 'if' → logprob: -7.588094234466553
    8. ' if' → logprob: -8.463094711303711
    9. '    ' → logprob: -9.588094711303711
    10. '	count' → logprob: -10.463094711303711

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018154388293623924
    2. '=' → logprob: -4.018154621124268
    3. '   ' → logprob: -13.51815414428711
    4. '    ' → logprob: -13.51815414428711
    5. ' ' → logprob: -13.76815414428711
    6. '       ' → logprob: -15.26815414428711
    7. '        ' → logprob: -15.26815414428711
    8. '  ' → logprob: -16.64315414428711
    9. ' +=' → logprob: -16.76815414428711
    10. '```' → logprob: -16.76815414428711

Token 107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894557505846024
    2. ' ' → logprob: -2.4639456272125244
    3. '   ' → logprob: -12.213945388793945
    4. '       ' → logprob: -14.213945388793945
    5. '  ' → logprob: -15.713945388793945
    6. '     ' → logprob: -16.213945388793945
    7. '           ' → logprob: -16.713945388793945
    8. ' ' → logprob: -17.026445388793945
    9. '	' → logprob: -17.088945388793945
    10. '1' → logprob: -17.213945388793945

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -16.50048828125
    4. '  ' → logprob: -20.00048828125
    5. '       ' → logprob: -20.37548828125
    6. '1' → logprob: -20.37548828125
    7. '۰' → logprob: -20.37548828125
    8. '```' → logprob: -20.62548828125
    9. '     ' → logprob: -21.12548828125
    10. ' ' → logprob: -21.68798828125

Token 109: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019921327009797096
    2. '<|end|>' → logprob: -4.01992130279541
    3. '<|end|>' → logprob: -6.89492130279541
    4. '
' → logprob: -7.64492130279541
    5. '        
' → logprob: -9.51992130279541
    6. ':
' → logprob: -9.89492130279541
    7. ' while' → logprob: -10.14492130279541
    8. ' ' → logprob: -11.14492130279541
    9. '   ' → logprob: -11.26992130279541
    10. ':' → logprob: -11.26992130279541

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002119211945682764
    2. '<|end|>' → logprob: -6.252119064331055
    3. '<|end|>' → logprob: -9.502119064331055
    4. ' while' → logprob: -9.752119064331055
    5. '   ' → logprob: -10.752119064331055
    6. 'while' → logprob: -11.627119064331055
    7. '        
' → logprob: -11.627119064331055
    8. ' ' → logprob: -11.752119064331055
    9. '```' → logprob: -12.877119064331055
    10. '	while' → logprob: -13.502119064331055

Token 111: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3415982723236084
    2. 'while' (adapté à ' while') → logprob: -1.5915982723236084
    3. '       ' → logprob: -2.4665982723236084
    4. ' if' → logprob: -7.7165985107421875
    5. 'if' → logprob: -8.341598510742188
    6. '   ' → logprob: -9.216598510742188
    7. '	while' → logprob: -10.091598510742188
    8. ' ' → logprob: -10.466598510742188
    9. '<|end|>' → logprob: -10.716598510742188
    10. '    ' → logprob: -12.341598510742188

Token 112: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0067154900170862675
    2. 'n' → logprob: -5.006715297698975
    3. '(n' → logprob: -15.881715774536133
    4. '	n' → logprob: -17.131715774536133
    5. ')n' → logprob: -18.381715774536133
    6. ' ' → logprob: -18.506715774536133
    7. ' (' → logprob: -18.631715774536133
    8. ' н' → logprob: -18.756715774536133
    9. '_n' → logprob: -18.881715774536133
    10. '<|end|>' → logprob: -18.881715774536133

Token 113: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0013260759878903627
    2. '%' → logprob: -6.626326084136963
    3. ' ' → logprob: -16.126325607299805
    4. ' ' → logprob: -17.001325607299805
    5. '%s' → logprob: -17.626325607299805
    6. '%i' → logprob: -18.376325607299805
    7. ' %=' → logprob: -18.501325607299805
    8. '%n' → logprob: -18.626325607299805
    9. '```' → logprob: -19.501325607299805
    10. '%d' → logprob: -19.751325607299805

Token 114: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06196993216872215
    2. ' f' → logprob: -2.8119699954986572
    3. '	f' → logprob: -13.811969757080078
    4. ' ' → logprob: -14.561969757080078
    5. '<|end|>' → logprob: -15.061969757080078
    6. '   ' → logprob: -15.436969757080078
    7. '[f' → logprob: -15.686969757080078
    8. '(f' → logprob: -16.936969757080078
    9. '*f' → logprob: -17.436969757080078
    10. ' ' → logprob: -17.561969757080078

Token 115: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868771195411682
    2. '==' → logprob: -1.1368770599365234
    3. ' ' → logprob: -12.886877059936523
    4. '=' → logprob: -14.136877059936523
    5. ')==' → logprob: -14.261877059936523
    6. '===' → logprob: -14.511877059936523
    7. ']==' → logprob: -14.511877059936523
    8. '```' → logprob: -14.761877059936523
    9. '        ' → logprob: -15.636877059936523
    10. '0' → logprob: -16.011877059936523

Token 116: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018152983859181404
    2. ' ' → logprob: -4.018153190612793
    3. '   ' → logprob: -13.643153190612793
    4. '       ' → logprob: -14.518153190612793
    5. '           ' → logprob: -15.268153190612793
    6. '  ' → logprob: -15.580653190612793
    7. '    ' → logprob: -15.893153190612793
    8. '=' → logprob: -16.143152236938477
    9. '     ' → logprob: -16.268152236938477
    10. 'f' → logprob: -16.268152236938477

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -17.125627517700195
    4. '       ' → logprob: -18.625627517700195
    5. '           ' → logprob: -18.875627517700195
    6. '  ' → logprob: -19.000627517700195
    7. '     ' → logprob: -19.125627517700195
    8. '```' → logprob: -20.125627517700195
    9. '    ' → logprob: -20.500627517700195
    10. '         ' → logprob: -20.750627517700195

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5495461225509644
    2. '           ' → logprob: -1.1745461225509644
    3. ':
' → logprob: -2.174546241760254
    4. '):
' → logprob: -10.174546241760254
    5. '          ' → logprob: -10.799546241760254
    6. 'n' → logprob: -10.924546241760254
    7. '       ' → logprob: -11.049546241760254
    8. ':

' → logprob: -11.174546241760254
    9. ' and' → logprob: -11.549546241760254
    10. '<|end|>' → logprob: -11.549546241760254

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007871139096096158
    2. 'n' → logprob: -7.375787258148193
    3. ' n' → logprob: -9.500786781311035
    4. '```' → logprob: -10.125786781311035
    5. '       ' → logprob: -11.750786781311035
    6. '          ' → logprob: -12.125786781311035
    7. '<|end|>' → logprob: -12.125786781311035
    8. ' ' → logprob: -12.250786781311035
    9. '            
' → logprob: -12.375786781311035
    10. '(n' → logprob: -12.625786781311035

Token 120: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.4869696795940399
    2. ' n' → logprob: -0.9869697093963623
    3. '           ' → logprob: -4.361969470977783
    4. '               ' → logprob: -10.736969947814941
    5. '```' → logprob: -11.236969947814941
    6. '       ' → logprob: -11.861969947814941
    7. '	n' → logprob: -12.236969947814941
    8. ' ' → logprob: -12.486969947814941
    9. '   ' → logprob: -12.986969947814941
    10. '(n' → logprob: -14.736969947814941

Token 121: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6939123272895813
    2. '//=' → logprob: -0.6939123272895813
    3. '//' → logprob: -7.193912506103516
    4. ' /=' → logprob: -12.068912506103516
    5. '/=' → logprob: -13.068912506103516
    6. '   ' → logprob: -13.693912506103516
    7. '           ' → logprob: -13.693912506103516
    8. ' ' → logprob: -14.318912506103516
    9. '       ' → logprob: -14.568912506103516
    10. '```' → logprob: -14.568912506103516

Token 122: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002060436672763899
    2. '=f' → logprob: -8.500205993652344
    3. '/=' → logprob: -13.250205993652344
    4. 'f' → logprob: -14.250205993652344
    5. '=
' → logprob: -16.250205993652344
    6. '%=' → logprob: -16.875205993652344
    7. '=

' → logprob: -17.250205993652344
    8. '/' → logprob: -17.875205993652344
    9. '//=' → logprob: -18.375205993652344
    10. '=p' → logprob: -18.500205993652344

Token 123: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.029750484973192215
    2. ' f' → logprob: -3.5297505855560303
    3. '	f' → logprob: -16.77975082397461
    4. ' ' → logprob: -17.15475082397461
    5. 'p' → logprob: -18.40475082397461
    6. '       ' → logprob: -18.65475082397461
    7. '           ' → logprob: -18.77975082397461
    8. '   ' → logprob: -18.77975082397461
    9. '_f' → logprob: -19.77975082397461
    10. '7' → logprob: -19.77975082397461

Token 124: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005967585020698607
    2. 'count' → logprob: -8.00059700012207
    3. '
' → logprob: -8.75059700012207
    4. '<|end|>' → logprob: -9.87559700012207
    5. '            
' → logprob: -11.37559700012207
    6. '               ' → logprob: -12.00059700012207
    7. '```' → logprob: -12.12559700012207
    8. ' 
' → logprob: -12.37559700012207
    9. '       ' → logprob: -12.37559700012207
    10. '[count' → logprob: -13.25059700012207

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06204140558838844
    2. 'count' → logprob: -2.8120415210723877
    3. ' count' → logprob: -10.062041282653809
    4. '               ' → logprob: -12.312041282653809
    5. '(count' → logprob: -12.312041282653809
    6. '          ' → logprob: -12.437041282653809
    7. '       ' → logprob: -12.687041282653809
    8. '
' → logprob: -12.687041282653809
    9. '[count' → logprob: -12.812041282653809
    10. ',count' → logprob: -13.062041282653809

Token 126: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0009158630855381489
    2. ' count' → logprob: -7.000916004180908
    3. '           ' → logprob: -12.37591552734375
    4. '       ' → logprob: -16.87591552734375
    5. '	count' → logprob: -17.37591552734375
    6. '(count' → logprob: -18.62591552734375
    7. ' ' → logprob: -18.62591552734375
    8. '   ' → logprob: -18.75091552734375
    9. '.count' → logprob: -19.25091552734375
    10. '[count' → logprob: -19.37591552734375

Token 127: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.030334200710058212
    2. '+=' → logprob: -3.530334234237671
    3. '           ' → logprob: -7.780333995819092
    4. '            ' → logprob: -8.78033447265625
    5. '          ' → logprob: -12.78033447265625
    6. '+' → logprob: -13.03033447265625
    7. '               ' → logprob: -13.28033447265625
    8. '        ' → logprob: -13.65533447265625
    9. '=' → logprob: -13.90533447265625
    10. ' +' → logprob: -14.15533447265625

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017031522002071142
    2. ' ' → logprob: -6.376703262329102
    3. '           ' → logprob: -14.251703262329102
    4. '   ' → logprob: -15.501703262329102
    5. '       ' → logprob: -17.0017032623291
    6. '               ' → logprob: -18.0017032623291
    7. '```' → logprob: -18.2517032623291
    8. '
' → logprob: -19.0642032623291
    9. '  ' → logprob: -19.6892032623291
    10. ' ' → logprob: -19.7517032623291

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.62500762939453
    4. '```' → logprob: -20.00000762939453
    5. '       ' → logprob: -21.12500762939453
    6. '           ' → logprob: -21.50000762939453
    7. '１' → logprob: -22.06250762939453
    8. '۱' → logprob: -22.25000762939453
    9. '
' → logprob: -22.75000762939453
    10. 'def' → logprob: -23.00000762939453

Token 130: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.803360495017841e-05
    2. '
' → logprob: -10.250078201293945
    3. '<|end|>' → logprob: -10.375078201293945
    4. '           ' → logprob: -11.750078201293945
    5. '   ' → logprob: -13.375078201293945
    6. '<|end|>' → logprob: -14.250078201293945
    7. '        
' → logprob: -15.500078201293945
    8. '```' → logprob: -15.625078201293945
    9. '      ' → logprob: -16.000078201293945
    10. 'n' → logprob: -16.125078201293945

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.927930654550437e-05
    2. '           ' → logprob: -11.125029563903809
    3. '
' → logprob: -12.250029563903809
    4. '   ' → logprob: -13.125029563903809
    5. ' if' → logprob: -13.375029563903809
    6. '<|end|>' → logprob: -13.375029563903809
    7. '	' → logprob: -13.625029563903809
    8. '```' → logprob: -14.250029563903809
    9. 'if' → logprob: -14.500029563903809
    10. '​' → logprob: -14.875029563903809

Token 132: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15658901631832123
    2. 'if' (adapté à ' if') → logprob: -2.4065890312194824
    3. ' if' → logprob: -2.9065890312194824
    4. '   ' → logprob: -8.781588554382324
    5. '	if' → logprob: -12.906588554382324
    6. '           ' → logprob: -13.281588554382324
    7. '```' → logprob: -13.781588554382324
    8. ' ' → logprob: -14.406588554382324
    9. 'If' → logprob: -14.906588554382324
    10. '	' → logprob: -15.031588554382324

Token 133: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.25193408131599426
    2. 'count' → logprob: -1.5019340515136719
    3. '(count' → logprob: -12.376934051513672
    4. ' ' → logprob: -14.626934051513672
    5. '	count' → logprob: -15.626934051513672
    6. '[count' → logprob: -16.376934051513672
    7. '$count' → logprob: -17.001934051513672
    8. '<count' → logprob: -17.626934051513672
    9. 'Count' → logprob: -18.001934051513672
    10. 'n' → logprob: -18.126934051513672

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003185436362400651
    2. '>' → logprob: -6.128185272216797
    3. '):' → logprob: -7.878185272216797
    4. ':
' → logprob: -8.003185272216797
    5. ' >' → logprob: -8.753185272216797
    6. '>:' → logprob: -10.128185272216797
    7. '<|end|>' → logprob: -10.753185272216797
    8. ')>' → logprob: -10.753185272216797
    9. ')' → logprob: -11.253185272216797
    10. '):
' → logprob: -11.878185272216797

Token 135: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001249877386726439
    2. ' factors' → logprob: -6.75124979019165
    3. 'f' → logprob: -10.376250267028809
    4. ' f' → logprob: -10.626250267028809
    5. '          ' → logprob: -12.251250267028809
    6. '(f' → logprob: -12.251250267028809
    7. '       ' → logprob: -12.376250267028809
    8. ',' → logprob: -13.126250267028809
    9. '               ' → logprob: -13.501250267028809
    10. '```' → logprob: -13.626250267028809

Token 136: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.007168324198573828
    2. 'f' → logprob: -5.382168292999268
    3. '           ' → logprob: -6.007168292999268
    4. '       ' → logprob: -10.757168769836426
    5. ' f' → logprob: -10.882168769836426
    6. '               ' → logprob: -11.007168769836426
    7. 'factor' → logprob: -11.757168769836426
    8. 'Factors' → logprob: -12.382168769836426
    9. ' factores' → logprob: -12.882168769836426
    10. '```' → logprob: -13.132168769836426

Token 137: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.8232690460281447e-05
    2. '.' → logprob: -10.000048637390137
    3. ' .' → logprob: -13.875048637390137
    4. '.app' → logprob: -14.750048637390137
    5. '           ' → logprob: -14.875048637390137
    6. '.setdefault' → logprob: -15.125048637390137
    7. ').' → logprob: -15.250048637390137
    8. '.Append' → logprob: -15.750048637390137
    9. 'append' → logprob: -16.25004768371582
    10. '.add' → logprob: -16.25004768371582

Token 138: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. ' ((' → logprob: -15.250004768371582
    4. '(f' → logprob: -16.5000057220459
    5. '(((' → logprob: -16.8750057220459
    6. '(
' → logprob: -17.8750057220459
    7. ' ' → logprob: -18.2500057220459
    8. '```' → logprob: -18.7500057220459
    9. '(('' → logprob: -19.0000057220459
    10. '(("' → logprob: -19.8750057220459

Token 139: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.822646693966817e-06
    2. '(f' → logprob: -12.250007629394531
    3. ' f' → logprob: -12.750007629394531
    4. '   ' → logprob: -17.37500762939453
    5. ' (' → logprob: -18.12500762939453
    6. '	f' → logprob: -18.37500762939453
    7. '```' → logprob: -18.37500762939453
    8. ',f' → logprob: -19.37500762939453
    9. 'p' → logprob: -19.50000762939453
    10. '
' → logprob: -19.50000762939453

Token 140: ',count' (ID: 139747)
  Prédit: ',count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',count' → logprob: -0.0031912627164274454
    2. ',' → logprob: -5.7531914710998535
    3. ' ,' → logprob: -11.253190994262695
    4. '[count' → logprob: -15.128190994262695
    5. ',c' → logprob: -17.003190994262695
    6. '<count' → logprob: -17.253190994262695
    7. ',int' → logprob: -17.378190994262695
    8. ',
' → logprob: -17.503190994262695
    9. ',num' → logprob: -18.003190994262695
    10. '=count' → logprob: -18.003190994262695

Token 141: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0015261677326634526
    2. '))
' → logprob: -6.751526355743408
    3. ')' → logprob: -8.00152587890625
    4. '       ' → logprob: -11.25152587890625
    5. ')
' → logprob: -12.50152587890625
    6. ')))' → logprob: -13.37652587890625
    7. '),' → logprob: -13.75152587890625
    8. '))

' → logprob: -14.87652587890625
    9. '));' → logprob: -15.12652587890625
    10. '           ' → logprob: -15.37652587890625

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016587553545832634
    2. '
' → logprob: -6.626658916473389
    3. ' f' → logprob: -8.87665843963623
    4. '   ' → logprob: -9.87665843963623
    5. '        
' → logprob: -9.87665843963623
    6. 'f' → logprob: -10.25165843963623
    7. '	' → logprob: -11.50165843963623
    8. ',' → logprob: -11.87665843963623
    9. '​' → logprob: -12.00165843963623
    10. '           ' → logprob: -12.25165843963623

Token 143: ' f' (ID: 285)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7009646892547607
    2. ' i' → logprob: -1.4509646892547607
    3. 'f' (adapté à ' f') → logprob: -1.7009646892547607
    4. ' f' → logprob: -3.2009646892547607
    5. '       ' → logprob: -3.2009646892547607
    6. '   ' → logprob: -5.20096492767334
    7. ' ' → logprob: -9.70096492767334
    8. '  ' → logprob: -12.07596492767334
    9. '	i' → logprob: -12.45096492767334
    10. '    ' → logprob: -12.70096492767334

Token 144: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018183303996920586
    2. ' +=' → logprob: -4.01818323135376
    3. '=' → logprob: -10.893183708190918
    4. '+' → logprob: -11.268183708190918
    5. ']+=' → logprob: -13.893183708190918
    6. '+=(' → logprob: -14.393183708190918
    7. ' ' → logprob: -15.893183708190918
    8. '+='' → logprob: -16.1431827545166
    9. '```' → logprob: -16.2681827545166
    10. '   ' → logprob: -16.3931827545166

Token 145: ' inc' (ID: 4570)
  Prédit: 'inc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inc' → logprob: -0.001170225441455841
    2. ' inc' → logprob: -6.7511701583862305
    3. ' ' → logprob: -19.501171112060547
    4. 'incs' → logprob: -19.876171112060547
    5. 'increment' → logprob: -19.876171112060547
    6. 'inci' → logprob: -20.251171112060547
    7. 'ince' → logprob: -20.751171112060547
    8. '_inc' → logprob: -20.876171112060547
    9. ' incr' → logprob: -20.876171112060547
    10. ''inc' → logprob: -21.001171112060547

Token 146: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.37500286102295
    3. 'i' → logprob: -13.50000286102295
    4. ' [' → logprob: -17.500003814697266
    5. ' i' → logprob: -18.875003814697266
    6. '[
' → logprob: -19.000003814697266
    7. '   ' → logprob: -19.750003814697266
    8. '1' → logprob: -20.500003814697266
    9. '0' → logprob: -20.625003814697266
    10. '(i' → logprob: -21.000003814697266

Token 147: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.020964689552783966
    2. '])
' → logprob: -4.020964622497559
    3. ']' → logprob: -5.895964622497559
    4. '])
' → logprob: -10.395964622497559
    5. ']);' → logprob: -11.895964622497559
    6. ']
' → logprob: -11.895964622497559
    7. '])

' → logprob: -12.145964622497559
    8. ')' → logprob: -12.520964622497559
    9. ' ])' → logprob: -12.770964622497559
    10. '%' → logprob: -14.145964622497559

Token 148: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11085718870162964
    2. '       ' → logprob: -2.7358572483062744
    3. 'i' → logprob: -3.6108572483062744
    4. ' i' → logprob: -4.360857009887695
    5. '	i' → logprob: -8.860857009887695
    6. '```' → logprob: -9.735857009887695
    7. '<|end|>' → logprob: -10.735857009887695
    8. '0' → logprob: -11.110857009887695
    9. ' ' → logprob: -11.235857009887695
    10. '
' → logprob: -11.235857009887695

Token 149: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0009153862483799458
    2. ' i' → logprob: -7.00091552734375
    3. '       ' → logprob: -12.50091552734375
    4. '   ' → logprob: -16.87591552734375
    5. '(i' → logprob: -17.37591552734375
    6. '```' → logprob: -18.12591552734375
    7. '
' → logprob: -18.25091552734375
    8. '1' → logprob: -18.25091552734375
    9. '	i' → logprob: -19.00091552734375
    10. '0' → logprob: -19.62591552734375

Token 150: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012433602474629879
    2. '=' → logprob: -4.5124335289001465
    3. ' +=' → logprob: -7.0124335289001465
    4. '+' → logprob: -7.6374335289001465
    5. ' =' → logprob: -13.387434005737305
    6. '%=' → logprob: -15.262434005737305
    7. ']+=' → logprob: -16.137434005737305
    8. '++' → logprob: -16.887434005737305
    9. '+='' → logprob: -17.637434005737305
    10. '```' → logprob: -18.137434005737305

Token 151: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.011053359135985374
    2. ' (' → logprob: -4.511053562164307
    3. '(' → logprob: -12.386053085327148
    4. '(I' → logprob: -14.386053085327148
    5. '0' → logprob: -15.386053085327148
    6. '(in' → logprob: -15.511053085327148
    7. '(ii' → logprob: -15.636053085327148
    8. ' ' → logprob: -16.13605308532715
    9. '   ' → logprob: -17.01105308532715
    10. '1' → logprob: -17.13605308532715

Token 152: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019514684099704027
    2. '(i' → logprob: -6.251951694488525
    3. ' i' → logprob: -10.751951217651367
    4. ' (' → logprob: -13.501951217651367
    5. '{i' → logprob: -18.876951217651367
    6. '	i' → logprob: -19.501951217651367
    7. '0' → logprob: -19.876951217651367
    8. '(' → logprob: -20.001951217651367
    9. '1' → logprob: -20.501951217651367
    10. '_i' → logprob: -20.751951217651367

Token 153: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2053309977054596
    2. 'i' → logprob: -1.7053309679031372
    3. ' +' → logprob: -6.705330848693848
    4. '(i' → logprob: -6.830330848693848
    5. '+i' → logprob: -6.955330848693848
    6. '1' → logprob: -7.580330848693848
    7. ' i' → logprob: -9.080330848693848
    8. ' ' → logprob: -12.080330848693848
    9. '[i' → logprob: -12.205330848693848
    10. '(' → logprob: -12.330330848693848

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -21.625
    4. '7' → logprob: -21.625
    5. '```' → logprob: -22.5
    6. 'i' → logprob: -23.125
    7. '  ' → logprob: -23.375
    8. ')' → logprob: -23.4375
    9. '<|end|>' → logprob: -23.625
    10. '１' → logprob: -23.625

Token 155: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014120421838015318
    2. ')%' → logprob: -8.875141143798828
    3. '%' → logprob: -14.125141143798828
    4. ' )' → logprob: -14.250141143798828
    5. '8' → logprob: -16.875141143798828
    6. ']' → logprob: -17.750141143798828
    7. '1' → logprob: -18.125141143798828
    8. '%)' → logprob: -19.000141143798828
    9. '```' → logprob: -19.125141143798828
    10. '}' → logprob: -19.250141143798828

Token 156: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00026205103495158255
    2. 'len' → logprob: -8.250262260437012
    3. ' ' → logprob: -14.750262260437012
    4. ' len' → logprob: -15.000262260437012
    5. '(len' → logprob: -19.375261306762695
    6. '  ' → logprob: -21.125261306762695
    7. '```' → logprob: -21.125261306762695
    8. 'length' → logprob: -21.750261306762695
    9. '   ' → logprob: -21.875261306762695
    10. '	len' → logprob: -22.250261306762695

Token 157: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026784030720591545
    2. '
' → logprob: -3.7767839431762695
    3. 'return' → logprob: -6.1517839431762695
    4. 'if' → logprob: -7.4017839431762695
    5. '    
' → logprob: -7.7767839431762695
    6. ' if' → logprob: -8.65178394317627
    7. ' return' → logprob: -8.77678394317627
    8. '  
' → logprob: -10.90178394317627
    9. '        
' → logprob: -11.77678394317627
    10. '<|end|>' → logprob: -12.77678394317627

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005295606097206473
    2. '
' → logprob: -8.250529289245605
    3. 'return' → logprob: -9.375529289245605
    4. ' if' → logprob: -9.500529289245605
    5. 'if' → logprob: -10.250529289245605
    6. ' return' → logprob: -10.625529289245605
    7. '```' → logprob: -10.750529289245605
    8. '    
' → logprob: -10.750529289245605
    9. '<|end|>' → logprob: -12.750529289245605
    10. '  
' → logprob: -14.250529289245605

Token 159: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03455379977822304
    2. '   ' → logprob: -4.0345540046691895
    3. ' if' → logprob: -4.5345540046691895
    4. 'return' → logprob: -5.2845540046691895
    5. '
' → logprob: -7.7845540046691895
    6. ' return' → logprob: -10.034553527832031
    7. '```' → logprob: -12.409553527832031
    8. '    
' → logprob: -12.784553527832031
    9. ' ' → logprob: -14.659553527832031
    10. '	if' → logprob: -14.909553527832031

Token 160: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.014163628220558167
    2. 'n' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.139163970947266
    4. '	n' → logprob: -17.139163970947266
    5. ' ' → logprob: -17.389163970947266
    6. '>' → logprob: -19.014163970947266
    7. '_n' → logprob: -19.389163970947266
    8. '(n' → logprob: -19.514163970947266
    9. '```' → logprob: -19.764163970947266
    10. '   ' → logprob: -19.764163970947266

Token 161: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11283507198095322
    2. ' >' → logprob: -2.237835168838501
    3. ' ' → logprob: -11.737834930419922
    4. '   ' → logprob: -13.112834930419922
    5. ' ' → logprob: -13.862834930419922
    6. '">' → logprob: -14.612834930419922
    7. '```' → logprob: -15.112834930419922
    8. '1' → logprob: -15.237834930419922
    9. '  ' → logprob: -15.612834930419922
    10. '&gt' → logprob: -15.737834930419922

Token 162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.125335693359375
    4. '```' → logprob: -16.625335693359375
    5. '  ' → logprob: -18.625335693359375
    6. 'import' → logprob: -19.125335693359375
    7. '>' → logprob: -19.375335693359375
    8. '۱' → logprob: -19.875335693359375
    9. '<|end|>' → logprob: -20.000335693359375
    10. '
' → logprob: -20.500335693359375

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -19.500015258789062
    4. '```' → logprob: -19.625015258789062
    5. '１' → logprob: -21.000015258789062
    6. '  ' → logprob: -21.500015258789062
    7. '2' → logprob: -21.625015258789062
    8. '۱' → logprob: -22.125015258789062
    9. '
' → logprob: -22.875015258789062
    10. '    ' → logprob: -23.125015258789062

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02355385199189186
    2. ':
' → logprob: -3.7735538482666016
    3. '       ' → logprob: -8.398553848266602
    4. '   ' → logprob: -9.898553848266602
    5. ' factors' → logprob: -11.023553848266602
    6. ' :' → logprob: -12.398553848266602
    7. '):
' → logprob: -13.273553848266602
    8. '):' → logprob: -13.273553848266602
    9. ':
' → logprob: -13.523553848266602
    10. ' :
' → logprob: -13.523553848266602

Token 165: '       ' (ID: 309)
  Prédit: ' factors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.226194828748703
    2. '       ' → logprob: -1.6011948585510254
    3. 'f' → logprob: -7.726194858551025
    4. '   ' → logprob: -8.101194381713867
    5. ' f' → logprob: -11.226194381713867
    6. ' factores' → logprob: -11.726194381713867
    7. ' facteurs' → logprob: -12.601194381713867
    8. 'Factors' → logprob: -13.226194381713867
    9. '           ' → logprob: -13.351194381713867
    10. ' factoren' → logprob: -13.601194381713867

Token 166: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.2520080506801605
    2. 'f' → logprob: -1.502008080482483
    3. '       ' → logprob: -9.877008438110352
    4. ' f' → logprob: -11.752008438110352
    5. '   ' → logprob: -11.877008438110352
    6. 'factor' → logprob: -12.252008438110352
    7. ' factores' → logprob: -13.502008438110352
    8. '	f' → logprob: -13.502008438110352
    9. 'Factors' → logprob: -13.627008438110352
    10. '           ' → logprob: -14.002008438110352

Token 167: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00024287392443511635
    2. '.' → logprob: -8.375243186950684
    3. ' .' → logprob: -11.375243186950684
    4. '.setdefault' → logprob: -15.125243186950684
    5. '   ' → logprob: -15.750243186950684
    6. 'append' → logprob: -16.000242233276367
    7. '.Append' → logprob: -16.500242233276367
    8. ').' → logprob: -17.125242233276367
    9. '.app' → logprob: -17.250242233276367
    10. '           ' → logprob: -17.500242233276367

Token 168: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00034583290107548237
    2. '(' → logprob: -8.000346183776855
    3. '(n' → logprob: -11.500346183776855
    4. ' ((' → logprob: -15.875346183776855
    5. ' (' → logprob: -16.50034523010254
    6. '(
' → logprob: -18.12534523010254
    7. ' ' → logprob: -19.62534523010254
    8. '```' → logprob: -20.50034523010254
    9. '(('' → logprob: -20.62534523010254
    10. '(((' → logprob: -21.12534523010254

Token 169: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.127333340875339e-06
    2. '(n' → logprob: -13.000003814697266
    3. ' n' → logprob: -13.250003814697266
    4. '   ' → logprob: -17.875003814697266
    5. '(' → logprob: -18.500003814697266
    6. '	n' → logprob: -18.875003814697266
    7. ' (' → logprob: -19.000003814697266
    8. ',n' → logprob: -19.375003814697266
    9. '```' → logprob: -19.750003814697266
    10. ',' → logprob: -19.875003814697266

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ' ,' → logprob: -12.375007629394531
    3. '1' → logprob: -12.750007629394531
    4. ',
' → logprob: -14.750007629394531
    5. '   ' → logprob: -18.62500762939453
    6. '```' → logprob: -18.87500762939453
    7. '
' → logprob: -19.37500762939453
    8. ',

' → logprob: -20.50000762939453
    9. '),' → logprob: -20.62500762939453
    10. '‌,' → logprob: -20.75000762939453

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -19.6250057220459
    4. '```' → logprob: -19.7500057220459
    5. ')' → logprob: -22.2500057220459
    6. '  ' → logprob: -22.5000057220459
    7. '
' → logprob: -22.8750057220459
    8. '))' → logprob: -22.8750057220459
    9. '１' → logprob: -23.1250057220459
    10. '۱' → logprob: -23.5000057220459

Token 172: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.036390211433172226
    2. '))
' → logprob: -3.5363903045654297
    3. ')' → logprob: -5.03639030456543
    4. ')
' → logprob: -9.03639030456543
    5. '))

' → logprob: -13.91139030456543
    6. '))
' → logprob: -15.03639030456543
    7. ')))' → logprob: -15.78639030456543
    8. '   ' → logprob: -16.03639030456543
    9. ')}' → logprob: -17.41139030456543
    10. ' ))' → logprob: -17.41139030456543

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008237993461079895
    2. 'return' → logprob: -7.375823974609375
    3. ' return' → logprob: -9.375823974609375
    4. '
' → logprob: -9.500823974609375
    5. '    
' → logprob: -10.375823974609375
    6. '	return' → logprob: -12.250823974609375
    7. ':return' → logprob: -14.000823974609375
    8. '       ' → logprob: -15.375823974609375
    9. '@return' → logprob: -16.375823974609375
    10. '```' → logprob: -16.375823974609375

Token 174: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08793178200721741
    2. '   ' → logprob: -2.5879318714141846
    3. ' return' → logprob: -4.7129316329956055
    4. '	return' → logprob: -11.212931632995605
    5. '
' → logprob: -12.212931632995605
    6. ':return' → logprob: -13.337931632995605
    7. '    
' → logprob: -13.712931632995605
    8. '       ' → logprob: -15.087931632995605
    9. '```' → logprob: -15.087931632995605
    10. ' ' → logprob: -15.462931632995605

Token 175: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1797735095024109
    2. ' factors' → logprob: -1.8047735691070557
    3. ' f' → logprob: -10.929773330688477
    4. 'factor' → logprob: -12.679773330688477
    5. '(f' → logprob: -13.429773330688477
    6. '   ' → logprob: -13.429773330688477
    7. ' ' → logprob: -13.679773330688477
    8. 'Factors' → logprob: -13.929773330688477
    9. '[f' → logprob: -14.179773330688477
    10. 'fact' → logprob: -14.929773330688477

Token 176: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2596112787723541
    2. '<|end|>' → logprob: -1.5096112489700317
    3. '\n' → logprob: -6.259611129760742
    4. '

' → logprob: -6.634611129760742
    5. 'def' → logprob: -6.634611129760742
    6. '```' → logprob: -7.384611129760742
    7. '<|end|>' → logprob: -7.509611129760742
    8. 'newline' → logprob: -7.759611129760742
    9. '[' → logprob: -8.259611129760742
    10. '(' → logprob: -8.259611129760742

Token 177: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16149656474590302
    2. '
' → logprob: -1.9114965200424194
    3. '\n' → logprob: -8.03649616241455
    4. '

' → logprob: -8.03649616241455
    5. 'n' → logprob: -8.78649616241455
    6. '<|end|>' → logprob: -9.03649616241455
    7. '```' → logprob: -9.41149616241455
    8. ' 
' → logprob: -9.91149616241455
    9. '\' → logprob: -10.03649616241455
    10. '#' → logprob: -10.28649616241455

Token 178: ' divisor' (ID: 100482)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3484897017478943
    2. ' gcd' → logprob: -1.598489761352539
    3. ' is' → logprob: -2.473489761352539
    4. ' l' → logprob: -5.848489761352539
    5. 'main' → logprob: -6.348489761352539
    6. ' factorial' → logprob: -7.223489761352539
    7. 'g' → logprob: -7.348489761352539
    8. ' fibonacci' → logprob: -7.473489761352539
    9. 'is' → logprob: -7.598489761352539
    10. ' sieve' → logprob: -8.223489761352539

Token 179: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3517060875892639
    2. '_' → logprob: -1.3517060279846191
    3. '_count' → logprob: -4.351706027984619
    4. '_s' → logprob: -4.601706027984619
    5. '_list' → logprob: -4.726706027984619
    6. '_sum' → logprob: -6.226706027984619
    7. '_counts' → logprob: -6.601706027984619
    8. '(' → logprob: -7.851706027984619
    9. '_(' → logprob: -8.101706504821777
    10. '_function' → logprob: -8.351706504821777

Token 180: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16028718650341034
    2. '(' → logprob: -1.9102871417999268
    3. ' (' → logprob: -9.910286903381348
    4. '(N' → logprob: -11.535286903381348
    5. '(num' → logprob: -13.410286903381348
    6. '(
' → logprob: -14.535286903381348
    7. '(s' → logprob: -14.910286903381348
    8. '(def' → logprob: -15.660286903381348
    9. '(

' → logprob: -16.035287857055664
    10. '(nn' → logprob: -16.160287857055664

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0619998462498188
    2. '):
' → logprob: -2.811999797821045
    3. '):
' → logprob: -10.687000274658203
    4. ')' → logprob: -11.812000274658203
    5. '):

' → logprob: -13.812000274658203
    6. '(n' → logprob: -14.687000274658203
    7. ':' → logprob: -15.687000274658203
    8. ' ):' → logprob: -15.812000274658203
    9. '   ' → logprob: -16.687000274658203
    10. ')：' → logprob: -18.062000274658203

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00035453110467642546
    2. ' count' → logprob: -8.125354766845703
    3. 'count' → logprob: -10.500354766845703
    4. ' counts' → logprob: -11.750354766845703
    5. '	count' → logprob: -12.125354766845703
    6. '    
' → logprob: -12.125354766845703
    7. '    ' → logprob: -12.875354766845703
    8. ' counter' → logprob: -13.500354766845703
    9. ' return' → logprob: -13.750354766845703
    10. ' total' → logprob: -13.875354766845703

Token 183: ' res' (ID: 694)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.3135232925415039
    2. 'count' → logprob: -2.063523292541504
    3. '   ' → logprob: -2.188523292541504
    4. ' result' → logprob: -4.063523292541504
    5. ' cnt' → logprob: -5.438523292541504
    6. 'result' → logprob: -5.938523292541504
    7. ' factors' → logprob: -6.188523292541504
    8. ' res' → logprob: -7.188523292541504
    9. ' return' → logprob: -7.313523292541504
    10. ' if' → logprob: -7.313523292541504

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023245453834534
    2. '=' → logprob: -1.910232424736023
    3. '   ' → logprob: -12.660232543945312
    4. ' ' → logprob: -13.660232543945312
    5. 'def' → logprob: -13.910232543945312
    6. ' =
' → logprob: -14.035232543945312
    7. '_' → logprob: -14.285232543945312
    8. ' +=' → logprob: -15.160232543945312
    9. ',' → logprob: -15.285232543945312
    10. '  ' → logprob: -15.410232543945312

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003385614836588502
    2. ' ' → logprob: -8.000338554382324
    3. '   ' → logprob: -12.875338554382324
    4. '0' → logprob: -16.12533950805664
    5. '```' → logprob: -16.18783950805664
    6. '=' → logprob: -16.37533950805664
    7. '  ' → logprob: -17.00033950805664
    8. '2' → logprob: -17.12533950805664
    9. 'def' → logprob: -17.18783950805664
    10. 'res' → logprob: -17.50033950805664

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -16.187503814697266
    4. '   ' → logprob: -16.375003814697266
    5. '=' → logprob: -16.937503814697266
    6. '`' → logprob: -17.937503814697266
    7. 'res' → logprob: -18.000003814697266
    8. 'n' → logprob: -18.062503814697266
    9. '۱' → logprob: -18.312503814697266
    10. '１' → logprob: -18.562503814697266

Token 187: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36378929018974304
    2. '
' → logprob: -1.8637893199920654
    3. 'def' → logprob: -3.1137893199920654
    4. 'for' → logprob: -3.4887893199920654
    5. '    
' → logprob: -3.6137893199920654
    6. ' for' → logprob: -4.488789081573486
    7. ',' → logprob: -4.488789081573486
    8. '   
' → logprob: -5.238789081573486
    9. ' 
' → logprob: -5.488789081573486
    10. '  
' → logprob: -5.738789081573486

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34929537773132324
    2. 'for' → logprob: -2.2242953777313232
    3. ' for' → logprob: -2.7242953777313232
    4. '
' → logprob: -2.9742953777313232
    5. 'def' → logprob: -2.9742953777313232
    6. '*' → logprob: -5.099295616149902
    7. '    
' → logprob: -5.349295616149902
    8. ':
' → logprob: -5.974295616149902
    9. ',' → logprob: -6.974295616149902
    10. ' *' → logprob: -6.974295616149902

Token 189: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001421187655068934
    2. ' for' → logprob: -6.751420974731445
    3. '   ' → logprob: -8.376420974731445
    4. 'f' → logprob: -11.376420974731445
    5. '
' → logprob: -12.751420974731445
    6. 'def' → logprob: -13.126420974731445
    7. 'import' → logprob: -13.626420974731445
    8. 'factor' → logprob: -14.251420974731445
    9. 'pf' → logprob: -14.751420974731445
    10. '	for' → logprob: -14.751420974731445

Token 190: ' _,' (ID: 18042)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.46472039818763733
    2. ' p' → logprob: -1.089720368385315
    3. '_,' → logprob: -4.339720249176025
    4. ' _,' → logprob: -4.839720249176025
    5. '(_,' → logprob: -5.589720249176025
    6. ' prime' → logprob: -5.714720249176025
    7. 'prime' → logprob: -5.964720249176025
    8. ' (' → logprob: -6.839720249176025
    9. '(' → logprob: -7.214720249176025
    10. 'f' → logprob: -7.214720249176025

Token 191: ' c' (ID: 274)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.16820403933525085
    2. 'e' → logprob: -2.6682040691375732
    3. 'ex' → logprob: -2.9182040691375732
    4. 'cnt' → logprob: -3.6682040691375732
    5. 'count' → logprob: -5.668203830718994
    6. 'c' → logprob: -6.418203830718994
    7. ' exp' → logprob: -7.543203830718994
    8. 'expo' → logprob: -9.543204307556152
    9. ' cnt' → logprob: -9.793204307556152
    10. 'pow' → logprob: -9.793204307556152

Token 192: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05506463348865509
    2. 'in' → logprob: -2.9300646781921387
    3. 'n' → logprob: -9.68006420135498
    4. 'c' → logprob: -10.80506420135498
    5. ' ' → logprob: -10.80506420135498
    6. 'ount' → logprob: -11.30506420135498
    7. 's' → logprob: -11.43006420135498
    8. '   ' → logprob: -11.43006420135498
    9. 'o' → logprob: -11.80506420135498
    10. 't' → logprob: -12.30506420135498

Token 193: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -4.56102097814437e-05
    2. ' prime' → logprob: -10.000045776367188
    3. 'primer' → logprob: -17.000045776367188
    4. 'pr' → logprob: -17.000045776367188
    5. '_prime' → logprob: -17.750045776367188
    6. 'prim' → logprob: -18.250045776367188
    7. '   ' → logprob: -18.375045776367188
    8. 'factor' → logprob: -19.000045776367188
    9. ' ' → logprob: -20.250045776367188
    10. '
' → logprob: -20.750045776367188

Token 194: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0019395847339183092
    2. 'f' → logprob: -6.25193977355957
    3. '_factor' → logprob: -12.12693977355957
    4. ' factors' → logprob: -14.00193977355957
    5. 'def' → logprob: -14.12693977355957
    6. '_count' → logprob: -14.25193977355957
    7. 'Factors' → logprob: -14.50193977355957
    8. 'factor' → logprob: -14.62693977355957
    9. '_' → logprob: -15.00193977355957
    10. '```' → logprob: -15.12693977355957

Token 195: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.00012190054985694587
    2. 'f' → logprob: -9.1251220703125
    3. 'actor' → logprob: -11.6251220703125
    4. 'ctors' → logprob: -13.0001220703125
    5. '_f' → logprob: -13.6251220703125
    6. 'acters' → logprob: -16.2501220703125
    7. 'Factors' → logprob: -16.6251220703125
    8. ' factors' → logprob: -16.6251220703125
    9. 'ators' → logprob: -16.8751220703125
    10. 'act' → logprob: -17.0001220703125

Token 196: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.935296834039036e-06
    2. ' (' → logprob: -12.87500286102295
    3. '(' → logprob: -15.12500286102295
    4. 'def' → logprob: -17.875003814697266
    5. '```' → logprob: -19.125003814697266
    6. ')' → logprob: -19.375003814697266
    7. 'n' → logprob: -19.625003814697266
    8. '(noun' → logprob: -20.000003814697266
    9. ',n' → logprob: -20.375003814697266
    10. ',' → logprob: -20.500003814697266

Token 197: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20154441893100739
    2. '):' → logprob: -1.7015444040298462
    3. '():
' → logprob: -10.076544761657715
    4. '):
' → logprob: -10.201544761657715
    5. '()):
' → logprob: -10.576544761657715
    6. '):

' → logprob: -11.951544761657715
    7. ')' → logprob: -12.076544761657715
    8. '   ' → logprob: -12.451544761657715
    9. ' ):
' → logprob: -12.826544761657715
    10. ' ):' → logprob: -13.326544761657715

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006512271240353584
    2. 'res' → logprob: -5.50651216506958
    3. ':
' → logprob: -6.75651216506958
    4. ' res' → logprob: -7.38151216506958
    5. ':' → logprob: -8.006512641906738
    6. '
' → logprob: -9.506512641906738
    7. '        
' → logprob: -9.881512641906738
    8. ',' → logprob: -10.131512641906738
    9. '   ' → logprob: -10.131512641906738
    10. '(res' → logprob: -10.881512641906738

Token 199: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.6113032698631287
    2. ' res' → logprob: -0.8613032698631287
    3. '       ' → logprob: -3.3613033294677734
    4. '   ' → logprob: -9.986303329467773
    5. '
' → logprob: -12.361303329467773
    6. '	res' → logprob: -12.486303329467773
    7. '           ' → logprob: -14.486303329467773
    8. '_res' → logprob: -15.236303329467773
    9. ' ' → logprob: -15.611303329467773
    10. '```' → logprob: -15.736303329467773

Token 200: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.004954208619892597
    2. ' *=' → logprob: -5.5049543380737305
    3. '*' → logprob: -7.1299543380737305
    4. '=' → logprob: -10.25495433807373
    5. '```' → logprob: -10.87995433807373
    6. '   ' → logprob: -11.00495433807373
    7. '	' → logprob: -13.12995433807373
    8. '**' → logprob: -14.50495433807373
    9. ' ' → logprob: -14.87995433807373
    10. ' ' → logprob: -15.00495433807373

Token 201: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.018172889947891235
    2. ' (' → logprob: -4.018172740936279
    3. 'c' → logprob: -11.268173217773438
    4. '(' → logprob: -12.018173217773438
    5. ' c' → logprob: -12.393173217773438
    6. '   ' → logprob: -18.518173217773438
    7. ' ' → logprob: -18.643173217773438
    8. '
' → logprob: -19.518173217773438
    9. '```' → logprob: -19.768173217773438
    10. '(count' → logprob: -20.268173217773438

Token 202: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.493430894101039e-05
    2. ' c' → logprob: -9.500075340270996
    3. '(c' → logprob: -18.75007438659668
    4. ')c' → logprob: -21.75007438659668
    5. '	c' → logprob: -22.25007438659668
    6. ' (' → logprob: -23.12507438659668
    7. '   ' → logprob: -23.50007438659668
    8. '
' → logprob: -24.37507438659668
    9. 'count' → logprob: -24.62507438659668
    10. '(' → logprob: -24.75007438659668

Token 203: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132617771625519
    2. ' +' → logprob: -1.3132617473602295
    3. '＋' → logprob: -17.313261032104492
    4. '()+' → logprob: -17.438261032104492
    5. ' plus' → logprob: -17.938261032104492
    6. ' +
' → logprob: -17.938261032104492
    7. '+
' → logprob: -18.313261032104492
    8. ' ' → logprob: -18.313261032104492
    9. ' ' → logprob: -19.438261032104492
    10. '   ' → logprob: -19.563261032104492

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -18.1250057220459
    4. '```' → logprob: -18.1250057220459
    5. '   ' → logprob: -19.2500057220459
    6. '`' → logprob: -22.7500057220459
    7. '１' → logprob: -23.1250057220459
    8. '  ' → logprob: -23.1250057220459
    9. ' )' → logprob: -23.6250057220459
    10. '
' → logprob: -23.7500057220459

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003372502396814525
    2. ')
' → logprob: -8.000337600708008
    3. ' )' → logprob: -13.375337600708008
    4. ')

' → logprob: -16.375337600708008
    5. ')return' → logprob: -16.625337600708008
    6. ')
' → logprob: -17.250337600708008
    7. '   ' → logprob: -17.375337600708008
    8. ' )
' → logprob: -18.625337600708008
    9. '),' → logprob: -19.250337600708008
    10. ')#' → logprob: -19.375337600708008

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17437905073165894
    2. ' return' → logprob: -2.4243791103363037
    3. 'return' → logprob: -2.6743791103363037
    4. '
' → logprob: -6.049378871917725
    5. '    
' → logprob: -9.049379348754883
    6. '	return' → logprob: -10.674379348754883
    7. ' 
' → logprob: -10.924379348754883
    8. '```' → logprob: -11.924379348754883
    9. '  
' → logprob: -12.174379348754883
    10. ' ' → logprob: -13.049379348754883

Token 207: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3181784451007843
    2. ' return' → logprob: -1.318178415298462
    3. '   ' → logprob: -5.318178653717041
    4. '
' → logprob: -13.318178176879883
    5. ' ' → logprob: -14.193178176879883
    6. '	return' → logprob: -14.443178176879883
    7. '  ' → logprob: -16.693178176879883
    8. ':return' → logprob: -18.318178176879883
    9. '```' → logprob: -18.318178176879883
    10. '    
' → logprob: -19.318178176879883

Token 208: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0485873706638813
    2. ' res' → logprob: -3.0485873222351074
    3. '(res' → logprob: -19.298587799072266
    4. '	res' → logprob: -20.798587799072266
    5. '$res' → logprob: -21.548587799072266
    6. ' ' → logprob: -21.673587799072266
    7. '   ' → logprob: -21.673587799072266
    8. '_res' → logprob: -22.548587799072266
    9. ',res' → logprob: -23.673587799072266
    10. ' ' → logprob: -23.673587799072266

Token 209: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005461782682687044
    2. '
' → logprob: -5.630461692810059
    3. '<|end|>' → logprob: -6.880461692810059
    4. '```' → logprob: -7.630461692810059
    5. 'print' → logprob: -9.130461692810059
    6. '#' → logprob: -10.005461692810059
    7. '\' → logprob: -10.130461692810059
    8. 'n' → logprob: -10.255461692810059
    9. '\n' → logprob: -10.630461692810059
    10. '

' → logprob: -11.005461692810059

Token 210: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.2723104848410003e-05
    2. 'n' → logprob: -11.500022888183594
    3. 'for' → logprob: -12.250022888183594
    4. '
' → logprob: -13.375022888183594
    5. 'print' → logprob: -13.375022888183594
    6. '```' → logprob: -13.500022888183594
    7. 'import' → logprob: -13.625022888183594
    8. '\' → logprob: -14.375022888183594
    9. '#' → logprob: -14.750022888183594
    10. ' def' → logprob: -15.375022888183594

Token 211: ' line' (ID: 2543)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8009216785430908
    2. ' i' → logprob: -1.4259216785430908
    3. ' num' → logprob: -1.6759216785430908
    4. ' x' → logprob: -3.050921678543091
    5. ' _' → logprob: -3.300921678543091
    6. ' line' → logprob: -3.925921678543091
    7. ' arg' → logprob: -4.675921440124512
    8. ' number' → logprob: -5.300921440124512
    9. ' ' → logprob: -5.550921440124512
    10. 'n' → logprob: -7.550921440124512

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002206047298386693
    2. 'in' → logprob: -6.127205848693848
    3. ' ' → logprob: -10.877205848693848
    4. '  ' → logprob: -14.502205848693848
    5. 's' → logprob: -14.502205848693848
    6. '_' → logprob: -14.752205848693848
    7. '[' → logprob: -16.252206802368164
    8. '_in' → logprob: -16.252206802368164
    9. ' ' → logprob: -16.252206802368164
    10. '	in' → logprob: -16.377206802368164

Token 213: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16022615134716034
    2. ' sys' → logprob: -1.9102261066436768
    3. '	sys' → logprob: -14.035225868225098
    4. '=sys' → logprob: -14.410225868225098
    5. '(sys' → logprob: -14.660225868225098
    6. '```' → logprob: -16.160226821899414
    7. 'stdin' → logprob: -18.035226821899414
    8. 'iter' → logprob: -18.660226821899414
    9. 'import' → logprob: -19.035226821899414
    10. '`' → logprob: -19.410226821899414

Token 214: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.005820717662572861
    2. 'stdin' → logprob: -5.2558207511901855
    3. '.readline' → logprob: -7.6308207511901855
    4. '(stdin' → logprob: -10.005820274353027
    5. 'in' → logprob: -10.755820274353027
    6. ' stdin' → logprob: -11.005820274353027
    7. 'import' → logprob: -11.630820274353027
    8. '.' → logprob: -12.630820274353027
    9. '.readlines' → logprob: -13.630820274353027
    10. 'input' → logprob: -13.630820274353027

Token 215: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009682760573923588
    2. '.readline' → logprob: -7.6259684562683105
    3. ':
' → logprob: -7.7509684562683105
    4. '.readlines' → logprob: -10.875967979431152
    5. '.strip' → logprob: -10.875967979431152
    6. '.rstrip' → logprob: -12.250967979431152
    7. '.' → logprob: -13.375967979431152
    8. '):' → logprob: -13.625967979431152
    9. ' in' → logprob: -13.750967979431152
    10. ' :' → logprob: -14.375967979431152

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06400786340236664
    2. ' n' → logprob: -2.8140077590942383
    3. 'n' → logprob: -6.814007759094238
    4. ' line' → logprob: -7.189007759094238
    5. ' if' → logprob: -9.564007759094238
    6. '    
' → logprob: -9.814007759094238
    7. '```' → logprob: -11.314007759094238
    8. '	n' → logprob: -11.564007759094238
    9. ' input' → logprob: -11.814007759094238
    10. '   ' → logprob: -12.439007759094238

Token 217: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08251529932022095
    2. ' n' → logprob: -2.707515239715576
    3. 'x' → logprob: -4.582515239715576
    4. '   ' → logprob: -6.582515239715576
    5. ' x' → logprob: -7.707515239715576
    6. 'num' → logprob: -8.457515716552734
    7. 'a' → logprob: -9.957515716552734
    8. 'm' → logprob: -10.082515716552734
    9. 'N' → logprob: -10.207515716552734
    10. 'k' → logprob: -10.457515716552734

Token 218: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5938756465911865
    2. ' line' → logprob: -0.8438756465911865
    3. 'line' → logprob: -4.343875885009766
    4. 'not' → logprob: -5.343875885009766
    5. ' ' → logprob: -11.718875885009766
    6. '=line' → logprob: -13.468875885009766
    7. '#line' → logprob: -14.093875885009766
    8. '(line' → logprob: -14.468875885009766
    9. ' len' → logprob: -14.468875885009766
    10. '	line' → logprob: -14.593875885009766

Token 219: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.04702920466661453
    2. '.' → logprob: -3.7970292568206787
    3. '.startswith' → logprob: -3.7970292568206787
    4. '.rstrip' → logprob: -6.9220290184021
    5. ' .' → logprob: -10.172029495239258
    6. 'startswith' → logprob: -11.172029495239258
    7. 'strip' → logprob: -11.422029495239258
    8. ' ==' → logprob: -12.172029495239258
    9. '.endswith' → logprob: -12.547029495239258
    10. ' strip' → logprob: -13.047029495239258

Token 220: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.274830937385559
    2. ' ==' → logprob: -1.274830937385559
    3. '()==' → logprob: -1.274830937385559
    4. '==' → logprob: -2.5248308181762695
    5. '():' → logprob: -2.5248308181762695
    6. ':' → logprob: -6.8998308181762695
    7. '():
' → logprob: -7.8998308181762695
    8. '()=="' → logprob: -11.02483081817627
    9. ')==' → logprob: -12.39983081817627
    10. ' ():' → logprob: -12.52483081817627

Token 221: '=='' (ID: 20651)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2046234905719757
    2. ' ==' → logprob: -1.7046234607696533
    3. ':' → logprob: -5.829623699188232
    4. '>' → logprob: -9.079623222351074
    5. '.startswith' → logprob: -9.579623222351074
    6. 'and' → logprob: -11.204623222351074
    7. '!=' → logprob: -11.329623222351074
    8. '=='' → logprob: -11.329623222351074
    9. '=' → logprob: -11.579623222351074
    10. ' and' → logprob: -12.204623222351074

Token 222: '':' (ID: 2337)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00037251986213959754
    2. ''' → logprob: -8.625372886657715
    3. '':' → logprob: -9.375372886657715
    4. ' ' → logprob: -10.125372886657715
    5. '''' → logprob: -10.750372886657715
    6. 'END' → logprob: -11.500372886657715
    7. '"' → logprob: -11.500372886657715
    8. 'exit' → logprob: -11.625372886657715
    9. '```' → logprob: -12.500372886657715
    10. '#' → logprob: -12.750372886657715

Token 223: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07161204516887665
    2. '   ' → logprob: -2.8216121196746826
    3. ' break' → logprob: -4.6966118812561035
    4. 'break' → logprob: -7.6966118812561035
    5. '	break' → logprob: -11.321612358093262
    6. ' continue' → logprob: -13.071612358093262
    7. 'continue' → logprob: -13.696612358093262
    8. ' ' → logprob: -14.071612358093262
    9. '           ' → logprob: -14.696612358093262
    10. '```' → logprob: -15.446612358093262

Token 224: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017737559974193573
    2. ' n' → logprob: -4.26773738861084
    3. 'n' → logprob: -5.64273738861084
    4. '    
' → logprob: -12.39273738861084
    5. '       ' → logprob: -12.39273738861084
    6. ' number' → logprob: -12.51773738861084
    7. '	n' → logprob: -13.01773738861084
    8. 'a' → logprob: -13.26773738861084
    9. '```' → logprob: -13.51773738861084
    10. '
' → logprob: -13.64273738861084

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012556739151477814
    2. ' n' → logprob: -4.637556552886963
    3. 'n' → logprob: -5.887556552886963
    4. ' number' → logprob: -12.262557029724121
    5. 'a' → logprob: -12.512557029724121
    6. '```' → logprob: -12.512557029724121
    7. ' num' → logprob: -13.262557029724121
    8. 'num' → logprob: -13.262557029724121
    9. '    
' → logprob: -13.637557029724121
    10. '       ' → logprob: -13.637557029724121

Token 226: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0955841988325119
    2. '   ' → logprob: -3.3455841541290283
    3. ' n' → logprob: -3.5955841541290283
    4. 'x' → logprob: -3.7205841541290283
    5. 'm' (adapté à ' m') → logprob: -6.220584392547607
    6. 'a' → logprob: -7.095584392547607
    7. 'num' → logprob: -7.345584392547607
    8. ' x' → logprob: -7.720584392547607
    9. 'k' → logprob: -8.84558391571045
    10. 'N' → logprob: -9.72058391571045

Token 227: ',n' (ID: 18103)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0812683254480362
    2. '=' → logprob: -2.581268310546875
    3. '=int' → logprob: -6.081268310546875
    4. ',' → logprob: -10.581268310546875
    5. 'ax' → logprob: -10.581268310546875
    6. '   ' → logprob: -11.956268310546875
    7. '=n' → logprob: -12.081268310546875
    8. '=line' → logprob: -12.081268310546875
    9. ' ' → logprob: -12.581268310546875
    10. '=input' → logprob: -12.831268310546875

Token 228: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06200330704450607
    2. ' =' → logprob: -2.8120033740997314
    3. '=line' → logprob: -10.562003135681152
    4. '=int' → logprob: -11.812003135681152
    5. '=input' → logprob: -13.937003135681152
    6. '=m' → logprob: -14.812003135681152
    7. '=parse' → logprob: -15.687003135681152
    8. ' ' → logprob: -15.812003135681152
    9. '=list' → logprob: -16.18700408935547
    10. '＝' → logprob: -16.43700408935547

Token 229: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.003236536169424653
    2. ' map' → logprob: -5.753236770629883
    3. 'line' → logprob: -9.753236770629883
    4. '(map' → logprob: -15.128236770629883
    5. ' line' → logprob: -15.503236770629883
    6. '[line' → logprob: -15.503236770629883
    7. 'list' → logprob: -17.503236770629883
    8. '[' → logprob: -18.253236770629883
    9. '	map' → logprob: -18.253236770629883
    10. '.map' → logprob: -18.878236770629883

Token 230: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.273621405242011e-05
    2. 'int' → logprob: -10.875032424926758
    3. '(str' → logprob: -11.250032424926758
    4. '[int' → logprob: -15.250032424926758
    5. '(' → logprob: -15.500032424926758
    6. '(lambda' → logprob: -15.500032424926758
    7. '=int' → logprob: -17.125032424926758
    8. '<int' → logprob: -17.125032424926758
    9. '```' → logprob: -18.375032424926758
    10. ',int' → logprob: -18.625032424926758

Token 231: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.18642033636569977
    2. ',line' → logprob: -1.9364203214645386
    3. ',' → logprob: -3.686420440673828
    4. 'line' → logprob: -7.311420440673828
    5. ')' → logprob: -9.936420440673828
    6. '=line' → logprob: -10.561420440673828
    7. '[line' → logprob: -11.186420440673828
    8. ' line' → logprob: -11.311420440673828
    9. '(' → logprob: -11.686420440673828
    10. '#line' → logprob: -11.811420440673828

Token 232: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.20451001822948456
    2. '.strip' → logprob: -1.704509973526001
    3. '.split' → logprob: -5.82951021194458
    4. '.' → logprob: -8.954509735107422
    5. '()' → logprob: -11.954509735107422
    6. '.readline' → logprob: -12.329509735107422
    7. ' .' → logprob: -12.454509735107422
    8. 'strip' → logprob: -12.704509735107422
    9. '(strip' → logprob: -12.704509735107422
    10. '.rstrip' → logprob: -14.204509735107422

Token 233: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002430832479149103
    2. ')' → logprob: -7.0024309158325195
    3. '()' → logprob: -7.3774309158325195
    4. '())
' → logprob: -7.6274309158325195
    5. '(','' → logprob: -8.00243091583252
    6. '('' → logprob: -10.62743091583252
    7. '(' → logprob: -11.12743091583252
    8. '(',' → logprob: -11.37743091583252
    9. '(),' → logprob: -11.87743091583252
    10. ' ())' → logprob: -12.25243091583252

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007862794445827603
    2. 'if' → logprob: -7.500786304473877
    3. 'count' → logprob: -9.125785827636719
    4. 'res' → logprob: -9.500785827636719
    5. '    
' → logprob: -11.375785827636719
    6. '```' → logprob: -11.500785827636719
    7. 'result' → logprob: -11.875785827636719
    8. ' if' → logprob: -12.000785827636719
    9. 'for' → logprob: -12.750785827636719
    10. 'total' → logprob: -13.500785827636719

Token 235: ' if' (ID: 538)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5255001187324524
    2. 'if' (adapté à ' if') → logprob: -1.1505000591278076
    3. 'a' → logprob: -4.275500297546387
    4. 'count' → logprob: -4.400500297546387
    5. 'res' → logprob: -4.525500297546387
    6. 'ans' → logprob: -4.650500297546387
    7. 'd' → logprob: -4.900500297546387
    8. 'result' → logprob: -5.400500297546387
    9. 'div' → logprob: -5.525500297546387
    10. 'l' → logprob: -5.525500297546387

Token 236: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.22968246042728424
    2. 'm' → logprob: -2.104682445526123
    3. ' n' → logprob: -2.604682445526123
    4. 'n' → logprob: -4.854682445526123
    5. '(m' → logprob: -7.479682445526123
    6. ' (' → logprob: -7.729682445526123
    7. ' math' → logprob: -7.854682445526123
    8. '(n' → logprob: -9.729682922363281
    9. ' not' → logprob: -10.104682922363281
    10. ' ' → logprob: -10.229682922363281

Token 237: '==' (ID: 560)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6173519492149353
    2. '>' → logprob: -0.8673519492149353
    3. ' <=' → logprob: -4.49235200881958
    4. '==' → logprob: -4.74235200881958
    5. '<=' → logprob: -4.74235200881958
    6. ' <' → logprob: -5.24235200881958
    7. ' ==' → logprob: -5.49235200881958
    8. '<' → logprob: -6.49235200881958
    9. ' >=' → logprob: -7.86735200881958
    10. '>=' → logprob: -7.86735200881958

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9888350963592529
    2. 'n' → logprob: -0.9888350963592529
    3. '1' → logprob: -1.363835096359253
    4. ' ' → logprob: -8.613835334777832
    5. ' n' → logprob: -9.363835334777832
    6. '2' → logprob: -12.238835334777832
    7. '-' → logprob: -12.301335334777832
    8. '   ' → logprob: -12.301335334777832
    9. '=' → logprob: -13.301335334777832
    10. '```' → logprob: -13.488835334777832

Token 239: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16022655367851257
    2. ' and' → logprob: -1.910226583480835
    3. ' ' → logprob: -13.535226821899414
    4. ' or' → logprob: -14.410226821899414
    5. ':' → logprob: -15.785226821899414
    6. 'or' → logprob: -16.035226821899414
    7. '	and' → logprob: -16.035226821899414
    8. '0' → logprob: -16.160226821899414
    9. '==' → logprob: -17.285226821899414
    10. '```' → logprob: -18.660226821899414

Token 240: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04858839511871338
    2. ' n' → logprob: -3.048588275909424
    3. '   ' → logprob: -15.048588752746582
    4. ' ' → logprob: -15.048588752746582
    5. '	n' → logprob: -15.548588752746582
    6. '  ' → logprob: -16.298587799072266
    7. ' ' → logprob: -16.548587799072266
    8. 'm' → logprob: -19.048587799072266
    9. '
' → logprob: -19.048587799072266
    10. '    ' → logprob: -19.423587799072266

Token 241: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02100706659257412
    2. ' ==' → logprob: -3.8960070610046387
    3. '0' → logprob: -7.896007061004639
    4. '=' → logprob: -10.021007537841797
    5. ' ' → logprob: -10.521007537841797
    6. ')==' → logprob: -12.021007537841797
    7. '()==' → logprob: -12.646007537841797
    8. ']==' → logprob: -12.646007537841797
    9. '<|end|>' → logprob: -13.271007537841797
    10. '==-' → logprob: -13.396007537841797

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.062585830688477
    4. '  ' → logprob: -17.125085830688477
    5. '1' → logprob: -17.500085830688477
    6. '۰' → logprob: -17.500085830688477
    7. '```' → logprob: -17.562585830688477
    8. ' ' → logprob: -19.187585830688477
    9. '০' → logprob: -19.375085830688477
    10. '０' → logprob: -19.375085830688477

Token 243: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030639342963695526
    2. ':
' → logprob: -3.530639410018921
    3. '   ' → logprob: -7.280639171600342
    4. '       ' → logprob: -8.5306396484375
    5. ':return' → logprob: -14.2806396484375
    6. ':
' → logprob: -14.7806396484375
    7. '):
' → logprob: -15.4056396484375
    8. ' :' → logprob: -15.4056396484375
    9. ' ' → logprob: -15.6556396484375
    10. '     ' → logprob: -15.9056396484375

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012928384239785373
    2. '   ' → logprob: -9.000129699707031
    3. ' break' → logprob: -13.500129699707031
    4. '           ' → logprob: -13.500129699707031
    5. '      ' → logprob: -14.000129699707031
    6. 'break' → logprob: -14.000129699707031
    7. '     ' → logprob: -14.750129699707031
    8. ':' → logprob: -15.000129699707031
    9. '	break' → logprob: -15.500129699707031
    10. '<|end|>' → logprob: -16.50012969970703

Token 245: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.133028045296669
    2. ' break' → logprob: -2.133028030395508
    3. '       ' → logprob: -5.133028030395508
    4. '	break' → logprob: -8.758028030395508
    5. '   ' → logprob: -10.633028030395508
    6. '           ' → logprob: -14.758028030395508
    7. '_break' → logprob: -14.758028030395508
    8. '```' → logprob: -14.758028030395508
    9. 'Break' → logprob: -16.133028030395508
    10. '               ' → logprob: -17.383028030395508

Token 246: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01933477073907852
    2. '    
' → logprob: -4.14433479309082
    3. '
' → logprob: -5.76933479309082
    4. '  
' → logprob: -10.01933479309082
    5. '<|end|>' → logprob: -10.14433479309082
    6. '   
' → logprob: -10.51933479309082
    7. '        
' → logprob: -11.01933479309082
    8. '    
    
' → logprob: -11.51933479309082
    9. '```' → logprob: -12.01933479309082
    10. '

' → logprob: -12.39433479309082

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06739169359207153
    2. '```' → logprob: -3.6923916339874268
    3. 'count' → logprob: -4.067391872406006
    4. 'res' → logprob: -4.067391872406006
    5. 'result' → logprob: -6.192391872406006
    6. '    
' → logprob: -7.317391872406006
    7. '
' → logprob: -7.442391872406006
    8. 'if' → logprob: -7.692391872406006
    9. 'cnt' → logprob: -7.692391872406006
    10. 'max' → logprob: -7.942391872406006

Token 248: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1052485704421997
    2. 'count' → logprob: -1.6052485704421997
    3. 'res' → logprob: -1.7302485704421997
    4. 'd' → logprob: -3.10524845123291
    5. 'result' → logprob: -3.35524845123291
    6. 'ans' → logprob: -3.48024845123291
    7. 'if' → logprob: -3.48024845123291
    8. 'g' → logprob: -3.73024845123291
    9. 'div' → logprob: -3.73024845123291
    10. 'max' → logprob: -3.85524845123291

Token 249: ' find' (ID: 1646)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.121176838874817
    2. 'res' → logprob: -1.496176838874817
    3. 'result' → logprob: -2.2461767196655273
    4. 'g' → logprob: -2.3711767196655273
    5. 'print' → logprob: -2.8711767196655273
    6. 'div' → logprob: -3.2461767196655273
    7. 'max' → logprob: -3.8711767196655273
    8. 'ans' → logprob: -3.9961767196655273
    9. 'm' → logprob: -4.246176719665527
    10. 'if' → logprob: -4.246176719665527

Token 250: ' largest' (ID: 10574)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6008191704750061
    2. ' count' → logprob: -2.2258191108703613
    3. '   ' → logprob: -2.6008191108703613
    4. 'max' → logprob: -2.7258191108703613
    5. 'the' → logprob: -3.1008191108703613
    6. ' the' → logprob: -3.2258191108703613
    7. 'div' → logprob: -3.2258191108703613
    8. 'result' → logprob: -4.100819110870361
    9. ' max' → logprob: -4.725819110870361
    10. 'answer' → logprob: -5.100819110870361

Token 251: ' x' (ID: 1215)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0951140895485878
    2. 'd' → logprob: -2.72011399269104
    3. 'k' → logprob: -4.345114231109619
    4. ' divisor' → logprob: -5.220114231109619
    5. 'i' → logprob: -6.345114231109619
    6. 'x' → logprob: -6.720114231109619
    7. 'num' → logprob: -6.845114231109619
    8. ' d' → logprob: -7.595114231109619
    9. 'factor' → logprob: -7.720114231109619
    10. 'prime' → logprob: -8.595113754272461

Token 252: ' >=' (ID: 5064)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.5745046138763428
    2. '   ' → logprob: -1.0745046138763428
    3. ' in' → logprob: -3.1995046138763428
    4. ' that' → logprob: -3.4495046138763428
    5. ' =' → logprob: -5.574504852294922
    6. ' between' → logprob: -5.574504852294922
    7. 'in' → logprob: -5.699504852294922
    8. 'such' → logprob: -5.699504852294922
    9. ' x' → logprob: -6.199504852294922
    10. 'x' → logprob: -6.574504852294922

Token 253: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006005583330988884
    2. ' m' → logprob: -5.381005764007568
    3. '1' → logprob: -6.756005764007568
    4. 'n' → logprob: -9.13100528717041
    5. '2' → logprob: -10.25600528717041
    6. ' ' → logprob: -10.63100528717041
    7. 'max' → logprob: -10.75600528717041
    8. '0' → logprob: -11.63100528717041
    9. 'min' → logprob: -12.38100528717041
    10. '(m' → logprob: -12.50600528717041

Token 254: ' s' (ID: 265)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' such' → logprob: -1.011723518371582
    2. '   ' → logprob: -1.136723518371582
    3. ' with' → logprob: -1.886723518371582
    4. ' that' → logprob: -2.261723518371582
    5. 'with' → logprob: -3.886723518371582
    6. 'such' → logprob: -4.261723518371582
    7. ' in' → logprob: -5.261723518371582
    8. 'that' → logprob: -5.386723518371582
    9. ',' → logprob: -5.761723518371582
    10. ' and' → logprob: -5.886723518371582

Token 255: '.t' (ID: 1370)
  Prédit: 'uch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uch' → logprob: -0.02916608192026615
    2. 't' → logprob: -3.9041659832000732
    3. 'such' → logprob: -4.904166221618652
    4. '   ' → logprob: -7.779166221618652
    5. 'atisf' → logprob: -8.029166221618652
    6. 'that' → logprob: -8.654166221618652
    7. '.t' → logprob: -9.529166221618652
    8. 'x' → logprob: -9.654166221618652
    9. ' such' → logprob: -10.029166221618652
    10. '```' → logprob: -10.404166221618652

Token 256: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.24458226561546326
    2. 'x' → logprob: -1.7445822954177856
    3. '   ' → logprob: -3.619582176208496
    4. ' divisor' → logprob: -4.994582176208496
    5. '(div' → logprob: -4.994582176208496
    6. ' x' → logprob: -6.994582176208496
    7. ' div' → logprob: -7.869582176208496
    8. 'that' → logprob: -8.744582176208496
    9. ' that' → logprob: -8.869582176208496
    10. '<div' → logprob: -9.744582176208496

Token 257: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0006582272471860051
    2. 'count' → logprob: -7.75065803527832
    3. 's' → logprob: -8.50065803527832
    4. '   ' → logprob: -12.00065803527832
    5. '_counts' → logprob: -12.12565803527832
    6. ' count' → logprob: -12.75065803527832
    7. 'def' → logprob: -13.00065803527832
    8. ' =' → logprob: -13.50065803527832
    9. 'c' → logprob: -14.12565803527832
    10. '_' → logprob: -14.25065803527832

Token 258: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.015598002821207047
    2. '(' → logprob: -4.390597820281982
    3. '(n' → logprob: -7.015597820281982
    4. 'x' → logprob: -7.140597820281982
    5. '```' → logprob: -7.140597820281982
    6. '>=' → logprob: -8.89059829711914
    7. '<=' → logprob: -9.14059829711914
    8. ' (' → logprob: -9.76559829711914
    9. '(s' → logprob: -10.14059829711914
    10. '[x' → logprob: -10.39059829711914

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006419647950679064
    2. ')<=' → logprob: -5.631419658660889
    3. ')>=' → logprob: -6.131419658660889
    4. '<=' → logprob: -8.00641918182373
    5. '()' → logprob: -9.88141918182373
    6. '>=' → logprob: -10.13141918182373
    7. '(x' → logprob: -10.25641918182373
    8. '')' → logprob: -10.50641918182373
    9. ')==' → logprob: -10.63141918182373
    10. ' )' → logprob: -10.75641918182373

Token 260: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.12659752368927002
    2. ' >=' → logprob: -2.2515974044799805
    3. '<=' → logprob: -4.5015974044799805
    4. ' <=' → logprob: -6.5015974044799805
    5. '   ' → logprob: -8.12659740447998
    6. '```' → logprob: -8.12659740447998
    7. '>' → logprob: -8.50159740447998
    8. ')>=' → logprob: -9.37659740447998
    9. '==' → logprob: -10.25159740447998
    10. ']>=' → logprob: -10.25159740447998

Token 261: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001370357465930283
    2. ' n' → logprob: -6.626370429992676
    3. 'div' → logprob: -10.501370429992676
    4. '   ' → logprob: -11.376370429992676
    5. ' ' → logprob: -13.001370429992676
    6. '  ' → logprob: -14.251370429992676
    7. '(n' → logprob: -14.501370429992676
    8. '	n' → logprob: -15.001370429992676
    9. '```' → logprob: -15.251370429992676
    10. '
' → logprob: -15.376370429992676

Token 262: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38744962215423584
    2. '
' → logprob: -1.2624496221542358
    3. '```' → logprob: -4.012449741363525
    4. 'x' → logprob: -4.387449741363525
    5. 'for' → logprob: -5.637449741363525
    6. ' for' → logprob: -6.387449741363525
    7. 'while' → logprob: -7.512449741363525
    8. ' x' → logprob: -7.637449741363525
    9. 'res' → logprob: -7.887449741363525
    10. '    
' → logprob: -8.137449264526367

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19048908352851868
    2. 'x' → logprob: -2.0654890537261963
    3. 'for' → logprob: -3.3154890537261963
    4. ' for' → logprob: -5.440489292144775
    5. '```' → logprob: -5.565489292144775
    6. '
' → logprob: -6.690489292144775
    7. ' x' → logprob: -8.190488815307617
    8. 'while' → logprob: -8.315488815307617
    9. 'max' → logprob: -8.815488815307617
    10. '    
' → logprob: -9.190488815307617

Token 264: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004048717673867941
    2. 'for' → logprob: -5.879048824310303
    3. '   ' → logprob: -8.254048347473145
    4. 'l' → logprob: -8.504048347473145
    5. 'while' → logprob: -8.754048347473145
    6. 'res' → logprob: -8.879048347473145
    7. 'low' → logprob: -9.004048347473145
    8. '```' → logprob: -9.004048347473145
    9. 'left' → logprob: -9.879048347473145
    10. 'result' → logprob: -10.129048347473145

Token 265: ' upper' (ID: 13057)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.013279873877763748
    2. 'for' → logprob: -5.388279914855957
    3. 'l' → logprob: -5.888279914855957
    4. 'low' → logprob: -6.263279914855957
    5. 'left' → logprob: -6.388279914855957
    6. 'lo' → logprob: -6.888279914855957
    7. 'answer' → logprob: -8.013279914855957
    8. 'res' → logprob: -8.388279914855957
    9. 'ans' → logprob: -8.513279914855957
    10. 'result' → logprob: -8.888279914855957

Token 266: ' bound' (ID: 11608)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.6518803834915161
    2. ' =' → logprob: -1.1518803834915161
    3. '=' → logprob: -1.9018803834915161
    4. 'bound' → logprob: -4.401880264282227
    5. '_limit' → logprob: -7.026880264282227
    6. ' bound' → logprob: -8.526880264282227
    7. 'limit' → logprob: -8.901880264282227
    8. '=int' → logprob: -10.026880264282227
    9. '_' → logprob: -10.526880264282227
    10. ',' → logprob: -10.776880264282227

Token 267: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761342644691467
    2. '=' → logprob: -0.8261342644691467
    3. '=max' → logprob: -9.57613468170166
    4. '   ' → logprob: -10.45113468170166
    5. 'x' → logprob: -10.57613468170166
    6. '=m' → logprob: -11.07613468170166
    7. 'max' → logprob: -11.20113468170166
    8. 'import' → logprob: -11.95113468170166
    9. '=int' → logprob: -12.07613468170166
    10. 'limit' → logprob: -12.32613468170166

Token 268: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12721671164035797
    2. ' x' → logprob: -2.1272168159484863
    3. '100' → logprob: -9.502216339111328
    4. 'm' → logprob: -9.502216339111328
    5. ' ' → logprob: -10.627216339111328
    6. ' m' → logprob: -10.877216339111328
    7. '999' → logprob: -10.877216339111328
    8. ' n' → logprob: -11.502216339111328
    9. '10' → logprob: -11.627216339111328
    10. 'n' → logprob: -11.627216339111328

Token 269: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038065019994974136
    2. '=' → logprob: -3.288064956665039
    3. '   ' → logprob: -12.288064956665039
    4. '=max' → logprob: -12.413064956665039
    5. 'import' → logprob: -12.413064956665039
    6. ',' → logprob: -12.663064956665039
    7. '=int' → logprob: -13.288064956665039
    8. 'x' → logprob: -13.663064956665039
    9. 's' → logprob: -14.288064956665039
    10. 'max' → logprob: -14.413064956665039

Token 270: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14768245816230774
    2. ' =' → logprob: -2.1476824283599854
    3. ' be' → logprob: -3.8976824283599854
    4. '=sys' → logprob: -9.647682189941406
    5. '=int' → logprob: -10.522682189941406
    6. '#' → logprob: -10.522682189941406
    7. 'x' → logprob: -10.647682189941406
    8. 'be' → logprob: -10.647682189941406
    9. '=n' → logprob: -11.522682189941406
    10. 'n' → logprob: -11.522682189941406

Token 271: ' m' (ID: 284)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.030519802123308182
    2. '100' → logprob: -3.780519723892212
    3. '2' → logprob: -5.655519962310791
    4. '1' → logprob: -6.655519962310791
    5. ' ' → logprob: -7.280519962310791
    6. 'max' → logprob: -7.655519962310791
    7. 'm' → logprob: -7.655519962310791
    8. 'n' → logprob: -8.030519485473633
    9. 'int' → logprob: -8.155519485473633
    10. '200' → logprob: -9.905519485473633

Token 272: '+n' (ID: 87683)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03859975188970566
    2. 'for' → logprob: -4.163599967956543
    3. '   ' → logprob: -4.788599967956543
    4. '
' → logprob: -5.163599967956543
    5. 'while' → logprob: -5.538599967956543
    6. '```' → logprob: -6.038599967956543
    7. ' for' → logprob: -7.163599967956543
    8. ' x' → logprob: -8.038599967956543
    9. 'res' → logprob: -8.413599967956543
    10. 'l' → logprob: -9.038599967956543

Token 273: '*' (ID: 9)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.303918719291687
    2. 'x' → logprob: -1.553918719291687
    3. '
' → logprob: -4.053918838500977
    4. 'for' → logprob: -4.178918838500977
    5. '```' → logprob: -4.678918838500977
    6. ' for' → logprob: -5.428918838500977
    7. ' x' → logprob: -6.053918838500977
    8. 'max' → logprob: -7.553918838500977
    9. 'result' → logprob: -7.678918838500977
    10. '    
' → logprob: -7.803918838500977

Token 274: 'log' (ID: 2133)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5224318504333496
    2. '10' → logprob: -1.1474318504333496
    3. '20' → logprob: -3.1474318504333496
    4. '50' → logprob: -3.8974318504333496
    5. '2' → logprob: -4.52243185043335
    6. 'n' → logprob: -6.14743185043335
    7. '1' → logprob: -6.14743185043335
    8. '500' → logprob: -6.14743185043335
    9. 'max' → logprob: -6.27243185043335
    10. '200' → logprob: -6.27243185043335

Token 275: '(m' (ID: 2145)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6522393822669983
    2. '(m' → logprob: -1.4022393226623535
    3. 'm' → logprob: -2.0272393226623535
    4. '(' → logprob: -3.7772393226623535
    5. '2' → logprob: -3.7772393226623535
    6. 'n' → logprob: -4.0272393226623535
    7. ' m' → logprob: -4.1522393226623535
    8. '(n' → logprob: -4.6522393226623535
    9. ' ' → logprob: -5.4022393226623535
    10. ' n' → logprob: -5.5272393226623535

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11705133318901062
    2. '+' → logprob: -2.867051362991333
    3. '(' → logprob: -3.242051362991333
    4. ')+' → logprob: -4.992051124572754
    5. '())' → logprob: -6.492051124572754
    6. ')
' → logprob: -6.617051124572754
    7. '(n' → logprob: -6.742051124572754
    8. '))' → logprob: -7.617051124572754
    9. '(x' → logprob: -7.617051124572754
    10. '(m' → logprob: -7.992051124572754

Token 277: ' for' (ID: 395)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.505171537399292
    2. '   ' → logprob: -1.005171537399292
    3. '
' → logprob: -4.005171775817871
    4. 'x' → logprob: -5.130171775817871
    5. ' import' → logprob: -6.505171775817871
    6. 'from' → logprob: -6.505171775817871
    7. ' x' → logprob: -6.630171775817871
    8. '```' → logprob: -7.380171775817871
    9. ' from' → logprob: -8.005171775817871
    10. '    
' → logprob: -8.130171775817871

Token 278: ' search' (ID: 3684)
  Prédit: ' large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' large' → logprob: -0.6969807147979736
    2. ' x' → logprob: -1.4469807147979736
    3. 'x' → logprob: -2.1969807147979736
    4. ' some' → logprob: -2.6969807147979736
    5. 'large' → logprob: -3.4469807147979736
    6. ' now' → logprob: -4.5719804763793945
    7. ' m' → logprob: -4.8219804763793945
    8. ' safe' → logprob: -5.0719804763793945
    9. ' big' → logprob: -5.1969804763793945
    10. ' i' → logprob: -5.5719804763793945

Token 279: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5534607172012329
    2. 'low' → logprob: -1.053460717201233
    3. 'import' → logprob: -3.5534605979919434
    4. ' low' → logprob: -4.553460597991943
    5. 'left' → logprob: -4.553460597991943
    6. 'lo' → logprob: -4.803460597991943
    7. '```' → logprob: -4.928460597991943
    8. ' lo' → logprob: -5.553460597991943
    9. 'l' → logprob: -5.678460597991943
    10. '
' → logprob: -6.303460597991943

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15875674784183502
    2. 'import' → logprob: -2.283756732940674
    3. 'low' → logprob: -3.783756732940674
    4. ' low' → logprob: -5.033756732940674
    5. ' import' → logprob: -5.408756732940674
    6. ' lo' → logprob: -5.533756732940674
    7. '```' → logprob: -5.658756732940674
    8. 'from' → logprob: -7.033756732940674
    9. '
' → logprob: -7.158756732940674
    10. 'lo' → logprob: -7.908756732940674

Token 281: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.712786853313446
    2. 'import' → logprob: -0.962786853313446
    3. 'left' → logprob: -2.587786912918091
    4. 'lo' → logprob: -3.337786912918091
    5. 'l' → logprob: -4.962786674499512
    6. ' lo' → logprob: -5.962786674499512
    7. ' low' → logprob: -6.212786674499512
    8. 'from' → logprob: -6.212786674499512
    9. ' import' → logprob: -6.587786674499512
    10. '
' → logprob: -7.337786674499512

Token 282: ' but' (ID: 889)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.9641584753990173
    2. 'import' → logprob: -1.714158535003662
    3. ' lo' → logprob: -1.839158535003662
    4. ' low' → logprob: -2.214158535003662
    5. 'lo' → logprob: -3.089158535003662
    6. 'left' → logprob: -3.339158535003662
    7. ' import' → logprob: -3.589158535003662
    8. 'l' → logprob: -3.839158535003662
    9. ' left' → logprob: -4.464158535003662
    10. 'from' → logprob: -5.089158535003662

Token 283: ' here' (ID: 2105)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.5825358629226685
    2. ' lo' → logprob: -1.5825358629226685
    3. ' l' → logprob: -1.9575358629226685
    4. ' left' → logprob: -2.332535743713379
    5. '   ' → logprob: -2.707535743713379
    6. ' low' → logprob: -2.957535743713379
    7. ' import' → logprob: -3.082535743713379
    8. ' m' → logprob: -3.457535743713379
    9. ' x' → logprob: -3.582535743713379
    10. 'def' → logprob: -3.707535743713379

Token 284: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3794635832309723
    2. ' we' → logprob: -1.37946355342865
    3. ',' → logprob: -3.7544636726379395
    4. ':' → logprob: -3.8794636726379395
    5. 'we' → logprob: -4.8794636726379395
    6. 'import' → logprob: -4.8794636726379395
    7. '    ' → logprob: -5.7544636726379395
    8. ' is' → logprob: -8.254463195800781
    9. ' you' → logprob: -8.754463195800781
    10. '    
' → logprob: -8.754463195800781

Token 285: ' do' (ID: 621)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.6509506702423096
    2. ''ll' → logprob: -1.9009506702423096
    3. 'use' → logprob: -2.2759506702423096
    4. ' can' → logprob: -2.4009506702423096
    5. 'can' → logprob: -3.4009506702423096
    6. ' will' → logprob: -3.7759506702423096
    7. 'do' → logprob: -3.9009506702423096
    8. ' do' → logprob: -4.1509504318237305
    9. 'will' → logprob: -4.2759504318237305
    10. 'import' → logprob: -4.9009504318237305

Token 286: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.15609268844127655
    2. ' binary' → logprob: -2.531092643737793
    3. ' a' → logprob: -3.531092643737793
    4. 'a' → logprob: -4.406092643737793
    5. '   ' → logprob: -4.781092643737793
    6. 'br' → logprob: -5.656092643737793
    7. 'b' → logprob: -5.656092643737793
    8. 'linear' → logprob: -6.156092643737793
    9. ' brute' → logprob: -6.281092643737793
    10. 'bs' → logprob: -6.906092643737793

Token 287: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.2527342736721039
    2. ' search' → logprob: -1.5027343034744263
    3. '_search' → logprob: -7.127734184265137
    4. '-search' → logprob: -14.252734184265137
    5. 'earch' → logprob: -14.377734184265137
    6. ' searching' → logprob: -14.877734184265137
    7. '	search' → logprob: -15.502734184265137
    8. 'Search' → logprob: -16.002735137939453
    9. 'import' → logprob: -16.877735137939453
    10. ' ' → logprob: -16.877735137939453

Token 288: ' between' (ID: 2870)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.737653374671936
    2. '
' → logprob: -1.112653374671936
    3. '   ' → logprob: -1.987653374671936
    4. ' low' → logprob: -3.3626532554626465
    5. 'left' → logprob: -5.2376532554626465
    6. '    
' → logprob: -5.3626532554626465
    7. 'lo' → logprob: -5.7376532554626465
    8. '```' → logprob: -5.8626532554626465
    9. ' lo' → logprob: -6.4876532554626465
    10. ' left' → logprob: -7.1126532554626465

Token 289: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.000285530521068722
    2. ' m' → logprob: -8.250285148620605
    3. '0' → logprob: -11.375285148620605
    4. '1' → logprob: -11.625285148620605
    5. '   ' → logprob: -12.750285148620605
    6. '[m' → logprob: -14.500285148620605
    7. '
' → logprob: -15.250285148620605
    8. '(m' → logprob: -16.125286102294922
    9. ',m' → logprob: -16.875286102294922
    10. '	m' → logprob: -17.000286102294922

Token 290: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.07110923528671265
    2. ',' → logprob: -3.3211092948913574
    3. ' and' → logprob: -3.4461092948913574
    4. ',m' → logprob: -8.4461088180542
    5. 'import' → logprob: -8.9461088180542
    6. ',n' → logprob: -9.0711088180542
    7. '   ' → logprob: -10.0711088180542
    8. ' ,' → logprob: -10.8211088180542
    9. '```' → logprob: -11.0711088180542
    10. ',
' → logprob: -11.3211088180542

Token 291: ' a' (ID: 261)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4757785499095917
    2. ' m' → logprob: -1.600778579711914
    3. '10' → logprob: -1.850778579711914
    4. ' ' → logprob: -3.975778579711914
    5. '   ' → logprob: -7.600778579711914
    6. 'int' → logprob: -8.475778579711914
    7. '2' → logprob: -9.350778579711914
    8. '100' → logprob: -9.600778579711914
    9. ' int' → logprob: -10.225778579711914
    10. '(m' → logprob: -10.725778579711914

Token 292: ' large' (ID: 4410)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.13340876996517181
    2. ' m' → logprob: -3.633408784866333
    3. '   ' → logprob: -3.758408784866333
    4. '10' → logprob: -4.133408546447754
    5. 'int' → logprob: -4.383408546447754
    6. ' large' → logprob: -4.758408546447754
    7. '100' → logprob: -5.258408546447754
    8. '[m' → logprob: -5.258408546447754
    9. 'n' → logprob: -5.758408546447754
    10. 'b' → logprob: -5.883408546447754

Token 293: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.7478972673416138
    2. ' upper' → logprob: -0.9978972673416138
    3. 'number' → logprob: -2.747897148132324
    4. 'upper' → logprob: -3.372897148132324
    5. '_upper' → logprob: -3.747897148132324
    6. '_number' → logprob: -4.622897148132324
    7. 'value' → logprob: -4.997897148132324
    8. 'range' → logprob: -5.247897148132324
    9. 'bound' → logprob: -5.872897148132324
    10. ' range' → logprob: -6.122897148132324

Token 294: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9158167839050293
    2. 'low' → logprob: -1.1658167839050293
    3. '   ' → logprob: -2.0408167839050293
    4. ' low' → logprob: -2.4158167839050293
    5. ' lo' → logprob: -3.5408167839050293
    6. 'left' → logprob: -4.290816783905029
    7. 'lo' → logprob: -4.665816783905029
    8. ' left' → logprob: -5.165816783905029
    9. '```' → logprob: -6.040816783905029
    10. '(low' → logprob: -6.290816783905029

Token 295: '   ' (ID: 271)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.29314741492271423
    2. 'lo' → logprob: -2.793147325515747
    3. '   ' → logprob: -3.043147325515747
    4. 'l' → logprob: -3.168147325515747
    5. ' low' → logprob: -3.168147325515747
    6. ' lo' → logprob: -3.543147325515747
    7. 'left' → logprob: -3.793147325515747
    8. ' left' → logprob: -5.418147563934326
    9. ' l' → logprob: -5.793147563934326
    10. '
' → logprob: -6.668147563934326

Token 296: ' left' (ID: 3561)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.1085512787103653
    2. 'left' (adapté à ' left') → logprob: -2.858551263809204
    3. 'lo' → logprob: -3.358551263809204
    4. 'l' → logprob: -4.608551502227783
    5. ' low' → logprob: -7.858551502227783
    6. ' lo' → logprob: -8.983551025390625
    7. '
' → logprob: -9.233551025390625
    8. ' left' → logprob: -9.608551025390625
    9. '   ' → logprob: -9.733551025390625
    10. '```' → logprob: -11.983551025390625

Token 297: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06613082438707352
    2. '=' → logprob: -2.8161308765411377
    3. ',' → logprob: -5.691130638122559
    4. '=m' → logprob: -7.191130638122559
    5. ' ,' → logprob: -11.316130638122559
    6. ',m' → logprob: -11.441130638122559
    7. '=int' → logprob: -14.566130638122559
    8. ' ' → logprob: -15.191130638122559
    9. '=l' → logprob: -15.316130638122559
    10. '=len' → logprob: -15.566130638122559

Token 298: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.20141790807247162
    2. ' right' → logprob: -1.7014179229736328
    3. ',right' → logprob: -13.701417922973633
    4. 'left' → logprob: -14.076417922973633
    5. '	right' → logprob: -14.076417922973633
    6. ' ' → logprob: -14.826417922973633
    7. 'max' → logprob: -14.951417922973633
    8. '   ' → logprob: -15.451417922973633
    9. '[right' → logprob: -15.701417922973633
    10. 'm' → logprob: -15.701417922973633

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021507740020752
    2. ' =' → logprob: -2.350214958190918
    3. '=m' → logprob: -11.725214958190918
    4. ',' → logprob: -14.975214958190918
    5. '＝' → logprob: -19.100215911865234
    6. '=

' → logprob: -19.725215911865234
    7. '=int' → logprob: -19.975215911865234
    8. '=
' → logprob: -20.100215911865234
    9. '=n' → logprob: -20.225215911865234
    10. '=}' → logprob: -20.725215911865234

Token 300: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015568782109767199
    2. ' m' → logprob: -6.501556873321533
    3. '10' → logprob: -10.126557350158691
    4. '   ' → logprob: -11.376557350158691
    5. 'max' → logprob: -13.376557350158691
    6. '1' → logprob: -14.626557350158691
    7. ' ' → logprob: -15.251557350158691
    8. '	m' → logprob: -15.501557350158691
    9. '=m' → logprob: -15.626557350158691
    10. '2' → logprob: -16.126556396484375

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000984935206361115
    2. ' ,' → logprob: -7.000985145568848
    3. ',m' → logprob: -10.375985145568848
    4. ',n' → logprob: -10.500985145568848
    5. '+' → logprob: -11.750985145568848
    6. ',
' → logprob: -12.750985145568848
    7. ' +' → logprob: -13.000985145568848
    8. '+m' → logprob: -15.000985145568848
    9. '=' → logprob: -15.250985145568848
    10. '   ' → logprob: -15.375985145568848

Token 302: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08975663036108017
    2. 'm' → logprob: -2.464756727218628
    3. 'max' → logprob: -7.714756488800049
    4. ' ' → logprob: -8.714756965637207
    5. '2' → logprob: -9.214756965637207
    6. 'int' → logprob: -9.839756965637207
    7. ' m' → logprob: -10.464756965637207
    8. '100' → logprob: -11.089756965637207
    9. 'left' → logprob: -12.589756965637207
    10. ' max' → logprob: -12.964756965637207

Token 303: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16192035377025604
    2. 'm' → logprob: -1.9119203090667725
    3. 'max' → logprob: -6.786920547485352
    4. '2' → logprob: -8.036920547485352
    5. 'int' → logprob: -8.536920547485352
    6. '100' → logprob: -10.286920547485352
    7. ' ' → logprob: -12.286920547485352
    8. ' m' → logprob: -13.161920547485352
    9. 'left' → logprob: -13.286920547485352
    10. '1' → logprob: -13.786920547485352

Token 304: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.48356008529663086
    2. '9' → logprob: -1.8585600852966309
    3. '12' → logprob: -2.108560085296631
    4. '10' → logprob: -2.733560085296631
    5. '18' → logprob: -3.608560085296631
    6. '15' → logprob: -4.983560085296631
    7. '7' → logprob: -5.483560085296631
    8. '8' → logprob: -6.733560085296631
    9. '14' → logprob: -7.358560085296631
    10. '000' → logprob: -7.483560085296631

Token 305: '9' (ID: 24)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.6485745906829834
    2. '10' → logprob: -1.1485745906829834
    3. '18' → logprob: -2.3985745906829834
    4. '15' → logprob: -3.0235745906829834
    5. '9' → logprob: -4.3985748291015625
    6. '14' → logprob: -5.7735748291015625
    7. '11' → logprob: -5.7735748291015625
    8. '13' → logprob: -6.5235748291015625
    9. '16' → logprob: -8.023574829101562
    10. '7' → logprob: -8.148574829101562

Token 306: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06996900588274002
    2. '   ' → logprob: -3.4449689388275146
    3. '    
' → logprob: -4.069969177246094
    4. 'while' → logprob: -4.569969177246094
    5. '  
' → logprob: -5.694969177246094
    6. '+' → logprob: -6.319969177246094
    7. ' while' → logprob: -6.569969177246094
    8. ' 
' → logprob: -7.569969177246094
    9. '   
' → logprob: -7.694969177246094
    10. '\n' → logprob: -8.694969177246094

Token 307: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22729958593845367
    2. '   ' → logprob: -1.9772995710372925
    3. 'while' → logprob: -3.602299690246582
    4. ' while' → logprob: -4.227299690246582
    5. '    
' → logprob: -4.602299690246582
    6. '  
' → logprob: -5.352299690246582
    7. '```' → logprob: -5.602299690246582
    8. ' 
' → logprob: -5.852299690246582
    9. '   
' → logprob: -7.977299690246582
    10. '	while' → logprob: -7.977299690246582

Token 308: ' ans' (ID: 3345)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.012331399135291576
    2. ' while' → logprob: -4.512331485748291
    3. 'ans' (adapté à ' ans') → logprob: -7.512331485748291
    4. 'answer' → logprob: -7.637331485748291
    5. 'result' → logprob: -8.512331008911133
    6. 'res' → logprob: -10.887331008911133
    7. ' ans' → logprob: -11.012331008911133
    8. '   ' → logprob: -12.137331008911133
    9. ' answer' → logprob: -12.512331008911133
    10. '
' → logprob: -12.637331008911133

Token 309: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859020933508873
    2. ' =' → logprob: -3.0485901832580566
    3. '=None' → logprob: -12.923590660095215
    4. ',' → logprob: -15.423590660095215
    5. ' ' → logprob: -16.6735897064209
    6. '_' → logprob: -16.7985897064209
    7. '   ' → logprob: -17.2985897064209
    8. ')' → logprob: -17.7985897064209
    9. ' =
' → logprob: -17.9235897064209
    10. ':' → logprob: -18.1735897064209

Token 310: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.008233226835727692
    2. '-' → logprob: -5.258233070373535
    3. ' m' → logprob: -6.133233070373535
    4. 'left' → logprob: -7.758233070373535
    5. '0' → logprob: -8.133233070373535
    6. ' -' → logprob: -9.383233070373535
    7. ' left' → logprob: -11.383233070373535
    8. 'None' → logprob: -12.133233070373535
    9. ' ' → logprob: -13.258233070373535
    10. '   ' → logprob: -14.758233070373535

Token 311: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12556229531764984
    2. '+' → logprob: -2.5005621910095215
    3. ' 
' → logprob: -4.0005621910095215
    4. '  
' → logprob: -5.2505621910095215
    5. '    
' → logprob: -5.2505621910095215
    6. '   ' → logprob: -5.8755621910095215
    7. ' +' → logprob: -6.5005621910095215
    8. '   
' → logprob: -6.7505621910095215
    9. 'while' → logprob: -7.8755621910095215
    10. ' while' → logprob: -8.12556266784668

Token 312: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7515260577201843
    2. ' while' → logprob: -1.251526117324829
    3. '   ' → logprob: -2.251526117324829
    4. 'while' → logprob: -2.251526117324829
    5. '    
' → logprob: -3.501526117324829
    6. ' 
' → logprob: -7.00152587890625
    7. '  
' → logprob: -8.37652587890625
    8. '	while' → logprob: -8.87652587890625
    9. '```' → logprob: -8.87652587890625
    10. '   
' → logprob: -9.00152587890625

Token 313: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.01830551214516163
    2. ' while' → logprob: -4.01830530166626
    3. '   ' → logprob: -9.143305778503418
    4. '
' → logprob: -10.018305778503418
    5. '```' → logprob: -13.018305778503418
    6. '    
' → logprob: -14.143305778503418
    7. ' 
' → logprob: -14.268305778503418
    8. '	while' → logprob: -14.893305778503418
    9. '``' → logprob: -16.7683048248291
    10. 'While' → logprob: -16.8933048248291

Token 314: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5759403109550476
    2. ' left' → logprob: -0.8259403109550476
    3. '(left' → logprob: -14.700940132141113
    4. '	left' → logprob: -15.200940132141113
    5. 'right' → logprob: -16.70094108581543
    6. ' ' → logprob: -17.70094108581543
    7. '[left' → logprob: -17.95094108581543
    8. ' lef' → logprob: -18.07594108581543
    9. ' right' → logprob: -18.45094108581543
    10. '   ' → logprob: -18.70094108581543

Token 315: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.16022798418998718
    2. ' <=' → logprob: -1.9102280139923096
    3. ']<=' → logprob: -13.53522777557373
    4. ')<=' → logprob: -13.66022777557373
    5. '<' → logprob: -14.03522777557373
    6. '<|end|>' → logprob: -15.53522777557373
    7. '≤' → logprob: -16.160228729248047
    8. '+' → logprob: -16.910228729248047
    9. ' <' → logprob: -17.285228729248047
    10. '=' → logprob: -17.285228729248047

Token 316: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.001170225441455841
    2. ' right' → logprob: -6.7511701583862305
    3. '	right' → logprob: -18.376171112060547
    4. ' ' → logprob: -20.251171112060547
    5. '(right' → logprob: -21.376171112060547
    6. '[right' → logprob: -21.501171112060547
    7. ',right' → logprob: -21.751171112060547
    8. 'rig' → logprob: -22.376171112060547
    9. '_right' → logprob: -22.376171112060547
    10. 'Right' → logprob: -23.001171112060547

Token 317: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2016422599554062
    2. ':
' → logprob: -1.7016422748565674
    3. '       ' → logprob: -9.451642036437988
    4. '):
' → logprob: -9.826642036437988
    5. '   ' → logprob: -10.326642036437988
    6. '<|end|>' → logprob: -10.326642036437988
    7. ':

' → logprob: -11.201642036437988
    8. '<|end|>' → logprob: -12.326642036437988
    9. ':
' → logprob: -13.076642036437988
    10. ',' → logprob: -13.076642036437988

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4333309233188629
    2. ' mid' → logprob: -1.0583308935165405
    3. 'mid' → logprob: -6.43333101272583
    4. '    ' → logprob: -6.80833101272583
    5. '   ' → logprob: -7.30833101272583
    6. '        
' → logprob: -8.308330535888672
    7. ' 
' → logprob: -8.558330535888672
    8. ' midpoint' → logprob: -8.933330535888672
    9. ',' → logprob: -9.308330535888672
    10. ' middle' → logprob: -9.433330535888672

Token 319: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.28153327107429504
    2. 'mid' (adapté à ' mid') → logprob: -1.4065332412719727
    3. '       ' → logprob: -8.281533241271973
    4. '_mid' → logprob: -9.906533241271973
    5. ' midpoint' → logprob: -9.906533241271973
    6. '[mid' → logprob: -11.281533241271973
    7. ' middle' → logprob: -12.656533241271973
    8. 'middle' → logprob: -12.781533241271973
    9. '   ' → logprob: -12.906533241271973
    10. '(mid' → logprob: -13.156533241271973

Token 320: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018152287229895592
    2. '=' → logprob: -4.018152236938477
    3. ' =
' → logprob: -14.393152236938477
    4. ')' → logprob: -14.393152236938477
    5. '=int' → logprob: -15.268152236938477
    6. ' ' → logprob: -15.893152236938477
    7. '=(' → logprob: -15.893152236938477
    8. '=len' → logprob: -16.143152236938477
    9. ' =(' → logprob: -16.143152236938477
    10. '=center' → logprob: -16.143152236938477

Token 321: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3868834376335144
    2. '(left' → logprob: -1.1368834972381592
    3. ' left' → logprob: -11.636883735656738
    4. 'left' → logprob: -12.886883735656738
    5. '(right' → logprob: -14.761883735656738
    6. '[left' → logprob: -15.011883735656738
    7. '   ' → logprob: -15.636883735656738
    8. ' ' → logprob: -16.011882781982422
    9. '(' → logprob: -17.886882781982422
    10. ',left' → logprob: -18.386882781982422

Token 322: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.7697225252486533e-06
    2. ' left' → logprob: -12.500003814697266
    3. 'right' → logprob: -20.000003814697266
    4. '	left' → logprob: -21.000003814697266
    5. '   ' → logprob: -21.125003814697266
    6. '[left' → logprob: -21.125003814697266
    7. '(left' → logprob: -22.250003814697266
    8. '_left' → logprob: -24.250003814697266
    9. ' ' → logprob: -24.625003814697266
    10. '.left' → logprob: -24.750003814697266

Token 323: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687145709991455
    2. ' +' → logprob: -1.1368714570999146
    3. ')' → logprob: -16.761871337890625
    4. '+b' → logprob: -16.886871337890625
    5. '+r' → logprob: -17.011871337890625
    6. '+k' → logprob: -17.011871337890625
    7. '＋' → logprob: -17.511871337890625
    8. '+B' → logprob: -17.511871337890625
    9. '```' → logprob: -17.511871337890625
    10. '+m' → logprob: -17.761871337890625

Token 324: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00020354038861114532
    2. ' right' → logprob: -8.500203132629395
    3. '(right' → logprob: -17.37520408630371
    4. '	right' → logprob: -18.62520408630371
    5. '[right' → logprob: -18.75020408630371
    6. '   ' → logprob: -19.00020408630371
    7. '
' → logprob: -19.25020408630371
    8. ' ' → logprob: -20.00020408630371
    9. ')' → logprob: -20.87520408630371
    10. '```' → logprob: -21.37520408630371

Token 325: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.06206246465444565
    2. ')' → logprob: -2.8120625019073486
    3. ')>>' → logprob: -9.31206226348877
    4. ' )' → logprob: -12.31206226348877
    5. '//' → logprob: -17.437063217163086
    6. ')#' → logprob: -18.062063217163086
    7. ')
' → logprob: -19.937063217163086
    8. '){//' → logprob: -21.062063217163086
    9. ' //' → logprob: -21.562063217163086
    10. '）' → logprob: -21.562063217163086

Token 326: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -18.25004005432129
    4. '۲' → logprob: -19.37504005432129
    5. '```' → logprob: -20.37504005432129
    6. '２' → logprob: -20.62504005432129
    7. '٢' → logprob: -21.25004005432129
    8. '  ' → logprob: -21.37504005432129
    9. '२' → logprob: -21.87504005432129
    10. '২' → logprob: -22.62504005432129

Token 327: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4308462142944336
    2. '
' → logprob: -1.0558462142944336
    3. '        
' → logprob: -6.555846214294434
    4. '<|end|>' → logprob: -8.180846214294434
    5. '  
' → logprob: -8.805846214294434
    6. '
' → logprob: -9.805846214294434
    7. ' 
' → logprob: -9.930846214294434
    8. ',' → logprob: -10.555846214294434
    9. ')' → logprob: -10.555846214294434
    10. ')
' → logprob: -10.805846214294434

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012083302717655897
    2. '        
' → logprob: -7.376208305358887
    3. '
' → logprob: -8.001208305358887
    4. ' if' → logprob: -9.376208305358887
    5. 'if' → logprob: -10.001208305358887
    6. '<|end|>' → logprob: -10.001208305358887
    7. '   ' → logprob: -10.626208305358887
    8. '  
' → logprob: -11.251208305358887
    9. 'div' → logprob: -12.376208305358887
    10. '           ' → logprob: -12.376208305358887

Token 329: ' if' (ID: 538)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -1.1871694326400757
    2. 'if' (adapté à ' if') → logprob: -1.4371694326400757
    3. ' if' → logprob: -1.4371694326400757
    4. '       ' → logprob: -1.6871694326400757
    5. ' dc' → logprob: -3.8121695518493652
    6. 'd' → logprob: -5.062169551849365
    7. 'count' → logprob: -5.937169551849365
    8. ' d' → logprob: -6.437169551849365
    9. 'cnt' → logprob: -6.687169551849365
    10. 'div' → logprob: -8.687169075012207

Token 330: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.00026181264547631145
    2. ' divisor' → logprob: -8.250262260437012
    3. '(div' → logprob: -14.875262260437012
    4. 'divider' → logprob: -16.875261306762695
    5. '_div' → logprob: -17.000261306762695
    6. '	div' → logprob: -17.625261306762695
    7. ' div' → logprob: -17.625261306762695
    8. '   ' → logprob: -19.000261306762695
    9. '<div' → logprob: -19.125261306762695
    10. '.div' → logprob: -20.000261306762695

Token 331: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.896309739408025e-07
    2. 'count' → logprob: -15.000000953674316
    3. '_' → logprob: -16.0
    4. '_counts' → logprob: -16.125
    5. ' _' → logprob: -16.75
    6. ' count' → logprob: -17.625
    7. 's' → logprob: -18.75
    8. '_c' → logprob: -19.125
    9. '_div' → logprob: -19.25
    10. ')_' → logprob: -19.5

Token 332: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -4.320199877838604e-07
    2. '[mid' → logprob: -15.25
    3. ' (' → logprob: -15.75
    4. '(' → logprob: -17.5
    5. '(m' → logprob: -19.0
    6. 'mid' → logprob: -19.75
    7. ')' → logprob: -20.125
    8. '(max' → logprob: -20.625
    9. '(
' → logprob: -20.75
    10. '(min' → logprob: -21.0

Token 333: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1512720137834549
    2. '<=' → logprob: -2.7762720584869385
    3. ' <=' → logprob: -2.7762720584869385
    4. ')<=' → logprob: -4.151271820068359
    5. ']<=' → logprob: -10.27627182006836
    6. ' )' → logprob: -10.40127182006836
    7. '>' → logprob: -10.90127182006836
    8. '()' → logprob: -12.77627182006836
    9. '```' → logprob: -12.77627182006836
    10. ')>' → logprob: -13.15127182006836

Token 334: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.47408124804496765
    2. '<=' → logprob: -0.97408127784729
    3. ')<=' → logprob: -12.724081039428711
    4. ']<=' → logprob: -14.724081039428711
    5. ' ' → logprob: -15.224081039428711
    6. '>' → logprob: -15.474081039428711
    7. '[' → logprob: -16.22408103942871
    8. ' >' → logprob: -16.72408103942871
    9. '<' → logprob: -16.72408103942871
    10. ' ' → logprob: -16.97408103942871

Token 335: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04858805239200592
    2. ' n' → logprob: -3.0485880374908447
    3. '	n' → logprob: -14.548587799072266
    4. '   ' → logprob: -16.298587799072266
    5. '
' → logprob: -16.923587799072266
    6. ' ' → logprob: -17.548587799072266
    7. '_n' → logprob: -18.048587799072266
    8. '       ' → logprob: -18.048587799072266
    9. '(n' → logprob: -18.423587799072266
    10. ' ' → logprob: -18.798587799072266

Token 336: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5760144591331482
    2. ':' → logprob: -0.8260144591331482
    3. '):
' → logprob: -9.951014518737793
    4. ':
' → logprob: -11.576014518737793
    5. '       ' → logprob: -11.701014518737793
    6. ' :
' → logprob: -12.576014518737793
    7. ':

' → logprob: -12.576014518737793
    8. '):' → logprob: -13.701014518737793
    9. ' :' → logprob: -14.701014518737793
    10. ' and' → logprob: -14.701014518737793

Token 337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13521520793437958
    2. '       ' → logprob: -2.3852152824401855
    3. ':
' → logprob: -4.1352152824401855
    4. ' left' → logprob: -4.3852152824401855
    5. 'left' → logprob: -6.6352152824401855
    6. '):
' → logprob: -6.6352152824401855
    7. ':' → logprob: -6.6352152824401855
    8. '
' → logprob: -6.6352152824401855
    9. '```' → logprob: -8.885214805603027
    10. ' :
' → logprob: -9.385214805603027

Token 338: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.023581799119710922
    2. 'ans' (adapté à ' ans') → logprob: -3.7735817432403564
    3. '           ' → logprob: -8.273581504821777
    4. '	ans' → logprob: -10.148581504821777
    5. '(ans' → logprob: -10.773581504821777
    6. '
' → logprob: -12.023581504821777
    7. '       ' → logprob: -12.148581504821777
    8. 'answer' → logprob: -12.398581504821777
    9. '   ' → logprob: -13.148581504821777
    10. '_ans' → logprob: -13.773581504821777

Token 339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750484973192215
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -18.65475082397461
    4. ',' → logprob: -19.27975082397461
    5. '=max' → logprob: -19.90475082397461
    6. '＝' → logprob: -20.02975082397461
    7. ' =
' → logprob: -20.27975082397461
    8. ')' → logprob: -20.65475082397461
    9. '=end' → logprob: -20.77975082397461
    10. '=line' → logprob: -21.40475082397461

Token 340: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.3868711292743683
    2. 'mid' → logprob: -1.136871099472046
    3. '(mid' → logprob: -18.011871337890625
    4. '[mid' → logprob: -18.136871337890625
    5. ' midpoint' → logprob: -18.386871337890625
    6. '_mid' → logprob: -19.386871337890625
    7. ' ' → logprob: -20.011871337890625
    8. ' max' → logprob: -21.261871337890625
    9. 'max' → logprob: -21.636871337890625
    10. '.mid' → logprob: -21.636871337890625

Token 341: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05452224612236023
    2. '           ' → logprob: -3.1795222759246826
    3. ' 
' → logprob: -4.9295220375061035
    4. '            
' → logprob: -5.8045220375061035
    5. '        
' → logprob: -7.5545220375061035
    6. '       ' → logprob: -8.554522514343262
    7. '    
' → logprob: -8.554522514343262
    8. '  
' → logprob: -9.179522514343262
    9. '[left' → logprob: -9.929522514343262
    10. '
' → logprob: -10.429522514343262

Token 342: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0912201777100563
    2. '
' → logprob: -2.4662201404571533
    3. '            
' → logprob: -6.341220378875732
    4. ' 
' → logprob: -7.966220378875732
    5. '    
' → logprob: -9.841219902038574
    6. '        
' → logprob: -10.716219902038574
    7. '  
' → logprob: -10.716219902038574
    8. '[left' → logprob: -11.091219902038574
    9. ' left' → logprob: -11.341219902038574
    10. '       ' → logprob: -11.841219902038574

Token 343: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.001530693843960762
    2. ' left' → logprob: -6.501530647277832
    3. '           ' → logprob: -10.501530647277832
    4. '	left' → logprob: -14.376530647277832
    5. '[left' → logprob: -16.50153160095215
    6. 'right' → logprob: -16.62653160095215
    7. '.left' → logprob: -16.75153160095215
    8. '   ' → logprob: -18.62653160095215
    9. '       ' → logprob: -19.25153160095215
    10. '_left' → logprob: -19.37653160095215

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. '＝' → logprob: -19.318147659301758
    4. '.=' → logprob: -20.068147659301758
    5. '+=' → logprob: -20.193147659301758
    6. '_=' → logprob: -20.568147659301758
    7. ' +=' → logprob: -21.318147659301758
    8. '=}' → logprob: -21.443147659301758
    9. '```' → logprob: -21.443147659301758
    10. ')' → logprob: -21.568147659301758

Token 345: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.029750604182481766
    2. ' mid' → logprob: -3.5297505855560303
    3. '(mid' → logprob: -16.90475082397461
    4. '[mid' → logprob: -17.65475082397461
    5. '   ' → logprob: -19.02975082397461
    6. '_mid' → logprob: -19.90475082397461
    7. ' ' → logprob: -20.77975082397461
    8. 'middle' → logprob: -22.15475082397461
    9. '
' → logprob: -22.40475082397461
    10. ' ' → logprob: -22.65475082397461

Token 346: '+' (ID: 10)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.035561420023441315
    2. ' mid' → logprob: -3.4105613231658936
    3. '+' → logprob: -7.160561561584473
    4. '=' → logprob: -7.410561561584473
    5. '(mid' → logprob: -8.410561561584473
    6. '[mid' → logprob: -8.660561561584473
    7. ' =' → logprob: -9.660561561584473
    8. '_mid' → logprob: -9.660561561584473
    9. ' +' → logprob: -12.535561561584473
    10. '.mid' → logprob: -13.035561561584473

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -19.875001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '
' → logprob: -23.000001907348633
    6. '۱' → logprob: -23.875001907348633
    7. '0' → logprob: -24.000001907348633
    8. '           ' → logprob: -24.250001907348633
    9. '       ' → logprob: -24.250001907348633
    10. '<|end|>' → logprob: -24.500001907348633

Token 348: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029923528200015426
    2. ' else' → logprob: -8.375299453735352
    3. 'else' → logprob: -10.125299453735352
    4. '<|end|>' → logprob: -10.625299453735352
    5. '
' → logprob: -13.250299453735352
    6. '```' → logprob: -13.375299453735352
    7. ')' → logprob: -15.625299453735352
    8. '<|end|>' → logprob: -15.750299453735352
    9. ',' → logprob: -15.875299453735352
    10. '#else' → logprob: -16.12529945373535

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009692259482108057
    2. 'else' → logprob: -7.375969409942627
    3. ' else' → logprob: -8.000968933105469
    4. 'right' → logprob: -12.375968933105469
    5. '```' → logprob: -13.250968933105469
    6. '   ' → logprob: -14.125968933105469
    7. ' right' → logprob: -14.375968933105469
    8. 'elif' → logprob: -16.87596893310547
    9. '           ' → logprob: -17.25096893310547
    10. '      ' → logprob: -17.25096893310547

Token 350: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5651084184646606
    2. 'else' (adapté à ' else') → logprob: -1.3151084184646606
    3. ' else' → logprob: -1.8151084184646606
    4. 'right' → logprob: -8.190108299255371
    5. ' right' → logprob: -9.065108299255371
    6. '   ' → logprob: -10.190108299255371
    7. '```' → logprob: -13.315108299255371
    8. '
' → logprob: -13.440108299255371
    9. '      ' → logprob: -14.690108299255371
    10. ' ' → logprob: -14.690108299255371

Token 351: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2056010365486145
    2. ':
' → logprob: -1.7056009769439697
    3. ':' → logprob: -5.705601215362549
    4. '
' → logprob: -7.580601215362549
    5. 'right' → logprob: -9.08060073852539
    6. '       ' → logprob: -9.83060073852539
    7. ' right' → logprob: -9.83060073852539
    8. '          ' → logprob: -10.33060073852539
    9. '{
' → logprob: -10.95560073852539
    10. '```' → logprob: -11.20560073852539

Token 352: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5378111004829407
    2. '           ' → logprob: -1.037811040878296
    3. 'right' → logprob: -3.037811040878296
    4. ' right' → logprob: -4.287811279296875
    5. '   ' → logprob: -10.287811279296875
    6. '	right' → logprob: -10.662811279296875
    7. '               ' → logprob: -12.662811279296875
    8. '
' → logprob: -13.162811279296875
    9. '```' → logprob: -13.662811279296875
    10. ',right' → logprob: -13.662811279296875

Token 353: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0015030752401798964
    2. ' right' → logprob: -6.501502990722656
    3. '       ' → logprob: -14.626502990722656
    4. '	right' → logprob: -15.501502990722656
    5. '           ' → logprob: -16.751502990722656
    6. '   ' → logprob: -17.251502990722656
    7. '_right' → logprob: -20.001502990722656
    8. '.right' → logprob: -20.376502990722656
    9. '
' → logprob: -20.376502990722656
    10. '[right' → logprob: -20.876502990722656

Token 354: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. '=end' → logprob: -19.443147659301758
    4. ' =
' → logprob: -20.443147659301758
    5. '=
' → logprob: -20.443147659301758
    6. '＝' → logprob: -20.443147659301758
    7. '.=' → logprob: -20.693147659301758
    8. ' ' → logprob: -20.943147659301758
    9. '=cut' → logprob: -20.943147659301758
    10. ' -=' → logprob: -21.318147659301758

Token 355: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.023245595395565033
    2. ' mid' → logprob: -3.7732455730438232
    3. '   ' → logprob: -16.898244857788086
    4. '(mid' → logprob: -17.148244857788086
    5. ' ' → logprob: -18.273244857788086
    6. '[mid' → logprob: -18.648244857788086
    7. '_mid' → logprob: -19.273244857788086
    8. 'middle' → logprob: -19.773244857788086
    9. '  ' → logprob: -19.898244857788086
    10. '           ' → logprob: -20.148244857788086

Token 356: '-' (ID: 12)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -5.848420551046729e-05
    2. ' mid' → logprob: -9.7500581741333
    3. '(mid' → logprob: -17.125059127807617
    4. '=' → logprob: -18.000059127807617
    5. '[mid' → logprob: -18.125059127807617
    6. '   ' → logprob: -19.375059127807617
    7. '_mid' → logprob: -19.375059127807617
    8. 'middle' → logprob: -20.625059127807617
    9. ' =' → logprob: -20.625059127807617
    10. '       ' → logprob: -21.250059127807617

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -16.875001907348633
    4. '```' → logprob: -17.125001907348633
    5. '0' → logprob: -17.875001907348633
    6. '2' → logprob: -18.375001907348633
    7. '...' → logprob: -18.562501907348633
    8. '=' → logprob: -18.875001907348633
    9. '+' → logprob: -19.000001907348633
    10. '<|end|>' → logprob: -19.500001907348633

Token 358: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07899763435125351
    2. '   ' → logprob: -2.5789976119995117
    3. ' print' → logprob: -9.453997611999512
    4. '
' → logprob: -10.578997611999512
    5. '```' → logprob: -13.078997611999512
    6. '    
' → logprob: -13.578997611999512
    7. '<|end|>' → logprob: -15.453997611999512
    8. '	print' → logprob: -15.578997611999512
    9. '#print' → logprob: -16.578998565673828
    10. '.print' → logprob: -16.828998565673828

Token 359: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011076119728386402
    2. '   ' → logprob: -4.511075973510742
    3. ' print' → logprob: -10.761075973510742
    4. '
' → logprob: -12.011075973510742
    5. '```' → logprob: -14.261075973510742
    6. '    
' → logprob: -15.136075973510742
    7. '	print' → logprob: -17.011075973510742
    8. '<|end|>' → logprob: -17.761075973510742
    9. '#print' → logprob: -18.136075973510742
    10. '  
' → logprob: -18.761075973510742

Token 360: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001963881659321487
    2. '   ' → logprob: -9.25019645690918
    3. ' print' → logprob: -9.25019645690918
    4. '
' → logprob: -12.50019645690918
    5. '```' → logprob: -15.37519645690918
    6. '    
' → logprob: -17.12519645690918
    7. '	print' → logprob: -18.37519645690918
    8. '#print' → logprob: -19.62519645690918
    9. '.print' → logprob: -19.75019645690918
    10. '  
' → logprob: -19.75019645690918

Token 361: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: 0.0
    2. '(' → logprob: -17.375
    3. '(answer' → logprob: -17.875
    4. ' (' → logprob: -18.25
    5. 'ans' → logprob: -18.625
    6. '(f' → logprob: -19.75
    7. '(abs' → logprob: -20.75
    8. '	ans' → logprob: -21.75
    9. '()' → logprob: -21.875
    10. '(
' → logprob: -22.375

Token 362: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.25
    3. ')
' → logprob: -17.0
    4. ')`' → logprob: -17.625
    5. '')' → logprob: -18.125
    6. '`)' → logprob: -18.5
    7. '))' → logprob: -18.875
    8. ')}' → logprob: -19.375
    9. '())' → logprob: -20.0
    10. '),' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 360
Tokens correctement prédits (1ère position, stricte): 155
Tokens correctement prédits (1ère position, avec adaptation): 172
Tokens correctement prédits (top 10): 321
Précision stricte (1ère position): 43.06%
Précision adaptée (1ère position): 47.78%
Précision (top 10): 89.17%
================================================================================
