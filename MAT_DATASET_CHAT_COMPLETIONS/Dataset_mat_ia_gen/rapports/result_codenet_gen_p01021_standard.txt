================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
def gcd(a,b):
    while b:
        a,b=b,a%b
    return a
def lcm(a,b):
    return a*b//gcd(a,b)
N,M=map(int,input().split())
A=[int(input()) for _ in range(N)]
B=list(map(int,input().split()))
L=1
for a in A:
    L=lcm(L,a)
G=0
for b in B:
    G=gcd(G,b)
count=0
if L%G==0:
    max_k=G//L
    for k in range(1,max_k+1):
        if G%(L*k)==0:
            count+=1
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010257817339152098
    2. '\' → logprob: -8.001026153564453
    3. '\n' → logprob: -8.376026153564453
    4. '<|end|>' → logprob: -9.001026153564453
    5. '```' → logprob: -9.251026153564453
    6. 'import' → logprob: -9.626026153564453
    7. '.pi' → logprob: -10.751026153564453
    8. '.e' → logprob: -10.876026153564453
    9. '<|end|>' → logprob: -11.126026153564453
    10. '.

' → logprob: -11.501026153564453

Token 4: ' gcd' (ID: 106918)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0035814186558127403
    2. ' math' → logprob: -6.878581523895264
    3. ' calculate' → logprob: -7.003581523895264
    4. ' sqrt' → logprob: -7.128581523895264
    5. ' space' → logprob: -8.128581047058105
    6. ' factorial' → logprob: -8.503581047058105
    7. ' square' → logprob: -9.503581047058105
    8. '_' → logprob: -10.378581047058105
    9. ' compute' → logprob: -10.378581047058105
    10. ' f' → logprob: -11.003581047058105

Token 5: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006507062818855047
    2. '_' → logprob: -6.00650691986084
    3. ' (' → logprob: -6.75650691986084
    4. '<|end|>' → logprob: -6.75650691986084
    5. '```' → logprob: -7.13150691986084
    6. '<|end|>' → logprob: -7.88150691986084
    7. ')' → logprob: -8.88150691986084
    8. '(x' → logprob: -9.38150691986084
    9. '(a' → logprob: -10.00650691986084
    10. '(
' → logprob: -10.25650691986084

Token 6: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005250345566309988
    2. ' ,' → logprob: -7.750524997711182
    3. ',b' → logprob: -9.75052547454834
    4. ',)' → logprob: -11.37552547454834
    5. ')' → logprob: -11.50052547454834
    6. ',a' → logprob: -11.62552547454834
    7. ',g' → logprob: -13.87552547454834
    8. ',int' → logprob: -14.25052547454834
    9. ',n' → logprob: -14.50052547454834
    10. ' ' → logprob: -14.50052547454834

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08938270062208176
    2. ')' → logprob: -2.4643826484680176
    3. ':' → logprob: -8.214383125305176
    4. '):
' → logprob: -9.214383125305176
    5. ',' → logprob: -11.214383125305176
    6. '=' → logprob: -11.214383125305176
    7. ''):' → logprob: -11.714383125305176
    8. ')=' → logprob: -12.214383125305176
    9. '```' → logprob: -12.339383125305176
    10. ')>' → logprob: -12.714383125305176

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5442674160003662
    2. ':' → logprob: -1.0442674160003662
    3. '():' → logprob: -3.419267416000366
    4. '):' → logprob: -3.794267416000366
    5. ':return' → logprob: -5.419267654418945
    6. '```' → logprob: -5.919267654418945
    7. '(' → logprob: -6.544267654418945
    8. ' :' → logprob: -7.294267654418945
    9. ' return' → logprob: -7.794267654418945
    10. ':**' → logprob: -8.419267654418945

Token 9: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5414936542510986
    2. ' if' → logprob: -1.0414936542510986
    3. 'if' → logprob: -3.5414936542510986
    4. ' return' → logprob: -4.5414934158325195
    5. ' ' → logprob: -4.6664934158325195
    6. '```' → logprob: -5.1664934158325195
    7. 'i' → logprob: -5.5414934158325195
    8. 'return' → logprob: -6.4164934158325195
    9. ' i' → logprob: -6.6664934158325195
    10. '    ' → logprob: -6.6664934158325195

Token 10: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.02076936885714531
    2. ' ' → logprob: -4.3957695960998535
    3. ' b' → logprob: -4.8957695960998535
    4. ' not' → logprob: -7.7707695960998535
    5. 'a' → logprob: -8.395769119262695
    6. ' (' → logprob: -10.145769119262695
    7. ' math' → logprob: -10.895769119262695
    8. 'b' → logprob: -11.520769119262695
    9. '  ' → logprob: -11.645769119262695
    10. ' c' → logprob: -12.645769119262695

Token 11: ':
' (ID: 734)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.22593219578266144
    2. ' >' → logprob: -2.2259321212768555
    3. '>' → logprob: -3.1009321212768555
    4. ':' → logprob: -3.2259321212768555
    5. '!=' → logprob: -4.9759321212768555
    6. ' ' → logprob: -7.1009321212768555
    7. ' and' → logprob: -7.8509321212768555
    8. ' :' → logprob: -7.9759321212768555
    9. '<|end|>' → logprob: -8.225932121276855
    10. '   ' → logprob: -8.850932121276855

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047244925051927567
    2. 'a' → logprob: -3.9222450256347656
    3. '    ' → logprob: -4.797245025634766
    4. ' a' → logprob: -5.047245025634766
    5. '```' → logprob: -5.922245025634766
    6. '   ' → logprob: -6.172245025634766
    7. '=' → logprob: -6.672245025634766
    8. ' =' → logprob: -6.797245025634766
    9. '     ' → logprob: -7.547245025634766
    10. '`' → logprob: -7.547245025634766

Token 13: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.5787038207054138
    2. ' a' → logprob: -0.8287038207054138
    3. '       ' → logprob: -6.453703880310059
    4. '           ' → logprob: -7.703703880310059
    5. '```' → logprob: -8.328703880310059
    6. ' =' → logprob: -9.203703880310059
    7. '    ' → logprob: -9.703703880310059
    8. '   ' → logprob: -9.828703880310059
    9. '        ' → logprob: -9.953703880310059
    10. '=a' → logprob: -10.578703880310059

Token 14: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6873622536659241
    2. ' %=' → logprob: -0.8123622536659241
    3. '%=' → logprob: -4.187362194061279
    4. ' %' → logprob: -4.312362194061279
    5. '%' → logprob: -4.312362194061279
    6. ' ,' → logprob: -5.312362194061279
    7. '=' → logprob: -5.562362194061279
    8. ' =' → logprob: -6.312362194061279
    9. '%,' → logprob: -8.437362670898438
    10. ' %,' → logprob: -8.562362670898438

Token 15: '=b' (ID: 49769)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6331874132156372
    2. ' =' → logprob: -0.7581874132156372
    3. ',' → logprob: -7.508187294006348
    4. ' ,' → logprob: -10.883187294006348
    5. '<|end|>' → logprob: -12.633187294006348
    6. ' =",' → logprob: -12.883187294006348
    7. ')=' → logprob: -13.133187294006348
    8. ')' → logprob: -13.508187294006348
    9. '```' → logprob: -13.633187294006348
    10. '=a' → logprob: -13.633187294006348

Token 16: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23118525743484497
    2. ',b' → logprob: -2.3561851978302
    3. '%b' → logprob: -2.7311851978302
    4. ',a' → logprob: -4.356185436248779
    5. 'b' → logprob: -4.356185436248779
    6. ' b' → logprob: -4.731185436248779
    7. '%' → logprob: -5.606185436248779
    8. ' ,' → logprob: -5.731185436248779
    9. '%,' → logprob: -6.606185436248779
    10. ' ' → logprob: -7.356185436248779

Token 17: '%b' (ID: 148937)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.14240379631519318
    2. ' %' → logprob: -2.2674038410186768
    3. '%b' → logprob: -3.6424038410186768
    4. '<|end|>' → logprob: -6.142403602600098
    5. ' ' → logprob: -8.017403602600098
    6. '[' → logprob: -8.767403602600098
    7. '```' → logprob: -9.642403602600098
    8. '%s' → logprob: -9.892403602600098
    9. 'b' → logprob: -10.017403602600098
    10. '%x' → logprob: -10.767403602600098

Token 18: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6952861547470093
    2. ' 
' → logprob: -1.3202861547470093
    3. ' return' → logprob: -2.445286273956299
    4. '    ' → logprob: -2.570286273956299
    5. '   ' → logprob: -4.445286273956299
    6. 'return' (adapté à ' return') → logprob: -4.445286273956299
    7. '    
' → logprob: -4.570286273956299
    8. '     
' → logprob: -4.695286273956299
    9. ' \' → logprob: -4.695286273956299
    10. '\n' → logprob: -5.195286273956299

Token 21: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759484171867371
    2. ' a' → logprob: -0.8259484171867371
    3. ' ' → logprob: -12.075948715209961
    4. '_a' → logprob: -14.075948715209961
    5. '	a' → logprob: -14.450948715209961
    6. 'space' → logprob: -15.200948715209961
    7. ' ' → logprob: -15.200948715209961
    8. '   ' → logprob: -15.325948715209961
    9. '<|end|>' → logprob: -15.575948715209961
    10. '```' → logprob: -15.700948715209961

Token 22: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5546278953552246
    2. '(' → logprob: -1.9296278953552246
    3. '\n' → logprob: -2.6796278953552246
    4. '<|end|>' → logprob: -2.6796278953552246
    5. '

' → logprob: -3.3046278953552246
    6. '```' → logprob: -3.9296278953552246
    7. '\' → logprob: -4.179627895355225
    8. '(
' → logprob: -4.304627895355225
    9. '*' → logprob: -4.554627895355225
    10. ')' → logprob: -4.679627895355225

Token 23: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6038568019866943
    2. '<|end|>' → logprob: -1.4788568019866943
    3. '#' → logprob: -2.6038568019866943
    4. '```' → logprob: -2.8538568019866943
    5. '\n' → logprob: -3.7288568019866943
    6. 'def' → logprob: -4.103857040405273
    7. '

' → logprob: -4.353857040405273
    8. 'n' → logprob: -4.728857040405273
    9. ' 
' → logprob: -5.353857040405273
    10. '*' → logprob: -5.728857040405273

Token 24: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.001080206478945911
    2. 'l' → logprob: -6.87608003616333
    3. ' factorial' → logprob: -11.126080513000488
    4. ' ' → logprob: -11.626080513000488
    5. ' f' → logprob: -12.751080513000488
    6. ' gcd' → logprob: -12.876080513000488
    7. '```' → logprob: -12.876080513000488
    8. 's' → logprob: -13.251080513000488
    9. '_l' → logprob: -13.501080513000488
    10. '_' → logprob: -13.501080513000488

Token 25: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.0010538881178945303
    2. 'c' → logprob: -6.876053810119629
    3. 'cms' → logprob: -11.376053810119629
    4. ' cm' → logprob: -12.876053810119629
    5. '_cm' → logprob: -13.376053810119629
    6. 'cd' → logprob: -13.501053810119629
    7. '_c' → logprob: -14.126053810119629
    8. '   ' → logprob: -14.251053810119629
    9. 'e' → logprob: -14.376053810119629
    10. 'cmd' → logprob: -14.751053810119629

Token 26: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018228139728307724
    2. '(a' → logprob: -4.018228054046631
    3. ' (' → logprob: -9.643228530883789
    4. '```' → logprob: -12.768228530883789
    5. '(x' → logprob: -13.143228530883789
    6. '(
' → logprob: -13.393228530883789
    7. '(A' → logprob: -13.893228530883789
    8. '(n' → logprob: -14.018228530883789
    9. '(

' → logprob: -14.393228530883789
    10. '((' → logprob: -14.518228530883789

Token 27: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01418866403400898
    2. ',b' → logprob: -4.264188766479492
    3. ',a' → logprob: -11.264188766479492
    4. ' ,' → logprob: -11.639188766479492
    5. ',c' → logprob: -14.639188766479492
    6. ',s' → logprob: -14.764188766479492
    7. ',

' → logprob: -14.889188766479492
    8. ',p' → logprob: -15.014188766479492
    9. ',int' → logprob: -15.764188766479492
    10. ',f' → logprob: -15.889188766479492

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006559623870998621
    2. ')' → logprob: -7.3756561279296875
    3. '):
' → logprob: -10.750656127929688
    4. ' ):' → logprob: -12.750656127929688
    5. ':' → logprob: -13.250656127929688
    6. '   ' → logprob: -13.375656127929688
    7. ',' → logprob: -14.375656127929688
    8. '):
' → logprob: -15.250656127929688
    9. '),' → logprob: -15.500656127929688
    10. ')：' → logprob: -15.500656127929688

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007990269223228097
    2. ' return' → logprob: -7.250799179077148
    3. 'return' → logprob: -9.375799179077148
    4. '```' → logprob: -13.750799179077148
    5. '    
' → logprob: -13.875799179077148
    6. ' (' → logprob: -14.250799179077148
    7. '   ' → logprob: -14.875799179077148
    8. '	return' → logprob: -15.000799179077148
    9. '    ' → logprob: -15.375799179077148
    10. '       ' → logprob: -15.500799179077148

Token 30: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.29017511010169983
    2. '   ' → logprob: -1.5401750802993774
    3. 'return' (adapté à ' return') → logprob: -3.290175199508667
    4. ' if' → logprob: -8.915175437927246
    5. '    ' → logprob: -10.040175437927246
    6. ' while' → logprob: -10.165175437927246
    7. '```' → logprob: -11.540175437927246
    8. 'if' → logprob: -11.790175437927246
    9. '       ' → logprob: -11.790175437927246
    10. '	return' → logprob: -12.165175437927246

Token 31: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4359089434146881
    2. ' a' → logprob: -1.0609089136123657
    3. ' (' → logprob: -5.935908794403076
    4. ' abs' → logprob: -6.060908794403076
    5. '(a' → logprob: -6.435908794403076
    6. 'abs' → logprob: -7.810908794403076
    7. ' ' → logprob: -9.810909271240234
    8. ' int' → logprob: -10.310909271240234
    9. '(int' → logprob: -10.560909271240234
    10. 'int' → logprob: -10.560909271240234

Token 32: '*b' (ID: 72162)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.018768908455967903
    2. '*b' → logprob: -4.268768787384033
    3. ' *' → logprob: -5.518768787384033
    4. '*l' → logprob: -8.143769264221191
    5. '*a' → logprob: -8.768769264221191
    6. '//' → logprob: -9.893769264221191
    7. '**' → logprob: -10.143769264221191
    8. '*(' → logprob: -12.393769264221191
    9. '*u' → logprob: -12.393769264221191
    10. '*m' → logprob: -12.393769264221191

Token 33: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2519353926181793
    2. ' //' → logprob: -1.501935362815857
    3. '/' → logprob: -12.626935005187988
    4. ' /' → logprob: -14.501935005187988
    5. '```' → logprob: -14.751935005187988
    6. '://' → logprob: -15.001935005187988
    7. ')//' → logprob: -15.001935005187988
    8. ' ' → logprob: -15.126935005187988
    9. ' ' → logprob: -15.251935005187988
    10. '#' → logprob: -15.501935005187988

Token 34: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -6.704273118884885e-07
    2. ' gcd' → logprob: -14.375000953674316
    3. 'math' → logprob: -17.375
    4. 'gcc' → logprob: -21.5
    5. 'gc' → logprob: -21.875
    6. '(g' → logprob: -22.125
    7. '   ' → logprob: -22.625
    8. '_g' → logprob: -22.75
    9. '	g' → logprob: -23.0
    10. ''g' → logprob: -23.0

Token 35: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -3.297462171758525e-05
    2. 'c' → logprob: -10.375033378601074
    3. 'cdn' → logprob: -13.500033378601074
    4. 'cdf' → logprob: -15.875033378601074
    5. '	cd' → logprob: -16.500032424926758
    6. 'CD' → logprob: -17.750032424926758
    7. '_cd' → logprob: -18.250032424926758
    8. 'cmath' → logprob: -19.125032424926758
    9. ' cd' → logprob: -19.250032424926758
    10. 'cf' → logprob: -19.250032424926758

Token 36: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.023281123489141464
    2. '(' → logprob: -3.7732810974121094
    3. '(b' → logprob: -10.89828109741211
    4. ' (' → logprob: -11.14828109741211
    5. '(
' → logprob: -14.39828109741211
    6. '(s' → logprob: -14.52328109741211
    7. '(ab' → logprob: -14.89828109741211
    8. '(`' → logprob: -16.14828109741211
    9. '```' → logprob: -16.14828109741211
    10. '(None' → logprob: -16.27328109741211

Token 37: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.06297457218170166
    2. ',' → logprob: -2.812974452972412
    3. 'b' → logprob: -6.937974452972412
    4. ' ,' → logprob: -10.31297492980957
    5. ')' → logprob: -14.18797492980957
    6. ' b' → logprob: -14.43797492980957
    7. ' ' → logprob: -14.43797492980957
    8. '   ' → logprob: -15.18797492980957
    9. ')b' → logprob: -15.43797492980957
    10. '(' → logprob: -15.68797492980957

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.625
    3. ')
' → logprob: -16.75
    4. '))' → logprob: -17.875
    5. ')a' → logprob: -19.25
    6. '）' → logprob: -19.375
    7. ')`' → logprob: -19.75
    8. '')' → logprob: -20.25
    9. ')#' → logprob: -20.375
    10. ')))' → logprob: -20.5

Token 39: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6486489772796631
    2. '
' → logprob: -1.148648977279663
    3. '<|end|>' → logprob: -2.523648977279663
    4. '\n' → logprob: -3.898648977279663
    5. '#' → logprob: -4.148649215698242
    6. 'n' → logprob: -4.523649215698242
    7. '```' → logprob: -4.648649215698242
    8. '[' → logprob: -5.773649215698242
    9. '\' → logprob: -5.773649215698242
    10. ' 
' → logprob: -6.023649215698242

Token 40: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03535938262939453
    2. ' ' → logprob: -3.7853593826293945
    3. '=' → logprob: -4.5353593826293945
    4. '  ' → logprob: -7.0353593826293945
    5. '.' → logprob: -9.660359382629395
    6. ',' → logprob: -9.910359382629395
    7. ' ,' → logprob: -10.160359382629395
    8. '_' → logprob: -10.285359382629395
    9. 'space' → logprob: -10.535359382629395
    10. '<|end|>' → logprob: -10.535359382629395

Token 41: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17978137731552124
    2. '=' → logprob: -1.804781436920166
    3. ',' → logprob: -10.804780960083008
    4. '=int' → logprob: -12.679780960083008
    5. ' =
' → logprob: -12.679780960083008
    6. ' ' → logprob: -12.804780960083008
    7. ' =
' → logprob: -13.804780960083008
    8. '  ' → logprob: -14.179780960083008
    9. '=

' → logprob: -14.304780960083008
    10. ' ='' → logprob: -14.429780960083008

Token 42: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.01639585569500923
    2. '10' → logprob: -5.3913960456848145
    3. 'int' → logprob: -5.5163960456848145
    4. ' map' → logprob: -5.6413960456848145
    5. 'list' → logprob: -6.3913960456848145
    6. 'input' → logprob: -7.3913960456848145
    7. '100' → logprob: -7.5163960456848145
    8. '0' → logprob: -8.141395568847656
    9. '[int' → logprob: -8.141395568847656
    10. '1' → logprob: -8.391395568847656

Token 43: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002677918178960681
    2. '(' → logprob: -6.002677917480469
    3. '(input' → logprob: -9.377677917480469
    4. '[int' → logprob: -9.502677917480469
    5. '(str' → logprob: -11.252677917480469
    6. 'int' → logprob: -11.502677917480469
    7. '<int' → logprob: -11.877677917480469
    8. '(list' → logprob: -12.502677917480469
    9. '(tuple' → logprob: -13.002677917480469
    10. '```' → logprob: -13.252677917480469

Token 44: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.22740690410137177
    2. ',' → logprob: -1.6024068593978882
    3. '(input' → logprob: -6.852406978607178
    4. 'input' → logprob: -7.227406978607178
    5. '(' → logprob: -9.10240650177002
    6. ' ,' → logprob: -10.47740650177002
    7. '(),' → logprob: -10.85240650177002
    8. ')' → logprob: -11.10240650177002
    9. ' input' → logprob: -11.35240650177002
    10. ',int' → logprob: -11.47740650177002

Token 45: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3213300108909607
    2. '()' → logprob: -1.8213300704956055
    3. '().' → logprob: -2.1963300704956055
    4. '());' → logprob: -7.6963300704956055
    5. '()))' → logprob: -7.9463300704956055
    6. '()>' → logprob: -8.196330070495605
    7. '(),' → logprob: -9.446330070495605
    8. '(' → logprob: -9.446330070495605
    9. '()),' → logprob: -9.571330070495605
    10. '();)' → logprob: -9.571330070495605

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.0339031834737398e-05
    2. 'strip' → logprob: -10.875020027160645
    3. ' split' → logprob: -14.125020027160645
    4. '(split' → logprob: -15.000020027160645
    5. 'rstrip' → logprob: -15.250020027160645
    6. 'spl' → logprob: -16.87502098083496
    7. ')' → logprob: -17.00002098083496
    8. 's' → logprob: -19.25002098083496
    9. '```' → logprob: -19.50002098083496
    10. 'sp' → logprob: -19.50002098083496

Token 47: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06309030205011368
    2. ')' → logprob: -3.0630903244018555
    3. '()))' → logprob: -5.0630903244018555
    4. '()' → logprob: -5.5630903244018555
    5. '))' → logprob: -5.5630903244018555
    6. '(' → logprob: -8.938090324401855
    7. '('' → logprob: -9.313090324401855
    8. '(','' → logprob: -9.438090324401855
    9. '(),' → logprob: -10.688090324401855
    10. ' ())' → logprob: -11.188090324401855

Token 48: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45600584149360657
    2. 'A' → logprob: -1.0810058116912842
    3. 'l' → logprob: -4.706006050109863
    4. 'arr' → logprob: -5.456006050109863
    5. 'lst' → logprob: -5.581006050109863
    6. 'L' → logprob: -5.581006050109863
    7. 'numbers' → logprob: -5.706006050109863
    8. 'x' → logprob: -7.956006050109863
    9. 'list' → logprob: -7.956006050109863
    10. 'array' → logprob: -8.331006050109863

Token 49: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01117219403386116
    2. ' =' → logprob: -4.886172294616699
    3. '=[' → logprob: -6.511172294616699
    4. '=[]' → logprob: -6.636172294616699
    5. '=list' → logprob: -7.636172294616699
    6. ',' → logprob: -8.6361722946167
    7. ' =[' → logprob: -10.5111722946167
    8. '=int' → logprob: -11.0111722946167
    9. '[' → logprob: -11.7611722946167
    10. '_=' → logprob: -12.0111722946167

Token 50: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.24179228907451e-05
    2. ' int' → logprob: -10.500061988830566
    3. '0' → logprob: -10.750061988830566
    4. 'map' → logprob: -11.500061988830566
    5. ']int' → logprob: -13.125061988830566
    6. '(int' → logprob: -14.375061988830566
    7. '[int' → logprob: -16.000062942504883
    8. '```' → logprob: -16.000062942504883
    9. '<int' → logprob: -16.500062942504883
    10. 'list' → logprob: -16.750062942504883

Token 51: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5644094944000244
    2. '(' → logprob: -0.9394094944000244
    3. '(x' → logprob: -3.6894094944000244
    4. '()' → logprob: -4.814409255981445
    5. '()]' → logprob: -5.564409255981445
    6. '(i' → logprob: -5.814409255981445
    7. ' (' → logprob: -8.689409255981445
    8. '(
' → logprob: -9.064409255981445
    9. '(

' → logprob: -9.064409255981445
    10. '(a' → logprob: -10.439409255981445

Token 52: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00031055594445206225
    2. '()' → logprob: -8.250310897827148
    3. '()]' → logprob: -10.750310897827148
    4. '())
' → logprob: -11.375310897827148
    5. ')' → logprob: -11.750310897827148
    6. '()),' → logprob: -13.000310897827148
    7. ' ())' → logprob: -13.625310897827148
    8. '())

' → logprob: -13.875310897827148
    9. '()))' → logprob: -13.875310897827148
    10. '();)' → logprob: -14.250310897827148

Token 53: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35145303606987
    2. '()' → logprob: -1.2264530658721924
    3. 'for' → logprob: -6.101452827453613
    4. '())' → logprob: -7.476452827453613
    5. ' for' → logprob: -9.726452827453613
    6. '(' → logprob: -9.851452827453613
    7. ' ' → logprob: -10.726452827453613
    8. ')]' → logprob: -10.976452827453613
    9. ' )' → logprob: -11.351452827453613
    10. ' ()' → logprob: -11.851452827453613

Token 54: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06124686449766159
    2. ' range' → logprob: -3.061246871948242
    3. ' _' → logprob: -4.436246871948242
    4. 'range' → logprob: -8.061246871948242
    5. '_range' → logprob: -8.186246871948242
    6. ' in' → logprob: -9.686246871948242
    7. ' i' → logprob: -9.811246871948242
    8. ' ' → logprob: -10.686246871948242
    9. 'i' → logprob: -13.186246871948242
    10. '(range' → logprob: -13.311246871948242

Token 55: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10048972070217133
    2. ' range' → logprob: -2.350489616394043
    3. '(range' → logprob: -8.975489616394043
    4. 'in' → logprob: -9.850489616394043
    5. '_' → logprob: -10.225489616394043
    6. '	range' → logprob: -10.600489616394043
    7. ' in' → logprob: -10.850489616394043
    8. '_range' → logprob: -11.475489616394043
    9. 'ange' → logprob: -12.350489616394043
    10. 'rang' → logprob: -13.100489616394043

Token 56: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004309076175559312
    2. ' range' → logprob: -7.750431060791016
    3. '(range' → logprob: -16.375431060791016
    4. '	range' → logprob: -17.500431060791016
    5. ' ' → logprob: -17.875431060791016
    6. '[' → logprob: -18.000431060791016
    7. 'rang' → logprob: -18.500431060791016
    8. 'ran' → logprob: -19.625431060791016
    9. 'r' → logprob: -19.625431060791016
    10. '   ' → logprob: -19.875431060791016

Token 57: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.003975577652454376
    2. '(N' → logprob: -6.0039753913879395
    3. '(' → logprob: -6.5039753913879395
    4. '(
' → logprob: -14.628975868225098
    5. 'M' → logprob: -14.753975868225098
    6. ' (' → logprob: -15.503975868225098
    7. ')' → logprob: -16.00397491455078
    8. '(n' → logprob: -17.00397491455078
    9. '(

' → logprob: -17.37897491455078
    10. '(m' → logprob: -18.25397491455078

Token 58: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011868956498801708
    2. ']' → logprob: -7.126186847686768
    3. ')' → logprob: -7.876186847686768
    4. ' )' → logprob: -14.251187324523926
    5. '])]' → logprob: -14.876187324523926
    6. '])' → logprob: -15.376187324523926
    7. ')]
' → logprob: -15.501187324523926
    8. ')],' → logprob: -15.501187324523926
    9. '')]' → logprob: -15.751187324523926
    10. '）' → logprob: -15.751187324523926

Token 59: 'B' (ID: 33)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01270034909248352
    2. 'a' → logprob: -5.88770055770874
    3. 'g' → logprob: -6.01270055770874
    4. 't' → logprob: -6.26270055770874
    5. 'ans' → logprob: -6.51270055770874
    6. 'result' → logprob: -7.26270055770874
    7. 'A' → logprob: -7.51270055770874
    8. 'x' → logprob: -7.51270055770874
    9. 'c' → logprob: -8.387700080871582
    10. 'from' → logprob: -8.512700080871582

Token 60: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015448570251464844
    2. ' =' → logprob: -4.265448570251465
    3. '=[' → logprob: -6.890448570251465
    4. '=[]' → logprob: -8.640448570251465
    5. ' =[' → logprob: -10.140448570251465
    6. '[' → logprob: -10.765448570251465
    7. '.' → logprob: -11.640448570251465
    8. ',' → logprob: -12.390448570251465
    9. '={}' → logprob: -12.890448570251465
    10. '=int' → logprob: -13.140448570251465

Token 61: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08060438930988312
    2. '(map' → logprob: -2.580604314804077
    3. '(int' → logprob: -6.830604553222656
    4. '(input' → logprob: -8.330604553222656
    5. '(range' → logprob: -9.455604553222656
    6. '(math' → logprob: -9.455604553222656
    7. '(s' → logprob: -9.580604553222656
    8. '(
' → logprob: -10.080604553222656
    9. '()' → logprob: -10.205604553222656
    10. '(eval' → logprob: -10.955604553222656

Token 62: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004129453562200069
    2. '(' → logprob: -5.504129409790039
    3. '(input' → logprob: -10.379129409790039
    4. '[int' → logprob: -12.004129409790039
    5. 'int' → logprob: -12.504129409790039
    6. '(list' → logprob: -13.004129409790039
    7. '<int' → logprob: -13.129129409790039
    8. '(str' → logprob: -13.379129409790039
    9. '=int' → logprob: -13.879129409790039
    10. ' (' → logprob: -14.129129409790039

Token 63: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.04410655423998833
    2. ',' → logprob: -3.7941064834594727
    3. ',int' → logprob: -3.9191064834594727
    4. '(input' → logprob: -8.044106483459473
    5. '(' → logprob: -8.169106483459473
    6. ' ,' → logprob: -9.169106483459473
    7. '(int' → logprob: -10.294106483459473
    8. ',(' → logprob: -10.919106483459473
    9. ',float' → logprob: -11.794106483459473
    10. ',list' → logprob: -12.544106483459473

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00033879990223795176
    2. '()' → logprob: -8.000338554382324
    3. '())' → logprob: -13.375338554382324
    4. ')' → logprob: -14.250338554382324
    5. '(' → logprob: -14.875338554382324
    6. '()))' → logprob: -15.125338554382324
    7. ' ().' → logprob: -15.625338554382324
    8. '()
' → logprob: -16.12533950805664
    9. '()-' → logprob: -17.50033950805664
    10. '()

' → logprob: -17.62533950805664

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. 'strip' → logprob: -13.625001907348633
    3. ' split' → logprob: -14.375001907348633
    4. 'spl' → logprob: -16.750001907348633
    5. 'rstrip' → logprob: -17.750001907348633
    6. '(split' → logprob: -18.500001907348633
    7. 'sp' → logprob: -19.250001907348633
    8. ')' → logprob: -19.375001907348633
    9. 's' → logprob: -19.500001907348633
    10. '_split' → logprob: -20.625001907348633

Token 66: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.40094608068466187
    2. '())' → logprob: -1.1509461402893066
    3. '))' → logprob: -4.775946140289307
    4. ')' → logprob: -5.650946140289307
    5. '()' → logprob: -6.275946140289307
    6. '(' → logprob: -9.150945663452148
    7. '()))
' → logprob: -11.400945663452148
    8. ' ())' → logprob: -11.775945663452148
    9. '()));' → logprob: -11.900945663452148
    10. '())
' → logprob: -12.525945663452148

Token 67: 'L' (ID: 43)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.17748337984085083
    2. 'g' → logprob: -3.177483320236206
    3. 'for' → logprob: -3.302483320236206
    4. 'result' → logprob: -3.677483320236206
    5. 'ans' → logprob: -4.177483558654785
    6. 'c' → logprob: -5.052483558654785
    7. 'a' → logprob: -5.302483558654785
    8. 'C' → logprob: -5.302483558654785
    9. 'count' → logprob: -5.427483558654785
    10. 'res' → logprob: -5.552483558654785

Token 68: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014935961924493313
    2. ' =' → logprob: -4.2649359703063965
    3. '=[]' → logprob: -8.014935493469238
    4. 'CM' → logprob: -9.014935493469238
    5. 'C' → logprob: -9.264935493469238
    6. '_' → logprob: -9.639935493469238
    7. ',' → logprob: -10.389935493469238
    8. '=C' → logprob: -10.639935493469238
    9. '=int' → logprob: -11.014935493469238
    10. '_=' → logprob: -11.139935493469238

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29163622856140137
    2. 'l' → logprob: -1.5416362285614014
    3. 'A' → logprob: -3.2916362285614014
    4. 'B' → logprob: -7.4166364669799805
    5. 'a' → logprob: -8.04163646697998
    6. 'lc' → logprob: -8.54163646697998
    7. 'cm' → logprob: -8.66663646697998
    8. 'b' → logprob: -9.04163646697998
    9. '0' → logprob: -9.54163646697998
    10. '[l' → logprob: -9.66663646697998

Token 70: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.826880931854248
    2. '<|end|>' → logprob: -1.076880931854248
    3. ' ' → logprob: -1.951880931854248
    4. ' for' → logprob: -3.201880931854248
    5. '<|end|>' → logprob: -3.326880931854248
    6. '' → logprob: -7.201880931854248
    7. '0' → logprob: -7.451880931854248
    8. '*' → logprob: -8.076881408691406
    9. ')' → logprob: -8.451881408691406
    10. '
' → logprob: -8.451881408691406

Token 71: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017064884305000305
    2. ' for' → logprob: -4.142065048217773
    3. '<|end|>' → logprob: -7.142065048217773
    4. '<|end|>' → logprob: -9.267065048217773
    5. '+' → logprob: -10.642065048217773
    6. 'For' → logprob: -10.892065048217773
    7. '	for' → logprob: -11.392065048217773
    8. '#' → logprob: -11.392065048217773
    9. '*' → logprob: -11.392065048217773
    10. '```' → logprob: -11.517065048217773

Token 72: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2567412555217743
    2. 'a' → logprob: -1.5067412853240967
    3. ' i' → logprob: -5.506741046905518
    4. 'i' → logprob: -7.631741046905518
    5. ' A' → logprob: -8.881741523742676
    6. 'A' → logprob: -10.256741523742676
    7. ' ' → logprob: -10.381741523742676
    8. '	a' → logprob: -11.006741523742676
    9. ' ai' → logprob: -11.631741523742676
    10. ' Ai' → logprob: -11.756741523742676

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023332128301262856
    2. 'in' → logprob: -3.773332118988037
    3. ' ' → logprob: -9.523332595825195
    4. 'a' → logprob: -12.523332595825195
    5. ' i' → logprob: -12.648332595825195
    6. '	in' → logprob: -13.023332595825195
    7. 's' → logprob: -13.648332595825195
    8. '_' → logprob: -14.523332595825195
    9. 'i' → logprob: -14.648332595825195
    10. '_in' → logprob: -14.773332595825195

Token 74: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0019286326132714748
    2. ' A' → logprob: -6.251928806304932
    3. '<|end|>' → logprob: -17.251928329467773
    4. '	A' → logprob: -18.751928329467773
    5. ' ' → logprob: -19.251928329467773
    6. '>A' → logprob: -19.376928329467773
    7. '_A' → logprob: -19.751928329467773
    8. 'a' → logprob: -19.876928329467773
    9. 'B' → logprob: -20.501928329467773
    10. '(A' → logprob: -20.626928329467773

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.729906196298543e-06
    2. ':
' → logprob: -12.750009536743164
    3. ':L' → logprob: -13.125009536743164
    4. ' :' → logprob: -13.250009536743164
    5. '):' → logprob: -13.500009536743164
    6. ':**' → logprob: -14.375009536743164
    7. ',' → logprob: -15.250009536743164
    8. 'L' → logprob: -15.500009536743164
    9. '：' → logprob: -15.625009536743164
    10. '=' → logprob: -16.375009536743164

Token 76: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.20144852995872498
    2. ' L' → logprob: -1.7014485597610474
    3. ' ' → logprob: -11.451448440551758
    4. '   ' → logprob: -12.076448440551758
    5. ' if' → logprob: -12.576448440551758
    6. 'if' → logprob: -12.701448440551758
    7. '>L' → logprob: -12.701448440551758
    8. '```' → logprob: -12.701448440551758
    9. 'l' → logprob: -12.951448440551758
    10. '<|end|>' → logprob: -14.201448440551758

Token 78: '=l' (ID: 103670)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004190944600850344
    2. ' =' → logprob: -6.129190921783447
    3. '*=' → logprob: -6.254190921783447
    4. ' *=' → logprob: -10.254191398620605
    5. '=l' → logprob: -10.254191398620605
    6. '=*' → logprob: -11.879191398620605
    7. '=L' → logprob: -13.754191398620605
    8. '＝' → logprob: -14.129191398620605
    9. '=

' → logprob: -14.504191398620605
    10. ' ' → logprob: -15.004191398620605

Token 79: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -7.3458322731312364e-06
    2. 'c' → logprob: -12.000007629394531
    3. 'cms' → logprob: -15.000007629394531
    4. ' cm' → logprob: -15.000007629394531
    5. '(cm' → logprob: -15.625007629394531
    6. '   ' → logprob: -16.25000762939453
    7. 'a' → logprob: -16.37500762939453
    8. 'l' → logprob: -17.62500762939453
    9. '(' → logprob: -17.62500762939453
    10. '*l' → logprob: -17.62500762939453

Token 80: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.03804183006286621
    2. '(' → logprob: -3.288041830062866
    3. '(a' → logprob: -16.413042068481445
    4. '(
' → logprob: -16.413042068481445
    5. '(l' → logprob: -16.913042068481445
    6. ' (' → logprob: -17.163042068481445
    7. '(A' → logprob: -17.288042068481445
    8. '(

' → logprob: -18.038042068481445
    9. 'a' → logprob: -19.038042068481445
    10. '```' → logprob: -19.288042068481445

Token 81: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.5830390453338623
    2. ',' → logprob: -0.8330390453338623
    3. 'a' → logprob: -4.958039283752441
    4. ' ,' → logprob: -10.583039283752441
    5. '(a' → logprob: -11.833039283752441
    6. ' a' → logprob: -11.958039283752441
    7. ')a' → logprob: -13.333039283752441
    8. ',b' → logprob: -13.458039283752441
    9. ')' → logprob: -13.583039283752441
    10. ',
' → logprob: -14.083039283752441

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. ')
' → logprob: -12.00001049041748
    3. '<|end|>' → logprob: -13.12501049041748
    4. ' )' → logprob: -13.50001049041748
    5. ')L' → logprob: -15.50001049041748
    6. ')a' → logprob: -16.000009536743164
    7. '))' → logprob: -17.000009536743164
    8. ')

' → logprob: -17.125009536743164
    9. '
' → logprob: -17.125009536743164
    10. '),' → logprob: -17.375009536743164

Token 83: 'G' (ID: 38)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.009402871131897
    2. 'for' → logprob: -1.134402871131897
    3. '
' → logprob: -2.5094027519226074
    4. ' 
' → logprob: -2.6344027519226074
    5. '\n' → logprob: -2.7594027519226074
    6. '<|end|>' → logprob: -3.3844027519226074
    7. '\' → logprob: -3.8844027519226074
    8. '*' → logprob: -4.259402751922607
    9. '' → logprob: -5.134402751922607
    10. '#' → logprob: -5.259402751922607

Token 84: '=' (ID: 28)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0371013842523098
    2. '=' → logprob: -3.5371012687683105
    3. '=M' → logprob: -5.5371012687683105
    4. 'B' → logprob: -6.2871012687683105
    5. ' =' → logprob: -8.537101745605469
    6. ' M' → logprob: -8.537101745605469
    7. 'if' → logprob: -8.787101745605469
    8. '=len' → logprob: -9.162101745605469
    9. 'L' → logprob: -9.537101745605469
    10. 'for' → logprob: -9.662101745605469

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09113987535238266
    2. 'B' → logprob: -2.591139793395996
    3. 'math' → logprob: -4.591139793395996
    4. 'g' → logprob: -6.966139793395996
    5. 'b' → logprob: -7.716139793395996
    6. 'min' → logprob: -8.716139793395996
    7. ' ' → logprob: -9.216139793395996
    8. 'M' → logprob: -9.591139793395996
    9. ' math' → logprob: -9.716139793395996
    10. '1' → logprob: -9.966139793395996

Token 86: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01786660961806774
    2. '<|end|>' → logprob: -4.267866611480713
    3. ' for' → logprob: -5.892866611480713
    4. '+' → logprob: -7.517866611480713
    5. ')' → logprob: -8.892866134643555
    6. '*' → logprob: -9.142866134643555
    7. ',' → logprob: -10.642866134643555
    8. '0' → logprob: -10.642866134643555
    9. '<|end|>' → logprob: -10.767866134643555
    10. '
' → logprob: -11.267866134643555

Token 87: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00027420982951298356
    2. ' for' → logprob: -8.250274658203125
    3. '<|end|>' → logprob: -12.125274658203125
    4. '```' → logprob: -13.500274658203125
    5. '+' → logprob: -14.125274658203125
    6. '
' → logprob: -14.125274658203125
    7. 'f' → logprob: -14.500274658203125
    8. '>' → logprob: -14.875274658203125
    9. '*' → logprob: -15.000274658203125
    10. 'g' → logprob: -15.000274658203125

Token 88: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.17979870736598969
    2. ' b' → logprob: -1.8047987222671509
    3. 'B' → logprob: -10.17979907989502
    4. ' B' → logprob: -11.55479907989502
    5. ' ' → logprob: -12.92979907989502
    6. 'g' → logprob: -14.05479907989502
    7. '```' → logprob: -14.17979907989502
    8. '_b' → logprob: -14.92979907989502
    9. 'm' → logprob: -15.05479907989502
    10. ' g' → logprob: -15.42979907989502

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005343805067241192
    2. 'in' → logprob: -5.255343914031982
    3. ' ' → logprob: -9.255343437194824
    4. 's' → logprob: -11.880343437194824
    5. '<|end|>' → logprob: -13.130343437194824
    6. ',' → logprob: -14.005343437194824
    7. ':' → logprob: -14.505343437194824
    8. 'In' → logprob: -14.630343437194824
    9. ' ,' → logprob: -14.755343437194824
    10. '	in' → logprob: -15.005343437194824

Token 90: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00861456897109747
    2. ' B' → logprob: -4.758614540100098
    3. '>B' → logprob: -17.508615493774414
    4. ' ' → logprob: -17.633615493774414
    5. '<B' → logprob: -18.508615493774414
    6. 'b' → logprob: -18.508615493774414
    7. '	B' → logprob: -18.633615493774414
    8. '=B' → logprob: -19.133615493774414
    9. 'Ｂ' → logprob: -19.383615493774414
    10. '(B' → logprob: -19.508615493774414

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004315036640036851
    2. '=' → logprob: -8.875431060791016
    3. '>=' → logprob: -9.500431060791016
    4. 'if' → logprob: -9.750431060791016
    5. ':
' → logprob: -10.500431060791016
    6. ',' → logprob: -10.500431060791016
    7. '>' → logprob: -10.750431060791016
    8. '==' → logprob: -10.875431060791016
    9. ' if' → logprob: -11.250431060791016
    10. ' in' → logprob: -11.500431060791016

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009446957265026867
    2. 'G' → logprob: -7.8759446144104
    3. ' if' → logprob: -8.000945091247559
    4. 'if' → logprob: -9.125945091247559
    5. ' G' → logprob: -9.250945091247559
    6. '```' → logprob: -11.250945091247559
    7. '       ' → logprob: -11.875945091247559
    8. 'g' → logprob: -13.875945091247559
    9. 'import' → logprob: -14.250945091247559
    10. '   ' → logprob: -14.375945091247559

Token 93: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.07057715952396393
    2. 'if' → logprob: -2.8205771446228027
    3. 'import' → logprob: -5.320577144622803
    4. 'g' → logprob: -5.820577144622803
    5. 'from' → logprob: -7.820577144622803
    6. '   ' → logprob: -9.070577621459961
    7. 'math' → logprob: -9.445577621459961
    8. ' if' → logprob: -9.820577621459961
    9. ' G' → logprob: -9.945577621459961
    10. 'a' → logprob: -12.945577621459961

Token 94: '=g' (ID: 90890)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03015309013426304
    2. '=g' → logprob: -3.7801530361175537
    3. ' =' → logprob: -5.030153274536133
    4. '=Math' → logprob: -8.530153274536133
    5. '=m' → logprob: -9.905153274536133
    6. '=max' → logprob: -10.405153274536133
    7. '=int' → logprob: -10.905153274536133
    8. '=os' → logprob: -11.030153274536133
    9. '+=' → logprob: -12.280153274536133
    10. '=

' → logprob: -12.280153274536133

Token 95: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00033581978641450405
    2. 'c' → logprob: -8.125335693359375
    3. 'd' → logprob: -11.000335693359375
    4. 'math' → logprob: -11.750335693359375
    5. '<|end|>' → logprob: -12.500335693359375
    6. 'cdf' → logprob: -12.875335693359375
    7. ' math' → logprob: -13.250335693359375
    8. 'cdn' → logprob: -13.625335693359375
    9. 'cf' → logprob: -13.625335693359375
    10. 'cmath' → logprob: -14.000335693359375

Token 96: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.00034177995985373855
    2. '(' → logprob: -8.000341415405273
    3. '(L' → logprob: -12.000341415405273
    4. '<|end|>' → logprob: -15.750341415405273
    5. '(GL' → logprob: -17.500341415405273
    6. '(g' → logprob: -17.625341415405273
    7. '((' → logprob: -17.625341415405273
    8. '(Game' → logprob: -17.750341415405273
    9. '(B' → logprob: -18.375341415405273
    10. '(CG' → logprob: -18.625341415405273

Token 97: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.030042966827750206
    2. ',' → logprob: -3.530042886734009
    3. ' ,' → logprob: -8.40504264831543
    4. 'b' → logprob: -9.90504264831543
    5. ' b' → logprob: -11.40504264831543
    6. '(b' → logprob: -12.65504264831543
    7. ',G' → logprob: -13.65504264831543
    8. ',g' → logprob: -13.90504264831543
    9. ')b' → logprob: -14.40504264831543
    10. ')' → logprob: -14.53004264831543

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011856284982059151
    2. ' )' → logprob: -10.125118255615234
    3. ',G' → logprob: -10.750118255615234
    4. ',' → logprob: -10.750118255615234
    5. ')
' → logprob: -11.250118255615234
    6. ')L' → logprob: -11.500118255615234
    7. ',L' → logprob: -12.250118255615234
    8. ',)' → logprob: -12.375118255615234
    9. '   ' → logprob: -14.125118255615234
    10. '<|end|>' → logprob: -14.375118255615234

Token 99: 'count' (ID: 5420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4651929438114166
    2. '<|end|>' → logprob: -1.4651929140090942
    3. ' 
' → logprob: -2.965193033218384
    4. '
' → logprob: -3.090193033218384
    5. 'if' → logprob: -3.965193033218384
    6. '```' → logprob: -5.215192794799805
    7. ' if' → logprob: -5.840192794799805
    8. 'L' → logprob: -6.215192794799805
    9. '  
' → logprob: -6.215192794799805
    10. '\' → logprob: -6.840192794799805

Token 100: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35300585627555847
    2. '=' → logprob: -1.2280058860778809
    3. ' ' → logprob: -5.728005886077881
    4. '(' → logprob: -7.353005886077881
    5. '<|end|>' → logprob: -7.728005886077881
    6. '_' → logprob: -9.353005409240723
    7. '  ' → logprob: -10.728005409240723
    8. ')' → logprob: -11.103005409240723
    9. '=count' → logprob: -11.353005409240723
    10. ' +=' → logprob: -11.478005409240723

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.027225754223764e-05
    2. ' ' → logprob: -9.750060081481934
    3. '1' → logprob: -13.625060081481934
    4. '(' → logprob: -15.000060081481934
    5. '(L' → logprob: -15.625060081481934
    6. '```' → logprob: -16.12506103515625
    7. 'sum' → logprob: -16.62506103515625
    8. 'G' → logprob: -16.87506103515625
    9. '2' → logprob: -17.12506103515625
    10. 'L' → logprob: -17.50006103515625

Token 102: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03468047082424164
    2. 'i' → logprob: -3.4096803665161133
    3. 'x' → logprob: -7.909680366516113
    4. ' for' → logprob: -8.034680366516113
    5. 'range' → logprob: -8.784680366516113
    6. '_' → logprob: -9.784680366516113
    7. 'if' → logprob: -10.034680366516113
    8. '```' → logprob: -10.534680366516113
    9. 'a' → logprob: -10.659680366516113
    10. 'while' → logprob: -11.409680366516113

Token 104: ' L' (ID: 451)
  Prédit: ' G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' G' → logprob: -0.18034890294075012
    2. 'G' → logprob: -1.8053488731384277
    3. ' L' → logprob: -8.055349349975586
    4. ' ' → logprob: -8.555349349975586
    5. 'L' → logprob: -9.430349349975586
    6. '  ' → logprob: -12.180349349975586
    7. ' ' → logprob: -12.805349349975586
    8. ' (' → logprob: -12.805349349975586
    9. '   ' → logprob: -13.305349349975586
    10. '    ' → logprob: -14.805349349975586

Token 105: '%' (ID: 4)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20149919390678406
    2. '<=' → logprob: -1.7014992237091064
    3. '>' → logprob: -10.701498985290527
    4. ' >' → logprob: -10.826498985290527
    5. '%' → logprob: -10.951498985290527
    6. ' ==' → logprob: -11.701498985290527
    7. ' %' → logprob: -11.951498985290527
    8. '==' → logprob: -12.201498985290527
    9. ' ' → logprob: -12.576498985290527
    10. '=' → logprob: -13.951498985290527

Token 106: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0008696523727849126
    2. '0' → logprob: -7.3758697509765625
    3. ' G' → logprob: -9.000869750976562
    4. '2' → logprob: -9.750869750976562
    5. ' ' → logprob: -10.375869750976562
    6. '=' → logprob: -11.875869750976562
    7. '1' → logprob: -12.000869750976562
    8. '<|end|>' → logprob: -12.000869750976562
    9. '	G' → logprob: -13.125869750976562
    10. '  ' → logprob: -13.125869750976562

Token 107: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20222651958465576
    2. '!=' → logprob: -1.7022265195846558
    3. ' !=' → logprob: -7.827226638793945
    4. ' ==' → logprob: -8.077226638793945
    5. ':' → logprob: -9.577226638793945
    6. '=' → logprob: -10.702226638793945
    7. '!==' → logprob: -12.702226638793945
    8. ')!=' → logprob: -13.702226638793945
    9. '!='' → logprob: -13.827226638793945
    10. '==
' → logprob: -13.827226638793945

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '<|end|>' → logprob: -17.500009536743164
    4. '1' → logprob: -17.625009536743164
    5. '۰' → logprob: -18.000009536743164
    6. '000' → logprob: -18.250009536743164
    7. '```' → logprob: -18.375009536743164
    8. '०' → logprob: -19.750009536743164
    9. '   ' → logprob: -19.812509536743164
    10. '০' → logprob: -19.875009536743164

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001498195226304233
    2. ':
' → logprob: -6.626498222351074
    3. '   ' → logprob: -9.376498222351074
    4. ':return' → logprob: -10.501498222351074
    5. ' and' → logprob: -11.001498222351074
    6. ' or' → logprob: -11.126498222351074
    7. ' :' → logprob: -11.501498222351074
    8. '0' → logprob: -12.501498222351074
    9. '):' → logprob: -12.626498222351074
    10. ')' → logprob: -13.376498222351074

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5319223403930664
    2. '0' → logprob: -1.5319223403930664
    3. 'count' → logprob: -2.1569223403930664
    4. ' pass' → logprob: -3.2819223403930664
    5. 'pass' → logprob: -3.7819223403930664
    6. ' count' → logprob: -4.156922340393066
    7. 'print' → logprob: -7.156922340393066
    8. '\n' → logprob: -7.156922340393066
    9. '    
' → logprob: -7.406922340393066
    10. '    ' → logprob: -7.906922340393066

Token 111: ' max' (ID: 2999)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.40874308347702026
    2. '   ' → logprob: -2.033743143081665
    3. '0' → logprob: -2.158743143081665
    4. ' count' → logprob: -2.908743143081665
    5. 'pass' → logprob: -4.158742904663086
    6. 'print' → logprob: -5.033742904663086
    7. ' pass' → logprob: -5.283742904663086
    8. 'for' → logprob: -5.408742904663086
    9. ' for' → logprob: -6.408742904663086
    10. ' ' → logprob: -8.033742904663086

Token 112: '_k' (ID: 11637)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0028146505355835
    2. '(' → logprob: -1.1278146505355835
    3. '_count' → logprob: -1.5028146505355835
    4. '_value' → logprob: -3.752814769744873
    5. 'count' → logprob: -3.877814769744873
    6. '_val' → logprob: -5.127814769744873
    7. '=' → logprob: -5.502814769744873
    8. '   ' → logprob: -5.627814769744873
    9. 'L' → logprob: -6.002814769744873
    10. '(L' → logprob: -6.002814769744873

Token 113: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3490736782550812
    2. ' =' → logprob: -1.2240736484527588
    3. ' ' → logprob: -7.724073886871338
    4. ' +=' → logprob: -10.22407341003418
    5. '+' → logprob: -10.72407341003418
    6. '+=' → logprob: -10.84907341003418
    7. '=count' → logprob: -10.84907341003418
    8. '=int' → logprob: -10.97407341003418
    9. ',' → logprob: -11.09907341003418
    10. '0' → logprob: -11.59907341003418

Token 114: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.002475777640938759
    2. '0' → logprob: -6.627475738525391
    3. '(G' → logprob: -7.502475738525391
    4. ' G' → logprob: -8.12747573852539
    5. '1' → logprob: -8.50247573852539
    6. 'L' → logprob: -10.12747573852539
    7. ' (' → logprob: -11.37747573852539
    8. ' ' → logprob: -11.37747573852539
    9. '(' → logprob: -11.37747573852539
    10. '100' → logprob: -12.12747573852539

Token 115: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.07835611701011658
    2. ' //' → logprob: -2.7033560276031494
    3. '+' → logprob: -4.8283562660217285
    4. '/' → logprob: -9.32835578918457
    5. '   ' → logprob: -9.32835578918457
    6. ' ' → logprob: -10.07835578918457
    7. ' +' → logprob: -10.45335578918457
    8. 'div' → logprob: -10.95335578918457
    9. '//=' → logprob: -11.20335578918457
    10. '<|end|>' → logprob: -11.32835578918457

Token 116: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -4.961759259458631e-06
    2. ' L' → logprob: -12.250004768371582
    3. '>L' → logprob: -17.1250057220459
    4. '<|end|>' → logprob: -19.0000057220459
    5. '   ' → logprob: -19.5000057220459
    6. '=L' → logprob: -19.5000057220459
    7. '	L' → logprob: -19.8750057220459
    8. '  ' → logprob: -20.5000057220459
    9. '.L' → logprob: -20.6250057220459
    10. ' ' → logprob: -21.1250057220459

Token 117: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24719470739364624
    2. '+' → logprob: -1.622194766998291
    3. '
' → logprob: -4.747194766998291
    4. 'for' → logprob: -4.747194766998291
    5. '<|end|>' → logprob: -6.872194766998291
    6. ' for' → logprob: -6.997194766998291
    7. '    
' → logprob: -7.497194766998291
    8. '+
' → logprob: -8.122194290161133
    9. 'count' → logprob: -8.372194290161133
    10. '-' → logprob: -8.747194290161133

Token 118: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4321003258228302
    2. 'for' → logprob: -1.1821002960205078
    3. ' for' → logprob: -4.057100296020508
    4. '   ' → logprob: -4.057100296020508
    5. '+
' → logprob: -5.182100296020508
    6. '
' → logprob: -6.432100296020508
    7. '<|end|>' → logprob: -6.432100296020508
    8. 'range' → logprob: -8.057100296020508
    9. '1' → logprob: -9.557100296020508
    10. 'count' → logprob: -10.182100296020508

Token 119: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00012964145571459085
    2. 'count' → logprob: -9.000129699707031
    3. ' for' → logprob: -12.625129699707031
    4. '   ' → logprob: -13.250129699707031
    5. 'from' → logprob: -13.750129699707031
    6. 'k' → logprob: -17.87512969970703
    7. '
' → logprob: -17.87512969970703
    8. 'import' → logprob: -18.37512969970703
    9. '	for' → logprob: -18.50012969970703
    10. '    
' → logprob: -19.12512969970703

Token 120: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011840384686365724
    2. ' k' → logprob: -6.751183986663818
    3. 'i' → logprob: -11.251184463500977
    4. '_k' → logprob: -14.376184463500977
    5. ' i' → logprob: -15.251184463500977
    6. '   ' → logprob: -17.501184463500977
    7. '	k' → logprob: -17.751184463500977
    8. 'x' → logprob: -18.501184463500977
    9. ' ' → logprob: -18.501184463500977
    10. '```' → logprob: -19.376184463500977

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018176397308707237
    2. 'in' → logprob: -4.018176555633545
    3. ' ' → logprob: -11.268176078796387
    4. '1' → logprob: -12.643176078796387
    5. '_' → logprob: -13.143176078796387
    6. '	in' → logprob: -13.143176078796387
    7. 'range' → logprob: -13.643176078796387
    8. 'n' → logprob: -13.768176078796387
    9. '   ' → logprob: -14.143176078796387
    10. '  ' → logprob: -14.393176078796387

Token 122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031790214125066996
    2. ' range' → logprob: -5.75317907333374
    3. '1' → logprob: -13.753178596496582
    4. '	range' → logprob: -15.878178596496582
    5. '(range' → logprob: -16.5031795501709
    6. ' ' → logprob: -17.1281795501709
    7. '_range' → logprob: -19.1281795501709
    8. '   ' → logprob: -20.1281795501709
    9. 'ange' → logprob: -20.2531795501709
    10. 'r' → logprob: -20.3781795501709

Token 123: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013309523928910494
    2. '1' → logprob: -6.626330852508545
    3. ' (' → logprob: -12.376331329345703
    4. '(
' → logprob: -14.626331329345703
    5. ' ' → logprob: -15.751331329345703
    6. '   ' → logprob: -16.001331329345703
    7. '(max' → logprob: -17.251331329345703
    8. 'max' → logprob: -18.626331329345703
    9. '    ' → logprob: -19.251331329345703
    10. '[' → logprob: -19.626331329345703

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.429896944202483e-05
    2. 'max' → logprob: -10.250043869018555
    3. ' ' → logprob: -11.750043869018555
    4. '   ' → logprob: -14.250043869018555
    5. ' max' → logprob: -15.250043869018555
    6. '0' → logprob: -17.750043869018555
    7. '2' → logprob: -18.625043869018555
    8. '    ' → logprob: -18.750043869018555
    9. '       ' → logprob: -19.000043869018555
    10. '  ' → logprob: -19.125043869018555

Token 125: ',max' (ID: 81466)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4854445159435272
    2. ',max' → logprob: -0.9854445457458496
    3. ' ,' → logprob: -4.48544454574585
    4. ',int' → logprob: -11.360444068908691
    5. ',k' → logprob: -12.360444068908691
    6. 'max' → logprob: -12.360444068908691
    7. ',m' → logprob: -12.735444068908691
    8. ',
' → logprob: -12.985444068908691
    9. '   ' → logprob: -13.360444068908691
    10. ',(' → logprob: -13.860444068908691

Token 126: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.0280383548888494e-06
    2. 'k' → logprob: -14.750000953674316
    3. '_max' → logprob: -16.250001907348633
    4. '_i' → logprob: -16.750001907348633
    5. 'K' → logprob: -16.875001907348633
    6. 'max' → logprob: -17.000001907348633
    7. '_' → logprob: -17.250001907348633
    8. ')' → logprob: -17.250001907348633
    9. '+' → logprob: -17.625001907348633
    10. ' _' → logprob: -17.750001907348633

Token 127: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024758970830589533
    2. ' +' → logprob: -6.002475738525391
    3. '+k' → logprob: -15.50247573852539
    4. '()+' → logprob: -16.87747573852539
    5. '   ' → logprob: -18.50247573852539
    6. '＋' → logprob: -18.62747573852539
    7. ' ' → logprob: -18.75247573852539
    8. '+
' → logprob: -19.37747573852539
    9. ')+' → logprob: -19.62747573852539
    10. '++' → logprob: -19.62747573852539

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.625009536743164
    4. ')' → logprob: -18.125009536743164
    5. '```' → logprob: -18.250009536743164
    6. '):
' → logprob: -19.125009536743164
    7. '  ' → logprob: -19.125009536743164
    8. '2' → logprob: -19.250009536743164
    9. '(' → logprob: -19.250009536743164
    10. ',' → logprob: -19.375009536743164

Token 129: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2909586429595947
    2. '):' → logprob: -1.5409586429595947
    3. '):
' → logprob: -3.4159586429595947
    4. ':
' → logprob: -5.415958404541016
    5. '   ' → logprob: -7.290958404541016
    6. '       ' → logprob: -8.665958404541016
    7. '():' → logprob: -10.165958404541016
    8. '():
' → logprob: -10.540958404541016
    9. ' :' → logprob: -11.165958404541016
    10. '**' → logprob: -11.415958404541016

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.836499985889532e-05
    2. '<|end|>' → logprob: -9.8750581741333
    3. 'if' → logprob: -13.0000581741333
    4. ' if' → logprob: -13.1250581741333
    5. '<|end|>' → logprob: -14.2500581741333
    6. '   ' → logprob: -14.7500581741333
    7. '```' → logprob: -14.7500581741333
    8. '      ' → logprob: -15.5000581741333
    9. '           ' → logprob: -15.6250581741333
    10. '        
' → logprob: -16.000059127807617

Token 131: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01966923289000988
    2. 'if' (adapté à ' if') → logprob: -4.394669055938721
    3. ' if' → logprob: -5.019669055938721
    4. '   ' → logprob: -7.644669055938721
    5. ' ' → logprob: -10.269669532775879
    6. '           ' → logprob: -11.519669532775879
    7. '```' → logprob: -13.394669532775879
    8. '<|end|>' → logprob: -14.394669532775879
    9. '      ' → logprob: -14.894669532775879
    10. '     ' → logprob: -15.144669532775879

Token 132: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0159006267786026
    2. ' G' → logprob: -4.390900611877441
    3. 'L' → logprob: -5.765900611877441
    4. '(G' → logprob: -9.140900611877441
    5. ' L' → logprob: -9.640900611877441
    6. '   ' → logprob: -10.515900611877441
    7. ' (' → logprob: -10.515900611877441
    8. 'k' → logprob: -11.515900611877441
    9. '       ' → logprob: -12.015900611877441
    10. ' ' → logprob: -12.265900611877441

Token 133: '%(' (ID: 47570)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0004611743788700551
    2. ' %' → logprob: -7.750461101531982
    3. '%b' → logprob: -11.25046157836914
    4. '%i' → logprob: -11.62546157836914
    5. '%c' → logprob: -13.12546157836914
    6. '%x' → logprob: -13.12546157836914
    7. '%d' → logprob: -13.62546157836914
    8. '%B' → logprob: -14.37546157836914
    9. '%A' → logprob: -14.50046157836914
    10. '%(' → logprob: -14.75046157836914

Token 134: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0015286672860383987
    2. '(L' → logprob: -6.501528739929199
    3. ' L' → logprob: -11.1265287399292
    4. 'k' → logprob: -11.8765287399292
    5. '(' → logprob: -13.2515287399292
    6. ' (' → logprob: -13.3765287399292
    7. '[L' → logprob: -14.2515287399292
    8. '   ' → logprob: -15.5015287399292
    9. '(k' → logprob: -15.6265287399292
    10. '{' → logprob: -16.251527786254883

Token 135: '*k' (ID: 81061)
  Prédit: '*k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.0021331331226974726
    2. '*' → logprob: -6.502133369445801
    3. 'k' → logprob: -7.377133369445801
    4. ' *' → logprob: -12.2521333694458
    5. ' k' → logprob: -16.002132415771484
    6. '*(' → logprob: -16.752132415771484
    7. '*i' → logprob: -17.252132415771484
    8. '(k' → logprob: -17.752132415771484
    9. '*a' → logprob: -17.752132415771484
    10. '**' → logprob: -17.877132415771484

Token 136: ')==' (ID: 35269)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03819664195179939
    2. ')==' → logprob: -3.288196563720703
    3. ')' → logprob: -9.788196563720703
    4. ' ==' → logprob: -9.788196563720703
    5. ']==' → logprob: -10.663196563720703
    6. '0' → logprob: -11.788196563720703
    7. '==
' → logprob: -12.288196563720703
    8. '```' → logprob: -12.913196563720703
    9. '()==' → logprob: -13.288196563720703
    10. '")==' → logprob: -13.538196563720703

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -20.25
    4. '۰' → logprob: -20.375
    5. '000' → logprob: -21.0
    6. '00' → logprob: -21.25
    7. '  ' → logprob: -22.0
    8. '０' → logprob: -22.125
    9. '০' → logprob: -22.125
    10. '०' → logprob: -22.5

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021619601175189018
    2. ':
' → logprob: -4.39661979675293
    3. '           ' → logprob: -4.77161979675293
    4. '       ' → logprob: -7.52161979675293
    5. '):' → logprob: -10.39661979675293
    6. 'count' → logprob: -11.52161979675293
    7. '):
' → logprob: -11.89661979675293
    8. '   ' → logprob: -13.02161979675293
    9. ',count' → logprob: -13.52161979675293
    10. '<|end|>' → logprob: -13.77161979675293

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01108566578477621
    2. 'count' → logprob: -4.511085510253906
    3. '       ' → logprob: -10.386085510253906
    4. '               ' → logprob: -12.761085510253906
    5. ' count' → logprob: -12.761085510253906
    6. '          ' → logprob: -14.386085510253906
    7. '	       ' → logprob: -15.886085510253906
    8. ',count' → logprob: -15.886085510253906
    9. '         ' → logprob: -16.261085510253906
    10. '
' → logprob: -16.386085510253906

Token 140: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -1.2471589798224159e-05
    2. ' count' → logprob: -12.250012397766113
    3. '           ' → logprob: -12.625012397766113
    4. '               ' → logprob: -12.875012397766113
    5. '       ' → logprob: -13.500012397766113
    6. '   ' → logprob: -15.250012397766113
    7. '	count' → logprob: -15.750012397766113
    8. '_count' → logprob: -19.12501335144043
    9. ',count' → logprob: -19.25001335144043
    10. '.count' → logprob: -19.87501335144043

Token 141: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.22573255002498627
    2. ' +=' → logprob: -1.6007325649261475
    3. '   ' → logprob: -9.100732803344727
    4. '+' → logprob: -9.225732803344727
    5. ']+=' → logprob: -9.975732803344727
    6. '=' → logprob: -10.725732803344727
    7. 'count' → logprob: -11.725732803344727
    8. '=count' → logprob: -11.975732803344727
    9. '    ' → logprob: -12.100732803344727
    10. ' ' → logprob: -12.850732803344727

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. 'k' → logprob: -18.500001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '１' → logprob: -20.750001907348633
    6. '۱' → logprob: -21.000001907348633
    7. '```' → logprob: -21.000001907348633
    8. '           ' → logprob: -22.375001907348633
    9. '<|end|>' → logprob: -22.500001907348633
    10. '       ' → logprob: -22.750001907348633

Token 143: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.2994620242971e-06
    2. ' print' → logprob: -11.750008583068848
    3. '<|end|>' → logprob: -15.750008583068848
    4. ')' → logprob: -17.12500762939453
    5. '(print' → logprob: -17.37500762939453
    6. '#print' → logprob: -17.62500762939453
    7. 'count' → logprob: -17.75000762939453
    8. '.print' → logprob: -18.00000762939453
    9. '
' → logprob: -18.25000762939453
    10. '```' → logprob: -18.25000762939453

Token 144: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.961759259458631e-06
    2. ' print' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -16.1250057220459
    4. '(print' → logprob: -17.8750057220459
    5. ')' → logprob: -18.0000057220459
    6. '#print' → logprob: -18.1250057220459
    7. '.print' → logprob: -19.1250057220459
    8. '```' → logprob: -19.2500057220459
    9. 'count' → logprob: -19.7500057220459
    10. '-print' → logprob: -20.0000057220459

Token 145: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0007121934904716909
    2. '(' → logprob: -7.2507123947143555
    3. 'count' → logprob: -13.250712394714355
    4. ' (' → logprob: -14.875712394714355
    5. '(cnt' → logprob: -17.37571144104004
    6. '(
' → logprob: -17.50071144104004
    7. '(counter' → logprob: -17.75071144104004
    8. '(c' → logprob: -17.87571144104004
    9. '=count' → logprob: -17.87571144104004
    10. ',count' → logprob: -18.25071144104004

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ' )' → logprob: -11.875006675720215
    3. ')
' → logprob: -16.62500762939453
    4. ')`' → logprob: -17.37500762939453
    5. ')#' → logprob: -18.62500762939453
    6. '```' → logprob: -18.75000762939453
    7. '))' → logprob: -18.87500762939453
    8. '）' → logprob: -19.37500762939453
    9. '')' → logprob: -19.37500762939453
    10. ')**' → logprob: -19.62500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 144
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 68
Tokens correctement prédits (top 10): 124
Précision stricte (1ère position): 43.75%
Précision adaptée (1ère position): 47.22%
Précision (top 10): 86.11%
================================================================================
