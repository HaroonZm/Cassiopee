================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def main():
    input = sys.stdin.readline
    while True:
        N = int(input())
        if N == 0:
            break
        # lire la grille des sauts
        jumps = [tuple(map(int, input().split())) for _ in range(N)]
        # chaque ligne contient 2*N entiers
        # on transforme en un tableau 2D de dimensions N*N, avec pour chaque case (nx, ny)
        graph = [None] * (N*N)
        for i in range(N):
            for j in range(N):
                x = jumps[i][2*j]
                y = jumps[i][2*j+1]
                graph[i*N+j] = x*N + y

        visited = [0]*(N*N) # 0 = non visité, 1 = en cours d'exploration, 2 = exploré
        cycle_count = 0

        def dfs(u):
            nonlocal cycle_count
            visited[u] = 1
            v = graph[u]
            if visited[v] == 0:
                dfs(v)
            elif visited[v] == 1:
                # trouvé un cycle
                cycle_count += 1
            visited[u] = 2

        for node in range(N*N):
            if visited[node] == 0:
                dfs(node)

        print(cycle_count)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1863299012184143
    2. '\n' → logprob: -2.0613298416137695
    3. '<|end|>' → logprob: -4.1863298416137695
    4. '\' → logprob: -4.5613298416137695
    5. 'newline' → logprob: -5.1863298416137695
    6. '```' → logprob: -6.0613298416137695
    7. 'import' → logprob: -6.0613298416137695
    8. '<|end|>' → logprob: -6.5613298416137695
    9. '' → logprob: -6.9363298416137695
    10. '
' → logprob: -7.1863298416137695

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.001460831263102591
    2. 'ursive' → logprob: -6.751461029052734
    3. 'ur' → logprob: -9.376461029052734
    4. 'urs' → logprob: -9.876461029052734
    5. '_' → logprob: -10.126461029052734
    6. 'limit' → logprob: -10.376461029052734
    7. '_limit' → logprob: -11.001461029052734
    8. 'urf' → logprob: -11.126461029052734
    9. 't' → logprob: -11.626461029052734
    10. 'ursor' → logprob: -11.751461029052734

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.14647869765758514
    2. 'limit' → logprob: -2.0214786529541016
    3. '_depth' → logprob: -5.646478652954102
    4. 'depth' → logprob: -9.646478652954102
    5. '_' → logprob: -9.771478652954102
    6. '_lim' → logprob: -10.646478652954102
    7. ' limit' → logprob: -11.021478652954102
    8. '_rate' → logprob: -11.146478652954102
    9. '_error' → logprob: -11.646478652954102
    10. 'lim' → logprob: -11.896478652954102

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08597590029239655
    2. '00' → logprob: -2.7109758853912354
    3. '000' → logprob: -4.3359761238098145
    4. '4' → logprob: -5.9609761238098145
    5. '6' → logprob: -9.335975646972656
    6. '2' → logprob: -9.835975646972656
    7. '3' → logprob: -9.835975646972656
    8. ')' → logprob: -10.710975646972656
    9. '5' → logprob: -11.710975646972656
    10. '```' → logprob: -11.710975646972656

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004474508576095104
    2. '9' → logprob: -6.004474639892578
    3. '6' → logprob: -6.254474639892578
    4. '8' → logprob: -9.504474639892578
    5. '```' → logprob: -15.254474639892578
    6. ' ' → logprob: -15.629474639892578
    7. '(' → logprob: -16.754474639892578
    8. '``' → logprob: -17.879474639892578
    9. ')' → logprob: -18.129474639892578
    10. '5' → logprob: -18.254474639892578

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. '))' → logprob: -12.625003814697266
    3. ' )' → logprob: -14.375003814697266
    4. ')
' → logprob: -15.625003814697266
    5. ')))' → logprob: -17.250003814697266
    6. ')`' → logprob: -17.750003814697266
    7. '`)' → logprob: -18.000003814697266
    8. '')' → logprob: -18.250003814697266
    9. '```' → logprob: -18.375003814697266
    10. '）' → logprob: -18.500003814697266

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0465119332075119
    2. '
' → logprob: -3.5465118885040283
    3. '

' → logprob: -4.921512126922607
    4. '```' → logprob: -5.296512126922607
    5. '\' → logprob: -6.421512126922607
    6. '
' → logprob: -7.046512126922607
    7. 'class' → logprob: -7.546512126922607
    8. '\n' → logprob: -7.671512126922607
    9. 'import' → logprob: -8.04651165008545
    10. ')' → logprob: -8.92151165008545

Token 14: ' main' (ID: 2758)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.9731006622314453
    2. ' factorial' → logprob: -1.0981006622314453
    3. ' ' → logprob: -1.3481006622314453
    4. ' f' → logprob: -4.973100662231445
    5. ' factor' → logprob: -5.223100662231445
    6. ' space' → logprob: -5.973100662231445
    7. ' DFS' → logprob: -6.098100662231445
    8. ' process' → logprob: -6.348100662231445
    9. ' main' → logprob: -6.848100662231445
    10. ' a' → logprob: -6.848100662231445

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0041282689198851585
    2. '():' → logprob: -5.879128456115723
    3. '(:' → logprob: -7.004128456115723
    4. '_' → logprob: -9.379128456115723
    5. ':' → logprob: -9.629128456115723
    6. '):' → logprob: -10.004128456115723
    7. '(**' → logprob: -10.129128456115723
    8. '("("' → logprob: -10.379128456115723
    9. '(":' → logprob: -10.629128456115723
    10. ' (' → logprob: -11.129128456115723

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011926613748073578
    2. '    ' → logprob: -5.136926651000977
    3. '    
' → logprob: -5.386926651000977
    4. '\' → logprob: -8.261926651000977
    5. '\n' → logprob: -8.261926651000977
    6. 'n' → logprob: -8.761926651000977
    7. ' 
' → logprob: -8.886926651000977
    8. '<|end|>' → logprob: -9.261926651000977
    9. '
' → logprob: -9.761926651000977
    10. '(' → logprob: -9.761926651000977

Token 17: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4868811070919037
    2. ' n' → logprob: -1.861881136894226
    3. 'n' → logprob: -2.1118810176849365
    4. '    ' → logprob: -2.9868810176849365
    5. ' pass' → logprob: -4.861881256103516
    6. ' ' → logprob: -4.861881256103516
    7. ' while' → logprob: -4.986881256103516
    8. 'i' → logprob: -5.361881256103516
    9. 'print' → logprob: -5.611881256103516
    10. ' i' → logprob: -5.611881256103516

Token 18: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3126084804534912
    2. '_data' → logprob: -1.5626084804534912
    3. '(' → logprob: -4.06260871887207
    4. 'data' → logprob: -4.43760871887207
    5. '_str' → logprob: -4.43760871887207
    6. '().' → logprob: -5.06260871887207
    7. '_line' → logprob: -5.56260871887207
    8. '_' → logprob: -6.31260871887207
    9. '_text' → logprob: -6.93760871887207
    10. '_string' → logprob: -7.31260871887207

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6677919626235962
    2. 'input' → logprob: -1.4177919626235962
    3. ' input' → logprob: -1.6677919626235962
    4. 'sys' → logprob: -2.9177918434143066
    5. ' lambda' → logprob: -6.792791843414307
    6. 'lambda' → logprob: -7.417791843414307
    7. ' ' → logprob: -7.917791843414307
    8. 'raw' → logprob: -10.667792320251465
    9. ' raw' → logprob: -10.667792320251465
    10. '=sys' → logprob: -11.542792320251465

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.005076617933809757
    2. '.' → logprob: -5.6300764083862305
    3. '.readline' → logprob: -6.8800764083862305
    4. ' .' → logprob: -8.38007640838623
    5. '.stdout' → logprob: -9.00507640838623
    6. '.std' → logprob: -10.25507640838623
    7. '.argv' → logprob: -10.75507640838623
    8. '.read' → logprob: -11.13007640838623
    9. '.input' → logprob: -12.25507640838623
    10. 'stdin' → logprob: -12.50507640838623

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004686799366027117
    2. '.read' → logprob: -5.3796868324279785
    3. '.' → logprob: -9.87968635559082
    4. 'read' → logprob: -11.37968635559082
    5. '.buffer' → logprob: -13.25468635559082
    6. '.readlines' → logprob: -13.37968635559082
    7. '.Read' → logprob: -15.12968635559082
    8. ' readline' → logprob: -16.00468635559082
    9. 'buffer' → logprob: -16.25468635559082
    10. '<|end|>' → logprob: -17.12968635559082

Token 22: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002198313595727086
    2. '()
' → logprob: -6.502198219299316
    3. '()\' → logprob: -8.127198219299316
    4. '(' → logprob: -8.377198219299316
    5. '   ' → logprob: -9.752198219299316
    6. '
' → logprob: -10.377198219299316
    7. ' ()' → logprob: -10.877198219299316
    8. '().' → logprob: -11.002198219299316
    9. '())' → logprob: -11.752198219299316
    10. ')' → logprob: -11.752198219299316

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1078178808093071
    2. '    
' → logprob: -2.9828178882598877
    3. '()' → logprob: -3.2328178882598877
    4. '(' → logprob: -4.857817649841309
    5. '()
' → logprob: -7.107817649841309
    6. ')' → logprob: -7.357817649841309
    7. '
' → logprob: -7.357817649841309
    8. 'def' → logprob: -8.107817649841309
    9. '(n' → logprob: -8.232817649841309
    10. '(
' → logprob: -8.482817649841309

Token 24: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5455079674720764
    2. '()' → logprob: -1.2955079078674316
    3. '   ' → logprob: -2.5455079078674316
    4. '(' → logprob: -3.7955079078674316
    5. 'data' → logprob: -4.045507907867432
    6. '(n' → logprob: -4.545507907867432
    7. 'count' → logprob: -5.920507907867432
    8. 'a' → logprob: -6.170507907867432
    9. '    
' → logprob: -6.670507907867432
    10. 'x' → logprob: -6.670507907867432

Token 25: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.008314560167491436
    2. 'True' → logprob: -4.883314609527588
    3. '(True' → logprob: -7.258314609527588
    4. ' ' → logprob: -13.13331413269043
    5. '()' → logprob: -14.00831413269043
    6. '  ' → logprob: -15.50831413269043
    7. ':' → logprob: -16.00831413269043
    8. ' not' → logprob: -16.00831413269043
    9. ' Tru' → logprob: -16.13331413269043
    10. '=True' → logprob: -16.13331413269043

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003143373876810074
    2. '():' → logprob: -5.878143310546875
    3. '):' → logprob: -9.253143310546875
    4. ' :' → logprob: -9.753143310546875
    5. '       ' → logprob: -9.753143310546875
    6. ':
' → logprob: -10.128143310546875
    7. ':**' → logprob: -10.253143310546875
    8. '   ' → logprob: -10.878143310546875
    9. ',' → logprob: -12.003143310546875
    10. '    ' → logprob: -12.128143310546875

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010493062436580658
    2. '        
' → logprob: -5.510493278503418
    3. '    ' → logprob: -5.635493278503418
    4. ' ' → logprob: -6.260493278503418
    5. '   ' → logprob: -8.010493278503418
    6. '        ' → logprob: -8.885493278503418
    7. '      ' → logprob: -9.510493278503418
    8. '        
        
' → logprob: -10.010493278503418
    9. '<|end|>' → logprob: -10.260493278503418
    10. '    
' → logprob: -10.385493278503418

Token 28: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.17765577137470245
    2. 'line' → logprob: -2.4276556968688965
    3. '   ' → logprob: -3.5526556968688965
    4. ' data' → logprob: -4.0526556968688965
    5. 'data' → logprob: -4.0526556968688965
    6. '       ' → logprob: -5.3026556968688965
    7. ' s' → logprob: -6.3026556968688965
    8. 's' → logprob: -7.0526556968688965
    9. ' try' → logprob: -7.1776556968688965
    10. '    ' → logprob: -7.9276556968688965

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008856120519340038
    2. '=' → logprob: -4.758856296539307
    3. ' >' → logprob: -9.258855819702148
    4. ' ' → logprob: -9.508855819702148
    5. ' :=' → logprob: -10.883855819702148
    6. ' ==' → logprob: -11.008855819702148
    7. '=int' → logprob: -11.133855819702148
    8. ',' → logprob: -11.883855819702148
    9. '>' → logprob: -12.383855819702148
    10. '    ' → logprob: -13.383855819702148

Token 30: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20765690505504608
    2. ' input' → logprob: -2.3326568603515625
    3. 'int' → logprob: -2.5826568603515625
    4. 'input' → logprob: -4.2076568603515625
    5. ' ' → logprob: -11.207656860351562
    6. '    ' → logprob: -12.582656860351562
    7. '=int' → logprob: -13.707656860351562
    8. '   ' → logprob: -13.957656860351562
    9. '(int' → logprob: -14.207656860351562
    10. '<int' → logprob: -15.020156860351562

Token 31: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002199144335463643
    2. '(' → logprob: -6.127199172973633
    3. ' (' → logprob: -11.752199172973633
    4. 'input' → logprob: -12.252199172973633
    5. '(in' → logprob: -15.127199172973633
    6. ' input' → logprob: -15.127199172973633
    7. '(
' → logprob: -15.252199172973633
    8. ',input' → logprob: -16.002199172973633
    9. '=input' → logprob: -16.627199172973633
    10. ' ' → logprob: -16.627199172973633

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018727611750364304
    2. '().' → logprob: -4.018727779388428
    3. '()' → logprob: -7.643727779388428
    4. '()))' → logprob: -9.39372730255127
    5. ' ())' → logprob: -11.51872730255127
    6. '())
' → logprob: -12.76872730255127
    7. '();)' → logprob: -14.39372730255127
    8. '(' → logprob: -14.51872730255127
    9. ')' → logprob: -14.76872730255127
    10. '()),' → logprob: -14.89372730255127

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05208739638328552
    2. '<|end|>' → logprob: -3.6770873069763184
    3. '   ' → logprob: -5.052087306976318
    4. ' ' → logprob: -5.052087306976318
    5. ' if' → logprob: -5.802087306976318
    6. '        ' → logprob: -5.802087306976318
    7. '    ' → logprob: -5.927087306976318
    8. ')' → logprob: -6.802087306976318
    9. '<|end|>' → logprob: -7.427087306976318
    10. '\n' → logprob: -7.677087306976318

Token 34: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7187122702598572
    2. ' if' → logprob: -0.9687122702598572
    3. '<|end|>' → logprob: -2.468712329864502
    4. '        ' → logprob: -3.593712329864502
    5. 'if' (adapté à ' if') → logprob: -4.718712329864502
    6. ' ' → logprob: -4.843712329864502
    7. '<|end|>' → logprob: -6.343712329864502
    8. '    ' → logprob: -7.218712329864502
    9. '   ' → logprob: -7.718712329864502
    10. ')' → logprob: -7.968712329864502

Token 35: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.20271819829940796
    2. ' not' → logprob: -1.7027182579040527
    3. 'N' → logprob: -6.702718257904053
    4. ' ' → logprob: -9.702717781066895
    5. 'not' → logprob: -11.202717781066895
    6. ' ' → logprob: -13.702717781066895
    7. '<|end|>' → logprob: -15.452717781066895
    8. '>N' → logprob: -16.57771873474121
    9. '```' → logprob: -17.14021873474121
    10. '  ' → logprob: -17.20271873474121

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11285211890935898
    2. '==' → logprob: -2.237852096557617
    3. ' <=' → logprob: -11.862852096557617
    4. ' <' → logprob: -12.112852096557617
    5. ' ' → logprob: -12.612852096557617
    6. '<=' → logprob: -12.737852096557617
    7. '=' → logprob: -12.862852096557617
    8. ')' → logprob: -13.237852096557617
    9. ')==' → logprob: -13.487852096557617
    10. '===' → logprob: -13.612852096557617

Token 37: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1269325166940689
    2. '0' → logprob: -2.1269326210021973
    3. ' ' → logprob: -13.376932144165039
    4. '  ' → logprob: -14.001932144165039
    5. '=' → logprob: -14.501932144165039
    6. '    ' → logprob: -15.001932144165039
    7. ' -' → logprob: -15.126932144165039
    8. '   ' → logprob: -15.376932144165039
    9. '_' → logprob: -15.501932144165039
    10. '-' → logprob: -16.18943214416504

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023246755823493004
    2. ' ' → logprob: -3.7732467651367188
    3. '-' → logprob: -14.273246765136719
    4. ' -' → logprob: -15.648246765136719
    5. '  ' → logprob: -15.773246765136719
    6. '    ' → logprob: -16.14824676513672
    7. '   ' → logprob: -16.52324676513672
    8. '```' → logprob: -16.64824676513672
    9. ' ' → logprob: -17.02324676513672
    10. '０' → logprob: -17.27324676513672

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004172421991825104
    2. ':
' → logprob: -5.504172325134277
    3. '       ' → logprob: -9.629172325134277
    4. ':return' → logprob: -11.254172325134277
    5. '   ' → logprob: -11.754172325134277
    6. ' :' → logprob: -12.379172325134277
    7. '           ' → logprob: -14.629172325134277
    8. ' break' → logprob: -14.754172325134277
    9. ' :
' → logprob: -15.129172325134277
    10. '    ' → logprob: -15.254172325134277

Token 40: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5774550437927246
    2. '           ' → logprob: -0.8274550437927246
    3. ' break' → logprob: -8.077455520629883
    4. '        ' → logprob: -8.202455520629883
    5. '   ' → logprob: -8.202455520629883
    6. ':' → logprob: -8.577455520629883
    7. '          ' → logprob: -9.327455520629883
    8. '      ' → logprob: -9.577455520629883
    9. '     ' → logprob: -9.827455520629883
    10. '         ' → logprob: -10.202455520629883

Token 41: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.19460073113441467
    2. 'break' (adapté à ' break') → logprob: -2.319600820541382
    3. '       ' → logprob: -2.944600820541382
    4. '           ' → logprob: -3.694600820541382
    5. '	break' → logprob: -8.194601058959961
    6. 'return' → logprob: -8.194601058959961
    7. ' return' → logprob: -8.319601058959961
    8. '   ' → logprob: -9.319601058959961
    9. '```' → logprob: -9.694601058959961
    10. '               ' → logprob: -10.819601058959961

Token 42: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0839343070983887
    2. '<|end|>' → logprob: -1.0839343070983887
    3. '
' → logprob: -1.2089343070983887
    4. '        
' → logprob: -4.958934307098389
    5. '\n' → logprob: -5.208934307098389
    6. '<|end|>' → logprob: -5.333934307098389
    7. '```' → logprob: -5.583934307098389
    8. '\' → logprob: -7.083934307098389
    9. ')' → logprob: -7.708934307098389
    10. '    
' → logprob: -7.708934307098389

Token 43: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15605270862579346
    2. '<|end|>' → logprob: -2.531052589416504
    3. '        ' → logprob: -3.156052589416504
    4. '<|end|>' → logprob: -4.781052589416504
    5. ' ' → logprob: -5.656052589416504
    6. '    ' → logprob: -6.031052589416504
    7. '        
' → logprob: -6.031052589416504
    8. '   ' → logprob: -6.406052589416504
    9. '      ' → logprob: -7.656052589416504
    10. '  ' → logprob: -7.781052589416504

Token 45: ' lire' (ID: 46082)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.7883599996566772
    2. ' count' → logprob: -2.663360118865967
    3. ' heights' → logprob: -3.038360118865967
    4. ' s' → logprob: -3.163360118865967
    5. ' graph' → logprob: -3.163360118865967
    6. ' counts' → logprob: -3.288360118865967
    7. ' stack' → logprob: -3.413360118865967
    8. '   ' → logprob: -4.038360118865967
    9. ' cards' → logprob: -4.163360118865967
    10. ' lines' → logprob: -4.163360118865967

Token 46: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25530174374580383
    2. '<|end|>' → logprob: -1.8803017139434814
    3. '<|end|>' → logprob: -4.2553019523620605
    4. ')' → logprob: -4.3803019523620605
    5. 's' → logprob: -5.0053019523620605
    6. ' )' → logprob: -5.0053019523620605
    7. '  ' → logprob: -5.1303019523620605
    8. '   ' → logprob: -5.2553019523620605
    9. '    ' → logprob: -5.6303019523620605
    10. ' les' → logprob: -6.0053019523620605

Token 47: ' grille' (ID: 99153)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -1.0706446170806885
    2. ' suite' → logprob: -1.9456446170806885
    3. 'liste' → logprob: -2.1956446170806885
    4. 'gr' → logprob: -2.6956446170806885
    5. 'ligne' → logprob: -2.9456446170806885
    6. 'chaine' → logprob: -3.1956446170806885
    7. 's' → logprob: -3.3206446170806885
    8. 'tail' → logprob: -3.5706446170806885
    9. 'sequence' → logprob: -3.9456446170806885
    10. 'graph' → logprob: -4.445644378662109

Token 48: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' sa' (ID: 880)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -1.789655327796936
    2. 'scores' → logprob: -1.914655327796936
    3. 'm' → logprob: -2.0396552085876465
    4. 'ha' → logprob: -2.1646552085876465
    5. 'ta' → logprob: -3.0396552085876465
    6. 'gr' → logprob: -3.0396552085876465
    7. 't' → logprob: -3.0396552085876465
    8. 'p' → logprob: -4.0396552085876465
    9. ' cases' → logprob: -4.0396552085876465
    10. 'd' → logprob: -4.0396552085876465

Token 50: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.3173522651195526
    2. 'ts' → logprob: -2.067352294921875
    3. 't' → logprob: -3.067352294921875
    4. 'per' → logprob: -3.942352294921875
    5. 'tis' → logprob: -4.067352294921875
    6. 'pes' → logprob: -4.817352294921875
    7. 'pe' → logprob: -5.192352294921875
    8. 'ut' → logprob: -5.567352294921875
    9. 'bles' → logprob: -5.567352294921875
    10. 'p' → logprob: -5.692352294921875

Token 51: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9701844453811646
    2. '       ' → logprob: -0.9701844453811646
    3. '\n' → logprob: -3.345184326171875
    4. '
' → logprob: -3.470184326171875
    5. 'n' → logprob: -3.720184326171875
    6. '<|end|>' → logprob: -3.845184326171875
    7. '    
' → logprob: -3.970184326171875
    8. 's' → logprob: -4.220184326171875
    9. ' for' → logprob: -4.220184326171875
    10. '        
' → logprob: -4.220184326171875

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04984273388981819
    2. '   ' → logprob: -3.9248428344726562
    3. '<|end|>' → logprob: -5.424842834472656
    4. '        
' → logprob: -5.549842834472656
    5. '
' → logprob: -5.799842834472656
    6. 'n' → logprob: -5.799842834472656
    7. '[' → logprob: -6.049842834472656
    8. '        ' → logprob: -6.424842834472656
    9. 'grid' → logprob: -6.674842834472656
    10. '    
' → logprob: -6.674842834472656

Token 53: ' jumps' (ID: 65613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2335257530212402
    2. 'grid' → logprob: -1.3585257530212402
    3. ' grid' → logprob: -1.8585257530212402
    4. 's' → logprob: -2.2335257530212402
    5. '   ' → logprob: -2.7335257530212402
    6. ' jumps' → logprob: -3.1085257530212402
    7. 'jump' → logprob: -4.60852575302124
    8. ' s' → logprob: -4.85852575302124
    9. 'j' → logprob: -4.98352575302124
    10. '        
' → logprob: -4.98352575302124

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05500753968954086
    2. '=' → logprob: -2.9300074577331543
    3. '=[]' → logprob: -9.930007934570312
    4. '[' → logprob: -10.930007934570312
    5. '[]' → logprob: -11.055007934570312
    6. '   ' → logprob: -11.305007934570312
    7. ' =[' → logprob: -11.555007934570312
    8. ' ' → logprob: -11.805007934570312
    9. 's' → logprob: -12.305007934570312
    10. '=[' → logprob: -13.180007934570312

Token 55: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04519388824701309
    2. '[]' → logprob: -4.170193672180176
    3. '[list' → logprob: -4.170193672180176
    4. ' [' → logprob: -4.545193672180176
    5. '[j' → logprob: -7.295193672180176
    6. ' []' → logprob: -7.420193672180176
    7. '[int' → logprob: -8.045193672180176
    8. '[List' → logprob: -8.545193672180176
    9. '[i' → logprob: -8.545193672180176
    10. '[n' → logprob: -9.045193672180176

Token 56: 'tuple' (ID: 52834)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20151078701019287
    2. ' list' → logprob: -1.7015107870101929
    3. '[list' → logprob: -9.576510429382324
    4. '[' → logprob: -11.701510429382324
    5. '	list' → logprob: -12.076510429382324
    6. ' [' → logprob: -12.576510429382324
    7. '[]' → logprob: -12.826510429382324
    8. '[int' → logprob: -13.201510429382324
    9. ']' → logprob: -13.326510429382324
    10. '=list' → logprob: -13.826510429382324

Token 57: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0009442188893444836
    2. 'map' → logprob: -7.125944137573242
    3. '(int' → logprob: -9.500944137573242
    4. '(' → logprob: -9.750944137573242
    5. ' map' → logprob: -12.125944137573242
    6. 'int' → logprob: -15.000944137573242
    7. '	map' → logprob: -15.125944137573242
    8. '()' → logprob: -15.250944137573242
    9. '(input' → logprob: -16.375944137573242
    10. '.map' → logprob: -16.500944137573242

Token 58: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00011093381908722222
    2. '(' → logprob: -10.000110626220703
    3. ',int' → logprob: -10.000110626220703
    4. ')' → logprob: -12.500110626220703
    5. '(str' → logprob: -12.500110626220703
    6. '[int' → logprob: -12.625110626220703
    7. '<int' → logprob: -12.750110626220703
    8. 'int' → logprob: -12.750110626220703
    9. '(lambda' → logprob: -13.750110626220703
    10. ']int' → logprob: -14.000110626220703

Token 59: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.22742360830307007
    2. ',' → logprob: -2.227423667907715
    3. '(input' → logprob: -2.352423667907715
    4. '(' → logprob: -8.602423667907715
    5. '(),' → logprob: -9.227423667907715
    6. 'input' → logprob: -9.352423667907715
    7. ' ,' → logprob: -10.727423667907715
    8. ',(' → logprob: -10.977423667907715
    9. ')' → logprob: -11.602423667907715
    10. ',
' → logprob: -11.727423667907715

Token 60: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519405782222748
    2. ' input' → logprob: -1.5019406080245972
    3. ')' → logprob: -12.251940727233887
    4. ',input' → logprob: -12.876940727233887
    5. '(input' → logprob: -13.501940727233887
    6. '[input' → logprob: -14.626940727233887
    7. '	input' → logprob: -14.751940727233887
    8. '<input' → logprob: -14.751940727233887
    9. '=input' → logprob: -15.001940727233887
    10. ' ' → logprob: -15.251940727233887

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.816093228830141e-06
    2. '()' → logprob: -12.87500286102295
    3. ' ().' → logprob: -16.000001907348633
    4. '(' → logprob: -17.375001907348633
    5. '()))' → logprob: -18.500001907348633
    6. '()
' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.875001907348633
    8. '.readline' → logprob: -20.375001907348633
    9. ')' → logprob: -20.750001907348633
    10. '())))' → logprob: -21.000001907348633

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04970288276672363
    2. 'strip' → logprob: -3.0497028827667236
    3. 'rstrip' → logprob: -6.7997026443481445
    4. ' split' → logprob: -14.424702644348145
    5. '(split' → logprob: -15.799702644348145
    6. ' strip' → logprob: -17.29970359802246
    7. 'spl' → logprob: -17.42470359802246
    8. 's' → logprob: -18.17470359802246
    9. 'read' → logprob: -18.17470359802246
    10. '.split' → logprob: -19.29970359802246

Token 63: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0030606575310230255
    2. '))' → logprob: -6.253060817718506
    3. '()))
' → logprob: -7.253060817718506
    4. '()' → logprob: -8.253060340881348
    5. '())' → logprob: -9.128060340881348
    6. '())))' → logprob: -10.753060340881348
    7. '(' → logprob: -10.878060340881348
    8. '()
' → logprob: -12.628060340881348
    9. '()))
' → logprob: -13.128060340881348
    10. '()))

' → logprob: -13.253060340881348

Token 64: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00478740781545639
    2. ' for' → logprob: -5.754787445068359
    3. ')]' → logprob: -7.629787445068359
    4. 'for' → logprob: -7.879787445068359
    5. '()' → logprob: -8.37978744506836
    6. '   ' → logprob: -8.62978744506836
    7. '       ' → logprob: -8.87978744506836
    8. ' )' → logprob: -9.37978744506836
    9. ']' → logprob: -10.25478744506836
    10. '))' → logprob: -11.62978744506836

Token 65: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8489426970481873
    2. ' range' → logprob: -0.8489426970481873
    3. ' _' → logprob: -1.973942756652832
    4. 'range' → logprob: -5.723942756652832
    5. '_range' → logprob: -6.348942756652832
    6. ' i' → logprob: -9.098942756652832
    7. '(range' → logprob: -9.223942756652832
    8. ' in' → logprob: -9.348942756652832
    9. ' ' → logprob: -10.598942756652832
    10. '	range' → logprob: -12.223942756652832

Token 66: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5682457685470581
    2. ' in' → logprob: -1.068245768547058
    3. 'in' → logprob: -2.6932458877563477
    4. ' range' → logprob: -3.8182458877563477
    5. ' ' → logprob: -9.193245887756348
    6. '  ' → logprob: -9.693245887756348
    7. '   ' → logprob: -10.443245887756348
    8. '	range' → logprob: -11.818245887756348
    9. '```' → logprob: -11.943245887756348
    10. '    ' → logprob: -11.943245887756348

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015079588629305363
    2. ' range' → logprob: -6.501507759094238
    3. '   ' → logprob: -13.001507759094238
    4. '(range' → logprob: -14.001507759094238
    5. ' ' → logprob: -14.251507759094238
    6. '[' → logprob: -14.751507759094238
    7. 'rang' → logprob: -14.751507759094238
    8. '  ' → logprob: -15.126507759094238
    9. '```' → logprob: -15.626507759094238
    10. '	range' → logprob: -15.626507759094238

Token 68: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.4868770196917467e-05
    2. '(' → logprob: -10.625024795532227
    3. '(n' → logprob: -15.250024795532227
    4. 'N' → logprob: -16.375024795532227
    5. ' (' → logprob: -16.750024795532227
    6. '(
' → logprob: -17.375024795532227
    7. ' N' → logprob: -18.250024795532227
    8. '((' → logprob: -19.000024795532227
    9. '   ' → logprob: -19.125024795532227
    10. '(M' → logprob: -19.500024795532227

Token 69: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010950337309623137
    2. ')' → logprob: -9.375109672546387
    3. ']' → logprob: -11.250109672546387
    4. ')]
' → logprob: -12.375109672546387
    5. ')])' → logprob: -13.625109672546387
    6. '))' → logprob: -13.750109672546387
    7. '   ' → logprob: -13.875109672546387
    8. ' )' → logprob: -14.000109672546387
    9. ')}' → logprob: -14.250109672546387
    10. '])]' → logprob: -14.625109672546387

Token 70: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24757133424282074
    2. '<|end|>' → logprob: -1.997571349143982
    3. '       ' → logprob: -2.6225712299346924
    4. '        
' → logprob: -5.6225714683532715
    5. ')' → logprob: -6.1225714683532715
    6. '   ' → logprob: -6.4975714683532715
    7. '<|end|>' → logprob: -6.4975714683532715
    8. 'def' → logprob: -7.8725714683532715
    9. '#' → logprob: -7.9975714683532715
    10. '    
' → logprob: -8.247570991516113

Token 71: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7234951257705688
    2. '       ' → logprob: -1.4734951257705688
    3. 'dp' → logprob: -1.5984951257705688
    4. '        
' → logprob: -3.0984950065612793
    5. 'visited' → logprob: -4.348495006561279
    6. ' dp' → logprob: -5.598495006561279
    7. 'def' → logprob: -5.848495006561279
    8. 'dist' → logprob: -5.848495006561279
    9. 'distance' → logprob: -5.973495006561279
    10. '   ' → logprob: -6.348495006561279

Token 72: ' chaque' (ID: 21194)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11629796773195267
    2. 'visited' → logprob: -3.241297960281372
    3. ' dp' → logprob: -3.241297960281372
    4. ' visited' → logprob: -4.116298198699951
    5. 'memo' → logprob: -5.241298198699951
    6. '#' → logprob: -6.616298198699951
    7. 'dist' → logprob: -6.866298198699951
    8. 'max' → logprob: -7.116298198699951
    9. 'reachable' → logprob: -7.616298198699951
    10. 'distance' → logprob: -7.741298198699951

Token 73: ' ligne' (ID: 19583)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.9346132278442383
    2. ' position' → logprob: -1.4346132278442383
    3. 'case' → logprob: -1.9346132278442383
    4. ' case' → logprob: -3.1846132278442383
    5. 'pos' → logprob: -3.6846132278442383
    6. 'jump' → logprob: -4.059613227844238
    7. 'index' → logprob: -4.309613227844238
    8. ' cellule' → logprob: -4.309613227844238
    9. ' niveau' → logprob: -5.122113227844238
    10. 'niveau' → logprob: -5.184613227844238

Token 74: ' contient' (ID: 89067)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -1.2097758054733276
    2. ' is' → logprob: -2.709775924682617
    3. ':' → logprob: -2.834775924682617
    4. ' contient' → logprob: -2.834775924682617
    5. '       ' → logprob: -2.959775924682617
    6. ' est' → logprob: -3.209775924682617
    7. '<|end|>' → logprob: -3.209775924682617
    8. 's' → logprob: -3.209775924682617
    9. '   ' → logprob: -3.334775924682617
    10. ' contains' → logprob: -3.459775924682617

Token 75: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5773270130157471
    2. ' deux' → logprob: -1.077327013015747
    3. ' two' → logprob: -3.702327013015747
    4. ' ' → logprob: -3.827327013015747
    5. 'two' → logprob: -3.827327013015747
    6. 'de' → logprob: -4.202326774597168
    7. 'les' → logprob: -5.827326774597168
    8. ' les' → logprob: -6.577326774597168
    9. ' un' → logprob: -6.577326774597168
    10. 'len' → logprob: -6.702326774597168

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6289731860160828
    2. 'de' → logprob: -1.1289732456207275
    3. ' deux' → logprob: -2.3789732456207275
    4. 'two' → logprob: -3.7539732456207275
    5. 'les' → logprob: -4.878973007202148
    6. ' ' → logprob: -5.378973007202148
    7. 'une' → logprob: -6.003973007202148
    8. 'un' → logprob: -6.128973007202148
    9. ' two' → logprob: -6.253973007202148
    10. 'le' → logprob: -6.503973007202148

Token 77: '*N' (ID: 107360)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.1240343376994133
    2. ' ent' → logprob: -3.3740344047546387
    3. '<|end|>' → logprob: -3.9990344047546387
    4. 'inte' → logprob: -4.499034404754639
    5. 'int' → logprob: -4.749034404754639
    6. 'ints' → logprob: -4.999034404754639
    7. ' nombres' → logprob: -5.374034404754639
    8. 'val' → logprob: -5.499034404754639
    9. 's' → logprob: -5.749034404754639
    10. 'j' → logprob: -5.874034404754639

Token 78: ' ent' (ID: 1121)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0028485057409852743
    2. 'ières' → logprob: -6.7528486251831055
    3. 'rees' → logprob: -8.252848625183105
    4. 's' → logprob: -8.252848625183105
    5. 'ier' → logprob: -8.252848625183105
    6. 'i' → logprob: -8.627848625183105
    7. 'ités' → logprob: -8.877848625183105
    8. 'r' → logprob: -9.252848625183105
    9. 'ées' → logprob: -9.502848625183105
    10. '   ' → logprob: -9.502848625183105

Token 80: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5920049548149109
    2. '<|end|>' → logprob: -0.9670049548149109
    3. '       ' → logprob: -3.3420050144195557
    4. ' ' → logprob: -4.717004776000977
    5. '<|end|>' → logprob: -4.842004776000977
    6. '        
' → logprob: -5.342004776000977
    7. ' 
' → logprob: -5.717004776000977
    8. ')' → logprob: -6.592004776000977
    9. '  
' → logprob: -7.217004776000977
    10. '   ' → logprob: -7.342004776000977

Token 83: ' on' (ID: 402)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.563717246055603
    2. 'dp' → logprob: -1.188717246055603
    3. ' visited' → logprob: -2.9387173652648926
    4. 'visited' → logprob: -4.063717365264893
    5. ' for' → logprob: -4.313717365264893
    6. ' positions' → logprob: -5.688717365264893
    7. ' #' → logprob: -5.813717365264893
    8. ' distances' → logprob: -6.063717365264893
    9. ' memo' → logprob: -6.188717365264893
    10. '#' → logprob: -6.188717365264893

Token 84: ' transforme' (ID: 184109)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9243197441101074
    2. ' for' → logprob: -1.2993197441101074
    3. 'for' → logprob: -2.0493197441101074
    4. 'contin' → logprob: -3.6743197441101074
    5. 'continue' → logprob: -3.7993197441101074
    6. 'def' → logprob: -4.424319744110107
    7. ' souhaite' → logprob: -4.424319744110107
    8. ' peux' → logprob: -4.549319744110107
    9. ' continuer' → logprob: -4.549319744110107
    10. ' va' → logprob: -4.799319744110107

Token 85: ' en' (ID: 469)
  Prédit: ' jumps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jumps' → logprob: -0.5486921072006226
    2. 'j' → logprob: -1.9236921072006226
    3. ' la' → logprob: -2.423692226409912
    4. ' les' → logprob: -2.923692226409912
    5. '<|end|>' → logprob: -3.048692226409912
    6. 'les' → logprob: -4.048692226409912
    7. '[' → logprob: -4.423692226409912
    8. ' chaque' → logprob: -4.923692226409912
    9. ' j' → logprob: -5.298692226409912
    10. 'la' → logprob: -5.423692226409912

Token 86: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7473975419998169
    2. 'une' → logprob: -0.9973975419998169
    3. '[]' → logprob: -2.7473974227905273
    4. 'un' → logprob: -4.122397422790527
    5. 'liste' → logprob: -4.122397422790527
    6. ' un' → logprob: -4.372397422790527
    7. 'gr' → logprob: -5.122397422790527
    8. ' ' → logprob: -5.247397422790527
    9. '[' → logprob: -5.372397422790527
    10. 'j' → logprob: -5.622397422790527

Token 87: ' tableau' (ID: 67053)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1179816797375679
    2. ' tableau' → logprob: -2.6179816722869873
    3. 'a' → logprob: -3.8679816722869873
    4. 'es' → logprob: -5.117981910705566
    5. 'table' → logprob: -7.117981910705566
    6. ' e' → logprob: -7.117981910705566
    7. ' plateau' → logprob: -7.117981910705566
    8. ' table' → logprob: -7.242981910705566
    9. 'liste' → logprob: -7.367981910705566
    10. ' liste' → logprob: -7.367981910705566

Token 88: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8362898230552673
    2. '[]' → logprob: -1.336289882659912
    3. ' ' → logprob: -2.336289882659912
    4. '[
' → logprob: -3.086289882659912
    5. '2' → logprob: -3.586289882659912
    6. '[][]' → logprob: -3.961289882659912
    7. 'd' → logprob: -4.211289882659912
    8. 'de' → logprob: -4.336289882659912
    9. ' d' → logprob: -4.461289882659912
    10. ' de' → logprob: -4.711289882659912

Token 90: 'D' (ID: 35)
  Prédit: '*N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -1.0658763647079468
    2. 'D' → logprob: -1.3158763647079468
    3. '*' → logprob: -2.3158764839172363
    4. 'd' → logprob: -2.4408764839172363
    5. '[N' → logprob: -2.6908764839172363
    6. ' *' → logprob: -3.3158764839172363
    7. '[' → logprob: -3.5658764839172363
    8. '-dimensional' → logprob: -4.190876483917236
    9. 'N' → logprob: -4.690876483917236
    10. ' [' → logprob: -5.315876483917236

Token 91: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2084639072418213
    2. ' jumps' → logprob: -1.3334639072418213
    3. ',' → logprob: -1.7084639072418213
    4. '<|end|>' → logprob: -3.0834639072418213
    5. 's' → logprob: -3.3334639072418213
    6. '(grid' → logprob: -4.083463668823242
    7. ' (' → logprob: -4.083463668823242
    8. '(rows' → logprob: -4.208463668823242
    9. '(' → logprob: -4.333463668823242
    10. '[j' → logprob: -4.458463668823242

Token 92: ' dimensions' (ID: 23995)
  Prédit: ' taille'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' taille' → logprob: -1.1970301866531372
    2. 'j' → logprob: -2.3220300674438477
    3. 'size' → logprob: -2.5720300674438477
    4. 'N' → logprob: -2.6970300674438477
    5. 'tail' → logprob: -2.8220300674438477
    6. '2' → logprob: -2.9470300674438477
    7. 'int' → logprob: -3.1970300674438477
    8. '[' → logprob: -3.4470300674438477
    9. 'dimensions' → logprob: -3.6970300674438477
    10. 'ent' → logprob: -3.8220300674438477

Token 93: ' N' (ID: 478)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.267286092042923
    2. 'N' → logprob: -1.8922860622406006
    3. ' (' → logprob: -3.5172860622406006
    4. ' N' → logprob: -3.7672860622406006
    5. '[N' → logprob: -4.14228630065918
    6. '(' → logprob: -4.26728630065918
    7. '[' → logprob: -7.26728630065918
    8. '(n' → logprob: -9.14228630065918
    9. ' ' → logprob: -9.26728630065918
    10. '2' → logprob: -10.14228630065918

Token 94: '*N' (ID: 107360)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.30809348821640015
    2. ',' → logprob: -1.683093547821045
    3. 'x' → logprob: -2.933093547821045
    4. '*' → logprob: -4.308093547821045
    5. ' ,' → logprob: -5.183093547821045
    6. '×' → logprob: -6.308093547821045
    7. ' *' → logprob: -6.558093547821045
    8. '<|end|>' → logprob: -6.933093547821045
    9. ' ' → logprob: -7.308093547821045
    10. '*N' → logprob: -7.558093547821045

Token 95: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40283480286598206
    2. ' 
' → logprob: -2.652834892272949
    3. '[' → logprob: -2.777834892272949
    4. ',' → logprob: -3.152834892272949
    5. '       ' → logprob: -4.152834892272949
    6. ']' → logprob: -4.277834892272949
    7. '   ' → logprob: -4.277834892272949
    8. '[
' → logprob: -4.277834892272949
    9. ')' → logprob: -4.652834892272949
    10. ' ' → logprob: -4.777834892272949

Token 96: ' avec' (ID: 3937)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.32480788230896
    2. ' ' → logprob: -1.94980788230896
    3. '[]' → logprob: -1.94980788230896
    4. ' où' → logprob: -2.32480788230896
    5. ' where' → logprob: -2.44980788230896
    6. ' avec' → logprob: -3.07480788230896
    7. 'j' → logprob: -3.82480788230896
    8. ' []' → logprob: -3.82480788230896
    9. ' jumps' → logprob: -4.074808120727539
    10. ' with' → logprob: -4.199808120727539

Token 97: ' pour' (ID: 1930)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07562756538391113
    2. 'N' → logprob: -3.825627565383911
    3. ' ' → logprob: -3.825627565383911
    4. 'j' → logprob: -4.700627326965332
    5. 'des' → logprob: -5.200627326965332
    6. ' N' → logprob: -5.450627326965332
    7. ' des' → logprob: -5.825627326965332
    8. '1' → logprob: -7.075627326965332
    9. 'indices' → logprob: -7.200627326965332
    10. 'values' → logprob: -7.825627326965332

Token 98: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3947349488735199
    2. ' chaque' → logprob: -1.5197349786758423
    3. 'i' → logprob: -3.0197348594665527
    4. 'j' → logprob: -5.019734859466553
    5. ' each' → logprob: -5.019734859466553
    6. ' ' → logprob: -5.269734859466553
    7. ' j' → logprob: -5.269734859466553
    8. ' la' → logprob: -5.519734859466553
    9. ' les' → logprob: -5.644734859466553
    10. 'x' → logprob: -5.769734859466553

Token 99: ' case' (ID: 1890)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9532848596572876
    2. 'ligne' → logprob: -1.2032848596572876
    3. ' i' → logprob: -1.8282848596572876
    4. 'case' → logprob: -3.703284740447998
    5. 'élé' → logprob: -3.828284740447998
    6. ' ligne' → logprob: -4.078284740447998
    7. 'cell' → logprob: -4.078284740447998
    8. 'j' → logprob: -4.578284740447998
    9. 'l' → logprob: -5.078284740447998
    10. 's' → logprob: -5.203284740447998

Token 100: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.007666826248169
    2. ' les' → logprob: -2.382666826248169
    3. ' jumps' → logprob: -2.382666826248169
    4. '[]' → logprob: -2.507666826248169
    5. ' des' → logprob: -2.507666826248169
    6. ':' → logprob: -2.507666826248169
    7. '[' → logprob: -3.007666826248169
    8. ' j' → logprob: -3.007666826248169
    9. ' ' → logprob: -3.007666826248169
    10. ' (' → logprob: -3.132666826248169

Token 101: 'nx' (ID: 45103)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8246616125106812
    2. ')' → logprob: -1.5746616125106812
    3. 'x' → logprob: -2.1996617317199707
    4. '2' → logprob: -3.0746617317199707
    5. 'jump' → logprob: -3.3246617317199707
    6. 'les' → logprob: -3.4496617317199707
    7. '0' → logprob: -3.8246617317199707
    8. '1' → logprob: -3.9496617317199707
    9. 'dx' → logprob: -4.449661731719971
    10. ',' → logprob: -5.074661731719971

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00476569589227438
    2. ' ,' → logprob: -6.379765510559082
    3. ',n' → logprob: -6.504765510559082
    4. '2' → logprob: -7.254765510559082
    5. ',j' → logprob: -7.879765510559082
    6. 'n' → logprob: -8.379765510559082
    7. ',y' → logprob: -9.629765510559082
    8. ')' → logprob: -10.504765510559082
    9. ',)' → logprob: -10.504765510559082
    10. '1' → logprob: -10.879765510559082

Token 103: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.47506317496299744
    2. ' ny' → logprob: -0.9750632047653198
    3. ' ' → logprob: -8.10006332397461
    4. 'n' → logprob: -8.35006332397461
    5. '    
' → logprob: -9.72506332397461
    6. ' 
' → logprob: -9.97506332397461
    7. '   ' → logprob: -10.22506332397461
    8. '2' → logprob: -10.22506332397461
    9. ' ' → logprob: -10.35006332397461
    10. '  
' → logprob: -10.47506332397461

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001561009994475171
    2. ' )' → logprob: -9.50015640258789
    3. '):' → logprob: -10.50015640258789
    4. ')
' → logprob: -10.75015640258789
    5. '),' → logprob: -11.12515640258789
    6. '   ' → logprob: -12.62515640258789
    7. '       ' → logprob: -12.87515640258789
    8. ',' → logprob: -13.12515640258789
    9. '))' → logprob: -13.50015640258789
    10. ' ' → logprob: -14.00015640258789

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07114019989967346
    2. '
' → logprob: -2.8211402893066406
    3. '<|end|>' → logprob: -5.071140289306641
    4. '        
' → logprob: -6.696140289306641
    5. ',' → logprob: -7.821140289306641
    6. ')' → logprob: -7.946140289306641
    7. '<|end|>' → logprob: -8.19614028930664
    8. '   ' → logprob: -8.44614028930664
    9. ' ' → logprob: -10.07114028930664
    10. '[' → logprob: -10.32114028930664

Token 106: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19347119331359863
    2. '
' → logprob: -1.9434711933135986
    3. '        
' → logprob: -4.5684709548950195
    4. 'grid' → logprob: -5.5684709548950195
    5. '   ' → logprob: -5.6934709548950195
    6. ')' → logprob: -5.6934709548950195
    7. ' jumps' → logprob: -6.8184709548950195
    8. ',' → logprob: -6.8184709548950195
    9. ' grid' → logprob: -6.9434709548950195
    10. ')
' → logprob: -7.3184709548950195

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01604469306766987
    2. '=' → logprob: -4.141044616699219
    3. ' ' → logprob: -12.016044616699219
    4. '=[]' → logprob: -13.391044616699219
    5. '[]' → logprob: -14.641044616699219
    6. '   ' → logprob: -14.641044616699219
    7. ' =
' → logprob: -15.016044616699219
    8. '[' → logprob: -15.141044616699219
    9. ',' → logprob: -15.141044616699219
    10. ')' → logprob: -15.891044616699219

Token 108: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.4455750286579132
    2. '[' → logprob: -1.4455749988555908
    3. ' [[' → logprob: -3.070574998855591
    4. '[]' → logprob: -3.070574998855591
    5. ' [' → logprob: -3.695574998855591
    6. ' [[]' → logprob: -5.69557523727417
    7. ' []' → logprob: -7.07057523727417
    8. '[N' → logprob: -7.19557523727417
    9. '[]
' → logprob: -7.57057523727417
    10. '[n' → logprob: -7.94557523727417

Token 109: 'None' (ID: 8505)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4183616638183594
    2. '[' → logprob: -1.6683616638183594
    3. '[]' → logprob: -2.1683616638183594
    4. '[(' → logprob: -3.4183616638183594
    5. ' [' → logprob: -6.793361663818359
    6. '[n' → logprob: -7.043361663818359
    7. '[
' → logprob: -7.043361663818359
    8. ' []' → logprob: -7.168361663818359
    9. '[N' → logprob: -7.168361663818359
    10. '[list' → logprob: -7.543361663818359

Token 110: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16989317536354065
    2. 'for' → logprob: -2.419893264770508
    3. ']' → logprob: -2.919893264770508
    4. ']*' → logprob: -4.669893264770508
    5. '(N' → logprob: -6.544893264770508
    6. ']*(' → logprob: -6.669893264770508
    7. '   ' → logprob: -7.794893264770508
    8. ')' → logprob: -8.669893264770508
    9. '       ' → logprob: -9.044893264770508
    10. '[N' → logprob: -9.169893264770508

Token 111: ' *' (ID: 425)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5524821877479553
    2. ' for' → logprob: -1.0524821281433105
    3. 'for' → logprob: -2.9274821281433105
    4. '[N' → logprob: -5.1774821281433105
    5. '(' → logprob: -5.5524821281433105
    6. '([' → logprob: -5.8024821281433105
    7. ']' → logprob: -6.0524821281433105
    8. '   ' → logprob: -6.5524821281433105
    9. ']*' → logprob: -6.8024821281433105
    10. '*(' → logprob: -7.1774821281433105

Token 112: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0021333713084459305
    2. ' N' → logprob: -6.502133369445801
    3. '(N' → logprob: -7.377133369445801
    4. ' (' → logprob: -12.7521333694458
    5. '(' → logprob: -13.6271333694458
    6. '	N' → logprob: -13.8771333694458
    7. '[N' → logprob: -14.7521333694458
    8. '   ' → logprob: -16.252134323120117
    9. 'n' → logprob: -18.252134323120117
    10. ',N' → logprob: -18.377134323120117

Token 113: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0007379194721579552
    2. ' N' → logprob: -7.250738143920898
    3. '   ' → logprob: -11.000738143920898
    4. '(N' → logprob: -11.625738143920898
    5. '(' → logprob: -14.000738143920898
    6. ' (' → logprob: -14.625738143920898
    7. ' ' → logprob: -15.125738143920898
    8. 'n' → logprob: -15.250738143920898
    9. '	N' → logprob: -16.0007381439209
    10. '2' → logprob: -16.0007381439209

Token 114: '*N' (ID: 107360)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6463274359703064
    2. '*N' → logprob: -1.3963274955749512
    3. ')' → logprob: -1.5213274955749512
    4. '*' → logprob: -5.021327495574951
    5. ' *' → logprob: -6.146327495574951
    6. '**' → logprob: -7.271327495574951
    7. ' )
' → logprob: -8.896327018737793
    8. ')
' → logprob: -9.396327018737793
    9. ' ' → logprob: -9.521327018737793
    10. '2' → logprob: -9.646327018737793

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6935110688209534
    2. ')
' → logprob: -0.6935110688209534
    3. ')
' → logprob: -8.193511009216309
    4. ')

' → logprob: -10.193511009216309
    5. ' )
' → logprob: -10.443511009216309
    6. ' )' → logprob: -11.193511009216309
    7. '   ' → logprob: -13.443511009216309
    8. ']' → logprob: -13.943511009216309
    9. '
' → logprob: -14.443511009216309
    10. ')`
' → logprob: -14.818511009216309

Token 116: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0008955012308433652
    2. ' for' → logprob: -8.250895500183105
    3. '
' → logprob: -8.375895500183105
    4. 'for' → logprob: -8.625895500183105
    5. '<|end|>' → logprob: -9.375895500183105
    6. '\n' → logprob: -10.500895500183105
    7. '   ' → logprob: -10.875895500183105
    8. ')
' → logprob: -11.125895500183105
    9. '    
' → logprob: -11.250895500183105
    10. '[
' → logprob: -11.500895500183105

Token 117: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0015339049277827144
    2. ' for' → logprob: -7.5015339851379395
    3. 'for' (adapté à ' for') → logprob: -7.8765339851379395
    4. '
' → logprob: -8.751533508300781
    5. '\n' → logprob: -9.001533508300781
    6. ' 
' → logprob: -9.501533508300781
    7. '    
' → logprob: -9.626533508300781
    8. '  
' → logprob: -9.876533508300781
    9. '<|end|>' → logprob: -10.376533508300781
    10. '   ' → logprob: -10.376533508300781

Token 118: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005325193051248789
    2. 'i' → logprob: -5.5053253173828125
    3. ' x' → logprob: -7.1303253173828125
    4. ' y' → logprob: -8.255325317382812
    5. ' r' → logprob: -9.630325317382812
    6. ' ' → logprob: -9.755325317382812
    7. 'x' → logprob: -10.130325317382812
    8. '	i' → logprob: -12.005325317382812
    9. ' row' → logprob: -12.380325317382812
    10. 'y' → logprob: -12.630325317382812

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023470010608434677
    2. 'in' → logprob: -3.773469924926758
    3. ' ' → logprob: -9.023469924926758
    4. ',' → logprob: -9.398469924926758
    5. 'n' → logprob: -12.898469924926758
    6. 's' → logprob: -12.898469924926758
    7. '_' → logprob: -13.023469924926758
    8. ' i' → logprob: -13.398469924926758
    9. '  ' → logprob: -13.523469924926758
    10. 'import' → logprob: -13.523469924926758

Token 120: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20146051049232483
    2. ' range' → logprob: -1.7014604806900024
    3. '(range' → logprob: -10.951460838317871
    4. ' ' → logprob: -11.326460838317871
    5. '	range' → logprob: -11.701460838317871
    6. ' in' → logprob: -13.076460838317871
    7. '  ' → logprob: -13.451460838317871
    8. 'in' → logprob: -13.451460838317871
    9. ' xrange' → logprob: -13.576460838317871
    10. '   ' → logprob: -13.701460838317871

Token 121: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.000145137935760431
    2. '(' → logprob: -9.000144958496094
    3. 'N' → logprob: -11.500144958496094
    4. '	N' → logprob: -12.375144958496094
    5. '(n' → logprob: -12.875144958496094
    6. ' (' → logprob: -13.000144958496094
    7. ' N' → logprob: -13.875144958496094
    8. '(len' → logprob: -14.125144958496094
    9. '   ' → logprob: -14.875144958496094
    10. '(
' → logprob: -15.625144958496094

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06254936009645462
    2. '):
' → logprob: -2.812549352645874
    3. ' ):' → logprob: -7.812549591064453
    4. '):
' → logprob: -9.812549591064453
    5. '*N' → logprob: -10.062549591064453
    6. ')' → logprob: -10.187549591064453
    7. ' ):
' → logprob: -11.437549591064453
    8. '*' → logprob: -11.562549591064453
    9. ' *' → logprob: -11.937549591064453
    10. '   ' → logprob: -12.062549591064453

Token 123: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22235792875289917
    2. '   ' → logprob: -2.097357988357544
    3. ':' → logprob: -2.847357988357544
    4. ' for' → logprob: -5.222357749938965
    5. ' ' → logprob: -5.472357749938965
    6. '    ' → logprob: -6.347357749938965
    7. '
' → logprob: -6.722357749938965
    8. '	   ' → logprob: -6.722357749938965
    9. '<|end|>' → logprob: -6.847357749938965
    10. '	' → logprob: -6.972357749938965

Token 124: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0445564985275269
    2. ' line' → logprob: -1.4195564985275269
    3. '   ' → logprob: -1.5445564985275269
    4. ' row' → logprob: -2.0445566177368164
    5. 'for' (adapté à ' for') → logprob: -4.169556617736816
    6. ' parts' → logprob: -4.419556617736816
    7. ' j' → logprob: -5.044556617736816
    8. 'line' → logprob: -5.169556617736816
    9. ' tokens' → logprob: -5.294556617736816
    10. ' cols' → logprob: -5.544556617736816

Token 125: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.051068440079689026
    2. 'j' → logprob: -3.0510685443878174
    3. ' range' → logprob: -6.926068305969238
    4. ' ' → logprob: -7.176068305969238
    5. '0' → logprob: -7.551068305969238
    6. 'range' → logprob: -9.926068305969238
    7. ' n' → logprob: -10.051068305969238
    8. ' N' → logprob: -10.051068305969238
    9. 'n' → logprob: -10.551068305969238
    10. 'N' → logprob: -10.926068305969238

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021383915096521378
    2. 'in' → logprob: -3.8963840007781982
    3. ' ' → logprob: -7.146383762359619
    4. '+' → logprob: -11.271384239196777
    5. '    ' → logprob: -11.896384239196777
    6. '0' → logprob: -12.146384239196777
    7. '   ' → logprob: -12.271384239196777
    8. '(' → logprob: -12.521384239196777
    9. ')' → logprob: -12.646384239196777
    10. '	in' → logprob: -12.771384239196777

Token 127: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5762700438499451
    2. 'range' → logprob: -0.8262700438499451
    3. '(range' → logprob: -8.57627010345459
    4. '(' → logprob: -10.07627010345459
    5. ' ' → logprob: -10.20127010345459
    6. ' (' → logprob: -10.82627010345459
    7. '(N' → logprob: -10.95127010345459
    8. '0' → logprob: -11.57627010345459
    9. ' N' → logprob: -12.07627010345459
    10. 'N' → logprob: -12.20127010345459

Token 128: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001567353610880673
    2. '(' → logprob: -6.501567363739014
    3. ' (' → logprob: -9.751566886901855
    4. '(
' → logprob: -13.251566886901855
    5. '(n' → logprob: -13.876566886901855
    6. 'range' → logprob: -13.876566886901855
    7. 'N' → logprob: -14.251566886901855
    8. '((' → logprob: -14.501566886901855
    9. ' ' → logprob: -14.501566886901855
    10. '(range' → logprob: -14.751566886901855

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16064824163913727
    2. '):
' → logprob: -1.910648226737976
    3. '+' → logprob: -9.160648345947266
    4. ')' → logprob: -9.285648345947266
    5. ' ):' → logprob: -9.660648345947266
    6. '*' → logprob: -9.910648345947266
    7. '):
' → logprob: -10.535648345947266
    8. '       ' → logprob: -10.660648345947266
    9. ':' → logprob: -10.910648345947266
    10. '   ' → logprob: -10.910648345947266

Token 130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10634788125753403
    2. ',' → logprob: -3.3563477993011475
    3. ':' → logprob: -3.7313477993011475
    4. '           ' → logprob: -4.106348037719727
    5. '       ' → logprob: -4.856348037719727
    6. ' :' → logprob: -5.856348037719727
    7. '                ' → logprob: -6.356348037719727
    8. ' ' → logprob: -6.481348037719727
    9. ' (' → logprob: -6.606348037719727
    10. ' ,' → logprob: -6.856348037719727

Token 131: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7045440077781677
    2. ' graph' → logprob: -1.4545440673828125
    3. ' nx' → logprob: -2.0795440673828125
    4. 'x' (adapté à ' x') → logprob: -2.7045440673828125
    5. '                   ' → logprob: -3.2045440673828125
    6. 'graph' → logprob: -4.0795440673828125
    7. ' idx' → logprob: -4.9545440673828125
    8. 'nx' → logprob: -5.3295440673828125
    9. '                       ' → logprob: -5.9545440673828125
    10. '               ' → logprob: -6.0795440673828125

Token 132: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041789524257183075
    2. ' =' → logprob: -6.129179000854492
    3. '=' → logprob: -7.004179000854492
    4. ',y' → logprob: -7.754179000854492
    5. ',j' → logprob: -8.629179000854492
    6. '_offset' → logprob: -8.879179000854492
    7. ' ,' → logprob: -9.004179000854492
    8. '_,' → logprob: -9.754179000854492
    9. 'j' → logprob: -10.254179000854492
    10. 'y' → logprob: -10.504179000854492

Token 133: ' jumps' (ID: 65613)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03602747246623039
    2. 'i' → logprob: -3.911027431488037
    3. ' jumps' → logprob: -4.286027431488037
    4. ' j' → logprob: -7.286027431488037
    5. ' i' → logprob: -7.786027431488037
    6. '   ' → logprob: -8.411027908325195
    7. '(i' → logprob: -9.036027908325195
    8. 'jump' → logprob: -9.911027908325195
    9. '(j' → logprob: -10.161027908325195
    10. '	j' → logprob: -11.661027908325195

Token 134: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2813469469547272
    2. '[' → logprob: -1.4063469171524048
    3. '[N' → logprob: -9.031347274780273
    4. '   ' → logprob: -10.656347274780273
    5. '[j' → logprob: -10.781347274780273
    6. ' [' → logprob: -11.406347274780273
    7. '[(' → logprob: -12.406347274780273
    8. '][' → logprob: -12.406347274780273
    9. '
' → logprob: -13.406347274780273
    10. '2' → logprob: -13.531347274780273

Token 135: '][' (ID: 2696)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014005948323756456
    2. 'j' → logprob: -6.751400470733643
    3. '(' → logprob: -8.8764009475708
    4. ' ' → logprob: -10.0014009475708
    5. '           ' → logprob: -11.1264009475708
    6. '   ' → logprob: -11.3764009475708
    7. '                   ' → logprob: -12.7514009475708
    8. '               ' → logprob: -13.0014009475708
    9. '0' → logprob: -13.1264009475708
    10. '(j' → logprob: -13.2514009475708

Token 137: '*j' (ID: 138193)
  Prédit: '*j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*j' → logprob: -0.00036263695801608264
    2. '*' → logprob: -8.500362396240234
    3. ' *' → logprob: -8.750362396240234
    4. 'j' → logprob: -14.875362396240234
    5. '*(' → logprob: -16.000362396240234
    6. '*i' → logprob: -16.875362396240234
    7. '*x' → logprob: -17.875362396240234
    8. '*m' → logprob: -18.500362396240234
    9. '*t' → logprob: -18.625362396240234
    10. '*k' → logprob: -18.625362396240234

Token 138: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7000854015350342
    2. ']
' → logprob: -0.7000854015350342
    3. '+' → logprob: -5.075085639953613
    4. ']+' → logprob: -8.450085639953613
    5. ']
' → logprob: -9.325085639953613
    6. ' ]
' → logprob: -9.450085639953613
    7. '],' → logprob: -9.825085639953613
    8. '   ' → logprob: -9.825085639953613
    9. '1' → logprob: -10.200085639953613
    10. ' ]' → logprob: -10.325085639953613

Token 139: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5064375996589661
    2. '               ' → logprob: -1.0064375400543213
    3. ' y' → logprob: -4.5064377784729
    4. '+' → logprob: -4.8814377784729
    5. 'y' → logprob: -5.3814377784729
    6. '                ' → logprob: -6.0064377784729
    7. '        ' → logprob: -6.5064377784729
    8. '       ' → logprob: -6.5064377784729
    9. ',' → logprob: -7.3814377784729
    10. ' +' → logprob: -8.256437301635742

Token 140: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5852055549621582
    2. 'y' (adapté à ' y') → logprob: -0.8352055549621582
    3. ' ' → logprob: -4.835205554962158
    4. '        ' → logprob: -7.585205554962158
    5. '                ' → logprob: -8.085205078125
    6. '         ' → logprob: -8.585205078125
    7. ' ' → logprob: -9.460205078125
    8. '	y' → logprob: -10.085205078125
    9. ',y' → logprob: -10.210205078125
    10. '            ' → logprob: -10.210205078125

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693072855472565
    2. '=' → logprob: -2.1269307136535645
    3. '=j' → logprob: -13.501931190490723
    4. ' ' → logprob: -14.001931190490723
    5. '   ' → logprob: -15.751931190490723
    6. ',' → logprob: -15.876931190490723
    7. ',j' → logprob: -17.126930236816406
    8. 'j' → logprob: -17.501930236816406
    9. '    ' → logprob: -17.501930236816406
    10. '       ' → logprob: -17.626930236816406

Token 142: ' jumps' (ID: 65613)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2018815279006958
    2. ' jumps' → logprob: -1.7018815279006958
    3. ' j' → logprob: -7.951881408691406
    4. '   ' → logprob: -10.201881408691406
    5. 'jump' → logprob: -10.201881408691406
    6. '       ' → logprob: -11.326881408691406
    7. ' ' → logprob: -12.326881408691406
    8. '           ' → logprob: -12.576881408691406
    9. '	j' → logprob: -12.701881408691406
    10. '(j' → logprob: -13.326881408691406

Token 143: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4974866644479334e-05
    2. '           ' → logprob: -12.125015258789062
    3. '[' → logprob: -12.250015258789062
    4. '[j' → logprob: -13.625015258789062
    5. '][' → logprob: -14.000015258789062
    6. ' [' → logprob: -14.250015258789062
    7. '               ' → logprob: -14.250015258789062
    8. 'i' → logprob: -14.500015258789062
    9. '       ' → logprob: -15.625015258789062
    10. '   ' → logprob: -15.875015258789062

Token 144: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.941161776310764e-05
    2. '[' → logprob: -10.500039100646973
    3. ' ][' → logprob: -11.875039100646973
    4. ']' → logprob: -12.500039100646973
    5. ')[' → logprob: -15.125039100646973
    6. ')][' → logprob: -15.375039100646973
    7. ']][' → logprob: -15.750039100646973
    8. '   ' → logprob: -15.875039100646973
    9. '()][' → logprob: -16.25004005432129
    10. '"][' → logprob: -16.37504005432129

Token 145: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.47495681833243e-05
    2. '(' → logprob: -10.750024795532227
    3. ' ' → logprob: -13.500024795532227
    4. '1' → logprob: -13.875024795532227
    5. '   ' → logprob: -14.625024795532227
    6. 'i' → logprob: -16.000024795532227
    7. 'j' → logprob: -16.375024795532227
    8. '
' → logprob: -16.375024795532227
    9. '[' → logprob: -17.750024795532227
    10. '           ' → logprob: -17.875024795532227

Token 146: '*j' (ID: 138193)
  Prédit: '*j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*j' → logprob: -0.16025002300739288
    2. 'j' → logprob: -1.9102500677108765
    3. '[j' → logprob: -11.160249710083008
    4. '_j' → logprob: -12.410249710083008
    5. '	j' → logprob: -12.535249710083008
    6. ' j' → logprob: -13.660249710083008
    7. ' *' → logprob: -13.785249710083008
    8. '$j' → logprob: -14.660249710083008
    9. '(j' → logprob: -14.785249710083008
    10. '```' → logprob: -14.785249710083008

Token 147: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006327360169962049
    2. ' +' → logprob: -7.3756327629089355
    3. '1' → logprob: -12.125632286071777
    4. ']' → logprob: -14.875632286071777
    5. '+
' → logprob: -15.625632286071777
    6. '   ' → logprob: -18.000633239746094
    7. '+j' → logprob: -18.000633239746094
    8. '＋' → logprob: -18.125633239746094
    9. ' ' → logprob: -18.250633239746094
    10. '```' → logprob: -18.250633239746094

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. ']' → logprob: -18.0
    4. '0' → logprob: -20.0
    5. '
' → logprob: -20.125
    6. '```' → logprob: -20.25
    7. '１' → logprob: -20.625
    8. '   ' → logprob: -21.375
    9. ']
' → logprob: -21.5
    10. 'y' → logprob: -21.625

Token 149: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0650668814778328
    2. ')' → logprob: -3.3150668144226074
    3. ']' → logprob: -4.065066814422607
    4. '<|end|>' → logprob: -5.565066814422607
    5. ')
' → logprob: -5.940066814422607
    6. '
' → logprob: -6.940066814422607
    7. '           ' → logprob: -7.440066814422607
    8. ']
' → logprob: -7.440066814422607
    9. '       ' → logprob: -8.315067291259766
    10. '                ' → logprob: -8.440067291259766

Token 150: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00258255866356194
    2. '<|end|>' → logprob: -6.252582550048828
    3. ')' → logprob: -7.627582550048828
    4. '                
' → logprob: -9.627582550048828
    5. '
' → logprob: -11.127582550048828
    6. '           ' → logprob: -11.252582550048828
    7. '<|end|>' → logprob: -11.377582550048828
    8. '			' → logprob: -11.752582550048828
    9. '  
' → logprob: -11.877582550048828
    10. ',' → logprob: -12.127582550048828

Token 151: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6446478962898254
    2. 'graph' (adapté à ' graph') → logprob: -0.7696478962898254
    3. '               ' → logprob: -5.26964807510376
    4. '       ' → logprob: -5.64464807510376
    5. ' if' → logprob: -6.14464807510376
    6. 'if' → logprob: -7.01964807510376
    7. '	graph' → logprob: -8.894647598266602
    8. '   ' → logprob: -10.519647598266602
    9. 'index' → logprob: -11.144647598266602
    10. '           ' → logprob: -11.519647598266602

Token 152: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001785112835932523
    2. '[N' → logprob: -9.125178337097168
    3. '[' → logprob: -9.750178337097168
    4. '[(' → logprob: -11.875178337097168
    5. ' [' → logprob: -12.750178337097168
    6. '[j' → logprob: -15.000178337097168
    7. '[I' → logprob: -15.500178337097168
    8. 'i' → logprob: -15.625178337097168
    9. '   ' → logprob: -15.875178337097168
    10. ')[' → logprob: -16.375179290771484

Token 153: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.0012713046744465828
    2. ' *' → logprob: -7.0012712478637695
    3. '*' → logprob: -8.00127124786377
    4. '*n' → logprob: -10.75127124786377
    5. '*(' → logprob: -13.87627124786377
    6. ']*' → logprob: -14.75127124786377
    7. '*num' → logprob: -14.75127124786377
    8. ']' → logprob: -15.12627124786377
    9. '**' → logprob: -15.25127124786377
    10. 'N' → logprob: -15.62627124786377

Token 154: '+j' (ID: 71365)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25952237844467163
    2. '+' → logprob: -1.5095224380493164
    3. '+j' → logprob: -4.884522438049316
    4. '+i' → logprob: -14.759522438049316
    5. '+k' → logprob: -14.884522438049316
    6. '+
' → logprob: -15.134522438049316
    7. ' +
' → logprob: -15.384522438049316
    8. ' plus' → logprob: -16.009521484375
    9. '+y' → logprob: -16.134521484375
    10. '+n' → logprob: -16.384521484375

Token 155: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021569548698607832
    2. ']=' → logprob: -9.000215530395508
    3. ']=(' → logprob: -9.875215530395508
    4. '=' → logprob: -10.250215530395508
    5. ')' → logprob: -12.875215530395508
    6. ' ]' → logprob: -13.500215530395508
    7. ' =' → logprob: -14.375215530395508
    8. '=(' → logprob: -15.250215530395508
    9. '(x' → logprob: -15.375215530395508
    10. '(' → logprob: -15.375215530395508

Token 156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740773141384125
    2. ' =' → logprob: -0.9740773439407349
    3. ' =(' → logprob: -15.849077224731445
    4. ' =[' → logprob: -16.724077224731445
    5. ')=' → logprob: -17.099077224731445
    6. ',' → logprob: -17.349077224731445
    7. ')' → logprob: -17.349077224731445
    8. '＝' → logprob: -17.349077224731445
    9. '=(' → logprob: -17.974077224731445
    10. ']=' → logprob: -17.974077224731445

Token 157: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06633689999580383
    2. '(i' → logprob: -3.1913368701934814
    3. ' (' → logprob: -4.0663371086120605
    4. '((' → logprob: -5.8163371086120605
    5. 'x' → logprob: -6.6913371086120605
    6. '(' → logprob: -6.6913371086120605
    7. '(j' → logprob: -8.316336631774902
    8. '   ' → logprob: -10.066336631774902
    9. ' x' → logprob: -10.316336631774902
    10. '(nx' → logprob: -10.441336631774902

Token 158: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.7039894461631775
    2. ',' → logprob: -0.9539894461631775
    3. ' *' → logprob: -2.2039895057678223
    4. ' ,' → logprob: -5.203989505767822
    5. ',y' → logprob: -6.078989505767822
    6. ',N' → logprob: -6.828989505767822
    7. '*' → logprob: -8.578989028930664
    8. '*y' → logprob: -8.703989028930664
    9. ',
' → logprob: -8.828989028930664
    10. '   ' → logprob: -9.203989028930664

Token 159: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13086572289466858
    2. ' +' → logprob: -2.3808658123016357
    3. '+y' → logprob: -3.5058658123016357
    4. '+j' → logprob: -8.880866050720215
    5. 'y' → logprob: -10.755866050720215
    6. '+x' → logprob: -13.005866050720215
    7. '+
' → logprob: -13.380866050720215
    8. '+i' → logprob: -13.630866050720215
    9. '+b' → logprob: -13.880866050720215
    10. 'plus' → logprob: -14.005866050720215

Token 160: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00039385363925248384
    2. ' y' → logprob: -8.000393867492676
    3. '(y' → logprob: -10.000393867492676
    4. 'j' → logprob: -11.500393867492676
    5. '   ' → logprob: -14.250393867492676
    6. '(' → logprob: -14.500393867492676
    7. ' (' → logprob: -15.375393867492676
    8. 'yj' → logprob: -15.375393867492676
    9. '	y' → logprob: -15.375393867492676
    10. '(j' → logprob: -15.875393867492676

Token 161: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08197444677352905
    2. '<|end|>' → logprob: -2.581974506378174
    3. '   ' → logprob: -7.081974506378174
    4. '    
' → logprob: -7.456974506378174
    5. '<|end|>' → logprob: -7.831974506378174
    6. '```' → logprob: -8.331974029541016
    7. '  
' → logprob: -8.331974029541016
    8. '
' → logprob: -8.706974029541016
    9. ')' → logprob: -8.831974029541016
    10. '

' → logprob: -9.081974029541016

Token 162: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12489871680736542
    2. '<|end|>' → logprob: -2.499898672103882
    3. '
' → logprob: -3.874898672103882
    4. ')' → logprob: -4.874898910522461
    5. 'def' → logprob: -5.499898910522461
    6. '    
' → logprob: -6.999898910522461
    7. '       ' → logprob: -7.249898910522461
    8. '#' → logprob: -8.249898910522461
    9. '```' → logprob: -8.249898910522461
    10. '<|end|>' → logprob: -8.499898910522461

Token 163: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.6242834329605103
    2. '   ' → logprob: -1.7492834329605103
    3. 'def' → logprob: -1.8742834329605103
    4. 'dp' → logprob: -2.2492833137512207
    5. 'from' → logprob: -4.374283313751221
    6. 'dist' → logprob: -4.499283313751221
    7. 'distance' → logprob: -5.624283313751221
    8. 'memo' → logprob: -6.874283313751221
    9. 'stack' → logprob: -7.374283313751221
    10. '       ' → logprob: -7.499283313751221

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020546913146972656
    2. '=' → logprob: -3.8955469131469727
    3. ' =[' → logprob: -12.770546913146973
    4. ' ' → logprob: -14.145546913146973
    5. '=[' → logprob: -14.895546913146973
    6. '[' → logprob: -14.895546913146973
    7. ')' → logprob: -15.145546913146973
    8. ',' → logprob: -16.270545959472656
    9. ']' → logprob: -16.395545959472656
    10. '=set' → logprob: -16.770545959472656

Token 165: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0032882285304367542
    2. 'set' → logprob: -6.003288269042969
    3. '[-' → logprob: -7.503288269042969
    4. ' [' → logprob: -8.378288269042969
    5. '[N' → logprob: -10.878288269042969
    6. ' set' → logprob: -12.628288269042969
    7. '[n' → logprob: -13.628288269042969
    8. '[len' → logprob: -13.878288269042969
    9. '[int' → logprob: -14.378288269042969
    10. '{}' → logprob: -14.378288269042969

Token 166: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.47757811343763e-05
    2. '0' → logprob: -10.375044822692871
    3. ' False' → logprob: -11.500044822692871
    4. '-' → logprob: -12.625044822692871
    5. '[' → logprob: -16.625043869018555
    6. '-F' → logprob: -17.375043869018555
    7. 'True' → logprob: -17.625043869018555
    8. '   ' → logprob: -17.625043869018555
    9. '(False' → logprob: -17.625043869018555
    10. ']' → logprob: -18.250043869018555

Token 167: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015425959136337042
    2. ']*' → logprob: -6.751542568206787
    3. ']*(' → logprob: -8.376543045043945
    4. ' ]' → logprob: -8.876543045043945
    5. ' for' → logprob: -13.751543045043945
    6. '   ' → logprob: -14.751543045043945
    7. ' ' → logprob: -15.251543045043945
    8. 'for' → logprob: -15.501543045043945
    9. ',' → logprob: -15.751543045043945
    10. ']+' → logprob: -15.876543045043945

Token 168: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.790129555156454e-05
    2. ' N' → logprob: -9.875067710876465
    3. '   ' → logprob: -11.750067710876465
    4. 'len' → logprob: -11.875067710876465
    5. '(N' → logprob: -15.000067710876465
    6. '10' → logprob: -15.375067710876465
    7. '100' → logprob: -15.625067710876465
    8. '(' → logprob: -15.875067710876465
    9. '    ' → logprob: -16.00006866455078
    10. ')' → logprob: -16.25006866455078

Token 169: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -2.0219828002154827e-05
    2. '*' → logprob: -10.875020027160645
    3. ' *' → logprob: -14.250020027160645
    4. '**' → logprob: -15.250020027160645
    5. 'N' → logprob: -16.00002098083496
    6. '*n' → logprob: -16.62502098083496
    7. '*M' → logprob: -17.00002098083496
    8. '*num' → logprob: -18.50002098083496
    9. '*(' → logprob: -19.00002098083496
    10. '*T' → logprob: -19.00002098083496

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021376516669988632
    2. ')
' → logprob: -6.252137660980225
    3. ' )' → logprob: -8.502137184143066
    4. ' )
' → logprob: -12.752137184143066
    5. ')

' → logprob: -13.502137184143066
    6. ')
' → logprob: -13.877137184143066
    7. '   ' → logprob: -15.127137184143066
    8. '
' → logprob: -16.252138137817383
    9. '       ' → logprob: -16.252138137817383
    10. '))' → logprob: -16.752138137817383

Token 171: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005623124074190855
    2. '<|end|>' → logprob: -5.5056233406066895
    3. '   ' → logprob: -7.7556233406066895
    4. '       ' → logprob: -8.005622863769531
    5. '  
' → logprob: -8.130622863769531
    6. '    
' → logprob: -8.505622863769531
    7. ' 
' → logprob: -9.380622863769531
    8. '        
' → logprob: -9.630622863769531
    9. '
' → logprob: -10.130622863769531
    10. ')' → logprob: -10.755622863769531

Token 172: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27492156624794006
    2. '1' → logprob: -2.2749216556549072
    3. ' ' → logprob: -2.3999216556549072
    4. '-' → logprob: -3.2749216556549072
    5. '2' → logprob: -5.399921417236328
    6. ' -' → logprob: -5.899921417236328
    7. 'False' → logprob: -7.524921417236328
    8. 'def' → logprob: -7.899921417236328
    9. '#' → logprob: -8.649921417236328
    10. '[' → logprob: -8.649921417236328

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20525720715522766
    2. '-' → logprob: -2.2052571773529053
    3. '2' → logprob: -3.3302571773529053
    4. '1' → logprob: -3.8302571773529053
    5. 'False' → logprob: -4.705257415771484
    6. 'N' → logprob: -5.705257415771484
    7. 'def' → logprob: -6.330257415771484
    8. '   ' → logprob: -6.955257415771484
    9. 'sys' → logprob: -7.080257415771484
    10. 'len' → logprob: -7.705257415771484

Token 174: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1025502011179924
    2. '#' → logprob: -3.4775502681732178
    3. ' #' → logprob: -4.102550029754639
    4. ' ,' → logprob: -4.227550029754639
    5. '=' → logprob: -4.477550029754639
    6. ':' → logprob: -5.102550029754639
    7. ' ' → logprob: -5.102550029754639
    8. '<|end|>' → logprob: -5.477550029754639
    9. ')' → logprob: -6.227550029754639
    10. ' for' → logprob: -6.727550029754639

Token 175: ' non' (ID: 2893)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.925051748752594
    2. 'un' → logprob: -1.0500516891479492
    3. 'non' → logprob: -1.4250516891479492
    4. 'pas' → logprob: -5.550051689147949
    5. 'in' → logprob: -6.050051689147949
    6. '未' → logprob: -6.175051689147949
    7. 'white' → logprob: -6.300051689147949
    8. 'bl' → logprob: -6.800051689147949
    9. 'und' → logprob: -7.175051689147949
    10. 'unt' → logprob: -9.05005168914795

Token 176: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.24765460193157196
    2. 'visited' → logprob: -1.6226545572280884
    3. 'visit' → logprob: -4.247654438018799
    4. 'vist' → logprob: -5.622654438018799
    5. ' vis' → logprob: -6.247654438018799
    6. ' visited' → logprob: -7.372654438018799
    7. '_vis' → logprob: -7.497654438018799
    8. ',' → logprob: -8.372654914855957
    9. 'v' → logprob: -8.497654914855957
    10. '_visit' → logprob: -9.497654914855957

Token 177: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.12222842872142792
    2. 'ited' → logprob: -2.3722283840179443
    3. 'it' → logprob: -3.8722283840179443
    4. 'ite' → logprob: -7.247228622436523
    5. 'ités' → logprob: -9.497228622436523
    6. '
' → logprob: -10.622228622436523
    7. '   ' → logprob: -10.872228622436523
    8. '(' → logprob: -10.872228622436523
    9. ' it' → logprob: -11.622228622436523
    10. '</' → logprob: -11.872228622436523

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03414386510848999
    2. ' ,' → logprob: -4.034143924713135
    3. '       ' → logprob: -4.409143924713135
    4. '1' → logprob: -6.284143924713135
    5. '
' → logprob: -7.284143924713135
    6. ' ' → logprob: -7.409143924713135
    7. '   ' → logprob: -8.409143447875977
    8. ',
' → logprob: -8.409143447875977
    9. '  ' → logprob: -11.409143447875977
    10. '        
' → logprob: -11.659143447875977

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005251780152320862
    2. ' ' → logprob: -5.255251884460449
    3. '   ' → logprob: -12.75525188446045
    4. '         ' → logprob: -12.75525188446045
    5. '       ' → logprob: -13.00525188446045
    6. '           ' → logprob: -13.00525188446045
    7. '        ' → logprob: -13.13025188446045
    8. '  ' → logprob: -14.00525188446045
    9. '          ' → logprob: -14.38025188446045
    10. '
' → logprob: -14.50525188446045

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. '-' → logprob: -11.875014305114746
    3. ' ' → logprob: -12.125014305114746
    4. '   ' → logprob: -14.250014305114746
    5. ' -' → logprob: -15.000014305114746
    6. '       ' → logprob: -15.750014305114746
    7. '  ' → logprob: -15.875014305114746
    8. '
' → logprob: -16.25001335144043
    9. '         ' → logprob: -16.25001335144043
    10. '           ' → logprob: -16.37501335144043

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141665637493134
    2. ' =' → logprob: -1.7014166116714478
    3. ' ' → logprob: -12.826416969299316
    4. '=en' → logprob: -16.451416015625
    5. ' ' → logprob: -16.576416015625
    6. '=open' → logprob: -16.951416015625
    7. 'def' → logprob: -17.076416015625
    8. '=in' → logprob: -17.326416015625
    9. ':' → logprob: -17.451416015625
    10. '#' → logprob: -17.451416015625

Token 182: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.36709168553352356
    2. 'vis' → logprob: -1.3670916557312012
    3. ' en' → logprob: -2.992091655731201
    4. '1' → logprob: -7.617091655731201
    5. 'visit' → logprob: -7.867091655731201
    6. 'visited' → logprob: -8.24209213256836
    7. 'dans' → logprob: -8.61709213256836
    8. ' ' → logprob: -9.11709213256836
    9. ' visite' → logprob: -9.49209213256836
    10. 'enc' → logprob: -9.49209213256836

Token 183: ' cours' (ID: 10138)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cours' → logprob: -0.0011524823494255543
    2. ' cours' → logprob: -7.126152515411377
    3. ' ' → logprob: -9.626152038574219
    4. 'course' → logprob: -9.876152038574219
    5. 'cour' → logprob: -10.126152038574219
    6. 'pile' → logprob: -10.126152038574219
    7. 'par' → logprob: -10.251152038574219
    8. 'stack' → logprob: -10.626152038574219
    9. '_c' → logprob: -11.376152038574219
    10. 'progress' → logprob: -11.626152038574219

Token 184: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004548199940472841
    2. ' ,' → logprob: -5.754548072814941
    3. '2' → logprob: -7.129548072814941
    4. '       ' → logprob: -8.129548072814941
    5. '<|end|>' → logprob: -8.504548072814941
    6. '   ' → logprob: -10.504548072814941
    7. ',
' → logprob: -12.129548072814941
    8. '0' → logprob: -12.254548072814941
    9. ')' → logprob: -12.254548072814941
    10. '           ' → logprob: -12.504548072814941

Token 185: ''ex' (ID: 23472)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.4889012575149536
    2. 'e' → logprob: -2.363901138305664
    3. ' exploration' → logprob: -2.363901138305664
    4. 'ex' → logprob: -2.488901138305664
    5. 'cours' → logprob: -3.863901138305664
    6. 'vis' → logprob: -4.113901138305664
    7. 'dfs' → logprob: -4.113901138305664
    8. 'execution' → logprob: -4.363901138305664
    9. ''ex' → logprob: -4.613901138305664
    10. 'é' → logprob: -4.613901138305664

Token 186: 'pl' (ID: 528)
  Prédit: 'écution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écution' → logprob: -0.17148864269256592
    2. 'ecution' → logprob: -1.921488642692566
    3. 'pl' → logprob: -4.6714887619018555
    4. 'c' → logprob: -6.6714887619018555
    5. 'p' → logprob: -7.6714887619018555
    6. 'ec' → logprob: -9.921488761901855
    7. 'e' → logprob: -10.921488761901855
    8. 'é' → logprob: -11.671488761901855
    9. 'ection' → logprob: -11.921488761901855
    10. '```' → logprob: -12.921488761901855

Token 187: 'oration' (ID: 9063)
  Prédit: 'oration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oration' → logprob: -0.007122868672013283
    2. 'or' → logprob: -5.132122993469238
    3. '```' → logprob: -8.007122993469238
    4. '1' → logprob: -8.382122993469238
    5. '0' → logprob: -9.007122993469238
    6. '

' → logprob: -9.132122993469238
    7. 'o' → logprob: -9.257122993469238
    8. '
' → logprob: -9.882122993469238
    9. '   ' → logprob: -10.257122993469238
    10. '``' → logprob: -10.757122993469238

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05184170603752136
    2. ' ,' → logprob: -3.6768417358398438
    3. '       ' → logprob: -3.9268417358398438
    4. '2' → logprob: -6.051841735839844
    5. '   ' → logprob: -6.176841735839844
    6. ' ' → logprob: -6.926841735839844
    7. '  ' → logprob: -10.426841735839844
    8. '           ' → logprob: -10.926841735839844
    9. ',
' → logprob: -11.301841735839844
    10. '               ' → logprob: -11.801841735839844

Token 189: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04302145540714264
    2. ' ' → logprob: -3.1680214405059814
    3. '   ' → logprob: -11.418021202087402
    4. '       ' → logprob: -12.543021202087402
    5. '  ' → logprob: -13.293021202087402
    6. '           ' → logprob: -13.918021202087402
    7. '#' → logprob: -14.043021202087402
    8. '
' → logprob: -14.168021202087402
    9. '        ' → logprob: -14.418021202087402
    10. '    ' → logprob: -14.543021202087402

Token 190: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '
' → logprob: -16.500051498413086
    4. '   ' → logprob: -16.750051498413086
    5. '           ' → logprob: -17.625051498413086
    6. '  ' → logprob: -18.125051498413086
    7. '       ' → logprob: -18.625051498413086
    8. '               ' → logprob: -18.750051498413086
    9. '

' → logprob: -19.000051498413086
    10. '-' → logprob: -19.500051498413086

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602422147989273
    2. '=' → logprob: -1.9102421998977661
    3. ' ' → logprob: -11.160242080688477
    4. ',' → logprob: -13.535242080688477
    5. '#' → logprob: -14.160242080688477
    6. ' ' → logprob: -14.535242080688477
    7. ' #' → logprob: -15.285242080688477
    8. '=True' → logprob: -15.410242080688477
    9. 'def' → logprob: -16.160242080688477
    10. '  ' → logprob: -16.410242080688477

Token 192: ' explor' (ID: 51034)
  Prédit: 'termin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'termin' → logprob: -0.9845055937767029
    2. 'expl' → logprob: -1.4845056533813477
    3. 'compl' → logprob: -1.7345056533813477
    4. 'vis' → logprob: -2.1095056533813477
    5. ' terminé' → logprob: -2.9845056533813477
    6. 'term' → logprob: -4.609505653381348
    7. ' complètement' → logprob: -4.734505653381348
    8. 'com' → logprob: -4.734505653381348
    9. '2' → logprob: -5.234505653381348
    10. 'ache' → logprob: -5.609505653381348

Token 193: 'é' (ID: 377)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2656935155391693
    2. 'té' → logprob: -1.7656935453414917
    3. 'ted' → logprob: -4.140693664550781
    4. 'or' → logprob: -4.515693664550781
    5. '2' → logprob: -4.890693664550781
    6. 'é' → logprob: -4.890693664550781
    7. 'ée' → logprob: -5.015693664550781
    8. 'ored' → logprob: -6.015693664550781
    9. 'rée' → logprob: -6.015693664550781
    10. 'ré' → logprob: -7.515693664550781

Token 194: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07598581910133362
    2. '   ' → logprob: -2.825985908508301
    3. '       ' → logprob: -5.075985908508301
    4. '    
' → logprob: -5.575985908508301
    5. 'def' → logprob: -6.075985908508301
    6. '        
' → logprob: -6.575985908508301
    7. '  
' → logprob: -9.9509859085083
    8. '<|end|>' → logprob: -10.2009859085083
    9. '
' → logprob: -10.4509859085083
    10. '

' → logprob: -10.9509859085083

Token 195: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05290702357888222
    2. '       ' → logprob: -3.3029069900512695
    3. '   ' → logprob: -4.6779069900512695
    4. '        
' → logprob: -6.3029069900512695
    5. '    
' → logprob: -6.6779069900512695
    6. 'def' → logprob: -6.9279069900512695
    7. '<|end|>' → logprob: -7.0529069900512695
    8. '  
' → logprob: -8.80290699005127
    9. ' 
' → logprob: -9.05290699005127
    10. '
' → logprob: -10.17790699005127

Token 196: ' cycle' (ID: 15839)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02272331900894642
    2. 'stack' → logprob: -4.147723197937012
    3. '   ' → logprob: -6.022723197937012
    4. ' def' → logprob: -6.147723197937012
    5. ' stack' → logprob: -7.022723197937012
    6. '
' → logprob: -7.397723197937012
    7. 'cycle' (adapté à ' cycle') → logprob: -8.772723197937012
    8. '    
' → logprob: -9.147723197937012
    9. 'result' → logprob: -9.522723197937012
    10. '       ' → logprob: -9.897723197937012

Token 197: '_count' (ID: 7536)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.9953024387359619
    2. ' =' → logprob: -1.495302438735962
    3. '_found' → logprob: -1.620302438735962
    4. '_nodes' → logprob: -2.245302438735962
    5. '_start' → logprob: -2.870302438735962
    6. '_detect' → logprob: -3.495302438735962
    7. '=' → logprob: -4.995302200317383
    8. 's' → logprob: -6.120302200317383
    9. '_node' → logprob: -6.495302200317383
    10. '_pos' → logprob: -6.620302200317383

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193148851394653
    2. '=' → logprob: -1.5019314289093018
    3. ' ' → logprob: -13.751931190490723
    4. ',' → logprob: -14.501931190490723
    5. '   ' → logprob: -14.751931190490723
    6. ' =
' → logprob: -15.751931190490723
    7. '  ' → logprob: -16.12693214416504
    8. 's' → logprob: -16.75193214416504
    9. ' +=' → logprob: -16.75193214416504
    10. ' ' → logprob: -17.12693214416504

Token 199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0889502614736557
    2. ' ' → logprob: -2.4639501571655273
    3. ' [' → logprob: -12.588950157165527
    4. '   ' → logprob: -13.088950157165527
    5. '  ' → logprob: -13.213950157165527
    6. '[' → logprob: -13.338950157165527
    7. '1' → logprob: -14.588950157165527
    8. ' ' → logprob: -15.463950157165527
    9. '[]' → logprob: -15.588950157165527
    10. '    ' → logprob: -15.651450157165527

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024512779782526195
    2. ' ' → logprob: -8.375245094299316
    3. '[' → logprob: -11.375245094299316
    4. ' [' → logprob: -14.250245094299316
    5. 'set' → logprob: -14.750245094299316
    6. '1' → logprob: -14.750245094299316
    7. '   ' → logprob: -15.250245094299316
    8. '[]' → logprob: -15.687745094299316
    9. 'int' → logprob: -15.687745094299316
    10. '(' → logprob: -15.875245094299316

Token 201: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004434866365045309
    2. '<|end|>' → logprob: -6.379435062408447
    3. '    
' → logprob: -7.129435062408447
    4. ' 
' → logprob: -7.379435062408447
    5. 'def' → logprob: -7.754435062408447
    6. '   ' → logprob: -8.004434585571289
    7. '  
' → logprob: -8.129434585571289
    8. '
' → logprob: -9.629434585571289
    9. '        
' → logprob: -10.004434585571289
    10. '<|end|>' → logprob: -10.504434585571289

Token 202: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006219097413122654
    2. '   ' → logprob: -5.756218910217285
    3. 'def' → logprob: -6.506218910217285
    4. '    
' → logprob: -7.006218910217285
    5. '<|end|>' → logprob: -8.506218910217285
    6. ' 
' → logprob: -9.256218910217285
    7. '  
' → logprob: -9.381218910217285
    8. '        
' → logprob: -9.631218910217285
    9. '

' → logprob: -9.756218910217285
    10. '       ' → logprob: -10.506218910217285

Token 203: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00014454191841650754
    2. 'for' → logprob: -9.625144958496094
    3. 'stack' → logprob: -10.375144958496094
    4. '       ' → logprob: -10.750144958496094
    5. '   ' → logprob: -11.125144958496094
    6. '
' → logprob: -12.125144958496094
    7. ' def' → logprob: -12.250144958496094
    8. '        
' → logprob: -14.500144958496094
    9. '    
' → logprob: -16.625144958496094
    10. 'import' → logprob: -17.375144958496094

Token 204: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -9.65101717156358e-05
    2. 'dfs' → logprob: -9.250096321105957
    3. ' visit' → logprob: -15.000096321105957
    4. ' DFS' → logprob: -16.875097274780273
    5. ' bfs' → logprob: -18.000097274780273
    6. 'DFS' → logprob: -18.250097274780273
    7. ' ' → logprob: -19.000097274780273
    8. '
' → logprob: -19.375097274780273
    9. ' def' → logprob: -19.625097274780273
    10. ' cycle' → logprob: -19.625097274780273

Token 205: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.5380941033363342
    2. '(node' → logprob: -1.0380940437316895
    3. '(v' → logprob: -2.7880940437316895
    4. '(pos' → logprob: -8.288094520568848
    5. '(i' → logprob: -9.913094520568848
    6. '(' → logprob: -10.038094520568848
    7. '(x' → logprob: -10.288094520568848
    8. '(start' → logprob: -10.913094520568848
    9. '(vertex' → logprob: -10.913094520568848
    10. '(s' → logprob: -11.038094520568848

Token 206: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014188887551426888
    2. '):
' → logprob: -4.264188766479492
    3. ':' → logprob: -11.389188766479492
    4. ' ):' → logprob: -12.014188766479492
    5. ')' → logprob: -12.264188766479492
    6. ',' → logprob: -13.264188766479492
    7. '):
' → logprob: -13.764188766479492
    8. '   ' → logprob: -15.014188766479492
    9. '):

' → logprob: -15.764188766479492
    10. ' ):
' → logprob: -17.389188766479492

Token 207: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.150710940361023
    2. '
' → logprob: -1.525710940361023
    3. ' 
' → logprob: -1.775710940361023
    4. '           ' → logprob: -1.900710940361023
    5. '<|end|>' → logprob: -3.1507110595703125
    6. '  
' → logprob: -3.4007110595703125
    7. '    
' → logprob: -4.1507110595703125
    8. '   ' → logprob: -4.5257110595703125
    9. ':' → logprob: -5.2757110595703125
    10. '\' → logprob: -5.2757110595703125

Token 208: ' non' (ID: 2893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2507447004318237
    2. 'visited' → logprob: -1.2507447004318237
    3. ' if' → logprob: -1.3757447004318237
    4. '   ' → logprob: -2.6257448196411133
    5. ' visited' → logprob: -3.1257448196411133
    6. 'if' → logprob: -3.5007448196411133
    7. '           ' → logprob: -4.250744819641113
    8. ' non' → logprob: -4.750744819641113
    9. 'non' (adapté à ' non') → logprob: -5.625744819641113
    10. '    ' → logprob: -6.875744819641113

Token 209: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -1.688212614681106e-05
    2. 'locals' → logprob: -11.000017166137695
    3. ' local' → logprob: -16.750017166137695
    4. 'loc' → logprob: -18.125017166137695
    5. 'l' → logprob: -18.375017166137695
    6. 'lo' → logprob: -18.625017166137695
    7. 'visited' → logprob: -18.625017166137695
    8. '
' → logprob: -18.625017166137695
    9. 'locale' → logprob: -19.375017166137695
    10. '_local' → logprob: -19.375017166137695

Token 210: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.006231537088751793
    2. ' cycle' → logprob: -5.131231307983398
    3. 'visited' → logprob: -8.131231307983398
    4. '   ' → logprob: -12.881231307983398
    5. 'graph' → logprob: -13.131231307983398
    6. ' visited' → logprob: -13.631231307983398
    7. ' ' → logprob: -14.631231307983398
    8. 'cycled' → logprob: -14.631231307983398
    9. 'cycles' → logprob: -15.131231307983398
    10. '  ' → logprob: -15.506231307983398

Token 211: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3856492842023727e-06
    2. 'count' → logprob: -13.625000953674316
    3. '_' → logprob: -16.875001907348633
    4. ' _' → logprob: -19.125001907348633
    5. '_counter' → logprob: -19.125001907348633
    6. '\' → logprob: -19.250001907348633
    7. '_start' → logprob: -20.375001907348633
    8. '_c' → logprob: -20.375001907348633
    9. 'u' → logprob: -20.625001907348633
    10. '_cycle' → logprob: -20.625001907348633

Token 212: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04943402111530304
    2. '           ' → logprob: -3.174433946609497
    3. '            
' → logprob: -5.924434185028076
    4. '       ' → logprob: -7.174434185028076
    5. '  
' → logprob: -7.424434185028076
    6. '    
' → logprob: -7.549434185028076
    7. '<|end|>' → logprob: -8.299433708190918
    8. ':
' → logprob: -8.424433708190918
    9. ' 
' → logprob: -8.424433708190918
    10. '
' → logprob: -8.674433708190918

Token 213: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16410097479820251
    2. ' 
' → logprob: -2.9141008853912354
    3. '       ' → logprob: -3.6641008853912354
    4. '<|end|>' → logprob: -3.9141008853912354
    5. '
' → logprob: -4.6641011238098145
    6. '    
' → logprob: -4.7891011238098145
    7. '            
' → logprob: -4.7891011238098145
    8. '  
' → logprob: -4.9141011238098145
    9. ' if' → logprob: -5.0391011238098145
    10. '   ' → logprob: -5.7891011238098145

Token 214: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.14337722957134247
    2. 'if' → logprob: -2.2683773040771484
    3. '           ' → logprob: -3.8933773040771484
    4. '   ' → logprob: -5.768377304077148
    5. ' if' → logprob: -5.768377304077148
    6. '       ' → logprob: -6.143377304077148
    7. ' visited' → logprob: -6.643377304077148
    8. ' ' → logprob: -12.518377304077148
    9. '               ' → logprob: -13.018377304077148
    10. '  ' → logprob: -13.393377304077148

Token 215: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -17.125
    3. 'u' → logprob: -17.125
    4. ' [' → logprob: -17.25
    5. '```' → logprob: -18.625
    6. '(u' → logprob: -20.0
    7. '=u' → logprob: -20.25
    8. '	u' → logprob: -20.875
    9. ' u' → logprob: -21.0
    10. '[user' → logprob: -21.0

Token 216: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003124632057733834
    2. ' ]' → logprob: -8.250312805175781
    3. ']=' → logprob: -10.000312805175781
    4. ']==' → logprob: -12.375312805175781
    5. '[u' → logprob: -14.000312805175781
    6. ')' → logprob: -15.000312805175781
    7. '[' → logprob: -16.50031280517578
    8. '=' → logprob: -16.62531280517578
    9. ']+=' → logprob: -16.75031280517578
    10. ']
' → logprob: -16.87531280517578

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. ']=' → logprob: -17.514163970947266
    4. '+=' → logprob: -17.639163970947266
    5. '.=' → logprob: -18.014163970947266
    6. ']' → logprob: -18.264163970947266
    7. ')=' → logprob: -18.264163970947266
    8. '=
' → logprob: -18.514163970947266
    9. ')' → logprob: -18.514163970947266
    10. '＝' → logprob: -18.639163970947266

Token 218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -19.125709533691406
    4. '  ' → logprob: -21.125709533691406
    5. '[' → logprob: -22.000709533691406
    6. ' ' → logprob: -22.125709533691406
    7. '```' → logprob: -22.125709533691406
    8. '' → logprob: -22.250709533691406
    9. '
' → logprob: -22.250709533691406
    10. '=' → logprob: -22.500709533691406

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -20.625
    4. '```' → logprob: -21.75
    5. '۱' → logprob: -22.0
    6. '[' → logprob: -22.25
    7. '  ' → logprob: -22.375
    8. '<|end|>' → logprob: -22.75
    9. '१' → logprob: -23.0
    10. '১' → logprob: -23.0

Token 220: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00560356117784977
    2. '           ' → logprob: -6.005603790283203
    3. '\n' → logprob: -6.505603790283203
    4. ' 
' → logprob: -7.755603790283203
    5. '    
' → logprob: -7.880603790283203
    6. '  
' → logprob: -8.130603790283203
    7. '            
' → logprob: -8.505603790283203
    8. '
' → logprob: -9.130603790283203
    9. '<|end|>' → logprob: -9.630603790283203
    10. '        
' → logprob: -10.130603790283203

Token 221: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3533770740032196
    2. '           ' → logprob: -1.228377103805542
    3. '            
' → logprob: -6.478376865386963
    4. ' 
' → logprob: -6.978376865386963
    5. '    
' → logprob: -7.228376865386963
    6. ' for' → logprob: -7.478376865386963
    7. '  
' → logprob: -8.103377342224121
    8. '<|end|>' → logprob: -8.478377342224121
    9. '       ' → logprob: -8.728377342224121
    10. '\n' → logprob: -8.728377342224121

Token 222: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0010736575350165367
    2. ' v' → logprob: -7.126073837280273
    3. 'for' → logprob: -8.251073837280273
    4. ' for' → logprob: -12.251073837280273
    5. '   ' → logprob: -13.126073837280273
    6. 'next' → logprob: -14.751073837280273
    7. 'w' → logprob: -15.001073837280273
    8. '```' → logprob: -15.501073837280273
    9. '
' → logprob: -15.626073837280273
    10. '	v' → logprob: -15.751073837280273

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759400725364685
    2. '=' → logprob: -0.8259400725364685
    3. '=v' → logprob: -15.325940132141113
    4. ' ' → logprob: -16.075939178466797
    5. '=u' → logprob: -17.200939178466797
    6. '=
' → logprob: -17.325939178466797
    7. 'v' → logprob: -17.700939178466797
    8. '＝' → logprob: -17.700939178466797
    9. '=int' → logprob: -17.825939178466797
    10. 'u' → logprob: -18.075939178466797

Token 224: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.01416398212313652
    2. ' graph' → logprob: -4.264163970947266
    3. '	graph' → logprob: -14.889163970947266
    4. '(graph' → logprob: -16.639163970947266
    5. '   ' → logprob: -17.014163970947266
    6. 'Graph' → logprob: -19.889163970947266
    7. ' ' → logprob: -19.889163970947266
    8. 'raph' → logprob: -20.264163970947266
    9. '  ' → logprob: -20.889163970947266
    10. '_graph' → logprob: -21.014163970947266

Token 225: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.128163257315464e-07
    2. 'u' → logprob: -15.625
    3. '[' → logprob: -16.625
    4. '[v' → logprob: -16.875
    5. '(u' → logprob: -19.75
    6. ' [' → logprob: -19.875
    7. ' u' → logprob: -21.125
    8. '<u' → logprob: -21.375
    9. '```' → logprob: -21.625
    10. '[
' → logprob: -21.875

Token 226: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4849456548690796
    2. ']
' → logprob: -0.9849456548690796
    3. ')
' → logprob: -5.109945774078369
    4. ')' → logprob: -5.359945774078369
    5. '])' → logprob: -10.484945297241211
    6. ' ]' → logprob: -11.484945297241211
    7. '])
' → logprob: -11.484945297241211
    8. ' ]
' → logprob: -12.234945297241211
    9. ']
' → logprob: -12.359945297241211
    10. ')]' → logprob: -12.984945297241211

Token 227: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09439171105623245
    2. '
' → logprob: -2.4693918228149414
    3. ' if' → logprob: -5.469391822814941
    4. 'if' → logprob: -7.344391822814941
    5. '            
' → logprob: -8.094391822814941
    6. '<|end|>' → logprob: -9.469391822814941
    7. '  
' → logprob: -10.344391822814941
    8. '   ' → logprob: -10.594391822814941
    9. '
' → logprob: -10.719391822814941
    10. '       ' → logprob: -10.719391822814941

Token 228: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003100350499153137
    2. '           ' → logprob: -6.253100395202637
    3. ' if' → logprob: -6.753100395202637
    4. '       ' → logprob: -13.253100395202637
    5. '```' → logprob: -13.253100395202637
    6. '   ' → logprob: -16.50309944152832
    7. '
' → logprob: -16.87809944152832
    8. '            
' → logprob: -17.37809944152832
    9. '``' → logprob: -17.62809944152832
    10. '	if' → logprob: -17.62809944152832

Token 229: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0992542952299118
    2. ' visited' → logprob: -2.4742543697357178
    3. 'v' → logprob: -4.974254131317139
    4. ' v' → logprob: -5.724254131317139
    5. '0' → logprob: -9.724254608154297
    6. ' ' → logprob: -11.599254608154297
    7. '   ' → logprob: -11.849254608154297
    8. ' not' → logprob: -13.474254608154297
    9. ' u' → logprob: -14.099254608154297
    10. 'not' → logprob: -14.224254608154297

Token 230: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.6047699318733066e-05
    2. 'v' → logprob: -11.125016212463379
    3. '[u' → logprob: -13.625016212463379
    4. '[' → logprob: -17.125015258789062
    5. '(v' → logprob: -18.250015258789062
    6. ' v' → logprob: -18.625015258789062
    7. '	v' → logprob: -19.250015258789062
    8. ' [' → logprob: -20.000015258789062
    9. '```' → logprob: -20.125015258789062
    10. '<v' → logprob: -20.875015258789062

Token 231: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.062098320573568344
    2. ']==' → logprob: -2.937098264694214
    3. '==' → logprob: -5.562098503112793
    4. ' ]' → logprob: -6.312098503112793
    5. ' ==' → logprob: -6.562098503112793
    6. ')' → logprob: -9.187098503112793
    7. ')==' → logprob: -11.562098503112793
    8. '[' → logprob: -12.062098503112793
    9. ' )' → logprob: -13.562098503112793
    10. '']==' → logprob: -13.812098503112793

Token 232: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12693357467651367
    2. ' ==' → logprob: -2.1269335746765137
    3. ']==' → logprob: -13.376934051513672
    4. '==
' → logprob: -13.501934051513672
    5. '=' → logprob: -14.251934051513672
    6. '0' → logprob: -14.376934051513672
    7. ')==' → logprob: -15.001934051513672
    8. '()==' → logprob: -15.251934051513672
    9. '===' → logprob: -15.376934051513672
    10. ')' → logprob: -15.751934051513672

Token 233: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040823169983923435
    2. '1' → logprob: -5.504082202911377
    3. ' ' → logprob: -12.629082679748535
    4. '   ' → logprob: -15.004082679748535
    5. '
' → logprob: -16.50408172607422
    6. '```' → logprob: -17.12908172607422
    7. '  ' → logprob: -17.50408172607422
    8. ' ' → logprob: -17.75408172607422
    9. '۰' → logprob: -17.87908172607422
    10. '    ' → logprob: -17.87908172607422

Token 234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009789028204977512
    2. '1' → logprob: -4.634788990020752
    3. ' ' → logprob: -10.38478946685791
    4. '   ' → logprob: -13.38478946685791
    5. '  ' → logprob: -15.25978946685791
    6. '    ' → logprob: -15.88478946685791
    7. '۰' → logprob: -16.447288513183594
    8. '```' → logprob: -16.884788513183594
    9. '	' → logprob: -17.759788513183594
    10. '
' → logprob: -17.759788513183594

Token 235: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10062263160943985
    2. ':' → logprob: -2.3506226539611816
    3. '               ' → logprob: -8.100622177124023
    4. '           ' → logprob: -9.600622177124023
    5. '):
' → logprob: -10.725622177124023
    6. ' :
' → logprob: -11.850622177124023
    7. '       ' → logprob: -12.225622177124023
    8. ':

' → logprob: -12.725622177124023
    9. ':
' → logprob: -12.975622177124023
    10. ' or' → logprob: -13.725622177124023

Token 236: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007871832698583603
    2. 'dfs' → logprob: -5.257871627807617
    3. ' dfs' → logprob: -6.007871627807617
    4. '           ' → logprob: -8.882871627807617
    5. '       ' → logprob: -11.882871627807617
    6. '```' → logprob: -11.882871627807617
    7. '                
' → logprob: -12.007871627807617
    8. '   ' → logprob: -12.382871627807617
    9. '              ' → logprob: -12.507871627807617
    10. '                   ' → logprob: -13.257871627807617

Token 237: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.2871801555156708
    2. ' dfs' → logprob: -1.9121801853179932
    3. '               ' → logprob: -2.287180185317993
    4. '           ' → logprob: -8.412179946899414
    5. '```' → logprob: -10.662179946899414
    6. '
' → logprob: -10.787179946899414
    7. 'df' → logprob: -11.537179946899414
    8. '   ' → logprob: -11.787179946899414
    9. 'd' → logprob: -11.912179946899414
    10. '       ' → logprob: -12.537179946899414

Token 238: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.64708495605737e-05
    2. '(' → logprob: -9.625066757202148
    3. '(
' → logprob: -15.625066757202148
    4. ' (' → logprob: -15.750066757202148
    5. ')(' → logprob: -19.25006675720215
    6. ')' → logprob: -19.37506675720215
    7. '((' → logprob: -19.62506675720215
    8. 'v' → logprob: -19.75006675720215
    9. '(

' → logprob: -20.37506675720215
    10. ')v' → logprob: -20.75006675720215

Token 239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16023021936416626
    2. ')
' → logprob: -1.9102301597595215
    3. '           ' → logprob: -12.66023063659668
    4. ')
' → logprob: -12.91023063659668
    5. ')

' → logprob: -15.53523063659668
    6. ')`
' → logprob: -16.41023063659668
    7. '               ' → logprob: -16.41023063659668
    8. ' )' → logprob: -17.16023063659668
    9. ' )
' → logprob: -17.28523063659668
    10. '       ' → logprob: -17.66023063659668

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28561294078826904
    2. 'elif' → logprob: -1.410612940788269
    3. ' elif' → logprob: -5.785613059997559
    4. 'else' → logprob: -7.910613059997559
    5. '               ' → logprob: -8.410613059997559
    6. '       ' → logprob: -8.410613059997559
    7. '```' → logprob: -8.535613059997559
    8. ')' → logprob: -9.035613059997559
    9. '<|end|>' → logprob: -9.410613059997559
    10. '
' → logprob: -9.910613059997559

Token 241: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.10733818262815475
    2. '           ' → logprob: -2.9823381900787354
    3. ' elif' → logprob: -2.9823381900787354
    4. '<|end|>' → logprob: -8.357337951660156
    5. '	elif' → logprob: -9.482337951660156
    6. 'else' → logprob: -10.357337951660156
    7. '       ' → logprob: -10.607337951660156
    8. '```' → logprob: -10.857337951660156
    9. '<|end|>' → logprob: -11.482337951660156
    10. '#elif' → logprob: -11.732337951660156

Token 242: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4740830957889557
    2. ' visited' → logprob: -0.9740830659866333
    3. '           ' → logprob: -12.724082946777344
    4. 'vis' → logprob: -13.599082946777344
    5. ' ' → logprob: -14.599082946777344
    6. '               ' → logprob: -14.974082946777344
    7. ' ' → logprob: -15.349082946777344
    8. 'visit' → logprob: -15.724082946777344
    9. '   ' → logprob: -15.724082946777344
    10. ' vis' → logprob: -16.099082946777344

Token 243: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.896309739408025e-07
    2. 'v' → logprob: -14.625000953674316
    3. '[u' → logprob: -15.125000953674316
    4. '[' → logprob: -17.375
    5. ' [' → logprob: -18.125
    6. '```' → logprob: -18.5
    7. '(v' → logprob: -18.75
    8. '	v' → logprob: -18.75
    9. '<v' → logprob: -20.0
    10. ' v' → logprob: -20.5

Token 244: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015085549093782902
    2. ']==' → logprob: -6.501508712768555
    3. '==' → logprob: -12.251508712768555
    4. '[' → logprob: -14.126508712768555
    5. ' ]' → logprob: -14.126508712768555
    6. ')' → logprob: -17.001508712768555
    7. ' ==' → logprob: -17.126508712768555
    8. ']
' → logprob: -19.126508712768555
    9. ')==' → logprob: -19.251508712768555
    10. ']

' → logprob: -19.501508712768555

Token 245: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25212228298187256
    2. ' ==' → logprob: -1.5021222829818726
    3. ']==' → logprob: -9.002121925354004
    4. '[' → logprob: -9.752121925354004
    5. ')==' → logprob: -12.252121925354004
    6. '=' → logprob: -13.377121925354004
    7. ']' → logprob: -13.502121925354004
    8. '===' → logprob: -13.502121925354004
    9. '==
' → logprob: -13.627121925354004
    10. ')' → logprob: -14.502121925354004

Token 246: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.750051498413086
    4. '  ' → logprob: -19.000051498413086
    5. '           ' → logprob: -19.375051498413086
    6. '<|end|>' → logprob: -20.000051498413086
    7. '۱' → logprob: -20.812551498413086
    8. '```' → logprob: -21.000051498413086
    9. '[' → logprob: -21.187551498413086
    10. '    ' → logprob: -21.500051498413086

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -18.625001907348633
    4. '[' → logprob: -19.250001907348633
    5. '   ' → logprob: -19.500001907348633
    6. '```' → logprob: -19.812501907348633
    7. '۱' → logprob: -19.875001907348633
    8. '  ' → logprob: -20.250001907348633
    9. '{' → logprob: -20.562501907348633
    10. '१' → logprob: -20.875001907348633

Token 248: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.011119858361780643
    2. ':' → logprob: -4.511119842529297
    3. '               ' → logprob: -10.011119842529297
    4. '           ' → logprob: -11.011119842529297
    5. '):
' → logprob: -11.636119842529297
    6. ' :
' → logprob: -14.011119842529297
    7. ':
' → logprob: -14.761119842529297
    8. '       ' → logprob: -15.636119842529297
    9. ':

' → logprob: -15.761119842529297
    10. '():
' → logprob: -15.761119842529297

Token 249: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014425676316022873
    2. '           ' → logprob: -4.389425754547119
    3. ' cycle' → logprob: -6.639425754547119
    4. 'cycle' → logprob: -7.514425754547119
    5. '                   ' → logprob: -10.639425277709961
    6. '       ' → logprob: -11.014425277709961
    7. '   ' → logprob: -11.389425277709961
    8. '
' → logprob: -12.889425277709961
    9. '                
' → logprob: -13.139425277709961
    10. '_cycle' → logprob: -13.389425277709961

Token 250: ' #' (ID: 1069)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.540573239326477
    2. ' cycle' → logprob: -0.915573239326477
    3. '               ' → logprob: -4.1655731201171875
    4. '           ' → logprob: -6.4155731201171875
    5. '   ' → logprob: -9.415573120117188
    6. '                   ' → logprob: -10.540573120117188
    7. '_cycle' → logprob: -11.290573120117188
    8. '       ' → logprob: -11.790573120117188
    9. ' ' → logprob: -12.790573120117188
    10. ' ciclo' → logprob: -13.290573120117188

Token 251: ' trouvé' (ID: 60081)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.004082435742020607
    2. ' cycle' → logprob: -5.504082202911377
    3. '           ' → logprob: -13.004082679748535
    4. '               ' → logprob: -14.004082679748535
    5. '   ' → logprob: -15.379082679748535
    6. '#' → logprob: -15.504082679748535
    7. '
' → logprob: -15.754082679748535
    8. '                   ' → logprob: -16.37908172607422
    9. '       ' → logprob: -16.50408172607422
    10. 'cycler' → logprob: -17.25408172607422

Token 252: ' un' (ID: 537)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.14591781795024872
    2. ' un' → logprob: -2.3959178924560547
    3. 'cycle' → logprob: -3.1459178924560547
    4. ' une' → logprob: -6.770917892456055
    5. 'un' → logprob: -8.020917892456055
    6. '_cycle' → logprob: -9.270917892456055
    7. 'une' → logprob: -10.770917892456055
    8. ' le' → logprob: -11.020917892456055
    9. 'le' → logprob: -11.270917892456055
    10. ' du' → logprob: -11.770917892456055

Token 253: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.5245828628540039
    2. ' cycle' → logprob: -0.8995828628540039
    3. 'c' → logprob: -7.149582862854004
    4. '_cycle' → logprob: -7.649582862854004
    5. 'cycl' → logprob: -9.149582862854004
    6. 'cycles' → logprob: -10.524582862854004
    7. 'cycler' → logprob: -11.399582862854004
    8. 's' → logprob: -11.649582862854004
    9. '-cycle' → logprob: -12.024582862854004
    10. 'cycled' → logprob: -12.399582862854004

Token 254: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6469479203224182
    2. '
' → logprob: -1.0219478607177734
    3. '                   ' → logprob: -3.5219478607177734
    4. 'cycle' → logprob: -3.5219478607177734
    5. ' cycle' → logprob: -3.7719478607177734
    6. '           ' → logprob: -3.8969478607177734
    7. ':
' → logprob: -4.396947860717773
    8. ',' → logprob: -7.646947860717773
    9. '                
' → logprob: -7.896947860717773
    10. ':' → logprob: -7.896947860717773

Token 255: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014444835484027863
    2. '           ' → logprob: -5.139444828033447
    3. ' cycle' → logprob: -5.264444828033447
    4. 'cycle' → logprob: -5.889444828033447
    5. '                   ' → logprob: -8.014445304870605
    6. '
' → logprob: -9.389445304870605
    7. ',' → logprob: -9.889445304870605
    8. '   ' → logprob: -11.139445304870605
    9. 'count' → logprob: -11.389445304870605
    10. '                
' → logprob: -11.764445304870605

Token 256: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' (adapté à ' cycle') → logprob: -0.00193458900321275
    2. ' cycle' → logprob: -6.25193452835083
    3. '               ' → logprob: -12.751935005187988
    4. '           ' → logprob: -13.001935005187988
    5. 'count' → logprob: -14.626935005187988
    6. '
' → logprob: -15.751935005187988
    7. '   ' → logprob: -16.001934051513672
    8. '                   ' → logprob: -16.251934051513672
    9. '       ' → logprob: -17.376934051513672
    10. '                
' → logprob: -17.376934051513672

Token 257: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: 0.0
    2. '_' → logprob: -17.25
    3. 'count' → logprob: -18.0
    4. '\' → logprob: -20.25
    5. '_
' → logprob: -22.25
    6. '_counter' → logprob: -22.5
    7. '=' → logprob: -22.75
    8. '_to' → logprob: -23.25
    9. '_c' → logprob: -23.375
    10. '_COUNT' → logprob: -23.375

Token 258: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10020849853754044
    2. '+=' → logprob: -2.3502085208892822
    3. '=' → logprob: -13.975208282470703
    4. ']+=' → logprob: -14.475208282470703
    5. ' =' → logprob: -14.975208282470703
    6. '+' → logprob: -16.600208282470703
    7. '   ' → logprob: -16.725208282470703
    8. ' ' → logprob: -17.100208282470703
    9. '[' → logprob: -17.975208282470703
    10. ' +' → logprob: -18.100208282470703

Token 259: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '
' → logprob: -19.2500057220459
    4. '   ' → logprob: -19.4375057220459
    5. '１' → logprob: -20.1875057220459
    6. 'len' → logprob: -20.5625057220459
    7. '۱' → logprob: -20.5625057220459
    8. '+' → logprob: -21.2500057220459
    9. '2' → logprob: -21.3750057220459
    10. '!' → logprob: -21.3750057220459

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '
' → logprob: -17.75
    4. 'len' → logprob: -18.5
    5. '１' → logprob: -19.25
    6. '   ' → logprob: -19.875
    7. '-' → logprob: -20.125
    8. '(' → logprob: -20.1875
    9. '!' → logprob: -20.375
    10. '۱' → logprob: -20.375

Token 261: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031079540494829416
    2. ')' → logprob: -6.503108024597168
    3. '               ' → logprob: -7.628108024597168
    4. '       ' → logprob: -7.753108024597168
    5. 'visited' → logprob: -8.128108024597168
    6. '```' → logprob: -8.253108024597168
    7. '
' → logprob: -9.753108024597168
    8. ')
' → logprob: -10.628108024597168
    9. '   ' → logprob: -11.003108024597168
    10. '          ' → logprob: -11.753108024597168

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003171121352352202
    2. 'visited' → logprob: -8.500317573547363
    3. '```' → logprob: -10.125317573547363
    4. '       ' → logprob: -10.125317573547363
    5. '               ' → logprob: -11.000317573547363
    6. '2' → logprob: -11.625317573547363
    7. '   ' → logprob: -13.250317573547363
    8. '1' → logprob: -13.250317573547363
    9. '
' → logprob: -13.375317573547363
    10. '0' → logprob: -14.375317573547363

Token 263: ' visited' (ID: 18416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3287562429904938
    2. 'visited' (adapté à ' visited') → logprob: -1.3287562131881714
    3. ' visited' → logprob: -4.328756332397461
    4. '       ' → logprob: -6.453756332397461
    5. '   ' → logprob: -7.578756332397461
    6. '               ' → logprob: -9.953756332397461
    7. '
' → logprob: -10.953756332397461
    8. '```' → logprob: -10.953756332397461
    9. '            
' → logprob: -11.828756332397461
    10. '          ' → logprob: -12.203756332397461

Token 264: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.935296834039036e-06
    2. '[v' → logprob: -12.75000286102295
    3. 'u' → logprob: -19.000003814697266
    4. '[' → logprob: -19.125003814697266
    5. '[s' → logprob: -21.000003814697266
    6. '	u' → logprob: -21.000003814697266
    7. '[a' → logprob: -21.625003814697266
    8. '```' → logprob: -21.875003814697266
    9. '[user' → logprob: -21.875003814697266
    10. '[w' → logprob: -23.125003814697266

Token 265: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018422520952299237
    2. '=' → logprob: -6.501842021942139
    3. ']=' → logprob: -8.126842498779297
    4. ' =' → logprob: -10.376842498779297
    5. ' ]' → logprob: -11.626842498779297
    6. ')' → logprob: -12.376842498779297
    7. ')=' → logprob: -17.001842498779297
    8. ']+=' → logprob: -17.751842498779297
    9. '[' → logprob: -18.376842498779297
    10. ']
' → logprob: -19.126842498779297

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. ' ' → logprob: -18.576414108276367
    4. '＝' → logprob: -18.701414108276367
    5. '.=' → logprob: -19.201414108276367
    6. '=
' → logprob: -19.201414108276367
    7. '<|end|>' → logprob: -19.576414108276367
    8. ' =
' → logprob: -20.201414108276367
    9. ')' → logprob: -20.451414108276367
    10. ' =)' → logprob: -20.576414108276367

Token 267: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.8750057220459
    4. '۲' → logprob: -20.3750057220459
    5. '２' → logprob: -21.2500057220459
    6. '  ' → logprob: -21.5000057220459
    7. '२' → logprob: -22.7500057220459
    8. '২' → logprob: -23.0000057220459
    9. '٢' → logprob: -23.8125057220459
    10. '₂' → logprob: -23.8750057220459

Token 268: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۲' → logprob: -18.750001907348633
    4. '２' → logprob: -20.250001907348633
    5. '   ' → logprob: -20.500001907348633
    6. '२' → logprob: -21.000001907348633
    7. '২' → logprob: -21.500001907348633
    8. '٢' → logprob: -21.875001907348633
    9. '  ' → logprob: -21.937501907348633
    10. '```' → logprob: -22.437501907348633

Token 269: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002137532690539956
    2. ' for' → logprob: -6.252137660980225
    3. '       ' → logprob: -8.502137184143066
    4. '   ' → logprob: -12.127137184143066
    5. '	for' → logprob: -14.627137184143066
    6. '        
' → logprob: -19.002138137817383
    7. '```' → logprob: -19.002138137817383
    8. '
' → logprob: -19.502138137817383
    9. '    ' → logprob: -20.127138137817383
    10. 'def' → logprob: -20.502138137817383

Token 272: ' node' (ID: 4596)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.17010076344013214
    2. 'i' → logprob: -2.170100688934326
    3. ' u' → logprob: -3.670100688934326
    4. ' i' → logprob: -4.670100688934326
    5. 'node' → logprob: -5.545100688934326
    6. ' node' → logprob: -5.795100688934326
    7. 'v' → logprob: -7.795100688934326
    8. ' v' → logprob: -10.420101165771484
    9. 'x' → logprob: -11.170101165771484
    10. 'k' → logprob: -13.545101165771484

Token 273: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018165279179811478
    2. 'in' → logprob: -4.018165111541748
    3. ' ' → logprob: -11.643165588378906
    4. 's' → logprob: -12.518165588378906
    5. '	in' → logprob: -13.393165588378906
    6. ' ' → logprob: -15.768165588378906
    7. 'n' → logprob: -15.893165588378906
    8. ' i' → logprob: -15.893165588378906
    9. 'range' → logprob: -16.018165588378906
    10. '  ' → logprob: -16.018165588378906

Token 274: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015872348740231246
    2. ' range' → logprob: -8.750158309936523
    3. 'graph' → logprob: -15.375158309936523
    4. '(range' → logprob: -18.375158309936523
    5. '	range' → logprob: -20.750158309936523
    6. '   ' → logprob: -21.125158309936523
    7. ' ' → logprob: -22.625158309936523
    8. '  ' → logprob: -23.000158309936523
    9. 'Range' → logprob: -23.250158309936523
    10. 'rang' → logprob: -23.375158309936523

Token 275: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -7.743758760625497e-05
    2. '(len' → logprob: -9.500077247619629
    3. '(' → logprob: -13.375077247619629
    4. '(n' → logprob: -14.000077247619629
    5. '((' → logprob: -16.875078201293945
    6. ' (' → logprob: -17.875078201293945
    7. 'len' → logprob: -18.125078201293945
    8. 'N' → logprob: -18.750078201293945
    9. '   ' → logprob: -18.875078201293945
    10. '(
' → logprob: -20.250078201293945

Token 276: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.39951860904693604
    2. '):' → logprob: -1.149518609046936
    3. '):
' → logprob: -4.3995184898376465
    4. '*' → logprob: -9.524518966674805
    5. '*n' → logprob: -9.524518966674805
    6. 'N' → logprob: -9.899518966674805
    7. ')' → logprob: -10.399518966674805
    8. '   ' → logprob: -11.149518966674805
    9. '*(' → logprob: -11.149518966674805
    10. ' *' → logprob: -12.024518966674805

Token 277: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47412317991256714
    2. '):' → logprob: -0.9741231799125671
    3. '):
' → logprob: -10.224123001098633
    4. ' ):' → logprob: -12.974123001098633
    5. ' ):
' → logprob: -13.099123001098633
    6. ':' → logprob: -13.349123001098633
    7. ')' → logprob: -13.349123001098633
    8. '       ' → logprob: -13.849123001098633
    9. '):

' → logprob: -14.474123001098633
    10. '   ' → logprob: -14.474123001098633

Token 278: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07820949703454971
    2. ' if' → logprob: -2.703209400177002
    3. 'if' → logprob: -4.953209400177002
    4. '   ' → logprob: -7.328209400177002
    5. 'dfs' → logprob: -8.70320987701416
    6. ' dfs' → logprob: -9.45320987701416
    7. '```' → logprob: -9.82820987701416
    8. '       ' → logprob: -9.82820987701416
    9. '            
' → logprob: -10.07820987701416
    10. '
' → logprob: -10.07820987701416

Token 279: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.051282960921525955
    2. ' if' → logprob: -3.0512828826904297
    3. '           ' → logprob: -5.92628288269043
    4. '   ' → logprob: -11.30128288269043
    5. '       ' → logprob: -11.55128288269043
    6. '	if' → logprob: -14.42628288269043
    7. '               ' → logprob: -15.05128288269043
    8. '```' → logprob: -15.05128288269043
    9. '
' → logprob: -16.17628288269043
    10. ' ' → logprob: -16.30128288269043

Token 280: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.3868727385997772
    2. 'visited' → logprob: -1.1368727684020996
    3. ' not' → logprob: -14.011872291564941
    4. '   ' → logprob: -14.761872291564941
    5. 'not' → logprob: -15.261872291564941
    6. ' ' → logprob: -16.136873245239258
    7. '       ' → logprob: -17.761873245239258
    8. '    ' → logprob: -17.886873245239258
    9. '0' → logprob: -17.886873245239258
    10. '           ' → logprob: -18.136873245239258

Token 281: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -15.25
    3. '[' → logprob: -17.5
    4. '[token' → logprob: -19.0
    5. '[user' → logprob: -19.0
    6. '[module' → logprob: -20.375
    7. '(node' → logprob: -20.625
    8. '```' → logprob: -21.25
    9. '[next' → logprob: -21.875
    10. '[cell' → logprob: -22.0

Token 282: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00690517108887434
    2. ']==' → logprob: -5.1319050788879395
    3. '==' → logprob: -7.2569050788879395
    4. ' ]' → logprob: -9.131905555725098
    5. ')' → logprob: -9.381905555725098
    6. ' ==' → logprob: -9.506905555725098
    7. '   ' → logprob: -13.631905555725098
    8. ')==' → logprob: -13.881905555725098
    9. '[' → logprob: -14.006905555725098
    10. ' ' → logprob: -15.006905555725098

Token 283: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759639143943787
    2. ' ==' → logprob: -0.8259639143943787
    3. ']==' → logprob: -10.950963973999023
    4. ')==' → logprob: -12.325963973999023
    5. '==
' → logprob: -13.575963973999023
    6. '0' → logprob: -14.450963973999023
    7. ' ' → logprob: -15.325963973999023
    8. '=' → logprob: -15.700963973999023
    9. '()==' → logprob: -15.825963973999023
    10. ')' → logprob: -16.200963973999023

Token 284: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -16.25048828125
    4. '  ' → logprob: -18.87548828125
    5. '۰' → logprob: -19.37548828125
    6. '    ' → logprob: -20.25048828125
    7. '```' → logprob: -20.75048828125
    8. '０' → logprob: -21.00048828125
    9. '       ' → logprob: -21.25048828125
    10. ' ' → logprob: -21.43798828125

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.875004768371582
    4. '۰' → logprob: -18.1250057220459
    5. '  ' → logprob: -18.9375057220459
    6. '０' → logprob: -19.2500057220459
    7. '```' → logprob: -19.4375057220459
    8. '    ' → logprob: -19.6250057220459
    9. '       ' → logprob: -19.6250057220459
    10. '000' → logprob: -19.6250057220459

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16062518954277039
    2. ':
' → logprob: -1.9106252193450928
    3. '):
' → logprob: -8.285625457763672
    4. '):' → logprob: -9.660625457763672
    5. '               ' → logprob: -10.035625457763672
    6. '():
' → logprob: -10.910625457763672
    7. '           ' → logprob: -11.035625457763672
    8. ' :
' → logprob: -13.535625457763672
    9. ')' → logprob: -13.660625457763672
    10. '       ' → logprob: -13.910625457763672

Token 287: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01794271357357502
    2. ' dfs' → logprob: -4.142942905426025
    3. '           ' → logprob: -6.892942905426025
    4. 'dfs' → logprob: -7.642942905426025
    5. '       ' → logprob: -8.642942428588867
    6. ':
' → logprob: -9.267942428588867
    7. '   ' → logprob: -10.267942428588867
    8. ':' → logprob: -10.642942428588867
    9. ' DFS' → logprob: -11.392942428588867
    10. '                
' → logprob: -11.517942428588867

Token 288: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.16028952598571777
    2. ' dfs' → logprob: -1.9102895259857178
    3. '               ' → logprob: -10.285289764404297
    4. '           ' → logprob: -10.660289764404297
    5. 'df' → logprob: -12.035289764404297
    6. '   ' → logprob: -14.160289764404297
    7. '                   ' → logprob: -14.910289764404297
    8. ' DFS' → logprob: -15.410289764404297
    9. '
' → logprob: -15.660289764404297
    10. '       ' → logprob: -16.285289764404297

Token 289: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -9.7500581741333
    3. 'node' → logprob: -16.625059127807617
    4. ' (' → logprob: -16.875059127807617
    5. '[node' → logprob: -18.125059127807617
    6. '(Node' → logprob: -18.250059127807617
    7. '(n' → logprob: -18.250059127807617
    8. '(nodes' → logprob: -18.500059127807617
    9. '(
' → logprob: -18.875059127807617
    10. ' node' → logprob: -19.375059127807617

Token 290: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ')
' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.500004768371582
    4. ')return' → logprob: -17.500003814697266
    5. ')#' → logprob: -17.875003814697266
    6. ')

' → logprob: -18.750003814697266
    7. '))' → logprob: -18.875003814697266
    8. '())' → logprob: -19.125003814697266
    9. ')n' → logprob: -19.125003814697266
    10. ')}' → logprob: -19.500003814697266

Token 291: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18373504281044006
    2. 'print' → logprob: -2.3087351322174072
    3. '       ' → logprob: -2.6837351322174072
    4. '<|end|>' → logprob: -10.058734893798828
    5. '```' → logprob: -10.433734893798828
    6. ' print' → logprob: -10.433734893798828
    7. '
' → logprob: -11.183734893798828
    8. '    
' → logprob: -11.558734893798828
    9. '        
' → logprob: -11.683734893798828
    10. '	print' → logprob: -12.433734893798828

Token 292: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.5048530030981055e-06
    2. '       ' → logprob: -14.000001907348633
    3. ' print' → logprob: -14.750001907348633
    4. '   ' → logprob: -15.500001907348633
    5. '```' → logprob: -18.250001907348633
    6. '        
' → logprob: -20.875001907348633
    7. 'printf' → logprob: -21.125001907348633
    8. '#print' → logprob: -21.875001907348633
    9. '    
' → logprob: -22.875001907348633
    10. '
' → logprob: -23.125001907348633

Token 293: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0014126161113381386
    2. '(f' → logprob: -6.876412391662598
    3. '(' → logprob: -8.126412391662598
    4. '('' → logprob: -10.501412391662598
    5. ' (' → logprob: -11.251412391662598
    6. '((' → logprob: -11.376412391662598
    7. '("' → logprob: -12.126412391662598
    8. '(len' → logprob: -12.376412391662598
    9. '(s' → logprob: -12.751412391662598
    10. '("("' → logprob: -12.751412391662598

Token 294: 'ycle' (ID: 13317)
  Prédit: 'ycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ycle' → logprob: -1.2664456789934775e-06
    2. 'yle' → logprob: -14.000000953674316
    3. 'cycle' → logprob: -16.625001907348633
    4. 'ycles' → logprob: -17.125001907348633
    5. 'YCLE' → logprob: -17.500001907348633
    6. '[' → logprob: -17.625001907348633
    7. '#' → logprob: -18.000001907348633
    8. 'cle' → logprob: -18.500001907348633
    9. 'y' → logprob: -18.625001907348633
    10. 'ycl' → logprob: -19.125001907348633

Token 295: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.339278580620885e-06
    2. 't' → logprob: -13.125001907348633
    3. '_t' → logprob: -16.125001907348633
    4. 'count' → logprob: -16.625001907348633
    5. '_cycle' → logprob: -17.125001907348633
    6. '_' → logprob: -17.625001907348633
    7. '_cnt' → logprob: -17.750001907348633
    8. 'ount' → logprob: -18.125001907348633
    9. ' _' → logprob: -18.375001907348633
    10. ')' → logprob: -19.250001907348633

Token 296: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1875571544806007e-05
    2. ' )' → logprob: -12.125011444091797
    3. '())' → logprob: -12.875011444091797
    4. ')
' → logprob: -13.500011444091797
    5. '()' → logprob: -13.875011444091797
    6. '*' → logprob: -14.250011444091797
    7. ')`' → logprob: -15.500011444091797
    8. '))' → logprob: -15.625011444091797
    9. ',' → logprob: -16.125011444091797
    10. '**' → logprob: -16.500011444091797

Token 297: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 298: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 296
Tokens correctement prédits (1ère position, stricte): 125
Tokens correctement prédits (1ère position, avec adaptation): 137
Tokens correctement prédits (top 10): 241
Précision stricte (1ère position): 42.23%
Précision adaptée (1ère position): 46.28%
Précision (top 10): 81.42%
================================================================================
