================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:28:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, k = map(int, input().split())

blocks_used = 0
height = 0
blocks_in_stage = 1

while True:
    # le poids supporté par chaque bloc à cette étape
    # est égal au nombre total de blocs au-dessus divisé par le nombre de blocs dans l'étage actuel
    # la contrainte est que ce poids ne doit pas dépasser k
    # puisque le poids sur chaque bloc est égale à blocks_used / blocks_in_stage
    if blocks_used / blocks_in_stage <= k and blocks_used + blocks_in_stage <= n:
        blocks_used += blocks_in_stage
        height += 1
        blocks_in_stage += 1
    else:
        break

print(height)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17461642622947693
    2. ' =' → logprob: -1.9246164560317993
    3. ',' → logprob: -4.29961633682251
    4. ' ' → logprob: -8.549616813659668
    5. ')' → logprob: -9.049616813659668
    6. '```' → logprob: -9.049616813659668
    7. '=
' → logprob: -9.799616813659668
    8. ' =
' → logprob: -10.299616813659668
    9. '*' → logprob: -10.549616813659668
    10. '>' → logprob: -10.799616813659668

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3459778428077698
    2. ' map' → logprob: -1.595977783203125
    3. ' input' → logprob: -3.220977783203125
    4. '0' → logprob: -3.970977783203125
    5. 'map' → logprob: -3.970977783203125
    6. 'input' → logprob: -4.845977783203125
    7. ' int' → logprob: -6.595977783203125
    8. '10' → logprob: -6.845977783203125
    9. ' n' → logprob: -7.095977783203125
    10. '1' → logprob: -8.095977783203125

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7028917074203491
    2. '<|end|>' → logprob: -0.8278917074203491
    3. '```' → logprob: -3.7028918266296387
    4. '(int' → logprob: -4.452891826629639
    5. '<|end|>' → logprob: -4.702891826629639
    6. '(lambda' → logprob: -4.827891826629639
    7. ')' → logprob: -6.077891826629639
    8. '(str' → logprob: -6.702891826629639
    9. '(user' → logprob: -7.077891826629639
    10. '(input' → logprob: -7.327891826629639

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0447302907705307
    2. 'input' → logprob: -3.5447301864624023
    3. ')' → logprob: -4.419730186462402
    4. '(' → logprob: -6.294730186462402
    5. ' input' → logprob: -8.044730186462402
    6. '```' → logprob: -8.169730186462402
    7. '`' → logprob: -9.669730186462402
    8. ',input' → logprob: -9.669730186462402
    9. '(int' → logprob: -9.794730186462402
    10. '[input' → logprob: -10.294730186462402

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31332793831825256
    2. ' input' → logprob: -1.3133279085159302
    3. '(input' → logprob: -9.68832778930664
    4. ')' → logprob: -12.81332778930664
    5. ',input' → logprob: -13.81332778930664
    6. '=input' → logprob: -15.81332778930664
    7. '[input' → logprob: -16.93832778930664
    8. '<input' → logprob: -17.31332778930664
    9. '	input' → logprob: -17.31332778930664
    10. '```' → logprob: -17.56332778930664

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1419504880905151
    2. '()' → logprob: -1.5169504880905151
    3. ')' → logprob: -1.8919504880905151
    4. '())' → logprob: -2.0169506072998047
    5. '('' → logprob: -2.7669506072998047
    6. '().' → logprob: -2.7669506072998047
    7. '```' → logprob: -5.016950607299805
    8. '(()' → logprob: -5.266950607299805
    9. '`()' → logprob: -5.391950607299805
    10. '(""))' → logprob: -5.766950607299805

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011930868495255709
    2. 'strip' → logprob: -6.751193046569824
    3. ' split' → logprob: -11.376193046569824
    4. 'rstrip' → logprob: -11.501193046569824
    5. ')' → logprob: -14.626193046569824
    6. '(split' → logprob: -14.876193046569824
    7. 'read' → logprob: -15.251193046569824
    8. 'spl' → logprob: -15.626193046569824
    9. 'startswith' → logprob: -17.00119400024414
    10. ' strip' → logprob: -17.50119400024414

Token 10: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08386377990245819
    2. '())' → logprob: -2.9588637351989746
    3. '))' → logprob: -3.5838637351989746
    4. '()' → logprob: -7.708863735198975
    5. '()))' → logprob: -8.583864212036133
    6. '`)' → logprob: -9.458864212036133
    7. '(' → logprob: -10.958864212036133
    8. ')`' → logprob: -11.333864212036133
    9. '')' → logprob: -11.833864212036133
    10. ')))' → logprob: -11.833864212036133

Token 11: 'blocks' (ID: 44754)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8462085127830505
    2. 'a' → logprob: -1.3462085723876953
    3. 'for' → logprob: -1.9712085723876953
    4. 's' → logprob: -3.3462085723876953
    5. 'x' → logprob: -3.8462085723876953
    6. 'd' → logprob: -3.9712085723876953
    7. 'result' → logprob: -4.096208572387695
    8. ' if' → logprob: -4.096208572387695
    9. '\n' → logprob: -5.346208572387695
    10. 'while' → logprob: -5.346208572387695

Token 12: '_used' (ID: 67016)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46453356742858887
    2. ' =' → logprob: -1.4645335674285889
    3. '[' → logprob: -2.339533567428589
    4. '.' → logprob: -3.339533567428589
    5. '_' → logprob: -5.089533805847168
    6. ',' → logprob: -7.339533805847168
    7. '[:]' → logprob: -7.714533805847168
    8. 's' → logprob: -8.339533805847168
    9. '=[]' → logprob: -8.714533805847168
    10. '[]' → logprob: -8.839533805847168

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6035496592521667
    2. '=' → logprob: -0.9785496592521667
    3. '[' → logprob: -3.1035497188568115
    4. ' +=' → logprob: -4.353549480438232
    5. '_' → logprob: -4.603549480438232
    6. ' ' → logprob: -5.978549480438232
    7. ')' → logprob: -6.478549480438232
    8. '(' → logprob: -6.728549480438232
    9. '+=' → logprob: -6.728549480438232
    10. '+' → logprob: -7.353549480438232

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7081863284111023
    2. '0' → logprob: -0.8331863284111023
    3. ' k' → logprob: -3.583186388015747
    4. ' [' → logprob: -3.958186388015747
    5. 'k' → logprob: -4.708186149597168
    6. ' n' → logprob: -5.208186149597168
    7. ' set' → logprob: -5.958186149597168
    8. '[' → logprob: -6.208186149597168
    9. 'set' → logprob: -6.208186149597168
    10. 'n' → logprob: -6.708186149597168

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2573626935482025
    2. '[' → logprob: -1.757362723350525
    3. '[]' → logprob: -3.8823626041412354
    4. 'set' → logprob: -4.3823628425598145
    5. 'k' → logprob: -4.7573628425598145
    6. '[k' → logprob: -5.2573628425598145
    7. 'n' → logprob: -5.7573628425598145
    8. '[n' → logprob: -6.1323628425598145
    9. 'min' → logprob: -7.5073628425598145
    10. '[min' → logprob: -7.6323628425598145

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0839707851409912
    2. '<|end|>' → logprob: -1.0839707851409912
    3. 'for' → logprob: -1.9589707851409912
    4. ' for' → logprob: -2.708970785140991
    5. '\n' → logprob: -3.583970785140991
    6. '```' → logprob: -3.958970785140991
    7. '\' → logprob: -4.20897102355957
    8. '<|end|>' → logprob: -4.20897102355957
    9. 'while' → logprob: -5.08397102355957
    10. ' while' → logprob: -5.20897102355957

Token 17: 'height' (ID: 5097)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6849589943885803
    2. 'for' → logprob: -0.9349589943885803
    3. ' 
' → logprob: -3.6849589347839355
    4. ' while' → logprob: -3.6849589347839355
    5. '
' → logprob: -4.4349589347839355
    6. ' ' → logprob: -4.9349589347839355
    7. 'while' → logprob: -4.9349589347839355
    8. '\' → logprob: -5.1849589347839355
    9. '<|end|>' → logprob: -5.4349589347839355
    10. '\n' → logprob: -5.6849589347839355

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2083723098039627
    2. '_' → logprob: -2.4583723545074463
    3. 's' → logprob: -2.4583723545074463
    4. '=' → logprob: -4.333372116088867
    5. '[' → logprob: -6.583372116088867
    6. ' +=' → logprob: -6.958372116088867
    7. '_s' → logprob: -8.208372116088867
    8. '[]' → logprob: -8.208372116088867
    9. '_space' → logprob: -8.458372116088867
    10. ',' → logprob: -8.583372116088867

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5760942101478577
    2. '0' → logprob: -0.8260942101478577
    3. ' n' → logprob: -9.826094627380371
    4. 'n' → logprob: -10.576094627380371
    5. '1' → logprob: -10.701094627380371
    6. 'blocks' → logprob: -10.826094627380371
    7. ' blocks' → logprob: -10.951094627380371
    8. ' k' → logprob: -12.451094627380371
    9. 'k' → logprob: -13.076094627380371
    10. ' ' → logprob: -13.076094627380371

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008197537390515208
    2. '1' → logprob: -7.750819683074951
    3. ' ' → logprob: -8.37582015991211
    4. 'n' → logprob: -9.62582015991211
    5. 'k' → logprob: -9.87582015991211
    6. 'blocks' → logprob: -10.50082015991211
    7. '10' → logprob: -13.25082015991211
    8. '-' → logprob: -13.50082015991211
    9. '[' → logprob: -13.75082015991211
    10. '[]' → logprob: -13.93832015991211

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33925721049308777
    2. 'while' → logprob: -1.8392572402954102
    3. ' while' → logprob: -2.21425724029541
    4. '<|end|>' → logprob: -4.21425724029541
    5. ' 
' → logprob: -5.83925724029541
    6. '\n' → logprob: -6.71425724029541
    7. '  
' → logprob: -9.08925724029541
    8. '<|end|>' → logprob: -9.33925724029541
    9. '
' → logprob: -9.46425724029541
    10. '```' → logprob: -9.46425724029541

Token 22: 'blocks' (ID: 44754)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4690439701080322
    2. ' while' → logprob: -1.2190439701080322
    3. '\n' → logprob: -3.2190439701080322
    4. '
' → logprob: -3.7190439701080322
    5. ' 
' → logprob: -4.719043731689453
    6. '```' → logprob: -6.344043731689453
    7. 'w' → logprob: -6.844043731689453
    8. '\' → logprob: -6.969043731689453
    9. '<|end|>' → logprob: -7.094043731689453
    10. ' ' → logprob: -8.594043731689453

Token 23: '_in' (ID: 2267)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4350007474422455
    2. '_used' → logprob: -1.0600007772445679
    3. ' =' → logprob: -6.185000896453857
    4. ' _' → logprob: -6.310000896453857
    5. '[' → logprob: -7.810000896453857
    6. '=' → logprob: -8.0600004196167
    7. '_space' → logprob: -8.1850004196167
    8. '_needed' → logprob: -8.4350004196167
    9. 'used' → logprob: -8.5600004196167
    10. '_available' → logprob: -8.5600004196167

Token 24: '_stage' (ID: 83584)
  Prédit: '_layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_layer' → logprob: -0.09636947512626648
    2. '_row' → logprob: -3.846369504928589
    3. '_line' → logprob: -3.971369504928589
    4. '_current' → logprob: -4.22136926651001
    5. '_level' → logprob: -4.34636926651001
    6. '_height' → logprob: -4.97136926651001
    7. '_' → logprob: -5.34636926651001
    8. '_stack' → logprob: -5.47136926651001
    9. 'current' → logprob: -6.09636926651001
    10. '_block' → logprob: -6.22136926651001

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07036751508712769
    2. '=' → logprob: -2.6953675746917725
    3. ' +=' → logprob: -8.070367813110352
    4. ' ' → logprob: -9.570367813110352
    5. '_' → logprob: -10.445367813110352
    6. '+=' → logprob: -12.195367813110352
    7. '_=' → logprob: -12.820367813110352
    8. '  ' → logprob: -13.320367813110352
    9. 's' → logprob: -13.820367813110352
    10. '[' → logprob: -14.195367813110352

Token 26: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008325673639774323
    2. '0' → logprob: -5.008325576782227
    3. ' ' → logprob: -6.633325576782227
    4. '3' → logprob: -8.758325576782227
    5. '2' → logprob: -9.508325576782227
    6. 'k' → logprob: -10.508325576782227
    7. 'n' → logprob: -10.758325576782227
    8. ' k' → logprob: -12.758325576782227
    9. '4' → logprob: -12.883325576782227
    10. '6' → logprob: -13.383325576782227

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012966678477823734
    2. '0' → logprob: -4.387966632843018
    3. 'k' → logprob: -8.512967109680176
    4. ' ' → logprob: -9.762967109680176
    5. '3' → logprob: -9.887967109680176
    6. '2' → logprob: -10.012967109680176
    7. 'blocks' → logprob: -10.262967109680176
    8. 'n' → logprob: -10.387967109680176
    9. 'height' → logprob: -10.512967109680176
    10. '```' → logprob: -13.637967109680176

Token 28: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.022076468914747238
    2. ' while' → logprob: -3.897076368331909
    3. 'w' → logprob: -6.897076606750488
    4. '\n' → logprob: -8.147076606750488
    5. 'if' → logprob: -9.272076606750488
    6. '\' → logprob: -10.772076606750488
    7. '```' → logprob: -10.897076606750488
    8. '#' → logprob: -11.022076606750488
    9. 'n' → logprob: -11.397076606750488
    10. ' 
' → logprob: -11.397076606750488

Token 30: ' True' (ID: 6432)
  Prédit: ' height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.39950576424598694
    2. ' blocks' → logprob: -1.1495057344436646
    3. 'height' → logprob: -4.899505615234375
    4. 'blocks' → logprob: -6.149505615234375
    5. ' n' → logprob: -6.274505615234375
    6. ' k' → logprob: -7.149505615234375
    7. '(height' → logprob: -9.649505615234375
    8. 'n' → logprob: -9.649505615234375
    9. ' ' → logprob: -10.024505615234375
    10. ' True' → logprob: -10.524505615234375

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.600714161526412e-05
    2. ' :' → logprob: -10.625076293945312
    3. '   ' → logprob: -11.000076293945312
    4. ':
' → logprob: -11.125076293945312
    5. '):' → logprob: -11.375076293945312
    6. ':**' → logprob: -12.375076293945312
    7. '>:' → logprob: -13.875076293945312
    8. ',' → logprob: -14.250076293945312
    9. '():' → logprob: -14.625076293945312
    10. ':return' → logprob: -15.000076293945312

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4986811876296997
    2. '<|end|>' → logprob: -1.3736811876296997
    3. ':' → logprob: -2.37368106842041
    4. ' if' → logprob: -3.62368106842041
    5. ' blocks' → logprob: -4.87368106842041
    6. ' ' → logprob: -6.12368106842041
    7. ' 
' → logprob: -6.24868106842041
    8. ' and' → logprob: -6.37368106842041
    9. '```' → logprob: -6.37368106842041
    10. '<|end|>' → logprob: -6.87368106842041

Token 33: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8691712617874146
    2. ' blocks' → logprob: -0.8691712617874146
    3. 'blocks' → logprob: -2.119171142578125
    4. 'if' → logprob: -3.494171142578125
    5. '   ' → logprob: -4.619171142578125
    6. ' n' → logprob: -7.619171142578125
    7. '    ' → logprob: -8.744171142578125
    8. ' k' → logprob: -8.994171142578125
    9. 'k' → logprob: -9.994171142578125
    10. 'n' → logprob: -10.119171142578125

Token 34: ' le' (ID: 505)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.4889627993106842
    2. 'blocks' → logprob: -0.9889627695083618
    3. ' n' → logprob: -5.613962650299072
    4. ' if' → logprob: -5.613962650299072
    5. ' height' → logprob: -5.988962650299072
    6. 'height' → logprob: -6.238962650299072
    7. 'if' → logprob: -6.238962650299072
    8. '   ' → logprob: -7.613962650299072
    9. 'n' → logprob: -7.988962650299072
    10. ' k' → logprob: -9.61396312713623

Token 35: ' poids' (ID: 56058)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39004653692245483
    2. 'vel' → logprob: -1.2650465965270996
    3. 't' → logprob: -4.0150465965271
    4. 'ft' → logprob: -4.1400465965271
    5. 'ng' → logprob: -6.0150465965271
    6. 'nt' → logprob: -6.3900465965271
    7. 'fts' → logprob: -7.2650465965271
    8. 'v' → logprob: -7.8900465965271
    9. '   ' → logprob: -8.015046119689941
    10. 'nd' → logprob: -8.890046119689941

Token 36: ' support' (ID: 2498)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3008120357990265
    2. ' =' → logprob: -3.050812005996704
    3. '    ' → logprob: -3.550812005996704
    4. ' de' → logprob: -3.675812005996704
    5. '<|end|>' → logprob: -3.800812005996704
    6. 's' → logprob: -4.175812244415283
    7. '   ' → logprob: -4.175812244415283
    8. ' #' → logprob: -4.425812244415283
    9. '=' → logprob: -4.550812244415283
    10. '  ' → logprob: -4.800812244415283

Token 37: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0008883526897989213
    2. 'e' → logprob: -7.125888347625732
    3. 'ant' → logprob: -9.87588882446289
    4. 'u' → logprob: -12.00088882446289
    5. 'ed' → logprob: -12.25088882446289
    6. 'és' → logprob: -12.25088882446289
    7. 'er' → logprob: -12.50088882446289
    8. '   ' → logprob: -12.62588882446289
    9. '&eacute' → logprob: -12.75088882446289
    10. 'ée' → logprob: -12.87588882446289

Token 38: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6044352650642395
    2. ' par' → logprob: -0.8544352650642395
    3. ' =' → logprob: -4.479435443878174
    4. '=' → logprob: -4.979435443878174
    5. '   ' → logprob: -5.604435443878174
    6. ' by' → logprob: -6.104435443878174
    7. 'total' → logprob: -7.354435443878174
    8. 'max' → logprob: -7.604435443878174
    9. '_par' → logprob: -8.229434967041016
    10. 'by' → logprob: -8.354434967041016

Token 39: ' chaque' (ID: 21194)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6888799667358398
    2. 'le' → logprob: -0.9388799667358398
    3. ' la' → logprob: -3.06387996673584
    4. 'une' → logprob: -3.93887996673584
    5. 'les' → logprob: -4.81387996673584
    6. ' le' → logprob: -4.93887996673584
    7. 'l' → logprob: -5.18887996673584
    8. 'cha' → logprob: -5.68887996673584
    9. 'un' → logprob: -5.93887996673584
    10. 'the' → logprob: -6.56387996673584

Token 40: ' bloc' (ID: 51218)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.21798256039619446
    2. ' bloc' → logprob: -3.217982530593872
    3. 'block' → logprob: -3.467982530593872
    4. 'niveau' → logprob: -3.592982530593872
    5. ' étage' → logprob: -3.967982530593872
    6. 'ét' → logprob: -4.217982769012451
    7. 'bl' → logprob: -4.342982769012451
    8. 'cube' → logprob: -5.217982769012451
    9. 'stage' → logprob: -5.217982769012451
    10. 'b' → logprob: -5.592982769012451

Token 41: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38306790590286255
    2. '    ' → logprob: -1.3830678462982178
    3. ' ' → logprob: -4.133068084716797
    4. ' =' → logprob: -4.133068084716797
    5. ',' → logprob: -4.508068084716797
    6. '<|end|>' → logprob: -5.133068084716797
    7. '  ' → logprob: -6.008068084716797
    8. ' #' → logprob: -6.383068084716797
    9. ':' → logprob: -6.383068084716797
    10. ' :' → logprob: -6.758068084716797

Token 42: ' cette' (ID: 7696)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cha' → logprob: -1.0091829299926758
    2. 'l' → logprob: -1.3841829299926758
    3. 'la' → logprob: -2.259182929992676
    4. ' chaque' → logprob: -2.259182929992676
    5. 'part' → logprob: -3.259182929992676
    6. 'une' → logprob: -3.634182929992676
    7. 'c' → logprob: -4.134182929992676
    8. 'le' → logprob: -4.759182929992676
    9. 'ha' → logprob: -4.884182929992676
    10. ' hauteur' → logprob: -5.009182929992676

Token 43: ' étape' (ID: 83661)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.11100656539201736
    2. ' étape' → logprob: -3.236006498336792
    3. 'ha' → logprob: -3.861006498336792
    4. ' hauteur' → logprob: -4.486006736755371
    5. 'height' → logprob: -4.986006736755371
    6. 'niveau' → logprob: -5.236006736755371
    7. 'et' → logprob: -5.486006736755371
    8. '#' → logprob: -6.361006736755371
    9. ' étage' → logprob: -6.361006736755371
    10. '```' → logprob: -6.611006736755371

Token 44: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.561101496219635
    2. '    ' → logprob: -1.9361014366149902
    3. ',' → logprob: -2.5611014366149902
    4. '<|end|>' → logprob: -2.9361014366149902
    5. ':' → logprob: -3.1861014366149902
    6. ' is' → logprob: -3.3111014366149902
    7. ' :' → logprob: -3.9361014366149902
    8. ' ,' → logprob: -4.81110143661499
    9. ' =' → logprob: -4.93610143661499
    10. ' est' → logprob: -5.18610143661499

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038032762706279755
    2. '    ' → logprob: -3.7880327701568604
    3. ' ' → logprob: -5.413032531738281
    4. ':' → logprob: -5.538032531738281
    5. ',' → logprob: -6.538032531738281
    6. '#' → logprob: -7.163032531738281
    7. '     
' → logprob: -7.288032531738281
    8. ' :' → logprob: -7.413032531738281
    9. '  ' → logprob: -7.788032531738281
    10. '    
' → logprob: -8.288032531738281

Token 46: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0493931770324707
    2. ' weight' → logprob: -2.0493931770324707
    3. 'weight' → logprob: -2.4243931770324707
    4. '    ' → logprob: -2.6743931770324707
    5. ' ' → logprob: -2.9243931770324707
    6. ' #' → logprob: -3.1743931770324707
    7. 'w' → logprob: -3.4243931770324707
    8. ' blocks' → logprob: -3.5493931770324707
    9. ' supported' → logprob: -3.6743931770324707
    10. '#' (adapté à ' #') → logprob: -4.174393177032471

Token 47: ' est' (ID: 893)
  Prédit: ' weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.5262051820755005
    2. ' supported' → logprob: -1.6512051820755005
    3. ' support' → logprob: -2.776205062866211
    4. ' load' → logprob: -3.401205062866211
    5. 'weight' → logprob: -3.401205062866211
    6. ' max' → logprob: -3.651205062866211
    7. ' poids' → logprob: -4.526205062866211
    8. 'supported' → logprob: -4.526205062866211
    9. ' total' → logprob: -4.901205062866211
    10. 'support' → logprob: -5.151205062866211

Token 48: ' égal' (ID: 15059)
  Prédit: ' height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.6115002632141113
    2. 'height' → logprob: -0.8615002632141113
    3. ' blocks' → logprob: -4.111500263214111
    4. ' hauteur' → logprob: -4.986500263214111
    5. 'blocks' → logprob: -5.236500263214111
    6. ' equal' → logprob: -6.861500263214111
    7. ' min' → logprob: -7.361500263214111
    8. ' k' → logprob: -7.361500263214111
    9. '(height' → logprob: -7.611500263214111
    10. ' (' → logprob: -7.611500263214111

Token 49: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5249242782592773
    2. ' au' → logprob: -1.0249242782592773
    3. 'au' → logprob: -3.7749242782592773
    4. 'à' → logprob: -4.149924278259277
    5. '    ' → logprob: -5.774924278259277
    6. ' to' → logprob: -6.149924278259277
    7. '   ' → logprob: -6.274924278259277
    8. '<|end|>' → logprob: -6.649924278259277
    9. ' aux' → logprob: -7.524924278259277
    10. 'to' → logprob: -8.024924278259277

Token 50: ' nombre' (ID: 9733)
  Prédit: ' height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' height' → logprob: -1.3055089712142944
    2. 'height' → logprob: -1.3055089712142944
    3. ' blocks' → logprob: -1.3055089712142944
    4. 'blocks' → logprob: -1.6805089712142944
    5. '2' → logprob: -9.180508613586426
    6. ' hauteur' → logprob: -9.555508613586426
    7. '(height' → logprob: -10.180508613586426
    8. ' ' → logprob: -10.180508613586426
    9. ' n' → logprob: -10.430508613586426
    10. 'block' → logprob: -10.680508613586426

Token 51: ' total' (ID: 3609)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5782757997512817
    2. '<|end|>' → logprob: -1.4532757997512817
    3. ' d' → logprob: -1.8282757997512817
    4. ' des' → logprob: -4.453275680541992
    5. '<|end|>' → logprob: -4.828275680541992
    6. 'de' → logprob: -5.328275680541992
    7. '_blocks' → logprob: -5.453275680541992
    8. ' ' → logprob: -6.078275680541992
    9. ' of' → logprob: -6.203275680541992
    10. ' blocks' → logprob: -6.328275680541992

Token 52: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2565108835697174
    2. '<|end|>' → logprob: -2.3815109729766846
    3. ' d' → logprob: -2.6315109729766846
    4. 'de' → logprob: -3.5065109729766846
    5. ' des' → logprob: -4.0065107345581055
    6. '<|end|>' → logprob: -5.7565107345581055
    7. 'd' → logprob: -6.0065107345581055
    8. ' of' → logprob: -6.2565107345581055
    9. 'blocks' → logprob: -7.0065107345581055
    10. '_blocks' → logprob: -7.2565107345581055

Token 53: ' blocs' (ID: 182599)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.9844846129417419
    2. 'blocks' → logprob: -1.3594846725463867
    3. ' blocs' → logprob: -1.4844846725463867
    4. ' blocks' → logprob: -2.1094846725463867
    5. ' bl' → logprob: -4.859484672546387
    6. 'bloc' → logprob: -5.609484672546387
    7. 'blo' → logprob: -6.359484672546387
    8. ' bloques' → logprob: -6.359484672546387
    9. ' ' → logprob: -6.609484672546387
    10. 'b' → logprob: -6.734484672546387

Token 54: ' au' (ID: 2791)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5867887139320374
    2. '    ' → logprob: -1.7117886543273926
    3. '+' → logprob: -2.4617886543273926
    4. ' ' → logprob: -2.9617886543273926
    5. ' *' → logprob: -3.7117886543273926
    6. ' plus' → logprob: -3.8367886543273926
    7. ' )' → logprob: -4.961788654327393
    8. ')' → logprob: -4.961788654327393
    9. ' au' → logprob: -5.336788654327393
    10. ' utilisés' → logprob: -5.336788654327393

Token 55: '-dessus' (ID: 74812)
  Prédit: 'dess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dess' → logprob: -0.542418360710144
    2. '-dessus' → logprob: -0.917418360710144
    3. ' dessus' → logprob: -4.417418479919434
    4. '-dessous' → logprob: -5.167418479919434
    5. ' dessous' → logprob: -7.292418479919434
    6. 'moins' → logprob: -8.042418479919434
    7. '   ' → logprob: -9.917418479919434
    8. 'niveau' → logprob: -9.917418479919434
    9. '-' → logprob: -10.542418479919434
    10. 'd' → logprob: -11.042418479919434

Token 56: ' div' (ID: 4223)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22564703226089478
    2. ',' → logprob: -2.47564697265625
    3. '<|end|>' → logprob: -3.10064697265625
    4. ')' → logprob: -3.85064697265625
    5. '    ' → logprob: -3.97564697265625
    6. 'n' → logprob: -5.35064697265625
    7. ' ,' → logprob: -5.47564697265625
    8. ' ' → logprob: -5.60064697265625
    9. '<|end|>' → logprob: -5.60064697265625
    10. '+' → logprob: -5.72564697265625

Token 57: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.17185644805431366
    2. 'isés' → logprob: -2.17185640335083
    3. 'id' → logprob: -3.42185640335083
    4. 'is' → logprob: -5.04685640335083
    5. 'ers' → logprob: -6.04685640335083
    6. 'ided' → logprob: -7.17185640335083
    7. '+' → logprob: -7.42185640335083
    8. 'isible' → logprob: -8.671856880187988
    9. 'isée' → logprob: -9.046856880187988
    10. 'idé' → logprob: -9.171856880187988

Token 58: ' par' (ID: 686)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10761815309524536
    2. 'plus' → logprob: -2.9826180934906006
    3. ' plus' → logprob: -3.3576180934906006
    4. ' +' → logprob: -4.35761833190918
    5. '   ' → logprob: -6.48261833190918
    6. '    ' → logprob: -7.23261833190918
    7. ' ' → logprob: -8.23261833190918
    8. 'au' → logprob: -8.48261833190918
    9. ' à' → logprob: -8.60761833190918
    10. ')' → logprob: -8.73261833190918

Token 59: ' le' (ID: 505)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.12013757973909378
    2. 'blocks' → logprob: -2.6201376914978027
    3. ' ' → logprob: -3.8701376914978027
    4. '2' → logprob: -4.120137691497803
    5. ' (' → logprob: -6.870137691497803
    6. ' k' → logprob: -7.120137691497803
    7. ' n' → logprob: -7.370137691497803
    8. ' height' → logprob: -8.745137214660645
    9. ' blocs' → logprob: -8.870137214660645
    10. 'k' → logprob: -9.495137214660645

Token 60: ' nombre' (ID: 9733)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10487767308950424
    2. ' ' → logprob: -3.1048777103424072
    3. 'blocks' → logprob: -3.7298777103424072
    4. ' blocks' → logprob: -4.104877471923828
    5. ' k' → logprob: -4.729877471923828
    6. 'k' → logprob: -5.979877471923828
    7. ' n' → logprob: -6.604877471923828
    8. '```' → logprob: -8.104877471923828
    9. ' (' → logprob: -8.354877471923828
    10. '4' → logprob: -8.479877471923828

Token 61: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5464117527008057
    2. ' d' → logprob: -2.1714117527008057
    3. 'de' → logprob: -2.4214117527008057
    4. ' des' → logprob: -2.7964117527008057
    5. 'blocks' → logprob: -3.2964117527008057
    6. ' blocks' → logprob: -3.7964117527008057
    7. ' of' → logprob: -3.9214117527008057
    8. '_blocks' → logprob: -4.421411514282227
    9. '<|end|>' → logprob: -4.546411514282227
    10. '   ' → logprob: -4.921411514282227

Token 62: ' blocs' (ID: 182599)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.4398566782474518
    2. ' blocks' → logprob: -1.0648566484451294
    3. ' blocs' → logprob: -4.56485652923584
    4. ' bloques' → logprob: -8.43985652923584
    5. 'bl' → logprob: -9.18985652923584
    6. 'bloc' → logprob: -9.43985652923584
    7. ' ' → logprob: -9.81485652923584
    8. 'spaces' → logprob: -9.93985652923584
    9. '_blocks' → logprob: -10.56485652923584
    10. '.blocks' → logprob: -10.81485652923584

Token 63: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.7575995922088623
    2. ' in' → logprob: -2.0075995922088623
    3. ' dans' → logprob: -2.1325995922088623
    4. 'blocks' → logprob: -2.3825995922088623
    5. '   ' → logprob: -2.5075995922088623
    6. 'in' → logprob: -2.8825995922088623
    7. ' blocks' → logprob: -2.8825995922088623
    8. '    ' → logprob: -3.1325995922088623
    9. '```' → logprob: -3.5075995922088623
    10. 'sur' → logprob: -3.5075995922088623

Token 64: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1749101877212524
    2. ' l' → logprob: -1.2999101877212524
    3. ' cette' → logprob: -1.9249101877212524
    4. ' la' → logprob: -2.049910068511963
    5. 'le' → logprob: -3.299910068511963
    6. 'la' → logprob: -3.924910068511963
    7. '<|end|>' → logprob: -4.049910068511963
    8. ' ' → logprob: -4.299910068511963
    9. 'the' → logprob: -4.549910068511963
    10. '```' → logprob: -4.924910068511963

Token 65: ''ét' (ID: 23771)
  Prédit: ''ét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ét' → logprob: -0.21608951687812805
    2. 'a' → logprob: -1.8410894870758057
    3. ''' → logprob: -4.341089725494385
    4. 'e' → logprob: -5.216089725494385
    5. '`' → logprob: -6.091089725494385
    6. '’ét' → logprob: -6.216089725494385
    7. '_stage' → logprob: -6.716089725494385
    8. 'stage' → logprob: -6.841089725494385
    9. ''é' → logprob: -6.841089725494385
    10. ' étage' → logprob: -6.966089725494385

Token 66: 'age' (ID: 477)
  Prédit: 'ape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.42721113562583923
    2. 'age' → logprob: -1.3022111654281616
    3. 'ap' → logprob: -3.677211046218872
    4. 'a' → logprob: -4.302211284637451
    5. '   ' → logprob: -5.364711284637451
    6. 'at' → logprob: -5.427211284637451
    7. '```' → logprob: -5.677211284637451
    8. '#' → logprob: -5.802211284637451
    9. 'stage' → logprob: -6.114711284637451
    10. 'à' → logprob: -7.177211284637451

Token 67: ' actuel' (ID: 113646)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.253447949886322
    2. '\n' → logprob: -2.253448009490967
    3. ',' → logprob: -3.003448009490967
    4. '    
' → logprob: -4.253448009490967
    5. '\' → logprob: -4.628448009490967
    6. 'n' → logprob: -5.003448009490967
    7. '   
' → logprob: -5.003448009490967
    8. ' 
' → logprob: -5.503448009490967
    9. '     
' → logprob: -5.503448009490967
    10. '    ' → logprob: -5.628448009490967

Token 68: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0271990299224854
    2. '   ' → logprob: -1.4021990299224854
    3. ')' → logprob: -2.1521990299224854
    4. ' ' → logprob: -2.1521990299224854
    5. '+' → logprob: -3.2771990299224854
    6. '<|end|>' → logprob: -3.4021990299224854
    7. ' ,' → logprob: -4.152198791503906
    8. ' +' → logprob: -4.402198791503906
    9. ' )' → logprob: -4.652198791503906
    10. '.' → logprob: -5.027198791503906

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023757711052894592
    2. ',' → logprob: -4.5237579345703125
    3. ')' → logprob: -5.2737579345703125
    4. '    
' → logprob: -6.2737579345703125
    5. 'n' → logprob: -7.1487579345703125
    6. '    ' → logprob: -7.2737579345703125
    7. '\n' → logprob: -7.3987579345703125
    8. ' ' → logprob: -7.3987579345703125
    9. '   
' → logprob: -7.7737579345703125
    10. '```' → logprob: -8.023757934570312

Token 70: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6162282824516296
    2. ' 
' → logprob: -2.3662283420562744
    3. '    
' → logprob: -2.4912283420562744
    4. 'weight' → logprob: -2.7412283420562744
    5. ' weight' → logprob: -3.4912283420562744
    6. ',' → logprob: -3.4912283420562744
    7. 'n' → logprob: -3.7412283420562744
    8. '   
' → logprob: -3.8662283420562744
    9. '\n' → logprob: -3.9912283420562744
    10. 'total' → logprob: -4.366228103637695

Token 71: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1365641355514526
    2. ' weight' → logprob: -1.1365641355514526
    3. ' load' → logprob: -2.636564254760742
    4. ' total' → logprob: -2.886564254760742
    5. ' supported' → logprob: -2.886564254760742
    6. ' poids' → logprob: -3.011564254760742
    7. '    
' → logprob: -3.261564254760742
    8. 'weight' → logprob: -4.136564254760742
    9. ' blocks' → logprob: -4.261564254760742
    10. ' support' → logprob: -4.511564254760742

Token 72: ' contr' (ID: 6030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.108421564102173
    2. ' support' → logprob: -2.108421564102173
    3. ' poids' → logprob: -2.108421564102173
    4. ' hauteur' → logprob: -2.108421564102173
    5. ' ' → logprob: -2.983421564102173
    6. 's' → logprob: -2.983421564102173
    7. ' charge' → logprob: -3.358421564102173
    8. ' po' → logprob: -3.358421564102173
    9. ' total' → logprob: -3.483421564102173
    10. ' weight' → logprob: -3.670921564102173

Token 73: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.0037792895454913378
    2. 'a' → logprob: -5.628779411315918
    3. 'ain' → logprob: -9.753779411315918
    4. '#' → logprob: -9.753779411315918
    5. '1' → logprob: -11.878779411315918
    6. 'aine' → logprob: -12.003779411315918
    7. 'aint' → logprob: -12.003779411315918
    8. 'e' → logprob: -12.253779411315918
    9. '```' → logprob: -12.253779411315918
    10. 'i' → logprob: -12.503779411315918

Token 74: ' est' (ID: 893)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5463287234306335
    2. ' n' → logprob: -2.1713287830352783
    3. ' est' → logprob: -2.6713287830352783
    4. ' du' → logprob: -3.4213287830352783
    5. ' d' → logprob: -3.6713287830352783
    6. ' suivante' → logprob: -3.7963287830352783
    7. ':' → logprob: -3.9213287830352783
    8. ' is' → logprob: -4.046328544616699
    9. 'n' → logprob: -4.671328544616699
    10. ' :' → logprob: -4.671328544616699

Token 75: ' que' (ID: 661)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.12085986137390137
    2. ' height' → logprob: -3.2458598613739014
    3. 'blocks' → logprob: -3.3708598613739014
    4. ' that' → logprob: -4.2458600997924805
    5. 'height' → logprob: -4.4958600997924805
    6. ' que' → logprob: -5.3708600997924805
    7. ' hauteur' → logprob: -6.2458600997924805
    8. ' (' → logprob: -6.3708600997924805
    9. ':' → logprob: -7.2458600997924805
    10. ' k' → logprob: -7.2458600997924805

Token 76: ' ce' (ID: 2357)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.3663126826286316
    2. ' le' → logprob: -2.6163127422332764
    3. 'blocks' → logprob: -2.8663127422332764
    4. ' height' → logprob: -3.1163127422332764
    5. ' (' → logprob: -3.2413127422332764
    6. ' the' → logprob: -3.8663127422332764
    7. 'height' → logprob: -4.491312503814697
    8. ' poids' → logprob: -4.741312503814697
    9. 'le' → logprob: -4.866312503814697
    10. ' la' → logprob: -5.241312503814697

Token 77: ' poids' (ID: 56058)
  Prédit: ' poids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -0.4267793297767639
    2. 's' → logprob: -2.551779270172119
    3. ' nombre' → logprob: -3.051779270172119
    4. ' bloc' → logprob: -3.176779270172119
    5. 'n' → logprob: -3.426779270172119
    6. ' ' → logprob: -3.801779270172119
    7. ' n' → logprob: -4.051779270172119
    8. 'a' → logprob: -4.176779270172119
    9. ' '' → logprob: -4.176779270172119
    10. ' s' → logprob: -4.676779270172119

Token 78: ' ne' (ID: 453)
  Prédit: ' support'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' support' → logprob: -0.9749650359153748
    2. ' <=' → logprob: -1.2249650955200195
    3. ' maximal' → logprob: -2.2249650955200195
    4. ' <' → logprob: -3.5999650955200195
    5. 'support' → logprob: -3.7249650955200195
    6. ' supported' → logprob: -3.7249650955200195
    7. ' ' → logprob: -3.7249650955200195
    8. ' max' → logprob: -3.9749650955200195
    9. ' maximum' → logprob: -4.0999650955200195
    10. '   ' → logprob: -4.5999650955200195

Token 79: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.7101520299911499
    2. 'do' → logprob: -0.9601520299911499
    3. ' dépasse' → logprob: -3.2101521492004395
    4. ' do' → logprob: -3.7101521492004395
    5. ' puisse' → logprob: -4.2101521492004395
    6. 'd' → logprob: -4.2101521492004395
    7. ' dépass' → logprob: -4.8351521492004395
    8. ' soit' → logprob: -4.9601521492004395
    9. 'p' → logprob: -5.5851521492004395
    10. ' peut' → logprob: -5.7101521492004395

Token 80: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.004050733055919409
    2. ' jamais' → logprob: -6.1290507316589355
    3. ' ' → logprob: -6.7540507316589355
    4. 'pas' → logprob: -7.6290507316589355
    5. ' be' → logprob: -9.754051208496094
    6. ' plus' → logprob: -10.004051208496094
    7. ' not' → logprob: -10.879051208496094
    8. ' ' → logprob: -11.254051208496094
    9. ' rien' → logprob: -11.254051208496094
    10. ' dépasser' → logprob: -11.254051208496094

Token 81: ' dépasser' (ID: 187375)
  Prédit: ' dépasser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépasser' → logprob: -0.026665648445487022
    2. 'ex' → logprob: -4.276665687561035
    3. ' dépass' → logprob: -5.526665687561035
    4. 'exc' → logprob: -6.276665687561035
    5. 'dé' → logprob: -6.651665687561035
    6. ' exc' → logprob: -6.776665687561035
    7. ' exceed' → logprob: -6.901665687561035
    8. 'd' → logprob: -7.401665687561035
    9. 'être' → logprob: -7.776665687561035
    10. ' être' → logprob: -7.901665687561035

Token 82: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.16448533535003662
    2. 'k' → logprob: -1.9144853353500366
    3. ' height' → logprob: -6.664485454559326
    4. 'height' → logprob: -7.039485454559326
    5. '1' → logprob: -7.289485454559326
    6. ' ' → logprob: -7.414485454559326
    7. ' blocks' → logprob: -8.289484977722168
    8. ' n' → logprob: -8.539484977722168
    9. ' the' → logprob: -9.289484977722168
    10. 'blocks' → logprob: -9.539484977722168

Token 83: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16422592103481293
    2. '    
' → logprob: -2.9142258167266846
    3. ' 
' → logprob: -3.2892258167266846
    4. '\n' → logprob: -4.289226055145264
    5. ' ' → logprob: -4.539226055145264
    6. '   
' → logprob: -4.664226055145264
    7. 'n' → logprob: -5.039226055145264
    8. '     
' → logprob: -5.414226055145264
    9. '
' → logprob: -5.789226055145264
    10. '    ' → logprob: -5.789226055145264

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9924124479293823
    2. ' 
' → logprob: -1.4924124479293823
    3. '
' → logprob: -1.6174124479293823
    4. '    
' → logprob: -1.9924124479293823
    5. '   
' → logprob: -3.867412567138672
    6. '\n' → logprob: -3.992412567138672
    7. '  
' → logprob: -4.617412567138672
    8. 'n' → logprob: -4.992412567138672
    9. '<|end|>' → logprob: -5.117412567138672
    10. '     
' → logprob: -6.117412567138672

Token 85: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.213838130235672
    2. ' if' → logprob: -2.0888381004333496
    3. 'if' → logprob: -3.9638381004333496
    4. '    
' → logprob: -4.08883810043335
    5. ' blocks' → logprob: -5.21383810043335
    6. ' 
' → logprob: -5.46383810043335
    7. 'weight' → logprob: -5.58883810043335
    8. 'blocks' → logprob: -5.83883810043335
    9. '   
' → logprob: -5.96383810043335
    10. 'n' → logprob: -5.96383810043335

Token 86: ' puisque' (ID: 66135)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4470733404159546
    2. ' if' → logprob: -1.1970733404159546
    3. 'if' → logprob: -3.822073459625244
    4. ' weight' → logprob: -4.072073459625244
    5. ' blocks' → logprob: -5.072073459625244
    6. '    
' → logprob: -5.572073459625244
    7. 'weight' → logprob: -6.322073459625244
    8. 'blocks' → logprob: -6.822073459625244
    9. ' w' → logprob: -7.072073459625244
    10. 'w' → logprob: -7.197073459625244

Token 87: ' le' (ID: 505)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.4655505120754242
    2. 'blocks' → logprob: -1.3405505418777466
    3. ' (' → logprob: -3.090550422668457
    4. ' height' → logprob: -4.465550422668457
    5. 'height' → logprob: -4.715550422668457
    6. '(height' → logprob: -4.965550422668457
    7. ' le' → logprob: -5.090550422668457
    8. ' on' → logprob: -5.465550422668457
    9. '(block' → logprob: -5.590550422668457
    10. '(n' → logprob: -5.715550422668457

Token 88: ' poids' (ID: 56058)
  Prédit: ' poids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -0.9210476875305176
    2. 'po' → logprob: -1.1710476875305176
    3. 'blocks' → logprob: -2.1710476875305176
    4. ' blocks' → logprob: -2.2960476875305176
    5. ' nombre' → logprob: -4.171047687530518
    6. 'weight' → logprob: -4.421047687530518
    7. 'nombre' → logprob: -4.921047687530518
    8. ' total' → logprob: -5.171047687530518
    9. ' weight' → logprob: -5.296047687530518
    10. ' po' → logprob: -5.546047687530518

Token 89: ' sur' (ID: 1512)
  Prédit: ' support'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' support' → logprob: -0.6340529322624207
    2. ' total' → logprob: -2.6340529918670654
    3. ' des' → logprob: -2.7590529918670654
    4. 'support' → logprob: -3.1340529918670654
    5. ' supported' → logprob: -3.1340529918670654
    6. '_supported' → logprob: -3.5090529918670654
    7. ' is' → logprob: -3.7590529918670654
    8. ' ' → logprob: -3.7590529918670654
    9. ' =' → logprob: -4.009052753448486
    10. ' est' → logprob: -4.009052753448486

Token 90: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.7292367219924927
    2. ' blocks' → logprob: -1.3542367219924927
    3. ' each' → logprob: -1.6042367219924927
    4. ' a' → logprob: -3.729236602783203
    5. ' l' → logprob: -5.229236602783203
    6. 'blocks' → logprob: -5.354236602783203
    7. ' the' → logprob: -5.479236602783203
    8. 'each' → logprob: -5.854236602783203
    9. ' les' → logprob: -5.979236602783203
    10. ' blocs' → logprob: -6.104236602783203

Token 91: ' bloc' (ID: 51218)
  Prédit: ' bloc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bloc' → logprob: -0.7614079117774963
    2. 'bloc' → logprob: -0.7614079117774963
    3. 'block' → logprob: -3.3864078521728516
    4. ' block' → logprob: -4.261407852172852
    5. ' bloque' → logprob: -5.761407852172852
    6. 'blocks' → logprob: -6.386407852172852
    7. '_bloc' → logprob: -6.386407852172852
    8. 'b' → logprob: -6.511407852172852
    9. ' ' → logprob: -6.761407852172852
    10. 'blo' → logprob: -6.886407852172852

Token 92: ' est' (ID: 893)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.8235365152359009
    2. ' est' → logprob: -0.8235365152359009
    3. '+' → logprob: -3.9485363960266113
    4. ' is' → logprob: -4.073536396026611
    5. ' doit' → logprob: -4.573536396026611
    6. ' dans' → logprob: -4.573536396026611
    7. 'est' → logprob: -4.698536396026611
    8. ' augmente' → logprob: -5.073536396026611
    9. ' dépasse' → logprob: -5.198536396026611
    10. ' =' → logprob: -5.573536396026611

Token 93: ' ég' (ID: 33150)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8171200752258301
    2. ' blocks' → logprob: -1.06712007522583
    3. ' height' → logprob: -3.06712007522583
    4. ' toujours' → logprob: -3.31712007522583
    5. ' au' → logprob: -3.81712007522583
    6. 'blocks' → logprob: -3.94212007522583
    7. '(height' → logprob: -4.44212007522583
    8. '(' → logprob: -4.69212007522583
    9. ' equal' → logprob: -5.06712007522583
    10. 'height' → logprob: -5.19212007522583

Token 94: 'ale' (ID: 1167)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0005942588322795928
    2. 'ale' → logprob: -7.750594139099121
    3. 'a' → logprob: -9.250594139099121
    4. 'l' → logprob: -10.875594139099121
    5. '```' → logprob: -11.625594139099121
    6. 'ал' → logprob: -12.375594139099121
    7. 'aux' → logprob: -12.375594139099121
    8. 'alité' → logprob: -12.500594139099121
    9. 'alent' → logprob: -13.125594139099121
    10. 'ال' → logprob: -13.688094139099121

Token 95: ' à' (ID: 1221)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.8336045145988464
    2. ' à' → logprob: -1.3336045742034912
    3. ' au' → logprob: -1.3336045742034912
    4. ' to' → logprob: -4.458604335784912
    5. ' ' → logprob: -4.833604335784912
    6. 'blocks' → logprob: -5.083604335784912
    7. ' aux' → logprob: -5.208604335784912
    8. 'au' → logprob: -5.458604335784912
    9. ' blocs' → logprob: -7.083604335784912
    10. ' ' → logprob: -8.33360481262207

Token 96: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.14247895777225494
    2. 'blocks' → logprob: -2.3924789428710938
    3. ' (' → logprob: -3.2674789428710938
    4. '(block' → logprob: -7.142478942871094
    5. '(height' → logprob: -7.767478942871094
    6. ' height' → logprob: -7.892478942871094
    7. '(n' → logprob: -8.142478942871094
    8. ' ' → logprob: -8.142478942871094
    9. '(' → logprob: -8.267478942871094
    10. ' blocs' → logprob: -8.517478942871094

Token 97: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.03019334003329277
    2. '_in' → logprob: -3.530193328857422
    3. '_' → logprob: -8.030193328857422
    4. '_util' → logprob: -9.530193328857422
    5. 'used' → logprob: -10.780193328857422
    6. 's' → logprob: -12.655193328857422
    7. '_use' → logprob: -12.780193328857422
    8. '_usage' → logprob: -13.030193328857422
    9. ' used' → logprob: -13.280193328857422
    10. '_on' → logprob: -13.405193328857422

Token 98: ' /' (ID: 820)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1647602766752243
    2. ' ' → logprob: -3.1647603511810303
    3. ' /' → logprob: -3.1647603511810303
    4. '*' → logprob: -3.6647603511810303
    5. ' +' → logprob: -4.039760112762451
    6. ' //' → logprob: -4.039760112762451
    7. '+' → logprob: -6.164760112762451
    8. '//' → logprob: -6.664760112762451
    9. '/' → logprob: -7.414760112762451
    10. ' ' → logprob: -7.539760112762451

Token 99: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.020544925704598427
    2. ' blocks' → logprob: -3.89554500579834
    3. '.blocks' → logprob: -13.64554500579834
    4. '```' → logprob: -14.64554500579834
    5. '_blocks' → logprob: -14.89554500579834
    6. ' ' → logprob: -15.64554500579834
    7. 'block' → logprob: -15.64554500579834
    8. 'b' → logprob: -15.89554500579834
    9. 'blo' → logprob: -16.645544052124023
    10. 'k' → logprob: -16.770544052124023

Token 100: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0033738920465111732
    2. 's' → logprob: -6.253374099731445
    3. '_' → logprob: -6.628374099731445
    4. 'in' → logprob: -9.628374099731445
    5. ' _' → logprob: -11.128374099731445
    6. '_s' → logprob: -11.628374099731445
    7. '_i' → logprob: -11.628374099731445
    8. '_used' → logprob: -12.253374099731445
    9. 'es' → logprob: -12.878374099731445
    10. '```' → logprob: -13.378374099731445

Token 101: '_stage' (ID: 83584)
  Prédit: '_stage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stage' → logprob: -0.016066161915659904
    2. 'stage' → logprob: -4.141066074371338
    3. '_st' → logprob: -12.016066551208496
    4. 'st' → logprob: -12.391066551208496
    5. '	stage' → logprob: -12.391066551208496
    6. ' stage' → logprob: -12.641066551208496
    7. '_' → logprob: -12.891066551208496
    8. '-stage' → logprob: -12.891066551208496
    9. '_STAGE' → logprob: -13.391066551208496
    10. 's' → logprob: -13.391066551208496

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00567410234361887
    2. '    
' → logprob: -6.130673885345459
    3. ' if' → logprob: -6.880673885345459
    4. '
' → logprob: -6.880673885345459
    5. 'if' → logprob: -7.380673885345459
    6. '   
' → logprob: -9.005674362182617
    7. ' 
' → logprob: -9.005674362182617
    8. ')' → logprob: -9.380674362182617
    9. '    ' → logprob: -9.505674362182617
    10. '<|end|>' → logprob: -9.630674362182617

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013558330247178674
    2. '    
' → logprob: -7.6263556480407715
    3. ' if' → logprob: -8.25135612487793
    4. ')' → logprob: -8.50135612487793
    5. '
' → logprob: -9.50135612487793
    6. '    ' → logprob: -9.75135612487793
    7. '  ' → logprob: -10.12635612487793
    8. '   
' → logprob: -10.25135612487793
    9. 'if' → logprob: -10.37635612487793
    10. ' 
' → logprob: -10.37635612487793

Token 104: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006468921434134245
    2. ' if' → logprob: -5.756468772888184
    3. '    
' → logprob: -6.506468772888184
    4. 'if' (adapté à ' if') → logprob: -7.381468772888184
    5. ' 
' → logprob: -8.256468772888184
    6. '
' → logprob: -8.381468772888184
    7. '    ' → logprob: -8.756468772888184
    8. ')' → logprob: -9.131468772888184
    9. '   
' → logprob: -9.256468772888184
    10. '  ' → logprob: -9.506468772888184

Token 105: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.07053706049919128
    2. 'blocks' → logprob: -2.6955370903015137
    3. ' (' → logprob: -7.945537090301514
    4. '(block' → logprob: -8.445536613464355
    5. '(' → logprob: -11.820536613464355
    6. ' block' → logprob: -11.945536613464355
    7. ' ' → logprob: -12.445536613464355
    8. 'block' → logprob: -12.695536613464355
    9. ' ' → logprob: -12.945536613464355
    10. ' blocs' → logprob: -13.695536613464355

Token 106: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -7.123899558791891e-05
    2. '_in' → logprob: -9.75007152557373
    3. '_' → logprob: -12.50007152557373
    4. 'used' → logprob: -13.37507152557373
    5. '_usage' → logprob: -13.87507152557373
    6. '_use' → logprob: -13.87507152557373
    7. '_USED' → logprob: -13.87507152557373
    8. ' _' → logprob: -14.37507152557373
    9. '_util' → logprob: -14.87507152557373
    10. '```' → logprob: -15.00007152557373

Token 107: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.016792023554444313
    2. '/' → logprob: -4.266791820526123
    3. ' ' → logprob: -6.141791820526123
    4. '/k' → logprob: -8.016792297363281
    5. ' *' → logprob: -9.516792297363281
    6. ' ' → logprob: -11.266792297363281
    7. '*' → logprob: -11.516792297363281
    8. ' +' → logprob: -11.516792297363281
    9. ' >' → logprob: -11.641792297363281
    10. '>' → logprob: -11.766792297363281

Token 108: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.07892989367246628
    2. 'blocks' → logprob: -2.578929901123047
    3. ' k' → logprob: -10.453929901123047
    4. '_blocks' → logprob: -12.453929901123047
    5. 'k' → logprob: -12.703929901123047
    6. ' ' → logprob: -13.328929901123047
    7. 'block' → logprob: -13.828929901123047
    8. ' block' → logprob: -14.203929901123047
    9. '.blocks' → logprob: -14.203929901123047
    10. '(block' → logprob: -16.453929901123047

Token 109: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0792689174413681
    2. '_stage' → logprob: -2.5792689323425293
    3. 'in' → logprob: -8.829268455505371
    4. '_st' → logprob: -9.204268455505371
    5. 'stage' → logprob: -10.079268455505371
    6. '_used' → logprob: -10.454268455505371
    7. '_' → logprob: -10.454268455505371
    8. '_at' → logprob: -11.579268455505371
    9. '-stage' → logprob: -12.204268455505371
    10. '_to' → logprob: -12.829268455505371

Token 110: '_stage' (ID: 83584)
  Prédit: '_stage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stage' → logprob: -0.38707295060157776
    2. 'stage' → logprob: -1.1370729207992554
    3. '	stage' → logprob: -10.137072563171387
    4. 'age' → logprob: -10.512072563171387
    5. '-stage' → logprob: -10.512072563171387
    6. 'tage' → logprob: -10.512072563171387
    7. ' stage' → logprob: -11.012072563171387
    8. '_STAGE' → logprob: -11.387072563171387
    9. 's' → logprob: -11.887072563171387
    10. '(stage' → logprob: -12.012072563171387

Token 111: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10401418805122375
    2. '>' → logprob: -2.8540141582489014
    3. ' <=' → logprob: -3.3540141582489014
    4. ' >=' → logprob: -5.6040143966674805
    5. '<=' → logprob: -6.3540143966674805
    6. '>=' → logprob: -7.8540143966674805
    7. ' <' → logprob: -8.35401439666748
    8. ' ' → logprob: -9.10401439666748
    9. '+' → logprob: -10.47901439666748
    10. ' +' → logprob: -10.85401439666748

Token 112: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.029751529917120934
    2. 'k' → logprob: -3.5297515392303467
    3. ' ' → logprob: -14.279751777648926
    4. '	k' → logprob: -15.279751777648926
    5. ' ' → logprob: -15.904751777648926
    6. ' к' → logprob: -17.65475082397461
    7. '=k' → logprob: -18.02975082397461
    8. ',k' → logprob: -18.52975082397461
    9. '(k' → logprob: -18.90475082397461
    10. 'n' → logprob: -19.02975082397461

Token 113: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013884471263736486
    2. ' :' → logprob: -7.2513885498046875
    3. ':
' → logprob: -7.3763885498046875
    4. ' and' → logprob: -10.126388549804688
    5. '):' → logprob: -12.251388549804688
    6. ' :
' → logprob: -13.126388549804688
    7. 'and' → logprob: -13.376388549804688
    8. ',' → logprob: -14.251388549804688
    9. ':
' → logprob: -14.626388549804688
    10. ':return' → logprob: -14.751388549804688

Token 114: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.07143903523683548
    2. ' blocks' → logprob: -2.696439027786255
    3. 'n' → logprob: -7.696439266204834
    4. 'height' → logprob: -7.821439266204834
    5. ' n' → logprob: -8.071438789367676
    6. '   ' → logprob: -8.321438789367676
    7. ' height' → logprob: -9.946438789367676
    8. 'block' → logprob: -10.946438789367676
    9. '(block' → logprob: -11.196438789367676
    10. ' (' → logprob: -13.196438789367676

Token 115: '_used' (ID: 67016)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.3137153685092926
    2. '_used' → logprob: -1.3137153387069702
    3. '_' → logprob: -8.813714981079102
    4. 'used' → logprob: -9.063714981079102
    5. 'in' → logprob: -9.438714981079102
    6. '   ' → logprob: -10.938714981079102
    7. ' in' → logprob: -11.813714981079102
    8. '_added' → logprob: -12.063714981079102
    9. '_needed' → logprob: -12.188714981079102
    10. '_taken' → logprob: -12.188714981079102

Token 116: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38879647850990295
    2. '+' → logprob: -1.1387964487075806
    3. ' <' → logprob: -6.638796329498291
    4. '<' → logprob: -8.88879680633545
    5. ' +=' → logprob: -8.88879680633545
    6. ' <=' → logprob: -9.26379680633545
    7. ' >=' → logprob: -9.51379680633545
    8. '+=' → logprob: -10.26379680633545
    9. '+n' → logprob: -10.76379680633545
    10. ' ' → logprob: -10.88879680633545

Token 117: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.3496285676956177
    2. 'blocks' → logprob: -1.2246285676956177
    3. ' height' → logprob: -7.474628448486328
    4. 'height' → logprob: -7.474628448486328
    5. '   ' → logprob: -10.849628448486328
    6. ' ' → logprob: -11.849628448486328
    7. ' (' → logprob: -12.349628448486328
    8. 'block' → logprob: -12.974628448486328
    9. '_blocks' → logprob: -13.224628448486328
    10. '1' → logprob: -13.349628448486328

Token 118: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -6.539801688631997e-05
    2. 'in' → logprob: -9.750065803527832
    3. 'In' → logprob: -12.750065803527832
    4. ' in' → logprob: -14.250065803527832
    5. '+' → logprob: -14.375065803527832
    6. '
' → logprob: -14.875065803527832
    7. '_blocks' → logprob: -15.250065803527832
    8. '_' → logprob: -15.500065803527832
    9. '>' → logprob: -15.625065803527832
    10. '-in' → logprob: -15.750065803527832

Token 119: '_stage' (ID: 83584)
  Prédit: 'stage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stage' → logprob: -0.5769754648208618
    2. '_stage' → logprob: -0.8269754648208618
    3. ' stage' → logprob: -7.826975345611572
    4. 'height' → logprob: -8.70197582244873
    5. '(stage' → logprob: -9.07697582244873
    6. '	stage' → logprob: -9.45197582244873
    7. '-stage' → logprob: -10.45197582244873
    8. 'block' → logprob: -10.45197582244873
    9. 'Stage' → logprob: -10.57697582244873
    10. '+' → logprob: -10.70197582244873

Token 120: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03368235006928444
    2. '<=' → logprob: -3.408682346343994
    3. '<|end|>' → logprob: -11.033682823181152
    4. ' ' → logprob: -11.908682823181152
    5. ' <' → logprob: -12.908682823181152
    6. ' ' → logprob: -13.158682823181152
    7. ')<=' → logprob: -13.533682823181152
    8. '<' → logprob: -14.033682823181152
    9. ')' → logprob: -14.283682823181152
    10. ']<=' → logprob: -14.471182823181152

Token 121: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931481957435608
    2. ' n' → logprob: -0.6931481957435608
    3. '	n' → logprob: -14.068148612976074
    4. '   ' → logprob: -15.443148612976074
    5. ' ' → logprob: -16.943147659301758
    6. '
' → logprob: -17.568147659301758
    7. '(n' → logprob: -17.568147659301758
    8. ' ' → logprob: -18.568147659301758
    9. ')n' → logprob: -18.693147659301758
    10. 'n't' → logprob: -18.943147659301758

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016885085497051477
    2. ':
' → logprob: -6.501688480377197
    3. ' :' → logprob: -9.251688957214355
    4. '   ' → logprob: -9.876688957214355
    5. '):' → logprob: -10.376688957214355
    6. ' and' → logprob: -12.876688957214355
    7. ' :
' → logprob: -13.876688957214355
    8. ')' → logprob: -14.251688957214355
    9. '):
' → logprob: -14.251688957214355
    10. ':block' → logprob: -14.626688957214355

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005746048875153065
    2. '   ' → logprob: -5.755745887756348
    3. ':' → logprob: -6.380745887756348
    4. '
' → logprob: -7.630745887756348
    5. '<|end|>' → logprob: -9.005745887756348
    6. ':
' → logprob: -10.005745887756348
    7. '):' → logprob: -10.130745887756348
    8. '	' → logprob: -10.130745887756348
    9. '```' → logprob: -10.880745887756348
    10. '        
' → logprob: -10.880745887756348

Token 124: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' (adapté à ' blocks') → logprob: -0.058410730212926865
    2. '   ' → logprob: -3.30841064453125
    3. 'height' → logprob: -4.68341064453125
    4. '       ' → logprob: -4.80841064453125
    5. ' blocks' → logprob: -6.55841064453125
    6. '
' → logprob: -6.68341064453125
    7. ' height' → logprob: -11.05841064453125
    8. '           ' → logprob: -11.30841064453125
    9. '    
' → logprob: -11.55841064453125
    10. '```' → logprob: -11.68341064453125

Token 125: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.07893958687782288
    2. '_in' → logprob: -2.57893967628479
    3. '_' → logprob: -10.828939437866211
    4. '_util' → logprob: -10.953939437866211
    5. '_use' → logprob: -12.328939437866211
    6. 'used' → logprob: -12.828939437866211
    7. '_usage' → logprob: -13.703939437866211
    8. 'Used' → logprob: -13.953939437866211
    9. '   ' → logprob: -14.328939437866211
    10. '_to' → logprob: -14.703939437866211

Token 126: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0009125363430939615
    2. '+=' → logprob: -7.000912666320801
    3. ' +' → logprob: -14.6259126663208
    4. '+' → logprob: -15.5009126663208
    5. ' =' → logprob: -15.8759126663208
    6. ' ' → logprob: -16.875911712646484
    7. '=' → logprob: -16.875911712646484
    8. ' ' → logprob: -17.125911712646484
    9. ']+=' → logprob: -17.500911712646484
    10. '   ' → logprob: -18.750911712646484

Token 127: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.1269291490316391
    2. ' blocks' → logprob: -2.1269290447235107
    3. 'block' → logprob: -14.75192928314209
    4. '.blocks' → logprob: -15.50192928314209
    5. 'b' → logprob: -16.376928329467773
    6. '_blocks' → logprob: -16.376928329467773
    7. ' ' → logprob: -16.501928329467773
    8. '   ' → logprob: -16.751928329467773
    9. '1' → logprob: -17.376928329467773
    10. 'Blocks' → logprob: -18.126928329467773

Token 128: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -7.541112427134067e-05
    2. 'in' → logprob: -9.500075340270996
    3. '_' → logprob: -15.750075340270996
    4. 'In' → logprob: -16.000076293945312
    5. '_blocks' → logprob: -16.375076293945312
    6. 's' → logprob: -17.000076293945312
    7. ' in' → logprob: -18.125076293945312
    8. 'blocks' → logprob: -19.125076293945312
    9. '-in' → logprob: -19.500076293945312
    10. '_s' → logprob: -20.000076293945312

Token 129: '_stage' (ID: 83584)
  Prédit: '_stage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stage' → logprob: -0.20149149000644684
    2. 'stage' → logprob: -1.7014914751052856
    3. ' stage' → logprob: -10.576491355895996
    4. '	stage' → logprob: -11.326491355895996
    5. 'stag' → logprob: -11.576491355895996
    6. 'st' → logprob: -12.326491355895996
    7. '_st' → logprob: -12.326491355895996
    8. '(stage' → logprob: -12.701491355895996
    9. '_STAGE' → logprob: -12.701491355895996
    10. '-stage' → logprob: -12.826491355895996

Token 130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6873821020126343
    2. '
' → logprob: -1.0623821020126343
    3. 'height' → logprob: -2.437382221221924
    4. '       ' → logprob: -2.937382221221924
    5. '    
' → logprob: -4.937382221221924
    6. '  
' → logprob: -6.687382221221924
    7. '        
' → logprob: -7.062382221221924
    8. ' height' → logprob: -7.187382221221924
    9. '   
' → logprob: -7.937382221221924
    10. ' 
' → logprob: -8.437381744384766

Token 131: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9994207620620728
    2. '       ' → logprob: -1.2494207620620728
    3. '   ' → logprob: -1.2494207620620728
    4. 'height' → logprob: -2.874420642852783
    5. '    
' → logprob: -6.874420642852783
    6. '        
' → logprob: -7.499420642852783
    7. ' height' → logprob: -8.124421119689941
    8. '\n' → logprob: -9.749421119689941
    9. '
' → logprob: -9.999421119689941
    10. '	height' → logprob: -10.124421119689941

Token 132: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' (adapté à ' height') → logprob: -0.00013715129171032459
    2. 'blocks' → logprob: -9.000137329101562
    3. ' height' → logprob: -11.500137329101562
    4. '   ' → logprob: -13.125137329101562
    5. '       ' → logprob: -13.500137329101562
    6. '
' → logprob: -16.375137329101562
    7. '	height' → logprob: -16.500137329101562
    8. 'he' → logprob: -17.875137329101562
    9. '```' → logprob: -17.875137329101562
    10. 'block' → logprob: -18.250137329101562

Token 133: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.002479700604453683
    2. '+=' → logprob: -6.002479553222656
    3. '+' → logprob: -12.877479553222656
    4. '<|end|>' → logprob: -14.377479553222656
    5. ' +' → logprob: -15.127479553222656
    6. ' ' → logprob: -15.502479553222656
    7. ']+=' → logprob: -15.627479553222656
    8. ' ' → logprob: -16.377479553222656
    9. '+='' → logprob: -17.877479553222656
    10. '++' → logprob: -17.877479553222656

Token 134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -18.375030517578125
    4. '2' → logprob: -19.500030517578125
    5. '```' → logprob: -20.250030517578125
    6. 'blocks' → logprob: -20.687530517578125
    7. '１' → logprob: -20.875030517578125
    8. ' ' → logprob: -20.937530517578125
    9. '۱' → logprob: -21.437530517578125
    10. 'block' → logprob: -21.687530517578125

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'blocks' → logprob: -18.250001907348633
    4. 'height' → logprob: -19.000001907348633
    5. '   ' → logprob: -19.500001907348633
    6. '```' → logprob: -20.125001907348633
    7. 'block' → logprob: -20.500001907348633
    8. '2' → logprob: -21.437501907348633
    9. '
' → logprob: -21.500001907348633
    10. '<|end|>' → logprob: -21.562501907348633

Token 136: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019489870173856616
    2. '   ' → logprob: -6.501948833465576
    3. '
' → logprob: -8.251949310302734
    4. '        
' → logprob: -9.001949310302734
    5. '    
' → logprob: -9.876949310302734
    6. '  
' → logprob: -12.876949310302734
    7. ' 
' → logprob: -13.626949310302734
    8. '```' → logprob: -13.751949310302734
    9. '   
' → logprob: -13.876949310302734
    10. ',' → logprob: -13.876949310302734

Token 137: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4101220667362213
    2. '       ' → logprob: -1.160122036933899
    3. 'blocks' → logprob: -3.7851221561431885
    4. ' blocks' → logprob: -8.28512191772461
    5. '```' → logprob: -11.78512191772461
    6. '    
' → logprob: -12.03512191772461
    7. '        
' → logprob: -12.78512191772461
    8. '
' → logprob: -13.41012191772461
    9. '           ' → logprob: -13.53512191772461
    10. '   ' → logprob: -14.16012191772461

Token 138: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' (adapté à ' blocks') → logprob: -6.587483221665025e-05
    2. ' blocks' → logprob: -9.750065803527832
    3. '   ' → logprob: -12.000065803527832
    4. '       ' → logprob: -13.750065803527832
    5. '```' → logprob: -16.12506675720215
    6. 'block' → logprob: -17.12506675720215
    7. '.blocks' → logprob: -17.37506675720215
    8. '
' → logprob: -17.87506675720215
    9. '_blocks' → logprob: -18.62506675720215
    10. '           ' → logprob: -18.87506675720215

Token 139: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.50000286102295
    3. 'in' → logprob: -14.62500286102295
    4. ' _' → logprob: -15.75000286102295
    5. '+' → logprob: -16.500001907348633
    6. '\' → logprob: -17.000001907348633
    7. 's' → logprob: -17.000001907348633
    8. '*_' → logprob: -17.250001907348633
    9. '_on' → logprob: -17.375001907348633
    10. '   ' → logprob: -17.750001907348633

Token 140: '_stage' (ID: 83584)
  Prédit: '_stage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stage' → logprob: -7.350386295001954e-05
    2. 'stage' → logprob: -9.875073432922363
    3. '_st' → logprob: -11.000073432922363
    4. '_' → logprob: -12.375073432922363
    5. '_step' → logprob: -15.250073432922363
    6. '_STAGE' → logprob: -15.625073432922363
    7. '_level' → logprob: -16.37507438659668
    8. '-stage' → logprob: -16.50007438659668
    9. '	stage' → logprob: -16.50007438659668
    10. 'stag' → logprob: -16.50007438659668

Token 141: ' +=' (ID: 2757)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.6624559760093689
    2. ' +=' → logprob: -0.9124559760093689
    3. '*=' → logprob: -3.0374560356140137
    4. '+=' → logprob: -3.4124560356140137
    5. '*' → logprob: -6.662456035614014
    6. ' *' → logprob: -8.162455558776855
    7. '=' → logprob: -8.412455558776855
    8. ' <<=' → logprob: -9.787455558776855
    9. ' ' → logprob: -10.287455558776855
    10. ' ' → logprob: -10.662455558776855

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025845777709037066
    2. '2' → logprob: -6.002584457397461
    3. ' ' → logprob: -10.002584457397461
    4. '3' → logprob: -10.627584457397461
    5. '4' → logprob: -10.877584457397461
    6. 'height' → logprob: -11.127584457397461
    7. '6' → logprob: -13.127584457397461
    8. '5' → logprob: -14.502584457397461
    9. '   ' → logprob: -14.690084457397461
    10. 'increment' → logprob: -14.690084457397461

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00224113161675632
    2. '2' → logprob: -6.252241134643555
    3. 'height' → logprob: -8.377241134643555
    4. '3' → logprob: -10.502241134643555
    5. '4' → logprob: -10.502241134643555
    6. '6' → logprob: -11.627241134643555
    7. ' ' → logprob: -12.627241134643555
    8. 'blocks' → logprob: -12.627241134643555
    9. '(height' → logprob: -12.877241134643555
    10. '5' → logprob: -13.127241134643555

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030476778745651245
    2. 'else' → logprob: -3.5304768085479736
    3. ' else' → logprob: -7.2804765701293945
    4. '    
' → logprob: -11.030476570129395
    5. '	else' → logprob: -11.530476570129395
    6. '
' → logprob: -12.030476570129395
    7. '\n' → logprob: -13.530476570129395
    8. '```' → logprob: -13.905476570129395
    9. 'elif' → logprob: -14.530476570129395
    10. '<|end|>' → logprob: -14.655476570129395

Token 145: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5797574520111084
    2. '   ' → logprob: -0.8297574520111084
    3. ' else' → logprob: -5.5797576904296875
    4. '	else' → logprob: -10.704757690429688
    5. '    
' → logprob: -11.829757690429688
    6. '```' → logprob: -12.829757690429688
    7. 'elif' → logprob: -13.454757690429688
    8. '_else' → logprob: -13.829757690429688
    9. '<|end|>' → logprob: -14.579757690429688
    10. '#else' → logprob: -14.954757690429688

Token 146: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.01419324241578579
    2. ' else' → logprob: -4.264193058013916
    3. 'elif' → logprob: -11.014193534851074
    4. '   ' → logprob: -11.514193534851074
    5. '	else' → logprob: -13.139193534851074
    6. 'els' → logprob: -15.139193534851074
    7. 'e' → logprob: -15.639193534851074
    8. '    
' → logprob: -15.639193534851074
    9. 'elses' → logprob: -15.764193534851074
    10. '\n' → logprob: -16.389192581176758

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10419519245624542
    2. ':
' → logprob: -2.3541951179504395
    3. '       ' → logprob: -6.1041951179504395
    4. '   ' → logprob: -6.3541951179504395
    5. ':
' → logprob: -13.479195594787598
    6. 'break' → logprob: -13.979195594787598
    7. '	break' → logprob: -14.354195594787598
    8. '    ' → logprob: -14.354195594787598
    9. '.' → logprob: -14.604195594787598
    10. '           ' → logprob: -14.604195594787598

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017289682291448116
    2. '   ' → logprob: -6.3767290115356445
    3. 'break' → logprob: -10.626729011535645
    4. ' break' → logprob: -14.001729011535645
    5. 'print' → logprob: -14.251729011535645
    6. '```' → logprob: -14.751729011535645
    7. '	break' → logprob: -14.876729011535645
    8. '           ' → logprob: -15.251729011535645
    9. '      ' → logprob: -17.251728057861328
    10. '     ' → logprob: -17.251728057861328

Token 149: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.007372826803475618
    2. ' break' → logprob: -5.257372856140137
    3. '   ' → logprob: -6.632372856140137
    4. '	break' → logprob: -7.507372856140137
    5. '       ' → logprob: -8.257372856140137
    6. 'b' → logprob: -12.257372856140137
    7. '```' → logprob: -13.007372856140137
    8. '_break' → logprob: -13.382372856140137
    9. '
' → logprob: -14.382372856140137
    10. 'br' → logprob: -14.507372856140137

Token 150: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03834027424454689
    2. '
' → logprob: -3.2883403301239014
    3. ')' → logprob: -9.28834056854248
    4. ' print' → logprob: -9.78834056854248
    5. ')
' → logprob: -10.16334056854248
    6. '
' → logprob: -10.28834056854248
    7. ' 
' → logprob: -10.53834056854248
    8. '  
' → logprob: -10.91334056854248
    9. 'height' → logprob: -11.41334056854248
    10. '

' → logprob: -12.03834056854248

Token 151: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. 'height' → logprob: -13.875000953674316
    3. '```' → logprob: -15.750000953674316
    4. '
' → logprob: -16.375001907348633
    5. ' print' → logprob: -16.375001907348633
    6. '``' → logprob: -19.750001907348633
    7. '  
' → logprob: -19.875001907348633
    8. ')' → logprob: -20.500001907348633
    9. ')
' → logprob: -21.250001907348633
    10. '#print' → logprob: -21.250001907348633

Token 152: '(height' (ID: 44692)
  Prédit: '(height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(height' → logprob: -0.0009124171338044107
    2. '(' → logprob: -7.000912189483643
    3. 'height' → logprob: -14.2509126663208
    4. '()' → logprob: -17.250911712646484
    5. '(depth' → logprob: -17.375911712646484
    6. ' height' → logprob: -17.625911712646484
    7. '((' → logprob: -17.875911712646484
    8. ' (' → logprob: -17.875911712646484
    9. '(h' → logprob: -18.375911712646484
    10. ',height' → logprob: -18.625911712646484

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -16.875001907348633
    4. ')`' → logprob: -17.750001907348633
    5. ')#' → logprob: -18.000001907348633
    6. '+' → logprob: -18.125001907348633
    7. '))' → logprob: -19.625001907348633
    8. '```' → logprob: -19.625001907348633
    9. '),' → logprob: -20.000001907348633
    10. '()' → logprob: -20.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 151
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 115
Précision stricte (1ère position): 39.74%
Précision adaptée (1ère position): 43.05%
Précision (top 10): 76.16%
================================================================================
