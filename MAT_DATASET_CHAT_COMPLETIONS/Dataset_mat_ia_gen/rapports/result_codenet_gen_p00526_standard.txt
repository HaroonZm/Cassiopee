================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:42:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

N = int(input())
S = list(map(int, input().split()))

def longest_alt(arr):
    max_len = 1
    length = 1
    for i in range(1, len(arr)):
        if arr[i] != arr[i-1]:
            length += 1
            if length > max_len:
                max_len = length
        else:
            length = 1
    return max_len

# If no operation is done
res = longest_alt(S)

# We want to consider flipping a subarray once
# Strategy:
# For each position i, define B[i] = 1 if S[i] == i%2 else 0 (matches alt pattern 1)
# and C[i] = 1 if S[i] == (i+1)%2 else 0 (matches alt pattern 2)
#
# Flipping a subarray [l, r] means flipping bits in S[l:r], so the final matching changes accordingly.
#
# We want to find the subarray [l, r] to flip that maximizes the maximum length of alternating sequence.

# Create arrays for the two alternating patterns
alt1 = [i % 2 for i in range(N)]
alt2 = [(i + 1) % 2 for i in range(N)]

# For each pattern, create an array matches: 1 if S[i] == pattern[i], else 0
matches1 = [1 if S[i] == alt1[i] else 0 for i in range(N)]
matches2 = [1 if S[i] == alt2[i] else 0 for i in range(N)]

# For flipping a subarray, the match changes:
# positions inside flipped subarray are flipped: match[i] := 1 - match[i]
# we want to find a subarray [l,r] where replacing matches[i] by 1 - matches[i] increases the maximum length of alternating sequence.

# To find the subarray that maximizes increase in longest alt sequence, we consider difference arrays:
# For each position i:
# diff[i] = (1 - matches[i]) - matches[i] = 1 - 2*matches[i]
# This is the gain in matches from flipping at position i

# We want to find the subarray [l, r] that maximizes sum of diff[l:r+1]

# But simply maximizing sum of diff does not guarantee longer alt sequence, we need to find the max length of alt sequence IF flipped this subarray.

# Instead, we use a standard approach:
# The length of longest alternating sequence can be obtained by the length of the longest run of consecutive 1's in matches.

# Flipping a subarray means toggling matches inside that interval (1->0,0->1)

# To maximize the length of consecutive 1's, we try flipping subarray that converts 0's to 1's and maybe break some 1's, but overall increase max run of 1's.

# We find maximal length of subarray of diff (which represents gain) and use that to update result:

def max_subarray_sum(arr):
    max_ending = max_so_far = arr[0]
    for x in arr[1:]:
        max_ending = max(x, max_ending + x)
        if max_ending > max_so_far:
            max_so_far = max_ending
    return max_so_far

# We try both alt1 and alt2 patterns, calculate max subarray gain and update result
# But max subarray gain gives max increase in matches sum, not directly max run length.
# So another approach:

# We use a method inspired by editorial of similar problem:
# We create for matches array a binary array, longest runs of 1s, we consider that flipping a subarray reverses bits there.
# For each position, compute longest consecutive 1s prefix and suffix.

def max_alt_with_flip(matches):
    # base longest consecutive ones max
    base_max = 0
    length = 0
    for v in matches:
        if v == 1:
            length +=1
            base_max = max(base_max, length)
        else:
            length = 0
    # compute prefix sums of matches and difference array:
    diff = []
    for v in matches:
        diff.append(1 - 2*v)  # flipping gives gain = 1-2*v
    max_gain = float('-inf')
    current = 0
    min_pre = 0
    max_gain = 0
    pre_sum = 0
    for d in diff:
        pre_sum += d
        max_gain = max(max_gain, pre_sum - min_pre)
        min_pre = min(min_pre, pre_sum)

    return base_max + max_gain

# Compute result for both patterns and take max (also consider no operation)
ans = max(res, max_alt_with_flip(matches1), max_alt_with_flip(matches2))
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006128363311290741
    2. '()' → logprob: -8.25061321258545
    3. '.' → logprob: -9.00061321258545
    4. ' (' → logprob: -9.62561321258545
    5. '(
' → logprob: -10.12561321258545
    6. ')' → logprob: -10.37561321258545
    7. '('' → logprob: -10.62561321258545
    8. '```' → logprob: -11.25061321258545
    9. ''' → logprob: -11.50061321258545
    10. '_' → logprob: -12.25061321258545

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011876434087753296
    2. '.stdin' → logprob: -4.761876583099365
    3. ' .' → logprob: -7.011876583099365
    4. '.import' → logprob: -7.511876583099365
    5. '.argv' → logprob: -7.761876583099365
    6. '.readline' → logprob: -8.136876106262207
    7. '.stdout' → logprob: -8.261876106262207
    8. '.input' → logprob: -8.261876106262207
    9. '.
' → logprob: -8.886876106262207
    10. '.path' → logprob: -9.511876106262207

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3585807979106903
    2. '.' → logprob: -1.2335808277130127
    3. '.read' → logprob: -4.608580589294434
    4. '.readlines' → logprob: -9.733580589294434
    5. '```' → logprob: -10.733580589294434
    6. '.Read' → logprob: -11.483580589294434
    7. 'read' → logprob: -12.358580589294434
    8. ' .' → logprob: -12.983580589294434
    9. '().' → logprob: -12.983580589294434
    10. '.write' → logprob: -13.233580589294434

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.062375325709581375
    2. '(' → logprob: -3.06237530708313
    3. '()
' → logprob: -5.187375545501709
    4. '
' → logprob: -5.687375545501709
    5. '(
' → logprob: -6.062375545501709
    6. '\n' → logprob: -7.187375545501709
    7. '().' → logprob: -7.812375545501709
    8. '()\' → logprob: -7.937375545501709
    9. '\' → logprob: -8.06237506866455
    10. '()

' → logprob: -8.31237506866455

Token 9: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2530626952648163
    2. '(' → logprob: -1.5030627250671387
    3. '().' → logprob: -7.878062725067139
    4. '()
' → logprob: -8.25306224822998
    5. '(
' → logprob: -9.00306224822998
    6. '()

' → logprob: -9.62806224822998
    7. '()\' → logprob: -10.25306224822998
    8. ')' → logprob: -10.37806224822998
    9. 'def' → logprob: -10.37806224822998
    10. '#' → logprob: -10.37806224822998

Token 10: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.871807873249054
    2. ')' → logprob: -1.4968078136444092
    3. ' =' → logprob: -1.8718078136444092
    4. '=' → logprob: -1.8718078136444092
    5. '[' → logprob: -4.496808052062988
    6. '>' → logprob: -4.996808052062988
    7. ' )' → logprob: -5.121808052062988
    8. '.' → logprob: -5.371808052062988
    9. '<|end|>' → logprob: -5.621808052062988
    10. '+' → logprob: -5.996808052062988

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0033229112159460783
    2. 'int' → logprob: -5.753323078155518
    3. ' ' → logprob: -8.87832260131836
    4. ' input' → logprob: -12.12832260131836
    5. '=int' → logprob: -16.00332260131836
    6. 'input' → logprob: -16.25332260131836
    7. '  ' → logprob: -17.25332260131836
    8. ' in' → logprob: -17.37832260131836
    9. '<int' → logprob: -17.37832260131836
    10. ' i' → logprob: -18.00332260131836

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021085054613649845
    2. '(input' → logprob: -6.377108573913574
    3. '(N' → logprob: -8.252108573913574
    4. '('' → logprob: -10.002108573913574
    5. ' (' → logprob: -10.127108573913574
    6. '()' → logprob: -10.252108573913574
    7. '(
' → logprob: -12.002108573913574
    8. '(`' → logprob: -12.877108573913574
    9. '(int' → logprob: -13.002108573913574
    10. '(sys' → logprob: -13.252108573913574

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6004719734191895
    2. ')' → logprob: -0.8504719734191895
    3. '()' → logprob: -3.7254719734191895
    4. '(' → logprob: -9.600471496582031
    5. '))' → logprob: -10.975471496582031
    6. '`)' → logprob: -11.100471496582031
    7. ' ())' → logprob: -11.225471496582031
    8. ' )' → logprob: -12.475471496582031
    9. '())
' → logprob: -13.225471496582031
    10. '()))' → logprob: -13.350471496582031

Token 14: 'S' (ID: 50)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.9346592426300049
    2. 'for' → logprob: -0.9346592426300049
    3. 'a' → logprob: -3.559659242630005
    4. 'result' → logprob: -3.684659242630005
    5. '\n' → logprob: -3.684659242630005
    6. 'arr' → logprob: -4.059659004211426
    7. ')' → logprob: -4.059659004211426
    8. 'if' → logprob: -4.309659004211426
    9. 'array' → logprob: -4.434659004211426
    10. '\' → logprob: -4.809659004211426

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45044413208961487
    2. '[' → logprob: -1.4504441022872925
    3. '.' → logprob: -2.825444221496582
    4. '=' → logprob: -3.075444221496582
    5. ' ' → logprob: -5.200444221496582
    6. '[:]' → logprob: -5.325444221496582
    7. '[]' → logprob: -5.575444221496582
    8. ')' → logprob: -6.200444221496582
    9. '_' → logprob: -6.700444221496582
    10. '[i' → logprob: -6.825444221496582

Token 16: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.34892523288726807
    2. 'input' → logprob: -1.223925232887268
    3. ' list' → logprob: -8.348925590515137
    4. 'list' → logprob: -8.973925590515137
    5. ' ' → logprob: -9.848925590515137
    6. '[input' → logprob: -11.098925590515137
    7. 'int' → logprob: -11.223925590515137
    8. '(input' → logprob: -12.098925590515137
    9. '=input' → logprob: -12.223925590515137
    10. ' str' → logprob: -12.723925590515137

Token 17: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007058830466121435
    2. '(input' → logprob: -5.382058620452881
    3. '(S' → logprob: -6.257058620452881
    4. '(str' → logprob: -8.007059097290039
    5. '()' → logprob: -10.007059097290039
    6. '(range' → logprob: -10.132059097290039
    7. '(int' → logprob: -10.757059097290039
    8. '(
' → logprob: -11.382059097290039
    9. '(s' → logprob: -11.882059097290039
    10. '(sys' → logprob: -12.007059097290039

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.031021058559417725
    2. '(str' → logprob: -4.0310211181640625
    3. '(' → logprob: -4.4060211181640625
    4. '(lambda' → logprob: -7.6560211181640625
    5. '(input' → logprob: -10.031021118164062
    6. 'int' → logprob: -10.656021118164062
    7. 'str' → logprob: -11.656021118164062
    8. '(float' → logprob: -11.906021118164062
    9. '<int' → logprob: -12.406021118164062
    10. '(eval' → logprob: -12.406021118164062

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06348419189453125
    2. '(' → logprob: -3.4384841918945312
    3. ',input' → logprob: -3.6884841918945312
    4. ',' → logprob: -5.563484191894531
    5. ')' → logprob: -8.188484191894531
    6. ' (' → logprob: -9.313484191894531
    7. 'input' → logprob: -9.938484191894531
    8. ' ,' → logprob: -10.438484191894531
    9. '(int' → logprob: -10.813484191894531
    10. '(INPUT' → logprob: -11.563484191894531

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029752222821116447
    2. ' input' → logprob: -3.529752254486084
    3. '(input' → logprob: -13.904751777648926
    4. ',input' → logprob: -14.779751777648926
    5. ' ' → logprob: -15.529751777648926
    6. ')' → logprob: -16.029752731323242
    7. '=input' → logprob: -16.154752731323242
    8. '	input' → logprob: -16.654752731323242
    9. '<input' → logprob: -17.529752731323242
    10. 'list' → logprob: -17.779752731323242

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00015407454338856041
    2. '()' → logprob: -9.000154495239258
    3. '()))' → logprob: -10.500154495239258
    4. '())' → logprob: -13.000154495239258
    5. '(' → logprob: -15.375154495239258
    6. ' ().' → logprob: -15.750154495239258
    7. '())))' → logprob: -15.750154495239258
    8. '()));' → logprob: -15.750154495239258
    9. '()[' → logprob: -16.875154495239258
    10. '()
' → logprob: -17.125154495239258

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04946386069059372
    2. 'strip' → logprob: -3.0494637489318848
    3. 'rstrip' → logprob: -7.049463748931885
    4. ' split' → logprob: -12.174464225769043
    5. ')' → logprob: -12.924464225769043
    6. ' strip' → logprob: -14.924464225769043
    7. '(split' → logprob: -15.549464225769043
    8. '.split' → logprob: -17.174463272094727
    9. 'read' → logprob: -17.424463272094727
    10. '```' → logprob: -17.424463272094727

Token 23: '()))

' (ID: 125972)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3299739360809326
    2. '))' → logprob: -1.3299739360809326
    3. '()))' → logprob: -4.954974174499512
    4. '(' → logprob: -5.079974174499512
    5. '())' → logprob: -5.954974174499512
    6. '()' → logprob: -7.329974174499512
    7. '(
' → logprob: -10.704974174499512
    8. ')))' → logprob: -11.204974174499512
    9. '),' → logprob: -12.954974174499512
    10. ')
' → logprob: -13.079974174499512

Token 24: 'def' (ID: 1314)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3822530508041382
    2. ')' → logprob: -2.1322531700134277
    3. 'for' → logprob: -3.0072531700134277
    4. 'dp' → logprob: -3.2572531700134277
    5. 'max' → logprob: -4.257253170013428
    6. 'count' → logprob: -4.257253170013428
    7. 'result' → logprob: -4.757253170013428
    8. 'M' → logprob: -4.882253170013428
    9. 's' → logprob: -4.882253170013428
    10. '_' → logprob: -5.132253170013428

Token 25: ' longest' (ID: 37511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16441071033477783
    2. '_' → logprob: -1.9144107103347778
    3. ' _' → logprob: -5.789410591125488
    4. ' a' → logprob: -8.039410591125488
    5. ' ' → logprob: -8.414410591125488
    6. ' ▁' → logprob: -9.789410591125488
    7. ' ​' → logprob: -10.039410591125488
    8. ' space' → logprob: -10.039410591125488
    9. '  ' → logprob: -10.289410591125488
    10. ' find' → logprob: -10.664410591125488

Token 26: '_alt' (ID: 77054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9981420336989686e-05
    2. '_length' → logprob: -12.125020027160645
    3. '_sub' → logprob: -12.750020027160645
    4. '_max' → logprob: -13.875020027160645
    5. '_con' → logprob: -14.125020027160645
    6. '(' → logprob: -14.125020027160645
    7. '```' → logprob: -14.250020027160645
    8. ' _' → logprob: -14.375020027160645
    9. '_long' → logprob: -14.500020027160645
    10. '_suffix' → logprob: -14.875020027160645

Token 27: '(arr' (ID: 19646)
  Prédit: 'ernate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ernate' → logprob: -0.43143168091773987
    2. 'er' → logprob: -1.3064316511154175
    3. '_sub' → logprob: -3.931431770324707
    4. '_' → logprob: -3.931431770324707
    5. 'ern' → logprob: -4.306431770324707
    6. '_sequence' → logprob: -4.431431770324707
    7. '_chain' → logprob: -4.931431770324707
    8. 'ernal' → logprob: -7.056431770324707
    9. '_string' → logprob: -7.306431770324707
    10. '_er' → logprob: -7.806431770324707

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17786593735218048
    2. ')' → logprob: -2.427865982055664
    3. 'u' → logprob: -3.927865982055664
    4. 'uator' → logprob: -3.927865982055664
    5. '[]):' → logprob: -4.927865982055664
    6. '(' → logprob: -4.927865982055664
    7. 'uation' → logprob: -5.927865982055664
    8. 'uating' → logprob: -5.927865982055664
    9. ')):' → logprob: -6.052865982055664
    10. 'uated' → logprob: -6.052865982055664

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04471934214234352
    2. '_' → logprob: -3.7947194576263428
    3. ' ' → logprob: -4.419719219207764
    4. '    ' → logprob: -6.294719219207764
    5. 'n' → logprob: -6.794719219207764
    6. '(' → logprob: -6.919719219207764
    7. '    
' → logprob: -6.919719219207764
    8. ':' → logprob: -7.169719219207764
    9. '  ' → logprob: -7.544719219207764
    10. 'max' → logprob: -7.669719219207764

Token 30: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.51792973279953
    2. ' n' → logprob: -1.3929297924041748
    3. 'max' (adapté à ' max') → logprob: -3.517929792404175
    4. ' ' → logprob: -4.017929553985596
    5. ' if' → logprob: -4.142929553985596
    6. ' length' → logprob: -4.267929553985596
    7. ' prev' → logprob: -4.517929553985596
    8. '   ' → logprob: -4.517929553985596
    9. ' dp' → logprob: -4.517929553985596
    10. ' best' → logprob: -5.017929553985596

Token 31: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.608575701713562
    2. '_' → logprob: -0.858575701713562
    3. '_length' → logprob: -3.4835758209228516
    4. '_l' → logprob: -7.108575820922852
    5. '_count' → logprob: -7.983575820922852
    6. ' _' → logprob: -8.858575820922852
    7. '_i' → logprob: -9.983575820922852
    8. '_val' → logprob: -11.358575820922852
    9. 'len' → logprob: -11.608575820922852
    10. '_=' → logprob: -12.108575820922852

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37269002199172974
    2. '=' → logprob: -1.872689962387085
    3. '_' → logprob: -1.997689962387085
    4. ' ' → logprob: -3.872689962387085
    5. ',' → logprob: -7.747690200805664
    6. '_=' → logprob: -8.122690200805664
    7. '(' → logprob: -9.122690200805664
    8. ')' → logprob: -9.997690200805664
    9. ' _' → logprob: -10.622690200805664
    10. '  ' → logprob: -11.747690200805664

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6384913325309753
    2. '1' → logprob: -0.7634913325309753
    3. '0' → logprob: -5.138491153717041
    4. '2' → logprob: -12.5134916305542
    5. ' ' → logprob: -13.6384916305542
    6. 'len' → logprob: -13.8884916305542
    7. ' max' → logprob: -14.2634916305542
    8. ' len' → logprob: -14.5134916305542
    9. '  ' → logprob: -14.7634916305542
    10. '   ' → logprob: -14.7634916305542

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.201504185795784
    2. '0' → logprob: -1.7015042304992676
    3. ' ' → logprob: -9.70150375366211
    4. '2' → logprob: -10.70150375366211
    5. 'len' → logprob: -12.32650375366211
    6. '```' → logprob: -14.07650375366211
    7. '[' → logprob: -14.57650375366211
    8. '-' → logprob: -14.70150375366211
    9. 'max' → logprob: -15.07650375366211
    10. 'float' → logprob: -16.26400375366211

Token 35: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2243795245885849
    2. ' ' → logprob: -2.599379539489746
    3. ',' → logprob: -2.974379539489746
    4. '' → logprob: -3.724379539489746
    5. ' 
' → logprob: -3.974379539489746
    6. '   ' → logprob: -4.349379539489746
    7. '    
' → logprob: -5.724379539489746
    8. '<|end|>' → logprob: -5.974379539489746
    9. '  
' → logprob: -6.224379539489746
    10. '   
' → logprob: -6.224379539489746

Token 36: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17538347840309143
    2. '   ' → logprob: -3.3003835678100586
    3. '
' → logprob: -3.9253835678100586
    4. '_' → logprob: -4.050383567810059
    5. '' → logprob: -4.300383567810059
    6. ',' → logprob: -4.300383567810059
    7. ' current' → logprob: -4.550383567810059
    8. ' 
' → logprob: -4.925383567810059
    9. 'current' → logprob: -4.925383567810059
    10. ' for' → logprob: -5.050383567810059

Token 37: ' length' (ID: 5517)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.17033101618289948
    2. 'current' → logprob: -2.2953310012817383
    3. ' curr' → logprob: -3.2953310012817383
    4. 'curr' → logprob: -4.795331001281738
    5. 'cur' → logprob: -5.170331001281738
    6. ' cur' → logprob: -5.920331001281738
    7. ' n' → logprob: -8.170331001281738
    8. ' max' → logprob: -8.295331001281738
    9. ' ' → logprob: -8.295331001281738
    10. '   ' → logprob: -8.420331001281738

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016319746151566505
    2. '=' → logprob: -4.141319751739502
    3. '_' → logprob: -8.891319274902344
    4. '<|end|>' → logprob: -9.891319274902344
    5. ' ' → logprob: -10.141319274902344
    6. 's' → logprob: -10.641319274902344
    7. ',' → logprob: -11.391319274902344
    8. '<|end|>' → logprob: -12.141319274902344
    9. '_=' → logprob: -12.516319274902344
    10. ' +=' → logprob: -12.891319274902344

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4740924537181854
    2. '1' → logprob: -0.9740924835205078
    3. '0' → logprob: -11.224092483520508
    4. '2' → logprob: -13.349092483520508
    5. ' ' → logprob: -15.599092483520508
    6. 'len' → logprob: -16.911592483520508
    7. ' len' → logprob: -17.099092483520508
    8. '```' → logprob: -17.161592483520508
    9. 's' → logprob: -17.474092483520508
    10. '  ' → logprob: -17.849092483520508

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.309382373117842e-05
    2. ' ' → logprob: -10.375033378601074
    3. '0' → logprob: -13.250033378601074
    4. '2' → logprob: -17.562532424926758
    5. '```' → logprob: -17.875032424926758
    6. 'len' → logprob: -18.250032424926758
    7. '１' → logprob: -18.375032424926758
    8. '[' → logprob: -19.125032424926758
    9. '' → logprob: -19.375032424926758
    10. '(' → logprob: -19.375032424926758

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10626866668462753
    2. '\n' → logprob: -3.2312686443328857
    3. ' for' → logprob: -3.8562686443328857
    4. ' 
' → logprob: -4.231268882751465
    5. '   ' → logprob: -4.481268882751465
    6. '    
' → logprob: -5.731268882751465
    7. '<|end|>' → logprob: -5.731268882751465
    8. '' → logprob: -6.606268882751465
    9. 'for' → logprob: -6.856268882751465
    10. ' ' → logprob: -6.856268882751465

Token 42: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3745422959327698
    2. 'for' → logprob: -1.999542236328125
    3. '
' → logprob: -2.374542236328125
    4. '   ' → logprob: -2.624542236328125
    5. 'n' → logprob: -5.249542236328125
    6. ' i' → logprob: -6.249542236328125
    7. 'i' → logprob: -7.124542236328125
    8. ' 
' → logprob: -7.249542236328125
    9. '\n' → logprob: -7.624542236328125
    10. ',' → logprob: -7.624542236328125

Token 43: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0022739621344953775
    2. ' for' → logprob: -6.252274036407471
    3. 'sign' → logprob: -8.502273559570312
    4. 'n' → logprob: -9.752273559570312
    5. 'direction' → logprob: -10.002273559570312
    6. 'i' → logprob: -10.877273559570312
    7. '   ' → logprob: -11.627273559570312
    8. 'if' → logprob: -12.502273559570312
    9. 'prev' → logprob: -13.127273559570312
    10. 'diff' → logprob: -13.252273559570312

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.030520137399435043
    2. 'i' → logprob: -3.53052020072937
    3. ' range' → logprob: -7.405519962310791
    4. ' ' → logprob: -9.65552043914795
    5. 'range' → logprob: -9.78052043914795
    6. '(i' → logprob: -11.03052043914795
    7. ' in' → logprob: -11.40552043914795
    8. '	i' → logprob: -11.90552043914795
    9. 'I' → logprob: -13.15552043914795
    10. ' I' → logprob: -13.40552043914795

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004809841513633728
    2. ' ' → logprob: -5.879809856414795
    3. 'in' → logprob: -6.504809856414795
    4. '+' → logprob: -7.629809856414795
    5. '  ' → logprob: -11.879809379577637
    6. '	in' → logprob: -12.254809379577637
    7. '1' → logprob: -12.754809379577637
    8. ' +' → logprob: -14.004809379577637
    9. ',' → logprob: -14.129809379577637
    10. ' i' → logprob: -14.379809379577637

Token 46: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07889717072248459
    2. 'range' → logprob: -2.57889723777771
    3. ' ' → logprob: -11.953897476196289
    4. '	range' → logprob: -15.203897476196289
    5. '   ' → logprob: -15.328897476196289
    6. '  ' → logprob: -15.703897476196289
    7. ' xrange' → logprob: -16.57889747619629
    8. '(range' → logprob: -16.82889747619629
    9. '1' → logprob: -17.20389747619629
    10. '```' → logprob: -17.70389747619629

Token 47: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7120533811976202e-05
    2. '1' → logprob: -11.375017166137695
    3. '(len' → logprob: -12.125017166137695
    4. ' (' → logprob: -16.375017166137695
    5. 'len' → logprob: -17.000017166137695
    6. '(
' → logprob: -17.000017166137695
    7. '(i' → logprob: -17.000017166137695
    8. ' ' → logprob: -18.875017166137695
    9. '```' → logprob: -19.750017166137695
    10. '(N' → logprob: -19.750017166137695

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. 'len' → logprob: -14.750000953674316
    4. '   ' → logprob: -19.250001907348633
    5. '2' → logprob: -19.750001907348633
    6. '１' → logprob: -20.250001907348633
    7. '(' → logprob: -20.375001907348633
    8. '```' → logprob: -20.375001907348633
    9. '۱' → logprob: -20.750001907348633
    10. '[' → logprob: -21.125001907348633

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06370478868484497
    2. ' ,' → logprob: -2.9387047290802
    3. ',len' → logprob: -5.188704967498779
    4. ' ' → logprob: -6.063704967498779
    5. '<|end|>' → logprob: -7.813704967498779
    6. '):' → logprob: -8.938704490661621
    7. ' ):' → logprob: -9.438704490661621
    8. ',length' → logprob: -9.563704490661621
    9. ' )' → logprob: -10.313704490661621
    10. ')' → logprob: -10.438704490661621

Token 50: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008918502368032932
    2. ' len' → logprob: -4.758918285369873
    3. 'N' → logprob: -8.133918762207031
    4. ' N' → logprob: -11.633918762207031
    5. 'n' → logprob: -14.508918762207031
    6. '   ' → logprob: -14.758918762207031
    7. '<len' → logprob: -15.758918762207031
    8. '(len' → logprob: -15.883918762207031
    9. ' ' → logprob: -16.13391876220703
    10. 'length' → logprob: -16.25891876220703

Token 51: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.00013202552509028465
    2. '(' → logprob: -9.500131607055664
    3. 'arr' → logprob: -9.875131607055664
    4. ' arr' → logprob: -12.875131607055664
    5. '	arr' → logprob: -14.250131607055664
    6. ' (' → logprob: -14.250131607055664
    7. ')' → logprob: -14.375131607055664
    8. '<arr' → logprob: -14.500131607055664
    9. '[arr' → logprob: -14.750131607055664
    10. '(S' → logprob: -15.500131607055664

Token 52: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.20957888662815094
    2. ')):
' → logprob: -1.7095788717269897
    3. '):' → logprob: -5.459578990936279
    4. '))' → logprob: -5.834578990936279
    5. ')' → logprob: -7.334578990936279
    6. '):
' → logprob: -8.834578514099121
    7. ' ' → logprob: -9.334578514099121
    8. ')):
' → logprob: -10.334578514099121
    9. ':' → logprob: -11.459578514099121
    10. '   ' → logprob: -12.334578514099121

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01392935961484909
    2. '   ' → logprob: -4.88892936706543
    3. ' ' → logprob: -5.63892936706543
    4. '        
' → logprob: -7.13892936706543
    5. '    ' → logprob: -7.51392936706543
    6. ',' → logprob: -8.01392936706543
    7. '    
' → logprob: -8.76392936706543
    8. '<|end|>' → logprob: -9.01392936706543
    9. ' if' → logprob: -9.13892936706543
    10. ' 
' → logprob: -9.13892936706543

Token 54: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014285147190093994
    2. '       ' → logprob: -4.764285087585449
    3. 'if' (adapté à ' if') → logprob: -5.639285087585449
    4. ' ' → logprob: -6.764285087585449
    5. '   ' → logprob: -7.639285087585449
    6. '    ' → logprob: -8.01428508758545
    7. '<|end|>' → logprob: -10.26428508758545
    8. '        ' → logprob: -10.76428508758545
    9. '	if' → logprob: -11.01428508758545
    10. ' ' → logprob: -11.13928508758545

Token 55: ' arr' (ID: 1724)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.32206621766090393
    2. 'arr' → logprob: -1.4470661878585815
    3. ' (' → logprob: -3.447066307067871
    4. ' arr' → logprob: -4.947066307067871
    5. '(S' → logprob: -7.072066307067871
    6. '(i' → logprob: -9.322066307067871
    7. '	arr' → logprob: -9.697066307067871
    8. ' ' → logprob: -10.197066307067871
    9. '(' → logprob: -10.822066307067871
    10. '[arr' → logprob: -10.947066307067871

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.125000953674316
    3. '[I' → logprob: -18.625
    4. '[-' → logprob: -19.125
    5. '[
' → logprob: -19.625
    6. '```' → logprob: -19.75
    7. '
' → logprob: -19.875
    8. '[index' → logprob: -20.125
    9. 'i' → logprob: -20.25
    10. '   ' → logprob: -20.75

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.036114055663347244
    2. '>' → logprob: -4.16111421585083
    3. ']!=' → logprob: -4.28611421585083
    4. '*' → logprob: -6.03611421585083
    5. '-' → logprob: -6.53611421585083
    6. '!=' → logprob: -6.78611421585083
    7. ']*' → logprob: -7.16111421585083
    8. '```' → logprob: -9.536113739013672
    9. ' !=' → logprob: -9.661113739013672
    10. '}' → logprob: -9.786113739013672

Token 58: ' !=' (ID: 1666)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04491983354091644
    2. '!=' → logprob: -3.294919729232788
    3. '>' → logprob: -5.419919967651367
    4. ' !=' → logprob: -6.669919967651367
    5. ' *' → logprob: -7.044919967651367
    6. '-' → logprob: -8.544919967651367
    7. '<' → logprob: -10.044919967651367
    8. '*>' → logprob: -11.169919967651367
    9. '>*' → logprob: -11.794919967651367
    10. '[' → logprob: -12.419919967651367

Token 59: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00024643904180265963
    2. ' arr' → logprob: -8.375246047973633
    3. '	arr' → logprob: -11.375246047973633
    4. '0' → logprob: -12.875246047973633
    5. ' ' → logprob: -14.000246047973633
    6. '<arr' → logprob: -14.875246047973633
    7. '$arr' → logprob: -15.750246047973633
    8. '_arr' → logprob: -16.000246047973633
    9. '(arr' → logprob: -16.375246047973633
    10. '```' → logprob: -16.625246047973633

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -12.87500286102295
    3. '```' → logprob: -17.250001907348633
    4. '[j' → logprob: -18.875001907348633
    5. ' [' → logprob: -19.125001907348633
    6. '[I' → logprob: -19.500001907348633
    7. '``' → logprob: -19.750001907348633
    8. ' ' → logprob: -20.250001907348633
    9. 'i' → logprob: -20.375001907348633
    10. '(i' → logprob: -20.375001907348633

Token 61: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031910240650177
    2. '[i' → logprob: -6.003190994262695
    3. ' -' → logprob: -7.253190994262695
    4. '1' → logprob: -12.378190994262695
    5. '[-' → logprob: -13.628190994262695
    6. ']' → logprob: -14.753190994262695
    7. '[' → logprob: -14.878190994262695
    8. '```' → logprob: -15.253190994262695
    9. '(i' → logprob: -15.878190994262695
    10. 'i' → logprob: -15.878190994262695

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -11.250031471252441
    3. '```' → logprob: -11.875031471252441
    4. ']' → logprob: -12.250031471252441
    5. 'i' → logprob: -13.062531471252441
    6. '   ' → logprob: -14.750031471252441
    7. ')' → logprob: -14.812531471252441
    8. '``' → logprob: -15.000031471252441
    9. '`' → logprob: -15.250031471252441
    10. '])' → logprob: -15.375031471252441

Token 63: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5040842294692993
    2. ' and' → logprob: -1.2540842294692993
    3. '):' → logprob: -2.6290841102600098
    4. 'and' → logprob: -4.00408411026001
    5. ']:' → logprob: -4.50408411026001
    6. ':
' → logprob: -5.25408411026001
    7. '):
' → logprob: -6.25408411026001
    8. ' :' → logprob: -7.25408411026001
    9. ' ' → logprob: -8.629084587097168
    10. ']' → logprob: -8.754084587097168

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0386991947889328
    2. ' and' → logprob: -3.413699150085449
    3. 'and' → logprob: -5.913699150085449
    4. '       ' → logprob: -6.788699150085449
    5. ' length' → logprob: -7.163699150085449
    6. 'length' → logprob: -8.03869915008545
    7. '   ' → logprob: -11.16369915008545
    8. '               ' → logprob: -11.16369915008545
    9. '          ' → logprob: -11.28869915008545
    10. ' ' → logprob: -11.28869915008545

Token 65: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.06226198002696037
    2. 'length' (adapté à ' length') → logprob: -2.8122620582580566
    3. '           ' → logprob: -8.437261581420898
    4. '_length' → logprob: -10.437261581420898
    5. '               ' → logprob: -10.562261581420898
    6. '	length' → logprob: -11.812261581420898
    7. ' if' → logprob: -12.312261581420898
    8. '       ' → logprob: -12.687261581420898
    9. '            ' → logprob: -13.187261581420898
    10. ' ' → logprob: -13.812261581420898

Token 66: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.00326410005800426
    2. '+=' → logprob: -5.7532639503479
    3. ' =' → logprob: -10.128264427185059
    4. ' +' → logprob: -10.628264427185059
    5. '+' → logprob: -11.003264427185059
    6. ' ' → logprob: -12.753264427185059
    7. '=' → logprob: -13.253264427185059
    8. '    ' → logprob: -15.628264427185059
    9. ' ' → logprob: -15.628264427185059
    10. ']+=' → logprob: -15.753264427185059

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '<|end|>' → logprob: -19.251502990722656
    4. ' ' → logprob: -20.751502990722656
    5. '```' → logprob: -21.501502990722656
    6. '１' → logprob: -21.626502990722656
    7. '۱' → logprob: -22.501502990722656
    8. '  ' → logprob: -22.876502990722656
    9. '   ' → logprob: -23.126502990722656
    10. ' one' → logprob: -23.376502990722656

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -19.500003814697266
    4. '<|end|>' → logprob: -20.875003814697266
    5. '-' → logprob: -21.750003814697266
    6. '１' → logprob: -21.875003814697266
    7. '   ' → logprob: -22.125003814697266
    8. '۱' → logprob: -22.500003814697266
    9. '१' → logprob: -22.625003814697266
    10. '  ' → logprob: -22.937503814697266

Token 69: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.559787392616272
    2. '       ' → logprob: -1.434787392616272
    3. 'else' → logprob: -1.684787392616272
    4. '
' → logprob: -5.809787273406982
    5. '	else' → logprob: -7.684787273406982
    6. ' 
' → logprob: -8.30978775024414
    7. '   ' → logprob: -8.30978775024414
    8. ' elif' → logprob: -8.43478775024414
    9. ' ' → logprob: -8.93478775024414
    10. 'elif' → logprob: -9.05978775024414

Token 70: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5512133836746216
    2. ' else' → logprob: -1.1762133836746216
    3. 'else' → logprob: -2.176213264465332
    4. ' elif' → logprob: -7.051213264465332
    5. 'elif' → logprob: -7.926213264465332
    6. '   ' → logprob: -9.051213264465332
    7. '	else' → logprob: -9.051213264465332
    8. ' ' → logprob: -9.551213264465332
    9. '           ' → logprob: -9.926213264465332
    10. '```' → logprob: -10.051213264465332

Token 71: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2884853780269623
    2. 'else' → logprob: -1.4134854078292847
    3. ' else' → logprob: -5.413485527038574
    4. '           ' → logprob: -6.038485527038574
    5. '   ' → logprob: -8.913485527038574
    6. 'elif' → logprob: -8.913485527038574
    7. '```' → logprob: -9.163485527038574
    8. 'if' (adapté à ' if') → logprob: -10.163485527038574
    9. ' if' → logprob: -11.163485527038574
    10. 'max' → logprob: -11.538485527038574

Token 72: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4740793704986572
    2. ' length' → logprob: -0.9740793704986572
    3. 'max' → logprob: -13.474079132080078
    4. ' max' → logprob: -14.474079132080078
    5. '	length' → logprob: -15.724079132080078
    6. '(length' → logprob: -15.974079132080078
    7. 'ength' → logprob: -16.349079132080078
    8. 'arr' → logprob: -17.474079132080078
    9. '[length' → logprob: -17.599079132080078
    10. 'leng' → logprob: -17.974079132080078

Token 73: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07160715758800507
    2. '>' → logprob: -2.6966071128845215
    3. ' ' → logprob: -6.4466071128845215
    4. '<|end|>' → logprob: -9.57160758972168
    5. '<|end|>' → logprob: -13.07160758972168
    6. ' ' → logprob: -13.44660758972168
    7. '">' → logprob: -13.57160758972168
    8. ' >

' → logprob: -13.94660758972168
    9. ' >
' → logprob: -14.19660758972168
    10. '  ' → logprob: -14.19660758972168

Token 74: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0788913294672966
    2. ' max' → logprob: -2.5788912773132324
    3. '	max' → logprob: -14.32889175415039
    4. 'maxlength' → logprob: -15.07889175415039
    5. '=max' → logprob: -15.32889175415039
    6. '           ' → logprob: -16.45389175415039
    7. '(max' → logprob: -16.82889175415039
    8. '_max' → logprob: -16.95389175415039
    9. ':max' → logprob: -17.70389175415039
    10. ' maxlength' → logprob: -17.82889175415039

Token 75: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. '_length' → logprob: -16.5
    4. '_l' → logprob: -16.75
    5. '_max' → logprob: -17.125
    6. '_le' → logprob: -18.125
    7. ' _' → logprob: -18.75
    8. 'len' → logprob: -19.125
    9. '_LEN' → logprob: -19.625
    10. '__' → logprob: -20.375

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00031651611789129674
    2. ' :' → logprob: -8.375316619873047
    3. ':
' → logprob: -10.375316619873047
    4. '):' → logprob: -10.500316619873047
    5. '=' → logprob: -11.125316619873047
    6. '<|end|>' → logprob: -11.875316619873047
    7. ' =' → logprob: -13.250316619873047
    8. '<|end|>' → logprob: -14.375316619873047
    9. '：' → logprob: -14.500316619873047
    10. ')' → logprob: -14.750316619873047

Token 77: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09200768917798996
    2. ' max' → logprob: -2.467007637023926
    3. 'max' → logprob: -5.967007637023926
    4. '           ' → logprob: -8.967007637023926
    5. '                ' → logprob: -10.092007637023926
    6. 'maxlength' → logprob: -10.092007637023926
    7. '              ' → logprob: -10.342007637023926
    8. ' ' → logprob: -10.342007637023926
    9. '<|end|>' → logprob: -10.342007637023926
    10. ' maxlength' → logprob: -10.592007637023926

Token 78: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16179583966732025
    2. 'max' (adapté à ' max') → logprob: -1.9117958545684814
    3. '               ' → logprob: -7.161795616149902
    4. '                   ' → logprob: -8.036795616149902
    5. '                ' → logprob: -8.786795616149902
    6. '_max' → logprob: -9.036795616149902
    7. '```' → logprob: -10.036795616149902
    8. 'maxlength' → logprob: -10.411795616149902
    9. '[max' → logprob: -10.536795616149902
    10. '	max' → logprob: -10.786795616149902

Token 79: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.961759259458631e-06
    2. '_l' → logprob: -12.625004768371582
    3. '_length' → logprob: -14.125004768371582
    4. '_' → logprob: -15.375004768371582
    5. 'len' → logprob: -15.500004768371582
    6. '_LEN' → logprob: -15.500004768371582
    7. ' _' → logprob: -16.3750057220459
    8. 'length' → logprob: -17.0000057220459
    9. 'Len' → logprob: -17.2500057220459
    10. '_lengths' → logprob: -17.6250057220459

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150178715586662
    2. '=' → logprob: -4.018150329589844
    3. ' ' → logprob: -16.143150329589844
    4. ' =
' → logprob: -16.518150329589844
    5. ' =
' → logprob: -18.268150329589844
    6. '=len' → logprob: -18.268150329589844
    7. '=int' → logprob: -18.518150329589844
    8. '=max' → logprob: -18.768150329589844
    9. ' length' → logprob: -19.018150329589844
    10. '=

' → logprob: -19.018150329589844

Token 81: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.3868718445301056
    2. 'length' → logprob: -1.1368718147277832
    3. 'ength' → logprob: -14.386872291564941
    4. ' lenght' → logprob: -16.386871337890625
    5. '	length' → logprob: -16.636871337890625
    6. 'leng' → logprob: -16.761871337890625
    7. '(length' → logprob: -16.761871337890625
    8. '[length' → logprob: -17.886871337890625
    9. '_length' → logprob: -18.136871337890625
    10. ',length' → logprob: -18.261871337890625

Token 82: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06418540328741074
    2. 'else' → logprob: -2.814185380935669
    3. ' else' → logprob: -6.314185619354248
    4. '
' → logprob: -8.81418514251709
    5. '   ' → logprob: -9.18918514251709
    6. '```' → logprob: -9.81418514251709
    7. '	else' → logprob: -10.31418514251709
    8. '	' → logprob: -10.68918514251709
    9. '           ' → logprob: -11.68918514251709
    10. 'elif' → logprob: -11.81418514251709

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03356963023543358
    2. 'else' → logprob: -3.533569574356079
    3. ' else' → logprob: -6.158569812774658
    4. '
' → logprob: -7.283569812774658
    5. '   ' → logprob: -7.283569812774658
    6. '```' → logprob: -8.9085693359375
    7. '	' → logprob: -9.9085693359375
    8. '	else' → logprob: -10.2835693359375
    9. '' → logprob: -11.1585693359375
    10. '<|end|>' → logprob: -11.2835693359375

Token 84: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.453397274017334
    2. '       ' → logprob: -1.203397274017334
    3. ' else' → logprob: -2.828397274017334
    4. '   ' → logprob: -5.328397274017334
    5. '	else' → logprob: -8.078397750854492
    6. '```' → logprob: -10.078397750854492
    7. 'elif' → logprob: -10.953397750854492
    8. '<|end|>' → logprob: -11.703397750854492
    9. '}else' → logprob: -12.078397750854492
    10. '
' → logprob: -12.703397750854492

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8087764382362366
    2. '           ' → logprob: -0.8087764382362366
    3. ':
' → logprob: -2.308776378631592
    4. '       ' → logprob: -5.558776378631592
    5. ':length' → logprob: -6.183776378631592
    6. ' length' → logprob: -6.433776378631592
    7. 'length' → logprob: -7.308776378631592
    8. '          ' → logprob: -7.683776378631592
    9. '   ' → logprob: -7.808776378631592
    10. '_length' → logprob: -9.18377685546875

Token 86: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0224618911743164
    2. 'length' → logprob: -1.0224618911743164
    3. ' length' → logprob: -1.2724618911743164
    4. '       ' → logprob: -8.522461891174316
    5. '   ' → logprob: -8.647461891174316
    6. '	length' → logprob: -10.022461891174316
    7. '_length' → logprob: -11.647461891174316
    8. ',length' → logprob: -12.397461891174316
    9. '          ' → logprob: -12.897461891174316
    10. ' ' → logprob: -13.022461891174316

Token 87: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.005247275810688734
    2. ' length' → logprob: -5.255247116088867
    3. '           ' → logprob: -11.255247116088867
    4. '	length' → logprob: -14.755247116088867
    5. '   ' → logprob: -16.505247116088867
    6. 'ength' → logprob: -17.005247116088867
    7. 'Length' → logprob: -17.005247116088867
    8. '_length' → logprob: -17.255247116088867
    9. 'len' → logprob: -18.380247116088867
    10. '-length' → logprob: -18.505247116088867

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687121868133545
    2. '=' → logprob: -1.1368712186813354
    3. '＝' → logprob: -16.261871337890625
    4. ' ' → logprob: -16.761871337890625
    5. ' =
' → logprob: -18.261871337890625
    6. '=

' → logprob: -19.011871337890625
    7. '.=' → logprob: -19.386871337890625
    8. ' +=' → logprob: -19.386871337890625
    9. '```' → logprob: -19.886871337890625
    10. '=
' → logprob: -20.011871337890625

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -16.875051498413086
    4. '' → logprob: -18.937551498413086
    5. '   ' → logprob: -19.062551498413086
    6. ' ' → logprob: -19.187551498413086
    7. '<|end|>' → logprob: -19.375051498413086
    8. '  ' → logprob: -19.500051498413086
    9. '۱' → logprob: -19.562551498413086
    10. '１' → logprob: -19.625051498413086

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -19.625001907348633
    4. '0' → logprob: -19.875001907348633
    5. '۱' → logprob: -20.375001907348633
    6. '<|end|>' → logprob: -20.562501907348633
    7. '१' → logprob: -20.750001907348633
    8. '' → logprob: -20.750001907348633
    9. '１' → logprob: -20.937501907348633
    10. '১' → logprob: -21.625001907348633

Token 91: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003579753451049328
    2. 'return' → logprob: -6.128579616546631
    3. ' return' → logprob: -6.878579616546631
    4. '
' → logprob: -8.878580093383789
    5. '	return' → logprob: -9.128580093383789
    6. '    
' → logprob: -9.378580093383789
    7. '<|end|>' → logprob: -12.003580093383789
    8. '  
' → logprob: -12.503580093383789
    9. '```' → logprob: -12.628580093383789
    10. ':return' → logprob: -12.628580093383789

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002749838400632143
    2. ' return' → logprob: -6.377749919891357
    3. 'return' → logprob: -6.877749919891357
    4. '	return' → logprob: -11.6277494430542
    5. '
' → logprob: -13.0027494430542
    6. '    
' → logprob: -13.6277494430542
    7. '```' → logprob: -13.8777494430542
    8. ':return' → logprob: -14.1277494430542
    9. '       ' → logprob: -14.5027494430542
    10. ',' → logprob: -15.1277494430542

Token 93: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3891189992427826
    2. '   ' → logprob: -1.139119029045105
    3. ' return' → logprob: -6.1391191482543945
    4. '	return' → logprob: -9.889119148254395
    5. ' ' → logprob: -10.764119148254395
    6. '```' → logprob: -12.014119148254395
    7. '    
' → logprob: -12.639119148254395
    8. ':return' → logprob: -13.264119148254395
    9. 'eturn' → logprob: -14.014119148254395
    10. '
' → logprob: -14.014119148254395

Token 94: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07889199256896973
    2. ' max' → logprob: -2.5788919925689697
    3. '(max' → logprob: -14.20389175415039
    4. '[max' → logprob: -14.57889175415039
    5. ',max' → logprob: -15.20389175415039
    6. '	max' → logprob: -15.32889175415039
    7. ' ' → logprob: -15.70389175415039
    8. '_max' → logprob: -16.07889175415039
    9. 'maxlength' → logprob: -16.45389175415039
    10. ' maxlength' → logprob: -17.20389175415039

Token 95: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.935296834039036e-06
    2. 'len' → logprob: -12.75000286102295
    3. '_LEN' → logprob: -17.375003814697266
    4. 'Len' → logprob: -17.375003814697266
    5. '_' → logprob: -19.375003814697266
    6. 'length' → logprob: -19.500003814697266
    7. '_l' → logprob: -19.750003814697266
    8. '(len' → logprob: -19.875003814697266
    9. '_val' → logprob: -20.500003814697266
    10. '<len' → logprob: -21.250003814697266

Token 96: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.022040436044335365
    2. 'result' → logprob: -4.397040367126465
    3. 'answer' → logprob: -5.772040367126465
    4. 'max' → logprob: -5.897040367126465
    5. 'for' → logprob: -6.897040367126465
    6. 'res' → logprob: -8.022040367126465
    7. '
' → logprob: -8.022040367126465
    8. '#' → logprob: -8.022040367126465
    9. 'prev' → logprob: -8.397040367126465
    10. 'n' → logprob: -8.522040367126465

Token 97: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010118682868778706
    2. 'result' → logprob: -5.01011848449707
    3. 'answer' → logprob: -6.01011848449707
    4. 'max' → logprob: -8.01011848449707
    5. 'res' → logprob: -8.76011848449707
    6. 'ans' → logprob: -8.88511848449707
    7. '#' → logprob: -9.38511848449707
    8. 'K' → logprob: -10.01011848449707
    9. 'count' → logprob: -10.13511848449707
    10. 'k' → logprob: -10.13511848449707

Token 98: ' If' (ID: 1843)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7827315926551819
    2. 'result' → logprob: -0.7827315926551819
    3. 'answer' → logprob: -2.782731533050537
    4. 'ans' → logprob: -4.407731533050537
    5. 'res' → logprob: -5.157731533050537
    6. 'max' → logprob: -5.282731533050537
    7. '#' → logprob: -7.782731533050537
    8. 'count' → logprob: -8.907732009887695
    9. 'if' → logprob: -9.782732009887695
    10. 'length' → logprob: -10.157732009887695

Token 99: ' no' (ID: 860)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.46096599102020264
    2. ' __' → logprob: -1.4609659910202026
    3. 'N' → logprob: -2.960966110229492
    4. ' S' → logprob: -3.085966110229492
    5. '__' → logprob: -3.710966110229492
    6. ' len' → logprob: -4.835966110229492
    7. 'S' → logprob: -5.335966110229492
    8. 'len' → logprob: -6.460966110229492
    9. ' max' → logprob: -8.085966110229492
    10. ' ' → logprob: -8.085966110229492

Token 100: ' operation' (ID: 9506)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -1.0812448263168335
    2. '(' → logprob: -1.5812448263168335
    3. 'S' → logprob: -1.5812448263168335
    4. ' ' → logprob: -2.581244945526123
    5. 'change' → logprob: -3.706244945526123
    6. '(S' → logprob: -4.081244945526123
    7. ' alt' → logprob: -4.081244945526123
    8. 'altern' → logprob: -4.206244945526123
    9. 's' → logprob: -4.456244945526123
    10. ' __' → logprob: -4.706244945526123

Token 101: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12845300137996674
    2. 's' → logprob: -4.003452777862549
    3. ' ==' → logprob: -4.003452777862549
    4. '():' → logprob: -4.253452777862549
    5. '_' → logprob: -4.503452777862549
    6. '()' → logprob: -4.753452777862549
    7. ' ' → logprob: -4.878452777862549
    8. '=' → logprob: -5.253452777862549
    9. '(' → logprob: -5.253452777862549
    10. '==' → logprob: -5.628452777862549

Token 102: ' done' (ID: 4167)
  Prédit: 'performed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'performed' → logprob: -0.8598910570144653
    2. 'needed' → logprob: -1.4848910570144653
    3. 'allowed' → logprob: -2.234890937805176
    4. 'possible' → logprob: -2.359890937805176
    5. 'done' → logprob: -3.109890937805176
    6. ' performed' → logprob: -3.359890937805176
    7. ' needed' → logprob: -3.484890937805176
    8. ' allowed' → logprob: -4.609890937805176
    9. ' done' → logprob: -4.734890937805176
    10. ' possible' → logprob: -5.484890937805176

Token 103: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16914474964141846
    2. 'print' → logprob: -1.9191447496414185
    3. ':' → logprob: -5.294144630432129
    4. ' print' → logprob: -6.669144630432129
    5. ',
' → logprob: -7.044144630432129
    6. ' ,' → logprob: -7.169144630432129
    7. 'result' → logprob: -7.919144630432129
    8. 'max' → logprob: -8.919144630432129
    9. ')' → logprob: -9.169144630432129
    10. ':
' → logprob: -9.669144630432129

Token 104: 'res' (ID: 430)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.39126649498939514
    2. 'result' → logprob: -1.7662664651870728
    3. 'answer' → logprob: -2.7662665843963623
    4. 'ans' → logprob: -3.3912665843963623
    5. 'res' → logprob: -3.8912665843963623
    6. ' max' → logprob: -4.391266345977783
    7. 'print' → logprob: -5.016266345977783
    8. ' ans' → logprob: -5.641266345977783
    9. 'best' → logprob: -6.016266345977783
    10. 'if' → logprob: -6.266266345977783

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07909070700407028
    2. '=' → logprob: -2.5790905952453613
    3. ' ' → logprob: -9.20409107208252
    4. 'ult' → logprob: -9.95409107208252
    5. 'ault' → logprob: -11.45409107208252
    6. '_' → logprob: -11.82909107208252
    7. 'u' → logprob: -12.32909107208252
    8. ')' → logprob: -12.45409107208252
    9. '  ' → logprob: -12.70409107208252
    10. '1' → logprob: -13.07909107208252

Token 106: ' longest' (ID: 37511)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.30197298526763916
    2. ' longest' → logprob: -1.4269729852676392
    3. 'max' → logprob: -4.05197286605835
    4. ' max' → logprob: -5.92697286605835
    5. ' long' → logprob: -7.92697286605835
    6. 'len' → logprob: -8.801973342895508
    7. '(long' → logprob: -11.426973342895508
    8. '最长' → logprob: -12.051973342895508
    9. ' len' → logprob: -12.176973342895508
    10. 'Longest' → logprob: -12.176973342895508

Token 107: '_alt' (ID: 77054)
  Prédit: '_alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_alt' → logprob: -2.45848218582978e-06
    2. 'alt' → logprob: -13.25000286102295
    3. '_' → logprob: -15.12500286102295
    4. '_al' → logprob: -15.62500286102295
    5. '```' → logprob: -17.875001907348633
    6. 'Alt' → logprob: -18.000001907348633
    7. '_ALT' → logprob: -18.000001907348633
    8. ' _' → logprob: -18.000001907348633
    9. '_attr' → logprob: -18.125001907348633
    10. '_lat' → logprob: -18.500001907348633

Token 108: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0008308322867378592
    2. '_(' → logprob: -7.62583065032959
    3. '_' → logprob: -8.75083065032959
    4. '(' → logprob: -9.50083065032959
    5. '_alt' → logprob: -9.75083065032959
    6. '(_' → logprob: -11.37583065032959
    7. '```' → logprob: -11.62583065032959
    8. '(s' → logprob: -12.00083065032959
    9. '_len' → logprob: -12.50083065032959
    10. '`' → logprob: -12.87583065032959

Token 109: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ')
' → logprob: -12.375008583068848
    3. '))' → logprob: -12.875008583068848
    4. ' )' → logprob: -14.125008583068848
    5. '()' → logprob: -15.500008583068848
    6. '())' → logprob: -16.25000762939453
    7. ')`' → logprob: -16.25000762939453
    8. ')

' → logprob: -16.87500762939453
    9. '`)' → logprob: -17.12500762939453
    10. '[' → logprob: -17.37500762939453

Token 110: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18975156545639038
    2. ' for' → logprob: -2.189751625061035
    3. '
' → logprob: -2.814751625061035
    4. '\n' → logprob: -7.814751625061035
    5. ' 
' → logprob: -8.064751625061035
    6. '<|end|>' → logprob: -8.814751625061035
    7. '  
' → logprob: -10.439751625061035
    8. '\' → logprob: -11.314751625061035
    9. '```' → logprob: -11.439751625061035
    10. '#' → logprob: -11.564751625061035

Token 111: ' We' (ID: 1416)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6327453851699829
    2. 'for' → logprob: -0.7577453851699829
    3. ' ' → logprob: -9.257745742797852
    4. 'For' → logprob: -10.882745742797852
    5. ' For' → logprob: -11.882745742797852
    6. '#' → logprob: -12.507745742797852
    7. '```' → logprob: -12.757745742797852
    8. ' range' → logprob: -13.382745742797852
    9. ' 
' → logprob: -13.507745742797852
    10. 'range' → logprob: -13.632745742797852

Token 112: ' want' (ID: 1682)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6348159909248352
    2. ' for' → logprob: -1.1348159313201904
    3. ' =' → logprob: -2.6348159313201904
    4. 'for' → logprob: -3.1348159313201904
    5. ' want' → logprob: -4.3848161697387695
    6. ' can' → logprob: -4.5098161697387695
    7. ' #' → logprob: -5.7598161697387695
    8. '=' → logprob: -6.6348161697387695
    9. ' need' → logprob: -7.0098161697387695
    10. ' continue' → logprob: -7.1348161697387695

Token 113: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.02635256014764309
    2. 'to' → logprob: -3.651352643966675
    3. '#' → logprob: -11.401352882385254
    4. ' =' → logprob: -11.901352882385254
    5. ' ' → logprob: -12.026352882385254
    6. '<|end|>' → logprob: -12.026352882385254
    7. ' for' → logprob: -12.276352882385254
    8. '=' → logprob: -12.526352882385254
    9. 'for' → logprob: -12.901352882385254
    10. 'res' → logprob: -13.526352882385254

Token 114: ' consider' (ID: 3331)
  Prédit: 'maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximize' → logprob: -0.7261651158332825
    2. 'find' → logprob: -1.6011650562286377
    3. 'try' → logprob: -1.8511650562286377
    4. 'check' → logprob: -2.6011650562286377
    5. 'insert' → logprob: -3.4761650562286377
    6. 'change' → logprob: -4.351165294647217
    7. 'for' → logprob: -4.726165294647217
    8. ' try' → logprob: -5.351165294647217
    9. 'replace' → logprob: -5.601165294647217
    10. 'make' → logprob: -5.726165294647217

Token 115: ' flipping' (ID: 110780)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' one' → logprob: -1.1977721452713013
    2. ' the' → logprob: -1.5727721452713013
    3. ' all' → logprob: -1.8227721452713013
    4. ' each' → logprob: -2.6977720260620117
    5. '<|end|>' → logprob: -3.3227720260620117
    6. ' inserting' → logprob: -3.4477720260620117
    7. 'all' → logprob: -3.5727720260620117
    8. ' performing' → logprob: -3.9477720260620117
    9. ' ' → logprob: -4.072772026062012
    10. ' for' → logprob: -4.072772026062012

Token 116: ' a' (ID: 261)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.4174521267414093
    2. 'one' → logprob: -1.792452096939087
    3. ' each' → logprob: -2.167452096939087
    4. 'each' → logprob: -3.417452096939087
    5. 'a' → logprob: -4.792452335357666
    6. ' at' → logprob: -4.917452335357666
    7. ' ' → logprob: -6.167452335357666
    8. ' the' → logprob: -6.667452335357666
    9. 'the' → logprob: -6.917452335357666
    10. ' a' → logprob: -7.042452335357666

Token 117: ' sub' (ID: 1543)
  Prédit: ' single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' single' → logprob: -0.7084371447563171
    2. 'single' → logprob: -1.958437204360962
    3. '<|end|>' → logprob: -2.333437204360962
    4. ' ' → logprob: -2.583437204360962
    5. ' bit' → logprob: -2.958437204360962
    6. 'n' → logprob: -3.333437204360962
    7. 'bit' → logprob: -4.083436965942383
    8. 'value' → logprob: -4.583436965942383
    9. '0' → logprob: -4.833436965942383
    10. ' value' → logprob: -4.833436965942383

Token 118: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.08941038697957993
    2. 'list' → logprob: -3.3394103050231934
    3. 'sequence' → logprob: -3.8394103050231934
    4. 'segment' → logprob: -4.089410305023193
    5. 'S' → logprob: -5.214410305023193
    6. 'arr' → logprob: -5.339410305023193
    7. '#' → logprob: -7.089410305023193
    8. 'string' → logprob: -7.839410305023193
    9. 'section' → logprob: -9.464410781860352
    10. 's' → logprob: -9.464410781860352

Token 119: ' once' (ID: 4730)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8585575819015503
    2. ' for' → logprob: -0.9835575819015503
    3. ' ' → logprob: -1.7335575819015503
    4. ',' → logprob: -4.85855770111084
    5. '#' → logprob: -5.23355770111084
    6. ')' → logprob: -5.48355770111084
    7. '<|end|>' → logprob: -5.85855770111084
    8. '.' → logprob: -6.23355770111084
    9. 'max' → logprob: -7.73355770111084
    10. '
' → logprob: -7.85855770111084

Token 120: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18567843735218048
    2. 'for' → logprob: -1.810678482055664
    3. ',' → logprob: -6.435678482055664
    4. ' ' → logprob: -6.435678482055664
    5. ' max' → logprob: -7.310678482055664
    6. '
' → logprob: -7.435678482055664
    7. '#' → logprob: -7.810678482055664
    8. 'max' → logprob: -8.185678482055664
    9. '.' → logprob: -8.435678482055664
    10. '<|end|>' → logprob: -8.435678482055664

Token 121: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.055055487900972366
    2. ' for' → logprob: -2.9300553798675537
    3. '
' → logprob: -9.555055618286133
    4. 'max' → logprob: -9.930055618286133
    5. 'res' → logprob: -11.430055618286133
    6. '+' → logprob: -11.805055618286133
    7. 'flip' → logprob: -12.055055618286133
    8. ',' → logprob: -12.430055618286133
    9. '#' → logprob: -12.555055618286133
    10. ' 
' → logprob: -12.805055618286133

Token 122: ' Strategy' (ID: 39435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026335015892982483
    2. ' for' → logprob: -3.6513350009918213
    3. 'max' → logprob: -11.526334762573242
    4. '#' → logprob: -12.026334762573242
    5. 'flip' → logprob: -12.151334762573242
    6. 'res' → logprob: -12.401334762573242
    7. 'prev' → logprob: -12.526334762573242
    8. '
' → logprob: -13.151334762573242
    9. 'n' → logprob: -14.401334762573242
    10. 'diff' → logprob: -15.026334762573242

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.241739422082901
    2. ' =' → logprob: -1.8667393922805786
    3. 'for' → logprob: -3.741739511489868
    4. ' for' → logprob: -4.241739273071289
    5. ' :' → logprob: -4.366739273071289
    6. '=' → logprob: -4.991739273071289
    7. '#' → logprob: -6.866739273071289
    8. ':
' → logprob: -7.366739273071289
    9. ' is' → logprob: -7.991739273071289
    10. ',' → logprob: -8.866739273071289

Token 124: '#' (ID: 2)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47506266832351685
    2. 'for' → logprob: -1.100062608718872
    3. '#' → logprob: -3.350062608718872
    4. ' #' → logprob: -5.600062847137451
    5. ' max' → logprob: -6.350062847137451
    6. ' best' → logprob: -6.975062847137451
    7. 'max' → logprob: -7.225062847137451
    8. ' res' → logprob: -7.850062847137451
    9. ' left' → logprob: -7.850062847137451
    10. ' flip' → logprob: -7.850062847137451

Token 125: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45166873931884766
    2. 'for' → logprob: -1.3266687393188477
    3. ' for' → logprob: -2.4516687393188477
    4. ' #' → logprob: -4.826668739318848
    5. 'prev' → logprob: -7.326668739318848
    6. 'left' → logprob: -7.951668739318848
    7. '
' → logprob: -8.076668739318848
    8. 'Consider' → logprob: -8.076668739318848
    9. 'Change' → logprob: -8.451668739318848
    10. 'We' → logprob: -8.576668739318848

Token 126: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029963841661810875
    2. ' i' → logprob: -3.529963731765747
    3. '```' → logprob: -10.029963493347168
    4. 'l' → logprob: -10.529963493347168
    5. 'length' → logprob: -10.654963493347168
    6. 'each' → logprob: -10.904963493347168
    7. 'flip' → logprob: -11.404963493347168
    8. 'start' → logprob: -11.654963493347168
    9. 'change' → logprob: -11.654963493347168
    10. 'd' → logprob: -11.654963493347168

Token 127: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03079232946038246
    2. ' i' → logprob: -3.530792236328125
    3. 'index' → logprob: -7.405792236328125
    4. 'possible' → logprob: -9.155792236328125
    5. 'position' → logprob: -9.280792236328125
    6. ' index' → logprob: -9.655792236328125
    7. ' possible' → logprob: -9.655792236328125
    8. '```' → logprob: -9.905792236328125
    9. ' position' → logprob: -11.155792236328125
    10. 'flip' → logprob: -12.155792236328125

Token 128: ' i' (ID: 575)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29425275325775146
    2. ',' → logprob: -2.169252872467041
    3. ' i' → logprob: -2.419252872467041
    4. 'i' → logprob: -4.419252872467041
    5. ' ,' → logprob: -4.419252872467041
    6. ':' → logprob: -4.544252872467041
    7. 'in' → logprob: -4.919252872467041
    8. ' ' → logprob: -5.919252872467041
    9. ' for' → logprob: -6.044252872467041
    10. 'for' → logprob: -7.044252872467041

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45277029275894165
    2. ':' → logprob: -1.2027702331542969
    3. ' ,' → logprob: -3.077770233154297
    4. ' in' → logprob: -4.827770233154297
    5. ' ' → logprob: -5.202770233154297
    6. ' :' → logprob: -6.202770233154297
    7. '<|end|>' → logprob: -7.702770233154297
    8. '):' → logprob: -7.952770233154297
    9. ' =' → logprob: -8.452770233154297
    10. '=' → logprob: -8.452770233154297

Token 130: ' define' (ID: 13174)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23195788264274597
    2. ' ' → logprob: -2.9819579124450684
    3. '<|end|>' → logprob: -3.3569579124450684
    4. 'for' → logprob: -3.4819579124450684
    5. ' if' → logprob: -3.9819579124450684
    6. ' res' → logprob: -4.106957912445068
    7. ' flip' → logprob: -4.231957912445068
    8. ' pass' → logprob: -4.731957912445068
    9. ' #' → logprob: -4.981957912445068
    10. '#' → logprob: -5.231957912445068

Token 131: ' B' (ID: 418)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.9742050170898438
    2. 'diff' → logprob: -1.2242050170898438
    3. ' diff' → logprob: -2.7242050170898438
    4. 'dp' → logprob: -2.9742050170898438
    5. ' flip' → logprob: -3.3492050170898438
    6. 'a' → logprob: -3.5992050170898438
    7. 'change' → logprob: -3.9742050170898438
    8. 'prev' → logprob: -3.9742050170898438
    9. ' flips' → logprob: -3.9742050170898438
    10. 'changes' → logprob: -4.224205017089844

Token 132: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006238049361854792
    2. '[i' → logprob: -5.881237983703613
    3. '=' → logprob: -6.006237983703613
    4. '[' → logprob: -8.006237983703613
    5. '<|end|>' → logprob: -9.131237983703613
    6. '[]' → logprob: -9.631237983703613
    7. ',' → logprob: -9.756237983703613
    8. 's' → logprob: -10.006237983703613
    9. '```' → logprob: -10.256237983703613
    10. ')' → logprob: -10.256237983703613

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002522149821743369
    2. ')' → logprob: -6.877521991729736
    3. '=' → logprob: -7.627521991729736
    4. ' ]' → logprob: -7.627521991729736
    5. ']=' → logprob: -8.377522468566895
    6. ' =' → logprob: -8.627522468566895
    7. '],' → logprob: -10.252522468566895
    8. '])' → logprob: -11.377522468566895
    9. '-' → logprob: -11.377522468566895
    10. ',' → logprob: -11.502522468566895

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38709568977355957
    2. ' =' → logprob: -1.1370956897735596
    3. '<|end|>' → logprob: -9.01209545135498
    4. ' as' → logprob: -9.88709545135498
    5. 'as' → logprob: -11.26209545135498
    6. ',' → logprob: -11.88709545135498
    7. ' ' → logprob: -12.13709545135498
    8. 's' → logprob: -12.63709545135498
    9. '<|end|>' → logprob: -12.63709545135498
    10. ')' → logprob: -12.63709545135498

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2642330527305603
    2. ' ' → logprob: -2.139233112335205
    3. '-' → logprob: -2.389233112335205
    4. '(-' → logprob: -4.764233112335205
    5. ' -' → logprob: -5.389233112335205
    6. '(' → logprob: -6.139233112335205
    7. 'S' → logprob: -6.264233112335205
    8. ' (' → logprob: -6.264233112335205
    9. '(S' → logprob: -6.639233112335205
    10. '0' → logprob: -6.889233112335205

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07423388957977295
    2. '-' → logprob: -2.6992340087890625
    3. '(-' → logprob: -6.6992340087890625
    4. '(' → logprob: -6.8242340087890625
    5. 'S' → logprob: -7.1992340087890625
    6. '0' → logprob: -7.3242340087890625
    7. '(S' → logprob: -8.699234008789062
    8. ' ' → logprob: -8.824234008789062
    9. '-S' → logprob: -9.574234008789062
    10. 'not' → logprob: -9.824234008789062

Token 137: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.028283435851335526
    2. 'if' → logprob: -3.9032833576202393
    3. '-' → logprob: -5.153283596038818
    4. ' -' → logprob: -6.278283596038818
    5. '<|end|>' → logprob: -10.65328311920166
    6. ' ' → logprob: -11.02828311920166
    7. '-if' → logprob: -12.15328311920166
    8. '
' → logprob: -12.65328311920166
    9. '+' → logprob: -14.02828311920166
    10. ')' → logprob: -14.15328311920166

Token 138: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10050846636295319
    2. ' S' → logprob: -2.350508451461792
    3. 'arr' → logprob: -8.600508689880371
    4. ' the' → logprob: -10.475508689880371
    5. 'the' → logprob: -10.850508689880371
    6. '<|end|>' → logprob: -10.850508689880371
    7. ' ' → logprob: -11.100508689880371
    8. '`' → logprob: -11.975508689880371
    9. '(S' → logprob: -11.975508689880371
    10. ' arr' → logprob: -12.100508689880371

Token 139: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00026979928952641785
    2. '[' → logprob: -8.250269889831543
    3. 'i' → logprob: -12.625269889831543
    4. '[I' → logprob: -12.750269889831543
    5. '```' → logprob: -13.875269889831543
    6. '[
' → logprob: -15.375269889831543
    7. ' [' → logprob: -15.500269889831543
    8. ' i' → logprob: -15.875269889831543
    9. '[S' → logprob: -15.875269889831543
    10. '
' → logprob: -16.625268936157227

Token 140: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02004694566130638
    2. ']!=' → logprob: -4.145046710968018
    3. ']==' → logprob: -5.770046710968018
    4. '[' → logprob: -8.270047187805176
    5. '[i' → logprob: -8.520047187805176
    6. ' ]' → logprob: -8.770047187805176
    7. '!=' → logprob: -9.020047187805176
    8. ' !=' → logprob: -10.645047187805176
    9. '```' → logprob: -10.770047187805176
    10. '==' → logprob: -10.770047187805176

Token 141: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5520309209823608
    2. '!=' → logprob: -1.0520309209823608
    3. '==' → logprob: -3.1770310401916504
    4. ' ==' → logprob: -4.05203104019165
    5. ' ' → logprob: -4.30203104019165
    6. '=' → logprob: -7.80203104019165
    7. ' is' → logprob: -7.80203104019165
    8. '[' → logprob: -8.177030563354492
    9. ']' → logprob: -8.427030563354492
    10. ' else' → logprob: -9.177030563354492

Token 142: ' i' (ID: 575)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6538306474685669
    2. ' S' → logprob: -1.528830647468567
    3. '0' → logprob: -2.1538305282592773
    4. ' ' → logprob: -2.2788305282592773
    5. '1' → logprob: -3.1538305282592773
    6. ' (' → logprob: -7.028830528259277
    7. '(S' → logprob: -7.403830528259277
    8. 'B' → logprob: -8.653830528259277
    9. '(' → logprob: -8.903830528259277
    10. ' B' → logprob: -9.716330528259277

Token 143: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2710050046443939
    2. ' %' → logprob: -1.5210050344467163
    3. ' else' → logprob: -4.396005153656006
    4. ',' → logprob: -5.896005153656006
    5. ' ' → logprob: -6.271005153656006
    6. 'else' → logprob: -6.396005153656006
    7. '
' → logprob: -9.896004676818848
    8. ' ,' → logprob: -10.021004676818848
    9. '<|end|>' → logprob: -10.271004676818848
    10. 's' → logprob: -10.646004676818848

Token 144: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16057565808296204
    2. ' ' → logprob: -1.9105756282806396
    3. '1' → logprob: -9.410575866699219
    4. '%' → logprob: -9.410575866699219
    5. 's' → logprob: -10.285575866699219
    6. '<|end|>' → logprob: -10.660575866699219
    7. '
' → logprob: -10.785575866699219
    8. '```' → logprob: -11.035575866699219
    9. '0' → logprob: -11.160575866699219
    10. ' %' → logprob: -11.285575866699219

Token 145: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.027970964089035988
    2. 'else' → logprob: -3.902971029281616
    3. ',' → logprob: -5.277970790863037
    4. ' ' → logprob: -6.152970790863037
    5. ' ,' → logprob: -9.527971267700195
    6. '0' → logprob: -10.527971267700195
    7. '<|end|>' → logprob: -11.527971267700195
    8. '	else' → logprob: -11.652971267700195
    9. '%' → logprob: -11.777971267700195
    10. '==' → logprob: -12.152971267700195

Token 146: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5764846801757812
    2. '0' → logprob: -0.8264846801757812
    3. ' -' → logprob: -7.826484680175781
    4. '-' → logprob: -9.201484680175781
    5. '1' → logprob: -10.451484680175781
    6. '   ' → logprob: -12.638984680175781
    7. ' (' → logprob: -13.326484680175781
    8. '  ' → logprob: -13.388984680175781
    9. ',' → logprob: -13.826484680175781
    10. '(' → logprob: -13.888984680175781

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12951475381851196
    2. ' ' → logprob: -2.129514694213867
    3. '-' → logprob: -6.504514694213867
    4. ' -' → logprob: -6.879514694213867
    5. '1' → logprob: -10.504514694213867
    6. '   ' → logprob: -11.379514694213867
    7. '  ' → logprob: -13.067014694213867
    8. ' ' → logprob: -13.504514694213867
    9. '(' → logprob: -13.692014694213867
    10. ' (' → logprob: -13.754514694213867

Token 148: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04517895355820656
    2. 'B' → logprob: -3.4201788902282715
    3. ',' → logprob: -5.9201788902282715
    4. '\n' → logprob: -6.4201788902282715
    5. ',
' → logprob: -6.5451788902282715
    6. '#' → logprob: -6.7951788902282715
    7. '<|end|>' → logprob: -7.4201788902282715
    8. 'def' → logprob: -7.6701788902282715
    9. '[' → logprob: -7.6701788902282715
    10. ')' → logprob: -7.6701788902282715

Token 149: 'matches' (ID: 44239)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018965097842738032
    2. ' )' → logprob: -6.751896381378174
    3. ')
' → logprob: -7.376896381378174
    4. ',' → logprob: -10.501896858215332
    5. '
' → logprob: -11.376896858215332
    6. '<|end|>' → logprob: -11.501896858215332
    7. '```' → logprob: -11.876896858215332
    8. ')

' → logprob: -11.876896858215332
    9. '#' → logprob: -12.126896858215332
    10. '),' → logprob: -12.251896858215332

Token 150: ' alt' (ID: 5001)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.7268449068069458
    2. 'pattern' → logprob: -0.8518449068069458
    3. ' the' → logprob: -3.3518447875976562
    4. 'par' → logprob: -3.9768447875976562
    5. 'the' → logprob: -4.226844787597656
    6. ' or' → logprob: -4.976844787597656
    7. ' parity' → logprob: -5.351844787597656
    8. 'or' → logprob: -6.101844787597656
    9. ')' → logprob: -6.351844787597656
    10. 'expected' → logprob: -6.726844787597656

Token 151: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.3195531666278839
    2. 'pattern' → logprob: -1.8195531368255615
    3. ')' → logprob: -3.1945531368255615
    4. '_pattern' → logprob: -3.3195531368255615
    5. ' sequence' → logprob: -4.444553375244141
    6. '_' → logprob: -4.569553375244141
    7. '_)' → logprob: -5.569553375244141
    8. 'sequence' → logprob: -6.319553375244141
    9. '),' → logprob: -6.444553375244141
    10. ')_' → logprob: -6.569553375244141

Token 152: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011899876408278942
    2. ',' → logprob: -7.751190185546875
    3. ')
' → logprob: -8.001190185546875
    4. ' )' → logprob: -8.376190185546875
    5. '),' → logprob: -9.001190185546875
    6. ' else' → logprob: -11.501190185546875
    7. '[i' → logprob: -11.626190185546875
    8. '```' → logprob: -12.126190185546875
    9. ')

' → logprob: -12.501190185546875
    10. ').' → logprob: -12.501190185546875

Token 153: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09969828277826309
    2. '),' → logprob: -2.599698305130005
    3. ',' → logprob: -4.599698066711426
    4. ' at' → logprob: -5.849698066711426
    5. ')
' → logprob: -6.599698066711426
    6. ' )' → logprob: -6.724698066711426
    7. ' or' → logprob: -7.349698066711426
    8. 'at' → logprob: -7.474698066711426
    9. ' for' → logprob: -7.474698066711426
    10. 'def' → logprob: -7.599698066711426

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05942680314183235
    2. '),' → logprob: -3.309426784515381
    3. ' or' → logprob: -4.809426784515381
    4. ',' → logprob: -5.434426784515381
    5. ' at' → logprob: -6.309426784515381
    6. ' else' → logprob: -6.559426784515381
    7. 'or' → logprob: -7.059426784515381
    8. 'else' → logprob: -7.059426784515381
    9. ' )' → logprob: -7.184426784515381
    10. ')
' → logprob: -7.309426784515381

Token 155: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2740020155906677
    2. 'B' → logprob: -2.8990020751953125
    3. ',' → logprob: -3.0240020751953125
    4. '```' → logprob: -3.5240020751953125
    5. '\n' → logprob: -3.5240020751953125
    6. ')' → logprob: -4.0240020751953125
    7. ',
' → logprob: -4.0240020751953125
    8. ')
' → logprob: -5.2740020751953125
    9. '[' → logprob: -5.3990020751953125
    10. '#' → logprob: -5.5240020751953125

Token 156: ' and' (ID: 326)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006437653210014105
    2. ' B' → logprob: -6.5064377784729
    3. '
' → logprob: -6.6314377784729
    4. '#' → logprob: -6.7564377784729
    5. ' 
' → logprob: -7.3814377784729
    6. ' ' → logprob: -8.131437301635742
    7. ',' → logprob: -8.506437301635742
    8. 'def' → logprob: -8.756437301635742
    9. '  
' → logprob: -8.756437301635742
    10. '```' → logprob: -8.881437301635742

Token 157: ' C' (ID: 363)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1929883360862732
    2. ' B' → logprob: -2.317988395690918
    3. 'C' → logprob: -3.317988395690918
    4. '
' → logprob: -4.317988395690918
    5. 'for' → logprob: -4.442988395690918
    6. ' for' → logprob: -5.067988395690918
    7. ' C' → logprob: -5.692988395690918
    8. ' ' → logprob: -6.567988395690918
    9. 'def' → logprob: -7.067988395690918
    10. '#' → logprob: -7.192988395690918

Token 158: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001631378778256476
    2. ' =' → logprob: -7.001631259918213
    3. '[' → logprob: -7.626631259918213
    4. '=' → logprob: -8.626631736755371
    5. ' [' → logprob: -10.376631736755371
    6. '=[' → logprob: -11.376631736755371
    7. ' =[' → logprob: -12.626631736755371
    8. '[]' → logprob: -13.876631736755371
    9. '
' → logprob: -14.126631736755371
    10. '[
' → logprob: -14.251631736755371

Token 159: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021796426735818386
    2. ']=' → logprob: -6.7521796226501465
    3. '=' → logprob: -7.2521796226501465
    4. ' ]' → logprob: -8.252180099487305
    5. ' =' → logprob: -10.627180099487305
    6. '[' → logprob: -11.877180099487305
    7. ')' → logprob: -13.127180099487305
    8. ' ' → logprob: -13.502180099487305
    9. '[i' → logprob: -14.502180099487305
    10. ']
' → logprob: -14.752180099487305

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693148672580719
    2. ' =' → logprob: -0.693148672580719
    3. ' ' → logprob: -15.193148612976074
    4. ')' → logprob: -15.193148612976074
    5. '[' → logprob: -15.318148612976074
    6. ' =[' → logprob: -16.19314956665039
    7. ',' → logprob: -16.44314956665039
    8. '=
' → logprob: -16.44314956665039
    9. '#' → logprob: -16.56814956665039
    10. '=[' → logprob: -16.69314956665039

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6400283575057983
    2. ' ' → logprob: -0.7650283575057983
    3. ' [' → logprob: -5.515028476715088
    4. '[' → logprob: -6.015028476715088
    5. '0' → logprob: -7.390028476715088
    6. ' list' → logprob: -10.01502799987793
    7. 'int' → logprob: -10.26502799987793
    8. 'list' → logprob: -10.39002799987793
    9. '[i' → logprob: -10.82752799987793
    10. 'S' → logprob: -10.82752799987793

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023433560505509377
    2. ' ' → logprob: -4.023433685302734
    3. '0' → logprob: -5.648433685302734
    4. '[' → logprob: -6.773433685302734
    5. ' [' → logprob: -7.523433685302734
    6. '[i' → logprob: -11.273433685302734
    7. 'int' → logprob: -11.398433685302734
    8. 'B' → logprob: -12.273433685302734
    9. '[int' → logprob: -12.523433685302734
    10. 'list' → logprob: -12.835933685302734

Token 163: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.004197828937321901
    2. 'if' → logprob: -5.504197597503662
    3. ' ' → logprob: -9.50419807434082
    4. ' =' → logprob: -10.62919807434082
    5. '=' → logprob: -11.25419807434082
    6. '<|end|>' → logprob: -13.37919807434082
    7. 'f' → logprob: -14.00419807434082
    8. ' ' → logprob: -14.12919807434082
    9. ')' → logprob: -14.25419807434082
    10. '[' → logprob: -14.50419807434082

Token 164: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.3132691979408264
    2. 'S' → logprob: -1.3132691383361816
    3. ' ' → logprob: -12.31326961517334
    4. ' ' → logprob: -13.93826961517334
    5. '(S' → logprob: -14.18826961517334
    6. ' (' → logprob: -14.43826961517334
    7. ' not' → logprob: -15.68826961517334
    8. 'abs' → logprob: -15.81326961517334
    9. '   ' → logprob: -15.93826961517334
    10. '	S' → logprob: -16.563268661499023

Token 165: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00036561701563186944
    2. '[' → logprob: -8.000365257263184
    3. ' [' → logprob: -11.250365257263184
    4. '[
' → logprob: -12.250365257263184
    5. '[C' → logprob: -12.625365257263184
    6. '[int' → logprob: -12.875365257263184
    7. ' ' → logprob: -13.750365257263184
    8. 'C' → logprob: -13.875365257263184
    9. '```' → logprob: -14.000365257263184
    10. 'i' → logprob: -14.250365257263184

Token 166: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1404845267534256
    2. ' ==' → logprob: -2.890484571456909
    3. '==' → logprob: -3.140484571456909
    4. '[' → logprob: -3.890484571456909
    5. ']' → logprob: -4.64048433303833
    6. ']==' → logprob: -6.51548433303833
    7. '[]' → logprob: -8.890484809875488
    8. '```' → logprob: -9.015484809875488
    9. ' ' → logprob: -9.140484809875488
    10. ')' → logprob: -9.390484809875488

Token 167: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.41216710209846497
    2. ' ==' → logprob: -1.4121670722961426
    3. '[i' → logprob: -2.4121670722961426
    4. '[' → logprob: -5.912167072296143
    5. '!=' → logprob: -6.912167072296143
    6. ' !=' → logprob: -8.0371675491333
    7. '```' → logprob: -9.0371675491333
    8. ' ' → logprob: -9.2871675491333
    9. ']==' → logprob: -9.4121675491333
    10. '[]' → logprob: -9.7871675491333

Token 168: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12209824472665787
    2. '(i' → logprob: -2.997098207473755
    3. '1' → logprob: -3.497098207473755
    4. '(' → logprob: -3.997098207473755
    5. ' ' → logprob: -4.122098445892334
    6. '((' → logprob: -10.372097969055176
    7. ' ' → logprob: -10.872097969055176
    8. ' ((' → logprob: -11.247097969055176
    9. ' i' → logprob: -11.372097969055176
    10. '(not' → logprob: -11.372097969055176

Token 169: 'i' (ID: 72)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8884294629096985
    2. ' (' → logprob: -1.0134294033050537
    3. '(i' → logprob: -1.8884294033050537
    4. '(' → logprob: -2.8884294033050537
    5. ' ' → logprob: -4.013429641723633
    6. '   ' → logprob: -8.013429641723633
    7. '
' → logprob: -9.763429641723633
    8. 'i' → logprob: -9.763429641723633
    9. '0' → logprob: -9.888429641723633
    10. '  ' → logprob: -11.263429641723633

Token 170: '+' (ID: 10)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0004257892433088273
    2. ' %' → logprob: -8.125425338745117
    3. '1' → logprob: -9.750425338745117
    4. '
' → logprob: -10.875425338745117
    5. '+' → logprob: -11.375425338745117
    6. 'i' → logprob: -12.000425338745117
    7. ' ' → logprob: -12.125425338745117
    8. '   ' → logprob: -12.250425338745117
    9. '```' → logprob: -12.500425338745117
    10. ')%' → logprob: -12.625425338745117

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010366239439463243
    2. ' ' → logprob: -9.250103950500488
    3. ')' → logprob: -13.375103950500488
    4. '
' → logprob: -13.500103950500488
    5. '%' → logprob: -13.750103950500488
    6. 'i' → logprob: -13.750103950500488
    7. '```' → logprob: -14.375103950500488
    8. '(i' → logprob: -15.250103950500488
    9. '   ' → logprob: -15.375103950500488
    10. '`' → logprob: -15.687603950500488

Token 172: ')%' (ID: 57656)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.018971992656588554
    2. ')%' → logprob: -4.643971920013428
    3. ' %' → logprob: -5.143971920013428
    4. ')' → logprob: -5.768971920013428
    5. '%)' → logprob: -10.143972396850586
    6. '%i' → logprob: -10.268972396850586
    7. '2' → logprob: -10.518972396850586
    8. '1' → logprob: -10.643972396850586
    9. ' )' → logprob: -11.143972396850586
    10. '
' → logprob: -11.393972396850586

Token 173: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015127197839319706
    2. ' ' → logprob: -6.50151252746582
    3. '```' → logprob: -12.12651252746582
    4. '`' → logprob: -13.93901252746582
    5. '1' → logprob: -14.37651252746582
    6. '
' → logprob: -14.43901252746582
    7. '(' → logprob: -14.68901252746582
    8. '{' → logprob: -15.37651252746582
    9. ')' → logprob: -15.43901252746582
    10. '
' → logprob: -15.62651252746582

Token 174: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49829423427581787
    2. ']' → logprob: -1.2482942342758179
    3. '<|end|>' → logprob: -2.4982943534851074
    4. '[' → logprob: -4.623294353485107
    5. ' ' → logprob: -6.623294353485107
    6. ',' → logprob: -6.623294353485107
    7. ' ]' → logprob: -6.748294353485107
    8. '<|end|>' → logprob: -6.873294353485107
    9. '
' → logprob: -6.998294353485107
    10. '[]' → logprob: -7.248294353485107

Token 175: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18504270911216736
    2. '0' → logprob: -2.0600426197052
    3. '1' → logprob: -3.1850426197052
    4. ' ' → logprob: -9.810042381286621
    5. ')' → logprob: -11.060042381286621
    6. '```' → logprob: -11.310042381286621
    7. '`' → logprob: -12.560042381286621
    8. '[' → logprob: -13.310042381286621
    9. ''' → logprob: -13.560042381286621
    10. '  ' → logprob: -13.810042381286621

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12863372266292572
    2. ' ' → logprob: -2.128633737564087
    3. '1' → logprob: -6.378633499145508
    4. ' ' → logprob: -13.128633499145508
    5. '```' → logprob: -13.316133499145508
    6. '   ' → logprob: -14.316133499145508
    7. '[' → logprob: -14.753633499145508
    8. ')' → logprob: -14.878633499145508
    9. '  ' → logprob: -14.941133499145508
    10. '
' → logprob: -16.003633499145508

Token 177: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5825124382972717
    2. '<|end|>' → logprob: -0.9575124382972717
    3. ')' → logprob: -4.082512378692627
    4. ']' → logprob: -5.082512378692627
    5. 'import' → logprob: -5.207512378692627
    6. ',' → logprob: -5.207512378692627
    7. '<|end|>' → logprob: -5.332512378692627
    8. '#' → logprob: -5.582512378692627
    9. ',
' → logprob: -6.082512378692627
    10. '\n' → logprob: -6.332512378692627

Token 178: 'matches' (ID: 44239)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26225417852401733
    2. '1' → logprob: -1.762254238128662
    3. ' ' → logprob: -3.137254238128662
    4. '0' → logprob: -4.637254238128662
    5. ' )' → logprob: -5.387254238128662
    6. '#' → logprob: -8.387253761291504
    7. '):' → logprob: -8.512253761291504
    8. '```' → logprob: -8.762253761291504
    9. '<|end|>' → logprob: -9.012253761291504
    10. 'def' → logprob: -9.387253761291504

Token 179: ' alt' (ID: 5001)
  Prédit: ' alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alt' → logprob: -0.2568696439266205
    2. 'alt' → logprob: -1.5068696737289429
    3. ' alternative' → logprob: -6.256869792938232
    4. 'alternate' → logprob: -7.006869792938232
    5. 'alternative' → logprob: -7.131869792938232
    6. ' alternate' → logprob: -7.506869792938232
    7. ' pattern' → logprob: -8.631869316101074
    8. ' ' → logprob: -8.756869316101074
    9. '2' → logprob: -9.506869316101074
    10. 'pattern' → logprob: -9.756869316101074

Token 180: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.07917474955320358
    2. 'pattern' → logprob: -2.704174757003784
    3. ' alt' → logprob: -4.829174518585205
    4. 'alt' → logprob: -7.204174518585205
    5. '_pattern' → logprob: -8.454174995422363
    6. ' alternative' → logprob: -9.204174995422363
    7. 'alternative' → logprob: -10.329174995422363
    8. ')' → logprob: -10.579174995422363
    9. '_alt' → logprob: -10.829174995422363
    10. ' ' → logprob: -10.829174995422363

Token 181: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4786604046821594
    2. '2' → logprob: -0.9786604046821594
    3. ')' → logprob: -6.103660583496094
    4. '1' → logprob: -6.853660583496094
    5. '0' → logprob: -6.978660583496094
    6. ' )' → logprob: -8.478660583496094
    7. '```' → logprob: -10.103660583496094
    8. ' two' → logprob: -10.228660583496094
    9. ' ' → logprob: -10.853660583496094
    10. '#' → logprob: -12.291160583496094

Token 182: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2855231761932373
    2. ' ' → logprob: -1.7855231761932373
    3. '2' → logprob: -2.5355231761932373
    4. '0' → logprob: -7.160523414611816
    5. ')' → logprob: -7.785523414611816
    6. '```' → logprob: -8.910523414611816
    7. '(' → logprob: -10.535523414611816
    8. '   ' → logprob: -11.535523414611816
    9. '+' → logprob: -11.723023414611816
    10. '#' → logprob: -11.973023414611816

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002689444227144122
    2. ')
' → logprob: -6.127689361572266
    3. ' )' → logprob: -7.877689361572266
    4. '#' → logprob: -9.752689361572266
    5. ')

' → logprob: -11.127689361572266
    6. 'import' → logprob: -12.002689361572266
    7. ')#' → logprob: -12.002689361572266
    8. ')`' → logprob: -12.502689361572266
    9. ' )
' → logprob: -12.752689361572266
    10. '),' → logprob: -13.002689361572266

Token 184: '#
' (ID: 11240)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4702491760253906
    2. '<|end|>' → logprob: -1.4702491760253906
    3. ')' → logprob: -2.5952491760253906
    4. '#' → logprob: -3.4702491760253906
    5. 'B' → logprob: -3.9702491760253906
    6. 'for' → logprob: -5.595249176025391
    7. 'def' → logprob: -5.720249176025391
    8. 'diff' → logprob: -6.095249176025391
    9. '```' → logprob: -6.470249176025391
    10. ',' → logprob: -6.720249176025391

Token 185: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5217170119285583
    2. '
' → logprob: -1.8967170715332031
    3. 'flip' → logprob: -2.271717071533203
    4. '#' → logprob: -2.896717071533203
    5. 'B' → logprob: -4.271717071533203
    6. 'for' → logprob: -4.521717071533203
    7. 'def' → logprob: -4.646717071533203
    8. ' flip' → logprob: -4.646717071533203
    9. 'd' → logprob: -5.021717071533203
    10. 'import' → logprob: -5.271717071533203

Token 186: ' Fl' (ID: 3632)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.045758605003357
    2. '#' → logprob: -1.295758605003357
    3. 'D' → logprob: -2.1707587242126465
    4. 'from' → logprob: -2.5457587242126465
    5. 'import' → logprob: -2.6707587242126465
    6. 'B' → logprob: -2.7957587242126465
    7. 'flip' → logprob: -4.0457587242126465
    8. 'prefix' → logprob: -4.7957587242126465
    9. 'def' → logprob: -4.9207587242126465
    10. 'd' → logprob: -5.5457587242126465

Token 187: 'ipping' (ID: 5792)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.008717631921172142
    2. 'i' → logprob: -5.3837175369262695
    3. 'ips' → logprob: -5.8837175369262695
    4. 'ipping' → logprob: -7.5087175369262695
    5. '#' → logprob: -7.6337175369262695
    6. 'ipped' → logprob: -9.38371753692627
    7. 'a' → logprob: -10.38371753692627
    8. '```' → logprob: -10.38371753692627
    9. 'o' → logprob: -10.50871753692627
    10. 'u' → logprob: -10.88371753692627

Token 188: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12110153585672379
    2. ' the' → logprob: -3.2461016178131104
    3. '<|end|>' → logprob: -3.4961016178131104
    4. 'a' → logprob: -4.496101379394531
    5. ' any' → logprob: -4.871101379394531
    6. ' one' → logprob: -5.371101379394531
    7. ')' → logprob: -5.371101379394531
    8. 'the' → logprob: -5.496101379394531
    9. ' ' → logprob: -5.996101379394531
    10. ' an' → logprob: -6.371101379394531

Token 189: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.2903147339820862
    2. ' sub' → logprob: -1.4153146743774414
    3. '0' → logprob: -6.165314674377441
    4. ' ' → logprob: -6.665314674377441
    5. ' segment' → logprob: -6.790314674377441
    6. 'segment' → logprob: -6.790314674377441
    7. 's' → logprob: -7.040314674377441
    8. '1' → logprob: -7.290314674377441
    9. 'single' → logprob: -8.415314674377441
    10. 'bit' → logprob: -8.415314674377441

Token 190: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.00020616286201402545
    2. '#' → logprob: -9.500205993652344
    3. 'arr' → logprob: -9.500205993652344
    4. '[' → logprob: -10.875205993652344
    5. '_array' → logprob: -11.375205993652344
    6. ' array' → logprob: -11.750205993652344
    7. ']' → logprob: -12.375205993652344
    8. '[
' → logprob: -13.250205993652344
    9. 'arry' → logprob: -13.375205993652344
    10. ')' → logprob: -13.375205993652344

Token 191: ' [' (ID: 723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9081956148147583
    2. ' can' → logprob: -2.4081954956054688
    3. ',' → logprob: -2.6581954956054688
    4. ']' → logprob: -2.7831954956054688
    5. 'def' → logprob: -2.7831954956054688
    6. '<|end|>' → logprob: -3.2831954956054688
    7. '=' → logprob: -3.4081954956054688
    8. ' =' → logprob: -3.5331954956054688
    9. ' will' → logprob: -3.9081954956054688
    10. ' would' → logprob: -4.033195495605469

Token 192: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.33811524510383606
    2. 'i' → logprob: -1.3381152153015137
    3. 'L' → logprob: -4.338115215301514
    4. ' l' → logprob: -4.963115215301514
    5. ' i' → logprob: -5.713115215301514
    6. ' L' → logprob: -7.338115215301514
    7. ')' → logprob: -9.088115692138672
    8. 'start' → logprob: -9.338115692138672
    9. 'a' → logprob: -9.463115692138672
    10. ']' → logprob: -9.588115692138672

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04586734622716904
    2. ',r' → logprob: -3.170867443084717
    3. ' ,' → logprob: -6.170867443084717
    4. ',right' → logprob: -8.295866966247559
    5. ',l' → logprob: -8.920866966247559
    6. 'r' → logprob: -9.045866966247559
    7. ',
' → logprob: -9.795866966247559
    8. '..' → logprob: -10.295866966247559
    9. ':r' → logprob: -10.295866966247559
    10. ',j' → logprob: -10.420866966247559

Token 194: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31326571106910706
    2. ' r' → logprob: -1.3132656812667847
    3. ',' → logprob: -13.938265800476074
    4. ',r' → logprob: -13.938265800476074
    5. '	r' → logprob: -14.313265800476074
    6. ' ' → logprob: -14.313265800476074
    7. 'u' → logprob: -15.063265800476074
    8. '
' → logprob: -16.313264846801758
    9. ':r' → logprob: -16.313264846801758
    10. '   ' → logprob: -16.438264846801758

Token 195: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009455301333218813
    2. ' ]' → logprob: -7.500945568084717
    3. ']
' → logprob: -8.500945091247559
    4. ']:' → logprob: -9.250945091247559
    5. ']:
' → logprob: -10.375945091247559
    6. '+' → logprob: -11.250945091247559
    7. ')' → logprob: -11.750945091247559
    8. '],' → logprob: -11.750945091247559
    9. ']+' → logprob: -12.125945091247559
    10. ']

' → logprob: -12.375945091247559

Token 196: ' means' (ID: 4748)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9073470234870911
    2. ')' → logprob: -1.7823469638824463
    3. ' will' → logprob: -1.7823469638824463
    4. ']' → logprob: -2.0323469638824463
    5. ' flips' → logprob: -3.0323469638824463
    6. ' would' → logprob: -3.7823469638824463
    7. 'def' → logprob: -4.282347202301025
    8. ' can' → logprob: -5.282347202301025
    9. ',' → logprob: -5.282347202301025
    10. ' means' → logprob: -6.032347202301025

Token 197: ' flipping' (ID: 110780)
  Prédit: ' flipping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flipping' → logprob: -0.20797628164291382
    2. 'fl' → logprob: -2.4579763412475586
    3. ' togg' → logprob: -2.9579763412475586
    4. ' that' → logprob: -4.457976341247559
    5. ' for' → logprob: -4.582976341247559
    6. ' in' → logprob: -4.707976341247559
    7. 'for' → logprob: -5.207976341247559
    8. ' we' → logprob: -5.332976341247559
    9. ' ' → logprob: -6.457976341247559
    10. 'that' → logprob: -6.957976341247559

Token 198: ' bits' (ID: 18189)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.2636948227882385
    2. ' the' → logprob: -2.6386947631835938
    3. 'all' → logprob: -2.7636947631835938
    4. '<|end|>' → logprob: -3.0136947631835938
    5. 'the' → logprob: -3.6386947631835938
    6. ' S' → logprob: -5.013694763183594
    7. 'S' → logprob: -5.513694763183594
    8. ' for' → logprob: -6.013694763183594
    9. 's' → logprob: -6.138694763183594
    10. ' ' → logprob: -6.263694763183594

Token 199: ' in' (ID: 306)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.5891227126121521
    2. ' in' → logprob: -1.0891227722167969
    3. ' from' → logprob: -3.464122772216797
    4. 'from' → logprob: -3.714122772216797
    5. 'in' → logprob: -4.714122772216797
    6. ' of' → logprob: -4.839122772216797
    7. ' ' → logprob: -5.339122772216797
    8. 's' → logprob: -5.339122772216797
    9. '[i' → logprob: -5.714122772216797
    10. ' within' → logprob: -5.839122772216797

Token 200: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.32745710015296936
    2. ' S' → logprob: -1.452457070350647
    3. ' the' → logprob: -4.327456951141357
    4. ' that' → logprob: -4.452456951141357
    5. 'the' → logprob: -4.702456951141357
    6. 'that' → logprob: -5.827456951141357
    7. 'B' → logprob: -6.202456951141357
    8. 'l' → logprob: -6.452456951141357
    9. '[l' → logprob: -6.577456951141357
    10. ' B' → logprob: -7.577456951141357

Token 201: '[l' (ID: 38286)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8214235901832581
    2. '[l' → logprob: -1.5714235305786133
    3. ']' → logprob: -2.5714235305786133
    4. '#' → logprob: -2.9464235305786133
    5. '[i' → logprob: -3.1964235305786133
    6. '[' → logprob: -3.1964235305786133
    7. ',' → logprob: -3.3214235305786133
    8. 'def' → logprob: -3.5714235305786133
    9. '.' → logprob: -3.6964235305786133
    10. 'import' → logprob: -4.821423530578613

Token 202: ':r' (ID: 118417)
  Prédit: ':r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':r' → logprob: -0.036028627306222916
    2. ':' → logprob: -3.6610286235809326
    3. 'r' → logprob: -5.536028861999512
    4. ',' → logprob: -6.661028861999512
    5. '...' → logprob: -6.661028861999512
    6. '..' → logprob: -7.036028861999512
    7. ',r' → logprob: -7.411028861999512
    8. ']' → logprob: -7.536028861999512
    9. ' r' → logprob: -7.911028861999512
    10. ' :' → logprob: -8.036028861999512

Token 203: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0038067339919507504
    2. ' +' → logprob: -5.7538065910339355
    3. ']+' → logprob: -8.378807067871094
    4. 'r' → logprob: -8.878807067871094
    5. ']' → logprob: -9.003807067871094
    6. 's' → logprob: -10.128807067871094
    7. '],' → logprob: -10.753807067871094
    8. '[' → logprob: -11.253807067871094
    9. 'd' → logprob: -11.378807067871094
    10. ' ' → logprob: -11.753807067871094

Token 204: ' so' (ID: 813)
  Prédit: ' which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.6322007775306702
    2. ' turning' → logprob: -2.0072007179260254
    3. '#' → logprob: -2.5072007179260254
    4. ' ' → logprob: -3.1322007179260254
    5. ')' → logprob: -3.3822007179260254
    6. ' i' → logprob: -3.3822007179260254
    7. 'which' → logprob: -3.5072007179260254
    8. ' flipping' → logprob: -3.5072007179260254
    9. ' so' → logprob: -4.632200717926025
    10. ' l' → logprob: -5.257200717926025

Token 205: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3362700939178467
    2. 'for' → logprob: -1.3362700939178467
    3. '#' → logprob: -1.9612700939178467
    4. ' we' → logprob: -2.4612700939178467
    5. 'we' → logprob: -2.8362700939178467
    6. ' the' → logprob: -3.0862700939178467
    7. 'the' → logprob: -3.4612700939178467
    8. 'B' → logprob: -3.7112700939178467
    9. ' S' → logprob: -4.336270332336426
    10. 'def' → logprob: -4.336270332336426

Token 206: ' final' (ID: 1721)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1272131204605103
    2. ' next' → logprob: -1.7522131204605103
    3. 'B' → logprob: -2.0022130012512207
    4. ' B' → logprob: -3.0022130012512207
    5. 'next' → logprob: -3.5022130012512207
    6. 'flip' → logprob: -3.6272130012512207
    7. 'difference' → logprob: -3.7522130012512207
    8. ' effect' → logprob: -3.7522130012512207
    9. 'pattern' → logprob: -4.002213001251221
    10. 'effect' → logprob: -4.127213001251221

Token 207: ' matching' (ID: 20238)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2243810892105103
    2. '#' → logprob: -1.8493810892105103
    3. 'pattern' → logprob: -2.4743809700012207
    4. 'result' → logprob: -2.7243809700012207
    5. ' pattern' → logprob: -2.8493809700012207
    6. ' ' → logprob: -3.3493809700012207
    7. ' S' → logprob: -3.4743809700012207
    8. ' array' → logprob: -3.4743809700012207
    9. 'res' → logprob: -3.4743809700012207
    10. '
' → logprob: -3.7243809700012207

Token 208: ' changes' (ID: 6629)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.6577810645103455
    2. ' pattern' → logprob: -2.1577811241149902
    3. 'status' → logprob: -2.9077811241149902
    4. 'array' → logprob: -3.0327811241149902
    5. 'score' → logprob: -3.5327811241149902
    6. 'scores' → logprob: -3.5327811241149902
    7. ' array' → logprob: -3.6577811241149902
    8. ' arrays' → logprob: -3.9077811241149902
    9. ']' → logprob: -4.15778112411499
    10. 's' → logprob: -4.53278112411499

Token 209: ' accordingly' (ID: 44041)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0803101062774658
    2. ' at' → logprob: -2.080310106277466
    3. ' to' → logprob: -2.080310106277466
    4. ',' → logprob: -2.955310106277466
    5. ' =' → logprob: -3.330310106277466
    6. ' for' → logprob: -3.455310106277466
    7. '[' → logprob: -3.580310106277466
    8. 'for' → logprob: -3.580310106277466
    9. ')' → logprob: -3.705310106277466
    10. 'to' → logprob: -3.955310106277466

Token 210: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23199161887168884
    2. '<|end|>' → logprob: -2.7319915294647217
    3. ')' → logprob: -2.8569915294647217
    4. '#' → logprob: -3.6069915294647217
    5. ',' → logprob: -4.231991767883301
    6. ',
' → logprob: -4.606991767883301
    7. '.' → logprob: -5.106991767883301
    8. 'def' → logprob: -5.231991767883301
    9. 'import' → logprob: -5.606991767883301
    10. 'B' → logprob: -5.606991767883301

Token 211: '#
' (ID: 11240)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07506372779607773
    2. '<|end|>' → logprob: -2.950063705444336
    3. '\n' → logprob: -5.325063705444336
    4. '#' → logprob: -5.325063705444336
    5. ')' → logprob: -5.700063705444336
    6. '```' → logprob: -6.575063705444336
    7. ' 
' → logprob: -7.075063705444336
    8. '\' → logprob: -7.200063705444336
    9. 'def' → logprob: -7.325063705444336
    10. ',' → logprob: -7.700063705444336

Token 212: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.29649055004119873
    2. 'flip' → logprob: -2.5464906692504883
    3. 'B' → logprob: -3.2964906692504883
    4. '#' → logprob: -4.046490669250488
    5. 'from' → logprob: -4.171490669250488
    6. 'n' → logprob: -4.171490669250488
    7. 'dp' → logprob: -4.296490669250488
    8. 'import' → logprob: -4.296490669250488
    9. ' flip' → logprob: -4.921490669250488
    10. ' diff' → logprob: -4.921490669250488

Token 213: ' We' (ID: 1416)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4226357638835907
    2. 'B' → logprob: -1.547635793685913
    3. 'prefix' → logprob: -3.422635793685913
    4. '#' → logprob: -3.797635793685913
    5. 'flip' → logprob: -3.797635793685913
    6. 'dp' → logprob: -3.922635793685913
    7. 'import' → logprob: -5.172635555267334
    8. 'from' → logprob: -5.172635555267334
    9. ' B' → logprob: -5.547635555267334
    10. ' diff' → logprob: -6.047635555267334

Token 214: ' want' (ID: 1682)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37884587049484253
    2. '=' → logprob: -1.2538459300994873
    3. ' need' → logprob: -4.628845691680908
    4. ' want' → logprob: -5.003845691680908
    5. 'import' → logprob: -5.503845691680908
    6. ' can' → logprob: -5.753845691680908
    7. ' continue' → logprob: -6.253845691680908
    8. '#' → logprob: -6.878845691680908
    9. 'continue' → logprob: -7.253845691680908
    10. 'need' → logprob: -7.878845691680908

Token 215: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05502954125404358
    2. 'to' → logprob: -2.9300296306610107
    3. ' =' → logprob: -9.68002986907959
    4. 'def' → logprob: -10.93002986907959
    5. '=' → logprob: -11.18002986907959
    6. ' ' → logprob: -11.30502986907959
    7. '#' → logprob: -11.68002986907959
    8. 'import' → logprob: -12.18002986907959
    9. ',' → logprob: -12.55502986907959
    10. ' for' → logprob: -13.05502986907959

Token 216: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0731431320309639
    2. ' find' → logprob: -2.823143243789673
    3. 'maximize' → logprob: -4.573143005371094
    4. 'check' → logprob: -8.323143005371094
    5. 'max' → logprob: -8.948143005371094
    6. '#' → logprob: -9.448143005371094
    7. 'consider' → logprob: -9.573143005371094
    8. 'calculate' → logprob: -10.198143005371094
    9. 'import' → logprob: -10.448143005371094
    10. ' maximize' → logprob: -10.573143005371094

Token 217: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.233298197388649
    2. 'the' → logprob: -1.6082981824874878
    3. 'max' → logprob: -5.483298301696777
    4. ' max' → logprob: -6.733298301696777
    5. ' a' → logprob: -6.983298301696777
    6. '#' → logprob: -7.358298301696777
    7. 'a' → logprob: -8.733298301696777
    8. ' for' → logprob: -8.983298301696777
    9. 'for' → logprob: -9.233298301696777
    10. ' an' → logprob: -9.233298301696777

Token 218: ' sub' (ID: 1543)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.6029776334762573
    2. ' maximum' → logprob: -1.2279776334762573
    3. 'max' → logprob: -2.227977752685547
    4. ' longest' → logprob: -3.602977752685547
    5. 'best' → logprob: -5.227977752685547
    6. ' best' → logprob: -5.227977752685547
    7. ' maximal' → logprob: -5.352977752685547
    8. ' max' → logprob: -5.602977752685547
    9. 'long' → logprob: -6.102977752685547
    10. 'sub' → logprob: -6.977977752685547

Token 219: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.00017743845819495618
    2. 'arr' → logprob: -9.375177383422852
    3. 'ar' → logprob: -9.750177383422852
    4. 'arry' → logprob: -11.625177383422852
    5. '#' → logprob: -12.125177383422852
    6. 'sequence' → logprob: -12.250177383422852
    7. 'arrays' → logprob: -12.375177383422852
    8. 'a' → logprob: -13.000177383422852
    9. 'arra' → logprob: -13.125177383422852
    10. '[' → logprob: -13.875177383422852

Token 220: ' [' (ID: 723)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007856692187488079
    2. ' l' → logprob: -4.882856845855713
    3. ',' → logprob: -9.257856369018555
    4. '<|end|>' → logprob: -10.132856369018555
    5. ',l' → logprob: -10.507856369018555
    6. ')' → logprob: -10.882856369018555
    7. ' ' → logprob: -11.007856369018555
    8. 'i' → logprob: -11.257856369018555
    9. ']' → logprob: -11.382856369018555
    10. '0' → logprob: -11.632856369018555

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034255622886121273
    2. ',r' → logprob: -5.878425598144531
    3. '=' → logprob: -8.128425598144531
    4. ' ,' → logprob: -8.503425598144531
    5. ',
' → logprob: -9.503425598144531
    6. 'r' → logprob: -12.128425598144531
    7. '_,' → logprob: -12.378425598144531
    8. ',n' → logprob: -12.628425598144531
    9. 'import' → logprob: -12.628425598144531
    10. '=r' → logprob: -12.628425598144531

Token 223: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3868904709815979
    2. 'r' → logprob: -1.1368904113769531
    3. ',' → logprob: -11.511890411376953
    4. ',r' → logprob: -12.011890411376953
    5. ' ' → logprob: -13.386890411376953
    6. '#' → logprob: -15.136890411376953
    7. ' ,' → logprob: -15.386890411376953
    8. '0' → logprob: -15.511890411376953
    9. ':r' → logprob: -15.636890411376953
    10. '<|end|>' → logprob: -15.636890411376953

Token 224: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.68153518543113e-05
    2. ']

' → logprob: -11.000057220458984
    3. ']
' → logprob: -11.125057220458984
    4. ' ]' → logprob: -11.500057220458984
    5. '#' → logprob: -12.750057220458984
    6. 'that' → logprob: -13.375057220458984
    7. '+' → logprob: -13.375057220458984
    8. '],' → logprob: -13.375057220458984
    9. 's' → logprob: -13.750057220458984
    10. ')' → logprob: -14.125057220458984

Token 225: ' to' (ID: 316)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.5118525624275208
    2. ')' → logprob: -2.261852502822876
    3. ' with' → logprob: -2.636852502822876
    4. '<|end|>' → logprob: -3.261852502822876
    5. 'that' → logprob: -3.261852502822876
    6. ' to' → logprob: -3.511852502822876
    7. ',' → logprob: -3.886852502822876
    8. ' for' → logprob: -4.011852741241455
    9. ' such' → logprob: -4.386852741241455
    10. 'with' → logprob: -4.386852741241455

Token 226: ' flip' (ID: 29130)
  Prédit: 'maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximize' → logprob: -0.9549697041511536
    2. ' maximize' → logprob: -1.3299696445465088
    3. 'flip' → logprob: -1.3299696445465088
    4. ' flip' → logprob: -2.579969644546509
    5. 'invert' → logprob: -5.204969882965088
    6. 'max' → logprob: -6.079969882965088
    7. ' invert' → logprob: -7.454969882965088
    8. 'r' → logprob: -7.454969882965088
    9. ' max' → logprob: -8.57996940612793
    10. ' ' → logprob: -8.70496940612793

Token 227: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.8616911768913269
    2. ' to' → logprob: -0.9866911768913269
    3. ',' → logprob: -1.9866912364959717
    4. ' for' → logprob: -4.361690998077393
    5. ')' → logprob: -4.611690998077393
    6. '<|end|>' → logprob: -5.361690998077393
    7. 'def' → logprob: -5.361690998077393
    8. '#' → logprob: -5.486690998077393
    9. ' ' → logprob: -5.986690998077393
    10. 'that' → logprob: -6.361690998077393

Token 228: ' maxim' (ID: 29045)
  Prédit: ' maxim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maxim' → logprob: -0.04234740510582924
    2. 'max' → logprob: -3.4173474311828613
    3. 'maximize' → logprob: -5.917347431182861
    4. ' can' → logprob: -6.292347431182861
    5. ' will' → logprob: -6.792347431182861
    6. ' maximize' → logprob: -7.167347431182861
    7. ' would' → logprob: -7.292347431182861
    8. ' increases' → logprob: -7.917347431182861
    9. ' improves' → logprob: -8.917346954345703
    10. 'would' → logprob: -8.917346954345703

Token 229: 'izes' (ID: 6370)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.0013669042382389307
    2. 'izes' → logprob: -6.876367092132568
    3. 'ze' → logprob: -8.50136661529541
    4. '```' → logprob: -10.50136661529541
    5. 'aze' → logprob: -10.87636661529541
    6. 'IZE' → logprob: -11.12636661529541
    7. '#' → logprob: -11.25136661529541
    8. ' ' → logprob: -11.37636661529541
    9. 'imize' → logprob: -12.25136661529541
    10. '   ' → logprob: -12.37636661529541

Token 230: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2560257911682129
    2. 'the' → logprob: -1.506025791168213
    3. 'res' → logprob: -5.756025791168213
    4. 'max' → logprob: -7.381025791168213
    5. ' res' → logprob: -9.131025314331055
    6. ' max' → logprob: -10.506025314331055
    7. '<|end|>' → logprob: -10.506025314331055
    8. ' longest' → logprob: -10.631025314331055
    9. '```' → logprob: -10.756025314331055
    10. 'overall' → logprob: -11.256025314331055

Token 231: ' maximum' (ID: 10562)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.7191700339317322
    2. 'length' → logprob: -2.219170093536377
    3. 'maximum' → logprob: -2.969170093536377
    4. ' length' → logprob: -3.094170093536377
    5. 'long' → logprob: -3.094170093536377
    6. 'difference' → logprob: -3.219170093536377
    7. 'altern' → logprob: -3.344170093536377
    8. 'res' → logprob: -3.344170093536377
    9. 'im' → logprob: -3.719170093536377
    10. 'max' → logprob: -3.844170093536377

Token 232: ' length' (ID: 5517)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6051729917526245
    2. ' length' → logprob: -2.230173110961914
    3. '_alt' → logprob: -2.230173110961914
    4. 'difference' → logprob: -2.355173110961914
    5. 'length' → logprob: -2.480173110961914
    6. 'alt' → logprob: -2.605173110961914
    7. ' difference' → logprob: -2.730173110961914
    8. ' alternating' → logprob: -2.980173110961914
    9. '<|end|>' → logprob: -3.105173110961914
    10. 'altern' → logprob: -3.230173110961914

Token 233: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6039620041847229
    2. '_' → logprob: -1.2289619445800781
    3. ' ' → logprob: -2.978961944580078
    4. ')' → logprob: -3.603961944580078
    5. '=' → logprob: -3.978961944580078
    6. 'of' → logprob: -4.478961944580078
    7. ' =' → logprob: -4.728961944580078
    8. ',' → logprob: -4.853961944580078
    9. 'def' → logprob: -4.978961944580078
    10. '+' → logprob: -5.103961944580078

Token 234: ' alternating' (ID: 125099)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -1.471824288368225
    2. 'the' → logprob: -1.471824288368225
    3. 'altern' → logprob: -1.971824288368225
    4. ' the' → logprob: -2.2218241691589355
    5. 'a' → logprob: -2.3468241691589355
    6. ' alternating' → logprob: -2.4718241691589355
    7. ' an' → logprob: -2.4718241691589355
    8. ' a' → logprob: -4.3468241691589355
    9. '1' → logprob: -5.4718241691589355
    10. 'long' → logprob: -6.4718241691589355

Token 235: ' sequence' (ID: 16281)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021105581894516945
    2. '<|end|>' → logprob: -5.146105766296387
    3. '_pattern' → logprob: -5.646105766296387
    4. ' pattern' → logprob: -6.146105766296387
    5. ' _' → logprob: -6.146105766296387
    6. '_
' → logprob: -6.271105766296387
    7. '_alt' → logprob: -6.521105766296387
    8. 'pattern' → logprob: -7.396105766296387
    9. ' sequences' → logprob: -7.396105766296387
    10. '_patterns' → logprob: -7.771105766296387

Token 236: '.

' (ID: 364)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48791876435279846
    2. '.' → logprob: -2.8629188537597656
    3. '#' → logprob: -3.2379188537597656
    4. ' ' → logprob: -3.3629188537597656
    5. 'def' → logprob: -3.3629188537597656
    6. ',
' → logprob: -3.4879188537597656
    7. '<|end|>' → logprob: -3.7379188537597656
    8. ')' → logprob: -3.7379188537597656
    9. 'diff' → logprob: -3.7379188537597656
    10. '
' → logprob: -3.8629188537597656

Token 237: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.06622075289487839
    2. 'B' → logprob: -3.691220760345459
    3. ' diff' → logprob: -4.441220760345459
    4. 'delta' → logprob: -4.816220760345459
    5. 'def' → logprob: -5.191220760345459
    6. 'dp' → logprob: -5.441220760345459
    7. 'import' → logprob: -6.816220760345459
    8. '#' → logprob: -6.941220760345459
    9. 'difference' → logprob: -6.941220760345459
    10. ' B' → logprob: -7.191220760345459

Token 238: ' Create' (ID: 6585)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6790652275085449
    2. 'B' → logprob: -0.9290652275085449
    3. ' diff' → logprob: -3.929065227508545
    4. '#' → logprob: -3.929065227508545
    5. ' B' → logprob: -4.054065227508545
    6. 'def' → logprob: -4.304065227508545
    7. 'import' → logprob: -4.804065227508545
    8. 'dp' → logprob: -5.429065227508545
    9. 'delta' → logprob: -5.929065227508545
    10. 'from' → logprob: -6.054065227508545

Token 239: ' arrays' (ID: 38774)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0025528310798108578
    2. ' B' → logprob: -6.3775529861450195
    3. 'n' → logprob: -8.12755298614502
    4. 'diff' → logprob: -9.12755298614502
    5. 'alt' → logprob: -9.37755298614502
    6. 'A' → logprob: -9.50255298614502
    7. '#' → logprob: -9.87755298614502
    8. 'b' → logprob: -9.87755298614502
    9. 'def' → logprob: -10.12755298614502
    10. 'difference' → logprob: -10.50255298614502

Token 240: ' for' (ID: 395)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0010784220648929477
    2. ' B' → logprob: -6.8760786056518555
    3. 'b' → logprob: -11.251078605651855
    4. '#' → logprob: -11.251078605651855
    5. 'A' → logprob: -12.376078605651855
    6. '
' → logprob: -12.876078605651855
    7. '```' → logprob: -13.376078605651855
    8. ' =' → logprob: -13.501078605651855
    9. 'for' → logprob: -13.626078605651855
    10. '=' → logprob: -13.876078605651855

Token 241: ' the' (ID: 290)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0008193961111828685
    2. 'b' → logprob: -8.250819206237793
    3. 'matching' → logprob: -8.875819206237793
    4. ' B' → logprob: -9.000819206237793
    5. 'pattern' → logprob: -9.250819206237793
    6. 'alt' → logprob: -9.875819206237793
    7. 'diff' → logprob: -10.000819206237793
    8. 'matches' → logprob: -10.625819206237793
    9. 'i' → logprob: -10.750819206237793
    10. 'def' → logprob: -11.000819206237793

Token 242: ' two' (ID: 1920)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05898335203528404
    2. 'pattern' → logprob: -4.058983325958252
    3. 'matching' → logprob: -4.308983325958252
    4. 'matches' → logprob: -5.308983325958252
    5. 'difference' → logprob: -5.683983325958252
    6. 'alt' → logprob: -5.808983325958252
    7. 'match' → logprob: -6.058983325958252
    8. 'two' → logprob: -6.433983325958252
    9. 'altern' → logprob: -6.558983325958252
    10. 'patterns' → logprob: -6.683983325958252

Token 243: ' alternating' (ID: 125099)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.15802417695522308
    2. ' patterns' → logprob: -2.5330240726470947
    3. 'pattern' → logprob: -3.5330240726470947
    4. 'alt' → logprob: -3.9080240726470947
    5. ' alt' → logprob: -4.908024311065674
    6. 'matching' → logprob: -5.783024311065674
    7. 'B' → logprob: -6.658024311065674
    8. 'matches' → logprob: -6.783024311065674
    9. ' pattern' → logprob: -7.408024311065674
    10. 'match' → logprob: -7.408024311065674

Token 244: ' patterns' (ID: 18587)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.015196068212389946
    2. ' patterns' → logprob: -4.515195846557617
    3. 'pattern' → logprob: -5.515195846557617
    4. ' sequences' → logprob: -10.640195846557617
    5. '_patterns' → logprob: -11.015195846557617
    6. 'se' → logprob: -11.140195846557617
    7. 'B' → logprob: -11.390195846557617
    8. ' pattern' → logprob: -11.515195846557617
    9. '1' → logprob: -11.515195846557617
    10. 'arrays' → logprob: -11.515195846557617

Token 245: '
' (ID: 198)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00014454191841650754
    2. ' B' → logprob: -9.750144958496094
    3. '
' → logprob: -10.000144958496094
    4. 'A' → logprob: -10.625144958496094
    5. '```' → logprob: -12.000144958496094
    6. 'b' → logprob: -13.250144958496094
    7. ',' → logprob: -13.500144958496094
    8. '#' → logprob: -13.625144958496094
    9. '1' → logprob: -13.875144958496094
    10. ':' → logprob: -14.250144958496094

Token 246: 'alt' (ID: 3271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.018461287021636963
    2. 'A' → logprob: -4.018461227416992
    3. ' B' → logprob: -9.018461227416992
    4. 'pattern' → logprob: -9.268461227416992
    5. 'alt' → logprob: -10.018461227416992
    6. '```' → logprob: -10.518461227416992
    7. 'b' → logprob: -11.768461227416992
    8. ' A' → logprob: -12.393461227416992
    9. 'T' → logprob: -13.268461227416992
    10. 'a' → logprob: -13.393461227416992

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2388746738433838
    2. '_B' → logprob: -2.363874673843384
    3. '_pattern' → logprob: -2.988874673843384
    4. '_' → logprob: -3.488874673843384
    5. 'B' → logprob: -3.488874673843384
    6. 'A' → logprob: -5.988874435424805
    7. 'S' → logprob: -6.238874435424805
    8. '_S' → logprob: -7.488874435424805
    9. '_patterns' → logprob: -7.738874435424805
    10. '_A' → logprob: -8.113874435424805

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687485456466675
    2. '=' → logprob: -1.1368749141693115
    3. ' =[' → logprob: -13.63687515258789
    4. '1' → logprob: -14.13687515258789
    5. '_' → logprob: -14.51187515258789
    6. '=[' → logprob: -14.63687515258789
    7. ' ' → logprob: -15.13687515258789
    8. 'B' → logprob: -15.26187515258789
    9. '＝' → logprob: -16.51187515258789
    10. '=[]' → logprob: -16.51187515258789

Token 249: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.27323800325393677
    2. '[(' → logprob: -2.023237943649292
    3. '[' → logprob: -2.273237943649292
    4. '[S' → logprob: -6.273238182067871
    5. ' [' → logprob: -6.773238182067871
    6. '[int' → logprob: -8.273238182067871
    7. '[]' → logprob: -8.523238182067871
    8. '[s' → logprob: -8.898238182067871
    9. ' [(' → logprob: -9.648238182067871
    10. '[((' → logprob: -9.898238182067871

Token 250: 'i' (ID: 72)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.0780671834945679
    2. '1' → logprob: -1.2030671834945679
    3. 'S' → logprob: -1.4530671834945679
    4. '(i' → logprob: -2.9530673027038574
    5. '(' → logprob: -3.2030673027038574
    6. '(s' → logprob: -4.578067302703857
    7. 'int' → logprob: -5.203067302703857
    8. 'i' → logprob: -5.578067302703857
    9. '0' → logprob: -5.578067302703857
    10. ' (' → logprob: -5.703067302703857

Token 251: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07895941287279129
    2. ' %' → logprob: -2.5789594650268555
    3. '%i' → logprob: -10.203959465026855
    4. ' ' → logprob: -10.828959465026855
    5. '
' → logprob: -12.828959465026855
    6. 'i' → logprob: -13.328959465026855
    7. '%d' → logprob: -13.453959465026855
    8. '0' → logprob: -13.578959465026855
    9. ' i' → logprob: -14.328959465026855
    10. '1' → logprob: -14.328959465026855

Token 252: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003831252979580313
    2. ' ' → logprob: -7.875382900238037
    3. '```' → logprob: -14.125383377075195
    4. '<|end|>' → logprob: -14.312883377075195
    5. '  ' → logprob: -15.187883377075195
    6. '   ' → logprob: -15.250383377075195
    7. '
' → logprob: -16.062883377075195
    8. ']' → logprob: -16.187883377075195
    9. '[' → logprob: -16.437883377075195
    10. '>' → logprob: -16.500383377075195

Token 253: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8206473871250637e-05
    2. ' ' → logprob: -10.500028610229492
    3. '```' → logprob: -16.000028610229492
    4. '   ' → logprob: -16.125028610229492
    5. '  ' → logprob: -16.750028610229492
    6. '
' → logprob: -16.812528610229492
    7. '۲' → logprob: -17.375028610229492
    8. '1' → logprob: -17.875028610229492
    9. '२' → logprob: -18.500028610229492
    10. '...' → logprob: -18.562528610229492

Token 254: ' for' (ID: 395)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21088172495365143
    2. ' ==' → logprob: -1.9608817100524902
    3. ']' → logprob: -3.7108817100524902
    4. ']==' → logprob: -4.08588171005249
    5. ' for' → logprob: -5.58588171005249
    6. '^' → logprob: -6.58588171005249
    7. ' ^' → logprob: -6.71088171005249
    8. 'for' → logprob: -7.33588171005249
    9. ' ' → logprob: -7.83588171005249
    10. ')' → logprob: -8.960882186889648

Token 255: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16258351504802704
    2. ' range' → logprob: -1.9125834703445435
    3. 'i' → logprob: -6.162583351135254
    4. 'in' → logprob: -8.912583351135254
    5. ' i' → logprob: -9.662583351135254
    6. ' in' → logprob: -9.912583351135254
    7. '(range' → logprob: -13.912583351135254
    8. '_' → logprob: -14.037583351135254
    9. '	range' → logprob: -15.787583351135254
    10. ' ' → logprob: -16.41258430480957

Token 256: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1427818089723587
    2. 'in' → logprob: -2.0177817344665527
    3. 'range' → logprob: -9.642782211303711
    4. ' range' → logprob: -11.017782211303711
    5. '(range' → logprob: -11.392782211303711
    6. ' ' → logprob: -12.392782211303711
    7. ',' → logprob: -13.017782211303711
    8. ')' → logprob: -13.142782211303711
    9. ']' → logprob: -13.767782211303711
    10. '(' → logprob: -13.892782211303711

Token 257: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '(range' → logprob: -19.625911712646484
    4. '	range' → logprob: -19.750911712646484
    5. ' ' → logprob: -20.625911712646484
    6. '
' → logprob: -20.750911712646484
    7. '   ' → logprob: -21.875911712646484
    8. 'N' → logprob: -22.375911712646484
    9. '  ' → logprob: -22.625911712646484
    10. 'rang' → logprob: -23.125911712646484

Token 258: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.009788085706532001
    2. 'N' → logprob: -4.6347880363464355
    3. '(' → logprob: -11.134788513183594
    4. '(len' → logprob: -11.509788513183594
    5. 'len' → logprob: -12.134788513183594
    6. ' N' → logprob: -14.259788513183594
    7. '(n' → logprob: -14.759788513183594
    8. '
' → logprob: -15.259788513183594
    9. '	N' → logprob: -15.259788513183594
    10. ' (' → logprob: -16.509788513183594

Token 259: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.049384672194719315
    2. ']' → logprob: -3.174384593963623
    3. ')]
' → logprob: -5.174384593963623
    4. ']
' → logprob: -7.424384593963623
    5. ' ]' → logprob: -10.049385070800781
    6. ')' → logprob: -10.299385070800781
    7. ')]

' → logprob: -11.674385070800781
    8. '])' → logprob: -12.049385070800781
    9. ']]' → logprob: -12.424385070800781
    10. ']

' → logprob: -12.924385070800781

Token 260: 'alt' (ID: 3271)
  Prédit: 'alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.017332272604107857
    2. ' alt' → logprob: -4.142332077026367
    3. 'flip' → logprob: -7.392332077026367
    4. 'C' → logprob: -8.767332077026367
    5. 'diff' → logprob: -8.767332077026367
    6. '
' → logprob: -9.642332077026367
    7. 'alter' → logprob: -9.892332077026367
    8. '+' → logprob: -10.142332077026367
    9. 'B' → logprob: -10.142332077026367
    10. '_alt' → logprob: -10.392332077026367

Token 261: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4021237802808173e-05
    2. '1' → logprob: -12.000014305114746
    3. ' ' → logprob: -12.875014305114746
    4. '0' → logprob: -13.500014305114746
    5. ' =' → logprob: -14.125014305114746
    6. '_' → logprob: -14.125014305114746
    7. '```' → logprob: -14.125014305114746
    8. ',' → logprob: -15.000014305114746
    9. '=' → logprob: -15.562514305114746
    10. '
' → logprob: -15.625014305114746

Token 262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759414434432983
    2. ' =' → logprob: -0.8259414434432983
    3. ' =[' → logprob: -13.95094108581543
    4. '=[' → logprob: -14.82594108581543
    5. ' ' → logprob: -16.07594108581543
    6. '＝' → logprob: -16.07594108581543
    7. '[' → logprob: -16.07594108581543
    8. ')' → logprob: -16.07594108581543
    9. ' =
' → logprob: -16.45094108581543
    10. '=
' → logprob: -16.70094108581543

Token 263: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.9424725148128346e-05
    2. '[' → logprob: -10.750049591064453
    3. '   ' → logprob: -11.875049591064453
    4. '(' → logprob: -11.875049591064453
    5. ' [(' → logprob: -12.250049591064453
    6. ' ' → logprob: -12.375049591064453
    7. '[i' → logprob: -13.000049591064453
    8. '[((' → logprob: -14.250049591064453
    9. ' (' → logprob: -14.375049591064453
    10. '1' → logprob: -14.375049591064453

Token 264: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011069757863879204
    2. '(i' → logprob: -4.5110697746276855
    3. ' i' → logprob: -11.886069297790527
    4. ' (' → logprob: -12.136069297790527
    5. '   ' → logprob: -13.261069297790527
    6. '{i' → logprob: -13.261069297790527
    7. ')i' → logprob: -13.511069297790527
    8. '1' → logprob: -14.011069297790527
    9. '(' → logprob: -14.511069297790527
    10. ')' → logprob: -14.636069297790527

Token 265: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004857266612816602
    2. ' +' → logprob: -7.750485897064209
    3. '1' → logprob: -10.12548542022705
    4. '%' → logprob: -11.62548542022705
    5. ' ' → logprob: -12.87548542022705
    6. '0' → logprob: -13.62548542022705
    7. '+
' → logprob: -14.75048542022705
    8. '-' → logprob: -14.87548542022705
    9. '   ' → logprob: -15.12548542022705
    10. '```' → logprob: -15.37548542022705

Token 266: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -17.62509536743164
    4. '   ' → logprob: -17.87509536743164
    5. '
' → logprob: -18.87509536743164
    6. '0' → logprob: -19.25009536743164
    7. ')' → logprob: -19.37509536743164
    8. '  ' → logprob: -20.00009536743164
    9. '`' → logprob: -20.50009536743164
    10. '2' → logprob: -21.37509536743164

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '
' → logprob: -17.875017166137695
    4. '0' → logprob: -18.250017166137695
    5. '```' → logprob: -18.375017166137695
    6. '   ' → logprob: -18.625017166137695
    7. '2' → logprob: -20.625017166137695
    8. '

' → logprob: -20.750017166137695
    9. '  ' → logprob: -20.750017166137695
    10. ')' → logprob: -20.937517166137695

Token 268: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005261749029159546
    2. '%' → logprob: -5.7552618980407715
    3. ')%' → logprob: -6.2552618980407715
    4. ' )' → logprob: -9.130261421203613
    5. ' %' → logprob: -10.005261421203613
    6. ']' → logprob: -13.255261421203613
    7. ')
' → logprob: -13.630261421203613
    8. '```' → logprob: -13.880261421203613
    9. ' ' → logprob: -14.130261421203613
    10. '
' → logprob: -14.505261421203613

Token 269: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.012619012966752052
    2. ' %' → logprob: -4.3876190185546875
    3. ')' → logprob: -9.512619018554688
    4. ')%' → logprob: -10.637619018554688
    5. '```' → logprob: -12.387619018554688
    6. ' ' → logprob: -13.012619018554688
    7. '
' → logprob: -13.137619018554688
    8. '#' → logprob: -14.762619018554688
    9. ']' → logprob: -14.887619018554688
    10. ']%' → logprob: -14.887619018554688

Token 270: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014165744185447693
    2. ' ' → logprob: -4.264165878295898
    3. '```' → logprob: -14.389165878295898
    4. '  ' → logprob: -14.889165878295898
    5. '<|end|>' → logprob: -15.014165878295898
    6. '[' → logprob: -15.514165878295898
    7. 'N' → logprob: -15.639165878295898
    8. ' N' → logprob: -15.889165878295898
    9. '   ' → logprob: -16.2016658782959
    10. '...' → logprob: -16.3266658782959

Token 271: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.125
    4. '   ' → logprob: -19.4375
    5. '{' → logprob: -19.75
    6. 'python' → logprob: -19.8125
    7. '`' → logprob: -19.875
    8. '۲' → logprob: -20.125
    9. '(' → logprob: -20.3125
    10. '[' → logprob: -20.6875

Token 272: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03806374967098236
    2. 'for' → logprob: -3.2880637645721436
    3. ']' → logprob: -10.913064002990723
    4. ' ' → logprob: -13.288064002990723
    5. '	for' → logprob: -13.538064002990723
    6. ')' → logprob: -13.913064002990723
    7. ' ]' → logprob: -15.913064002990723
    8. ' in' → logprob: -17.538063049316406
    9. ' ' → logprob: -17.663063049316406
    10. '   ' → logprob: -17.788063049316406

Token 273: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.46766191720962524
    2. ' range' → logprob: -1.4676618576049805
    3. 'range' → logprob: -1.9676618576049805
    4. ' i' → logprob: -5.7176618576049805
    5. ' in' → logprob: -16.342662811279297
    6. '(range' → logprob: -16.467662811279297
    7. 'in' → logprob: -16.842662811279297
    8. ' ' → logprob: -17.842662811279297
    9. '	range' → logprob: -17.967662811279297
    10. '`' → logprob: -18.217662811279297

Token 274: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26687613129615784
    2. ' range' → logprob: -1.5168761014938354
    3. 'in' → logprob: -4.391876220703125
    4. ' in' → logprob: -6.016876220703125
    5. ' ' → logprob: -11.641876220703125
    6. '(range' → logprob: -11.766876220703125
    7. ')' → logprob: -14.391876220703125
    8. 'i' → logprob: -14.641876220703125
    9. '  ' → logprob: -14.641876220703125
    10. 'ange' → logprob: -14.641876220703125

Token 275: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007102862582542002
    2. ' range' → logprob: -7.250710487365723
    3. '(range' → logprob: -14.750710487365723
    4. '	range' → logprob: -17.875709533691406
    5. '`' → logprob: -20.000709533691406
    6. 'N' → logprob: -20.500709533691406
    7. '```' → logprob: -20.500709533691406
    8. ' ' → logprob: -20.875709533691406
    9. '   ' → logprob: -21.500709533691406
    10. '
' → logprob: -21.500709533691406

Token 276: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0022291175555437803
    2. 'range' → logprob: -6.5022292137146
    3. '(N' → logprob: -7.2522292137146
    4. ' range' → logprob: -11.002228736877441
    5. ' N' → logprob: -14.002228736877441
    6. ')' → logprob: -15.752228736877441
    7. '
' → logprob: -15.752228736877441
    8. '	N' → logprob: -16.377229690551758
    9. ',N' → logprob: -16.877229690551758
    10. 'Range' → logprob: -17.252229690551758

Token 277: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00038896629121154547
    2. ']' → logprob: -7.875389099121094
    3. ')' → logprob: -12.375389099121094
    4. '])]' → logprob: -13.375389099121094
    5. ' )' → logprob: -14.125389099121094
    6. ')]
' → logprob: -14.250389099121094
    7. ' ]' → logprob: -14.250389099121094
    8. '])' → logprob: -15.125389099121094
    9. ')])' → logprob: -15.750389099121094
    10. '')]' → logprob: -16.250389099121094

Token 278: '#' (ID: 2)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05234944447875023
    2. 'D' → logprob: -3.427349328994751
    3. 'diff' → logprob: -4.55234956741333
    4. 'A' → logprob: -5.30234956741333
    5. 'match' → logprob: -6.67734956741333
    6. 'matches' → logprob: -7.80234956741333
    7. 'b' → logprob: -8.302349090576172
    8. 'M' → logprob: -8.552349090576172
    9. '#' → logprob: -8.552349090576172
    10. 'difference' → logprob: -8.677349090576172

Token 279: ' For' (ID: 2214)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.31740790605545044
    2. 'B' → logprob: -1.6924078464508057
    3. 'D' → logprob: -2.8174078464508057
    4. 'match' → logprob: -4.192408084869385
    5. 'flip' → logprob: -5.817408084869385
    6. 'delta' → logprob: -5.942408084869385
    7. '#' → logprob: -6.067408084869385
    8. 'A' → logprob: -6.567408084869385
    9. 'matches' → logprob: -6.692408084869385
    10. 'def' → logprob: -7.442408084869385

Token 280: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3536837697029114
    2. 'i' → logprob: -1.2286837100982666
    3. 'b' → logprob: -6.478683948516846
    4. 'pattern' → logprob: -7.353683948516846
    5. 'B' → logprob: -7.853683948516846
    6. 'diff' → logprob: -8.228683471679688
    7. ' b' → logprob: -8.228683471679688
    8. 'S' → logprob: -8.353683471679688
    9. '_' → logprob: -8.603683471679688
    10. 'matching' → logprob: -8.603683471679688

Token 281: ' pattern' (ID: 8302)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014694949612021446
    2. ' i' → logprob: -4.264695167541504
    3. 'pattern' → logprob: -8.139695167541504
    4. ' pattern' → logprob: -9.389695167541504
    5. 'position' → logprob: -9.514695167541504
    6. ' position' → logprob: -10.389695167541504
    7. 'def' → logprob: -12.139695167541504
    8. '[i' → logprob: -12.264695167541504
    9. '#' → logprob: -12.389695167541504
    10. 'array' → logprob: -12.514695167541504

Token 282: ',' (ID: 11)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2466953992843628
    2. ',' → logprob: -2.3716955184936523
    3. 'diff' → logprob: -2.7466955184936523
    4. 'matches' → logprob: -3.9966955184936523
    5. 'b' → logprob: -4.621695518493652
    6. 'match' → logprob: -4.871695518493652
    7. 'res' → logprob: -4.996695518493652
    8. ' B' → logprob: -5.121695518493652
    9. 'A' → logprob: -6.371695518493652
    10. 'for' → logprob: -6.871695518493652

Token 283: ' create' (ID: 2501)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.24226292967796326
    2. 'match' → logprob: -2.742262840270996
    3. 'B' → logprob: -2.992262840270996
    4. 'D' → logprob: -3.367262840270996
    5. 'matches' → logprob: -4.242262840270996
    6. 'M' → logprob: -4.367262840270996
    7. ' diff' → logprob: -4.742262840270996
    8. 'A' → logprob: -5.242262840270996
    9. '#' → logprob: -5.617262840270996
    10. 'def' → logprob: -5.867262840270996

Token 284: ' an' (ID: 448)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.06026262417435646
    2. 'D' → logprob: -3.185262680053711
    3. ' diff' → logprob: -5.310262680053711
    4. 'delta' → logprob: -5.810262680053711
    5. 'dp' → logprob: -5.935262680053711
    6. 'd' → logprob: -5.935262680053711
    7. 'A' → logprob: -7.185262680053711
    8. 'difference' → logprob: -7.185262680053711
    9. 'gain' → logprob: -7.185262680053711
    10. 'arr' → logprob: -8.310262680053711

Token 285: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.07743322104215622
    2. 'arr' → logprob: -2.8274331092834473
    3. ' array' → logprob: -4.827433109283447
    4. 'error' → logprob: -5.827433109283447
    5. 'aux' → logprob: -6.327433109283447
    6. 'effect' → logprob: -7.827433109283447
    7. 'alt' → logprob: -8.327433586120605
    8. 'diff' → logprob: -8.452433586120605
    9. 'impact' → logprob: -8.577433586120605
    10. 'additional' → logprob: -8.702433586120605

Token 286: ' matches' (ID: 15248)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.37037980556488037
    2. 'match' → logprob: -1.8703798055648804
    3. 'B' → logprob: -2.74537992477417
    4. 'matches' → logprob: -3.37037992477417
    5. 'A' → logprob: -3.49537992477417
    6. 'matching' → logprob: -4.74537992477417
    7. '=' → logprob: -5.74537992477417
    8. 'D' → logprob: -5.99537992477417
    9. 'dp' → logprob: -6.12037992477417
    10. 'b' → logprob: -6.49537992477417

Token 287: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6447484493255615
    2. '=' → logprob: -0.8947484493255615
    3. 'B' → logprob: -3.2697484493255615
    4. '1' → logprob: -4.644748687744141
    5. '=[' → logprob: -5.019748687744141
    6. 'matches' → logprob: -5.644748687744141
    7. 'S' → logprob: -6.269748687744141
    8. 'match' → logprob: -6.394748687744141
    9. 'A' → logprob: -6.644748687744141
    10. '_' → logprob: -6.894748687744141

Token 288: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4873286187648773
    2. 'matches' → logprob: -1.4873286485671997
    3. '[S' → logprob: -3.23732852935791
    4. '[m' → logprob: -3.23732852935791
    5. 'match' → logprob: -3.73732852935791
    6. ' [' → logprob: -3.98732852935791
    7. '[int' → logprob: -4.61232852935791
    8. '[i' → logprob: -4.86232852935791
    9. 'm' → logprob: -5.11232852935791
    10. 'S' → logprob: -5.61232852935791

Token 289: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07748474925756454
    2. '[S' → logprob: -3.3274848461151123
    3. '[m' → logprob: -4.202484607696533
    4. '[int' → logprob: -4.327484607696533
    5. '[i' → logprob: -4.702484607696533
    6. '[(' → logprob: -7.202484607696533
    7. ' [' → logprob: -8.702485084533691
    8. 'matches' → logprob: -8.952485084533691
    9. '[a' → logprob: -9.702485084533691
    10. '[j' → logprob: -9.827485084533691

Token 290: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.062471870332956314
    2. 'if' → logprob: -2.812471866607666
    3. '<|end|>' → logprob: -7.937471866607666
    4. ',' → logprob: -9.562472343444824
    5. ']' → logprob: -11.062472343444824
    6. '<|end|>' → logprob: -11.187472343444824
    7. '=' → logprob: -11.937472343444824
    8. '	if' → logprob: -12.187472343444824
    9. ')' → logprob: -12.187472343444824
    10. ' =' → logprob: -12.312472343444824

Token 291: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001632451661862433
    2. ' S' → logprob: -6.501632213592529
    3. '(S' → logprob: -9.001632690429688
    4. ' (' → logprob: -12.001632690429688
    5. 'arr' → logprob: -15.376632690429688
    6. '(' → logprob: -15.376632690429688
    7. ' ' → logprob: -15.876632690429688
    8. '   ' → logprob: -17.001632690429688
    9. '[S' → logprob: -17.001632690429688
    10. '	S' → logprob: -17.126632690429688

Token 292: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.6312321753939614e-05
    2. '[' → logprob: -10.625036239624023
    3. '==' → logprob: -12.500036239624023
    4. '[j' → logprob: -12.875036239624023
    5. '[idx' → logprob: -14.125036239624023
    6. '[
' → logprob: -14.250036239624023
    7. ' [' → logprob: -14.250036239624023
    8. '```' → logprob: -14.250036239624023
    9. '[k' → logprob: -14.375036239624023
    10. ' ==' → logprob: -14.375036239624023

Token 293: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8608951568603516
    2. ']' → logprob: -0.9858951568603516
    3. '==' → logprob: -2.2358951568603516
    4. ']==' → logprob: -2.3608951568603516
    5. ' ==' → logprob: -6.235895156860352
    6. '[' → logprob: -7.860895156860352
    7. ')==' → logprob: -8.360895156860352
    8. ')' → logprob: -8.485895156860352
    9. '[j' → logprob: -10.360895156860352
    10. '=' → logprob: -11.235895156860352

Token 294: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13286668062210083
    2. ' ==' → logprob: -2.132866621017456
    3. '[i' → logprob: -5.257866859436035
    4. '[' → logprob: -7.632866859436035
    5. ']==' → logprob: -9.632866859436035
    6. '!=' → logprob: -9.757866859436035
    7. ')==' → logprob: -10.132866859436035
    8. '=' → logprob: -10.382866859436035
    9. ')' → logprob: -11.132866859436035
    10. ']' → logprob: -12.257866859436035

Token 295: ' pattern' (ID: 8302)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.01137411966919899
    2. ' alt' → logprob: -4.636373996734619
    3. 'i' → logprob: -7.636373996734619
    4. 'S' → logprob: -8.136374473571777
    5. '(' → logprob: -8.511374473571777
    6. ' (' → logprob: -8.761374473571777
    7. '(i' → logprob: -9.386374473571777
    8. 'pattern' → logprob: -9.636374473571777
    9. '[i' → logprob: -9.636374473571777
    10. ' i' → logprob: -9.761374473571777

Token 296: '[i' (ID: 1768)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.48035672307014465
    2. ',' → logprob: -1.1053566932678223
    3. 'else' → logprob: -3.7303566932678223
    4. '[i' → logprob: -3.7303566932678223
    5. ' ,' → logprob: -6.980356693267822
    6. ')' → logprob: -8.35535717010498
    7. ']' → logprob: -8.73035717010498
    8. ' and' → logprob: -8.73035717010498
    9. '==' → logprob: -8.85535717010498
    10. '[]' → logprob: -9.60535717010498

Token 297: '],' (ID: 2155)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.18150773644447327
    2. ']' → logprob: -1.9315077066421509
    3. 'else' → logprob: -3.9315078258514404
    4. ',' → logprob: -6.681507587432861
    5. '],' → logprob: -8.93150806427002
    6. ' ]' → logprob: -10.68150806427002
    7. ' ' → logprob: -11.55650806427002
    8. '	else' → logprob: -12.18150806427002
    9. ')' → logprob: -12.18150806427002
    10. '```' → logprob: -12.80650806427002

Token 298: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.08081519603729248
    2. 'else' → logprob: -2.955815315246582
    3. '0' → logprob: -3.955815315246582
    4. ' ' → logprob: -5.080815315246582
    5. ',' → logprob: -9.205815315246582
    6. '<|end|>' → logprob: -9.705815315246582
    7. ' for' → logprob: -11.205815315246582
    8. '[' → logprob: -11.580815315246582
    9. ' ,' → logprob: -11.955815315246582
    10. '    ' → logprob: -12.080815315246582

Token 299: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08895964920520782
    2. ' ' → logprob: -2.4639596939086914
    3. '1' → logprob: -10.838959693908691
    4. '```' → logprob: -15.213959693908691
    5. ' ' → logprob: -15.713959693908691
    6. ',' → logprob: -16.338958740234375
    7. '   ' → logprob: -17.651458740234375
    8. ' 
' → logprob: -17.713958740234375
    9. '  ' → logprob: -17.838958740234375
    10. '`' → logprob: -18.026458740234375

Token 300: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010950337309623137
    2. ' ' → logprob: -9.125109672546387
    3. '1' → logprob: -14.750109672546387
    4. '```' → logprob: -16.37510871887207
    5. '=' → logprob: -17.06260871887207
    6. '   ' → logprob: -17.75010871887207
    7. ',' → logprob: -18.12510871887207
    8. '-' → logprob: -18.43760871887207
    9. '...' → logprob: -18.93760871887207
    10. '`' → logprob: -18.93760871887207

Token 301: '
' (ID: 198)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.0014955764636397362
    2. ' matches' → logprob: -6.876495361328125
    3. 'match' → logprob: -8.751495361328125
    4. '(matches' → logprob: -9.376495361328125
    5. ' =' → logprob: -10.126495361328125
    6. '
' → logprob: -10.126495361328125
    7. 'm' → logprob: -10.126495361328125
    8. '=' → logprob: -10.626495361328125
    9. 'matched' → logprob: -11.251495361328125
    10. 'S' → logprob: -11.626495361328125

Token 302: 'matches' (ID: 44239)
  Prédit: 'matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.0001652796781854704
    2. 'match' → logprob: -9.000164985656738
    3. 'mat' → logprob: -10.750164985656738
    4. 'm' → logprob: -11.500164985656738
    5. ' matches' → logprob: -12.250164985656738
    6. 'matched' → logprob: -13.250164985656738
    7. 'matching' → logprob: -13.625164985656738
    8. '```' → logprob: -13.750164985656738
    9. 'S' → logprob: -14.375164985656738
    10. '(matches' → logprob: -15.250164985656738

Token 303: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132879436016083
    2. '=' → logprob: -1.3132879734039307
    3. '1' → logprob: -10.813287734985352
    4. '_' → logprob: -13.063287734985352
    5. ' =[' → logprob: -13.313287734985352
    6. 's' → logprob: -14.688287734985352
    7. ')' → logprob: -15.188287734985352
    8. ']' → logprob: -15.188287734985352
    9. ' =
' → logprob: -15.313287734985352
    10. '```' → logprob: -15.563287734985352

Token 304: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759404897689819
    2. ' =' → logprob: -0.8259404897689819
    3. ' =[' → logprob: -14.700940132141113
    4. ']' → logprob: -15.450940132141113
    5. ')' → logprob: -15.700940132141113
    6. '=[' → logprob: -16.20094108581543
    7. '[' → logprob: -16.20094108581543
    8. ' ' → logprob: -16.70094108581543
    9. ',' → logprob: -17.32594108581543
    10. '＝' → logprob: -17.45094108581543

Token 305: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006999758537858725
    2. ' [' → logprob: -5.006999969482422
    3. '[int' → logprob: -8.506999969482422
    4. '[i' → logprob: -9.756999969482422
    5. '[(' → logprob: -11.381999969482422
    6. '[S' → logprob: -12.381999969482422
    7. '[len' → logprob: -12.881999969482422
    8. '[list' → logprob: -12.881999969482422
    9. '[s' → logprob: -13.631999969482422
    10. '[m' → logprob: -14.881999969482422

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038801267510280013
    2. 'int' → logprob: -7.875388145446777
    3. ' ' → logprob: -12.000388145446777
    4. '0' → logprob: -14.375388145446777
    5. ' int' → logprob: -14.500388145446777
    6. 'S' → logprob: -14.875388145446777
    7. '(' → logprob: -15.500388145446777
    8. '(int' → logprob: -15.750388145446777
    9. '(S' → logprob: -17.50038719177246
    10. '   ' → logprob: -18.50038719177246

Token 307: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.020544573664665222
    2. 'if' → logprob: -3.8955445289611816
    3. 'int' → logprob: -14.27054500579834
    4. ']' → logprob: -14.52054500579834
    5. '1' → logprob: -14.64554500579834
    6. '0' → logprob: -14.89554500579834
    7. '	if' → logprob: -15.52054500579834
    8. '   ' → logprob: -15.77054500579834
    9. '```' → logprob: -16.020544052124023
    10. 'If' → logprob: -16.395544052124023

Token 308: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -6.611323624383658e-05
    2. ' S' → logprob: -9.625065803527832
    3. '	S' → logprob: -18.00006675720215
    4. '   ' → logprob: -18.75006675720215
    5. ' ' → logprob: -19.00006675720215
    6. 's' → logprob: -20.37506675720215
    7. '(S' → logprob: -20.62506675720215
    8. '_S' → logprob: -21.37506675720215
    9. ' ' → logprob: -21.87506675720215
    10. '[S' → logprob: -22.00006675720215

Token 309: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.125000953674316
    3. '```' → logprob: -17.125
    4. '[I' → logprob: -17.75
    5. '[j' → logprob: -19.0
    6. '[idx' → logprob: -19.125
    7. '[
' → logprob: -19.125
    8. ' [' → logprob: -19.375
    9. '[index' → logprob: -20.0
    10. '[N' → logprob: -20.0

Token 310: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.056696511805057526
    2. ' ==' → logprob: -2.9316964149475098
    3. ']==' → logprob: -6.43169641494751
    4. ']' → logprob: -8.681696891784668
    5. '=' → logprob: -11.181696891784668
    6. ')==' → logprob: -12.181696891784668
    7. '==
' → logprob: -12.431696891784668
    8. ')' → logprob: -12.681696891784668
    9. '[' → logprob: -13.181696891784668
    10. ' ' → logprob: -13.181696891784668

Token 311: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02056139148771763
    2. ' ==' → logprob: -3.895561456680298
    3. '=' → logprob: -11.145561218261719
    4. ']==' → logprob: -13.270561218261719
    5. '!=' → logprob: -13.895561218261719
    6. '==
' → logprob: -14.145561218261719
    7. 'else' → logprob: -14.645561218261719
    8. ' ' → logprob: -15.020561218261719
    9. ')==' → logprob: -15.270561218261719
    10. ' else' → logprob: -15.520561218261719

Token 312: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.00026169343618676066
    2. ' alt' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.750261306762695
    4. 'i' → logprob: -16.625261306762695
    5. ' ' → logprob: -17.125261306762695
    6. 'opt' → logprob: -17.500261306762695
    7. '           ' → logprob: -18.250261306762695
    8. '  ' → logprob: -18.375261306762695
    9. '0' → logprob: -18.500261306762695
    10. 'alts' → logprob: -18.625261306762695

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -17.625
    4. '2' → logprob: -18.75
    5. '```' → logprob: -18.75
    6. '[' → logprob: -18.875
    7. 'pattern' → logprob: -20.125
    8. 's' → logprob: -20.375
    9. 'alt' → logprob: -20.6875
    10. '_' → logprob: -20.8125

Token 314: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -13.375003814697266
    3. 'i' → logprob: -13.500003814697266
    4. ']' → logprob: -15.125003814697266
    5. ' [' → logprob: -15.125003814697266
    6. '[N' → logprob: -16.500003814697266
    7. ' i' → logprob: -17.000003814697266
    8. '][' → logprob: -17.125003814697266
    9. '[I' → logprob: -17.250003814697266
    10. ')' → logprob: -17.375003814697266

Token 315: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16528648138046265
    2. 'else' → logprob: -1.9152865409851074
    3. ']' → logprob: -5.290286540985107
    4. '```' → logprob: -13.16528606414795
    5. '	else' → logprob: -13.29028606414795
    6. ' ' → logprob: -13.29028606414795
    7. ')' → logprob: -13.91528606414795
    8. '}' → logprob: -13.91528606414795
    9. ' ' → logprob: -14.66528606414795
    10. ' ]' → logprob: -14.91528606414795

Token 316: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0788901224732399
    2. 'else' → logprob: -2.578890085220337
    3. '	else' → logprob: -15.953889846801758
    4. ' ' → logprob: -16.703889846801758
    5. '        ' → logprob: -17.953889846801758
    6. ' ' → logprob: -18.078889846801758
    7. '```' → logprob: -18.078889846801758
    8. ']' → logprob: -18.203889846801758
    9. '   ' → logprob: -18.578889846801758
    10. '       ' → logprob: -19.328889846801758

Token 317: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012510355561971664
    2. ' ' → logprob: -4.387510299682617
    3. '1' → logprob: -14.637510299682617
    4. ' ' → logprob: -16.200010299682617
    5. '  ' → logprob: -17.012510299682617
    6. '   ' → logprob: -17.075010299682617
    7. ')' → logprob: -18.137510299682617
    8. ',' → logprob: -18.137510299682617
    9. '```' → logprob: -18.325010299682617
    10. ' 
' → logprob: -18.762510299682617

Token 318: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -16.937517166137695
    4. '   ' → logprob: -18.250017166137695
    5. '```' → logprob: -18.937517166137695
    6. ' ' → logprob: -19.562517166137695
    7. '۰' → logprob: -19.750017166137695
    8. '  ' → logprob: -19.937517166137695
    9. '
' → logprob: -20.062517166137695
    10. ',' → logprob: -20.312517166137695

Token 319: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.006371197756379843
    2. 'for' → logprob: -5.131371021270752
    3. ' else' → logprob: -8.00637149810791
    4. ' ' → logprob: -9.25637149810791
    5. 'else' → logprob: -12.13137149810791
    6. ']' → logprob: -12.38137149810791
    7. ',' → logprob: -13.38137149810791
    8. ' ' → logprob: -13.88137149810791
    9. '	for' → logprob: -14.00637149810791
    10. ')' → logprob: -15.50637149810791

Token 320: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009714908665046096
    2. ' range' → logprob: -7.25097131729126
    3. 'i' → logprob: -8.250971794128418
    4. 'in' → logprob: -14.875971794128418
    5. ' i' → logprob: -16.5009708404541
    6. ' ' → logprob: -16.5009708404541
    7. '	range' → logprob: -17.7509708404541
    8. '   ' → logprob: -18.2509708404541
    9. '  ' → logprob: -18.2509708404541
    10. '(range' → logprob: -18.8759708404541

Token 321: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6212413311004639
    2. 'range' → logprob: -0.8712413311004639
    3. ' in' → logprob: -3.246241331100464
    4. ' range' → logprob: -5.246241569519043
    5. '(range' → logprob: -10.871241569519043
    6. 'i' → logprob: -10.996241569519043
    7. ']' → logprob: -11.121241569519043
    8. 'ange' → logprob: -11.246241569519043
    9. 'n' → logprob: -11.621241569519043
    10. ')' → logprob: -11.871241569519043

Token 322: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -19.750431060791016
    4. '	range' → logprob: -20.375431060791016
    5. '   ' → logprob: -21.125431060791016
    6. ' ' → logprob: -21.750431060791016
    7. '
' → logprob: -22.875431060791016
    8. '  ' → logprob: -23.000431060791016
    9. '```' → logprob: -23.375431060791016
    10. 'Range' → logprob: -23.500431060791016

Token 323: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13679875433444977
    2. 'range' → logprob: -2.136798858642578
    3. ' range' → logprob: -4.636798858642578
    4. '(N' → logprob: -9.136798858642578
    5. ' N' → logprob: -11.136798858642578
    6. '(range' → logprob: -12.386798858642578
    7. ')' → logprob: -12.511798858642578
    8. ' ' → logprob: -13.511798858642578
    9. '   ' → logprob: -14.136798858642578
    10. ']' → logprob: -14.511798858642578

Token 324: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -2.5941604690160602e-05
    2. ' ]' → logprob: -10.625025749206543
    3. ')]' → logprob: -13.500025749206543
    4. ']
' → logprob: -15.250025749206543
    5. ']

' → logprob: -16.87502670288086
    6. ',' → logprob: -17.62502670288086
    7. ')' → logprob: -17.75002670288086
    8. '`]' → logprob: -18.25002670288086
    9. '],' → logprob: -18.87502670288086
    10. '()]' → logprob: -19.00002670288086

Token 325: 'matches' (ID: 44239)
  Prédit: 'matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.00031294001382775605
    2. ' matches' → logprob: -8.125312805175781
    3. '
' → logprob: -11.375312805175781
    4. '(matches' → logprob: -12.375312805175781
    5. '_matches' → logprob: -14.375312805175781
    6. '.matches' → logprob: -15.000312805175781
    7. '<|end|>' → logprob: -16.37531280517578
    8. 'm' → logprob: -17.00031280517578
    9. '```' → logprob: -17.00031280517578
    10. ',' → logprob: -17.12531280517578

Token 326: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003450507065281272
    2. '_' → logprob: -5.753450393676758
    3. '1' → logprob: -8.628450393676758
    4. ' =' → logprob: -10.003450393676758
    5. '=' → logprob: -10.253450393676758
    6. ' ' → logprob: -12.753450393676758
    7. '[' → logprob: -12.753450393676758
    8. '```' → logprob: -12.878450393676758
    9. ' _' → logprob: -13.253450393676758
    10. ']' → logprob: -14.503450393676758

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326204538345337
    2. '=' → logprob: -1.3132619857788086
    3. ' =[' → logprob: -15.938261985778809
    4. '=[' → logprob: -16.563262939453125
    5. '[' → logprob: -16.813262939453125
    6. ' ' → logprob: -18.563262939453125
    7. '＝' → logprob: -19.063262939453125
    8. ')' → logprob: -19.563262939453125
    9. ',' → logprob: -19.813262939453125
    10. '=

' → logprob: -19.938262939453125

Token 328: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004306692280806601
    2. ' [' → logprob: -7.750430583953857
    3. ' ' → logprob: -18.125431060791016
    4. ' ' → logprob: -20.000431060791016
    5. '   ' → logprob: -20.375431060791016
    6. '	' → logprob: -20.500431060791016
    7. '[
' → logprob: -20.625431060791016
    8. '```' → logprob: -21.375431060791016
    9. '{' → logprob: -21.500431060791016
    10. '1' → logprob: -22.000431060791016

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032163304276764393
    2. '[' → logprob: -5.75321626663208
    3. ' ' → logprob: -10.378216743469238
    4. ' [' → logprob: -12.128216743469238
    5. '(' → logprob: -13.753216743469238
    6. '   ' → logprob: -14.503216743469238
    7. '0' → logprob: -15.253216743469238
    8. '  ' → logprob: -17.003215789794922
    9. ']' → logprob: -17.128215789794922
    10. '[
' → logprob: -17.503215789794922

Token 330: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.003178782993927598
    2. 'if' → logprob: -5.753178596496582
    3. ' for' → logprob: -14.003178596496582
    4. ' ' → logprob: -15.628178596496582
    5. '	if' → logprob: -17.5031795501709
    6. '[' → logprob: -18.3781795501709
    7. ']' → logprob: -18.3781795501709
    8. ')' → logprob: -18.6281795501709
    9. 'for' → logprob: -18.8781795501709
    10. ' ' → logprob: -19.1281795501709

Token 331: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.061969030648469925
    2. ' S' → logprob: -2.811969041824341
    3. ' ' → logprob: -14.186968803405762
    4. '   ' → logprob: -15.061968803405762
    5. '(S' → logprob: -15.311968803405762
    6. '	S' → logprob: -16.061969757080078
    7. '    ' → logprob: -16.811969757080078
    8. ' ' → logprob: -17.186969757080078
    9. '[S' → logprob: -17.311969757080078
    10. '  ' → logprob: -17.436969757080078

Token 332: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029119420796632767
    2. 'S' → logprob: -3.6541194915771484
    3. '[' → logprob: -6.779119491577148
    4. '[S' → logprob: -6.779119491577148
    5. ' S' → logprob: -9.279119491577148
    6. '#' → logprob: -9.279119491577148
    7. ')' → logprob: -10.029119491577148
    8. '==' → logprob: -10.029119491577148
    9. ']' → logprob: -10.154119491577148
    10. '```' → logprob: -10.404119491577148

Token 333: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38731905817985535
    2. ' ==' → logprob: -1.1373190879821777
    3. ']==' → logprob: -8.13731861114502
    4. ']' → logprob: -9.13731861114502
    5. '=' → logprob: -10.38731861114502
    6. ' ' → logprob: -11.63731861114502
    7. '[' → logprob: -12.88731861114502
    8. ')' → logprob: -13.76231861114502
    9. ')==' → logprob: -13.88731861114502
    10. '[i' → logprob: -14.13731861114502

Token 334: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759631395339966
    2. ' ==' → logprob: -0.8259631395339966
    3. '=' → logprob: -11.450963020324707
    4. ' ' → logprob: -12.450963020324707
    5. ']==' → logprob: -12.700963020324707
    6. '!=' → logprob: -13.325963020324707
    7. ' !=' → logprob: -13.700963020324707
    8. '==
' → logprob: -13.950963020324707
    9. ']' → logprob: -14.325963020324707
    10. ' =' → logprob: -14.825963020324707

Token 335: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.16022981703281403
    2. ' alt' → logprob: -1.9102298021316528
    3. ' ' → logprob: -13.285229682922363
    4. '   ' → logprob: -13.535229682922363
    5. '           ' → logprob: -14.910229682922363
    6. '       ' → logprob: -15.035229682922363
    7. '    ' → logprob: -15.285229682922363
    8. '  ' → logprob: -15.660229682922363
    9. '        ' → logprob: -15.660229682922363
    10. ' ' → logprob: -15.910229682922363

Token 336: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007961660739965737
    2. '1' → logprob: -7.250796318054199
    3. '[i' → logprob: -10.8757963180542
    4. '[' → logprob: -11.2507963180542
    5. '```' → logprob: -11.8132963180542
    6. '   ' → logprob: -11.8757963180542
    7. 'i' → logprob: -12.0007963180542
    8. '
' → logprob: -12.3757963180542
    9. ' ' → logprob: -12.4382963180542
    10. '`' → logprob: -12.7507963180542

Token 337: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.988221684878226e-06
    2. ' [' → logprob: -12.750006675720215
    3. ']' → logprob: -13.375006675720215
    4. '[' → logprob: -14.375006675720215
    5. 'i' → logprob: -14.625006675720215
    6. '==' → logprob: -14.750006675720215
    7. '][' → logprob: -15.125006675720215
    8. ' ==' → logprob: -15.375006675720215
    9. ' ' → logprob: -16.00000762939453
    10. '(i' → logprob: -16.25000762939453

Token 338: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.129266067640856e-05
    2. 'else' → logprob: -11.750020980834961
    3. '[i' → logprob: -11.875020980834961
    4. ' ]' → logprob: -12.500020980834961
    5. ' else' → logprob: -13.875020980834961
    6. 'i' → logprob: -13.875020980834961
    7. '}' → logprob: -14.750020980834961
    8. ')' → logprob: -15.250020980834961
    9. ']==' → logprob: -16.00002098083496
    10. '(i' → logprob: -17.50002098083496

Token 339: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4765809178352356
    2. 'else' → logprob: -0.9765809178352356
    3. '[i' → logprob: -6.35158109664917
    4. ']' → logprob: -7.97658109664917
    5. ' ' → logprob: -7.97658109664917
    6. '==' → logprob: -10.226580619812012
    7. '   ' → logprob: -12.101580619812012
    8. '0' → logprob: -12.226580619812012
    9. '  ' → logprob: -12.351580619812012
    10. ')' → logprob: -12.976580619812012

Token 340: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007947645150125027
    2. ' ' → logprob: -4.8829474449157715
    3. '1' → logprob: -8.00794792175293
    4. '   ' → logprob: -12.69544792175293
    5. '```' → logprob: -13.82044792175293
    6. ']' → logprob: -14.32044792175293
    7. '  ' → logprob: -14.69544792175293
    8. ')' → logprob: -14.75794792175293
    9. ' ' → logprob: -15.19544792175293
    10. '`' → logprob: -15.32044792175293

Token 341: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026207277551293373
    2. ' ' → logprob: -6.127620697021484
    3. '1' → logprob: -7.752620697021484
    4. '   ' → logprob: -13.502620697021484
    5. '(' → logprob: -14.065120697021484
    6. 'int' → logprob: -14.377620697021484
    7. ' (' → logprob: -14.752620697021484
    8. '  ' → logprob: -14.752620697021484
    9. '[' → logprob: -14.877620697021484
    10. '[i' → logprob: -15.127620697021484

Token 342: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3152879774570465
    2. 'for' → logprob: -1.3152879476547241
    3. ']' → logprob: -6.315288066864014
    4. '[i' → logprob: -8.815287590026855
    5. ' else' → logprob: -10.440287590026855
    6. ' ' → logprob: -11.190287590026855
    7. 'else' → logprob: -11.315287590026855
    8. ')' → logprob: -12.690287590026855
    9. '   ' → logprob: -12.690287590026855
    10. '	for' → logprob: -12.690287590026855

Token 343: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048642918467522
    2. ' range' → logprob: -4.511048793792725
    3. '(range' → logprob: -14.261048316955566
    4. 'i' → logprob: -15.886048316955566
    5. 'in' → logprob: -16.386049270629883
    6. ' ' → logprob: -18.261049270629883
    7. ' in' → logprob: -18.886049270629883
    8. '
' → logprob: -19.011049270629883
    9. '```' → logprob: -19.511049270629883
    10. '	range' → logprob: -19.636049270629883

Token 344: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08772455155849457
    2. ' range' → logprob: -2.587724447250366
    3. 'in' → logprob: -4.837724685668945
    4. ' in' → logprob: -7.087724685668945
    5. '(range' → logprob: -10.337724685668945
    6. '	range' → logprob: -13.462724685668945
    7. '```' → logprob: -14.837724685668945
    8. 'N' → logprob: -15.337724685668945
    9. ' ' → logprob: -15.337724685668945
    10. ')' → logprob: -15.712724685668945

Token 345: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003682285314425826
    2. ' range' → logprob: -8.000368118286133
    3. '(range' → logprob: -10.375368118286133
    4. 'N' → logprob: -13.500368118286133
    5. '(N' → logprob: -16.000368118286133
    6. '[N' → logprob: -17.375368118286133
    7. ')' → logprob: -19.125368118286133
    8. '	range' → logprob: -19.125368118286133
    9. '.range' → logprob: -19.875368118286133
    10. ']' → logprob: -19.875368118286133

Token 346: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.02632654458284378
    2. 'N' → logprob: -3.6513266563415527
    3. 'range' → logprob: -11.276326179504395
    4. '(' → logprob: -12.026326179504395
    5. '[N' → logprob: -12.526326179504395
    6. '```' → logprob: -14.151326179504395
    7. ')' → logprob: -14.776326179504395
    8. ' range' → logprob: -14.901326179504395
    9. ' (' → logprob: -15.151326179504395
    10. '1' → logprob: -15.151326179504395

Token 347: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008649437688291073
    2. ']' → logprob: -4.7586493492126465
    3. '])]' → logprob: -11.258649826049805
    4. ')' → logprob: -11.508649826049805
    5. '])' → logprob: -11.633649826049805
    6. '}]' → logprob: -13.883649826049805
    7. ']}' → logprob: -14.758649826049805
    8. ' ]' → logprob: -14.883649826049805
    9. ')]
' → logprob: -15.008649826049805
    10. ']]' → logprob: -15.258649826049805

Token 348: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.03482358902692795
    2. 'delta' → logprob: -3.7848236560821533
    3. 'gain' → logprob: -5.284823417663574
    4. 'flip' → logprob: -6.159823417663574
    5. 'change' → logprob: -6.659823417663574
    6. 'def' → logprob: -7.284823417663574
    7. 'd' → logprob: -7.534823417663574
    8. 'difference' → logprob: -7.534823417663574
    9. 'dp' → logprob: -7.784823417663574
    10. '#' → logprob: -8.409823417663574

Token 349: ' For' (ID: 2214)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.02362022176384926
    2. 'def' → logprob: -3.898620128631592
    3. 'delta' → logprob: -6.148620128631592
    4. '#' → logprob: -7.773620128631592
    5. 'flip' → logprob: -8.27362060546875
    6. 'gain' → logprob: -9.14862060546875
    7. 'dif' → logprob: -9.64862060546875
    8. 'import' → logprob: -10.64862060546875
    9. 'd' → logprob: -11.27362060546875
    10. 'change' → logprob: -11.39862060546875

Token 350: ' flipping' (ID: 110780)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -1.4142651557922363
    2. 'i' → logprob: -2.1642651557922363
    3. 'arr' → logprob: -2.1642651557922363
    4. 'pattern' → logprob: -2.2892651557922363
    5. 'diff' → logprob: -2.4142651557922363
    6. 'def' → logprob: -2.9142651557922363
    7. ' def' → logprob: -2.9142651557922363
    8. 'd' → logprob: -3.1642651557922363
    9. ' diff' → logprob: -3.1642651557922363
    10. ' pattern' → logprob: -3.2892651557922363

Token 351: ' a' (ID: 261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6558667421340942
    2. 'diff' → logprob: -1.6558667421340942
    3. ' for' → logprob: -2.0308666229248047
    4. 'for' → logprob: -2.1558666229248047
    5. '_diff' → logprob: -3.4058666229248047
    6. ')' → logprob: -3.5308666229248047
    7. ' i' → logprob: -3.6558666229248047
    8. ' in' → logprob: -3.7808666229248047
    9. 'matches' → logprob: -3.7808666229248047
    10. 'delta' → logprob: -3.7808666229248047

Token 352: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.662107527256012
    2. 'segment' → logprob: -2.037107467651367
    3. '[i' → logprob: -2.412107467651367
    4. 'matches' → logprob: -2.662107467651367
    5. 'i' → logprob: -3.162107467651367
    6. '[' → logprob: -3.412107467651367
    7. 'flip' → logprob: -3.912107467651367
    8. 'range' → logprob: -4.162107467651367
    9. 'pattern' → logprob: -4.537107467651367
    10. '1' → logprob: -4.662107467651367

Token 353: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.0011892797192558646
    2. 'arr' → logprob: -7.626189231872559
    3. '#' → logprob: -8.376189231872559
    4. '_array' → logprob: -9.251189231872559
    5. '[' → logprob: -9.626189231872559
    6. ' array' → logprob: -10.251189231872559
    7. ']' → logprob: -10.376189231872559
    8. ')' → logprob: -10.376189231872559
    9. '_' → logprob: -10.376189231872559
    10. ' =' → logprob: -10.501189231872559

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13328275084495544
    2. 'diff' → logprob: -2.2582826614379883
    3. 'delta' → logprob: -5.258282661437988
    4. 'flip' → logprob: -5.633282661437988
    5. 'def' → logprob: -6.008282661437988
    6. ',
' → logprob: -6.258282661437988
    7. 'd' → logprob: -6.383282661437988
    8. '#' → logprob: -7.008282661437988
    9. ' ,' → logprob: -7.133282661437988
    10. 'dif' → logprob: -7.383282661437988

Token 355: ' the' (ID: 290)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.02860763669013977
    2. 'delta' → logprob: -4.2786078453063965
    3. 'flip' → logprob: -4.7786078453063965
    4. ' diff' → logprob: -5.9036078453063965
    5. 'for' → logprob: -7.4036078453063965
    6. '#' → logprob: -7.6536078453063965
    7. 'd' → logprob: -7.7786078453063965
    8. 'dp' → logprob: -7.9036078453063965
    9. 'gain' → logprob: -8.278607368469238
    10. 'difference' → logprob: -8.403607368469238

Token 356: ' match' (ID: 3981)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.13187967240810394
    2. 'delta' → logprob: -3.1318795680999756
    3. 'flip' → logprob: -3.3818795680999756
    4. 'difference' → logprob: -4.131879806518555
    5. 'gain' → logprob: -5.256879806518555
    6. 'change' → logprob: -5.506879806518555
    7. 'effect' → logprob: -5.506879806518555
    8. ' diff' → logprob: -5.631879806518555
    9. 'd' → logprob: -5.881879806518555
    10. 'dif' → logprob: -6.006879806518555

Token 357: ' changes' (ID: 6629)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7968447208404541
    2. ' =' → logprob: -1.421844720840454
    3. '_diff' → logprob: -1.796844720840454
    4. '_change' → logprob: -3.296844720840454
    5. 'diff' → logprob: -3.421844720840454
    6. '_changes' → logprob: -4.046844482421875
    7. '_after' → logprob: -4.796844482421875
    8. '_delta' → logprob: -4.921844482421875
    9. 's' → logprob: -4.921844482421875
    10. '_flip' → logprob: -5.296844482421875

Token 358: ':
' (ID: 734)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0573309101164341
    2. ',' → logprob: -3.807330846786499
    3. 'delta' → logprob: -4.057331085205078
    4. 'd' → logprob: -5.932331085205078
    5. '_diff' → logprob: -6.057331085205078
    6. ' diff' → logprob: -6.182331085205078
    7. 'dif' → logprob: -6.182331085205078
    8. ':' → logprob: -6.682331085205078
    9. ' delta' → logprob: -6.682331085205078
    10. '#' → logprob: -6.682331085205078

Token 359: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.1939854621887207
    2. 'delta' → logprob: -2.9439854621887207
    3. ' diff' → logprob: -3.3189854621887207
    4. 'flip' → logprob: -3.6939854621887207
    5. ' delta' → logprob: -3.9439854621887207
    6. ' flip' → logprob: -4.693985462188721
    7. 'def' → logprob: -4.818985462188721
    8. 'for' → logprob: -5.693985462188721
    9. ' for' → logprob: -5.943985462188721
    10. 'difference' → logprob: -5.943985462188721

Token 360: ' positions' (ID: 15897)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.06454265117645264
    2. 'delta' → logprob: -3.564542770385742
    3. 'flip' → logprob: -4.064542770385742
    4. '#' → logprob: -5.064542770385742
    5. ' diff' → logprob: -5.564542770385742
    6. 'd' → logprob: -6.189542770385742
    7. 'difference' → logprob: -7.064542770385742
    8. 'change' → logprob: -7.189542770385742
    9. 'dp' → logprob: -7.314542770385742
    10. 'def' → logprob: -7.689542770385742

Token 361: ' inside' (ID: 6772)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0483298301696777
    2. ' =' → logprob: -1.5483298301696777
    3. ' where' → logprob: -1.9233298301696777
    4. 'where' → logprob: -2.4233298301696777
    5. ' in' → logprob: -2.9233298301696777
    6. 'in' → logprob: -3.0483298301696777
    7. '<|end|>' → logprob: -3.9233298301696777
    8. '#' → logprob: -4.298329830169678
    9. '[i' → logprob: -4.298329830169678
    10. 'i' → logprob: -4.798329830169678

Token 362: ' flipped' (ID: 96664)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8398219347000122
    2. '[l' → logprob: -1.3398219347000122
    3. ' the' → logprob: -1.5898219347000122
    4. 'sub' → logprob: -3.3398218154907227
    5. ' =' → logprob: -4.089821815490723
    6. '[' → logprob: -4.964821815490723
    7. '=' → logprob: -5.089821815490723
    8. ' [' → logprob: -5.464821815490723
    9. '=[' → logprob: -5.589821815490723
    10. 'fl' → logprob: -5.589821815490723

Token 363: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.088791847229004
    2. 'matches' → logprob: -1.463791847229004
    3. '[' → logprob: -2.088791847229004
    4. 'segment' → logprob: -2.838791847229004
    5. ' sub' → logprob: -2.963791847229004
    6. ' matches' → logprob: -3.088791847229004
    7. ' segment' → logprob: -3.713791847229004
    8. '[i' → logprob: -4.088791847229004
    9. ']' → logprob: -4.088791847229004
    10. '#' → logprob: -4.088791847229004

Token 364: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.0008006958523765206
    2. 'arr' → logprob: -7.875800609588623
    3. ']' → logprob: -8.625801086425781
    4. 'rray' → logprob: -9.875801086425781
    5. 'for' → logprob: -10.250801086425781
    6. '#' → logprob: -10.250801086425781
    7. 'arrays' → logprob: -10.875801086425781
    8. ' =' → logprob: -11.375801086425781
    9. '_array' → logprob: -11.500801086425781
    10. '   ' → logprob: -11.500801086425781

Token 365: ' are' (ID: 553)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9819145202636719
    2. '=' → logprob: -2.106914520263672
    3. ' are' → logprob: -2.106914520263672
    4. ':' → logprob: -2.231914520263672
    5. '#' → logprob: -2.231914520263672
    6. ' =' → logprob: -2.481914520263672
    7. ' will' → logprob: -3.356914520263672
    8. ' can' → logprob: -5.481914520263672
    9. 'diff' → logprob: -5.606914520263672
    10. 'flip' → logprob: -5.606914520263672

Token 366: ' flipped' (ID: 96664)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.6469277143478394
    2. ' flipped' → logprob: -1.6469277143478394
    3. ' togg' → logprob: -1.8969277143478394
    4. '1' → logprob: -2.646927833557129
    5. ' ^=' → logprob: -3.396927833557129
    6. ' ' → logprob: -4.521927833557129
    7. '^' → logprob: -5.146927833557129
    8. '0' → logprob: -6.021927833557129
    9. ' inverted' → logprob: -6.146927833557129
    10. 'in' → logprob: -6.271927833557129

Token 367: ':' (ID: 25)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5966675877571106
    2. ',' → logprob: -0.9716675877571106
    3. 'flip' → logprob: -4.096667766571045
    4. 'delta' → logprob: -4.096667766571045
    5. ']' → logprob: -4.846667766571045
    6. ' diff' → logprob: -5.471667766571045
    7. '#' → logprob: -5.471667766571045
    8. 'd' → logprob: -5.596667766571045
    9. ',
' → logprob: -5.846667766571045
    10. 'dif' → logprob: -6.096667766571045

Token 368: ' match' (ID: 3981)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8812345266342163
    2. 'diff' → logprob: -2.131234645843506
    3. 'matches' → logprob: -2.131234645843506
    4. ' matches' → logprob: -2.256234645843506
    5. ' for' → logprob: -2.506234645843506
    6. 'flip' → logprob: -2.881234645843506
    7. '#' → logprob: -3.506234645843506
    8. ' delta' → logprob: -3.631234645843506
    9. 'for' → logprob: -3.631234645843506
    10. ',' → logprob: -3.631234645843506

Token 369: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.47807398438453674
    2. ' =' → logprob: -1.4780739545822144
    3. ' ^=' → logprob: -3.103074073791504
    4. '=' → logprob: -3.478074073791504
    5. 's' → logprob: -3.603074073791504
    6. 'diff' → logprob: -5.103074073791504
    7. '_values' → logprob: -5.603074073791504
    8. '_change' → logprob: -5.853074073791504
    9. ' changes' → logprob: -5.978074073791504
    10. '_changes' → logprob: -5.978074073791504

Token 370: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005591244902461767
    2. ']=' → logprob: -5.88059139251709
    3. '=' → logprob: -6.38059139251709
    4. ']^' → logprob: -7.88059139251709
    5. ' ^=' → logprob: -8.00559139251709
    6. ' =' → logprob: -8.75559139251709
    7. '^' → logprob: -9.13059139251709
    8. ']==' → logprob: -10.13059139251709
    9. ']]' → logprob: -10.63059139251709
    10. ' ]' → logprob: -11.63059139251709

Token 371: ' :=' (ID: 3405)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40950027108192444
    2. '^' → logprob: -1.909500241279602
    3. ' ^' → logprob: -2.2845003604888916
    4. ' =' → logprob: -2.7845003604888916
    5. ' ^=' → logprob: -3.7845003604888916
    6. ' ' → logprob: -8.034500122070312
    7. '==' → logprob: -8.659500122070312
    8. '-' → logprob: -8.659500122070312
    9. '1' → logprob: -9.034500122070312
    10. ']' → logprob: -9.284500122070312

Token 372: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026848804554902017
    2. '0' → logprob: -8.625268936157227
    3. ' ' → logprob: -9.375268936157227
    4. 'matches' → logprob: -12.875268936157227
    5. '   ' → logprob: -14.375268936157227
    6. '```' → logprob: -15.000268936157227
    7. ' matches' → logprob: -15.875268936157227
    8. '(' → logprob: -16.500268936157227
    9. '(matches' → logprob: -16.500268936157227
    10. 'abs' → logprob: -16.875268936157227

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019970352295786142
    2. '0' → logprob: -6.751996994018555
    3. ' ' → logprob: -7.126996994018555
    4. 'matches' → logprob: -11.001996994018555
    5. '   ' → logprob: -12.876996994018555
    6. ' matches' → logprob: -14.126996994018555
    7. '```' → logprob: -14.501996994018555
    8. 'abs' → logprob: -14.751996994018555
    9. '(matches' → logprob: -15.001996994018555
    10. 'int' → logprob: -15.001996994018555

Token 374: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3871811628341675
    2. ' -' → logprob: -1.1371811628341675
    3. '-m' → logprob: -8.512181282043457
    4. ' if' → logprob: -9.262181282043457
    5. '-if' → logprob: -12.012181282043457
    6. '-match' → logprob: -13.012181282043457
    7. ' ^' → logprob: -13.762181282043457
    8. 'if' → logprob: -13.887181282043457
    9. '^' → logprob: -14.262181282043457
    10. '-ex' → logprob: -14.387181282043457

Token 375: ' match' (ID: 3981)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.38836216926574707
    2. 'match' → logprob: -1.138362169265747
    3. ' matches' → logprob: -6.763361930847168
    4. ' match' → logprob: -8.013361930847168
    5. '	match' → logprob: -13.388361930847168
    6. '(matches' → logprob: -13.888361930847168
    7. '_matches' → logprob: -15.013361930847168
    8. 'mat' → logprob: -15.388361930847168
    9. 'matching' → logprob: -16.013362884521484
    10. '(match' → logprob: -16.138362884521484

Token 376: '[i' (ID: 1768)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.2649209499359131
    2. 's' → logprob: -2.139920949935913
    3. '#' → logprob: -3.014920949935913
    4. 'matches' → logprob: -4.014921188354492
    5. '_diff' → logprob: -4.139921188354492
    6. ',' → logprob: -4.889921188354492
    7. 'for' → logprob: -5.764921188354492
    8. 'dif' → logprob: -5.764921188354492
    9. 'def' → logprob: -5.889921188354492
    10. 'flip' → logprob: -6.014921188354492

Token 377: ']
' (ID: 1592)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0031838975846767426
    2. ']' → logprob: -5.753183841705322
    3. 'i' → logprob: -12.50318431854248
    4. '][' → logprob: -13.87818431854248
    5. '```' → logprob: -15.12818431854248
    6. '[' → logprob: -15.25318431854248
    7. '(i' → logprob: -15.50318431854248
    8. '   ' → logprob: -15.87818431854248
    9. '[]' → logprob: -16.003183364868164
    10. ' ]' → logprob: -16.003183364868164

Token 378: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4118940532207489
    2. 'def' → logprob: -1.9118940830230713
    3. 'delta' → logprob: -2.2868940830230713
    4. '#' → logprob: -3.5368940830230713
    5. '
' → logprob: -3.9118940830230713
    6. 'flip' → logprob: -4.161893844604492
    7. 'dp' → logprob: -5.161893844604492
    8. 'difference' → logprob: -5.911893844604492
    9. 'd' → logprob: -6.161893844604492
    10. ' delta' → logprob: -6.286893844604492

Token 379: ' we' (ID: 581)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.051460977643728256
    2. 'def' → logprob: -3.9264609813690186
    3. 'delta' → logprob: -4.1764607429504395
    4. '#' → logprob: -5.1764607429504395
    5. 'flip' → logprob: -5.8014607429504395
    6. 'gain' → logprob: -6.1764607429504395
    7. 'dp' → logprob: -6.6764607429504395
    8. 'change' → logprob: -7.3014607429504395
    9. 'difference' → logprob: -7.3014607429504395
    10. 'dif' → logprob: -7.6764607429504395

Token 380: ' want' (ID: 1682)
  Prédit: ' want'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' want' → logprob: -1.1332741975784302
    2. '#' → logprob: -1.5082741975784302
    3. 'need' → logprob: -1.8832741975784302
    4. 'want' → logprob: -2.1332740783691406
    5. ' need' → logprob: -2.2582740783691406
    6. ' can' → logprob: -3.2582740783691406
    7. 'can' → logprob: -3.6332740783691406
    8. 'w' → logprob: -5.508274078369141
    9. 'def' → logprob: -5.633274078369141
    10. 'd' → logprob: -6.383274078369141

Token 381: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5232766270637512
    2. 'to' → logprob: -0.8982766270637512
    3. '#' → logprob: -9.398276329040527
    4. 'def' → logprob: -10.898276329040527
    5. 'diff' → logprob: -11.023276329040527
    6. 'max' → logprob: -11.398276329040527
    7. 'a' → logprob: -12.523276329040527
    8. '_to' → logprob: -13.023276329040527
    9. 'difference' → logprob: -13.023276329040527
    10. 'for' → logprob: -13.273276329040527

Token 382: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.5298631191253662
    2. 'maximize' → logprob: -0.9048631191253662
    3. ' find' → logprob: -5.154863357543945
    4. ' maximize' → logprob: -7.654863357543945
    5. 'calculate' → logprob: -8.279863357543945
    6. 'flip' → logprob: -9.779863357543945
    7. 'consider' → logprob: -10.529863357543945
    8. 'try' → logprob: -10.654863357543945
    9. 'compute' → logprob: -10.654863357543945
    10. '#' → logprob: -10.904863357543945

Token 383: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8469600081443787
    2. 'a' → logprob: -1.5969600677490234
    3. 'diff' → logprob: -2.3469600677490234
    4. 'max' → logprob: -2.5969600677490234
    5. 'delta' → logprob: -3.0969600677490234
    6. 'for' → logprob: -3.4719600677490234
    7. '<|end|>' → logprob: -3.5969600677490234
    8. ' the' → logprob: -3.7219600677490234
    9. 'arr' → logprob: -3.8469600677490234
    10. 'an' → logprob: -4.221960067749023

Token 384: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.03581909462809563
    2. ' sub' → logprob: -3.4108190536499023
    3. 'segment' → logprob: -6.410819053649902
    4. ' segment' → logprob: -8.160819053649902
    5. 'max' → logprob: -8.785819053649902
    6. '[' → logprob: -10.660819053649902
    7. '_sub' → logprob: -11.535819053649902
    8. '[i' → logprob: -11.660819053649902
    9. 'flip' → logprob: -12.035819053649902
    10. 'range' → logprob: -12.035819053649902

Token 385: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -2.7133641196996905e-05
    2. 'arr' → logprob: -11.25002670288086
    3. '#' → logprob: -12.75002670288086
    4. '[' → logprob: -12.87502670288086
    5. 'segment' → logprob: -13.00002670288086
    6. 'sequence' → logprob: -13.37502670288086
    7. '_array' → logprob: -13.50002670288086
    8. 'ar' → logprob: -14.50002670288086
    9. ' array' → logprob: -14.75002670288086
    10. 'tracted' → logprob: -14.75002670288086

Token 386: ' [' (ID: 723)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.8399341702461243
    2. '<|end|>' → logprob: -1.2149341106414795
    3. 'diff' → logprob: -1.9649341106414795
    4. ' of' → logprob: -4.089934349060059
    5. ' to' → logprob: -4.089934349060059
    6. ' with' → logprob: -4.214934349060059
    7. 'that' → logprob: -4.464934349060059
    8. ' delta' → logprob: -4.839934349060059
    9. ' whose' → logprob: -4.839934349060059
    10. ' diff' → logprob: -4.839934349060059

Token 387: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03420918807387352
    2. 'i' → logprob: -3.4092092514038086
    3. ']' → logprob: -9.034209251403809
    4. '0' → logprob: -9.159209251403809
    5. ' l' → logprob: -9.159209251403809
    6. ',' → logprob: -10.034209251403809
    7. 'start' → logprob: -10.284209251403809
    8. ')' → logprob: -10.409209251403809
    9. '<|end|>' → logprob: -10.409209251403809
    10. ' i' → logprob: -10.659209251403809

Token 388: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009549600072205067
    2. ',r' → logprob: -4.759549617767334
    3. '=' → logprob: -7.759549617767334
    4. ',
' → logprob: -9.009549140930176
    5. ' ,' → logprob: -9.009549140930176
    6. 'r' → logprob: -10.134549140930176
    7. ',l' → logprob: -10.259549140930176
    8. ',j' → logprob: -10.384549140930176
    9. ',n' → logprob: -10.634549140930176
    10. ',len' → logprob: -10.634549140930176

Token 389: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014287306112237275
    2. ' ]' → logprob: -9.875143051147461
    3. ',' → logprob: -10.625143051147461
    4. ' that' → logprob: -10.750143051147461
    5. 'that' → logprob: -11.250143051147461
    6. 'for' → logprob: -12.250143051147461
    7. ')' → logprob: -12.375143051147461
    8. '],' → logprob: -12.500143051147461
    9. '#' → logprob: -12.750143051147461
    10. ' such' → logprob: -12.875143051147461

Token 390: ' where' (ID: 1919)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.5245448350906372
    2. '<|end|>' → logprob: -1.7745448350906372
    3. ',' → logprob: -1.8995448350906372
    4. 'that' → logprob: -2.8995447158813477
    5. ' to' → logprob: -4.774544715881348
    6. ')' → logprob: -5.024544715881348
    7. ' in' → logprob: -6.149544715881348
    8. ']' → logprob: -6.149544715881348
    9. 'to' → logprob: -6.274544715881348
    10. '<|end|>' → logprob: -6.274544715881348

Token 391: ' replacing' (ID: 39866)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.6522344946861267
    2. 'the' → logprob: -1.7772345542907715
    3. ' flipping' → logprob: -1.9022345542907715
    4. 'diff' → logprob: -2.4022345542907715
    5. ' the' → logprob: -4.0272345542907715
    6. 'delta' → logprob: -4.2772345542907715
    7. 'we' → logprob: -4.4022345542907715
    8. 'difference' → logprob: -4.7772345542907715
    9. 'flip' → logprob: -4.9022345542907715
    10. '#' → logprob: -6.0272345542907715

Token 392: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.08169049024581909
    2. ' matches' → logprob: -2.956690549850464
    3. 'match' → logprob: -4.081690311431885
    4. 'the' → logprob: -6.081690311431885
    5. '<|end|>' → logprob: -6.081690311431885
    6. ' the' → logprob: -6.706690311431885
    7. ' match' → logprob: -6.831690311431885
    8. '1' → logprob: -7.456690311431885
    9. '(matches' → logprob: -7.706690311431885
    10. 's' → logprob: -8.331690788269043

Token 393: '[i' (ID: 1768)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.298054039478302
    2. '[i' → logprob: -1.6730539798736572
    3. '1' → logprob: -3.4230539798736572
    4. 'with' → logprob: -4.673054218292236
    5. '[r' → logprob: -4.923054218292236
    6. '[' → logprob: -5.048054218292236
    7. '```' → logprob: -5.673054218292236
    8. '=' → logprob: -6.548054218292236
    9. 'i' → logprob: -6.673054218292236
    10. 'l' → logprob: -6.673054218292236

Token 394: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1569879949092865
    2. '[i' → logprob: -2.1569879055023193
    3. 'with' → logprob: -4.406988143920898
    4. '[l' → logprob: -5.031988143920898
    5. ' with' → logprob: -5.656988143920898
    6. 'for' → logprob: -6.281988143920898
    7. ']==' → logprob: -6.781988143920898
    8. 'by' → logprob: -7.156988143920898
    9. ' by' → logprob: -7.156988143920898
    10. ' for' → logprob: -8.031988143920898

Token 395: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -1.1152008771896362
    2. ' with' → logprob: -1.4902008771896362
    3. 'with' → logprob: -1.4902008771896362
    4. '[i' → logprob: -1.8652008771896362
    5. 'by' → logprob: -3.740200996398926
    6. ',' → logprob: -4.865200996398926
    7. ' ^=' → logprob: -4.990200996398926
    8. '=' → logprob: -5.490200996398926
    9. '==' → logprob: -5.490200996398926
    10. ' ==' → logprob: -5.490200996398926

Token 396: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010926605202257633
    2. ' ' → logprob: -5.135926723480225
    3. '(' → logprob: -5.635926723480225
    4. '`' → logprob: -7.385926723480225
    5. ' (' → logprob: -7.510926723480225
    6. '"' → logprob: -9.510926246643066
    7. ''' → logprob: -10.010926246643066
    8. '[' → logprob: -10.010926246643066
    9. '   ' → logprob: -11.135926246643066
    10. '```' → logprob: -11.135926246643066

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002088400535285473
    2. '(' → logprob: -6.50208854675293
    3. ' ' → logprob: -7.75208854675293
    4. '`' → logprob: -9.37708854675293
    5. ' (' → logprob: -10.50208854675293
    6. '[' → logprob: -11.12708854675293
    7. '"' → logprob: -11.62708854675293
    8. '   ' → logprob: -12.62708854675293
    9. '```' → logprob: -12.62708854675293
    10. ''' → logprob: -12.75208854675293

Token 398: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4078676104545593
    2. '-' → logprob: -1.157867670059204
    3. '-m' → logprob: -3.907867670059204
    4. ' if' → logprob: -8.407867431640625
    5. '[' → logprob: -9.407867431640625
    6. '-match' → logprob: -9.532867431640625
    7. 'matches' → logprob: -10.157867431640625
    8. '[i' → logprob: -10.407867431640625
    9. '-if' → logprob: -10.532867431640625
    10. '   ' → logprob: -10.532867431640625

Token 399: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.018269339576363564
    2. ' matches' → logprob: -4.0182695388793945
    3. '(matches' → logprob: -9.768269538879395
    4. 'match' → logprob: -10.143269538879395
    5. '<|end|>' → logprob: -11.643269538879395
    6. '_matches' → logprob: -11.768269538879395
    7. 'm' → logprob: -13.518269538879395
    8. ' ' → logprob: -13.643269538879395
    9. 'space' → logprob: -14.643269538879395
    10. '```' → logprob: -14.768269538879395

Token 400: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005626845522783697
    2. 'i' → logprob: -8.12556266784668
    3. '```' → logprob: -9.00056266784668
    4. '[r' → logprob: -10.50056266784668
    5. '[l' → logprob: -10.50056266784668
    6. 's' → logprob: -10.87556266784668
    7. '_i' → logprob: -11.00056266784668
    8. '\[' → logprob: -11.12556266784668
    9. '[' → logprob: -12.12556266784668
    10. '1' → logprob: -12.25056266784668

Token 401: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40116608142852783
    2. 'for' → logprob: -1.2761660814285278
    3. ' for' → logprob: -3.5261659622192383
    4. '[i' → logprob: -4.401165962219238
    5. ' will' → logprob: -6.401165962219238
    6. 'would' → logprob: -6.776165962219238
    7. 'will' → logprob: -7.026165962219238
    8. ',' → logprob: -7.401165962219238
    9. '#' → logprob: -7.651165962219238
    10. ' would' → logprob: -7.651165962219238

Token 402: ' increases' (ID: 21073)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5807262659072876
    2. 'for' → logprob: -1.7057262659072876
    3. ' for' → logprob: -2.955726146697998
    4. 'would' → logprob: -3.080726146697998
    5. ',' → logprob: -3.330726146697998
    6. 'max' → logprob: -3.705726146697998
    7. ' would' → logprob: -4.080726146697998
    8. ' in' → logprob: -4.205726146697998
    9. 'in' → logprob: -4.205726146697998
    10. ' will' → logprob: -4.330726146697998

Token 403: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7779603600502014
    2. 'max' → logprob: -1.2779603004455566
    3. 'the' → logprob: -1.6529603004455566
    4. ' max' → logprob: -3.4029603004455566
    5. 'matches' → logprob: -4.902960300445557
    6. 'diff' → logprob: -5.527960300445557
    7. '1' → logprob: -5.652960300445557
    8. 'difference' → logprob: -5.777960300445557
    9. ' matches' → logprob: -6.402960300445557
    10. '<|end|>' → logprob: -6.527960300445557

Token 404: ' maximum' (ID: 10562)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.5278539061546326
    2. 'max' → logprob: -1.9028539657592773
    3. 'sum' → logprob: -2.5278539657592773
    4. 'maximum' → logprob: -2.7778539657592773
    5. 'diff' → logprob: -3.5278539657592773
    6. 'gain' → logprob: -4.027853965759277
    7. 'delta' → logprob: -4.152853965759277
    8. ' net' → logprob: -4.527853965759277
    9. 'value' → logprob: -4.777853965759277
    10. 'score' → logprob: -5.277853965759277

Token 405: ' length' (ID: 5517)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.1498957872390747
    2. 'difference' → logprob: -1.3998957872390747
    3. 'matches' → logprob: -2.274895668029785
    4. 'delta' → logprob: -3.024895668029785
    5. 'gain' → logprob: -3.149895668029785
    6. '_diff' → logprob: -3.149895668029785
    7. '_' → logprob: -3.899895668029785
    8. 'sum' → logprob: -4.149895668029785
    9. 'sub' → logprob: -4.274895668029785
    10. 'change' → logprob: -4.274895668029785

Token 406: ' of' (ID: 328)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5818667411804199
    2. '#' → logprob: -1.08186674118042
    3. 'def' → logprob: -3.33186674118042
    4. 'delta' → logprob: -3.70686674118042
    5. '
' → logprob: -4.83186674118042
    6. 'gain' → logprob: -4.83186674118042
    7. 'import' → logprob: -5.33186674118042
    8. ',' → logprob: -5.83186674118042
    9. 'difference' → logprob: -5.83186674118042
    10. 'from' → logprob: -6.70686674118042

Token 407: ' alternating' (ID: 125099)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'altern' → logprob: -0.9356564283370972
    2. 'con' → logprob: -1.4356564283370972
    3. '1' → logprob: -1.6856564283370972
    4. ' alternating' → logprob: -3.5606565475463867
    5. 'the' → logprob: -3.6856565475463867
    6. 'continuous' → logprob: -4.060656547546387
    7. ' contiguous' → logprob: -4.060656547546387
    8. 'alt' → logprob: -4.310656547546387
    9. ' consecutive' → logprob: -4.435656547546387
    10. ' ' → logprob: -4.560656547546387

Token 408: ' sequence' (ID: 16281)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.10877497494220734
    2. '#' → logprob: -3.6087749004364014
    3. 'difference' → logprob: -3.9837749004364014
    4. 'delta' → logprob: -4.3587751388549805
    5. 'score' → logprob: -4.3587751388549805
    6. 'gain' → logprob: -4.9837751388549805
    7. '_diff' → logprob: -5.3587751388549805
    8. 'sequence' → logprob: -5.3587751388549805
    9. 'def' → logprob: -5.4837751388549805
    10. 'dif' → logprob: -6.2337751388549805

Token 409: '.

' (ID: 364)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.06812804192304611
    2. 'delta' → logprob: -3.8181281089782715
    3. '
' → logprob: -4.4431281089782715
    4. '#' → logprob: -4.5681281089782715
    5. '<|end|>' → logprob: -4.9431281089782715
    6. 'def' → logprob: -5.8181281089782715
    7. 'flip' → logprob: -5.8181281089782715
    8. ',' → logprob: -6.1931281089782715
    9. 'dp' → logprob: -6.9431281089782715
    10. 'difference' → logprob: -7.0681281089782715

Token 410: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.034541718661785126
    2. 'def' → logprob: -4.409541606903076
    3. 'delta' → logprob: -4.659541606903076
    4. '#' → logprob: -5.159541606903076
    5. 'gain' → logprob: -5.284541606903076
    6. 'flip' → logprob: -7.534541606903076
    7. 'change' → logprob: -7.909541606903076
    8. 'dif' → logprob: -8.909542083740234
    9. 'd' → logprob: -9.159542083740234
    10. 'difference' → logprob: -9.534542083740234

Token 411: ' To' (ID: 2514)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.655824601650238
    2. 'diff' → logprob: -0.780824601650238
    3. '#' → logprob: -4.530824661254883
    4. 'delta' → logprob: -5.030824661254883
    5. 'import' → logprob: -6.780824661254883
    6. 'gain' → logprob: -6.780824661254883
    7. 'from' → logprob: -6.905824661254883
    8. 'change' → logprob: -7.155824661254883
    9. 'flip' → logprob: -7.405824661254883
    10. 'dif' → logprob: -8.530824661254883

Token 412: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.11246666312217712
    2. 'an' → logprob: -3.48746657371521
    3. 'ach' → logprob: -4.112466812133789
    4. 'maximize' → logprob: -4.112466812133789
    5. 'solve' → logprob: -4.237466812133789
    6. 'do' → logprob: -4.737466812133789
    7. 'handle' → logprob: -5.737466812133789
    8. '#' → logprob: -5.987466812133789
    9. 'consider' → logprob: -6.112466812133789
    10. ' find' → logprob: -6.237466812133789

Token 413: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6252895593643188
    2. 'max' → logprob: -1.1252895593643188
    3. 'diff' → logprob: -3.0002894401550293
    4. 'a' → logprob: -3.7502894401550293
    5. ' the' → logprob: -4.000289440155029
    6. 'best' → logprob: -5.125289440155029
    7. 'def' → logprob: -5.250289440155029
    8. 'sub' → logprob: -5.250289440155029
    9. 'gain' → logprob: -5.250289440155029
    10. 'delta' → logprob: -5.500289440155029

Token 414: ' sub' (ID: 1543)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.4968365728855133
    2. 'max' → logprob: -1.621836543083191
    3. 'diff' → logprob: -2.3718366622924805
    4. ' best' → logprob: -3.6218366622924805
    5. 'gain' → logprob: -3.8718366622924805
    6. 'difference' → logprob: -4.1218366622924805
    7. 'delta' → logprob: -4.4968366622924805
    8. ' max' → logprob: -5.2468366622924805
    9. 'change' → logprob: -5.3718366622924805
    10. 'flip' → logprob: -5.4968366622924805

Token 415: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.0004236435634084046
    2. 'arr' → logprob: -8.250423431396484
    3. 'arrays' → logprob: -9.375423431396484
    4. '#' → logprob: -11.000423431396484
    5. '_array' → logprob: -11.125423431396484
    6. 'ar' → logprob: -11.125423431396484
    7. 'max' → logprob: -11.875423431396484
    8. '_max' → logprob: -12.125423431396484
    9. 'tract' → logprob: -12.250423431396484
    10. 'tracted' → logprob: -12.625423431396484

Token 416: ' that' (ID: 484)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4181137979030609
    2. '<|end|>' → logprob: -2.2931137084960938
    3. ' that' → logprob: -3.0431137084960938
    4. '_diff' → logprob: -3.5431137084960938
    5. ',' → logprob: -3.5431137084960938
    6. 'to' → logprob: -3.7931137084960938
    7. 'delta' → logprob: -3.7931137084960938
    8. ' to' → logprob: -4.168113708496094
    9. ' diff' → logprob: -4.668113708496094
    10. ' =' → logprob: -4.793113708496094

Token 417: ' maxim' (ID: 29045)
  Prédit: 'maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximize' → logprob: -1.120412826538086
    2. 'max' → logprob: -1.495412826538086
    3. 'increase' → logprob: -1.870412826538086
    4. ' maxim' → logprob: -2.495412826538086
    5. 'im' → logprob: -2.495412826538086
    6. ' increases' → logprob: -2.870412826538086
    7. 'in' → logprob: -3.745412826538086
    8. ' maximize' → logprob: -3.995412826538086
    9. 'flip' → logprob: -4.245412826538086
    10. 'g' → logprob: -5.370412826538086

Token 418: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -0.07948220521211624
    2. 'ize' → logprob: -2.579482316970825
    3. 'zes' → logprob: -8.079482078552246
    4. 'ze' → logprob: -9.329482078552246
    5. 'al' → logprob: -10.204482078552246
    6. 'imize' → logprob: -10.454482078552246
    7. '#' → logprob: -10.454482078552246
    8. 'iz' → logprob: -10.579482078552246
    9. 'izing' → logprob: -11.079482078552246
    10. 'IZES' → logprob: -11.204482078552246

Token 419: ' increase' (ID: 7064)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.13428457081317902
    2. ' the' → logprob: -2.259284496307373
    3. 'gain' → logprob: -4.634284496307373
    4. 'increase' → logprob: -5.509284496307373
    5. 'delta' → logprob: -6.259284496307373
    6. 'difference' → logprob: -6.384284496307373
    7. 'diff' → logprob: -6.634284496307373
    8. 'flip' → logprob: -7.759284496307373
    9. 'max' → logprob: -7.884284496307373
    10. 'increment' → logprob: -8.259284973144531

Token 420: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.3722747564315796
    2. 'diff' → logprob: -1.7472747564315796
    3. ' in' → logprob: -1.9972747564315796
    4. '_in' → logprob: -2.122274875640869
    5. ',' → logprob: -2.247274875640869
    6. '_diff' → logprob: -2.747274875640869
    7. 'arr' → logprob: -3.622274875640869
    8. '[i' → logprob: -3.997274875640869
    9. 'd' → logprob: -4.372274875640869
    10. 'delta' → logprob: -4.497274875640869

Token 421: ' longest' (ID: 37511)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.5308271646499634
    2. 'match' → logprob: -1.2808271646499634
    3. 'max' → logprob: -3.405827045440674
    4. 'length' → logprob: -3.780827045440674
    5. 'the' → logprob: -3.905827045440674
    6. 'matching' → logprob: -4.030827045440674
    7. 'altern' → logprob: -4.280827045440674
    8. 'con' → logprob: -4.780827045440674
    9. 'difference' → logprob: -5.530827045440674
    10. 'continuous' → logprob: -5.905827045440674

Token 422: ' alt' (ID: 5001)
  Prédit: '_alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_alt' → logprob: -0.1419098824262619
    2. 'alt' → logprob: -3.3919098377227783
    3. 'match' → logprob: -3.5169098377227783
    4. 'length' → logprob: -3.7669098377227783
    5. 'matches' → logprob: -4.891910076141357
    6. ' length' → logprob: -5.391910076141357
    7. 'diff' → logprob: -5.641910076141357
    8. 'run' → logprob: -5.766910076141357
    9. 'altern' → logprob: -5.891910076141357
    10. '_length' → logprob: -6.016910076141357

Token 423: ' sequence' (ID: 16281)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_diff' → logprob: -1.1079498529434204
    2. '_len' → logprob: -1.2329498529434204
    3. '_length' → logprob: -1.6079498529434204
    4. '_match' → logprob: -2.732949733734131
    5. 'diff' → logprob: -3.107949733734131
    6. 'match' → logprob: -5.107949733734131
    7. 'length' → logprob: -5.357949733734131
    8. '_gain' → logprob: -5.357949733734131
    9. '_sub' → logprob: -5.482949733734131
    10. '[' → logprob: -5.482949733734131

Token 424: ',' (ID: 11)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.03372419625520706
    2. 'delta' → logprob: -4.158724308013916
    3. 'gain' → logprob: -5.158724308013916
    4. '#' → logprob: -5.533724308013916
    5. ',' → logprob: -5.908724308013916
    6. 'change' → logprob: -6.408724308013916
    7. 'difference' → logprob: -7.283724308013916
    8. 'def' → logprob: -7.408724308013916
    9. 'dif' → logprob: -7.658724308013916
    10. 'import' → logprob: -7.908724308013916

Token 425: ' we' (ID: 581)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.10438217222690582
    2. '#' → logprob: -3.104382276535034
    3. 'delta' → logprob: -3.854382276535034
    4. 'def' → logprob: -4.229382038116455
    5. 'gain' → logprob: -4.479382038116455
    6. 'change' → logprob: -6.229382038116455
    7. 'd' → logprob: -7.104382038116455
    8. 'flip' → logprob: -7.104382038116455
    9. 'difference' → logprob: -7.104382038116455
    10. 'import' → logprob: -7.854382038116455

Token 426: ' consider' (ID: 3331)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.44486212730407715
    2. 'can' → logprob: -2.069862127304077
    3. 'def' → logprob: -2.944862127304077
    4. 'calculate' → logprob: -3.319862127304077
    5. ' need' → logprob: -3.444862127304077
    6. '#' → logprob: -3.819862127304077
    7. 'define' → logprob: -3.944862127304077
    8. 'continue' → logprob: -4.569862365722656
    9. 'try' → logprob: -4.569862365722656
    10. ' can' → logprob: -4.819862365722656

Token 427: ' difference' (ID: 9809)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.029433729127049446
    2. 'delta' → logprob: -4.154433727264404
    3. 'gain' → logprob: -5.029433727264404
    4. 'd' → logprob: -5.404433727264404
    5. 'dif' → logprob: -7.404433727264404
    6. 'change' → logprob: -7.779433727264404
    7. 'difference' → logprob: -8.154434204101562
    8. 'flip' → logprob: -8.279434204101562
    9. 'for' → logprob: -8.529434204101562
    10. ' diff' → logprob: -9.154434204101562

Token 428: ' arrays' (ID: 38774)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37575262784957886
    2. 's' → logprob: -1.8757526874542236
    3. '=' → logprob: -3.0007526874542236
    4. '_arr' → logprob: -3.0007526874542236
    5. '_array' → logprob: -3.6257526874542236
    6. 'arr' → logprob: -3.8757526874542236
    7. 'array' → logprob: -4.8757524490356445
    8. '_arrays' → logprob: -6.5007524490356445
    9. 'arrays' → logprob: -7.0007524490356445
    10. ' arrays' → logprob: -7.2507524490356445

Token 429: ':
' (ID: 734)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.01037686038762331
    2. ' =' → logprob: -5.510376930236816
    3. 'delta' → logprob: -6.135376930236816
    4. ' diff' → logprob: -6.635376930236816
    5. '=' → logprob: -7.135376930236816
    6. 'd' → logprob: -7.635376930236816
    7. 'dp' → logprob: -7.760376930236816
    8. 'difference' → logprob: -8.260376930236816
    9. ',' → logprob: -8.760376930236816
    10. 'A' → logprob: -9.260376930236816

Token 430: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.021816277876496315
    2. ' diff' → logprob: -3.8968162536621094
    3. 'delta' → logprob: -7.271816253662109
    4. 'difference' → logprob: -8.77181625366211
    5. 'gain' → logprob: -8.89681625366211
    6. 'd' → logprob: -9.14681625366211
    7. 'change' → logprob: -9.89681625366211
    8. 'dif' → logprob: -10.14681625366211
    9. ' delta' → logprob: -10.27181625366211
    10. 'increase' → logprob: -11.64681625366211

Token 431: ' For' (ID: 2214)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00155223673209548
    2. 'delta' → logprob: -7.251552104949951
    3. ' diff' → logprob: -7.626552104949951
    4. 'difference' → logprob: -9.00155258178711
    5. 'gain' → logprob: -9.37655258178711
    6. 'change' → logprob: -9.75155258178711
    7. 'd' → logprob: -9.75155258178711
    8. 'dif' → logprob: -11.25155258178711
    9. 'flip' → logprob: -12.62655258178711
    10. 'arr' → logprob: -13.12655258178711

Token 432: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04135509207844734
    2. 'diff' → logprob: -4.041355133056641
    3. 'matches' → logprob: -4.416355133056641
    4. 'd' → logprob: -5.291355133056641
    5. ' i' → logprob: -5.541355133056641
    6. 'each' → logprob: -7.416355133056641
    7. 'difference' → logprob: -7.791355133056641
    8. 'arr' → logprob: -8.66635513305664
    9. 'dif' → logprob: -9.04135513305664
    10. 'delta' → logprob: -9.04135513305664

Token 433: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005078765680082142
    2. ' i' → logprob: -7.625507831573486
    3. 'position' → logprob: -11.375508308410645
    4. '[i' → logprob: -12.625508308410645
    5. 'matches' → logprob: -13.500508308410645
    6. '```' → logprob: -13.875508308410645
    7. 'match' → logprob: -14.375508308410645
    8. ' position' → logprob: -14.500508308410645
    9. 'element' → logprob: -15.500508308410645
    10. ' ' → logprob: -15.875508308410645

Token 434: ' i' (ID: 575)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5923900008201599
    2. ',' → logprob: -1.4673900604248047
    3. ' diff' → logprob: -2.3423900604248047
    4. 'd' → logprob: -2.7173900604248047
    5. ' i' → logprob: -3.8423900604248047
    6. 'i' → logprob: -4.092390060424805
    7. ' d' → logprob: -5.217390060424805
    8. 'delta' → logprob: -5.717390060424805
    9. ' delta' → logprob: -6.217390060424805
    10. ' ,' → logprob: -6.842390060424805

Token 435: ':
' (ID: 734)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.48432013392448425
    2. ',' → logprob: -1.1093201637268066
    3. 'delta' → logprob: -3.7343201637268066
    4. ' diff' → logprob: -4.109320163726807
    5. 'd' → logprob: -4.984320163726807
    6. ' delta' → logprob: -5.859320163726807
    7. 'difference' → logprob: -7.234320163726807
    8. ',
' → logprob: -7.234320163726807
    9. ' ,' → logprob: -7.609320163726807
    10. ':' → logprob: -8.234319686889648

Token 436: '#' (ID: 2)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.4848574101924896
    2. 'diff' → logprob: -0.984857439994812
    3. ' delta' → logprob: -5.359857559204102
    4. 'd' → logprob: -6.109857559204102
    5. 'delta' → logprob: -6.484857559204102
    6. ' val' → logprob: -7.359857559204102
    7. ' dif' → logprob: -7.859857559204102
    8. ' d' → logprob: -8.109857559204102
    9. ' gain' → logprob: -8.859857559204102
    10. ' arr' → logprob: -9.109857559204102

Token 437: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.04287871718406677
    2. ' diff' → logprob: -3.5428786277770996
    3. 'delta' → logprob: -4.7928786277771
    4. 'val' → logprob: -6.5428786277771
    5. ' delta' → logprob: -6.9178786277771
    6. 'gain' → logprob: -7.1678786277771
    7. 'change' → logprob: -7.2928786277771
    8. 'd' → logprob: -8.042879104614258
    9. ' val' → logprob: -8.542879104614258
    10. '   ' → logprob: -8.917879104614258

Token 438: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06694760918617249
    2. '=' → logprob: -2.8169476985931396
    3. '[i' → logprob: -5.3169474601745605
    4. '1' → logprob: -10.941947937011719
    5. 's' → logprob: -11.066947937011719
    6. '```' → logprob: -12.066947937011719
    7. ' ' → logprob: -12.191947937011719
    8. ' =[' → logprob: -12.566947937011719
    9. '[' → logprob: -12.941947937011719
    10. '=[' → logprob: -13.316947937011719

Token 439: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020602114964276552
    2. '=' → logprob: -6.877060413360596
    3. ']=' → logprob: -7.627060413360596
    4. ' =' → logprob: -8.002059936523438
    5. ' ]' → logprob: -8.502059936523438
    6. ']
' → logprob: -15.002059936523438
    7. ')' → logprob: -15.252059936523438
    8. ' ' → logprob: -15.377059936523438
    9. ']=-' → logprob: -15.877059936523438
    10. '[' → logprob: -16.377059936523438

Token 440: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889022678136826
    2. ' =' → logprob: -2.578890323638916
    3. '=
' → logprob: -15.578889846801758
    4. 'diff' → logprob: -15.578889846801758
    5. '```' → logprob: -16.703889846801758
    6. ' =
' → logprob: -17.203889846801758
    7. '#' → logprob: -18.078889846801758
    8. ' ' → logprob: -18.453889846801758
    9. '[' → logprob: -18.828889846801758
    10. '`' → logprob: -18.953889846801758

Token 441: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0730884000658989
    2. '(' → logprob: -2.6980884075164795
    3. '-' → logprob: -6.5730881690979
    4. ' (' → logprob: -7.0730881690979
    5. ' ' → logprob: -7.1980881690979
    6. '(-' → logprob: -9.823088645935059
    7. '   ' → logprob: -10.573088645935059
    8. ' -' → logprob: -10.698088645935059
    9. '0' → logprob: -10.948088645935059
    10. '[' → logprob: -11.698088645935059

Token 442: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043567582964897156
    2. '-' → logprob: -3.793567657470703
    3. '(' → logprob: -3.918567657470703
    4. '(-' → logprob: -9.418567657470703
    5. ' ' → logprob: -9.918567657470703
    6. ' (' → logprob: -9.918567657470703
    7. ' -' → logprob: -10.543567657470703
    8. '-(' → logprob: -11.043567657470703
    9. '0' → logprob: -12.418567657470703
    10. ')' → logprob: -12.418567657470703

Token 443: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9913183450698853
    2. ' -' → logprob: -0.9913183450698853
    3. ' if' → logprob: -1.3663183450698853
    4. 'if' → logprob: -6.366318225860596
    5. ')' → logprob: -7.741318225860596
    6. '-m' → logprob: -7.991318225860596
    7. '-if' → logprob: -8.616318702697754
    8. '-d' → logprob: -10.491318702697754
    9. ' ' → logprob: -10.866318702697754
    10. '-match' → logprob: -11.491318702697754

Token 444: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.1374802440404892
    2. '2' → logprob: -2.3874802589416504
    3. ' matches' → logprob: -3.3874802589416504
    4. ' ' → logprob: -6.26248025894165
    5. '(matches' → logprob: -7.38748025894165
    6. '   ' → logprob: -9.762479782104492
    7. ')' → logprob: -10.012479782104492
    8. 'match' → logprob: -10.012479782104492
    9. 'm' → logprob: -11.324979782104492
    10. ' (' → logprob: -11.699979782104492

Token 445: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05904964730143547
    2. '1' → logprob: -2.934049606323242
    3. '[' → logprob: -6.309049606323242
    4. ')' → logprob: -7.684049606323242
    5. 's' → logprob: -8.059049606323242
    6. '```' → logprob: -8.059049606323242
    7. '
' → logprob: -8.184049606323242
    8. ')[' → logprob: -8.434049606323242
    9. ' [' → logprob: -8.559049606323242
    10. 'i' → logprob: -8.934049606323242

Token 446: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021045419271104038
    2. ' )' → logprob: -8.500210762023926
    3. '[i' → logprob: -12.875210762023926
    4. ')-' → logprob: -13.500210762023926
    5. '*' → logprob: -14.000210762023926
    6. '[' → logprob: -14.250210762023926
    7. ' -' → logprob: -14.625210762023926
    8. '*)' → logprob: -16.12520980834961
    9. '#' → logprob: -16.25020980834961
    10. ']' → logprob: -16.37520980834961

Token 447: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2610386908054352
    2. '-' → logprob: -1.5110386610031128
    3. '*' → logprob: -5.261038780212402
    4. ')' → logprob: -5.636038780212402
    5. ' *' → logprob: -8.386038780212402
    6. ' ' → logprob: -11.136038780212402
    7. '-m' → logprob: -11.386038780212402
    8. '   ' → logprob: -11.761038780212402
    9. 'if' → logprob: -11.761038780212402
    10. ' if' → logprob: -12.136038780212402

Token 448: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.07893209159374237
    2. ' matches' → logprob: -2.578932046890259
    3. '(matches' → logprob: -10.07893180847168
    4. 'match' → logprob: -15.07893180847168
    5. '_matches' → logprob: -17.32893180847168
    6. 'matched' → logprob: -17.45393180847168
    7. ' ' → logprob: -17.70393180847168
    8. '1' → logprob: -18.32893180847168
    9. '   ' → logprob: -18.82893180847168
    10. '0' → logprob: -18.82893180847168

Token 449: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.780830830801278e-05
    2. '[' → logprob: -9.37508773803711
    3. '```' → logprob: -13.87508773803711
    4. '\[' → logprob: -14.12508773803711
    5. ' [' → logprob: -15.00008773803711
    6. ']' → logprob: -15.25008773803711
    7. '[
' → logprob: -15.25008773803711
    8. 'i' → logprob: -15.87508773803711
    9. '1' → logprob: -16.50008773803711
    10. 's' → logprob: -16.75008773803711

Token 450: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1808527261018753
    2. '<|end|>' → logprob: -2.4308526515960693
    3. ' =' → logprob: -3.1808526515960693
    4. '=' → logprob: -4.180852890014648
    5. '<|end|>' → logprob: -4.930852890014648
    6. ')' → logprob: -5.180852890014648
    7. ' ]' → logprob: -6.305852890014648
    8. ']=' → logprob: -6.930852890014648
    9. '[i' → logprob: -7.055852890014648
    10. ',' → logprob: -7.180852890014648

Token 451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0736110210418701
    2. ' =' → logprob: -1.6986110210418701
    3. '[' → logprob: -1.9486110210418701
    4. '[i' → logprob: -2.07361102104187
    5. ' ' → logprob: -2.69861102104187
    6. 'diff' → logprob: -3.19861102104187
    7. '<|end|>' → logprob: -3.94861102104187
    8. ' for' → logprob: -3.94861102104187
    9. ',' → logprob: -4.573611259460449
    10. ']' → logprob: -4.698611259460449

Token 452: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.037939462810754776
    2. ' ' → logprob: -3.7879395484924316
    3. '-' → logprob: -4.662939548492432
    4. ' -' → logprob: -5.287939548492432
    5. '0' → logprob: -10.287939071655273
    6. '(' → logprob: -11.037939071655273
    7. ' (' → logprob: -11.162939071655273
    8. '`' → logprob: -11.162939071655273
    9. '"' → logprob: -12.037939071655273
    10. '2' → logprob: -13.287939071655273

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015672171488404274
    2. '-' → logprob: -4.515672206878662
    3. ' ' → logprob: -5.640672206878662
    4. '(' → logprob: -7.765672206878662
    5. ' -' → logprob: -7.890672206878662
    6. '`' → logprob: -8.765671730041504
    7. '0' → logprob: -10.015671730041504
    8. ' (' → logprob: -10.765671730041504
    9. '(-' → logprob: -11.140671730041504
    10. '"' → logprob: -11.765671730041504

Token 454: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005236717872321606
    2. '-' → logprob: -5.255236625671387
    3. ' ' → logprob: -13.755236625671387
    4. ')' → logprob: -14.505236625671387
    5. ' ' → logprob: -15.005236625671387
    6. ',' → logprob: -15.130236625671387
    7. '<|end|>' → logprob: -15.755236625671387
    8. '*' → logprob: -15.755236625671387
    9. '.' → logprob: -15.880236625671387
    10. ' *' → logprob: -16.505237579345703

Token 455: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20141704380512238
    2. ' ' → logprob: -1.701417088508606
    3. '3' → logprob: -14.076416969299316
    4. '
' → logprob: -14.326416969299316
    5. '  ' → logprob: -14.576416969299316
    6. ' ' → logprob: -15.201416969299316
    7. ',' → logprob: -15.763916969299316
    8. '.' → logprob: -15.951416969299316
    9. '  
' → logprob: -16.013917922973633
    10. '```' → logprob: -16.076417922973633

Token 456: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001503313542343676
    2. ' ' → logprob: -6.5015034675598145
    3. '(' → logprob: -15.001502990722656
    4. '3' → logprob: -15.751502990722656
    5. '   ' → logprob: -16.251502990722656
    6. ' (' → logprob: -16.376502990722656
    7. '  ' → logprob: -16.876502990722656
    8. ' ' → logprob: -17.126502990722656
    9. '[' → logprob: -17.314002990722656
    10. 'matches' → logprob: -17.439002990722656

Token 457: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12694133818149567
    2. ' *' → logprob: -2.126941442489624
    3. '*m' → logprob: -11.251941680908203
    4. 'matches' → logprob: -16.251941680908203
    5. '(matches' → logprob: -17.376941680908203
    6. ' ' → logprob: -17.626941680908203
    7. '*(' → logprob: -17.751941680908203
    8. '*out' → logprob: -18.001941680908203
    9. '*object' → logprob: -18.126941680908203
    10. ' matches' → logprob: -18.126941680908203

Token 458: 'matches' (ID: 44239)
  Prédit: 'matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.00026503115077503026
    2. ' matches' → logprob: -8.250265121459961
    3. '(matches' → logprob: -12.500265121459961
    4. 'match' → logprob: -17.25026512145996
    5. '_matches' → logprob: -17.62526512145996
    6. '.matches' → logprob: -18.00026512145996
    7. '   ' → logprob: -18.25026512145996
    8. 'i' → logprob: -18.62526512145996
    9. 'marks' → logprob: -18.87526512145996
    10. '`' → logprob: -18.87526512145996

Token 459: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008375041070394218
    2. '[' → logprob: -7.625837326049805
    3. ']' → logprob: -8.375837326049805
    4. '1' → logprob: -9.625837326049805
    5. 'diff' → logprob: -11.500837326049805
    6. '```' → logprob: -11.875837326049805
    7. ')' → logprob: -12.250837326049805
    8. '[
' → logprob: -12.375837326049805
    9. '   ' → logprob: -12.625837326049805
    10. '2' → logprob: -13.125837326049805

Token 460: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002073767827823758
    2. ' ]' → logprob: -6.752073764801025
    3. '}' → logprob: -7.627073764801025
    4. '[i' → logprob: -8.877074241638184
    5. ')' → logprob: -9.002074241638184
    6. '<|end|>' → logprob: -9.377074241638184
    7. '']' → logprob: -10.752074241638184
    8. '<|end|>' → logprob: -11.002074241638184
    9. '   ' → logprob: -11.627074241638184
    10. '#' → logprob: -12.752074241638184

Token 461: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00424899673089385
    2. '
' → logprob: -6.004249095916748
    3. ' diff' → logprob: -6.379249095916748
    4. '\n' → logprob: -10.75424861907959
    5. '\' → logprob: -10.87924861907959
    6. '#' → logprob: -12.12924861907959
    7. '	diff' → logprob: -12.37924861907959
    8. '
' → logprob: -12.50424861907959
    9. '```' → logprob: -12.75424861907959
    10. ',' → logprob: -12.87924861907959

Token 462: ' This' (ID: 1328)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -2.8206473871250637e-05
    2. ' diff' → logprob: -11.375028610229492
    3. 'dif' → logprob: -12.000028610229492
    4. '#' → logprob: -12.375028610229492
    5. '
' → logprob: -13.125028610229492
    6. '```' → logprob: -13.750028610229492
    7. 'difference' → logprob: -13.750028610229492
    8. 'delta' → logprob: -15.250028610229492
    9. 'def' → logprob: -15.375028610229492
    10. '	diff' → logprob: -15.625028610229492

Token 463: ' is' (ID: 382)
  Prédit: ' means'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' means' → logprob: -1.183187484741211
    2. 'diff' → logprob: -1.683187484741211
    3. ' represents' → logprob: -1.683187484741211
    4. ' creates' → logprob: -2.558187484741211
    5. ' array' → logprob: -3.183187484741211
    6. 'means' → logprob: -3.308187484741211
    7. ' is' → logprob: -3.308187484741211
    8. ' can' → logprob: -3.683187484741211
    9. ' diff' → logprob: -3.808187484741211
    10. ' will' → logprob: -4.433187484741211

Token 464: ' the' (ID: 290)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.0119633674621582
    2. '-' → logprob: -1.5119633674621582
    3. 'a' → logprob: -2.136963367462158
    4. ' a' → logprob: -2.761963367462158
    5. 'the' → logprob: -3.011963367462158
    6. '[' → logprob: -3.261963367462158
    7. ' diff' → logprob: -3.386963367462158
    8. 'an' → logprob: -4.136963367462158
    9. ' the' → logprob: -4.261963367462158
    10. '[-' → logprob: -4.261963367462158

Token 465: ' gain' (ID: 11621)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.1493500471115112
    2. 'array' → logprob: -1.2743500471115112
    3. 'difference' → logprob: -1.5243500471115112
    4. 'value' → logprob: -3.274350166320801
    5. 'change' → logprob: -3.399350166320801
    6. 'delta' → logprob: -4.149350166320801
    7. 'diff' → logprob: -4.149350166320801
    8. 'score' → logprob: -4.274350166320801
    9. 'gain' → logprob: -4.274350166320801
    10. ' key' → logprob: -4.524350166320801

Token 466: ' in' (ID: 306)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' array' → logprob: -1.0625300407409668
    2. '[i' → logprob: -1.1875300407409668
    3. 'array' → logprob: -1.6875300407409668
    4. ' =' → logprob: -2.187530040740967
    5. ' at' → logprob: -4.187530040740967
    6. '=' → logprob: -4.312530040740967
    7. 'arr' → logprob: -5.687530040740967
    8. ' for' → logprob: -5.937530040740967
    9. '.' → logprob: -6.062530040740967
    10. ' ' → logprob: -6.312530040740967

Token 467: ' matches' (ID: 15248)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.7535925507545471
    2. 'matches' → logprob: -1.8785924911499023
    3. 'matching' → logprob: -2.1285924911499023
    4. ' flipping' → logprob: -2.5035924911499023
    5. 'fl' → logprob: -3.0035924911499023
    6. 'max' → logprob: -3.2535924911499023
    7. 'continu' → logprob: -3.6285924911499023
    8. 'flip' → logprob: -4.253592491149902
    9. 'correct' → logprob: -4.378592491149902
    10. 'the' → logprob: -4.378592491149902

Token 468: ' from' (ID: 591)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4657967686653137
    2. ' =' → logprob: -1.465796709060669
    3. '_diff' → logprob: -2.215796709060669
    4. 's' → logprob: -4.090796947479248
    5. '=' → logprob: -4.840796947479248
    6. '
' → logprob: -6.465796947479248
    7. '#' → logprob: -6.465796947479248
    8. ',' → logprob: -7.215796947479248
    9. '[i' → logprob: -7.465796947479248
    10. 'arr' → logprob: -7.840796947479248

Token 469: ' flipping' (ID: 110780)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.10025002062320709
    2. ' flipping' → logprob: -2.350250005722046
    3. 'flip' → logprob: -10.225250244140625
    4. '```' → logprob: -11.975250244140625
    5. '
' → logprob: -15.475250244140625
    6. 'i' → logprob: -15.725250244140625
    7. '	fl' → logprob: -16.100250244140625
    8. ' ' → logprob: -16.600250244140625
    9. '[i' → logprob: -16.725250244140625
    10. 'a' → logprob: -17.100250244140625

Token 470: ' at' (ID: 540)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.11716999113559723
    2. '[i' → logprob: -2.6171700954437256
    3. 's' → logprob: -4.3671698570251465
    4. '.' → logprob: -4.6171698570251465
    5. 'for' → logprob: -5.9921698570251465
    6. ' at' → logprob: -5.9921698570251465
    7. ' diff' → logprob: -6.2421698570251465
    8. '#' → logprob: -6.3671698570251465
    9. ',' → logprob: -6.9921698570251465
    10. '[' → logprob: -7.1171698570251465

Token 471: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15752053260803223
    2. ' i' → logprob: -2.6575205326080322
    3. 'position' → logprob: -2.9075205326080322
    4. ' position' → logprob: -3.9075205326080322
    5. '[i' → logprob: -7.282520294189453
    6. 'index' → logprob: -9.032520294189453
    7. ' that' → logprob: -10.157520294189453
    8. 'that' → logprob: -10.282520294189453
    9. ' index' → logprob: -10.907520294189453
    10. ' ' → logprob: -12.282520294189453

Token 472: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017048174049705267
    2. 'i' → logprob: -6.876704692840576
    3. '[' → logprob: -7.626704692840576
    4. ' i' → logprob: -8.876705169677734
    5. '```' → logprob: -10.751705169677734
    6. '[
' → logprob: -11.251705169677734
    7. '\[' → logprob: -13.001705169677734
    8. '`' → logprob: -13.126705169677734
    9. ' [' → logprob: -13.501705169677734
    10. '
' → logprob: -13.751705169677734

Token 473: '

' (ID: 279)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.006261039059609175
    2. '
' → logprob: -5.131260871887207
    3. ' diff' → logprob: -8.631260871887207
    4. '
' → logprob: -9.756260871887207
    5. '

' → logprob: -10.506260871887207
    6. '\' → logprob: -10.631260871887207
    7. '\n' → logprob: -10.756260871887207
    8. '#' → logprob: -12.131260871887207
    9. '```' → logprob: -13.006260871887207
    10. '`
' → logprob: -13.256260871887207

Token 474: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00017970333283301443
    2. 'gain' → logprob: -9.250179290771484
    3. '
' → logprob: -10.125179290771484
    4. ' diff' → logprob: -10.875179290771484
    5. 'dif' → logprob: -11.750179290771484
    6. 'difference' → logprob: -12.750179290771484
    7. '#' → logprob: -13.000179290771484
    8. '```' → logprob: -13.000179290771484
    9. 'delta' → logprob: -13.125179290771484
    10. 'flip' → logprob: -13.125179290771484

Token 475: ' We' (ID: 1416)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -3.128163257315464e-07
    2. ' diff' → logprob: -16.25
    3. 'dif' → logprob: -16.75
    4. 'gain' → logprob: -17.75
    5. 'difference' → logprob: -18.5
    6. '```' → logprob: -18.625
    7. '#' → logprob: -19.375
    8. 'd' → logprob: -19.875
    9. '	diff' → logprob: -20.25
    10. '
' → logprob: -21.0

Token 476: ' want' (ID: 1682)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.8318719267845154
    2. '_' → logprob: -1.3318719863891602
    3. ' =' → logprob: -1.8318719863891602
    4. 'diff' → logprob: -2.58187198638916
    5. '=' → logprob: -2.83187198638916
    6. ' diff' → logprob: -5.95687198638916
    7. '_=' → logprob: -6.70687198638916
    8. ' _' → logprob: -7.20687198638916
    9. '_d' → logprob: -7.45687198638916
    10. '#' → logprob: -8.33187198638916

Token 477: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.023247340694069862
    2. 'to' → logprob: -3.773247241973877
    3. ' ' → logprob: -14.648247718811035
    4. 'max' → logprob: -14.773247718811035
    5. ' find' → logprob: -14.773247718811035
    6. '#' → logprob: -15.898247718811035
    7. 'find' → logprob: -16.02324676513672
    8. 't' → logprob: -16.52324676513672
    9. '_to' → logprob: -16.52324676513672
    10. '	to' → logprob: -17.02324676513672

Token 478: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0012409444898366928
    2. ' find' → logprob: -7.0012407302856445
    3. 'maximize' → logprob: -8.126240730285645
    4. 'max' → logprob: -10.376240730285645
    5. 'apply' → logprob: -13.126240730285645
    6. 'choose' → logprob: -16.62624168395996
    7. 'compute' → logprob: -16.62624168395996
    8. 'calculate' → logprob: -16.62624168395996
    9. 'use' → logprob: -16.75124168395996
    10. '#' → logprob: -16.75124168395996

Token 479: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5888235569000244
    2. ' a' → logprob: -1.5888235569000244
    3. 'max' → logprob: -2.2138235569000244
    4. 'diff' → logprob: -2.8388235569000244
    5. ' the' → logprob: -3.2138235569000244
    6. 'the' → logprob: -3.8388235569000244
    7. ' max' → logprob: -5.338823318481445
    8. ' diff' → logprob: -5.588823318481445
    9. 'sub' → logprob: -6.338823318481445
    10. ' sub' → logprob: -7.588823318481445

Token 480: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.30237773060798645
    2. 'max' → logprob: -1.677377700805664
    3. ' sub' → logprob: -3.052377700805664
    4. 'maximum' → logprob: -3.927377700805664
    5. ' maximum' → logprob: -6.052377700805664
    6. ' max' → logprob: -6.302377700805664
    7. 'best' → logprob: -6.552377700805664
    8. 'diff' → logprob: -7.302377700805664
    9. ' contiguous' → logprob: -7.552377700805664
    10. ' maximal' → logprob: -9.552377700805664

Token 481: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.0005577972042374313
    2. '_array' → logprob: -8.125557899475098
    3. 'arr' → logprob: -8.750557899475098
    4. '[i' → logprob: -10.375557899475098
    5. '[]' → logprob: -11.125557899475098
    6. '[' → logprob: -11.250557899475098
    7. 'arrays' → logprob: -11.375557899475098
    8. 'ar' → logprob: -11.625557899475098
    9. ' array' → logprob: -12.000557899475098
    10. '#' → logprob: -12.375557899475098

Token 482: ' [' (ID: 723)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.07162344455719
    2. ' with' → logprob: -1.19662344455719
    3. '[' → logprob: -2.5716233253479004
    4. 'with' → logprob: -2.5716233253479004
    5. 'max' → logprob: -3.3216233253479004
    6. 'that' → logprob: -3.4466233253479004
    7. '<|end|>' → logprob: -3.6966233253479004
    8. 'diff' → logprob: -3.8216233253479004
    9. ' [' → logprob: -3.9466233253479004
    10. '[i' → logprob: -4.0716233253479

Token 483: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20358538627624512
    2. 'i' → logprob: -1.8285853862762451
    3. ']' → logprob: -4.203585624694824
    4. ' i' → logprob: -6.078585624694824
    5. ' l' → logprob: -6.453585624694824
    6. '0' → logprob: -7.203585624694824
    7. ')' → logprob: -7.453585624694824
    8. 'diff' → logprob: -7.453585624694824
    9. 'start' → logprob: -7.703585624694824
    10. 's' → logprob: -7.828585624694824

Token 484: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9618674516677856
    2. ',' → logprob: -1.2118674516677856
    3. ' =' → logprob: -2.086867332458496
    4. '=' → logprob: -2.461867332458496
    5. ',r' → logprob: -3.211867332458496
    6. 'r' → logprob: -3.836867332458496
    7. ']=' → logprob: -4.836867332458496
    8. ',
' → logprob: -5.086867332458496
    9. '_r' → logprob: -5.211867332458496
    10. '
' → logprob: -5.711867332458496

Token 485: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11331535130739212
    2. ' r' → logprob: -2.2383153438568115
    3. ',' → logprob: -8.23831558227539
    4. ',r' → logprob: -8.48831558227539
    5. ' ,' → logprob: -11.86331558227539
    6. ']' → logprob: -12.48831558227539
    7. ' ' → logprob: -12.86331558227539
    8. '0' → logprob: -13.11331558227539
    9. '_r' → logprob: -13.23831558227539
    10. '<|end|>' → logprob: -13.86331558227539

Token 486: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023274161503650248
    2. 'for' → logprob: -9.625232696533203
    3. ']
' → logprob: -9.750232696533203
    4. ' ]' → logprob: -10.250232696533203
    5. 'that' → logprob: -10.625232696533203
    6. ' that' → logprob: -11.625232696533203
    7. '#' → logprob: -11.750232696533203
    8. 'to' → logprob: -12.125232696533203
    9. ' for' → logprob: -12.250232696533203
    10. 'def' → logprob: -13.000232696533203

Token 487: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.3754902780056
    2. ' with' → logprob: -2.000490188598633
    3. 'with' → logprob: -2.875490188598633
    4. 'that' → logprob: -2.875490188598633
    5. ' =' → logprob: -3.125490188598633
    6. '=' → logprob: -5.250490188598633
    7. ' to' → logprob: -5.375490188598633
    8. ' such' → logprob: -5.625490188598633
    9. ' maximizing' → logprob: -6.750490188598633
    10. 'def' → logprob: -6.875490188598633

Token 488: ' maxim' (ID: 29045)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11901077628135681
    2. ' maxim' → logprob: -2.8690106868743896
    3. 'has' → logprob: -3.3690106868743896
    4. ' has' → logprob: -3.9940106868743896
    5. 'g' → logprob: -7.119010925292969
    6. 'y' → logprob: -7.369010925292969
    7. '```' → logprob: -8.244010925292969
    8. ' max' → logprob: -8.619010925292969
    9. 'maximize' → logprob: -8.744010925292969
    10. '#' → logprob: -9.119010925292969

Token 489: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -0.000546122610103339
    2. 'max' → logprob: -8.2505464553833
    3. 'azes' → logprob: -9.0005464553833
    4. 'ax' → logprob: -9.5005464553833
    5. 'IZES' → logprob: -10.7505464553833
    6. '#' → logprob: -11.2505464553833
    7. 'iz' → logprob: -11.5005464553833
    8. 'ize' → logprob: -11.5005464553833
    9. 'im' → logprob: -11.7505464553833
    10. '```' → logprob: -12.1255464553833

Token 490: ' sum' (ID: 4215)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.21567989885807037
    2. 'current' → logprob: -2.715679883956909
    3. 'sum' → logprob: -2.965679883956909
    4. ' diff' → logprob: -3.340679883956909
    5. 'the' → logprob: -4.090680122375488
    6. ' current' → logprob: -4.465680122375488
    7. ' the' → logprob: -5.090680122375488
    8. 'curr' → logprob: -5.840680122375488
    9. 'max' → logprob: -6.840680122375488
    10. 'sub' → logprob: -6.965680122375488

Token 491: ' of' (ID: 328)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0799996480345726
    2. '(diff' → logprob: -3.0799996852874756
    3. '_diff' → logprob: -4.3299994468688965
    4. ' diff' → logprob: -4.9549994468688965
    5. '=' → logprob: -5.2049994468688965
    6. ' =' → logprob: -6.4549994468688965
    7. ' of' → logprob: -6.4549994468688965
    8. 'of' → logprob: -8.079999923706055
    9. '[' → logprob: -8.329999923706055
    10. ' +=' → logprob: -8.454999923706055

Token 492: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.020546795800328255
    2. ' diff' → logprob: -3.8955469131469727
    3. '(diff' → logprob: -13.020546913146973
    4. '	diff' → logprob: -13.520546913146973
    5. '```' → logprob: -14.395546913146973
    6. 'dif' → logprob: -14.645546913146973
    7. '_diff' → logprob: -16.770545959472656
    8. ' ' → logprob: -16.770545959472656
    9. 'gain' → logprob: -16.770545959472656
    10. '
' → logprob: -16.895545959472656

Token 493: '[l' (ID: 38286)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18935658037662506
    2. 'diff' → logprob: -3.314356565475464
    3. '[i' → logprob: -3.439356565475464
    4. '_diff' → logprob: -3.689356565475464
    5. '
' → logprob: -3.939356565475464
    6. ' =' → logprob: -4.564356803894043
    7. ',' → logprob: -4.939356803894043
    8. '[' → logprob: -5.064356803894043
    9. 'def' → logprob: -5.189356803894043
    10. '#' → logprob: -5.439356803894043

Token 494: ':r' (ID: 118417)
  Prédit: ':r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':r' → logprob: -0.0888153463602066
    2. 'r' → logprob: -3.088815450668335
    3. ':' → logprob: -3.713815450668335
    4. ',' → logprob: -5.463815212249756
    5. ']' → logprob: -5.713815212249756
    6. '[r' → logprob: -6.088815212249756
    7. ',r' → logprob: -6.088815212249756
    8. ' r' → logprob: -7.338815212249756
    9. '...' → logprob: -7.463815212249756
    10. ' :' → logprob: -7.713815212249756

Token 495: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011003263061866164
    2. ' +' → logprob: -7.126100540161133
    3. ']' → logprob: -8.251100540161133
    4. '+]' → logprob: -11.626100540161133
    5. 's' → logprob: -11.876100540161133
    6. '+r' → logprob: -12.251100540161133
    7. 'r' → logprob: -12.376100540161133
    8. ']+' → logprob: -12.876100540161133
    9. '+l' → logprob: -12.876100540161133
    10. '+s' → logprob: -14.001100540161133

Token 496: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16449910402297974
    2. '1' → logprob: -1.914499044418335
    3. ']' → logprob: -5.789499282836914
    4. ']+' → logprob: -7.414499282836914
    5. ' +' → logprob: -8.289499282836914
    6. '+l' → logprob: -8.414499282836914
    7. '+]' → logprob: -10.789499282836914
    8. '```' → logprob: -10.789499282836914
    9. 'l' → logprob: -10.914499282836914
    10. 'r' → logprob: -11.289499282836914

Token 497: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5784748792648315
    2. '+' → logprob: -0.8284748792648315
    3. ']+' → logprob: -6.328474998474121
    4. ' +' → logprob: -8.203474998474121
    5. '])' → logprob: -8.578474998474121
    6. '+]' → logprob: -9.203474998474121
    7. ')' → logprob: -9.328474998474121
    8. ']
' → logprob: -9.828474998474121
    9. ' ]' → logprob: -12.203474998474121
    10. 's' → logprob: -12.203474998474121

Token 498: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0012733275070786476
    2. 'max' → logprob: -6.876273155212402
    3. '
' → logprob: -8.501273155212402
    4. 'dp' → logprob: -11.626273155212402
    5. ' diff' → logprob: -11.751273155212402
    6. '#' → logprob: -12.376273155212402
    7. 'gain' → logprob: -12.751273155212402
    8. 'dif' → logprob: -12.876273155212402
    9. '```' → logprob: -12.876273155212402
    10. '``' → logprob: -13.376273155212402

Token 499: ' But' (ID: 3072)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6961402893066406
    2. 'diff' → logprob: -0.6961402893066406
    3. 'gain' → logprob: -6.946140289306641
    4. 'current' → logprob: -7.071140289306641
    5. 'curr' → logprob: -7.946140289306641
    6. 'def' → logprob: -8.44614028930664
    7. '#' → logprob: -8.44614028930664
    8. 'best' → logprob: -8.69614028930664
    9. 'dp' → logprob: -9.82114028930664
    10. 'import' → logprob: -10.07114028930664

Token 500: ' simply' (ID: 6462)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9177048802375793
    2. 'diff' → logprob: -1.1677048206329346
    3. '#' → logprob: -1.6677048206329346
    4. 'we' → logprob: -3.6677048206329346
    5. 'for' → logprob: -4.292705059051514
    6. 'dp' → logprob: -4.417705059051514
    7. ' we' → logprob: -4.667705059051514
    8. ' max' → logprob: -4.667705059051514
    9. 'def' → logprob: -5.292705059051514
    10. ' diff' → logprob: -5.792705059051514

Token 501: ' maximizing' (ID: 130999)
  Prédit: 'finding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finding' → logprob: -0.0480215921998024
    2. 'app' → logprob: -3.5480215549468994
    3. ' finding' → logprob: -4.7980217933654785
    4. ' applying' → logprob: -6.2980217933654785
    5. 'running' → logprob: -6.7980217933654785
    6. 'continu' → logprob: -7.0480217933654785
    7. 'using' → logprob: -7.0480217933654785
    8. '#' → logprob: -7.1730217933654785
    9. 'max' → logprob: -7.5480217933654785
    10. ',' → logprob: -7.6730217933654785

Token 502: ' sum' (ID: 4215)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.091325044631958
    2. 'the' → logprob: -1.216325044631958
    3. 'sum' → logprob: -1.216325044631958
    4. 'sub' → logprob: -3.591325044631958
    5. ' the' → logprob: -3.966325044631958
    6. 'max' → logprob: -4.841324806213379
    7. ' diff' → logprob: -5.091324806213379
    8. ' sum' → logprob: -5.341324806213379
    9. 'a' → logprob: -5.591324806213379
    10. ' sub' → logprob: -6.466324806213379

Token 503: ' of' (ID: 328)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.46162736415863037
    2. '(diff' → logprob: -1.2116273641586304
    3. ' of' → logprob: -3.21162748336792
    4. 'of' → logprob: -3.83662748336792
    5. '_diff' → logprob: -5.46162748336792
    6. '_of' → logprob: -6.71162748336792
    7. '[' → logprob: -7.08662748336792
    8. 'max' → logprob: -7.33662748336792
    9. 's' → logprob: -7.58662748336792
    10. '_' → logprob: -7.71162748336792

Token 504: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0011717714369297028
    2. ' diff' → logprob: -6.751171588897705
    3. 'dif' → logprob: -14.251172065734863
    4. 'the' → logprob: -14.376172065734863
    5. 'difference' → logprob: -16.001171112060547
    6. '(diff' → logprob: -16.876171112060547
    7. '```' → logprob: -17.001171112060547
    8. 'a' → logprob: -17.126171112060547
    9. '	diff' → logprob: -17.251171112060547
    10. '_diff' → logprob: -17.501171112060547

Token 505: ' does' (ID: 2226)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.010028759017586708
    2. '[' → logprob: -5.385028839111328
    3. '[:]' → logprob: -6.510028839111328
    4. ' is' → logprob: -7.010028839111328
    5. 's' → logprob: -7.135028839111328
    6. ' alone' → logprob: -8.260028839111328
    7. '[i' → logprob: -8.385028839111328
    8. '<|end|>' → logprob: -8.760028839111328
    9. '.' → logprob: -9.135028839111328
    10. '[]' → logprob: -9.135028839111328

Token 506: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.22635872662067413
    2. 'not' → logprob: -1.8513587713241577
    3. 'n't' → logprob: -3.101358652114868
    4. '#' → logprob: -8.101358413696289
    5. '_not' → logprob: -9.476358413696289
    6. '[' → logprob: -10.101358413696289
    7. '=' → logprob: -10.351358413696289
    8. 'n' → logprob: -10.351358413696289
    9. '```' → logprob: -10.351358413696289
    10. '[n' → logprob: -11.851358413696289

Token 507: ' guarantee' (ID: 16218)
  Prédit: ' guarantee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' guarantee' → logprob: -1.012366771697998
    2. 'gu' → logprob: -1.137366771697998
    3. 'necessarily' → logprob: -1.387366771697998
    4. ' necessarily' → logprob: -4.262366771697998
    5. ' directly' → logprob: -4.637366771697998
    6. 'work' → logprob: -4.637366771697998
    7. 'allow' → logprob: -5.387366771697998
    8. 'consider' → logprob: -5.387366771697998
    9. 'account' → logprob: -5.387366771697998
    10. 'give' → logprob: -5.512366771697998

Token 508: ' longer' (ID: 7411)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9116177558898926
    2. 'the' → logprob: -1.6616177558898926
    3. ' that' → logprob: -2.4116177558898926
    4. ' correct' → logprob: -3.0366177558898926
    5. 'max' → logprob: -3.0366177558898926
    6. 'correct' → logprob: -3.0366177558898926
    7. 'continu' → logprob: -3.4116177558898926
    8. 'that' → logprob: -3.6616177558898926
    9. ' a' → logprob: -4.411617755889893
    10. 'a' → logprob: -4.536617755889893

Token 509: ' alt' (ID: 5001)
  Prédit: '_alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_alt' → logprob: -0.23040899634361267
    2. 'max' → logprob: -2.7304089069366455
    3. ' segments' → logprob: -3.7304089069366455
    4. ' sequences' → logprob: -3.9804089069366455
    5. 'alt' → logprob: -4.230409145355225
    6. ' alternating' → logprob: -4.355409145355225
    7. '_' → logprob: -4.730409145355225
    8. ' alt' → logprob: -4.730409145355225
    9. '_max' → logprob: -4.730409145355225
    10. 'altern' → logprob: -4.980409145355225

Token 510: ' sequence' (ID: 16281)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0039968490600586
    2. '_max' → logprob: -1.2539968490600586
    3. '#' → logprob: -1.6289968490600586
    4. 'sub' → logprob: -3.6289968490600586
    5. '_sub' → logprob: -3.6289968490600586
    6. '1' → logprob: -4.753996849060059
    7. 's' → logprob: -4.753996849060059
    8. 'sum' → logprob: -4.878996849060059
    9. 'segment' → logprob: -4.878996849060059
    10. ',' → logprob: -5.128996849060059

Token 511: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5453130006790161
    2. 'diff' → logprob: -1.5453130006790161
    3. 'max' → logprob: -1.9203130006790161
    4. '
' → logprob: -3.9203128814697266
    5. 'dp' → logprob: -4.045312881469727
    6. 'def' → logprob: -4.920312881469727
    7. 'import' → logprob: -5.420312881469727
    8. 'from' → logprob: -5.795312881469727
    9. ',' → logprob: -6.420312881469727
    10. ',
' → logprob: -6.670312881469727

Token 512: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.230122372508049
    2. ' but' → logprob: -2.1051223278045654
    3. ' so' → logprob: -3.3551223278045654
    4. '.' → logprob: -4.6051225662231445
    5. '...' → logprob: -5.2301225662231445
    6. ',' → logprob: -5.2301225662231445
    7. '```' → logprob: -5.4801225662231445
    8. 'but' → logprob: -5.6051225662231445
    9. ')' → logprob: -5.8551225662231445
    10. ' continue' → logprob: -6.1051225662231445

Token 513: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.3653549253940582
    2. '#' → logprob: -1.6153548955917358
    3. ' cannot' → logprob: -3.3653550148010254
    4. 'need' → logprob: -3.7403550148010254
    5. ' continue' → logprob: -3.8653550148010254
    6. 'cannot' → logprob: -4.365355014801025
    7. 'continue' → logprob: -5.615355014801025
    8. ' must' → logprob: -6.490355014801025
    9. ' can't' → logprob: -6.490355014801025
    10. ' want' → logprob: -6.615355014801025

Token 514: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.021368984133005142
    2. ' to' → logprob: -3.896368980407715
    3. 'also' → logprob: -7.646368980407715
    4. 'a' → logprob: -8.771368980407715
    5. 'more' → logprob: -9.646368980407715
    6. ' also' → logprob: -10.146368980407715
    7. 'another' → logprob: -10.396368980407715
    8. 'def' → logprob: -11.271368980407715
    9. 'additional' → logprob: -11.521368980407715
    10. '```' → logprob: -12.271368980407715

Token 515: ' find' (ID: 1646)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.25724685192108154
    2. 'check' → logprob: -1.8822468519210815
    3. 'find' → logprob: -3.132246971130371
    4. 'an' → logprob: -5.007246971130371
    5. 'maximize' → logprob: -5.507246971130371
    6. 'break' → logprob: -5.757246971130371
    7. '#' → logprob: -5.882246971130371
    8. 'track' → logprob: -6.382246971130371
    9. 'combine' → logprob: -6.757246971130371
    10. 'simulate' → logprob: -6.757246971130371

Token 516: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6316831707954407
    2. 'the' → logprob: -0.8816831707954407
    3. 'a' → logprob: -3.881683111190796
    4. ' a' → logprob: -4.006683349609375
    5. 'max' → logprob: -5.381683349609375
    6. '```' → logprob: -5.756683349609375
    7. '#' → logprob: -6.131683349609375
    8. ' an' → logprob: -6.631683349609375
    9. ' max' → logprob: -7.506683349609375
    10. 'an' → logprob: -7.631683349609375

Token 517: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9813029766082764
    2. 'long' → logprob: -1.6063029766082764
    3. 'next' → logprob: -2.3563029766082764
    4. 'sub' → logprob: -2.4813029766082764
    5. 'maximum' → logprob: -2.4813029766082764
    6. 'best' → logprob: -2.8563029766082764
    7. '```' → logprob: -3.9813029766082764
    8. ' longest' → logprob: -4.4813032150268555
    9. ' next' → logprob: -4.8563032150268555
    10. 'continu' → logprob: -5.2313032150268555

Token 518: ' length' (ID: 5517)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_diff' → logprob: -1.2768943309783936
    2. '_sub' → logprob: -1.9018943309783936
    3. '_' → logprob: -2.2768943309783936
    4. '_len' → logprob: -2.4018943309783936
    5. 'diff' → logprob: -2.4018943309783936
    6. '_length' → logprob: -2.4018943309783936
    7. '_alt' → logprob: -2.5268943309783936
    8. '```' → logprob: -3.0268943309783936
    9. '_sum' → logprob: -4.526894569396973
    10. 'sub' → logprob: -4.651894569396973

Token 519: ' of' (ID: 328)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5826213359832764
    2. 'diff' → logprob: -1.0826213359832764
    3. 'max' → logprob: -3.5826213359832764
    4. 'from' → logprob: -4.3326215744018555
    5. 'for' → logprob: -4.5826215744018555
    6. ',' → logprob: -4.8326215744018555
    7. 'dp' → logprob: -4.8326215744018555
    8. 'import' → logprob: -4.9576215744018555
    9. 'def' → logprob: -5.3326215744018555
    10. '
' → logprob: -5.7076215744018555

Token 520: ' alt' (ID: 5001)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.4856160879135132
    2. 'con' → logprob: -1.8606160879135132
    3. 'altern' → logprob: -2.1106162071228027
    4. '```' → logprob: -2.6106162071228027
    5. '1' → logprob: -2.8606162071228027
    6. 'res' → logprob: -3.3606162071228027
    7. 'alt' → logprob: -3.3606162071228027
    8. ' the' → logprob: -3.3606162071228027
    9. 'continuous' → logprob: -3.3606162071228027
    10. 'max' → logprob: -3.4856162071228027

Token 521: ' sequence' (ID: 16281)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1144976615905762
    2. ')' → logprob: -1.7394976615905762
    3. '1' → logprob: -1.9894976615905762
    4. ']' → logprob: -3.239497661590576
    5. 'def' → logprob: -3.489497661590576
    6. 'sequence' → logprob: -3.864497661590576
    7. '<|end|>' → logprob: -3.989497661590576
    8. '_sequence' → logprob: -4.114497661590576
    9. '[i' → logprob: -4.114497661590576
    10. 's' → logprob: -4.239497661590576

Token 522: ' IF' (ID: 20505)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6384490132331848
    2. 'diff' → logprob: -1.26344895362854
    3. ',
' → logprob: -3.26344895362854
    4. 'max' → logprob: -3.38844895362854
    5. ',' → logprob: -3.76344895362854
    6. '#' → logprob: -3.76344895362854
    7. 'def' → logprob: -4.138449192047119
    8. 'for' → logprob: -4.263449192047119
    9. '+
' → logprob: -4.888449192047119
    10. 's' → logprob: -5.388449192047119

Token 523: ' flipped' (ID: 96664)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.13381531834602356
    2. 'we' → logprob: -2.258815288543701
    3. ' the' → logprob: -4.758815288543701
    4. 'the' → logprob: -5.758815288543701
    5. 'flip' → logprob: -6.508815288543701
    6. '#' → logprob: -6.633815288543701
    7. ' flipped' → logprob: -6.883815288543701
    8. 'fl' → logprob: -7.258815288543701
    9. ' a' → logprob: -7.258815288543701
    10. ' flip' → logprob: -7.633815288543701

Token 524: ' this' (ID: 495)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.37068867683410645
    2. '#' → logprob: -1.9956886768341064
    3. 'gain' → logprob: -2.3706886768341064
    4. 'def' → logprob: -3.8706886768341064
    5. 'max' → logprob: -4.120688438415527
    6. 'delta' → logprob: -4.370688438415527
    7. 'dp' → logprob: -4.620688438415527
    8. 'change' → logprob: -4.995688438415527
    9. 'flip' → logprob: -5.620688438415527
    10. '
' → logprob: -5.745688438415527

Token 525: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.5257963538169861
    2. '#' → logprob: -2.150796413421631
    3. ' sub' → logprob: -2.525796413421631
    4. '[i' → logprob: -2.900796413421631
    5. 'flip' → logprob: -3.150796413421631
    6. '+' → logprob: -4.150796413421631
    7. 'position' → logprob: -4.525796413421631
    8. ' flip' → logprob: -4.525796413421631
    9. 'segment' → logprob: -4.775796413421631
    10. ' segment' → logprob: -4.900796413421631

Token 526: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.00024025145103223622
    2. '_array' → logprob: -9.750240325927734
    3. '#' → logprob: -10.000240325927734
    4. 'arr' → logprob: -10.375240325927734
    5. '[' → logprob: -10.625240325927734
    6. 'sequence' → logprob: -11.000240325927734
    7. ')' → logprob: -11.500240325927734
    8. 'ar' → logprob: -11.625240325927734
    9. ' array' → logprob: -11.625240325927734
    10. 'arra' → logprob: -12.000240325927734

Token 527: '.

' (ID: 364)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7475779056549072
    2. 'diff' → logprob: -1.1225779056549072
    3. 'def' → logprob: -1.8725779056549072
    4. 'max' → logprob: -3.9975779056549072
    5. 'dp' → logprob: -4.747577667236328
    6. 'delta' → logprob: -5.497577667236328
    7. '
' → logprob: -5.497577667236328
    8. 'gain' → logprob: -5.872577667236328
    9. 'flip' → logprob: -5.997577667236328
    10. 'import' → logprob: -5.997577667236328

Token 528: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3608032763004303
    2. 'diff' → logprob: -1.860803246498108
    3. 'max' → logprob: -2.4858033657073975
    4. 'dp' → logprob: -3.3608033657073975
    5. 'def' → logprob: -3.9858033657073975
    6. 'flip' → logprob: -5.860803127288818
    7. 'from' → logprob: -6.485803127288818
    8. '
' → logprob: -6.485803127288818
    9. 'import' → logprob: -6.610803127288818
    10. '```' → logprob: -7.485803127288818

Token 529: ' Instead' (ID: 21050)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.14861261844635
    2. 'max' → logprob: -1.52361261844635
    3. 'diff' → logprob: -1.64861261844635
    4. 'def' → logprob: -1.89861261844635
    5. 'dp' → logprob: -3.3986124992370605
    6. 'gain' → logprob: -3.3986124992370605
    7. 'flip' → logprob: -4.0236124992370605
    8. 'from' → logprob: -4.5236124992370605
    9. 'change' → logprob: -4.8986124992370605
    10. 'import' → logprob: -5.2736124992370605

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34752514958381653
    2. '#' → logprob: -1.7225251197814941
    3. ':' → logprob: -2.722525119781494
    4. 'def' → logprob: -4.222525119781494
    5. 'diff' → logprob: -4.722525119781494
    6. 'for' → logprob: -4.847525119781494
    7. ':
' → logprob: -5.597525119781494
    8. 'import' → logprob: -5.722525119781494
    9. '
' → logprob: -5.972525119781494
    10. ',
' → logprob: -6.097525119781494

Token 531: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.01642644405365
    2. 'def' → logprob: -1.89142644405365
    3. ' for' → logprob: -2.2664265632629395
    4. 'for' → logprob: -2.5164265632629395
    5. ' max' → logprob: -2.7664265632629395
    6. ' #' → logprob: -2.8914265632629395
    7. 'max' → logprob: -3.0164265632629395
    8. 'diff' → logprob: -3.0164265632629395
    9. 'dp' → logprob: -4.0164265632629395
    10. ' diff' → logprob: -4.0164265632629395

Token 532: ' use' (ID: 1199)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2147443294525146
    2. 'continue' → logprob: -1.8397443294525146
    3. ' can' → logprob: -2.2147443294525146
    4. ' will' → logprob: -2.4647443294525146
    5. 'try' → logprob: -2.8397443294525146
    6. ' need' → logprob: -2.9647443294525146
    7. 'def' → logprob: -3.0897443294525146
    8. 'need' → logprob: -3.2147443294525146
    9. ' continue' → logprob: -3.4647443294525146
    10. 'can' → logprob: -3.5897443294525146

Token 533: ' a' (ID: 261)
  Prédit: 'dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dynamic' → logprob: -0.6537710428237915
    2. ' dynamic' → logprob: -2.278770923614502
    3. 'the' → logprob: -2.403770923614502
    4. 'a' → logprob: -2.528770923614502
    5. 'def' → logprob: -2.653770923614502
    6. 'dp' → logprob: -2.778770923614502
    7. 'diff' → logprob: -3.403770923614502
    8. ' a' → logprob: -4.778770923614502
    9. 'two' → logprob: -4.903770923614502
    10. 'dif' → logprob: -5.278770923614502

Token 534: ' standard' (ID: 7024)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7821107506752014
    2. 'dp' → logprob: -0.9071107506752014
    3. 'dynamic' → logprob: -2.7821106910705566
    4. ' dynamic' → logprob: -4.407110691070557
    5. 'segment' → logprob: -4.657110691070557
    6. ' sliding' → logprob: -4.657110691070557
    7. 'sl' → logprob: -4.782110691070557
    8. 'two' → logprob: -4.782110691070557
    9. 'DP' → logprob: -5.282110691070557
    10. ' segment' → logprob: -5.532110691070557

Token 535: ' approach' (ID: 7139)
  Prédit: 'Kad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Kad' → logprob: -0.32213497161865234
    2. ' Kad' → logprob: -2.6971349716186523
    3. 'kad' → logprob: -2.8221349716186523
    4. 'def' → logprob: -3.5721349716186523
    5. 'max' → logprob: -3.6971349716186523
    6. ' approach' → logprob: -3.9471349716186523
    7. ' kad' → logprob: -4.197134971618652
    8. 'for' → logprob: -4.447134971618652
    9. ' dynamic' → logprob: -4.447134971618652
    10. 'diff' → logprob: -4.447134971618652

Token 536: ':
' (ID: 734)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7942724823951721
    2. 'max' → logprob: -1.9192724227905273
    3. ':' → logprob: -2.1692724227905273
    4. '#' → logprob: -2.6692724227905273
    5. 'for' → logprob: -2.6692724227905273
    6. 'def' → logprob: -2.7942724227905273
    7. 'dp' → logprob: -3.9192724227905273
    8. 'import' → logprob: -4.294272422790527
    9. ':
' → logprob: -4.294272422790527
    10. ',' → logprob: -4.794272422790527

Token 537: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6563485860824585
    2. 'diff' → logprob: -1.4063485860824585
    3. 'dp' → logprob: -2.281348705291748
    4. 'max' → logprob: -3.156348705291748
    5. 'from' → logprob: -3.906348705291748
    6. 'for' → logprob: -4.156348705291748
    7. 'flip' → logprob: -4.156348705291748
    8. 'prefix' → logprob: -5.281348705291748
    9. 'length' → logprob: -5.281348705291748
    10. 'def' → logprob: -5.656348705291748

Token 538: ' The' (ID: 623)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9193528294563293
    2. 'flip' → logprob: -2.1693527698516846
    3. 'from' → logprob: -2.4193527698516846
    4. 'diff' → logprob: -2.5443527698516846
    5. '#' → logprob: -2.7943527698516846
    6. 'def' → logprob: -2.9193527698516846
    7. 'max' → logprob: -3.0443527698516846
    8. 'import' → logprob: -3.5443527698516846
    9. 'length' → logprob: -4.169353008270264
    10. 'prefix' → logprob: -4.294353008270264

Token 539: ' length' (ID: 5517)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -1.2437547445297241
    2. '#' → logprob: -1.9937547445297241
    3. 'diff' → logprob: -2.3687548637390137
    4. 'def' → logprob: -2.6187548637390137
    5. 'max' → logprob: -2.6187548637390137
    6. 'best' → logprob: -2.7437548637390137
    7. 'dp' → logprob: -2.9937548637390137
    8. ' diff' → logprob: -3.4937548637390137
    9. ' max' → logprob: -3.6187548637390137
    10. ' next' → logprob: -4.118754863739014

Token 540: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03629997372627258
    2. '=' → logprob: -5.036300182342529
    3. ' of' → logprob: -5.036300182342529
    4. '#' → logprob: -5.286300182342529
    5. ' =' → logprob: -5.286300182342529
    6. 'def' → logprob: -6.286300182342529
    7. ' _' → logprob: -6.411300182342529
    8. '_max' → logprob: -6.536300182342529
    9. 'of' → logprob: -6.786300182342529
    10. 's' → logprob: -6.786300182342529

Token 541: ' longest' (ID: 37511)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1981526017189026
    2. 'current' → logprob: -2.448152542114258
    3. ' the' → logprob: -3.448152542114258
    4. 'max' → logprob: -3.823152542114258
    5. 'long' → logprob: -3.823152542114258
    6. ' current' → logprob: -5.573152542114258
    7. '```' → logprob: -6.323152542114258
    8. 'con' → logprob: -6.448152542114258
    9. 'S' → logprob: -6.448152542114258
    10. 'a' → logprob: -6.573152542114258

Token 542: ' alternating' (ID: 125099)
  Prédit: '_alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_alt' → logprob: -0.011306697502732277
    2. '_' → logprob: -4.7613067626953125
    3. '_al' → logprob: -6.6363067626953125
    4. '```' → logprob: -8.011306762695312
    5. 'alt' → logprob: -8.261306762695312
    6. 'altern' → logprob: -8.886306762695312
    7. '_sub' → logprob: -9.011306762695312
    8. ' alternating' → logprob: -9.636306762695312
    9. ' continuous' → logprob: -10.011306762695312
    10. '_cont' → logprob: -10.011306762695312

Token 543: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.13522884249687195
    2. ' sequence' → logprob: -2.5102288722991943
    3. '_sub' → logprob: -3.7602288722991943
    4. '_sequence' → logprob: -4.510228633880615
    5. 'sub' → logprob: -4.635228633880615
    6. 'pattern' → logprob: -8.260229110717773
    7. '_' → logprob: -8.260229110717773
    8. 'length' → logprob: -9.135229110717773
    9. '<|end|>' → logprob: -9.135229110717773
    10. 'substring' → logprob: -9.385229110717773

Token 544: ' can' (ID: 665)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.2713548541069031
    2. ' be' → logprob: -1.5213549137115479
    3. 'continue' → logprob: -5.521354675292969
    4. '#' → logprob: -5.896354675292969
    5. 'not' → logprob: -6.021354675292969
    6. 'change' → logprob: -6.271354675292969
    7. 'increase' → logprob: -6.521354675292969
    8. 'also' → logprob: -6.896354675292969
    9. 'extend' → logprob: -7.396354675292969
    10. 'either' → logprob: -7.521354675292969

Token 546: ' obtained' (ID: 17747)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4030722379684448
    2. 'found' → logprob: -2.7780723571777344
    3. '```' → logprob: -3.0280723571777344
    4. 'extended' → logprob: -3.1530723571777344
    5. 'obt' → logprob: -3.5280723571777344
    6. 'cal' → logprob: -3.6530723571777344
    7. 'maint' → logprob: -3.9030723571777344
    8. 'max' → logprob: -4.028072357177734
    9. 'im' → logprob: -4.153072357177734
    10. 'ach' → logprob: -4.778072357177734

Token 547: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.16326011717319489
    2. 'by' → logprob: -2.1632602214813232
    3. 'from' → logprob: -3.7882602214813232
    4. ' as' → logprob: -6.038259983062744
    5. ' from' → logprob: -6.288259983062744
    6. '=' → logprob: -6.413259983062744
    7. '.' → logprob: -6.663259983062744
    8. '#' → logprob: -6.663259983062744
    9. '```' → logprob: -6.788259983062744
    10. ' =' → logprob: -7.163259983062744

Token 548: ' the' (ID: 290)
  Prédit: 'checking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'checking' → logprob: -0.7936022877693176
    2. 'iter' → logprob: -2.543602228164673
    3. 'finding' → logprob: -2.793602228164673
    4. 'consider' → logprob: -3.168602228164673
    5. ' checking' → logprob: -3.293602228164673
    6. 'max' → logprob: -3.418602228164673
    7. ' iter' → logprob: -3.793602228164673
    8. 'dynamic' → logprob: -3.793602228164673
    9. 'def' → logprob: -3.918602228164673
    10. 'taking' → logprob: -3.918602228164673

Token 549: ' length' (ID: 5517)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2263602465391159
    2. 'dp' → logprob: -3.476360321044922
    3. 'long' → logprob: -3.851360321044922
    4. 'following' → logprob: -3.851360321044922
    5. 'difference' → logprob: -4.101360321044922
    6. '#' → logprob: -4.226360321044922
    7. 'next' → logprob: -4.351360321044922
    8. 'maximum' → logprob: -4.351360321044922
    9. 'def' → logprob: -4.476360321044922
    10. 'length' → logprob: -4.601360321044922

Token 550: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.30188000202178955
    2. ' of' → logprob: -2.3018798828125
    3. '=' → logprob: -2.8018798828125
    4. '-' → logprob: -2.9268798828125
    5. 'max' → logprob: -4.9268798828125
    6. 's' → logprob: -5.1768798828125
    7. '#' → logprob: -5.1768798828125
    8. 'def' → logprob: -5.3018798828125
    9. '+' → logprob: -5.4268798828125
    10. 'difference' → logprob: -6.0518798828125

Token 551: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6878976821899414
    2. 'max' → logprob: -1.4378976821899414
    3. 'a' → logprob: -2.9378976821899414
    4. 'current' → logprob: -3.0628976821899414
    5. 'long' → logprob: -3.1878976821899414
    6. ' the' → logprob: -3.4378976821899414
    7. 'con' → logprob: -3.5628976821899414
    8. 'matches' → logprob: -4.062897682189941
    9. 'S' → logprob: -5.312897682189941
    10. '```' → logprob: -5.437897682189941

Token 552: ' longest' (ID: 37511)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.29822540283203125
    2. ' longest' → logprob: -1.7982254028320312
    3. 'current' → logprob: -2.7982254028320312
    4. 'max' → logprob: -3.7982254028320312
    5. 'maximum' → logprob: -5.548225402832031
    6. 'altern' → logprob: -6.548225402832031
    7. ' current' → logprob: -6.673225402832031
    8. 'continuous' → logprob: -7.298225402832031
    9. '```' → logprob: -7.298225402832031
    10. 'largest' → logprob: -8.548225402832031

Token 553: ' run' (ID: 2461)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.0815593004226685
    2. 'altern' → logprob: -1.8315593004226685
    3. 'continuous' → logprob: -2.206559181213379
    4. 'valid' → logprob: -2.581559181213379
    5. 'con' → logprob: -2.706559181213379
    6. '```' → logprob: -2.831559181213379
    7. 'segment' → logprob: -3.206559181213379
    8. 'alt' → logprob: -3.331559181213379
    9. 'run' → logprob: -3.831559181213379
    10. 'good' → logprob: -4.081559181213379

Token 554: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2344127744436264
    2. 's' → logprob: -1.8594127893447876
    3. ' of' → logprob: -4.359412670135498
    4. ',' → logprob: -4.734412670135498
    5. 'of' → logprob: -4.734412670135498
    6. '-' → logprob: -5.359412670135498
    7. 'S' → logprob: -5.484412670135498
    8. '[' → logprob: -6.734412670135498
    9. '```' → logprob: -6.734412670135498
    10. '=' → logprob: -6.859412670135498

Token 555: ' consecutive' (ID: 40840)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'altern' → logprob: -0.8825607299804688
    2. '1' → logprob: -1.5075607299804688
    3. 'matches' → logprob: -2.7575607299804688
    4. ' alternating' → logprob: -3.0075607299804688
    5. 'matching' → logprob: -3.2575607299804688
    6. 'con' → logprob: -3.3825607299804688
    7. ' ' → logprob: -3.6325607299804688
    8. 'length' → logprob: -3.6325607299804688
    9. 'fl' → logprob: -3.7575607299804688
    10. '```' → logprob: -4.132560729980469

Token 556: ' ' (ID: 220)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.3273131549358368
    2. '1' → logprob: -1.9523131847381592
    3. 'elements' → logprob: -3.577313184738159
    4. 'positions' → logprob: -4.20231294631958
    5. ' matches' → logprob: -4.20231294631958
    6. 'different' → logprob: -4.20231294631958
    7. 'matching' → logprob: -4.70231294631958
    8. ' elements' → logprob: -5.07731294631958
    9. 'tokens' → logprob: -5.07731294631958
    10. 'dif' → logprob: -5.07731294631958

Token 557: '1' (ID: 16)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.4008302688598633
    2. '1' → logprob: -1.7758302688598633
    3. 'tokens' → logprob: -3.7758302688598633
    4. 'positions' → logprob: -3.9008302688598633
    5. 'different' → logprob: -3.9008302688598633
    6. 'matching' → logprob: -3.9008302688598633
    7. 'correct' → logprob: -4.150830268859863
    8. 'diff' → logprob: -4.150830268859863
    9. 'elements' → logprob: -4.275830268859863
    10. 'dif' → logprob: -5.150830268859863

Token 558: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12588776648044586
    2. '#' → logprob: -3.375887870788574
    3. 'matches' → logprob: -3.375887870788574
    4. 'diff' → logprob: -3.750887870788574
    5. ''s' → logprob: -4.625887870788574
    6. ',' → logprob: -5.500887870788574
    7. ' in' → logprob: -6.125887870788574
    8. ' matches' → logprob: -6.375887870788574
    9. '_diff' → logprob: -6.750887870788574
    10. 'from' → logprob: -6.875887870788574

Token 559: ' in' (ID: 306)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.47381749749183655
    2. '#' → logprob: -1.9738174676895142
    3. 'max' → logprob: -2.0988175868988037
    4. 'def' → logprob: -3.5988175868988037
    5. 'dp' → logprob: -3.7238175868988037
    6. '
' → logprob: -3.8488175868988037
    7. 'from' → logprob: -3.9738175868988037
    8. 'flip' → logprob: -5.223817348480225
    9. 'import' → logprob: -6.223817348480225
    10. ',' → logprob: -6.473817348480225

Token 560: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.008872774429619312
    2. ' matches' → logprob: -4.883872985839844
    3. 'diff' → logprob: -6.883872985839844
    4. '(matches' → logprob: -9.258872985839844
    5. '[' → logprob: -9.883872985839844
    6. '
' → logprob: -11.008872985839844
    7. 'max' → logprob: -11.383872985839844
    8. 'match' → logprob: -11.758872985839844
    9. ' diff' → logprob: -12.008872985839844
    10. '#' → logprob: -12.008872985839844

Token 561: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9393980503082275
    2. '#' → logprob: -1.0643980503082275
    3. 'diff' → logprob: -2.1893980503082275
    4. 'max' → logprob: -2.9393980503082275
    5. 'def' → logprob: -3.4393980503082275
    6. 'from' → logprob: -3.5643980503082275
    7. 'matches' → logprob: -5.064397811889648
    8. 'import' → logprob: -5.439397811889648
    9. 's' → logprob: -5.439397811889648
    10. ',' → logprob: -5.814397811889648

Token 562: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.432329386472702
    2. 'from' → logprob: -1.9323294162750244
    3. 'max' → logprob: -2.0573294162750244
    4. 'diff' → logprob: -3.4323294162750244
    5. 'def' → logprob: -3.9323294162750244
    6. 'import' → logprob: -4.807329177856445
    7. '
' → logprob: -5.557329177856445
    8. 'dp' → logprob: -5.807329177856445
    9. 'length' → logprob: -6.057329177856445
    10. 'runs' → logprob: -6.557329177856445

Token 563: ' Fl' (ID: 3632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8063595294952393
    2. 'from' → logprob: -1.1813595294952393
    3. 'max' → logprob: -2.3063595294952393
    4. 'def' → logprob: -2.4313595294952393
    5. 'diff' → logprob: -3.6813595294952393
    6. 'import' → logprob: -4.68135929107666
    7. 'We' → logprob: -4.68135929107666
    8. 'dp' → logprob: -5.30635929107666
    9. 'length' → logprob: -6.18135929107666
    10. 'runs' → logprob: -6.43135929107666

Token 564: 'ipping' (ID: 5792)
  Prédit: 'ipping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipping' → logprob: -0.6672740578651428
    2. 'ip' → logprob: -0.7922740578651428
    3. 'ips' → logprob: -3.417273998260498
    4. 'ipped' → logprob: -7.542273998260498
    5. '#' → logprob: -8.167274475097656
    6. 'icking' → logprob: -10.042274475097656
    7. 'ippings' → logprob: -10.042274475097656
    8. 'ipp' → logprob: -10.167274475097656
    9. 'ushing' → logprob: -10.167274475097656
    10. 'atten' → logprob: -10.417274475097656

Token 565: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0925755426287651
    2. ' a' → logprob: -2.7175755500793457
    3. 'the' → logprob: -5.092575550079346
    4. '[i' → logprob: -5.717575550079346
    5. ' the' → logprob: -5.842575550079346
    6. 'any' → logprob: -6.592575550079346
    7. 'matches' → logprob: -7.092575550079346
    8. ' at' → logprob: -7.092575550079346
    9. 'positions' → logprob: -7.217575550079346
    10. 'S' → logprob: -7.217575550079346

Token 566: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.12857387959957123
    2. ' sub' → logprob: -3.2535738945007324
    3. ' segment' → logprob: -4.003573894500732
    4. 'segment' → logprob: -4.003573894500732
    5. 'run' → logprob: -4.128573894500732
    6. ' run' → logprob: -4.753573894500732
    7. '1' → logprob: -5.503573894500732
    8. '[' → logprob: -5.628573894500732
    9. 'matches' → logprob: -5.628573894500732
    10. '#' → logprob: -6.253573894500732

Token 567: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -4.978233846486546e-05
    2. '1' → logprob: -10.500049591064453
    3. '_array' → logprob: -11.000049591064453
    4. ' array' → logprob: -13.375049591064453
    5. 'sequence' → logprob: -13.750049591064453
    6. '[' → logprob: -14.625049591064453
    7. 'arrays' → logprob: -14.625049591064453
    8. 'arr' → logprob: -14.875049591064453
    9. 'ar' → logprob: -15.250049591064453
    10. '_sub' → logprob: -15.375049591064453

Token 568: ' means' (ID: 4748)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7275313138961792
    2. ' =' → logprob: -2.2275314331054688
    3. '[i' → logprob: -2.8525314331054688
    4. 'diff' → logprob: -2.8525314331054688
    5. 'def' → logprob: -2.9775314331054688
    6. '[' → logprob: -3.2275314331054688
    7. '[l' → logprob: -3.3525314331054688
    8. ',' → logprob: -3.9775314331054688
    9. ' at' → logprob: -4.477531433105469
    10. '_' → logprob: -4.477531433105469

Token 569: ' togg' (ID: 23031)
  Prédit: ' flipping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flipping' → logprob: -0.8171535134315491
    2. ' togg' → logprob: -1.4421534538269043
    3. 'fl' → logprob: -2.8171534538269043
    4. ' turning' → logprob: -2.9421534538269043
    5. 'we' → logprob: -3.4421534538269043
    6. ' we' → logprob: -3.5671534538269043
    7. 'turn' → logprob: -3.6921534538269043
    8. ' that' → logprob: -3.9421534538269043
    9. 'changing' → logprob: -4.067153453826904
    10. ' changing' → logprob: -4.192153453826904

Token 570: 'ling' (ID: 3321)
  Prédit: 'ling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ling' → logprob: -0.0011341434437781572
    2. 'gling' → logprob: -7.126133918762207
    3. '   ' → logprob: -9.501133918762207
    4. '[' → logprob: -10.001133918762207
    5. '
' → logprob: -10.501133918762207
    6. '#' → logprob: -10.751133918762207
    7. '```' → logprob: -11.001133918762207
    8. '=' → logprob: -11.376133918762207
    9. '﻿' → logprob: -11.626133918762207
    10. 'ging' → logprob: -11.876133918762207

Token 571: ' matches' (ID: 15248)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3444094955921173
    2. 'the' → logprob: -2.344409465789795
    3. ' matches' → logprob: -2.594409465789795
    4. 'matches' → logprob: -2.719409465789795
    5. ' some' → logprob: -3.594409465789795
    6. ' bits' → logprob: -5.219409465789795
    7. 's' → logprob: -5.219409465789795
    8. ' all' → logprob: -5.844409465789795
    9. 'some' → logprob: -6.219409465789795
    10. ' a' → logprob: -6.219409465789795

Token 572: ' inside' (ID: 6772)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1116726398468018
    2. ' =' → logprob: -1.2366726398468018
    3. '[i' → logprob: -2.1116726398468018
    4. ',' → logprob: -3.1116726398468018
    5. ''s' → logprob: -3.4866726398468018
    6. ' at' → logprob: -3.4866726398468018
    7. '#' → logprob: -3.4866726398468018
    8. '.' → logprob: -3.7366726398468018
    9. '1' → logprob: -3.9866726398468018
    10. ' in' → logprob: -4.861672401428223

Token 573: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.19478784501552582
    2. ' the' → logprob: -2.0697877407073975
    3. 'that' → logprob: -3.8197877407073975
    4. 'sub' → logprob: -4.819787979125977
    5. ' that' → logprob: -4.819787979125977
    6. 'a' → logprob: -5.569787979125977
    7. 'matches' → logprob: -5.569787979125977
    8. '#' → logprob: -6.444787979125977
    9. ' sub' → logprob: -7.069787979125977
    10. '```' → logprob: -7.194787979125977

Token 574: ' interval' (ID: 17116)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.11741063743829727
    2. ' sub' → logprob: -2.242410659790039
    3. 'segment' → logprob: -6.867410659790039
    4. '[sub' → logprob: -6.867410659790039
    5. '_sub' → logprob: -6.992410659790039
    6. '#' → logprob: -7.742410659790039
    7. ' segment' → logprob: -8.242410659790039
    8. ']' → logprob: -8.617410659790039
    9. 'array' → logprob: -8.742410659790039
    10. '[' → logprob: -9.117410659790039

Token 575: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2738131880760193
    2. '
' → logprob: -2.023813247680664
    3. 'max' → logprob: -3.523813247680664
    4. 'def' → logprob: -4.023813247680664
    5. 'from' → logprob: -4.023813247680664
    6. 'diff' → logprob: -4.773813247680664
    7. ',' → logprob: -5.023813247680664
    8. ',
' → logprob: -5.148813247680664
    9. 'import' → logprob: -5.398813247680664
    10. 'dp' → logprob: -5.648813247680664

Token 576: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06056111305952072
    2. ').' → logprob: -3.310561180114746
    3. '),' → logprob: -4.435561180114746
    4. ')
' → logprob: -5.560561180114746
    5. ')

' → logprob: -5.935561180114746
    6. '#' → logprob: -6.685561180114746
    7. ',' → logprob: -7.060561180114746
    8. 'from' → logprob: -8.185561180114746
    9. ').

' → logprob: -8.435561180114746
    10. ').
' → logprob: -8.435561180114746

Token 577: '->' (ID: 609)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01444237306714058
    2. '-' → logprob: -4.264442443847656
    3. '   ' → logprob: -9.014442443847656
    4. ')' → logprob: -9.639442443847656
    5. ' ' → logprob: -10.139442443847656
    6. '-length' → logprob: -12.139442443847656
    7. ' if' → logprob: -12.264442443847656
    8. 's' → logprob: -12.389442443847656
    9. ',' → logprob: -12.764442443847656
    10. '  ' → logprob: -12.764442443847656

Token 578: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '
' → logprob: -16.375295639038086
    4. ')' → logprob: -17.000295639038086
    5. '-' → logprob: -17.000295639038086
    6. '```' → logprob: -17.125295639038086
    7. ',' → logprob: -17.875295639038086
    8. '۰' → logprob: -18.875295639038086
    9. ' 
' → logprob: -19.375295639038086
    10. '=' → logprob: -19.500295639038086

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013612248934805393
    2. ' or' → logprob: -4.513612270355225
    3. ' and' → logprob: -6.888612270355225
    4. 'or' → logprob: -7.138612270355225
    5. ' ,' → logprob: -8.263611793518066
    6. 'and' → logprob: -8.638611793518066
    7. ',
' → logprob: -8.763611793518066
    8. '
' → logprob: -10.263611793518066
    9. ')' → logprob: -10.388611793518066
    10. ';' → logprob: -10.388611793518066

Token 580: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029844094067811966
    2. ' ' → logprob: -3.529844045639038
    3. ' or' → logprob: -10.029844284057617
    4. '```' → logprob: -10.779844284057617
    5. '#' → logprob: -11.154844284057617
    6. 'or' → logprob: -12.154844284057617
    7. ' ' → logprob: -13.029844284057617
    8. 'and' → logprob: -13.154844284057617
    9. ' #' → logprob: -13.654844284057617
    10. ' and' → logprob: -13.654844284057617

Token 581: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.00014609156642109156
    2. ')->' → logprob: -9.87514591217041
    3. ' ->' → logprob: -10.00014591217041
    4. ',' → logprob: -10.25014591217041
    5. '→' → logprob: -12.25014591217041
    6. '->[' → logprob: -13.00014591217041
    7. ')' → logprob: -13.50014591217041
    8. '),' → logprob: -13.62514591217041
    9. '->{' → logprob: -13.75014591217041
    10. '```' → logprob: -13.87514591217041

Token 582: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -18.375
    4. '>' → logprob: -18.75
    5. ')' → logprob: -20.625
    6. '
' → logprob: -21.25
    7. '-' → logprob: -21.875
    8. '   ' → logprob: -21.875
    9. '۱' → logprob: -22.0
    10. '_' → logprob: -22.5

Token 583: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026256758719682693
    2. ')
' → logprob: -4.276256561279297
    3. '])' → logprob: -5.026256561279297
    4. '#' → logprob: -5.526256561279297
    5. ',' → logprob: -7.276256561279297
    6. ')

' → logprob: -9.026256561279297
    7. 'for' → logprob: -9.151256561279297
    8. ').' → logprob: -9.401256561279297
    9. ']' → logprob: -9.401256561279297
    10. '`)' → logprob: -9.401256561279297

Token 584: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5330047607421875
    2. 'def' → logprob: -1.9080047607421875
    3. '
' → logprob: -2.2830047607421875
    4. 'max' → logprob: -2.5330047607421875
    5. 'from' → logprob: -3.2830047607421875
    6. 'diff' → logprob: -3.5330047607421875
    7. 'dp' → logprob: -5.4080047607421875
    8. 'import' → logprob: -5.7830047607421875
    9. 'prefix' → logprob: -6.2830047607421875
    10. 'flip' → logprob: -7.1580047607421875

Token 585: ' To' (ID: 2514)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15578477084636688
    2. 'from' → logprob: -2.905784845352173
    3. '#' → logprob: -3.155784845352173
    4. 'max' → logprob: -3.530784845352173
    5. 'dp' → logprob: -4.780784606933594
    6. 'import' → logprob: -6.280784606933594
    7. 'length' → logprob: -6.405784606933594
    8. 'diff' → logprob: -6.905784606933594
    9. 'res' → logprob: -7.030784606933594
    10. 'for' → logprob: -7.280784606933594

Token 586: ' maximize' (ID: 44207)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.189977765083313
    2. 'handle' → logprob: -2.5649776458740234
    3. 'maximize' → logprob: -3.4399776458740234
    4. '#' → logprob: -4.314977645874023
    5. 'solve' → logprob: -4.439977645874023
    6. 'count' → logprob: -4.814977645874023
    7. 'implement' → logprob: -4.939977645874023
    8. 'check' → logprob: -5.564977645874023
    9. ' find' → logprob: -5.689977645874023
    10. 'def' → logprob: -5.814977645874023

Token 587: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1970372200012207
    2. 'max' → logprob: -1.9470372200012207
    3. 'res' → logprob: -4.322037220001221
    4. ' the' → logprob: -5.197037220001221
    5. 'long' → logprob: -5.322037220001221
    6. '#' → logprob: -5.697037220001221
    7. 'length' → logprob: -6.322037220001221
    8. 'con' → logprob: -6.447037220001221
    9. 'current' → logprob: -6.947037220001221
    10. 'run' → logprob: -6.947037220001221

Token 588: ' length' (ID: 5517)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.8600245714187622
    2. 'max' → logprob: -1.1100245714187622
    3. 'length' → logprob: -1.6100245714187622
    4. 'maximum' → logprob: -3.7350244522094727
    5. 'con' → logprob: -5.360024452209473
    6. 'res' → logprob: -5.735024452209473
    7. '#' → logprob: -5.735024452209473
    8. 'altern' → logprob: -5.860024452209473
    9. 'answer' → logprob: -6.860024452209473
    10. ' longest' → logprob: -6.985024452209473

Token 589: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7346444129943848
    2. ' of' → logprob: -1.2346444129943848
    3. '_of' → logprob: -2.1096444129943848
    4. 'of' → logprob: -2.4846444129943848
    5. ',' → logprob: -4.484644412994385
    6. '#' → logprob: -5.359644412994385
    7. '=' → logprob: -6.484644412994385
    8. 'def' → logprob: -6.609644412994385
    9. '_matches' → logprob: -7.234644412994385
    10. '   ' → logprob: -7.734644412994385

Token 590: ' consecutive' (ID: 40840)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.1391676813364029
    2. 'matches' → logprob: -2.7641677856445312
    3. 'long' → logprob: -3.6391677856445312
    4. 'the' → logprob: -3.8891677856445312
    5. '1' → logprob: -5.139167785644531
    6. 'max' → logprob: -5.264167785644531
    7. 'altern' → logprob: -5.889167785644531
    8. 'fl' → logprob: -6.264167785644531
    9. 'runs' → logprob: -7.139167785644531
    10. 'a' → logprob: -7.264167785644531

Token 591: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5649097561836243
    2. '_' → logprob: -1.8149096965789795
    3. ' ' → logprob: -1.9399096965789795
    4. ' ones' → logprob: -2.9399096965789795
    5. 'matches' → logprob: -3.4399096965789795
    6. ' matches' → logprob: -3.4399096965789795
    7. '_matches' → logprob: -5.689909934997559
    8. 'ones' → logprob: -6.314909934997559
    9. ' one' → logprob: -6.689909934997559
    10. '_one' → logprob: -7.189909934997559

Token 592: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11344242095947266
    2. 'matches' → logprob: -2.3634424209594727
    3. 'ones' → logprob: -4.363442420959473
    4. ' matches' → logprob: -8.863442420959473
    5. ' ones' → logprob: -9.113442420959473
    6. 'one' → logprob: -9.238442420959473
    7. ' ' → logprob: -10.363442420959473
    8. 'runs' → logprob: -10.988442420959473
    9. '```' → logprob: -12.113442420959473
    10. 'run' → logprob: -13.113442420959473

Token 593: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.2021152228116989
    2. 's' → logprob: -1.7021151781082153
    3. 'matches' → logprob: -8.827115058898926
    4. '`s' → logprob: -9.202115058898926
    5. '```' → logprob: -9.327115058898926
    6. '#' → logprob: -9.702115058898926
    7. ''' → logprob: -9.702115058898926
    8. ' s' → logprob: -9.952115058898926
    9. 'def' → logprob: -10.452115058898926
    10. ' sequences' → logprob: -10.952115058898926

Token 594: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.060066983103752136
    2. ',
' → logprob: -3.8100669384002686
    3. '#' → logprob: -4.185067176818848
    4. 'def' → logprob: -5.310067176818848
    5. 'matches' → logprob: -5.310067176818848
    6. 'in' → logprob: -6.185067176818848
    7. 'segments' → logprob: -6.310067176818848
    8. 'from' → logprob: -6.435067176818848
    9. 'for' → logprob: -6.935067176818848
    10. ' in' → logprob: -7.060067176818848

Token 595: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7323130965232849
    2. 'we' → logprob: -1.2323131561279297
    3. 'def' → logprob: -2.9823131561279297
    4. 'for' → logprob: -3.1073131561279297
    5. 'diff' → logprob: -3.2323131561279297
    6. 'import' → logprob: -3.9823131561279297
    7. ' we' → logprob: -4.23231315612793
    8. 'from' → logprob: -4.23231315612793
    9. 'res' → logprob: -4.85731315612793
    10. 'max' → logprob: -5.10731315612793

Token 596: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -1.2399992942810059
    2. 'can' → logprob: -1.4899992942810059
    3. 'need' → logprob: -1.7399992942810059
    4. 'find' → logprob: -1.9899992942810059
    5. 'want' → logprob: -3.364999294281006
    6. 'consider' → logprob: -3.489999294281006
    7. '#' → logprob: -3.614999294281006
    8. 'should' → logprob: -3.864999294281006
    9. 'def' → logprob: -4.364999294281006
    10. 'look' → logprob: -4.739999294281006

Token 597: ' flipping' (ID: 110780)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.47714295983314514
    2. ' to' → logprob: -1.1021429300308228
    3. ' flipping' → logprob: -3.7271430492401123
    4. 'fl' → logprob: -5.352142810821533
    5. '   ' → logprob: -5.602142810821533
    6. 'finding' → logprob: -5.602142810821533
    7. 'for' → logprob: -5.852142810821533
    8. ' togg' → logprob: -6.102142810821533
    9. 'all' → logprob: -6.227142810821533
    10. '```' → logprob: -7.227142810821533

Token 598: ' sub' (ID: 1543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06748674809932709
    2. ' a' → logprob: -3.6924867630004883
    3. 'the' → logprob: -3.8174867630004883
    4. 'matches' → logprob: -5.942486763000488
    5. 'all' → logprob: -6.067486763000488
    6. 'from' → logprob: -6.317486763000488
    7. 'sub' → logprob: -6.317486763000488
    8. 'some' → logprob: -6.442486763000488
    9. 'one' → logprob: -6.567486763000488
    10. 'each' → logprob: -6.692486763000488

Token 599: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.22770114243030548
    2. 'arrays' → logprob: -1.602701187133789
    3. 'arr' → logprob: -6.602701187133789
    4. '#' → logprob: -7.727701187133789
    5. 'ar' → logprob: -8.727701187133789
    6. '_array' → logprob: -9.352701187133789
    7. 'matches' → logprob: -9.602701187133789
    8. ' arrays' → logprob: -10.602701187133789
    9. '_arrays' → logprob: -10.727701187133789
    10. 'arry' → logprob: -10.727701187133789

Token 600: ' that' (ID: 484)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2488325834274292
    2. 's' → logprob: -1.3738325834274292
    3. '[i' → logprob: -1.4988325834274292
    4. '[' → logprob: -3.4988327026367188
    5. 'diff' → logprob: -3.4988327026367188
    6. ']' → logprob: -3.7488327026367188
    7. '[l' → logprob: -3.8738327026367188
    8. 'matches' → logprob: -3.9988327026367188
    9. ',' → logprob: -4.248832702636719
    10. 'from' → logprob: -4.373832702636719

Token 601: ' converts' (ID: 64809)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.26725196838378906
    2. ' maxim' → logprob: -3.142251968383789
    3. 'contains' → logprob: -3.142251968383789
    4. 'break' → logprob: -3.892251968383789
    5. 'extends' → logprob: -3.892251968383789
    6. 'maximize' → logprob: -4.392251968383789
    7. 'could' → logprob: -4.392251968383789
    8. 'can' → logprob: -4.517251968383789
    9. 'fl' → logprob: -4.767251968383789
    10. 'in' → logprob: -4.892251968383789

Token 602: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07238388061523438
    2. 'zeros' → logprob: -3.9473838806152344
    3. ' zeros' → logprob: -4.197383880615234
    4. ' ' → logprob: -4.697383880615234
    5. '```' → logprob: -5.197383880615234
    6. 'a' → logprob: -5.572383880615234
    7. 'con' → logprob: -5.697383880615234
    8. 'some' → logprob: -5.822383880615234
    9. 'matches' → logprob: -6.197383880615234
    10. 'runs' → logprob: -6.322383880615234

Token 603: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0489669144153595
    2. 'zeros' → logprob: -4.173966884613037
    3. ' zeros' → logprob: -5.173966884613037
    4. ' ' → logprob: -5.298966884613037
    5. '```' → logprob: -5.548966884613037
    6. 'matches' → logprob: -5.673966884613037
    7. 'a' → logprob: -5.798966884613037
    8. 'some' → logprob: -5.923966884613037
    9. 'runs' → logprob: -6.048966884613037
    10. 'the' → logprob: -6.423966884613037

Token 604: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002630234695971012
    2. ' s' → logprob: -6.252630233764648
    3. ' to' → logprob: -8.002630233764648
    4. '```' → logprob: -8.877630233764648
    5. ''s' → logprob: -9.377630233764648
    6. 'to' → logprob: -9.502630233764648
    7. '`s' → logprob: -11.252630233764648
    8. ' into' → logprob: -11.377630233764648
    9. 'es' → logprob: -11.627630233764648
    10. '}s' → logprob: -12.502630233764648

Token 605: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4902923107147217
    2. 'to' → logprob: -0.9902923107147217
    3. ' into' → logprob: -5.115292549133301
    4. 'into' → logprob: -5.240292549133301
    5. '```' → logprob: -6.365292549133301
    6. ',' → logprob: -6.990292549133301
    7. '[i' → logprob: -7.490292549133301
    8. ' ' → logprob: -8.3652925491333
    9. ' and' → logprob: -8.4902925491333
    10. '_to' → logprob: -8.7402925491333

Token 606: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031091354321688414
    2. ' ' → logprob: -8.500310897827148
    3. ' ones' → logprob: -10.000310897827148
    4. '```' → logprob: -10.000310897827148
    5. 'ones' → logprob: -11.625310897827148
    6. '<|end|>' → logprob: -13.125310897827148
    7. 'con' → logprob: -13.500310897827148
    8. 's' → logprob: -14.750310897827148
    9. 'one' → logprob: -14.875310897827148
    10. ''s' → logprob: -15.000310897827148

Token 607: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9623810658231378e-05
    2. ' ' → logprob: -11.000020027160645
    3. '```' → logprob: -13.000020027160645
    4. '<|end|>' → logprob: -15.000020027160645
    5. ' ones' → logprob: -15.250020027160645
    6. '`' → logprob: -17.750019073486328
    7. 'ones' → logprob: -18.000019073486328
    8. 's' → logprob: -18.125019073486328
    9. '0' → logprob: -18.687519073486328
    10. ''s' → logprob: -19.062519073486328

Token 608: ''s' (ID: 885)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.320299744606018
    2. '#' → logprob: -1.445299744606018
    3. 's' → logprob: -1.695299744606018
    4. ',' → logprob: -2.1952996253967285
    5. '.' → logprob: -3.1952996253967285
    6. ')' → logprob: -3.4452996253967285
    7. 'matches' → logprob: -3.9452996253967285
    8. ']' → logprob: -4.1952996253967285
    9. 'max' → logprob: -4.5702996253967285
    10. ' and' → logprob: -4.5702996253967285

Token 609: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.144080400466919
    2. 'dp' → logprob: -1.144080400466919
    3. 'max' → logprob: -1.769080400466919
    4. 'diff' → logprob: -3.269080400466919
    5. 'from' → logprob: -3.644080400466919
    6. '
' → logprob: -3.644080400466919
    7. 'def' → logprob: -3.769080400466919
    8. 'length' → logprob: -4.51908016204834
    9. 'import' → logprob: -4.76908016204834
    10. 'gain' → logprob: -5.01908016204834

Token 610: ' maybe' (ID: 10112)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.7548503279685974
    2. 'ke' → logprob: -2.254850387573242
    3. 'extends' → logprob: -2.254850387573242
    4. 'connect' → logprob: -2.379850387573242
    5. '#' → logprob: -2.879850387573242
    6. 'also' → logprob: -3.254850387573242
    7. 'break' → logprob: -3.629850387573242
    8. ' keeps' → logprob: -3.879850387573242
    9. ' converts' → logprob: -4.004850387573242
    10. '1' → logprob: -4.379850387573242

Token 611: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.7543185353279114
    2. 'connect' → logprob: -1.7543184757232666
    3. 'con' → logprob: -2.5043184757232666
    4. 'extends' → logprob: -2.6293184757232666
    5. 'also' → logprob: -3.3793184757232666
    6. 'fl' → logprob: -3.7543184757232666
    7. 'turn' → logprob: -4.129318714141846
    8. '#' → logprob: -4.379318714141846
    9. 'mer' → logprob: -4.379318714141846
    10. '1' → logprob: -4.379318714141846

Token 612: ' some' (ID: 1236)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34776097536087036
    2. 'the' → logprob: -1.5977609157562256
    3. ' the' → logprob: -3.4727609157562256
    4. '#' → logprob: -4.222761154174805
    5. 'matches' → logprob: -5.097761154174805
    6. '```' → logprob: -5.222761154174805
    7. 'existing' → logprob: -5.597761154174805
    8. '0' → logprob: -5.722761154174805
    9. 'some' → logprob: -5.847761154174805
    10. 'runs' → logprob: -5.972761154174805

Token 613: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8602470755577087
    2. 'matches' → logprob: -1.1102471351623535
    3. '#' → logprob: -2.4852471351623535
    4. 'of' → logprob: -3.3602471351623535
    5. 'runs' → logprob: -3.6102471351623535
    6. '1' → logprob: -3.7352471351623535
    7. 'ones' → logprob: -4.3602471351623535
    8. '```' → logprob: -4.3602471351623535
    9. 'existing' → logprob: -4.4852471351623535
    10. ' of' → logprob: -4.6102471351623535

Token 614: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5950172543525696
    2. '0' → logprob: -1.5950171947479248
    3. 'ones' → logprob: -2.595017194747925
    4. 'existing' → logprob: -2.970017194747925
    5. 'of' → logprob: -3.095017194747925
    6. 'runs' → logprob: -3.595017194747925
    7. 'con' → logprob: -3.970017194747925
    8. 'matches' → logprob: -4.845017433166504
    9. '```' → logprob: -5.470017433166504
    10. 'long' → logprob: -5.845017433166504

Token 615: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2568148374557495
    2. ']' → logprob: -2.256814956665039
    3. ''s' → logprob: -3.256814956665039
    4. ',' → logprob: -4.256814956665039
    5. '_' → logprob: -4.256814956665039
    6. ')' → logprob: -4.631814956665039
    7. '#' → logprob: -4.881814956665039
    8. '_s' → logprob: -5.631814956665039
    9. '[]' → logprob: -6.006814956665039
    10. '[i' → logprob: -6.006814956665039

Token 616: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6263524293899536
    2. 'from' → logprob: -1.5013524293899536
    3. 'diff' → logprob: -2.501352310180664
    4. 'dp' → logprob: -2.876352310180664
    5. 'def' → logprob: -3.376352310180664
    6. 'max' → logprob: -4.001352310180664
    7. 'length' → logprob: -4.626352310180664
    8. 'segments' → logprob: -4.751352310180664
    9. 'import' → logprob: -5.001352310180664
    10. '
' → logprob: -5.501352310180664

Token 617: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3630557656288147
    2. ' but' → logprob: -1.48805570602417
    3. ' and' → logprob: -3.61305570602417
    4. '.' → logprob: -4.48805570602417
    5. 'but' → logprob: -5.11305570602417
    6. ' #' → logprob: -5.36305570602417
    7. ',' → logprob: -5.48805570602417
    8. ' so' → logprob: -5.48805570602417
    9. ')' → logprob: -5.86305570602417
    10. ' then' → logprob: -6.23805570602417

Token 618: ' overall' (ID: 10705)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15367411077022552
    2. 'the' → logprob: -3.6536741256713867
    3. 'we' → logprob: -3.6536741256713867
    4. 'from' → logprob: -4.278674125671387
    5. 'continue' → logprob: -4.403674125671387
    6. 'max' → logprob: -4.403674125671387
    7. 'import' → logprob: -4.653674125671387
    8. ')' → logprob: -4.653674125671387
    9. 'for' → logprob: -5.403674125671387
    10. 'res' → logprob: -6.028674125671387

Token 619: ' increase' (ID: 7064)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5646533966064453
    2. ',' → logprob: -2.4396533966064453
    3. ' we' → logprob: -2.8146533966064453
    4. 'we' → logprob: -2.9396533966064453
    5. 'max' → logprob: -3.4396533966064453
    6. '.' → logprob: -3.8146533966064453
    7. 'continue' → logprob: -4.189653396606445
    8. ' can' → logprob: -4.314653396606445
    9. 'maximize' → logprob: -4.439653396606445
    10. ')' → logprob: -4.439653396606445

Token 620: ' max' (ID: 2999)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1409069299697876
    2. ' in' → logprob: -1.7659069299697876
    3. ' the' → logprob: -2.140906810760498
    4. 'the' → logprob: -2.515906810760498
    5. ' =' → logprob: -3.015906810760498
    6. 's' → logprob: -3.390906810760498
    7. 'in' → logprob: -3.765906810760498
    8. '[i' → logprob: -3.765906810760498
    9. '=' → logprob: -3.890906810760498
    10. '   ' → logprob: -4.015906810760498

Token 621: ' run' (ID: 2461)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.615739643573761
    2. '_len' → logprob: -0.990739643573761
    3. '_length' → logprob: -2.990739583969116
    4. '_run' → logprob: -3.990739583969116
    5. '_diff' → logprob: -4.990739822387695
    6. '_match' → logprob: -5.490739822387695
    7. '_count' → logprob: -6.365739822387695
    8. '_matches' → logprob: -6.740739822387695
    9. '_con' → logprob: -7.615739822387695
    10. ' _' → logprob: -7.740739822387695

Token 622: ' of' (ID: 328)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.370383858680725
    2. '#' → logprob: -1.495383858680725
    3. 'runs' → logprob: -1.995383858680725
    4. 'from' → logprob: -2.1203837394714355
    5. 'max' → logprob: -2.6203837394714355
    6. 'run' → logprob: -3.1203837394714355
    7. 'length' → logprob: -3.4953837394714355
    8. 'matches' → logprob: -4.1203837394714355
    9. 'segments' → logprob: -4.3703837394714355
    10. 'def' → logprob: -4.3703837394714355

Token 623: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4355278015136719
    2. 'con' → logprob: -1.0605278015136719
    3. 'ones' → logprob: -6.060527801513672
    4. ' ' → logprob: -6.310527801513672
    5. ' consecutive' → logprob: -6.810527801513672
    6. ' ones' → logprob: -7.435527801513672
    7. 'length' → logprob: -7.560527801513672
    8. 's' → logprob: -8.935527801513672
    9. '```' → logprob: -9.310527801513672
    10. 'continuous' → logprob: -10.310527801513672

Token 624: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0810854360461235
    2. 'con' → logprob: -2.581085443496704
    3. 'ones' → logprob: -7.206085205078125
    4. 'matches' → logprob: -7.331085205078125
    5. 'length' → logprob: -8.331085205078125
    6. '```' → logprob: -9.456085205078125
    7. ' ' → logprob: -9.581085205078125
    8. '0' → logprob: -9.831085205078125
    9. 'continuous' → logprob: -10.081085205078125
    10. 's' → logprob: -10.081085205078125

Token 625: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.217235803604126
    2. 'diff' → logprob: -1.342235803604126
    3. '_diff' → logprob: -1.467235803604126
    4. '#' → logprob: -2.467235803604126
    5. 'def' → logprob: -3.717235803604126
    6. '_' → logprob: -3.842235803604126
    7. 'from' → logprob: -4.342235565185547
    8. 'dp' → logprob: -4.842235565185547
    9. '_dp' → logprob: -5.092235565185547
    10. '_lengths' → logprob: -5.217235565185547

Token 626: '.

' (ID: 364)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2593209743499756
    2. 'diff' → logprob: -1.3843209743499756
    3. 'max' → logprob: -2.0093209743499756
    4. 'dp' → logprob: -2.2593209743499756
    5. 'def' → logprob: -2.6343209743499756
    6. 'length' → logprob: -3.5093209743499756
    7. 'flip' → logprob: -3.6343209743499756
    8. 'from' → logprob: -4.009321212768555
    9. 'change' → logprob: -4.384321212768555
    10. 'gain' → logprob: -4.509321212768555

Token 627: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9949198365211487
    2. 'diff' → logprob: -1.869919776916504
    3. '#' → logprob: -1.994919776916504
    4. 'dp' → logprob: -2.369919776916504
    5. 'from' → logprob: -3.119919776916504
    6. 'run' → logprob: -3.119919776916504
    7. 'def' → logprob: -3.244919776916504
    8. 'length' → logprob: -3.619919776916504
    9. 'flip' → logprob: -4.244919776916504
    10. 'change' → logprob: -4.619919776916504

Token 628: ' We' (ID: 1416)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.4668344259262085
    2. '#' → logprob: -1.8418344259262085
    3. 'dp' → logprob: -2.341834545135498
    4. 'diff' → logprob: -2.341834545135498
    5. 'from' → logprob: -2.466834545135498
    6. 'run' → logprob: -2.466834545135498
    7. 'def' → logprob: -2.716834545135498
    8. 'length' → logprob: -3.216834545135498
    9. 'n' → logprob: -3.591834545135498
    10. 'change' → logprob: -4.216834545135498

Token 629: ' find' (ID: 1646)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.6353325247764587
    2. ' can' → logprob: -1.6353325843811035
    3. 'need' → logprob: -2.0103325843811035
    4. 'def' → logprob: -3.0103325843811035
    5. '#' → logprob: -3.2603325843811035
    6. ' need' → logprob: -4.0103325843811035
    7. 'continue' → logprob: -4.3853325843811035
    8. 'import' → logprob: -4.6353325843811035
    9. ''ll' → logprob: -6.2603325843811035
    10. 'will' → logprob: -6.7603325843811035

Token 630: ' maximal' (ID: 65414)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1476829051971436
    2. 'def' → logprob: -2.0226829051971436
    3. 'i' → logprob: -2.1476829051971436
    4. '#' → logprob: -2.5226829051971436
    5. 'the' → logprob: -2.6476829051971436
    6. 'from' → logprob: -3.0226829051971436
    7. 's' → logprob: -3.1476829051971436
    8. 'diff' → logprob: -3.3976829051971436
    9. 'left' → logprob: -3.6476829051971436
    10. 'dp' → logprob: -4.147683143615723

Token 631: ' length' (ID: 5517)
  Prédit: '_run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_run' → logprob: -1.1569232940673828
    2. '_' → logprob: -1.6569232940673828
    3. 'run' → logprob: -2.156923294067383
    4. '_gain' → logprob: -2.781923294067383
    5. 'gain' → logprob: -2.781923294067383
    6. 'diff' → logprob: -3.031923294067383
    7. '_length' → logprob: -3.531923294067383
    8. '_len' → logprob: -3.781923294067383
    9. '_diff' → logprob: -3.906923294067383
    10. '```' → logprob: -4.406923294067383

Token 632: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.483542561531067
    2. '_' → logprob: -1.483542561531067
    3. ' =' → logprob: -1.733542561531067
    4. '_diff' → logprob: -1.983542561531067
    5. 's' → logprob: -2.6085424423217773
    6. '_run' → logprob: -3.2335424423217773
    7. 'diff' → logprob: -3.3585424423217773
    8. '_segment' → logprob: -4.358542442321777
    9. ',' → logprob: -4.483542442321777
    10. 'of' → logprob: -4.733542442321777

Token 633: ' sub' (ID: 1543)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.18328766524791718
    2. '1' → logprob: -3.3082876205444336
    3. 'sub' → logprob: -3.6832876205444336
    4. 'run' → logprob: -3.6832876205444336
    5. 'flip' → logprob: -3.8082876205444336
    6. 'the' → logprob: -4.308287620544434
    7. 'a' → logprob: -4.933287620544434
    8. 'fl' → logprob: -5.183287620544434
    9. 'zero' → logprob: -5.308287620544434
    10. 'matches' → logprob: -5.308287620544434

Token 634: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.003365454263985157
    2. 'sequence' → logprob: -6.503365516662598
    3. 'arrays' → logprob: -6.628365516662598
    4. 'arr' → logprob: -8.378365516662598
    5. 'string' → logprob: -9.628365516662598
    6. '[]' → logprob: -9.878365516662598
    7. '_array' → logprob: -10.128365516662598
    8. '[' → logprob: -10.503365516662598
    9. '   ' → logprob: -10.753365516662598
    10. '```' → logprob: -11.253365516662598

Token 635: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14927205443382263
    2. ' =' → logprob: -2.8992719650268555
    3. 's' → logprob: -3.7742719650268555
    4. '=' → logprob: -4.5242719650268555
    5. '_of' → logprob: -4.5242719650268555
    6. '_with' → logprob: -5.0242719650268555
    7. ' _' → logprob: -5.2742719650268555
    8. ',' → logprob: -5.8992719650268555
    9. '_to' → logprob: -5.8992719650268555
    10. '_max' → logprob: -6.0242719650268555

Token 636: ' diff' (ID: 8868)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.5220975279808044
    2. 'diff' → logprob: -1.1470975875854492
    3. '0' → logprob: -3.272097587585449
    4. '1' → logprob: -3.397097587585449
    5. ' matches' → logprob: -5.272097587585449
    6. 'zeros' → logprob: -6.272097587585449
    7. ' ' → logprob: -6.272097587585449
    8. 'dif' → logprob: -6.397097587585449
    9. ' diff' → logprob: -6.522097587585449
    10. 'ones' → logprob: -6.772097587585449

Token 637: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1448286771774292
    2. ',' → logprob: -1.7698286771774292
    3. '_max' → logprob: -1.8948286771774292
    4. '=' → logprob: -2.1448287963867188
    5. '_' → logprob: -2.3948287963867188
    6. 'max' → logprob: -3.2698287963867188
    7. 's' → logprob: -3.8948287963867188
    8. '[' → logprob: -3.8948287963867188
    9. '_diff' → logprob: -4.769828796386719
    10. '_sum' → logprob: -4.894828796386719

Token 638: 'which' (ID: 13980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14013797044754028
    2. 'that' → logprob: -3.8901379108428955
    3. ',' → logprob: -4.015138149261475
    4. '+' → logprob: -4.390138149261475
    5. ' that' → logprob: -4.515138149261475
    6. ' where' → logprob: -4.640138149261475
    7. 'with' → logprob: -4.640138149261475
    8. '=' → logprob: -4.765138149261475
    9. ' with' → logprob: -5.140138149261475
    10. 's' → logprob: -5.640138149261475

Token 639: ' represents' (ID: 18627)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.261122226715088
    2. ' =' → logprob: -1.761122226715088
    3. ')' → logprob: -2.011122226715088
    4. 'is' → logprob: -2.386122226715088
    5. ' is' → logprob: -2.636122226715088
    6. 'rep' → logprob: -2.886122226715088
    7. '[i' → logprob: -3.136122226715088
    8. 'contains' → logprob: -3.761122226715088
    9. ' can' → logprob: -4.136122226715088
    10. ' represents' → logprob: -4.261122226715088

Token 640: ' gain' (ID: 11621)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6947152614593506
    2. 'con' → logprob: -2.0697152614593506
    3. ' flipping' → logprob: -2.4447152614593506
    4. ' ' → logprob: -2.9447152614593506
    5. 'fl' → logprob: -2.9447152614593506
    6. 'matches' → logprob: -3.3197152614593506
    7. '+' → logprob: -3.5697152614593506
    8. 'the' → logprob: -3.9447152614593506
    9. '```' → logprob: -4.44471549987793
    10. ')' → logprob: -4.69471549987793

Token 641: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06482335180044174
    2. 's' → logprob: -3.5648233890533447
    3. '=' → logprob: -5.189823150634766
    4. '_max' → logprob: -5.314823150634766
    5. ']' → logprob: -5.564823150634766
    6. ' =' → logprob: -5.689823150634766
    7. 'max' → logprob: -5.939823150634766
    8. '[i' → logprob: -6.064823150634766
    9. ',' → logprob: -6.439823150634766
    10. '_' → logprob: -6.689823150634766

Token 642: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0613306760787964
    2. '_max' → logprob: -1.1863306760787964
    3. '=' → logprob: -1.9363306760787964
    4. '_' → logprob: -2.811330795288086
    5. '_diff' → logprob: -2.936330795288086
    6. '_sum' → logprob: -3.936330795288086
    7. 'max' → logprob: -4.061330795288086
    8. ',' → logprob: -4.186330795288086
    9. '.' → logprob: -5.186330795288086
    10. '#' → logprob: -5.311330795288086

Token 643: ' use' (ID: 1199)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apply' → logprob: -1.497564673423767
    2. 'use' → logprob: -1.997564673423767
    3. 'combine' → logprob: -2.2475647926330566
    4. ' its' → logprob: -2.6225647926330566
    5. '#' → logprob: -2.6225647926330566
    6. 'merge' → logprob: -2.7475647926330566
    7. 'try' → logprob: -3.1225647926330566
    8. 'then' → logprob: -3.1225647926330566
    9. 'its' → logprob: -3.2475647926330566
    10. 'the' → logprob: -3.8725647926330566

Token 644: ' that' (ID: 484)
  Prédit: 'Kad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Kad' → logprob: -0.7556939125061035
    2. 'the' → logprob: -2.1306939125061035
    3. 'two' → logprob: -2.3806939125061035
    4. 'a' → logprob: -2.5056939125061035
    5. 'max' → logprob: -2.7556939125061035
    6. ' Kad' → logprob: -3.0056939125061035
    7. 'matches' → logprob: -3.2556939125061035
    8. 'def' → logprob: -4.1306939125061035
    9. '```' → logprob: -4.2556939125061035
    10. '#' → logprob: -4.5056939125061035

Token 645: ' to' (ID: 316)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5690078139305115
    2. 'diff' → logprob: -0.9440078139305115
    3. 'dp' → logprob: -3.6940078735351562
    4. '#' → logprob: -5.444007873535156
    5. 'prefix' → logprob: -5.569007873535156
    6. '
' → logprob: -5.569007873535156
    7. 'gain' → logprob: -5.819007873535156
    8. 'current' → logprob: -7.194007873535156
    9. 'from' → logprob: -7.194007873535156
    10. 'def' → logprob: -7.444007873535156

Token 646: ' update' (ID: 4027)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -1.1175099611282349
    2. 'find' → logprob: -1.4925099611282349
    3. 'calculate' → logprob: -2.2425098419189453
    4. 'combine' → logprob: -2.6175098419189453
    5. 'maximize' → logprob: -3.1175098419189453
    6. 'add' → logprob: -3.1175098419189453
    7. '#' → logprob: -3.4925098419189453
    8. 'merge' → logprob: -3.4925098419189453
    9. 'extend' → logprob: -3.7425098419189453
    10. 'simulate' → logprob: -4.117509841918945

Token 647: ' result' (ID: 1534)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1760023981332779
    2. 'for' → logprob: -2.0510025024414062
    3. 'diff' → logprob: -4.676002502441406
    4. 'res' → logprob: -5.051002502441406
    5. 'ans' → logprob: -5.676002502441406
    6. 'best' → logprob: -5.926002502441406
    7. 'if' → logprob: -6.301002502441406
    8. ' max' → logprob: -6.676002502441406
    9. ' for' → logprob: -6.801002502441406
    10. 'current' → logprob: -6.926002502441406

Token 648: ':

' (ID: 1402)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7542882561683655
    2. 'diff' → logprob: -0.7542882561683655
    3. 'dp' → logprob: -3.8792881965637207
    4. 'gain' → logprob: -4.129288196563721
    5. '#' → logprob: -5.629288196563721
    6. 'def' → logprob: -5.754288196563721
    7. 'curr' → logprob: -6.129288196563721
    8. 'prefix' → logprob: -6.129288196563721
    9. 'current' → logprob: -6.129288196563721
    10. 'from' → logprob: -6.379288196563721

Token 649: 'def' (ID: 1314)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09252837300300598
    2. 'current' → logprob: -3.2175283432006836
    3. 'def' → logprob: -4.217528343200684
    4. 'diff' → logprob: -4.467528343200684
    5. 'from' → logprob: -4.967528343200684
    6. 'import' → logprob: -5.717528343200684
    7. 'curr' → logprob: -5.842528343200684
    8. 'dp' → logprob: -6.092528343200684
    9. 'for' → logprob: -6.217528343200684
    10. 'prefix' → logprob: -6.467528343200684

Token 650: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.056502413004636765
    2. ' max' → logprob: -3.056502342224121
    3. 'maximize' → logprob: -5.556502342224121
    4. 'long' → logprob: -6.806502342224121
    5. 'flip' → logprob: -7.056502342224121
    6. 'find' → logprob: -7.306502342224121
    7. ' longest' → logprob: -7.431502342224121
    8. ' maximize' → logprob: -8.181502342224121
    9. 'kad' → logprob: -8.556502342224121
    10. ' find' → logprob: -9.056502342224121

Token 651: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.10943598300218582
    2. '_gain' → logprob: -2.35943603515625
    3. '_diff' → logprob: -5.48443603515625
    4. '_flip' → logprob: -6.23443603515625
    5. '_' → logprob: -6.85943603515625
    6. 'sub' → logprob: -6.98443603515625
    7. '_length' → logprob: -7.60943603515625
    8. '_sum' → logprob: -8.35943603515625
    9. ' sub' → logprob: -8.98443603515625
    10. '_profit' → logprob: -10.23443603515625

Token 652: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -6.194110756041482e-05
    2. '_array' → logprob: -10.125061988830566
    3. 'arry' → logprob: -11.375061988830566
    4. 'arr' → logprob: -12.625061988830566
    5. 'sum' → logprob: -12.750061988830566
    6. 'sequence' → logprob: -13.125061988830566
    7. 'ar' → logprob: -14.250061988830566
    8. '_sum' → logprob: -14.500061988830566
    9. 'string' → logprob: -15.375061988830566
    10. '```' → logprob: -15.875061988830566

Token 653: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.07896458357572556
    2. 'sum' → logprob: -2.5789644718170166
    3. '_max' → logprob: -10.578964233398438
    4. 'Sum' → logprob: -11.078964233398438
    5. '_s' → logprob: -11.578964233398438
    6. 'max' → logprob: -11.828964233398438
    7. ' sum' → logprob: -12.078964233398438
    8. '```' → logprob: -12.328964233398438
    9. '\' → logprob: -13.828964233398438
    10. '(sum' → logprob: -13.953964233398438

Token 654: '(arr' (ID: 19646)
  Prédit: '(diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.3158584237098694
    2. '(arr' → logprob: -1.5658583641052246
    3. '(' → logprob: -3.4408583641052246
    4. '_diff' → logprob: -3.8158583641052246
    5. '(nums' → logprob: -5.565858364105225
    6. 'diff' → logprob: -5.815858364105225
    7. '(lst' → logprob: -7.940858364105225
    8. '(array' → logprob: -8.565858840942383
    9. '_' → logprob: -9.065858840942383
    10. 'def' → logprob: -9.815858840942383

Token 655: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02465089038014412
    2. '):
' → logprob: -4.649651050567627
    3. ')' → logprob: -4.774651050567627
    4. '(arr' → logprob: -5.399651050567627
    5. '[]):' → logprob: -6.774651050567627
    6. '[arr' → logprob: -8.774650573730469
    7. '   ' → logprob: -9.024650573730469
    8. '):
' → logprob: -9.774650573730469
    9. ' ):' → logprob: -9.899650573730469
    10. ',' → logprob: -9.899650573730469

Token 656: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005686411168426275
    2. ' max' → logprob: -8.500568389892578
    3. 'n' → logprob: -9.500568389892578
    4. 'max' → logprob: -9.625568389892578
    5. '    ' → logprob: -10.000568389892578
    6. '```' → logprob: -10.000568389892578
    7. ' n' → logprob: -10.500568389892578
    8. '   ' → logprob: -10.625568389892578
    9. '    
' → logprob: -10.875568389892578
    10. '   ' → logprob: -11.125568389892578

Token 657: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.07064270228147507
    2. ' max' → logprob: -3.3206427097320557
    3. '   ' → logprob: -3.4456427097320557
    4. 'current' → logprob: -9.320642471313477
    5. ' current' → logprob: -10.070642471313477
    6. '	max' → logprob: -10.320642471313477
    7. '
' → logprob: -12.070642471313477
    8. 'cur' → logprob: -12.570642471313477
    9. '_max' → logprob: -12.945642471313477
    10. '    
' → logprob: -12.945642471313477

Token 658: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00028624574770219624
    2. '_val' → logprob: -8.500286102294922
    3. '_sum' → logprob: -10.375286102294922
    4. ' _' → logprob: -10.625286102294922
    5. '_
' → logprob: -12.250286102294922
    6. '_=' → logprob: -12.375286102294922
    7. '=_' → logprob: -12.750286102294922
    8. '_so' → logprob: -13.000286102294922
    9. '_,' → logprob: -13.250286102294922
    10. '_

' → logprob: -13.750286102294922

Token 659: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.5532655119895935
    2. 'sub' → logprob: -1.4282655715942383
    3. 'current' → logprob: -2.0532655715942383
    4. 'so' → logprob: -3.6782655715942383
    5. 'sum' → logprob: -3.8032655715942383
    6. 'element' → logprob: -5.553265571594238
    7. 'arr' → logprob: -6.428265571594238
    8. 'here' → logprob: -6.428265571594238
    9. 'global' → logprob: -7.928265571594238
    10. 'array' → logprob: -8.178265571594238

Token 660: ' =' (ID: 314)
  Prédit: '_here'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -0.005604391917586327
    2. 'here' → logprob: -5.255604267120361
    3. '=' → logprob: -8.38060474395752
    4. 'Here' → logprob: -9.25560474395752
    5. '_at' → logprob: -10.88060474395752
    6. ' =' → logprob: -11.88060474395752
    7. '   ' → logprob: -12.25560474395752
    8. '```' → logprob: -12.63060474395752
    9. '\' → logprob: -12.75560474395752
    10. 'at' → logprob: -13.00560474395752

Token 661: ' max' (ID: 2999)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.011487375944852829
    2. '0' → logprob: -4.6364874839782715
    3. 'max' → logprob: -6.3864874839782715
    4. ' arr' → logprob: -10.261487007141113
    5. ' ' → logprob: -12.011487007141113
    6. 'float' → logprob: -14.011487007141113
    7. ' max' → logprob: -14.261487007141113
    8. '-arr' → logprob: -14.761487007141113
    9. '	arr' → logprob: -14.886487007141113
    10. 'ans' → logprob: -14.886487007141113

Token 662: '_so' (ID: 98189)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6534265875816345
    2. 'arr' → logprob: -0.9034265875816345
    3. '=' → logprob: -3.2784266471862793
    4. '0' → logprob: -4.153426647186279
    5. '_so' → logprob: -5.153426647186279
    6. '_arr' → logprob: -5.278426647186279
    7. '(arr' → logprob: -5.528426647186279
    8. '_here' → logprob: -5.653426647186279
    9. 'so' → logprob: -7.403426647186279
    10. 'ending' → logprob: -7.528426647186279

Token 663: '_far' (ID: 170374)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.26828423142433167
    2. '_far' → logprob: -1.5182842016220093
    3. 'f' → logprob: -4.268284320831299
    4. '_f' → logprob: -6.393284320831299
    5. '=' → logprob: -8.26828384399414
    6. 'fur' → logprob: -9.89328384399414
    7. 'ur' → logprob: -10.01828384399414
    8. 'ft' → logprob: -10.26828384399414
    9. 'Far' → logprob: -11.01828384399414
    10. 'r' → logprob: -11.14328384399414

Token 664: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196802109479904
    2. ' =' → logprob: -2.8119680881500244
    3. '=max' → logprob: -16.061967849731445
    4. 'arr' → logprob: -16.436967849731445
    5. ',' → logprob: -16.811967849731445
    6. '_=' → logprob: -17.436967849731445
    7. '_' → logprob: -18.436967849731445
    8. '[' → logprob: -18.561967849731445
    9. ' ' → logprob: -18.686967849731445
    10. ')' → logprob: -18.811967849731445

Token 665: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -9.460291767027229e-05
    2. '-arr' → logprob: -9.875094413757324
    3. '0' → logprob: -10.500094413757324
    4. '-' → logprob: -11.375094413757324
    5. ' arr' → logprob: -12.500094413757324
    6. '	arr' → logprob: -15.750094413757324
    7. ' -' → logprob: -17.25009536743164
    8. '_arr' → logprob: -17.37509536743164
    9. ' ' → logprob: -17.87509536743164
    10. '$arr' → logprob: -18.25009536743164

Token 666: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012403888104017824
    2. '0' → logprob: -9.000123977661133
    3. '[
' → logprob: -14.625123977661133
    4. '\[' → logprob: -16.250123977661133
    5. ' [' → logprob: -16.375123977661133
    6. 's' → logprob: -16.750123977661133
    7. '```' → logprob: -17.125123977661133
    8. ' ' → logprob: -18.125123977661133
    9. 'def' → logprob: -18.500123977661133
    10. '[-' → logprob: -18.750123977661133

Token 667: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -11.625009536743164
    3. ' ' → logprob: -16.750009536743164
    4. ']' → logprob: -19.000009536743164
    5. '-' → logprob: -19.125009536743164
    6. '```' → logprob: -20.250009536743164
    7. '۰' → logprob: -20.500009536743164
    8. '=' → logprob: -20.500009536743164
    9. '00' → logprob: -20.875009536743164
    10. '(' → logprob: -21.000009536743164

Token 668: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019387369975447655
    2. ')' → logprob: -4.269387245178223
    3. '<|end|>' → logprob: -5.894387245178223
    4. ' ]' → logprob: -7.394387245178223
    5. '
' → logprob: -7.769387245178223
    6. ']
' → logprob: -7.894387245178223
    7. 'def' → logprob: -8.519387245178223
    8. '<|end|>' → logprob: -8.644387245178223
    9. '   ' → logprob: -9.144387245178223
    10. 'max' → logprob: -9.394387245178223

Token 669: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3757940530776978
    2. ' 
' → logprob: -1.3757940530776978
    3. ' for' → logprob: -1.7507940530776978
    4. '   ' → logprob: -2.125793933868408
    5. 'for' → logprob: -2.750793933868408
    6. 'max' → logprob: -3.250793933868408
    7. ' max' → logprob: -3.750793933868408
    8. '=' → logprob: -3.750793933868408
    9. ',' → logprob: -4.125793933868408
    10. '  
' → logprob: -4.625793933868408

Token 670: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6947939991950989
    2. 'for' (adapté à ' for') → logprob: -0.6947939991950989
    3. 'max' → logprob: -6.944794178009033
    4. ' max' → logprob: -7.944794178009033
    5. '0' → logprob: -8.944793701171875
    6. 'arr' → logprob: -9.319793701171875
    7. '=' → logprob: -10.069793701171875
    8. '1' → logprob: -10.819793701171875
    9. '   ' → logprob: -11.319793701171875
    10. ' arr' → logprob: -11.694793701171875

Token 671: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23514652252197266
    2. 'i' → logprob: -1.7351465225219727
    3. ' x' → logprob: -3.4851465225219727
    4. ' i' → logprob: -5.985146522521973
    5. ' ' → logprob: -12.985146522521973
    6. '   ' → logprob: -13.610146522521973
    7. 'num' → logprob: -14.360146522521973
    8. '	x' → logprob: -14.860146522521973
    9. 'j' → logprob: -15.110146522521973
    10. '  ' → logprob: -15.485146522521973

Token 672: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12738412618637085
    2. 'in' → logprob: -2.1273841857910156
    3. ' ' → logprob: -8.252384185791016
    4. '	in' → logprob: -8.877384185791016
    5. ',' → logprob: -11.627384185791016
    6. ' x' → logprob: -11.877384185791016
    7. ' i' → logprob: -12.002384185791016
    8. '_' → logprob: -12.252384185791016
    9. ' ' → logprob: -12.252384185791016
    10. '  ' → logprob: -12.627384185791016

Token 673: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.02975187823176384
    2. ' arr' → logprob: -3.529751777648926
    3. '	arr' → logprob: -14.529751777648926
    4. ' ' → logprob: -14.779751777648926
    5. 'range' → logprob: -15.904751777648926
    6. '_arr' → logprob: -16.029752731323242
    7. '[' → logprob: -16.404752731323242
    8. '   ' → logprob: -16.779752731323242
    9. ' range' → logprob: -17.279752731323242
    10. '(arr' → logprob: -17.529752731323242

Token 674: '[' (ID: 58)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021113403141498566
    2. 'in' → logprob: -3.896113395690918
    3. ',' → logprob: -8.146113395690918
    4. '   ' → logprob: -9.021113395690918
    5. '[' → logprob: -10.021113395690918
    6. ':' → logprob: -10.521113395690918
    7. '	in' → logprob: -11.021113395690918
    8. ' ' → logprob: -11.146113395690918
    9. '=' → logprob: -11.146113395690918
    10. ' ,' → logprob: -11.396113395690918

Token 675: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.750004768371582
    4. ':' → logprob: -14.750004768371582
    5. '
' → logprob: -17.375003814697266
    6. 'i' → logprob: -17.625003814697266
    7. ',' → logprob: -17.750003814697266
    8. '[' → logprob: -18.250003814697266
    9. '```' → logprob: -18.625003814697266
    10. '):
' → logprob: -18.875003814697266

Token 676: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3328576385974884
    2. ' in' → logprob: -1.707857608795166
    3. ',' → logprob: -2.457857608795166
    4. ':
' → logprob: -5.082857608795166
    5. 'in' → logprob: -5.332857608795166
    6. '):
' → logprob: -6.832857608795166
    7. ']:
' → logprob: -7.707857608795166
    8. ']' → logprob: -7.832857608795166
    9. '=' → logprob: -7.957857608795166
    10. ',x' → logprob: -8.332858085632324

Token 677: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.2566089630126953
    2. ':' → logprob: -1.3816089630126953
    3. ']:
' → logprob: -1.6316089630126953
    4. '):
' → logprob: -2.1316089630126953
    5. '   ' → logprob: -2.6316089630126953
    6. ']:' → logprob: -3.5066089630126953
    7. ' :' → logprob: -4.631608963012695
    8. ' :
' → logprob: -4.631608963012695
    9. '       ' → logprob: -4.756608963012695
    10. ' ):
' → logprob: -5.756608963012695

Token 678: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20981229841709137
    2. '   ' → logprob: -2.4598124027252197
    3. ' max' → logprob: -2.5848124027252197
    4. 'max' → logprob: -4.334812164306641
    5. '    ' → logprob: -5.334812164306641
    6. '
' → logprob: -5.584812164306641
    7. '```' → logprob: -5.709812164306641
    8. ' if' → logprob: -6.959812164306641
    9. '        
' → logprob: -7.459812164306641
    10. '	max' → logprob: -7.959812164306641

Token 679: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.10133276134729385
    2. ' max' → logprob: -2.351332664489746
    3. 'if' → logprob: -7.351332664489746
    4. ' if' → logprob: -7.976332664489746
    5. '
' → logprob: -10.101332664489746
    6. '	max' → logprob: -10.476332664489746
    7. '       ' → logprob: -10.726332664489746
    8. '   ' → logprob: -11.351332664489746
    9. '    ' → logprob: -11.476332664489746
    10. '0' → logprob: -12.101332664489746

Token 680: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.511406809295295e-06
    2. '```' → logprob: -12.125006675720215
    3. '_so' → logprob: -15.500006675720215
    4. ' _' → logprob: -15.625006675720215
    5. '`' → logprob: -15.750006675720215
    6. '(_' → logprob: -16.3750057220459
    7. '   ' → logprob: -16.6250057220459
    8. '_cont' → logprob: -17.5000057220459
    9. '(' → logprob: -17.6250057220459
    10. '_
' → logprob: -17.7500057220459

Token 681: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.875001907348633
    3. 'Ending' → logprob: -14.875001907348633
    4. 'arr' → logprob: -15.375001907348633
    5. 'ENDING' → logprob: -15.500001907348633
    6. '```' → logprob: -15.750001907348633
    7. 'ended' → logprob: -16.750001907348633
    8. 'continu' → logprob: -16.875001907348633
    9. '-ending' → logprob: -17.125001907348633
    10. 'max' → logprob: -17.375001907348633

Token 682: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014168326742947102
    2. ' =' → logprob: -4.2641682624816895
    3. '=max' → logprob: -12.264168739318848
    4. '   ' → logprob: -16.26416778564453
    5. 'max' → logprob: -17.63916778564453
    6. '+=' → logprob: -18.26416778564453
    7. '    ' → logprob: -19.13916778564453
    8. '＝' → logprob: -19.26416778564453
    9. '```' → logprob: -19.26416778564453
    10. '	' → logprob: -19.38916778564453

Token 683: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00317783304490149
    2. ' max' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.878177642822266
    4. '	max' → logprob: -17.378177642822266
    5. '(max' → logprob: -19.253177642822266
    6. ' ' → logprob: -19.628177642822266
    7. '
' → logprob: -20.628177642822266
    8. 'min' → logprob: -21.753177642822266
    9. '[max' → logprob: -21.753177642822266
    10. '```' → logprob: -21.753177642822266

Token 684: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1317288875579834
    2. '(' → logprob: -2.1317288875579834
    3. '0' → logprob: -5.6317291259765625
    4. 'x' → logprob: -6.7567291259765625
    5. '(max' → logprob: -10.131729125976562
    6. 'max' → logprob: -13.756729125976562
    7. ' x' → logprob: -13.756729125976562
    8. '```' → logprob: -14.381729125976562
    9. ' ' → logprob: -14.506729125976562
    10. '_x' → logprob: -15.506729125976562

Token 685: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000693016336299479
    2. ',max' → logprob: -7.500692844390869
    3. ',x' → logprob: -9.250693321228027
    4. 'max' → logprob: -10.250693321228027
    5. ' ,' → logprob: -12.000693321228027
    6. 'x' → logprob: -13.625693321228027
    7. ',
' → logprob: -14.500693321228027
    8. 'arr' → logprob: -14.500693321228027
    9. '+' → logprob: -16.62569236755371
    10. ' max' → logprob: -16.87569236755371

Token 686: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.002481008181348443
    2. ' max' → logprob: -6.002480983734131
    3. '   ' → logprob: -13.252481460571289
    4. '       ' → logprob: -13.502481460571289
    5. '	max' → logprob: -13.502481460571289
    6. '           ' → logprob: -14.377481460571289
    7. '(max' → logprob: -16.12748146057129
    8. '               ' → logprob: -17.12748146057129
    9. '[max' → logprob: -17.37748146057129
    10. '     ' → logprob: -18.00248146057129

Token 687: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.77627644513268e-06
    2. 'ending' → logprob: -12.000008583068848
    3. '_sub' → logprob: -14.125008583068848
    4. '```' → logprob: -14.125008583068848
    5. 'Ending' → logprob: -15.750008583068848
    6. '__' → logprob: -16.375009536743164
    7. '`' → logprob: -16.625009536743164
    8. '(' → logprob: -16.875009536743164
    9. 'sub' → logprob: -17.125009536743164
    10. 'max' → logprob: -17.125009536743164

Token 688: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.0002636006975080818
    2. 'max' → logprob: -8.375263214111328
    3. 'x' → logprob: -11.000263214111328
    4. '_' → logprob: -11.625263214111328
    5. '(' → logprob: -13.125263214111328
    6. 'Ending' → logprob: -13.375263214111328
    7. '-ending' → logprob: -14.375263214111328
    8. 'adding' → logprob: -14.375263214111328
    9. 'continu' → logprob: -14.750263214111328
    10. 'ENDING' → logprob: -15.000263214111328

Token 689: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020741820335388
    2. '+' → logprob: -2.3502073287963867
    3. '+x' → logprob: -14.600207328796387
    4. ' ' → logprob: -15.600207328796387
    5. '+
' → logprob: -18.225208282470703
    6. '```' → logprob: -18.225208282470703
    7. '	' → logprob: -18.350208282470703
    8. '+k' → logprob: -18.350208282470703
    9. ' ' → logprob: -18.350208282470703
    10. '＋' → logprob: -18.475208282470703

Token 690: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47407710552215576
    2. ' x' → logprob: -0.9740771055221558
    3. '	x' → logprob: -16.599077224731445
    4. ' ' → logprob: -17.474077224731445
    5. ' ' → logprob: -17.724077224731445
    6. ')' → logprob: -18.349077224731445
    7. ')x' → logprob: -18.599077224731445
    8. ''x' → logprob: -20.224077224731445
    9. '_x' → logprob: -20.474077224731445
    10. '`' → logprob: -20.474077224731445

Token 691: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. ')
' → logprob: -12.375007629394531
    3. ' )' → logprob: -12.750007629394531
    4. '<|end|>' → logprob: -15.375007629394531
    5. '   ' → logprob: -16.75000762939453
    6. '}' → logprob: -16.87500762939453
    7. ')return' → logprob: -17.25000762939453
    8. '))' → logprob: -17.25000762939453
    9. ')}' → logprob: -17.62500762939453
    10. '),' → logprob: -17.62500762939453

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05550363287329674
    2. '   ' → logprob: -3.6805036067962646
    3. 'max' → logprob: -4.305503845214844
    4. '           ' → logprob: -5.305503845214844
    5. ',' → logprob: -6.055503845214844
    6. ' max' → logprob: -6.305503845214844
    7. ')' → logprob: -6.555503845214844
    8. '        
' → logprob: -7.055503845214844
    9. ',max' → logprob: -7.430503845214844
    10. '
' → logprob: -7.680503845214844

Token 693: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011234086006879807
    2. 'max' → logprob: -4.511234283447266
    3. ' if' → logprob: -8.636234283447266
    4. '       ' → logprob: -11.886234283447266
    5. '```' → logprob: -13.511234283447266
    6. ' max' → logprob: -15.636234283447266
    7. '           ' → logprob: -15.886234283447266
    8. '   ' → logprob: -16.511234283447266
    9. '
' → logprob: -17.011234283447266
    10. '[max' → logprob: -17.636234283447266

Token 694: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.38687410950660706
    2. 'max' → logprob: -1.1368740797042847
    3. '(max' → logprob: -12.886874198913574
    4. '	max' → logprob: -14.886874198913574
    5. '_max' → logprob: -16.386873245239258
    6. ' ' → logprob: -16.511873245239258
    7. '=max' → logprob: -17.511873245239258
    8. '```' → logprob: -17.636873245239258
    9. '[max' → logprob: -17.886873245239258
    10. 'x' → logprob: -18.011873245239258

Token 695: '_' (ID: 62)
  Prédit: '_so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -0.07889165729284286
    2. '_' → logprob: -2.5788917541503906
    3. '```' → logprob: -13.45389175415039
    4. 'So' → logprob: -16.07889175415039
    5. '_SO' → logprob: -16.20389175415039
    6. '_here' → logprob: -16.45389175415039
    7. '\' → logprob: -16.95389175415039
    8. '_possible' → logprob: -17.95389175415039
    9. '_
' → logprob: -18.20389175415039
    10. '_sm' → logprob: -18.32889175415039

Token 696: 'ending' (ID: 3258)
  Prédit: '_so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -0.005916350521147251
    2. '_' → logprob: -5.505916118621826
    3. 'so' → logprob: -6.380916118621826
    4. 'ending' → logprob: -8.880916595458984
    5. 'So' → logprob: -13.130916595458984
    6. '```' → logprob: -13.880916595458984
    7. '_SO' → logprob: -15.130916595458984
    8. '-so' → logprob: -15.255916595458984
    9. '\' → logprob: -17.755916595458984
    10. ' So' → logprob: -17.880916595458984

Token 697: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12693388760089874
    2. ' >' → logprob: -2.1269338130950928
    3. ' ' → logprob: -12.626934051513672
    4. ' ' → logprob: -13.876934051513672
    5. '">' → logprob: -15.001934051513672
    6. '>
' → logprob: -15.376934051513672
    7. ' >
' → logprob: -15.626934051513672
    8. '```' → logprob: -15.626934051513672
    9. '   ' → logprob: -16.126934051513672
    10. ')' → logprob: -16.376934051513672

Token 698: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007099286303855479
    2. ' max' → logprob: -7.2507100105285645
    3. '=max' → logprob: -18.500709533691406
    4. '(max' → logprob: -18.750709533691406
    5. '	max' → logprob: -19.125709533691406
    6. '[max' → logprob: -19.250709533691406
    7. '_max' → logprob: -20.500709533691406
    8. 'x' → logprob: -22.375709533691406
    9. '.max' → logprob: -22.500709533691406
    10. ',max' → logprob: -22.500709533691406

Token 699: '_so' (ID: 98189)
  Prédit: '_so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -14.75
    3. '```' → logprob: -18.25
    4. 'So' → logprob: -18.5
    5. '\' → logprob: -18.75
    6. '_s' → logprob: -19.25
    7. '_here' → logprob: -19.375
    8. '_SO' → logprob: -20.125
    9. '_soft' → logprob: -20.5
    10. '_far' → logprob: -21.25

Token 700: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -0.0006284446571953595
    2. 'far' → logprob: -7.375628471374512
    3. 'Far' → logprob: -13.375628471374512
    4. '```' → logprob: -16.250627517700195
    5. '_f' → logprob: -16.875627517700195
    6. 'ofar' → logprob: -17.125627517700195
    7. ' far' → logprob: -17.250627517700195
    8. '_for' → logprob: -17.375627517700195
    9. '_fast' → logprob: -17.625627517700195
    10. 'r' → logprob: -17.750627517700195

Token 701: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.255590558052063
    2. ':
' → logprob: -1.505590558052063
    3. '           ' → logprob: -6.005590438842773
    4. '=' → logprob: -8.130590438842773
    5. ':max' → logprob: -8.130590438842773
    6. 'max' → logprob: -8.255590438842773
    7. '=max' → logprob: -8.630590438842773
    8. '       ' → logprob: -10.005590438842773
    9. '```' → logprob: -10.255590438842773
    10. ' =' → logprob: -11.005590438842773

Token 702: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07586924731731415
    2. ' max' → logprob: -3.20086932182312
    3. 'max' → logprob: -3.45086932182312
    4. '```' → logprob: -8.7008695602417
    5. '=max' → logprob: -8.7008695602417
    6. '[max' → logprob: -9.5758695602417
    7. '
' → logprob: -9.5758695602417
    8. '(max' → logprob: -9.7008695602417
    9. ' =' → logprob: -10.9508695602417
    10. '=' → logprob: -11.2008695602417

Token 703: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0004307884373702109
    2. ' max' → logprob: -7.750430583953857
    3. '           ' → logprob: -16.250431060791016
    4. '_max' → logprob: -18.750431060791016
    5. '               ' → logprob: -19.000431060791016
    6. '[max' → logprob: -19.625431060791016
    7. '	max' → logprob: -19.625431060791016
    8. '```' → logprob: -19.875431060791016
    9. '(max' → logprob: -20.250431060791016
    10. ',max' → logprob: -22.250431060791016

Token 704: '_so' (ID: 98189)
  Prédit: '_so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -13.875000953674316
    3. '_SO' → logprob: -19.875001907348633
    4. 'so' → logprob: -20.375001907348633
    5. 'So' → logprob: -21.000001907348633
    6. '_soft' → logprob: -21.500001907348633
    7. '\' → logprob: -22.125001907348633
    8. '_to' → logprob: -22.625001907348633
    9. '_since' → logprob: -22.750001907348633
    10. '	So' → logprob: -22.750001907348633

Token 705: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -0.0011706985533237457
    2. 'far' → logprob: -6.751170635223389
    3. 'Far' → logprob: -14.501171112060547
    4. ' far' → logprob: -17.751171112060547
    5. 'ofar' → logprob: -19.001171112060547
    6. 'ar' → logprob: -19.626171112060547
    7. '_for' → logprob: -19.626171112060547
    8. 'фар' → logprob: -20.876171112060547
    9. 'afar' → logprob: -21.001171112060547
    10. '_f' → logprob: -21.001171112060547

Token 706: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234002135694027
    2. ' =' → logprob: -5.2552337646484375
    3. '=max' → logprob: -16.755233764648438
    4. '+=' → logprob: -17.255233764648438
    5. '=
' → logprob: -17.630233764648438
    6. '＝' → logprob: -18.255233764648438
    7. '=True' → logprob: -18.380233764648438
    8. '```' → logprob: -18.755233764648438
    9. '_=' → logprob: -19.255233764648438
    10. '.=' → logprob: -19.630233764648438

Token 707: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0031777136027812958
    2. ' max' → logprob: -5.753177642822266
    3. '	max' → logprob: -20.503177642822266
    4. '[max' → logprob: -20.753177642822266
    5. '(max' → logprob: -21.003177642822266
    6. '_max' → logprob: -22.628177642822266
    7. '=max' → logprob: -22.753177642822266
    8. 'ma' → logprob: -23.253177642822266
    9. 'Max' → logprob: -25.253177642822266
    10. ',max' → logprob: -25.378177642822266

Token 708: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_so' → logprob: -17.75
    3. '```' → logprob: -20.25
    4. '\' → logprob: -20.25
    5. '(' → logprob: -20.625
    6. 'ending' → logprob: -21.125
    7. 'Ending' → logprob: -21.875
    8. '(x' → logprob: -22.125
    9. '	' → logprob: -22.375
    10. '_here' → logprob: -22.75

Token 709: 'ending' (ID: 3258)
  Prédit: '_so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -0.1273714154958725
    2. 'so' → logprob: -2.127371311187744
    3. 'far' → logprob: -8.627371788024902
    4. 'ending' → logprob: -8.877371788024902
    5. 'So' → logprob: -9.377371788024902
    6. '_' → logprob: -10.877371788024902
    7. '_far' → logprob: -11.377371788024902
    8. 'for' → logprob: -12.002371788024902
    9. '-so' → logprob: -13.752371788024902
    10. 'fo' → logprob: -14.752371788024902

Token 710: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05205922946333885
    2. 'return' → logprob: -3.1770591735839844
    3. '=' → logprob: -5.677059173583984
    4. ' return' → logprob: -5.802059173583984
    5. '       ' → logprob: -7.552059173583984
    6. '           ' → logprob: -7.677059173583984
    7. ':return' → logprob: -7.677059173583984
    8. '	return' → logprob: -8.302059173583984
    9. '=max' → logprob: -8.427059173583984
    10. ' =' → logprob: -8.927059173583984

Token 711: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4599629044532776
    2. ' return' → logprob: -1.5849628448486328
    3. 'return' → logprob: -2.209962844848633
    4. '	return' → logprob: -4.209962844848633
    5. '       ' → logprob: -4.459962844848633
    6. '=' → logprob: -4.959962844848633
    7. '
' → logprob: -5.334962844848633
    8. '```' → logprob: -5.834962844848633
    9. ' =' → logprob: -6.084962844848633
    10. ':return' → logprob: -6.584962844848633

Token 712: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4761846661567688
    2. '   ' → logprob: -0.9761846661567688
    3. ' return' → logprob: -6.351184844970703
    4. '	return' → logprob: -7.976184844970703
    5. ':return' → logprob: -11.601184844970703
    6. '       ' → logprob: -13.101184844970703
    7. '```' → logprob: -13.101184844970703
    8. '           ' → logprob: -13.601184844970703
    9. '
' → logprob: -14.476184844970703
    10. '_return' → logprob: -14.976184844970703

Token 713: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0004306692280806601
    2. ' max' → logprob: -7.750430583953857
    3. '(max' → logprob: -19.375431060791016
    4. '[max' → logprob: -21.875431060791016
    5. '	max' → logprob: -22.500431060791016
    6. '_max' → logprob: -23.125431060791016
    7. '=max' → logprob: -23.750431060791016
    8. ',max' → logprob: -24.750431060791016
    9. 'int' → logprob: -25.000431060791016
    10. 'm' → logprob: -26.250431060791016

Token 714: '_so' (ID: 98189)
  Prédit: '_so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.25
    3. '\' → logprob: -16.625
    4. '_' → logprob: -17.25
    5. '_soft' → logprob: -17.875
    6. 'So' → logprob: -17.875
    7. '(_' → logprob: -18.125
    8. '_sub' → logprob: -18.875
    9. '_SO' → logprob: -19.125
    10. '_to' → logprob: -19.625

Token 715: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -5.872261317563243e-05
    2. 'far' → logprob: -9.750059127807617
    3. 'Far' → logprob: -15.250059127807617
    4. '_fac' → logprob: -17.500059127807617
    5. '_for' → logprob: -18.125059127807617
    6. '```' → logprob: -18.250059127807617
    7. ' far' → logprob: -18.250059127807617
    8. 'ofar' → logprob: -18.375059127807617
    9. '\' → logprob: -18.625059127807617
    10. '[' → logprob: -18.625059127807617

Token 716: '

' (ID: 279)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.35595497488975525
    2. '
' → logprob: -2.605954885482788
    3. 'res' → logprob: -2.730954885482788
    4. 'max' → logprob: -2.855954885482788
    5. 'gain' → logprob: -2.980954885482788
    6. '#' → logprob: -3.730954885482788
    7. 'if' → logprob: -4.105955123901367
    8. 'flip' → logprob: -5.480955123901367
    9. 'result' → logprob: -6.480955123901367
    10. '+' → logprob: -6.980955123901367

Token 717: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7168506383895874
    2. 'gain' → logprob: -1.4668506383895874
    3. 'max' → logprob: -2.341850757598877
    4. 'for' → logprob: -2.341850757598877
    5. 'res' → logprob: -3.091850757598877
    6. '#' → logprob: -4.216850757598877
    7. 'delta' → logprob: -4.966850757598877
    8. 'result' → logprob: -4.966850757598877
    9. 'flip' → logprob: -5.591850757598877
    10. 'answer' → logprob: -5.716850757598877

Token 718: ' We' (ID: 1416)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5315738320350647
    2. 'gain' → logprob: -1.03157377243042
    3. 'res' → logprob: -3.90657377243042
    4. 'max' → logprob: -4.53157377243042
    5. 'flip' → logprob: -4.78157377243042
    6. 'for' → logprob: -4.78157377243042
    7. '#' → logprob: -5.28157377243042
    8. 'delta' → logprob: -6.65657377243042
    9. 'best' → logprob: -7.40657377243042
    10. 'change' → logprob: -8.281574249267578

Token 719: ' try' (ID: 2075)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6192574501037598
    2. '=' → logprob: -0.8692574501037598
    3. 'res' → logprob: -4.86925745010376
    4. 'max' → logprob: -4.86925745010376
    5. '_' → logprob: -5.36925745010376
    6. '1' → logprob: -5.36925745010376
    7. 'diff' → logprob: -5.36925745010376
    8. '#' → logprob: -5.61925745010376
    9. '_diff' → logprob: -6.74425745010376
    10. 'continue' → logprob: -6.86925745010376

Token 720: ' both' (ID: 2973)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3915351927280426
    2. ':
' → logprob: -1.7665351629257202
    3. ':' → logprob: -3.2665352821350098
    4. 'both' → logprob: -3.2665352821350098
    5. 'diff' → logprob: -4.14153528213501
    6. 'all' → logprob: -4.14153528213501
    7. ' for' → logprob: -4.14153528213501
    8. 'to' → logprob: -5.14153528213501
    9. 'def' → logprob: -5.64153528213501
    10. '1' → logprob: -5.89153528213501

Token 721: ' alt' (ID: 5001)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.22466589510440826
    2. 'for' → logprob: -2.599665880203247
    3. 'max' → logprob: -3.849665880203247
    4. ' patterns' → logprob: -3.849665880203247
    5. 'results' → logprob: -4.099666118621826
    6. 'pattern' → logprob: -4.099666118621826
    7. 'matches' → logprob: -4.224666118621826
    8. 'res' → logprob: -4.474666118621826
    9. 'diff' → logprob: -4.849666118621826
    10. ' for' → logprob: -5.224666118621826

Token 722: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002197717549279332
    2. 'patterns' → logprob: -6.252197742462158
    3. 's' → logprob: -9.002197265625
    4. '_patterns' → logprob: -10.502197265625
    5. 'itudes' → logprob: -10.877197265625
    6. 'pattern' → logprob: -10.877197265625
    7. ' =' → logprob: -11.127197265625
    8. '=' → logprob: -11.502197265625
    9. 'ern' → logprob: -11.752197265625
    10. '_lengths' → logprob: -12.127197265625

Token 723: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3218756318092346
    2. 'and' → logprob: -1.9468755722045898
    3. '=' → logprob: -2.69687557220459
    4. ' =' → logprob: -3.32187557220459
    5. ',' → logprob: -4.32187557220459
    6. 's' → logprob: -5.32187557220459
    7. 'matches' → logprob: -6.07187557220459
    8. '1' → logprob: -6.44687557220459
    9. ')' → logprob: -6.44687557220459
    10. '_' → logprob: -6.69687557220459

Token 724: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.04025746509432793
    2. ' alt' → logprob: -3.415257453918457
    3. 'matches' → logprob: -5.165257453918457
    4. '2' → logprob: -7.540257453918457
    5. ' matches' → logprob: -8.040257453918457
    6. '1' → logprob: -12.165257453918457
    7. '_alt' → logprob: -12.415257453918457
    8. 'diff' → logprob: -12.790257453918457
    9. 'match' → logprob: -13.165257453918457
    10. ' ' → logprob: -13.665257453918457

Token 725: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004129691980779171
    2. '1' → logprob: -5.504129886627197
    3. 'matches' → logprob: -10.004129409790039
    4. '0' → logprob: -13.254129409790039
    5. 's' → logprob: -13.254129409790039
    6. '3' → logprob: -14.504129409790039
    7. 'match' → logprob: -15.004129409790039
    8. '_matches' → logprob: -15.254129409790039
    9. '```' → logprob: -15.629129409790039
    10. 'flip' → logprob: -15.879129409790039

Token 726: ' patterns' (ID: 18587)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.03972499072551727
    2. 'for' → logprob: -3.2897250652313232
    3. 'res' → logprob: -7.289724826812744
    4. 'gain' → logprob: -7.289724826812744
    5. 'flip' → logprob: -9.539725303649902
    6. 'dif' → logprob: -9.789725303649902
    7. 'def' → logprob: -9.914725303649902
    8. 'd' → logprob: -10.414725303649902
    9. 'max' → logprob: -10.414725303649902
    10. 'g' → logprob: -10.539725303649902

Token 727: ',' (ID: 11)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.12915976345539093
    2. 'gain' → logprob: -2.879159688949585
    3. 'for' → logprob: -3.004159688949585
    4. 'g' → logprob: -4.879159927368164
    5. 'res' → logprob: -5.629159927368164
    6. 'flip' → logprob: -6.129159927368164
    7. 'max' → logprob: -6.629159927368164
    8. 'best' → logprob: -8.754159927368164
    9. 'fl' → logprob: -9.004159927368164
    10. 'dif' → logprob: -9.129159927368164

Token 728: ' calculate' (ID: 17950)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.503532886505127
    2. 'max' → logprob: -1.503532886505127
    3. 'gain' → logprob: -2.378532886505127
    4. 'for' → logprob: -3.878532886505127
    5. 'inc' → logprob: -4.128532886505127
    6. 'flip' → logprob: -4.628532886505127
    7. 'diff' → logprob: -4.753532886505127
    8. 'increase' → logprob: -4.753532886505127
    9. 'best' → logprob: -4.878532886505127
    10. '
' → logprob: -5.878532886505127

Token 729: ' max' (ID: 2999)
  Prédit: 'gain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gain' → logprob: -0.7806609869003296
    2. 'diff' → logprob: -1.4056609869003296
    3. 'max' → logprob: -1.7806609869003296
    4. 'res' → logprob: -2.905661106109619
    5. 'best' → logprob: -3.530661106109619
    6. 'g' → logprob: -4.030661106109619
    7. 'flip' → logprob: -4.655661106109619
    8. 'for' → logprob: -4.905661106109619
    9. 'possible' → logprob: -5.905661106109619
    10. 'inc' → logprob: -6.530661106109619

Token 730: ' sub' (ID: 1543)
  Prédit: '_gain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_gain' → logprob: -0.03314613178372383
    2. '_in' → logprob: -4.533145904541016
    3. 'gain' → logprob: -4.533145904541016
    4. '_diff' → logprob: -5.033145904541016
    5. '_flip' → logprob: -6.533145904541016
    6. '_inc' → logprob: -6.658145904541016
    7. 'diff' → logprob: -7.033145904541016
    8. '_sub' → logprob: -8.158145904541016
    9. '_' → logprob: -9.158145904541016
    10. '_sum' → logprob: -9.283145904541016

Token 731: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.0023475768975913525
    2. 'arr' → logprob: -6.877347469329834
    3. '_sum' → logprob: -7.127347469329834
    4. 'sum' → logprob: -8.002347946166992
    5. '_len' → logprob: -9.252347946166992
    6. '_arr' → logprob: -10.877347946166992
    7. '_res' → logprob: -11.127347946166992
    8. 'arry' → logprob: -11.252347946166992
    9. '_array' → logprob: -11.627347946166992
    10. 'res' → logprob: -12.377347946166992

Token 732: ' gain' (ID: 11621)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09271832555532455
    2. '_sum' → logprob: -2.9677183628082275
    3. 'gain' → logprob: -4.717718124389648
    4. 's' → logprob: -4.842718124389648
    5. '_gain' → logprob: -5.217718124389648
    6. '_s' → logprob: -5.217718124389648
    7. 'diff' → logprob: -5.592718124389648
    8. '1' → logprob: -5.967718124389648
    9. 'g' → logprob: -6.342718124389648
    10. 'max' → logprob: -8.092718124389648

Token 733: ' and' (ID: 326)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.030289916321635246
    2. 'gain' → logprob: -3.530289888381958
    3. 'g' → logprob: -7.905290126800537
    4. 'for' → logprob: -9.655289649963379
    5. 'res' → logprob: -9.780289649963379
    6. 'max' → logprob: -10.280289649963379
    7. 'd' → logprob: -12.030289649963379
    8. ' diff' → logprob: -13.030289649963379
    9. 'flip' → logprob: -13.530289649963379
    10. '```' → logprob: -14.405289649963379

Token 734: ' update' (ID: 4027)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6461942791938782
    2. 'res' → logprob: -1.0211942195892334
    3. '
' → logprob: -3.1461942195892334
    4. '#' → logprob: -3.6461942195892334
    5. ' res' → logprob: -4.2711944580078125
    6. ' max' → logprob: -4.8961944580078125
    7. 'for' → logprob: -5.2711944580078125
    8. 'result' → logprob: -5.3961944580078125
    9. 'update' → logprob: -5.8961944580078125
    10. 'print' → logprob: -5.8961944580078125

Token 735: ' result' (ID: 1534)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.04517907276749611
    2. 'ans' → logprob: -3.9201791286468506
    3. 'for' → logprob: -4.4201788902282715
    4. 'result' → logprob: -5.2951788902282715
    5. 'answer' → logprob: -5.7951788902282715
    6. 'max' → logprob: -5.9201788902282715
    7. '
' → logprob: -7.2951788902282715
    8. 'best' → logprob: -8.29517936706543
    9. 'final' → logprob: -8.54517936706543
    10. 'diff' → logprob: -9.04517936706543

Token 736: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.359963059425354
    2. 'diff' → logprob: -1.609963059425354
    3. 'gain' → logprob: -3.3599629402160645
    4. 'max' → logprob: -3.4849629402160645
    5. 'res' → logprob: -3.8599629402160645
    6. '
' → logprob: -4.7349629402160645
    7. 'flip' → logprob: -5.8599629402160645
    8. '```' → logprob: -6.4849629402160645
    9. 'delta' → logprob: -7.6099629402160645
    10. ' for' → logprob: -7.7349629402160645

Token 737: '#' (ID: 2)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.9362398386001587
    2. 'gain' → logprob: -1.1862398386001587
    3. 'res' → logprob: -1.9362398386001587
    4. 'for' → logprob: -2.436239719390869
    5. 'max' → logprob: -2.686239719390869
    6. 'flip' → logprob: -6.811239719390869
    7. 'g' → logprob: -7.311239719390869
    8. 'ans' → logprob: -8.811240196228027
    9. '```' → logprob: -9.186240196228027
    10. 'delta' → logprob: -9.311240196228027

Token 738: ' But' (ID: 3072)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.007849594578146935
    2. 'for' → logprob: -4.88284969329834
    3. 'res' → logprob: -8.63284969329834
    4. '```' → logprob: -10.63284969329834
    5. 'gain' → logprob: -10.63284969329834
    6. 'dif' → logprob: -12.50784969329834
    7. 'matches' → logprob: -12.75784969329834
    8. 'def' → logprob: -12.75784969329834
    9. 'flip' → logprob: -13.25784969329834
    10. '
' → logprob: -13.63284969329834

Token 739: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43423962593078613
    2. ' for' → logprob: -1.5592396259307861
    3. 'matches' → logprob: -2.809239625930786
    4. ' matches' → logprob: -4.184239387512207
    5. '#' → logprob: -4.434239387512207
    6. 'max' → logprob: -4.559239387512207
    7. 'if' → logprob: -4.809239387512207
    8. ' if' → logprob: -5.059239387512207
    9. 'res' → logprob: -5.184239387512207
    10. 'diff' → logprob: -5.184239387512207

Token 740: ' sub' (ID: 1543)
  Prédit: '_gain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_gain' → logprob: -0.12717294692993164
    2. '_sub' → logprob: -3.2521729469299316
    3. '_len' → logprob: -3.3771729469299316
    4. '_' → logprob: -4.252172946929932
    5. '_run' → logprob: -4.377172946929932
    6. 'gain' → logprob: -5.002172946929932
    7. '_length' → logprob: -5.252172946929932
    8. '_flip' → logprob: -6.002172946929932
    9. '_diff' → logprob: -6.377172946929932
    10. '_in' → logprob: -7.252172946929932

Token 741: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -1.4617256056226324e-05
    2. '_array' → logprob: -11.875014305114746
    3. ' array' → logprob: -13.000014305114746
    4. 'rray' → logprob: -13.250014305114746
    5. '#' → logprob: -13.875014305114746
    6. 'sequence' → logprob: -13.875014305114746
    7. 'arr' → logprob: -14.375014305114746
    8. 'arry' → logprob: -14.875014305114746
    9. 'arrays' → logprob: -16.000015258789062
    10. '
' → logprob: -16.125015258789062

Token 742: ' gain' (ID: 11621)
  Prédit: '_gain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gain' → logprob: -0.5733118653297424
    2. 'gain' → logprob: -1.4483118057250977
    3. 'sum' → logprob: -2.3233118057250977
    4. '_sum' → logprob: -2.5733118057250977
    5. ' gain' → logprob: -4.073311805725098
    6. ' =' → logprob: -5.573311805725098
    7. ' sum' → logprob: -6.698311805725098
    8. 'diff' → logprob: -6.948311805725098
    9. '_' → logprob: -6.948311805725098
    10. '_length' → logprob: -7.073311805725098

Token 743: ' gives' (ID: 8967)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11445209383964539
    2. '=' → logprob: -2.3644521236419678
    3. '>' → logprob: -4.614451885223389
    4. ' >' → logprob: -6.239451885223389
    5. ' +=' → logprob: -7.364451885223389
    6. ')' → logprob: -7.989451885223389
    7. ' ' → logprob: -8.489452362060547
    8. 'diff' → logprob: -9.114452362060547
    9. ',' → logprob: -9.239452362060547
    10. '+' → logprob: -9.239452362060547

Token 744: ' max' (ID: 2999)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.6467125415802002
    2. 'the' → logprob: -1.8967125415802002
    3. ' an' → logprob: -2.5217125415802
    4. ' at' → logprob: -2.5217125415802
    5. 'a' → logprob: -2.6467125415802
    6. ' a' → logprob: -2.8967125415802
    7. 'max' → logprob: -2.8967125415802
    8. ' us' → logprob: -2.8967125415802
    9. 'an' → logprob: -3.1467125415802
    10. ' max' → logprob: -3.3967125415802

Token 745: ' increase' (ID: 7064)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40375182032585144
    2. ' possible' → logprob: -2.403751850128174
    3. ' length' → logprob: -2.778751850128174
    4. '(max' → logprob: -2.778751850128174
    5. 'possible' → logprob: -4.028751850128174
    6. '_possible' → logprob: -4.153751850128174
    7. '_' → logprob: -4.403751850128174
    8. '_length' → logprob: -4.653751850128174
    9. '(
' → logprob: -5.028751850128174
    10. 'res' → logprob: -5.153751850128174

Token 746: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1066898107528687
    2. 'for' → logprob: -1.9816898107528687
    3. '1' → logprob: -2.106689929962158
    4. ' +=' → logprob: -2.731689929962158
    5. '=' → logprob: -3.231689929962158
    6. ',' → logprob: -3.231689929962158
    7. ':' → logprob: -3.231689929962158
    8. ' for' → logprob: -3.356689929962158
    9. ')' → logprob: -3.856689929962158
    10. '#' → logprob: -3.856689929962158

Token 747: ' matches' (ID: 15248)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.510603129863739
    2. 'max' → logprob: -1.2606031894683838
    3. 'con' → logprob: -2.885603189468384
    4. 'matches' → logprob: -3.385603189468384
    5. 'long' → logprob: -4.885602951049805
    6. 'result' → logprob: -5.135602951049805
    7. 'run' → logprob: -5.510602951049805
    8. '1' → logprob: -6.135602951049805
    9. 'length' → logprob: -6.135602951049805
    10. 'match' → logprob: -7.260602951049805

Token 748: ' sum' (ID: 4215)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.2306293100118637
    2. 'gain' → logprob: -2.3556292057037354
    3. '
' → logprob: -2.4806292057037354
    4. 'max' → logprob: -4.2306294441223145
    5. 'for' → logprob: -5.8556294441223145
    6. 'flip' → logprob: -6.3556294441223145
    7. '#' → logprob: -6.4806294441223145
    8. '+
' → logprob: -7.1056294441223145
    9. 'res' → logprob: -7.1056294441223145
    10. '

' → logprob: -7.2306294441223145

Token 749: ',' (ID: 11)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4146908223628998
    2. '
' → logprob: -1.5396908521652222
    3. 'gain' → logprob: -2.6646907329559326
    4. 'max' → logprob: -3.1646907329559326
    5. '

' → logprob: -5.664690971374512
    6. '#' → logprob: -6.164690971374512
    7. 'for' → logprob: -6.789690971374512
    8. 'increase' → logprob: -6.914690971374512
    9. 'res' → logprob: -7.039690971374512
    10. '+' → logprob: -7.164690971374512

Token 750: ' not' (ID: 625)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8247674107551575
    2. 'if' → logprob: -1.4497673511505127
    3. ' max' → logprob: -2.4497673511505127
    4. 'max' → logprob: -2.6997673511505127
    5. '#' → logprob: -3.0747673511505127
    6. ' res' → logprob: -4.324767589569092
    7. ' but' → logprob: -4.449767589569092
    8. 'for' → logprob: -4.574767589569092
    9. 'res' → logprob: -4.574767589569092
    10. ')' → logprob: -4.699767589569092

Token 751: ' directly' (ID: 8516)
  Prédit: 'necessarily'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'necessarily' → logprob: -0.16596560180187225
    2. 'max' → logprob: -2.0409655570983887
    3. 'direct' → logprob: -4.540965557098389
    4. 'necessary' → logprob: -5.540965557098389
    5. 'in' → logprob: -5.790965557098389
    6. 'length' → logprob: -6.415965557098389
    7. 'maximum' → logprob: -6.790965557098389
    8. ' necessarily' → logprob: -7.165965557098389
    9. 'long' → logprob: -7.540965557098389
    10. 'exact' → logprob: -8.415966033935547

Token 752: ' max' (ID: 2999)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.35697048902511597
    2. 'max' → logprob: -2.3569705486297607
    3. '#' → logprob: -2.7319705486297607
    4. 'length' → logprob: -3.1069705486297607
    5. ' in' → logprob: -3.3569705486297607
    6. 'the' → logprob: -4.481970310211182
    7. 'res' → logprob: -4.606970310211182
    8. ':' → logprob: -5.231970310211182
    9. 'result' → logprob: -5.231970310211182
    10. '1' → logprob: -5.481970310211182

Token 753: ' run' (ID: 2461)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.3406703472137451
    2. '_len' → logprob: -1.7156703472137451
    3. '_alt' → logprob: -3.340670347213745
    4. '_con' → logprob: -3.965670347213745
    5. '```' → logprob: -4.090670585632324
    6. '_' → logprob: -4.215670585632324
    7. '_run' → logprob: -4.840670585632324
    8. ' length' → logprob: -4.965670585632324
    9. 'length' → logprob: -6.090670585632324
    10. ' _' → logprob: -6.340670585632324

Token 754: ' length' (ID: 5517)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2879338264465332
    2. '
' → logprob: -1.4129338264465332
    3. 'diff' → logprob: -2.162933826446533
    4. 'increase' → logprob: -2.412933826446533
    5. 'gain' → logprob: -2.537933826446533
    6. ' =' → logprob: -3.037933826446533
    7. '#' → logprob: -3.412933826446533
    8. 'for' → logprob: -3.412933826446533
    9. 's' → logprob: -4.287933826446533
    10. 'alt' → logprob: -4.537933826446533

Token 755: '.
' (ID: 558)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.22742265462875366
    2. '#' → logprob: -2.1024227142333984
    3. 'for' → logprob: -3.7274227142333984
    4. 'increase' → logprob: -3.9774227142333984
    5. 'diff' → logprob: -4.352422714233398
    6. 'gain' → logprob: -4.727422714233398
    7. 'res' → logprob: -5.727422714233398
    8. 'flip' → logprob: -6.352422714233398
    9. '
' → logprob: -6.352422714233398
    10. 'print' → logprob: -6.477422714233398

Token 756: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0713865756988525
    2. 'diff' → logprob: -1.4463865756988525
    3. 'for' → logprob: -2.0713865756988525
    4. 'gain' → logprob: -2.3213865756988525
    5. '#' → logprob: -2.4463865756988525
    6. 'flip' → logprob: -3.1963865756988525
    7. '
' → logprob: -4.196386337280273
    8. 'alt' → logprob: -4.321386337280273
    9. 'increase' → logprob: -4.946386337280273
    10. 'matches' → logprob: -5.571386337280273

Token 757: ' So' (ID: 2632)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1873133182525635
    2. 'gain' → logprob: -1.1873133182525635
    3. 'diff' → logprob: -2.3123133182525635
    4. 'for' → logprob: -2.5623133182525635
    5. 'increase' → logprob: -2.5623133182525635
    6. '#' → logprob: -3.0623133182525635
    7. 'flip' → logprob: -3.3123133182525635
    8. 'increment' → logprob: -4.312313079833984
    9. 'inc' → logprob: -4.562313079833984
    10. 'res' → logprob: -5.062313079833984

Token 758: ' another' (ID: 3613)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37378546595573425
    2. '#' → logprob: -1.8737854957580566
    3. ' for' → logprob: -2.1237854957580566
    4. 'res' → logprob: -4.248785495758057
    5. '
' → logprob: -4.498785495758057
    6. 'max' → logprob: -5.373785495758057
    7. 'result' → logprob: -5.998785495758057
    8. 'print' → logprob: -6.373785495758057
    9. ' res' → logprob: -6.623785495758057
    10. ' we' → logprob: -7.498785495758057

Token 759: ' approach' (ID: 7139)
  Prédit: 'appro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appro' → logprob: -0.6779280304908752
    2. ' approach' → logprob: -2.0529279708862305
    3. 'line' → logprob: -2.4279279708862305
    4. 'def' → logprob: -2.5529279708862305
    5. 'token' → logprob: -2.6779279708862305
    6. '#' → logprob: -3.6779279708862305
    7. '
' → logprob: -4.3029279708862305
    8. ':' → logprob: -4.3029279708862305
    9. 'import' → logprob: -4.8029279708862305
    10. '_tokens' → logprob: -4.9279279708862305

Token 760: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6573284268379211
    2. '#' → logprob: -0.9073284268379211
    3. ':
' → logprob: -4.2823286056518555
    4. '.' → logprob: -4.5323286056518555
    5. 'def' → logprob: -4.6573286056518555
    6. ' is' → logprob: -4.6573286056518555
    7. 'matches' → logprob: -5.0323286056518555
    8. 'max' → logprob: -5.2823286056518555
    9. '<|end|>' → logprob: -5.7823286056518555
    10. ',' → logprob: -5.7823286056518555

Token 761: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.042490459978580475
    2. 'def' → logprob: -3.9174904823303223
    3. 'from' → logprob: -4.042490482330322
    4. 'run' → logprob: -6.417490482330322
    5. 'max' → logprob: -7.792490482330322
    6. 'for' → logprob: -8.167490005493164
    7. 'runs' → logprob: -8.167490005493164
    8. 'import' → logprob: -8.292490005493164
    9. 'change' → logprob: -8.667490005493164
    10. 'diff' → logprob: -9.167490005493164

Token 762: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19443507492542267
    2. 'def' → logprob: -2.3194351196289062
    3. 'from' → logprob: -3.0694351196289062
    4. 'run' → logprob: -4.194435119628906
    5. 'dp' → logprob: -6.319435119628906
    6. 'flip' → logprob: -6.319435119628906
    7. 'prefix' → logprob: -6.444435119628906
    8. 'left' → logprob: -6.569435119628906
    9. 'change' → logprob: -6.819435119628906
    10. 'import' → logprob: -6.819435119628906

Token 763: ' use' (ID: 1199)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11146306991577148
    2. '=' → logprob: -2.6114630699157715
    3. '#' → logprob: -4.1114630699157715
    4. 'import' → logprob: -5.3614630699157715
    5. 'def' → logprob: -5.8614630699157715
    6. ' can' → logprob: -6.1114630699157715
    7. ' continue' → logprob: -6.8614630699157715
    8. ' need' → logprob: -7.1114630699157715
    9. 'continue' → logprob: -7.1114630699157715
    10. '=[]' → logprob: -7.3614630699157715

Token 764: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4132142663002014
    2. 'from' → logprob: -1.4132142066955566
    3. 'matches' → logprob: -2.9132142066955566
    4. '#' → logprob: -4.038214206695557
    5. 'for' → logprob: -4.413214206695557
    6. 'import' → logprob: -5.663214206695557
    7. 'two' → logprob: -6.663214206695557
    8. 'S' → logprob: -6.913214206695557
    9. 'diff' → logprob: -7.038214206695557
    10. ' def' → logprob: -7.163214206695557

Token 765: ' method' (ID: 2595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3924004137516022
    2. 'two' → logprob: -1.5174003839492798
    3. 'sl' → logprob: -3.2674005031585693
    4. 'dp' → logprob: -3.6424005031585693
    5. 'segment' → logprob: -4.14240026473999
    6. 'run' → logprob: -5.39240026473999
    7. 'window' → logprob: -5.39240026473999
    8. 'double' → logprob: -6.26740026473999
    9. 'for' → logprob: -6.39240026473999
    10. 'different' → logprob: -6.39240026473999

Token 766: ' inspired' (ID: 18958)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9028711318969727
    2. '#' → logprob: -1.5278711318969727
    3. ' =' → logprob: -1.9028711318969727
    4. ':' → logprob: -2.4028711318969727
    5. '=' → logprob: -2.9028711318969727
    6. 'from' → logprob: -3.4028711318969727
    7. ' to' → logprob: -4.152871131896973
    8. ':
' → logprob: -4.527871131896973
    9. 'import' → logprob: -5.277871131896973
    10. 'for' → logprob: -5.527871131896973

Token 767: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.7805313467979431
    2. 'by' → logprob: -1.030531406402588
    3. '#' → logprob: -1.780531406402588
    4. 'def' → logprob: -4.405531406402588
    5. 'from' → logprob: -5.905531406402588
    6. '   ' → logprob: -7.405531406402588
    7. 'import' → logprob: -8.03053092956543
    8. '```' → logprob: -8.40553092956543
    9. ' #' → logprob: -9.03053092956543
    10. ' from' → logprob: -9.90553092956543

Token 768: ' editorial' (ID: 37857)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.13098526000976562
    2. 'the' → logprob: -3.0059852600097656
    3. 'sl' → logprob: -4.130985260009766
    4. 'man' → logprob: -4.255985260009766
    5. 'binary' → logprob: -4.880985260009766
    6. '"' → logprob: -5.005985260009766
    7. 'run' → logprob: -5.505985260009766
    8. 'dynamic' → logprob: -5.630985260009766
    9. '#' → logprob: -5.755985260009766
    10. 'Kad' → logprob: -6.255985260009766

Token 769: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45122241973876953
    2. ':
' → logprob: -1.7012224197387695
    3. 'def' → logprob: -2.0762224197387695
    4. '#' → logprob: -4.2012224197387695
    5. 'for' → logprob: -4.2012224197387695
    6. ' for' → logprob: -5.3262224197387695
    7. '
' → logprob: -6.0762224197387695
    8. ':

' → logprob: -6.2012224197387695
    9. '.' → logprob: -6.3262224197387695
    10. ' to' → logprob: -6.5762224197387695

Token 770: ' similar' (ID: 6771)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'At' → logprob: -0.22542859613895416
    2. 'the' → logprob: -2.475428581237793
    3. '#' → logprob: -3.350428581237793
    4. 'at' → logprob: -3.725428581237793
    5. 'Code' → logprob: -3.975428581237793
    6. 'ABC' → logprob: -4.600428581237793
    7. 'Longest' → logprob: -4.850428581237793
    8. 'code' → logprob: -5.225428581237793
    9. 'abc' → logprob: -5.350428581237793
    10. 'long' → logprob: -6.475428581237793

Token 771: ' problem' (ID: 4792)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.36048176884651184
    2. '#' → logprob: -1.9854817390441895
    3. 'problem' → logprob: -2.4854817390441895
    4. ' problems' → logprob: -2.8604817390441895
    5. ' problem' → logprob: -4.3604817390441895
    6. ' #' → logprob: -5.6104817390441895
    7. 'string' → logprob: -6.4854817390441895
    8. ' longest' → logprob: -7.1104817390441895
    9. '```' → logprob: -7.3604817390441895
    10. '_pro' → logprob: -7.4854817390441895

Token 772: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6964244246482849
    2. '#' → logprob: -1.5714244842529297
    3. 'dp' → logprob: -3.1964244842529297
    4. 'diff' → logprob: -3.1964244842529297
    5. '
' → logprob: -3.3214244842529297
    6. 'for' → logprob: -3.4464244842529297
    7. 'run' → logprob: -3.9464244842529297
    8. 'length' → logprob: -3.9464244842529297
    9. 'prev' → logprob: -4.44642448425293
    10. 'from' → logprob: -4.44642448425293

Token 773: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4743405282497406
    2. 'dp' → logprob: -1.724340558052063
    3. 'flip' → logprob: -3.3493404388427734
    4. '#' → logprob: -3.4743404388427734
    5. 'run' → logprob: -3.5993404388427734
    6. 'from' → logprob: -3.5993404388427734
    7. 'length' → logprob: -4.349340438842773
    8. 'for' → logprob: -4.474340438842773
    9. 'diff' → logprob: -4.474340438842773
    10. 'prefix' → logprob: -4.724340438842773

Token 774: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0314555168151855
    2. '#' → logprob: -1.9064555168151855
    3. 'run' → logprob: -2.2814555168151855
    4. 'dp' → logprob: -2.4064555168151855
    5. 'from' → logprob: -2.5314555168151855
    6. 'runs' → logprob: -3.2814555168151855
    7. 'diff' → logprob: -3.5314555168151855
    8. 'prev' → logprob: -3.6564555168151855
    9. 'prefix' → logprob: -3.6564555168151855
    10. 'length' → logprob: -4.1564555168151855

Token 775: ' create' (ID: 2501)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5783800482749939
    2. ' can' → logprob: -2.4533801078796387
    3. 'continue' → logprob: -2.4533801078796387
    4. '#' → logprob: -2.7033801078796387
    5. 'can' → logprob: -3.3283801078796387
    6. ''ll' → logprob: -3.4533801078796387
    7. 'import' → logprob: -3.9533801078796387
    8. ' continue' → logprob: -3.9533801078796387
    9. ' will' → logprob: -4.203380107879639
    10. ' =' → logprob: -4.578380107879639

Token 776: ' for' (ID: 395)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3151427507400513
    2. 'left' → logprob: -2.1901426315307617
    3. 'dp' → logprob: -2.4401426315307617
    4. 'def' → logprob: -2.5651426315307617
    5. 'prefix' → logprob: -2.5651426315307617
    6. 'change' → logprob: -2.9401426315307617
    7. 'flip' → logprob: -2.9401426315307617
    8. 'diff' → logprob: -3.3151426315307617
    9. 'two' → logprob: -3.4401426315307617
    10. 'length' → logprob: -3.6901426315307617

Token 777: ' matches' (ID: 15248)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6197657585144043
    2. ' i' → logprob: -1.3697657585144043
    3. 'each' → logprob: -3.3697657585144043
    4. 'def' → logprob: -3.8697657585144043
    5. ' each' → logprob: -3.9947657585144043
    6. ' run' → logprob: -3.9947657585144043
    7. 'length' → logprob: -3.9947657585144043
    8. ' def' → logprob: -4.369765758514404
    9. 'matches' → logprob: -4.369765758514404
    10. ' length' → logprob: -4.369765758514404

Token 778: ' array' (ID: 2644)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2437698245048523
    2. '_len' → logprob: -2.868769884109497
    3. '_lengths' → logprob: -2.993769884109497
    4. '_length' → logprob: -3.118769884109497
    5. '=[' → logprob: -4.743769645690918
    6. 'length' → logprob: -4.868769645690918
    7. ' a' → logprob: -5.243769645690918
    8. '=' → logprob: -5.243769645690918
    9. 'len' → logprob: -5.493769645690918
    10. ' lengths' → logprob: -5.993769645690918

Token 779: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4137574434280396
    2. ' a' → logprob: -1.5387574434280396
    3. 'runs' → logprob: -2.03875732421875
    4. ' runs' → logprob: -2.53875732421875
    5. ' =' → logprob: -3.16375732421875
    6. ' run' → logprob: -3.28875732421875
    7. ' the' → logprob: -3.66375732421875
    8. 'length' → logprob: -3.66375732421875
    9. ',' → logprob: -3.66375732421875
    10. '#' → logprob: -4.03875732421875

Token 780: ' binary' (ID: 15600)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22194619476795197
    2. 'run' → logprob: -2.3469462394714355
    3. 'def' → logprob: -2.8469462394714355
    4. 'diff' → logprob: -4.5969462394714355
    5. 'runs' → logprob: -5.0969462394714355
    6. 'length' → logprob: -5.5969462394714355
    7. 'new' → logprob: -5.7219462394714355
    8. ' dp' → logprob: -5.8469462394714355
    9. 'list' → logprob: -5.9719462394714355
    10. 'n' → logprob: -6.0969462394714355

Token 781: ' array' (ID: 2644)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.2932288348674774
    2. 'array' → logprob: -1.6682288646697998
    3. 'search' → logprob: -3.2932288646698
    4. 'run' → logprob: -5.043228626251221
    5. ' array' → logprob: -5.418228626251221
    6. 'vector' → logprob: -6.293228626251221
    7. 'dp' → logprob: -6.418228626251221
    8. 'indexed' → logprob: -6.418228626251221
    9. ' string' → logprob: -6.543228626251221
    10. 'def' → logprob: -6.543228626251221

Token 782: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0261869430541992
    2. ' run' → logprob: -1.6511869430541992
    3. ' of' → logprob: -1.7761869430541992
    4. ',' → logprob: -2.651186943054199
    5. 'run' → logprob: -3.526186943054199
    6. ' where' → logprob: -3.651186943054199
    7. 'of' → logprob: -3.776186943054199
    8. ' runs' → logprob: -4.026186943054199
    9. ' is' → logprob: -4.401186943054199
    10. 'runs' → logprob: -4.526186943054199

Token 783: ' longest' (ID: 37511)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -1.7289055585861206
    2. 'runs' → logprob: -1.7289055585861206
    3. 'flip' → logprob: -2.47890567779541
    4. '   ' → logprob: -2.47890567779541
    5. 'is' → logprob: -2.47890567779541
    6. 'diff' → logprob: -2.60390567779541
    7. 'max' → logprob: -3.47890567779541
    8. ' run' → logprob: -3.72890567779541
    9. 'dp' → logprob: -3.85390567779541
    10. 'prefix' → logprob: -3.97890567779541

Token 784: ' runs' (ID: 13719)
  Prédit: '_run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_run' → logprob: -0.04527683183550835
    2. '_' → logprob: -3.2952768802642822
    3. 'run' → logprob: -5.920276641845703
    4. '_runs' → logprob: -6.295276641845703
    5. '```' → logprob: -7.045276641845703
    6. '_len' → logprob: -7.420276641845703
    7. '_st' → logprob: -8.295276641845703
    8. '1' → logprob: -8.295276641845703
    9. '_count' → logprob: -8.670276641845703
    10. '_one' → logprob: -8.795276641845703

Token 785: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07427240908145905
    2. ' =' → logprob: -2.824272394180298
    3. '=' → logprob: -5.824272632598877
    4. '_of' → logprob: -6.074272632598877
    5. 's' → logprob: -6.199272632598877
    6. ',' → logprob: -6.949272632598877
    7. '1' → logprob: -7.449272632598877
    8. '_matches' → logprob: -7.574272632598877
    9. '_s' → logprob: -8.074272155761719
    10. '_length' → logprob: -8.199272155761719

Token 786: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002943232422694564
    2. 'ones' → logprob: -6.62794303894043
    3. 'matches' → logprob: -7.00294303894043
    4. 'con' → logprob: -7.37794303894043
    5. '0' → logprob: -10.25294303894043
    6. ' ones' → logprob: -11.12794303894043
    7. '```' → logprob: -11.50294303894043
    8. ' ' → logprob: -11.62794303894043
    9. 'zeros' → logprob: -12.75294303894043
    10. 'runs' → logprob: -13.12794303894043

Token 787: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002063780091702938
    2. 'con' → logprob: -7.002063751220703
    3. 'ones' → logprob: -7.002063751220703
    4. 'matches' → logprob: -8.502063751220703
    5. '0' → logprob: -10.502063751220703
    6. ' ones' → logprob: -12.502063751220703
    7. '```' → logprob: -13.377063751220703
    8. ' ' → logprob: -13.877063751220703
    9. 'continuous' → logprob: -14.127063751220703
    10. 'zeros' → logprob: -14.127063751220703

Token 788: 's' (ID: 82)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.705284833908081
    2. 's' → logprob: -1.580284833908081
    3. ' =' → logprob: -1.705284833908081
    4. 'def' → logprob: -3.830284833908081
    5. '=' → logprob: -3.955284833908081
    6. '_lengths' → logprob: -4.20528507232666
    7. '_s' → logprob: -4.45528507232666
    8. '_runs' → logprob: -4.83028507232666
    9. ',' → logprob: -4.95528507232666
    10. ']' → logprob: -5.83028507232666

Token 789: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6446342468261719
    2. 'runs' → logprob: -2.144634246826172
    3. 'run' → logprob: -2.894634246826172
    4. '#' → logprob: -2.894634246826172
    5. 'max' → logprob: -3.269634246826172
    6. 'length' → logprob: -3.519634246826172
    7. '
' → logprob: -3.769634246826172
    8. ' =' → logprob: -4.019634246826172
    9. 'matches' → logprob: -4.019634246826172
    10. 'res' → logprob: -4.019634246826172

Token 790: ' we' (ID: 581)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.8997853398323059
    2. ' run' → logprob: -1.3997852802276611
    3. 'runs' → logprob: -1.7747852802276611
    4. '#' → logprob: -3.524785280227661
    5. ' runs' → logprob: -3.649785280227661
    6. 'dp' → logprob: -3.774785280227661
    7. 'length' → logprob: -4.27478551864624
    8. 'count' → logprob: -4.27478551864624
    9. '
' → logprob: -4.39978551864624
    10. 'counts' → logprob: -5.14978551864624

Token 791: ' consider' (ID: 3331)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.080377221107483
    2. 'count' → logprob: -1.955377221107483
    3. 'continue' → logprob: -2.0803771018981934
    4. 'import' → logprob: -2.4553771018981934
    5. '#' → logprob: -3.0803771018981934
    6. 'can' → logprob: -3.4553771018981934
    7. 'calculate' → logprob: -3.4553771018981934
    8. 'find' → logprob: -3.7053771018981934
    9. ' can' → logprob: -3.7053771018981934
    10. 'try' → logprob: -4.080377101898193

Token 792: ' that' (ID: 484)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5963910222053528
    2. 'for' → logprob: -3.221390962600708
    3. 'flip' → logprob: -3.221390962600708
    4. 'break' → logprob: -3.346390962600708
    5. 'prev' → logprob: -3.346390962600708
    6. 'max' → logprob: -3.721390962600708
    7. 'length' → logprob: -3.721390962600708
    8. 'fl' → logprob: -3.846390962600708
    9. 'count' → logprob: -3.846390962600708
    10. 'change' → logprob: -3.846390962600708

Token 793: ' flipping' (ID: 110780)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9459558725357056
    2. 'length' → logprob: -2.320955753326416
    3. '#' → logprob: -2.570955753326416
    4. 'prev' → logprob: -2.695955753326416
    5. 'count' → logprob: -2.695955753326416
    6. 'run' → logprob: -2.695955753326416
    7. 'runs' → logprob: -3.195955753326416
    8. '   ' → logprob: -3.945955753326416
    9. 'max' → logprob: -4.195955753326416
    10. 'n' → logprob: -4.195955753326416

Token 794: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24960513412952423
    2. ' a' → logprob: -1.8746051788330078
    3. 'the' → logprob: -4.124605178833008
    4. 'positions' → logprob: -4.499605178833008
    5. ' one' → logprob: -4.874605178833008
    6. 's' → logprob: -4.999605178833008
    7. ' the' → logprob: -5.124605178833008
    8. 'one' → logprob: -6.249605178833008
    9. ' positions' → logprob: -6.249605178833008
    10. 'sub' → logprob: -6.749605178833008

Token 795: ' sub' (ID: 1543)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13882845640182495
    2. 'sub' → logprob: -2.6388285160064697
    3. 'segment' → logprob: -3.5138285160064697
    4. '1' → logprob: -4.888828277587891
    5. 'position' → logprob: -5.138828277587891
    6. 'run' → logprob: -5.263828277587891
    7. 'zero' → logprob: -5.513828277587891
    8. '```' → logprob: -6.388828277587891
    9. 'single' → logprob: -6.888828277587891
    10. 'matches' → logprob: -7.138828277587891

Token 796: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.00014859484508633614
    2. '[' → logprob: -9.62514877319336
    3. 'arr' → logprob: -10.87514877319336
    4. '#' → logprob: -10.87514877319336
    5. '[i' → logprob: -11.50014877319336
    6. ')' → logprob: -12.25014877319336
    7. 'segment' → logprob: -12.50014877319336
    8. '_array' → logprob: -12.50014877319336
    9. '[]' → logprob: -12.50014877319336
    10. ' array' → logprob: -12.87514877319336

Token 797: ' revers' (ID: 29518)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5847491025924683
    2. ' will' → logprob: -1.8347491025924683
    3. ' can' → logprob: -3.584749221801758
    4. 'def' → logprob: -3.584749221801758
    5. 'from' → logprob: -3.709749221801758
    6. 's' → logprob: -3.709749221801758
    7. ',' → logprob: -4.084749221801758
    8. '   ' → logprob: -4.209749221801758
    9. 'will' → logprob: -4.459749221801758
    10. ' of' → logprob: -4.584749221801758

Token 798: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -7.314625690924004e-05
    2. 'ts' → logprob: -9.875073432922363
    3. 'ing' → logprob: -11.000073432922363
    4. 'e' → logprob: -13.250073432922363
    5. 's' → logprob: -13.625073432922363
    6. 'ions' → logprob: -14.000073432922363
    7. 'ion' → logprob: -15.250073432922363
    8. 't' → logprob: -15.750073432922363
    9. 'ses' → logprob: -16.000072479248047
    10. 'ects' → logprob: -16.125072479248047

Token 799: ' bits' (ID: 18189)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7014397382736206
    2. ' the' → logprob: -1.3264397382736206
    3. '0' → logprob: -2.57643985748291
    4. 'matches' → logprob: -3.20143985748291
    5. 'a' → logprob: -3.82643985748291
    6. 'runs' → logprob: -4.20143985748291
    7. 'some' → logprob: -4.32643985748291
    8. ' some' → logprob: -4.32643985748291
    9. ' ' → logprob: -4.32643985748291
    10. ' matches' → logprob: -4.57643985748291

Token 800: ' there' (ID: 1354)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8552879691123962
    2. ',' → logprob: -1.355288028717041
    3. 'in' → logprob: -1.855288028717041
    4. '.' → logprob: -3.480288028717041
    5. '#' → logprob: -3.730288028717041
    6. 's' → logprob: -3.855288028717041
    7. '[i' → logprob: -3.980288028717041
    8. 'from' → logprob: -4.605288028717041
    9. ' inside' → logprob: -4.855288028717041
    10. ' at' → logprob: -4.855288028717041

Token 801: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0077437162399292
    2. '   ' → logprob: -1.7577437162399292
    3. '#' → logprob: -1.8827437162399292
    4. ',' → logprob: -2.3827438354492188
    5. '
' → logprob: -2.5077438354492188
    6. 'from' → logprob: -3.5077438354492188
    7. ',
' → logprob: -4.007743835449219
    8. 's' → logprob: -4.007743835449219
    9. 'matches' → logprob: -4.882743835449219
    10. ')' → logprob: -4.882743835449219

Token 802: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6774420738220215
    2. '#' → logprob: -2.1774420738220215
    3. 'runs' → logprob: -2.1774420738220215
    4. 'from' → logprob: -2.5524420738220215
    5. 'run' → logprob: -3.1774420738220215
    6. 'length' → logprob: -3.3024420738220215
    7. '
' → logprob: -3.8024420738220215
    8. 'max' → logprob: -4.1774420738220215
    9. 'matches' → logprob: -4.3024420738220215
    10. 'import' → logprob: -4.5524420738220215

Token 803: ' For' (ID: 2214)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -1.4102287292480469
    2. 'def' → logprob: -1.7852287292480469
    3. 'from' → logprob: -2.535228729248047
    4. 'runs' → logprob: -2.660228729248047
    5. '#' → logprob: -2.785228729248047
    6. 'count' → logprob: -2.785228729248047
    7. 'max' → logprob: -2.910228729248047
    8. 'flip' → logprob: -3.035228729248047
    9. 'prefix' → logprob: -3.160228729248047
    10. 'length' → logprob: -3.410228729248047

Token 804: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021216928958892822
    2. ' i' → logprob: -4.646216869354248
    3. 'def' → logprob: -5.896216869354248
    4. 'matches' → logprob: -6.521216869354248
    5. '_' → logprob: -6.771216869354248
    6. 'length' → logprob: -6.896216869354248
    7. 'm' → logprob: -7.146216869354248
    8. 'run' → logprob: -7.396216869354248
    9. 'each' → logprob: -7.646216869354248
    10. 'l' → logprob: -8.271217346191406

Token 805: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.30379897356033325
    2. 'run' → logprob: -1.9287989139556885
    3. 'position' → logprob: -3.5537989139556885
    4. 'pos' → logprob: -3.8037989139556885
    5. ' run' → logprob: -4.178799152374268
    6. 'def' → logprob: -4.678799152374268
    7. ' i' → logprob: -4.803799152374268
    8. 'segment' → logprob: -5.053799152374268
    9. 'index' → logprob: -5.178799152374268
    10. 'block' → logprob: -5.928799152374268

Token 806: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3694821000099182
    2. ' in' → logprob: -1.7444820404052734
    3. ' =' → logprob: -2.8694820404052734
    4. ' i' → logprob: -3.8694820404052734
    5. '=' → logprob: -4.119482040405273
    6. ' ,' → logprob: -4.494482040405273
    7. ':' → logprob: -4.869482040405273
    8. '   ' → logprob: -4.869482040405273
    9. 'in' → logprob: -5.619482040405273
    10. ' ' → logprob: -6.869482040405273

Token 807: ' compute' (ID: 23864)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1075825691223145
    2. ' i' → logprob: -1.4825825691223145
    3. ' run' → logprob: -3.1075825691223145
    4. ' prev' → logprob: -3.2325825691223145
    5. 'length' → logprob: -3.2325825691223145
    6. ' length' → logprob: -3.3575825691223145
    7. 'if' → logprob: -3.3575825691223145
    8. '   ' → logprob: -3.6075825691223145
    9. ' if' → logprob: -3.6075825691223145
    10. 'count' → logprob: -3.7325825691223145

Token 808: ' longest' (ID: 37511)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0827414020895958
    2. 'prev' → logprob: -3.8327414989471436
    3. 'max' → logprob: -4.0827412605285645
    4. 'prefix' → logprob: -4.0827412605285645
    5. 'l' → logprob: -5.2077412605285645
    6. ' left' → logprob: -5.7077412605285645
    7. 'zero' → logprob: -5.7077412605285645
    8. 'length' → logprob: -6.4577412605285645
    9. 'right' → logprob: -6.5827412605285645
    10. 'count' → logprob: -6.7077412605285645

Token 809: ' consecutive' (ID: 40840)
  Prédit: '_run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_run' → logprob: -0.12397231161594391
    2. '_' → logprob: -2.8739724159240723
    3. '_right' → logprob: -3.2489724159240723
    4. '_left' → logprob: -4.248972415924072
    5. '_one' → logprob: -6.873972415924072
    6. '_len' → logprob: -6.873972415924072
    7. '```' → logprob: -7.248972415924072
    8. 'run' → logprob: -7.373972415924072
    9. '_up' → logprob: -7.373972415924072
    10. '_start' → logprob: -7.498972415924072

Token 810: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12882541120052338
    2. '_run' → logprob: -2.5038254261016846
    3. '_right' → logprob: -4.1288251876831055
    4. '```' → logprob: -5.1288251876831055
    5. '_runs' → logprob: -5.5038251876831055
    6. '1' → logprob: -5.7538251876831055
    7. '_one' → logprob: -5.7538251876831055
    8. 'run' → logprob: -6.5038251876831055
    9. '_left' → logprob: -6.6288251876831055
    10. '_lengths' → logprob: -7.1288251876831055

Token 811: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6210468411445618
    2. '1' → logprob: -1.746046781539917
    3. 'run' → logprob: -2.121046781539917
    4. '_run' → logprob: -2.871046781539917
    5. 'ones' → logprob: -3.121046781539917
    6. '```' → logprob: -3.746046781539917
    7. '_one' → logprob: -3.996046781539917
    8. 'runs' → logprob: -5.496047019958496
    9. 'one' → logprob: -5.746047019958496
    10. '_runs' → logprob: -5.996047019958496

Token 812: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06073881685733795
    2. '_lengths' → logprob: -4.310739040374756
    3. '_len' → logprob: -4.435739040374756
    4. '_run' → logprob: -4.685739040374756
    5. '_runs' → logprob: -5.185739040374756
    6. '_' → logprob: -5.185739040374756
    7. '_length' → logprob: -5.560739040374756
    8. '_count' → logprob: -6.060739040374756
    9. '_counts' → logprob: -6.310739040374756
    10. '_s' → logprob: -6.435739040374756

Token 813: ' prefix' (ID: 18633)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0037181377410889
    2. 'from' → logprob: -1.8787181377410889
    3. '
' → logprob: -2.503718137741089
    4. '_lengths' → logprob: -2.878718137741089
    5. '#' → logprob: -3.003718137741089
    6. 'def' → logprob: -3.003718137741089
    7. '_run' → logprob: -3.503718137741089
    8. ',' → logprob: -3.503718137741089
    9. '_count' → logprob: -3.503718137741089
    10. 's' → logprob: -4.003718376159668

Token 814: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4773170053958893
    2. '_lengths' → logprob: -2.2273170948028564
    3. 's' → logprob: -2.4773170948028564
    4. '_len' → logprob: -2.8523170948028564
    5. '_counts' → logprob: -3.2273170948028564
    6. '_count' → logprob: -3.3523170948028564
    7. '_length' → logprob: -4.102316856384277
    8. '_s' → logprob: -4.477316856384277
    9. ' =' → logprob: -5.227316856384277
    10. '_prefix' → logprob: -5.227316856384277

Token 815: ' suffix' (ID: 43412)
  Prédit: 'suffix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suffix' → logprob: -0.0003420183784328401
    2. ' suffix' → logprob: -8.00034236907959
    3. '_suffix' → logprob: -12.87534236907959
    4. 'long' → logprob: -13.12534236907959
    5. 'uffix' → logprob: -13.75034236907959
    6. 's' → logprob: -15.12534236907959
    7. 'prefix' → logprob: -15.87534236907959
    8. 'for' → logprob: -16.000341415405273
    9. ' postfix' → logprob: -16.000341415405273
    10. 'Suffix' → logprob: -16.750341415405273

Token 816: '.

' (ID: 364)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5953852534294128
    2. '_prefix' → logprob: -1.9703853130340576
    3. 's' → logprob: -2.7203853130340576
    4. 'matches' → logprob: -2.8453853130340576
    5. 'prefix' → logprob: -2.9703853130340576
    6. '_matches' → logprob: -3.0953853130340576
    7. ' matches' → logprob: -3.9703853130340576
    8. '_
' → logprob: -4.2203850746154785
    9. '#' → logprob: -4.7203850746154785
    10. ' prefix' → logprob: -4.8453850746154785

Token 817: 'def' (ID: 1314)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.034649960696697235
    2. 'pre' → logprob: -3.7846498489379883
    3. 'pref' → logprob: -4.909649848937988
    4. 'matches' → logprob: -6.909649848937988
    5. 'l' → logprob: -7.409649848937988
    6. 'length' → logprob: -7.534649848937988
    7. 'from' → logprob: -8.409649848937988
    8. '#' → logprob: -8.534649848937988
    9. 'def' → logprob: -8.534649848937988
    10. ' prefix' → logprob: -8.659649848937988

Token 818: ' max' (ID: 2999)
  Prédit: ' longest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longest' → logprob: -0.09045165032148361
    2. ' calc' → logprob: -3.465451717376709
    3. ' max' → logprob: -3.840451717376709
    4. ' compute' → logprob: -4.590451717376709
    5. 'calc' → logprob: -5.340451717376709
    6. ' prefix' → logprob: -5.465451717376709
    7. 'compute' → logprob: -5.840451717376709
    8. 'long' → logprob: -6.090451717376709
    9. 'max' → logprob: -6.215451717376709
    10. ' flip' → logprob: -6.340451717376709

Token 819: '_alt' (ID: 77054)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.6594059467315674
    2. '_run' → logprob: -1.2844059467315674
    3. '_sub' → logprob: -2.0344059467315674
    4. '_al' → logprob: -3.5344059467315674
    5. '_length' → logprob: -3.7844059467315674
    6. '_alt' → logprob: -4.534405708312988
    7. '_suffix' → logprob: -5.284405708312988
    8. '_len' → logprob: -6.034405708312988
    9. '_prefix' → logprob: -6.659405708312988
    10. '_' → logprob: -6.784405708312988

Token 820: '_with' (ID: 14161)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.14098523557186127
    2. '_len' → logprob: -2.7659852504730225
    3. '_run' → logprob: -3.2659852504730225
    4. '_sub' → logprob: -4.890985012054443
    5. 'len' → logprob: -5.515985012054443
    6. '_' → logprob: -5.640985012054443
    7. 'length' → logprob: -5.640985012054443
    8. '_sequence' → logprob: -6.140985012054443
    9. '_lengths' → logprob: -6.265985012054443
    10. 'run' → logprob: -6.390985012054443

Token 821: '_flip' (ID: 150878)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.0655001848936081
    2. '_flip' → logprob: -2.815500259399414
    3. 'fl' → logprob: -5.940500259399414
    4. '_fl' → logprob: -7.940500259399414
    5. 'one' → logprob: -8.190500259399414
    6. '_one' → logprob: -9.815500259399414
    7. 'sub' → logprob: -10.315500259399414
    8. '```' → logprob: -10.315500259399414
    9. 'swap' → logprob: -10.440500259399414
    10. ' flip' → logprob: -11.315500259399414

Token 822: '(matches' (ID: 126280)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.09822428226470947
    2. '(S' → logprob: -2.97322416305542
    3. '(matches' → logprob: -3.34822416305542
    4. '(m' → logprob: -4.97322416305542
    5. '(match' → logprob: -8.723224639892578
    6. '(s' → logprob: -10.223224639892578
    7. '(array' → logprob: -10.348224639892578
    8. '(' → logprob: -10.848224639892578
    9. '(mat' → logprob: -10.973224639892578
    10. '(lst' → logprob: -10.973224639892578

Token 823: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026260707527399063
    2. '):
' → logprob: -3.7762606143951416
    3. '(matches' → logprob: -5.901260852813721
    4. ',' → logprob: -8.901260375976562
    5. '):
' → logprob: -9.776260375976562
    6. '(m' → logprob: -10.026260375976562
    7. ')' → logprob: -11.151260375976562
    8. '):

' → logprob: -11.901260375976562
    9. '   ' → logprob: -12.026260375976562
    10. ' ):' → logprob: -12.526260375976562

Token 824: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005448113661259413
    2. '```' → logprob: -7.750545024871826
    3. '
' → logprob: -9.750544548034668
    4. '    
' → logprob: -10.875544548034668
    5. '(n' → logprob: -12.000544548034668
    6. ':' → logprob: -12.000544548034668
    7. 'def' → logprob: -12.375544548034668
    8. ':
' → logprob: -12.625544548034668
    9. '(' → logprob: -13.000544548034668
    10. '``' → logprob: -13.250544548034668

Token 825: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5067802667617798
    2. 'N' → logprob: -1.5067802667617798
    3. '   ' → logprob: -2.1317801475524902
    4. ' n' → logprob: -3.3817801475524902
    5. 'prefix' → logprob: -3.8817801475524902
    6. ' N' → logprob: -6.38178014755249
    7. ' prefix' → logprob: -7.63178014755249
    8. '
' → logprob: -8.631780624389648
    9. 'pref' → logprob: -9.256780624389648
    10. 'length' → logprob: -9.381780624389648

Token 826: ' base' (ID: 3611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6448912024497986
    2. ' n' → logprob: -1.3948912620544434
    3. 'N' → logprob: -1.7698912620544434
    4. '   ' → logprob: -3.8948912620544434
    5. 'prefix' → logprob: -3.8948912620544434
    6. ' N' → logprob: -4.519891262054443
    7. ' prefix' → logprob: -5.269891262054443
    8. '
' → logprob: -8.894890785217285
    9. 'pref' → logprob: -10.269890785217285
    10. 'pre' → logprob: -10.644890785217285

Token 827: ' longest' (ID: 37511)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.2023226022720337
    2. ' =' → logprob: -1.3273226022720337
    3. 'max' → logprob: -2.077322483062744
    4. '   ' → logprob: -2.077322483062744
    5. '_len' → logprob: -2.702322483062744
    6. '_max' → logprob: -3.577322483062744
    7. '=' → logprob: -3.577322483062744
    8. '_length' → logprob: -4.327322483062744
    9. '_' → logprob: -4.827322483062744
    10. ' ' → logprob: -4.952322483062744

Token 828: ' consecutive' (ID: 40840)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.03480677679181099
    2. '_run' → logprob: -3.909806728363037
    3. '_' → logprob: -5.034806728363037
    4. '_length' → logprob: -5.534806728363037
    5. 'len' → logprob: -6.784806728363037
    6. 'run' → logprob: -6.909806728363037
    7. '_alt' → logprob: -7.534806728363037
    8. '   ' → logprob: -7.659806728363037
    9. 'length' → logprob: -8.034807205200195
    10. '=' → logprob: -9.534807205200195

Token 829: ' ones' (ID: 8104)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2475460022687912
    2. '_length' → logprob: -2.3725459575653076
    3. ' =' → logprob: -2.9975459575653076
    4. '_len' → logprob: -3.4975459575653076
    5. '=' → logprob: -4.497546195983887
    6. 'length' → logprob: -4.872546195983887
    7. '_run' → logprob: -4.997546195983887
    8. '_one' → logprob: -5.247546195983887
    9. '1' → logprob: -5.372546195983887
    10. '_con' → logprob: -5.372546195983887

Token 830: ' max' (ID: 2999)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37529489398002625
    2. '_' → logprob: -2.2502949237823486
    3. '_prefix' → logprob: -2.6252949237823486
    4. '_count' → logprob: -3.5002949237823486
    5. '_len' → logprob: -3.7502949237823486
    6. '=' → logprob: -3.7502949237823486
    7. '_run' → logprob: -4.3752946853637695
    8. '_lengths' → logprob: -4.3752946853637695
    9. '_runs' → logprob: -4.5002946853637695
    10. '_length' → logprob: -4.7502946853637695

Token 831: '
' (ID: 198)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.42942655086517334
    2. '_run' → logprob: -2.304426670074463
    3. '_' → logprob: -2.429426670074463
    4. ' =' → logprob: -2.429426670074463
    5. '=' → logprob: -3.304426670074463
    6. 'len' → logprob: -4.179426670074463
    7. '_length' → logprob: -4.429426670074463
    8. 'run' → logprob: -4.929426670074463
    9. 'length' → logprob: -7.304426670074463
    10. '   ' → logprob: -7.804426670074463

Token 832: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22298580408096313
    2. '_' → logprob: -2.4729857444763184
    3. '=' → logprob: -3.0979857444763184
    4. '   ' → logprob: -3.3479857444763184
    5. '_len' → logprob: -4.097985744476318
    6. '_length' → logprob: -4.472985744476318
    7. '```' → logprob: -5.972985744476318
    8. ',' → logprob: -7.472985744476318
    9. '_prefix' → logprob: -7.722985744476318
    10. ' _' → logprob: -7.722985744476318

Token 833: ' base' (ID: 3611)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.553014874458313
    2. '   ' → logprob: -1.428014874458313
    3. 'n' → logprob: -1.803014874458313
    4. 'base' (adapté à ' base') → logprob: -4.678014755249023
    5. 'res' → logprob: -5.053014755249023
    6. ' n' → logprob: -6.428014755249023
    7. 'prefix' → logprob: -6.678014755249023
    8. ' max' → logprob: -7.303014755249023
    9. 'count' → logprob: -8.678014755249023
    10. 'def' → logprob: -8.803014755249023

Token 834: '_max' (ID: 13731)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.06480524688959122
    2. '_run' → logprob: -3.314805269241333
    3. '_' → logprob: -4.189805030822754
    4. '_length' → logprob: -4.564805030822754
    5. '_count' → logprob: -7.814805030822754
    6. '_max' → logprob: -9.564805030822754
    7. '_match' → logprob: -9.814805030822754
    8. '_l' → logprob: -10.064805030822754
    9. '_con' → logprob: -10.564805030822754
    10. '=' → logprob: -10.564805030822754

Token 835: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16452650725841522
    2. '=' → logprob: -2.4145264625549316
    3. ' =' → logprob: -3.7895264625549316
    4. '_len' → logprob: -3.7895264625549316
    5. '_run' → logprob: -4.289526462554932
    6. '_length' → logprob: -6.039526462554932
    7. '_=' → logprob: -7.414526462554932
    8. '=_' → logprob: -8.66452693939209
    9. '_con' → logprob: -10.03952693939209
    10. 'len' → logprob: -10.66452693939209

Token 836: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06402977555990219
    2. 'max' → logprob: -3.3140296936035156
    3. '1' → logprob: -4.564029693603516
    4. ' ' → logprob: -4.939029693603516
    5. 'matches' → logprob: -5.564029693603516
    6. ' max' → logprob: -5.814029693603516
    7. 'length' → logprob: -7.564029693603516
    8. 'long' → logprob: -8.939029693603516
    9. ' matches' → logprob: -9.189029693603516
    10. ' length' → logprob: -9.564029693603516

Token 837: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17192479968070984
    2. 'max' → logprob: -2.1719248294830322
    3. '1' → logprob: -3.5469248294830322
    4. 'long' → logprob: -4.546924591064453
    5. 'matches' → logprob: -5.796924591064453
    6. 'length' → logprob: -7.046924591064453
    7. 'res' → logprob: -8.671924591064453
    8. 'current' → logprob: -8.671924591064453
    9. 'curr' → logprob: -9.421924591064453
    10. 'cur' → logprob: -9.796924591064453

Token 838: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005631539970636368
    2. '
' → logprob: -5.630631446838379
    3. 'prefix' → logprob: -7.005631446838379
    4. 'length' → logprob: -8.255631446838379
    5. ' =' → logprob: -8.880631446838379
    6. 'current' → logprob: -9.505631446838379
    7. 'n' → logprob: -9.505631446838379
    8. ',' → logprob: -9.880631446838379
    9. ' prefix' → logprob: -9.880631446838379
    10. 'for' → logprob: -10.005631446838379

Token 839: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02114129066467285
    2. ' i' → logprob: -5.771141052246094
    3. '
' → logprob: -5.896141052246094
    4. ' for' → logprob: -5.896141052246094
    5. ' =' → logprob: -6.146141052246094
    6. 'i' → logprob: -6.146141052246094
    7. 'for' → logprob: -6.271141052246094
    8. 'prefix' → logprob: -7.021141052246094
    9. 'max' → logprob: -7.271141052246094
    10. ' prefix' → logprob: -7.771141052246094

Token 840: ' length' (ID: 5517)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.20749793946743011
    2. 'n' → logprob: -2.4574978351593018
    3. '   ' → logprob: -2.9574978351593018
    4. 'count' → logprob: -3.4574978351593018
    5. 'length' (adapté à ' length') → logprob: -5.207498073577881
    6. 'cnt' → logprob: -5.207498073577881
    7. 'current' → logprob: -6.582498073577881
    8. 'counts' → logprob: -6.957498073577881
    9. 'pref' → logprob: -7.082498073577881
    10. 'i' → logprob: -7.207498073577881

Token 841: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043789755553007126
    2. ' =' → logprob: -3.168789863586426
    3. '   ' → logprob: -7.918789863586426
    4. '_' → logprob: -8.668789863586426
    5. '=len' → logprob: -9.293789863586426
    6. 's' → logprob: -9.418789863586426
    7. '=max' → logprob: -11.043789863586426
    8. ')' → logprob: -11.293789863586426
    9. '[' → logprob: -11.543789863586426
    10. ',' → logprob: -11.668789863586426

Token 842: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01748104952275753
    2. 'len' → logprob: -4.517480850219727
    3. '1' → logprob: -5.267480850219727
    4. ' ' → logprob: -7.142480850219727
    5. 'N' → logprob: -8.642480850219727
    6. ' len' → logprob: -9.517480850219727
    7. '[len' → logprob: -9.642480850219727
    8. '[' → logprob: -9.767480850219727
    9. 'matches' → logprob: -10.142480850219727
    10. '   ' → logprob: -10.517480850219727

Token 843: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005233656847849488
    2. '0' → logprob: -7.625523567199707
    3. '[len' → logprob: -11.125523567199707
    4. ' len' → logprob: -11.500523567199707
    5. 'N' → logprob: -12.375523567199707
    6. '1' → logprob: -12.625523567199707
    7. '(len' → logprob: -13.750523567199707
    8. '[' → logprob: -13.875523567199707
    9. 'matches' → logprob: -14.500523567199707
    10. '   ' → logprob: -15.250523567199707

Token 844: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.149424210190773
    2. '
' → logprob: -2.8994243144989014
    3. ' for' → logprob: -3.1494243144989014
    4. 'for' → logprob: -3.2744243144989014
    5. '    
' → logprob: -7.399424076080322
    6. 'i' → logprob: -7.399424076080322
    7. ',' → logprob: -8.27442455291748
    8. ' 
' → logprob: -8.39942455291748
    9. 'def' → logprob: -8.77442455291748
    10. ' i' → logprob: -9.27442455291748

Token 845: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7349054217338562
    2. '   ' → logprob: -1.234905481338501
    3. 'for' → logprob: -1.484905481338501
    4. '
' → logprob: -6.484905242919922
    5. '	for' → logprob: -6.984905242919922
    6. ' 
' → logprob: -8.609905242919922
    7. '    
' → logprob: -9.484905242919922
    8. ' ' → logprob: -9.734905242919922
    9. ',' → logprob: -10.484905242919922
    10. '```' → logprob: -10.609905242919922

Token 846: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009245023131370544
    2. 'max' → logprob: -4.759244918823242
    3. ' for' → logprob: -7.759244918823242
    4. 'res' → logprob: -9.134244918823242
    5. 'i' → logprob: -10.134244918823242
    6. '   ' → logprob: -10.134244918823242
    7. 'n' → logprob: -12.509244918823242
    8. ' max' → logprob: -12.509244918823242
    9. '
' → logprob: -12.634244918823242
    10. 'prev' → logprob: -13.134244918823242

Token 847: ' v' (ID: 323)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.047224801033735275
    2. 'x' → logprob: -3.922224760055542
    3. 'v' → logprob: -4.047224998474121
    4. 'val' → logprob: -5.672224998474121
    5. 'i' → logprob: -6.047224998474121
    6. 'match' → logprob: -6.547224998474121
    7. 'b' → logprob: -6.922224998474121
    8. 'bit' → logprob: -7.922224998474121
    9. ' m' → logprob: -8.422224998474121
    10. ' val' → logprob: -10.922224998474121

Token 848: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023350762203335762
    2. 'in' → logprob: -3.773350715637207
    3. 'i' → logprob: -10.773350715637207
    4. '	in' → logprob: -10.898350715637207
    5. ' ' → logprob: -11.523350715637207
    6. '==' → logprob: -11.773350715637207
    7. '   ' → logprob: -11.773350715637207
    8. '=' → logprob: -11.773350715637207
    9. ',' → logprob: -11.898350715637207
    10. 's' → logprob: -12.273350715637207

Token 849: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.00038169484469108284
    2. ' matches' → logprob: -7.8753814697265625
    3. '   ' → logprob: -13.500381469726562
    4. '(matches' → logprob: -15.375381469726562
    5. 'match' → logprob: -17.500381469726562
    6. ' ' → logprob: -18.125381469726562
    7. '       ' → logprob: -18.250381469726562
    8. '
' → logprob: -18.375381469726562
    9. 'm' → logprob: -18.625381469726562
    10. '[' → logprob: -18.750381469726562

Token 850: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.40224432945251465
    2. ':' → logprob: -1.1522443294525146
    3. '==' → logprob: -4.652244567871094
    4. '   ' → logprob: -6.027244567871094
    5. ' ==' → logprob: -6.527244567871094
    6. '       ' → logprob: -6.902244567871094
    7. '=' → logprob: -7.652244567871094
    8. ' in' → logprob: -8.527244567871094
    9. '):
' → logprob: -10.152244567871094
    10. '!=' → logprob: -10.527244567871094

Token 851: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006837221444584429
    2. ' if' → logprob: -7.750683784484863
    3. '=' → logprob: -9.125683784484863
    4. 'if' → logprob: -9.875683784484863
    5. '	' → logprob: -10.375683784484863
    6. '   ' → logprob: -11.000683784484863
    7. ':' → logprob: -11.125683784484863
    8. ':
' → logprob: -12.125683784484863
    9. '	if' → logprob: -12.625683784484863
    10. '+' → logprob: -12.875683784484863

Token 852: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.015688011422753334
    2. '       ' → logprob: -4.640687942504883
    3. ' if' → logprob: -5.140687942504883
    4. '   ' → logprob: -10.640687942504883
    5. '	if' → logprob: -10.890687942504883
    6. '```' → logprob: -11.140687942504883
    7. 'If' → logprob: -13.890687942504883
    8. '           ' → logprob: -14.140687942504883
    9. '0' → logprob: -14.265687942504883
    10. '	' → logprob: -15.515687942504883

Token 853: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005530327325686812
    2. ' v' → logprob: -7.500553131103516
    3. '	v' → logprob: -17.000553131103516
    4. '   ' → logprob: -19.125553131103516
    5. ' ' → logprob: -20.250553131103516
    6. '_v' → logprob: -20.625553131103516
    7. ')v' → logprob: -21.625553131103516
    8. '       ' → logprob: -22.750553131103516
    9. '(v' → logprob: -22.875553131103516
    10. '$v' → logprob: -23.125553131103516

Token 854: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20155201852321625
    2. ' ==' → logprob: -1.7015520334243774
    3. ':' → logprob: -10.076552391052246
    4. ':
' → logprob: -10.201552391052246
    5. '==
' → logprob: -10.576552391052246
    6. '=' → logprob: -10.701552391052246
    7. ')==' → logprob: -12.326552391052246
    8. '```' → logprob: -13.701552391052246
    9. ' ==
' → logprob: -13.951552391052246
    10. '
' → logprob: -14.076552391052246

Token 855: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. '0' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.500003814697266
    4. '   ' → logprob: -17.125003814697266
    5. '
' → logprob: -19.000003814697266
    6. '' → logprob: -20.000003814697266
    7. '    
' → logprob: -20.250003814697266
    8. '```' → logprob: -20.250003814697266
    9. '=' → logprob: -21.375003814697266
    10. '	' → logprob: -21.500003814697266

Token 856: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.625001907348633
    3. '0' → logprob: -14.125001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '
' → logprob: -19.625001907348633
    6. '```' → logprob: -19.750001907348633
    7. '' → logprob: -20.625001907348633
    8. '=' → logprob: -20.750001907348633
    9. '  ' → logprob: -21.000001907348633
    10. '    
' → logprob: -21.250001907348633

Token 857: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43219903111457825
    2. ':' → logprob: -1.0571990013122559
    3. '           ' → logprob: -5.682199001312256
    4. '       ' → logprob: -10.807199478149414
    5. '		' → logprob: -11.057199478149414
    6. '):
' → logprob: -11.932199478149414
    7. ',' → logprob: -12.057199478149414
    8. ':length' → logprob: -12.057199478149414
    9. '	       ' → logprob: -12.057199478149414
    10. '=' → logprob: -12.307199478149414

Token 858: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018342027440667152
    2. 'length' → logprob: -4.268342018127441
    3. '	       ' → logprob: -6.393342018127441
    4. ' length' → logprob: -6.893342018127441
    5. '		' → logprob: -7.143342018127441
    6. ':' → logprob: -9.268342018127441
    7. '```' → logprob: -9.268342018127441
    8. ':
' → logprob: -9.393342018127441
    9. '       ' → logprob: -9.518342018127441
    10. '	length' → logprob: -9.643342018127441

Token 859: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.0015191456768661737
    2. ' length' → logprob: -6.501519203186035
    3. '           ' → logprob: -11.001519203186035
    4. '	length' → logprob: -16.75151824951172
    5. '   ' → logprob: -17.87651824951172
    6. '               ' → logprob: -18.00151824951172
    7. '_length' → logprob: -19.12651824951172
    8. '       ' → logprob: -20.00151824951172
    9. 'Length' → logprob: -21.00151824951172
    10. ',length' → logprob: -21.12651824951172

Token 860: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004087185952812433
    2. ' +=' → logprob: -5.504086971282959
    3. '=' → logprob: -12.129087448120117
    4. ']+=' → logprob: -13.129087448120117
    5. '+' → logprob: -14.004087448120117
    6. '```' → logprob: -15.629087448120117
    7. '           ' → logprob: -16.004087448120117
    8. '   ' → logprob: -16.254087448120117
    9. '       ' → logprob: -17.504087448120117
    10. '+="' → logprob: -17.629087448120117

Token 861: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '
' → logprob: -19.625051498413086
    4. '```' → logprob: -20.125051498413086
    5. '<|end|>' → logprob: -21.250051498413086
    6. '   ' → logprob: -21.375051498413086
    7. '１' → logprob: -23.500051498413086
    8. '۱' → logprob: -23.500051498413086
    9. '+' → logprob: -23.750051498413086
    10. ' ' → logprob: -23.875051498413086

Token 862: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014010115526616573
    2. 'else' → logprob: -4.389009952545166
    3. ' else' → logprob: -6.889009952545166
    4. '
' → logprob: -8.264010429382324
    5. '<|end|>' → logprob: -9.264010429382324
    6. '	' → logprob: -10.514010429382324
    7. '           ' → logprob: -11.014010429382324
    8. '	else' → logprob: -11.139010429382324
    9. '```' → logprob: -11.389010429382324
    10. '   ' → logprob: -11.514010429382324

Token 863: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030239364132285118
    2. 'else' → logprob: -3.5302393436431885
    3. ' else' → logprob: -7.780239582061768
    4. '	' → logprob: -10.03023910522461
    5. '	else' → logprob: -11.90523910522461
    6. '```' → logprob: -12.03023910522461
    7. 'elif' → logprob: -12.28023910522461
    8. '
' → logprob: -12.65523910522461
    9. '   ' → logprob: -13.53023910522461
    10. '<|end|>' → logprob: -14.15523910522461

Token 864: ' base' (ID: 3611)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.353584349155426
    2. 'else' → logprob: -1.2285842895507812
    3. '   ' → logprob: -6.103584289550781
    4. ' else' → logprob: -6.603584289550781
    5. 'max' → logprob: -7.103584289550781
    6. '           ' → logprob: -7.978584289550781
    7. '
' → logprob: -8.978584289550781
    8. '```' → logprob: -9.228584289550781
    9. 'if' → logprob: -9.978584289550781
    10. 'elif' → logprob: -10.353584289550781

Token 865: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.006312566343694925
    2. 'max' → logprob: -5.756312370300293
    3. '=' → logprob: -6.506312370300293
    4. '_len' → logprob: -7.256312370300293
    5. '+=' → logprob: -7.506312370300293
    6. ' +=' → logprob: -9.256312370300293
    7. '+' → logprob: -9.506312370300293
    8. ' =' → logprob: -9.881312370300293
    9. 'Max' → logprob: -10.131312370300293
    10. '=max' → logprob: -10.506312370300293

Token 866: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019377965945750475
    2. ' =' → logprob: -6.2519378662109375
    3. '=max' → logprob: -12.001937866210938
    4. '>' → logprob: -13.376937866210938
    5. '+=' → logprob: -14.001937866210938
    6. 'max' → logprob: -15.251937866210938
    7. '<|end|>' → logprob: -15.501937866210938
    8. '>=' → logprob: -16.876937866210938
    9. ' ' → logprob: -17.626937866210938
    10. '```' → logprob: -17.876937866210938

Token 867: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007858026656322181
    2. ' max' → logprob: -7.250785827636719
    3. 'length' → logprob: -9.500785827636719
    4. '	max' → logprob: -14.250785827636719
    5. 'maxlength' → logprob: -16.00078582763672
    6. '(max' → logprob: -16.50078582763672
    7. '   ' → logprob: -17.00078582763672
    8. ' length' → logprob: -17.50078582763672
    9. '=max' → logprob: -18.62578582763672
    10. 'v' → logprob: -19.12578582763672

Token 868: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.14042112231254578
    2. '(length' → logprob: -2.140421152114868
    3. 'length' → logprob: -4.890420913696289
    4. 'base' → logprob: -5.140420913696289
    5. '(' → logprob: -10.765420913696289
    6. '(max' → logprob: -12.140420913696289
    7. ' base' → logprob: -13.890420913696289
    8. ',length' → logprob: -14.640420913696289
    9. ' length' → logprob: -14.765420913696289
    10. '```' → logprob: -15.640420913696289

Token 869: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.012948205694556236
    2. '_len' → logprob: -4.762948036193848
    3. 'max' → logprob: -6.387948036193848
    4. '_alt' → logprob: -6.512948036193848
    5. 'length' → logprob: -7.887948036193848
    6. 'Max' → logprob: -8.637948036193848
    7. '   ' → logprob: -8.762948036193848
    8. 'alt' → logprob: -9.137948036193848
    9. '_length' → logprob: -9.262948036193848
    10. '+' → logprob: -9.262948036193848

Token 870: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07971812039613724
    2. ',length' → logprob: -2.5797181129455566
    3. ' ,' → logprob: -7.329718112945557
    4. 'length' → logprob: -9.204718589782715
    5. '(length' → logprob: -10.079718589782715
    6. ',
' → logprob: -11.079718589782715
    7. '[length' → logprob: -11.954718589782715
    8. ',max' → logprob: -12.454718589782715
    9. ' length' → logprob: -13.579718589782715
    10. ',len' → logprob: -13.829718589782715

Token 871: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00020354038861114532
    2. ' length' → logprob: -8.500203132629395
    3. '           ' → logprob: -19.12520408630371
    4. '	length' → logprob: -20.87520408630371
    5. '   ' → logprob: -21.00020408630371
    6. 'ength' → logprob: -21.75020408630371
    7. '(length' → logprob: -23.00020408630371
    8. ' ' → logprob: -23.50020408630371
    9. '       ' → logprob: -23.62520408630371
    10. 'Length' → logprob: -23.75020408630371

Token 872: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7376348376274109
    2. '       ' → logprob: -0.8626348376274109
    3. ')' → logprob: -2.3626348972320557
    4. '
' → logprob: -5.362634658813477
    5. 'else' → logprob: -7.737634658813477
    6. '           ' → logprob: -9.237634658813477
    7. '   ' → logprob: -9.612634658813477
    8. '<|end|>' → logprob: -10.487634658813477
    9. 'elif' → logprob: -10.487634658813477
    10. '```' → logprob: -10.737634658813477

Token 873: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023989591281861067
    2. 'else' → logprob: -6.12739896774292
    3. ' else' → logprob: -9.127398490905762
    4. '   ' → logprob: -9.627398490905762
    5. '```' → logprob: -10.752398490905762
    6. '	' → logprob: -11.252398490905762
    7. 'elif' → logprob: -13.627398490905762
    8. '
' → logprob: -13.627398490905762
    9. '	else' → logprob: -14.002398490905762
    10. '           ' → logprob: -14.752398490905762

Token 874: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.41758474707603455
    2. '       ' → logprob: -1.167584776878357
    3. ' else' → logprob: -3.5425846576690674
    4. '   ' → logprob: -6.6675848960876465
    5. '	else' → logprob: -10.417584419250488
    6. 'elif' → logprob: -12.792584419250488
    7. '	' → logprob: -13.292584419250488
    8. '```' → logprob: -14.042584419250488
    9. '
' → logprob: -14.417584419250488
    10. ' ' → logprob: -15.917584419250488

Token 875: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012705530971288681
    2. ':' → logprob: -4.637705326080322
    3. ':
' → logprob: -5.887705326080322
    4. 'length' → logprob: -10.01270580291748
    5. '		' → logprob: -10.63770580291748
    6. '=' → logprob: -10.63770580291748
    7. '          ' → logprob: -10.63770580291748
    8. '	       ' → logprob: -10.76270580291748
    9. ' length' → logprob: -12.38770580291748
    10. ':length' → logprob: -12.51270580291748

Token 876: '           ' (ID: 352)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.32155734300613403
    2. '           ' → logprob: -1.3215572834014893
    3. ' length' → logprob: -4.821557521820068
    4. '       ' → logprob: -9.32155704498291
    5. '   ' → logprob: -9.69655704498291
    6. '```' → logprob: -11.07155704498291
    7. '          ' → logprob: -11.19655704498291
    8. '	length' → logprob: -11.57155704498291
    9. '		' → logprob: -12.94655704498291
    10. ',length' → logprob: -12.94655704498291

Token 877: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.0005153826787136495
    2. ' length' → logprob: -8.00051498413086
    3. '           ' → logprob: -8.62551498413086
    4. '               ' → logprob: -15.25051498413086
    5. '0' → logprob: -15.62551498413086
    6. '   ' → logprob: -17.50051498413086
    7. '	length' → logprob: -18.00051498413086
    8. 'Length' → logprob: -19.00051498413086
    9. '            ' → logprob: -19.50051498413086
    10. '```' → logprob: -19.62551498413086

Token 878: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0040785204619169235
    2. ' =' → logprob: -5.504078388214111
    3. '           ' → logprob: -18.254077911376953
    4. '=
' → logprob: -18.254077911376953
    5. '+=' → logprob: -19.629077911376953
    6. '0' → logprob: -20.754077911376953
    7. '＝' → logprob: -20.879077911376953
    8. '.=' → logprob: -21.004077911376953
    9. '=

' → logprob: -21.504077911376953
    10. ' ' → logprob: -21.629077911376953

Token 879: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۰' → logprob: -20.125
    4. '1' → logprob: -20.5
    5. '
' → logprob: -21.75
    6. '<|end|>' → logprob: -21.875
    7. '```' → logprob: -22.5
    8. '=' → logprob: -22.625
    9. '   ' → logprob: -22.9375
    10. 'zero' → logprob: -22.9375

Token 880: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '
' → logprob: -20.125
    4. '```' → logprob: -20.875
    5. '۰' → logprob: -21.25
    6. '1' → logprob: -21.25
    7. '00' → logprob: -22.5
    8. ' ' → logprob: -23.75
    9. '=' → logprob: -23.75
    10. '000' → logprob: -23.8125

Token 881: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.635387659072876
    2. '   ' → logprob: -0.760387659072876
    3. '    
' → logprob: -6.385387420654297
    4. '```' → logprob: -8.010387420654297
    5. '<|end|>' → logprob: -9.135387420654297
    6. '\n' → logprob: -9.385387420654297
    7. '
' → logprob: -9.510387420654297
    8. '       ' → logprob: -9.635387420654297
    9. '  
' → logprob: -9.760387420654297
    10. '        
' → logprob: -10.135387420654297

Token 882: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023591693490743637
    2. '
' → logprob: -3.7735917568206787
    3. '    
' → logprob: -8.398591995239258
    4. '```' → logprob: -9.648591995239258
    5. '       ' → logprob: -11.148591995239258
    6. 'max' → logprob: -11.398591995239258
    7. '        
' → logprob: -12.023591995239258
    8. '            
' → logprob: -12.648591995239258
    9. '
' → logprob: -12.773591995239258
    10. '           ' → logprob: -13.023591995239258

Token 883: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1381049007177353
    2. '
' → logprob: -3.2631049156188965
    3. 'prefix' → logprob: -3.2631049156188965
    4. 'res' → logprob: -3.8881049156188965
    5. '   ' → logprob: -4.2631049156188965
    6. ' max' → logprob: -4.7631049156188965
    7. 'ans' → logprob: -6.3881049156188965
    8. 'prev' → logprob: -6.5131049156188965
    9. '    
' → logprob: -6.8881049156188965
    10. 'n' → logprob: -6.8881049156188965

Token 884: ' compute' (ID: 23864)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.4089633822441101
    2. 'n' → logprob: -1.2839634418487549
    3. 'N' → logprob: -3.283963441848755
    4. 'pref' → logprob: -4.533963203430176
    5. 'pre' → logprob: -5.533963203430176
    6. '   ' → logprob: -5.908963203430176
    7. 'left' → logprob: -6.783963203430176
    8. 'max' → logprob: -7.283963203430176
    9. ' prefix' → logprob: -7.533963203430176
    10. '#' → logprob: -7.783963203430176

Token 885: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0017021986423060298
    2. ' prefix' → logprob: -7.501702308654785
    3. 'n' → logprob: -7.751702308654785
    4. 'pref' → logprob: -7.751702308654785
    5. 'pre' → logprob: -8.251702308654785
    6. 'left' → logprob: -11.376702308654785
    7. ' n' → logprob: -11.876702308654785
    8. '   ' → logprob: -12.876702308654785
    9. 'l' → logprob: -13.251702308654785
    10. 'p' → logprob: -13.751702308654785

Token 886: ' sums' (ID: 73121)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.4754863679409027
    2. '_lengths' → logprob: -1.225486397743225
    3. '_' → logprob: -3.2254862785339355
    4. '_length' → logprob: -4.2254862785339355
    5. 'length' → logprob: -4.6004862785339355
    6. ' =' → logprob: -4.6004862785339355
    7. 'len' → logprob: -4.9754862785339355
    8. '_l' → logprob: -7.3504862785339355
    9. '1' → logprob: -7.6004862785339355
    10. '=' → logprob: -7.7254862785339355

Token 887: ' of' (ID: 328)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.18238592147827148
    2. ' =' → logprob: -2.4323859214782715
    3. 'pref' → logprob: -3.4323859214782715
    4. 'pre' → logprob: -4.0573859214782715
    5. 'p' → logprob: -5.0573859214782715
    6. '=' → logprob: -5.3073859214782715
    7. '   ' → logprob: -5.5573859214782715
    8. '
' → logprob: -5.5573859214782715
    9. 'psum' → logprob: -5.8073859214782715
    10. ',' → logprob: -6.8073859214782715

Token 888: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.4506985545158386
    2. 'ones' → logprob: -1.5756986141204834
    3. 'prefix' → logprob: -2.0756986141204834
    4. 'length' → logprob: -3.7006986141204834
    5. 'con' → logprob: -6.700698375701904
    6. '1' → logprob: -6.825698375701904
    7. 'one' → logprob: -6.950698375701904
    8. 'pref' → logprob: -7.200698375701904
    9. ' matches' → logprob: -8.075698852539062
    10. 'counts' → logprob: -8.700698852539062

Token 889: ' and' (ID: 326)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.07315710186958313
    2. '   ' → logprob: -2.9481570720672607
    3. ' prefix' → logprob: -4.69815731048584
    4. 'pref' → logprob: -5.32315731048584
    5. 'pre' → logprob: -5.82315731048584
    6. '
' → logprob: -7.94815731048584
    7. 'psum' → logprob: -7.94815731048584
    8. 'p' → logprob: -9.19815731048584
    9. 'ps' → logprob: -9.32315731048584
    10. '    
' → logprob: -9.82315731048584

Token 890: ' difference' (ID: 9809)
  Prédit: 'suffix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suffix' → logprob: -0.0055580441839993
    2. 'prefix' → logprob: -6.130558013916016
    3. 'n' → logprob: -6.505558013916016
    4. ' suffix' → logprob: -7.130558013916016
    5. 'matches' → logprob: -8.005558013916016
    6. 's' → logprob: -8.505558013916016
    7. 'N' → logprob: -8.630558013916016
    8. 'max' → logprob: -8.880558013916016
    9. 'length' → logprob: -9.255558013916016
    10. 'dp' → logprob: -10.130558013916016

Token 891: ' array' (ID: 2644)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4226935803890228
    2. 's' → logprob: -1.9226936101913452
    3. '=' → logprob: -2.2976934909820557
    4. 'array' → logprob: -3.2976934909820557
    5. 'matches' → logprob: -4.422693729400635
    6. 'arr' → logprob: -4.547693729400635
    7. '   ' → logprob: -4.922693729400635
    8. '_array' → logprob: -5.547693729400635
    9. ' arrays' → logprob: -5.672693729400635
    10. 'arrays' → logprob: -5.672693729400635

Token 892: ':
' (ID: 734)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.049255989491939545
    2. ' prefix' → logprob: -4.299255847930908
    3. '   ' → logprob: -4.549255847930908
    4. 'pref' → logprob: -4.549255847930908
    5. 'pre' → logprob: -5.174255847930908
    6. '
' → logprob: -5.924255847930908
    7. 'psum' → logprob: -6.049255847930908
    8. 'ps' → logprob: -7.424255847930908
    9. 'n' → logprob: -7.924255847930908
    10. 'pres' → logprob: -7.924255847930908

Token 893: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7325533032417297
    2. 'prefix' → logprob: -0.7325533032417297
    3. ' prefix' → logprob: -3.607553243637085
    4. 'pref' → logprob: -4.857553482055664
    5. 'pre' → logprob: -6.357553482055664
    6. ' pre' → logprob: -7.857553482055664
    7. 'n' → logprob: -7.982553482055664
    8. ' pref' → logprob: -7.982553482055664
    9. '
' → logprob: -8.232553482055664
    10. '```' → logprob: -8.732553482055664

Token 894: ' diff' (ID: 8868)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.15121369063854218
    2. 'pref' → logprob: -3.0262136459350586
    3. ' prefix' → logprob: -3.1512136459350586
    4. 'n' → logprob: -4.026213645935059
    5. 'pre' → logprob: -4.276213645935059
    6. '   ' → logprob: -5.026213645935059
    7. ' n' → logprob: -5.026213645935059
    8. ' pref' → logprob: -6.776213645935059
    9. ' pre' → logprob: -6.776213645935059
    10. '
' → logprob: -6.901213645935059

Token 895: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31348514556884766
    2. '=' → logprob: -1.3134851455688477
    3. 's' → logprob: -8.813485145568848
    4. '=[' → logprob: -10.938485145568848
    5. ' =[' → logprob: -11.188485145568848
    6. '[' → logprob: -11.313485145568848
    7. '_' → logprob: -11.438485145568848
    8. '=[]' → logprob: -12.063485145568848
    9. '   ' → logprob: -12.938485145568848
    10. '[]' → logprob: -13.188485145568848

Token 896: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -3.5716304410016164e-05
    2. '[]' → logprob: -10.500035285949707
    3. ' [' → logprob: -13.125035285949707
    4. '[]
' → logprob: -13.125035285949707
    5. '[i' → logprob: -13.375035285949707
    6. '[len' → logprob: -13.625035285949707
    7. '[(' → logprob: -14.000035285949707
    8. '[m' → logprob: -15.375035285949707
    9. '[-' → logprob: -15.500035285949707
    10. 'matches' → logprob: -17.125036239624023

Token 897: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4846777021884918
    2. ' for' → logprob: -1.3596776723861694
    3. '   ' → logprob: -2.359677791595459
    4. '[' → logprob: -3.609677791595459
    5. '[i' → logprob: -6.234677791595459
    6. ' =' → logprob: -6.734677791595459
    7. '0' → logprob: -7.609677791595459
    8. ' [' → logprob: -7.734677791595459
    9. '[
' → logprob: -7.734677791595459
    10. '=' → logprob: -7.984677791595459

Token 898: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0015731871826574206
    2. ' for' → logprob: -6.626573085784912
    3. '   ' → logprob: -8.37657356262207
    4. '	for' → logprob: -11.37657356262207
    5. '
' → logprob: -14.12657356262207
    6. 'n' → logprob: -14.12657356262207
    7. '[' → logprob: -14.12657356262207
    8. 'i' → logprob: -14.37657356262207
    9. '```' → logprob: -14.62657356262207
    10. ' ' → logprob: -14.62657356262207

Token 899: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05826128274202347
    2. 'v' → logprob: -3.0582613945007324
    3. 'm' → logprob: -4.683261394500732
    4. 'matches' → logprob: -8.433260917663574
    5. ' i' → logprob: -9.808260917663574
    6. 'match' → logprob: -10.558260917663574
    7. 'val' → logprob: -10.683260917663574
    8. 'x' → logprob: -10.683260917663574
    9. '   ' → logprob: -12.058260917663574
    10. '(i' → logprob: -12.183260917663574

Token 900: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34858426451683044
    2. 'in' → logprob: -1.2235842943191528
    3. ',' → logprob: -9.973584175109863
    4. '	in' → logprob: -10.723584175109863
    5. ' ' → logprob: -10.973584175109863
    6. 'i' → logprob: -11.223584175109863
    7. ',v' → logprob: -11.723584175109863
    8. '   ' → logprob: -11.723584175109863
    9. 'v' → logprob: -12.598584175109863
    10. '```' → logprob: -12.723584175109863

Token 901: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.0005473146447911859
    2. ' matches' → logprob: -8.250547409057617
    3. '(matches' → logprob: -9.125547409057617
    4. 'range' → logprob: -9.375547409057617
    5. '(' → logprob: -10.250547409057617
    6. '[' → logprob: -10.375547409057617
    7. '   ' → logprob: -11.875547409057617
    8. 'enumer' → logprob: -12.125547409057617
    9. 'match' → logprob: -12.500547409057617
    10. ' (' → logprob: -13.500547409057617

Token 902: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04465150833129883
    2. ' in' → logprob: -4.044651508331299
    3. 'in' → logprob: -4.669651508331299
    4. ',' → logprob: -4.919651508331299
    5. ':
' → logprob: -5.419651508331299
    6. '=' → logprob: -5.794651508331299
    7. '   ' → logprob: -6.794651508331299
    8. '       ' → logprob: -8.29465103149414
    9. '==' → logprob: -9.16965103149414
    10. '):' → logprob: -9.41965103149414

Token 903: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.216884732246399
    2. ' diff' → logprob: -1.466884732246399
    3. ' if' → logprob: -1.841884732246399
    4. '   ' → logprob: -2.3418846130371094
    5. 'diff' → logprob: -2.3418846130371094
    6. '    ' → logprob: -2.5918846130371094
    7. '	diff' → logprob: -4.091884613037109
    8. ',' → logprob: -4.341884613037109
    9. ':' → logprob: -5.216884613037109
    10. '	' → logprob: -5.466884613037109

Token 904: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.16028301417827606
    2. '1' → logprob: -2.035283088684082
    3. '   ' → logprob: -4.535283088684082
    4. ' diff' → logprob: -5.160283088684082
    5. ' ' → logprob: -7.535283088684082
    6. '(' → logprob: -8.160283088684082
    7. '-' → logprob: -10.285283088684082
    8. '       ' → logprob: -10.410283088684082
    9. ' (' → logprob: -10.910283088684082
    10. 'if' → logprob: -10.910283088684082

Token 905: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00040004486800171435
    2. ' =' → logprob: -8.375399589538574
    3. '.append' → logprob: -8.750399589538574
    4. '=
' → logprob: -12.250399589538574
    5. '.=' → logprob: -12.625399589538574
    6. '+=' → logprob: -13.625399589538574
    7. '=v' → logprob: -15.125399589538574
    8. '=[' → logprob: -15.750399589538574
    9. '=int' → logprob: -15.875399589538574
    10. '.' → logprob: -16.00040054321289

Token 906: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04138700291514397
    2. '(' → logprob: -3.2913870811462402
    3. ' ' → logprob: -5.79138708114624
    4. ' (' → logprob: -8.541386604309082
    5. '-' → logprob: -10.041386604309082
    6. '(-' → logprob: -11.166386604309082
    7. '   ' → logprob: -11.541386604309082
    8. '    ' → logprob: -12.791386604309082
    9. ' -' → logprob: -12.916386604309082
    10. '2' → logprob: -12.916386604309082

Token 907: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005281546153128147
    2. '(' → logprob: -5.505281448364258
    3. '-' → logprob: -6.755281448364258
    4. '(-' → logprob: -10.880281448364258
    5. ' ' → logprob: -11.505281448364258
    6. ' (' → logprob: -13.130281448364258
    7. '-(' → logprob: -13.255281448364258
    8. ' -' → logprob: -14.130281448364258
    9. '[' → logprob: -14.380281448364258
    10. '0' → logprob: -14.380281448364258

Token 908: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22546923160552979
    2. '-' → logprob: -1.6004692316055298
    3. '-v' → logprob: -10.600469589233398
    4. ' if' → logprob: -10.725469589233398
    5. ')' → logprob: -12.100469589233398
    6. ' ' → logprob: -13.725469589233398
    7. ',' → logprob: -14.100469589233398
    8. 'if' → logprob: -14.600469589233398
    9. '   ' → logprob: -14.725469589233398
    10. '-if' → logprob: -14.975469589233398

Token 909: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033272415748797357
    2. ' ' → logprob: -8.125332832336426
    3. 'v' → logprob: -10.250332832336426
    4. '   ' → logprob: -14.750332832336426
    5. ' v' → logprob: -15.250332832336426
    6. '  ' → logprob: -16.12533187866211
    7. '(' → logprob: -16.12533187866211
    8. '0' → logprob: -16.68783187866211
    9. '[' → logprob: -16.93783187866211
    10. '```' → logprob: -16.93783187866211

Token 910: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011137669906020164
    2. 'v' → logprob: -4.51113748550415
    3. ' ' → logprob: -9.511137962341309
    4. ' v' → logprob: -11.886137962341309
    5. '(' → logprob: -12.261137962341309
    6. '```' → logprob: -14.198637962341309
    7. '[' → logprob: -14.323637962341309
    8. '(v' → logprob: -14.761137962341309
    9. '1' → logprob: -14.823637962341309
    10. '   ' → logprob: -15.323637962341309

Token 911: '*v' (ID: 130438)
  Prédit: '*v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*v' → logprob: -0.38789165019989014
    2. '*' → logprob: -1.1378916501998901
    3. ' *' → logprob: -6.88789176940918
    4. '*u' → logprob: -17.51289176940918
    5. '*out' → logprob: -17.63789176940918
    6. '*object' → logprob: -17.88789176940918
    7. '*(' → logprob: -18.01289176940918
    8. '[v' → logprob: -18.13789176940918
    9. '**' → logprob: -18.51289176940918
    10. '*[' → logprob: -18.63789176940918

Token 912: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.40998875699006e-05
    2. ')
' → logprob: -9.75007438659668
    3. '   ' → logprob: -11.25007438659668
    4. ' )' → logprob: -13.37507438659668
    5. '       ' → logprob: -14.75007438659668
    6. '[' → logprob: -16.37507438659668
    7. '))' → logprob: -16.37507438659668
    8. '),' → logprob: -16.50007438659668
    9. '')' → logprob: -16.62507438659668
    10. ']' → logprob: -16.75007438659668

Token 913: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33272647857666016
    2. '
' → logprob: -1.7077264785766602
    3. '<|end|>' → logprob: -2.58272647857666
    4. '    
' → logprob: -4.58272647857666
    5. ')' → logprob: -5.95772647857666
    6. '	
' → logprob: -6.33272647857666
    7. ',' → logprob: -6.33272647857666
    8. '	return' → logprob: -6.58272647857666
    9. '<|end|>' → logprob: -6.70772647857666
    10. ' 
' → logprob: -6.70772647857666

Token 914: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3702264428138733
    2. '<|end|>' → logprob: -2.1202263832092285
    3. '
' → logprob: -2.8702263832092285
    4. ',' → logprob: -2.9952263832092285
    5. ')' → logprob: -3.1202263832092285
    6. '    
' → logprob: -4.4952263832092285
    7. ' ' → logprob: -4.7452263832092285
    8. '  
' → logprob: -5.4952263832092285
    9. '.' → logprob: -5.9952263832092285
    10. ' 
' → logprob: -6.1202263832092285

Token 915: ' flipping' (ID: 110780)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.10845448076725006
    2. '0' → logprob: -3.483454465866089
    3. '<|end|>' → logprob: -3.483454465866089
    4. '#' → logprob: -3.983454465866089
    5. ')' → logprob: -5.108454704284668
    6. '1' → logprob: -5.608454704284668
    7. ' diff' → logprob: -5.983454704284668
    8. 'def' → logprob: -6.108454704284668
    9. '<|end|>' → logprob: -6.483454704284668
    10. 'v' → logprob: -6.608454704284668

Token 916: ' gives' (ID: 8967)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 917: ' gain' (ID: 11621)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5957783460617065
    2. ' diff' → logprob: -1.0957783460617065
    3. ' a' → logprob: -2.970778465270996
    4. ' ' → logprob: -3.720778465270996
    5. ' +' → logprob: -4.970778465270996
    6. ' -' → logprob: -5.220778465270996
    7. ' the' → logprob: -5.220778465270996
    8. '"' → logprob: -6.095778465270996
    9. ' difference' → logprob: -6.345778465270996
    10. ' flip' → logprob: -6.595778465270996

Token 918: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31043457984924316
    2. '
' → logprob: -2.310434579849243
    3. '<|end|>' → logprob: -2.935434579849243
    4. ',' → logprob: -3.560434579849243
    5. '    
' → logprob: -3.935434579849243
    6. ' ' → logprob: -4.060434341430664
    7. 'return' → logprob: -4.685434341430664
    8. '<|end|>' → logprob: -4.810434341430664
    9. '  
' → logprob: -5.185434341430664
    10. ' 
' → logprob: -5.435434341430664

Token 919: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5324679017066956
    2. ''' → logprob: -2.032467842102051
    3. '"' → logprob: -2.157467842102051
    4. 'diff' → logprob: -2.532467842102051
    5. '1' → logprob: -3.782467842102051
    6. '0' → logprob: -3.782467842102051
    7. ' '' → logprob: -4.157467842102051
    8. ' diff' → logprob: -4.782467842102051
    9. ' "' → logprob: -5.657467842102051
    10. '`' → logprob: -5.907467842102051

Token 920: '1' (ID: 16)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.8172983527183533
    2. '1' → logprob: -1.067298412322998
    3. '-' → logprob: -1.567298412322998
    4. '(' → logprob: -6.692298412322998
    5. ' -' → logprob: -6.817298412322998
    6. '0' → logprob: -7.317298412322998
    7. ' diff' → logprob: -7.442298412322998
    8. '(diff' → logprob: -7.692298412322998
    9. ' ' → logprob: -8.06729793548584
    10. 'difference' → logprob: -8.31729793548584

Token 921: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2761344611644745
    2. '-' → logprob: -1.5261344909667969
    3. '<|end|>' → logprob: -3.776134490966797
    4. '<|end|>' → logprob: -8.401134490966797
    5. ' if' → logprob: -8.526134490966797
    6. '+' → logprob: -8.901134490966797
    7. ' ' → logprob: -8.901134490966797
    8. ',' → logprob: -9.401134490966797
    9. ')' → logprob: -10.151134490966797
    10. '	' → logprob: -10.651134490966797

Token 922: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005929393693804741
    2. ' ' → logprob: -5.130929470062256
    3. '  ' → logprob: -15.005928993225098
    4. '   ' → logprob: -15.755928993225098
    5. '```' → logprob: -16.255929946899414
    6. '`' → logprob: -16.505929946899414
    7. '0' → logprob: -17.255929946899414
    8. '    ' → logprob: -17.380929946899414
    9. 'v' → logprob: -17.568429946899414
    10. '-' → logprob: -17.755929946899414

Token 923: '*v' (ID: 130438)
  Prédit: '*v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*v' → logprob: -0.010973304510116577
    2. '*' → logprob: -4.6359734535217285
    3. ' *' → logprob: -6.7609734535217285
    4. 'v' → logprob: -9.76097297668457
    5. '*object' → logprob: -16.13597297668457
    6. '*out' → logprob: -16.13597297668457
    7. ' v' → logprob: -16.38597297668457
    8. '[v' → logprob: -16.51097297668457
    9. '*u' → logprob: -16.51097297668457
    10. '```' → logprob: -16.63597297668457

Token 924: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22756974399089813
    2. '
' → logprob: -2.352569818496704
    3. 'return' → logprob: -3.477569818496704
    4. '<|end|>' → logprob: -3.477569818496704
    5. '    
' → logprob: -4.477569580078125
    6. ' return' → logprob: -4.977569580078125
    7. ')' → logprob: -5.227569580078125
    8. '	return' → logprob: -5.352569580078125
    9. ',' → logprob: -5.727569580078125
    10. '  
' → logprob: -5.852569580078125

Token 925: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14775238931179047
    2. '
' → logprob: -2.147752285003662
    3. 'max' → logprob: -4.647752285003662
    4. 'for' → logprob: -5.147752285003662
    5. ' for' → logprob: -6.772752285003662
    6. '    
' → logprob: -7.147752285003662
    7. 'return' → logprob: -7.272752285003662
    8. 'i' → logprob: -7.647752285003662
    9. '```' → logprob: -7.772752285003662
    10. ',' → logprob: -7.897752285003662

Token 926: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06269190460443497
    2. 'prefix' → logprob: -3.4376919269561768
    3. 'n' → logprob: -4.437691688537598
    4. 'max' (adapté à ' max') → logprob: -4.812691688537598
    5. '
' → logprob: -6.062691688537598
    6. ' prefix' → logprob: -6.062691688537598
    7. ' n' → logprob: -6.562691688537598
    8. 'dp' → logprob: -7.187691688537598
    9. '    
' → logprob: -7.562691688537598
    10. 'pref' → logprob: -7.812691688537598

Token 927: '_gain' (ID: 99774)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003184233792126179
    2. '_so' → logprob: -8.75031852722168
    3. '_sub' → logprob: -9.12531852722168
    4. '_here' → logprob: -11.12531852722168
    5. '_diff' → logprob: -11.62531852722168
    6. '_gain' → logprob: -11.87531852722168
    7. '_current' → logprob: -12.00031852722168
    8. 'ending' → logprob: -12.62531852722168
    9. '_len' → logprob: -12.75031852722168
    10. '_sum' → logprob: -13.00031852722168

Token 928: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.056281913071870804
    2. '=' → logprob: -3.306281805038452
    3. ' =' → logprob: -4.056282043457031
    4. ',' → logprob: -8.431282043457031
    5. '_end' → logprob: -8.556282043457031
    6. '=_' → logprob: -9.056282043457031
    7. '_=' → logprob: -9.681282043457031
    8. '_sub' → logprob: -10.306282043457031
    9. '_so' → logprob: -10.931282043457031
    10. '_idx' → logprob: -10.931282043457031

Token 929: ' float' (ID: 4428)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.16026556491851807
    2. 'float' → logprob: -2.5352654457092285
    3. '-' → logprob: -2.7852654457092285
    4. '0' → logprob: -5.7852654457092285
    5. 'max' → logprob: -6.2852654457092285
    6. 'curr' → logprob: -7.2852654457092285
    7. 'cur' → logprob: -7.6602654457092285
    8. 'current' → logprob: -8.035265922546387
    9. ' diff' → logprob: -8.410265922546387
    10. 'None' → logprob: -9.160265922546387

Token 930: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.13423703610897064
    2. ''-' → logprob: -2.134237051010132
    3. '('' → logprob: -5.009236812591553
    4. '("-' → logprob: -8.134237289428711
    5. ''' → logprob: -8.759237289428711
    6. '"-' → logprob: -8.884237289428711
    7. '-inf' → logprob: -12.134237289428711
    8. '(' → logprob: -12.509237289428711
    9. ''s' → logprob: -13.634237289428711
    10. '['' → logprob: -13.759237289428711

Token 931: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.676292231422849e-05
    2. ''' → logprob: -11.500017166137695
    3. ''in' → logprob: -12.375017166137695
    4. 'in' → logprob: -14.125017166137695
    5. ''s' → logprob: -14.125017166137695
    6. '-inf' → logprob: -14.625017166137695
    7. '"' → logprob: -15.375017166137695
    8. ' inf' → logprob: -16.250017166137695
    9. 'info' → logprob: -16.750017166137695
    10. '_inf' → logprob: -16.875017166137695

Token 932: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.32940834760665894
    2. '')
' → logprob: -1.5794084072113037
    3. ')' → logprob: -2.7044084072113037
    4. ')
' → logprob: -4.954408168792725
    5. '   ' → logprob: -8.079408645629883
    6. ',' → logprob: -8.954408645629883
    7. '
' → logprob: -9.954408645629883
    8. 'max' → logprob: -10.079408645629883
    9. ' ')
' → logprob: -11.704408645629883
    10. '")' → logprob: -11.954408645629883

Token 933: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07524850219488144
    2. '_' → logprob: -3.4502484798431396
    3. '
' → logprob: -4.325248718261719
    4. 'max' → logprob: -4.950248718261719
    5. ' _' → logprob: -5.325248718261719
    6. ',' → logprob: -6.200248718261719
    7. ' =' → logprob: -6.325248718261719
    8. ' max' → logprob: -6.325248718261719
    9. '_max' → logprob: -6.825248718261719
    10. '```' → logprob: -6.950248718261719

Token 934: ' current' (ID: 2208)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8295320868492126
    2. 'current' (adapté à ' current') → logprob: -1.4545321464538574
    3. 'start' → logprob: -1.8295321464538574
    4. ' current' → logprob: -2.2045321464538574
    5. ' max' → logprob: -3.8295321464538574
    6. ' start' → logprob: -4.454532146453857
    7. 'curr' → logprob: -4.829532146453857
    8. 'cur' → logprob: -5.204532146453857
    9. 'left' → logprob: -5.704532146453857
    10. ' curr' → logprob: -5.829532146453857

Token 935: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004272138699889183
    2. '_max' → logprob: -5.504271984100342
    3. '_gain' → logprob: -9.5042724609375
    4. '_sum' → logprob: -10.1292724609375
    5. '_token' → logprob: -10.3792724609375
    6. '_length' → logprob: -11.3792724609375
    7. '```' → logprob: -11.5042724609375
    8. '_end' → logprob: -12.0042724609375
    9. '_len' → logprob: -13.0042724609375
    10. '_value' → logprob: -13.1292724609375

Token 936: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006718054646626115
    2. 'float' → logprob: -7.625671863555908
    3. ' ' → logprob: -9.37567138671875
    4. 'diff' → logprob: -9.37567138671875
    5. '-' → logprob: -11.37567138671875
    6. ' float' → logprob: -13.12567138671875
    7. 'max' → logprob: -15.37567138671875
    8. 'None' → logprob: -15.75067138671875
    9. ' -' → logprob: -16.37567138671875
    10. ' diff' → logprob: -16.50067138671875

Token 937: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028744153678417206
    2. 'float' → logprob: -5.877874374389648
    3. 'diff' → logprob: -9.752874374389648
    4. '-' → logprob: -11.877874374389648
    5. ' ' → logprob: -12.877874374389648
    6. ' float' → logprob: -13.627874374389648
    7. 'None' → logprob: -14.627874374389648
    8. 'max' → logprob: -15.752874374389648
    9. '1' → logprob: -16.87787437438965
    10. '-d' → logprob: -17.62787437438965

Token 938: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7174270749092102
    2. 'for' → logprob: -1.0924270153045654
    3. '   ' → logprob: -2.2174270153045654
    4. '
' → logprob: -3.0924270153045654
    5. '	for' → logprob: -4.5924272537231445
    6. ' 
' → logprob: -5.5924272537231445
    7. 'max' → logprob: -6.3424272537231445
    8. '<|end|>' → logprob: -6.8424272537231445
    9. ',' → logprob: -6.9674272537231445
    10. '  
' → logprob: -7.5924272537231445

Token 939: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7208964228630066
    2. 'for' → logprob: -0.9708964228630066
    3. '   ' → logprob: -2.7208964824676514
    4. '	for' → logprob: -3.0958964824676514
    5. 'max' → logprob: -4.470896244049072
    6. ' max' → logprob: -5.970896244049072
    7. '	max' → logprob: -5.970896244049072
    8. '```' → logprob: -6.220896244049072
    9. ',' → logprob: -6.595896244049072
    10. '
' → logprob: -7.095896244049072

Token 940: ' min' (ID: 1349)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7956094145774841
    2. 'for' → logprob: -1.295609474182129
    3. 'max' → logprob: -1.295609474182129
    4. '   ' → logprob: -6.920609474182129
    5. 'left' → logprob: -9.545609474182129
    6. ' max' → logprob: -9.545609474182129
    7. ' for' → logprob: -9.795609474182129
    8. ' start' → logprob: -10.920609474182129
    9. 'best' → logprob: -11.295609474182129
    10. 'temp' → logprob: -12.670609474182129

Token 941: '_pre' (ID: 18599)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025159500539302826
    2. '_idx' → logprob: -4.0251593589782715
    3. '_current' → logprob: -5.9001593589782715
    4. '_val' → logprob: -6.0251593589782715
    5. '_index' → logprob: -7.0251593589782715
    6. '_=' → logprob: -8.02515983581543
    7. '_token' → logprob: -8.65015983581543
    8. '_prefix' → logprob: -9.15015983581543
    9. '_value' → logprob: -9.27515983581543
    10. '_
' → logprob: -10.40015983581543

Token 942: ' =' (ID: 314)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.014780938625335693
    2. 'f' → logprob: -4.7647809982299805
    3. ' fix' → logprob: -6.0147809982299805
    4. '=' → logprob: -7.0147809982299805
    5. '_fix' → logprob: -7.0147809982299805
    6. 'sum' → logprob: -7.5147809982299805
    7. 's' → logprob: -8.01478099822998
    8. ' =' → logprob: -8.01478099822998
    9. '```' → logprob: -8.76478099822998
    10. 'd' → logprob: -9.13978099822998

Token 943: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010008628305513412
    2. ' ' → logprob: -9.375100135803223
    3. 'current' → logprob: -11.125100135803223
    4. 'float' → logprob: -15.750100135803223
    5. ' current' → logprob: -16.625099182128906
    6. '   ' → logprob: -17.250099182128906
    7. '-' → logprob: -18.500099182128906
    8. 'min' → logprob: -19.000099182128906
    9. '000' → logprob: -19.125099182128906
    10. '=' → logprob: -19.250099182128906

Token 944: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'current' → logprob: -15.375003814697266
    4. 'float' → logprob: -19.375003814697266
    5. '
' → logprob: -19.750003814697266
    6. '000' → logprob: -20.125003814697266
    7. '{' → logprob: -20.500003814697266
    8. '```' → logprob: -20.500003814697266
    9. '[' → logprob: -20.875003814697266
    10. '100' → logprob: -21.000003814697266

Token 945: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45767369866371155
    2. ' for' → logprob: -1.5826736688613892
    3. '
' → logprob: -2.7076737880706787
    4. 'max' → logprob: -3.0826737880706787
    5. ' max' → logprob: -3.8326737880706787
    6. ' 
' → logprob: -4.2076735496521
    7. ',' → logprob: -5.9576735496521
    8. '   ' → logprob: -6.0826735496521
    9. '<|end|>' → logprob: -6.4576735496521
    10. '=' → logprob: -6.7076735496521

Token 946: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5406405329704285
    2. 'for' → logprob: -1.4156405925750732
    3. ' for' → logprob: -2.0406405925750732
    4. 'max' → logprob: -3.2906405925750732
    5. ' max' → logprob: -5.290640354156494
    6. '
' → logprob: -6.665640354156494
    7. '```' → logprob: -7.040640354156494
    8. ',' → logprob: -9.165640830993652
    9. '	for' → logprob: -9.290640830993652
    10. 'i' → logprob: -9.915640830993652

Token 947: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3895816206932068
    2. ' for' → logprob: -1.3895816802978516
    3. 'max' (adapté à ' max') → logprob: -2.7645816802978516
    4. ' max' → logprob: -4.639581680297852
    5. '   ' → logprob: -7.639581680297852
    6. 'res' → logprob: -9.389581680297852
    7. ' res' → logprob: -9.639581680297852
    8. '```' → logprob: -9.764581680297852
    9. '
' → logprob: -10.264581680297852
    10. 'i' → logprob: -10.889581680297852

Token 948: '_gain' (ID: 99774)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06471932679414749
    2. '_pre' → logprob: -3.4397194385528564
    3. '_current' → logprob: -3.8147194385528564
    4. '_length' → logprob: -5.939719200134277
    5. '_so' → logprob: -6.564719200134277
    6. '_end' → logprob: -6.939719200134277
    7. '=' → logprob: -7.439719200134277
    8. '_len' → logprob: -7.689719200134277
    9. '_prefix' → logprob: -8.189719200134277
    10. '_here' → logprob: -8.564719200134277

Token 949: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47568967938423157
    2. ' +=' → logprob: -1.6006896495819092
    3. ' =' → logprob: -1.8506896495819092
    4. '+=' → logprob: -3.975689649581909
    5. '+' → logprob: -8.225689888000488
    6. ',' → logprob: -8.350689888000488
    7. ' ' → logprob: -8.850689888000488
    8. ' ,' → logprob: -9.475689888000488
    9. '_' → logprob: -10.100689888000488
    10. ' +' → logprob: -10.100689888000488

Token 950: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9945847988128662
    2. 'float' → logprob: -0.9945847988128662
    3. 'diff' → logprob: -1.7445847988128662
    4. '-' → logprob: -3.119584798812866
    5. ' float' → logprob: -3.994584798812866
    6. 'max' → logprob: -4.369585037231445
    7. ' ' → logprob: -5.369585037231445
    8. '1' → logprob: -6.369585037231445
    9. ' -' → logprob: -6.619585037231445
    10. ' diff' → logprob: -7.119585037231445

Token 951: '0' (ID: 15)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.39150652289390564
    2. '0' → logprob: -1.391506552696228
    3. 'diff' → logprob: -2.8915064334869385
    4. '-' → logprob: -4.516506671905518
    5. 'max' → logprob: -5.141506671905518
    6. 'current' → logprob: -6.016506671905518
    7. ' float' → logprob: -8.51650619506836
    8. '1' → logprob: -8.51650619506836
    9. 'None' → logprob: -11.14150619506836
    10. '-d' → logprob: -11.26650619506836

Token 952: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8134910464286804
    2. '
' → logprob: -1.1884911060333252
    3. ' for' → logprob: -1.5634911060333252
    4. '   ' → logprob: -3.313491106033325
    5. ',' → logprob: -6.438490867614746
    6. '+' → logprob: -6.688490867614746
    7. ' 
' → logprob: -6.938490867614746
    8. ',
' → logprob: -7.188490867614746
    9. '+
' → logprob: -7.813490867614746
    10. 'max' → logprob: -8.688490867614746

Token 953: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.529245138168335
    2. ' for' → logprob: -0.904245138168335
    3. '
' → logprob: -5.654245376586914
    4. '   ' → logprob: -6.154245376586914
    5. ' 
' → logprob: -9.154245376586914
    6. '```' → logprob: -9.279245376586914
    7. ' ' → logprob: -10.279245376586914
    8. ',' → logprob: -10.279245376586914
    9. 'max' → logprob: -10.404245376586914
    10. '	for' → logprob: -10.529245376586914

Token 954: ' pre' (ID: 876)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10649363696575165
    2. 'prefix' → logprob: -3.2314937114715576
    3. 'max' → logprob: -3.4814937114715576
    4. 'start' → logprob: -3.7314937114715576
    5. 'left' → logprob: -5.9814934730529785
    6. 'pre' (adapté à ' pre') → logprob: -6.2314934730529785
    7. 'length' → logprob: -7.2314934730529785
    8. ' for' → logprob: -7.4814934730529785
    9. 'res' → logprob: -8.356493949890137
    10. '   ' → logprob: -8.481493949890137

Token 955: '_sum' (ID: 29859)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.1511656045913696
    2. 'sum' → logprob: -1.1511656045913696
    3. '_sum' → logprob: -1.2761656045913696
    4. 'fix' → logprob: -3.52616548538208
    5. '_' → logprob: -3.52616548538208
    6. ' =' → logprob: -5.27616548538208
    7. 's' → logprob: -5.40116548538208
    8. ' +=' → logprob: -5.77616548538208
    9. '```' → logprob: -5.77616548538208
    10. '=' → logprob: -5.77616548538208

Token 956: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3999681770801544
    2. ' =' → logprob: -1.149968147277832
    3. ' +=' → logprob: -4.524968147277832
    4. '+=' → logprob: -6.524968147277832
    5. '+' → logprob: -8.024968147277832
    6. '_' → logprob: -8.649968147277832
    7. ' +' → logprob: -9.274968147277832
    8. '=[]' → logprob: -10.399968147277832
    9. '[' → logprob: -10.774968147277832
    10. ' ' → logprob: -11.149968147277832

Token 957: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001637300301808864
    2. '[' → logprob: -9.000164031982422
    3. ' ' → logprob: -10.125164031982422
    4. ' [' → logprob: -15.500164031982422
    5. '[]' → logprob: -19.125164031982422
    6. '   ' → logprob: -19.500164031982422
    7. '=' → logprob: -20.125164031982422
    8. '00' → logprob: -20.375164031982422
    9. '۰' → logprob: -20.500164031982422
    10. '[start' → logprob: -20.750164031982422

Token 958: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004082554951310158
    2. '[' → logprob: -5.504082679748535
    3. ' ' → logprob: -12.629082679748535
    4. ' [' → logprob: -14.504082679748535
    5. '{' → logprob: -15.754082679748535
    6. '[]' → logprob: -16.50408172607422
    7. '```' → logprob: -16.87908172607422
    8. '[]
' → logprob: -17.37908172607422
    9. '[int' → logprob: -17.75408172607422
    10. '=' → logprob: -18.75408172607422

Token 959: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3365722894668579
    2. ' for' → logprob: -1.836572289466858
    3. 'for' → logprob: -2.0865721702575684
    4. '
' → logprob: -7.211572170257568
    5. '	for' → logprob: -7.336572170257568
    6. '\n' → logprob: -8.586572647094727
    7. '+' → logprob: -8.586572647094727
    8. ' 
' → logprob: -9.086572647094727
    9. ' +' → logprob: -9.461572647094727
    10. ',' → logprob: -10.211572647094727

Token 960: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22204940021038055
    2. 'for' → logprob: -2.3470494747161865
    3. '   ' → logprob: -2.4720494747161865
    4. '	for' → logprob: -4.222049236297607
    5. '```' → logprob: -5.722049236297607
    6. ' 
' → logprob: -8.097049713134766
    7. '
' → logprob: -8.722049713134766
    8. '\n' → logprob: -8.972049713134766
    9. ',' → logprob: -9.597049713134766
    10. ' ' → logprob: -9.972049713134766

Token 961: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002611924894154072
    2. ' for' → logprob: -6.002612113952637
    3. '   ' → logprob: -9.002612113952637
    4. '```' → logprob: -11.377612113952637
    5. '	for' → logprob: -14.127612113952637
    6. '
' → logprob: -14.377612113952637
    7. 'i' → logprob: -15.502612113952637
    8. 'max' → logprob: -16.00261116027832
    9. '       ' → logprob: -17.37761116027832
    10. '``' → logprob: -17.87761116027832

Token 962: ' d' (ID: 272)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4918127954006195
    2. 'v' → logprob: -0.9918128252029419
    3. 'i' → logprob: -4.241812705993652
    4. 'd' → logprob: -6.741812705993652
    5. 'diff' → logprob: -7.116812705993652
    6. ' x' → logprob: -7.366812705993652
    7. 'val' → logprob: -8.366812705993652
    8. ' v' → logprob: -8.616812705993652
    9. 'num' → logprob: -9.241812705993652
    10. ' i' → logprob: -10.116812705993652

Token 963: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008707226254045963
    2. 'in' → logprob: -4.758707046508789
    3. ' ' → logprob: -10.383707046508789
    4. 'i' → logprob: -11.633707046508789
    5. ' +=' → logprob: -11.883707046508789
    6. '_' → logprob: -12.133707046508789
    7. ',' → logprob: -12.133707046508789
    8. '+' → logprob: -12.133707046508789
    9. 'd' → logprob: -12.508707046508789
    10. ' i' → logprob: -12.883707046508789

Token 964: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00020509003661572933
    2. ' diff' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.250205039978027
    4. '	diff' → logprob: -14.500205039978027
    5. 'd' → logprob: -16.375205993652344
    6. 'dif' → logprob: -16.500205993652344
    7. '[' → logprob: -16.625205993652344
    8. ' ' → logprob: -16.875205993652344
    9. '(diff' → logprob: -17.750205993652344
    10. '  ' → logprob: -17.875205993652344

Token 965: ':
' (ID: 734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9407990574836731
    2. ' +' → logprob: -1.4407989978790283
    3. ':' → logprob: -1.5657989978790283
    4. ':
' → logprob: -2.4407989978790283
    5. ' +=' → logprob: -2.8157989978790283
    6. '   ' → logprob: -4.315799236297607
    7. '+=' → logprob: -6.065799236297607
    8. '       ' → logprob: -7.440799236297607
    9. '+:' → logprob: -8.56579875946045
    10. '=' → logprob: -8.69079875946045

Token 966: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031699295504949987
    2. ' pre' → logprob: -8.375316619873047
    3. '   ' → logprob: -10.125316619873047
    4. 'pre' → logprob: -10.250316619873047
    5. '    ' → logprob: -13.000316619873047
    6. '```' → logprob: -13.250316619873047
    7. '        
' → logprob: -13.375316619873047
    8. '
' → logprob: -14.000316619873047
    9. '	pre' → logprob: -14.000316619873047
    10. '           ' → logprob: -14.500316619873047

Token 967: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' (adapté à ' pre') → logprob: -0.004740791395306587
    2. ' pre' → logprob: -5.5047407150268555
    3. '   ' → logprob: -7.5047407150268555
    4. 'current' → logprob: -9.754740715026855
    5. '       ' → logprob: -10.004740715026855
    6. '	pre' → logprob: -12.254740715026855
    7. ' current' → logprob: -13.129740715026855
    8. '```' → logprob: -13.504740715026855
    9. 'if' → logprob: -16.129741668701172
    10. '``' → logprob: -16.504741668701172

Token 968: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00010008628305513412
    2. '_' → logprob: -9.375100135803223
    3. 'sum' → logprob: -11.375100135803223
    4. ' _' → logprob: -13.125100135803223
    5. '__' → logprob: -14.875100135803223
    6. '```' → logprob: -15.125100135803223
    7. '_SUM' → logprob: -15.250100135803223
    8. '+' → logprob: -15.250100135803223
    9. '_s' → logprob: -16.000099182128906
    10. '\' → logprob: -16.625099182128906

Token 969: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04358607158064842
    2. ' +=' → logprob: -3.543586015701294
    3. '=' → logprob: -4.293586254119873
    4. ' =' → logprob: -9.543585777282715
    5. '=max' → logprob: -11.668585777282715
    6. ']+=' → logprob: -13.043585777282715
    7. '+' → logprob: -13.418585777282715
    8. '+=(' → logprob: -16.04358673095703
    9. '+='' → logprob: -16.04358673095703
    10. 'max' → logprob: -16.29358673095703

Token 970: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.15310683415737e-05
    2. ' d' → logprob: -10.750021934509277
    3. '	d' → logprob: -21.62502098083496
    4. '   ' → logprob: -22.25002098083496
    5. '```' → logprob: -22.25002098083496
    6. ' ' → logprob: -23.25002098083496
    7. '0' → logprob: -23.37502098083496
    8. '$d' → logprob: -23.75002098083496
    9. ' ' → logprob: -24.37502098083496
    10. '_d' → logprob: -24.37502098083496

Token 971: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04440650716423988
    2. 'if' → logprob: -3.7944064140319824
    3. ' if' → logprob: -3.9194064140319824
    4. '=' → logprob: -7.169406414031982
    5. ' =' → logprob: -9.04440689086914
    6. 'pre' → logprob: -9.29440689086914
    7. ',' → logprob: -10.29440689086914
    8. '   ' → logprob: -11.29440689086914
    9. 'current' → logprob: -11.29440689086914
    10. '```' → logprob: -11.66940689086914

Token 972: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014728360110893846
    2. ' if' → logprob: -9.250146865844727
    3. 'if' → logprob: -10.000146865844727
    4. '	' → logprob: -13.000146865844727
    5. '```' → logprob: -13.375146865844727
    6. ',' → logprob: -14.500146865844727
    7. 'pre' → logprob: -14.500146865844727
    8. '   ' → logprob: -14.625146865844727
    9. ' ' → logprob: -16.000146865844727
    10. '=' → logprob: -17.000146865844727

Token 973: ' max' (ID: 2999)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6406480669975281
    2. 'min' → logprob: -1.1406481266021729
    3. 'max' (adapté à ' max') → logprob: -1.8906481266021729
    4. '       ' → logprob: -7.015647888183594
    5. 'current' → logprob: -7.015647888183594
    6. '   ' → logprob: -8.015647888183594
    7. ' if' → logprob: -8.890647888183594
    8. 'pre' → logprob: -9.390647888183594
    9. 'temp' → logprob: -10.265647888183594
    10. ' min' → logprob: -10.515647888183594

Token 974: '_gain' (ID: 99774)
  Prédit: '_gain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gain' → logprob: -0.0007649566978216171
    2. '_sum' → logprob: -7.375764846801758
    3. '_' → logprob: -10.500764846801758
    4. 'gain' → logprob: -11.000764846801758
    5. '```' → logprob: -11.500764846801758
    6. '\' → logprob: -11.625764846801758
    7. '_gap' → logprob: -11.750764846801758
    8. '_max' → logprob: -11.875764846801758
    9. '_GAIN' → logprob: -12.125764846801758
    10. '_loss' → logprob: -12.250764846801758

Token 975: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2015281468629837
    2. ' =' → logprob: -1.7015281915664673
    3. '=max' → logprob: -9.076528549194336
    4. '   ' → logprob: -14.951528549194336
    5. 'max' → logprob: -15.701528549194336
    6. '	' → logprob: -17.076528549194336
    7. '    ' → logprob: -18.451528549194336
    8. ',' → logprob: -18.451528549194336
    9. ' ' → logprob: -18.701528549194336
    10. '```' → logprob: -18.826528549194336

Token 976: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2519310414791107
    2. 'max' → logprob: -1.501931071281433
    3. '	max' → logprob: -13.376931190490723
    4. '(max' → logprob: -16.001930236816406
    5. '=max' → logprob: -16.001930236816406
    6. '   ' → logprob: -16.126930236816406
    7. ' ' → logprob: -17.501930236816406
    8. '[max' → logprob: -17.751930236816406
    9. ' ' → logprob: -18.251930236816406
    10. 'pre' → logprob: -18.376930236816406

Token 977: '(max' (ID: 17178)
  Prédit: '(pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pre' → logprob: -0.31582728028297424
    2. '(max' → logprob: -1.3158272504806519
    3. '(' → logprob: -6.065827369689941
    4. 'max' → logprob: -8.815827369689941
    5. 'pre' → logprob: -9.315827369689941
    6. ' max' → logprob: -14.190827369689941
    7. '(
' → logprob: -14.190827369689941
    8. ',max' → logprob: -14.565827369689941
    9. ' (' → logprob: -14.940827369689941
    10. ' pre' → logprob: -14.940827369689941

Token 978: '_gain' (ID: 99774)
  Prédit: '_gain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gain' → logprob: -9.066919301403686e-05
    2. '_sum' → logprob: -9.875090599060059
    3. 'Gain' → logprob: -10.875090599060059
    4. 'gain' → logprob: -12.125090599060059
    5. '_GAIN' → logprob: -12.250090599060059
    6. '(' → logprob: -12.375090599060059
    7. '(pre' → logprob: -13.750090599060059
    8. '\' → logprob: -13.750090599060059
    9. ' Gain' → logprob: -14.625090599060059
    10. ')' → logprob: -14.625090599060059

Token 979: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006783931516110897
    2. ' ,' → logprob: -5.006783962249756
    3. 'pre' → logprob: -10.381783485412598
    4. '(pre' → logprob: -11.381783485412598
    5. ' pre' → logprob: -11.881783485412598
    6. ',p' → logprob: -11.881783485412598
    7. ',max' → logprob: -12.006783485412598
    8. ',
' → logprob: -12.506783485412598
    9. '0' → logprob: -14.256783485412598
    10. '_,' → logprob: -15.131783485412598

Token 980: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.3134326934814453
    2. ' pre' → logprob: -1.3134326934814453
    3. '       ' → logprob: -9.063432693481445
    4. '(pre' → logprob: -10.188432693481445
    5. '           ' → logprob: -12.063432693481445
    6. '	pre' → logprob: -12.938432693481445
    7. '        ' → logprob: -13.313432693481445
    8. '         ' → logprob: -13.438432693481445
    9. '   ' → logprob: -13.563432693481445
    10. ' ' → logprob: -13.938432693481445

Token 981: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.320199877838604e-07
    2. 'sum' → logprob: -15.5
    3. '__' → logprob: -16.625
    4. '_' → logprob: -16.875
    5. '```' → logprob: -17.625
    6. '_SUM' → logprob: -17.75
    7. '_s' → logprob: -18.0
    8. '_sub' → logprob: -18.625
    9. ' _' → logprob: -19.0
    10. '+' → logprob: -19.125

Token 982: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004794999957084656
    2. '-' → logprob: -6.004795074462891
    3. ')' → logprob: -6.504795074462891
    4. '<|end|>' → logprob: -7.254795074462891
    5. ' )' → logprob: -10.62979507446289
    6. '```' → logprob: -10.75479507446289
    7. ',' → logprob: -10.87979507446289
    8. '),' → logprob: -11.37979507446289
    9. ' ' → logprob: -12.00479507446289
    10. ' ' → logprob: -12.25479507446289

Token 983: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.2729995988775045e-06
    2. ' min' → logprob: -12.000006675720215
    3. '	min' → logprob: -17.2500057220459
    4. '[min' → logprob: -19.1250057220459
    5. '(min' → logprob: -19.2500057220459
    6. '```' → logprob: -19.5000057220459
    7. 'minimum' → logprob: -20.2500057220459
    8. 'minimal' → logprob: -20.8750057220459
    9. '_min' → logprob: -21.2500057220459
    10. '=min' → logprob: -21.3750057220459

Token 984: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -6.718606891809031e-05
    2. '_' → logprob: -9.750066757202148
    3. '\' → logprob: -12.625066757202148
    4. '```' → logprob: -13.500066757202148
    5. ' _' → logprob: -13.750066757202148
    6. 'pre' → logprob: -14.250066757202148
    7. '_pr' → logprob: -14.500066757202148
    8. '_p' → logprob: -14.625066757202148
    9. '_pres' → logprob: -14.625066757202148
    10. '	pre' → logprob: -15.750066757202148

Token 985: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08716082572937012
    2. ')
' → logprob: -3.08716082572937
    3. '       ' → logprob: -3.46216082572937
    4. '```' → logprob: -5.337161064147949
    5. '   ' → logprob: -7.712161064147949
    6. '
' → logprob: -8.21216106414795
    7. ' )' → logprob: -8.58716106414795
    8. '``' → logprob: -9.08716106414795
    9. '<|end|>' → logprob: -9.08716106414795
    10. '           ' → logprob: -9.21216106414795

Token 986: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.8351892473874614e-05
    2. '   ' → logprob: -10.250048637390137
    3. '```' → logprob: -11.625048637390137
    4. 'min' → logprob: -12.750048637390137
    5. 'if' → logprob: -14.750048637390137
    6. '           ' → logprob: -15.250048637390137
    7. '
' → logprob: -16.50004768371582
    8. ' if' → logprob: -16.75004768371582
    9. '	' → logprob: -17.00004768371582
    10. ',' → logprob: -17.25004768371582

Token 987: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.0160959605127573
    2. ' min' → logprob: -4.516096115112305
    3. '   ' → logprob: -6.016096115112305
    4. '       ' → logprob: -6.141096115112305
    5. 'if' → logprob: -8.141096115112305
    6. ' if' → logprob: -9.016096115112305
    7. '	min' → logprob: -11.016096115112305
    8. '           ' → logprob: -11.641096115112305
    9. '```' → logprob: -13.391096115112305
    10. '(min' → logprob: -13.891096115112305

Token 988: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -0.00012154294381616637
    2. '_' → logprob: -9.375121116638184
    3. '```' → logprob: -11.500121116638184
    4. '\' → logprob: -11.750121116638184
    5. '=_' → logprob: -12.000121116638184
    6. ' _' → logprob: -12.125121116638184
    7. '_re' → logprob: -13.750121116638184
    8. '__' → logprob: -13.750121116638184
    9. '(_' → logprob: -13.875121116638184
    10. '_min' → logprob: -14.250121116638184

Token 989: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048590321093797684
    2. ' =' → logprob: -3.0485904216766357
    3. '=min' → logprob: -13.048590660095215
    4. '_=' → logprob: -15.173590660095215
    5. '=
' → logprob: -15.798590660095215
    6. '=max' → logprob: -16.1735897064209
    7. '```' → logprob: -16.1735897064209
    8. '   ' → logprob: -16.7985897064209
    9. '.=' → logprob: -16.9235897064209
    10. '	' → logprob: -18.4235897064209

Token 990: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.022788923233747482
    2. ' min' → logprob: -4.022789001464844
    3. 'pre' → logprob: -5.772789001464844
    4. 'max' → logprob: -6.522789001464844
    5. ' pre' → logprob: -10.147789001464844
    6. ' max' → logprob: -11.772789001464844
    7. '	min' → logprob: -14.897789001464844
    8. 'minimum' → logprob: -16.147789001464844
    9. 'm' → logprob: -16.522789001464844
    10. 'mini' → logprob: -16.897789001464844

Token 991: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0007500672363676131
    2. '(pre' → logprob: -7.2507500648498535
    3. '(' → logprob: -10.750750541687012
    4. 'min' → logprob: -11.000750541687012
    5. 'pre' → logprob: -13.500750541687012
    6. '(max' → logprob: -15.500750541687012
    7. ' min' → logprob: -15.625750541687012
    8. ' (' → logprob: -16.250749588012695
    9. '=min' → logprob: -16.375749588012695
    10. '_min' → logprob: -17.500749588012695

Token 992: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -0.00012451570364646614
    2. 'pre' → logprob: -9.00012493133545
    3. '(pre' → logprob: -14.25012493133545
    4. '	pre' → logprob: -15.00012493133545
    5. 'preter' → logprob: -17.000123977661133
    6. '_per' → logprob: -17.500123977661133
    7. ' pre' → logprob: -17.750123977661133
    8. '_pr' → logprob: -18.250123977661133
    9. 'e' → logprob: -18.250123977661133
    10. '_pres' → logprob: -18.625123977661133

Token 993: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013615436619147658
    2. ' ,' → logprob: -6.62636137008667
    3. ',d' → logprob: -10.376361846923828
    4. ',min' → logprob: -13.251361846923828
    5. ',
' → logprob: -13.501361846923828
    6. ',p' → logprob: -14.126361846923828
    7. 'pre' → logprob: -15.626361846923828
    8. '_,' → logprob: -16.376361846923828
    9. '(pre' → logprob: -16.376361846923828
    10. '```' → logprob: -16.751361846923828

Token 994: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.001170225441455841
    2. ' pre' → logprob: -6.7511701583862305
    3. '(pre' → logprob: -17.626171112060547
    4. '	pre' → logprob: -19.626171112060547
    5. 'pref' → logprob: -23.626171112060547
    6. 'p' → logprob: -23.751171112060547
    7. 'pread' → logprob: -24.001171112060547
    8. '_pre' → logprob: -24.251171112060547
    9. ' ' → logprob: -24.376171112060547
    10. '   ' → logprob: -25.126171112060547

Token 995: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.704273118884885e-07
    2. 'sum' → logprob: -14.250000953674316
    3. 'Sum' → logprob: -19.125
    4. '_SUM' → logprob: -19.5
    5. '```' → logprob: -19.875
    6. '_' → logprob: -20.75
    7. 'psum' → logprob: -21.0
    8. '\' → logprob: -21.0
    9. '__' → logprob: -21.125
    10. '=' → logprob: -21.25

Token 996: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009303949191235006
    2. ')
' → logprob: -7.125930309295654
    3. '<|end|>' → logprob: -9.375930786132812
    4. ' )' → logprob: -11.375930786132812
    5. '       ' → logprob: -11.500930786132812
    6. '   ' → logprob: -11.750930786132812
    7. '```' → logprob: -12.625930786132812
    8. '+' → logprob: -12.750930786132812
    9. '<|end|>' → logprob: -13.625930786132812
    10. '')' → logprob: -13.875930786132812

Token 997: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28504478931427
    2. '
' → logprob: -1.41004478931427
    3. '    
' → logprob: -6.1600446701049805
    4. 'return' → logprob: -6.5350446701049805
    5. 'max' → logprob: -8.91004467010498
    6. '```' → logprob: -9.78504467010498
    7. ' return' → logprob: -10.28504467010498
    8. '        
' → logprob: -10.41004467010498
    9. '  
' → logprob: -11.53504467010498
    10. 'if' → logprob: -11.78504467010498

Token 998: ' return' (ID: 622)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.2882383465766907
    2. '   ' → logprob: -1.538238286972046
    3. 'return' (adapté à ' return') → logprob: -4.788238525390625
    4. '#' → logprob: -5.413238525390625
    5. 'left' → logprob: -5.413238525390625
    6. 'max' → logprob: -5.538238525390625
    7. 'length' → logprob: -5.913238525390625
    8. 'pre' → logprob: -5.913238525390625
    9. '
' → logprob: -5.913238525390625
    10. ' prefix' → logprob: -6.163238525390625

Token 999: ' base' (ID: 3611)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04862279072403908
    2. 'base' → logprob: -3.0486228466033936
    3. ' max' → logprob: -10.423623085021973
    4. ' base' → logprob: -12.923623085021973
    5. '(max' → logprob: -13.923623085021973
    6. 'min' → logprob: -14.048623085021973
    7. '(base' → logprob: -14.173623085021973
    8. '[max' → logprob: -14.173623085021973
    9. '
' → logprob: -17.173622131347656
    10. '   ' → logprob: -18.173622131347656

Token 1000: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -3.173704271830502e-06
    2. 'max' → logprob: -13.37500286102295
    3. '```' → logprob: -14.37500286102295
    4. '_alt' → logprob: -15.50000286102295
    5. '_len' → logprob: -15.62500286102295
    6. '\' → logprob: -16.125003814697266
    7. ' _' → logprob: -16.250003814697266
    8. '_' → logprob: -16.375003814697266
    9. '_MAX' → logprob: -16.500003814697266
    10. '_min' → logprob: -17.000003814697266

Token 1001: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1002: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.018151817843317986
    2. ' max' → logprob: -4.018151760101318
    3. '(max' → logprob: -13.268152236938477
    4. '1' → logprob: -16.893152236938477
    5. '[max' → logprob: -17.018152236938477
    6. '	max' → logprob: -17.643152236938477
    7. ' ' → logprob: -17.768152236938477
    8. 'min' → logprob: -18.268152236938477
    9. 'int' → logprob: -18.393152236938477
    10. '   ' → logprob: -19.018152236938477

Token 1003: '_gain' (ID: 99774)
  Prédit: '_gain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gain' → logprob: -1.1472419600977446e-06
    2. '\' → logprob: -14.625000953674316
    3. 'Gain' → logprob: -14.875000953674316
    4. '(_' → logprob: -16.500001907348633
    5. '_gap' → logprob: -16.625001907348633
    6. '_GAIN' → logprob: -16.625001907348633
    7. '_growth' → logprob: -18.375001907348633
    8. '(' → logprob: -19.000001907348633
    9. '```' → logprob: -19.250001907348633
    10. '_loss' → logprob: -19.625001907348633

Token 1004: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1005: '#' (ID: 2)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1954892873764038
    2. 'print' → logprob: -2.0704894065856934
    3. 'result' → logprob: -3.3204894065856934
    4. 'ans' → logprob: -4.820489406585693
    5. 'answer' → logprob: -5.320489406585693
    6. 'max' → logprob: -6.945489406585693
    7. 'flip' → logprob: -7.195489406585693
    8. '#' → logprob: -7.820489406585693
    9. '
' → logprob: -9.195488929748535
    10. 'final' → logprob: -9.695488929748535

Token 1006: ' Compute' (ID: 45438)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.24207943677902222
    2. 'ans' → logprob: -1.742079496383667
    3. 'result' → logprob: -3.492079496383667
    4. 'answer' → logprob: -4.867079257965088
    5. 'print' → logprob: -6.617079257965088
    6. 'flip' → logprob: -8.117079734802246
    7. 'final' → logprob: -10.242079734802246
    8. '#' → logprob: -10.742079734802246
    9. 'fl' → logprob: -11.867079734802246
    10. 'ret' → logprob: -12.117079734802246

Token 1007: ' result' (ID: 1534)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8162426948547363
    2. 'print' → logprob: -1.3162426948547363
    3. 'ans' → logprob: -1.3162426948547363
    4. 'result' → logprob: -4.066242694854736
    5. 'answer' → logprob: -5.441242694854736
    6. '```' → logprob: -9.566242218017578
    7. 'r' → logprob: -10.691242218017578
    8. '(ans' → logprob: -11.191242218017578
    9. '_ans' → logprob: -11.816242218017578
    10. '``' → logprob: -11.941242218017578

Token 1008: ' for' (ID: 395)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.042213018983602524
    2. 'ans' → logprob: -3.792212963104248
    3. 'result' → logprob: -4.042212963104248
    4. 'answer' → logprob: -7.292212963104248
    5. 'print' → logprob: -7.667212963104248
    6. '
' → logprob: -10.167213439941406
    7. '```' → logprob: -10.542213439941406
    8. 'for' → logprob: -11.917213439941406
    9. 'final' → logprob: -12.792213439941406
    10. '``' → logprob: -13.167213439941406

Token 1009: ' both' (ID: 2973)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.2413506656885147
    2. 'alt' → logprob: -2.2413506507873535
    3. 'res' → logprob: -2.3663506507873535
    4. ' matches' → logprob: -5.6163506507873535
    5. 'result' → logprob: -5.9913506507873535
    6. 'max' → logprob: -6.1163506507873535
    7. ' res' → logprob: -6.4913506507873535
    8. 'pattern' → logprob: -6.4913506507873535
    9. 'both' → logprob: -6.4913506507873535
    10. ' alt' → logprob: -6.9913506507873535

Token 1010: ' patterns' (ID: 18587)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.4086122512817383
    2. 'patterns' → logprob: -1.1586122512817383
    3. 'pattern' → logprob: -4.033612251281738
    4. 'res' → logprob: -5.908612251281738
    5. 'alt' → logprob: -7.533612251281738
    6. 'results' → logprob: -8.158612251281738
    7. 'result' → logprob: -8.908612251281738
    8. ' matches' → logprob: -10.783612251281738
    9. ' patterns' → logprob: -11.158612251281738
    10. '_pattern' → logprob: -11.283612251281738

Token 1011: ' and' (ID: 326)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.002186307217925787
    2. 'result' → logprob: -6.627186298370361
    3. 'ans' → logprob: -7.127186298370361
    4. '```' → logprob: -10.62718677520752
    5. '
' → logprob: -10.87718677520752
    6. 'answer' → logprob: -11.87718677520752
    7. 'print' → logprob: -12.50218677520752
    8. '``' → logprob: -14.00218677520752
    9. 'for' → logprob: -14.37718677520752
    10. 'r' → logprob: -14.87718677520752

Token 1012: ' take' (ID: 2304)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.023618238046765327
    2. ' res' → logprob: -4.773618221282959
    3. 'print' → logprob: -4.773618221282959
    4. 'result' → logprob: -5.273618221282959
    5. '
' → logprob: -7.398618221282959
    6. 'max' → logprob: -8.398618698120117
    7. ' =' → logprob: -8.648618698120117
    8. '=' → logprob: -9.023618698120117
    9. 'ans' → logprob: -9.398618698120117
    10. 'answer' → logprob: -10.773618698120117

Token 1013: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.010028639808297157
    2. 'result' → logprob: -5.260028839111328
    3. ' max' → logprob: -5.510028839111328
    4. 'res' → logprob: -7.510028839111328
    5. '
' → logprob: -9.385028839111328
    6. 'print' → logprob: -10.135028839111328
    7. '```' → logprob: -10.885028839111328
    8. '=max' → logprob: -11.260028839111328
    9. ' result' → logprob: -11.510028839111328
    10. ' res' → logprob: -12.135028839111328

Token 1014: ' (' (ID: 350)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.01881769672036171
    2. 'result' → logprob: -4.018817901611328
    3. 'print' → logprob: -8.143817901611328
    4. 'ans' → logprob: -8.518817901611328
    5. '
' → logprob: -9.143817901611328
    6. '```' → logprob: -10.268817901611328
    7. 'answer' → logprob: -10.393817901611328
    8. 'final' → logprob: -12.518817901611328
    9. '``' → logprob: -14.893817901611328
    10. 'for' → logprob: -15.143817901611328

Token 1015: 'also' (ID: 32038)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.710392415523529
    2. 'result' → logprob: -0.710392415523529
    3. ')
' → logprob: -4.835392475128174
    4. 'max' → logprob: -5.460392475128174
    5. ')' → logprob: -5.710392475128174
    6. ' res' → logprob: -7.710392475128174
    7. 'print' → logprob: -8.460391998291016
    8. '
' → logprob: -8.585391998291016
    9. 'answer' → logprob: -8.710391998291016
    10. ' result' → logprob: -9.085391998291016

Token 1016: ' consider' (ID: 3331)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7454382181167603
    2. 'print' → logprob: -1.6204382181167603
    3. '
' → logprob: -1.8704382181167603
    4. '=' → logprob: -2.1204380989074707
    5. ' res' → logprob: -4.370438098907471
    6. ' =' → logprob: -4.745438098907471
    7. '#' → logprob: -5.120438098907471
    8. ' print' → logprob: -5.370438098907471
    9. '\' → logprob: -5.495438098907471
    10. ')' → logprob: -5.995438098907471

Token 1017: ' no' (ID: 860)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4330228865146637
    2. ' res' → logprob: -1.0580228567123413
    3. ' no' → logprob: -6.558022975921631
    4. 'max' → logprob: -7.058022975921631
    5. 'no' → logprob: -7.183022975921631
    6. '
' → logprob: -7.433022975921631
    7. ' max' → logprob: -8.308022499084473
    8. '#' → logprob: -8.433022499084473
    9. ' #' → logprob: -9.558022499084473
    10. 'without' → logprob: -10.433022499084473

Token 1018: ' operation' (ID: 9506)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.1742275357246399
    2. ' flip' → logprob: -2.049227476119995
    3. 'change' → logprob: -5.174227714538574
    4. ' operation' → logprob: -5.174227714538574
    5. '_flip' → logprob: -5.174227714538574
    6. ' flipping' → logprob: -5.549227714538574
    7. 'operation' → logprob: -5.674227714538574
    8. ' change' → logprob: -5.674227714538574
    9. ')' → logprob: -6.424227714538574
    10. '=' → logprob: -8.174227714538574

Token 1019: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05678357556462288
    2. ')' → logprob: -3.181783676147461
    3. 'res' → logprob: -5.056783676147461
    4. '=' → logprob: -6.181783676147461
    5. ' =' → logprob: -6.556783676147461
    6. ')

' → logprob: -7.056783676147461
    7. ' )
' → logprob: -7.181783676147461
    8. ',' → logprob: -7.431783676147461
    9. '))
' → logprob: -8.181783676147461
    10. 'result' → logprob: -8.431783676147461

Token 1020: 'ans' (ID: 616)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.011535104364156723
    2. 'result' → logprob: -4.636535167694092
    3. 'ans' → logprob: -7.261535167694092
    4. '
' → logprob: -7.261535167694092
    5. '```' → logprob: -8.636534690856934
    6. 'answer' → logprob: -8.886534690856934
    7. 'print' → logprob: -10.761534690856934
    8. 'final' → logprob: -11.136534690856934
    9. '``' → logprob: -11.136534690856934
    10. '`
' → logprob: -13.386534690856934

Token 1021: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860825836658478
    2. '=' → logprob: -3.0486083030700684
    3. ',' → logprob: -11.29860782623291
    4. '=max' → logprob: -12.79860782623291
    5. ' =
' → logprob: -13.29860782623291
    6. '```' → logprob: -13.92360782623291
    7. ')' → logprob: -14.42360782623291
    8. ' +=' → logprob: -14.42360782623291
    9. ' ' → logprob: -15.17360782623291
    10. '<|end|>' → logprob: -15.17360782623291

Token 1022: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.023348316550254822
    2. 'res' → logprob: -4.023348331451416
    3. ' max' → logprob: -5.273348331451416
    4. ' res' → logprob: -9.773347854614258
    5. '   ' → logprob: -14.273347854614258
    6. '[max' → logprob: -15.023347854614258
    7. '(max' → logprob: -15.523347854614258
    8. '	max' → logprob: -16.023347854614258
    9. ' ' → logprob: -16.523347854614258
    10. '=max' → logprob: -16.898347854614258

Token 1023: '(res' (ID: 8331)
  Prédit: '_alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_alt' → logprob: -0.002237566513940692
    2. '(max' → logprob: -7.002237796783447
    3. 'alt' → logprob: -7.252237796783447
    4. '(' → logprob: -7.627237796783447
    5. '(
' → logprob: -10.377237319946289
    6. 'max' → logprob: -10.627237319946289
    7. 'Alt' → logprob: -10.752237319946289
    8. '_ans' → logprob: -10.752237319946289
    9. '(ans' → logprob: -11.752237319946289
    10. '```' → logprob: -12.627237319946289

Token 1024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015064439736306667
    2. ',max' → logprob: -4.640064239501953
    3. '(max' → logprob: -5.765064239501953
    4. '(ans' → logprob: -6.265064239501953
    5. 'max' → logprob: -9.390064239501953
    6. ',
' → logprob: -10.390064239501953
    7. ' ,' → logprob: -10.390064239501953
    8. 'ans' → logprob: -10.390064239501953
    9. ',res' → logprob: -10.890064239501953
    10. '(' → logprob: -10.890064239501953

Token 1025: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004078639671206474
    2. ' max' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.50407886505127
    4. '(max' → logprob: -16.629077911376953
    5. '	max' → logprob: -17.254077911376953
    6. '[max' → logprob: -18.004077911376953
    7. ' ' → logprob: -18.379077911376953
    8. '
' → logprob: -18.629077911376953
    9. '=max' → logprob: -20.129077911376953
    10. '  ' → logprob: -20.379077911376953

Token 1026: '_alt' (ID: 77054)
  Prédit: '_alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_alt' → logprob: -0.0007430415134876966
    2. 'alt' → logprob: -7.2507429122924805
    3. '(max' → logprob: -10.62574291229248
    4. 'max' → logprob: -12.25074291229248
    5. '(' → logprob: -14.12574291229248
    6. 'Alt' → logprob: -14.37574291229248
    7. '_max' → logprob: -14.50074291229248
    8. '```' → logprob: -14.75074291229248
    9. '(_' → logprob: -15.25074291229248
    10. '[max' → logprob: -15.37574291229248

Token 1027: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.014325805008411407
    2. 'with' → logprob: -4.2643256187438965
    3. '1' → logprob: -8.889326095581055
    4. '(with' → logprob: -11.764326095581055
    5. ')' → logprob: -12.389326095581055
    6. ' with' → logprob: -12.639326095581055
    7. 'With' → logprob: -12.889326095581055
    8. '   ' → logprob: -13.264326095581055
    9. '(' → logprob: -13.389326095581055
    10. '```' → logprob: -14.264326095581055

Token 1028: '_flip' (ID: 150878)
  Prédit: '_flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.39120733737945557
    2. 'flip' → logprob: -1.1412073373794556
    3. '(matches' → logprob: -6.016207218170166
    4. 'matches' → logprob: -6.391207218170166
    5. ')' → logprob: -10.266207695007324
    6. 'fl' → logprob: -10.266207695007324
    7. 'match' → logprob: -10.641207695007324
    8. '```' → logprob: -10.891207695007324
    9. 'f' → logprob: -11.016207695007324
    10. '1' → logprob: -11.141207695007324

Token 1029: '(matches' (ID: 126280)
  Prédit: '(matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matches' → logprob: -3.1424973713001236e-05
    2. 'matches' → logprob: -11.250031471252441
    3. ' (' → logprob: -11.500031471252441
    4. '(match' → logprob: -13.000031471252441
    5. '```' → logprob: -13.125031471252441
    6. ')' → logprob: -13.375031471252441
    7. '(' → logprob: -14.125031471252441
    8. '(m' → logprob: -15.125031471252441
    9. '`' → logprob: -15.250031471252441
    10. ')(' → logprob: -15.750031471252441

Token 1030: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3915141355246305e-05
    2. '[' → logprob: -11.25002384185791
    3. '2' → logprob: -12.12502384185791
    4. '```' → logprob: -12.62502384185791
    5. ')' → logprob: -14.00002384185791
    6. '(' → logprob: -14.50002384185791
    7. '   ' → logprob: -15.75002384185791
    8. '
' → logprob: -16.000024795532227
    9. ',' → logprob: -16.125024795532227
    10. 's' → logprob: -16.250024795532227

Token 1031: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002204262651503086
    2. ')' → logprob: -6.252204418182373
    3. '),' → logprob: -8.502203941345215
    4. '))' → logprob: -10.502203941345215
    5. ',
' → logprob: -11.252203941345215
    6. '))
' → logprob: -11.377203941345215
    7. ' ,' → logprob: -11.627203941345215
    8. ')
' → logprob: -12.002203941345215
    9. ',m' → logprob: -13.502203941345215
    10. ',max' → logprob: -13.877203941345215

Token 1032: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5759395360946655
    2. 'max' → logprob: -0.8259395360946655
    3. '(max' → logprob: -16.700939178466797
    4. '	max' → logprob: -18.325939178466797
    5. '   ' → logprob: -19.075939178466797
    6. '[max' → logprob: -19.575939178466797
    7. ',max' → logprob: -19.575939178466797
    8. '    ' → logprob: -19.825939178466797
    9. '_max' → logprob: -20.575939178466797
    10. ' ' → logprob: -20.575939178466797

Token 1033: '_alt' (ID: 77054)
  Prédit: '_alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_alt' → logprob: -9.088346359931165e-07
    2. 'alt' → logprob: -14.625000953674316
    3. '```' → logprob: -15.375000953674316
    4. '\' → logprob: -16.75
    5. 'Alt' → logprob: -17.625
    6. ' _' → logprob: -18.0
    7. '_ALT' → logprob: -18.25
    8. '``' → logprob: -18.5
    9. '`' → logprob: -18.5
    10. ''_' → logprob: -18.75

Token 1034: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -1.5213274309644476e-05
    2. 'with' → logprob: -11.125015258789062
    3. '```' → logprob: -16.500015258789062
    4. 'With' → logprob: -16.875015258789062
    5. '_to' → logprob: -17.250015258789062
    6. '_WITH' → logprob: -17.250015258789062
    7. '_without' → logprob: -17.750015258789062
    8. '\' → logprob: -17.750015258789062
    9. '_for' → logprob: -17.875015258789062
    10. '1' → logprob: -18.125015258789062

Token 1035: '_flip' (ID: 150878)
  Prédit: '_flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.018181785941123962
    2. 'flip' → logprob: -4.018181800842285
    3. 'Flip' → logprob: -10.393181800842285
    4. '_fl' → logprob: -14.768181800842285
    5. 'fl' → logprob: -16.01818084716797
    6. ' flip' → logprob: -16.14318084716797
    7. '2' → logprob: -16.26818084716797
    8. '_flush' → logprob: -16.39318084716797
    9. '```' → logprob: -16.51818084716797
    10. '_fold' → logprob: -16.64318084716797

Token 1036: '(matches' (ID: 126280)
  Prédit: '(matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matches' → logprob: -4.246537173457909e-06
    2. ' (' → logprob: -13.375003814697266
    3. 'matches' → logprob: -14.000003814697266
    4. '(' → logprob: -14.000003814697266
    5. '(match' → logprob: -14.625003814697266
    6. ')' → logprob: -15.250003814697266
    7. '```' → logprob: -15.750003814697266
    8. '(`' → logprob: -16.875003814697266
    9. '(
' → logprob: -17.000003814697266
    10. '
' → logprob: -17.000003814697266

Token 1037: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -14.250001907348633
    3. 'matches' → logprob: -14.625001907348633
    4. '(matches' → logprob: -15.375001907348633
    5. '(' → logprob: -15.750001907348633
    6. ' ' → logprob: -15.750001907348633
    7. '   ' → logprob: -16.000001907348633
    8. '```' → logprob: -16.125001907348633
    9. '_' → logprob: -16.250001907348633
    10. '
' → logprob: -16.750001907348633

Token 1038: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043496055877767503
    2. '))' → logprob: -7.750434875488281
    3. '`)' → logprob: -13.500434875488281
    4. ')))' → logprob: -13.625434875488281
    5. ' )' → logprob: -14.375434875488281
    6. ')`' → logprob: -14.750434875488281
    7. ')
' → logprob: -15.000434875488281
    8. '())' → logprob: -16.12543487548828
    9. '})' → logprob: -16.50043487548828
    10. '])' → logprob: -16.62543487548828

Token 1039: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.061676347395405e-05
    2. '
' → logprob: -10.00005054473877
    3. '```' → logprob: -12.25005054473877
    4. ' print' → logprob: -15.75005054473877
    5. '``' → logprob: -16.125051498413086
    6. '`
' → logprob: -17.750051498413086
    7. '\' → logprob: -18.000051498413086
    8. '
' → logprob: -18.750051498413086
    9. '\n' → logprob: -18.875051498413086
    10. '#print' → logprob: -19.500051498413086

Token 1040: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.00000286102295
    3. '(f' → logprob: -16.375001907348633
    4. '(answer' → logprob: -17.375001907348633
    5. 'ans' → logprob: -17.625001907348633
    6. '('' → logprob: -19.000001907348633
    7. '(
' → logprob: -19.250001907348633
    8. ' (' → logprob: -19.625001907348633
    9. '	ans' → logprob: -20.250001907348633
    10. '(a' → logprob: -20.625001907348633

Token 1041: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001487140398239717
    2. '())' → logprob: -9.50014877319336
    3. '()' → logprob: -9.87514877319336
    4. ' )' → logprob: -11.87514877319336
    5. '`)' → logprob: -12.37514877319336
    6. '```' → logprob: -12.62514877319336
    7. '')' → logprob: -12.87514877319336
    8. ')
' → logprob: -13.12514877319336
    9. '")' → logprob: -14.12514877319336
    10. '(' → logprob: -14.25014877319336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1039
Tokens correctement prédits (1ère position, stricte): 325
Tokens correctement prédits (1ère position, avec adaptation): 344
Tokens correctement prédits (top 10): 710
Précision stricte (1ère position): 31.28%
Précision adaptée (1ère position): 33.11%
Précision (top 10): 68.33%
================================================================================
