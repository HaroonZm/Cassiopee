================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
vehicles = [4, 4, 2, 2, 1, 1, 1, 1]
import sys
for line in sys.stdin:
    p = list(map(int, line.split()))
    if len(p) != 8:
        continue
    best_unmatched = None
    best_pattern = None
    for shift in range(8):
        unmatched = 0
        for i in range(8):
            cap = vehicles[(i + shift) % 8]
            if p[i] > cap:
                unmatched += p[i] - cap
        if best_unmatched is None or unmatched < best_unmatched:
            best_unmatched = unmatched
            best_pattern = [(vehicles[(i + shift) % 8]) for i in range(8)]
        elif unmatched == best_unmatched:
            old_val = int(''.join(map(str, best_pattern)))
            new_val = int(''.join(str(vehicles[(i + shift) % 8]) for i in range(8)))
            if new_val < old_val:
                best_pattern = [(vehicles[(i + shift) % 8]) for i in range(8)]
    print(*best_pattern)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'vehicles' (ID: 124920)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' [' (ID: 723)
  → Token d'amorce (pas de prédiction)

Token 3: '4' (ID: 19)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18854695558547974
    2. '"' → logprob: -2.188546895980835
    3. ']' → logprob: -3.563546895980835
    4. '{' → logprob: -3.688546895980835
    5. '```' → logprob: -6.813547134399414
    6. '']' → logprob: -6.938547134399414
    7. '   ' → logprob: -6.938547134399414
    8. '`' → logprob: -7.313547134399414
    9. '"]' → logprob: -7.438547134399414
    10. '[' → logprob: -7.438547134399414

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010693227872252464
    2. ']' → logprob: -4.635693073272705
    3. ',
' → logprob: -7.260693073272705
    4. '0' → logprob: -9.510693550109863
    5. '[' → logprob: -9.760693550109863
    6. '.' → logprob: -10.260693550109863
    7. '```' → logprob: -11.385693550109863
    8. ' ,' → logprob: -11.635693550109863
    9. '5' → logprob: -11.635693550109863
    10. '2' → logprob: -12.135693550109863

Token 5: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1059664636850357
    2. '2' → logprob: -3.230966567993164
    3. '6' → logprob: -3.230966567993164
    4. '7' → logprob: -4.730966567993164
    5. '8' → logprob: -4.980966567993164
    6. '1' → logprob: -6.230966567993164
    7. '0' → logprob: -6.230966567993164
    8. '5' → logprob: -6.605966567993164
    9. '3' → logprob: -8.230966567993164
    10. '10' → logprob: -9.480966567993164

Token 6: '4' (ID: 19)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.7836126089096069
    2. '2' → logprob: -1.658612608909607
    3. ' ' → logprob: -1.658612608909607
    4. '6' → logprob: -2.2836127281188965
    5. '8' → logprob: -3.2836127281188965
    6. '5' → logprob: -4.6586127281188965
    7. '1' → logprob: -4.9086127281188965
    8. '3' → logprob: -5.9086127281188965
    9. '9' → logprob: -6.2836127281188965
    10. '0' → logprob: -7.0336127281188965

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014208407141268253
    2. ']' → logprob: -4.2642083168029785
    3. '```' → logprob: -11.389208793640137
    4. ',
' → logprob: -11.639208793640137
    5. ')' → logprob: -12.264208793640137
    6. '0' → logprob: -12.514208793640137
    7. '4' → logprob: -12.639208793640137
    8. ',

' → logprob: -12.764208793640137
    9. ' ,' → logprob: -13.389208793640137
    10. '2' → logprob: -13.639208793640137

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08228981494903564
    2. '4' → logprob: -2.707289695739746
    3. '2' → logprob: -4.707289695739746
    4. '3' → logprob: -6.707289695739746
    5. '1' → logprob: -7.332289695739746
    6. '6' → logprob: -8.207289695739746
    7. '5' → logprob: -8.332289695739746
    8. ',' → logprob: -8.457289695739746
    9. '0' → logprob: -8.582289695739746
    10. ''' → logprob: -8.957289695739746

Token 9: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3732643127441406
    2. '4' → logprob: -1.2482643127441406
    3. '1' → logprob: -4.623264312744141
    4. '3' → logprob: -4.873264312744141
    5. '6' → logprob: -5.998264312744141
    6. '0' → logprob: -6.123264312744141
    7. '5' → logprob: -7.373264312744141
    8. '7' → logprob: -7.498264312744141
    9. '8' → logprob: -7.998264312744141
    10. ' ' → logprob: -8.12326431274414

Token 10: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005949183367192745
    2. ',' → logprob: -5.130949020385742
    3. '],' → logprob: -11.755949020385742
    4. '```' → logprob: -12.255949020385742
    5. '']' → logprob: -12.755949020385742
    6. '`]' → logprob: -13.505949020385742
    7. ' ]' → logprob: -14.005949020385742
    8. ')' → logprob: -14.005949020385742
    9. '}' → logprob: -14.505949020385742
    10. ']}' → logprob: -15.005949020385742

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2962992787361145
    2. '4' → logprob: -1.7962992191314697
    3. '2' → logprob: -2.4212992191314697
    4. '1' → logprob: -7.296299457550049
    5. '3' → logprob: -7.421299457550049
    6. '6' → logprob: -8.92129898071289
    7. '```' → logprob: -9.04629898071289
    8. ',' → logprob: -9.29629898071289
    9. ' ,' → logprob: -10.67129898071289
    10. '`' → logprob: -10.92129898071289

Token 12: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.346041202545166
    2. '4' → logprob: -1.971041202545166
    3. '1' → logprob: -2.346041202545166
    4. '3' → logprob: -3.471041202545166
    5. ' ' → logprob: -4.471041202545166
    6. '6' → logprob: -4.596041202545166
    7. '0' → logprob: -6.096041202545166
    8. '7' → logprob: -6.596041202545166
    9. '5' → logprob: -6.846041202545166
    10. '```' → logprob: -9.721040725708008

Token 13: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0125176552683115
    2. ',' → logprob: -4.38751745223999
    3. '```' → logprob: -13.137517929077148
    4. '],' → logprob: -13.262517929077148
    5. '`]' → logprob: -13.387517929077148
    6. ' ]' → logprob: -14.137517929077148
    7. '']' → logprob: -14.262517929077148
    8. ',
' → logprob: -15.137517929077148
    9. ')' → logprob: -15.637517929077148
    10. ']

' → logprob: -15.762517929077148

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48531031608581543
    2. '4' → logprob: -1.1103103160858154
    3. '2' → logprob: -3.3603103160858154
    4. '1' → logprob: -4.1103105545043945
    5. '3' → logprob: -5.9853105545043945
    6. '0' → logprob: -7.7353105545043945
    7. '6' → logprob: -7.9853105545043945
    8. '5' → logprob: -8.610310554504395
    9. ',' → logprob: -9.110310554504395
    10. ']' → logprob: -9.360310554504395

Token 15: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.4374953508377075
    2. '2' → logprob: -1.5624953508377075
    3. '1' → logprob: -2.187495231628418
    4. ' ' → logprob: -4.187495231628418
    5. '3' → logprob: -4.687495231628418
    6. '0' → logprob: -5.562495231628418
    7. '6' → logprob: -5.812495231628418
    8. '5' → logprob: -7.312495231628418
    9. ']' → logprob: -9.062495231628418
    10. '```' → logprob: -9.062495231628418

Token 16: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.685467764735222e-05
    2. ',' → logprob: -9.375086784362793
    3. '']' → logprob: -14.375086784362793
    4. '`]' → logprob: -14.875086784362793
    5. '],' → logprob: -15.250086784362793
    6. '```' → logprob: -15.375086784362793
    7. ' ]' → logprob: -15.500086784362793
    8. ')' → logprob: -16.00008773803711
    9. ']
' → logprob: -16.50008773803711
    10. '"]' → logprob: -16.75008773803711

Token 17: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5832111835479736
    2. '1' → logprob: -1.0832111835479736
    3. '4' → logprob: -2.9582111835479736
    4. '2' → logprob: -4.0832109451293945
    5. '3' → logprob: -4.2082109451293945
    6. ']' → logprob: -4.3332109451293945
    7. '0' → logprob: -5.9582109451293945
    8. '5' → logprob: -6.2082109451293945
    9. '6' → logprob: -7.0832109451293945
    10. ' ]' → logprob: -7.3332109451293945

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.041755225509405136
    2. '3' → logprob: -4.291755199432373
    3. '2' → logprob: -4.416755199432373
    4. ' ' → logprob: -4.541755199432373
    5. '4' → logprob: -5.791755199432373
    6. '5' → logprob: -7.791755199432373
    7. '0' → logprob: -7.916755199432373
    8. ']' → logprob: -8.166755676269531
    9. '6' → logprob: -8.416755676269531
    10. '```' → logprob: -10.291755676269531

Token 19: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.673547563375905e-05
    2. ',' → logprob: -9.375086784362793
    3. '']' → logprob: -14.375086784362793
    4. '`]' → logprob: -14.500086784362793
    5. ' ]' → logprob: -15.375086784362793
    6. ')' → logprob: -16.125085830688477
    7. '```' → logprob: -16.375085830688477
    8. '],' → logprob: -16.375085830688477
    9. ']
' → logprob: -16.500085830688477
    10. ']

' → logprob: -16.875085830688477

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5105947852134705
    2. '4' → logprob: -1.1355948448181152
    3. '2' → logprob: -3.5105948448181152
    4. '3' → logprob: -3.7605948448181152
    5. '1' → logprob: -3.8855948448181152
    6. ']' → logprob: -6.385594844818115
    7. '0' → logprob: -6.510594844818115
    8. '5' → logprob: -7.635594844818115
    9. '7' → logprob: -8.135594367980957
    10. ')' → logprob: -8.260594367980957

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8579089045524597
    2. '4' → logprob: -1.3579089641571045
    3. '3' → logprob: -1.8579089641571045
    4. '2' → logprob: -2.6079089641571045
    5. ' ' → logprob: -2.6079089641571045
    6. '0' → logprob: -4.607908725738525
    7. ']' → logprob: -5.482908725738525
    8. '5' → logprob: -7.857908725738525
    9. '6' → logprob: -8.420409202575684
    10. '7' → logprob: -8.732909202575684

Token 22: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.8325677703833207e-05
    2. ',' → logprob: -10.500028610229492
    3. '']' → logprob: -15.500028610229492
    4. ' ]' → logprob: -16.000028610229492
    5. '],' → logprob: -16.125028610229492
    6. ')' → logprob: -16.125028610229492
    7. '`]' → logprob: -16.125028610229492
    8. '}' → logprob: -16.750028610229492
    9. ']
' → logprob: -17.375028610229492
    10. '```' → logprob: -17.750028610229492

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2925458550453186
    2. '4' → logprob: -1.5425457954406738
    3. '3' → logprob: -4.417545795440674
    4. ']' → logprob: -4.542545795440674
    5. '1' → logprob: -5.042545795440674
    6. '2' → logprob: -5.042545795440674
    7. '0' → logprob: -6.417545795440674
    8. ' ]' → logprob: -6.792545795440674
    9. '7' → logprob: -8.042546272277832
    10. '5' → logprob: -8.167546272277832

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4764728248119354
    2. '4' → logprob: -1.2264728546142578
    3. '3' → logprob: -3.476472854614258
    4. '2' → logprob: -3.851472854614258
    5. ' ' → logprob: -4.226472854614258
    6. ']' → logprob: -4.351472854614258
    7. '0' → logprob: -5.351472854614258
    8. '5' → logprob: -8.351472854614258
    9. '7' → logprob: -8.351472854614258
    10. '6' → logprob: -8.851472854614258

Token 25: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001254693343071267
    2. ',' → logprob: -9.000125885009766
    3. '`]' → logprob: -14.375125885009766
    4. ' ]' → logprob: -14.875125885009766
    5. '],' → logprob: -15.000125885009766
    6. '']' → logprob: -15.250125885009766
    7. '```' → logprob: -15.250125885009766
    8. ']
' → logprob: -15.875125885009766
    9. ')' → logprob: -16.000125885009766
    10. '"]' → logprob: -17.250125885009766

Token 26: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5112633109092712
    2. ']' → logprob: -1.261263370513916
    3. '[' → logprob: -2.636263370513916
    4. ',' → logprob: -4.511263370513916
    5. 'vehicles' → logprob: -4.636263370513916
    6. '```' → logprob: -4.636263370513916
    7. ')' → logprob: -5.011263370513916
    8. ' vehicles' → logprob: -6.761263370513916
    9. '=' → logprob: -6.761263370513916
    10. '+' → logprob: -6.761263370513916

Token 27: ' sys' (ID: 12228)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.46308740973472595
    2. ' collections' → logprob: -1.2130874395370483
    3. ' numpy' → logprob: -3.463087320327759
    4. ' ' → logprob: -4.588087558746338
    5. ' math' → logprob: -4.588087558746338
    6. ' itertools' → logprob: -4.713087558746338
    7. ' pandas' → logprob: -5.088087558746338
    8. 'collections' → logprob: -5.463087558746338
    9. 'random' → logprob: -6.963087558746338
    10. ' space' → logprob: -7.838087558746338

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8484960198402405
    2. '\n' → logprob: -1.4734959602355957
    3. 'for' → logprob: -2.2234959602355957
    4. '' → logprob: -2.9734959602355957
    5. 'vehicles' → logprob: -3.3484959602355957
    6. '.' → logprob: -3.7234959602355957
    7. '\' → logprob: -3.7234959602355957
    8. 'sys' → logprob: -4.223495960235596
    9. ',' → logprob: -4.348495960235596
    10. 'print' → logprob: -4.723495960235596

Token 29: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3463212549686432
    2. '\n' → logprob: -1.7213212251663208
    3. 'for' → logprob: -3.8463213443756104
    4. ',' → logprob: -3.8463213443756104
    5. '[' → logprob: -4.096321105957031
    6. 'vehicles' → logprob: -4.221321105957031
    7. '\' → logprob: -4.846321105957031
    8. 'n' → logprob: -5.471321105957031
    9. '```' → logprob: -5.596321105957031
    10. '=' → logprob: -6.096321105957031

Token 30: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6461040377616882
    2. ' i' → logprob: -1.021104097366333
    3. ' vehicle' → logprob: -2.646104097366333
    4. ' v' → logprob: -3.146104097366333
    5. ' space' → logprob: -8.021103858947754
    6. ' ' → logprob: -8.146103858947754
    7. ' vehicles' → logprob: -8.146103858947754
    8. 'v' → logprob: -8.896103858947754
    9. ' car' → logprob: -8.896103858947754
    10. 'vehicle' → logprob: -8.896103858947754

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03879288211464882
    2. 'in' → logprob: -3.288792848587036
    3. ' =' → logprob: -8.038792610168457
    4. 'import' → logprob: -9.413792610168457
    5. '<|end|>' → logprob: -9.413792610168457
    6. ':' → logprob: -9.663792610168457
    7. ' ' → logprob: -10.038792610168457
    8. '[' → logprob: -10.413792610168457
    9. '=' → logprob: -10.913792610168457
    10. '(' → logprob: -11.163792610168457

Token 32: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16023264825344086
    2. ' sys' → logprob: -1.910232663154602
    3. '	sys' → logprob: -12.535232543945312
    4. '=sys' → logprob: -12.535232543945312
    5. '(sys' → logprob: -13.785232543945312
    6. 'stdin' → logprob: -16.035232543945312
    7. '```' → logprob: -17.035232543945312
    8. 's' → logprob: -17.535232543945312
    9. 'system' → logprob: -17.535232543945312
    10. 'iter' → logprob: -17.785232543945312

Token 33: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.1604783833026886
    2. 'stdin' → logprob: -1.9104783535003662
    3. ' stdin' → logprob: -8.410478591918945
    4. '(stdin' → logprob: -10.660478591918945
    5. 'in' → logprob: -13.285478591918945
    6. 'input' → logprob: -13.410478591918945
    7. '.' → logprob: -14.035478591918945
    8. ' .' → logprob: -14.285478591918945
    9. '.stdout' → logprob: -14.410478591918945
    10. 'lines' → logprob: -14.660478591918945

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7296392917633057
    2. '.readline' → logprob: -0.7296392917633057
    3. '.' → logprob: -3.6046392917633057
    4. '.strip' → logprob: -5.354639053344727
    5. '.readlines' → logprob: -6.354639053344727
    6. '.rstrip' → logprob: -7.354639053344727
    7. '.split' → logprob: -7.729639053344727
    8. '<|end|>' → logprob: -8.354639053344727
    9. ':
' → logprob: -9.104639053344727
    10. ' .' → logprob: -9.104639053344727

Token 35: '   ' (ID: 271)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.41457220911979675
    2. '   ' → logprob: -2.039572238922119
    3. ' vehicle' → logprob: -2.789572238922119
    4. ' n' → logprob: -3.539572238922119
    5. ' data' → logprob: -4.164572238922119
    6. ' tokens' → logprob: -4.289572238922119
    7. ' strip' → logprob: -4.414572238922119
    8. ' total' → logprob: -4.789572238922119
    9. ' if' → logprob: -4.914572238922119
    10. ' parts' → logprob: -5.039572238922119

Token 36: ' p' (ID: 275)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.15076400339603424
    2. ' data' → logprob: -4.025763988494873
    3. '   ' → logprob: -4.275763988494873
    4. ' if' → logprob: -4.400763988494873
    5. ' vehicles' → logprob: -4.400763988494873
    6. ' parts' → logprob: -4.650763988494873
    7. ' vehicle' → logprob: -4.775763988494873
    8. ' numbers' → logprob: -4.900763988494873
    9. ' items' → logprob: -5.025763988494873
    10. ' n' → logprob: -5.150763988494873

Token 37: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02978902868926525
    2. 'ass' → logprob: -3.9047889709472656
    3. 'rice' → logprob: -5.904788970947266
    4. ' =' → logprob: -6.404788970947266
    5. 'ar' → logprob: -6.404788970947266
    6. 'arse' → logprob: -7.904788970947266
    7. '=' → logprob: -8.029788970947266
    8. 'arts' → logprob: -8.029788970947266
    9. 'rices' → logprob: -8.154788970947266
    10. 'er' → logprob: -8.529788970947266

Token 38: ' list' (ID: 1562)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.34053656458854675
    2. 'int' → logprob: -1.7155365943908691
    3. 'list' → logprob: -2.340536594390869
    4. ' line' → logprob: -5.340536594390869
    5. '[int' → logprob: -5.840536594390869
    6. '[line' → logprob: -6.215536594390869
    7. ' list' → logprob: -6.590536594390869
    8. ' int' → logprob: -7.215536594390869
    9. '[' → logprob: -8.465536117553711
    10. 'map' → logprob: -8.715536117553711

Token 39: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.11730505526065826
    2. '(' → logprob: -2.367305040359497
    3. '(line' → logprob: -4.367305278778076
    4. '(int' → logprob: -6.117305278778076
    5. '(p' → logprob: -6.242305278778076
    6. '(eval' → logprob: -9.992304801940918
    7. '(filter' → logprob: -10.992304801940918
    8. '()' → logprob: -11.492304801940918
    9. '(range' → logprob: -11.742304801940918
    10. '(list' → logprob: -11.992304801940918

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0019342314917594194
    2. '(' → logprob: -6.376934051513672
    3. 'int' → logprob: -8.501934051513672
    4. '(str' → logprob: -11.376934051513672
    5. '(lambda' → logprob: -12.001934051513672
    6. '<int' → logprob: -12.376934051513672
    7. '```' → logprob: -13.501934051513672
    8. '(
' → logprob: -13.626934051513672
    9. '=int' → logprob: -13.751934051513672
    10. ' int' → logprob: -14.376934051513672

Token 41: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0011518864193931222
    2. '(' → logprob: -7.001152038574219
    3. ',line' → logprob: -8.626152038574219
    4. ',' → logprob: -10.876152038574219
    5. '(sys' → logprob: -11.376152038574219
    6. ' line' → logprob: -11.501152038574219
    7. '(input' → logprob: -11.626152038574219
    8. ')' → logprob: -12.876152038574219
    9. ' (' → logprob: -13.126152038574219
    10. '=line' → logprob: -13.501152038574219

Token 42: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.06208554655313492
    2. 'line' → logprob: -2.8120856285095215
    3. '(line' → logprob: -9.187085151672363
    4. '	line' → logprob: -12.187085151672363
    5. '[line' → logprob: -12.562085151672363
    6. '=line' → logprob: -12.812085151672363
    7. '#line' → logprob: -13.062085151672363
    8. ',line' → logprob: -13.812085151672363
    9. '   ' → logprob: -14.187085151672363
    10. ' ' → logprob: -15.312085151672363

Token 43: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.05327431485056877
    2. '().' → logprob: -3.553274393081665
    3. '.split' → logprob: -3.803274393081665
    4. '.rstrip' → logprob: -7.428274154663086
    5. '.' → logprob: -8.053274154663086
    6. '.readline' → logprob: -10.428274154663086
    7. ' .' → logprob: -12.428274154663086
    8. 'strip' → logprob: -13.053274154663086
    9. '.chomp' → logprob: -13.803274154663086
    10. '.replace' → logprob: -14.303274154663086

Token 44: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2055947333574295
    2. '())' → logprob: -2.205594778060913
    3. '))' → logprob: -3.330594778060913
    4. '()' → logprob: -3.830594778060913
    5. '(' → logprob: -4.705594539642334
    6. '('' → logprob: -4.955594539642334
    7. ')' → logprob: -6.455594539642334
    8. '())))' → logprob: -8.455595016479492
    9. '()))
' → logprob: -9.080595016479492
    10. ''))' → logprob: -10.080595016479492

Token 45: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3921645879745483
    2. '   ' → logprob: -1.3921645879745483
    3. ')' → logprob: -1.5171645879745483
    4. ' if' → logprob: -2.642164707183838
    5. '<|end|>' → logprob: -2.642164707183838
    6. '
' → logprob: -2.892164707183838
    7. ' vehicles' → logprob: -3.892164707183838
    8. 'vehicles' → logprob: -4.767164707183838
    9. ' ' → logprob: -4.892164707183838
    10. ':' → logprob: -5.017164707183838

Token 46: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5206472873687744
    2. '   ' → logprob: -2.5206472873687744
    3. 'vehicles' → logprob: -2.8956472873687744
    4. '[' → logprob: -3.0206472873687744
    5. ')' → logprob: -3.0206472873687744
    6. 'if' (adapté à ' if') → logprob: -3.3956472873687744
    7. ' vehicles' → logprob: -3.3956472873687744
    8. ' for' → logprob: -3.5206472873687744
    9. '<|end|>' → logprob: -4.020647048950195
    10. 'for' → logprob: -4.895647048950195

Token 47: ' len' (ID: 4631)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7830489277839661
    2. ' not' → logprob: -0.7830489277839661
    3. ' len' → logprob: -2.7830488681793213
    4. 'p' → logprob: -4.5330491065979
    5. 'not' → logprob: -5.5330491065979
    6. ' sum' → logprob: -5.7830491065979
    7. 'len' → logprob: -5.7830491065979
    8. ' ' → logprob: -6.0330491065979
    9. 'sum' → logprob: -8.033048629760742
    10. ' vehicles' → logprob: -8.658048629760742

Token 48: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.006776119116693735
    2. '(' → logprob: -5.006776332855225
    3. ' (' → logprob: -10.131775856018066
    4. '()' → logprob: -11.631775856018066
    5. 'p' → logprob: -12.631775856018066
    6. ')' → logprob: -12.756775856018066
    7. ' p' → logprob: -13.131775856018066
    8. '(
' → logprob: -14.131775856018066
    9. '(s' → logprob: -15.006775856018066
    10. '(P' → logprob: -15.006775856018066

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00609931256622076
    2. ')==' → logprob: -5.256099224090576
    3. '==' → logprob: -7.881099224090576
    4. ')<' → logprob: -8.506099700927734
    5. ' )' → logprob: -8.631099700927734
    6. ' ==' → logprob: -9.756099700927734
    7. ')>=' → logprob: -11.256099700927734
    8. ')>' → logprob: -11.506099700927734
    9. ')!=' → logprob: -11.756099700927734
    10. '<' → logprob: -11.756099700927734

Token 50: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6395615339279175
    2. ' ==' → logprob: -0.7645615339279175
    3. '<' → logprob: -5.514561653137207
    4. ' <' → logprob: -6.264561653137207
    5. '!=' → logprob: -8.514561653137207
    6. ' !=' → logprob: -8.514561653137207
    7. ' ' → logprob: -8.639561653137207
    8. '>' → logprob: -9.264561653137207
    9. ')' → logprob: -9.514561653137207
    10. '=' → logprob: -9.764561653137207

Token 51: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.043344259262085
    2. '4' → logprob: -1.168344259262085
    3. '0' → logprob: -1.793344259262085
    4. '8' → logprob: -2.543344259262085
    5. ' ' → logprob: -2.668344259262085
    6. '3' → logprob: -4.543344497680664
    7. '1' → logprob: -5.168344497680664
    8. 'len' → logprob: -6.418344497680664
    9. '6' → logprob: -6.543344497680664
    10. 'vehicles' → logprob: -6.668344497680664

Token 52: '8' (ID: 23)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1718950271606445
    2. '8' → logprob: -1.2968950271606445
    3. '4' → logprob: -1.4218950271606445
    4. 'len' → logprob: -2.0468950271606445
    5. '0' → logprob: -3.6718950271606445
    6. '3' → logprob: -4.9218950271606445
    7. '1' → logprob: -5.5468950271606445
    8. 'vehicles' → logprob: -5.7968950271606445
    9. '6' → logprob: -6.0468950271606445
    10. '7' → logprob: -6.2968950271606445

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009461151785217226
    2. ':
' → logprob: -7.250946044921875
    3. ' or' → logprob: -8.625946044921875
    4. ':return' → logprob: -10.625946044921875
    5. '   ' → logprob: -10.875946044921875
    6. '       ' → logprob: -12.250946044921875
    7. ' :' → logprob: -12.375946044921875
    8. '):' → logprob: -13.375946044921875
    9. ')' → logprob: -14.125946044921875
    10. ' and' → logprob: -14.375946044921875

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003677751636132598
    2. ':' → logprob: -6.003677845001221
    3. '   ' → logprob: -7.128677845001221
    4. ' continue' → logprob: -8.753677368164062
    5. ':
' → logprob: -9.753677368164062
    6. 'continue' → logprob: -10.503677368164062
    7. '	' → logprob: -10.753677368164062
    8. '           ' → logprob: -11.253677368164062
    9. ' or' → logprob: -11.378677368164062
    10. ',' → logprob: -11.378677368164062

Token 55: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.026973435655236244
    2. '   ' → logprob: -4.151973247528076
    3. 'break' → logprob: -4.776973247528076
    4. '       ' → logprob: -6.526973247528076
    5. ' continue' → logprob: -7.401973247528076
    6. '    ' → logprob: -8.651973724365234
    7. '	break' → logprob: -9.026973724365234
    8. '```' → logprob: -10.151973724365234
    9. '    
' → logprob: -11.526973724365234
    10. 'continue' (adapté à ' continue') → logprob: -11.651973724365234

Token 56: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04082765802741051
    2. '    
' → logprob: -3.415827751159668
    3. '<|end|>' → logprob: -6.665827751159668
    4. '
' → logprob: -6.790827751159668
    5. '    ' → logprob: -6.915827751159668
    6. '[' → logprob: -7.665827751159668
    7. ',' → logprob: -7.665827751159668
    8. '\n' → logprob: -8.290827751159668
    9. '  ' → logprob: -8.415827751159668
    10. ')' → logprob: -8.415827751159668

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017162960022687912
    2. '    
' → logprob: -4.142162799835205
    3. '
' → logprob: -8.017163276672363
    4. '<|end|>' → logprob: -8.267163276672363
    5. '    ' → logprob: -8.392163276672363
    6. '```' → logprob: -10.017163276672363
    7. ',' → logprob: -10.392163276672363
    8. '  ' → logprob: -10.642163276672363
    9. '        
' → logprob: -10.642163276672363
    10. '   
' → logprob: -10.642163276672363

Token 58: ' best' (ID: 1636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.311369776725769
    2. ' if' → logprob: -1.436369776725769
    3. ' total' → logprob: -2.0613698959350586
    4. 'total' → logprob: -3.4363698959350586
    5. ' count' → logprob: -3.4363698959350586
    6. ' sum' → logprob: -3.8113698959350586
    7. ' counts' → logprob: -3.8113698959350586
    8. 'sum' → logprob: -4.061369895935059
    9. 'count' → logprob: -4.061369895935059
    10. 's' → logprob: -4.186369895935059

Token 59: '_un' (ID: 11119)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08861342817544937
    2. '_vehicle' → logprob: -3.588613510131836
    3. '=' → logprob: -4.088613510131836
    4. '_count' → logprob: -4.213613510131836
    5. ' =' → logprob: -5.088613510131836
    6. '_sum' → logprob: -5.213613510131836
    7. '_score' → logprob: -5.463613510131836
    8. '_size' → logprob: -5.963613510131836
    9. '_capacity' → logprob: -6.963613510131836
    10. '_car' → logprob: -7.088613510131836

Token 60: 'matched' (ID: 60401)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.04793204739689827
    2. 'der' → logprob: -5.172932147979736
    3. 'happy' → logprob: -5.172932147979736
    4. 'filled' → logprob: -5.172932147979736
    5. 'fit' → logprob: -5.672932147979736
    6. 'h' → logprob: -5.797932147979736
    7. 'load' → logprob: -5.922932147979736
    8. 'occupied' → logprob: -6.172932147979736
    9. '_used' → logprob: -6.422932147979736
    10. 's' → logprob: -6.797932147979736

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03836310654878616
    2. '=' → logprob: -3.288363218307495
    3. '_' → logprob: -8.538363456726074
    4. ',' → logprob: -9.913363456726074
    5. '_count' → logprob: -10.788363456726074
    6. 's' → logprob: -11.413363456726074
    7. '_idx' → logprob: -11.413363456726074
    8. ' ' → logprob: -11.538363456726074
    9. '_index' → logprob: -12.163363456726074
    10. '_space' → logprob: -12.788363456726074

Token 62: ' None' (ID: 4662)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.76457679271698
    2. ' sum' → logprob: -1.01457679271698
    3. 'float' → logprob: -2.6395769119262695
    4. 'sum' → logprob: -3.1395769119262695
    5. ' len' → logprob: -4.1395769119262695
    6. ' ' → logprob: -4.1395769119262695
    7. '10' → logprob: -5.1395769119262695
    8. ' max' → logprob: -5.3895769119262695
    9. 'len' → logprob: -5.6395769119262695
    10. '100' → logprob: -6.0145769119262695

Token 63: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09553998708724976
    2. '<|end|>' → logprob: -3.3455400466918945
    3. '    
' → logprob: -3.7205400466918945
    4. '
' → logprob: -4.7205400466918945
    5. ' ' → logprob: -4.7205400466918945
    6. '    ' → logprob: -5.3455400466918945
    7. ' 
' → logprob: -5.9705400466918945
    8. ',' → logprob: -6.5955400466918945
    9. '  ' → logprob: -6.9705400466918945
    10. '   
' → logprob: -6.9705400466918945

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01751759648323059
    2. '    
' → logprob: -4.642517566680908
    3. '
' → logprob: -6.017517566680908
    4. ',' → logprob: -6.642517566680908
    5. '<|end|>' → logprob: -6.767517566680908
    6. '    ' → logprob: -7.142517566680908
    7. ' for' → logprob: -7.642517566680908
    8. ' ' → logprob: -7.892517566680908
    9. ' 
' → logprob: -8.642518043518066
    10. '   
' → logprob: -8.642518043518066

Token 65: ' best' (ID: 1636)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5086902976036072
    2. 'for' → logprob: -1.508690357208252
    3. '   ' → logprob: -1.883690357208252
    4. ' best' → logprob: -3.883690357208252
    5. 'best' (adapté à ' best') → logprob: -5.633690357208252
    6. ' total' → logprob: -9.133689880371094
    7. 'vehicles' → logprob: -9.133689880371094
    8. 'total' → logprob: -9.383689880371094
    9. ' vehicles' → logprob: -9.508689880371094
    10. ' matched' → logprob: -9.633689880371094

Token 66: '_pattern' (ID: 50002)
  Prédit: '_match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.4561229944229126
    2. '_mat' → logprob: -1.4561229944229126
    3. '_' → logprob: -3.206122875213623
    4. '_vehicle' → logprob: -3.581122875213623
    5. '_matching' → logprob: -4.706122875213623
    6. '_count' → logprob: -4.706122875213623
    7. '_comb' → logprob: -4.956122875213623
    8. '_total' → logprob: -5.206122875213623
    9. '_index' → logprob: -5.456122875213623
    10. '_matches' → logprob: -5.581122875213623

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08899977803230286
    2. '=' → logprob: -2.4639997482299805
    3. 's' → logprob: -10.21399974822998
    4. ',' → logprob: -12.08899974822998
    5. ' ' → logprob: -12.83899974822998
    6. '=None' → logprob: -12.96399974822998
    7. '_idx' → logprob: -13.58899974822998
    8. '   ' → logprob: -13.58899974822998
    9. ')' → logprob: -13.71399974822998
    10. '_score' → logprob: -13.83899974822998

Token 68: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.4483860731124878
    2. 'None' → logprob: -1.5733860731124878
    3. ' []' → logprob: -2.4483861923217773
    4. '[]' → logprob: -2.6983861923217773
    5. '[' → logprob: -9.573386192321777
    6. ' ' → logprob: -10.073386192321777
    7. ' []
' → logprob: -10.698386192321777
    8. ' [' → logprob: -11.198386192321777
    9. ' p' → logprob: -11.198386192321777
    10. '[]
' → logprob: -11.198386192321777

Token 69: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02009577862918377
    2. '
' → logprob: -4.1450958251953125
    3. '    
' → logprob: -5.8950958251953125
    4. ' for' → logprob: -7.1450958251953125
    5. 'for' → logprob: -8.520095825195312
    6. '<|end|>' → logprob: -8.520095825195312
    7. '  
' → logprob: -10.520095825195312
    8. ' 
' → logprob: -10.645095825195312
    9. '   
' → logprob: -11.520095825195312
    10. '```' → logprob: -11.645095825195312

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01690056174993515
    2. 'for' → logprob: -4.766900539398193
    3. ' for' → logprob: -5.141900539398193
    4. '
' → logprob: -6.266900539398193
    5. '    
' → logprob: -8.016901016235352
    6. '<|end|>' → logprob: -9.266901016235352
    7. '  
' → logprob: -10.766901016235352
    8. '  ' → logprob: -11.016901016235352
    9. '   
' → logprob: -11.516901016235352
    10. '    ' → logprob: -12.141901016235352

Token 71: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.232659250497818
    2. 'for' (adapté à ' for') → logprob: -1.7326592206954956
    3. ' for' → logprob: -3.482659339904785
    4. '```' → logprob: -11.482659339904785
    5. '    
' → logprob: -11.607659339904785
    6. '
' → logprob: -11.732659339904785
    7. 'import' → logprob: -13.107659339904785
    8. '  ' → logprob: -13.607659339904785
    9. ' ' → logprob: -13.857659339904785
    10. '	for' → logprob: -14.107659339904785

Token 72: ' shift' (ID: 12847)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.4105122685432434
    2. ' i' → logprob: -2.0355122089385986
    3. 'pattern' → logprob: -2.0355122089385986
    4. ' vehicle' → logprob: -4.160512447357178
    5. ' v' → logprob: -4.785512447357178
    6. ' mask' → logprob: -4.910512447357178
    7. ' candidate' → logprob: -4.910512447357178
    8. 'i' → logprob: -4.910512447357178
    9. ' perm' → logprob: -5.410512447357178
    10. ' idx' → logprob: -5.785512447357178

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0016512564616277814
    2. 'in' → logprob: -6.501651287078857
    3. ' ' → logprob: -9.7516508102417
    4. 's' → logprob: -10.0016508102417
    5. ',' → logprob: -10.5016508102417
    6. 'range' → logprob: -12.1266508102417
    7. '_' → logprob: -13.1266508102417
    8. ' i' → logprob: -13.1266508102417
    9. '<|end|>' → logprob: -13.5016508102417
    10. ' ,' → logprob: -13.8766508102417

Token 74: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759579539299011
    2. 'range' → logprob: -0.8259579539299011
    3. ' ' → logprob: -11.950958251953125
    4. '[' → logprob: -12.325958251953125
    5. '	range' → logprob: -12.450958251953125
    6. '   ' → logprob: -14.075958251953125
    7. '  ' → logprob: -14.700958251953125
    8. 'vehicles' → logprob: -14.700958251953125
    9. ' xrange' → logprob: -14.825958251953125
    10. 'ran' → logprob: -15.075958251953125

Token 75: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009984027594327927
    2. '8' → logprob: -4.759984016418457
    3. '(len' → logprob: -6.634984016418457
    4. ' (' → logprob: -10.509984016418457
    5. '(-' → logprob: -11.384984016418457
    6. '9' → logprob: -12.509984016418457
    7. 'len' → logprob: -12.884984016418457
    8. '7' → logprob: -12.884984016418457
    9. ' len' → logprob: -13.259984016418457
    10. '1' → logprob: -13.634984016418457

Token 76: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0106539661064744
    2. ' ' → logprob: -4.885653972625732
    3. '7' → logprob: -6.760653972625732
    4. '1' → logprob: -6.885653972625732
    5. '4' → logprob: -7.635653972625732
    6. 'len' → logprob: -9.260653495788574
    7. ' len' → logprob: -9.385653495788574
    8. '9' → logprob: -10.135653495788574
    9. '0' → logprob: -10.385653495788574
    10. '-' → logprob: -10.510653495788574

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018359452951699495
    2. '):
' → logprob: -6.751835823059082
    3. ' ):' → logprob: -7.751835823059082
    4. ')' → logprob: -8.501835823059082
    5. '+' → logprob: -11.376835823059082
    6. ':' → logprob: -11.626835823059082
    7. '   ' → logprob: -12.501835823059082
    8. '):
' → logprob: -12.751835823059082
    9. ',' → logprob: -13.876835823059082
    10. '):

' → logprob: -14.001835823059082

Token 78: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10571788251399994
    2. '       ' → logprob: -2.355717897415161
    3. '<|end|>' → logprob: -6.605717658996582
    4. '   ' → logprob: -6.730717658996582
    5. '    ' → logprob: -6.730717658996582
    6. ',' → logprob: -7.480717658996582
    7. ' :' → logprob: -8.105717658996582
    8. '):' → logprob: -8.355717658996582
    9. ' ' → logprob: -8.480717658996582
    10. ':
' → logprob: -8.980717658996582

Token 79: ' unmatched' (ID: 95227)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9000890254974365
    2. ' matched' → logprob: -2.1500890254974365
    3. '        ' → logprob: -2.2750890254974365
    4. ' current' → logprob: -2.5250890254974365
    5. '    ' → logprob: -2.7750890254974365
    6. ' match' → logprob: -2.7750890254974365
    7. ' matches' → logprob: -3.4000890254974365
    8. ' ' → logprob: -3.7750890254974365
    9. ' s' → logprob: -3.7750890254974365
    10. ' new' → logprob: -4.525089263916016

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004653930198401213
    2. '=' → logprob: -5.3796539306640625
    3. ' ' → logprob: -10.629653930664062
    4. 's' → logprob: -12.754653930664062
    5. '_' → logprob: -13.004653930664062
    6. ',' → logprob: -13.629653930664062
    7. '_count' → logprob: -13.754653930664062
    8. ' =
' → logprob: -14.754653930664062
    9. ' ' → logprob: -15.004653930664062
    10. 'count' → logprob: -15.004653930664062

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09031835198402405
    2. ' ' → logprob: -3.215318441390991
    3. 'sum' → logprob: -3.840318441390991
    4. ' sum' → logprob: -4.090318202972412
    5. 'vehicles' → logprob: -5.715318202972412
    6. '[' → logprob: -6.215318202972412
    7. '[]' → logprob: -6.965318202972412
    8. ' [' → logprob: -7.090318202972412
    9. ' vehicles' → logprob: -7.590318202972412
    10. '8' → logprob: -9.09031867980957

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19650046527385712
    2. 'sum' → logprob: -1.8215004205703735
    3. '[' → logprob: -4.946500301361084
    4. 'vehicles' → logprob: -4.946500301361084
    5. '[]' → logprob: -7.071500301361084
    6. 'abs' → logprob: -7.196500301361084
    7. 'max' → logprob: -8.696500778198242
    8. '4' → logprob: -8.821500778198242
    9. '[]
' → logprob: -9.446500778198242
    10. ' sum' → logprob: -9.946500778198242

Token 83: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00870155543088913
    2. ' for' → logprob: -4.758701324462891
    3. '   ' → logprob: -9.50870132446289
    4. '       ' → logprob: -11.50870132446289
    5. '	for' → logprob: -13.00870132446289
    6. '```' → logprob: -15.13370132446289
    7. ' ' → logprob: -15.88370132446289
    8. '
' → logprob: -17.25870132446289
    9. '  ' → logprob: -17.38370132446289
    10. ')' → logprob: -18.00870132446289

Token 86: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42934221029281616
    2. ' i' → logprob: -1.054342269897461
    3. 'j' → logprob: -8.304342269897461
    4. 'k' → logprob: -8.804342269897461
    5. ' j' → logprob: -9.429342269897461
    6. 'idx' → logprob: -10.179342269897461
    7. 'v' → logprob: -11.054342269897461
    8. ' idx' → logprob: -11.179342269897461
    9. ' k' → logprob: -11.179342269897461
    10. 'x' → logprob: -11.429342269897461

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00024168188974726945
    2. 'in' → logprob: -8.50024127960205
    3. ' ' → logprob: -10.75024127960205
    4. '<|end|>' → logprob: -11.50024127960205
    5. ',' → logprob: -12.50024127960205
    6. 'range' → logprob: -14.12524127960205
    7. '8' → logprob: -14.50024127960205
    8. '+' → logprob: -15.25024127960205
    9. '0' → logprob: -15.37524127960205
    10. '```' → logprob: -15.37524127960205

Token 88: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048170737922192
    2. ' range' → logprob: -4.511048316955566
    3. '	range' → logprob: -15.136048316955566
    4. ' ' → logprob: -16.76104736328125
    5. '(range' → logprob: -17.01104736328125
    6. '   ' → logprob: -18.63604736328125
    7. 'rang' → logprob: -19.01104736328125
    8. ' xrange' → logprob: -19.01104736328125
    9. '```' → logprob: -19.13604736328125
    10. '  ' → logprob: -19.38604736328125

Token 89: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001347672223346308
    2. '8' → logprob: -9.000134468078613
    3. ' ' → logprob: -12.125134468078613
    4. ' (' → logprob: -12.750134468078613
    5. '(len' → logprob: -13.750134468078613
    6. '(
' → logprob: -14.000134468078613
    7. '<|end|>' → logprob: -14.875134468078613
    8. '   ' → logprob: -15.500134468078613
    9. '7' → logprob: -15.750134468078613
    10. '```' → logprob: -16.25013542175293

Token 90: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00044473158777691424
    2. ' ' → logprob: -7.7504448890686035
    3. 'len' → logprob: -12.500444412231445
    4. '1' → logprob: -12.625444412231445
    5. '4' → logprob: -13.125444412231445
    6. '   ' → logprob: -13.125444412231445
    7. '7' → logprob: -13.375444412231445
    8. ' len' → logprob: -15.062944412231445
    9. '  ' → logprob: -15.375444412231445
    10. ')' → logprob: -15.625444412231445

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38696056604385376
    2. '):
' → logprob: -1.136960506439209
    3. '):
' → logprob: -9.886960983276367
    4. ':' → logprob: -11.386960983276367
    5. ')' → logprob: -11.636960983276367
    6. '   ' → logprob: -11.886960983276367
    7. '       ' → logprob: -12.011960983276367
    8. '):

' → logprob: -13.136960983276367
    9. '+' → logprob: -13.886960983276367
    10. '
' → logprob: -14.511960983276367

Token 92: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1431519240140915
    2. ':' → logprob: -2.2681519985198975
    3. '<|end|>' → logprob: -4.393151760101318
    4. ':
' → logprob: -5.268151760101318
    5. '       ' → logprob: -5.643151760101318
    6. ' if' → logprob: -6.143151760101318
    7. ',' → logprob: -6.143151760101318
    8. '):
' → logprob: -7.518151760101318
    9. '<|end|>' → logprob: -7.643151760101318
    10. '```' → logprob: -7.768151760101318

Token 93: ' cap' (ID: 2328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3770174980163574
    2. ' if' → logprob: -1.8770174980163574
    3. '               ' → logprob: -2.0020174980163574
    4. ' unmatched' → logprob: -4.627017498016357
    5. 'if' → logprob: -5.377017498016357
    6. '```' → logprob: -5.502017498016357
    7. ')' → logprob: -6.127017498016357
    8. '<|end|>' → logprob: -6.627017498016357
    9. '):
' → logprob: -7.502017498016357
    10. ' ' → logprob: -7.752017498016357

Token 94: ' =' (ID: 314)
  Prédit: 'acity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acity' → logprob: -0.05477360635995865
    2. ' =' → logprob: -3.0547735691070557
    3. 'ac' → logprob: -6.304773807525635
    4. '=' → logprob: -6.679773807525635
    5. 'city' → logprob: -6.804773807525635
    6. 'cities' → logprob: -6.804773807525635
    7. 'vehicles' → logprob: -7.929773807525635
    8. '   ' → logprob: -8.804773330688477
    9. 's' → logprob: -9.429773330688477
    10. 'a' → logprob: -9.929773330688477

Token 95: ' vehicles' (ID: 16511)
  Prédit: 'vehicles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vehicles' → logprob: -0.030777301639318466
    2. ' vehicles' → logprob: -3.5307772159576416
    3. 'max' → logprob: -8.030776977539062
    4. 'p' → logprob: -8.405776977539062
    5. 'min' → logprob: -9.280776977539062
    6. '           ' → logprob: -9.280776977539062
    7. '   ' → logprob: -9.655776977539062
    8. ' p' → logprob: -9.905776977539062
    9. 've' → logprob: -10.030776977539062
    10. ' max' → logprob: -11.030776977539062

Token 96: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0009875539690256119
    2. '[' → logprob: -7.250987529754639
    3. '[i' → logprob: -8.250988006591797
    4. ' [(' → logprob: -11.375988006591797
    5. '[
' → logprob: -12.625988006591797
    6. '[((' → logprob: -14.000988006591797
    7. '[min' → logprob: -15.500988006591797
    8. '   ' → logprob: -15.625988006591797
    9. ' [' → logprob: -16.125988006591797
    10. '       ' → logprob: -16.500988006591797

Token 97: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02692249044775963
    2. '(i' → logprob: -4.526922702789307
    3. ' i' → logprob: -4.776922702789307
    4. 'shift' → logprob: -5.276922702789307
    5. '(' → logprob: -6.526922702789307
    6. ' (' → logprob: -7.401922702789307
    7. ' shift' → logprob: -9.026922225952148
    8. '   ' → logprob: -11.526922225952148
    9. '{i' → logprob: -12.276922225952148
    10. ' ' → logprob: -12.651922225952148

Token 98: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.179848313331604
    2. ' +' → logprob: -1.804848313331604
    3. '-' → logprob: -10.054848670959473
    4. ' -' → logprob: -10.429848670959473
    5. ')' → logprob: -11.554848670959473
    6. ' ' → logprob: -12.554848670959473
    7. 'shift' → logprob: -12.804848670959473
    8. '+i' → logprob: -12.929848670959473
    9. '   ' → logprob: -13.179848670959473
    10. ' shift' → logprob: -13.304848670959473

Token 99: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.005948944482952356
    2. ' shift' → logprob: -5.130949020385742
    3. ' ' → logprob: -11.630949020385742
    4. '   ' → logprob: -11.880949020385742
    5. ')' → logprob: -13.255949020385742
    6. '  ' → logprob: -14.380949020385742
    7. 's' → logprob: -14.630949020385742
    8. '8' → logprob: -14.755949020385742
    9. 'hift' → logprob: -15.255949020385742
    10. '.shift' → logprob: -15.880949020385742

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033462412655353546
    2. ')]' → logprob: -3.7834625244140625
    3. ')%' → logprob: -4.6584625244140625
    4. ']' → logprob: -8.033462524414062
    5. ' )' → logprob: -8.158462524414062
    6. ')])' → logprob: -11.158462524414062
    7. '%' → logprob: -11.533462524414062
    8. '   ' → logprob: -11.783462524414062
    9. ']%' → logprob: -12.033462524414062
    10. ')][' → logprob: -12.158462524414062

Token 101: ' %' (ID: 1851)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01638752967119217
    2. ']%' → logprob: -4.391387462615967
    3. ')]' → logprob: -5.891387462615967
    4. ')' → logprob: -7.641387462615967
    5. '%' → logprob: -8.266387939453125
    6. ' ]' → logprob: -8.516387939453125
    7. ')%' → logprob: -9.391387939453125
    8. ']
' → logprob: -10.016387939453125
    9. '])' → logprob: -12.016387939453125
    10. '   ' → logprob: -12.266387939453125

Token 102: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00022129806166049093
    2. ' ' → logprob: -8.500221252441406
    3. 'len' → logprob: -11.125221252441406
    4. ' len' → logprob: -13.375221252441406
    5. '```' → logprob: -14.125221252441406
    6. '   ' → logprob: -14.625221252441406
    7. ')' → logprob: -16.000221252441406
    8. '  ' → logprob: -16.625221252441406
    9. ']' → logprob: -16.875221252441406
    10. '`' → logprob: -17.937721252441406

Token 103: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -2.3676733690081164e-05
    2. 'len' → logprob: -10.87502384185791
    3. ' ' → logprob: -12.37502384185791
    4. '```' → logprob: -15.75002384185791
    5. ' len' → logprob: -16.375022888183594
    6. '   ' → logprob: -16.687522888183594
    7. 'length' → logprob: -17.937522888183594
    8. ')' → logprob: -18.062522888183594
    9. '  ' → logprob: -18.187522888183594
    10. 'eight' → logprob: -18.250022888183594

Token 104: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011200725100934505
    2. ']
' → logprob: -4.511200904846191
    3. ']

' → logprob: -9.511200904846191
    4. ']
' → logprob: -9.761200904846191
    5. ' ]' → logprob: -11.261200904846191
    6. ']-' → logprob: -13.511200904846191
    7. ')]' → logprob: -13.511200904846191
    8. ']>' → logprob: -13.761200904846191
    9. ' ]
' → logprob: -14.511200904846191
    10. ']==' → logprob: -14.511200904846191

Token 105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03964558616280556
    2. ' -' → logprob: -3.4146456718444824
    3. '-' → logprob: -5.789645671844482
    4. ' if' → logprob: -7.039645671844482
    5. '<|end|>' → logprob: -7.289645671844482
    6. '
' → logprob: -8.414645195007324
    7. '            
' → logprob: -8.914645195007324
    8. '               ' → logprob: -9.164645195007324
    9. ')' → logprob: -9.289645195007324
    10. ',' → logprob: -9.289645195007324

Token 106: ' if' (ID: 538)
  Prédit: ' demand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' demand' → logprob: -0.9700281620025635
    2. 'un' → logprob: -1.8450281620025635
    3. ' if' → logprob: -2.0950281620025635
    4. '           ' → logprob: -2.4700281620025635
    5. ' unmatched' → logprob: -2.5950281620025635
    6. 'if' (adapté à ' if') → logprob: -2.9700281620025635
    7. 'diff' → logprob: -3.8450281620025635
    8. ' diff' → logprob: -3.8450281620025635
    9. 'req' → logprob: -4.095027923583984
    10. 'need' → logprob: -4.595027923583984

Token 107: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3419112265110016
    2. 'p' → logprob: -1.3419111967086792
    3. ' cap' → logprob: -3.9669113159179688
    4. 'cap' → logprob: -4.716911315917969
    5. ' vehicles' → logprob: -9.341911315917969
    6. '   ' → logprob: -9.529411315917969
    7. '	p' → logprob: -10.154411315917969
    8. 'vehicles' → logprob: -10.404411315917969
    9. ' ' → logprob: -11.529411315917969
    10. '```' → logprob: -11.779411315917969

Token 108: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000759957532864064
    2. '[' → logprob: -7.375760078430176
    3. ' [' → logprob: -9.375760078430176
    4. ')[' → logprob: -11.250760078430176
    5. '```' → logprob: -12.000760078430176
    6. '[
' → logprob: -12.250760078430176
    7. '][' → logprob: -12.750760078430176
    8. ')' → logprob: -12.750760078430176
    9. '[I' → logprob: -12.750760078430176
    10. ']' → logprob: -13.250760078430176

Token 109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41315197944641113
    2. '>' → logprob: -1.5381519794464111
    3. ']>' → logprob: -2.538151979446411
    4. ' >' → logprob: -3.163151979446411
    5. ' ]' → logprob: -6.413151741027832
    6. '[' → logprob: -8.288151741027832
    7. ']<=' → logprob: -9.288151741027832
    8. ']>=' → logprob: -9.788151741027832
    9. ' ' → logprob: -10.413151741027832
    10. ')' → logprob: -10.663151741027832

Token 110: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1430944949388504
    2. ' >' → logprob: -2.018094539642334
    3. '<=' → logprob: -8.393094062805176
    4. ' <=' → logprob: -8.893094062805176
    5. ' ' → logprob: -11.393094062805176
    6. '[' → logprob: -11.518094062805176
    7. '<' → logprob: -11.518094062805176
    8. '>=' → logprob: -12.268094062805176
    9. '">' → logprob: -12.768094062805176
    10. ')' → logprob: -13.393094062805176

Token 111: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.12694837152957916
    2. ' cap' → logprob: -2.126948356628418
    3. '(cap' → logprob: -11.251948356628418
    4. '0' → logprob: -13.251948356628418
    5. ' ' → logprob: -13.501948356628418
    6. '   ' → logprob: -14.126948356628418
    7. '
' → logprob: -14.251948356628418
    8. '-cap' → logprob: -15.126948356628418
    9. ' vehicles' → logprob: -15.314448356628418
    10. '```' → logprob: -15.376948356628418

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1435951292514801
    2. ':
' → logprob: -2.0185952186584473
    3. '           ' → logprob: -7.643595218658447
    4. '               ' → logprob: -8.768594741821289
    5. '+' → logprob: -9.643594741821289
    6. ':
' → logprob: -9.643594741821289
    7. ':

' → logprob: -10.018594741821289
    8. '):
' → logprob: -10.018594741821289
    9. '):' → logprob: -11.143594741821289
    10. ' and' → logprob: -11.143594741821289

Token 113: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07936020195484161
    2. 'un' → logprob: -3.079360246658325
    3. ' unmatched' → logprob: -3.579360246658325
    4. '           ' → logprob: -7.204360008239746
    5. ' un' → logprob: -7.954360008239746
    6. '+' → logprob: -8.204360008239746
    7. '                
' → logprob: -9.079360008239746
    8. '              ' → logprob: -9.329360008239746
    9. ':
' → logprob: -9.329360008239746
    10. '):
' → logprob: -9.329360008239746

Token 114: ' unmatched' (ID: 95227)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3556617200374603
    2. ' unmatched' → logprob: -1.2306617498397827
    3. '               ' → logprob: -5.105661869049072
    4. '                   ' → logprob: -7.480661869049072
    5. ' un' → logprob: -8.730661392211914
    6. '           ' → logprob: -8.730661392211914
    7. '
' → logprob: -10.230661392211914
    8. '	un' → logprob: -10.355661392211914
    9. '   ' → logprob: -10.355661392211914
    10. '                ' → logprob: -10.855661392211914

Token 115: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12693944573402405
    2. '+=' → logprob: -2.126939535140991
    3. '=' → logprob: -12.12693977355957
    4. '+=(' → logprob: -12.62693977355957
    5. ' =' → logprob: -13.75193977355957
    6. '   ' → logprob: -14.12693977355957
    7. '+' → logprob: -14.75193977355957
    8. ']+=' → logprob: -15.87693977355957
    9. ' ' → logprob: -16.12693977355957
    10. '           ' → logprob: -16.62693977355957

Token 116: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.11346796900033951
    2. ' p' → logprob: -2.2384679317474365
    3. '(p' → logprob: -7.613468170166016
    4. '1' → logprob: -9.238468170166016
    5. ' (' → logprob: -10.238468170166016
    6. '(' → logprob: -11.863468170166016
    7. ' ' → logprob: -12.113468170166016
    8. '0' → logprob: -13.738468170166016
    9. '
' → logprob: -13.863468170166016
    10. '   ' → logprob: -13.988468170166016

Token 117: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -14.750000953674316
    3. '[' → logprob: -17.125
    4. '```' → logprob: -17.75
    5. '[I' → logprob: -19.0
    6. '{i' → logprob: -19.125
    7. '[
' → logprob: -19.5
    8. '(i' → logprob: -19.625
    9. ' [' → logprob: -19.625
    10. ' i' → logprob: -19.625

Token 118: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31591543555259705
    2. ']' → logprob: -1.5659154653549194
    3. '-' → logprob: -2.81591534614563
    4. '[i' → logprob: -6.940915584564209
    5. ')' → logprob: -7.315915584564209
    6. ']-' → logprob: -7.940915584564209
    7. ' ' → logprob: -10.06591510772705
    8. '[' → logprob: -10.06591510772705
    9. ' ]' → logprob: -10.81591510772705
    10. '   ' → logprob: -11.56591510772705

Token 119: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07596559822559357
    2. '-' → logprob: -2.700965642929077
    3. '               ' → logprob: -5.700965404510498
    4. '       ' → logprob: -7.200965404510498
    5. '           ' → logprob: -7.700965404510498
    6. '
' → logprob: -7.700965404510498
    7. '   ' → logprob: -8.450965881347656
    8. '                
' → logprob: -8.700965881347656
    9. '    
' → logprob: -9.325965881347656
    10. '  
' → logprob: -9.575965881347656

Token 120: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.01815064437687397
    2. ' cap' → logprob: -4.018150806427002
    3. '(cap' → logprob: -14.768150329589844
    4. ' ' → logprob: -16.518150329589844
    5. 'capacity' → logprob: -16.768150329589844
    6. '   ' → logprob: -17.268150329589844
    7. 'capac' → logprob: -17.518150329589844
    8. 'caps' → logprob: -17.643150329589844
    9. '```' → logprob: -17.893150329589844
    10. '           ' → logprob: -17.893150329589844

Token 121: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025105785578489304
    2. '
' → logprob: -3.9001057147979736
    3. '   ' → logprob: -5.525105953216553
    4. '           ' → logprob: -8.275105476379395
    5. ')' → logprob: -9.150105476379395
    6. '        
' → logprob: -10.025105476379395
    7. ',' → logprob: -10.775105476379395
    8. '```' → logprob: -10.775105476379395
    9. '<|end|>' → logprob: -10.900105476379395
    10. 'if' → logprob: -10.900105476379395

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016228964552283287
    2. '
' → logprob: -4.391229152679443
    3. '   ' → logprob: -5.891229152679443
    4. '           ' → logprob: -7.391229152679443
    5. '```' → logprob: -9.266228675842285
    6. '<|end|>' → logprob: -9.391228675842285
    7. ' if' → logprob: -10.641228675842285
    8. '        
' → logprob: -10.766228675842285
    9. ')' → logprob: -10.891228675842285
    10. '               ' → logprob: -11.016228675842285

Token 123: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0602562427520752
    2. '   ' → logprob: -1.1852562427520752
    3. 'if' (adapté à ' if') → logprob: -1.1852562427520752
    4. '       ' → logprob: -3.185256242752075
    5. '
' → logprob: -7.310256004333496
    6. ' ' → logprob: -9.810256004333496
    7. '  ' → logprob: -10.185256004333496
    8. '        
' → logprob: -10.185256004333496
    9. '    
' → logprob: -10.435256004333496
    10. '    ' → logprob: -10.685256004333496

Token 124: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.061992332339286804
    2. 'best' → logprob: -2.8119924068450928
    3. '(best' → logprob: -11.311992645263672
    4. '	best' → logprob: -11.936992645263672
    5. ' ' → logprob: -12.811992645263672
    6. '   ' → logprob: -13.686992645263672
    7. ' (' → logprob: -13.811992645263672
    8. 'b' → logprob: -15.061992645263672
    9. ' ' → logprob: -15.936992645263672
    10. '  ' → logprob: -15.936992645263672

Token 125: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -3.953082341467962e-05
    2. '_best' → logprob: -10.250039100646973
    3. 'un' → logprob: -13.375039100646973
    4. '_pattern' → logprob: -13.625039100646973
    5. '_' → logprob: -14.000039100646973
    6. 'best' → logprob: -16.50004005432129
    7. '_mat' → logprob: -16.75004005432129
    8. '_match' → logprob: -16.87504005432129
    9. '_uns' → logprob: -17.00004005432129
    10. '_unc' → logprob: -17.00004005432129

Token 126: 'matched' (ID: 60401)
  Prédit: 'matched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matched' → logprob: -0.00034654809860512614
    2. 'atched' → logprob: -8.000346183776855
    3. 'mat' → logprob: -11.625346183776855
    4. ' matched' → logprob: -14.000346183776855
    5. 'm' → logprob: -14.375346183776855
    6. 'match' → logprob: -15.000346183776855
    7. 'atch' → logprob: -15.375346183776855
    8. 'Matched' → logprob: -16.125347137451172
    9. 'at' → logprob: -16.750347137451172
    10. '_mat' → logprob: -18.000347137451172

Token 127: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25192946195602417
    2. 'is' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.37692928314209
    4. '==' → logprob: -16.001930236816406
    5. '   ' → logprob: -17.126930236816406
    6. ')' → logprob: -18.126930236816406
    7. '	is' → logprob: -18.126930236816406
    8. '  ' → logprob: -18.251930236816406
    9. 'i' → logprob: -18.501930236816406
    10. '[' → logprob: -18.751930236816406

Token 128: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03804194927215576
    2. ' None' → logprob: -3.2880420684814453
    3. '   ' → logprob: -15.788042068481445
    4. 'none' → logprob: -16.413042068481445
    5. '=None' → logprob: -16.538042068481445
    6. '  ' → logprob: -17.163042068481445
    7. '_None' → logprob: -17.163042068481445
    8. ' ' → logprob: -17.413042068481445
    9. 'not' → logprob: -17.663042068481445
    10. '0' → logprob: -17.663042068481445

Token 129: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0007142199319787323
    2. 'or' → logprob: -7.250714302062988
    3. ' ' → logprob: -13.500714302062988
    4. '	or' → logprob: -14.250714302062988
    5. ',' → logprob: -14.500714302062988
    6. '        ' → logprob: -14.625714302062988
    7. '       ' → logprob: -15.250714302062988
    8. '<|end|>' → logprob: -15.375714302062988
    9. '           ' → logprob: -15.750714302062988
    10. ' ' → logprob: -16.000713348388672

Token 130: ' unmatched' (ID: 95227)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.18242475390434265
    2. ' unmatched' → logprob: -1.807424783706665
    3. 'best' → logprob: -6.932424545288086
    4. '           ' → logprob: -7.557424545288086
    5. '       ' → logprob: -8.182424545288086
    6. ' best' → logprob: -8.182424545288086
    7. '   ' → logprob: -8.557424545288086
    8. ' un' → logprob: -8.807424545288086
    9. '	un' → logprob: -9.932424545288086
    10. '        ' → logprob: -10.182424545288086

Token 131: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.34845519065856934
    2. '<' → logprob: -1.2234551906585693
    3. ' ' → logprob: -13.098455429077148
    4. ' <=' → logprob: -13.473455429077148
    5. '<=' → logprob: -13.723455429077148
    6. '<
' → logprob: -13.973455429077148
    7. '<int' → logprob: -14.223455429077148
    8. '[' → logprob: -14.723455429077148
    9. '<size' → logprob: -14.723455429077148
    10. '<class' → logprob: -15.098455429077148

Token 132: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.01416398212313652
    2. ' best' → logprob: -4.264163970947266
    3. '	best' → logprob: -14.639163970947266
    4. '   ' → logprob: -16.889163970947266
    5. '(best' → logprob: -17.139163970947266
    6. '_best' → logprob: -17.639163970947266
    7. '.best' → logprob: -18.389163970947266
    8. 'b' → logprob: -18.889163970947266
    9. ' ' → logprob: -18.889163970947266
    10. '```' → logprob: -18.889163970947266

Token 133: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -4.4849443838757e-06
    2. 'un' → logprob: -12.375004768371582
    3. '_mat' → logprob: -16.000003814697266
    4. '_' → logprob: -17.875003814697266
    5. '_pattern' → logprob: -18.125003814697266
    6. '_best' → logprob: -18.500003814697266
    7. 'Un' → logprob: -18.625003814697266
    8. '.un' → logprob: -18.875003814697266
    9. '_uns' → logprob: -19.000003814697266
    10. '	un' → logprob: -19.125003814697266

Token 134: 'matched' (ID: 60401)
  Prédit: 'matched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matched' → logprob: -3.7697225252486533e-06
    2. 'atched' → logprob: -13.500003814697266
    3. 'mat' → logprob: -13.875003814697266
    4. '_mat' → logprob: -14.000003814697266
    5. 'match' → logprob: -15.125003814697266
    6. ' matched' → logprob: -15.625003814697266
    7. 'm' → logprob: -17.500003814697266
    8. 'Matched' → logprob: -18.125003814697266
    9. 'matches' → logprob: -18.500003814697266
    10. 'ma' → logprob: -18.750003814697266

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05606091395020485
    2. ':
' → logprob: -2.931061029434204
    3. '       ' → logprob: -6.931060791015625
    4. '           ' → logprob: -8.681060791015625
    5. '   ' → logprob: -11.556060791015625
    6. ':
' → logprob: -11.931060791015625
    7. ',' → logprob: -12.556060791015625
    8. ':

' → logprob: -12.806060791015625
    9. '):' → logprob: -13.556060791015625
    10. ' :' → logprob: -13.556060791015625

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06116512417793274
    2. ':' → logprob: -3.1861650943756104
    3. ':
' → logprob: -4.4361653327941895
    4. '       ' → logprob: -5.5611653327941895
    5. ' best' → logprob: -6.5611653327941895
    6. 'best' → logprob: -7.5611653327941895
    7. '(best' → logprob: -9.311164855957031
    8. '	best' → logprob: -9.561164855957031
    9. '               ' → logprob: -9.686164855957031
    10. '_best' → logprob: -9.686164855957031

Token 137: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.020305128768086433
    2. '           ' → logprob: -4.270305156707764
    3. 'best' (adapté à ' best') → logprob: -5.270305156707764
    4. '       ' → logprob: -7.020305156707764
    5. '   ' → logprob: -10.395304679870605
    6. '               ' → logprob: -10.645304679870605
    7. '	best' → logprob: -10.645304679870605
    8. '(best' → logprob: -13.020304679870605
    9. '_best' → logprob: -13.145304679870605
    10. 'Best' → logprob: -13.645304679870605

Token 138: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -2.4987974029500037e-05
    2. '_pattern' → logprob: -10.625024795532227
    3. '_unc' → logprob: -15.750024795532227
    4. '_best' → logprob: -16.250024795532227
    5. '_uns' → logprob: -16.250024795532227
    6. '_' → logprob: -16.750024795532227
    7. '_patterns' → logprob: -17.250024795532227
    8. '_unpack' → logprob: -17.375024795532227
    9. '_unref' → logprob: -17.500024795532227
    10. '_match' → logprob: -17.625024795532227

Token 139: 'matched' (ID: 60401)
  Prédit: 'matched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matched' → logprob: -2.4391956685576588e-05
    2. 'atched' → logprob: -11.000024795532227
    3. 'mat' → logprob: -12.125024795532227
    4. 'm' → logprob: -14.250024795532227
    5. 'match' → logprob: -14.375024795532227
    6. '_mat' → logprob: -14.625024795532227
    7. ' matched' → logprob: -15.250024795532227
    8. 'at' → logprob: -16.375024795532227
    9. 'matches' → logprob: -16.625024795532227
    10. 'Matched' → logprob: -17.250024795532227

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132622241973877
    2. '=' → logprob: -1.3132622241973877
    3. ' ' → logprob: -15.688261985778809
    4. ',' → logprob: -16.313262939453125
    5. ')' → logprob: -17.188262939453125
    6. ' =
' → logprob: -17.313262939453125
    7. '   ' → logprob: -17.563262939453125
    8. 'un' → logprob: -17.563262939453125
    9. '=
' → logprob: -17.563262939453125
    10. '           ' → logprob: -17.813262939453125

Token 141: ' unmatched' (ID: 95227)
  Prédit: ' unmatched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unmatched' → logprob: -0.5759909749031067
    2. 'un' → logprob: -0.8259909749031067
    3. '	un' → logprob: -10.825990676879883
    4. ' unseen' → logprob: -10.950990676879883
    5. ' unmet' → logprob: -12.700990676879883
    6. ' un' → logprob: -12.700990676879883
    7. ' unatt' → logprob: -13.825990676879883
    8. ' ' → logprob: -14.450990676879883
    9. 'unn' → logprob: -14.450990676879883
    10. '(un' → logprob: -14.450990676879883

Token 142: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022213248303160071
    2. '       ' → logprob: -8.625222206115723
    3. '   ' → logprob: -10.750222206115723
    4. '```' → logprob: -11.875222206115723
    5. '
' → logprob: -12.000222206115723
    6. '               ' → logprob: -12.750222206115723
    7. '<|end|>' → logprob: -13.750222206115723
    8. ',' → logprob: -13.750222206115723
    9. '          ' → logprob: -14.250222206115723
    10. '[' → logprob: -14.625222206115723

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022570860164705664
    2. '       ' → logprob: -8.625226020812988
    3. '   ' → logprob: -10.500226020812988
    4. '```' → logprob: -11.625226020812988
    5. '
' → logprob: -12.875226020812988
    6. '               ' → logprob: -13.000226020812988
    7. '<|end|>' → logprob: -14.000226020812988
    8. '          ' → logprob: -14.125226020812988
    9. '[' → logprob: -14.250226020812988
    10. 'best' → logprob: -14.750226020812988

Token 144: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.3132822811603546
    2. ' best' → logprob: -1.3132822513580322
    3. '           ' → logprob: -11.188282012939453
    4. '	best' → logprob: -12.813282012939453
    5. '_best' → logprob: -13.313282012939453
    6. '```' → logprob: -14.188282012939453
    7. '   ' → logprob: -14.688282012939453
    8. '-best' → logprob: -14.813282012939453
    9. '.best' → logprob: -15.063282012939453
    10. '(best' → logprob: -15.313282012939453

Token 145: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -8.180258191714529e-06
    2. 'pattern' → logprob: -12.875008583068848
    3. '_patterns' → logprob: -12.875008583068848
    4. '_' → logprob: -13.250008583068848
    5. '_p' → logprob: -15.500008583068848
    6. '_pat' → logprob: -15.875008583068848
    7. '```' → logprob: -16.00000762939453
    8. '_code' → logprob: -16.25000762939453
    9. ' _' → logprob: -16.50000762939453
    10. '\' → logprob: -16.87500762939453

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. '＝' → logprob: -16.063262939453125
    4. ' ' → logprob: -16.688262939453125
    5. ',' → logprob: -16.688262939453125
    6. '=

' → logprob: -17.688262939453125
    7. '=p' → logprob: -17.813262939453125
    8. 's' → logprob: -17.813262939453125
    9. '=line' → logprob: -18.188262939453125
    10. '```' → logprob: -18.313262939453125

Token 147: ' [(' (ID: 43900)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.6561106443405151
    2. '(p' → logprob: -1.7811106443405151
    3. '(' → logprob: -2.7811107635498047
    4. '[(' → logprob: -2.9061107635498047
    5. ' shift' → logprob: -3.0311107635498047
    6. 'p' → logprob: -3.1561107635498047
    7. 'vehicles' → logprob: -3.6561107635498047
    8. '[p' → logprob: -3.6561107635498047
    9. ' (' → logprob: -4.031110763549805
    10. '[' → logprob: -4.406110763549805

Token 148: 'vehicles' (ID: 124920)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20089265704154968
    2. '(i' → logprob: -2.075892686843872
    3. 'p' → logprob: -3.950892686843872
    4. 'vehicles' → logprob: -3.950892686843872
    5. '(p' → logprob: -4.325892448425293
    6. '(' → logprob: -5.450892448425293
    7. ' (' → logprob: -8.700892448425293
    8. '(vehicle' → logprob: -9.700892448425293
    9. ' vehicles' → logprob: -9.950892448425293
    10. '   ' → logprob: -10.200892448425293

Token 149: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3189913034439087
    2. '(i' → logprob: -1.3189913034439087
    3. '(' → logprob: -5.443991184234619
    4. '[i' → logprob: -7.693991184234619
    5. '   ' → logprob: -8.443991661071777
    6. '(ii' → logprob: -9.068991661071777
    7. ')' → logprob: -9.193991661071777
    8. ' (' → logprob: -9.443991661071777
    9. '(index' → logprob: -9.818991661071777
    10. '[' → logprob: -10.068991661071777

Token 150: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011775466613471508
    2. '(i' → logprob: -4.511775493621826
    3. ' i' → logprob: -7.386775493621826
    4. ' (' → logprob: -9.636775016784668
    5. '   ' → logprob: -10.636775016784668
    6. '(' → logprob: -12.011775016784668
    7. ' ' → logprob: -12.511775016784668
    8. ')i' → logprob: -13.386775016784668
    9. 'j' → logprob: -13.636775016784668
    10. '     ' → logprob: -14.011775016784668

Token 151: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15817949175834656
    2. ' +' → logprob: -2.408179521560669
    3. '+i' → logprob: -3.033179521560669
    4. '(i' → logprob: -5.90817928314209
    5. ')' → logprob: -6.03317928314209
    6. ')+' → logprob: -7.03317928314209
    7. 'i' → logprob: -7.65817928314209
    8. '(' → logprob: -7.78317928314209
    9. ' ' → logprob: -8.03317928314209
    10. ']+' → logprob: -8.90817928314209

Token 152: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.002023212378844619
    2. ' shift' → logprob: -6.252023220062256
    3. '(' → logprob: -9.877022743225098
    4. '(i' → logprob: -10.752022743225098
    5. 'i' → logprob: -11.502022743225098
    6. ' (' → logprob: -12.127022743225098
    7. '   ' → logprob: -12.627022743225098
    8. ' ' → logprob: -14.002022743225098
    9. '(s' → logprob: -14.002022743225098
    10. ' i' → logprob: -14.752022743225098

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04308037459850311
    2. ')%' → logprob: -3.1680803298950195
    3. ' )' → logprob: -10.66808032989502
    4. '%' → logprob: -11.41808032989502
    5. ')]' → logprob: -11.41808032989502
    6. '   ' → logprob: -11.66808032989502
    7. ')i' → logprob: -11.66808032989502
    8. 'i' → logprob: -12.41808032989502
    9. ')
' → logprob: -12.79308032989502
    10. '+' → logprob: -13.66808032989502

Token 154: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47768017649650574
    2. ')%' → logprob: -1.6026802062988281
    3. '%' → logprob: -1.7276802062988281
    4. ' %' → logprob: -8.477680206298828
    5. ' )' → logprob: -8.977680206298828
    6. '%)' → logprob: -9.102680206298828
    7. '   ' → logprob: -9.602680206298828
    8. '%i' → logprob: -10.102680206298828
    9. '```' → logprob: -10.477680206298828
    10. ' ' → logprob: -10.602680206298828

Token 155: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.375016212463379
    3. '   ' → logprob: -13.250016212463379
    4. '```' → logprob: -13.500016212463379
    5. ')' → logprob: -14.875016212463379
    6. ']' → logprob: -15.375016212463379
    7. '``' → logprob: -15.500016212463379
    8. 'vehicles' → logprob: -15.500016212463379
    9. '`' → logprob: -16.875015258789062
    10. 'i' → logprob: -16.937515258789062

Token 156: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.625007629394531
    3. '```' → logprob: -13.000007629394531
    4. '   ' → logprob: -14.500007629394531
    5. 'vehicles' → logprob: -14.875007629394531
    6. ')' → logprob: -16.12500762939453
    7. '``' → logprob: -16.12500762939453
    8. '
' → logprob: -16.50000762939453
    9. 'i' → logprob: -16.81250762939453
    10. '...' → logprob: -17.00000762939453

Token 157: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4088315963745117
    2. '],' → logprob: -1.4088315963745117
    3. '])' → logprob: -2.6588315963745117
    4. ')]' → logprob: -4.533831596374512
    5. ')' → logprob: -4.908831596374512
    6. ']-' → logprob: -6.783831596374512
    7. '])]' → logprob: -7.158831596374512
    8. '),' → logprob: -7.283831596374512
    9. ']+' → logprob: -9.533831596374512
    10. ']]' → logprob: -9.908831596374512

Token 158: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6335673928260803
    2. ' for' → logprob: -0.7585673928260803
    3. ' -' → logprob: -8.133567810058594
    4. '-' → logprob: -8.758567810058594
    5. ' ' → logprob: -9.133567810058594
    6. '   ' → logprob: -9.258567810058594
    7. '       ' → logprob: -10.008567810058594
    8. '           ' → logprob: -10.008567810058594
    9. ')' → logprob: -10.133567810058594
    10. 'if' → logprob: -10.633567810058594

Token 159: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06196858361363411
    2. ' i' → logprob: -2.8119685649871826
    3. 'range' → logprob: -14.811968803405762
    4. ' ' → logprob: -15.311968803405762
    5. ' in' → logprob: -15.686968803405762
    6. ' range' → logprob: -16.061967849731445
    7. '	i' → logprob: -17.436967849731445
    8. 'in' → logprob: -17.686967849731445
    9. '`' → logprob: -18.811967849731445
    10. '(i' → logprob: -18.936967849731445

Token 160: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20149607956409454
    2. ' range' → logprob: -1.7014961242675781
    3. '(range' → logprob: -9.576496124267578
    4. '(' → logprob: -11.951496124267578
    5. '8' → logprob: -12.576496124267578
    6. '	range' → logprob: -12.951496124267578
    7. ' ' → logprob: -14.326496124267578
    8. 'in' → logprob: -14.951496124267578
    9. ' in' → logprob: -15.701496124267578
    10. ' xrange' → logprob: -16.326496124267578

Token 161: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048408225178719
    2. ' range' → logprob: -4.511048316955566
    3. '8' → logprob: -15.636048316955566
    4. ' ' → logprob: -15.761048316955566
    5. '(range' → logprob: -16.136049270629883
    6. '   ' → logprob: -16.386049270629883
    7. '	range' → logprob: -17.386049270629883
    8. '
' → logprob: -17.761049270629883
    9. '[' → logprob: -18.261049270629883
    10. '`' → logprob: -18.511049270629883

Token 162: '(' (ID: 7)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00018625585653353482
    2. '(' → logprob: -8.6251859664917
    3. ' ' → logprob: -12.0001859664917
    4. '   ' → logprob: -15.1251859664917
    5. 'len' → logprob: -16.250186920166016
    6. '1' → logprob: -17.187686920166016
    7. ' (' → logprob: -17.375186920166016
    8. '
' → logprob: -17.437686920166016
    9. '```' → logprob: -17.500186920166016
    10. 'eight' → logprob: -17.562686920166016

Token 163: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.000006675720215
    4. 'eight' → logprob: -18.00000762939453
    5. '(' → logprob: -18.37500762939453
    6. '0' → logprob: -18.50000762939453
    7. '```' → logprob: -18.68750762939453
    8. '  ' → logprob: -18.75000762939453
    9. '       ' → logprob: -18.75000762939453
    10. 'len' → logprob: -19.18750762939453

Token 164: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04863164573907852
    2. ')]' → logprob: -3.0486316680908203
    3. ' ]' → logprob: -10.67363166809082
    4. '])' → logprob: -12.17363166809082
    5. ']
' → logprob: -12.54863166809082
    6. '()]' → logprob: -12.67363166809082
    7. ')' → logprob: -13.04863166809082
    8. '}]' → logprob: -13.17363166809082
    9. ']]' → logprob: -13.42363166809082
    10. '])]' → logprob: -13.54863166809082

Token 165: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.45472219586372375
    2. '   ' → logprob: -1.3297221660614014
    3. '<|end|>' → logprob: -2.4547221660614014
    4. '
' → logprob: -5.0797224044799805
    5. ')' → logprob: -5.9547224044799805
    6. ' print' → logprob: -6.4547224044799805
    7. 'for' → logprob: -7.4547224044799805
    8. '```' → logprob: -7.5797224044799805
    9. 'newline' → logprob: -7.7047224044799805
    10. '\n' → logprob: -7.7047224044799805

Token 166: ' elif' (ID: 9497)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004110815469175577
    2. 'if' → logprob: -6.129110813140869
    3. 'for' → logprob: -6.629110813140869
    4. '   ' → logprob: -8.004111289978027
    5. ' print' → logprob: -8.754111289978027
    6. ' if' → logprob: -9.754111289978027
    7. ' for' → logprob: -10.629111289978027
    8. '```' → logprob: -12.004111289978027
    9. 'else' → logprob: -13.004111289978027
    10. '    
' → logprob: -13.004111289978027

Token 167: ' unmatched' (ID: 95227)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.252934992313385
    2. ' unmatched' → logprob: -1.5029349327087402
    3. 'best' → logprob: -7.12793493270874
    4. ' best' → logprob: -8.877935409545898
    5. '	un' → logprob: -11.377935409545898
    6. '   ' → logprob: -11.377935409545898
    7. ' ' → logprob: -11.627935409545898
    8. ' un' → logprob: -11.752935409545898
    9. '       ' → logprob: -13.002935409545898
    10. '    ' → logprob: -13.252935409545898

Token 168: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5586766600608826
    2. '==' → logprob: -0.9336766600608826
    3. '>' → logprob: -4.433676719665527
    4. ' <=' → logprob: -4.683676719665527
    5. ' >' → logprob: -4.683676719665527
    6. '<=' → logprob: -5.433676719665527
    7. '=' → logprob: -9.933676719665527
    8. '<' → logprob: -10.308676719665527
    9. ' <' → logprob: -10.558676719665527
    10. ' >=' → logprob: -10.808676719665527

Token 169: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.47409164905548096
    2. ' best' → logprob: -0.974091649055481
    3. '	best' → logprob: -11.724091529846191
    4. '   ' → logprob: -12.724091529846191
    5. '0' → logprob: -13.849091529846191
    6. ' ' → logprob: -14.224091529846191
    7. '       ' → logprob: -14.224091529846191
    8. '(best' → logprob: -15.224091529846191
    9. 'b' → logprob: -15.349091529846191
    10. '           ' → logprob: -15.849091529846191

Token 170: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -0.0003957608714699745
    2. '_pattern' → logprob: -7.875395774841309
    3. '_mat' → logprob: -11.500395774841309
    4. 'un' → logprob: -12.250395774841309
    5. '_match' → logprob: -14.875395774841309
    6. '_uns' → logprob: -15.875395774841309
    7. '_best' → logprob: -16.625394821166992
    8. 'pattern' → logprob: -17.000394821166992
    9. '_matching' → logprob: -17.000394821166992
    10. '_patterns' → logprob: -17.375394821166992

Token 171: 'matched' (ID: 60401)
  Prédit: 'matched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matched' → logprob: -0.00010211274639004841
    2. 'atched' → logprob: -9.375102043151855
    3. 'mat' → logprob: -11.250102043151855
    4. 'match' → logprob: -13.125102043151855
    5. 'm' → logprob: -14.375102043151855
    6. 'atch' → logprob: -14.500102043151855
    7. ' matched' → logprob: -14.750102043151855
    8. '_mat' → logprob: -15.500102043151855
    9. 'matching' → logprob: -15.875102043151855
    10. 'at' → logprob: -16.000102996826172

Token 172: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012232366017997265
    2. 'and' → logprob: -5.262232303619385
    3. '       ' → logprob: -5.887232303619385
    4. ':' → logprob: -6.262232303619385
    5. '   ' → logprob: -6.637232303619385
    6. ':
' → logprob: -7.012232303619385
    7. '           ' → logprob: -10.262232780456543
    8. ',' → logprob: -11.762232780456543
    9. ' ' → logprob: -11.762232780456543
    10. '	and' → logprob: -12.012232780456543

Token 173: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14054842293262482
    2. ' if' → logprob: -2.5155484676361084
    3. '           ' → logprob: -3.1405484676361084
    4. ' for' → logprob: -5.140548229217529
    5. ' continue' → logprob: -8.015548706054688
    6. ' and' → logprob: -8.015548706054688
    7. '   ' → logprob: -8.515548706054688
    8. 'if' → logprob: -9.015548706054688
    9. ' best' → logprob: -10.015548706054688
    10. ' break' → logprob: -10.765548706054688

Token 174: ' old' (ID: 2890)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2814618349075317
    2. ' for' → logprob: -1.2814618349075317
    3. ' if' → logprob: -2.156461715698242
    4. ' current' → logprob: -2.156461715698242
    5. 'for' → logprob: -2.656461715698242
    6. 'if' → logprob: -3.156461715698242
    7. ' new' → logprob: -3.406461715698242
    8. 'current' → logprob: -3.781461715698242
    9. ' best' → logprob: -4.781461715698242
    10. 'new' → logprob: -5.156461715698242

Token 175: '_val' (ID: 13694)
  Prédit: '_pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.051927946507930756
    2. 'pattern' → logprob: -3.4269280433654785
    3. '_cap' → logprob: -5.1769280433654785
    4. '_capacity' → logprob: -5.5519280433654785
    5. '_sum' → logprob: -6.1769280433654785
    6. '_best' → logprob: -6.6769280433654785
    7. '_total' → logprob: -7.4269280433654785
    8. '_pat' → logprob: -7.4269280433654785
    9. 'sum' → logprob: -7.8019280433654785
    10. '_' → logprob: -7.8019280433654785

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8566551208496094
    2. ' =' → logprob: -0.8566551208496094
    3. 's' → logprob: -1.9816551208496094
    4. 'ues' → logprob: -6.106655120849609
    5. 'pattern' → logprob: -6.231655120849609
    6. 'uel' → logprob: -6.606655120849609
    7. '=s' → logprob: -6.856655120849609
    8. 'ue' → logprob: -6.981655120849609
    9. '_pattern' → logprob: -6.981655120849609
    10. 'for' → logprob: -8.04415512084961

Token 177: ' int' (ID: 677)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.35534948110580444
    2. 'best' → logprob: -1.7303495407104492
    3. 'max' → logprob: -2.605349540710449
    4. 'min' → logprob: -4.105349540710449
    5. 'vehicles' → logprob: -4.230349540710449
    6. ' sum' → logprob: -5.730349540710449
    7. '0' → logprob: -6.105349540710449
    8. 'p' → logprob: -6.230349540710449
    9. 'int' → logprob: -6.605349540710449
    10. '[' → logprob: -6.605349540710449

Token 178: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4770156741142273
    2. '("' → logprob: -1.352015733718872
    3. '(best' → logprob: -2.477015733718872
    4. '(sum' → logprob: -4.727015495300293
    5. '(input' → logprob: -4.977015495300293
    6. '(' → logprob: -5.102015495300293
    7. '(max' → logprob: -5.352015495300293
    8. '(all' → logprob: -5.602015495300293
    9. '(min' → logprob: -5.977015495300293
    10. '(len' → logprob: -6.852015495300293

Token 179: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.003349178470671177
    2. ''.' → logprob: -5.753349304199219
    3. ''' → logprob: -8.878349304199219
    4. '''' → logprob: -10.753349304199219
    5. ' ''.' → logprob: -12.878349304199219
    6. '"' → logprob: -12.878349304199219
    7. '''
' → logprob: -13.253349304199219
    8. '('' → logprob: -13.378349304199219
    9. 'best' → logprob: -14.378349304199219
    10. '','.' → logprob: -14.628349304199219

Token 180: 'join' (ID: 10891)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0006483370088972151
    2. 'join' → logprob: -7.375648498535156
    3. ''.' → logprob: -11.625648498535156
    4. 'str' → logprob: -12.250648498535156
    5. '''' → logprob: -12.500648498535156
    6. ' ''.' → logprob: -13.375648498535156
    7. ''' → logprob: -14.125648498535156
    8. '','.' → logprob: -14.375648498535156
    9. 'print' → logprob: -14.500648498535156
    10. '.join' → logprob: -14.750648498535156

Token 181: '(map' (ID: 16946)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.31522881984710693
    2. '(map' → logprob: -1.315228819847107
    3. 'str' → logprob: -7.0652289390563965
    4. 'map' → logprob: -7.4402289390563965
    5. '[str' → logprob: -7.8152289390563965
    6. '([' → logprob: -9.315228462219238
    7. '(' → logprob: -11.065228462219238
    8. '(best' → logprob: -11.815228462219238
    9. ' map' → logprob: -12.940228462219238
    10. '[' → logprob: -13.190228462219238

Token 182: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.003645210759714246
    2. 'str' → logprob: -5.628645420074463
    3. '(lambda' → logprob: -10.753644943237305
    4. '[str' → logprob: -11.628644943237305
    5. ' str' → logprob: -12.253644943237305
    6. '=str' → logprob: -12.503644943237305
    7. '
' → logprob: -12.878644943237305
    8. '(' → logprob: -14.128644943237305
    9. ',str' → logprob: -14.128644943237305
    10. '	str' → logprob: -14.503644943237305

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33649465441703796
    2. ',b' → logprob: -1.3364946842193604
    3. ',[' → logprob: -4.211494445800781
    4. ',(' → logprob: -4.961494445800781
    5. ',p' → logprob: -6.961494445800781
    6. '(best' → logprob: -8.711494445800781
    7. '(' → logprob: -12.336494445800781
    8. ' ,' → logprob: -12.461494445800781
    9. ',v' → logprob: -12.461494445800781
    10. '(b' → logprob: -12.461494445800781

Token 184: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.013120695948600769
    2. 'vehicles' → logprob: -4.888120651245117
    3. ' best' → logprob: -5.513120651245117
    4. '   ' → logprob: -8.013120651245117
    5. ' vehicles' → logprob: -8.513120651245117
    6. 'p' → logprob: -8.513120651245117
    7. '(best' → logprob: -8.638120651245117
    8. '[' → logprob: -8.638120651245117
    9. ')' → logprob: -9.888120651245117
    10. ' p' → logprob: -10.138120651245117

Token 185: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.0004319804720580578
    2. 'pattern' → logprob: -7.750432014465332
    3. '[' → logprob: -15.125432014465332
    4. '_p' → logprob: -16.000431060791016
    5. '   ' → logprob: -16.000431060791016
    6. 'p' → logprob: -16.125431060791016
    7. '
' → logprob: -16.250431060791016
    8. 'attern' → logprob: -16.375431060791016
    9. ' pattern' → logprob: -16.500431060791016
    10. 'Pattern' → logprob: -16.500431060791016

Token 186: ')))
' (ID: 12562)
  Prédit: ')))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))
' → logprob: -0.5973207950592041
    2. ')))' → logprob: -0.8473207950592041
    3. '))' → logprob: -4.097320556640625
    4. ' ' → logprob: -5.847320556640625
    5. '))
' → logprob: -6.972320556640625
    6. ')))

' → logprob: -8.347320556640625
    7. '   ' → logprob: -9.097320556640625
    8. ' ))' → logprob: -9.222320556640625
    9. ')))
' → logprob: -9.722320556640625
    10. '+' → logprob: -10.222320556640625

Token 187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009798826649785042
    2. '<|end|>' → logprob: -5.259799003601074
    3. '+' → logprob: -6.009799003601074
    4. ',' → logprob: -8.009799003601074
    5. ')' → logprob: -8.134799003601074
    6. '>' → logprob: -8.384799003601074
    7. '<|end|>' → logprob: -8.509799003601074
    8. ' new' → logprob: -8.759799003601074
    9. 'new' → logprob: -8.884799003601074
    10. '       ' → logprob: -8.884799003601074

Token 188: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.003619908355176449
    2. ' new' → logprob: -6.12861967086792
    3. '           ' → logprob: -6.62861967086792
    4. 'current' → logprob: -10.253620147705078
    5. 'curr' → logprob: -10.253620147705078
    6. 'cur' → logprob: -11.378620147705078
    7. '   ' → logprob: -11.878620147705078
    8. 'newline' → logprob: -12.128620147705078
    9. 'val' → logprob: -12.503620147705078
    10. '               ' → logprob: -13.128620147705078

Token 189: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -3.690834273584187e-05
    2. 'val' → logprob: -10.25003719329834
    3. '_value' → logprob: -14.75003719329834
    4. '_' → logprob: -14.87503719329834
    5. ' =' → logprob: -15.62503719329834
    6. '=' → logprob: -15.87503719329834
    7. 'Val' → logprob: -16.000036239624023
    8. '_VAL' → logprob: -17.500036239624023
    9. '_pattern' → logprob: -17.500036239624023
    10. 'pattern' → logprob: -17.750036239624023

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759472250938416
    2. '=' → logprob: -0.8259472250938416
    3. ' ' → logprob: -12.450946807861328
    4. '=int' → logprob: -12.825946807861328
    5. '   ' → logprob: -14.450946807861328
    6. '    ' → logprob: -15.200946807861328
    7. 'int' → logprob: -16.200946807861328
    8. '  ' → logprob: -16.450946807861328
    9. ' ' → logprob: -16.700946807861328
    10. '        ' → logprob: -17.075946807861328

Token 191: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014164102263748646
    2. ' int' → logprob: -4.264163970947266
    3. '           ' → logprob: -15.139163970947266
    4. '(int' → logprob: -15.889163970947266
    5. '	int' → logprob: -16.639163970947266
    6. '[int' → logprob: -17.014163970947266
    7. '=int' → logprob: -17.139163970947266
    8. '   ' → logprob: -17.264163970947266
    9. '<int' → logprob: -17.889163970947266
    10. ' ' → logprob: -18.014163970947266

Token 192: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.657694418914616e-05
    2. '(' → logprob: -10.000056266784668
    3. ' (' → logprob: -12.125056266784668
    4. '(('' → logprob: -12.375056266784668
    5. '''.' → logprob: -14.625056266784668
    6. '(
' → logprob: -14.750056266784668
    7. ' ' → logprob: -15.625056266784668
    8. '("' → logprob: -16.250057220458984
    9. '   ' → logprob: -16.750057220458984
    10. '(',' → logprob: -17.250057220458984

Token 193: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0005207431968301535
    2. '('' → logprob: -7.875520706176758
    3. ' ''.' → logprob: -9.250520706176758
    4. '''' → logprob: -10.125520706176758
    5. ''' → logprob: -13.500520706176758
    6. ''.' → logprob: -13.875520706176758
    7. ''',' → logprob: -14.875520706176758
    8. '   ' → logprob: -15.250520706176758
    9. '('').' → logprob: -15.375520706176758
    10. '  ' → logprob: -15.500520706176758

Token 194: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.47729218006134033
    2. '''.' → logprob: -0.9772921800613403
    3. '('' → logprob: -5.977292060852051
    4. ''' → logprob: -8.10229206085205
    5. ''.' → logprob: -8.35229206085205
    6. '''' → logprob: -9.60229206085205
    7. '.join' → logprob: -10.35229206085205
    8. ' ''.' → logprob: -11.60229206085205
    9. '(join' → logprob: -11.72729206085205
    10. '('').' → logprob: -12.22729206085205

Token 195: '(str' (ID: 7946)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00043341092532500625
    2. 'map' → logprob: -7.750433444976807
    3. '(str' → logprob: -13.125432968139648
    4. ' map' → logprob: -15.125432968139648
    5. '(list' → logprob: -15.875432968139648
    6. 'str' → logprob: -16.12543296813965
    7. ',map' → logprob: -16.75043296813965
    8. '	map' → logprob: -17.12543296813965
    9. ' (' → logprob: -18.25043296813965
    10. '([' → logprob: -18.37543296813965

Token 196: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.1064586639404297
    2. '(' → logprob: -1.6064586639404297
    3. '(x' → logprob: -1.6064586639404297
    4. '(p' → logprob: -2.3564586639404297
    5. '(map' → logprob: -2.3564586639404297
    6. '(i' → logprob: -3.4814586639404297
    7. '(cap' → logprob: -3.9814586639404297
    8. '(v' → logprob: -4.73145866394043
    9. '(vehicle' → logprob: -5.60645866394043
    10. '([(' → logprob: -5.85645866394043

Token 197: 'vehicles' (ID: 124920)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.9738619327545166
    2. '(' → logprob: -1.0988619327545166
    3. 'p' → logprob: -2.3488619327545166
    4. 'vehicles' → logprob: -2.3488619327545166
    5. '((' → logprob: -2.8488619327545166
    6. '([(' → logprob: -4.4738616943359375
    7. '[(' → logprob: -4.5988616943359375
    8. '(v' → logprob: -4.8488616943359375
    9. '(vehicle' → logprob: -5.5988616943359375
    10. '(x' → logprob: -6.5988616943359375

Token 198: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -8.061054359131958e-06
    2. '[((' → logprob: -12.500007629394531
    3. '[' → logprob: -13.000007629394531
    4. '((' → logprob: -13.500007629394531
    5. '   ' → logprob: -15.625007629394531
    6. '[
' → logprob: -15.625007629394531
    7. '(' → logprob: -16.37500762939453
    8. '[i' → logprob: -16.62500762939453
    9. ' [(' → logprob: -17.37500762939453
    10. '([(' → logprob: -17.50000762939453

Token 199: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001976811094209552
    2. ' (' → logprob: -6.75197696685791
    3. 'i' → logprob: -7.25197696685791
    4. '(' → logprob: -10.12697696685791
    5. '   ' → logprob: -10.50197696685791
    6. '((' → logprob: -12.00197696685791
    7. ' i' → logprob: -12.37697696685791
    8. '           ' → logprob: -12.37697696685791
    9. '     ' → logprob: -13.00197696685791
    10. '[i' → logprob: -13.12697696685791

Token 200: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31671154499053955
    2. ' +' → logprob: -1.3167115449905396
    3. '[(' → logprob: -6.56671142578125
    4. ' (' → logprob: -6.94171142578125
    5. '+(' → logprob: -7.94171142578125
    6. '(' → logprob: -8.31671142578125
    7. ' ' → logprob: -9.06671142578125
    8. '   ' → logprob: -9.31671142578125
    9. '[' → logprob: -9.56671142578125
    10. '((' → logprob: -10.06671142578125

Token 201: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.6544271111488342
    2. '(' → logprob: -1.0294270515441895
    3. ' shift' → logprob: -2.6544270515441895
    4. '((' → logprob: -3.1544270515441895
    5. ' (' → logprob: -4.9044270515441895
    6. ' ((' → logprob: -6.5294270515441895
    7. '   ' → logprob: -8.154427528381348
    8. '(i' → logprob: -8.404427528381348
    9. ' ' → logprob: -9.029427528381348
    10. '(s' → logprob: -9.279427528381348

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31149622797966003
    2. '])' → logprob: -1.4364962577819824
    3. ')%' → logprob: -4.061496257781982
    4. '[i' → logprob: -5.686496257781982
    5. '%' → logprob: -5.811496257781982
    6. ']' → logprob: -5.936496257781982
    7. '(i' → logprob: -6.811496257781982
    8. ']%' → logprob: -7.311496257781982
    9. '   ' → logprob: -7.811496257781982
    10. '[(' → logprob: -8.186495780944824

Token 203: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.19169794023036957
    2. ')' → logprob: -1.9416979551315308
    3. ')%' → logprob: -4.19169807434082
    4. ' %' → logprob: -5.06669807434082
    5. '[i' → logprob: -5.94169807434082
    6. '%i' → logprob: -6.31669807434082
    7. ']' → logprob: -6.44169807434082
    8. '])' → logprob: -6.56669807434082
    9. ']%' → logprob: -7.56669807434082
    10. '   ' → logprob: -8.19169807434082

Token 204: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.750066757202148
    3. '```' → logprob: -12.250066757202148
    4. ')' → logprob: -13.875066757202148
    5. '   ' → logprob: -14.437566757202148
    6. '``' → logprob: -14.937566757202148
    7. 'i' → logprob: -15.312566757202148
    8. '`' → logprob: -16.31256675720215
    9. '...' → logprob: -16.31256675720215
    10. 's' → logprob: -16.56256675720215

Token 205: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.625018119812012
    3. '```' → logprob: -12.750018119812012
    4. '   ' → logprob: -12.875018119812012
    5. '``' → logprob: -14.437518119812012
    6. 'i' → logprob: -14.812518119812012
    7. ')' → logprob: -15.250018119812012
    8. '  ' → logprob: -15.375018119812012
    9. '
' → logprob: -16.000017166137695
    10. '...' → logprob: -16.000017166137695

Token 206: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01664712466299534
    2. ']' → logprob: -5.0166473388671875
    3. ']))' → logprob: -5.2666473388671875
    4. ')' → logprob: -6.0166473388671875
    5. '])))' → logprob: -6.2666473388671875
    6. 'for' → logprob: -9.266647338867188
    7. '))' → logprob: -9.516647338867188
    8. ' for' → logprob: -9.891647338867188
    9. ')]' → logprob: -10.016647338867188
    10. '])))
' → logprob: -10.266647338867188

Token 207: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26328951120376587
    2. ' for' → logprob: -1.638289451599121
    3. ')' → logprob: -4.013289451599121
    4. ')))' → logprob: -4.388289451599121
    5. '[i' → logprob: -5.388289451599121
    6. '))' → logprob: -6.388289451599121
    7. '   ' → logprob: -8.513289451599121
    8. '	for' → logprob: -9.763289451599121
    9. ' ' → logprob: -9.888289451599121
    10. '       ' → logprob: -10.888289451599121

Token 208: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061972059309482574
    2. ' i' → logprob: -2.811972141265869
    3. 'range' → logprob: -13.686971664428711
    4. ' range' → logprob: -14.061971664428711
    5. ' ' → logprob: -14.186971664428711
    6. '   ' → logprob: -14.311971664428711
    7. ' in' → logprob: -14.811971664428711
    8. '  ' → logprob: -14.936971664428711
    9. ')' → logprob: -15.686971664428711
    10. '	i' → logprob: -15.811971664428711

Token 209: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2332533597946167
    2. 'in' → logprob: -1.9832533597946167
    3. ' range' → logprob: -3.2332534790039062
    4. 'range' → logprob: -3.6082534790039062
    5. 'i' → logprob: -5.733253479003906
    6. ' i' → logprob: -7.358253479003906
    7. ' ' → logprob: -11.983253479003906
    8. '(range' → logprob: -12.358253479003906
    9. ')' → logprob: -12.483253479003906
    10. '(i' → logprob: -12.983253479003906

Token 210: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031860284507274628
    2. ' range' → logprob: -5.753186225891113
    3. 'i' → logprob: -12.003186225891113
    4. '   ' → logprob: -13.753186225891113
    5. '(range' → logprob: -14.878186225891113
    6. ' ' → logprob: -15.253186225891113
    7. '8' → logprob: -15.628186225891113
    8. '  ' → logprob: -16.253185272216797
    9. '
' → logprob: -16.503185272216797
    10. '	range' → logprob: -17.003185272216797

Token 211: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062265340238809586
    2. '8' → logprob: -2.812265396118164
    3. 'range' → logprob: -8.562265396118164
    4. ' range' → logprob: -10.312265396118164
    5. ' ' → logprob: -10.562265396118164
    6. '   ' → logprob: -10.812265396118164
    7. '(range' → logprob: -11.312265396118164
    8. ' (' → logprob: -12.187265396118164
    9. '(i' → logprob: -12.312265396118164
    10. '       ' → logprob: -13.687265396118164

Token 212: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -8.113290095934644e-05
    2. ' ' → logprob: -10.000081062316895
    3. 'range' → logprob: -10.625081062316895
    4. '   ' → logprob: -11.875081062316895
    5. ' range' → logprob: -13.625081062316895
    6. '
' → logprob: -13.875081062316895
    7. '           ' → logprob: -14.750081062316895
    8. '       ' → logprob: -14.875081062316895
    9. '```' → logprob: -15.125081062316895
    10. '  ' → logprob: -15.500081062316895

Token 213: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25295665860176086
    2. ')))' → logprob: -1.5029566287994385
    3. '))
' → logprob: -7.252956867218018
    4. ')))
' → logprob: -8.12795639038086
    5. ')' → logprob: -11.37795639038086
    6. '))))' → logprob: -11.75295639038086
    7. ' ))' → logprob: -13.75295639038086
    8. ')));' → logprob: -14.37795639038086
    9. '           ' → logprob: -14.50295639038086
    10. '))
' → logprob: -15.12795639038086

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21096986532211304
    2. ')' → logprob: -2.335969924926758
    3. '       ' → logprob: -2.960969924926758
    4. ' if' → logprob: -4.085969924926758
    5. '   ' → logprob: -4.710969924926758
    6. 'if' → logprob: -4.835969924926758
    7. '<|end|>' → logprob: -5.210969924926758
    8. '[' → logprob: -8.210969924926758
    9. '               ' → logprob: -8.335969924926758
    10. '
' → logprob: -8.335969924926758

Token 215: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3954738676548004
    2. '           ' → logprob: -1.145473837852478
    3. ' if' → logprob: -4.770473957061768
    4. '       ' → logprob: -9.89547348022461
    5. '   ' → logprob: -10.52047348022461
    6. ' ' → logprob: -12.64547348022461
    7. '[' → logprob: -13.39547348022461
    8. '```' → logprob: -13.52047348022461
    9. '	if' → logprob: -13.64547348022461
    10. 'If' → logprob: -13.77047348022461

Token 216: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3868761360645294
    2. 'new' → logprob: -1.136876106262207
    3. '           ' → logprob: -13.886876106262207
    4. '	new' → logprob: -14.011876106262207
    5. '(new' → logprob: -14.261876106262207
    6. '新' → logprob: -14.636876106262207
    7. '   ' → logprob: -14.761876106262207
    8. '
' → logprob: -15.136876106262207
    9. ' ' → logprob: -15.261876106262207
    10. ')new' → logprob: -15.386876106262207

Token 217: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.25000286102295
    3. 'val' → logprob: -14.25000286102295
    4. '_va' → logprob: -15.62500286102295
    5. ' _' → logprob: -16.250001907348633
    6. '_v' → logprob: -17.500001907348633
    7. '__' → logprob: -17.625001907348633
    8. '
' → logprob: -17.875001907348633
    9. '_value' → logprob: -18.125001907348633
    10. '_un' → logprob: -18.250001907348633

Token 218: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5320286750793457
    2. ' <' → logprob: -0.9070286750793457
    3. ' >' → logprob: -5.157028675079346
    4. '>' → logprob: -5.782028675079346
    5. ' ' → logprob: -11.657028198242188
    6. '<int' → logprob: -12.782028198242188
    7. '<
' → logprob: -13.032028198242188
    8. ')' → logprob: -13.407028198242188
    9. ' <
' → logprob: -13.782028198242188
    10. '
' → logprob: -14.157028198242188

Token 219: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -7.493430894101039e-05
    2. ' old' → logprob: -9.500075340270996
    3. '	old' → logprob: -17.50007438659668
    4. '(old' → logprob: -19.37507438659668
    5. '
' → logprob: -20.75007438659668
    6. '=' → logprob: -20.87507438659668
    7. '
' → logprob: -21.00007438659668
    8. '           ' → logprob: -21.25007438659668
    9. '_old' → logprob: -21.50007438659668
    10. 'int' → logprob: -21.50007438659668

Token 220: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.837811088189483e-05
    2. 'val' → logprob: -9.625068664550781
    3. '_' → logprob: -13.500068664550781
    4. '_va' → logprob: -14.625068664550781
    5. ' val' → logprob: -16.50006866455078
    6. ' _' → logprob: -16.87506866455078
    7. '	val' → logprob: -16.87506866455078
    8. '__' → logprob: -16.87506866455078
    9. 'Val' → logprob: -17.00006866455078
    10. '_VAL' → logprob: -17.12506866455078

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.478492796421051
    2. ':
' → logprob: -0.978492796421051
    3. '               ' → logprob: -5.978492736816406
    4. '           ' → logprob: -7.103492736816406
    5. '):
' → logprob: -7.103492736816406
    6. '):' → logprob: -9.478492736816406
    7. ')' → logprob: -9.853492736816406
    8. ' :
' → logprob: -10.228492736816406
    9. '       ' → logprob: -11.228492736816406
    10. ' :' → logprob: -11.603492736816406

Token 222: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2322172373533249
    2. ' best' → logprob: -1.6072171926498413
    3. '           ' → logprob: -5.357217311859131
    4. 'best' → logprob: -6.357217311859131
    5. '	best' → logprob: -8.982216835021973
    6. '            ' → logprob: -10.482216835021973
    7. '(best' → logprob: -10.607216835021973
    8. '                   ' → logprob: -10.732216835021973
    9. ' continue' → logprob: -10.857216835021973
    10. '       ' → logprob: -11.107216835021973

Token 223: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.06210246682167053
    2. 'best' (adapté à ' best') → logprob: -2.8121025562286377
    3. '               ' → logprob: -9.312102317810059
    4. '           ' → logprob: -10.437102317810059
    5. '	best' → logprob: -11.312102317810059
    6. 'Best' → logprob: -14.312102317810059
    7. '(best' → logprob: -14.437102317810059
    8. '_best' → logprob: -14.687102317810059
    9. '   ' → logprob: -14.937102317810059
    10. '```' → logprob: -15.312102317810059

Token 224: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -4.320199877838604e-07
    2. 'pattern' → logprob: -14.75
    3. '_' → logprob: -17.125
    4. '_p' → logprob: -17.375
    5. '_pat' → logprob: -19.125
    6. '_patterns' → logprob: -19.25
    7. ' _' → logprob: -20.125
    8. ' pattern' → logprob: -20.625
    9. '\' → logprob: -20.75
    10. 'Pattern' → logprob: -21.125

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693147599697113
    2. ' =' → logprob: -0.693147599697113
    3. '＝' → logprob: -16.318147659301758
    4. '<|end|>' → logprob: -16.443147659301758
    5. ')' → logprob: -16.818147659301758
    6. ' =
' → logprob: -17.193147659301758
    7. ' =)' → logprob: -17.318147659301758
    8. '=

' → logprob: -17.568147659301758
    9. ' =[' → logprob: -17.568147659301758
    10. '=
' → logprob: -17.943147659301758

Token 226: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0002610974188428372
    2. ' [(' → logprob: -8.375261306762695
    3. '[' → logprob: -10.500261306762695
    4. '([(' → logprob: -13.000261306762695
    5. '[((' → logprob: -14.750261306762695
    6. '[str' → logprob: -16.125261306762695
    7. '   ' → logprob: -17.375261306762695
    8. ' [' → logprob: -17.375261306762695
    9. '[p' → logprob: -17.750261306762695
    10. ' ' → logprob: -17.875261306762695

Token 227: 'vehicles' (ID: 124920)
  Prédit: 'vehicles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vehicles' → logprob: -8.180258191714529e-06
    2. ' vehicles' → logprob: -11.750008583068848
    3. '           ' → logprob: -17.12500762939453
    4. '   ' → logprob: -17.62500762939453
    5. 've' → logprob: -18.37500762939453
    6. '               ' → logprob: -18.62500762939453
    7. 'vehicle' → logprob: -18.75000762939453
    8. 'veh' → logprob: -18.87500762939453
    9. '                   ' → logprob: -19.12500762939453
    10. '(' → logprob: -19.50000762939453

Token 228: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.9361264946837764e-07
    2. '((' → logprob: -15.625
    3. '[' → logprob: -18.25
    4. '[
' → logprob: -18.5
    5. '[((' → logprob: -19.75
    6. '   ' → logprob: -20.25
    7. '(' → logprob: -20.375
    8. '       ' → logprob: -20.375
    9. ' [(' → logprob: -21.5
    10. ')' → logprob: -21.875

Token 229: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000194361709873192
    2. '(i' → logprob: -8.750194549560547
    3. ' i' → logprob: -10.375194549560547
    4. '   ' → logprob: -12.875194549560547
    5. ' (' → logprob: -13.750194549560547
    6. ' ' → logprob: -15.250194549560547
    7. '     ' → logprob: -15.750194549560547
    8. '           ' → logprob: -15.750194549560547
    9. '  ' → logprob: -16.125194549560547
    10. '    ' → logprob: -16.500194549560547

Token 230: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5231371521949768
    2. '+' → logprob: -0.8981371521949768
    3. '+i' → logprob: -11.398137092590332
    4. ' ' → logprob: -13.648137092590332
    5. '   ' → logprob: -15.148137092590332
    6. ' ' → logprob: -15.523137092590332
    7. '+
' → logprob: -15.773137092590332
    8. ' +
' → logprob: -16.08563804626465
    9. '  ' → logprob: -16.14813804626465
    10. '
' → logprob: -16.71063804626465

Token 231: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.11713520437479019
    2. ' shift' → logprob: -2.3671352863311768
    3. '8' → logprob: -4.117135047912598
    4. ' ' → logprob: -8.617135047912598
    5. '   ' → logprob: -9.242135047912598
    6. '
' → logprob: -10.367135047912598
    7. 'sh' → logprob: -10.367135047912598
    8. '    ' → logprob: -10.492135047912598
    9. '        ' → logprob: -10.867135047912598
    10. '  ' → logprob: -11.242135047912598

Token 232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00764661468565464
    2. ')%' → logprob: -4.882646560668945
    3. '+' → logprob: -10.757646560668945
    4. '%' → logprob: -11.882646560668945
    5. ' )' → logprob: -12.882646560668945
    6. '   ' → logprob: -13.257646560668945
    7. 'i' → logprob: -13.382646560668945
    8. '0' → logprob: -13.882646560668945
    9. ')
' → logprob: -14.007646560668945
    10. '(i' → logprob: -14.507646560668945

Token 233: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.016790971159934998
    2. ')' → logprob: -4.766790866851807
    3. ' %' → logprob: -5.516790866851807
    4. ')%' → logprob: -5.516790866851807
    5. '%i' → logprob: -10.641791343688965
    6. '%)' → logprob: -10.766791343688965
    7. ']%' → logprob: -11.516791343688965
    8. '   ' → logprob: -11.641791343688965
    9. '%s' → logprob: -11.891791343688965
    10. ']' → logprob: -12.266791343688965

Token 234: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -8.137130498653278e-05
    2. ' ' → logprob: -9.500081062316895
    3. 'i' → logprob: -13.125081062316895
    4. '   ' → logprob: -13.125081062316895
    5. '```' → logprob: -14.250081062316895
    6. 'shift' → logprob: -14.500081062316895
    7. 'range' → logprob: -15.375081062316895
    8. '0' → logprob: -15.750081062316895
    9. ' i' → logprob: -15.875081062316895
    10. '  ' → logprob: -16.12508201599121

Token 235: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -7.159660890465602e-05
    2. ' ' → logprob: -10.37507152557373
    3. 'shift' → logprob: -11.25007152557373
    4. 'i' → logprob: -11.50007152557373
    5. '   ' → logprob: -12.50007152557373
    6. '```' → logprob: -12.62507152557373
    7. '4' → logprob: -13.12507152557373
    8. '
' → logprob: -13.25007152557373
    9. 'range' → logprob: -14.37507152557373
    10. '  ' → logprob: -14.43757152557373

Token 236: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.014230260625481606
    2. ')' → logprob: -4.264230251312256
    3. ']' → logprob: -11.014230728149414
    4. ')])' → logprob: -11.389230728149414
    5. ' ])' → logprob: -11.514230728149414
    6. ')]' → logprob: -11.514230728149414
    7. '))' → logprob: -12.639230728149414
    8. '])
' → logprob: -12.764230728149414
    9. '])]' → logprob: -12.764230728149414
    10. ' )' → logprob: -12.889230728149414

Token 237: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5471776723861694
    2. ' for' → logprob: -1.0471776723861694
    3. 'for' → logprob: -2.672177791595459
    4. ']' → logprob: -6.797177791595459
    5. '[i' → logprob: -9.2971773147583
    6. '           ' → logprob: -10.0471773147583
    7. '])' → logprob: -10.2971773147583
    8. '         ' → logprob: -10.9221773147583
    9. ' )' → logprob: -10.9221773147583
    10. '               ' → logprob: -11.0471773147583

Token 238: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07890113443136215
    2. 'i' → logprob: -2.5789010524749756
    3. ' in' → logprob: -11.703901290893555
    4. '(i' → logprob: -13.453901290893555
    5. '	i' → logprob: -15.203901290893555
    6. ' ' → logprob: -15.453901290893555
    7. 'in' → logprob: -15.453901290893555
    8. 'range' → logprob: -15.578901290893555
    9. '_i' → logprob: -15.578901290893555
    10. ' ' → logprob: -15.828901290893555

Token 239: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22497332096099854
    2. ' in' → logprob: -1.7249733209609985
    3. 'range' → logprob: -3.849973201751709
    4. ' range' → logprob: -6.224973201751709
    5. 'i' → logprob: -10.849973678588867
    6. ' ' → logprob: -12.974973678588867
    7. ' i' → logprob: -13.349973678588867
    8. '   ' → logprob: -13.849973678588867
    9. '```' → logprob: -15.349973678588867
    10. '  ' → logprob: -15.474973678588867

Token 240: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023246407508850098
    2. ' range' → logprob: -3.7732462882995605
    3. '(range' → logprob: -14.273246765136719
    4. '   ' → logprob: -16.14824676513672
    5. '	range' → logprob: -16.52324676513672
    6. ' ' → logprob: -16.64824676513672
    7. '
' → logprob: -17.39824676513672
    8. 'i' → logprob: -18.02324676513672
    9. '```' → logprob: -18.27324676513672
    10. '       ' → logprob: -18.27324676513672

Token 241: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5523755550384521
    2. 'range' → logprob: -1.0523755550384521
    3. '8' → logprob: -2.677375555038452
    4. ' range' → logprob: -5.052375793457031
    5. '(range' → logprob: -8.802375793457031
    6. '
' → logprob: -11.677375793457031
    7. '   ' → logprob: -12.177375793457031
    8. ' ' → logprob: -12.677375793457031
    9. ' (' → logprob: -13.177375793457031
    10. '       ' → logprob: -13.802375793457031

Token 242: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.004111523274332285
    2. 'range' → logprob: -5.504111289978027
    3. ' range' → logprob: -11.254111289978027
    4. ' ' → logprob: -11.504111289978027
    5. '   ' → logprob: -12.254111289978027
    6. '
' → logprob: -13.379111289978027
    7. 'i' → logprob: -13.504111289978027
    8. '           ' → logprob: -14.879111289978027
    9. '       ' → logprob: -15.004111289978027
    10. 'eight' → logprob: -15.691611289978027

Token 243: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005346827092580497
    2. ')]' → logprob: -7.625534534454346
    3. ']
' → logprob: -10.250535011291504
    4. ' ]' → logprob: -12.375535011291504
    5. ')' → logprob: -13.125535011291504
    6. '<|end|>' → logprob: -13.625535011291504
    7. '()]' → logprob: -13.750535011291504
    8. ']]' → logprob: -14.625535011291504
    9. '       ' → logprob: -14.750535011291504
    10. ']}' → logprob: -14.750535011291504

Token 244: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018562979996204376
    2. '   ' → logprob: -4.0185627937316895
    3. ' print' → logprob: -7.8935627937316895
    4. 'for' → logprob: -10.643563270568848
    5. '```' → logprob: -11.643563270568848
    6. '    
' → logprob: -12.893563270568848
    7. '<|end|>' → logprob: -13.518563270568848
    8. ' for' → logprob: -14.143563270568848
    9. 'if' → logprob: -14.393563270568848
    10. '
' → logprob: -14.518563270568848

Token 245: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.010717050172388554
    2. '   ' → logprob: -4.635716915130615
    3. ' print' → logprob: -7.010716915130615
    4. '
' → logprob: -10.510717391967773
    5. 'for' → logprob: -11.010717391967773
    6. '```' → logprob: -12.010717391967773
    7. '    
' → logprob: -12.510717391967773
    8. 'if' → logprob: -12.760717391967773
    9. ' for' → logprob: -14.260717391967773
    10. 'import' → logprob: -15.385717391967773

Token 246: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.7382636666297913
    2. '('' → logprob: -1.2382636070251465
    3. '(best' → logprob: -1.4882636070251465
    4. '(' → logprob: -5.3632636070251465
    5. '("' → logprob: -6.6132636070251465
    6. '(f' → logprob: -9.113264083862305
    7. '(tuple' → logprob: -9.488264083862305
    8. '((' → logprob: -10.113264083862305
    9. '(*(' → logprob: -10.363264083862305
    10. '()' → logprob: -10.863264083862305

Token 247: 'best' (ID: 17844)
  Prédit: 'best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00015598179015796632
    2. ' best' → logprob: -9.37515640258789
    3. 'p' → logprob: -9.75015640258789
    4. '(best' → logprob: -11.75015640258789
    5. '[p' → logprob: -13.25015640258789
    6. '[' → logprob: -13.25015640258789
    7. '   ' → logprob: -14.75015640258789
    8. '	best' → logprob: -15.25015640258789
    9. 'b' → logprob: -15.50015640258789
    10. ' p' → logprob: -15.87515640258789

Token 248: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -4.56102097814437e-05
    2. 'pattern' → logprob: -10.000045776367188
    3. '_p' → logprob: -15.875045776367188
    4. '_pat' → logprob: -17.250045776367188
    5. '_patterns' → logprob: -18.375045776367188
    6. '_' → logprob: -18.625045776367188
    7. ' pattern' → logprob: -19.000045776367188
    8. 'attern' → logprob: -19.875045776367188
    9. '_PATTERN' → logprob: -20.125045776367188
    10. 'Pattern' → logprob: -20.250045776367188

Token 249: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8193366486229934e-05
    2. ' )' → logprob: -11.250018119812012
    3. ')
' → logprob: -12.250018119812012
    4. '))' → logprob: -16.875019073486328
    5. '<|end|>' → logprob: -16.875019073486328
    6. ')}' → logprob: -17.125019073486328
    7. ',)' → logprob: -17.375019073486328
    8. '())' → logprob: -17.375019073486328
    9. ')`' → logprob: -18.125019073486328
    10. ')#' → logprob: -18.125019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 247
Tokens correctement prédits (1ère position, stricte): 116
Tokens correctement prédits (1ère position, avec adaptation): 121
Tokens correctement prédits (top 10): 222
Précision stricte (1ère position): 46.96%
Précision adaptée (1ère position): 48.99%
Précision (top 10): 89.88%
================================================================================
